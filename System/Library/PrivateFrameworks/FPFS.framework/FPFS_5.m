uint64_t sub_24D71B048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  long long v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  long long v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t WitnessTable;
  ValueMetadata *v29;
  uint64_t v30;
  ValueMetadata *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  long long v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  long long v47;
  long long v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  void *v53;
  long long v54;
  long long v55;
  uint64_t v56;

  v49 = a1;
  *(void *)&v54 = &_s9SQLFieldsON_1;
  *((void *)&v54 + 1) = a2;
  v43 = sub_24D71C2A0();
  *(void *)&v55 = v43;
  *((void *)&v55 + 1) = a3;
  v45 = type metadata accessor for SQLCodableAccessorWrapper();
  v42 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  v44 = (uint64_t)&v36 - v6;
  v7 = *(_OWORD *)(v3 + 560);
  v47 = *(_OWORD *)(v3 + 544);
  v48 = v7;
  v41 = v3;
  v54 = v47;
  v55 = v7;
  type metadata accessor for Bouncing.BouncingContext();
  v8 = sub_24DCCA3F8();
  v46 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v10 = (char *)&v36 - v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  v14 = (char *)&v36 - v13;
  LOBYTE(v54) = 66;
  v15 = a2;
  v16 = a2;
  v17 = a3;
  v18 = a3;
  v19 = v50;
  v20 = v49;
  sub_24DA6D460((uint64_t)&v54, AssociatedTypeWitness, v16, AssociatedTypeWitness, v18);
  if (!v19)
  {
    v39 = v10;
    *(void *)&v47 = v14;
    *(void *)&v48 = AssociatedTypeWitness;
    v40 = v8;
    v50 = v12;
    LOBYTE(v54) = 67;
    sub_24DA6D460((uint64_t)&v54, MEMORY[0x263F8D9D0], v15, MEMORY[0x263F8D9D0], v17);
    v21 = v56;
    LOBYTE(v53) = 97;
    sub_24DA6D460((uint64_t)&v53, (uint64_t)&type metadata for Filename, v15, (uint64_t)&type metadata for Filename, v17);
    v38 = v21;
    v23 = v54;
    LOBYTE(v53) = 98;
    sub_24DA6D460((uint64_t)&v53, v40, v15, v40, v17);
    v37 = v23;
    LOBYTE(v52) = -127;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E20);
    sub_24DA6D460((uint64_t)&v52, v24, v15, v24, v17);
    v25 = v53;
    v26 = v44;
    sub_24DA6D8E4((uint64_t)sub_24D71B664, 0, v15, (uint64_t)&_s9SQLFieldsON_1, v17, v43, v44);
    v27 = v45;
    WitnessTable = swift_getWitnessTable();
    v29 = sub_24DB17420(v26, v27, WitnessTable);
    v30 = v46;
    v31 = v29;
    v43 = v32;
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v26, v27);
    v51 = 65;
    sub_24DA6D460((uint64_t)&v51, (uint64_t)&type metadata for JobReason, v15, (uint64_t)&type metadata for JobReason, v17);
    v33 = (uint64_t)v31;
    v34 = v47;
    v35 = (uint64_t)v39;
    sub_24DB9DFBC(v47, v38, v37, *((uint64_t *)&v37 + 1), (uint64_t)v39, v25, v33, v43, v52);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v35, v40);
    (*(void (**)(uint64_t, void))(v50 + 8))(v34, v48);
    v17 = sub_24DB1BC38(v20, v15, v17);
    swift_retain();
    swift_release();
  }
  return v17;
}

uint64_t sub_24D71B65C(uint64_t a1, uint64_t a2)
{
  return a2;
}

unsigned char *sub_24D71B664@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result | 0x20;
  return result;
}

uint64_t *sub_24D71B674(unsigned __int8 *a1, void *a2)
{
  return sub_24D71A958(*a1, a2);
}

void sub_24D71B69C(unsigned __int8 *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
}

uint64_t sub_24D71B6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_24D71B048(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_24D71B6E4(unsigned __int8 a1, id a2)
{
  if (a1 != 99) {
    return sub_24DB17074(a1, (uint64_t)a2);
  }
  v3 = (void *)sub_24DCCB088();
  id v4 = objc_msgSend(a2, sel_bindObjectParameter_, v3);

  uint64_t v5 = sub_24DCC97E8();
  return v5;
}

uint64_t sub_24D71B77C@<X0>(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (a2 == 99)
  {
    id v7 = objc_msgSend(a1, sel_unsignedLongLongAtIndex_, a3);
    a4[3] = &type metadata for CapturedContent;
    uint64_t result = swift_allocObject();
    *a4 = result;
    *(void *)(result + 16) = v7;
    *(_OWORD *)(result + 24) = xmmword_24DCCED00;
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(unsigned char *)(result + 56) = 1;
    *(void *)(result + 64) = 0;
  }
  else
  {
    type metadata accessor for Job();
    return sub_24DB172E0(a1, a2, a3, (uint64_t)a4);
  }
  return result;
}

uint64_t sub_24D71B868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = sub_24D71C2A0();
  *(void *)&long long v18 = &_s9SQLFieldsON_1;
  *((void *)&v18 + 1) = a2;
  *(void *)&long long v19 = v7;
  *((void *)&v19 + 1) = a3;
  uint64_t v8 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v11 = (char *)&v16 - v10;
  LOBYTE(v24) = 99;
  sub_24DA6D460((uint64_t)&v24, (uint64_t)&type metadata for CapturedContent, a2, (uint64_t)&type metadata for CapturedContent, a3);
  if (!v3)
  {
    v22[0] = v18;
    v22[1] = v19;
    v22[2] = v20;
    uint64_t v23 = v21;
    sub_24DA6D8E4((uint64_t)sub_24D71C4C4, 0, a2, (uint64_t)&_s9SQLFieldsON_1, a3, v7, (uint64_t)v11);
    uint64_t WitnessTable = swift_getWitnessTable();
    v13 = sub_24DB17420((uint64_t)v11, v8, WitnessTable);
    uint64_t v16 = v14;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    char v17 = 65;
    sub_24DA6D460((uint64_t)&v17, (uint64_t)&type metadata for JobReason, a2, (uint64_t)&type metadata for JobReason, a3);
    sub_24DBCB860((uint64_t)v22, (uint64_t)v13, v16, v24);
    a1 = sub_24DB1BC38(a1, a2, a3);
    swift_retain();
    swift_release();
  }
  return a1;
}

uint64_t sub_24D71BAF0(unsigned __int8 *a1, void *a2)
{
  return sub_24D71B6E4(*a1, a2);
}

uint64_t sub_24D71BB18@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_24D71B77C(a2, *a1, a3, a4);
}

uint64_t sub_24D71BB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_24D71B868(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_24D71BB60(unsigned __int8 a1, uint64_t a2)
{
  int v3 = a1 >> 5;
  if (v3 == 3)
  {
    if (a1 == 96)
    {
LABEL_6:
      swift_getAssociatedTypeWitness();
      uint64_t v4 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
      uint64_t v6 = swift_checkMetadataState();
      return v5(a2, v6, v4);
    }
  }
  else if (v3 == 2 && a1 == 66)
  {
    goto LABEL_6;
  }
  return sub_24DB17074(a1, a2);
}

uint64_t sub_24D71BC8C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  int v9 = a1 >> 5;
  if (v9 == 3)
  {
    if (a1 != 96)
    {
LABEL_4:
      type metadata accessor for Job();
      return sub_24DB172E0(a2, a1, a3, (uint64_t)a4);
    }
  }
  else if (v9 != 2 || a1 != 66)
  {
    goto LABEL_4;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v12 + 16);
  a4[3] = AssociatedTypeWitness;
  __swift_allocate_boxed_opaque_existential_0(a4);
  uint64_t result = v13(a2, a3, AssociatedTypeWitness, v12);
  if (v4) {
    return __swift_deallocate_boxed_opaque_existential_0((uint64_t)a4);
  }
  return result;
}

uint64_t sub_24D71BDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v34[0] = (uint64_t)&_s9SQLFieldsON_1;
  v34[1] = a2;
  unint64_t v29 = sub_24D71C2A0();
  v34[2] = v29;
  v34[3] = a3;
  uint64_t v30 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  int v9 = (char *)v27 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v15 = (char *)v27 - v14;
  LOBYTE(v34[0]) = 66;
  uint64_t v32 = a1;
  uint64_t v16 = (uint64_t)v33;
  sub_24DA6D460((uint64_t)v34, AssociatedTypeWitness, a2, AssociatedTypeWitness, a3);
  if (!v16)
  {
    v33 = v15;
    v27[1] = v4;
    LOBYTE(v34[0]) = 96;
    sub_24DA6D460((uint64_t)v34, AssociatedTypeWitness, a2, AssociatedTypeWitness, a3);
    char v17 = v9;
    v27[0] = a2;
    sub_24DA6D8E4((uint64_t)sub_24D71C4C4, 0, a2, (uint64_t)&_s9SQLFieldsON_1, a3, v29, (uint64_t)v9);
    uint64_t v18 = v30;
    uint64_t WitnessTable = swift_getWitnessTable();
    long long v20 = sub_24DB17420((uint64_t)v9, v18, WitnessTable);
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v18);
    char v35 = 65;
    sub_24DA6D460((uint64_t)&v35, (uint64_t)&type metadata for JobReason, v27[0], (uint64_t)&type metadata for JobReason, a3);
    uint64_t v24 = (uint64_t)v33;
    sub_24DC0954C((uint64_t)v33, (uint64_t)v13, (uint64_t)v20, v22, v34[0]);
    v25 = v13;
    v26 = *(void (**)(char *, uint64_t))(v31 + 8);
    v26(v25, AssociatedTypeWitness);
    v26((char *)v24, AssociatedTypeWitness);
    uint64_t v4 = sub_24DB1BC38(v32, v27[0], a3);
    swift_retain();
    swift_release();
  }
  return v4;
}

uint64_t sub_24D71C1DC(unsigned __int8 *a1, uint64_t a2)
{
  return sub_24D71BB60(*a1, a2);
}

uint64_t sub_24D71C204@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_24D71BC8C(*a1, a2, a3, a4);
}

uint64_t sub_24D71C220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_24D71BDEC(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_24D71C24C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t _s10CodingKeysOMa()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D71C2A0()
{
  unint64_t result = qword_26B193208;
  if (!qword_26B193208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193208);
  }
  return result;
}

unint64_t sub_24D71C2F4()
{
  unint64_t result = qword_26986C5C8;
  if (!qword_26986C5C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26986C5C8);
  }
  return result;
}

uint64_t sub_24D71C334()
{
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1 >> 60 != 15) {
    sub_24D400DCC(*(void *)(v0 + 24), v1);
  }

  return swift_deallocObject();
}

unsigned char *sub_24D71C37C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D71C448);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24D71C470()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D71C48C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D71C4A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D71C4CC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v33 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_24DCC8A98();
  uint64_t v6 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8408();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v15 = (char *)&v30 - v14;
  uint64_t v16 = (void *)swift_slowAlloc();
  unint64_t v17 = fgetxattr(a1, "com.apple.fileprovider.detached#B", v16, 0x800uLL, 0, 0);
  unint64_t v18 = v17;
  if ((v17 & 0x8000000000000000) != 0)
  {
    if (MEMORY[0x253327160]() != 93
      || (unint64_t v18 = fgetxattr(a1, "com.apple.fileprovider.detached", v16, 0x800uLL, 0, 0), (v18 & 0x8000000000000000) != 0)
      && (unint64_t v18 = fgetxattr(a1, "com.apple.fileprovider.detached#PN", v16, 0x800uLL, 0, 0),
          (v18 & 0x8000000000000000) != 0))
    {
      if (MEMORY[0x253327160]() != 93)
      {
        MEMORY[0x253327160]();
        uint64_t v27 = sub_24DCC9098();
        if ((v27 & 0x100000000) != 0) {
          int v28 = 22;
        }
        else {
          int v28 = v27;
        }
        int v35 = v28;
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24D5EFB20();
        sub_24DCC8808();
        goto LABEL_19;
      }
      unint64_t v18 = 0;
    }
    else
    {
      fsetxattr(a1, "com.apple.fileprovider.detached#B", v16, v18, 0, 0);
      fremovexattr(a1, "com.apple.fileprovider.detached", 0);
      fremovexattr(a1, "com.apple.fileprovider.detached#PN", 0);
      if (v18 >= 0x801) {
        goto LABEL_3;
      }
    }
  }
  else if (v17 >= 0x801)
  {
LABEL_3:
    int v36 = 34;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D5EFB20();
    sub_24DCC8808();
    v15 = v13;
LABEL_19:
    sub_24DCC83E8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    swift_willThrow();
    uint64_t v26 = v34;
    return sub_24D419150(v26);
  }
  uint64_t v19 = v31;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F06F00], v31);
  sub_24DCC8A88();
  if (v18)
  {
    sub_24DCC8518();
    swift_allocObject();
    swift_retain();
    uint64_t v20 = sub_24DCC84B8();
    unint64_t v18 = sub_24D4ED290(v20, v18);
    unint64_t v22 = v21;
    swift_release();
  }
  else
  {
    uint64_t v23 = (void (*)(void *, void))sub_24DCC8A88();
    v23(v16, 0);
    swift_release();
    swift_release();
    unint64_t v22 = 0xC000000000000000;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  uint64_t v24 = v34;
  uint64_t v25 = v32;
  sub_24D4FFDB8(v34, v32);
  sub_24D71CC38(v18, v22, v25, v33);
  uint64_t v26 = v24;
  return sub_24D419150(v26);
}

uint64_t sub_24D71C954()
{
  return 0x4000;
}

uint64_t sub_24D71C95C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986E2C8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D71DB08();
  sub_24DCCB0D8();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  char v18 = 0;
  sub_24D4ED694();
  sub_24DCCACF8();
  if (!v5)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    char v18 = 1;
    sub_24D4ED7E4();
    sub_24DCCACF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_24D71CAFC()
{
  if (*v0) {
    return 0x6F42746E65726170;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_24D71CB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D71DB5C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24D71CB64(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24D71CB70(uint64_t a1)
{
  unint64_t v2 = sub_24D71DB08();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D71CBAC(uint64_t a1)
{
  unint64_t v2 = sub_24D71DB08();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D71CBE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24D71DC64(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_24D71CC18(void *a1)
{
  return sub_24D71C95C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_24D71CC38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v58 = a4;
  uint64_t v59 = a3;
  uint64_t v7 = sub_24DCC9078();
  uint64_t v57 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC8A58();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC86D8();
  swift_allocObject();
  uint64_t v14 = sub_24DCC86C8();
  sub_24D71D1E0();
  sub_24DCC86B8();
  if (v4)
  {
    swift_release();
    sub_24D400DCC(a1, a2);
    return sub_24D419150(v59);
  }
  uint64_t v53 = v14;
  uint64_t v50 = v10;
  uint64_t v51 = v7;
  uint64_t v49 = v11;
  id v16 = v61;
  uint64_t v55 = v62;
  v56 = v9;
  uint64_t v17 = v63;
  LOBYTE(v61) = 0;
  unint64_t v52 = v64;
  sub_24DCC8968();
  uint64_t v18 = v58;
  v54 = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v58, v13, v50);
  int v27 = v61;
  int v28 = (int *)type metadata accessor for VFSDetachedRootBookmark();
  *(unsigned char *)(v18 + v28[7]) = v27;
  unint64_t v29 = (void *)(v18 + v28[5]);
  *unint64_t v29 = v16;
  v29[1] = v55;
  swift_bridgeObjectRetain();
  if (v27 != 1)
  {
    swift_release();
    sub_24D400DCC(a1, a2);
    sub_24D419150(v59);
    unint64_t v35 = v52;
    sub_24D3F9C18(v17, v52);
    swift_bridgeObjectRelease();
    uint64_t result = sub_24D400DCC(v17, v35);
    goto LABEL_12;
  }
  uint64_t v30 = v54;
  uint64_t v31 = sub_24DCC88A8();
  if (!v30)
  {
    uint64_t v33 = v31;
    unint64_t v34 = v32;
    swift_bridgeObjectRelease();
    swift_release();
    sub_24D400DCC(v17, v52);
    sub_24D400DCC(a1, a2);
    uint64_t result = sub_24D419150(v59);
    uint64_t v17 = v33;
    unint64_t v35 = v34;
LABEL_12:
    v39 = (uint64_t *)(v18 + v28[6]);
    uint64_t *v39 = v17;
    v39[1] = v35;
    return result;
  }
  id v19 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  sub_24D3F9C18(a1, a2);
  id v20 = v30;
  unint64_t v21 = sub_24DCC9068();
  int v22 = sub_24DCCA128();
  if (os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    int v48 = v22;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 134218242;
    uint64_t v25 = (void *)v24;
    unint64_t v26 = 0;
    os_log_t v47 = v21;
    switch(a2 >> 62)
    {
      case 1uLL:
        LODWORD(v26) = HIDWORD(a1) - a1;
        if (__OFSUB__(HIDWORD(a1), a1))
        {
          __break(1u);
LABEL_21:
          __break(1u);
          JUMPOUT(0x24D71D1D0);
        }
        unint64_t v26 = (int)v26;
LABEL_16:
        id v61 = (id)v26;
        sub_24DCCA428();
        sub_24D400DCC(a1, a2);
        *(_WORD *)(v23 + 12) = 2112;
        swift_getErrorValue();
        id v43 = sub_24DBA2828(v60);
        id v61 = v43;
        sub_24DCCA428();
        v44 = v25;
        void *v25 = v43;

        os_log_t v38 = v47;
        _os_log_impl(&dword_24D3D0000, v47, (os_log_type_t)v48, "VFSDetachedRootBookmark (size: %ld) could not be decoded: %@", (uint8_t *)v23, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v44, -1, -1);
        MEMORY[0x25332B030](v23, -1, -1);
        uint64_t v18 = v58;
        uint64_t v36 = v59;
        uint64_t v37 = v51;
        break;
      case 2uLL:
        uint64_t v41 = *(void *)(a1 + 16);
        uint64_t v40 = *(void *)(a1 + 24);
        BOOL v42 = __OFSUB__(v40, v41);
        unint64_t v26 = v40 - v41;
        if (!v42) {
          goto LABEL_16;
        }
        goto LABEL_21;
      case 3uLL:
        goto LABEL_16;
      default:
        unint64_t v26 = BYTE6(a2);
        goto LABEL_16;
    }
  }
  else
  {
    sub_24D400DCC(a1, a2);

    uint64_t v36 = v59;
    uint64_t v37 = v51;
    os_log_t v38 = v21;
  }
  uint64_t v45 = v57;

  (*(void (**)(char *, uint64_t))(v45 + 8))(v56, v37);
  swift_willThrow();
  swift_release();
  sub_24D400DCC(a1, a2);
  swift_bridgeObjectRelease();
  sub_24D400DCC(v17, v52);
  uint64_t result = sub_24D419150(v36);
  if (!v54)
  {
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v18, v50);
    type metadata accessor for VFSDetachedRootBookmark();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24D71D1E0()
{
  unint64_t result = qword_26986E2C0;
  if (!qword_26986E2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E2C0);
  }
  return result;
}

uint64_t type metadata accessor for VFSDetachedRootBookmark()
{
  uint64_t result = qword_26B1978C0;
  if (!qword_26B1978C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t destroy for VFSDetachedRootBookmark.ExtendedAttributeValue(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);

  return sub_24D400DCC(v2, v3);
}

void *initializeWithCopy for VFSDetachedRootBookmark.ExtendedAttributeValue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_24D3F9C18(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

void *assignWithCopy for VFSDetachedRootBookmark.ExtendedAttributeValue(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  sub_24D3F9C18(v5, v4);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_24D400DCC(v6, v7);
  return a1;
}

void *assignWithTake for VFSDetachedRootBookmark.ExtendedAttributeValue(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_24D400DCC(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for VFSDetachedRootBookmark.ExtendedAttributeValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VFSDetachedRootBookmark.ExtendedAttributeValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSDetachedRootBookmark.ExtendedAttributeValue()
{
  return &type metadata for VFSDetachedRootBookmark.ExtendedAttributeValue;
}

void *sub_24D71D454(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24DCC8A58();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = *(void *)((char *)a2 + v9);
    unint64_t v15 = *(void *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    sub_24D3F9C18(v14, v15);
    uint64_t *v13 = v14;
    v13[1] = v15;
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_24D71D55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24DCC8A58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];

  return sub_24D400DCC(v6, v7);
}

uint64_t sub_24D71D5E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8A58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (uint64_t *)(a1 + v8);
  uint64_t v13 = *(void *)(a2 + v8);
  unint64_t v14 = *(void *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  sub_24D3F9C18(v13, v14);
  *uint64_t v12 = v13;
  v12[1] = v14;
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24D71D69C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8A58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  sub_24D3F9C18(*v12, v14);
  uint64_t v15 = *v11;
  unint64_t v16 = v11[1];
  uint64_t *v11 = v13;
  v11[1] = v14;
  sub_24D400DCC(v15, v16);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24D71D774(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8A58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24D71D804(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8A58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = *(void *)(a1 + v12);
  unint64_t v14 = *(void *)(a1 + v12 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  sub_24D400DCC(v13, v14);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24D71D8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24D71D8C8);
}

uint64_t sub_24D71D8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8A58();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_24D71D98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24D71D9A0);
}

uint64_t sub_24D71D9A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24DCC8A58();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24D71DA60()
{
  uint64_t result = sub_24DCC8A58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24D71DB08()
{
  unint64_t result = qword_26986E2D0;
  if (!qword_26986E2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E2D0);
  }
  return result;
}

uint64_t sub_24D71DB5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F42746E65726170 && a2 == 0xEE006B72616D6B6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24D71DC64(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986E2D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D71DB08();
  sub_24DCCB0B8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    sub_24D4ED88C();
    sub_24DCCAB98();
    uint64_t v7 = v13;
    char v12 = 1;
    sub_24D4EDA58();
    swift_bridgeObjectRetain();
    sub_24DCCAB98();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v9 = v13;
    unint64_t v10 = v14;
    swift_bridgeObjectRetain();
    sub_24D3F9C18(v9, v10);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_24D400DCC(v9, v10);
  }
  return v7;
}

unsigned char *storeEnumTagSinglePayload for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D71DF60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys()
{
  return &type metadata for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys;
}

unint64_t sub_24D71DF9C()
{
  unint64_t result = qword_26986E2E0;
  if (!qword_26986E2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E2E0);
  }
  return result;
}

unint64_t sub_24D71DFF4()
{
  unint64_t result = qword_26986E2E8;
  if (!qword_26986E2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E2E8);
  }
  return result;
}

unint64_t sub_24D71E04C()
{
  unint64_t result = qword_26986E2F0;
  if (!qword_26986E2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E2F0);
  }
  return result;
}

uint64_t sub_24D71E0A0(void *a1)
{
  v11[5] = *(id *)MEMORY[0x263EF8340];
  BOOL v2 = self;
  int v3 = (void *)sub_24DCC9558();
  v11[0] = 0;
  id v4 = objc_msgSend(v2, sel_dataWithJSONObject_options_error_, v3, 0, v11);

  id v5 = v11[0];
  if (v4)
  {
    uint64_t v6 = sub_24DCC8B68();
    unint64_t v8 = v7;

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_24DCCB0C8();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, (uint64_t)v11[3]);
    sub_24D4ED7E4();
    sub_24DCCAE68();
    sub_24D400DCC(v6, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    unint64_t v10 = v5;
    sub_24DCC8828();

    return swift_willThrow();
  }
}

void *sub_24D71E22C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_24D71E380(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24D71E258(void *a1)
{
  return sub_24D71E0A0(a1);
}

unint64_t sub_24D71E274@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24D428D08(MEMORY[0x263F8EE78]);
  *a1 = result;
  return result;
}

uint64_t sub_24D71E2A4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FPCKWharfResource()
{
  uint64_t result = qword_26986E2F8;
  if (!qword_26986E2F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24D71E338()
{
  return swift_initClassMetadata2();
}

ValueMetadata *type metadata accessor for TelemetryReport()
{
  return &type metadata for TelemetryReport;
}

void *sub_24D71E380(void *a1)
{
  v14[5] = *(id *)MEMORY[0x263EF8340];
  int v3 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0A8();
  if (v1) {
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(v14, (uint64_t)v14[3]);
  sub_24D4EDA58();
  sub_24DCCAE48();
  int v3 = (void *)v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  id v4 = self;
  id v5 = (void *)sub_24DCC8B28();
  v14[0] = 0;
  id v6 = objc_msgSend(v4, sel_JSONObjectWithData_options_error_, v5, 0, v14);

  if (!v6)
  {
    id v8 = v14[0];
    sub_24DCC8828();

LABEL_7:
    swift_willThrow();
    sub_24D400DCC(v12, v13);
LABEL_8:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v3;
  }
  id v7 = v14[0];
  sub_24DCCA528();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986E308);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_24DCC97E8();
    id v9 = objc_allocWithZone(MEMORY[0x263F087E8]);
    unint64_t v10 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_initWithDomain_code_userInfo_, v10, 26, 0);

    goto LABEL_7;
  }
  sub_24D400DCC(v12, v13);
  int v3 = (void *)v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

void sub_24D71E5D8(void (*a1)(void))
{
  sub_24D71E6DC();
  uint64_t v2 = (void *)swift_allocError();
  a1();
}

uint64_t sub_24D71E640()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TaskTracker()
{
  return self;
}

uint64_t sub_24D71E69C()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_24D71E6DC()
{
  unint64_t result = qword_269870220;
  if (!qword_269870220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269870220);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LifetimeError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24D71E7CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LifetimeError()
{
  return &type metadata for LifetimeError;
}

unint64_t sub_24D71E808()
{
  unint64_t result = qword_26986E310[0];
  if (!qword_26986E310[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26986E310);
  }
  return result;
}

id sub_24D71E85C()
{
  id result = sub_24D71E87C();
  qword_26B1A2380 = (uint64_t)result;
  return result;
}

id sub_24D71E87C()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81A0], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81C0], *MEMORY[0x263EF81F0]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82A0], 0);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF8180], 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF8280], (const char *)*MEMORY[0x263EF8290]);
  id v1 = objc_allocWithZone(MEMORY[0x263F3C6F0]);
  uint64_t v2 = (void *)sub_24DCC97B8();
  id v3 = objc_msgSend(v1, sel_initWithLabel_criteria_, v2, v0);

  swift_unknownObjectRelease();
  return v3;
}

void *sub_24D71E994@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_24D71E9B4()
{
  if (*v0) {
    return 0x6573616870;
  }
  else {
    return 0x4449776F72;
  }
}

uint64_t sub_24D71E9E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D7339A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D71EA08@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!result) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_24D71EA24(uint64_t a1)
{
  unint64_t v2 = sub_24D7336DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D71EA60(uint64_t a1)
{
  unint64_t v2 = sub_24D7336DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D71EA9C(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_24D71EAEC(a1);
  return v2;
}

uint64_t sub_24D71EAEC(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986E3A8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D7336DC();
  swift_retain();
  sub_24DCCB0B8();
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    type metadata accessor for MaintenanceContinuation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v12[0] = 0;
    *(void *)(v1 + 16) = sub_24DCCAAE8();
    *(unsigned char *)(v1 + 24) = v8 & 1;
    v12[0] = 1;
    *(void *)(v1 + 32) = sub_24DCCAAE8();
    *(unsigned char *)(v1 + 40) = v10 & 1;
    swift_release();
    sub_24DCCAAB8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v1;
}

uint64_t sub_24D71ED28(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194920);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  uint64_t v18 = v6;
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986E398);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D7336DC();
  sub_24DCCB0D8();
  char v13 = *(unsigned char *)(v3 + 24);
  uint64_t v19 = *(void *)(v3 + 16);
  char v20 = v13;
  char v22 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199DF8);
  sub_24D733730();
  sub_24DCCACF8();
  if (!v2)
  {
    char v14 = *(unsigned char *)(v3 + 40);
    uint64_t v19 = *(void *)(v3 + 32);
    char v20 = v14;
    char v22 = 1;
    sub_24DCCACF8();
    sub_24DCCAC28();
    __swift_project_boxed_opaque_existential_1(&v19, v21);
    sub_24D502B78();
    sub_24DCCB0D8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_24D71EFBC()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if (*(unsigned char *)(v0 + 40)) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t result = 0;
  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
LABEL_5:
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_24D71F100()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MaintenanceContinuation()
{
  return self;
}

uint64_t sub_24D71F138()
{
  return sub_24D71EFBC();
}

uint64_t sub_24D71F15C(uint64_t *a1, uint64_t *a2)
{
  return sub_24D732DA8(*a1, *a2);
}

unint64_t sub_24D71F168()
{
  return 0xD000000000000014;
}

uint64_t sub_24D71F184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, unint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v9 = *(void *)(*(void *)v5 + 600);
  unint64_t v10 = *(void *)(*(void *)v5 + 608);
  uint64_t v11 = *(void *)(*(void *)v5 + 616);
  uint64_t v12 = *(void *)(*(void *)v5 + 624);
  uint64_t v61 = v9;
  unint64_t v62 = v10;
  uint64_t v63 = v11;
  uint64_t v64 = v12;
  uint64_t v56 = v12;
  uint64_t v13 = type metadata accessor for PersistenceTrigger();
  uint64_t v55 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = &v42[-v14];
  uint64_t v57 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v58 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v52 = *(void *)(v58 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v59 = &v42[-v17];
  uint64_t v18 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v18 + 33) != 1) {
    return a4(0, 0xD00000000000001ALL, 0x800000024DD05710, 0);
  }
  uint64_t v19 = *(uint64_t (**)(uint64_t))(**(void **)(v18 + 16) + 784);
  uint64_t v53 = a4;
  uint64_t v20 = swift_retain();
  char v21 = v19(v20);
  a4 = v53;
  LOBYTE(v19) = v21;
  uint64_t v22 = swift_release();
  if (v19) {
    return a4(0, 0xD00000000000001ALL, 0x800000024DD05710, 0);
  }
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 16) + 288))(v22);
  int v43 = v25;
  uint64_t v61 = v24;
  sub_24DCC9D48();
  swift_getWitnessTable();
  if (sub_24DCC9FE8())
  {
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0) {
      return v53(0, 0, 0, 0);
    }
LABEL_23:
    sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Maintenance.swift", 101, 2, 96);
  }
  unint64_t v50 = v10;
  uint64_t v51 = v9;
  uint64_t v26 = swift_bridgeObjectRetain();
  if (!MEMORY[0x253327DC0](v26, AssociatedTypeWitness)) {
    goto LABEL_18;
  }
  uint64_t v27 = 0;
  int v28 = *(void (**)(unsigned char *))(*(void *)a1 + 312);
  uint64_t v47 = *(void *)a1 + 312;
  int v48 = v28;
  uint64_t v49 = (void (**)(unsigned char *, uint64_t *, uint64_t))(v58 + 16);
  uint64_t v46 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 32);
  v44 = (void (**)(unsigned char *, uint64_t))(v55 + 8);
  uint64_t v45 = v24;
  while (1)
  {
    char v29 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v29)
    {
      (*(void (**)(unsigned char *, unint64_t, uint64_t))(v58 + 16))(v59, v24+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v27, AssociatedTypeWitness);
      uint64_t v30 = v27 + 1;
      if (__OFADD__(v27, 1)) {
        break;
      }
      goto LABEL_12;
    }
    uint64_t v38 = sub_24DCCA778();
    if (v52 != 8)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v61 = v38;
    (*v49)(v59, &v61, AssociatedTypeWitness);
    swift_unknownObjectRelease();
    uint64_t v30 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
LABEL_12:
    uint64_t v54 = v30;
    (*v46)(v15, v59, AssociatedTypeWitness);
    uint64_t v55 = v27;
    uint64_t v31 = swift_getAssociatedTypeWitness();
    uint64_t v32 = a1;
    uint64_t v33 = a5;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v35 = v55;
    uint64_t v24 = v45;
    uint64_t v36 = swift_getAssociatedConformanceWitness();
    uint64_t v61 = AssociatedTypeWitness;
    unint64_t v62 = v31;
    uint64_t v63 = AssociatedConformanceWitness;
    uint64_t v64 = v36;
    a5 = v33;
    a1 = v32;
    type metadata accessor for ReconciliationID();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v48(v15);
    (*v44)(v15, v13);
    uint64_t v37 = MEMORY[0x253327DC0](v24, AssociatedTypeWitness);
    uint64_t v27 = v35 + 1;
    if (v54 == v37) {
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  swift_bridgeObjectRelease();
  if (v43)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = 0;
    *(unsigned char *)(v39 + 24) = 1;
    *(void *)(v39 + 32) = 0;
    *(unsigned char *)(v39 + 40) = 1;
    uint64_t v61 = 0;
    unint64_t v62 = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v61 = 0x2064657461647075;
    unint64_t v62 = 0xE800000000000000;
    uint64_t v40 = MEMORY[0x253327D80](v24, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    uint64_t v60 = v40;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v53(v39, v61, v62, 0);
    swift_release();
  }
  else
  {
    uint64_t v61 = 0;
    unint64_t v62 = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v61 = 0x2064657461647075;
    unint64_t v62 = 0xE800000000000000;
    uint64_t v41 = MEMORY[0x253327D80](v24, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    uint64_t v60 = v41;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v53(0, v61, v62, 0);
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Maintenance.UnblockEvictability()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D71F910()
{
  return 0xD000000000000015;
}

uint64_t sub_24D71F92C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, unint64_t, void), uint64_t a5)
{
  unint64_t v9 = *(void *)(*(void *)v5 + 608);
  uint64_t v10 = *(void *)(*(void *)v5 + 616);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v60 = *(void *)(*(void *)v5 + 600);
  unint64_t v61 = v9;
  unint64_t v55 = v9;
  uint64_t v62 = v10;
  uint64_t v63 = v11;
  uint64_t v53 = v11;
  uint64_t v52 = type metadata accessor for PersistenceTrigger();
  uint64_t v12 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)v41 - v13;
  uint64_t v54 = v10;
  uint64_t v56 = v60;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v44 = *(void *)(v57 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v16 = (char *)v41 - v15;
  uint64_t v17 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(a1 + 32) + 16) + 784);
  uint64_t v18 = swift_retain();
  char v19 = v17(v18);
  uint64_t v20 = swift_release();
  if (v19)
  {
    unint64_t v21 = 0x800000024DD056D0;
    unint64_t v22 = 0xD000000000000017;
    return ((uint64_t (*)(void, unint64_t, unint64_t, void))a4)(0, v22, v21, 0);
  }
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 24) + 448))(v20);
  int v43 = v25;
  uint64_t v60 = v24;
  sub_24DCC9D48();
  swift_getWitnessTable();
  if (sub_24DCC9FE8())
  {
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
    {
      unint64_t v22 = 0;
      unint64_t v21 = 0;
      return ((uint64_t (*)(void, unint64_t, unint64_t, void))a4)(0, v22, v21, 0);
    }
LABEL_23:
    sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Maintenance.swift", 101, 2, 132);
  }
  uint64_t v50 = a1;
  v41[1] = a5;
  BOOL v42 = a4;
  uint64_t v26 = swift_bridgeObjectRetain();
  if (!MEMORY[0x253327DC0](v26, AssociatedTypeWitness)) {
    goto LABEL_17;
  }
  uint64_t v27 = 0;
  int v28 = *(void (**)(char *))(*(void *)v50 + 312);
  uint64_t v47 = *(void *)v50 + 312;
  int v48 = v28;
  uint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v57 + 16);
  uint64_t v45 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v46 = (void (**)(char *, char *, uint64_t))(v57 + 32);
  char v29 = v51;
  while (1)
  {
    char v30 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v30)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v16, v24+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(void *)(v57 + 72) * v27, AssociatedTypeWitness);
      uint64_t v31 = v27 + 1;
      if (__OFADD__(v27, 1)) {
        break;
      }
      goto LABEL_11;
    }
    uint64_t v37 = sub_24DCCA778();
    if (v44 != 8)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v60 = v37;
    (*v49)(v16, &v60, AssociatedTypeWitness);
    swift_unknownObjectRelease();
    uint64_t v31 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
LABEL_11:
    uint64_t v58 = v31;
    (*v46)(v29, v16, AssociatedTypeWitness);
    uint64_t v32 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v34 = swift_getAssociatedConformanceWitness();
    uint64_t v60 = AssociatedTypeWitness;
    unint64_t v61 = v32;
    uint64_t v62 = AssociatedConformanceWitness;
    uint64_t v63 = v34;
    type metadata accessor for ReconciliationID();
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = v52;
    swift_storeEnumTagMultiPayload();
    v48(v29);
    (*v45)(v29, v35);
    uint64_t v36 = MEMORY[0x253327DC0](v24, AssociatedTypeWitness);
    ++v27;
    if (v58 == v36) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_17:
  swift_bridgeObjectRelease();
  if (v43)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = 0;
    *(unsigned char *)(v38 + 24) = 1;
    *(void *)(v38 + 32) = 0;
    *(unsigned char *)(v38 + 40) = 1;
    uint64_t v60 = 0;
    unint64_t v61 = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v60 = 0x2064657461647075;
    unint64_t v61 = 0xE800000000000000;
    uint64_t v39 = MEMORY[0x253327D80](v24, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    uint64_t v59 = v39;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v42(v38, v60, v61, 0);
    swift_release();
  }
  else
  {
    uint64_t v60 = 0;
    unint64_t v61 = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v60 = 0x2064657461647075;
    unint64_t v61 = 0xE800000000000000;
    uint64_t v40 = MEMORY[0x253327D80](v24, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    uint64_t v59 = v40;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v42(0, v60, v61, 0);
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Maintenance.UnblockIgnoreFolderProcessing()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D7200AC()
{
  return 0x632D65726F6E6769;
}

uint64_t sub_24D7200D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = *v6;
  uint64_t v11 = *v6;
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = *(void *)(v10 + 600);
  *(void *)(v12 + 16) = sub_24DCC9C98();
  uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v20 = (uint64_t)v6 + *(void *)(*v6 + 576);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(_OWORD *)(v15 + 24) = *(_OWORD *)(v11 + 608);
  *(void *)(v15 + 40) = *(void *)(v10 + 624);
  *(void *)(v15 + 48) = v12;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = v12;
  v16[4] = a3;
  v16[5] = v6;
  v16[6] = a4;
  v16[7] = a5;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, void, void, uint64_t (*)(), uint64_t, uint64_t (*)(void *, char), void *))(*(void *)v14 + 144);
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v17(v20, a2, 0, 0, sub_24D7335D0, v15, sub_24D733638, v16);
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_24D7202E0()
{
  return 0;
}

uint64_t sub_24D720388(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(unsigned char *)(v16 + 24) = a2 & 1;
  *(void *)(v16 + 32) = a4;
  *(void *)(v16 + 40) = a5;
  *(void *)(v16 + 48) = a6;
  *(void *)(v16 + 56) = a7;
  *(void *)(v16 + 64) = a8;
  *(void *)(v16 + 72) = a3;
  sub_24D46C820(a1, a2 & 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D6E6088((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_24D7336B0, v16);

  return swift_release();
}

void sub_24D7204BC(void *a1, int a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(void *, void, void, void *), uint64_t a7, uint64_t a8)
{
  uint64_t v67 = a8;
  uint64_t v71 = a7;
  v70 = a6;
  uint64_t v72 = a5;
  uint64_t v13 = (void *)*a4;
  uint64_t v74 = sub_24DCC8CE8();
  v91 = *(void (***)(char *, uint64_t))(v74 - 8);
  MEMORY[0x270FA5388](v74);
  v73 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v13[12];
  uint64_t v16 = v13[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v89 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v78 = (uint64_t)&v62 - v17;
  uint64_t v18 = v13[11];
  v85 = a4;
  uint64_t v19 = v13[13];
  uint64_t v96 = v16;
  uint64_t v97 = v18;
  uint64_t v86 = v19;
  uint64_t v87 = v18;
  uint64_t v95 = v15;
  uint64_t v98 = v15;
  uint64_t v99 = v19;
  uint64_t v80 = type metadata accessor for ReconciliationMutation();
  uint64_t v20 = *(void *)(v80 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v80);
  v79 = (char *)&v62 - v22;
  uint64_t v23 = *(void *)(v16 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  v88 = (char *)&v62 - v28;
  if (a2)
  {
    id v29 = a1;
    v70(0, 0, 0, a1);
LABEL_22:
    sub_24D46C814(a1, a2 & 1);
    return;
  }
  uint64_t v63 = v27;
  int v64 = a2;
  uint64_t v66 = v8;
  swift_beginAccess();
  uint64_t v30 = *(void *)(a3 + 16);
  v65 = a1;
  sub_24D46C820(a1, 0);
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = MEMORY[0x253327DC0](v31, v16);
  uint64_t v33 = v88;
  if (!v32)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    a1 = v65;
    v70(v65, 0, 0, 0);
    uint64_t v60 = *(void (**)(uint64_t))(**(void **)(*(void *)(v67 + 32) + 16) + 848);
    uint64_t v61 = swift_retain();
    v60(v61);
    swift_release();
    LOBYTE(a2) = v64;
    goto LABEL_22;
  }
  uint64_t v34 = 0;
  v93 = *(uint64_t (**)(uint64_t, uint64_t))(v95 + 144);
  v94 = (void (**)(char *, uint64_t *, uint64_t))(v23 + 16);
  v92 = (void (**)(char *, char *, uint64_t))(v23 + 32);
  uint64_t v83 = v95 + 64;
  v76 = (void (**)(uint64_t, uint64_t))(v20 + 8);
  v69 = v91 + 1;
  v68 = (void (**)(uint64_t, uint64_t))(v89 + 8);
  v91 = (void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v77 = v23;
  v90 = v26;
  uint64_t v82 = v95 + 144;
  uint64_t v75 = v30;
  while (1)
  {
    char v35 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v35)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v33, v30+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v34, v16);
      uint64_t v36 = v34 + 1;
      if (__OFADD__(v34, 1)) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v59 = sub_24DCCA778();
      if (v63 != 8) {
        goto LABEL_26;
      }
      uint64_t v96 = v59;
      (*v94)(v33, &v96, v16);
      swift_unknownObjectRelease();
      uint64_t v36 = v34 + 1;
      if (__OFADD__(v34, 1))
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    (*v92)(v26, v33, v16);
    uint64_t v37 = v93(v16, v95);
    if (v38 >> 62 != 2 || v37 || v38 != 0x8000000000000000)
    {
      sub_24D466534(v37, v38);
      goto LABEL_6;
    }
    uint64_t v96 = v16;
    uint64_t v97 = v87;
    uint64_t v98 = v95;
    uint64_t v99 = v86;
    uint64_t v89 = type metadata accessor for JobResult();
    uint64_t v39 = swift_getAssociatedTypeWitness();
    uint64_t v40 = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v30 = v75;
    uint64_t v42 = swift_getAssociatedConformanceWitness();
    uint64_t v96 = v40;
    uint64_t v97 = v39;
    uint64_t v98 = AssociatedConformanceWitness;
    uint64_t v99 = v42;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v44 = (uint64_t)v79;
    uint64_t v45 = &v79[*(int *)(TupleTypeMetadata2 + 48)];
    v81 = *(void (**)(uint64_t, uint64_t))(v95 + 64);
    v81(v16, v95);
    swift_storeEnumTagMultiPayload();
    *uint64_t v45 = 1;
    uint64_t v33 = v88;
    uint64_t v26 = v90;
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = v80;
    swift_storeEnumTagMultiPayload();
    sub_24D907568((uint64_t)v85, v44);
    uint64_t v47 = v44;
    uint64_t v23 = v77;
    (*v76)(v47, v46);
    if (sub_24D98BCC4(v16, v95) != 1) {
      goto LABEL_6;
    }
    uint64_t v96 = v16;
    uint64_t v97 = v87;
    uint64_t v48 = v95;
    uint64_t v98 = v95;
    uint64_t v99 = v86;
    type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy();
    v81(v16, v48);
    uint64_t v49 = v73;
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v51 = v50;
    (*v69)(v49, v74);
    double v52 = v51 * 1000000000.0;
    if ((~COERCE__INT64(v51 * 1000000000.0) & 0x7FF0000000000000) == 0) {
      break;
    }
    if (v52 <= -9.22337204e18) {
      goto LABEL_24;
    }
    if (v52 >= 9.22337204e18) {
      goto LABEL_25;
    }
    uint64_t v53 = (uint64_t)v52;
    uint64_t v54 = *(void *)(v72 + 136);
    swift_allocObject();
    uint64_t v55 = v78;
    uint64_t v56 = v54;
    uint64_t v33 = v88;
    uint64_t v57 = sub_24D983960(v78, 0, v53, v56);
    uint64_t v58 = v55;
    uint64_t v26 = v90;
    (*v68)(v58, AssociatedTypeWitness);
    sub_24D85246C((uint64_t)v85, v57);
    swift_release();
LABEL_6:
    (*v91)(v26, v16);
    ++v34;
    if (v36 == MEMORY[0x253327DC0](v30, v16)) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_24D720E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_24D732E08(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v5;
}

uint64_t type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D720E9C()
{
  return 0xD000000000000023;
}

void sub_24D720EB8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, void *), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v104 = a3;
  uint64_t v11 = *(void **)v6;
  uint64_t v12 = *(void *)(*(void *)v6 + 600);
  uint64_t v129 = v12;
  uint64_t v13 = v11[76];
  uint64_t v14 = v11[77];
  uint64_t v15 = v11[78];
  uint64_t v132 = v12;
  uint64_t v133 = v13;
  uint64_t v134 = v14;
  uint64_t v135 = v15;
  uint64_t v103 = type metadata accessor for ReconciliationMutation();
  v125 = *(void (***)(char *, uint64_t))(v103 - 8);
  MEMORY[0x270FA5388](v103);
  v100 = (char *)&v84 - v16;
  uint64_t v17 = type metadata accessor for SnapshotItem();
  v109 = *(void (***)(char *, uint64_t))(v17 - 8);
  MEMORY[0x270FA5388](v17);
  v112 = (char *)&v84 - v18;
  uint64_t v117 = v19;
  uint64_t v113 = sub_24DCCA3F8();
  v108 = *(void (***)(char *, uint64_t))(v113 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v113);
  v114 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  v123 = (char *)&v84 - v22;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v128 = sub_24DCCA3F8();
  uint64_t v99 = *(void *)(v128 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v128);
  v115 = (char *)&v84 - v25;
  uint64_t v124 = AssociatedTypeWitness;
  uint64_t v98 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v84 - v26;
  uint64_t v132 = v12;
  uint64_t v133 = v13;
  uint64_t v102 = v13;
  uint64_t v130 = v14;
  uint64_t v134 = v14;
  uint64_t v135 = v15;
  uint64_t v101 = v15;
  uint64_t v28 = type metadata accessor for ItemReconciliation();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v118 = (char *)&v84 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = v31;
  MEMORY[0x270FA5388](v30);
  v131 = (char *)&v84 - v32;
  if (!a2)
  {
    uint64_t v33 = 0;
    goto LABEL_5;
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v33 = swift_dynamicCastClass();
  if (!v33)
  {
LABEL_5:
    uint64_t v35 = 1;
    goto LABEL_6;
  }
  uint64_t v34 = v33;
  uint64_t v33 = *(void *)(v33 + 16);
  uint64_t v35 = *(unsigned __int8 *)(v34 + 24);
LABEL_6:
  uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 184))(v33, v35);
  uint64_t v38 = a1;
  uint64_t v39 = v36;
  int v90 = v40;
  uint64_t v85 = v41;
  v122 = 0;
  uint64_t v111 = v38;
  uint64_t v89 = v6;
  uint64_t v91 = a5;
  v92 = a4;
  uint64_t v42 = MEMORY[0x253327DC0](v36, v28);
  uint64_t v43 = v113;
  uint64_t v44 = v115;
  uint64_t v45 = v118;
  if (!v42)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    if (v90)
    {
      uint64_t v82 = 0;
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v82 = swift_allocObject();
      *(void *)(v82 + 16) = v85;
      *(unsigned char *)(v82 + 24) = 0;
      *(void *)(v82 + 32) = 0;
      *(unsigned char *)(v82 + 40) = 1;
      swift_retain();
    }
    v92(v82, 0, 0, 0);
    swift_release_n();
    return;
  }
  uint64_t v46 = 0;
  v126 = (void (**)(char *, char *, uint64_t))(v29 + 32);
  v127 = (void (**)(char *, uint64_t *, uint64_t))(v29 + 16);
  v121 = (void (**)(char *, char *, uint64_t))(v99 + 16);
  v120 = (unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
  v110 = (void (**)(char *, char *, uint64_t))(v98 + 32);
  v107 = (void (**)(char *, char *, uint64_t))(v108 + 2);
  v106 = (unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 6);
  uint64_t v96 = (void (**)(char *, char *, uint64_t))(v109 + 4);
  v94 = (void (**)(char *, char *, uint64_t))(v98 + 16);
  v93 = (void (**)(uint64_t, uint64_t))(v125 + 1);
  uint64_t v95 = v109 + 1;
  v105 = v108 + 1;
  v108 = (void (**)(char *, uint64_t))(v98 + 8);
  v125 = (void (**)(char *, uint64_t))(v29 + 8);
  v109 = (void (**)(char *, uint64_t))(v99 + 8);
  uint64_t v119 = v29;
  v116 = v27;
  while (1)
  {
    char v47 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v47)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v131, v39+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v46, v28);
    }
    else
    {
      uint64_t v81 = sub_24DCCA778();
      if (v97 != 8) {
        goto LABEL_35;
      }
      uint64_t v132 = v81;
      (*v127)(v131, &v132, v28);
      swift_unknownObjectRelease();
    }
    uint64_t v48 = v46 + 1;
    uint64_t v49 = v128;
    if (__OFADD__(v46, 1)) {
      break;
    }
    (*v126)(v45, v131, v28);
    if ((v45[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)] & 0x10) != 0)
    {
      (*v121)(v44, v45, v49);
      uint64_t v50 = v49;
      uint64_t v51 = v124;
      if ((*v120)(v44, 1, v124) == 1)
      {
        (*v125)(v45, v28);
        (*v109)(v44, v50);
      }
      else
      {
        double v52 = v116;
        (*v110)(v116, v44, v51);
        uint64_t v53 = v122;
        uint64_t v54 = v123;
        (*(void (**)(char *, uint64_t))(**(void **)(v111 + 32) + 240))(v52, 1);
        if (v53)
        {
          (*v108)(v52, v124);
          (*v125)(v118, v28);
          swift_bridgeObjectRelease();
          uint64_t v83 = v92;
          id v37 = v53;
          v83(0, 0, 0, v53);

          return;
        }
        v122 = 0;
        uint64_t v55 = v114;
        (*v107)(v114, v54, v43);
        uint64_t v56 = v117;
        if ((*v106)(v55, 1, v117) == 1)
        {
          uint64_t v57 = v55;
          uint64_t v58 = *v105;
          (*v105)(v123, v43);
          (*v108)(v52, v124);
          uint64_t v45 = v118;
          (*v125)(v118, v28);
          uint64_t v59 = v57;
          uint64_t v44 = v115;
          v58(v59, v43);
          uint64_t v29 = v119;
          goto LABEL_9;
        }
        uint64_t v60 = v112;
        (*v96)(v112, v55, v56);
        uint64_t v61 = &v60[*(int *)(v56 + 48)];
        if ((v61[*(int *)(type metadata accessor for ItemMetadata() + 64)] & 1) == 0)
        {
          uint64_t v132 = v129;
          uint64_t v133 = v102;
          uint64_t v134 = v130;
          uint64_t v135 = v101;
          uint64_t v99 = type metadata accessor for JobResult();
          uint64_t v62 = swift_getAssociatedTypeWitness();
          uint64_t v63 = v124;
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          uint64_t v65 = swift_getAssociatedConformanceWitness();
          uint64_t v132 = v63;
          uint64_t v133 = v62;
          uint64_t v134 = AssociatedConformanceWitness;
          uint64_t v135 = v65;
          uint64_t v66 = type metadata accessor for ReconciliationID();
          uint64_t v67 = type metadata accessor for ReconciliationSideMutation();
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          uint64_t v68 = (uint64_t)v100;
          v69 = &v100[*(int *)(TupleTypeMetadata2 + 48)];
          v70 = v116;
          uint64_t v87 = *v94;
          v87(v100, v116, v63);
          uint64_t v88 = v66;
          swift_storeEnumTagMultiPayload();
          char *v69 = 0;
          uint64_t v98 = v67;
          swift_storeEnumTagMultiPayload();
          uint64_t v71 = v103;
          swift_storeEnumTagMultiPayload();
          sub_24D907568(v104, v68);
          uint64_t v72 = *v93;
          (*v93)(v68, v71);
          v73 = v118;
          if (sub_24DB86F3C(v28))
          {
            (*v95)(v112, v117);
            uint64_t v74 = v113;
            (*v105)(v123, v113);
            uint64_t v75 = v70;
            uint64_t v43 = v74;
            (*v108)(v75, v63);
            (*v125)(v73, v28);
            uint64_t v44 = v115;
            uint64_t v29 = v119;
            uint64_t v45 = v73;
          }
          else
          {
            v84 = v72;
            uint64_t v76 = *(int *)(TupleTypeMetadata2 + 48);
            v87((char *)v68, v70, v63);
            swift_storeEnumTagMultiPayload();
            uint64_t v77 = v68;
            uint64_t v78 = v123;
            uint64_t v29 = v119;
            if (qword_26B199AA0 != -1) {
              swift_once();
            }
            uint64_t v79 = v68 + v76;
            *(void *)uint64_t v79 = qword_26B1A24C8;
            *(_OWORD *)(v79 + 8) = *(_OWORD *)(v89 + 120);
            swift_storeEnumTagMultiPayload();
            uint64_t v80 = v103;
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v104, v77);
            v84(v77, v80);
            (*v95)(v112, v117);
            uint64_t v43 = v113;
            (*v105)(v78, v113);
            (*v108)(v116, v124);
            uint64_t v45 = v118;
            (*v125)(v118, v28);
            uint64_t v44 = v115;
          }
          goto LABEL_9;
        }
        (*v95)(v60, v56);
        uint64_t v43 = v113;
        (*v105)(v123, v113);
        (*v108)(v116, v124);
        uint64_t v45 = v118;
        (*v125)(v118, v28);
      }
      uint64_t v29 = v119;
    }
    else
    {
      (*v125)(v45, v28);
    }
LABEL_9:
    ++v46;
    if (v48 == MEMORY[0x253327DC0](v39, v28)) {
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t type metadata accessor for Maintenance.RetriggerResolvedVendorExclusion()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D721DB8()
{
  return 0xD000000000000018;
}

uint64_t sub_24D721DD4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  uint64_t v45 = a2;
  uint64_t v50 = a1;
  uint64_t v8 = *v5;
  uint64_t v9 = type metadata accessor for SnapshotItem();
  uint64_t v10 = sub_24DCCA3F8();
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v49 = v9;
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v11);
  char v47 = (char *)&v44 - v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v44 - v20;
  uint64_t v22 = (char *)v5 + *(void *)(v8 + 576);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v23((char *)&v44 - v20, v22, AssociatedTypeWitness);
  v23(v19, v21, AssociatedTypeWitness);
  if (swift_dynamicCast())
  {
    uint64_t v44 = a5;
    uint64_t v24 = a4;
    if (v52 != 1)
    {
      unint64_t v27 = 0xD000000000000039;
      unint64_t v28 = 0x800000024DD055D0;
LABEL_6:
      a4(0, v27, v28, 0);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, AssociatedTypeWitness);
    }
    uint64_t v25 = v51;
    uint64_t v26 = *(void *)(v50 + 32);
    (*(void (**)(char *, uint64_t))(*(void *)v26 + 240))(v21, 1);
    uint64_t v50 = v25;
    uint64_t v30 = v48;
    uint64_t v31 = v49;
    int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v13, 1, v49);
    if (v32 == 1)
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v10);
      unint64_t v28 = 0x800000024DD05560;
      unint64_t v27 = 0xD000000000000022;
      goto LABEL_6;
    }
    uint64_t v33 = v47;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v47, v13, v31);
    uint64_t v34 = v31;
    uint64_t v35 = &v33[*(int *)(v31 + 48)];
    uint64_t v36 = type metadata accessor for ItemMetadata();
    if (v35[*(int *)(v36 + 60)])
    {
      a4(0, 0xD000000000000033, 0x800000024DD05590, 0);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v34);
    }
    else
    {
      uint64_t v37 = *(void *)&v35[*(int *)(v36 + 76)];
      if (v45 && (type metadata accessor for MaintenanceContinuation(), (uint64_t v38 = swift_dynamicCastClass()) != 0))
      {
        uint64_t v39 = *(void *)(v38 + 16);
        char v40 = *(unsigned char *)(v38 + 24);
      }
      else
      {
        uint64_t v39 = 0;
        char v40 = 1;
      }
      char v41 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v26 + 608))(v50, v37);
      uint64_t v42 = v49;
      if (v41)
      {
        type metadata accessor for MaintenanceContinuation();
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = v39;
        *(unsigned char *)(v43 + 24) = v40;
        *(void *)(v43 + 32) = 0;
        *(unsigned char *)(v43 + 40) = 1;
        swift_retain();
      }
      else
      {
        uint64_t v43 = 0;
      }
      v24(v43, 0, 0, 0);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v42);
    }
  }
  else
  {
    a4(0, 0xD00000000000003BLL, 0x800000024DD05520, 0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, AssociatedTypeWitness);
}

uint64_t type metadata accessor for Maintenance.UpdateClosestSyncRoot()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D7223B4()
{
  return 0xD000000000000017;
}

uint64_t sub_24D7223D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v5 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v14 = v31;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v13 + 240))(a1, 1);
  if (!v14)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v26, 1, 1, v5);
    }
    else
    {
      uint64_t v16 = v12;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v5);
      (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v13 + 264))(v28, a1);
      uint64_t v17 = (uint64_t)&v12[*(int *)(v5 + 52)];
      sub_24D5013B0(v17, (uint64_t)v27);
      sub_24D5013B0((uint64_t)v28, v17);
      sub_24D7334DC(v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
      sub_24D7334DC(v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
      sub_24D5013B0((uint64_t)v28, (uint64_t)v29);
      if (sub_24D3F0D40((uint64_t)v29) == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v26, 1, 1, v5);
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v5);
      }
      else
      {
        uint64_t v18 = v5;
        char v19 = v29[0];
        __int16 v20 = v30;
        sub_24D7334DC(v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
        uint64_t v21 = v26;
        if ((v20 & 0x100) != 0 && (v19 & 0x40) != 0)
        {
          uint64_t v22 = &v16[*(int *)(v18 + 48)];
          uint64_t v23 = type metadata accessor for ItemMetadata();
          if (v22[*(int *)(v23 + 48)]) {
            char v24 = 5;
          }
          else {
            char v24 = 4;
          }
          v22[*(int *)(v23 + 84)] = v24;
          (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v21, v16, v18);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v18);
          return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v18);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v26, 1, 1, v18);
          return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v18);
        }
      }
    }
  }
  return result;
}

uint64_t sub_24D72280C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v54 = a3;
  int v64 = a1;
  uint64_t v8 = type metadata accessor for SnapshotItem();
  uint64_t v62 = sub_24DCCA3F8();
  uint64_t v57 = *(void (***)(char *, uint64_t))(v62 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v62);
  uint64_t v11 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v42 - v13;
  char v47 = *(void (***)(char *, uint64_t))(v8 - 8);
  MEMORY[0x270FA5388](v12);
  char v52 = (char *)&v42 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  __int16 v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v61 = (char *)&v42 - v21;
  uint64_t v51 = a5;
  uint64_t v53 = v11;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v22 = swift_dynamicCastClass();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v22 = *(void *)(v22 + 16);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v24 = 1;
LABEL_6:
  uint64_t v25 = v61;
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v64[4] + 344))(v22, v24);
  int v45 = v27;
  uint64_t v44 = v28;
  if (MEMORY[0x253327DC0](v26, AssociatedTypeWitness))
  {
    uint64_t v43 = a4;
    uint64_t v29 = 0;
    uint64_t v59 = v26;
    uint64_t v60 = (void (**)(char *, uint64_t *, uint64_t))(v17 + 16);
    uint64_t v50 = (void (**)(char *))(v47 + 4);
    uint64_t v49 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v47 + 2);
    uint64_t v48 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v47 + 7);
    uint64_t v55 = v57 + 1;
    uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 6);
    ++v47;
    uint64_t v57 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v58 = (void (**)(char *, char *, uint64_t))(v17 + 32);
    while (1)
    {
      char v32 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v32)
      {
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v17 + 16))(v25, v26+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v29, AssociatedTypeWitness);
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v46 != 8) {
          goto LABEL_23;
        }
        v65[0] = result;
        (*v60)(v25, v65, AssociatedTypeWitness);
        uint64_t result = swift_unknownObjectRelease();
      }
      uint64_t v34 = v29 + 1;
      uint64_t v35 = v64;
      if (__OFADD__(v29, 1)) {
        break;
      }
      (*v58)(v20, v25, AssociatedTypeWitness);
      sub_24D7223D0((uint64_t)v20, (uint64_t)v35, (uint64_t)v14);
      if ((*v56)(v14, 1, v8) == 1)
      {
        (*v57)(v20, AssociatedTypeWitness);
        (*v55)(v14, v62);
      }
      else
      {
        uint64_t v36 = v17;
        uint64_t v37 = v14;
        uint64_t v38 = v52;
        uint64_t v39 = v37;
        (*v50)(v52);
        char v40 = v53;
        (*v49)(v53, v38, v8);
        (*v48)(v40, 0, 1, v8);
        sub_24DBCB8D8(v40, (uint64_t)v20, 0, 0, 0, v64, *(void *)(v63 + 120), *(void *)(v63 + 128), 4096, v54);
        (*v55)((char *)v40, v62);
        (*v47)(v38, v8);
        (*v57)(v20, AssociatedTypeWitness);
        uint64_t v14 = v39;
        uint64_t v17 = v36;
        uint64_t v25 = v61;
      }
      uint64_t v30 = v59;
      ++v29;
      BOOL v31 = v34 == MEMORY[0x253327DC0](v59, AssociatedTypeWitness);
      uint64_t v26 = v30;
      if (v31)
      {
        swift_bridgeObjectRelease();
        a4 = v43;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_19:
    if (v45)
    {
      return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v44;
      *(unsigned char *)(v41 + 24) = 0;
      *(void *)(v41 + 32) = 0;
      *(unsigned char *)(v41 + 40) = 1;
      a4();
      return swift_release();
    }
  }
  return result;
}

uint64_t type metadata accessor for Maintenance.MarkPackagesAsEvictable()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D722F2C()
{
  return 0xD000000000000016;
}

uint64_t sub_24D722F48(void (**a1)(char *, uint64_t *, uint64_t), uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v66 = a3;
  uint64_t v83 = a1;
  uint64_t v9 = *(void *)(*(void *)v5 + 600);
  uint64_t v10 = *(void *)(*(void *)v5 + 608);
  uint64_t v11 = *(void *)(*(void *)v5 + 616);
  uint64_t v12 = *(void *)(*(void *)v5 + 624);
  uint64_t v86 = v9;
  uint64_t v87 = v10;
  uint64_t v88 = v11;
  uint64_t v89 = v12;
  uint64_t v13 = type metadata accessor for ReconciliationMutation();
  uint64_t v77 = *(void (***)(char *, uint64_t))(v13 - 8);
  MEMORY[0x270FA5388](v13);
  int v64 = (char *)&v54 - v14;
  uint64_t v65 = v12;
  uint64_t v68 = v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v82 = sub_24DCCA3F8();
  uint64_t v71 = *(void (***)(char *, uint64_t))(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v79 = (char *)&v54 - v15;
  uint64_t v67 = v11;
  uint64_t v69 = v9;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v84 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v84 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v85 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  __int16 v20 = (char *)&v54 - v19;
  if (!fpfs_supports_pkg_dataless_escape_prevention()) {
    return ((uint64_t (*)(void, unint64_t, unint64_t, void))a4)(0, 0xD000000000000018, 0x800000024DD054C0, 0);
  }
  uint64_t v21 = a5;
  uint64_t v80 = v20;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v22 = swift_dynamicCastClass();
    uint64_t v23 = AssociatedTypeWitness;
    uint64_t v24 = v83;
    if (v22)
    {
      uint64_t v25 = v22;
      uint64_t v22 = *(void *)(v22 + 16);
      uint64_t v26 = *(unsigned __int8 *)(v25 + 24);
    }
    else
    {
      uint64_t v26 = 1;
    }
    uint64_t v28 = v85;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v26 = 1;
    uint64_t v23 = AssociatedTypeWitness;
    uint64_t v28 = v85;
    uint64_t v24 = v83;
  }
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v24[4] + 352))(v22, v26);
  int v57 = v30;
  uint64_t v56 = v31;
  uint64_t v55 = v17;
  uint64_t v58 = v21;
  uint64_t v59 = a4;
  uint64_t v32 = MEMORY[0x253327DC0](v29, v16);
  uint64_t v33 = v79;
  uint64_t v34 = v29;
  if (v32)
  {
    uint64_t v35 = 0;
    uint64_t v36 = *(void *)v24[2];
    uint64_t v76 = v24[2];
    uint64_t v37 = *(void (**)(char *))(v36 + 160);
    uint64_t v74 = v36 + 160;
    uint64_t v75 = v37;
    uint64_t v83 = (void (**)(char *, uint64_t *, uint64_t))(v84 + 16);
    uint64_t v72 = v23 - 8;
    v73 = (void (**)(char *, char *, uint64_t))(v84 + 32);
    ++v71;
    uint64_t v60 = (void (**)(uint64_t, uint64_t))(v77 + 1);
    uint64_t v77 = (void (**)(char *, uint64_t))(v84 + 8);
    uint64_t v61 = v13;
    uint64_t v78 = v29;
    do
    {
      char v38 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v38)
      {
        unint64_t v39 = v34
            + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))
            + *(void *)(v84 + 72) * v35;
        char v40 = *(void (**)(char *, uint64_t *, uint64_t))(v84 + 16);
        uint64_t v41 = v80;
        v40(v80, (uint64_t *)v39, v16);
        uint64_t v42 = v35 + 1;
        if (__OFADD__(v35, 1)) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v55 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v86 = result;
        char v40 = *v83;
        char v52 = v80;
        (*v83)(v80, &v86, v16);
        uint64_t v41 = v52;
        swift_unknownObjectRelease();
        uint64_t v42 = v35 + 1;
        if (__OFADD__(v35, 1))
        {
LABEL_19:
          __break(1u);
          break;
        }
      }
      (*v73)(v28, v41, v16);
      v75(v28);
      int v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v33, 1, v23);
      (*v71)(v33, v82);
      if (v43 != 1)
      {
        uint64_t v86 = v69;
        uint64_t v87 = v68;
        uint64_t v88 = v67;
        uint64_t v89 = v65;
        uint64_t v63 = type metadata accessor for JobResult();
        uint64_t v62 = v40;
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v45 = swift_getAssociatedConformanceWitness();
        uint64_t v86 = v16;
        uint64_t v87 = v23;
        uint64_t v88 = AssociatedConformanceWitness;
        uint64_t v89 = v45;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v47 = (uint64_t)v64;
        uint64_t v48 = &v64[*(int *)(TupleTypeMetadata2 + 48)];
        v62(v64, (uint64_t *)v85, v16);
        uint64_t v33 = v79;
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v48 = 0x100000000000;
        *(_OWORD *)(v48 + 8) = *(_OWORD *)(v70 + 120);
        uint64_t v49 = v61;
        uint64_t v50 = v66;
        uint64_t v28 = v85;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v50, v47);
        uint64_t v51 = v47;
        uint64_t v23 = AssociatedTypeWitness;
        (*v60)(v51, v49);
      }
      (*v77)(v28, v16);
      uint64_t v34 = v78;
      ++v35;
    }
    while (v42 != MEMORY[0x253327DC0](v78, v16));
  }
  swift_bridgeObjectRelease();
  if (v57) {
    return ((uint64_t (*)(void, void, void, void))v59)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v56;
  *(unsigned char *)(v53 + 24) = 0;
  *(void *)(v53 + 32) = 0;
  *(unsigned char *)(v53 + 40) = 1;
  v59();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.MarkPackagesAsSyncRoot()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D7237D8()
{
  return 0xD000000000000017;
}

uint64_t sub_24D7237F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = type metadata accessor for SnapshotItem();
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v14 = v29;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v13 + 240))(a1, 1);
  if (!v14)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v25, 1, 1, v5);
    }
    uint64_t v16 = v12;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v5);
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v13 + 264))(v27, a1);
    uint64_t v17 = (uint64_t)&v12[*(int *)(v5 + 52)];
    sub_24D5013B0(v17, (uint64_t)v26);
    sub_24D5013B0((uint64_t)v27, v17);
    sub_24D7334DC(v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
    sub_24D7334DC(v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
    sub_24D5013B0((uint64_t)v27, (uint64_t)v28);
    if (sub_24D3F0D40((uint64_t)v28) == 1)
    {
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      uint64_t v19 = v25;
    }
    else
    {
      char v20 = v28[0];
      sub_24D7334DC(v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
      uint64_t v21 = v25;
      if ((v20 & 0xE) == 0)
      {
        uint64_t v23 = &v16[*(int *)(v5 + 48)];
        v23[*(int *)(type metadata accessor for ItemMetadata() + 36)] = 1;
        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v21, v16, v5);
        uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
        uint64_t v19 = v21;
        uint64_t v22 = 0;
LABEL_11:
        v18(v19, v22, 1, v5);
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v5);
      }
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      uint64_t v19 = v25;
    }
    uint64_t v22 = 1;
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_24D723BBC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v54 = a3;
  int v64 = a1;
  uint64_t v8 = type metadata accessor for SnapshotItem();
  uint64_t v62 = sub_24DCCA3F8();
  int v57 = *(void (***)(char *, uint64_t))(v62 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v62);
  uint64_t v11 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v47 = *(void (***)(char *, uint64_t))(v8 - 8);
  MEMORY[0x270FA5388](v12);
  char v52 = (char *)&v42 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v61 = (char *)&v42 - v21;
  uint64_t v51 = a5;
  uint64_t v53 = v11;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v22 = swift_dynamicCastClass();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v22 = *(void *)(v22 + 16);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v24 = 1;
LABEL_6:
  uint64_t v25 = v61;
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v64[4] + 360))(v22, v24);
  int v45 = v27;
  uint64_t v44 = v28;
  if (MEMORY[0x253327DC0](v26, AssociatedTypeWitness))
  {
    int v43 = a4;
    uint64_t v29 = 0;
    uint64_t v59 = v26;
    uint64_t v60 = (void (**)(char *, uint64_t *, uint64_t))(v17 + 16);
    uint64_t v50 = (void (**)(char *))(v47 + 4);
    uint64_t v49 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v47 + 2);
    uint64_t v48 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v47 + 7);
    uint64_t v55 = v57 + 1;
    uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 6);
    ++v47;
    int v57 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v58 = (void (**)(char *, char *, uint64_t))(v17 + 32);
    while (1)
    {
      char v32 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v32)
      {
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v17 + 16))(v25, v26+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v29, AssociatedTypeWitness);
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v46 != 8) {
          goto LABEL_23;
        }
        v65[0] = result;
        (*v60)(v25, v65, AssociatedTypeWitness);
        uint64_t result = swift_unknownObjectRelease();
      }
      uint64_t v34 = v29 + 1;
      uint64_t v35 = v64;
      if (__OFADD__(v29, 1)) {
        break;
      }
      (*v58)(v20, v25, AssociatedTypeWitness);
      sub_24D7237F4((uint64_t)v20, (uint64_t)v35, (uint64_t)v14);
      if ((*v56)(v14, 1, v8) == 1)
      {
        (*v57)(v20, AssociatedTypeWitness);
        (*v55)(v14, v62);
      }
      else
      {
        uint64_t v36 = v17;
        uint64_t v37 = v14;
        char v38 = v52;
        unint64_t v39 = v37;
        (*v50)(v52);
        char v40 = v53;
        (*v49)(v53, v38, v8);
        (*v48)(v40, 0, 1, v8);
        sub_24DBCB8D8(v40, (uint64_t)v20, 0, 0, 0, v64, *(void *)(v63 + 120), *(void *)(v63 + 128), 4096, v54);
        (*v55)((char *)v40, v62);
        (*v47)(v38, v8);
        (*v57)(v20, AssociatedTypeWitness);
        uint64_t v14 = v39;
        uint64_t v17 = v36;
        uint64_t v25 = v61;
      }
      uint64_t v30 = v59;
      ++v29;
      BOOL v31 = v34 == MEMORY[0x253327DC0](v59, AssociatedTypeWitness);
      uint64_t v26 = v30;
      if (v31)
      {
        swift_bridgeObjectRelease();
        a4 = v43;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_19:
    if (v45)
    {
      return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v44;
      *(unsigned char *)(v41 + 24) = 0;
      *(void *)(v41 + 32) = 0;
      *(unsigned char *)(v41 + 40) = 1;
      a4();
      return swift_release();
    }
  }
  return result;
}

uint64_t type metadata accessor for Maintenance.MarkDirectoriesAsLocked()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D7242DC()
{
  return 0xD000000000000017;
}

uint64_t sub_24D7242F8(void **a1, void **a2, uint64_t a3, uint64_t (*a4)(void, unint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v44 = a5;
  int v45 = a4;
  int v43 = a2;
  uint64_t v7 = *v5;
  uint64_t v8 = *(void *)(*v5 + 616);
  uint64_t v9 = *(void *)(*v5 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v7 + 624);
  uint64_t v12 = *(void *)(v7 + 608);
  uint64_t v48 = AssociatedTypeWitness;
  uint64_t v49 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  uint64_t v13 = a1;
  uint64_t v14 = type metadata accessor for ReconciliationID();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v46 = (char *)&v37 - v17;
  uint64_t v48 = v9;
  uint64_t v49 = v12;
  uint64_t AssociatedConformanceWitness = v8;
  uint64_t v51 = v11;
  uint64_t v18 = type metadata accessor for PersistenceTrigger();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v37 - v21;
  uint64_t v23 = ((uint64_t (*)(uint64_t))(*a1)[20])(v20);
  if ((v23 & 1) == 0)
  {
    uint64_t v38 = v16;
    if (!v43)
    {
      sub_24DBB275C();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      ((void (*)(char *))(*a1)[39])(v22);
      uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    }
    uint64_t v39 = v19;
    uint64_t v24 = (*(uint64_t (**)(uint64_t))(*a1[2] + 312))(v23);
    uint64_t v25 = v45;
    uint64_t v27 = v24;
    uint64_t v48 = v24;
    sub_24DCC9D48();
    swift_getWitnessTable();
    char v28 = sub_24DCC9FE8();
    if (v28)
    {
      swift_bridgeObjectRelease();
      return v25(0, 0xD000000000000012, 0x800000024DD05460, 0);
    }
    int v43 = v13;
    uint64_t v29 = swift_bridgeObjectRetain();
    if (!MEMORY[0x253327DC0](v29, v14))
    {
LABEL_19:
      swift_bridgeObjectRelease();
      type metadata accessor for MaintenanceContinuation();
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = 0;
      *(unsigned char *)(v35 + 24) = 1;
      *(void *)(v35 + 32) = 0;
      *(unsigned char *)(v35 + 40) = 1;
      uint64_t v48 = 0x6465737561706E75;
      uint64_t v49 = 0xE900000000000020;
      uint64_t v36 = MEMORY[0x253327D80](v27, v14);
      swift_bridgeObjectRelease();
      uint64_t v47 = v36;
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      v45(v35, v48, v49, 0);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t v30 = 0;
    BOOL v31 = (void (*)(char *))(*v43)[39];
    uint64_t v40 = (uint64_t)(*v43 + 39);
    uint64_t v41 = v31;
    uint64_t v42 = (void (**)(char *, uint64_t *, uint64_t))(v15 + 16);
    char v32 = (void (**)(char *, uint64_t))(v39 + 8);
    while (1)
    {
      char v33 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v33)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v46, v27+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v30, v14);
        uint64_t v34 = v30 + 1;
        if (__OFADD__(v30, 1)) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v38 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v48 = result;
        (*v42)(v46, &v48, v14);
        swift_unknownObjectRelease();
        uint64_t v34 = v30 + 1;
        if (__OFADD__(v30, 1))
        {
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v46, v14);
      swift_storeEnumTagMultiPayload();
      v41(v22);
      (*v32)(v22, v18);
      ++v30;
      if (v34 == MEMORY[0x253327DC0](v27, v14)) {
        goto LABEL_19;
      }
    }
  }
  return v45(0, 0xD000000000000018, 0x800000024DD05440, 0);
}

uint64_t type metadata accessor for Maintenance.UnpauseReconciliations()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72497C()
{
  return 0xD000000000000019;
}

uint64_t sub_24D724998(uint64_t a1, uint64_t a2, void *a3)
{
  v137 = a3;
  uint64_t v110 = a2;
  uint64_t v5 = (void *)*v3;
  uint64_t v104 = sub_24DCC8CE8();
  v140 = *(void (***)(char *, uint64_t))(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v103 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v5[75];
  uint64_t v8 = v5[76];
  uint64_t v9 = v5[77];
  v106 = v3;
  uint64_t v10 = v5[78];
  uint64_t v148 = v7;
  uint64_t v149 = v8;
  uint64_t v150 = v9;
  uint64_t v151 = v10;
  uint64_t v107 = type metadata accessor for ReconciliationMutation();
  uint64_t v124 = *(void (***)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v107 - 8);
  MEMORY[0x270FA5388](v107);
  v108 = (char *)&v82 - v11;
  v112 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v12 = MEMORY[0x270FA5388](v112);
  uint64_t v101 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v100 = (uint64_t)&v82 - v14;
  uint64_t v15 = type metadata accessor for SnapshotItem();
  uint64_t v111 = sub_24DCCA3F8();
  v121 = *(void (***)(char *, uint64_t))(v111 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v111);
  v105 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v113 = (char *)&v82 - v19;
  uint64_t v120 = v15;
  v118 = *(void (***)(char *, uint64_t))(v15 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v119 = (char *)&v82 - v20;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v130 = sub_24DCCA3F8();
  *(void *)&long long v117 = *(void *)(v130 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v130);
  uint64_t v129 = (char *)&v82 - v23;
  uint64_t v133 = AssociatedTypeWitness;
  v116 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v22);
  v131 = (char *)&v82 - v24;
  uint64_t v148 = v7;
  uint64_t v109 = v8;
  uint64_t v149 = v8;
  uint64_t v150 = v9;
  uint64_t v102 = v10;
  uint64_t v151 = v10;
  uint64_t v25 = type metadata accessor for ItemReconciliation();
  uint64_t v128 = sub_24DCCA3F8();
  uint64_t v115 = *(void *)(v128 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v128);
  v145 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v82 - v27);
  uint64_t v136 = v25;
  uint64_t v28 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v132 = (char *)&v82 - v29;
  uint64_t v30 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void *)(v31 + 64);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v82 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  v147 = (char *)&v82 - v35;
  uint64_t v36 = swift_bridgeObjectRetain();
  if (!MEMORY[0x253327DC0](v36, v30)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v88 = v32;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v38 = 0;
  v142 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
  uint64_t v143 = AssociatedConformanceWitness + 72;
  uint64_t v146 = AssociatedConformanceWitness;
  uint64_t v138 = AssociatedConformanceWitness + 64;
  v144 = (void (**)(char *, uint64_t *, uint64_t))(v31 + 16);
  v141 = (void (**)(char *, char *, uint64_t))(v31 + 32);
  uint64_t v135 = (uint64_t (**)(void, uint64_t, uint64_t))(v28 + 48);
  v126 = (void (**)(char *, char *, uint64_t))(v117 + 16);
  v127 = (void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v28 + 32);
  v125 = (unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 6);
  v114 = (void (**)(char *, char *, uint64_t))(v116 + 4);
  uint64_t v99 = (uint64_t (**)(char *, uint64_t, uint64_t))(v118 + 6);
  uint64_t v97 = (uint64_t (**)(char *, char *, uint64_t))(v118 + 4);
  uint64_t v95 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v118 + 2);
  v94 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v118 + 7);
  uint64_t v98 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v121 + 1);
  uint64_t v91 = (void (**)(char *, char *, uint64_t))(v116 + 2);
  int v90 = (uint64_t (**)(char *, uint64_t))(v140 + 1);
  uint64_t v89 = (void (**)(uint64_t, uint64_t))(v124 + 1);
  uint64_t v96 = v118 + 1;
  ++v116;
  v121 = (void (**)(char *, uint64_t))(v28 + 8);
  v140 = (void (**)(char *, uint64_t))(v31 + 8);
  v118 = (void (**)(char *, uint64_t))(v117 + 8);
  uint64_t v124 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v115 + 8);
  long long v117 = xmmword_24DCDA460;
  uint64_t v92 = v7;
  uint64_t v93 = v9;
  v122 = v34;
  uint64_t v123 = a1;
  uint64_t v134 = v31;
  while (1)
  {
    char v39 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v39)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(v147, a1+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v38, v30);
    }
    else
    {
      uint64_t result = sub_24DCCA778();
      if (v88 != 8) {
        goto LABEL_65;
      }
      uint64_t v148 = result;
      (*v144)(v147, &v148, v30);
      swift_unknownObjectRelease();
    }
    uint64_t v40 = v145;
    uint64_t v41 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
LABEL_60:
      sub_24D7334DC(v152, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
      (*v98)(v40, v111);
      (*v96)(v119, v120);
      (*v116)(v131, v133);
      (*v121)(v132, v136);
LABEL_61:
      (*v140)(v34, v30);
      return swift_bridgeObjectRelease();
    }
    (*v141)(v34, v147, v30);
    if (v142(v30, v146) & 1) != 0 || ((*(uint64_t (**)(uint64_t))(v146 + 64))(v30)) {
      goto LABEL_11;
    }
    uint64_t v42 = v139;
    sub_24D4759C8((uint64_t)v34, (uint64_t)v40);
    if (v42) {
      goto LABEL_61;
    }
    int v43 = v40;
    uint64_t v44 = v40;
    uint64_t v45 = v136;
    int v46 = (*v135)(v43, 1, v136);
    uint64_t v139 = 0;
    if (v46 == 1)
    {
      (*v140)(v34, v30);
      (*v124)(v44, v128);
      goto LABEL_4;
    }
    uint64_t v47 = v132;
    (*v127)(v132, v44, v45);
    uint64_t v49 = v129;
    uint64_t v48 = v130;
    (*v126)(v129, &v47[*(int *)(v45 + 52)], v130);
    uint64_t v50 = v133;
    if ((*v125)(v49, 1, v133) != 1) {
      break;
    }
    (*v121)(v47, v45);
    uint64_t v34 = v122;
    (*v140)(v122, v30);
    (*v118)(v49, v48);
    a1 = v123;
LABEL_4:
    uint64_t v31 = v134;
LABEL_5:
    ++v38;
    if (v41 == MEMORY[0x253327DC0](a1, v30)) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v51 = v131;
  (*v114)(v131, v49, v50);
  uint64_t v52 = v139;
  (*(void (**)(void *__return_ptr, char *))(*(void *)v137[5] + 264))(v152, v51);
  if (v52)
  {
    (*v116)(v131, v133);
    (*v121)(v47, v136);
    uint64_t v34 = v122;
    goto LABEL_61;
  }
  sub_24D5013B0((uint64_t)v152, (uint64_t)v153);
  int v53 = sub_24D3F0D40((uint64_t)v153);
  uint64_t v54 = v47;
  uint64_t v34 = v122;
  a1 = v123;
  if (v53 == 1)
  {
    uint64_t v139 = 0;
    (*v116)(v131, v133);
    (*v121)(v54, v136);
    (*v140)(v34, v30);
    goto LABEL_4;
  }
  uint64_t v115 = v153[26];
  uint64_t v87 = v153[27];
  uint64_t v55 = v113;
  (*(void (**)(char *, uint64_t))(*(void *)v137[4] + 240))(v122, 1);
  uint64_t v56 = 0;
  uint64_t v31 = v134;
  int v57 = (*v99)(v55, 1, v120);
  uint64_t v139 = 0;
  if (v57 == 1)
  {
    sub_24D7334DC(v152, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
    (*v116)(v131, v133);
    (*v121)(v132, v136);
    (*v140)(v34, v30);
    (*v98)((uint64_t (*)(char *, uint64_t, uint64_t))v55, v111);
    goto LABEL_5;
  }
  uint64_t v58 = v55;
  uint64_t v59 = v120;
  uint64_t v60 = (*v97)(v119, v58, v120);
  uint64_t v61 = &v119[*(int *)(v59 + 48)];
  if (v61[v112[12]])
  {
    uint64_t v62 = v112[21];
    if (v61[v62] != 5) {
      goto LABEL_23;
    }
LABEL_53:
    sub_24D7334DC(v152, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
    (*v96)(v119, v59);
LABEL_54:
    (*v116)(v131, v133);
    (*v121)(v132, v136);
LABEL_11:
    (*v140)(v34, v30);
    goto LABEL_5;
  }
  uint64_t v85 = v112[12];
  int v64 = *(uint64_t (**)(uint64_t))(*v137 + 520);
  uint64_t v86 = v61;
  int v65 = v64(v60);
  int v66 = *v86;
  if (v66 == 2)
  {
    uint64_t v67 = v100;
    sub_24D409F80((uint64_t)v86, v100);
    goto LABEL_27;
  }
  int v84 = v65;
  uint64_t v67 = v100;
  sub_24D409F80((uint64_t)v86, v100);
  if (v66 == 1)
  {
LABEL_27:
    sub_24D409FE4(v67);
    uint64_t v68 = v101;
    sub_24D409F80((uint64_t)v86, v101);
    goto LABEL_28;
  }
  int v83 = *(unsigned __int8 *)(v67 + v112[12]);
  sub_24D409FE4(v67);
  uint64_t v68 = v101;
  sub_24D409F80((uint64_t)v86, v101);
  if (v83)
  {
LABEL_28:
    sub_24D409FE4(v68);
    goto LABEL_29;
  }
  int v83 = *(unsigned __int8 *)(v68 + v112[11]);
  sub_24D409FE4(v68);
  if (v83)
  {
LABEL_29:
    uint64_t v62 = v112[21];
    uint64_t v61 = v86;
    uint64_t v56 = v139;
    uint64_t v59 = v120;
    if (!v86[v62]) {
      goto LABEL_53;
    }
    goto LABEL_30;
  }
  uint64_t v61 = v86;
  if (v86[v85] == 1)
  {
    uint64_t v62 = v112[21];
    goto LABEL_52;
  }
  unsigned __int8 v78 = *v86 == 1;
  LODWORD(v85) = v84 & 1;
  uint64_t v79 = v87;
  uint64_t v115 = sub_24D3FB354(v115, v87, 0, v85, v78, 0);
  uint64_t v80 = sub_24D3FB354(v79, 0, 1, v85, v78, 0);
  uint64_t v81 = 501;
  if (v80 == 3) {
    uint64_t v81 = 3;
  }
  if (v115 != 501) {
    uint64_t v81 = v115;
  }
  if (v81 == 3 || v81 == 1002)
  {
    uint64_t v62 = v112[21];
    uint64_t v61 = v86;
LABEL_52:
    uint64_t v56 = v139;
    uint64_t v59 = v120;
    if (v61[v62] == 5) {
      goto LABEL_53;
    }
LABEL_23:
    char v63 = 5;
  }
  else
  {
    uint64_t v56 = v139;
    uint64_t v59 = v120;
    if (v81 == 500)
    {
      uint64_t v62 = v112[21];
      uint64_t v61 = v86;
      if (!v86[v62]) {
        goto LABEL_53;
      }
LABEL_30:
      char v63 = 0;
    }
    else
    {
      uint64_t v62 = v112[21];
      uint64_t v61 = v86;
      if (v86[v62] == 4) {
        goto LABEL_53;
      }
      char v63 = 4;
    }
  }
  v61[v62] = v63;
  uint64_t v40 = v105;
  (*v95)(v105, v119, v120);
  (*v94)(v40, 0, 1, v120);
  sub_24DBCB8D8(v40, (uint64_t)v34, 0, 0, 0, v137, v106[15], v106[16], 0x20000000, v110);
  if (v56) {
    goto LABEL_60;
  }
  uint64_t v139 = 0;
  (*v98)(v40, v111);
  uint64_t v148 = v92;
  uint64_t v149 = v109;
  uint64_t v150 = v93;
  uint64_t v151 = v102;
  uint64_t v115 = type metadata accessor for JobResult();
  uint64_t v69 = v133;
  uint64_t v70 = swift_getAssociatedConformanceWitness();
  uint64_t v148 = v30;
  uint64_t v149 = v69;
  uint64_t v150 = v146;
  uint64_t v151 = v70;
  type metadata accessor for ReconciliationID();
  uint64_t v86 = (char *)type metadata accessor for ReconciliationSideMutation();
  uint64_t v87 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*v91)(v108, v131, v133);
  swift_storeEnumTagMultiPayload();
  uint64_t v71 = v103;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v73 = v72;
  uint64_t result = (*v90)(v71, v104);
  double v75 = v73 * 1000000000.0;
  if ((~COERCE__INT64(v73 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v75 <= -9.22337204e18) {
      goto LABEL_63;
    }
    if (v75 >= 9.22337204e18) {
      goto LABEL_64;
    }
    uint64_t v76 = (uint64_t)v108;
    uint64_t v77 = &v108[v87];
    *(_OWORD *)uint64_t v77 = v117;
    *((void *)v77 + 2) = (uint64_t)v75;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_24D907568(v110, v76);
    sub_24D7334DC(v152, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
    (*v89)(v76, v107);
    (*v96)(v119, v120);
    goto LABEL_54;
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

void sub_24D725C30(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v143 = a5;
  v144 = a4;
  uint64_t v128 = a3;
  uint64_t v115 = a2;
  uint64_t v145 = a1;
  uint64_t v122 = *v5;
  uint64_t v6 = v122;
  uint64_t v127 = sub_24DCC8CE8();
  int64_t v114 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  v126 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v122 + 600);
  uint64_t v133 = *(void *)(v122 + 616);
  uint64_t v125 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v132 = sub_24DCCA3F8();
  uint64_t v113 = *(void *)(v132 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v132);
  v142 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v131 = (char *)&v104 - v13;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  v137 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v136 = (char *)&v104 - v18;
  MEMORY[0x270FA5388](v17);
  v116 = (char *)&v104 - v19;
  uint64_t v20 = *(void *)(v6 + 608);
  uint64_t v21 = *(void *)(v6 + 624);
  uint64_t v22 = type metadata accessor for SnapshotItem();
  int64_t v118 = sub_24DCCA3F8();
  long long v117 = *(void (***)(char *, uint64_t))(v118 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v118);
  v140 = (char *)&v104 - v24;
  uint64_t v120 = v22;
  uint64_t v121 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v119 = (char *)&v104 - v25;
  uint64_t v123 = v21;
  uint64_t v124 = v20;
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v129 = sub_24DCCA3F8();
  uint64_t v138 = *(void (***)(void (**)(char *, void, void), uint64_t))(v129 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v129);
  uint64_t v29 = (void (**)(char *, char *, uint64_t))((char *)&v104 - v28);
  uint64_t v141 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v130 = (char *)&v104 - v30;
  sub_24DA604B8(AssociatedTypeWitness, AssociatedTypeWitness);
  uint64_t v31 = *(void *)(v14 + 72);
  swift_allocObject();
  uint64_t v32 = sub_24DCC9C58();
  uint64_t v33 = (uint64_t)v5 + *(void *)(*v5 + 576);
  uint64_t v135 = v14;
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v34(v35, v33, AssociatedTypeWitness);
  uint64_t v36 = sub_24D785484(v32);
  uint64_t v151 = v36;
  uint64_t v37 = *(void (**)(uint64_t))(**(void **)(v145 + 16) + 160);
  uint64_t v139 = v29;
  v37(v33);
  id v146 = 0;
  uint64_t v109 = v36;
  uint64_t v40 = v138;
  uint64_t v106 = v33;
  uint64_t v41 = v140;
  uint64_t v110 = (void (*)(char *, uint64_t, uint64_t))v34;
  uint64_t v111 = v14 + 16;
  uint64_t v108 = v31;
  uint64_t v112 = AssociatedTypeWitness;
  uint64_t v107 = v5;
  uint64_t v42 = v141;
  int v43 = v139;
  int v44 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v141 + 48))(v139, 1, v26);
  if (v44 == 1)
  {
    swift_bridgeObjectRelease();
    ((void (**)(void (**)(char *, char *, uint64_t), uint64_t))v40)[1](v43, v129);
    ((void (*)(void, uint64_t, unint64_t, void))v144)(0, 0x746F6E206D657469, 0xEE00646E756F6220, 0);
    return;
  }
  uint64_t v45 = v130;
  (*(void (**)(char *, void, uint64_t))(v42 + 32))(v130, v43, v26);
  uint64_t v47 = (void *)v145;
  id v46 = v146;
  uint64_t v48 = v26;
  uint64_t v49 = v45;
  uint64_t v50 = v41;
  (*(void (**)(char *, uint64_t))(**(void **)(v145 + 40) + 240))(v45, 1);
  id v146 = v46;
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v48);
LABEL_2:
    swift_bridgeObjectRelease();
LABEL_3:
    id v38 = v146;
    id v39 = v146;
    ((void (*)(void, void, void, id))v144)(0, 0, 0, v38);

    return;
  }
  uint64_t v105 = v48;
  uint64_t v51 = v121;
  uint64_t v52 = v41;
  uint64_t v53 = v120;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v52, 1, v120) == 1)
  {
    swift_bridgeObjectRelease();
    v117[1](v50, v118);
    ((void (*)(void, unint64_t, unint64_t, void))v144)(0, 0xD000000000000013, 0x800000024DD05400, 0);
    goto LABEL_57;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v119, v50, v53);
  uint64_t WitnessTable = swift_getWitnessTable();
  if (sub_24D98BCC4(v53, WitnessTable) != 1)
  {
    uint64_t v62 = 0;
    char v63 = 1;
    uint64_t v64 = v128;
LABEL_51:
    id v102 = v146;
    sub_24D724998(v151, v64, v47);
    id v146 = v102;
    if (v102)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v119, v53);
      (*(void (**)(char *, uint64_t))(v141 + 8))(v49, v105);
      goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    if (v63)
    {
      ((void (*)(void, void, void, void))v144)(0, 0, 0, 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = v62;
      *(unsigned char *)(v103 + 24) = 0;
      *(void *)(v103 + 32) = 0;
      *(unsigned char *)(v103 + 40) = 1;
      v144();
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v119, v53);
LABEL_57:
    (*(void (**)(char *, uint64_t))(v141 + 8))(v49, v105);
    return;
  }
  uint64_t v55 = v47[4];
  uint64_t v56 = v112;
  v110(v116, v106, v112);
  if (v115)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v57 = swift_dynamicCastClass();
    uint64_t v58 = TupleTypeMetadata2;
    uint64_t v59 = v135;
    if (v57)
    {
      uint64_t v60 = *(void *)(v57 + 16);
      uint64_t v61 = *(unsigned __int8 *)(v57 + 24);
    }
    else
    {
      uint64_t v60 = 0;
      uint64_t v61 = 1;
    }
  }
  else
  {
    uint64_t v60 = 0;
    uint64_t v61 = 1;
    uint64_t v58 = TupleTypeMetadata2;
    uint64_t v59 = v135;
  }
  int v65 = v116;
  id v66 = v146;
  uint64_t v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)v55 + 376))(v116, v60, v61);
  id v146 = v66;
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v65, v56);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v119, v53);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v49, v105);
    goto LABEL_2;
  }
  uint64_t v70 = v67;
  uint64_t v115 = v68;
  LODWORD(v109) = v69 & 1;
  double v72 = *(void (***)(void (**)(char *, void, void), uint64_t))(v59 + 8);
  uint64_t v71 = v59 + 8;
  uint64_t v138 = v72;
  ((void (*)(char *, uint64_t))v72)(v65, v56);
  int64_t v73 = 0;
  uint64_t v129 = v70;
  uint64_t v74 = *(void *)(v70 + 64);
  v116 = (char *)(v70 + 64);
  uint64_t v75 = 1 << *(unsigned char *)(v70 + 32);
  uint64_t v76 = -1;
  if (v75 < 64) {
    uint64_t v76 = ~(-1 << v75);
  }
  unint64_t v77 = v76 & v74;
  v140 = (char *)(v58 - 8);
  unsigned __int8 v78 = (void (**)(void))(v113 + 32);
  uint64_t v135 = v71;
  uint64_t v139 = (void (**)(char *, char *, uint64_t))(v71 + 24);
  long long v117 = (void (**)(char *, uint64_t))(v114 + 8);
  int64_t v118 = (unint64_t)(v75 + 63) >> 6;
  int64_t v114 = v118 - 1;
  uint64_t v79 = v133;
  while (1)
  {
    uint64_t v81 = v142;
    if (v77)
    {
      unint64_t v82 = __clz(__rbit64(v77));
      v77 &= v77 - 1;
      unint64_t v83 = v82 | (v73 << 6);
      goto LABEL_26;
    }
    int64_t v86 = v73 + 1;
    if (__OFADD__(v73, 1)) {
      goto LABEL_61;
    }
    if (v86 < v118)
    {
      unint64_t v87 = *(void *)&v116[8 * v86];
      if (v87) {
        goto LABEL_30;
      }
      v73 += 2;
      if (v86 + 1 >= v118)
      {
        unint64_t v77 = 0;
        uint64_t v85 = 1;
        int64_t v73 = v86;
        goto LABEL_39;
      }
      unint64_t v87 = *(void *)&v116[8 * v73];
      if (v87)
      {
        ++v86;
        goto LABEL_30;
      }
      int64_t v88 = v86 + 2;
      if (v86 + 2 < v118) {
        break;
      }
    }
    unint64_t v77 = 0;
    uint64_t v85 = 1;
LABEL_39:
    uint64_t v89 = *(void *)(v58 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v81, v85, 1, v58);
    int v90 = v131;
    (*v78)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v90, 1, v58) == 1)
    {
      swift_release();
      uint64_t v64 = v128;
      uint64_t v47 = (void *)v145;
      uint64_t v53 = v120;
      uint64_t v51 = v121;
      uint64_t v49 = v130;
      uint64_t v62 = v115;
      char v63 = v109;
      goto LABEL_51;
    }
    int v91 = v90[*(int *)(v58 + 48)];
    uint64_t v92 = v136;
    uint64_t v93 = v112;
    (*v139)(v136, v90, v112);
    if (v91 == 1)
    {
      uint64_t v147 = v125;
      uint64_t v148 = v124;
      uint64_t v149 = v79;
      uint64_t v150 = v123;
      type metadata accessor for JobResult();
      v110(v137, (uint64_t)v92, v93);
      v94 = v126;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v96 = v95;
      (*v117)(v94, v127);
      double v97 = v96 * 1000000000.0;
      if ((~COERCE__INT64(v96 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      if (v97 <= -9.22337204e18) {
        goto LABEL_59;
      }
      uint64_t v98 = (uint64_t)v137;
      if (v97 >= 9.22337204e18) {
        goto LABEL_60;
      }
      uint64_t v99 = (uint64_t)v97;
      swift_allocObject();
      uint64_t v100 = sub_24D983960(v98, 0, v99, 0);
      uint64_t v101 = v98;
      uint64_t v93 = v112;
      uint64_t v80 = (void (*)(char *, uint64_t))v138;
      ((void (*)(uint64_t, uint64_t))v138)(v101, v112);
      sub_24D85246C(v128, v100);
      swift_release();
      uint64_t v92 = v136;
    }
    else
    {
      v110(v137, (uint64_t)v92, v93);
      sub_24DCC9D48();
      sub_24DCC9D08();
      uint64_t v80 = (void (*)(char *, uint64_t))v138;
    }
    v80(v92, v93);
    uint64_t v79 = v133;
    uint64_t v58 = TupleTypeMetadata2;
  }
  unint64_t v87 = *(void *)&v116[8 * v88];
  if (v87)
  {
    v86 += 2;
LABEL_30:
    unint64_t v77 = (v87 - 1) & v87;
    unint64_t v83 = __clz(__rbit64(v87)) + (v86 << 6);
    int64_t v73 = v86;
LABEL_26:
    uint64_t v84 = v129;
    v110(v142, *(void *)(v129 + 48) + v83 * v108, v112);
    uint64_t v81 = v142;
    uint64_t v85 = 0;
    v142[*(int *)(v58 + 48)] = *(unsigned char *)(*(void *)(v84 + 56) + v83);
    goto LABEL_39;
  }
  while (1)
  {
    int64_t v86 = v88 + 1;
    if (__OFADD__(v88, 1)) {
      break;
    }
    if (v86 >= v118)
    {
      unint64_t v77 = 0;
      uint64_t v85 = 1;
      int64_t v73 = v114;
      goto LABEL_39;
    }
    unint64_t v87 = *(void *)&v116[8 * v86];
    ++v88;
    if (v87) {
      goto LABEL_30;
    }
  }
LABEL_62:
  __break(1u);
}

uint64_t type metadata accessor for Maintenance.ResolveItemEvictability()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D726CC4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D726CFC()
{
  return 0x800000;
}

uint64_t sub_24D726D0C(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_24D726D40(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_24D726D4C(uint64_t a1)
{
  return sub_24D726D98(a1);
}

uint64_t sub_24D726D98(uint64_t a1)
{
  sub_24D433858(a1, (uint64_t)v4);
  uint64_t v2 = sub_24D91B580(v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t sub_24D726DF8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Maintenance.InheritedContentPolicyContinuation()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D726E20()
{
  return 0xD000000000000020;
}

uint64_t sub_24D726E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  void (*v38)(void *__return_ptr, unsigned char *);
  unsigned char *v39;
  void (*v40)(unsigned char *, uint64_t);
  uint64_t v41;
  unint64_t v42;
  void (*v43)(unsigned char *, unint64_t, uint64_t);
  unsigned char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int *TupleTypeMetadata;
  uint64_t v52;
  unsigned char *v53;
  void *v54;
  uint64_t v55;
  uint64_t result;
  void **v57;
  char v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  ValueMetadata *v66;
  unsigned char *v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  unsigned char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned char v77[12];
  BOOL v78;
  uint64_t v79;
  unint64_t v80;
  void (**v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (**v88)(uint64_t, void, uint64_t, uint64_t);
  void (**v89)(uint64_t, uint64_t);
  uint64_t v90;
  unsigned char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void (*v95)(void *__return_ptr, unsigned char *);
  void (**v96)(unsigned char *, unsigned char *, uint64_t);
  void (**v97)(unsigned char *, uint64_t);
  uint64_t v98;
  uint64_t AssociatedTypeWitness;
  unsigned char *v100;
  unsigned char *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  ValueMetadata *v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  unsigned char *v109;
  unsigned char *v110;
  uint64_t (*v111)(uint64_t, void, void, void);
  uint64_t v112;
  void **v113;
  unsigned char *v114;
  uint64_t v115;
  uint64_t v116;
  void (**v117)(unsigned char *, uint64_t *, uint64_t);
  unsigned char *v118;
  uint64_t v119;
  uint64_t v120;
  ValueMetadata *v121;
  uint64_t v122;
  uint64_t v123;
  void v124[32];

  uint64_t v111 = a4;
  uint64_t v112 = a5;
  v116 = a3;
  uint64_t v103 = (void *)*v5;
  uint64_t v8 = v103;
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v92 = *(void *)(v9 - 8);
  uint64_t v93 = v9;
  MEMORY[0x270FA5388](v9);
  int v91 = &v77[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = (ValueMetadata *)v103[77];
  uint64_t v12 = v103[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v90 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v100 = &v77[-v13];
  id v102 = type metadata accessor for SnapshotMutation();
  uint64_t v14 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v101 = &v77[-v15];
  uint64_t v104 = v12;
  uint64_t v105 = v11;
  uint64_t v16 = type metadata accessor for SnapshotItem();
  uint64_t v17 = sub_24DCCA3F8();
  uint64_t v108 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v109 = &v77[-v19];
  uint64_t v115 = *(void *)(v16 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  int64_t v118 = &v77[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  int64_t v114 = &v77[-v23];
  unint64_t v87 = v24;
  MEMORY[0x270FA5388](v22);
  uint64_t v110 = &v77[-v25];
  uint64_t v113 = (void **)a1;
  uint64_t v26 = *(void *)(a1 + 32);
  uint64_t v27 = (char *)v5 + v8[72];
  uint64_t v28 = (*(uint64_t (**)(char *))(*(void *)v26 + 336))(v27);
  BOOL v29 = (unint64_t)(v28 - 501) < 2 || v28 == 1003;
  uint64_t v30 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v26 + 472))(v27, a2);
  uint64_t v32 = v31;
  unsigned __int8 v78 = v29;
  uint64_t v33 = MEMORY[0x253327DC0](v30, v16);
  unint64_t v83 = v26;
  uint64_t v79 = v32;
  if (!v33)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    if (v32)
    {
      int v36 = 0;
      uint64_t v57 = v113;
      goto LABEL_19;
    }
    uint64_t v58 = 1;
    uint64_t v57 = v113;
LABEL_23:
    (*(void (**)(uint64_t, uint64_t, void, uint64_t))(*v57[3] + 160))(66, 0x800000, 0, 1);
    uint64_t v60 = MEMORY[0x253327D80]();
    uint64_t v61 = swift_bridgeObjectRelease();
    if (v60 <= 0)
    {
      ((void (*)(uint64_t))(*v57)[71])(v61);
      if (v58) {
        return v111(0, 0, 0, 0);
      }
LABEL_33:
      uint64_t v76 = swift_retain();
      v111(v76, 0, 0, 0);
      return swift_release_n();
    }
    goto LABEL_24;
  }
  uint64_t v34 = v14;
  uint64_t v35 = 0;
  int v36 = 0;
  uint64_t v37 = *(void **)v26;
  long long v117 = (void (**)(unsigned char *, uint64_t *, uint64_t))(v115 + 16);
  double v96 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v115 + 32);
  v37 += 33;
  id v38 = (void (*)(void *__return_ptr, unsigned char *))*v37;
  v94 = v37;
  double v95 = v38;
  int64_t v88 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v115 + 56);
  uint64_t v89 = (void (**)(uint64_t, uint64_t))(v108 + 8);
  double v97 = (void (**)(unsigned char *, uint64_t))(v115 + 8);
  uint64_t v98 = v30;
  int64_t v86 = (v115 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v80 = 0x800000024DD053B0;
  uint64_t v81 = (void (**)(uint64_t, uint64_t))(v34 + 8);
  id v39 = v114;
  unint64_t v82 = v17;
  do
  {
    uint64_t v32 = sub_24DCC9CB8();
    sub_24DCC9C68();
    uint64_t v107 = v36;
    uint64_t v108 = v35;
    if (v32)
    {
      uint64_t v42 = v30
          + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))
          + *(void *)(v115 + 72) * v35;
      int v43 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v115 + 16);
      int v44 = v110;
      v43(v110, v42, v16);
      uint64_t v45 = v35 + 1;
      if (__OFADD__(v35, 1)) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t result = sub_24DCCA778();
      int v44 = v110;
      if (v87 != 8) {
        goto LABEL_37;
      }
      uint64_t v32 = result;
      uint64_t v119 = result;
      int v43 = (void (*)(unsigned char *, unint64_t, uint64_t))*v117;
      (*v117)(v110, &v119, v16);
      swift_unknownObjectRelease();
      uint64_t v45 = v108 + 1;
      if (__OFADD__(v108, 1))
      {
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    uint64_t v106 = v45;
    (*v96)(v39, v44, v16);
    v95(v124, v39);
    sub_24D733474((uint64_t)v124, (uint64_t)&v39[*(int *)(v16 + 52)]);
    id v46 = (uint64_t)v118;
    v43(v118, (unint64_t)v39, v16);
    uint64_t v123 = 2;
    uint64_t v47 = (uint64_t)v109;
    v43(v109, (unint64_t)v39, v16);
    (*v88)(v47, 0, 1, v16);
    uint64_t v48 = sub_24DBCC7C4(v47, v46, (char *)&v123, v113, v116, 0);
    (*v89)(v47, v17);
    if ((v123 & 0x400000000000000) != 0)
    {
      uint64_t v49 = v103[76];
      uint64_t v50 = v103[78];
      uint64_t v119 = v104;
      uint64_t v120 = v49;
      uint64_t v121 = v105;
      uint64_t v122 = v50;
      uint64_t v85 = type metadata accessor for JobResult();
      MEMORY[0x270FA5388](v85);
      strcpy(&v77[-32], "from to  reason ");
      uint64_t v119 = v16;
      uint64_t v120 = v16;
      uint64_t v121 = &type metadata for Fields;
      uint64_t v122 = MEMORY[0x263F8D310];
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v52 = (uint64_t)v101;
      uint64_t v53 = &v101[TupleTypeMetadata[12]];
      uint64_t v84 = TupleTypeMetadata[16];
      uint64_t v54 = &v101[TupleTypeMetadata[20]];
      id v39 = v114;
      v43(v101, (unint64_t)v114, v16);
      v43(v53, (unint64_t)v118, v16);
      *(void *)(v52 + v84) = 0x400000000000000;
      char *v54 = 0xD000000000000018;
      v54[1] = v80;
      uint64_t v55 = v102;
      swift_storeEnumTagMultiPayload();
      sub_24D9075B0(v116, v52);
      uint64_t v17 = v82;
      (*v81)(v52, v55);
      uint64_t v40 = *v97;
      (*v97)(v118, v16);
    }
    else
    {
      uint64_t v40 = *v97;
      (*v97)(v118, v16);
      id v39 = v114;
    }
    int v36 = v48 | v107;
    v40(v39, v16);
    uint64_t v30 = v98;
    uint64_t v41 = MEMORY[0x253327DC0](v98, v16);
    uint64_t v35 = v108 + 1;
  }
  while (v106 != v41);
  swift_bridgeObjectRelease();
  uint64_t v57 = v113;
  if (!v79)
  {
    uint64_t v58 = 1;
    if (v36)
    {
LABEL_24:
      uint64_t v59 = 0;
      goto LABEL_25;
    }
    goto LABEL_23;
  }
LABEL_19:
  uint64_t v58 = 0;
  uint64_t v59 = v78;
  if (((v78 | v36) & 1) == 0) {
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v62 = v116;
  char v63 = v104;
  uint64_t v64 = v103[76];
  int v65 = v103[78];
  uint64_t v119 = v104;
  uint64_t v120 = v64;
  id v66 = v105;
  uint64_t v121 = v105;
  uint64_t v122 = v65;
  type metadata accessor for JobResult();
  uint64_t v119 = v63;
  uint64_t v120 = v64;
  uint64_t v121 = v66;
  uint64_t v122 = v65;
  type metadata accessor for Maintenance.PaceRefreshInheritedContentPolicy();
  sub_24DBB275C();
  uint64_t v67 = v91;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  char v69 = v68;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v92 + 8))(v67, v93);
  uint64_t v70 = v69 * 1000000000.0;
  if ((~COERCE__INT64(v69 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v70 <= -9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v70 < 9.22337204e18)
  {
    uint64_t v71 = (uint64_t)v70;
    swift_allocObject();
    double v72 = v100;
    sub_24D983960((uint64_t)v100, 0, v71, 0);
    (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v72, AssociatedTypeWitness);
    int64_t v73 = sub_24D8F94C4(0x1000000);
    swift_retain();
    swift_release();
    sub_24D85246C(v62, v73);
    swift_release();
    if (v58) {
      return v111(0, 0, 0, 0);
    }
    if (v59)
    {
      uint64_t v119 = v104;
      uint64_t v120 = v64;
      uint64_t v121 = v105;
      uint64_t v122 = v65;
      type metadata accessor for Maintenance.InheritedContentPolicyContinuation();
      uint64_t v74 = *(void *)(v79 + 16);
      uint64_t v75 = swift_allocObject();
      *(void *)(v75 + 16) = v74;
      swift_retain();
      v111(v75, 0, 0, 0);
      swift_release_n();
      return swift_release();
    }
    goto LABEL_33;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Maintenance.RefreshInheritedContentPolicy()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D727AE0()
{
  return 0xD000000000000025;
}

uint64_t sub_24D727AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void, void, void), uint64_t a5)
{
  uint64_t v9 = *(void *)(*(void *)v5 + 608);
  uint64_t v10 = *(void *)(*(void *)v5 + 616);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v54 = *(void *)(*(void *)v5 + 600);
  uint64_t v55 = v9;
  uint64_t v49 = v9;
  uint64_t v56 = v10;
  uint64_t v57 = v11;
  uint64_t v47 = v11;
  uint64_t v46 = type metadata accessor for PersistenceTrigger();
  uint64_t v12 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v45 = (char *)&v36 - v13;
  uint64_t v48 = v10;
  uint64_t v50 = v54;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v51 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v39 = *(void *)(v51 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v52 = a1;
  uint64_t v17 = *(void *)(a1 + 24);
  id v18 = objc_msgSend(self, sel_defaultStore);
  uint64_t v19 = (char *)objc_msgSend(v18, sel_speculativeRefreshInheritedContentPolicyMaximumJobs);

  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, char *, void))(*(void *)v17 + 152))(1, 66, v19, 0);
  if (result >= (uint64_t)v19) {
    return a4(0, 0, 0, 0);
  }
  uint64_t v38 = result;
  if (__OFSUB__(v19, result))
  {
    __break(1u);
LABEL_21:
    __break(1u);
  }
  else
  {
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, void, char *))(*(void *)v17 + 160))(66, 0x800000, 0, &v19[-result]);
    uint64_t v36 = a5;
    uint64_t v37 = a4;
    uint64_t v22 = swift_bridgeObjectRetain();
    if (MEMORY[0x253327DC0](v22, AssociatedTypeWitness))
    {
      uint64_t v23 = 0;
      uint64_t v24 = *(void (**)(char *))(*(void *)v52 + 312);
      uint64_t v42 = *(void *)v52 + 312;
      int v43 = v24;
      int v44 = (void (**)(char *, uint64_t *, uint64_t))(v51 + 16);
      uint64_t v40 = (void (**)(char *, uint64_t))(v12 + 8);
      uint64_t v41 = (void (**)(char *, char *, uint64_t))(v51 + 32);
      do
      {
        char v25 = sub_24DCC9CB8();
        sub_24DCC9C68();
        if (v25)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v16, v21+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v23, AssociatedTypeWitness);
          uint64_t v26 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t result = sub_24DCCA778();
          if (v39 != 8) {
            goto LABEL_21;
          }
          uint64_t v54 = result;
          (*v44)(v16, &v54, AssociatedTypeWitness);
          swift_unknownObjectRelease();
          uint64_t v26 = v23 + 1;
          if (__OFADD__(v23, 1))
          {
LABEL_12:
            __break(1u);
            return a4(0, 0, 0, 0);
          }
        }
        uint64_t v53 = v26;
        uint64_t v27 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v29 = swift_getAssociatedConformanceWitness();
        uint64_t v54 = AssociatedTypeWitness;
        uint64_t v55 = v27;
        uint64_t v56 = AssociatedConformanceWitness;
        uint64_t v57 = v29;
        type metadata accessor for ReconciliationID();
        a4 = (uint64_t (*)(void, void, void, void))*(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v30 = v45;
        (*v41)(v45, v16, AssociatedTypeWitness);
        swift_storeEnumTagMultiPayload();
        *((unsigned char *)a4 + (void)v30) = 66;
        uint64_t v31 = v46;
        swift_storeEnumTagMultiPayload();
        v43(v30);
        (*v40)(v30, v31);
        uint64_t v32 = MEMORY[0x253327DC0](v21, AssociatedTypeWitness);
        ++v23;
      }
      while (v53 != v32);
    }
    swift_bridgeObjectRelease();
    if (v38)
    {
      swift_bridgeObjectRelease();
      return v37(0, 0, 0, 0);
    }
    else
    {
      uint64_t v33 = MEMORY[0x253327D80](v21, AssociatedTypeWitness);
      uint64_t v34 = swift_bridgeObjectRelease();
      uint64_t v35 = v37;
      if (!v33) {
        (*(void (**)(uint64_t))(*(void *)v52 + 568))(v34);
      }
      return v35(0, 0, 0, 0);
    }
  }
  return result;
}

uint64_t type metadata accessor for Maintenance.PaceRefreshInheritedContentPolicy()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72812C()
{
  return 0xD000000000000012;
}

uint64_t sub_24D728148(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v41 = *v5;
  uint64_t v42 = a3;
  uint64_t v10 = *(void *)(v41 + 616);
  int v43 = v5;
  uint64_t v11 = *(void *)(v41 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v34 - v14;
  if (a2
    && (type metadata accessor for MaintenanceContinuation(), (uint64_t v16 = swift_dynamicCastClass()) != 0)
    && *(unsigned char *)(v16 + 24) != 1)
  {
    uint64_t v17 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 32) + 600))(v17);
  uint64_t v20 = v19;
  int v39 = v21;
  if (MEMORY[0x253327DC0](v18, AssociatedTypeWitness))
  {
    uint64_t v35 = v13;
    uint64_t v36 = v20;
    uint64_t v37 = a5;
    uint64_t v38 = a4;
    uint64_t v22 = *(void *)(v41 + 608);
    uint64_t v23 = *(void *)(v41 + 624);
    uint64_t v45 = v11;
    uint64_t v46 = v22;
    uint64_t v47 = v10;
    uint64_t v48 = v23;
    uint64_t v40 = type metadata accessor for JobResult();
    uint64_t v45 = v11;
    uint64_t v46 = v22;
    uint64_t v47 = v10;
    uint64_t v48 = v23;
    type metadata accessor for Maintenance.RefreshInheritedContentPolicy();
    uint64_t v24 = 0;
    uint64_t v41 = v44 + 16;
    char v25 = (void (**)(char *, uint64_t))(v44 + 8);
    while (1)
    {
      char v26 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v26)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v15, v18+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v24, AssociatedTypeWitness);
        uint64_t v27 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v35 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v45 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))v41)(v15, &v45, AssociatedTypeWitness);
        swift_unknownObjectRelease();
        uint64_t v27 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_14:
          __break(1u);
LABEL_15:
          swift_bridgeObjectRelease();
          a4 = v38;
          uint64_t v20 = v36;
          if (v39) {
            return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
          }
LABEL_16:
          type metadata accessor for MaintenanceContinuation();
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 16) = v20;
          *(unsigned char *)(v33 + 24) = 0;
          *(void *)(v33 + 32) = 0;
          *(unsigned char *)(v33 + 40) = 1;
          a4();
          return swift_release();
        }
      }
      uint64_t v28 = v43[15];
      uint64_t v29 = v43[16];
      uint64_t v30 = v43[17];
      swift_allocObject();
      uint64_t v31 = sub_24D983960((uint64_t)v15, v28, v29, v30);
      (*v25)(v15, AssociatedTypeWitness);
      sub_24D85246C(v42, v31);
      swift_release();
      ++v24;
      if (v27 == MEMORY[0x253327DC0](v18, AssociatedTypeWitness)) {
        goto LABEL_15;
      }
    }
  }
  swift_bridgeObjectRelease();
  if ((v39 & 1) == 0) {
    goto LABEL_16;
  }
  return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
}

uint64_t type metadata accessor for Maintenance.FixContentPolicyInNonMaterializedFolders()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D7285B0()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_24D7285CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v56 = a5;
  uint64_t v57 = a4;
  uint64_t v73 = a3;
  uint64_t v8 = *v5;
  uint64_t v9 = *(void *)(*v5 + 616);
  uint64_t v10 = *(void *)(*v5 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v78 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v69 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v79 = (char *)&v53 - v14;
  uint64_t v15 = *(void *)(v8 + 624);
  uint64_t v74 = v5;
  uint64_t v16 = *(void *)(v8 + 608);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v71 = v10;
  uint64_t v72 = v9;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v67 = v16;
  uint64_t v68 = v15;
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v81 = AssociatedTypeWitness;
  uint64_t v82 = v17;
  uint64_t v83 = AssociatedConformanceWitness;
  uint64_t v84 = v19;
  uint64_t v20 = type metadata accessor for ReconciliationID();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v80 = (char *)&v53 - v25;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v26 = swift_dynamicCastClass();
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v26 = *(void *)(v26 + 16);
      uint64_t v28 = *(unsigned __int8 *)(v27 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v26 = 0;
  }
  uint64_t v28 = 1;
LABEL_6:
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 320))(v26, v28);
  int v54 = v30;
  uint64_t v53 = v31;
  if (MEMORY[0x253327DC0](v29, v20))
  {
    uint64_t v32 = 0;
    uint64_t v33 = (void (**)(char *, uint64_t *, uint64_t))(v21 + 16);
    uint64_t v34 = (void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v61 = (void (**)(char *, char *, uint64_t))(v78 + 32);
    uint64_t v60 = (void (**)(char *, char *, uint64_t))(v78 + 16);
    uint64_t v59 = (void (**)(uint64_t, uint64_t))(v78 + 8);
    uint64_t v58 = (void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v65 = v20;
    uint64_t v66 = v21;
    uint64_t v64 = v29;
    char v63 = (void (**)(char *, uint64_t *, uint64_t))(v21 + 16);
    uint64_t v62 = (void (**)(char *, char *, uint64_t))(v21 + 32);
    do
    {
      char v49 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v49)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v80, v29+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v32, v20);
        uint64_t v50 = v32 + 1;
        if (__OFADD__(v32, 1)) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v55 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v81 = result;
        (*v33)(v80, &v81, v20);
        swift_unknownObjectRelease();
        uint64_t v50 = v32 + 1;
        if (__OFADD__(v32, 1))
        {
LABEL_17:
          __break(1u);
          break;
        }
      }
      (*v34)(v24, v80, v20);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*v58)(v24, v20);
      }
      else
      {
        uint64_t v35 = v79;
        uint64_t v36 = v70;
        (*v61)(v79, v24, v70);
        uint64_t v37 = (uint64_t)v69;
        (*v60)(v69, v35, v36);
        uint64_t v38 = v74[15];
        uint64_t v39 = v74[17];
        uint64_t v76 = v74[16];
        uint64_t v77 = v38;
        uint64_t v75 = v39 | 0x80000000;
        uint64_t v40 = v71;
        uint64_t v42 = v67;
        uint64_t v41 = v68;
        uint64_t v81 = v71;
        uint64_t v82 = v67;
        int v43 = v24;
        uint64_t v44 = v72;
        uint64_t v83 = v72;
        uint64_t v84 = v68;
        uint64_t v78 = type metadata accessor for JobResult();
        uint64_t v81 = v40;
        uint64_t v82 = v42;
        uint64_t v20 = v65;
        uint64_t v83 = v44;
        uint64_t v84 = v41;
        uint64_t v24 = v43;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v45 = sub_24DC09730(v37, v77, v76, v75);
        uint64_t v46 = *v59;
        uint64_t v47 = v37;
        uint64_t v33 = v63;
        (*v59)(v47, v36);
        sub_24D85246C(v73, v45);
        uint64_t v29 = v64;
        swift_release();
        uint64_t v48 = v36;
        uint64_t v34 = v62;
        v46((uint64_t)v79, v48);
        uint64_t v21 = v66;
      }
      ++v32;
    }
    while (v50 != MEMORY[0x253327DC0](v29, v20));
  }
  swift_bridgeObjectRelease();
  if (v54) {
    return ((uint64_t (*)(void, void, void, void))v57)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = v53;
  *(unsigned char *)(v52 + 24) = 0;
  *(void *)(v52 + 32) = 0;
  *(unsigned char *)(v52 + 40) = 1;
  v57();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RescanParentDeletedChildren()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D728C94()
{
  return 0xD000000000000022;
}

uint64_t sub_24D728CB0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v48 = a4;
  uint64_t v55 = a3;
  uint64_t v52 = a1;
  uint64_t v8 = *v5;
  uint64_t v9 = *(void *)(*v5 + 608);
  uint64_t v10 = *(void *)(*v5 + 616);
  uint64_t v11 = *(void *)(*v5 + 624);
  uint64_t v62 = *(void *)(*v5 + 600);
  uint64_t v63 = v9;
  uint64_t v56 = v11;
  uint64_t v57 = v9;
  uint64_t v64 = v10;
  uint64_t v65 = v11;
  uint64_t v54 = type metadata accessor for ReconciliationMutation();
  uint64_t v50 = *(void (***)(char *, uint64_t))(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v58 = v10;
  uint64_t v59 = v62;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v60 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v61 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v42 - v17;
  uint64_t v19 = sub_24DCCA3F8();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  char v49 = (char *)&v42 - v21;
  if (a2 && (type metadata accessor for MaintenanceContinuation(), (uint64_t v22 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v51 = *(void (***)(char *, char *, uint64_t))(v22 + 16);
    uint64_t v23 = *(unsigned __int8 *)(v22 + 24);
  }
  else
  {
    uint64_t v51 = 0;
    uint64_t v23 = 1;
  }
  uint64_t v24 = (uint64_t)v5 + *(void *)(v8 + 576);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v53 = AssociatedConformanceWitness;
  char v26 = sub_24DCC9798();
  uint64_t v27 = v60;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v18, AssociatedTypeWitness);
  if (v26)
  {
    uint64_t v28 = 1;
    uint64_t v29 = v49;
  }
  else
  {
    uint64_t v29 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v49, v24, AssociatedTypeWitness);
    uint64_t v28 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, v28, 1, AssociatedTypeWitness);
  uint64_t v30 = (*(uint64_t (**)(char *, void, uint64_t))(**(void **)(v52 + 16) + 328))(v29, v51, v23);
  int v46 = v31;
  uint64_t v42 = v32;
  uint64_t v43 = v20;
  uint64_t v44 = v19;
  uint64_t v45 = a5;
  if (MEMORY[0x253327DC0](v30, AssociatedTypeWitness))
  {
    uint64_t v62 = v59;
    uint64_t v63 = v57;
    uint64_t v64 = v58;
    uint64_t v65 = v56;
    type metadata accessor for JobResult();
    uint64_t v33 = 0;
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v60 + 32);
    uint64_t v52 = v60 + 16;
    ++v50;
    do
    {
      char v34 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v34)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v60 + 16))(v61, v30+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v33, AssociatedTypeWitness);
        uint64_t v35 = v33 + 1;
        if (__OFADD__(v33, 1)) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v47 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v62 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))v52)(v61, &v62, AssociatedTypeWitness);
        swift_unknownObjectRelease();
        uint64_t v35 = v33 + 1;
        if (__OFADD__(v33, 1))
        {
LABEL_17:
          __break(1u);
          break;
        }
      }
      uint64_t v36 = swift_getAssociatedTypeWitness();
      uint64_t v37 = swift_getAssociatedConformanceWitness();
      uint64_t v62 = AssociatedTypeWitness;
      uint64_t v63 = v36;
      uint64_t v64 = v53;
      uint64_t v65 = v37;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v38 = &v13[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*v51)(v13, v61, AssociatedTypeWitness);
      swift_storeEnumTagMultiPayload();
      *uint64_t v38 = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = v54;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v55, (uint64_t)v13);
      (*v50)(v13, v39);
      ++v33;
    }
    while (v35 != MEMORY[0x253327DC0](v30, AssociatedTypeWitness));
  }
  swift_bridgeObjectRelease();
  if (v46)
  {
    ((void (*)(void, void, void, void))v48)(0, 0, 0, 0);
  }
  else
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v42;
    *(unsigned char *)(v41 + 24) = 0;
    *(void *)(v41 + 32) = 0;
    *(unsigned char *)(v41 + 40) = 1;
    v48();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v49, v44);
}

uint64_t type metadata accessor for Maintenance.UnmarkParentDeletedMergeSource()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D729430()
{
  return 0xD000000000000016;
}

uint64_t sub_24D72944C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v52 = a5;
  uint64_t v53 = a4;
  uint64_t v66 = a3;
  uint64_t v8 = *v5;
  uint64_t v9 = *(void *)(*v5 + 616);
  uint64_t v10 = *(void *)(*v5 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v68 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v63 = (char *)&v48 - v12;
  uint64_t v13 = *(void *)(v8 + 624);
  uint64_t v67 = v5;
  uint64_t v14 = *(void *)(v8 + 608);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v64 = v10;
  uint64_t v65 = v9;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v61 = v14;
  uint64_t v62 = v13;
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v69 = AssociatedTypeWitness;
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v71 = v15;
  uint64_t v72 = AssociatedConformanceWitness;
  uint64_t v73 = v17;
  uint64_t v18 = type metadata accessor for ReconciliationID();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v48 - v23;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v25 = swift_dynamicCastClass();
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v25 = *(void *)(v25 + 16);
      uint64_t v27 = *(unsigned __int8 *)(v26 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v25 = 0;
  }
  uint64_t v27 = 1;
LABEL_6:
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 336))(v25, v27);
  int v50 = v29;
  uint64_t v49 = v30;
  if (MEMORY[0x253327DC0](v28, v18))
  {
    uint64_t v31 = 0;
    uint64_t v32 = (void (**)(char *, uint64_t *, uint64_t))(v19 + 16);
    uint64_t v33 = (void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v55 = (void (**)(uint64_t, uint64_t))(v68 + 8);
    uint64_t v56 = (void (**)(char *, char *, uint64_t))(v68 + 32);
    uint64_t v54 = (void (**)(char *, uint64_t))(v19 + 8);
    uint64_t v59 = v24;
    uint64_t v60 = v22;
    uint64_t v57 = (void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v58 = v18;
    do
    {
      char v44 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v44)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v24, v28+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v31, v18);
        uint64_t v45 = v31 + 1;
        if (__OFADD__(v31, 1)) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v51 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v70 = result;
        (*v32)(v24, &v70, v18);
        swift_unknownObjectRelease();
        uint64_t v45 = v31 + 1;
        if (__OFADD__(v31, 1))
        {
LABEL_17:
          __break(1u);
          break;
        }
      }
      (*v33)(v22, v24, v18);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*v54)(v22, v18);
      }
      else
      {
        uint64_t v34 = (uint64_t)v63;
        (*v56)(v63, v22, v69);
        uint64_t v36 = v64;
        uint64_t v35 = v65;
        uint64_t v37 = v32;
        uint64_t v38 = v19;
        uint64_t v39 = v61;
        uint64_t v70 = v64;
        uint64_t v71 = v61;
        uint64_t v40 = v28;
        uint64_t v41 = v62;
        uint64_t v72 = v65;
        uint64_t v73 = v62;
        uint64_t v68 = type metadata accessor for JobResult();
        uint64_t v70 = v36;
        uint64_t v71 = v39;
        uint64_t v19 = v38;
        uint64_t v32 = v37;
        uint64_t v18 = v58;
        uint64_t v72 = v35;
        uint64_t v73 = v41;
        uint64_t v28 = v40;
        type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v42 = sub_24DC0963C(v34, v67[15], v67[16], v67[17]);
        sub_24D85246C(v66, v42);
        uint64_t v33 = v57;
        swift_release();
        uint64_t v43 = v34;
        uint64_t v24 = v59;
        uint64_t v22 = v60;
        (*v55)(v43, v69);
      }
      ++v31;
    }
    while (v45 != MEMORY[0x253327DC0](v28, v18));
  }
  swift_bridgeObjectRelease();
  if (v50) {
    return ((uint64_t (*)(void, void, void, void))v53)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v49;
  *(unsigned char *)(v47 + 24) = 0;
  *(void *)(v47 + 32) = 0;
  *(unsigned char *)(v47 + 40) = 1;
  v53();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.UnblockItemRejection()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D729A44()
{
  return 0xD000000000000019;
}

void sub_24D729A60(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, void *), uint64_t a5)
{
  uint64_t v75 = a5;
  uint64_t v86 = a3;
  uint64_t v9 = *(void *)(*(void *)v5 + 608);
  uint64_t v10 = *(void *)(*(void *)v5 + 616);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v95 = *(void *)(*(void *)v5 + 600);
  uint64_t v100 = v95;
  uint64_t v101 = v9;
  uint64_t v93 = v10;
  uint64_t v102 = v10;
  uint64_t v103 = v11;
  uint64_t v82 = type metadata accessor for ReconciliationMutation();
  uint64_t v97 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v81 = (char *)&v72 - v12;
  uint64_t v94 = v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v72 - v15;
  uint64_t v98 = v17;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v89 = sub_24DCCA3F8();
  uint64_t v19 = *(void *)(v89 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v89);
  int v91 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  int v90 = (char *)&v72 - v22;
  if (!a2)
  {
    uint64_t v23 = 0;
    goto LABEL_5;
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v23 = swift_dynamicCastClass();
  if (!v23)
  {
LABEL_5:
    uint64_t v25 = 1;
    goto LABEL_6;
  }
  uint64_t v24 = v23;
  uint64_t v23 = *(void *)(v23 + 16);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 24);
LABEL_6:
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 344))(v23, v25);
  int v73 = v28;
  uint64_t v72 = v29;
  uint64_t v78 = 0;
  uint64_t v76 = a1;
  uint64_t v74 = a4;
  uint64_t v30 = 0;
  uint64_t v96 = TupleTypeMetadata3 - 8;
  uint64_t v85 = (void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v83 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v84 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v80 = (void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v79 = (void (**)(uint64_t, uint64_t))(v97 + 8);
  uint64_t v87 = v26;
  int64_t v88 = v16;
  uint64_t v32 = v90;
  uint64_t v31 = v91;
  uint64_t v33 = v26;
  while (1)
  {
    if (v30 == MEMORY[0x253327DC0](v33, TupleTypeMetadata3))
    {
      uint64_t v97 = v30;
      uint64_t v38 = *(void *)(TupleTypeMetadata3 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v31, 1, 1, TupleTypeMetadata3);
      goto LABEL_15;
    }
    char v39 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v39)
    {
      uint64_t v40 = *(void *)(TupleTypeMetadata3 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v31, v33+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v30, TupleTypeMetadata3);
      BOOL v41 = __OFADD__(v30, 1);
      uint64_t v42 = v30 + 1;
      if (v41) {
        break;
      }
      goto LABEL_14;
    }
    uint64_t v97 = v30;
    uint64_t v69 = sub_24DCCA778();
    uint64_t v40 = *(void *)(TupleTypeMetadata3 - 8);
    if (*(void *)(v40 + 64) != 8)
    {
      __break(1u);
      return;
    }
    uint64_t v100 = v69;
    (*(void (**)(char *, uint64_t *, uint64_t))(v40 + 16))(v31, &v100, TupleTypeMetadata3);
    swift_unknownObjectRelease();
    uint64_t v42 = v97 + 1;
    if (__OFADD__(v97, 1)) {
      break;
    }
LABEL_14:
    uint64_t v97 = v42;
    uint64_t v38 = v40;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v31, 0, 1, TupleTypeMetadata3);
LABEL_15:
    (*v85)(v32, v31, v89);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v32, 1, TupleTypeMetadata3) == 1) {
      goto LABEL_33;
    }
    int v43 = v32[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v44 = *(void *)&v32[*(int *)(TupleTypeMetadata3 + 64)];
    (*v83)(v16, v32, v98);
    if (v43) {
      BOOL v45 = v43 == 2;
    }
    else {
      BOOL v45 = 1;
    }
    if (v45)
    {
      uint64_t v92 = v44;
LABEL_22:
      uint64_t v100 = v95;
      uint64_t v101 = v94;
      uint64_t v102 = v93;
      uint64_t v103 = v11;
      type metadata accessor for JobResult();
      uint64_t v46 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v48 = v98;
      uint64_t v49 = swift_getAssociatedConformanceWitness();
      uint64_t v100 = v46;
      uint64_t v101 = v48;
      uint64_t v102 = AssociatedConformanceWitness;
      uint64_t v103 = v49;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v51 = v16;
      uint64_t v52 = (uint64_t)v81;
      uint64_t v53 = &v81[*(int *)(TupleTypeMetadata2 + 48)];
      (*v80)(v81, v51, v48);
      swift_storeEnumTagMultiPayload();
      *uint64_t v53 = 3;
      swift_storeEnumTagMultiPayload();
      uint64_t v54 = v82;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v86, v52);
      (*v79)(v52, v54);
      LOBYTE(v44) = v92;
LABEL_27:
      if ((v44 & 4) != 0)
      {
        uint64_t v35 = v94;
        uint64_t v34 = v95;
        uint64_t v100 = v95;
        uint64_t v101 = v94;
        uint64_t v36 = v93;
        uint64_t v102 = v93;
        uint64_t v103 = v11;
        type metadata accessor for JobResult();
        uint64_t v100 = v35;
        uint64_t v101 = v34;
        uint64_t v102 = v11;
        uint64_t v103 = v36;
        type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v16 = v88;
        uint64_t v37 = sub_24DC0963C((uint64_t)v88, v77[15], v77[16], v77[17]);
        sub_24D855694(v86, v37);
        swift_release();
      }
      else
      {
        uint64_t v16 = v88;
      }
      uint64_t v32 = v90;
      uint64_t v31 = v91;
      uint64_t v33 = v87;
      goto LABEL_9;
    }
    if (v43 != 1) {
      goto LABEL_27;
    }
    uint64_t v92 = v44;
    uint64_t v55 = *(void *)(v76 + 24);
    uint64_t v56 = v11;
    uint64_t v58 = v93;
    uint64_t v57 = v94;
    uint64_t v59 = v95;
    uint64_t v100 = v94;
    uint64_t v101 = v95;
    uint64_t v102 = v56;
    uint64_t v103 = v93;
    type metadata accessor for ItemJob();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_24DA604B8(MetatypeMetadata, MetatypeMetadata);
    swift_allocObject();
    uint64_t v61 = sub_24DCC9C58();
    uint64_t v100 = v57;
    uint64_t v101 = v59;
    uint64_t v62 = v58;
    uint64_t v11 = v56;
    uint64_t v102 = v56;
    uint64_t v103 = v62;
    *uint64_t v63 = type metadata accessor for Ingestion.FetchChildrenMetadata();
    uint64_t v64 = sub_24D785484(v61);
    uint64_t v16 = v88;
    uint64_t v65 = v78;
    uint64_t v66 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v55 + 264))(v88, v64);
    if (v65)
    {
      swift_bridgeObjectRelease();
      (*v84)(v16, v98);
      swift_bridgeObjectRelease();
      uint64_t v71 = v74;
      id v27 = v65;
      v71(0, 0, 0, v65);

      return;
    }
    uint64_t v67 = v66;
    uint64_t v78 = 0;
    swift_bridgeObjectRelease();
    uint64_t v99 = v67;
    sub_24DCC9D48();
    swift_getWitnessTable();
    sub_24DCC9FD8();
    swift_bridgeObjectRelease();
    uint64_t v68 = v100;
    swift_release();
    uint64_t v32 = v90;
    uint64_t v31 = v91;
    uint64_t v33 = v87;
    if (!v68) {
      goto LABEL_22;
    }
LABEL_9:
    (*v84)(v16, v98);
    uint64_t v30 = v97;
  }
  __break(1u);
LABEL_33:
  swift_bridgeObjectRelease();
  if (v73)
  {
    v74(0, 0, 0, 0);
  }
  else
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v70 = swift_allocObject();
    *(void *)(v70 + 16) = v72;
    *(unsigned char *)(v70 + 24) = 0;
    *(void *)(v70 + 32) = 0;
    *(unsigned char *)(v70 + 40) = 1;
    ((void (*)(void))v74)();
    swift_release();
  }
}

uint64_t type metadata accessor for Maintenance.UnblockDiskImportItems()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72A524()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_24D72A540(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v6 = *(void *)(v6 + 16);
      uint64_t v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v8 = 1;
LABEL_6:
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 360))(v6, v8);
  if (v10) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  uint64_t v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(unsigned char *)(v12 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RescanPendingSetFSSide()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72A6DC()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_24D72A6F8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v6 = *(void *)(v6 + 16);
      uint64_t v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v8 = 1;
LABEL_6:
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 352))(v6, v8);
  if (v10) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  uint64_t v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(unsigned char *)(v12 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RescanPendingSetFPSide()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72A894()
{
  return 0xD000000000000035;
}

uint64_t sub_24D72A8B0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v6 = *(void *)(v6 + 16);
      uint64_t v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v8 = 1;
LABEL_6:
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 368))(v6, v8);
  if (v10) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  uint64_t v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(unsigned char *)(v12 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RescanRecTableForConflictsInGS()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72AA4C()
{
  return 0xD000000000000017;
}

uint64_t sub_24D72AA68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v40 = a5;
  BOOL v41 = a4;
  uint64_t v45 = a3;
  uint64_t v42 = a2;
  uint64_t v43 = a1;
  uint64_t v7 = *(void *)(*(void *)v5 + 608);
  uint64_t v8 = *(void *)(*(void *)v5 + 616);
  uint64_t v9 = *(void *)(*(void *)v5 + 624);
  uint64_t v51 = *(void *)(*(void *)v5 + 600);
  uint64_t v6 = v51;
  uint64_t v52 = v7;
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  uint64_t v44 = type metadata accessor for ReconciliationMutation();
  uint64_t v37 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v38 = v8;
  uint64_t v39 = v6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v47 = v9;
  uint64_t v48 = v7;
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v51 = AssociatedTypeWitness;
  uint64_t v52 = v13;
  uint64_t v53 = AssociatedConformanceWitness;
  uint64_t v54 = v15;
  uint64_t v16 = v42;
  uint64_t v17 = type metadata accessor for ReconciliationID();
  uint64_t v49 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v49 + 64);
  MEMORY[0x270FA5388](v17);
  int v50 = (char *)&v35 - v19;
  if (v16)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v20 = swift_dynamicCastClass();
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v20 = *(void *)(v20 + 16);
      uint64_t v22 = *(unsigned __int8 *)(v21 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v20 = 0;
  }
  uint64_t v22 = 1;
LABEL_6:
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v43 + 16) + 376))(v20, v22);
  LODWORD(v42) = v24;
  uint64_t v35 = v18;
  uint64_t v36 = v25;
  if (MEMORY[0x253327DC0](v23, v17))
  {
    uint64_t v51 = v39;
    uint64_t v52 = v48;
    uint64_t v53 = v38;
    uint64_t v54 = v47;
    type metadata accessor for JobResult();
    uint64_t v26 = 0;
    uint64_t v43 = v49 + 16;
    id v27 = (void (**)(char *, char *, uint64_t))(v49 + 32);
    int v28 = (void (**)(char *, uint64_t))(v37 + 8);
    do
    {
      char v29 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v29)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v50, v23+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v26, v17);
        uint64_t v30 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v35 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v51 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))v43)(v50, &v51, v17);
        swift_unknownObjectRelease();
        uint64_t v30 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
LABEL_15:
          __break(1u);
          break;
        }
      }
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v31 = &v11[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*v27)(v11, v50, v17);
      *(_OWORD *)uint64_t v31 = *(_OWORD *)(v46 + 120);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = v44;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v45, (uint64_t)v11);
      (*v28)(v11, v32);
      ++v26;
    }
    while (v30 != MEMORY[0x253327DC0](v23, v17));
  }
  swift_bridgeObjectRelease();
  if (v42) {
    return ((uint64_t (*)(void, void, void, void))v41)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v36;
  *(unsigned char *)(v34 + 24) = 0;
  *(void *)(v34 + 32) = 0;
  *(unsigned char *)(v34 + 40) = 1;
  v41();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.UnblockRemoteDeletions()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72AFB8()
{
  return 0xD00000000000001CLL;
}

void sub_24D72AFD4(void **a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, void *), uint64_t a5)
{
  uint64_t v156 = a5;
  v161 = a4;
  uint64_t v174 = a3;
  v170 = a1;
  uint64_t v7 = *v5;
  uint64_t v8 = *(void *)(*v5 + 624);
  uint64_t v9 = *(void *)(*v5 + 608);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_24DCCA3F8();
  uint64_t v12 = *(void *)(v7 + 616);
  v181 = v5;
  uint64_t v13 = *(void *)(v7 + 600);
  uint64_t v176 = swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v159 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  v158 = (char *)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v160 = (char *)&v144 - v18;
  uint64_t v149 = v19;
  MEMORY[0x270FA5388](v17);
  v171 = (char *)&v144 - v20;
  uint64_t v155 = sub_24DCC8CE8();
  uint64_t v21 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  v154 = (char *)&v144 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = v13;
  uint64_t v206 = v13;
  uint64_t v207 = v9;
  uint64_t v179 = v9;
  uint64_t v178 = v12;
  uint64_t v208 = v12;
  uint64_t v209 = v8;
  uint64_t v180 = v8;
  uint64_t v173 = type metadata accessor for ReconciliationMutation();
  uint64_t v23 = *(void *)(v173 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v173);
  v172 = (char *)&v144 - v25;
  uint64_t v200 = AssociatedTypeWitness;
  uint64_t v26 = AssociatedTypeWitness;
  uint64_t v27 = v14;
  uint64_t v152 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v24);
  uint64_t v30 = (char *)&v144 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  v169 = (char *)&v144 - v32;
  uint64_t v151 = *(void *)(v11 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  v157 = (char *)&v144 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v167 = (char *)&v144 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v197 = (char *)&v144 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v201 = (char *)&v144 - v40;
  uint64_t v150 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v39);
  v204 = (char *)&v144 - v41;
  uint64_t v205 = v11;
  uint64_t v42 = swift_getTupleTypeMetadata2();
  uint64_t v198 = *(void *)(v42 - 8);
  uint64_t v43 = *(void *)(v198 + 64);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  v196 = (char *)&v144 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v44);
  v199 = (char *)&v144 - v46;
  MEMORY[0x270FA5388](v45);
  uint64_t v48 = (char *)&v144 - v47;
  uint64_t v195 = v14;
  if (a2)
  {
    uint64_t v49 = v21;
    type metadata accessor for MaintenanceContinuation();
    uint64_t v50 = swift_dynamicCastClass();
    uint64_t v51 = v170;
    if (v50)
    {
      a2 = *(void *)(v50 + 16);
      uint64_t v52 = *(unsigned __int8 *)(v50 + 24);
      if ((*(unsigned char *)(v50 + 40) & 1) == 0 && *(void *)(v50 + 32))
      {
        uint64_t v53 = 0;
LABEL_33:
        uint64_t v103 = *(void *)(((uint64_t (*)(void))(*v51)[22])() + 16);
        swift_retain();
        swift_release();
        uint64_t v104 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(*(void *)v103 + 392))(2, 0, 2, a2, v52);
        uint64_t v106 = v105;
        int v108 = v107;
        swift_release();
        uint64_t v109 = v161;
        if (!v53)
        {
          LODWORD(v189) = v108;
          v184 = v106;
          uint64_t v110 = v23;
          v153 = v30;
          uint64_t v111 = TupleTypeMetadata2;
          uint64_t v112 = MEMORY[0x253327DC0](v104, TupleTypeMetadata2);
          uint64_t v113 = v160;
          if (!v112)
          {
LABEL_47:
            swift_bridgeObjectRelease();
            v161(0, 0, 0, 0);
            return;
          }
          int64_t v114 = 0;
          v201 = &v171[*(int *)(v111 + 48)];
          v202 = (void (**)(char *, uint64_t *, uint64_t))(v159 + 16);
          v199 = (char *)(v151 + 32);
          uint64_t v198 = v150 + 32;
          v197 = (char *)(v151 + 16);
          v196 = (char *)(v150 + 16);
          v194 = (void (**)(char *, uint64_t))(v150 + 8);
          v193 = (unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48);
          v187 = (unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 32);
          v186 = (void (**)(char *, char *, uint64_t))(v152 + 16);
          v185 = (void (**)(uint64_t, uint64_t))(v110 + 8);
          v188 = (void (**)(char *, uint64_t))(v152 + 8);
          v190 = (void (**)(char *, uint64_t))(v151 + 8);
          v191 = (void (**)(char *, uint64_t))(v159 + 8);
          v192 = (char *)v104;
          uint64_t v115 = v205;
          while (1)
          {
            char v119 = sub_24DCC9CB8();
            sub_24DCC9C68();
            if (v119)
            {
              (*(void (**)(char *, unint64_t, uint64_t))(v159 + 16))(v171, v104+ ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80))+ *(void *)(v159 + 72) * (void)v114, v111);
              uint64_t v120 = v114 + 1;
              if (__OFADD__(v114, 1)) {
                goto LABEL_46;
              }
            }
            else
            {
              uint64_t v139 = sub_24DCCA778();
              if (v149 != 8) {
                goto LABEL_57;
              }
              uint64_t v206 = v139;
              (*v202)(v171, &v206, v111);
              swift_unknownObjectRelease();
              uint64_t v120 = v114 + 1;
              if (__OFADD__(v114, 1))
              {
LABEL_46:
                __break(1u);
                goto LABEL_47;
              }
            }
            v203 = v120;
            v204 = v114;
            uint64_t v121 = &v113[*(int *)(v111 + 48)];
            uint64_t v122 = *(void (**)(char *, char *, uint64_t))v199;
            (*(void (**)(char *, char *, uint64_t))v199)(v113, v171, v115);
            (*(void (**)(char *, char *, uint64_t))v198)(v121, v201, v27);
            uint64_t v123 = v113;
            uint64_t v124 = v158;
            uint64_t v125 = &v158[*(int *)(v111 + 48)];
            v126 = *(void (**)(char *, char *, uint64_t))v197;
            (*(void (**)(char *, char *, uint64_t))v197)(v158, v123, v115);
            (*(void (**)(char *, char *, uint64_t))v196)(v125, v121, v27);
            uint64_t v127 = v167;
            v122(v167, v124, v115);
            (*v194)(v125, v27);
            uint64_t v128 = v157;
            v126(v157, v127, v115);
            uint64_t v129 = TupleTypeMetadata2;
            uint64_t v130 = v200;
            if ((*v193)(v128, 1, v200) == 1)
            {
              v116 = *v190;
              (*v190)(v127, v115);
              long long v117 = v160;
              (*v191)(v160, v129);
              v116(v128, v115);
              uint64_t v111 = v129;
              uint64_t v113 = v117;
            }
            else
            {
              v131 = v153;
              (*v187)(v153, (uint64_t)v128, v130);
              uint64_t v206 = v177;
              uint64_t v207 = v179;
              uint64_t v208 = v178;
              uint64_t v209 = v180;
              type metadata accessor for JobResult();
              uint64_t v132 = v176;
              uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
              uint64_t v134 = swift_getAssociatedConformanceWitness();
              uint64_t v206 = v132;
              uint64_t v207 = v130;
              uint64_t v208 = AssociatedConformanceWitness;
              uint64_t v209 = v134;
              type metadata accessor for ReconciliationID();
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v135 = swift_getTupleTypeMetadata2();
              uint64_t v136 = (uint64_t)v172;
              v137 = &v172[*(int *)(v135 + 48)];
              (*v186)(v172, v131, v130);
              swift_storeEnumTagMultiPayload();
              *(void *)v137 = 0;
              *(_OWORD *)(v137 + 8) = *(_OWORD *)(v181 + 15);
              swift_storeEnumTagMultiPayload();
              uint64_t v138 = v173;
              swift_storeEnumTagMultiPayload();
              sub_24D907568(v174, v136);
              (*v185)(v136, v138);
              if ((v189 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                type metadata accessor for MaintenanceContinuation();
                uint64_t v142 = swift_allocObject();
                *(void *)(v142 + 16) = v184;
                *(unsigned char *)(v142 + 24) = 0;
                *(void *)(v142 + 32) = 1;
                *(unsigned char *)(v142 + 40) = 0;
                ((void (*)(void))v161)();
                swift_release();
                (*v188)(v131, v130);
                (*v190)(v167, v205);
                (*v191)(v160, TupleTypeMetadata2);
                return;
              }
              (*v188)(v131, v130);
              (*v190)(v167, v205);
              uint64_t v113 = v160;
              uint64_t v111 = TupleTypeMetadata2;
              (*v191)(v160, TupleTypeMetadata2);
            }
            uint64_t v104 = (uint64_t)v192;
            uint64_t v118 = MEMORY[0x253327DC0](v192, v111);
            int64_t v114 = v204 + 1;
            uint64_t v27 = v195;
            if (v203 == (char *)v118) {
              goto LABEL_47;
            }
          }
        }
LABEL_52:
        id v143 = v53;
        v109(0, 0, 0, v53);

        return;
      }
    }
    else
    {
      a2 = 0;
      uint64_t v52 = 1;
    }
  }
  else
  {
    uint64_t v49 = v21;
    uint64_t v52 = 1;
    uint64_t v51 = v170;
  }
  uint64_t v148 = v43;
  uint64_t v54 = (*(uint64_t (**)(void, uint64_t, uint64_t))(*v51[2] + 384))(0, a2, v52);
  int v56 = v55;
  v175 = 0;
  uint64_t v146 = v57;
  v153 = v30;
  uint64_t v58 = MEMORY[0x253327DC0](v54, v42);
  uint64_t v144 = v23;
  int v145 = v56;
  if (!v58)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v30 = v153;
    uint64_t v51 = v170;
    if ((v145 & 1) == 0)
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v102 = swift_allocObject();
      *(void *)(v102 + 16) = v146;
      *(unsigned char *)(v102 + 24) = 0;
      *(void *)(v102 + 32) = 0;
      *(unsigned char *)(v102 + 40) = 0;
      ((void (*)(void))v161)();
      swift_release();
      return;
    }
    uint64_t v52 = 1;
    uint64_t v23 = v144;
    a2 = v146;
    uint64_t v53 = v175;
    goto LABEL_33;
  }
  v192 = &v48[*(int *)(v42 + 48)];
  v194 = (void (**)(char *, uint64_t))(v198 + 16);
  v191 = (void (**)(char *, uint64_t))(v150 + 32);
  v190 = (void (**)(char *, uint64_t))(v151 + 32);
  v189 = (void (**)(char *, char *, uint64_t))(v150 + 16);
  v188 = (void (**)(char *, uint64_t))(v151 + 16);
  v187 = (unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48);
  v166 = (void (**)(char *, char *, uint64_t))(v152 + 32);
  v165 = (void (**)(char *, char *, uint64_t))(v152 + 16);
  v164 = (void (**)(uint64_t, uint64_t))(v23 + 8);
  uint64_t v163 = v176 - 8;
  uint64_t v147 = (void (**)(char *, uint64_t))(v49 + 8);
  v162 = (void (**)(char *, uint64_t))(v152 + 8);
  v183 = (void (**)(char *, uint64_t))(v151 + 8);
  v184 = (void (**)(char *, void (**)(char *, char *, uint64_t)))(v198 + 8);
  v185 = (void (**)(uint64_t, uint64_t))(v150 + 8);
  uint64_t v59 = v205;
  uint64_t v60 = v199;
  uint64_t v61 = 0;
  v186 = (void (**)(char *, char *, uint64_t))v42;
  v182 = v48;
  v193 = (unsigned int (**)(char *, uint64_t, uint64_t))v54;
  while (1)
  {
    char v66 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v66)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v198 + 16))(v48, v54+ ((*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80))+ *(void *)(v198 + 72) * (void)v61, v42);
      uint64_t v67 = (void (**)(char *, uint64_t *, uint64_t))(v61 + 1);
      if (__OFADD__(v61, 1)) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v101 = sub_24DCCA778();
      if (v148 != 8) {
        goto LABEL_56;
      }
      uint64_t v206 = v101;
      ((void (*)(char *, uint64_t *, uint64_t))*v194)(v48, &v206, v42);
      swift_unknownObjectRelease();
      uint64_t v67 = (void (**)(char *, uint64_t *, uint64_t))(v61 + 1);
      if (__OFADD__(v61, 1))
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    v202 = v67;
    v203 = v61;
    uint64_t v68 = &v60[*(int *)(v42 + 48)];
    uint64_t v69 = *v191;
    ((void (*)(char *, char *, uint64_t))*v191)(v60, v48, v27);
    uint64_t v70 = *v190;
    ((void (*)(char *, char *, uint64_t))*v190)(v68, v192, v59);
    uint64_t v71 = v196;
    uint64_t v72 = &v196[*(int *)(v42 + 48)];
    (*v189)(v196, v60, v27);
    int v73 = *v188;
    ((void (*)(char *, char *, uint64_t))*v188)(v72, v68, v205);
    uint64_t v74 = v71;
    uint64_t v75 = v201;
    uint64_t v76 = v27;
    ((void (*)(char *, char *, uint64_t))v69)(v204, v74, v27);
    uint64_t v77 = v72;
    uint64_t v59 = v205;
    ((void (*)(char *, char *, uint64_t))v70)(v75, v77, v205);
    uint64_t v78 = v197;
    ((void (*)(char *, char *, uint64_t))v73)(v197, v75, v59);
    uint64_t v79 = v200;
    if ((*v187)(v78, 1, v200) != 1) {
      break;
    }
    uint64_t v62 = *v183;
    (*v183)(v75, v59);
    uint64_t v60 = v199;
    uint64_t v63 = v186;
    (*v184)(v199, v186);
    (*v185)((uint64_t)v204, v76);
    v62(v78, v59);
    uint64_t v27 = v76;
    uint64_t v42 = (uint64_t)v63;
    uint64_t v48 = v182;
    uint64_t v54 = (uint64_t)v193;
LABEL_11:
    uint64_t v64 = v203;
    uint64_t v65 = MEMORY[0x253327DC0](v54, v42);
    uint64_t v61 = v64 + 1;
    if (v202 == (void (**)(char *, uint64_t *, uint64_t))v65) {
      goto LABEL_30;
    }
  }
  uint64_t v80 = v169;
  (*v166)(v169, v78, v79);
  uint64_t v206 = v177;
  uint64_t v207 = v179;
  uint64_t v208 = v178;
  uint64_t v209 = v180;
  type metadata accessor for JobResult();
  uint64_t v81 = v176;
  uint64_t v82 = swift_getAssociatedConformanceWitness();
  uint64_t v83 = swift_getAssociatedConformanceWitness();
  uint64_t v206 = v81;
  uint64_t v207 = v79;
  uint64_t v208 = v82;
  uint64_t v209 = v83;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v84 = swift_getTupleTypeMetadata2();
  uint64_t v85 = (uint64_t)v172;
  uint64_t v86 = &v172[*(int *)(v84 + 48)];
  (*v165)(v172, v80, v79);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v86 = 0;
  *(_OWORD *)(v86 + 8) = *(_OWORD *)(v181 + 15);
  swift_storeEnumTagMultiPayload();
  uint64_t v87 = v173;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v174, v85);
  int64_t v88 = v204;
  (*v164)(v85, v87);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v81 - 8) + 48))(v88, 1, v81) != 1)
  {
    uint64_t v59 = v205;
    uint64_t v27 = v195;
    uint64_t v100 = v80;
    uint64_t v92 = v201;
    uint64_t v60 = v199;
    uint64_t v48 = v182;
    uint64_t v54 = (uint64_t)v193;
LABEL_25:
    (*v162)(v100, v79);
    (*v183)(v92, v59);
    uint64_t v42 = (uint64_t)v186;
    (*v184)(v60, v186);
    (*v185)((uint64_t)v88, v27);
    goto LABEL_11;
  }
  uint64_t v89 = v170;
  int v90 = v175;
  char v91 = (*(uint64_t (**)(char *))(*v170[5] + 424))(v80);
  uint64_t v27 = v195;
  uint64_t v60 = v199;
  uint64_t v54 = (uint64_t)v193;
  v175 = v90;
  if (v90)
  {
    uint64_t v141 = v204;
    uint64_t v140 = v205;
    uint64_t v92 = v201;
LABEL_51:
    (*v162)(v80, v79);
    (*v183)(v92, v140);
    (*v184)(v60, v186);
    swift_bridgeObjectRelease();
    (*v185)((uint64_t)v141, v27);
    uint64_t v109 = v161;
    uint64_t v53 = v175;
    goto LABEL_52;
  }
  uint64_t v92 = v201;
  if ((v91 & 1) == 0)
  {
    int64_t v88 = v204;
    uint64_t v59 = v205;
    uint64_t v100 = v80;
    uint64_t v48 = v182;
    goto LABEL_25;
  }
  ((void (*)(void))(*v89)[22])();
  uint64_t v206 = v179;
  uint64_t v207 = v177;
  uint64_t v208 = v180;
  uint64_t v209 = v178;
  type metadata accessor for Materialization.MaterializeParentHierarchy();
  uint64_t v93 = v80;
  uint64_t v94 = sub_24D732E04(v80, v181[15], v181[16], 0);
  uint64_t v95 = v154;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v97 = v96;
  (*v147)(v95, v155);
  double v98 = v97 * 1000000000.0;
  uint64_t v48 = v182;
  if ((~COERCE__INT64(v97 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v98 <= -9.22337204e18) {
      goto LABEL_54;
    }
    if (v98 >= 9.22337204e18) {
      goto LABEL_55;
    }
    uint64_t v99 = v175;
    sub_24D912448(v94);
    v175 = v99;
    if (v99)
    {
      swift_release();
      swift_release();
      uint64_t v141 = v204;
      uint64_t v140 = v205;
      uint64_t v27 = v195;
      uint64_t v80 = v93;
      uint64_t v60 = v199;
      goto LABEL_51;
    }
    swift_release();
    swift_release();
    int64_t v88 = v204;
    uint64_t v59 = v205;
    uint64_t v27 = v195;
    uint64_t v100 = v93;
    uint64_t v60 = v199;
    goto LABEL_25;
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

uint64_t type metadata accessor for Maintenance.UnblockPathMatchingCycles()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72C81C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_24D72C838(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v41 = a5;
  uint64_t v42 = a4;
  uint64_t v45 = a3;
  uint64_t v43 = a1;
  uint64_t v7 = *(void *)(*(void *)v5 + 600);
  uint64_t v8 = *(void *)(*(void *)v5 + 608);
  uint64_t v9 = *(void *)(*(void *)v5 + 616);
  uint64_t v10 = *(void *)(*(void *)v5 + 624);
  uint64_t v51 = v7;
  uint64_t v52 = v8;
  uint64_t v53 = v9;
  uint64_t v54 = v10;
  uint64_t v44 = type metadata accessor for ReconciliationMutation();
  uint64_t v40 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v47 = v9;
  uint64_t v48 = v7;
  uint64_t v15 = v8;
  uint64_t v16 = v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v51 = AssociatedTypeWitness;
  uint64_t v52 = v14;
  uint64_t v53 = AssociatedConformanceWitness;
  uint64_t v54 = v18;
  uint64_t v19 = type metadata accessor for ReconciliationID();
  uint64_t v49 = *(void *)(v19 - 8);
  uint64_t v20 = *(void *)(v49 + 64);
  MEMORY[0x270FA5388](v19);
  uint64_t v50 = (char *)&v37 - v21;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v22 = swift_dynamicCastClass();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v22 = *(void *)(v22 + 16);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v24 = 1;
LABEL_6:
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v43 + 16) + 400))(v22, v24);
  int v39 = v26;
  uint64_t v37 = v20;
  uint64_t v38 = v27;
  if (MEMORY[0x253327DC0](v25, v19))
  {
    uint64_t v51 = v48;
    uint64_t v52 = v15;
    uint64_t v53 = v47;
    uint64_t v54 = v16;
    type metadata accessor for JobResult();
    uint64_t v28 = 0;
    uint64_t v43 = v49 + 16;
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v49 + 32);
    uint64_t v30 = (void (**)(char *, uint64_t))(v40 + 8);
    do
    {
      char v31 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v31)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v50, v25+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v28, v19);
        uint64_t v32 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v37 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v51 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))v43)(v50, &v51, v19);
        swift_unknownObjectRelease();
        uint64_t v32 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
LABEL_15:
          __break(1u);
          break;
        }
      }
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v33 = &v12[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*v29)(v12, v50, v19);
      *(void *)uint64_t v33 = 0;
      *(_OWORD *)(v33 + 8) = *(_OWORD *)(v46 + 120);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = v44;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v45, (uint64_t)v12);
      (*v30)(v12, v34);
      ++v28;
    }
    while (v32 != MEMORY[0x253327DC0](v25, v19));
  }
  swift_bridgeObjectRelease();
  if (v39) {
    return ((uint64_t (*)(void, void, void, void))v42)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v38;
  *(unsigned char *)(v36 + 24) = 0;
  *(void *)(v36 + 32) = 0;
  *(unsigned char *)(v36 + 40) = 1;
  v42();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.UnblockPathMatchingDuringImport()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72CD88()
{
  return 0xD000000000000019;
}

void sub_24D72CDA4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, id), uint64_t a5)
{
  uint64_t v118 = a5;
  char v119 = a4;
  uint64_t v151 = a3;
  uint64_t v9 = *(void *)(*(void *)v5 + 608);
  uint64_t v10 = *(void *)(*(void *)v5 + 616);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v162 = *(void *)(*(void *)v5 + 600);
  uint64_t v8 = v162;
  uint64_t v163 = v9;
  uint64_t v164 = v10;
  uint64_t v165 = v11;
  uint64_t v150 = type metadata accessor for ReconciliationMutation();
  uint64_t v112 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  uint64_t v149 = (char *)&v105 - v12;
  uint64_t v163 = v9;
  uint64_t v164 = v10;
  uint64_t v165 = v11;
  uint64_t v13 = type metadata accessor for ItemReconciliation();
  uint64_t v111 = sub_24DCCA3F8();
  uint64_t v129 = *(char **)(v111 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v111);
  uint64_t v134 = (uint64_t)&v105 - v15;
  uint64_t v133 = v13;
  uint64_t v128 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v142 = (char *)&v105 - v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v131 = sub_24DCCA3F8();
  uint64_t v127 = *(void (**)(void))(v131 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v131);
  uint64_t v130 = (uint64_t)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v135 = (char *)&v105 - v21;
  uint64_t v115 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v158 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  int v145 = (char *)&v105 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v153 = (char *)&v105 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v152 = (char *)&v105 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v144 = (char *)&v105 - v30;
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t v155 = v10;
  uint64_t v156 = v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v113 = v11;
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  uint64_t v159 = AssociatedTypeWitness;
  uint64_t v162 = AssociatedTypeWitness;
  uint64_t v163 = v31;
  uint64_t v141 = AssociatedConformanceWitness;
  uint64_t v164 = AssociatedConformanceWitness;
  uint64_t v165 = v33;
  uint64_t v34 = type metadata accessor for ReconciliationID();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v136 = (char *)&v105 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  id v143 = (char *)&v105 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v146 = (void (**)(char *, uint64_t *, uint64_t))((char *)&v105 - v41);
  uint64_t v110 = v42;
  MEMORY[0x270FA5388](v40);
  uint64_t v44 = (char *)&v105 - v43;
  uint64_t v114 = v9;
  if (a2 && (type metadata accessor for MaintenanceContinuation(), (uint64_t v45 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v46 = a1;
    uint64_t v157 = *(void *)(v45 + 16);
    uint64_t v47 = *(unsigned __int8 *)(v45 + 24);
  }
  else
  {
    uint64_t v46 = a1;
    uint64_t v157 = 0;
    uint64_t v47 = 1;
  }
  sub_24DCC9C98();
  uint64_t v48 = *(void *)(v141 + 32);
  uint64_t v49 = sub_24DBCB2B0();
  uint64_t v51 = v50;
  swift_bridgeObjectRelease();
  uint64_t v160 = v49;
  uint64_t v161 = v51;
  uint64_t v52 = *(void *)(v46 + 16);
  uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v52 + 408))(v157, v47);
  id v148 = 0;
  uint64_t v57 = v53;
  uint64_t v125 = v52;
  int v108 = v58;
  uint64_t v107 = v59;
  uint64_t v157 = v48;
  uint64_t v109 = v46;
  uint64_t v60 = swift_bridgeObjectRetain();
  uint64_t v61 = MEMORY[0x253327DC0](v60, v34);
  uint64_t v62 = v153;
  uint64_t v147 = v35;
  uint64_t v63 = (char *)v146;
  if (v61)
  {
    uint64_t v64 = 0;
    v154 = (void (**)(char *, uint64_t *, uint64_t))(v35 + 16);
    uint64_t v65 = (void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v140 = (void (**)(char *, char *, uint64_t))(v115 + 32);
    uint64_t v139 = (void (**)(char *, uint64_t))(v115 + 8);
    v137 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v138 = v34;
    do
    {
      char v66 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v66)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v63, v57+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v64, v34);
      }
      else
      {
        uint64_t v76 = sub_24DCCA778();
        if (v110 != 8) {
          goto LABEL_51;
        }
        uint64_t v162 = v76;
        (*v154)(v63, &v162, v34);
        swift_unknownObjectRelease();
      }
      (*v65)(v44, v63, v34);
      uint64_t v67 = v64 + 1;
      if (__OFADD__(v64, 1)) {
        goto LABEL_52;
      }
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*v137)(v44, v34);
      }
      else
      {
        uint64_t v68 = (uint64_t)v144;
        uint64_t v69 = v159;
        (*v140)(v144, v44, v159);
        uint64_t v70 = type metadata accessor for OrderedSet();
        uint64_t v71 = v152;
        sub_24DBCA448(v152, v68, v70);
        uint64_t v72 = *v139;
        int v73 = v71;
        uint64_t v35 = v147;
        (*v139)(v73, v69);
        uint64_t v74 = v68;
        uint64_t v63 = (char *)v146;
        uint64_t v75 = v69;
        uint64_t v62 = v153;
        v72((char *)v74, v75);
        uint64_t v34 = v138;
      }
      ++v64;
    }
    while (v67 != MEMORY[0x253327DC0](v57, v34));
  }
  swift_bridgeObjectRelease();
  uint64_t v77 = MEMORY[0x253327DC0](v57, v34);
  uint64_t v78 = v159;
  uint64_t v79 = v141;
  uint64_t v80 = v136;
  if (!v77)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    sub_24DBCAA70();
  }
  uint64_t v81 = 0;
  uint64_t v146 = (void (**)(char *, uint64_t *, uint64_t))(v35 + 16);
  uint64_t v144 = (char *)(v35 + 32);
  v154 = (void (**)(char *, uint64_t *, uint64_t))(v115 + 32);
  uint64_t v140 = (void (**)(char *, char *, uint64_t))(v141 + 64);
  uint64_t v132 = v141 + 72;
  uint64_t v124 = (unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48);
  uint64_t v123 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
  uint64_t v121 = (void (**)(char *, uint64_t, uint64_t))(v128 + 32);
  long long v117 = (void (**)(char *, uint64_t))((char *)v127 + 8);
  uint64_t v120 = (void (**)(char *, uint64_t))(v128 + 8);
  uint64_t v106 = (void (**)(uint64_t, uint64_t))(v129 + 8);
  uint64_t v122 = (void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v139 = (void (**)(char *, uint64_t))(v115 + 8);
  uint64_t v116 = (v115 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
LABEL_20:
  char v82 = sub_24DCC9CB8();
  sub_24DCC9C68();
  if (v82)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v80, v57+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v81, v34);
  }
  else
  {
    uint64_t v104 = sub_24DCCA778();
    if (v110 != 8) {
      goto LABEL_52;
    }
    uint64_t v162 = v104;
    (*v146)(v80, &v162, v34);
    swift_unknownObjectRelease();
  }
  uint64_t v83 = v143;
  (*(void (**)(char *, char *, uint64_t))v144)(v143, v80, v34);
  if (__OFADD__(v81++, 1))
  {
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    JUMPOUT(0x24D72E090);
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*v122)(v83, v34);
    goto LABEL_19;
  }
  uint64_t v85 = *v154;
  (*v154)(v62, (uint64_t *)v83, v78);
  v137 = *(void (***)(char *, uint64_t))(v79 + 64);
  if (((uint64_t (*)(uint64_t, uint64_t))v137)(v78, v79))
  {
    uint64_t v86 = *v139;
    goto LABEL_26;
  }
  uint64_t v129 = *(char **)(v79 + 72);
  if (((uint64_t (*)(uint64_t, uint64_t))v129)(v78, v79))
  {
    uint64_t v86 = *v139;
LABEL_29:
    v86(v62, v78);
    goto LABEL_43;
  }
  uint64_t v87 = **(void (****)(void))(v109 + 32);
  uint64_t v128 = *(void *)(v109 + 32);
  v87 += 35;
  uint64_t v127 = *v87;
  v126 = v87;
  while (1)
  {
    int64_t v88 = v135;
    id v89 = v148;
    v127(v62);
    if (v89) {
      break;
    }
    if ((*v124)(v88, 1, v78) == 1)
    {
      id v148 = 0;
      (*v139)(v62, v78);
      (*v117)(v88, v131);
      goto LABEL_42;
    }
    uint64_t v90 = (uint64_t)v145;
    v85(v145, (uint64_t *)v88, v78);
    uint64_t v91 = v134;
    sub_24D4759C8(v90, v134);
    id v148 = 0;
    uint64_t v92 = v133;
    uint64_t v93 = v91;
    if ((*v123)(v91, 1, v133) == 1)
    {
      uint64_t v103 = *v139;
      (*v139)(v145, v78);
      uint64_t v62 = v153;
      v103(v153, v78);
      (*v106)(v93, v111);
LABEL_42:
      uint64_t v79 = v141;
LABEL_43:
      uint64_t v80 = v136;
      goto LABEL_19;
    }
    uint64_t v94 = v142;
    (*v121)(v142, v93, v92);
    uint64_t v95 = &v94[*(int *)(type metadata accessor for ItemReconciliationHalf() + 64)];
    if (v95[16] || (*v95 & 8) == 0)
    {
      (*v120)(v142, v92);
      uint64_t v102 = *v139;
      (*v139)(v145, v78);
      uint64_t v62 = v153;
      v102(v153, v78);
      goto LABEL_42;
    }
    uint64_t v96 = type metadata accessor for OrderedSet();
    uint64_t v97 = v130;
    uint64_t v98 = (uint64_t)v145;
    sub_24DBCA63C((uint64_t)v145, v96, v130);
    (*v117)((char *)v97, v131);
    uint64_t v99 = v152;
    uint64_t v100 = v96;
    uint64_t v78 = v159;
    sub_24DBCA448(v152, v98, v100);
    uint64_t v86 = *v139;
    (*v139)(v99, v78);
    (*v120)(v142, v92);
    uint64_t v62 = v153;
    v86(v153, v78);
    v85(v62, (uint64_t *)v98, v78);
    uint64_t v79 = v141;
    if (((uint64_t (*)(uint64_t, uint64_t))v137)(v78, v141))
    {
      uint64_t v35 = v147;
LABEL_26:
      uint64_t v80 = v136;
      v86(v62, v78);
LABEL_19:
      if (v81 == MEMORY[0x253327DC0](v57, v34)) {
        goto LABEL_47;
      }
      goto LABEL_20;
    }
    char v101 = ((uint64_t (*)(uint64_t, uint64_t))v129)(v78, v79);
    uint64_t v35 = v147;
    if (v101) {
      goto LABEL_29;
    }
  }
  id v148 = v89;
  (*v139)(v62, v78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v54 = v119;
  swift_bridgeObjectRelease();
  id v55 = v148;
  id v56 = v148;
  v54(0, 0, 0, v55);
}

uint64_t type metadata accessor for Maintenance.UnblockChildrenDeletion()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72E0B8()
{
  return 0xD000000000000015;
}

uint64_t sub_24D72E0D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v57 = a1;
  unint64_t v9 = *(void *)(*(void *)v5 + 608);
  unint64_t v10 = *(void *)(*(void *)v5 + 600);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v12 = *(void *)(*(void *)v5 + 616);
  uint64_t v59 = v9;
  unint64_t v60 = v10;
  uint64_t v61 = v11;
  uint64_t v62 = v12;
  uint64_t v13 = type metadata accessor for ItemReconciliation();
  uint64_t v14 = *(void (***)(char *, uint64_t))(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v55 = (char *)&v43 - v15;
  uint64_t v59 = v10;
  unint64_t v60 = v9;
  uint64_t v61 = v12;
  uint64_t v62 = v11;
  uint64_t v16 = type metadata accessor for ItemReconciliation();
  uint64_t v56 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t v48 = a5;
  uint64_t v54 = v13;
  uint64_t v52 = v14;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v22 = swift_dynamicCastClass();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v22 = *(void *)(v22 + 16);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v24 = 1;
LABEL_6:
  uint64_t v25 = v57;
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v57 + 16) + 416))(v22, v24);
  uint64_t v27 = v16;
  int v45 = v28;
  uint64_t v44 = v29;
  uint64_t v46 = a4;
  uint64_t v30 = swift_bridgeObjectRetain();
  if (MEMORY[0x253327DC0](v30, v16))
  {
    uint64_t v31 = 0;
    uint64_t v32 = (uint64_t)v55;
    uint64_t v50 = (void (**)(uint64_t, uint64_t))(v52 + 1);
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v56 + 32);
    uint64_t v52 = (void (**)(char *, uint64_t))(v56 + 8);
    uint64_t v53 = (void (**)(char *, uint64_t *, uint64_t))(v56 + 16);
    uint64_t v49 = v21;
    do
    {
      char v33 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v33)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v21, v26+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v31, v27);
        uint64_t v34 = v31 + 1;
        if (__OFADD__(v31, 1)) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v47 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v59 = result;
        (*v53)(v21, &v59, v27);
        swift_unknownObjectRelease();
        uint64_t v34 = v31 + 1;
        if (__OFADD__(v31, 1))
        {
LABEL_15:
          __break(1u);
          break;
        }
      }
      (*v51)(v19, v21, v27);
      sub_24DB8B3CC(v25, v27);
      uint64_t v35 = sub_24DB864D4(v27, v32);
      uint64_t v36 = (*(uint64_t (**)(uint64_t))(*(void *)v25 + 176))(v35);
      uint64_t v37 = v54;
      sub_24DB8B3CC(v36, v54);
      swift_release();
      (*v50)(v32, v37);
      (*v52)(v19, v27);
      uint64_t v38 = MEMORY[0x253327DC0](v26, v27);
      ++v31;
      uint64_t v25 = v57;
      uint64_t v21 = v49;
    }
    while (v34 != v38);
  }
  swift_bridgeObjectRelease();
  if (v45)
  {
    uint64_t v59 = 0x73656972746E653CLL;
    unint64_t v60 = 0xE90000000000003ALL;
    uint64_t v42 = MEMORY[0x253327D80](v26, v27);
    swift_bridgeObjectRelease();
    uint64_t v58 = v42;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v46(0, v59, v60, 0);
  }
  else
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v44;
    *(unsigned char *)(v40 + 24) = 0;
    *(void *)(v40 + 32) = 0;
    *(unsigned char *)(v40 + 40) = 1;
    uint64_t v59 = 0x73656972746E653CLL;
    unint64_t v60 = 0xE90000000000003ALL;
    uint64_t v41 = MEMORY[0x253327D80](v26, v27);
    swift_bridgeObjectRelease();
    uint64_t v58 = v41;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v46(v40, v59, v60, 0);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Maintenance.ReimportMissingJobs()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72E730()
{
  return 0xD000000000000021;
}

void sub_24D72E74C(void **a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, unint64_t, void *), uint64_t a5)
{
  unint64_t v11 = *(void *)(*(void *)v5 + 600);
  uint64_t v12 = *(void *)(*(void *)v5 + 624);
  uint64_t v13 = *(void *)(*(void *)v5 + 616);
  uint64_t v67 = *(void *)(*(void *)v5 + 608);
  unint64_t v10 = v67;
  unint64_t v68 = v11;
  uint64_t v69 = v12;
  uint64_t v70 = v13;
  uint64_t v59 = type metadata accessor for ItemReconciliation();
  uint64_t v14 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v58 = (uint64_t)&v47 - v15;
  unint64_t v60 = v11;
  uint64_t v67 = v11;
  unint64_t v68 = v10;
  uint64_t v69 = v13;
  uint64_t v70 = v12;
  uint64_t v16 = type metadata accessor for ItemReconciliation();
  uint64_t v62 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v61 = (char *)&v47 - v20;
  uint64_t v51 = a5;
  uint64_t v52 = a4;
  uint64_t v65 = v14;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v21 = swift_dynamicCastClass();
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v21 = *(void *)(v21 + 16);
      uint64_t v23 = *(unsigned __int8 *)(v22 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v21 = 0;
  }
  uint64_t v23 = 1;
LABEL_6:
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(*a1[2] + 424))(v21, v23);
  uint64_t v25 = v16;
  int v49 = v26;
  uint64_t v48 = v27;
  uint64_t v57 = a1;
  uint64_t v28 = swift_bridgeObjectRetain();
  if (MEMORY[0x253327DC0](v28, v16))
  {
    uint64_t v29 = 0;
    uint64_t v53 = (void (**)(uint64_t, uint64_t))(v65 + 8);
    uint64_t v54 = (void (**)(char *, char *, uint64_t))(v62 + 32);
    id v55 = (void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v56 = (void (**)(char *, uint64_t *, uint64_t))(v62 + 16);
    do
    {
      char v30 = sub_24DCC9CB8();
      sub_24DCC9C68();
      uint64_t v65 = v29;
      if (v30)
      {
        unint64_t v31 = v24
            + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))
            + *(void *)(v62 + 72) * v29;
        uint64_t v32 = v29;
        char v33 = v61;
        (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v61, v31, v25);
        uint64_t v34 = v57;
        uint64_t v35 = v32 + 1;
        if (__OFADD__(v32, 1)) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v41 = sub_24DCCA778();
        char v33 = v61;
        if (v50 != 8)
        {
          __break(1u);
          return;
        }
        uint64_t v67 = v41;
        (*v56)(v61, &v67, v25);
        swift_unknownObjectRelease();
        uint64_t v34 = v57;
        uint64_t v35 = v65 + 1;
        if (__OFADD__(v65, 1))
        {
LABEL_16:
          __break(1u);
          break;
        }
      }
      uint64_t v64 = v35;
      (*v54)(v19, v33, v25);
      sub_24D732F50((uint64_t)v19, v34);
      uint64_t v63 = 0;
      uint64_t v36 = v58;
      uint64_t v37 = sub_24DB864D4(v25, v58);
      uint64_t v38 = (void **)((uint64_t (*)(uint64_t))(*v34)[22])(v37);
      uint64_t v39 = v63;
      sub_24D732F50(v36, v38);
      if (v39)
      {
        swift_bridgeObjectRelease();
        swift_release();
        (*v53)(v36, v59);
        (*v55)(v19, v25);
        swift_bridgeObjectRelease();
        id v46 = v39;
        v52(0, 0, 0, v39);

        return;
      }
      swift_release();
      (*v53)(v36, v59);
      (*v55)(v19, v25);
      uint64_t v40 = MEMORY[0x253327DC0](v24, v25);
      uint64_t v29 = v65 + 1;
    }
    while (v64 != v40);
  }
  swift_bridgeObjectRelease();
  if (v49)
  {
    uint64_t v67 = 0x73656972746E653CLL;
    unint64_t v68 = 0xE90000000000003ALL;
    uint64_t v45 = MEMORY[0x253327D80](v24, v25);
    swift_bridgeObjectRelease();
    uint64_t v66 = v45;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v52(0, v67, v68, 0);
  }
  else
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v42 = v24;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v48;
    *(unsigned char *)(v43 + 24) = 0;
    *(void *)(v43 + 32) = 0;
    *(unsigned char *)(v43 + 40) = 1;
    uint64_t v67 = 0x73656972746E653CLL;
    unint64_t v68 = 0xE90000000000003ALL;
    uint64_t v44 = MEMORY[0x253327D80](v42, v25);
    swift_bridgeObjectRelease();
    uint64_t v66 = v44;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v52(v43, v67, v68, 0);
    swift_release();
  }
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Maintenance.UnblockThrottledReconciliations()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72EE08()
{
  return 0xD00000000000001BLL;
}

void sub_24D72EE24(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, void *), uint64_t a5)
{
  uint64_t v58 = a1;
  unint64_t v9 = *(void *)(*(void *)v5 + 608);
  uint64_t v10 = *(void *)(*(void *)v5 + 616);
  uint64_t v11 = *(void *)(*(void *)v5 + 624);
  uint64_t v57 = *(void *)(*(void *)v5 + 600);
  uint64_t v60 = v57;
  unint64_t v61 = v9;
  uint64_t v62 = v10;
  uint64_t v63 = v11;
  uint64_t v56 = type metadata accessor for PersistenceTrigger();
  uint64_t v12 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  id v55 = (char *)&v44 - v13;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v14 = swift_dynamicCastClass();
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v14 = *(void *)(v14 + 16);
      uint64_t v16 = *(unsigned __int8 *)(v15 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v16 = 1;
LABEL_6:
  uint64_t v17 = *(void *)(v58 + 24);
  uint64_t v18 = 0;
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v17 + 432))(v14, v16);
  int v45 = v21;
  uint64_t v44 = v22;
  uint64_t v46 = a5;
  uint64_t v47 = a4;
  swift_bridgeObjectRetain();
  uint64_t v60 = v57;
  unint64_t v61 = v9;
  uint64_t v51 = v10;
  unint64_t v52 = v9;
  uint64_t v62 = v10;
  uint64_t v63 = v11;
  uint64_t v50 = v11;
  uint64_t v23 = type metadata accessor for ItemJob();
  if (MEMORY[0x253327DC0](v20, v23))
  {
    uint64_t v48 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v49 = v17;
    uint64_t v24 = 4;
    do
    {
      uint64_t v25 = v24 - 4;
      char v26 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v26)
      {
        uint64_t v27 = *(void *)(v20 + 8 * v24);
        swift_retain();
        BOOL v28 = __OFADD__(v25, 1);
        uint64_t v29 = v24 - 3;
        if (v28) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v27 = sub_24DCCA778();
        BOOL v28 = __OFADD__(v25, 1);
        uint64_t v29 = v24 - 3;
        if (v28)
        {
LABEL_20:
          __break(1u);
          break;
        }
      }
      if (*(unsigned char *)(v27 + 112) || (*(unsigned char *)(v27 + 97) & 1) == 0) {
        goto LABEL_14;
      }
      char v30 = sub_24D580444((void *)v27, 0);
      if (v18)
      {
        swift_release();
        swift_bridgeObjectRelease_n();
        uint64_t v43 = v47;
        id v19 = v18;
        v43(0, 0, 0, v18);

        return;
      }
      if (v30)
      {
LABEL_14:
        swift_release();
      }
      else
      {
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t v54 = 0;
        uint64_t v53 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        unint64_t v33 = v53;
        uint64_t v34 = swift_getAssociatedConformanceWitness();
        uint64_t v60 = AssociatedTypeWitness;
        unint64_t v61 = v33;
        uint64_t v62 = AssociatedConformanceWitness;
        uint64_t v63 = v34;
        type metadata accessor for ReconciliationID();
        uint64_t v35 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v36 = v55;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v55, v27 + *(void *)(*(void *)v27 + 576), AssociatedTypeWitness);
        uint64_t v37 = v58;
        swift_storeEnumTagMultiPayload();
        v36[v35] = sub_24DB1702C();
        uint64_t v38 = v56;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))(*(void *)v37 + 312))(v36);
        swift_release();
        uint64_t v39 = v38;
        uint64_t v18 = v54;
        (*v48)(v36, v39);
      }
      ++v24;
    }
    while (v29 != MEMORY[0x253327DC0](v20, v23));
  }
  swift_bridgeObjectRelease();
  if (v45)
  {
    uint64_t v60 = 0x73656972746E653CLL;
    unint64_t v61 = 0xE90000000000003ALL;
    uint64_t v42 = MEMORY[0x253327D80](v20, v23);
    swift_bridgeObjectRelease();
    uint64_t v59 = v42;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v47(0, v60, v61, 0);
  }
  else
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v44;
    *(unsigned char *)(v40 + 24) = 0;
    *(void *)(v40 + 32) = 0;
    *(unsigned char *)(v40 + 40) = 1;
    uint64_t v60 = 0x3A73626F6A3CLL;
    unint64_t v61 = 0xE600000000000000;
    uint64_t v41 = MEMORY[0x253327D80](v20, v23);
    swift_bridgeObjectRelease();
    uint64_t v59 = v41;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v47(v40, v60, v61, 0);
    swift_release();
  }
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Maintenance.UnblockThrottledItemJobs()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D72F45C()
{
  return 0xD000000000000016;
}

void sub_24D72F478(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, unint64_t, void), uint64_t a5)
{
  uint64_t v92 = a5;
  uint64_t v93 = a4;
  uint64_t v95 = a1;
  uint64_t v7 = *v5;
  uint64_t v8 = *(void *)(*v5 + 624);
  unint64_t v9 = *(void *)(*v5 + 608);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v7 + 616);
  uint64_t v12 = *(void *)(v7 + 600);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v98 = AssociatedTypeWitness;
  unint64_t v99 = v13;
  uint64_t v100 = AssociatedConformanceWitness;
  uint64_t v101 = v15;
  id v89 = (int8x16_t *)type metadata accessor for ReconciliationID();
  uint64_t v16 = sub_24DCCA3F8();
  uint64_t v83 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v16 - 8);
  uint64_t v84 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v86 = (char *)&v66 - v18;
  uint64_t v19 = v89[-1].i64[1];
  MEMORY[0x270FA5388](v17);
  uint64_t v87 = (char *)&v66 - v20;
  uint64_t v98 = v12;
  unint64_t v99 = v9;
  unint64_t v96 = v9;
  uint64_t v100 = v11;
  uint64_t v101 = v8;
  uint64_t v91 = v8;
  uint64_t v21 = type metadata accessor for PersistenceTrigger();
  uint64_t v81 = *(void (***)(char *, char *, uint64_t))(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v85 = (uint64_t)&v66 - v22;
  uint64_t v98 = v13;
  unint64_t v99 = AssociatedTypeWitness;
  uint64_t v100 = v15;
  uint64_t v101 = AssociatedConformanceWitness;
  uint64_t v23 = type metadata accessor for ReconciliationID();
  uint64_t v24 = sub_24DCCA3F8();
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v66 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v90 = (char *)&v66 - v28;
  char v82 = (void (**)(void, void))v19;
  uint64_t v80 = v29;
  uint64_t v79 = v30;
  if (!a2)
  {
    uint64_t v31 = 0;
    goto LABEL_5;
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v31 = swift_dynamicCastClass();
  if (!v31)
  {
LABEL_5:
    uint64_t v33 = 1;
    goto LABEL_6;
  }
  uint64_t v32 = v31;
  uint64_t v31 = *(void *)(v31 + 16);
  uint64_t v33 = *(unsigned __int8 *)(v32 + 24);
LABEL_6:
  uint64_t v34 = v95[3];
  uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v34 + 424))(v31, v33);
  uint64_t v94 = v23;
  int v74 = v37;
  uint64_t v75 = v34;
  uint64_t v72 = v38;
  int64_t v88 = 0;
  uint64_t v78 = v27;
  uint64_t v76 = v24;
  uint64_t v77 = v21;
  swift_bridgeObjectRetain();
  uint64_t v98 = v12;
  unint64_t v99 = v96;
  uint64_t v100 = v11;
  uint64_t v101 = v91;
  uint64_t v39 = type metadata accessor for FSOrFPJob();
  if (!MEMORY[0x253327DC0](v36, v39))
  {
LABEL_32:
    swift_bridgeObjectRelease();
    if (v74)
    {
      uint64_t v98 = 0x73656972746E653CLL;
      unint64_t v99 = 0xE90000000000003ALL;
      uint64_t v65 = MEMORY[0x253327D80](v36, v39);
      swift_bridgeObjectRelease();
      uint64_t v97 = v65;
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      v93(0, v98, v99, 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = v72;
      *(unsigned char *)(v63 + 24) = 0;
      *(void *)(v63 + 32) = 0;
      *(unsigned char *)(v63 + 40) = 1;
      uint64_t v98 = 0x3A73626F6A3CLL;
      unint64_t v99 = 0xE600000000000000;
      uint64_t v64 = MEMORY[0x253327D80](v36, v39);
      swift_bridgeObjectRelease();
      uint64_t v97 = v64;
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      v93(v63, v98, v99, 0);
      swift_release();
    }
    swift_bridgeObjectRelease();
    return;
  }
  int v73 = (unsigned int (**)(char *, uint64_t, int8x16_t *))(v82 + 6);
  uint64_t v70 = (void (**)(char *, char *, int8x16_t *))(v82 + 4);
  uint64_t v71 = (void (**)(uint64_t, uint64_t))(v81 + 1);
  unint64_t v68 = (void (**)(char *, int8x16_t *))(v82 + 1);
  uint64_t v69 = (void (**)(char *, uint64_t))(v83 + 1);
  uint64_t v83 = (unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
  uint64_t v81 = (void (**)(char *, char *, uint64_t))(v79 + 32);
  uint64_t v67 = (void (**)(uint64_t, char *, uint64_t))(v79 + 16);
  char v82 = (void (**)(void, void))(v79 + 8);
  ++v80;
  uint64_t v40 = 4;
  while (1)
  {
    uint64_t v41 = v40 - 4;
    char v42 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v42)
    {
      uint64_t v43 = *(void *)(v36 + 8 * v40);
      swift_retain();
      uint64_t v44 = v40 - 3;
      if (__OFADD__(v41, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v43 = sub_24DCCA778();
      swift_retain();
      swift_unknownObjectRelease();
      uint64_t v44 = v40 - 3;
      if (__OFADD__(v41, 1))
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    __int16 v45 = sub_24D9882BC(v43);
    if (v46 || (v45 & 0x100) == 0)
    {
      swift_release();
      goto LABEL_9;
    }
    if (v43 < 0) {
      break;
    }
    uint64_t v47 = v78;
    (*(void (**)(void))(*(void *)v43 + 440))();
    uint64_t v48 = v94;
    if ((*v83)(v47, 1, v94) == 1)
    {
      swift_release();
      (*v80)(v47, v76);
    }
    else
    {
      (*v81)(v90, v47, v48);
      unint64_t v52 = (void *)swift_retain();
      uint64_t v53 = v88;
      char v54 = sub_24D580444(v52, 0);
      if (v53)
      {
        swift_bridgeObjectRelease();
        swift_release_n();
        (*v82)(v90, v94);
        goto LABEL_39;
      }
      int64_t v88 = 0;
      if (v54)
      {
        swift_release_n();
      }
      else
      {
        uint64_t v79 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v59 = v85;
        (*v67)(v85, v90, v94);
        *(unsigned char *)(v59 + v79) = sub_24DB1702C();
        uint64_t v60 = v95;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t))(*v60 + 312))(v59);
        swift_release_n();
        (*v71)(v59, v77);
      }
      (*v82)(v90, v94);
    }
LABEL_9:
    ++v40;
    if (v44 == MEMORY[0x253327DC0](v36, v39)) {
      goto LABEL_32;
    }
  }
  uint64_t v49 = (void *)(v43 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v50 = v86;
  (*(void (**)(void))(*v49 + 440))();
  uint64_t v51 = v89;
  if ((*v73)(v50, 1, v89) == 1)
  {
    swift_release();
    (*v69)(v50, v84);
    goto LABEL_9;
  }
  (*v70)(v87, v50, v51);
  id v55 = *(void (**)(uint64_t))(*v95 + 176);
  uint64_t v56 = swift_retain();
  v55(v56);
  swift_retain();
  swift_release();
  uint64_t v53 = v88;
  char v57 = sub_24D580444(v49, 0);
  if (!v53)
  {
    char v58 = v57;
    int64_t v88 = 0;
    swift_release();
    if (v58)
    {
      swift_release_n();
      (*v68)(v87, v89);
    }
    else
    {
      uint64_t v79 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v61 = v85;
      uint64_t v62 = v89;
      sub_24D95FD44(v89, v85);
      *(unsigned char *)(v61 + v79) = sub_24DB1702C();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t))(*v95 + 312))(v61);
      swift_release_n();
      (*v71)(v61, v77);
      (*v68)(v87, v62);
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  (*v68)(v87, v89);
LABEL_39:
  swift_bridgeObjectRelease();
  id v35 = v53;
  v93(0, 0, 0, v53);
}

uint64_t type metadata accessor for Maintenance.UnblockThrottledJobs()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D7300E8()
{
  return 0xD000000000000025;
}

uint64_t sub_24D730104(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v6 = *(void *)(v6 + 16);
      uint64_t v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v8 = 1;
LABEL_6:
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 16) + 440))(v6, v8);
  if (v10) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  uint64_t v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(unsigned char *)(v12 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RescanMaterializedSpeculativeItems()
{
  return swift_getGenericMetadata();
}

void sub_24D7302A0()
{
}

uint64_t sub_24D7302FC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v7 = swift_dynamicCastClass();
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v7 = *(void *)(v7 + 16);
      uint64_t v9 = *(unsigned __int8 *)(v8 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v9 = 1;
LABEL_6:
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4 + 632))(v7, v9, a1);
  if (v11) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  uint64_t v12 = v10;
  type metadata accessor for MaintenanceContinuation();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(unsigned char *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = 0;
  *(unsigned char *)(v13 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t type metadata accessor for Maintenance.FullScanRowIDJob()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D7304AC()
{
  return 0xD000000000000021;
}

void sub_24D7304C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v10 = *v5;
  uint64_t v11 = sub_24DCC9078();
  uint64_t v76 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v78 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v10 + 616);
  uint64_t v74 = *(void *)(v10 + 600);
  uint64_t v75 = v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v79 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  int v73 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v77 = (char *)&v68 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v85 = (char *)&v68 - v19;
  uint64_t v84 = v20;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v83 = sub_24DCCA3F8();
  uint64_t v22 = *(void *)(v83 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v83);
  uint64_t v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v68 - v26;
  uint64_t v28 = *(void **)(a1 + 32);
  if (*(_DWORD *)(*(void *)(v28[2] + 136) + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext + 8) == 1)
  {
    if (a2
      && (type metadata accessor for MaintenanceContinuation(), (uint64_t v29 = swift_dynamicCastClass()) != 0)
      && *(unsigned char *)(v29 + 24) != 1)
    {
      uint64_t v30 = *(void *)(v29 + 16);
    }
    else
    {
      uint64_t v30 = -1;
    }
    uint64_t v31 = 0;
    uint64_t v32 = (*(uint64_t (**)(uint64_t))(*v28 + 584))(v30);
    int v69 = v33;
    uint64_t v68 = v34;
    uint64_t v70 = v11;
    uint64_t v71 = a5;
    uint64_t v72 = a4;
    uint64_t v80 = (void (**)(char *, char *, void (*)(void)))(v79 + 32);
    uint64_t v81 = (void (**)(char *, void (*)(void)))(v79 + 8);
    char v82 = (void (**)(char *, char *, uint64_t))(v22 + 32);
    a4 = v84;
    while (1)
    {
      if (v31 == MEMORY[0x253327DC0](v32, TupleTypeMetadata2))
      {
        uint64_t v35 = *(void *)(TupleTypeMetadata2 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v25, 1, 1, TupleTypeMetadata2);
      }
      else
      {
        char v36 = sub_24DCC9CB8();
        sub_24DCC9C68();
        if (v36)
        {
          uint64_t v37 = *(void *)(TupleTypeMetadata2 - 8);
          (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v25, v32+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v31, TupleTypeMetadata2);
          BOOL v38 = __OFADD__(v31++, 1);
          if (v38) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v41 = sub_24DCCA778();
          uint64_t v37 = *(void *)(TupleTypeMetadata2 - 8);
          if (*(void *)(v37 + 64) != 8)
          {
            __break(1u);
            return;
          }
          v87[0] = v41;
          (*(void (**)(char *, uint64_t *, uint64_t))(v37 + 16))(v25, v87, TupleTypeMetadata2);
          swift_unknownObjectRelease();
          BOOL v38 = __OFADD__(v31++, 1);
          if (v38)
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v35 = v37;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v25, 0, 1, TupleTypeMetadata2);
      }
      (*v82)(v27, v25, v83);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v27, 1, TupleTypeMetadata2) == 1)
      {
        swift_bridgeObjectRelease();
        if (v69)
        {
          ((void (*)(void, void, void, void))v72)(0, 0, 0, 0);
        }
        else
        {
          type metadata accessor for MaintenanceContinuation();
          uint64_t v63 = swift_allocObject();
          *(void *)(v63 + 16) = v68;
          *(unsigned char *)(v63 + 24) = 0;
          *(void *)(v63 + 32) = 0;
          *(unsigned char *)(v63 + 40) = 1;
          v72();
          swift_release();
        }
        return;
      }
      (*v80)(v85, &v27[*(int *)(TupleTypeMetadata2 + 48)], a4);
      sub_24DCC9878();
      char v39 = sub_24DCC9A18();
      swift_bridgeObjectRelease();
      if (v39) {
        break;
      }
      sub_24DCC9878();
      char v40 = sub_24DCC9A18();
      swift_bridgeObjectRelease();
      if (v40) {
        break;
      }
      a4 = v84;
      (*v81)(v85, v84);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    id v42 = (id)fpfs_current_or_default_log();
    uint64_t v43 = v78;
    sub_24DCC9088();
    uint64_t v44 = *(void (**)(char *, char *, void (*)(void)))(v79 + 16);
    __int16 v45 = v77;
    char v46 = v84;
    v44(v77, v85, v84);
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_24DCC9068();
    os_log_type_t v48 = sub_24DCCA128();
    int v49 = v48;
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v50 = swift_slowAlloc();
      LODWORD(v83) = v49;
      uint64_t v51 = v50;
      char v82 = (void (**)(char *, char *, uint64_t))swift_slowAlloc();
      v87[0] = (uint64_t)v82;
      *(_DWORD *)uint64_t v51 = 136315394;
      uint64_t v80 = (void (**)(char *, char *, void (*)(void)))(v51 + 4);
      unint64_t v52 = v73;
      v44(v73, v45, v46);
      uint64_t v53 = *v81;
      (*v81)(v45, v46);
      swift_getAssociatedConformanceWitness();
      uint64_t v54 = sub_24DCCAD78();
      unint64_t v56 = v55;
      v53(v52, v84);
      uint64_t v86 = sub_24D418FB4(v54, v56, v87);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2080;
      swift_bridgeObjectRetain();
      char v57 = (void *)sub_24DCC97B8();
      id v58 = objc_msgSend(v57, sel_fp_obfuscatedFilename);

      uint64_t v59 = sub_24DCC97E8();
      unint64_t v61 = v60;
      swift_bridgeObjectRelease();

      char v46 = v84;
      uint64_t v86 = sub_24D418FB4(v59, v61, v87);
      sub_24DCCA428();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v47, (os_log_type_t)v83, "found package with .folder or .git extension, %s: %s", (uint8_t *)v51, 0x16u);
      uint64_t v62 = v82;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v62, -1, -1);
      MEMORY[0x25332B030](v51, -1, -1);

      (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v70);
    }
    else
    {
      uint64_t v53 = *v81;
      (*v81)(v45, v46);

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v43, v70);
    }
    sub_24D4A5DD0();
    uint64_t v64 = (void *)swift_allocError();
    *(void *)uint64_t v65 = 3;
    *(_OWORD *)(v65 + 8) = 0u;
    *(_OWORD *)(v65 + 24) = 0u;
    *(void *)(v65 + 40) = 0;
    *(unsigned char *)(v65 + 48) = 9;
    swift_willThrow();
    v53(v85, v46);
    uint64_t v66 = v72;
    id v67 = v64;
    ((void (*)(void, void, void, void *))v66)(0, 0, 0, v64);
  }
  else
  {
LABEL_20:
    ((void (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
}

uint64_t type metadata accessor for Maintenance.ReimportOnGitOrFolderPackage()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D730EFC()
{
  return swift_initClassMetadata2();
}

unint64_t sub_24D730F34()
{
  return 0xD000000000000021;
}

uint64_t sub_24D730F50(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(**(void **)(a3 + 16) + 448))(a1, a2 & 1);
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_24D730FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_24D983960(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v8;
}

uint64_t sub_24D731070()
{
  sub_24D982504();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Maintenance.FixupOutOfSyncFSBaseVersion()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D7310DC()
{
  return 0xD000000000000022;
}

uint64_t sub_24D7310F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a4;
  v9[4] = a5;
  uint64_t v10 = *(void (**)(uint64_t (*)(char), void *))(*(void *)v8 + 880);
  swift_retain();
  swift_retain();
  swift_retain();
  v10(sub_24D732EAC, v9);
  swift_release();

  return swift_release();
}

uint64_t sub_24D7311E8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a3;
  *(void *)(v8 + 32) = a4;
  uint64_t v9 = type metadata accessor for Continuation();
  swift_retain_n();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D732EF0, v7, (uint64_t)sub_24D732F30, v8, v9, MEMORY[0x263F8D310]);
  swift_release();

  return swift_release();
}

uint64_t sub_24D731304(char a1, void (*a2)(void))
{
  if ((a1 & 1) == 0) {
    return ((uint64_t (*)(void, void, void, void))a2)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 100;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 40) = 1;
  a2();
  return swift_release();
}

uint64_t type metadata accessor for Maintenance.RemoveConflictStuckInTheWharf()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D7313B8()
{
  return 0xD000000000000028;
}

uint64_t sub_24D7313D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v50 = a3;
  uint64_t v10 = *v5;
  uint64_t v11 = *v5;
  uint64_t v52 = sub_24DCC8CE8();
  uint64_t v46 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v10 + 616);
  uint64_t v14 = *(void *)(v10 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v53 = (char *)v42 - v19;
  if (a2
    && (type metadata accessor for MaintenanceContinuation(), (uint64_t v20 = swift_dynamicCastClass()) != 0)
    && *(unsigned char *)(v20 + 24) != 1)
  {
    uint64_t v21 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = -1;
  }
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 16) + 464))(v21);
  uint64_t v24 = v23;
  int v44 = v25;
  if (MEMORY[0x253327DC0](v22, AssociatedTypeWitness))
  {
    v42[0] = v24;
    v42[1] = a5;
    uint64_t v43 = a4;
    uint64_t v26 = *(void *)(v11 + 608);
    uint64_t v27 = *(void *)(v11 + 624);
    uint64_t v55 = v14;
    uint64_t v56 = v26;
    uint64_t v57 = v13;
    uint64_t v58 = v27;
    uint64_t v48 = type metadata accessor for JobResult();
    uint64_t v55 = v14;
    uint64_t v56 = v26;
    uint64_t v57 = v13;
    uint64_t v58 = v27;
    uint64_t v47 = type metadata accessor for RemoteVersion.CleanRemoteVersions();
    uint64_t v28 = 0;
    int v49 = (void (**)(char *, uint64_t *, uint64_t))(v54 + 16);
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v54 + 32);
    uint64_t v30 = (uint64_t (**)(char *, uint64_t))(v46 + 8);
    uint64_t v31 = (void (**)(char *, uint64_t))(v54 + 8);
    while (1)
    {
      char v32 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v32)
      {
        int v33 = v53;
        (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v53, v22+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v28, AssociatedTypeWitness);
        uint64_t v34 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        int v33 = v53;
        if (v45 != 8) {
          goto LABEL_26;
        }
        uint64_t v55 = result;
        (*v49)(v53, &v55, AssociatedTypeWitness);
        swift_unknownObjectRelease();
        uint64_t v34 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
LABEL_17:
          __break(1u);
LABEL_18:
          swift_bridgeObjectRelease();
          a4 = v43;
          uint64_t v24 = v42[0];
          if (v44) {
            return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
          }
LABEL_19:
          type metadata accessor for MaintenanceContinuation();
          uint64_t v41 = swift_allocObject();
          *(void *)(v41 + 16) = v24;
          *(unsigned char *)(v41 + 24) = 0;
          *(void *)(v41 + 32) = 0;
          *(unsigned char *)(v41 + 40) = 1;
          a4();
          return swift_release();
        }
      }
      (*v29)(v18, v33, AssociatedTypeWitness);
      uint64_t v35 = v51;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v37 = v36;
      uint64_t result = (*v30)(v35, v52);
      double v39 = v37 * 1000000000.0;
      if ((~COERCE__INT64(v37 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        return result;
      }
      if (v39 <= -9.22337204e18) {
        goto LABEL_24;
      }
      if (v39 >= 9.22337204e18) {
        goto LABEL_25;
      }
      uint64_t v40 = sub_24D732E08((uint64_t)v18, 0, (uint64_t)v39, 2);
      (*v31)(v18, AssociatedTypeWitness);
      sub_24D85246C(v50, v40);
      swift_release();
      ++v28;
      if (v34 == MEMORY[0x253327DC0](v22, AssociatedTypeWitness)) {
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRelease();
  if ((v44 & 1) == 0) {
    goto LABEL_19;
  }
  return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
}

uint64_t type metadata accessor for Maintenance.FixupConflictInGSForDatalessItems()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D731970()
{
  return swift_initClassMetadata2();
}

unint64_t sub_24D7319A8()
{
  return 0xD000000000000022;
}

uint64_t sub_24D7319C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v120 = a3;
  uint64_t v93 = a2;
  uint64_t v5 = (void *)*v3;
  uint64_t v88 = sub_24DCC8CE8();
  uint64_t v124 = *(void (***)(char *, uint64_t))(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v87 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v5[75];
  uint64_t v8 = v5[76];
  uint64_t v9 = v5[77];
  uint64_t v10 = v5[78];
  uint64_t v130 = v7;
  uint64_t v131 = v8;
  uint64_t v132 = v9;
  uint64_t v133 = v10;
  uint64_t v91 = type metadata accessor for ReconciliationMutation();
  uint64_t v106 = *(void (***)(uint64_t, uint64_t))(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v92 = (char *)&v72 - v11;
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v101 = sub_24DCCA3F8();
  uint64_t v104 = *(void (***)(char *, uint64_t))(v101 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v101);
  id v89 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v102 = (char *)&v72 - v16;
  uint64_t v103 = v12;
  unint64_t v99 = *(void (***)(char *, uint64_t))(v12 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v100 = (char *)&v72 - v17;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v112 = sub_24DCCA3F8();
  *(void *)&long long v98 = *(void *)(v112 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v112);
  uint64_t v111 = (char *)&v72 - v20;
  uint64_t v113 = AssociatedTypeWitness;
  uint64_t v97 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v114 = (char *)&v72 - v21;
  uint64_t v130 = v7;
  uint64_t v131 = v8;
  uint64_t v86 = v8;
  uint64_t v132 = v9;
  uint64_t v133 = v10;
  uint64_t v85 = v10;
  uint64_t v22 = type metadata accessor for ItemReconciliation();
  uint64_t v110 = sub_24DCCA3F8();
  uint64_t v96 = *(void *)(v110 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v110);
  uint64_t v115 = (char *)&v72 - v24;
  uint64_t v119 = v22;
  uint64_t v25 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v118 = (char *)&v72 - v26;
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v30;
  MEMORY[0x270FA5388](v29);
  int v33 = (char *)&v72 - v32;
  uint64_t v34 = swift_bridgeObjectRetain();
  if (!MEMORY[0x253327DC0](v34, v27)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v81 = v3;
  uint64_t v77 = v9;
  uint64_t v78 = v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v36 = 0;
  v126 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
  uint64_t v127 = AssociatedConformanceWitness + 72;
  uint64_t v121 = AssociatedConformanceWitness + 64;
  uint64_t v128 = (void (**)(char *, uint64_t *, uint64_t))(v28 + 16);
  uint64_t v129 = AssociatedConformanceWitness;
  uint64_t v125 = (void (**)(char *, char *, uint64_t))(v28 + 32);
  long long v117 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v109 = (void (**)(char *, uint64_t, uint64_t))(v25 + 32);
  int v108 = (void (**)(char *, char *, uint64_t))(v98 + 16);
  uint64_t v107 = (unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 6);
  uint64_t v95 = (void (**)(char *, char *, uint64_t))(v97 + 4);
  uint64_t v94 = (uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 6);
  uint64_t v84 = (void (**)(void))(v99 + 4);
  uint64_t v80 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), char *, uint64_t))(v99 + 2);
  uint64_t v79 = (void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v99 + 7);
  uint64_t v90 = v104 + 1;
  uint64_t v76 = (void (**)(char *, char *, uint64_t))(v97 + 2);
  uint64_t v75 = (uint64_t (**)(char *, uint64_t))(v124 + 1);
  uint64_t v74 = v106 + 1;
  uint64_t v83 = v99 + 1;
  ++v97;
  uint64_t v104 = (void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v124 = (void (**)(char *, uint64_t))(v28 + 8);
  unint64_t v99 = (void (**)(char *, uint64_t))(v98 + 8);
  uint64_t v106 = (void (**)(uint64_t, uint64_t))(v96 + 8);
  long long v98 = xmmword_24DCDA460;
  uint64_t v37 = v113;
  uint64_t v38 = (uint64_t)v115;
  uint64_t v39 = v28;
  uint64_t v116 = v33;
  uint64_t v105 = a1;
  uint64_t v123 = v28;
  while (1)
  {
    uint64_t v41 = v37;
    char v42 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v42)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v33, a1+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v36, v27);
      uint64_t v43 = v36 + 1;
      if (__OFADD__(v36, 1)) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t result = sub_24DCCA778();
      if (v82 != 8) {
        goto LABEL_36;
      }
      uint64_t v130 = result;
      (*v128)(v33, &v130, v27);
      swift_unknownObjectRelease();
      uint64_t v43 = v36 + 1;
      if (__OFADD__(v36, 1))
      {
LABEL_28:
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
    (*v125)(v31, v33, v27);
    if (v126(v27, v129) & 1) != 0 || ((*(uint64_t (**)(uint64_t))(v129 + 64))(v27))
    {
      (*v124)(v31, v27);
LABEL_4:
      uint64_t v37 = v41;
      goto LABEL_5;
    }
    uint64_t v44 = v122;
    sub_24D4759C8((uint64_t)v31, v38);
    if (v44) {
      goto LABEL_31;
    }
    uint64_t v45 = v38;
    uint64_t v46 = v38;
    uint64_t v47 = v119;
    int v48 = (*v117)(v45, 1, v119);
    uint64_t v122 = 0;
    if (v48 == 1)
    {
      (*v124)(v31, v27);
      (*v106)(v46, v110);
      uint64_t v38 = v46;
      int v33 = v116;
      goto LABEL_4;
    }
    int v49 = v118;
    (*v109)(v118, v46, v47);
    uint64_t v50 = v111;
    uint64_t v51 = v112;
    (*v108)(v111, &v49[*(int *)(v47 + 52)], v112);
    if ((*v107)(v50, 1, v41) == 1)
    {
      (*v104)(v118, v47);
      (*v124)(v31, v27);
      (*v99)(v50, v51);
      uint64_t v38 = (uint64_t)v115;
      int v33 = v116;
      uint64_t v37 = v41;
      a1 = v105;
      goto LABEL_5;
    }
    (*v95)(v114, v50, v41);
    uint64_t v52 = v102;
    uint64_t v53 = v122;
    (*(void (**)(char *, uint64_t))(*(void *)v120[4] + 240))(v31, 1);
    if (v53)
    {
      (*v97)(v114, v113);
      (*v104)(v118, v119);
LABEL_31:
      (*v124)(v31, v27);
      return swift_bridgeObjectRelease();
    }
    uint64_t v122 = 0;
    uint64_t v54 = v103;
    int v55 = (*v94)(v52, 1, v103);
    uint64_t v56 = v118;
    a1 = v105;
    if (v55 == 1)
    {
      uint64_t v37 = v113;
      (*v97)(v114, v113);
      (*v104)(v56, v119);
      (*v124)(v31, v27);
      (*v90)(v52, v101);
      uint64_t v38 = (uint64_t)v115;
      int v33 = v116;
      goto LABEL_5;
    }
    uint64_t v57 = v100;
    (*v84)();
    uint64_t v58 = &v57[*(int *)(v54 + 48)];
    uint64_t v59 = *(int *)(type metadata accessor for ItemMetadata() + 84);
    int v33 = v116;
    if (v58[v59] == 5)
    {
      (*v83)(v57, v54);
      uint64_t v37 = v113;
      (*v97)(v114, v113);
      (*v104)(v118, v119);
      (*v124)(v31, v27);
      uint64_t v38 = (uint64_t)v115;
      goto LABEL_5;
    }
    v58[v59] = 5;
    uint64_t v60 = v54;
    unint64_t v61 = v89;
    (*v80)(v89, v57, v60);
    (*v79)(v61, 0, 1, v60);
    uint64_t v62 = v122;
    sub_24DBCB8D8(v61, (uint64_t)v31, 0, 0, 0, v120, v81[15], v81[16], 0x20000000, v93);
    if (v62)
    {
      (*v90)((char *)v61, v101);
      (*v83)(v57, v103);
      (*v97)(v114, v113);
      (*v104)(v118, v119);
      goto LABEL_31;
    }
    uint64_t v122 = 0;
    (*v90)((char *)v61, v101);
    uint64_t v130 = v78;
    uint64_t v131 = v86;
    uint64_t v132 = v77;
    uint64_t v133 = v85;
    uint64_t v96 = type metadata accessor for JobResult();
    uint64_t v63 = v113;
    uint64_t v64 = swift_getAssociatedConformanceWitness();
    uint64_t v130 = v27;
    uint64_t v131 = v63;
    uint64_t v132 = v129;
    uint64_t v133 = v64;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v73 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*v76)(v92, v114, v113);
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = v87;
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v67 = v66;
    uint64_t result = (*v75)(v65, v88);
    double v69 = v67 * 1000000000.0;
    if ((~COERCE__INT64(v67 * 1000000000.0) & 0x7FF0000000000000) == 0) {
      break;
    }
    uint64_t v38 = (uint64_t)v115;
    if (v69 <= -9.22337204e18) {
      goto LABEL_34;
    }
    if (v69 >= 9.22337204e18) {
      goto LABEL_35;
    }
    uint64_t v70 = (uint64_t)v92;
    uint64_t v71 = &v92[v73];
    *(_OWORD *)uint64_t v71 = v98;
    *((void *)v71 + 2) = (uint64_t)v69;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_24D907568(v93, v70);
    (*v74)(v70, v91);
    (*v83)(v100, v103);
    uint64_t v37 = v113;
    (*v97)(v114, v113);
    (*v104)(v118, v119);
    (*v124)(v31, v27);
LABEL_5:
    ++v36;
    BOOL v40 = v43 == MEMORY[0x253327DC0](a1, v27);
    uint64_t v39 = v123;
    if (v40) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_24D732AD4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    uint64_t v7 = swift_dynamicCastClass();
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v7 = *(void *)(v7 + 16);
      uint64_t v9 = *(unsigned __int8 *)(v8 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v9 = 1;
LABEL_6:
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 32) + 592))(v7, v9);
  uint64_t v12 = v11;
  char v14 = v13;
  sub_24D7319C4(v10, a3, (void *)a1);
  swift_bridgeObjectRelease();
  if (v14) {
    return ((uint64_t (*)(void, void, void, void))a4)(0, 0, 0, 0);
  }
  type metadata accessor for MaintenanceContinuation();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  *(unsigned char *)(v15 + 24) = 0;
  *(void *)(v15 + 32) = 0;
  *(unsigned char *)(v15 + 40) = 1;
  a4();

  return swift_release();
}

uint64_t sub_24D732CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_24D983960(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v8;
}

uint64_t type metadata accessor for Maintenance.MarkAllUploadedItemAsPurgable()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for Maintenance()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D732DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return v2;
    }
  }
  else
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      LOBYTE(v2) = 1;
    }
    if (v2) {
      return 0;
    }
  }
  uint64_t v2 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40)) {
    return v2;
  }
  return (*(void *)(a1 + 32) == *(void *)(a2 + 32)) & ~v2;
}

uint64_t sub_24D732E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24D983960(a1, a2, a3, a4);
}

uint64_t sub_24D732E6C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D732EAC(char a1)
{
  return sub_24D7311E8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24D732EB8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D732EF0(void *a1, void *a2, uint64_t a3)
{
  return sub_24DC2A36C(a1, a2, a3, *(uint64_t (**)(void, void, void, uint64_t))(v3 + 16));
}

uint64_t sub_24D732EF8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D732F30()
{
  return sub_24D731304(*(unsigned char *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_24D732F50(uint64_t a1, void **a2)
{
  uint64_t v45 = a1;
  uint64_t v3 = (*a2)[10];
  uint64_t v4 = (*a2)[11];
  uint64_t v5 = (*a2)[12];
  uint64_t v6 = (*a2)[13];
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  uint64_t v38 = v6;
  uint64_t v39 = v4;
  uint64_t v43 = v5;
  uint64_t v44 = v6;
  uint64_t v35 = type metadata accessor for PersistenceTrigger();
  uint64_t v37 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v36 = (char *)&v33 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_24DCCA3F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  char v13 = (char *)&v33 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v33 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v45, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, AssociatedTypeWitness) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  uint64_t v18 = v39;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, AssociatedTypeWitness);
  uint64_t v19 = v45 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64);
  if (*(unsigned char *)(v19 + 16) || (*(unsigned char *)(v19 + 1) & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, AssociatedTypeWitness);
  }
  uint64_t v20 = v3;
  uint64_t v21 = AssociatedTypeWitness;
  uint64_t v33 = v20;
  uint64_t v34 = v16;
  uint64_t v41 = v20;
  uint64_t v42 = v18;
  uint64_t v43 = v5;
  uint64_t v44 = v38;
  uint64_t v22 = (int *)type metadata accessor for ItemReconciliation();
  uint64_t v23 = v40;
  uint64_t v24 = sub_24DB88314((uint64_t)a2, v22);
  if (v23) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v34, AssociatedTypeWitness);
  }
  if (v24 == 70) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v34, AssociatedTypeWitness);
  }
  uint64_t v25 = v24;
  if ((*(uint64_t (**)(void))(*a2[3] + 320))()) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v34, AssociatedTypeWitness);
  }
  uint64_t v45 = v25;
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v28 = swift_getAssociatedConformanceWitness();
  uint64_t v41 = AssociatedTypeWitness;
  uint64_t v42 = v26;
  uint64_t v43 = AssociatedConformanceWitness;
  uint64_t v44 = v28;
  type metadata accessor for ReconciliationID();
  uint64_t v29 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v30 = v36;
  uint64_t v31 = v34;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v36, v34, v21);
  swift_storeEnumTagMultiPayload();
  v30[v29] = v45;
  uint64_t v32 = v35;
  swift_storeEnumTagMultiPayload();
  ((void (*)(char *))(*a2)[39])(v30);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v31, v21);
}

uint64_t sub_24D733474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *sub_24D7334DC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28],
    a1[29],
    a1[30]);
  return a1;
}

uint64_t sub_24D733560()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D733598()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D7335D0()
{
  return sub_24D7202E0();
}

uint64_t sub_24D7335E0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D733638(void *a1, char a2)
{
  return sub_24D720388(a1, a2 & 1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_24D73364C()
{
  sub_24D46C814(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D7336B0()
{
  sub_24D7204BC(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void (**)(void *, void, void, void *))(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

unint64_t sub_24D7336DC()
{
  unint64_t result = qword_26986E3A0;
  if (!qword_26986E3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E3A0);
  }
  return result;
}

unint64_t sub_24D733730()
{
  unint64_t result = qword_26986C230;
  if (!qword_26986C230)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B199DF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986C230);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MaintenanceContinuation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D733868);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaintenanceContinuation.CodingKeys()
{
  return &type metadata for MaintenanceContinuation.CodingKeys;
}

unint64_t sub_24D7338A4()
{
  unint64_t result = qword_26986E3B0;
  if (!qword_26986E3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E3B0);
  }
  return result;
}

unint64_t sub_24D7338FC()
{
  unint64_t result = qword_26986E3B8;
  if (!qword_26986E3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E3B8);
  }
  return result;
}

unint64_t sub_24D733954()
{
  unint64_t result = qword_26986E3C0;
  if (!qword_26986E3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E3C0);
  }
  return result;
}

uint64_t sub_24D7339A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449776F72 && a2 == 0xE500000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6573616870 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24D733A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24DCCA3F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - v6, a1, v4);
  uint64_t v8 = *(void *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    long long v13 = 0u;
    long long v14 = 0u;
  }
  else
  {
    *((void *)&v14 + 1) = swift_getAssociatedTypeWitness();
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v13);
    sub_24DCC9B38();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, a2);
  }
  uint64_t v9 = sub_24D3E3EB4((uint64_t)&v13);
  uint64_t v11 = v10;
  sub_24D3E3E54((uint64_t)&v13);
  if (v11) {
    return v9;
  }
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

uint64_t sub_24D733CB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v26 - v16;
  if (swift_dynamicCastMetatype())
  {
    id v29 = objc_msgSend(v31, sel_longAtIndex_, a1);
    goto LABEL_3;
  }
  uint64_t v17 = v9;
  id v19 = v31;
  if (swift_dynamicCastMetatype())
  {
    id v29 = objc_msgSend(v19, sel_unsignedLongAtIndex_, a1);
    swift_dynamicCast();
    sub_24DCC9B48();
    uint64_t v18 = *(void *)(a2 - 8);
    uint64_t v17 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, a2) == 1) {
      goto LABEL_7;
    }
  }
  else
  {
    if (!swift_dynamicCastMetatype())
    {
      if (!swift_dynamicCastMetatype()) {
        sub_24DA83148((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 363);
      }
      id v22 = objc_msgSend(v19, sel_stringAtIndex_, a1);
      uint64_t v23 = sub_24DCC97E8();
      uint64_t v25 = v24;

      id v29 = (id)v23;
      uint64_t v30 = v25;
LABEL_3:
      swift_dynamicCast();
      sub_24DCC9B48();
      uint64_t v18 = *(void *)(a2 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, a2) != 1) {
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v28, v17, a2);
      }
LABEL_7:
      (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v27);
      sub_24D511F64();
      swift_allocError();
      *uint64_t v20 = 0;
      return swift_willThrow();
    }
    id v29 = objc_msgSend(v19, sel_unsignedLongLongAtIndex_, a1);
    swift_dynamicCast();
    sub_24DCC9B48();
    uint64_t v18 = *(void *)(a2 - 8);
    uint64_t v17 = v12;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, a2) == 1) {
      goto LABEL_7;
    }
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v28, v17, a2);
}

uint64_t sub_24D734148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DA6D5A0(a2, *(void *)(a3 + 8));
  uint64_t v7 = sub_24D735F30(v6, a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_24D7341C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v19 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v19 - v8, a1, v6);
  uint64_t v10 = *(void *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    long long v20 = 0u;
    long long v21 = 0u;
  }
  else
  {
    *((void *)&v21 + 1) = a2;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v20);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(boxed_opaque_existential_0, v9, a2);
  }
  uint64_t v12 = sub_24D3E3EB4((uint64_t)&v20);
  uint64_t v14 = v13;
  sub_24D3E3E54((uint64_t)&v20);
  if (!v14)
  {
    sub_24DCC8718();
    swift_allocObject();
    sub_24DCC8708();
    sub_24DCC86E8();
    v19[0] = a3;
    swift_getWitnessTable();
    uint64_t v15 = sub_24DCC86F8();
    unint64_t v17 = v16;
    uint64_t v12 = sub_24D5F0D1C(v15, v16);
    swift_release();
    sub_24D400DCC(v15, v17);
  }
  return v12;
}

uint64_t sub_24D734460(ValueMetadata *a1, uint64_t a2)
{
  uint64_t v5 = sub_24DCC9858();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_24DCC8CE8();
  MEMORY[0x270FA5388](v6);
  if (objc_msgSend(v2, sel_isNullAtIndex_, a2)) {
    sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
  }
  if (swift_dynamicCastMetatype()) {
    sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
  }
  type metadata accessor for NSFileProviderItemIdentifier(0);
  uint64_t v8 = v7;
  if (swift_dynamicCastMetatype()) {
    sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 262);
  }
  if (a1 == (ValueMetadata *)MEMORY[0x263F8D538])
  {
    objc_msgSend(v2, sel_doubleAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x263F8D4F8])
  {
    objc_msgSend(v2, sel_BOOLAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x263F8E778])
  {
    objc_msgSend(v2, sel_unsignedCharAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x263F8E498])
  {
    objc_msgSend(v2, sel_charAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x263F8E888])
  {
    objc_msgSend(v2, sel_unsignedShortAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x263F8E4F0])
  {
    objc_msgSend(v2, sel_shortAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x263F8E8F8])
  {
    objc_msgSend(v2, sel_unsignedIntAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x263F8E548])
  {
    objc_msgSend(v2, sel_intAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x263F8D9D0])
  {
    objc_msgSend(v2, sel_unsignedLongAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x263F8D6C8])
  {
    objc_msgSend(v2, sel_longAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x263F8E970])
  {
    objc_msgSend(v2, sel_unsignedLongLongAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x263F8E5C0])
  {
    objc_msgSend(v2, sel_longLongAtIndex_, a2);
  }
  else
  {
    if (a1 == (ValueMetadata *)MEMORY[0x263F06F78]) {
      goto LABEL_34;
    }
    if (a1 == (ValueMetadata *)MEMORY[0x263F8D310])
    {
      id v15 = objc_msgSend(v2, sel_stringAtIndex_, a2);
      sub_24DCC97E8();

      return swift_dynamicCast();
    }
    if ((ValueMetadata *)v6 == a1)
    {
      objc_msgSend(v2, sel_doubleAtIndex_, a2);
      sub_24DCC8C78();
      return swift_dynamicCast();
    }
    if (a1 == &type metadata for FPItemVersionData)
    {
LABEL_34:
      id v14 = objc_msgSend(v2, sel_dataAtIndex_, a2);
      sub_24DCC8B68();
    }
    else
    {
      if (v8 != a1)
      {
        sub_24DCC86D8();
        swift_allocObject();
        sub_24DCC86C8();
        id v9 = objc_msgSend(v2, sel_dataAtIndex_, a2);
        uint64_t v10 = sub_24DCC8B68();
        unint64_t v12 = v11;

        sub_24DCC86B8();
        sub_24D400DCC(v10, v12);
        return swift_release();
      }
      id v16 = objc_msgSend(v2, sel_dataAtIndex_, a2);
      uint64_t v17 = sub_24DCC8B68();
      unint64_t v19 = v18;

      sub_24DCC9848();
      uint64_t v20 = sub_24DCC9808();
      if (v21)
      {
        uint64_t v22 = HIBYTE(v21) & 0xF;
        if ((v21 & 0x2000000000000000) == 0) {
          uint64_t v22 = v20 & 0xFFFFFFFFFFFFLL;
        }
        if (v22) {
          sub_24DCC97B8();
        }
        sub_24D400DCC(v17, v19);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_24D400DCC(v17, v19);
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199E70);
    }
  }
  return swift_dynamicCast();
}

uint64_t sub_24D734AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_24DCCA758();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v17 - v9;
  uint64_t v11 = sub_24DCCA8B8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v17 - v13;
  v17[0] = 40;
  v17[1] = 0xE100000000000000;
  MEMORY[0x253327B80](a2, a3);
  *(void *)(swift_allocObject() + 16) = v4;
  id v15 = v4;
  swift_getWitnessTable();
  sub_24DCCAA48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_getWitnessTable();
  sub_24D3F0EB8();
  sub_24DCC9B28();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return v17[0];
}

void *sub_24D734D78()
{
  BOOL v2 = (void *)sub_24DCC9C98();
  uint64_t v4 = v2;
  if (objc_msgSend(v0, sel_next))
  {
    while (1)
    {
      BOOL v2 = (void *)MEMORY[0x253329610]();
      sub_24D736550((uint64_t)&v4);
      if (v1) {
        break;
      }
      if ((objc_msgSend(v0, sel_next) & 1) == 0) {
        return v4;
      }
    }
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_24D734E40(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24DCC8288();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v58 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v53 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  id v15 = (char *)v53 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  unint64_t v18 = (char *)v53 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v53 - v19;
  unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v55 = v2;
  v21((char *)v53 - v19, v2, a1);
  uint64_t v61 = 13;
  v21(v18, (uint64_t)v20, a1);
  uint64_t v22 = sub_24DCCAD98();
  if (v22)
  {
    uint64_t v23 = (void *)v22;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, a1);
  }
  else
  {
    uint64_t v23 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v24, v18, a1);
  }
  type metadata accessor for Code(0);
  sub_24D736600(&qword_26986B410, type metadata accessor for Code);
  char v25 = sub_24DCC86A8();

  if (v25) {
    goto LABEL_9;
  }
  LODWORD(v61) = sub_24DCC8388();
  v21(v15, (uint64_t)v20, a1);
  uint64_t v26 = sub_24DCCAD98();
  if (v26)
  {
    uint64_t v27 = (void *)v26;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, a1);
  }
  else
  {
    uint64_t v27 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v28, v15, a1);
  }
  sub_24D4C5C60();
  char v29 = sub_24DCC86A8();

  if (v29)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, a1);
  }
  else
  {
    sub_24DCC8188();
    id v31 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v31(v12, v20, a1);
    uint64_t v32 = sub_24DCCAD98();
    v53[0] = v31;
    v53[1] = v7 + 32;
    if (v32)
    {
      uint64_t v33 = (void *)v32;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, a1);
    }
    else
    {
      uint64_t v33 = (void *)swift_allocError();
      v31(v34, v12, a1);
    }
    uint64_t v36 = v56;
    uint64_t v35 = v57;
    sub_24D736600((unint64_t *)&qword_26B1943D0, MEMORY[0x263F06038]);
    uint64_t v37 = v58;
    char v38 = sub_24DCC86A8();

    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v35);
    if ((v38 & 1) == 0)
    {
      uint64_t v39 = v54;
      v21(v54, v55, a1);
      uint64_t v40 = sub_24DCCAD98();
      if (v40)
      {
        uint64_t v41 = (void *)v40;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v39, a1);
      }
      else
      {
        uint64_t v41 = (void *)swift_allocError();
        ((void (*)(uint64_t, char *, uint64_t))v53[0])(v42, v39, a1);
      }
      uint64_t v43 = (void *)sub_24DCC8818();

      id v44 = objc_msgSend(v43, sel_underlyingErrors);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
      uint64_t v45 = sub_24DCC9C28();

      uint64_t v46 = *(void *)(v45 + 16);
      if (!v46)
      {
LABEL_23:

        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v47 = 0;
      while (1)
      {
        int v48 = *(void **)(v45 + 8 * v47 + 32);
        swift_getErrorValue();
        uint64_t v49 = v59;
        uint64_t v50 = v60;
        id v51 = v48;
        char v52 = sub_24D734E40(v49, v50);

        if (v52) {
          break;
        }
        if (v46 == ++v47) {
          goto LABEL_23;
        }
      }

      swift_bridgeObjectRelease();
    }
  }
  return 1;
}

uint64_t sub_24D73544C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24DCCA7D8();
  uint64_t v15 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v14 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - v7;
  sub_24DCC8448();
  swift_allocObject();
  sub_24DCC8438();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
  sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
  uint64_t v10 = swift_allocError();
  sub_24D3E4A9C(&qword_26B18FAD0, (uint64_t *)&unk_26B192A40);
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t v11 = v18;
  sub_24DCC8428();
  if (v11)
  {
    MEMORY[0x25332AC60](v10, v9);
    id v19 = v11;
    id v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    if (swift_dynamicCast())
    {

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A50);
      sub_24D3E4A9C(qword_26B18FAE0, (uint64_t *)&unk_26B192A50);
      uint64_t v10 = swift_allocError();
      sub_24D3E4A9C(&qword_26B18FAD8, (uint64_t *)&unk_26B192A50);
      sub_24DCC8428();
      swift_release();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v4);
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    swift_release();
  }
  return v10;
}

void *sub_24D735884(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v44 = a2;
  uint64_t v60 = *MEMORY[0x263EF8340];
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v45 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v36 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v46 = v5;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14((char *)&v36 - v15, v3, a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
  if (swift_dynamicCast())
  {
    sub_24D735EC8((uint64_t)&v49, (uint64_t)v48);
    sub_24DCC8478();
    swift_allocObject();
    sub_24DCC8468();
    sub_24D735EC8((uint64_t)v48, (uint64_t)&v47);
    sub_24D3E4A9C((unint64_t *)&unk_26986E3D0, (uint64_t *)&unk_26B192A40);
    uint64_t v16 = (void *)sub_24DCC8458();
    swift_release();
    sub_24D5B3AB4((uint64_t)v48);
  }
  else
  {
    v14(v13, v3, a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A50);
    if (swift_dynamicCast())
    {
      id v17 = v49;
      unint64_t v18 = v50;
      uint64_t v43 = v50;
      id v44 = v49;
      id v19 = v52;
      uint64_t v20 = v53;
      unint64_t v21 = v54;
      uint64_t v41 = v53;
      uint64_t v42 = v52;
      unint64_t v40 = v54;
      uint64_t v45 = v55;
      uint64_t v46 = v56;
      uint64_t v37 = v57;
      unint64_t v38 = v51;
      uint64_t v36 = v58;
      int v39 = v59;
      sub_24DCC8478();
      swift_allocObject();
      sub_24DCC8468();
      id v49 = v17;
      uint64_t v50 = v18;
      unint64_t v22 = v38;
      unint64_t v51 = v38;
      char v52 = v19;
      uint64_t v53 = v20;
      unint64_t v54 = v21;
      uint64_t v55 = v45;
      uint64_t v56 = v46;
      uint64_t v23 = v36;
      uint64_t v24 = v37;
      uint64_t v57 = v37;
      uint64_t v58 = v36;
      LOBYTE(v19) = v39;
      unsigned __int8 v59 = v39;
      sub_24D3E4A9C(&qword_26986E3C8, (uint64_t *)&unk_26B192A50);
      uint64_t v16 = (void *)sub_24DCC8458();
      swift_release();
      sub_24D5B38F0(v44, v43, v22, v42, v41, v40, v45, v46, v24, v23, (char)v19);
    }
    else
    {
      swift_getDynamicType();
      sub_24D3FB6F8(0, (unint64_t *)&qword_26B1940A0);
      if (swift_dynamicCastMetatype())
      {
        char v25 = self;
        v14(v10, v3, a1);
        uint64_t v26 = sub_24DCCAE08();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v10, a1);
        id v49 = 0;
        id v27 = objc_msgSend(v25, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v26, 1, &v49);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v28 = v45;
        v14(v45, v3, a1);
        uint64_t v29 = sub_24DCCAD98();
        if (v29)
        {
          uint64_t v30 = (void *)v29;
          (*(void (**)(char *, uint64_t))(v46 + 8))(v28, a1);
        }
        else
        {
          uint64_t v30 = (void *)swift_allocError();
          (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v31, v28, a1);
        }
        uint64_t v32 = self;
        uint64_t v33 = (void *)sub_24DCC8818();

        id v49 = 0;
        id v27 = objc_msgSend(v32, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v33, 1, &v49);
      }
      id v34 = v49;
      if (v27)
      {
        uint64_t v16 = (void *)sub_24DCC8B68();
      }
      else
      {
        uint64_t v16 = v34;
        sub_24DCC8828();

        swift_willThrow();
      }
    }
  }
  return v16;
}

uint64_t sub_24D735E08@<X0>(uint64_t a1@<X0>, ValueMetadata *a2@<X1>, uint64_t a3@<X8>)
{
  if (objc_msgSend(v3, sel_isNullAtIndex_, a1))
  {
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t result = sub_24D734460(a2, a1);
    if (v4) {
      return result;
    }
    uint64_t v8 = 0;
  }
  return (*((uint64_t (**)(uint64_t, uint64_t, uint64_t, ValueMetadata *))a2[-1].Description + 7))(a3, v8, 1, a2);
}

uint64_t sub_24D735EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D735F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v51 = a2;
  uint64_t v7 = sub_24DCCA3F8();
  uint64_t v37 = *(void (***)(char *, uint64_t))(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v46 = *(void (***)(char *, uint64_t))(a3 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v17 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v53 = (char *)&v36 - v18;
  uint64_t v19 = swift_bridgeObjectRetain();
  if (MEMORY[0x253327DC0](v19, AssociatedTypeWitness))
  {
    uint64_t v36 = v15;
    uint64_t v43 = v12;
    uint64_t v44 = a4;
    uint64_t v20 = 0;
    id v49 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v50 = (void (**)(char *, void *, uint64_t))(v14 + 16);
    uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 6);
    int v48 = (void (**)(char *, uint64_t, uint64_t))(v37 + 2);
    uint64_t v38 = a4 + 16;
    int v39 = (void (**)(char *, char *, uint64_t))(v46 + 4);
    unint64_t v40 = v46 + 1;
    uint64_t v41 = AssociatedTypeWitness;
    uint64_t v45 = 0;
    uint64_t v46 = (void (**)(char *, uint64_t))(v14 + 8);
    ++v37;
    uint64_t v42 = a1;
    do
    {
      char v21 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v21)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v53, a1+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v20, AssociatedTypeWitness);
        uint64_t v22 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        if (v36 != 8)
        {
          __break(1u);
          return result;
        }
        v54[0] = result;
        (*v50)(v53, v54, AssociatedTypeWitness);
        swift_unknownObjectRelease();
        uint64_t v22 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_13:
          __break(1u);
          break;
        }
      }
      (*v49)(v17, v53, AssociatedTypeWitness);
      (*v48)(v10, v51, v7);
      if ((*v47)(v10, 1, a3) == 1)
      {
        (*v37)(v10, v7);
      }
      else
      {
        uint64_t v23 = v17;
        uint64_t v24 = v7;
        char v25 = v43;
        (*v39)(v43, v10, a3);
        uint64_t v26 = v45;
        (*(void (**)(char *, id, uint64_t))(v44 + 16))(v23, v52, a3);
        if (v26)
        {
          (*v40)(v25, a3);
          (*v46)(v23, v41);
          swift_bridgeObjectRelease();
          uint64_t v33 = (void *)sub_24DCC8818();
          id v34 = v52;
          objc_msgSend(v52, sel_setLastError_, v33);

          id v35 = objc_msgSend(v34, sel_bindObjectParameter_, 0);
          uint64_t v32 = sub_24DCC97E8();

          return v32;
        }
        uint64_t v45 = 0;
        swift_bridgeObjectRelease();
        (*v40)(v25, a3);
        uint64_t v7 = v24;
        id v17 = v23;
        uint64_t AssociatedTypeWitness = v41;
        a1 = v42;
      }
      (*v46)(v17, AssociatedTypeWitness);
      ++v20;
    }
    while (v22 != MEMORY[0x253327DC0](a1, AssociatedTypeWitness));
  }
  swift_bridgeObjectRelease();
  uint64_t v28 = MEMORY[0x253327D80](a1, AssociatedTypeWitness);
  uint64_t v29 = MEMORY[0x253327AD0](2108479, 0xE300000000000000, v28);
  v54[0] = v29;
  v54[1] = v30;
  uint64_t v31 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0) {
    uint64_t v31 = v29 & 0xFFFFFFFFFFFFLL;
  }
  if (!v31) {
    return v29;
  }
  sub_24D856218(2);
  return v54[0];
}

void sub_24D7364B8(id a1@<X1>, void *a2@<X0>, uint64_t *a3@<X8>)
{
  id v4 = objc_msgSend(a1, sel_bindLongParameter_, *a2);
  uint64_t v5 = sub_24DCC97E8();
  uint64_t v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

uint64_t sub_24D736518()
{
  return swift_deallocObject();
}

uint64_t sub_24D736550(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x270FA5388](a1);
  uint64_t result = v3(v2);
  if (!v1)
  {
    sub_24DCC9D48();
    return sub_24DCC9D08();
  }
  return result;
}

uint64_t sub_24D736600(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_24D736648(void *a1, void *a2)
{
  uint64_t v5 = (uint64_t *)MEMORY[0x263F8EE78];
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (objc_msgSend(a1, sel_next))
  {
    while (1)
    {
      uint64_t v6 = (void *)MEMORY[0x253329610]();
      sub_24D665458(a2, &v8);
      if (v2) {
        break;
      }
      MEMORY[0x253327CA0]();
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24DCC9C78();
      }
      sub_24DCC9CD8();
      uint64_t v5 = &v9;
      sub_24DCC9C48();
      if ((objc_msgSend(a1, sel_next) & 1) == 0) {
        return (uint64_t *)v9;
      }
    }
    swift_bridgeObjectRelease();
  }
  return v5;
}

id sub_24D73675C(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  return sub_24D73680C(a1, a2, a3, a4, a5, a6, (void (*)(void *__return_ptr, void, void, void, void, void))sub_24DA093D4);
}

id sub_24D736788(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_24D736A24(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, id, id))sub_24DA0ABB4);
}

id sub_24D7367B4(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_24D736A24(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, id, id))sub_24DA0CE18);
}

id sub_24D7367E0(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  return sub_24D73680C(a1, a2, a3, a4, a5, a6, (void (*)(void *__return_ptr, void, void, void, void, void))sub_24DA09FC4);
}

id sub_24D73680C(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void (*a7)(void *__return_ptr, void, void, void, void, void))
{
  void (*v19)(void *__return_ptr, void, void, void, void, void);
  id v20;
  id v23;
  unint64_t v24;

  id v12 = (id)MEMORY[0x263F8EE78];
  uint64_t v24 = MEMORY[0x263F8EE78];
  id v13 = a5;
  uint64_t v20 = a6;
  if (objc_msgSend(a1, sel_next))
  {
    id v18 = v13;
    uint64_t v19 = a7;
    do
    {
      uint64_t v14 = (void *)MEMORY[0x253329610]();
      id v12 = v13;
      id v15 = v20;
      a7(&v23, a2, a3, a4, v12, v15);
      if (v7)
      {

        swift_release();
        swift_bridgeObjectRelease();
        return v12;
      }
      if (v23)
      {
        id v16 = v23;
        MEMORY[0x253327CA0]();
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_24DCC9C78();
        }
        sub_24DCC9CD8();
        sub_24DCC9C48();

        id v13 = v18;
        a7 = v19;
      }
    }
    while ((objc_msgSend(a1, sel_next) & 1) != 0);
    id v12 = (id)v24;
  }

  swift_release();
  return v12;
}

id sub_24D7369CC(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_24D736A24(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, id, id))sub_24DA0BA18);
}

id sub_24D7369F8(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_24D736A24(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, id, id))sub_24DA0DC9C);
}

id sub_24D736A24(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void (*a6)(id *__return_ptr, void *, uint64_t, id, id))
{
  id v10 = (id)MEMORY[0x263F8EE78];
  unint64_t v21 = MEMORY[0x263F8EE78];
  id v11 = a4;
  id v12 = a5;
  if (objc_msgSend(a1, sel_next))
  {
    id v17 = a1;
    do
    {
      id v13 = (void *)MEMORY[0x253329610]();
      id v10 = v11;
      id v14 = v12;
      a6(&v20, a2, a3, v10, v14);
      if (v6)
      {

        swift_release();
        swift_bridgeObjectRelease();
        return v10;
      }
      if (v20)
      {
        id v15 = v20;
        MEMORY[0x253327CA0]();
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_24DCC9C78();
        }
        sub_24DCC9CD8();
        sub_24DCC9C48();

        a1 = v17;
      }
    }
    while ((objc_msgSend(a1, sel_next) & 1) != 0);
    id v10 = (id)v21;
  }

  swift_release();
  return v10;
}

id sub_24D736BE4()
{
  if (qword_26986A778 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26986E3E0;

  return v0;
}

uint64_t sub_24D736C44(uint64_t a1)
{
  uint64_t v2 = sub_24DCC8A58();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_24DCC89E8();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_24D736D2C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConcreteFPDPurger();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_24D736DA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConcreteFPDPurger();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_24D736DD4()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConcreteFPDPurger()), sel_init);
  qword_26986E3E0 = (uint64_t)result;
  return result;
}

uint64_t sub_24D736E04()
{
  uint64_t v0 = sub_24DCCA1F8();
  uint64_t v20 = *(void *)(v0 - 8);
  uint64_t v21 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v19 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24DCCA188();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v18 - v7;
  uint64_t v9 = sub_24DCC9398();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)v18 - v14;
  v18[1] = sub_24D7395D0();
  sub_24DCC9338();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_24D739610();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DE0);
  sub_24D739668();
  sub_24DCCA5B8();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v19, *MEMORY[0x263F8F138], v21);
  uint64_t v16 = sub_24DCCA228();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  qword_26B18FF58 = v16;
  return result;
}

void sub_24D737120(uint64_t a1)
{
  if (qword_26B18FF60 != -1) {
    swift_once();
  }
  id v3 = (id)fpfs_current_log();
  uint64_t v4 = (void *)MEMORY[0x270FA5388](v3);
  v5[2] = v1;
  v5[3] = a1;
  sub_24D6050CC(v4, 0, (uint64_t)"purgeAndWait(at:)", 17, 2, (uint64_t)sub_24D738B1C, (uint64_t)v5);
}

void sub_24D737388(uint64_t a1)
{
  uint64_t v3 = sub_24DCC8A58();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  if (qword_26B18FF60 != -1) {
    swift_once();
  }
  id v6 = (id)fpfs_current_log();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  id v9 = v1;
  sub_24D3E29E4(v6, (uint64_t)"purgeAsync(at:)", 15, 2, (uint64_t)sub_24D738B4C, v8);
  swift_release();
}

uint64_t sub_24D737738(uint64_t a1)
{
  uint64_t v2 = sub_24DCC8A58();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v40 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v32 - v6;
  uint64_t v8 = sub_24DCC9078();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v32 - v11;
  id v13 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v14 = *(void (**)(void, void, void))(v3 + 16);
  uint64_t v38 = v3 + 16;
  uint64_t v39 = a1;
  uint64_t v37 = v14;
  v14(v7, a1, v2);
  id v15 = sub_24DCC9068();
  os_log_type_t v16 = sub_24DCCA108();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v41 = v3;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v36 = v8;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v43 = v34;
    *(_DWORD *)uint64_t v19 = 136446210;
    v32[1] = v19 + 4;
    uint64_t v33 = v19;
    uint64_t v20 = (void *)sub_24DCC8948();
    id v21 = objc_msgSend(v20, sel_fp_shortDescription);
    uint64_t v35 = v2;
    id v22 = v21;

    uint64_t v23 = sub_24DCC97E8();
    uint64_t v24 = v9;
    unint64_t v26 = v25;

    uint64_t v42 = sub_24D418FB4(v23, v26, &v43);
    sub_24DCCA428();
    uint64_t v9 = v24;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v35);
    id v27 = v33;
    _os_log_impl(&dword_24D3D0000, v15, v16, "Purging: %{public}s", v33, 0xCu);
    uint64_t v28 = v34;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v28, -1, -1);
    uint64_t v8 = v36;
    MEMORY[0x25332B030](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  }

  uint64_t v29 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v30 = v39;
  MEMORY[0x270FA5388](v29);
  v32[-2] = v30;
  return sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D7395B4);
}

uint64_t sub_24D737DC0@<X0>(int *a1@<X8>)
{
  sub_24DCC8A18();
  uint64_t v2 = sub_24DCC9898();
  swift_bridgeObjectRelease();
  int v3 = removefile((const char *)(v2 + 32), 0, 0x101u);
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24D737E2C@<X0>(const char *a1@<X1>, _DWORD *a2@<X8>)
{
  sub_24DCC8A18();
  uint64_t v4 = sub_24DCC9898();
  swift_bridgeObjectRelease();
  LODWORD(a1) = removexattr((const char *)(v4 + 32), a1, 0);
  uint64_t result = swift_release();
  *a2 = a1;
  return result;
}

uint64_t sub_24D737EA4@<X0>(_DWORD *a1@<X8>)
{
  sub_24DCC8A18();
  sub_24DCC9898();
  swift_bridgeObjectRelease();
  int v2 = fpfs_clear_file_acl();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_24D737F08(uint64_t a1)
{
  uint64_t v2 = sub_24DCC8A58();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  v17[12] = (char *)v17 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_24DCC9078();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v17[13] = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v17[11] = (char *)v17 - v13;
  MEMORY[0x270FA5388](v12);
  v17[16] = a1;
  uint64_t v14 = sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D7396C4);
  v17[10] = v8;
  v17[9] = v9;
  v17[8] = v5;
  MEMORY[0x270FA5388](v14);
  v17[-2] = a1;
  uint64_t v15 = sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D7396E8);
  MEMORY[0x270FA5388](v15);
  v17[-2] = a1;
  return sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D73970C);
}

uint64_t type metadata accessor for ConcreteFPDPurger()
{
  return self;
}

uint64_t sub_24D738B1C()
{
  return sub_24D738C80(*(void *)(v0 + 24));
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24D738C20()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_24D738C80(v2);
}

uint64_t sub_24D738C80(uint64_t a1)
{
  uint64_t v76 = a1;
  v83[4] = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_24DCC8A58();
  *(void *)&long long v72 = *(void *)(v1 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v79 = (char *)&v70 - v5;
  uint64_t v6 = sub_24DCC9078();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v70 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v80 = (char *)&v70 - v15;
  MEMORY[0x270FA5388](v14);
  BOOL v17 = (char *)&v70 - v16;
  id v18 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v19 = sub_24DCC9068();
  os_log_type_t v20 = sub_24DCCA108();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v74 = v1;
  if (v21)
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl(&dword_24D3D0000, v19, v20, "Started purging...", v22, 2u);
    uint64_t v23 = v22;
    uint64_t v1 = v74;
    MEMORY[0x25332B030](v23, -1, -1);
  }

  uint64_t v75 = *(void (**)(char *, uint64_t))(v7 + 8);
  v75(v17, v6);
  id v24 = objc_msgSend(self, sel_defaultManager);
  uint64_t v25 = v76;
  sub_24DCC8A18();
  unint64_t v26 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  id v27 = objc_msgSend(v24, sel_contentsOfDirectoryAtPath_error_, v26, aBlock);

  id v28 = aBlock[0];
  uint64_t v73 = v7 + 8;
  if (v27)
  {
    uint64_t v29 = sub_24DCC9C28();
    id v30 = v28;

    id v78 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08830]), sel_init);
    uint64_t v31 = *(void *)(v29 + 16);
    if (v31)
    {
      uint64_t v71 = v13;
      uint64_t v77 = v83;
      uint64_t v32 = (void (**)(char *, uint64_t))(v72 + 8);
      swift_bridgeObjectRetain();
      uint64_t v70 = v29;
      uint64_t v33 = v29 + 40;
      *(void *)&long long v34 = 138412290;
      long long v72 = v34;
      do
      {
        swift_bridgeObjectRetain();
        sub_24DCC8988();
        swift_bridgeObjectRelease();
        uint64_t v35 = (void *)sub_24DCC8948();
        v83[2] = sub_24D736C40;
        v83[3] = 0;
        aBlock[0] = (id)MEMORY[0x263EF8330];
        aBlock[1] = (id)1107296256;
        v83[0] = sub_24D736C44;
        v83[1] = &block_descriptor_11;
        uint64_t v36 = _Block_copy(aBlock);
        swift_release();
        aBlock[0] = 0;
        objc_msgSend(v78, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v35, 1, aBlock, v36);
        _Block_release(v36);

        id v37 = aBlock[0];
        if (swift_isEscapingClosureAtFileLocation()) {
          __break(1u);
        }
        if (v37)
        {
          id v38 = v37;
          id v39 = (id)fpfs_current_or_default_log();
          sub_24DCC9088();
          id v40 = v38;
          uint64_t v41 = sub_24DCC9068();
          os_log_type_t v42 = sub_24DCCA128();
          if (os_log_type_enabled(v41, v42))
          {
            uint64_t v43 = swift_slowAlloc();
            uint64_t v44 = v6;
            uint64_t v45 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v43 = v72;
            id v46 = objc_msgSend(v40, sel_fp_prettyDescription);
            *(void *)(v43 + 4) = v46;
            *uint64_t v45 = v46;

            _os_log_impl(&dword_24D3D0000, v41, v42, "Error coordinating on purgatory item for deleting: %@", (uint8_t *)v43, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
            swift_arrayDestroy();
            uint64_t v47 = v45;
            uint64_t v6 = v44;
            MEMORY[0x25332B030](v47, -1, -1);
            MEMORY[0x25332B030](v43, -1, -1);
          }
          else
          {
          }
          v75(v80, v6);
          uint64_t v1 = v74;
        }
        v33 += 16;
        (*v32)(v79, v1);

        --v31;
      }
      while (v31);
      uint64_t v29 = v70;
      swift_bridgeObjectRelease();
      uint64_t v13 = v71;
    }
    id v48 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    swift_bridgeObjectRetain();
    id v49 = sub_24DCC9068();
    os_log_type_t v50 = sub_24DCCA108();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 134217984;
      id v52 = *(void **)(v29 + 16);
      swift_bridgeObjectRelease();
      aBlock[0] = v52;
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v49, v50, "Finished purging %ld files.", v51, 0xCu);
      MEMORY[0x25332B030](v51, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return ((uint64_t (*)(char *, uint64_t))v75)(v13, v6);
  }
  else
  {
    id v53 = aBlock[0];
    unint64_t v54 = (void *)sub_24DCC8828();

    swift_willThrow();
    id v55 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v56 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v4, v25, v1);
    uint64_t v57 = sub_24DCC9068();
    os_log_type_t v58 = sub_24DCCA128();
    if (os_log_type_enabled(v57, v58))
    {
      unsigned __int8 v59 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = (char *)swift_slowAlloc();
      aBlock[0] = v80;
      *(_DWORD *)unsigned __int8 v59 = 136446210;
      id v78 = v59 + 4;
      uint64_t v60 = (void *)sub_24DCC8948();
      id v61 = objc_msgSend(v60, sel_fp_shortDescription);
      uint64_t v79 = (char *)v6;
      id v62 = v61;

      uint64_t v63 = sub_24DCC97E8();
      unint64_t v65 = v64;

      uint64_t v81 = sub_24D418FB4(v63, v65, (uint64_t *)aBlock);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v4, v74);
      _os_log_impl(&dword_24D3D0000, v57, v58, "Failed to get contents for URL %{public}s", v59, 0xCu);
      double v66 = v80;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v66, -1, -1);
      MEMORY[0x25332B030](v59, -1, -1);

      double v67 = v10;
      uint64_t v68 = v79;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v4, v1);

      double v67 = v10;
      uint64_t v68 = (char *)v6;
    }
    return ((uint64_t (*)(char *, char *))v75)(v67, v68);
  }
}

uint64_t sub_24D7395B4@<X0>(int *a1@<X8>)
{
  return sub_24D737DC0(a1);
}

unint64_t sub_24D7395D0()
{
  unint64_t result = qword_26B197E10;
  if (!qword_26B197E10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B197E10);
  }
  return result;
}

unint64_t sub_24D739610()
{
  unint64_t result = qword_26B199E08;
  if (!qword_26B199E08)
  {
    sub_24DCCA188();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199E08);
  }
  return result;
}

unint64_t sub_24D739668()
{
  unint64_t result = qword_26B199DE8;
  if (!qword_26B199DE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199DE8);
  }
  return result;
}

uint64_t sub_24D7396C4@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D737E2C("com.apple.file-provider-domain-id", a1);
}

uint64_t sub_24D7396E8@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D737E2C("com.apple.file-provider-domain-id#PN", a1);
}

uint64_t sub_24D73970C@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D737EA4(a1);
}

uint64_t sub_24D739728()
{
  return sub_24D738B1C();
}

uint64_t sub_24D739740(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t result = sub_24D8903D0();
  if (result)
  {
    uint64_t v8 = type metadata accessor for SnapshotItem();
    uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)v6 + 304))(a1 + *(int *)(v8 + 36), 0);
    if (!v3)
    {
      if (result)
      {
        return sub_24D739FF4(a1, a3);
      }
      else
      {
        uint64_t v9 = a1 + *(int *)(v8 + 48);
        uint64_t result = type metadata accessor for ItemMetadata();
        *(unsigned char *)(v9 + *(int *)(result + 48)) = *(unsigned char *)(v9 + *(int *)(result + 44));
      }
    }
  }
  return result;
}

uint64_t sub_24D73984C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void *a5)
{
  uint64_t v74 = a2;
  uint64_t v72 = a1;
  double v67 = *(void **)a4;
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v68 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v67[10];
  uint64_t v73 = v67[12];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v71 = (char *)v62 - v14;
  uint64_t v15 = *(void **)(a4 + 32);
  uint64_t result = sub_24D8903D0();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v66 = v13;
  uint64_t v17 = *a3;
  if ((*a3 & 0x20002) == 0) {
    return result;
  }
  uint64_t v63 = a3;
  uint64_t v64 = AssociatedTypeWitness;
  unint64_t v65 = a5;
  uint64_t v18 = type metadata accessor for SnapshotItem();
  uint64_t v19 = (uint64_t (**)(uint64_t, void))(*v15 + 304);
  os_log_type_t v20 = *v19;
  uint64_t result = (*v19)(v74 + *(int *)(v18 + 36), 0);
  if (v5) {
    return result;
  }
  char v21 = result;
  if (result == 2)
  {
    if ((v17 & 2) == 0)
    {
      uint64_t v23 = v64;
      id v22 = v65;
LABEL_7:
      uint64_t v24 = v74;
      uint64_t v25 = v18;
      goto LABEL_33;
    }
    char v29 = 0;
  }
  else
  {
    if ((v17 & 2) == 0)
    {
      uint64_t v25 = v18;
      uint64_t v26 = *(int *)(v18 + 48);
      uint64_t v27 = type metadata accessor for ItemMetadata();
      if (v21)
      {
        LOBYTE(v28) = *(unsigned char *)(v72 + v26 + *(int *)(v27 + 48));
        uint64_t v23 = v64;
        id v22 = v65;
        uint64_t v24 = v74;
        goto LABEL_19;
      }
      uint64_t v23 = v64;
      id v22 = v65;
      uint64_t v24 = v74;
LABEL_33:
      uint64_t v53 = v24 + *(int *)(v25 + 48);
      uint64_t result = type metadata accessor for ItemMetadata();
      int v54 = *(unsigned __int8 *)(v53 + *(int *)(result + 44));
      *(unsigned char *)(v53 + *(int *)(result + 48)) = v54;
      if (v54 == *(unsigned __int8 *)(v72 + *(int *)(v25 + 48) + *(int *)(result + 48))) {
        return result;
      }
      if ((*v63 & 0x800000000000000) == 0) {
        *v63 |= 0x800000000000000uLL;
      }
      uint64_t v55 = v67[11];
      uint64_t v56 = v67[13];
      uint64_t v75 = v11;
      uint64_t v76 = v55;
      uint64_t v57 = v73;
      uint64_t v77 = v73;
      uint64_t v78 = v56;
      type metadata accessor for JobResult();
      uint64_t v75 = v11;
      uint64_t v76 = v55;
      uint64_t v77 = v57;
      uint64_t v78 = v56;
      type metadata accessor for PinningJob.RefreshChildPinStatus();
      uint64_t v37 = v66;
      id v38 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v71, v74, v23);
      os_log_type_t v58 = v68;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v60 = v59;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v58, v70);
      double v42 = v60 * 1000000000.0;
      if ((~COERCE__INT64(v60 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v42 > -9.22337204e18)
        {
          if (v42 < 9.22337204e18)
          {
LABEL_39:
            uint64_t v61 = sub_24D732E04(v38, 0x2000000000000000, (uint64_t)v42, 0x10000000000);
            (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v23);
            sub_24D85246C((uint64_t)v22, v61);
            return swift_release();
          }
          goto LABEL_43;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    char v29 = result & 1;
  }
  if ((*(uint64_t (**)(void, uint64_t))(**(void **)(a4 + 24) + 296))(0, 68))
  {
    char v30 = v20(v72, 0);
    char v31 = v29;
    int v28 = v30 & 1;
    uint64_t v25 = v18;
  }
  else
  {
    char v31 = v29;
    uint64_t v25 = v18;
    uint64_t v32 = v72 + *(int *)(v18 + 48);
    int v28 = *(unsigned __int8 *)(v32 + *(int *)(type metadata accessor for ItemMetadata() + 48));
  }
  uint64_t v23 = v64;
  uint64_t v24 = v74;
  if ((v31 & 1) == 0)
  {
    id v22 = v65;
    if (v28)
    {
      uint64_t v43 = v67[11];
      uint64_t v44 = v67[13];
      uint64_t v75 = v11;
      uint64_t v76 = v43;
      uint64_t v45 = v73;
      uint64_t v77 = v73;
      uint64_t v78 = v44;
      v62[1] = type metadata accessor for JobResult();
      uint64_t v75 = v11;
      uint64_t v76 = v43;
      uint64_t v77 = v45;
      uint64_t v78 = v44;
      type metadata accessor for PinningJob.PinItem();
      uint64_t v46 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v71, v24, v23);
      uint64_t v47 = v68;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v49 = v48;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v47, v70);
      double v50 = v49 * 1000000000.0;
      if ((~COERCE__INT64(v49 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      if (v50 <= -9.22337204e18)
      {
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      if (v50 >= 9.22337204e18)
      {
LABEL_49:
        __break(1u);
        return result;
      }
      uint64_t v51 = v71;
      uint64_t v52 = sub_24D732E04(v71, 0x2000000000000000, (uint64_t)v50, 0x10000000000);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v51, v23);
      sub_24D85246C((uint64_t)v22, v52);
      swift_release();
      goto LABEL_7;
    }
    goto LABEL_33;
  }
  id v22 = v65;
LABEL_19:
  if ((v28 & 1) == 0)
  {
    sub_24D739FF4(v24, v22);
    if ((v17 & 0x800000000000000) == 0) {
      *uint64_t v63 = v17 | 0x800000000000000;
    }
    uint64_t v23 = v64;
    id v22 = v65;
    uint64_t v24 = v74;
    uint64_t v25 = v18;
  }
  uint64_t v33 = v24 + *(int *)(v25 + 48);
  uint64_t result = type metadata accessor for ItemMetadata();
  if (*(unsigned char *)(v33 + *(int *)(result + 44)) == 1)
  {
    uint64_t v34 = v67[11];
    uint64_t v35 = v67[13];
    uint64_t v75 = v11;
    uint64_t v76 = v34;
    uint64_t v36 = v73;
    uint64_t v77 = v73;
    uint64_t v78 = v35;
    uint64_t v74 = type metadata accessor for JobResult();
    uint64_t v75 = v11;
    uint64_t v76 = v34;
    uint64_t v77 = v36;
    uint64_t v78 = v35;
    type metadata accessor for PinningJob.UnpinItem();
    uint64_t v37 = v66;
    id v38 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v71, v24, v23);
    id v39 = v68;
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v41 = v40;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v39, v70);
    double v42 = v41 * 1000000000.0;
    if ((~COERCE__INT64(v41 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v42 > -9.22337204e18)
      {
        if (v42 < 9.22337204e18) {
          goto LABEL_39;
        }
        goto LABEL_46;
      }
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  return result;
}

uint64_t sub_24D739FF4(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)*a2;
  uint64_t v5 = sub_24DCC8CE8();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v4[12];
  uint64_t v9 = v4[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)v31 - v12;
  uint64_t v14 = *(int *)(type metadata accessor for SnapshotItem() + 48);
  uint64_t v36 = a1;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v15 + *(int *)(v16 + 48)) = 1;
  int v17 = *(unsigned __int8 *)(v15 + *(int *)(v16 + 44));
  uint64_t v18 = v4[11];
  uint64_t v35 = a2;
  uint64_t v19 = v4[13];
  if (v17 != 1)
  {
LABEL_6:
    uint64_t v39 = v9;
    uint64_t v40 = v18;
    uint64_t v41 = v8;
    uint64_t v42 = v19;
    uint64_t v26 = v18;
    type metadata accessor for JobResult();
    uint64_t v39 = v9;
    uint64_t v40 = v26;
    uint64_t v41 = v8;
    uint64_t v42 = v19;
    type metadata accessor for PinningJob.RefreshChildPinStatus();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v36, AssociatedTypeWitness);
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v28 = v27;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v38);
    double v29 = v28 * 1000000000.0;
    if ((~COERCE__INT64(v28 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v29 > -9.22337204e18)
      {
        if (v29 < 9.22337204e18)
        {
          uint64_t v30 = sub_24D732E04(v13, 0x2000000000000000, (uint64_t)v29, 1);
          (*(void (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
          sub_24D85246C((uint64_t)v35, v30);
          return swift_release();
        }
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v39 = v9;
  uint64_t v40 = v18;
  uint64_t v41 = v8;
  uint64_t v42 = v19;
  uint64_t v20 = v18;
  v31[1] = type metadata accessor for JobResult();
  uint64_t v32 = v20;
  uint64_t v39 = v9;
  uint64_t v40 = v20;
  uint64_t v41 = v8;
  uint64_t v42 = v19;
  type metadata accessor for PinningJob.UnpinItem();
  uint64_t v33 = v11;
  uint64_t v34 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v36, AssociatedTypeWitness);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v22 = v21;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  double v24 = v22 * 1000000000.0;
  if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v24 < 9.22337204e18)
  {
    uint64_t v25 = sub_24D732E04(v13, 0x2000000000000000, (uint64_t)v24, 0x10000000000);
    uint64_t v11 = v33;
    uint64_t AssociatedTypeWitness = v34;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v34);
    sub_24D85246C((uint64_t)v35, v25);
    swift_release();
    uint64_t v18 = v32;
    goto LABEL_6;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_24D73A438()
{
  return 0x6D6574692D6E6970;
}

uint64_t sub_24D73A450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24D73A7E8(a1, a2, a3, a4, a5, (uint64_t)&unk_26FFBF420, 1, (uint64_t)sub_24D73C8E8);
}

uint64_t sub_24D73A474(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a6;
  uint64_t v30 = a5;
  uint64_t v31 = a4;
  uint64_t v32 = a3;
  uint64_t v34 = *a2;
  uint64_t v35 = v34;
  uint64_t v33 = *(void *)(v34 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v11 = sub_24DCCB058();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = swift_allocObject();
  uint64_t v37 = v16;
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = swift_allocObject();
  uint64_t v36 = v17;
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v19 = (v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v34;
  *(void *)(v22 + 16) = v33;
  *(_OWORD *)(v22 + 24) = *(_OWORD *)(v35 + 88);
  *(void *)(v22 + 40) = *(void *)(v23 + 104);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v22 + v18, v15, v11);
  uint64_t v24 = v31;
  *(void *)(v22 + v19) = v32;
  *(void *)(v22 + v20) = a2;
  *(void *)(v22 + v21) = v38;
  uint64_t v25 = (void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v30;
  void *v25 = v24;
  v25[1] = v26;
  uint64_t v27 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D73C874, v37, (uint64_t)sub_24D73CC58, v36, (uint64_t)sub_24D73C87C, v22, v27, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D73A778(uint64_t a1, uint64_t a2)
{
  return sub_24D73B0A0(a1, a2);
}

uint64_t type metadata accessor for PinningJob.PinItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D73A7A8()
{
  return 0x74692D6E69706E75;
}

uint64_t sub_24D73A7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24D73A7E8(a1, a2, a3, a4, a5, (uint64_t)&unk_26FFBF380, 0, (uint64_t)sub_24D73C858);
}

uint64_t sub_24D73A7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = v8;
  uint64_t v15 = *v8;
  uint64_t v16 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v17 = (char *)v10 + *(void *)(v15 + 576);
  unint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a1;
  v18[3] = v10;
  v18[4] = a4;
  v18[5] = a5;
  v18[6] = a3;
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, void *))(*(void *)v16 + 744);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v19(v17, a7, a8, v18);
  swift_release();

  return swift_release();
}

uint64_t sub_24D73A914(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a6;
  uint64_t v30 = a5;
  uint64_t v31 = a4;
  uint64_t v32 = a3;
  uint64_t v34 = *a2;
  uint64_t v35 = v34;
  uint64_t v33 = *(void *)(v34 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v11 = sub_24DCCB058();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = swift_allocObject();
  uint64_t v37 = v16;
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = swift_allocObject();
  uint64_t v36 = v17;
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v19 = (v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v34;
  *(void *)(v22 + 16) = v33;
  *(_OWORD *)(v22 + 24) = *(_OWORD *)(v35 + 88);
  *(void *)(v22 + 40) = *(void *)(v23 + 104);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v22 + v18, v15, v11);
  uint64_t v24 = v31;
  *(void *)(v22 + v19) = v32;
  *(void *)(v22 + v20) = a2;
  *(void *)(v22 + v21) = v38;
  uint64_t v25 = (void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v30;
  void *v25 = v24;
  v25[1] = v26;
  uint64_t v27 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D73C874, v37, (uint64_t)sub_24D732EF0, v36, (uint64_t)sub_24D73C87C, v22, v27, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D73AC18(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, void (*a5)(void, void, void, id), uint64_t a6)
{
  uint64_t v35 = a6;
  uint64_t v36 = a5;
  uint64_t v31 = a4;
  uint64_t v33 = a3;
  uint64_t v37 = a1;
  uint64_t v7 = *(void *)(*a2 + 600);
  uint64_t v29 = *(void *)(*a2 + 616);
  uint64_t v8 = type metadata accessor for SnapshotItem();
  uint64_t v34 = sub_24DCCA3F8();
  uint64_t v32 = *(void *)(v34 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v34);
  uint64_t v11 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v29 - v10);
  uint64_t v12 = *(void *)(v8 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v9);
  uint64_t v30 = (uint64_t)&v29 - v14;
  uint64_t v15 = *(void *)(v7 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  unint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v38 = (char *)&v29 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v20 = sub_24DCCB058();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (id *)((char *)&v29 - v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v29 - v21, v37, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v24 = *v22;
    id v25 = *v22;
    v36(0, 0, 0, v24);
  }
  else
  {
    uint64_t v26 = v38;
    (*(void (**)(char *, id *, uint64_t))(v15 + 32))(v38, v22, v7);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v26, v7);
    uint64_t v27 = v30;
    sub_24D97AFF8((uint64_t)v18, v7, v29, v30);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(v12 + 16))(v11, v27, v8);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v8);
    uint64_t v28 = v39;
    sub_24DBCB8D8(v11, (uint64_t)a2 + *(void *)(*a2 + 576), 0, 0, 0, v33, a2[15], a2[16], a2[17], v31);
    (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v32 + 8))(v11, v34);
    if (!v28) {
      v36(0, 0, 0, 0);
    }
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v27, v8);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v38, v7);
  }
}

uint64_t sub_24D73B0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = type metadata accessor for JobLockRule();
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_24DCCA3F8();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = (char *)v3 + *(void *)(v5 + 576);
  uint64_t v17 = v34;
  (*(void (**)(char *))(**(void **)(a2 + 32) + 280))(v16);
  if (!v17)
  {
    uint64_t v18 = v31;
    uint64_t v34 = 0;
    uint64_t v27 = v8;
    uint64_t v28 = v6;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v13, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v10);
      return 0;
    }
    else
    {
      uint64_t v19 = v32;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v15, v13, AssociatedTypeWitness);
      swift_beginAccess();
      sub_24D73C78C((uint64_t)(v3 + 7), (uint64_t)v33);
      uint64_t v31 = v3[15];
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v21 = (uint64_t)v27;
      uint64_t v22 = &v27[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v23 = &v27[*(int *)(TupleTypeMetadata3 + 64)];
      id v24 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v24(v27, v16, AssociatedTypeWitness);
      v24(v22, v15, AssociatedTypeWitness);
      v24(v23, v15, AssociatedTypeWitness);
      uint64_t v25 = v28;
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = sub_24D578CBC((uint64_t)v33, v31, v21);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v21, v25);
      sub_24D73C7F4((uint64_t)v33);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v15, AssociatedTypeWitness);
    }
  }
  return v10;
}

uint64_t type metadata accessor for PinningJob.UnpinItem()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D73B4BC()
{
  return 0xD00000000000001BLL;
}

void sub_24D73B4D8(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t, void, void, void *), uint64_t a5)
{
  uint64_t v150 = a5;
  uint64_t v151 = (void (*)(uint64_t, void, void, void *))a4;
  uint64_t v140 = a2;
  uint64_t v147 = (void *)*v5;
  uint64_t v8 = v147[75];
  uint64_t v156 = v5;
  uint64_t v9 = (ValueMetadata *)v147[77];
  uint64_t v142 = type metadata accessor for SnapshotMutation();
  uint64_t v136 = *(char **)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  uint64_t v141 = (char *)&v118 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v139 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v149 = (uint64_t)&v118 - v11;
  uint64_t v146 = sub_24DCC8CE8();
  v137 = *(char ***)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  int v145 = (char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = v9;
  uint64_t v154 = v8;
  uint64_t v13 = type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v118 - v17;
  uint64_t v152 = *(void *)(v13 - 8);
  uint64_t v19 = *(void *)(v152 + 64);
  uint64_t v20 = MEMORY[0x270FA5388](v16);
  id v148 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v144 = (char *)&v118 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v159 = (uint64_t)&v118 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v158 = (char *)&v118 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v157 = (char *)&v118 - v27;
  uint64_t v138 = (void **)a1;
  uint64_t v28 = *(void *)(a1 + 32);
  if (!sub_24D8903D0()) {
    return;
  }
  uint64_t v135 = a3;
  uint64_t v29 = (char *)v156 + *(void *)(*v156 + 576);
  (*(void (**)(char *, uint64_t))(*(void *)v28 + 240))(v29, 1);
  uint64_t v134 = v29;
  uint64_t v31 = v152;
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v152 + 48))(v18, 1, v13);
  if (v32 != 1)
  {
    uint64_t v45 = *(void (**)(uint64_t, char *, uint64_t))(v31 + 32);
    uint64_t v46 = (uint64_t)v157;
    uint64_t v129 = v31 + 32;
    uint64_t v128 = v45;
    v45((uint64_t)v157, v18, v13);
    uint64_t v47 = v46 + *(int *)(v13 + 48);
    uint64_t v143 = type metadata accessor for ItemMetadata();
    uint64_t v48 = *(int *)(v143 + 48);
    uint64_t v132 = v47;
    uint64_t v131 = v48;
    uint64_t v49 = v31;
    if (*(unsigned char *)(v47 + v48) == 1)
    {
      uint64_t WitnessTable = swift_getWitnessTable();
      char v51 = sub_24D98BC10(v13, WitnessTable);
      uint64_t v52 = v144;
      if (v51)
      {
        uint64_t v53 = v145;
        sub_24DCC8CD8();
        sub_24DCC8C88();
        double v55 = v54;
        ((void (*)(char *, uint64_t))v137[1])(v53, v146);
        double v56 = v55 * 1000000000.0;
        if ((~COERCE__INT64(v55 * 1000000000.0) & 0x7FF0000000000000) == 0) {
          goto LABEL_59;
        }
        if (v56 <= -9.22337204e18)
        {
LABEL_60:
          __break(1u);
        }
        else
        {
          uint64_t v57 = v134;
          if (v56 < 9.22337204e18)
          {
            sub_24DC0F868(v46, 0, (uint64_t)v56, 0x10000000000, v138, 0, v135);
LABEL_15:
            uint64_t v58 = (*(uint64_t (**)(char *, uint64_t *))(*(void *)v28 + 472))(v57, v140);
            uint64_t v118 = v59;
            uint64_t v123 = 0;
            uint64_t v60 = MEMORY[0x253327DC0](v58, v13);
            uint64_t v61 = v135;
            if (!v60)
            {
LABEL_47:
              swift_bridgeObjectRelease();
              uint64_t v116 = swift_retain();
              v151(v116, 0, 0, 0);
              swift_release_n();
              (*(void (**)(char *, uint64_t))(v49 + 8))(v157, v13);
              return;
            }
            uint64_t v62 = 0;
            uint64_t v140 = (uint64_t *)(v49 + 16);
            uint64_t v122 = (void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16);
            v126 = (void (**)(char *, uint64_t))(v137 + 1);
            uint64_t v121 = (void (**)(uint64_t, uint64_t))(v139 + 8);
            v137 = (char **)(v49 + 8);
            uint64_t v120 = (void (**)(uint64_t, uint64_t))(v136 + 8);
            unint64_t v119 = 0x800000024DD057E0;
            uint64_t v130 = v58;
            while (1)
            {
              char v64 = sub_24DCC9CB8();
              sub_24DCC9C68();
              if (v64)
              {
                unint64_t v65 = v58
                    + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))
                    + *(void *)(v49 + 72) * v62;
                uint64_t v139 = *(void *)(v49 + 16);
                ((void (*)(char *, unint64_t, uint64_t))v139)(v158, v65, v13);
              }
              else
              {
                uint64_t v115 = sub_24DCCA778();
                if (v19 != 8) {
                  goto LABEL_62;
                }
                uint64_t v160 = v115;
                uint64_t v139 = *v140;
                ((void (*)(char *, uint64_t *, uint64_t))v139)(v158, &v160, v13);
                swift_unknownObjectRelease();
              }
              uint64_t v66 = v143;
              if (__OFADD__(v62, 1))
              {
                __break(1u);
LABEL_50:
                __break(1u);
LABEL_51:
                __break(1u);
LABEL_52:
                __break(1u);
LABEL_53:
                __break(1u);
LABEL_54:
                __break(1u);
LABEL_55:
                __break(1u);
LABEL_56:
                __break(1u);
LABEL_57:
                __break(1u);
LABEL_58:
                __break(1u);
LABEL_59:
                __break(1u);
                goto LABEL_60;
              }
              uint64_t v134 = (char *)(v62 + 1);
              uint64_t v67 = v159;
              v128(v159, v158, v13);
              uint64_t v68 = v67 + *(int *)(v13 + 48);
              if (*(unsigned char *)(v68 + *(int *)(v66 + 44)) == 1 && *(unsigned char *)(v132 + v131) == 1)
              {
                uint64_t v69 = v147[76];
                uint64_t v70 = v147[78];
                uint64_t v72 = v153;
                uint64_t v71 = v154;
                uint64_t v160 = v154;
                uint64_t v161 = v69;
                uint64_t v162 = v153;
                uint64_t v163 = v70;
                uint64_t v136 = (char *)type metadata accessor for JobResult();
                uint64_t v160 = v71;
                uint64_t v161 = v69;
                uint64_t v162 = v72;
                uint64_t v163 = v70;
                type metadata accessor for PinningJob.UnpinItem();
                (*v122)(v149, v159, AssociatedTypeWitness);
                uint64_t v73 = v145;
                sub_24DCC8CD8();
                sub_24DCC8C88();
                double v75 = v74;
                (*v126)(v73, v146);
                double v76 = v75 * 1000000000.0;
                if ((~COERCE__INT64(v75 * 1000000000.0) & 0x7FF0000000000000) == 0) {
                  goto LABEL_50;
                }
                if (v76 <= -9.22337204e18) {
                  goto LABEL_51;
                }
                uint64_t v61 = v135;
                if (v76 >= 9.22337204e18) {
                  goto LABEL_53;
                }
                uint64_t v77 = (uint64_t)v76;
                swift_allocObject();
                uint64_t v78 = v149;
                uint64_t v79 = sub_24D983960(v149, 0x2000000000000000, v77, 0x10000000000);
                (*v121)(v78, AssociatedTypeWitness);
                sub_24D85246C(v61, v79);
                swift_release();
                uint64_t v49 = v152;
              }
              uint64_t v133 = swift_getWitnessTable();
              char v80 = sub_24D98BC10(v13, v133);
              ((void (*)(char *, char *, uint64_t))v139)(v52, v157, v13);
              if ((v80 & 1) == 0) {
                break;
              }
              char v81 = v52[*(int *)(v13 + 48) + *(int *)(v143 + 48)];
              uint64_t v136 = *v137;
              ((void (*)(char *, uint64_t))v136)(v52, v13);
              if ((v81 & 1) == 0) {
                goto LABEL_36;
              }
              uint64_t v82 = v145;
              sub_24DCC8CD8();
              sub_24DCC8C88();
              double v84 = v83;
              (*v126)(v82, v146);
              double v85 = v84 * 1000000000.0;
              if ((~COERCE__INT64(v84 * 1000000000.0) & 0x7FF0000000000000) == 0) {
                goto LABEL_52;
              }
              uint64_t v86 = v143;
              if (v85 <= -9.22337204e18) {
                goto LABEL_54;
              }
              if (v85 >= 9.22337204e18) {
                goto LABEL_55;
              }
              uint64_t v87 = v61;
              uint64_t v33 = v123;
              sub_24DC0F868(v159, 0, (uint64_t)v85, 0x10000000000, v138, 0, v87);
              if (v33)
              {
                swift_release();
                long long v117 = (void (*)(char *, uint64_t))v136;
                ((void (*)(uint64_t, uint64_t))v136)(v159, v13);
                swift_bridgeObjectRelease();
                v117(v157, v13);
                id v30 = v33;
                v151(0, 0, 0, v33);

                goto LABEL_3;
              }
              uint64_t v123 = 0;
              uint64_t v61 = v135;
LABEL_37:
              int v88 = *(unsigned __int8 *)(v68 + *(int *)(v86 + 48));
              uint64_t v89 = v86;
              int v90 = *(unsigned __int8 *)(v132 + v131);
              if (v88 == v90)
              {
                uint64_t v58 = v130;
                ((void (*)(uint64_t, uint64_t))v136)(v159, v13);
              }
              else
              {
                uint64_t v91 = v148;
                uint64_t v127 = v62;
                uint64_t v92 = (void (*)(char *, uint64_t, uint64_t))v139;
                ((void (*)(char *, uint64_t, uint64_t))v139)(v148, v159, v13);
                v91[*(int *)(v13 + 48) + *(int *)(v89 + 48)] = v90;
                uint64_t v93 = v147[76];
                uint64_t v94 = v147[78];
                uint64_t v160 = v154;
                uint64_t v161 = v93;
                uint64_t v124 = v93;
                uint64_t v162 = v153;
                uint64_t v163 = v94;
                uint64_t v125 = v94;
                uint64_t v95 = type metadata accessor for JobResult();
                MEMORY[0x270FA5388](v95);
                strcpy((char *)&v118 - 32, "from to  reason ");
                uint64_t v160 = v13;
                uint64_t v161 = v13;
                uint64_t v162 = &type metadata for Fields;
                uint64_t v163 = MEMORY[0x263F8D310];
                TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
                uint64_t v97 = (uint64_t)v141;
                long long v98 = &v141[TupleTypeMetadata[12]];
                uint64_t v99 = TupleTypeMetadata[16];
                uint64_t v100 = &v141[TupleTypeMetadata[20]];
                v92(v141, v159, v13);
                v92(v98, (uint64_t)v91, v13);
                uint64_t v62 = v127;
                *(void *)(v97 + v99) = 0x800000000000000;
                *(void *)uint64_t v100 = 0xD000000000000019;
                *((void *)v100 + 1) = v119;
                uint64_t v61 = v135;
                uint64_t v101 = v142;
                swift_storeEnumTagMultiPayload();
                sub_24D9075B0(v61, v97);
                (*v120)(v97, v101);
                char v102 = sub_24D98BC10(v13, v133);
                uint64_t v58 = v130;
                if ((v102 & 1) == 0)
                {
                  uint64_t v160 = v154;
                  uint64_t v161 = v124;
                  uint64_t v162 = v153;
                  uint64_t v163 = v125;
                  type metadata accessor for Maintenance.ResolveItemEvictability();
                  (*v122)(v149, v159, AssociatedTypeWitness);
                  uint64_t v103 = v145;
                  sub_24DCC8CD8();
                  sub_24DCC8C88();
                  double v105 = v104;
                  (*v126)(v103, v146);
                  double v106 = v105 * 1000000000.0;
                  if ((~COERCE__INT64(v105 * 1000000000.0) & 0x7FF0000000000000) == 0) {
                    goto LABEL_56;
                  }
                  if (v106 <= -9.22337204e18) {
                    goto LABEL_57;
                  }
                  if (v106 >= 9.22337204e18) {
                    goto LABEL_58;
                  }
                  uint64_t v107 = v149;
                  uint64_t v108 = sub_24D732E04(v149, 0, (uint64_t)v106, 0x10000000000);
                  (*v121)(v107, AssociatedTypeWitness);
                  sub_24D85246C(v61, v108);
                  swift_release();
                  if (sub_24D98BCC4(v13, v133) == 1)
                  {
                    uint64_t v109 = v156[15];
                    uint64_t v110 = v156[16];
                    uint64_t v111 = v156[17];
                    swift_allocObject();
                    uint64_t v112 = sub_24D983960(v159, v109, v110, v111);
                    sub_24D85246C(v61, v112);
                    swift_release();
                  }
                }
                uint64_t v113 = (void (*)(uint64_t, uint64_t))v136;
                ((void (*)(char *, uint64_t))v136)(v148, v13);
                uint64_t v114 = v113;
                uint64_t v49 = v152;
                uint64_t v52 = v144;
                v114(v159, v13);
              }
              uint64_t v63 = MEMORY[0x253327DC0](v58, v13);
              ++v62;
              if (v134 == (char *)v63) {
                goto LABEL_47;
              }
            }
            uint64_t v136 = *v137;
            ((void (*)(char *, uint64_t))v136)(v52, v13);
LABEL_36:
            uint64_t v86 = v143;
            goto LABEL_37;
          }
        }
        __break(1u);
LABEL_62:
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v52 = v144;
    }
    uint64_t v57 = v134;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  type metadata accessor for FileTreeError();
  swift_getWitnessTable();
  uint64_t v33 = (void *)swift_allocError();
  uint64_t v35 = v34;
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v37 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v39 = swift_getAssociatedConformanceWitness();
  uint64_t v160 = v36;
  uint64_t v161 = v37;
  uint64_t v162 = (ValueMetadata *)AssociatedConformanceWitness;
  uint64_t v163 = v39;
  uint64_t v40 = type metadata accessor for FileItemVersion();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
  uint64_t v41 = AssociatedTypeWitness;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v43 = v35 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v44 = *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, char *, uint64_t))(v139 + 16))(v35, v134, v41);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v43, 1, 1, v40);
  *(void *)(v35 + v44) = 0;
  swift_storeEnumTagMultiPayload();
  v151(0, 0, 0, v33);
LABEL_3:
}

uint64_t type metadata accessor for PinningJob.RefreshChildPinStatus()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D73C78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1937B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D73C7F4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1937B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24D73C858(uint64_t a1)
{
  return sub_24D73C900(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D73A914);
}

void sub_24D73C87C()
{
}

uint64_t objectdestroyTm_2()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D73C8E8(uint64_t a1)
{
  return sub_24D73C900(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D73A474);
}

uint64_t sub_24D73C900(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t objectdestroy_4Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D73C95C()
{
  char v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 24) + 392))(0);
  return sub_24D983288(v1 & 1) & 1;
}

uint64_t sub_24D73C9BC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_10Tm_0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v2 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  if (swift_getEnumCaseMultiPayload() == 1) {

  }
  else {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D73CB64()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v1 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24D73AC18(v0 + v2, *(uint64_t **)(v0 + v3), *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, void, void, id))(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8));
}

uint64_t type metadata accessor for PinningJob()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D73CC5C(NSObject *a1, void (*a2)(void, void, void), uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v144 = a6;
  *(void *)&long long v146 = a3;
  *((void *)&v146 + 1) = a4;
  unint64_t v147 = (unint64_t)a2;
  uint64_t v9 = *(void *)(*a5 + 80);
  uint64_t v10 = *(void *)(*a5 + 104);
  uint64_t v11 = *(void *)(*a5 + 96);
  uint64_t v148 = *(void *)(*a5 + 88);
  uint64_t v8 = v148;
  uint64_t v149 = v9;
  uint64_t v150 = v10;
  uint64_t v151 = v11;
  uint64_t v12 = type metadata accessor for ItemReconciliation();
  uint64_t v138 = *(void *)(v12 - 8);
  uint64_t v139 = v12;
  MEMORY[0x270FA5388](v12);
  v137 = ((char *)&v115 - v13);
  uint64_t v125 = type metadata accessor for SnapshotMutation();
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v123 = (char *)&v115 - v14;
  uint64_t v122 = type metadata accessor for SnapshotMutation();
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v120 = (char *)&v115 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v131 = sub_24DCCA3F8();
  uint64_t v130 = *(void *)(v131 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v131);
  long long v117 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v118 = (char *)&v115 - v20;
  uint64_t v132 = AssociatedTypeWitness;
  uint64_t v134 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v127 = (char *)&v115 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unint64_t v119 = (char *)&v115 - v23;
  uint64_t v148 = v9;
  uint64_t v149 = v8;
  uint64_t v150 = v11;
  uint64_t v151 = v10;
  uint64_t v129 = type metadata accessor for ReconciliationMutation();
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  v126 = (char *)&v115 - v24;
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t v26 = sub_24DCCA3F8();
  uint64_t v135 = *(void *)(v26 - 8);
  uint64_t v136 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v143 = (char *)&v115 - v28;
  uint64_t v141 = v25;
  uint64_t v140 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v133 = (char *)&v115 - v29;
  uint64_t v148 = v9;
  uint64_t v149 = v8;
  uint64_t v150 = v11;
  uint64_t v151 = v10;
  uint64_t v30 = type metadata accessor for ItemReconciliation();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v115 - v32;
  uint64_t v34 = *(void (**)(char *, NSObject *, uint64_t))(v31 + 16);
  int v145 = a1;
  v34((char *)&v115 - v32, a1, v30);
  unint64_t v35 = v147;
  if (v147 >> 7 == 0xFFFFFFFF)
  {
    uint64_t v116 = v11;
    uint64_t v36 = v9;
    uint64_t v37 = v10;
    uint64_t v38 = v8;
    uint64_t v39 = (void *)*((void *)&v146 + 1);
    uint64_t v40 = v152;
    uint64_t v41 = sub_24DB8A1C8((uint64_t)a5, v30);
    uint64_t v152 = v40;
    if (v40) {
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    }
    unint64_t v45 = v41;
    *(void *)&long long v142 = v42;
    *((void *)&v142 + 1) = v43;
    uint64_t v47 = v39;
    uint64_t v8 = v38;
    uint64_t v10 = v37;
    uint64_t v9 = v36;
    uint64_t v11 = v116;
    uint64_t v46 = v146;
    unint64_t v35 = v147;
  }
  else
  {
    unint64_t v45 = v147;
    uint64_t v47 = (void *)*((void *)&v146 + 1);
    uint64_t v46 = v146;
    long long v142 = v146;
  }
  sub_24D73DC08(v35, v46, v47);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  if (v45 >> 62)
  {
    if (v45 >> 62 == 1)
    {
      uint64_t v48 = v137;
      uint64_t v49 = sub_24DB864D4(v30, (uint64_t)v137);
      double v50 = (void *)(*(uint64_t (**)(uint64_t))(*a5 + 176))(v49);
      uint64_t v51 = (*(uint64_t (**)(void))(*(void *)v144 + 184))();
      sub_24D791580(v45, v142, *((void **)&v142 + 1), v48, v50, v51);
      (*(void (**)(NSObject *, uint64_t))(v138 + 8))(v48, v139);
      swift_release();
      swift_release();
      return sub_24D4A434C(v45);
    }
    else
    {
      BOOL v52 = (uint64_t)v45 < (uint64_t)0x8000000000000002;
      uint64_t v53 = v140;
      uint64_t v54 = v135;
      uint64_t v55 = v136;
      double v56 = v143;
      if (!v52 || v142 != 0)
      {
        (*(void (**)(char *, NSObject *, uint64_t))(v135 + 16))(v143, v145, v136);
        uint64_t v57 = v56;
        uint64_t v58 = v141;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v57, 1, v141) == 1)
        {
          (*(void (**)(char *, uint64_t))(v54 + 8))(v143, v55);
          uint64_t v59 = v145;
          uint64_t v60 = (char *)v145 + *(int *)(v30 + 52);
          uint64_t v61 = v117;
          uint64_t v62 = v131;
          (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v117, v60, v131);
          uint64_t v63 = v134;
          uint64_t v64 = v132;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v61, 1, v132) == 1)
          {
            uint64_t v114 = (*(uint64_t (**)(char *, uint64_t))(v130 + 8))(v61, v62);
            MEMORY[0x270FA5388](v114);
            *(&v115 - 6) = v9;
            *(&v115 - 5) = v8;
            *(&v115 - 4) = v11;
            *(&v115 - 3) = v10;
            *(&v115 - 2) = (uint64_t)v59;
            sub_24DA89268((uint64_t (*)(uint64_t))sub_24D73DCFC, (uint64_t)(&v115 - 8), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Reconciliation.swift", 104, 2, 59);
          }
          unint64_t v65 = v127;
          (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v127, v61, v64);
          uint64_t v148 = v9;
          uint64_t v149 = v8;
          uint64_t v150 = v11;
          uint64_t v151 = v10;
          uint64_t v66 = type metadata accessor for JobResult();
          uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          *((void *)&v146 + 1) = v66;
          unint64_t v147 = (unint64_t)v67;
          uint64_t v68 = (uint64_t)v126;
          v67(v126, v65, v64);
          uint64_t v69 = v141;
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          uint64_t v71 = swift_getAssociatedConformanceWitness();
          uint64_t v148 = v69;
          uint64_t v149 = v64;
          uint64_t v150 = AssociatedConformanceWitness;
          uint64_t v151 = v71;
          type metadata accessor for ReconciliationID();
          swift_storeEnumTagMultiPayload();
          uint64_t v72 = v129;
          swift_storeEnumTagMultiPayload();
          uint64_t v73 = v144;
          sub_24D907568(v144, v68);
          (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v68, v72);
          __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
          TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
          uint64_t v75 = *(int *)(TupleTypeMetadata3 + 48);
          uint64_t v76 = (uint64_t)v123;
          uint64_t v77 = &v123[*(int *)(TupleTypeMetadata3 + 64)];
          uint64_t v78 = v127;
          ((void (*)(char *, char *, uint64_t))v147)(v123, v127, v64);
          *(unsigned char *)(v76 + v75) = 0;
          *(void *)uint64_t v77 = 0xD000000000000016;
          *((void *)v77 + 1) = 0x800000024DD05890;
          uint64_t v79 = v125;
          swift_storeEnumTagMultiPayload();
          sub_24D9075F8(v73, v76);
          (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v76, v79);
          return (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v78, v64);
        }
        else
        {
          char v80 = v133;
          (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v133, v143, v58);
          uint64_t v148 = v9;
          uint64_t v149 = v8;
          uint64_t v150 = v11;
          uint64_t v151 = v10;
          type metadata accessor for JobResult();
          char v81 = (void (*)(void, void, void))(v53 + 16);
          uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
          uint64_t v83 = (uint64_t)v126;
          *((void *)&v146 + 1) = v82;
          unint64_t v147 = (unint64_t)v81;
          v82(v126, v80, v58);
          uint64_t v84 = swift_getAssociatedConformanceWitness();
          uint64_t v85 = v132;
          uint64_t v86 = v141;
          uint64_t v87 = swift_getAssociatedConformanceWitness();
          uint64_t v148 = v86;
          uint64_t v149 = v85;
          uint64_t v150 = v84;
          uint64_t v151 = v87;
          type metadata accessor for ReconciliationID();
          swift_storeEnumTagMultiPayload();
          uint64_t v88 = v129;
          swift_storeEnumTagMultiPayload();
          sub_24D907568(v144, v83);
          (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v83, v88);
          uint64_t v89 = *(int *)(v30 + 52);
          uint64_t v90 = v85;
          uint64_t v91 = v130;
          uint64_t v92 = v118;
          uint64_t v93 = v131;
          (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v118, (char *)v145 + v89, v131);
          uint64_t v94 = v134;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v92, 1, v90) == 1)
          {
            (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
            uint64_t v95 = swift_getTupleTypeMetadata3();
            uint64_t v96 = *(int *)(v95 + 48);
            uint64_t v97 = (uint64_t)v120;
            long long v98 = &v120[*(int *)(v95 + 64)];
            uint64_t v99 = v133;
            (*((void (**)(char *, char *, uint64_t))&v146 + 1))(v120, v133, v86);
            *(unsigned char *)(v97 + v96) = 0;
            *(void *)long long v98 = 0xD000000000000016;
            *((void *)v98 + 1) = 0x800000024DD05890;
            uint64_t v100 = v122;
            swift_storeEnumTagMultiPayload();
            sub_24D9075B0(v144, v97);
            (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v97, v100);
            return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v99, v86);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v119, v92, v90);
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
            uint64_t v101 = swift_getTupleTypeMetadata3();
            uint64_t v102 = *(int *)(v101 + 48);
            uint64_t v103 = v86;
            uint64_t v104 = (uint64_t)v120;
            double v105 = &v120[*(int *)(v101 + 64)];
            (*((void (**)(char *, char *, uint64_t))&v146 + 1))(v120, v133, v103);
            *(unsigned char *)(v104 + v102) = 0;
            *(void *)double v105 = 0xD000000000000015;
            *((void *)v105 + 1) = 0x800000024DD058B0;
            uint64_t v106 = v122;
            swift_storeEnumTagMultiPayload();
            uint64_t v107 = v144;
            sub_24D9075B0(v144, v104);
            (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v104, v106);
            uint64_t v108 = swift_getTupleTypeMetadata3();
            uint64_t v109 = *(int *)(v108 + 48);
            uint64_t v110 = (uint64_t)v123;
            uint64_t v111 = &v123[*(int *)(v108 + 64)];
            uint64_t v112 = v119;
            (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v123, v119, v90);
            *(unsigned char *)(v110 + v109) = 0;
            *(void *)uint64_t v111 = 0xD000000000000015;
            *((void *)v111 + 1) = 0x800000024DD058B0;
            uint64_t v113 = v125;
            swift_storeEnumTagMultiPayload();
            sub_24D9075F8(v107, v110);
            (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v110, v113);
            (*(void (**)(char *, uint64_t))(v94 + 8))(v112, v90);
            return (*(uint64_t (**)(char *, uint64_t))(v140 + 8))(v133, v141);
          }
        }
      }
    }
  }
  else
  {
    sub_24D791580(v45, v142, *((void **)&v142 + 1), v145, a5, v144);
    return sub_24D4A434C(v45);
  }
  return result;
}

unint64_t sub_24D73DC08(unint64_t result, uint64_t a2, void *a3)
{
  if (result >> 7 != 0xFFFFFFFF) {
    return sub_24D4A4340(result, a2, a3);
  }
  return result;
}

uint64_t sub_24D73DC1C()
{
  return 0;
}

uint64_t sub_24D73DCFC()
{
  return sub_24D73DC1C();
}

uint64_t sub_24D73DD0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1 + *(void *)(**(void **)v1 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v5(a1, v3, AssociatedTypeWitness);
}

uint64_t sub_24D73DDA8()
{
  type metadata accessor for Propagation.UpdateItem();
  uint64_t v0 = swift_dynamicCastClass();
  if (v0)
  {
    uint64_t v1 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 640));
  }
  else
  {
    if (qword_26B199AA0 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_26B1A24C8;
  }
  return *v1;
}

BOOL sub_24D73DE54(int8x16_t *a1)
{
  return sub_24D73DE84(a1, (void (*)(void, _OWORD *))type metadata accessor for Propagation.CreateItem);
}

BOOL sub_24D73DE6C(int8x16_t *a1)
{
  return sub_24D73DE84(a1, (void (*)(void, _OWORD *))type metadata accessor for Propagation.DeleteItem);
}

BOOL sub_24D73DE84(int8x16_t *a1, void (*a2)(void, _OWORD *))
{
  int8x16_t v2 = vextq_s8(a1[2], a1[2], 8uLL);
  v4[0] = vextq_s8(a1[1], a1[1], 8uLL);
  v4[1] = v2;
  a2(0, v4);
  return swift_dynamicCastClass() != 0;
}

uint64_t sub_24D73DEE4()
{
  type metadata accessor for Propagation.DeleteItem();
  uint64_t result = swift_dynamicCastClass();
  if (result) {
    return *(unsigned char *)(result + *(void *)(*(void *)result + 664)) & 1;
  }
  return result;
}

uint64_t sub_24D73DF54()
{
  return *(void *)(*(void *)v0 + 120);
}

uint64_t sub_24D73DF60()
{
  return *(void *)(*(void *)v0 + 136);
}

uint64_t sub_24D73DF6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  HIDWORD(v48) = a8;
  uint64_t v57 = a7;
  uint64_t v62 = a6;
  uint64_t v63 = a5;
  int v52 = a4;
  uint64_t v51 = a3;
  uint64_t v64 = a2;
  uint64_t v60 = a12;
  uint64_t v14 = *a1;
  uint64_t v15 = *(void *)(*a1 + 552);
  uint64_t v16 = *(void *)(*a1 + 568);
  uint64_t v58 = a10;
  uint64_t v59 = a11;
  uint64_t v54 = type metadata accessor for SnapshotItem();
  uint64_t v50 = sub_24DCCA3F8();
  uint64_t v61 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v53 = (char *)&v48 - v17;
  *(void *)a9 = a1;
  uint64_t v18 = *(void *)(v14 + 544);
  uint64_t v49 = a1;
  uint64_t v19 = *(void *)(v14 + 560);
  uint64_t v65 = v15;
  uint64_t v66 = v18;
  uint64_t v67 = v16;
  uint64_t v68 = v19;
  uint64_t v20 = (int *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  double v56 = &a9[v20[13]];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  uint64_t v65 = AssociatedTypeWitness;
  uint64_t v66 = v22;
  uint64_t v67 = AssociatedConformanceWitness;
  uint64_t v68 = v24;
  type metadata accessor for FileItemVersion();
  uint64_t v25 = sub_24DCCA3F8();
  uint64_t v26 = *(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 16);
  uint64_t v27 = v56;
  uint64_t v55 = *(void *)(v25 - 8);
  double v56 = (char *)v25;
  v26(v27, v64);
  uint64_t v28 = &a9[v20[14]];
  *(void *)uint64_t v28 = v51;
  v28[8] = v52 & 1;
  uint64_t v29 = &a9[v20[15]];
  swift_getAssociatedTypeWitness();
  uint64_t v30 = v50;
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v31 = sub_24DCCA3F8();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v29, v63, v31);
  uint64_t v33 = v62;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
  v34(&a9[v20[16]], (uint64_t)v62, v30);
  unint64_t v35 = v53;
  v34(v53, (uint64_t)v33, v30);
  uint64_t v36 = *(void *)(v54 - 8);
  uint64_t v37 = v35;
  uint64_t v38 = v35;
  uint64_t v39 = v54;
  if ((*(unsigned int (**)(char *, uint64_t))(v36 + 48))(v38, 1) == 1)
  {
    uint64_t v40 = *(void (**)(char *, uint64_t))(v61 + 8);
    v40(v37, v30);
  }
  else
  {
    swift_retain();
    uint64_t WitnessTable = swift_getWitnessTable();
    int v42 = sub_24D98BCC4(v39, WitnessTable);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v39);
    swift_release();
    uint64_t v40 = *(void (**)(char *, uint64_t))(v61 + 8);
    if (v42 != 1)
    {
      v40(v62, v30);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v63, v31);
      uint64_t result = (*(uint64_t (**)(uint64_t, char *))(v55 + 8))(v64, v56);
      *(void *)&a9[v20[17]] = v57;
      a9[v20[18]] = BYTE4(v48) & 1;
      goto LABEL_6;
    }
  }
  uint64_t v43 = v30;
  unint64_t v44 = v57 & 0xFFFFFFFFFFFFFFF7;
  v40(v62, v43);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v63, v31);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *))(v55 + 8))(v64, v56);
  *(void *)&a9[v20[17]] = v44;
  a9[v20[18]] = 0;
LABEL_6:
  *(void *)&a9[v20[19]] = v58;
  uint64_t v46 = &a9[v20[20]];
  uint64_t v47 = v60;
  *(void *)uint64_t v46 = v59;
  *((void *)v46 + 1) = v47;
  return result;
}

uint64_t sub_24D73E4C4(uint64_t a1, unsigned int (*a2)(unsigned __int8 *, uint64_t, uint64_t), uint64_t a3, int8x16_t *a4)
{
  uint64_t v270 = a3;
  v265 = a2;
  uint64_t v284 = a1;
  uint64_t v5 = a4[1].i64[0];
  uint64_t v8 = a4[2].i64[0];
  uint64_t v7 = a4[2].i64[1];
  v288 = (unsigned int (*)(void, void, void))a4[1].i64[1];
  uint64_t v6 = v288;
  uint64_t v289 = v5;
  uint64_t v9 = (unsigned int (*)(void, void, void))v5;
  v286 = (unsigned int (*)(void, void, void))v5;
  uint64_t v290 = v7;
  uint64_t v291 = v8;
  v263 = (void (*)(char *, uint64_t))type metadata accessor for Propagation.PropagationError();
  uint64_t v261 = sub_24DCCA3F8();
  uint64_t v260 = *(void *)(v261 - 8);
  MEMORY[0x270FA5388](v261);
  v264 = (char *)&v227 - v10;
  v288 = v9;
  uint64_t v289 = (uint64_t)v6;
  uint64_t v290 = v8;
  uint64_t v291 = v7;
  uint64_t v276 = type metadata accessor for ReconciliationMutation();
  uint64_t v269 = *(void *)(v276 - 8);
  MEMORY[0x270FA5388](v276);
  uint64_t v268 = (uint64_t)&v227 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v256 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  v235 = (char *)&v227 - v13;
  uint64_t v14 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v240 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  v250 = (char *)&v227 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v257 = AssociatedTypeWitness;
  v288 = (unsigned int (*)(void, void, void))AssociatedTypeWitness;
  uint64_t v289 = v16;
  uint64_t v234 = AssociatedConformanceWitness;
  uint64_t v290 = AssociatedConformanceWitness;
  uint64_t v291 = v18;
  uint64_t v19 = type metadata accessor for FileItemVersion();
  uint64_t v248 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  v238 = (char *)&v227 - v20;
  uint64_t v241 = type metadata accessor for SnapshotItem();
  uint64_t v237 = sub_24DCCA3F8();
  uint64_t v236 = *(void *)(v237 - 8);
  MEMORY[0x270FA5388](v237);
  v254 = (char *)&v227 - v21;
  uint64_t v249 = v19;
  uint64_t v245 = sub_24DCCA3F8();
  uint64_t v243 = *(void *)(v245 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v245);
  v244 = (char *)&v227 - v23;
  uint64_t v252 = v14;
  uint64_t v255 = *(void *)(v14 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v239 = (char *)&v227 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v246 = (char *)&v227 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v258 = (char *)&v227 - v29;
  uint64_t v272 = a4[-1].i64[1];
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v259 = (char *)&v227 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  v262 = (char *)&v227 - v33;
  MEMORY[0x270FA5388](v32);
  v266 = (char *)&v227 - v34;
  uint64_t v35 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v274 = *(void *)(v35 - 8);
  uint64_t v275 = v35;
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  v242 = (char *)&v227 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  v273 = (char *)&v227 - v38;
  uint64_t v285 = swift_getAssociatedTypeWitness();
  uint64_t v287 = *(void *)(v285 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v285);
  uint64_t v251 = (uint64_t)&v227 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  int v42 = (char *)&v227 - v41;
  v271 = v6;
  v288 = v6;
  uint64_t v289 = (uint64_t)v286;
  uint64_t v267 = v7;
  uint64_t v290 = v7;
  uint64_t v291 = v8;
  uint64_t v277 = v8;
  uint64_t v279 = type metadata accessor for ItemReconciliation();
  uint64_t v43 = sub_24DCCA3F8();
  uint64_t v281 = *(void *)(v43 - 8);
  uint64_t v282 = v43;
  uint64_t v44 = MEMORY[0x270FA5388](v43);
  v278 = (char *)&v227 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  v253 = (char *)&v227 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v50 = (char *)&v227 - v49;
  uint64_t v51 = MEMORY[0x270FA5388](v48);
  uint64_t v53 = (char *)&v227 - v52;
  uint64_t v54 = MEMORY[0x270FA5388](v51);
  double v56 = (char *)&v227 - v55;
  uint64_t v57 = MEMORY[0x270FA5388](v54);
  uint64_t v59 = (char *)&v227 - v58;
  uint64_t v60 = MEMORY[0x270FA5388](v57);
  uint64_t v62 = (char *)&v227 - v61;
  MEMORY[0x270FA5388](v60);
  uint64_t v64 = (char *)&v227 - v63;
  v280 = a4;
  sub_24D73DD0C((uint64_t)v42);
  uint64_t v65 = v283;
  sub_24D475DF0((uint64_t)v42, (uint64_t)v64);
  if (v65) {
    return (*(uint64_t (**)(char *, uint64_t))(v287 + 8))(v42, v285);
  }
  v232 = (unsigned __int8 *)v62;
  uint64_t v67 = v278;
  v230 = v59;
  v231 = v56;
  v229 = v53;
  v227 = v50;
  v283 = v64;
  uint64_t v233 = 0;
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v287 + 8);
  v287 += 8;
  v228 = v68;
  v68((uint64_t)v42, v285);
  BOOL v69 = sub_24D73DE84(v280, (void (*)(void, _OWORD *))type metadata accessor for Propagation.DeleteItem);
  uint64_t v70 = v281;
  uint64_t v71 = *(void (**)(unsigned __int8 *, char *, uint64_t))(v281 + 16);
  uint64_t v72 = v279;
  if (!v69)
  {
    char v81 = v232;
    uint64_t v83 = v282;
    uint64_t v82 = v283;
    v278 = *(char **)(v281 + 16);
    v71(v232, v283, v282);
    uint64_t v84 = *(void *)(v72 - 8);
    v265 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v84 + 48);
    if (v265(v81, 1, v72) == 1)
    {
      uint64_t v85 = *(void (**)(unsigned __int8 *, uint64_t))(v70 + 8);
      v85(v81, v83);
      uint64_t v86 = v83;
      return ((uint64_t (*)(char *, uint64_t))v85)(v283, v86);
    }
    int v114 = v81[*(int *)(v72 + 56)];
    uint64_t v115 = *(void (**)(char *, uint64_t))(v84 + 8);
    v264 = (char *)(v84 + 8);
    v263 = v115;
    v115((char *)v81, v72);
    LODWORD(v261) = v114;
    BOOL v116 = v114 == 4;
    uint64_t v117 = v275;
    if (v116)
    {
      uint64_t v85 = *(void (**)(unsigned __int8 *, uint64_t))(v70 + 8);
      uint64_t v86 = v282;
      return ((uint64_t (*)(char *, uint64_t))v85)(v283, v86);
    }
    uint64_t v118 = v230;
    unint64_t v119 = v82;
    uint64_t v120 = v282;
    ((void (*)(char *, char *, uint64_t))v278)(v230, v119, v282);
    if (v265((unsigned __int8 *)v118, 1, v72) == 1)
    {
      (*(void (**)(char *, uint64_t))(v281 + 8))(v118, v120);
      BOOL v121 = 0;
    }
    else
    {
      uint64_t v123 = v273;
      uint64_t v122 = v274;
      (*(void (**)(char *, char *, uint64_t))(v274 + 16))(v273, v118, v117);
      v263(v118, v72);
      uint64_t v124 = *(void *)&v123[*(int *)(v117 + 36)];
      (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v117);
      BOOL v121 = (v124 & 0x51) != 0;
    }
    uint64_t v125 = v231;
    v126 = (void (*)(char *, char *, uint64_t))v278;
    ((void (*)(char *, char *, uint64_t))v278)(v231, v283, v120);
    uint64_t v127 = v272;
    uint64_t v128 = *(unsigned __int8 **)(v272 + 16);
    uint64_t v129 = v266;
    uint64_t v130 = v280;
    uint64_t v260 = v272 + 16;
    v232 = v128;
    ((void (*)(char *, uint64_t, int8x16_t *))v128)(v266, v292, v280);
    if (v121)
    {
      (*(void (**)(char *, int8x16_t *))(v127 + 8))(v129, v130);
      v273 = *(char **)(v281 + 8);
      ((void (*)(char *, uint64_t))v273)(v125, v120);
      uint64_t v131 = v283;
LABEL_33:
      v153 = v131;
      return ((uint64_t (*)(char *, uint64_t))v273)(v153, v282);
    }
    uint64_t v132 = v229;
    v126(v229, v125, v120);
    uint64_t v133 = v279;
    if (v265((unsigned __int8 *)v132, 1, v279) == 1)
    {
      uint64_t v134 = *(void (**)(char *, uint64_t))(v281 + 8);
      v134(v125, v120);
      v273 = (char *)v134;
      v134(v132, v120);
      uint64_t v135 = v272;
      uint64_t v136 = v262;
      v137 = v280;
      (*(void (**)(char *, char *, int8x16_t *))(v272 + 32))(v262, v266, v280);
    }
    else
    {
      BOOL v138 = sub_24DB86F3C(v133);
      v273 = *(char **)(v281 + 8);
      ((void (*)(char *, uint64_t))v273)(v125, v120);
      v263(v132, v133);
      uint64_t v135 = v272;
      uint64_t v136 = v262;
      v137 = v280;
      (*(void (**)(char *, char *, int8x16_t *))(v272 + 32))(v262, v266, v280);
      if (v138)
      {
        uint64_t v139 = *(void (**)(char *, int8x16_t *))(v135 + 8);
        v139(v136, v137);
        uint64_t v131 = v283;
        goto LABEL_31;
      }
    }
    uint64_t v131 = v283;
    BOOL v140 = sub_24D73DE84(v137, (void (*)(void, _OWORD *))type metadata accessor for Propagation.CreateItem);
    uint64_t v139 = *(void (**)(char *, int8x16_t *))(v135 + 8);
    v139(v136, v137);
    if (!v140) {
      goto LABEL_33;
    }
LABEL_31:
    uint64_t v141 = v292;
    if ((sub_24D73DDA8() & 0x10) == 0)
    {
      v288 = v286;
      uint64_t v289 = (uint64_t)v271;
      uint64_t v290 = v277;
      uint64_t v291 = v267;
      uint64_t v287 = type metadata accessor for JobResult();
      uint64_t v142 = swift_getAssociatedTypeWitness();
      uint64_t v143 = swift_getAssociatedConformanceWitness();
      uint64_t v144 = v285;
      uint64_t v145 = swift_getAssociatedConformanceWitness();
      v288 = (unsigned int (*)(void, void, void))v142;
      uint64_t v289 = v144;
      uint64_t v290 = v143;
      uint64_t v291 = v145;
      type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      long long v146 = v131;
      uint64_t v147 = swift_getTupleTypeMetadata2();
      uint64_t v148 = v268;
      uint64_t v149 = v268 + *(int *)(v147 + 48);
      sub_24D73DD0C(v268);
      swift_storeEnumTagMultiPayload();
      uint64_t v150 = sub_24D73DDA8();
      long long v151 = *(_OWORD *)(*(void *)v141 + 120);
      *(void *)uint64_t v149 = v150;
      *(_OWORD *)(v149 + 8) = v151;
      swift_storeEnumTagMultiPayload();
      uint64_t v152 = v276;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v270, v148);
      (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v148, v152);
      v153 = v146;
      return ((uint64_t (*)(char *, uint64_t))v273)(v153, v282);
    }
    v266 = (char *)v139;
    uint64_t v155 = v227;
    uint64_t v156 = v131;
    uint64_t v157 = v282;
    v158 = (void (*)(char *, char *, uint64_t))v278;
    ((void (*)(char *, char *, uint64_t))v278)(v227, v156, v282);
    uint64_t v159 = v259;
    ((void (*)(char *, uint64_t, int8x16_t *))v232)(v259, v141, v137);
    if (v261 == 1)
    {
      ((void (*)(char *, int8x16_t *))v266)(v159, v137);
      uint64_t v160 = v273;
      ((void (*)(char *, uint64_t))v273)(v155, v157);
      uint64_t v161 = v157;
      return ((uint64_t (*)(char *, uint64_t))v160)(v283, v161);
    }
    uint64_t v164 = v253;
    v158(v253, v155, v157);
    uint64_t v165 = v279;
    if (v265((unsigned __int8 *)v164, 1, v279) == 1)
    {
      ((void (*)(char *, uint64_t))v273)(v164, v157);
      v166 = v280;
      uint64_t v167 = v257;
      uint64_t v168 = v256;
      uint64_t v169 = v284;
      v170 = v258;
    }
    else
    {
      uint64_t v172 = v274;
      uint64_t v171 = v275;
      uint64_t v173 = v242;
      (*(void (**)(char *, char *, uint64_t))(v274 + 16))(v242, v164, v275);
      v263(v164, v165);
      uint64_t v174 = v243;
      v175 = v244;
      uint64_t v176 = v245;
      (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v244, &v173[*(int *)(v171 + 48)], v245);
      (*(void (**)(char *, uint64_t))(v172 + 8))(v173, v171);
      uint64_t v177 = v248;
      uint64_t v178 = v249;
      int v179 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v248 + 48))(v175, 1, v249);
      v166 = v280;
      uint64_t v167 = v257;
      uint64_t v169 = v284;
      v170 = v258;
      if (v179 != 1)
      {
        uint64_t v168 = v256;
        (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v258, v175, v257);
        (*(void (**)(char *, uint64_t))(v177 + 8))(v175, v178);
        uint64_t v180 = *(void (**)(char *, void, uint64_t, uint64_t))(v168 + 56);
        v180(v170, 0, 1, v167);
LABEL_50:
        uint64_t v181 = v251;
        uint64_t v182 = *(void *)(v169 + 40);
        v183 = v259;
        sub_24D73DD0C(v251);
        v184 = v254;
        uint64_t v185 = v233;
        (*(void (**)(uint64_t, uint64_t))(*(void *)v182 + 240))(v181, 1);
        if (v185)
        {
          v228(v181, v285);
          (*(void (**)(char *, uint64_t))(v255 + 8))(v258, v252);
          ((void (*)(char *, int8x16_t *))v266)(v183, v166);
          uint64_t v186 = v282;
          v187 = v273;
          ((void (*)(char *, uint64_t))v273)(v227, v282);
          return ((uint64_t (*)(char *, uint64_t))v187)(v283, v186);
        }
        uint64_t v233 = 0;
        v228(v181, v285);
        uint64_t v188 = v241;
        uint64_t v189 = *(void *)(v241 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48))(v184, 1, v241) == 1)
        {
          (*(void (**)(char *, uint64_t))(v236 + 8))(v184, v237);
          uint64_t v190 = 1;
          uint64_t v191 = v168;
          v192 = v250;
          uint64_t v193 = TupleTypeMetadata2;
          v194 = v246;
          uint64_t v195 = v257;
        }
        else
        {
          uint64_t v196 = v248;
          v197 = v238;
          uint64_t v198 = v249;
          (*(void (**)(char *, char *, uint64_t))(v248 + 16))(v238, &v184[*(int *)(v188 + 40)], v249);
          (*(void (**)(char *, uint64_t))(v189 + 8))(v184, v188);
          v194 = v246;
          uint64_t v195 = v257;
          (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v246, v197, v257);
          (*(void (**)(char *, uint64_t))(v196 + 8))(v197, v198);
          uint64_t v190 = 0;
          uint64_t v191 = v168;
          v192 = v250;
          uint64_t v193 = TupleTypeMetadata2;
        }
        v180(v194, v190, 1, v195);
        uint64_t v199 = (uint64_t)&v192[*(int *)(v193 + 48)];
        uint64_t v200 = v194;
        uint64_t v201 = v255;
        v202 = *(void (**)(char *, char *, uint64_t))(v255 + 16);
        uint64_t v203 = v252;
        v202(v192, v258, v252);
        uint64_t v287 = v199;
        v202((char *)v199, v200, v203);
        uint64_t v204 = v195;
        uint64_t v205 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48);
        if (v205((uint64_t)v192, 1, v204) == 1)
        {
          uint64_t v206 = *(void (**)(char *, uint64_t))(v201 + 8);
          v206(v200, v203);
          v206(v258, v203);
          ((void (*)(char *, int8x16_t *))v266)(v259, v280);
          uint64_t v160 = v273;
          ((void (*)(char *, uint64_t))v273)(v227, v282);
          if (v205(v287, 1, v257) == 1)
          {
            v206(v250, v203);
            uint64_t v161 = v282;
            return ((uint64_t (*)(char *, uint64_t))v160)(v283, v161);
          }
        }
        else
        {
          uint64_t v207 = v239;
          v202(v239, v192, v203);
          uint64_t v208 = v287;
          uint64_t v209 = v257;
          if (v205(v287, 1, v257) != 1)
          {
            uint64_t v223 = v256;
            v224 = v235;
            (*(void (**)(char *, uint64_t, uint64_t))(v256 + 32))(v235, v208, v209);
            LODWORD(v287) = sub_24DCC9798();
            v225 = *(void (**)(char *, uint64_t))(v223 + 8);
            v225(v224, v209);
            v226 = *(void (**)(char *, uint64_t))(v255 + 8);
            v226(v246, v203);
            v226(v258, v203);
            ((void (*)(char *, int8x16_t *))v266)(v259, v280);
            ((void (*)(char *, uint64_t))v273)(v227, v282);
            v225(v207, v209);
            v226(v250, v203);
            uint64_t v211 = (uint64_t)v271;
            uint64_t v212 = v277;
            if (v287) {
              return ((uint64_t (*)(char *, uint64_t))v273)(v283, v282);
            }
            goto LABEL_61;
          }
          v210 = *(void (**)(char *, uint64_t))(v255 + 8);
          v210(v246, v203);
          v210(v258, v203);
          ((void (*)(char *, int8x16_t *))v266)(v259, v280);
          ((void (*)(char *, uint64_t))v273)(v227, v282);
          (*(void (**)(char *, uint64_t))(v256 + 8))(v207, v209);
        }
        (*(void (**)(char *, uint64_t))(v240 + 8))(v250, TupleTypeMetadata2);
        uint64_t v211 = (uint64_t)v271;
        uint64_t v212 = v277;
LABEL_61:
        v288 = v286;
        uint64_t v289 = v211;
        uint64_t v290 = v212;
        uint64_t v291 = v267;
        type metadata accessor for JobResult();
        uint64_t v213 = swift_getAssociatedTypeWitness();
        uint64_t v214 = swift_getAssociatedConformanceWitness();
        uint64_t v215 = v285;
        uint64_t v216 = swift_getAssociatedConformanceWitness();
        v288 = (unsigned int (*)(void, void, void))v213;
        uint64_t v289 = v215;
        uint64_t v290 = v214;
        uint64_t v291 = v216;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v217 = swift_getTupleTypeMetadata2();
        uint64_t v218 = v268;
        uint64_t v219 = v268 + *(int *)(v217 + 48);
        uint64_t v220 = v292;
        sub_24D73DD0C(v268);
        swift_storeEnumTagMultiPayload();
        long long v221 = *(_OWORD *)(*(void *)v220 + 120);
        *(void *)uint64_t v219 = 8;
        *(_OWORD *)(v219 + 8) = v221;
        swift_storeEnumTagMultiPayload();
        uint64_t v222 = v276;
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v270, v218);
        (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v218, v222);
        v153 = v283;
        return ((uint64_t (*)(void, void))v273)(v153, v282);
      }
      (*(void (**)(char *, uint64_t))(v174 + 8))(v175, v176);
      uint64_t v168 = v256;
    }
    uint64_t v180 = *(void (**)(char *, void, uint64_t, uint64_t))(v168 + 56);
    v180(v170, 1, 1, v167);
    goto LABEL_50;
  }
  uint64_t v73 = v67;
  uint64_t v75 = v282;
  double v74 = v283;
  uint64_t v76 = v279;
  v71((unsigned __int8 *)v67, v283, v282);
  uint64_t v77 = *(void *)(v72 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v67, 1, v76) == 1)
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v75);
    uint64_t v79 = v276;
    uint64_t v78 = v277;
    char v80 = v286;
  }
  else
  {
    uint64_t v88 = v273;
    uint64_t v87 = v274;
    uint64_t v89 = v73;
    uint64_t v90 = v73;
    uint64_t v91 = v275;
    (*(void (**)(char *, char *, uint64_t))(v274 + 16))(v273, v89, v275);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v90, v76);
    uint64_t v92 = *(void *)&v88[*(int *)(v91 + 40)];
    (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v91);
    uint64_t v79 = v276;
    uint64_t v78 = v277;
    char v80 = v286;
    if (v92) {
      return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v74, v75);
    }
  }
  uint64_t v93 = v292;
  if ((*(unsigned char *)(*(void *)v292 + 139) & 2) != 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v74, v75);
  }
  v288 = v80;
  uint64_t v289 = (uint64_t)v271;
  uint64_t v290 = v78;
  uint64_t v291 = v267;
  uint64_t v284 = type metadata accessor for JobResult();
  uint64_t v94 = swift_getAssociatedTypeWitness();
  uint64_t v95 = v285;
  uint64_t v96 = (unsigned int (*)(void, void, void))v94;
  uint64_t v97 = swift_getAssociatedConformanceWitness();
  uint64_t v98 = swift_getAssociatedConformanceWitness();
  v288 = v96;
  uint64_t v289 = v95;
  uint64_t v290 = v97;
  uint64_t v291 = v98;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v99 = swift_getTupleTypeMetadata2();
  uint64_t v100 = v268;
  uint64_t v101 = (_OWORD *)(v268 + *(int *)(v99 + 48));
  uint64_t v102 = v280;
  sub_24D73DD0C(v268);
  swift_storeEnumTagMultiPayload();
  *uint64_t v101 = *(_OWORD *)(*(void *)v93 + 120);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v103 = v270;
  sub_24D907568(v270, v100);
  (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v100, v79);
  uint64_t v104 = v265;
  if (!v265) {
    return (*(uint64_t (**)(char *, uint64_t))(v281 + 8))(v283, v282);
  }
  v288 = (unsigned int (*)(void, void, void))v265;
  double v105 = v265;
  uint64_t v106 = v104;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
  uint64_t v107 = v264;
  uint64_t v108 = v263;
  char v109 = swift_dynamicCast();
  uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t, void *))(*((void *)v108 - 1) + 56);
  uint64_t v111 = v282;
  if ((v109 & 1) == 0)
  {
    v110(v107, 1, 1, v108);

    (*(void (**)(char *, uint64_t))(v281 + 8))(v283, v111);
    return (*(uint64_t (**)(char *, uint64_t))(v260 + 8))(v107, v261);
  }
  uint64_t v112 = *((void *)v108 - 1);
  v110(v107, 0, 1, v108);
  uint64_t v113 = swift_getTupleTypeMetadata2();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v113 - 8) + 48))(v107, 1, v113) == 1)
  {
    (*(void (**)(char *, uint64_t))(v281 + 8))(v283, v111);

    return (*(uint64_t (**)(char *, void *))(v112 + 8))(v107, v108);
  }
  uint64_t v154 = &v107[*(int *)(v113 + 48)];
  if (*(void *)v154 == 0xD000000000000010 && *((void *)v154 + 1) == 0x800000024DD059E0)
  {
    swift_bridgeObjectRelease();
LABEL_42:
    v228((uint64_t)v107, v285);
    uint64_t v163 = v283;
    sub_24D7405D0(v283, v103, v102);

    return (*(uint64_t (**)(char *, uint64_t))(v281 + 8))(v163, v111);
  }
  char v162 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  if (v162) {
    goto LABEL_42;
  }
  (*(void (**)(char *, uint64_t))(v281 + 8))(v283, v111);

  return ((uint64_t (*)(char *, uint64_t))v228)(v107, v285);
}

uint64_t sub_24D7405D0(char *a1, uint64_t a2, void *a3)
{
  uint64_t v56 = a2;
  uint64_t v64 = a1;
  uint64_t v4 = a3[5];
  uint64_t v5 = a3[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_24DCCA3F8();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v62 = AssociatedTypeWitness;
  uint64_t v63 = (char *)&v51 - v9;
  uint64_t v61 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v51 - v10;
  uint64_t v12 = a3[2];
  uint64_t v13 = a3[4];
  uint64_t v57 = v5;
  uint64_t v58 = v4;
  uint64_t v65 = v5;
  uint64_t v66 = v12;
  uint64_t v67 = v4;
  uint64_t v68 = v13;
  uint64_t v14 = type metadata accessor for ItemReconciliation();
  uint64_t v15 = sub_24DCCA3F8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v20 = *(void *)(v14 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v17);
  uint64_t v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v51 - v24;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v64, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  uint64_t v53 = v13;
  uint64_t v54 = v23;
  uint64_t v52 = v12;
  uint64_t v27 = v57;
  uint64_t v28 = v58;
  uint64_t v64 = v11;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v19, v14);
  uint64_t v30 = v59;
  uint64_t v29 = v60;
  uint64_t v31 = v63;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v63, v25, v60);
  uint64_t v32 = v61;
  uint64_t v33 = v62;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v31, 1, v62) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v63, v29);
  }
  uint64_t v34 = v64;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v64, v63, v33);
  if (v25[*(int *)(v14 + 56)] == 1)
  {
    uint64_t v35 = v27;
    uint64_t v36 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v37 = *(int *)(v36 + 36);
    uint64_t v38 = v20;
    uint64_t v39 = (char *)v14;
    uint64_t v40 = *(void *)&v25[v37];
    uint64_t v41 = v54;
    (*(void (**)(char *, char *, char *))(v38 + 16))(v54, v25, v39);
    uint64_t v51 = v38;
    if (v40)
    {
      uint64_t v43 = *(void (**)(char *, char *))(v38 + 8);
      uint64_t v63 = v39;
      v43(v41, v39);
    }
    else
    {
      uint64_t v42 = *(void *)&v41[*(int *)(v36 + 36)];
      uint64_t v43 = *(void (**)(char *, char *))(v38 + 8);
      v43(v41, v39);
      if ((v42 & 8) == 0)
      {
        (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v62);
        return ((uint64_t (*)(char *, char *))v43)(v25, v39);
      }
      uint64_t v63 = v39;
    }
    char v44 = v25[v37];
    uint64_t v46 = v55;
    uint64_t v45 = v56;
    uint64_t v48 = v52;
    uint64_t v47 = v53;
    if ((v44 & 2) != 0)
    {
      uint64_t v65 = v52;
      uint64_t v66 = v35;
      uint64_t v67 = v53;
      uint64_t v68 = v28;
      type metadata accessor for JobResult();
      uint64_t v65 = v35;
      uint64_t v66 = v48;
      uint64_t v67 = v28;
      uint64_t v68 = v47;
      type metadata accessor for Maintenance.UnmarkParentDeletedMergeSource();
      uint64_t v49 = v64;
      uint64_t v50 = sub_24D732E04(v64, *(void *)(*(void *)v46 + 120), *(void *)(*(void *)v46 + 128), *(void *)(*(void *)v46 + 136));
      sub_24D855694(v45, v50);
      swift_release();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v49, v62);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v62);
    }
    return ((uint64_t (*)(char *, char *))v43)(v25, v63);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v14);
  }
}

uint64_t sub_24D740B68(void (*a1)(unsigned char *, uint64_t), uint64_t a2, unint64_t a3, uint64_t a4, void *a5, uint64_t a6, int8x16_t *a7)
{
  v725 = a5;
  uint64_t v723 = a6;
  uint64_t v684 = a4;
  unint64_t v653 = a3;
  uint64_t v652 = a2;
  v724 = a1;
  uint64_t v8 = (unsigned __int8 *)a7[1].i64[0];
  uint64_t v7 = (unsigned __int8 *)a7[1].i64[1];
  uint64_t v9 = a7[2].i64[0];
  uint64_t v10 = a7[2].i64[1];
  v722 = a7;
  v727 = v7;
  unint64_t v728 = (unint64_t)v8;
  uint64_t v729 = v10;
  uint64_t v730 = v9;
  uint64_t v672 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v674 = sub_24DCCA3F8();
  uint64_t v673 = *(void *)(v674 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v674);
  v670 = &v607[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  v640 = &v607[-v13];
  v727 = v8;
  unint64_t v728 = (unint64_t)v7;
  uint64_t v729 = v9;
  uint64_t v730 = v10;
  uint64_t v698 = type metadata accessor for ReconciliationMutation();
  uint64_t v699 = *(void *)(v698 - 8);
  MEMORY[0x270FA5388](v698);
  v697 = &v607[-v14];
  v727 = v8;
  unint64_t v728 = (unint64_t)v7;
  uint64_t v729 = v9;
  uint64_t v730 = v10;
  uint64_t v620 = type metadata accessor for Bouncing.BouncingContext();
  uint64_t v623 = sub_24DCCA3F8();
  uint64_t v622 = *(void *)(v623 - 8);
  MEMORY[0x270FA5388](v623);
  v621 = &v607[-v15];
  uint64_t v16 = type metadata accessor for SnapshotItem();
  uint64_t v709 = sub_24DCCA3F8();
  v708 = *(unsigned char **)(v709 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v709);
  v706 = &v607[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v657 = &v607[-v20];
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v664 = &v607[-v22];
  uint64_t v711 = v16;
  uint64_t v710 = *(void *)(v16 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v707 = (uint64_t *)&v607[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v654 = &v607[-v26];
  MEMORY[0x270FA5388](v25);
  v644 = &v607[-v27];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v638 = sub_24DCCA3F8();
  uint64_t v637 = *(void *)(v638 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v638);
  v662 = &v607[-v30];
  uint64_t v696 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  v630 = &v607[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  v636 = &v607[-v34];
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v625 = &v607[-v36];
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v628 = &v607[-v38];
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v643 = &v607[-v40];
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v646 = &v607[-v42];
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  v634 = &v607[-v44];
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v648 = &v607[-v46];
  MEMORY[0x270FA5388](v45);
  v659 = &v607[-v47];
  uint64_t v655 = sub_24DCC9078();
  uint64_t v656 = *(void *)(v655 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v655);
  v626 = &v607[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  v629 = &v607[-v51];
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  v647 = &v607[-v53];
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  v635 = &v607[-v55];
  MEMORY[0x270FA5388](v54);
  v660 = &v607[-v56];
  uint64_t v57 = swift_getAssociatedTypeWitness();
  uint64_t v58 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v679 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  v688 = (int *)&v607[-v59];
  v727 = v8;
  unint64_t v728 = (unint64_t)v7;
  uint64_t v729 = v9;
  uint64_t v730 = v10;
  uint64_t v60 = type metadata accessor for ItemReconciliation();
  uint64_t v682 = sub_24DCCA3F8();
  uint64_t v681 = *(void *)(v682 - 8);
  uint64_t v61 = MEMORY[0x270FA5388](v682);
  v691 = &v607[-v62];
  uint64_t v690 = v60;
  uint64_t v689 = *(void *)(v60 - 8);
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  v676 = &v607[-((v64 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  v677 = &v607[-v66];
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  v686 = &v607[-v68];
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  v687 = &v607[-v70];
  v693 = (uint64_t *)v58;
  uint64_t v694 = *(void *)(v58 - 8);
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  v680 = &v607[-((v72 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  v651 = &v607[-v74];
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  v639 = &v607[-v76];
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  v632 = &v607[-v78];
  uint64_t v79 = MEMORY[0x270FA5388](v77);
  v671 = &v607[-v80];
  uint64_t v81 = MEMORY[0x270FA5388](v79);
  v661 = &v607[-v82];
  uint64_t v83 = MEMORY[0x270FA5388](v81);
  v678 = &v607[-v84];
  uint64_t v85 = MEMORY[0x270FA5388](v83);
  uint64_t v683 = (uint64_t)&v607[-v86];
  MEMORY[0x270FA5388](v85);
  uint64_t v88 = &v607[-v87];
  uint64_t v701 = v9;
  v700 = v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v90 = type metadata accessor for ItemState();
  uint64_t v705 = sub_24DCCA3F8();
  uint64_t v704 = *(void *)(v705 - 8);
  uint64_t v91 = MEMORY[0x270FA5388](v705);
  uint64_t v93 = &v607[-v92];
  uint64_t v712 = v90;
  uint64_t v715 = *(void *)(v90 - 8);
  uint64_t v94 = MEMORY[0x270FA5388](v91);
  v714 = &v607[-v95];
  uint64_t v721 = v57;
  uint64_t v720 = *(void *)(v57 - 8);
  uint64_t v96 = MEMORY[0x270FA5388](v94);
  v669 = &v607[-((v97 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v98 = MEMORY[0x270FA5388](v96);
  v663 = &v607[-v99];
  uint64_t v100 = MEMORY[0x270FA5388](v98);
  v631 = &v607[-v101];
  uint64_t v102 = MEMORY[0x270FA5388](v100);
  v619 = &v607[-v103];
  uint64_t v104 = MEMORY[0x270FA5388](v102);
  v617 = &v607[-v105];
  uint64_t v106 = MEMORY[0x270FA5388](v104);
  v618 = &v607[-v107];
  uint64_t v108 = MEMORY[0x270FA5388](v106);
  v642 = &v607[-v109];
  uint64_t v110 = MEMORY[0x270FA5388](v108);
  v665 = &v607[-v111];
  uint64_t v112 = MEMORY[0x270FA5388](v110);
  v667 = &v607[-v113];
  uint64_t v114 = MEMORY[0x270FA5388](v112);
  v666 = &v607[-v115];
  uint64_t v116 = MEMORY[0x270FA5388](v114);
  v650 = &v607[-v117];
  uint64_t v118 = MEMORY[0x270FA5388](v116);
  v649 = &v607[-v119];
  uint64_t v120 = MEMORY[0x270FA5388](v118);
  v692 = &v607[-v121];
  uint64_t v122 = MEMORY[0x270FA5388](v120);
  v695 = &v607[-v123];
  MEMORY[0x270FA5388](v122);
  uint64_t v125 = &v607[-v124];
  v703 = v7;
  uint64_t v702 = v10;
  uint64_t v126 = type metadata accessor for SnapshotItem();
  uint64_t v127 = sub_24DCCA3F8();
  uint64_t v128 = *(void *)(v127 - 8);
  uint64_t v129 = MEMORY[0x270FA5388](v127);
  uint64_t v131 = &v607[-v130];
  uint64_t v717 = v126;
  uint64_t v716 = *(void *)(v126 - 8);
  uint64_t v132 = MEMORY[0x270FA5388](v129);
  v641 = &v607[-((v133 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v134 = MEMORY[0x270FA5388](v132);
  v624 = &v607[-v135];
  uint64_t v136 = MEMORY[0x270FA5388](v134);
  v627 = &v607[-v137];
  uint64_t v138 = MEMORY[0x270FA5388](v136);
  v645 = &v607[-v139];
  uint64_t v140 = MEMORY[0x270FA5388](v138);
  v633 = &v607[-v141];
  uint64_t v142 = MEMORY[0x270FA5388](v140);
  v675 = &v607[-v143];
  uint64_t v144 = MEMORY[0x270FA5388](v142);
  v658 = &v607[-v145];
  MEMORY[0x270FA5388](v144);
  v713 = &v607[-v146];
  uint64_t v668 = v725[4];
  v719 = (unsigned __int8 *)v725[5];
  if ((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(AssociatedTypeWitness, AssociatedConformanceWitness))return (*(uint64_t (**)(unint64_t, unint64_t))(*(void *)v723 + 168))(0xD00000000000002BLL, 0x800000024DD059B0); {
  uint64_t v148 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
  }
  uint64_t v616 = AssociatedConformanceWitness;
  if (v148(AssociatedTypeWitness, AssociatedConformanceWitness)) {
    return (*(uint64_t (**)(unint64_t, unint64_t))(*(void *)v723 + 168))(0xD00000000000002CLL, 0x800000024DD05980);
  }
  v615 = (unsigned __int8 *)AssociatedTypeWitness;
  uint64_t v149 = v718;
  sub_24D73DD0C((uint64_t)v125);
  uint64_t v150 = v726;
  (*(void (**)(unsigned char *, uint64_t))(*(void *)v719 + 240))(v125, 1);
  if (v150) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v720 + 8))(v125, v721);
  }
  v614 = (void (*)(void, void, void))v88;
  long long v151 = *(void (**)(unsigned char *, uint64_t))(v720 + 8);
  uint64_t v613 = v720 + 8;
  v612 = v151;
  v151(v125, v721);
  uint64_t v153 = v716;
  uint64_t v152 = v717;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v716 + 48))(v131, 1, v717) != 1)
  {
    uint64_t v726 = 0;
    uint64_t v159 = v713;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v153 + 32))(v713, v131, v152);
    uint64_t v160 = (uint64_t)v149 + v722[3].i32[3];
    uint64_t v161 = v704;
    uint64_t v162 = v705;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v704 + 16))(v93, v160, v705);
    uint64_t v163 = v715;
    uint64_t v164 = v712;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v715 + 48))(v93, 1, v712) == 1)
    {
      (*(void (**)(unsigned char *, uint64_t))(v161 + 8))(v93, v162);
      sub_24DA850A0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Reconciliation.swift", 104, 2, 217);
    }
    uint64_t v165 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v163 + 32);
    v166 = v714;
    v165(v714, v93, v164);
    uint64_t v167 = (uint64_t *)&v159[*(int *)(v152 + 44)];
    uint64_t v169 = *v167;
    unint64_t v168 = v167[1];
    v170 = (uint64_t *)&v166[*(int *)(v164 + 36)];
    uint64_t v172 = *v170;
    unint64_t v171 = v170[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v173 = sub_24D40114C(v169, v168);
    uint64_t v175 = v174;
    swift_bridgeObjectRelease();
    if (v175)
    {
      if (v173 == 12565487 && v175 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_17:
        swift_bridgeObjectRetain();
        unint64_t v188 = sub_24DCC9918();
        unint64_t v189 = sub_24D41824C(v188, v169, v168);
        uint64_t v191 = v190;
        uint64_t v193 = v192;
        uint64_t v195 = v194;
        swift_bridgeObjectRelease();
        uint64_t v169 = MEMORY[0x253327950](v189, v191, v193, v195);
        unint64_t v197 = v196;
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      char v187 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if (v187) {
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v197 = v168;
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v198 = sub_24D40114C(v172, v171);
    uint64_t v200 = v199;
    swift_bridgeObjectRelease();
    if (v200)
    {
      if (v198 == 12565487 && v200 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_24:
        swift_bridgeObjectRetain();
        unint64_t v202 = sub_24DCC9918();
        unint64_t v203 = sub_24D41824C(v202, v172, v171);
        uint64_t v205 = v204;
        uint64_t v207 = v206;
        uint64_t v209 = v208;
        swift_bridgeObjectRelease();
        uint64_t v172 = MEMORY[0x253327950](v203, v205, v207, v209);
        unint64_t v211 = v210;
        swift_bridgeObjectRelease();
LABEL_26:
        uint64_t v212 = v715;
        if (v169 == v172 && v197 == v211)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v213 = sub_24DCCAE28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v213 & 1) == 0)
          {
            (*(void (**)(unsigned char *, uint64_t))(v212 + 8))(v714, v712);
            return (*(uint64_t (**)(unsigned char *, uint64_t))(v716 + 8))(v713, v717);
          }
        }
        v707 = v170;
        uint64_t v215 = v725;
        uint64_t v214 = v726;
        uint64_t v216 = (unsigned char *)v725[2];
        uint64_t v217 = *(void (**)(uint64_t))(*(void *)v216 + 160);
        uint64_t v218 = *(void *)v216 + 160;
        uint64_t v219 = v614;
        uint64_t v220 = v714;
        v217((uint64_t)v714);
        uint64_t v221 = v717;
        if (v214)
        {
          (*(void (**)(unsigned char *, uint64_t))(v715 + 8))(v220, v712);
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v716 + 8))(v713, v221);
        }
        uint64_t v705 = v218;
        v706 = v216;
        uint64_t v223 = v720;
        uint64_t v222 = v721;
        uint64_t v224 = v720 + 48;
        v225 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v720 + 48);
        if (v225(v219, 1, v721) == 1)
        {
          (*(void (**)(char *, uint64_t *))(v694 + 8))(v219, v693);
          v226 = v700;
          v227 = v703;
          v727 = v700;
          unint64_t v728 = (unint64_t)v703;
          uint64_t v228 = v701;
          uint64_t v229 = v702;
          uint64_t v729 = v701;
          uint64_t v730 = v702;
          type metadata accessor for JobResult();
          v727 = v227;
          unint64_t v728 = (unint64_t)v226;
          uint64_t v729 = v229;
          uint64_t v730 = v228;
          type metadata accessor for Ingestion.FetchItemMetadata();
          v230 = v692;
          sub_24D73DD0C((uint64_t)v692);
          uint64_t v231 = sub_24D7C0440();
          uint64_t v233 = sub_24DC0963C((uint64_t)v230, v231, v232, 2048);
          v612(v230, v222);
          sub_24D855694(v723, v233);
          swift_release();
          (*(void (**)(unsigned char *, uint64_t))(v715 + 8))(v714, v712);
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v716 + 8))(v713, v221);
        }
        v610 = v217;
        uint64_t v704 = v224;
        v611 = v225;
        uint64_t v234 = *(void (**)(unsigned char *, void, uint64_t))(v223 + 32);
        v234(v695, v219, v222);
        int v235 = v719[32];
        char v236 = (*(uint64_t (**)(uint64_t, void (*)(unsigned char *, uint64_t), uint64_t, uint64_t))(*(void *)v215[3] + 320))(10, v724, 0x2000000000000000, 1);
        uint64_t v609 = v223 + 32;
        v614 = (void (*)(void, void, void))v234;
        int v608 = v235;
        uint64_t v237 = v716;
        if (v236)
        {
          uint64_t v238 = (*(uint64_t (**)(unsigned char *))(*(void *)v719 + 296))(v713);
          if ((v239 & 1) == 0)
          {
            uint64_t v241 = v238;
            uint64_t v726 = 0;
            uint64_t v242 = v721;
            sub_24DA604B8(v721, v721);
            uint64_t v243 = v720;
            swift_allocObject();
            uint64_t v244 = sub_24DCC9C58();
            uint64_t v245 = *(void **)(v243 + 16);
            uint64_t v720 = v243 + 16;
            ((void (*)(uint64_t, unsigned char *, uint64_t))v245)(v246, v695, v242);
            uint64_t v731 = sub_24D785484(v244);
            uint64_t v247 = v684;
            if (sub_24DCC9798())
            {
LABEL_43:
              uint64_t v248 = *v707;
              uint64_t v249 = v707[1];
              uint64_t v250 = v731;
              swift_bridgeObjectRetain();
              uint64_t v251 = v248;
              uint64_t v252 = v726;
              sub_24DBB3940(v251, v249, v250);
              v724 = v253;
              v719 = v254;
              uint64_t v255 = v713;
              if (v252)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v612(v695, v721);
                (*(void (**)(unsigned char *, uint64_t))(v715 + 8))(v714, v712);
                return (*(uint64_t (**)(unsigned char *, uint64_t))(v716 + 8))(v255, v717);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v287 = (uint64_t)v669;
              ((void (*)(unsigned char *, unsigned char *, uint64_t))v245)(v669, v255, v721);
              uint64_t v288 = (uint64_t)v670;
              uint64_t v289 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v672 - 8) + 56))(v670, 1, 1);
              uint64_t v290 = *(uint64_t (**)(uint64_t))(*v725 + 272);
              uint64_t v726 = 0;
              uint64_t v291 = (void *)v290(v289);
              uint64_t v292 = *v718;
              uint64_t v710 = *(void *)(*v718 + 120);
              uint64_t v294 = *(void *)(v292 + 128);
              uint64_t v293 = *(void *)(v292 + 136);
              uint64_t v709 = v294;
              v725 = v245;
              uint64_t v295 = v293 | 0x100000000;
              v296 = v700;
              v297 = v703;
              v727 = v700;
              unint64_t v728 = (unint64_t)v703;
              uint64_t v298 = v701;
              uint64_t v299 = v702;
              uint64_t v729 = v701;
              uint64_t v730 = v702;
              uint64_t v711 = type metadata accessor for JobResult();
              v727 = v297;
              unint64_t v728 = (unint64_t)v296;
              uint64_t v729 = v299;
              uint64_t v730 = v298;
              type metadata accessor for Bouncing.BounceItem();
              uint64_t v300 = sub_24DB9DFBC(v287, v241, (uint64_t)v724, (uint64_t)v719, v288, v291, v710, v709, v295);

              (*(void (**)(uint64_t, uint64_t))(v673 + 8))(v288, v674);
              uint64_t v301 = v721;
              v612((unsigned char *)v287, v721);
              sub_24D855694(v723, v300);
              swift_release();
              uint64_t v302 = swift_getAssociatedConformanceWitness();
              v727 = v615;
              unint64_t v728 = v301;
              uint64_t v729 = v616;
              uint64_t v730 = v302;
              type metadata accessor for ReconciliationID();
              uint64_t v303 = swift_getTupleTypeMetadata2();
              v304 = v697;
              v305 = &v697[*(int *)(v303 + 48)];
              sub_24D73DD0C((uint64_t)v697);
              swift_storeEnumTagMultiPayload();
              v306 = v713;
              ((void (*)(unsigned char *, unsigned char *, uint64_t))v725)(v305, v713, v301);
              swift_storeEnumTagMultiPayload();
              uint64_t v307 = v698;
              swift_storeEnumTagMultiPayload();
              sub_24D907568(v723, (uint64_t)v304);
              v724 = *(void (**)(unsigned char *, uint64_t))(v699 + 8);
              v724(v304, v307);
              uint64_t v308 = (uint64_t)&v304[*(int *)(v303 + 48)];
              uint64_t v309 = v721;
              ((void (*)(unsigned char *, unsigned char *, uint64_t))v725)(v304, v306, v721);
              swift_storeEnumTagMultiPayload();
              sub_24D73DD0C(v308);
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              sub_24D907568(v723, (uint64_t)v304);
              v724(v304, v307);
              v612(v695, v309);
LABEL_37:
              (*(void (**)(unsigned char *, uint64_t))(v715 + 8))(v714, v712);
              return (*(uint64_t (**)(unsigned char *, uint64_t))(v716 + 8))(v713, v717);
            }
            v273 = v680;
            uint64_t v274 = v726;
            v610(v247);
            if (!v274)
            {
              uint64_t v726 = 0;
              if (v611(v273, 1, v721) == 1)
              {
                (*(void (**)(char *, uint64_t *))(v694 + 8))(v680, v693);
              }
              else
              {
                v327 = v663;
                uint64_t v328 = v721;
                v614(v663, v680, v721);
                ((void (*)(unsigned char *, unsigned char *, uint64_t))v245)(v692, v327, v328);
                sub_24DCC9D48();
                sub_24DCC9D08();
                v612(v327, v328);
              }
              goto LABEL_43;
            }
            swift_bridgeObjectRelease();
          }
          v612(v695, v721);
          (*(void (**)(unsigned char *, uint64_t))(v715 + 8))(v714, v712);
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v237 + 8))(v713, v717);
        }
        uint64_t v240 = v691;
        sub_24D4759C8((uint64_t)v724, (uint64_t)v691);
        uint64_t v256 = v689;
        uint64_t v257 = v690;
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v689 + 48))(v240, 1, v690) == 1)
        {
          (*(void (**)(unsigned char *, uint64_t))(v681 + 8))(v240, v682);
          sub_24DBCE294((uint64_t)v724, (uint64_t)v714, 0, v725);
          uint64_t v277 = v258;
          swift_bridgeObjectRelease();
          if (v277)
          {
            v724 = (void (*)(unsigned char *, uint64_t))(*(uint64_t (**)(unsigned char *))(*(void *)v719 + 296))(v713);
            if ((v278 & 1) == 0)
            {
              uint64_t v279 = v721;
              sub_24DA604B8(v721, v721);
              uint64_t v280 = v720;
              swift_allocObject();
              uint64_t v281 = sub_24DCC9C58();
              uint64_t v282 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v280 + 16);
              uint64_t v720 = v280 + 16;
              uint64_t v711 = (uint64_t)v282;
              v282(v283, v695, v279);
              uint64_t v731 = sub_24D785484(v281);
              if ((sub_24DCC9798() & 1) == 0)
              {
                v610(v684);
                if (v611(v651, 1, v721) == 1)
                {
                  (*(void (**)(char *, uint64_t *))(v694 + 8))(v651, v693);
                }
                else
                {
                  v487 = v631;
                  uint64_t v488 = v721;
                  v614(v631, v651, v721);
                  ((void (*)(unsigned char *, unsigned char *, uint64_t))v711)(v692, v487, v488);
                  sub_24DCC9D48();
                  sub_24DCC9D08();
                  v612(v487, v488);
                }
              }
              uint64_t v284 = *v707;
              uint64_t v285 = v707[1];
              uint64_t v286 = v731;
              swift_bridgeObjectRetain();
              sub_24DBB3940(v284, v285, v286);
              uint64_t v726 = 0;
              uint64_t v429 = v428;
              uint64_t v431 = v430;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v432 = v700;
              v433 = v703;
              v727 = v700;
              unint64_t v728 = (unint64_t)v703;
              uint64_t v434 = v701;
              uint64_t v435 = v702;
              uint64_t v729 = v701;
              uint64_t v730 = v702;
              v436 = (unsigned __int8 *)type metadata accessor for JobResult();
              v727 = v433;
              unint64_t v728 = (unint64_t)v432;
              uint64_t v729 = v435;
              uint64_t v730 = v434;
              type metadata accessor for Bouncing.BounceItem();
              uint64_t v437 = (uint64_t)v640;
              uint64_t v438 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v672 - 8) + 56))(v640, 1, 1);
              v439 = (void *)(*(uint64_t (**)(uint64_t))(*v725 + 272))(v438);
              uint64_t v440 = sub_24DB9DFBC((uint64_t)v713, (uint64_t)v724, v429, v431, v437, v439, *(void *)(*v718 + 120), *(void *)(*v718 + 128), *(void *)(*v718 + 136));

              (*(void (**)(uint64_t, uint64_t))(v673 + 8))(v437, v674);
              v719 = v436;
              sub_24D855694(v723, v440);
              swift_release();
              uint64_t v441 = v721;
              uint64_t v442 = swift_getAssociatedConformanceWitness();
              v727 = v615;
              unint64_t v728 = v441;
              uint64_t v729 = v616;
              uint64_t v730 = v442;
              type metadata accessor for ReconciliationID();
              uint64_t v443 = swift_getTupleTypeMetadata2();
              v444 = v697;
              v445 = &v697[*(int *)(v443 + 48)];
              sub_24D73DD0C((uint64_t)v697);
              swift_storeEnumTagMultiPayload();
              v446 = v713;
              v447 = (void (*)(unsigned char *, unsigned char *, uint64_t))v711;
              ((void (*)(unsigned char *, unsigned char *, uint64_t))v711)(v445, v713, v441);
              swift_storeEnumTagMultiPayload();
              uint64_t v448 = v698;
              swift_storeEnumTagMultiPayload();
              sub_24D907568(v723, (uint64_t)v444);
              v449 = *(void (**)(unsigned char *, uint64_t))(v699 + 8);
              v449(v444, v448);
              uint64_t v450 = (uint64_t)&v444[*(int *)(v443 + 48)];
              v451 = v446;
              uint64_t v452 = v721;
              v447(v444, v451, v721);
              swift_storeEnumTagMultiPayload();
              sub_24D73DD0C(v450);
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              sub_24D907568(v723, (uint64_t)v444);
              v449(v444, v448);
              v453 = v695;
              uint64_t v454 = v452;
              goto LABEL_66;
            }
          }
          else
          {
            v320 = v700;
            v321 = v703;
            v727 = v700;
            unint64_t v728 = (unint64_t)v703;
            uint64_t v322 = v701;
            uint64_t v323 = v702;
            uint64_t v729 = v701;
            uint64_t v730 = v702;
            type metadata accessor for JobResult();
            v727 = v320;
            unint64_t v728 = (unint64_t)v321;
            uint64_t v729 = v322;
            uint64_t v730 = v323;
            type metadata accessor for Ingestion.FetchItemMetadata();
            uint64_t v324 = sub_24D7C0440();
            uint64_t v326 = sub_24DC0963C((uint64_t)v724, v324, v325, 256);
            sub_24D85246C(v723, v326);
            swift_release();
          }
LABEL_75:
          v612(v695, v721);
          goto LABEL_37;
        }
        uint64_t v726 = 0;
        v259 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v256 + 32);
        uint64_t v260 = v687;
        v259(v687, v240, v257);
        uint64_t v261 = &v260[*(int *)(v257 + 52)];
        uint64_t v262 = v683;
        sub_24D73DD0C(v683);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v720 + 56))(v262, 0, 1, v222);
        uint64_t v263 = v222;
        v264 = v688;
        v265 = (char *)v688 + *(int *)(TupleTypeMetadata2 + 48);
        uint64_t v266 = v694 + 16;
        uint64_t v267 = *(unsigned char **)(v694 + 16);
        uint64_t v268 = v693;
        ((void (*)(int *, unsigned char *, uint64_t *))v267)(v688, v261, v693);
        v691 = v267;
        uint64_t v682 = v266;
        ((void (*)(char *, uint64_t, uint64_t *))v267)(v265, v262, v268);
        uint64_t v269 = v611;
        if (v611((char *)v264, 1, v263) == 1)
        {
          uint64_t v270 = *(void (**)(uint64_t, uint64_t *))(v694 + 8);
          v270(v262, v268);
          if (v269(v265, 1, v263) == 1)
          {
            v270((uint64_t)v688, v693);
            v271 = v687;
            uint64_t v272 = v690;
LABEL_64:
            (*(void (**)(unsigned char *, uint64_t))(v689 + 8))(v271, v272);
LABEL_65:
            v453 = v695;
            uint64_t v454 = v721;
LABEL_66:
            v612(v453, v454);
            (*(void (**)(unsigned char *, uint64_t))(v715 + 8))(v714, v712);
            return (*(uint64_t (**)(unsigned char *, uint64_t))(v716 + 8))(v713, v717);
          }
        }
        else
        {
          uint64_t v275 = v678;
          ((void (*)(unsigned char *, int *, uint64_t *))v691)(v678, v688, v268);
          if (v269(v265, 1, v263) != 1)
          {
            v310 = v692;
            v614(v692, v265, v263);
            swift_getAssociatedConformanceWitness();
            char v311 = sub_24DCC9798();
            v312 = v612;
            v612(v310, v263);
            uint64_t v270 = *(void (**)(uint64_t, uint64_t *))(v694 + 8);
            v270(v262, v268);
            v312(v275, v263);
            v270((uint64_t)v688, v268);
            v271 = v687;
            uint64_t v272 = v690;
            if (v311) {
              goto LABEL_64;
            }
LABEL_56:
            uint64_t v276 = v726;
            sub_24DB8AE0C((uint64_t)v725, v272, (uint64_t)v686);
            if (v276)
            {
              (*(void (**)(unsigned char *, uint64_t))(v689 + 8))(v271, v272);
              goto LABEL_75;
            }
            uint64_t v726 = 0;
            if (sub_24D73DE84(v722, (void (*)(void, _OWORD *))type metadata accessor for Propagation.CreateItem))
            {
              v727 = v703;
              unint64_t v728 = (unint64_t)v700;
              uint64_t v729 = v702;
              uint64_t v730 = v701;
              type metadata accessor for Propagation.CreateItem();
              uint64_t v313 = swift_dynamicCastClass();
              if (v313)
              {
                if ((*(unsigned char *)(v313 + 141) & 4) != 0)
                {
                  swift_retain();
                  id v350 = (id)fpfs_current_or_default_log();
                  sub_24DCC9088();
                  v351 = *(void (**)(unsigned char *, void (*)(void, void), unsigned __int8 *))(v696 + 16);
                  v351(v659, (void (*)(void, void))v724, v615);
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v716 + 16))(v658, v713, v717);
                  v352 = sub_24DCC9068();
                  os_log_type_t v353 = sub_24DCCA148();
                  LODWORD(v719) = v353;
                  if (os_log_type_enabled(v352, v353))
                  {
                    uint64_t v354 = swift_slowAlloc();
                    uint64_t v694 = swift_slowAlloc();
                    v727 = (unsigned __int8 *)v694;
                    *(_DWORD *)uint64_t v354 = 136315394;
                    v693 = (uint64_t *)(v354 + 4);
                    v355 = v648;
                    v356 = v659;
                    uint64_t v357 = (uint64_t)v615;
                    v351(v648, (void (*)(void, void))v659, v615);
                    v358 = *(void (**)(unsigned char *, uint64_t))(v696 + 8);
                    v358(v356, v357);
                    uint64_t v359 = sub_24DCCAD78();
                    unint64_t v361 = v360;
                    v358(v355, v357);
                    uint64_t v731 = sub_24D418FB4(v359, v361, (uint64_t *)&v727);
                    sub_24DCCA428();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v354 + 12) = 2080;
                    uint64_t v362 = v721;
                    v363 = v692;
                    v364 = v658;
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v720 + 16))(v692, v658, v721);
                    (*(void (**)(unsigned char *, uint64_t))(v716 + 8))(v364, v717);
                    swift_getAssociatedConformanceWitness();
                    uint64_t v365 = sub_24DCCAD78();
                    unint64_t v367 = v366;
                    v612(v363, v362);
                    uint64_t v731 = sub_24D418FB4(v365, v367, (uint64_t *)&v727);
                    sub_24DCCA428();
                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_24D3D0000, v352, (os_log_type_t)v719, "♻️ forcing bounce of colliding item %s as cycle with %s was broken at creation time", (uint8_t *)v354, 0x16u);
                    uint64_t v368 = v694;
                    swift_arrayDestroy();
                    MEMORY[0x25332B030](v368, -1, -1);
                    MEMORY[0x25332B030](v354, -1, -1);
                    swift_release();
                  }
                  else
                  {
                    (*(void (**)(unsigned char *, uint64_t))(v716 + 8))(v658, v717);
                    (*(void (**)(unsigned char *, unsigned __int8 *))(v696 + 8))(v659, v615);

                    swift_release();
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v656 + 8))(v660, v655);
                  goto LABEL_109;
                }
              }
            }
            uint64_t v314 = v690;
            v315 = v686;
            v316 = &v686[*(int *)(v690 + 52)];
            v688 = (int *)type metadata accessor for ItemReconciliationHalf();
            uint64_t v683 = v688[10];
            uint64_t v317 = *(void *)&v316[v683] & 3;
            v318 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v689 + 16);
            v318(v677, v315, v314);
            if (v317) {
              int v319 = 1;
            }
            else {
              int v319 = v677[*(int *)(type metadata accessor for ItemReconciliationHalf() + 36)] & 1;
            }
            uint64_t v329 = v690;
            v330 = *(void (**)(void))(v689 + 8);
            ((void (*)(unsigned char *, uint64_t))v330)(v677, v690);
            v318(v676, v686, v329);
            if (v319)
            {
              ((void (*)(unsigned char *, uint64_t))v330)(v676, v690);
            }
            else
            {
              uint64_t v331 = *(void *)&v676[*(int *)(v690 + 52) + v688[9]];
              v330();
              if ((v331 & 1) == 0) {
                goto LABEL_109;
              }
            }
            int v332 = v686[*(int *)(v690 + 56)];
            uint64_t v681 = *(void *)(v716 + 16);
            ((void (*)(unsigned char *, unsigned char *, uint64_t))v681)(v675, v713, v717);
            if (v332 == 1)
            {
              uint64_t v333 = v717;
              uint64_t WitnessTable = swift_getWitnessTable();
              v335 = v675;
              int v336 = sub_24D98BCC4(v333, WitnessTable);
              TupleTypeMetadata2 = *(void *)(v716 + 8);
              ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v335, v333);
              if (v336 == 1)
              {
                v337 = v661;
                ((void (*)(char *, unsigned char *, uint64_t *))v691)(v661, v316, v693);
                if (v611(v337, 1, v721) == 1)
                {
                  v270((uint64_t)v661, v693);
                }
                else
                {
                  v394 = v649;
                  v614(v649, v661, v721);
                  v395 = v650;
                  sub_24D73DD0C((uint64_t)v650);
                  uint64_t v396 = v726;
                  char v397 = (*(uint64_t (**)(unsigned char *, unsigned char *))(*(void *)v719 + 536))(v394, v395);
                  uint64_t v726 = v396;
                  if (v396)
                  {
                    uint64_t v398 = v721;
                    v399 = v612;
                    v612(v650, v721);
                    v399(v649, v398);
                    uint64_t v400 = v690;
                    ((void (*)(unsigned char *, uint64_t))v330)(v686, v690);
                    ((void (*)(unsigned char *, uint64_t))v330)(v687, v400);
                    v399(v695, v398);
                    (*(void (**)(unsigned char *, uint64_t))(v715 + 8))(v714, v712);
                    return ((uint64_t (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v713, v717);
                  }
                  char v465 = v397;
                  v612(v650, v721);
                  if (v465)
                  {
                    id v466 = (id)fpfs_current_or_default_log();
                    sub_24DCC9088();
                    v467 = *(void (**)(unsigned char *, void (*)(void, void), unsigned __int8 *))(v696 + 16);
                    v467(v634, (void (*)(void, void))v724, v615);
                    ((void (*)(unsigned char *, unsigned char *, uint64_t))v681)(v633, v713, v717);
                    v468 = sub_24DCC9068();
                    os_log_type_t v469 = sub_24DCCA148();
                    LODWORD(v719) = v469;
                    if (os_log_type_enabled(v468, v469))
                    {
                      uint64_t v470 = swift_slowAlloc();
                      uint64_t v694 = swift_slowAlloc();
                      v727 = (unsigned __int8 *)v694;
                      *(_DWORD *)uint64_t v470 = 136315394;
                      v693 = (uint64_t *)(v470 + 4);
                      v471 = v648;
                      v472 = v634;
                      uint64_t v473 = (uint64_t)v615;
                      v467(v648, (void (*)(void, void))v634, v615);
                      v474 = *(void (**)(unsigned char *, uint64_t))(v696 + 8);
                      v474(v472, v473);
                      uint64_t v475 = sub_24DCCAD78();
                      unint64_t v477 = v476;
                      v474(v471, v473);
                      uint64_t v731 = sub_24D418FB4(v475, v477, (uint64_t *)&v727);
                      sub_24DCCA428();
                      swift_bridgeObjectRelease();
                      *(_WORD *)(v470 + 12) = 2080;
                      v693 = (uint64_t *)(v470 + 14);
                      uint64_t v382 = v721;
                      v478 = v692;
                      v479 = v633;
                      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v720 + 16))(v692, v633, v721);
                      ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v479, v717);
                      swift_getAssociatedConformanceWitness();
                      uint64_t v480 = sub_24DCCAD78();
                      unint64_t v482 = v481;
                      v388 = (void (*)(void, uint64_t))v612;
                      v612(v478, v382);
                      uint64_t v731 = sub_24D418FB4(v480, v482, (uint64_t *)&v727);
                      sub_24DCCA428();
                      swift_bridgeObjectRelease();
                      _os_log_impl(&dword_24D3D0000, v468, (os_log_type_t)v719, "♻️ forcing bounce of colliding item %s to break reparent cycle with %s", (uint8_t *)v470, 0x16u);
                      uint64_t v483 = v694;
                      swift_arrayDestroy();
                      MEMORY[0x25332B030](v483, -1, -1);
                      MEMORY[0x25332B030](v470, -1, -1);

                      (*(void (**)(unsigned char *, uint64_t))(v656 + 8))(v635, v655);
                      v390 = &v681;
                      goto LABEL_134;
                    }
                    ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v633, v717);
                    (*(void (**)(unsigned char *, unsigned __int8 *))(v696 + 8))(v634, v615);

                    (*(void (**)(unsigned char *, uint64_t))(v656 + 8))(v635, v655);
                    v484 = &v681;
LABEL_149:
                    v612((unsigned char *)*(v484 - 32), v721);
                    goto LABEL_109;
                  }
                  v612(v649, v721);
                }
              }
            }
            else
            {
              TupleTypeMetadata2 = *(void *)(v716 + 8);
              ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v675, v717);
            }
            v338 = v671;
            ((void (*)(char *, unsigned char *, uint64_t *))v691)(v671, v316, v693);
            if (v611(v338, 1, v721) == 1)
            {
              v270((uint64_t)v671, v693);
              goto LABEL_88;
            }
            v345 = v666;
            v614(v666, v671, v721);
            v346 = v667;
            sub_24D73DD0C((uint64_t)v667);
            uint64_t v347 = v726;
            char v348 = (*(uint64_t (**)(unsigned char *, unsigned char *, void))(*(void *)v719 + 552))(v345, v346, 0);
            uint64_t v726 = v347;
            if (v347)
            {
              uint64_t v343 = v721;
              v344 = v612;
              v612(v667, v721);
              v344(v666, v343);
              goto LABEL_94;
            }
            char v369 = v348;
            v612(v667, v721);
            if ((v369 & 1) == 0)
            {
              v612(v666, v721);
LABEL_88:
              uint64_t v339 = v688[9];
              if (!*(void *)&v316[v339]) {
                goto LABEL_156;
              }
              v340 = v665;
              sub_24D73DD0C((uint64_t)v665);
              uint64_t v341 = v726;
              (*(void (**)(unsigned char *))(*(void *)v706 + 152))(v340);
              uint64_t v726 = v341;
              v342 = (uint64_t *)&v697;
              if (v341)
              {
LABEL_90:
                uint64_t v343 = v721;
                v344 = v612;
                v612((unsigned char *)*(v342 - 32), v721);
LABEL_94:
                uint64_t v349 = v690;
                ((void (*)(unsigned char *, uint64_t))v330)(v686, v690);
                ((void (*)(unsigned char *, uint64_t))v330)(v687, v349);
                v344(v695, v343);
LABEL_159:
                (*(void (**)(unsigned char *, uint64_t))(v715 + 8))(v714, v712);
                return ((uint64_t (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v713, v717);
              }
              v612(v665, v721);
              if ((*(unsigned int (**)(unsigned char *, uint64_t, unsigned __int8 *))(v696 + 48))(v662, 1, v615) == 1)
              {
                (*(void (**)(unsigned char *, uint64_t))(v637 + 8))(v662, v638);
                if (!*(void *)&v316[v339]) {
                  goto LABEL_156;
                }
              }
              else
              {
                v462 = v643;
                (*(void (**)(unsigned char *, unsigned char *, unsigned __int8 *))(v696 + 32))(v643, v662, v615);
                uint64_t v463 = v726;
                char v464 = (*(uint64_t (**)(unsigned char *, void))(*(void *)v668 + 536))(v462, v724);
                uint64_t v726 = v463;
                if (v463)
                {
                  (*(void (**)(unsigned char *, unsigned __int8 *))(v696 + 8))(v643, v615);
                  goto LABEL_158;
                }
                if (v464)
                {
                  id v493 = (id)fpfs_current_or_default_log();
                  sub_24DCC9088();
                  v494 = *(void (**)(unsigned char *, void (*)(void, void), unsigned __int8 *))(v696 + 16);
                  v494(v628, (void (*)(void, void))v724, v615);
                  ((void (*)(unsigned char *, unsigned char *, uint64_t))v681)(v627, v713, v717);
                  v495 = sub_24DCC9068();
                  os_log_type_t v496 = sub_24DCCA148();
                  if (os_log_type_enabled(v495, v496))
                  {
                    uint64_t v497 = swift_slowAlloc();
                    v719 = (unsigned __int8 *)swift_slowAlloc();
                    v727 = v719;
                    *(_DWORD *)uint64_t v497 = 136315394;
                    v691 = (unsigned char *)(v497 + 4);
                    v498 = v648;
                    v499 = v628;
                    uint64_t v500 = (uint64_t)v615;
                    v494(v648, (void (*)(void, void))v628, v615);
                    v501 = *(void (**)(unsigned char *, uint64_t))(v696 + 8);
                    v501(v499, v500);
                    v502 = v501;
                    uint64_t v694 = (uint64_t)v501;
                    uint64_t v503 = sub_24DCCAD78();
                    unint64_t v505 = v504;
                    v502(v498, v500);
                    uint64_t v731 = sub_24D418FB4(v503, v505, (uint64_t *)&v727);
                    v693 = &v732;
                    sub_24DCCA428();
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v497 + 12) = 2080;
                    v691 = (unsigned char *)(v497 + 14);
                    uint64_t v506 = v721;
                    v507 = v692;
                    v508 = v627;
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v720 + 16))(v692, v627, v721);
                    ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v508, v717);
                    swift_getAssociatedConformanceWitness();
                    uint64_t v509 = sub_24DCCAD78();
                    unint64_t v511 = v510;
                    v612(v507, v506);
                    uint64_t v731 = sub_24D418FB4(v509, v511, (uint64_t *)&v727);
                    sub_24DCCA428();
                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_24D3D0000, v495, v496, "♻️ forcing bounce of colliding item %s to break replace cycle with %s", (uint8_t *)v497, 0x16u);
                    v512 = v719;
                    swift_arrayDestroy();
                    MEMORY[0x25332B030](v512, -1, -1);
                    MEMORY[0x25332B030](v497, -1, -1);

                    (*(void (**)(unsigned char *, uint64_t))(v656 + 8))(v629, v655);
                    ((void (*)(unsigned char *, uint64_t))v694)(v643, v500);
                  }
                  else
                  {
                    ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v627, v717);
                    v575 = *(void (**)(unsigned char *, unsigned __int8 *))(v696 + 8);
                    uint64_t v576 = (uint64_t)v615;
                    v575(v628, v615);

                    (*(void (**)(unsigned char *, uint64_t))(v656 + 8))(v629, v655);
                    v575(v643, (unsigned __int8 *)v576);
                  }
                  goto LABEL_109;
                }
                (*(void (**)(unsigned char *, unsigned __int8 *))(v696 + 8))(v643, v615);
                if (!*(void *)&v316[v339]) {
                  goto LABEL_156;
                }
              }
              v391 = v642;
              sub_24D73DD0C((uint64_t)v642);
              uint64_t v392 = v726;
              char v393 = (*(uint64_t (**)(void, unsigned char *))(*(void *)v668 + 560))(v724, v391);
              uint64_t v726 = v392;
              if (v392)
              {
                v342 = &v674;
                goto LABEL_90;
              }
              char v513 = v393;
              v612(v642, v721);
              if (v513)
              {
                id v514 = (id)fpfs_current_or_default_log();
                sub_24DCC9088();
                v515 = *(void (**)(unsigned char *, void (*)(void, void), unsigned __int8 *))(v696 + 16);
                v515(v625, (void (*)(void, void))v724, v615);
                ((void (*)(unsigned char *, unsigned char *, uint64_t))v681)(v624, v713, v717);
                v516 = sub_24DCC9068();
                os_log_type_t v517 = sub_24DCCA148();
                if (os_log_type_enabled(v516, v517))
                {
                  uint64_t v518 = swift_slowAlloc();
                  v719 = (unsigned __int8 *)swift_slowAlloc();
                  v727 = v719;
                  *(_DWORD *)uint64_t v518 = 136315394;
                  uint64_t v694 = v518 + 4;
                  v519 = v648;
                  v520 = v625;
                  uint64_t v521 = (uint64_t)v615;
                  v515(v648, (void (*)(void, void))v625, v615);
                  v522 = *(void (**)(unsigned char *, uint64_t))(v696 + 8);
                  v522(v520, v521);
                  uint64_t v523 = sub_24DCCAD78();
                  unint64_t v525 = v524;
                  v522(v519, v521);
                  uint64_t v731 = sub_24D418FB4(v523, v525, (uint64_t *)&v727);
                  sub_24DCCA428();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v518 + 12) = 2080;
                  uint64_t v526 = v721;
                  v527 = v692;
                  v528 = v624;
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v720 + 16))(v692, v624, v721);
                  ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v528, v717);
                  swift_getAssociatedConformanceWitness();
                  uint64_t v529 = sub_24DCCAD78();
                  unint64_t v531 = v530;
                  v612(v527, v526);
                  uint64_t v731 = sub_24D418FB4(v529, v531, (uint64_t *)&v727);
                  sub_24DCCA428();
                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_24D3D0000, v516, v517, "♻️ forcing bounce of colliding item %s to break reparent-to-new cycle with %s", (uint8_t *)v518, 0x16u);
                  v532 = v719;
                  swift_arrayDestroy();
                  MEMORY[0x25332B030](v532, -1, -1);
                  MEMORY[0x25332B030](v518, -1, -1);
                }
                else
                {
                  ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v624, v717);
                  (*(void (**)(unsigned char *, unsigned __int8 *))(v696 + 8))(v625, v615);
                }

                (*(void (**)(unsigned char *, uint64_t))(v656 + 8))(v626, v655);
                goto LABEL_109;
              }
              if (v316[v339])
              {
                v565 = &v316[v688[16]];
                if (!v565[16] && (v565[1] & 1) != 0) {
                  goto LABEL_109;
                }
              }
LABEL_156:
              if ((v316[v683] & 3) == 0) {
                goto LABEL_158;
              }
              v566 = &v316[v688[16]];
              if (v566[16]) {
                goto LABEL_158;
              }
              uint64_t v568 = *(void *)v566;
              if ((v568 & 0x100) == 0)
              {
                if ((v568 & 2) == 0) {
                  goto LABEL_158;
                }
                v569 = v632;
                ((void (*)(char *, unsigned char *, uint64_t *))v691)(v632, v316, v693);
                if (v611(v569, 1, v721) == 1)
                {
                  uint64_t v570 = v690;
                  ((void (*)(unsigned char *, uint64_t))v330)(v686, v690);
                  ((void (*)(unsigned char *, uint64_t))v330)(v687, v570);
                  v612(v695, v721);
                  (*(void (**)(unsigned char *, uint64_t))(v715 + 8))(v714, v712);
                  ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v713, v717);
                  return ((uint64_t (*)(char *, uint64_t *))v270)(v632, v693);
                }
                v571 = v618;
                v614(v618, v632, v721);
                v572 = v617;
                sub_24D73DD0C((uint64_t)v617);
                uint64_t v573 = v726;
                char v574 = (*(uint64_t (**)(unsigned char *, unsigned char *))(*(void *)v719 + 536))(v571, v572);
                uint64_t v726 = v573;
                if (v573)
                {
                  uint64_t v343 = v721;
                  v344 = v612;
                  v612(v617, v721);
                  v344(v618, v343);
                  goto LABEL_94;
                }
                char v604 = v574;
                uint64_t v605 = v721;
                v606 = v612;
                v612(v617, v721);
                v606(v618, v605);
                if ((v604 & 1) == 0)
                {
LABEL_158:
                  uint64_t v567 = v690;
                  ((void (*)(unsigned char *, uint64_t))v330)(v686, v690);
                  ((void (*)(unsigned char *, uint64_t))v330)(v687, v567);
                  v612(v695, v721);
                  goto LABEL_159;
                }
              }
LABEL_109:
              if (v608)
              {
                v401 = (int *)type metadata accessor for ItemReconciliationHalf();
                if ((v686[v401[9]] & 0x10) != 0
                  || !*(void *)&v686[v401[10]]
                  || (v402 = &v686[v401[16]], !v402[16]) && (*(_DWORD *)v402 & 0x42000) != 0)
                {
                  uint64_t v403 = v726;
                  (*(void (**)(void, uint64_t))(*(void *)v668 + 240))(v724, 1);
                  if (!v403)
                  {
                    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v710 + 48))(v657, 1, v711) == 1)
                    {
LABEL_177:
                      (*((void (**)(unsigned char *, uint64_t))v708 + 1))(v657, v709);
                      v727 = 0;
                      unint64_t v728 = 0xE000000000000000;
                      sub_24DCCA728();
                      sub_24DCC9968();
                      swift_getWitnessTable();
                      sub_24DCCADC8();
                      uint64_t result = sub_24DCCA978();
                      __break(1u);
                      return result;
                    }
                    uint64_t v404 = v711;
                    v405 = v654;
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v710 + 32))(v654, v657, v711);
                    v406 = (uint64_t *)&v405[*(int *)(v404 + 44)];
                    uint64_t v408 = *v406;
                    unint64_t v407 = v406[1];
                    swift_retain();
                    swift_bridgeObjectRetain();
                    LOBYTE(v405) = sub_24DB1CA80(v408, v407, v652, v653);
                    swift_release();
                    swift_bridgeObjectRelease();
                    if ((v405 & 1) != 0
                      || (uint64_t v409 = *(int *)(v711 + 48),
                          v410 = &v654[v409 + *(int *)(type metadata accessor for ItemMetadata() + 144)],
                          (v410[4] & 1) != 0)
                      || *(_DWORD *)v410 != 1)
                    {
                      uint64_t v411 = (uint64_t)v615;
                      sub_24DA604B8((uint64_t)v615, (uint64_t)v615);
                      uint64_t v412 = v696;
                      swift_allocObject();
                      uint64_t v413 = sub_24DCC9C58();
                      v414 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v412 + 16);
                      v414(v415, v714, v411);
                      uint64_t v416 = sub_24D785484(v413);
                      sub_24DBB3940(v652, v653, v416);
                      v719 = v417;
                      uint64_t v486 = v485;
                      swift_bridgeObjectRelease();
                      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v716 + 16))(v641, v713, v717);
                      v610((uint64_t)v714);
                      if (v611(v639, 1, v721) != 1)
                      {
                        uint64_t v533 = v717;
                        v534 = v641;
                        v535 = *(void (**)(void))(v720 + 40);
                        v708 = &v641[*(int *)(v717 + 36)];
                        v535();
                        v537 = (uint64_t *)*v707;
                        uint64_t v536 = v707[1];
                        v538 = (uint64_t **)&v534[*(int *)(v533 + 44)];
                        swift_bridgeObjectRetain_n();
                        swift_bridgeObjectRelease();
                        v707 = v537;
                        *v538 = v537;
                        v538[1] = (uint64_t *)v536;
                        v539 = v654;
                        v414((uint64_t)v630, v654, (uint64_t)v615);
                        uint64_t v709 = (*(uint64_t (**)(unsigned char *))(*(void *)v668 + 296))(v539);
                        uint64_t v726 = 0;
                        if ((v540 & 1) == 0)
                        {
                          v727 = v700;
                          v577 = v700;
                          unint64_t v728 = (unint64_t)v703;
                          v578 = v703;
                          uint64_t v729 = v701;
                          uint64_t v579 = v701;
                          uint64_t v730 = v702;
                          uint64_t v580 = v702;
                          v706 = (unsigned char *)type metadata accessor for JobResult();
                          v727 = v577;
                          unint64_t v728 = (unint64_t)v578;
                          uint64_t v729 = v579;
                          uint64_t v730 = v580;
                          uint64_t v705 = type metadata accessor for Bouncing.BounceItem();
                          uint64_t v581 = v721;
                          v582 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v720 + 16);
                          v583 = v692;
                          v582(v692, v641, v721);
                          uint64_t v584 = (uint64_t)v619;
                          v582(v619, v708, v581);
                          v585 = v621;
                          sub_24DB94798((uint64_t)v583, (uint64_t)v707, v536, v584, (uint64_t)v621);
                          uint64_t v586 = (*(uint64_t (**)(unsigned char *, void, uint64_t))(*(void *)(v620 - 8) + 56))(v585, 0, 1);
                          v587 = (void *)(*(uint64_t (**)(uint64_t))(*v725 + 272))(v586);
                          v588 = v630;
                          uint64_t v589 = sub_24DB9DFBC((uint64_t)v630, v709, (uint64_t)v719, v486, (uint64_t)v585, v587, *(void *)(*v718 + 120), *(void *)(*v718 + 128), *(void *)(*v718 + 136));

                          (*(void (**)(unsigned char *, uint64_t))(v622 + 8))(v585, v623);
                          v590 = v615;
                          (*(void (**)(unsigned char *))(v696 + 8))(v588);
                          sub_24D85246C(v723, v589);
                          swift_release();
                          uint64_t v591 = v721;
                          uint64_t v592 = swift_getAssociatedConformanceWitness();
                          v727 = v590;
                          unint64_t v728 = v591;
                          v593 = v590;
                          uint64_t v729 = v616;
                          uint64_t v730 = v592;
                          type metadata accessor for ReconciliationID();
                          uint64_t v594 = swift_getTupleTypeMetadata2();
                          v595 = v697;
                          v596 = &v697[*(int *)(v594 + 48)];
                          sub_24D73DD0C((uint64_t)v697);
                          swift_storeEnumTagMultiPayload();
                          v414((uint64_t)v596, v724, (uint64_t)v593);
                          swift_storeEnumTagMultiPayload();
                          uint64_t v597 = v698;
                          swift_storeEnumTagMultiPayload();
                          sub_24D907568(v723, (uint64_t)v595);
                          v598 = *(void (**)(unsigned char *, uint64_t))(v699 + 8);
                          v598(v595, v597);
                          uint64_t v599 = (uint64_t)&v595[*(int *)(v594 + 48)];
                          v414((uint64_t)v595, v724, (uint64_t)v615);
                          swift_storeEnumTagMultiPayload();
                          sub_24D73DD0C(v599);
                          swift_storeEnumTagMultiPayload();
                          swift_storeEnumTagMultiPayload();
                          sub_24D907568(v723, (uint64_t)v595);
                          v598(v595, v597);
                          (*(void (**)(unsigned char *, uint64_t))(v710 + 8))(v654, v711);
                          v600 = *(void (**)(unsigned char *, uint64_t))(v689 + 8);
                          uint64_t v601 = v690;
                          v600(v686, v690);
                          v600(v687, v601);
                          v612(v695, v721);
                          (*(void (**)(unsigned char *, uint64_t))(v715 + 8))(v714, v712);
                          uint64_t v602 = v717;
                          v603 = *(void (**)(unsigned char *, uint64_t))(v716 + 8);
                          v603(v713, v717);
                          return ((uint64_t (*)(unsigned char *, uint64_t))v603)(v641, v602);
                        }
                        goto LABEL_176;
                      }
                      __break(1u);
LABEL_175:
                      __break(1u);
LABEL_176:
                      __break(1u);
                      goto LABEL_177;
                    }
                    (*(void (**)(unsigned char *, uint64_t))(v710 + 8))(v654, v711);
                  }
LABEL_124:
                  v426 = *(void (**)(unsigned char *, uint64_t))(v689 + 8);
                  uint64_t v427 = v690;
                  v426(v686, v690);
                  v426(v687, v427);
                  v612(v695, v721);
                  (*(void (**)(unsigned char *, uint64_t))(v715 + 8))(v714, v712);
                  return (*(uint64_t (**)(unsigned char *, uint64_t))(v716 + 8))(v713, v717);
                }
              }
              else
              {
                uint64_t v418 = v726;
                (*(void (**)(void, uint64_t))(*(void *)v668 + 240))(v724, 1);
                if (v418) {
                  goto LABEL_124;
                }
                if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v710 + 48))(v664, 1, v711) == 1)
                {
                  (*((void (**)(unsigned char *, uint64_t))v708 + 1))(v664, v709);
                  v419 = v700;
                  v420 = v703;
                  v727 = v700;
                  unint64_t v728 = (unint64_t)v703;
                  uint64_t v421 = v701;
                  uint64_t v422 = v702;
                  uint64_t v729 = v701;
                  uint64_t v730 = v702;
                  type metadata accessor for JobResult();
                  v727 = v419;
                  unint64_t v728 = (unint64_t)v420;
                  uint64_t v729 = v421;
                  uint64_t v730 = v422;
                  type metadata accessor for Ingestion.FetchItemMetadata();
                  uint64_t v423 = sub_24D7C0440();
                  uint64_t v425 = sub_24DC0963C((uint64_t)v724, v423, v424, *(void *)(*v718 + 136));
                  sub_24D85246C(v723, v425);
                  swift_release();
                  goto LABEL_124;
                }
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v710 + 32))(v644, v664, v711);
                uint64_t v455 = (uint64_t)v615;
                sub_24DA604B8((uint64_t)v615, (uint64_t)v615);
                uint64_t v456 = v696;
                swift_allocObject();
                uint64_t v457 = sub_24DCC9C58();
                v458 = *(void (**)(uint64_t, uint64_t, uint64_t))(v456 + 16);
                v458(v459, v684, v455);
                uint64_t v460 = sub_24D785484(v457);
                sub_24DBB3940(v652, v653, v460);
                v719 = v461;
                uint64_t v490 = v489;
                swift_bridgeObjectRelease();
                v491 = v644;
                v458((uint64_t)v636, (uint64_t)v644, (uint64_t)v615);
                v708 = (unsigned char *)(*(uint64_t (**)(unsigned char *))(*(void *)v668 + 296))(v491);
                uint64_t v726 = 0;
                if (v492) {
                  goto LABEL_175;
                }
                v541 = v700;
                v727 = v700;
                unint64_t v728 = (unint64_t)v703;
                v542 = v703;
                uint64_t v543 = v701;
                uint64_t v729 = v701;
                uint64_t v730 = v702;
                uint64_t v544 = v702;
                uint64_t v709 = type metadata accessor for JobResult();
                v727 = v541;
                unint64_t v728 = (unint64_t)v542;
                uint64_t v729 = v543;
                uint64_t v730 = v544;
                v706 = (unsigned char *)type metadata accessor for Bouncing.BounceItem();
                v545 = v692;
                sub_24D73DD0C((uint64_t)v692);
                uint64_t v546 = v707[1];
                uint64_t v705 = *v707;
                uint64_t v547 = (uint64_t)v619;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v720 + 16))(v619, v695, v721);
                v548 = v621;
                sub_24DB94798((uint64_t)v545, v705, v546, v547, (uint64_t)v621);
                (*(void (**)(unsigned char *, void, uint64_t))(*(void *)(v620 - 8) + 56))(v548, 0, 1);
                v549 = *(uint64_t (**)(uint64_t))(*v725 + 272);
                uint64_t v550 = swift_bridgeObjectRetain();
                v551 = (void *)v549(v550);
                v552 = v636;
                uint64_t v553 = sub_24DB9DFBC((uint64_t)v636, (uint64_t)v708, (uint64_t)v719, v490, (uint64_t)v548, v551, *(void *)(*v718 + 120), *(void *)(*v718 + 128), *(void *)(*v718 + 136));

                (*(void (**)(unsigned char *, uint64_t))(v622 + 8))(v548, v623);
                v554 = v615;
                (*(void (**)(unsigned char *, unsigned __int8 *))(v696 + 8))(v552, v615);
                sub_24D85246C(v723, v553);
                swift_release();
                uint64_t v555 = v721;
                uint64_t v556 = swift_getAssociatedConformanceWitness();
                v727 = v554;
                unint64_t v728 = v555;
                uint64_t v729 = v616;
                uint64_t v730 = v556;
                type metadata accessor for ReconciliationID();
                uint64_t v557 = swift_getTupleTypeMetadata2();
                v558 = v697;
                v559 = &v697[*(int *)(v557 + 48)];
                sub_24D73DD0C((uint64_t)v697);
                swift_storeEnumTagMultiPayload();
                v560 = (void (*)(void, void))v724;
                v458((uint64_t)v559, (uint64_t)v724, (uint64_t)v554);
                swift_storeEnumTagMultiPayload();
                uint64_t v561 = v698;
                swift_storeEnumTagMultiPayload();
                sub_24D907568(v723, (uint64_t)v558);
                v725 = *(void **)(v699 + 8);
                ((void (*)(unsigned char *, uint64_t))v725)(v558, v561);
                uint64_t v562 = (uint64_t)&v558[*(int *)(v557 + 48)];
                v458((uint64_t)v558, (uint64_t)v560, (uint64_t)v615);
                swift_storeEnumTagMultiPayload();
                sub_24D73DD0C(v562);
                swift_storeEnumTagMultiPayload();
                swift_storeEnumTagMultiPayload();
                sub_24D907568(v723, (uint64_t)v558);
                ((void (*)(unsigned char *, uint64_t))v725)(v558, v561);
                (*(void (**)(unsigned char *, uint64_t))(v710 + 8))(v644, v711);
              }
              v563 = *(void (**)(unsigned char *, uint64_t))(v689 + 8);
              uint64_t v564 = v690;
              v563(v686, v690);
              v563(v687, v564);
              goto LABEL_65;
            }
            id v370 = (id)fpfs_current_or_default_log();
            sub_24DCC9088();
            v371 = *(void (**)(unsigned char *, void (*)(void, void), unsigned __int8 *))(v696 + 16);
            v371(v646, (void (*)(void, void))v724, v615);
            ((void (*)(unsigned char *, unsigned char *, uint64_t))v681)(v645, v713, v717);
            v372 = sub_24DCC9068();
            os_log_type_t v373 = sub_24DCCA148();
            if (os_log_type_enabled(v372, v373))
            {
              uint64_t v374 = swift_slowAlloc();
              v719 = (unsigned __int8 *)swift_slowAlloc();
              v727 = v719;
              *(_DWORD *)uint64_t v374 = 136315394;
              uint64_t v694 = v374 + 4;
              v375 = v648;
              v376 = v646;
              uint64_t v377 = (uint64_t)v615;
              v371(v648, (void (*)(void, void))v646, v615);
              v378 = *(void (**)(unsigned char *, uint64_t))(v696 + 8);
              v378(v376, v377);
              uint64_t v379 = sub_24DCCAD78();
              unint64_t v381 = v380;
              v378(v375, v377);
              uint64_t v731 = sub_24D418FB4(v379, v381, (uint64_t *)&v727);
              sub_24DCCA428();
              swift_bridgeObjectRelease();
              *(_WORD *)(v374 + 12) = 2080;
              uint64_t v694 = v374 + 14;
              uint64_t v382 = v721;
              v383 = v692;
              v384 = v645;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v720 + 16))(v692, v645, v721);
              ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v384, v717);
              swift_getAssociatedConformanceWitness();
              uint64_t v385 = sub_24DCCAD78();
              unint64_t v387 = v386;
              v388 = (void (*)(void, uint64_t))v612;
              v612(v383, v382);
              uint64_t v731 = sub_24D418FB4(v385, v387, (uint64_t *)&v727);
              sub_24DCCA428();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24D3D0000, v372, v373, "♻️ forcing bounce of colliding item %s to break move cycle with %s", (uint8_t *)v374, 0x16u);
              v389 = v719;
              swift_arrayDestroy();
              MEMORY[0x25332B030](v389, -1, -1);
              MEMORY[0x25332B030](v374, -1, -1);

              (*(void (**)(unsigned char *, uint64_t))(v656 + 8))(v647, v655);
              v390 = &v698;
LABEL_134:
              v388(*(v390 - 32), v382);
              goto LABEL_109;
            }
            ((void (*)(unsigned char *, uint64_t))TupleTypeMetadata2)(v645, v717);
            (*(void (**)(unsigned char *, unsigned __int8 *))(v696 + 8))(v646, v615);

            (*(void (**)(unsigned char *, uint64_t))(v656 + 8))(v647, v655);
            v484 = &v698;
            goto LABEL_149;
          }
          uint64_t v270 = *(void (**)(uint64_t, uint64_t *))(v694 + 8);
          v270(v262, v268);
          v612(v275, v263);
        }
        (*(void (**)(int *, uint64_t))(v679 + 8))(v688, TupleTypeMetadata2);
        v271 = v687;
        uint64_t v272 = v690;
        goto LABEL_56;
      }
      char v201 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if (v201) {
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v211 = v171;
    goto LABEL_26;
  }
  (*(void (**)(unsigned char *, uint64_t))(v128 + 8))(v131, v127);
  uint64_t v154 = (uint64_t)v708;
  uint64_t v155 = v706;
  uint64_t v156 = v709;
  (*((void (**)(unsigned char *, uint64_t, uint64_t))v708 + 2))(v706, (uint64_t)v149 + v722[4].i32[0], v709);
  uint64_t v157 = v710;
  uint64_t v158 = v711;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v710 + 48))(v155, 1, v711) == 1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v154 + 8))(v155, v156);
  }
  uint64_t v176 = v707;
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v157 + 32))(v707, v155, v158);
  uint64_t v177 = v157;
  v727 = v700;
  unint64_t v728 = (unint64_t)v703;
  uint64_t v729 = v701;
  uint64_t v730 = v702;
  type metadata accessor for JobResult();
  uint64_t v726 = 0;
  uint64_t v178 = v721;
  uint64_t v179 = swift_getAssociatedConformanceWitness();
  uint64_t v180 = (uint64_t)v615;
  v727 = v615;
  unint64_t v728 = v178;
  uint64_t v729 = v616;
  uint64_t v730 = v179;
  type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  uint64_t v181 = swift_getTupleTypeMetadata2();
  uint64_t v182 = v697;
  v183 = &v697[*(int *)(v181 + 48)];
  (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v696 + 16))(v697, v176, v180);
  swift_storeEnumTagMultiPayload();
  uint64_t v184 = sub_24D7C0440();
  void *v183 = 0;
  v183[1] = v184;
  v183[2] = v185;
  swift_storeEnumTagMultiPayload();
  uint64_t v186 = v698;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v723, (uint64_t)v182);
  (*(void (**)(unsigned char *, uint64_t))(v699 + 8))(v182, v186);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v177 + 8))(v707, v158);
}

void sub_24D746C0C(uint64_t a1, void *a2, uint64_t a3, int8x16_t *a4)
{
  uint64_t v188 = a3;
  uint64_t v176 = a2;
  uint64_t v163 = sub_24DCC8CE8();
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163);
  uint64_t v161 = (char *)v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a4[1].i64[0];
  uint64_t v8 = a4[2].i64[0];
  uint64_t v9 = type metadata accessor for SnapshotItem();
  uint64_t v174 = sub_24DCCA3F8();
  uint64_t v173 = *(void *)(v174 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v174);
  uint64_t v160 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v171 = (char *)v155 - v13;
  uint64_t v175 = v9;
  uint64_t v172 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v177 = (char *)v155 - v14;
  uint64_t v15 = (ValueMetadata *)a4[1].i64[1];
  uint64_t v193 = a4;
  uint64_t v16 = a4[2].i64[1];
  uint64_t v197 = v7;
  uint64_t v198 = v15;
  uint64_t v181 = v15;
  uint64_t v199 = v8;
  uint64_t v200 = v16;
  uint64_t v180 = v16;
  uint64_t v166 = type metadata accessor for ReconciliationMutation();
  uint64_t v165 = *(void *)(v166 - 8);
  MEMORY[0x270FA5388](v166);
  uint64_t v164 = (uint64_t)v155 - v17;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v159 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  char v187 = (char *)v155 - v20;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v170 = type metadata accessor for ItemState();
  uint64_t v169 = sub_24DCCA3F8();
  uint64_t v178 = *(char **)(v169 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v169);
  uint64_t v23 = (char *)v155 - v22;
  uint64_t v186 = *(void *)(v19 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v158 = (char *)v155 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v185 = (char *)v155 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  unint64_t v189 = (char *)v155 - v29;
  uint64_t v194 = AssociatedTypeWitness;
  uint64_t v195 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v167 = (char *)v155 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v184 = (char *)v155 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  TupleTypeMetadata3 = (uint64_t)v155 - v35;
  MEMORY[0x270FA5388](v34);
  v183 = (void (*)(unsigned char *, uint64_t))((char *)v155 - v36);
  uint64_t v190 = v7;
  uint64_t v191 = v8;
  uint64_t v37 = type metadata accessor for FileTreeError();
  uint64_t v38 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v40 = (id *)((char *)v155 - v39);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  v41((char *)v155 - v39, a1, v37);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      qmemcpy(&v155[-6], " filename below syncability original", 36);
      strcpy(&v154[2], "alError ");
      uint64_t v58 = v194;
      uint64_t v197 = v194;
      uint64_t v198 = &type metadata for Filename;
      uint64_t v199 = v194;
      uint64_t v200 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26986BB30);
      uint64_t v201 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v60 = (uint64_t *)((char *)v40 + TupleTypeMetadata[12]);
      uint64_t v61 = *v60;
      unint64_t v62 = v60[1];
      uint64_t v63 = (id *)((char *)v40 + TupleTypeMetadata[16]);
      uint64_t v64 = (unint64_t *)((char *)v40 + TupleTypeMetadata[20]);
      unint64_t v65 = *v64;
      unint64_t v66 = v64[1];

      uint64_t v67 = (void (*)(void (*)(unsigned char *, uint64_t), id *, uint64_t))v195[4];
      v67(v183, v40, v58);
      v67((void (*)(unsigned char *, uint64_t))TupleTypeMetadata3, v63, v58);
      uint64_t v68 = (int8x16_t *)v65;
      BOOL v69 = v65 >= 0xFFFFFFFF00000000;
      uint64_t v70 = v196;
      uint64_t v71 = v192;
      if (v69 && (v66 & 0xF000000000000007) == 0) {
        goto LABEL_19;
      }
      if (!(v66 >> 62))
      {
        uint64_t v193 = v68;
        swift_bridgeObjectRelease();
        unint64_t v189 = (char *)v66;
        goto LABEL_44;
      }
      if (v66 >> 62 == 1)
      {
        uint64_t v193 = v68;
        swift_bridgeObjectRelease();
        unint64_t v189 = (char *)(v66 & 0x3FFFFFFFFFFFFFFFLL);
LABEL_44:
        uint64_t v146 = v190;
        uint64_t v145 = v191;
        uint64_t v197 = v190;
        uint64_t v198 = v181;
        uint64_t v147 = v180;
        uint64_t v199 = v191;
        uint64_t v200 = v180;
        type metadata accessor for Ingestion.TrackTemporaryItem();
        uint64_t v148 = *(void *)(*(void *)v71 + 120);
        uint64_t v149 = *(void *)(*(void *)v71 + 128);
        sub_24D6E1D34((uint64_t)v193, v66);
        uint64_t v150 = sub_24D732E04(v183, v148, v149, 0x800000040);
        long long v151 = *(void **)(v150 + 96);
        uint64_t v152 = *(void **)(v150 + 104);
        *(void *)(v150 + 96) = 256;
        *(void *)(v150 + 104) = v189;
        char v153 = *(unsigned char *)(v150 + 112);
        *(unsigned char *)(v150 + 112) = 0;
        sub_24D3E380C(v151, v152, v153);
        uint64_t v197 = v146;
        uint64_t v198 = v181;
        uint64_t v199 = v145;
        uint64_t v200 = v147;
        type metadata accessor for JobResult();
        sub_24D85246C(v188, v150);
        swift_release();
        sub_24D4A479C((uint64_t)v193, v66);
        uint64_t v113 = (void (*)(uint64_t, uint64_t))v195[1];
        v113(TupleTypeMetadata3, v58);
        uint64_t v114 = v183;
        goto LABEL_45;
      }
LABEL_19:
      uint64_t v87 = v183;
      uint64_t v88 = v61;
      uint64_t v89 = TupleTypeMetadata3;
      sub_24D740B68(v183, v88, v62, TupleTypeMetadata3, v176, v188, v193);
      if (v70)
      {
        swift_bridgeObjectRelease();
        sub_24D4A479C((uint64_t)v68, v66);
        uint64_t v90 = (void (*)(uint64_t, uint64_t))v195[1];
        v90(v89, v58);
        v90((uint64_t)v87, v58);
        return;
      }
      uint64_t v196 = 0;
      swift_bridgeObjectRelease();
      sub_24D4A479C((uint64_t)v68, v66);
      uint64_t v113 = (void (*)(uint64_t, uint64_t))v195[1];
      v113(v89, v58);
      uint64_t v114 = v87;
LABEL_45:
      v113((uint64_t)v114, v58);
      return;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v72 = v194;
      uint64_t v73 = (char *)v40 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      ((void (*)(char *, uint64_t))v195[1])(v73, v72);
      return;
    case 3:
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      uint64_t v74 = v194;

      ((void (*)(id *, uint64_t))v195[1])(v40, v74);
      return;
    case 4:
      uint64_t v75 = v194;
      uint64_t v76 = swift_getTupleTypeMetadata2();
      ((void (*)(char *, uint64_t))v195[1])((char *)v40 + *(int *)(v76 + 48), v75);
      (*(void (**)(id *, uint64_t))(v186 + 8))(v40, v19);
      return;
    case 5:
    case 10:
    case 12:
    case 13:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      return;
    case 6:
    case 9:
      (*(void (**)(id *, uint64_t))(v38 + 8))(v40, v37);
      return;
    case 7:
      uint64_t v77 = swift_getAssociatedTypeWitness();
      uint64_t v78 = swift_getTupleTypeMetadata2();
      uint64_t v79 = *(void (**)(char *, uint64_t))(*(void *)(v77 - 8) + 8);
      v79((char *)v40 + *(int *)(v78 + 48), v77);
      v79((char *)v40, v77);
      return;
    case 8:

      return;
    case 11:
      if ((sub_24D73DDA8() & 0x18) != 0)
      {
        uint64_t v197 = v190;
        uint64_t v198 = v181;
        uint64_t v199 = v191;
        uint64_t v200 = v180;
        type metadata accessor for JobResult();
        uint64_t v80 = swift_getAssociatedTypeWitness();
        uint64_t v81 = swift_getAssociatedConformanceWitness();
        uint64_t v197 = v194;
        uint64_t v198 = (ValueMetadata *)v80;
        uint64_t v199 = AssociatedConformanceWitness;
        uint64_t v200 = v81;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v82 = swift_getTupleTypeMetadata2();
        uint64_t v83 = v164;
        uint64_t v84 = v164 + *(int *)(v82 + 48);
        sub_24D73DD0C(v164);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v84 = 0;
        *(void *)(v84 + 8) = 0;
        *(void *)(v84 + 16) = 0xB000000000000000;
        *(_OWORD *)(v84 + 24) = 0u;
        *(_OWORD *)(v84 + 40) = 0u;
        *(unsigned char *)(v84 + 56) = 1;
        swift_storeEnumTagMultiPayload();
        uint64_t v85 = v166;
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v188, v83);
        (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v83, v85);
      }
      return;
    case 14:
      swift_getWitnessTable();
      swift_allocError();
      v41(v86, a1, v37);
      swift_willThrow();
      return;
    default:
      uint64_t v43 = swift_getAssociatedTypeWitness();
      uint64_t v44 = swift_getAssociatedTypeWitness();
      uint64_t v45 = swift_getAssociatedConformanceWitness();
      uint64_t v46 = swift_getAssociatedConformanceWitness();
      uint64_t v197 = v43;
      uint64_t v198 = (ValueMetadata *)v44;
      uint64_t v199 = v45;
      uint64_t v200 = v46;
      type metadata accessor for FileItemVersion();
      uint64_t v47 = sub_24DCCA3F8();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      uint64_t v48 = v194;
      uint64_t v156 = v47;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();

      uint64_t v49 = v195;
      uint64_t v50 = (void (*)(char *, id *, uint64_t))v195[4];
      uint64_t v51 = v184;
      v155[1] = v195 + 4;
      v155[0] = v50;
      v50(v184, v40, v48);
      uint64_t v52 = v189;
      v183 = (void (*)(unsigned char *, uint64_t))v49[2];
      ((void (*)(char *, char *, uint64_t))v183)(v189, v51, v48);
      uint64_t v53 = 1;
      uint64_t v157 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v49[7];
      v157(v52, 0, 1, v48);
      uint64_t v54 = v169;
      (*((void (**)(char *, uint64_t, uint64_t))v178 + 2))(v23, v192 + v193[3].i32[3], v169);
      uint64_t v55 = v170;
      uint64_t v56 = *(char **)(v170 - 8);
      int v57 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v56 + 6))(v23, 1, v170);
      v155[2] = v49 + 2;
      if (v57 == 1)
      {
        uint64_t v56 = v178;
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v183)(v185, v23, v194);
        uint64_t v53 = 0;
        uint64_t v54 = v55;
      }
      (*((void (**)(char *, uint64_t))v56 + 1))(v23, v54);
      uint64_t v91 = v185;
      uint64_t v92 = v194;
      v157(v185, v53, 1, v194);
      uint64_t v93 = v186;
      uint64_t v94 = v187;
      uint64_t v95 = &v187[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v186 + 16);
      v96(v187, v189, v19);
      uint64_t v178 = v95;
      v96(v95, v91, v19);
      uint64_t v97 = v195;
      uint64_t v98 = v94;
      uint64_t v99 = (uint64_t (*)(char *, uint64_t, uint64_t))v195[6];
      if (v99(v98, 1, v92) != 1)
      {
        uint64_t v107 = v158;
        v96(v158, v187, v19);
        uint64_t v108 = v178;
        int v109 = v99(v178, 1, v92);
        uint64_t v110 = (void (**)(char *, uint64_t))(v97 + 1);
        uint64_t v105 = v92;
        if (v109 != 1)
        {
          uint64_t v115 = v167;
          ((void (*)(char *, char *, uint64_t))v155[0])(v167, v108, v92);
          LODWORD(TupleTypeMetadata2) = sub_24DCC9798();
          uint64_t v116 = *v110;
          (*v110)(v115, v92);
          uint64_t v117 = *(void (**)(char *, uint64_t))(v186 + 8);
          v117(v185, v19);
          v117(v189, v19);
          v116(v107, v92);
          v117(v187, v19);
          uint64_t v103 = v192;
          uint64_t v106 = v193;
          uint64_t v104 = v177;
          uint64_t v102 = v195;
          if ((TupleTypeMetadata2 & 1) == 0) {
            goto LABEL_33;
          }
          goto LABEL_30;
        }
        uint64_t v111 = v107;
        uint64_t v112 = *(void (**)(char *, uint64_t))(v186 + 8);
        v112(v185, v19);
        v112(v189, v19);
        (*v110)(v111, v92);
        uint64_t v103 = v192;
        uint64_t v104 = v177;
        uint64_t v102 = v195;
LABEL_27:
        (*(void (**)(char *, uint64_t))(v159 + 8))(v187, TupleTypeMetadata2);
        uint64_t v106 = v193;
        goto LABEL_33;
      }
      uint64_t v100 = *(void (**)(char *, uint64_t))(v93 + 8);
      v100(v185, v19);
      v100(v189, v19);
      int v101 = v99(v178, 1, v92);
      uint64_t v102 = v97;
      uint64_t v103 = v192;
      uint64_t v104 = v177;
      uint64_t v105 = v92;
      if (v101 != 1) {
        goto LABEL_27;
      }
      v100(v187, v19);
      uint64_t v106 = v193;
LABEL_30:
      BOOL v118 = sub_24D73DE84(v106, (void (*)(void, _OWORD *))type metadata accessor for Propagation.CreateItem);
      uint64_t v104 = v177;
      if (v118 && (*(unsigned char *)(*(void *)v103 + 136) & 1) != 0)
      {
        uint64_t v197 = v190;
        uint64_t v198 = v181;
        uint64_t v199 = v191;
        uint64_t v200 = v180;
        uint64_t v192 = type metadata accessor for JobResult();
        uint64_t v119 = swift_getAssociatedTypeWitness();
        uint64_t v120 = swift_getAssociatedConformanceWitness();
        uint64_t v197 = v105;
        uint64_t v198 = (ValueMetadata *)v119;
        uint64_t v199 = AssociatedConformanceWitness;
        uint64_t v200 = v120;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v121 = swift_getTupleTypeMetadata2();
        uint64_t v122 = v164;
        uint64_t v123 = v164 + *(int *)(v121 + 48);
        sub_24D73DD0C(v164);
        swift_storeEnumTagMultiPayload();
        long long v124 = *(_OWORD *)(*(void *)v103 + 120);
        *(_WORD *)uint64_t v123 = 770;
        *(_OWORD *)(v123 + 8) = v124;
        uint64_t v106 = v193;
        swift_storeEnumTagMultiPayload();
        uint64_t v125 = v166;
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v188, v122);
        uint64_t v104 = v177;
        (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v122, v125);
      }
LABEL_33:
      uint64_t v193 = (int8x16_t *)((char *)v40 + *(int *)(TupleTypeMetadata3 + 48));
      uint64_t v126 = v173;
      uint64_t v127 = v171;
      uint64_t v128 = v174;
      (*(void (**)(char *, uint64_t, uint64_t))(v173 + 16))(v171, v103 + v106[4].i32[0], v174);
      uint64_t v129 = v172;
      uint64_t v130 = v175;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v127, 1, v175) == 1)
      {
        (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v128);
        uint64_t v132 = v190;
        uint64_t v131 = v191;
        uint64_t v133 = v181;
        uint64_t v197 = v190;
        uint64_t v198 = v181;
        uint64_t v134 = v180;
        uint64_t v199 = v191;
        uint64_t v200 = v180;
        type metadata accessor for JobResult();
        uint64_t v197 = v132;
        uint64_t v198 = v133;
        uint64_t v199 = v131;
        uint64_t v200 = v134;
        type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v135 = (uint64_t)v167;
        ((void (*)(char *, char *, uint64_t))v183)(v167, v184, v105);
        uint64_t v136 = v161;
        sub_24DCC8CD8();
        sub_24DCC8C88();
        double v138 = v137;
        (*(void (**)(char *, uint64_t))(v162 + 8))(v136, v163);
        double v139 = v138 * 1000000000.0;
        if ((~COERCE__INT64(v138 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v139 > -9.22337204e18)
          {
            if (v139 < 9.22337204e18)
            {
              uint64_t v140 = sub_24DC0963C(v135, 0x2000000000000000, (uint64_t)v139, 256);
              uint64_t v141 = (void (*)(uint64_t, uint64_t))v102[1];
              v141(v135, v105);
              sub_24D85246C(v188, v140);
              swift_release();
              v141((uint64_t)v184, v105);
              goto LABEL_41;
            }
LABEL_48:
            __break(1u);
            JUMPOUT(0x24D748404);
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_48;
      }
      (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v104, v127, v130);
      uint64_t v142 = (uint64_t)v104;
      uint64_t v143 = v160;
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(v129 + 16))(v160, v142, v130);
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), void, uint64_t, uint64_t))(v129 + 56))(v143, 0, 1, v130);
      uint64_t v144 = v196;
      sub_24DBCB8D8(v143, v142, 0, 0, 0, v176, *(void *)(*(void *)v103 + 120), *(void *)(*(void *)v103 + 128), 256, v188);
      if (v144)
      {
        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v126 + 8))(v143, v128);
        (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v142, v130);
        ((void (*)(char *, uint64_t))v102[1])(v184, v105);
        (*(void (**)(int8x16_t *))(*(void *)(v156 - 8) + 8))(v193);
        return;
      }
      uint64_t v196 = 0;
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v126 + 8))(v143, v128);
      (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v142, v130);
      ((void (*)(char *, uint64_t))v102[1])(v184, v105);
LABEL_41:
      (*(void (**)(int8x16_t *, uint64_t))(*(void *)(v156 - 8) + 8))(v193, v156);
      return;
  }
}

unsigned int (*sub_24D748460(unsigned int (*a1)(unsigned __int8 *, uint64_t, uint64_t), void *a2, uint64_t a3, int8x16_t *a4))(unsigned __int8 *, uint64_t, uint64_t)
{
  uint64_t v323 = a3;
  v327 = a2;
  uint64_t v325 = a1;
  uint64_t v4 = a4[1].i64[0];
  uint64_t v5 = a4[1].i64[1];
  uint64_t v7 = (uint64_t (*)(void, void))a4[2].i64[0];
  uint64_t v6 = a4[2].i64[1];
  uint64_t v326 = a4;
  *(void *)&long long v331 = v4;
  *((void *)&v331 + 1) = v5;
  int v332 = v7;
  uint64_t v324 = v7;
  uint64_t v333 = v6;
  uint64_t v262 = type metadata accessor for ItemReconciliation();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v259 = *(void *)(v8 - 8);
  uint64_t v260 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v317 = (char *)&v253 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v331 = AssociatedTypeWitness;
  *((void *)&v331 + 1) = v11;
  uint64_t v287 = AssociatedConformanceWitness;
  int v332 = (uint64_t (*)(void, void))AssociatedConformanceWitness;
  uint64_t v285 = v14;
  uint64_t v333 = v14;
  type metadata accessor for ThrottlingKey();
  uint64_t v15 = sub_24DCCA3F8();
  uint64_t v300 = *(void *)(v15 - 8);
  uint64_t v301 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v309 = (char *)&v253 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v308 = (char *)&v253 - v18;
  uint64_t v257 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v257);
  uint64_t v256 = (uint64_t)&v253 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v324;
  uint64_t v258 = type metadata accessor for SnapshotItem();
  uint64_t v21 = sub_24DCCA3F8();
  uint64_t v254 = *(void *)(v21 - 8);
  uint64_t v255 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v263 = (char *)&v253 - v22;
  uint64_t v268 = sub_24DCCA3F8();
  uint64_t v318 = *(void *)(v268 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v268);
  v265 = (char *)&v253 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v266 = (char *)&v253 - v26;
  uint64_t v291 = AssociatedTypeWitness;
  uint64_t v270 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v261 = (char *)&v253 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  v264 = (char *)&v253 - v29;
  *(void *)&long long v331 = v5;
  *((void *)&v331 + 1) = v12;
  int v332 = (uint64_t (*)(void, void))v6;
  uint64_t v333 = (uint64_t)v20;
  uint64_t v30 = type metadata accessor for ItemReconciliation();
  uint64_t v310 = *(void *)(v30 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  v316 = (char *)&v253 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v280 = (char *)&v253 - v33;
  uint64_t v34 = sub_24DCC8408();
  uint64_t v298 = *(void *)(v34 - 8);
  uint64_t v299 = v34;
  MEMORY[0x270FA5388](v34);
  v297 = (char *)&v253 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_24DCC8288();
  uint64_t v314 = *(void *)(v36 - 8);
  uint64_t v315 = v36;
  MEMORY[0x270FA5388](v36);
  uint64_t v313 = (void (*)(char *, uint64_t, uint64_t))((char *)&v253 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&long long v331 = v12;
  *((void *)&v331 + 1) = v5;
  int v332 = v20;
  uint64_t v333 = v6;
  uint64_t v38 = type metadata accessor for ReconciliationMutation();
  uint64_t v288 = *(void *)(v38 - 8);
  uint64_t v289 = v38;
  MEMORY[0x270FA5388](v38);
  uint64_t v286 = (uint64_t)&v253 - v39;
  uint64_t v40 = sub_24DCCA3F8();
  uint64_t v277 = *(void *)(v40 - 8);
  uint64_t v278 = v40;
  MEMORY[0x270FA5388](v40);
  uint64_t v276 = (char *)&v253 - v41;
  uint64_t v42 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v282 = *(void *)(v42 - 8);
  uint64_t v283 = v42;
  MEMORY[0x270FA5388](v42);
  uint64_t v281 = (char *)&v253 - v43;
  uint64_t v292 = v6;
  uint64_t v293 = v5;
  uint64_t v44 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v303 = *(void *)(v44 - 8);
  uint64_t v304 = v44;
  uint64_t v45 = MEMORY[0x270FA5388](v44);
  uint64_t v302 = (char *)&v253 - v46;
  uint64_t v320 = v11;
  uint64_t v319 = *(void *)(v11 - 8);
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v271 = (uint64_t)&v253 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v273 = (uint64_t)&v253 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v279 = (uint64_t)&v253 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v267 = (uint64_t)&v253 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v295 = (uint64_t)&v253 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v269 = (char *)&v253 - v58;
  MEMORY[0x270FA5388](v57);
  uint64_t v312 = (uint64_t)&v253 - v59;
  uint64_t v307 = v30;
  uint64_t v311 = sub_24DCCA3F8();
  uint64_t v322 = *(void *)(v311 - 8);
  uint64_t v60 = MEMORY[0x270FA5388](v311);
  uint64_t v274 = (uint64_t)&v253 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  uint64_t v272 = (uint64_t)&v253 - v63;
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  uint64_t v294 = (uint64_t)&v253 - v65;
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  uint64_t v275 = (char *)&v253 - v67;
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  uint64_t v284 = (char *)&v253 - v69;
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  v296 = (char *)&v253 - v71;
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  v306 = (char *)&v253 - v73;
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  v305 = (char *)&v253 - v75;
  MEMORY[0x270FA5388](v74);
  v321 = (char *)&v253 - v76;
  uint64_t v290 = v12;
  uint64_t v77 = v325;
  uint64_t v78 = type metadata accessor for FileTreeError();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  uint64_t v82 = (char *)&v253 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v80);
  uint64_t v84 = (char *)&v253 - v83;
  _s3__C4CodeOMa_1(0);
  *(void *)&long long v331 = -2010;
  sub_24D75C014((unint64_t *)&qword_26B194040, _s3__C4CodeOMa_1);
  if ((sub_24DCC86A8() & 1) == 0)
  {
    uint64_t v85 = v336;
    sub_24D73E4C4((uint64_t)v327, v77, v323, v326);
    if (v85) {
      return v77;
    }
    uint64_t v336 = 0;
  }
  *(void *)&long long v331 = v77;
  uint64_t v86 = v77;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
  if (swift_dynamicCast())
  {
    uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
    v87(v82, v84, v78);
    uint64_t v88 = v336;
    sub_24D746C0C((uint64_t)v82, v327, v323, v326);
    if (v88)
    {
      uint64_t v77 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))(v79 + 8);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v82, v78);
    }
    else
    {
      swift_getWitnessTable();
      uint64_t v77 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))swift_allocError();
      v87(v106, v82, v78);
    }

    return v77;
  }

  *(void *)&long long v331 = -2010;
  if (sub_24DCC86A8())
  {
    uint64_t v89 = v312;
    sub_24D73DD0C(v312);
    uint64_t v90 = (uint64_t)v321;
    uint64_t v91 = v336;
    sub_24D475DF0(v89, (uint64_t)v321);
    uint64_t v92 = v322;
    if (v91)
    {
      uint64_t v93 = *(void (**)(char *, uint64_t))(v319 + 8);
      uint64_t v94 = (char *)v89;
LABEL_19:
      uint64_t v112 = v320;
LABEL_20:
      v93(v94, v112);
      return v77;
    }
    uint64_t v336 = 0;
    uint64_t v298 = *(void *)(v319 + 8);
    uint64_t v299 = v319 + 8;
    ((void (*)(uint64_t, uint64_t))v298)(v89, v320);
    uint64_t v113 = v92 + 16;
    uint64_t v114 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
    uint64_t v115 = v305;
    uint64_t v116 = v311;
    v114(v305, v90, v311);
    uint64_t v117 = v310;
    uint64_t v118 = v307;
    uint64_t v314 = *(void *)(v310 + 48);
    uint64_t v315 = v310 + 48;
    int v119 = ((uint64_t (*)(char *, uint64_t, uint64_t))v314)(v115, 1, v307);
    uint64_t v313 = v114;
    if (v119 == 1)
    {
      (*(void (**)(char *, uint64_t))(v92 + 8))(v115, v116);
      uint64_t v120 = v306;
      v114(v306, v90, v116);
    }
    else
    {
      uint64_t v125 = v302;
      uint64_t v124 = v303;
      uint64_t v126 = v115;
      uint64_t v127 = v115;
      uint64_t v128 = v304;
      (*(void (**)(char *, char *, uint64_t))(v303 + 16))(v302, v126, v304);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v127, v118);
      uint64_t v77 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))&v125[*(int *)(v128 + 40)];
      uint64_t v129 = v124;
      uint64_t v114 = v313;
      (*(void (**)(char *, uint64_t))(v129 + 8))(v125, v128);
      uint64_t v120 = v306;
      v114(v306, (uint64_t)v321, v116);
      if (v77)
      {
        uint64_t v130 = *(void (**)(char *, uint64_t))(v322 + 8);
        v130(v120, v116);
        goto LABEL_32;
      }
    }
    uint64_t v131 = v296;
    uint64_t v312 = v113;
    v114(v296, (uint64_t)v120, v116);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v314)(v131, 1, v118) == 1)
    {
      uint64_t v130 = *(void (**)(char *, uint64_t))(v322 + 8);
      v130(v120, v116);
      v130(v131, v116);
      goto LABEL_34;
    }
    uint64_t v77 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v302;
    uint64_t v132 = v303;
    uint64_t v133 = v131;
    uint64_t v134 = v131;
    uint64_t v135 = v120;
    uint64_t v136 = v304;
    (*(void (**)(char *, char *, uint64_t))(v303 + 16))(v302, v133, v304);
    (*(void (**)(char *, uint64_t))(v310 + 8))(v134, v118);
    uint64_t v137 = *(void *)((char *)v77 + *(int *)(v136 + 36));
    (*(void (**)(unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t), uint64_t))(v132 + 8))(v77, v136);
    uint64_t v130 = *(void (**)(char *, uint64_t))(v322 + 8);
    v130(v135, v116);
    if ((v137 & 0xFFFFFFFFFFFFFFEFLL) == 0)
    {
LABEL_34:
      double v139 = v284;
      v313(v284, (uint64_t)v321, v116);
      int v140 = ((uint64_t (*)(char *, uint64_t, uint64_t))v314)(v139, 1, v118);
      v306 = (char *)v130;
      if (v140 == 1)
      {
        v130(v139, v116);
        uint64_t v141 = v291;
        uint64_t v142 = v320;
      }
      else
      {
        uint64_t v147 = v118;
        uint64_t v149 = v281;
        uint64_t v148 = v282;
        uint64_t v150 = v283;
        (*(void (**)(char *, char *, uint64_t))(v282 + 16))(v281, &v139[*(int *)(v118 + 52)], v283);
        long long v151 = *(void (**)(char *, uint64_t))(v310 + 8);
        v151(v139, v147);
        LODWORD(v147) = v149[*(int *)(v150 + 52)];
        (*(void (**)(char *, uint64_t))(v148 + 8))(v149, v150);
        BOOL v152 = v147 == 3;
        uint64_t v141 = v291;
        uint64_t v142 = v320;
        if (!v152) {
          goto LABEL_56;
        }
        v305 = (char *)v151;
        char v153 = v275;
        v313(v275, (uint64_t)v321, v116);
        uint64_t v154 = v307;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v314)(v153, 1, v307) == 1)
        {
          ((void (*)(char *, uint64_t))v306)(v153, v116);
          uint64_t v155 = v276;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v319 + 56))(v276, 1, 1, v142);
          uint64_t v157 = v277;
          uint64_t v156 = v278;
        }
        else
        {
          uint64_t v164 = v302;
          uint64_t v163 = v303;
          uint64_t v165 = v304;
          (*(void (**)(char *, char *, uint64_t))(v303 + 16))(v302, v153, v304);
          ((void (*)(char *, uint64_t))v305)(v153, v154);
          uint64_t v155 = v276;
          uint64_t v157 = v277;
          uint64_t v156 = v278;
          (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v276, v164, v278);
          (*(void (**)(char *, uint64_t))(v163 + 8))(v164, v165);
          uint64_t v166 = v319;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v319 + 48))(v155, 1, v142) != 1)
          {
            uint64_t v177 = v269;
            (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v269, v155, v142);
            *(void *)&long long v331 = v290;
            *((void *)&v331 + 1) = v293;
            int v332 = v324;
            uint64_t v333 = v292;
            uint64_t v315 = type metadata accessor for JobResult();
            *(void *)&long long v331 = v141;
            *((void *)&v331 + 1) = v142;
            int v332 = (uint64_t (*)(void, void))v287;
            uint64_t v333 = v285;
            type metadata accessor for ReconciliationID();
            type metadata accessor for ReconciliationSideMutation();
            TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
            uint64_t v179 = v286;
            uint64_t v180 = (unsigned char *)(v286 + *(int *)(TupleTypeMetadata2 + 48));
            (*(void (**)(uint64_t, char *, uint64_t))(v166 + 16))(v286, v177, v142);
            swift_storeEnumTagMultiPayload();
            *uint64_t v180 = 0;
            swift_storeEnumTagMultiPayload();
            uint64_t v181 = v289;
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v323, v179);
            (*(void (**)(uint64_t, uint64_t))(v288 + 8))(v179, v181);
            ((void (*)(char *, uint64_t))v298)(v177, v142);
            goto LABEL_56;
          }
        }
        (*(void (**)(char *, uint64_t))(v157 + 8))(v155, v156);
      }
LABEL_56:
      *(void *)&long long v331 = v290;
      *((void *)&v331 + 1) = v293;
      int v332 = v324;
      uint64_t v333 = v292;
      uint64_t v324 = (uint64_t (*)(void, void))type metadata accessor for JobResult();
      *(void *)&long long v331 = v141;
      *((void *)&v331 + 1) = v142;
      int v332 = (uint64_t (*)(void, void))v287;
      uint64_t v333 = v285;
      uint64_t v182 = type metadata accessor for ReconciliationID();
      uint64_t v183 = type metadata accessor for ReconciliationSideMutation();
      uint64_t v314 = v182;
      uint64_t v315 = v183;
      uint64_t v184 = swift_getTupleTypeMetadata2();
      uint64_t v185 = v286;
      uint64_t v186 = (unsigned char *)(v286 + *(int *)(v184 + 48));
      sub_24D73DD0C(v286);
      swift_storeEnumTagMultiPayload();
      *uint64_t v186 = 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v187 = v289;
      swift_storeEnumTagMultiPayload();
      uint64_t v188 = v323;
      sub_24D907568(v323, v185);
      unint64_t v189 = *(void (**)(uint64_t, uint64_t))(v288 + 8);
      v189(v185, v187);
      uint64_t v190 = v185 + *(int *)(v184 + 48);
      sub_24D73DD0C(v185);
      swift_storeEnumTagMultiPayload();
      *(void *)uint64_t v190 = 0;
      *(void *)(v190 + 8) = 0;
      *(void *)(v190 + 16) = 0xB000000000000000;
      *(_OWORD *)(v190 + 24) = 0u;
      *(_OWORD *)(v190 + 40) = 0u;
      *(unsigned char *)(v190 + 56) = 0;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v188, v185);
      v189(v185, v187);
      ((void (*)(char *, uint64_t))v306)(v321, v311);
      uint64_t v77 = v325;
      goto LABEL_57;
    }
LABEL_32:
    uint64_t v138 = v336;
    sub_24D73E4C4((uint64_t)v327, v325, v323, v326);
    if (v138)
    {
      v130(v321, v311);
    }
    else
    {
      type metadata accessor for NSFileProviderError(0);
      *(void *)&long long v329 = -2010;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
      uint64_t v158 = swift_allocObject();
      *(_OWORD *)(v158 + 16) = xmmword_24DCCECE0;
      *(void *)(v158 + 32) = 0xD000000000000016;
      *(void *)(v158 + 40) = 0x800000024DD05910;
      *(void *)(v158 + 72) = MEMORY[0x263F8D4F8];
      *(unsigned char *)(v158 + 48) = 1;
      sub_24D428D08(v158);
      sub_24D75C014(&qword_26B193F20, type metadata accessor for NSFileProviderError);
      sub_24DCC8808();
      v130(v321, v311);
      return (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v331;
    }
    return v77;
  }
  uint64_t v95 = (char *)v313;
  sub_24DCC8198();
  sub_24D75C014((unint64_t *)&qword_26B1943D0, MEMORY[0x263F06038]);
  uint64_t v96 = v315;
  char v97 = sub_24DCC86A8();
  (*(void (**)(char *, uint64_t))(v314 + 8))(v95, v96);
  uint64_t v98 = (uint64_t)v317;
  uint64_t v99 = v318;
  if (v97)
  {
    uint64_t v100 = (void *)sub_24DCC8818();
    id v101 = objc_msgSend(v100, sel_userInfo);
    uint64_t v102 = sub_24DCC9578();

    uint64_t v103 = v316;
    if (*(void *)(v102 + 16) && (unint64_t v104 = sub_24D4053BC(0xD000000000000013, 0x800000024DD005F0), (v105 & 1) != 0))
    {
      sub_24D3F7E8C(*(void *)(v102 + 56) + 32 * v104, (uint64_t)&v329);
    }
    else
    {
      long long v329 = 0u;
      long long v330 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v330 + 1))
    {
      sub_24D3F7E7C(&v329, &v331);
      LODWORD(v329) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
      *(void *)(inited + 32) = 0xD000000000000013;
      *(void *)(inited + 40) = 0x800000024DD005F0;
      sub_24D3F7E8C((uint64_t)&v331, inited + 48);
      sub_24D428D08(inited);
      sub_24D75C014((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
      uint64_t v122 = v297;
      uint64_t v123 = v299;
      sub_24DCC8808();
      uint64_t v77 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))sub_24DCC83E8();

      (*(void (**)(char *, uint64_t))(v298 + 8))(v122, v123);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v331);
      return v77;
    }

    sub_24D3E3E54((uint64_t)&v329);
    uint64_t v108 = v327;
    goto LABEL_58;
  }
  LODWORD(v331) = sub_24DCC82D8();
  sub_24D4C5C60();
  char v107 = sub_24DCC86A8();
  uint64_t v108 = v327;
  uint64_t v103 = v316;
  if (v107)
  {
    uint64_t v109 = v295;
    sub_24D73DD0C(v295);
    uint64_t v110 = v294;
    uint64_t v111 = v336;
    sub_24D475DF0(v109, v294);
    if (v111)
    {
      uint64_t v93 = *(void (**)(char *, uint64_t))(v319 + 8);
      uint64_t v94 = (char *)v109;
      goto LABEL_19;
    }
    uint64_t v143 = *(void (**)(uint64_t, uint64_t))(v319 + 8);
    v143(v109, v320);
    uint64_t v144 = v310;
    uint64_t v145 = v307;
    int v146 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v310 + 48))(v110, 1, v307);
    uint64_t v336 = 0;
    if (v146 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v322 + 8))(v110, v311);
LABEL_57:
      uint64_t v108 = v327;
      uint64_t v103 = v316;
      uint64_t v98 = (uint64_t)v317;
      uint64_t v99 = v318;
      goto LABEL_58;
    }
    uint64_t v159 = v110;
    uint64_t v160 = v280;
    uint64_t v161 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v144 + 32))(v280, v159, v145);
    uint64_t v162 = &v160[*(int *)(v145 + 52)];
    if (v162[*(int *)(v283 + 44)] != 1)
    {
      (*(void (**)(char *, uint64_t))(v144 + 8))(v160, v145);
      goto LABEL_57;
    }
    if ((*(unsigned char *)(*v328 + 139) & 8) == 0)
    {
      (*(void (**)(char *, uint64_t))(v310 + 8))(v280, v307);
      goto LABEL_57;
    }
    if (((*(uint64_t (**)(uint64_t))(*v327 + 152))(v161) & 0x1000) != 0)
    {
      uint64_t v167 = v318;
      unint64_t v168 = v266;
      uint64_t v169 = v268;
      (*(void (**)(char *, char *, uint64_t))(v318 + 16))(v266, v162, v268);
      uint64_t v170 = v270;
      uint64_t v171 = v291;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v270 + 48))(v168, 1, v291) != 1)
      {
        uint64_t v228 = v264;
        (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v264, v168, v171);
        uint64_t v229 = v263;
        uint64_t v230 = v336;
        (*(void (**)(char *, uint64_t))(*(void *)v327[4] + 240))(v228, 1);
        if (v230)
        {
          (*(void (**)(char *, uint64_t))(v170 + 8))(v228, v171);
          uint64_t v93 = *(void (**)(char *, uint64_t))(v310 + 8);
          uint64_t v94 = v280;
          goto LABEL_85;
        }
        uint64_t v336 = 0;
        uint64_t v248 = v258;
        uint64_t v249 = *(void *)(v258 - 8);
        int v250 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v249 + 48))(v229, 1, v258);
        uint64_t v173 = v280;
        if (v250 == 1)
        {
          (*(void (**)(char *, uint64_t))(v254 + 8))(v229, v255);
          (*(void (**)(char *, uint64_t))(v270 + 8))(v264, v291);
          BOOL v172 = 0;
        }
        else
        {
          uint64_t v251 = v256;
          sub_24D409F80((uint64_t)&v229[*(int *)(v248 + 48)], v256);
          (*(void (**)(char *, uint64_t))(v249 + 8))(v229, v248);
          int v252 = *(unsigned __int8 *)(v251 + *(int *)(v257 + 84));
          sub_24D409FE4(v251);
          if (v252 == 3)
          {
            (*(void (**)(char *, uint64_t))(v270 + 8))(v264, v291);
            BOOL v172 = 1;
          }
          else
          {
            BOOL v172 = v252 == 2;
            (*(void (**)(char *, uint64_t))(v270 + 8))(v264, v291);
          }
        }
LABEL_53:
        uint64_t v174 = v327[5];
        uint64_t v175 = v267;
        sub_24D73DD0C(v267);
        uint64_t v176 = v336;
        (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v174 + 264))(v334, v175);
        if (v176)
        {
          v143(v175, v320);
          uint64_t v93 = *(void (**)(char *, uint64_t))(v310 + 8);
          uint64_t v94 = v173;
LABEL_85:
          uint64_t v112 = v307;
          goto LABEL_20;
        }
        uint64_t v336 = 0;
        uint64_t v226 = v175;
        uint64_t v227 = v320;
        v143(v226, v320);
        sub_24D5013B0((uint64_t)v334, (uint64_t)v335);
        if (sub_24D3F0D40((uint64_t)v335) == 1)
        {
          if (!v172)
          {
LABEL_82:
            (*(void (**)(char *, uint64_t))(v310 + 8))(v173, v307);
            goto LABEL_57;
          }
        }
        else
        {
          uint64_t v235 = v307;
          uint64_t v236 = v335[26];
          uint64_t v237 = v335[27];
          LODWORD(v321) = *(_DWORD *)&v173[*(int *)(v307 + 76)] & 1;
          char v238 = (*(uint64_t (**)(void))(*v327 + 520))();
          uint64_t v239 = sub_24D3FB354(v236, v237, 0, v238 & 1, v173[*(int *)(v235 + 56)] == 1, v321);
          sub_24D472A7C((uint64_t)v334);
          char v240 = v239 == 2 || v172;
          if ((v240 & 1) == 0) {
            goto LABEL_82;
          }
        }
        *(void *)&long long v331 = v290;
        *((void *)&v331 + 1) = v293;
        int v332 = v324;
        uint64_t v333 = v292;
        v327 = (void *)type metadata accessor for JobResult();
        *(void *)&long long v331 = v291;
        *((void *)&v331 + 1) = v227;
        int v332 = (uint64_t (*)(void, void))v287;
        uint64_t v333 = v285;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v241 = swift_getTupleTypeMetadata2();
        uint64_t v242 = v286;
        uint64_t v243 = v286 + *(int *)(v241 + 48);
        uint64_t v244 = v328;
        sub_24D73DD0C(v286);
        swift_storeEnumTagMultiPayload();
        long long v245 = *(_OWORD *)(*v244 + 120);
        *(_WORD *)uint64_t v243 = 769;
        *(_OWORD *)(v243 + 8) = v245;
        swift_storeEnumTagMultiPayload();
        uint64_t v246 = v289;
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v323, v242);
        uint64_t v325 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v288 + 8);
        ((void (*)(uint64_t, uint64_t))v325)(v242, v246);
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v247 = v242 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        sub_24D73DD0C(v242);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v247 = 0;
        *(void *)(v247 + 8) = 0;
        *(void *)(v247 + 16) = 0xB000000000000000;
        *(_OWORD *)(v247 + 24) = 0u;
        *(_OWORD *)(v247 + 40) = 0u;
        *(unsigned char *)(v247 + 56) = 0;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v323, v242);
        ((void (*)(uint64_t, uint64_t))v325)(v242, v246);
        type metadata accessor for NSFileProviderError(0);
        *(void *)&long long v329 = -2008;
        sub_24D428D08(MEMORY[0x263F8EE78]);
        sub_24D75C014(&qword_26B193F20, type metadata accessor for NSFileProviderError);
        sub_24DCC8808();
        (*(void (**)(char *, uint64_t))(v310 + 8))(v280, v307);
        return (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v331;
      }
      (*(void (**)(char *, uint64_t))(v167 + 8))(v168, v169);
    }
    BOOL v172 = 0;
    uint64_t v173 = v280;
    goto LABEL_53;
  }
LABEL_58:
  uint64_t v192 = (uint64_t)v308;
  uint64_t v191 = (uint64_t)v309;
  if (!sub_24D8903D0() || (*(unsigned char *)(*v328 + 138) & 1) == 0) {
    goto LABEL_60;
  }
  sub_24D797A78(v192);
  uint64_t v195 = v336;
  BOOL v196 = sub_24D769D8C(v77, v192, (uint64_t)v108);
  uint64_t v336 = v195;
  if (v195)
  {
    (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v192, v301);
    return v77;
  }
  BOOL v200 = v196;
  (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v192, v301);
  if (v200)
  {
    uint64_t v201 = v279;
    unint64_t v202 = v328;
    sub_24D73DD0C(v279);
    uint64_t v203 = v273;
    sub_24D73DD0C(v273);
    uint64_t v204 = v272;
    uint64_t v205 = v336;
    sub_24D475DF0(v203, v272);
    if (v205)
    {
      uint64_t v206 = *(void (**)(uint64_t, uint64_t))(v319 + 8);
      uint64_t v207 = v320;
      v206(v203, v320);
      v206(v201, v207);
      return v77;
    }
    uint64_t v324 = *(uint64_t (**)(void, void))(v319 + 8);
    uint64_t v210 = v324(v203, v320);
    uint64_t v211 = *v202;
    uint64_t v212 = *(void *)(*v202 + 120);
    uint64_t v336 = *(void *)(*v202 + 128);
    v321 = *(char **)(v211 + 136);
    uint64_t v213 = (*(uint64_t (**)(uint64_t))(*v108 + 176))(v210);
    uint64_t v214 = (*(uint64_t (**)(void))(*(void *)v323 + 184))();
    sub_24D76A63C(v201, v204, v212, v336, (uint64_t)v321, v213, v214);
    uint64_t v336 = 0;
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v322 + 8))(v204, v311);
    v324(v279, v320);
    uint64_t v77 = v325;
    uint64_t v193 = v328;
    uint64_t v103 = v316;
    uint64_t v98 = (uint64_t)v317;
    uint64_t v99 = v318;
    uint64_t v191 = (uint64_t)v309;
  }
  else
  {
LABEL_60:
    uint64_t v193 = v328;
  }
  if (sub_24D8903D0() && (*(unsigned char *)(*v193 + 138) & 2) != 0)
  {
    sub_24D797A78(v191);
    uint64_t v197 = v336;
    BOOL v198 = sub_24D769D8C(v77, v191, (uint64_t)v108);
    if (v197)
    {
      (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v191, v301);
      return v77;
    }
    BOOL v208 = v198;
    (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v191, v301);
    if (v208)
    {
      uint64_t v336 = v108[2];
      uint64_t v209 = v271;
      sub_24D73DD0C(v271);
      sub_24D475DF0(v209, v274);
      (*(void (**)(uint64_t, uint64_t))(v319 + 8))(v209, v320);
      uint64_t v215 = v274;
      uint64_t v216 = v307;
      int v217 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v310 + 48))(v274, 1, v307);
      uint64_t v218 = v215;
      if (v217 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v322 + 8))(v215, v311);
      }
      else
      {
        uint64_t v336 = 0;
        uint64_t v219 = v310;
        (*(void (**)(char *, uint64_t, uint64_t))(v310 + 32))(v103, v218, v216);
        uint64_t v220 = &v103[*(int *)(v216 + 52)];
        uint64_t v221 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
        uint64_t v222 = v265;
        uint64_t v223 = v268;
        v221(v265, v220, v268);
        uint64_t v224 = v103;
        uint64_t v225 = v291;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v270 + 48))(v222, 1, v291) == 1)
        {
          (*(void (**)(char *, uint64_t))(v219 + 8))(v224, v307);
          (*(void (**)(char *, uint64_t))(v318 + 8))(v222, v223);
        }
        else
        {
          uint64_t v231 = v270;
          uint64_t v232 = (uint64_t)v261;
          (*(void (**)(char *, char *, uint64_t))(v270 + 32))(v261, v222, v225);
          uint64_t v233 = v307;
          sub_24DB864D4(v307, v98);
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v262 - 8) + 56))(v98, 0, 1);
          uint64_t v234 = v336;
          sub_24D76A63C(v232, v98, *(void *)(*v328 + 120), *(void *)(*v328 + 128), *(void *)(*v328 + 136), (uint64_t)v108, v323);
          if (v234)
          {
            (*(void (**)(uint64_t, uint64_t))(v259 + 8))(v98, v260);
            (*(void (**)(uint64_t, uint64_t))(v231 + 8))(v232, v225);
            (*(void (**)(char *, uint64_t))(v310 + 8))(v224, v233);
            return v77;
          }
          (*(void (**)(uint64_t, uint64_t))(v259 + 8))(v98, v260);
          (*(void (**)(uint64_t, uint64_t))(v231 + 8))(v232, v225);
          (*(void (**)(char *, uint64_t))(v310 + 8))(v224, v233);
        }
      }
    }
  }
  uint64_t v194 = v77;
  return v77;
}

#error "24D74AAF0: too big function (funcsize=0)"

int8x16_t *sub_24D75B88C(void *a1, uint64_t a2, int8x16_t *a3)
{
  uint64_t v8 = type metadata accessor for FileTreeError();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = v3 + a3[5].i32[0];
  uint64_t v13 = *(void **)v12;
  if (!*(void *)v12)
  {
    sub_24D74AAF0(a1, a2, a3);
    if (!v4) {
      return 0;
    }
    id v21 = v4;
    id v17 = v4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    if (swift_dynamicCast())
    {
      if (swift_getEnumCaseMultiPayload() == 14)
      {

        swift_getWitnessTable();
        uint64_t v18 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))swift_allocError();
        swift_storeEnumTagMultiPayload();
        a3 = (int8x16_t *)sub_24D748460(v18, a1, a2, a3);

        return a3;
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }

    return a3;
  }
  uint64_t v14 = *(void **)(v12 + 8);
  id v15 = v13;
  id v16 = v14;
  a3 = (int8x16_t *)sub_24D748460((unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v13, a1, a2, a3);
  sub_24D75BFD4(v13, v14);
  return a3;
}

int8x16_t *sub_24D75BACC(void *a1, uint64_t a2, int8x16_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = a3[1].i64[1];
  uint64_t v10 = a3[2].i64[0];
  uint64_t v9 = a3[2].i64[1];
  uint64_t v53 = a3[1].i64[0];
  uint64_t v54 = v8;
  uint64_t v55 = v10;
  uint64_t v56 = v9;
  uint64_t v49 = type metadata accessor for ReconciliationMutation();
  uint64_t v57 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v54 = v8;
  uint64_t v55 = v10;
  uint64_t v56 = v9;
  uint64_t v13 = type metadata accessor for JobResult();
  uint64_t v14 = *(void *)(v4 + a3[4].i32[3]);
  uint64_t v50 = a2;
  uint64_t v48 = v13;
  sub_24D907640(a2, v14);
  uint64_t v51 = a3;
  uint64_t v52 = a1;
  uint64_t v15 = a3[5].i32[0];
  uint64_t v46 = v4;
  uint64_t v16 = v4 + v15;
  uint64_t v47 = *(void **)v16;
  if (v47)
  {
    uint64_t v45 = *(void **)(v16 + 8);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v18 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v20 = swift_getAssociatedConformanceWitness();
    uint64_t v53 = AssociatedTypeWitness;
    uint64_t v54 = v18;
    uint64_t v55 = AssociatedConformanceWitness;
    uint64_t v56 = v20;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v22 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
    sub_24D73DD0C((uint64_t)v12);
    swift_storeEnumTagMultiPayload();
    *(_OWORD *)uint64_t v22 = xmmword_24DCD4920;
    v22[16] = 4;
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = v49;
    swift_storeEnumTagMultiPayload();
    id v24 = v47;
    id v44 = v45;
    uint64_t v25 = v50;
    sub_24D907568(v50, (uint64_t)v12);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v57 + 8);
    v57 += 8;
    v26(v12, v23);
    if (sub_24D8903D0())
    {
      sub_24D75BFD4(v47, v45);
      uint64_t v27 = v51;
    }
    else
    {
      uint64_t v36 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v37 = v51;
      sub_24D73DD0C((uint64_t)v12);
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = v47;
      id v39 = v47;
      id v40 = v44;

      uint64_t v41 = v45;
      *(void *)uint64_t v36 = v45;
      uint64_t v25 = v50;
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = v49;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v25, (uint64_t)v12);
      sub_24D75BFD4(v38, v41);
      v26(v12, v42);
      uint64_t v27 = v37;
    }
  }
  else
  {
    uint64_t v28 = swift_getAssociatedTypeWitness();
    uint64_t v29 = swift_getAssociatedTypeWitness();
    uint64_t v30 = swift_getAssociatedConformanceWitness();
    uint64_t v31 = swift_getAssociatedConformanceWitness();
    uint64_t v53 = v28;
    uint64_t v54 = v29;
    uint64_t v55 = v30;
    uint64_t v56 = v31;
    type metadata accessor for ReconciliationID();
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v32 = &v12[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v33 = v51;
    sub_24D73DD0C((uint64_t)v12);
    swift_storeEnumTagMultiPayload();
    *(_OWORD *)uint64_t v32 = xmmword_24DCD4920;
    v32[16] = 4;
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = v49;
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = v50;
    sub_24D907568(v50, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v34);
    uint64_t v27 = v33;
    uint64_t v25 = v35;
  }
  return sub_24D75B88C(v52, v25, v27);
}

void sub_24D75BFD4(void *a1, void *a2)
{
  if (a1)
  {
  }
}

uint64_t sub_24D75C014(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for Reconciliation.ReconcileAfterPropagation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D75C074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 72);
}

uint64_t sub_24D75C07C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t result = sub_24DCCA3F8();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for ItemState();
    uint64_t result = sub_24DCCA3F8();
    if (v2 <= 0x3F)
    {
      type metadata accessor for SnapshotItem();
      uint64_t result = sub_24DCCA3F8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_24D75C2EC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  int v293 = *(_DWORD *)(v2 + 80);
  uint64_t v3 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v269 = v4;
  uint64_t v270 = v3;
  int v291 = *(_DWORD *)(v4 + 80);
  uint64_t v299 = v291;
  uint64_t v295 = v293 & 0xF8 | v291 | 7u;
  uint64_t v271 = v2;
  unsigned int v5 = *(_DWORD *)(v2 + 84);
  unsigned int v262 = *(_DWORD *)(v4 + 84);
  unsigned int v276 = v5;
  if (v5 <= v262) {
    unsigned int v5 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v265 = v5;
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v5 = 2147483646;
  }
  unsigned int v275 = v5;
  uint64_t v279 = *(void *)(v2 + 64);
  uint64_t v281 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v285 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v285 - 8);
  int v289 = *(_DWORD *)(v6 + 80);
  uint64_t v7 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v7 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v273 = v8;
  uint64_t v274 = v7;
  int v286 = *(_DWORD *)(v8 + 80);
  uint64_t v307 = v289;
  uint64_t v301 = v286;
  uint64_t v294 = v6;
  uint64_t v10 = *(unsigned int *)(v6 + 84);
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (v10 <= v11) {
    unsigned int v12 = v11;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v266 = v12;
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  unsigned int v277 = v12;
  unsigned int v278 = *(_DWORD *)(v8 + 84);
  uint64_t v283 = *(void *)(v6 + 64);
  size_t v13 = *(void *)(*(void *)(v7 - 8) + 64);
  size_t v309 = v13;
  if (!v9) {
    ++v13;
  }
  size_t v310 = v13;
  uint64_t v268 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v268 - 8);
  int v15 = *(_DWORD *)(v14 + 80);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  unint64_t v17 = v286 | (unint64_t)v289;
  uint64_t v18 = v16;
  uint64_t v19 = *(void *)(v16 - 8);
  int v20 = *(_DWORD *)(v19 + 80);
  uint64_t v264 = v19;
  uint64_t v306 = v20;
  uint64_t v304 = v15 & 0xF8 | v20 | 7u;
  unint64_t v21 = v17 | v304;
  uint64_t v267 = v14;
  unsigned int v22 = *(_DWORD *)(v14 + 84);
  if (v22 <= *(_DWORD *)(v19 + 84)) {
    unsigned int v23 = *(_DWORD *)(v19 + 84);
  }
  else {
    unsigned int v23 = *(_DWORD *)(v14 + 84);
  }
  if (v23 <= 0x7FFFFFFE) {
    unsigned int v24 = 2147483646;
  }
  else {
    unsigned int v24 = v23;
  }
  if (v24 <= v10) {
    unsigned int v25 = v10;
  }
  else {
    unsigned int v25 = v24;
  }
  if (v25 > v11) {
    unsigned int v11 = v25;
  }
  if (v11 <= 0x7FFFFFFF) {
    int v26 = 0x7FFFFFFF;
  }
  else {
    int v26 = v11;
  }
  uint64_t v27 = *(void *)(v14 + 64);
  uint64_t v28 = *(void *)(*(void *)(v16 - 8) + 64);
  uint64_t v29 = *a2;
  *a1 = *a2;
  if ((v21 | v295) != 7) {
    goto LABEL_35;
  }
  if (((v291 | v293 | v289 | v286 | v15 | v20) & 0x100000) != 0) {
    goto LABEL_35;
  }
  uint64_t v280 = v279 + 7;
  uint64_t v253 = v291 + 8;
  uint64_t v251 = v281 + 7;
  size_t v30 = ((((v281 + 7 + ((v253 + (v280 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v291)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v31 = v286;
  uint64_t v32 = v286 | 7;
  uint64_t v33 = v17 | 7;
  uint64_t v287 = v283 + 7;
  uint64_t v282 = v301 + 16;
  uint64_t v258 = v301 + 10;
  size_t v259 = v310 + 7;
  unint64_t v260 = (v31
        + 10
        + ((((((v309 + 12 + ((v309 + v31 + ((v31 + 12) & ~v31)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v31;
  unint64_t v34 = ((((((((((v310 + 7 + v260) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v261 = (v31 + 16 + ((v283 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(v31 | 7);
  size_t __n = v34 + v261;
  uint64_t v290 = v283 + v289;
  uint64_t v292 = v283 + v304;
  uint64_t v35 = v27 + 7;
  unint64_t v36 = ((((v28
          + 7
          + ((v20 + 8 + ((v27 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v20)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v37 = (v32 + 16 + ((v283 + v304 + ((v283 + v307) & ~v307)) & ~v304) + v36) & ~v32;
  if (((((((v21 + (((v17 | 7) + ((v295 + 8) & ~v295) + v30 + 9) & ~(v17 | 7)) + v34 + v261) & ~v21)
         + ((((v37 + v34 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
LABEL_35:
    a1 = (uint64_t *)(v29 + (((v21 | v295) + 16) & ~(v21 | v295)));
    swift_retain();
    return a1;
  }
  size_t v240 = v309 + 12;
  int v255 = v26;
  unsigned int v256 = v24;
  unsigned int v241 = v11;
  unsigned int v242 = v22;
  unsigned int v239 = v23;
  uint64_t v248 = v35;
  unint64_t v249 = ((((v37 + v34 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v244 = v28 + 7;
  uint64_t v245 = v20 + 8;
  unint64_t v250 = v36;
  uint64_t v247 = v32 + 16;
  uint64_t v284 = v301 + 12;
  uint64_t v254 = v309 + v301;
  uint64_t v246 = v18;
  unint64_t v243 = ((((((((((v310 + 7 + v260) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v257 = v37;
  uint64_t v300 = ~v299;
  uint64_t v38 = (char *)(((unint64_t)a1 + v295 + 8) & ~v295);
  id v39 = (char *)(((unint64_t)a2 + v295 + 8) & ~v295);
  swift_retain();
  unsigned int v263 = v10;
  if (v276 == v275)
  {
    uint64_t v40 = v280;
    uint64_t v41 = ~v33;
    if (!(*(unsigned int (**)(unint64_t))(v271 + 48))(((unint64_t)a2 + v295 + 8) & ~v295)) {
      goto LABEL_43;
    }
LABEL_42:
    memcpy(v38, v39, v30);
    goto LABEL_45;
  }
  uint64_t v40 = v280;
  uint64_t v42 = (uint64_t *)((unint64_t)&v39[v280] & 0xFFFFFFFFFFFFFFF8);
  if (v265 <= 0x7FFFFFFE)
  {
    uint64_t v43 = *v42;
    if ((unint64_t)*v42 >= 0xFFFFFFFF) {
      LODWORD(v43) = -1;
    }
    uint64_t v41 = ~v33;
    if ((v43 + 1) < 2) {
      goto LABEL_44;
    }
    goto LABEL_42;
  }
  uint64_t v41 = ~v33;
  if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v269 + 48))(((unint64_t)v42 + v253) & v300, v262, v270))
  {
    goto LABEL_42;
  }
LABEL_43:
  uint64_t v42 = (uint64_t *)((unint64_t)&v39[v40] & 0xFFFFFFFFFFFFFFF8);
LABEL_44:
  (*(void (**)(char *, char *, uint64_t))(v271 + 16))(v38, v39, AssociatedTypeWitness);
  id v44 = (void *)((unint64_t)&v38[v40] & 0xFFFFFFFFFFFFFFF8);
  void *v44 = *v42;
  unint64_t v45 = ((unint64_t)v44 + v253) & v300;
  unint64_t v46 = ((unint64_t)v42 + v253) & v300;
  uint64_t v47 = *(void (**)(unint64_t, unint64_t, uint64_t))(v269 + 16);
  swift_bridgeObjectRetain();
  v47(v45, v46, v270);
  uint64_t v48 = (void *)((v251 + v45) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v49 = (void *)((v251 + v46) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v48 = *v49;
  uint64_t v50 = (void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v51 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  uint64_t v10 = v263;
  swift_bridgeObjectRetain();
LABEL_45:
  uint64_t v52 = ~v32;
  uint64_t v53 = ~v301;
  uint64_t v54 = &v38[v30];
  uint64_t v55 = *(void *)&v39[v30];
  v54[8] = v39[v30 + 8];
  *(void *)uint64_t v54 = v55;
  uint64_t v302 = (void *)((unint64_t)&v38[v30 + 9 + v33] & v41);
  uint64_t v56 = (const void *)((unint64_t)&v39[v30 + 9 + v33] & v41);
  uint64_t v298 = v52;
  if (v10 == v277)
  {
    uint64_t v57 = (unint64_t)&v39[v30 + 9 + v33] & v41;
    uint64_t v58 = v285;
    int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v294 + 48))(v57, v10, v285);
    uint64_t v60 = v282;
    goto LABEL_47;
  }
  uint64_t v58 = v285;
  uint64_t v61 = v287;
  uint64_t v62 = (void *)(((unint64_t)v56 + v287) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v60 = v282;
  if ((v266 & 0x80000000) == 0)
  {
    unint64_t v63 = v62[1];
    if (v63 >= 0xFFFFFFFF) {
      LODWORD(v63) = -1;
    }
    if (v63 == -1) {
      goto LABEL_53;
    }
    goto LABEL_68;
  }
  unint64_t v64 = ((unint64_t)v62 + v282) & v52;
  unint64_t v66 = (v284 + v64) & v53;
  if (v278 > 0x7FFFFFFD)
  {
    int v59 = (*(uint64_t (**)(unint64_t))(v273 + 48))(v66);
LABEL_47:
    uint64_t v61 = v287;
    if (!v59)
    {
LABEL_53:
      uint64_t v62 = (void *)(((unint64_t)v56 + v61) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v64 = ((unint64_t)v62 + v60) & v52;
      uint64_t v65 = v284;
      unint64_t v66 = (v284 + v64) & v53;
      uint64_t v67 = v254;
      unint64_t v68 = (v254 + v66) & v53;
      goto LABEL_54;
    }
LABEL_68:
    uint64_t v102 = v302;
    memcpy(v302, v56, __n);
    unsigned int v112 = v263;
    unsigned int v113 = v256;
    int v114 = v255;
    unint64_t v115 = v260;
    unint64_t v116 = v261;
    unint64_t v117 = ~v21;
LABEL_69:
    size_t v111 = v310;
    goto LABEL_70;
  }
  unint64_t v68 = (v254 + v66) & v53;
  unint64_t v118 = *(void *)(((v240 + v68) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v118 >= 0xFFFFFFFF) {
    LODWORD(v118) = -1;
  }
  if ((v118 + 1) >= 2) {
    goto LABEL_68;
  }
  uint64_t v67 = v254;
  uint64_t v65 = v284;
LABEL_54:
  unint64_t v288 = v66;
  v296 = v56;
  uint64_t v69 = v56;
  uint64_t v70 = v61;
  unint64_t v71 = v68;
  (*(void (**)(void *, const void *, uint64_t))(v294 + 16))(v302, v69, v58);
  uint64_t v72 = (void *)(((unint64_t)v302 + v70) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v72 = *v62;
  v72[1] = v62[1];
  unint64_t v73 = ((unint64_t)v72 + v60) & v52;
  *(unsigned char *)unint64_t v73 = *(unsigned char *)v64;
  uint64_t v74 = v73 | 4;
  int v75 = *(_DWORD *)(v64 | 4);
  *(unsigned char *)(v74 + 4) = *(unsigned char *)((v64 | 4) + 4);
  *(_DWORD *)uint64_t v74 = v75;
  *(_WORD *)(v73 + 10) = *(_WORD *)(v64 + 10);
  unint64_t v76 = (v65 + v73) & v53;
  uint64_t v77 = *(void (**)(unint64_t, unint64_t, uint64_t))(v273 + 16);
  swift_bridgeObjectRetain();
  v77(v76, v288, v274);
  unint64_t v78 = (v67 + v76) & v53;
  v77(v78, v71, v274);
  uint64_t v79 = (unsigned char *)(v78 + v309);
  unsigned char *v79 = *(unsigned char *)(v71 + v309);
  v79[1] = *(unsigned char *)(v71 + v309 + 1);
  v79[2] = *(unsigned char *)(v71 + v309 + 2);
  v79[3] = *(unsigned char *)(v71 + v309 + 3);
  v79[4] = *(unsigned char *)(v71 + v309 + 4);
  unint64_t v80 = (v78 + v309 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v81 = (v71 + v309 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v80 = *(void *)v81;
  *(void *)(v80 + 8) = *(void *)(v81 + 8);
  *(unsigned char *)(v80 + 16) = *(unsigned char *)(v81 + 16);
  *(unsigned char *)(v80 + 17) = *(unsigned char *)(v81 + 17);
  *(unsigned char *)(v80 + 18) = *(unsigned char *)(v81 + 18);
  *(unsigned char *)(v80 + 19) = *(unsigned char *)(v81 + 19);
  unint64_t v82 = (v80 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v83 = (v81 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v82 = *(void *)v83;
  *(unsigned char *)(v82 + 8) = *(unsigned char *)(v83 + 8);
  *(unsigned char *)(v82 + 9) = *(unsigned char *)(v83 + 9);
  *(unsigned char *)(v82 + 10) = *(unsigned char *)(v83 + 10);
  *(unsigned char *)(v82 + 11) = *(unsigned char *)(v83 + 11);
  *(unsigned char *)(v82 + 12) = *(unsigned char *)(v83 + 12);
  uint64_t v84 = (void *)((v81 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v85 = (void *)((v80 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v85 = *v84;
  unint64_t v86 = ((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v87 = ((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v86 = *(void *)v87;
  *(unsigned char *)(v86 + 8) = *(unsigned char *)(v87 + 8);
  *(unsigned char *)(v86 + 9) = *(unsigned char *)(v87 + 9);
  uint64_t v88 = (void *)((v258 + v86) & v53);
  uint64_t v89 = (const void *)((v258 + v87) & v53);
  uint64_t v90 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
  swift_bridgeObjectRetain();
  if (v90(v89, 1, v274))
  {
    memcpy(v88, v89, v310);
  }
  else
  {
    v77((unint64_t)v88, (unint64_t)v89, v274);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v88, 0, 1, v274);
  }
  uint64_t v91 = (void *)(((unint64_t)v88 + v259) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v92 = (void *)(((unint64_t)v89 + v259) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v91 = *v92;
  unint64_t v93 = ((unint64_t)v91 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v94 = ((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v95 = *(void *)v94;
  *(unsigned char *)(v93 + 8) = *(unsigned char *)(v94 + 8);
  *(void *)unint64_t v93 = v95;
  uint64_t v96 = (void *)(((unint64_t)v91 + 31) & 0xFFFFFFFFFFFFFFF8);
  char v97 = (void *)(((unint64_t)v92 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v96 = *v97;
  unint64_t v98 = ((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v99 = (uint64_t *)(((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v100 = v99[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v58 = v285;
  uint64_t v56 = v296;
  if ((v100 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v98 = *(_OWORD *)v99;
  }
  else
  {
    uint64_t v101 = *v99;
    sub_24D3F9C18(*v99, v100);
    *(void *)unint64_t v98 = v101;
    *(void *)(v98 + 8) = v100;
  }
  uint64_t v102 = v302;
  unint64_t v103 = (v98 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v104 = ((unint64_t)v99 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v105 = *(void *)v104;
  *(unsigned char *)(v103 + 8) = *(unsigned char *)(v104 + 8);
  *(void *)unint64_t v103 = v105;
  *(unsigned char *)(v103 + 9) = *(unsigned char *)(v104 + 9);
  unint64_t v106 = (v103 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v107 = (v104 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v108 = *(_DWORD *)v107;
  *(unsigned char *)(v106 + 4) = *(unsigned char *)(v107 + 4);
  *(_DWORD *)unint64_t v106 = v108;
  uint64_t v109 = (void *)((v103 + 25) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v110 = (void *)((v104 + 25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v109 = *v110;
  v109[1] = v110[1];
  swift_bridgeObjectRetain();
  size_t v111 = v309;
  unsigned int v112 = v263;
  unsigned int v113 = v256;
  int v114 = v255;
  unint64_t v115 = v260;
  unint64_t v116 = v261;
  unint64_t v117 = ~v21;
  if (!v278) {
    goto LABEL_69;
  }
LABEL_70:
  uint64_t v119 = ~v307;
  uint64_t v120 = ~v304;
  uint64_t v121 = ~v306;
  unint64_t v122 = v115 + 7;
  unint64_t v123 = v116
       + ((((((((((v122 + v111) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v124 = (char *)(((unint64_t)v102 + v21 + v123) & v117);
  uint64_t v125 = (char *)(((unint64_t)v56 + v21 + v123) & v117);
  unint64_t v308 = v122;
  if (v112 == v114)
  {
    int v126 = (*(uint64_t (**)(char *))(v294 + 48))(v125);
    goto LABEL_72;
  }
  unint64_t v128 = (unint64_t)&v125[v290] & v119;
  unint64_t v129 = (v292 + v128) & v120;
  if (v113 == v114)
  {
    if (v242 == v113)
    {
      int v126 = (*(uint64_t (**)(unint64_t))(v267 + 48))((v292 + v128) & v120);
      goto LABEL_72;
    }
    uint64_t v209 = (unint64_t *)((v248 + v129) & 0xFFFFFFFFFFFFFFF8);
    if (v239 <= 0x7FFFFFFE)
    {
      unint64_t v210 = *v209;
      goto LABEL_108;
    }
    int v126 = (*(uint64_t (**)(unint64_t))(v264 + 48))(((unint64_t)v209 + v245) & v121);
  }
  else
  {
    unint64_t v130 = v129 + v250;
    if ((v241 & 0x80000000) == 0)
    {
      unint64_t v131 = *(void *)(v130 + 8);
      if (v131 >= 0xFFFFFFFF) {
        LODWORD(v131) = -1;
      }
      if (v131 != -1) {
        goto LABEL_73;
      }
      goto LABEL_82;
    }
    uint64_t v211 = (v284 + ((v247 + v130) & v298)) & v53;
    if (v278 <= 0x7FFFFFFD)
    {
      unint64_t v210 = *(void *)(((v240 + ((v254 + v211) & v53)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_108:
      if (v210 >= 0xFFFFFFFF) {
        LODWORD(v210) = -1;
      }
      if ((v210 + 1) >= 2) {
        goto LABEL_73;
      }
LABEL_83:
      uint64_t v132 = v125;
      uint64_t v133 = v53;
      uint64_t v134 = *(void (**)(char *))(v294 + 16);
      v305 = v132;
      v134(v124);
      unint64_t v135 = (unint64_t)&v124[v290] & v119;
      ((void (*)(unint64_t, unint64_t, uint64_t))v134)(v135, v128, v58);
      unint64_t v136 = (v292 + v135) & v120;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v267 + 16))(v136, v129, v268);
      uint64_t v137 = (void *)((v248 + v136) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v138 = (void *)((v248 + v129) & 0xFFFFFFFFFFFFFFF8);
      void *v137 = *v138;
      unint64_t v139 = ((unint64_t)v137 + v245) & v121;
      unint64_t v140 = ((unint64_t)v138 + v245) & v121;
      uint64_t v141 = *(void (**)(unint64_t, unint64_t, uint64_t))(v264 + 16);
      swift_bridgeObjectRetain();
      v141(v139, v140, v246);
      uint64_t v142 = (void *)((v244 + v140) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v143 = (void *)((v244 + v139) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v143 = *v142;
      uint64_t v144 = (void *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v145 = (void *)(((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v144 = *v145;
      v144[1] = v145[1];
      int v146 = (void *)(v136 + v250);
      *int v146 = *(void *)(v129 + v250);
      v146[1] = *(void *)(v129 + v250 + 8);
      unint64_t v147 = (v247 + v136 + v250) & v298;
      unint64_t v148 = (v247 + v129 + v250) & v298;
      *(unsigned char *)unint64_t v147 = *(unsigned char *)v148;
      uint64_t v149 = v147 | 4;
      int v150 = *(_DWORD *)(v148 | 4);
      *(unsigned char *)(v149 + 4) = *(unsigned char *)((v148 | 4) + 4);
      *(_DWORD *)uint64_t v149 = v150;
      *(_WORD *)(v147 + 10) = *(_WORD *)(v148 + 0xA);
      unint64_t v151 = (v284 + v147) & v133;
      unint64_t v152 = (v284 + v148) & v133;
      char v153 = *(void (**)(unint64_t, unint64_t, uint64_t))(v273 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v153(v151, v152, v274);
      uint64_t v154 = (v254 + v151) & v133;
      uint64_t v155 = (v254 + v152) & v133;
      v153(v154, v155, v274);
      uint64_t v156 = (unsigned char *)(v154 + v309);
      *uint64_t v156 = *(unsigned char *)(v155 + v309);
      v156[1] = *(unsigned char *)(v155 + v309 + 1);
      v156[2] = *(unsigned char *)(v155 + v309 + 2);
      v156[3] = *(unsigned char *)(v155 + v309 + 3);
      v156[4] = *(unsigned char *)(v155 + v309 + 4);
      unint64_t v157 = (v154 + v309 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v158 = (v155 + v309 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v157 = *(void *)v158;
      *(void *)(v157 + 8) = *(void *)(v158 + 8);
      *(unsigned char *)(v157 + 16) = *(unsigned char *)(v158 + 16);
      *(unsigned char *)(v157 + 17) = *(unsigned char *)(v158 + 17);
      *(unsigned char *)(v157 + 18) = *(unsigned char *)(v158 + 18);
      *(unsigned char *)(v157 + 19) = *(unsigned char *)(v158 + 19);
      unint64_t v159 = (v157 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = (v158 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v159 = *(void *)v160;
      *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
      *(unsigned char *)(v159 + 9) = *(unsigned char *)(v160 + 9);
      *(unsigned char *)(v159 + 10) = *(unsigned char *)(v160 + 10);
      *(unsigned char *)(v159 + 11) = *(unsigned char *)(v160 + 11);
      *(unsigned char *)(v159 + 12) = *(unsigned char *)(v160 + 12);
      uint64_t v161 = (void *)((v158 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v162 = (void *)((v157 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v162 = *v161;
      unint64_t v163 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v164 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v163 = *(void *)v164;
      *(unsigned char *)(v163 + 8) = *(unsigned char *)(v164 + 8);
      *(unsigned char *)(v163 + 9) = *(unsigned char *)(v164 + 9);
      uint64_t v165 = (void *)((v258 + v163) & v133);
      uint64_t v166 = (const void *)((v258 + v164) & v133);
      uint64_t v167 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48);
      swift_bridgeObjectRetain();
      if (v167(v166, 1, v274))
      {
        memcpy(v165, v166, v310);
      }
      else
      {
        v153((unint64_t)v165, (unint64_t)v166, v274);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v165, 0, 1, v274);
      }
      unint64_t v168 = (void *)(((unint64_t)v165 + v259) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v169 = (void *)(((unint64_t)v166 + v259) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v168 = *v169;
      unint64_t v170 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v171 = ((unint64_t)v169 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v172 = *(void *)v171;
      *(unsigned char *)(v170 + 8) = *(unsigned char *)(v171 + 8);
      *(void *)unint64_t v170 = v172;
      uint64_t v173 = (void *)(((unint64_t)v168 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v174 = (void *)(((unint64_t)v169 + 31) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v173 = *v174;
      unint64_t v175 = ((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v176 = (uint64_t *)(((unint64_t)v174 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v177 = v176[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v177 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v175 = *(_OWORD *)v176;
      }
      else
      {
        uint64_t v178 = *v176;
        sub_24D3F9C18(*v176, v177);
        *(void *)unint64_t v175 = v178;
        *(void *)(v175 + 8) = v177;
      }
      unint64_t v179 = (v175 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v180 = ((unint64_t)v176 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v181 = *(void *)v180;
      *(unsigned char *)(v179 + 8) = *(unsigned char *)(v180 + 8);
      *(void *)unint64_t v179 = v181;
      *(unsigned char *)(v179 + 9) = *(unsigned char *)(v180 + 9);
      unint64_t v182 = (v179 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v183 = (v180 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v184 = *(_DWORD *)v183;
      *(unsigned char *)(v182 + 4) = *(unsigned char *)(v183 + 4);
      *(_DWORD *)unint64_t v182 = v184;
      uint64_t v185 = (void *)((v179 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v186 = (void *)((v180 + 25) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v185 = *v186;
      v185[1] = v186[1];
      unint64_t v187 = v147 + v243;
      uint64_t v188 = (long long *)(v148 + v243);
      unint64_t v189 = *(void *)(v148 + v243 + 16);
      if (v189 >= 0xFFFFFFFF) {
        LODWORD(v189) = -1;
      }
      int v190 = v189 - 1;
      swift_bridgeObjectRetain();
      if (v190 < 0)
      {
        *(void *)unint64_t v187 = *(void *)v188;
        *(unsigned char *)(v187 + 8) = *((unsigned char *)v188 + 8);
        *(unsigned char *)(v187 + 9) = *((unsigned char *)v188 + 9);
        uint64_t v203 = (void *)*((void *)v188 + 2);
        id v204 = v203;
        *(void *)(v187 + 16) = v203;
        uint64_t v205 = (void *)*((void *)v188 + 3);
        id v206 = v205;
        *(void *)(v187 + 24) = v205;
        *(unsigned char *)(v187 + 32) = *((unsigned char *)v188 + 32);
        *(unsigned char *)(v187 + 33) = *((unsigned char *)v188 + 33);
        *(unsigned char *)(v187 + 34) = *((unsigned char *)v188 + 34);
        *(void *)(v187 + 40) = *((void *)v188 + 5);
        *(void *)(v187 + 48) = *((void *)v188 + 6);
        *(void *)(v187 + 56) = *((void *)v188 + 7);
        *(void *)(v187 + 64) = *((void *)v188 + 8);
        *(unsigned char *)(v187 + 72) = *((unsigned char *)v188 + 72);
        *(void *)(v187 + 80) = *((void *)v188 + 10);
        *(void *)(v187 + 88) = *((void *)v188 + 11);
        uint64_t v303 = (void *)*((void *)v188 + 12);
        *(void *)(v187 + 96) = v303;
        *(unsigned char *)(v187 + 104) = *((unsigned char *)v188 + 104);
        *(unsigned char *)(v187 + 105) = *((unsigned char *)v188 + 105);
        *(void *)(v187 + 112) = *((void *)v188 + 14);
        *(void *)(v187 + 120) = *((void *)v188 + 15);
        *(void *)(v187 + 128) = *((void *)v188 + 16);
        *(void *)(v187 + 136) = *((void *)v188 + 17);
        *(void *)(v187 + 144) = *((void *)v188 + 18);
        *(void *)(v187 + 152) = *((void *)v188 + 19);
        *(void *)(v187 + 160) = *((void *)v188 + 20);
        *(void *)(v187 + 168) = *((void *)v188 + 21);
        *(unsigned char *)(v187 + 176) = *((unsigned char *)v188 + 176);
        *(void *)(v187 + 184) = *((void *)v188 + 23);
        uint64_t v207 = *((void *)v188 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v208 = v303;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v207)
        {
          *(void *)(v187 + 192) = v207;
          *(void *)(v187 + 200) = *((void *)v188 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v187 + 192) = v188[12];
        }
        size_t v127 = v309;
        *(void *)(v187 + 208) = *((void *)v188 + 26);
        *(void *)(v187 + 216) = *((void *)v188 + 27);
        *(void *)(v187 + 224) = *((void *)v188 + 28);
        *(void *)(v187 + 232) = *((void *)v188 + 29);
        *(void *)(v187 + 240) = *((void *)v188 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v191 = *v188;
        long long v192 = v188[1];
        long long v193 = v188[3];
        *(_OWORD *)(v187 + 32) = v188[2];
        *(_OWORD *)(v187 + 48) = v193;
        *(_OWORD *)unint64_t v187 = v191;
        *(_OWORD *)(v187 + 16) = v192;
        long long v194 = v188[4];
        long long v195 = v188[5];
        long long v196 = v188[7];
        *(_OWORD *)(v187 + 96) = v188[6];
        *(_OWORD *)(v187 + 112) = v196;
        *(_OWORD *)(v187 + 64) = v194;
        *(_OWORD *)(v187 + 80) = v195;
        long long v197 = v188[8];
        long long v198 = v188[9];
        long long v199 = v188[11];
        *(_OWORD *)(v187 + 160) = v188[10];
        *(_OWORD *)(v187 + 176) = v199;
        *(_OWORD *)(v187 + 128) = v197;
        *(_OWORD *)(v187 + 144) = v198;
        long long v200 = v188[12];
        long long v201 = v188[13];
        long long v202 = v188[14];
        *(void *)(v187 + 240) = *((void *)v188 + 30);
        *(_OWORD *)(v187 + 208) = v201;
        *(_OWORD *)(v187 + 224) = v202;
        *(_OWORD *)(v187 + 192) = v200;
        size_t v127 = v309;
      }
      uint64_t v212 = (_OWORD *)((v187 + 255) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v213 = (long long *)(((unint64_t)v188 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v214 = *v213;
      *(_OWORD *)((char *)v212 + 9) = *(long long *)((char *)v213 + 9);
      *uint64_t v212 = v214;
      unint64_t v215 = (v187 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v216 = ((unint64_t)v188 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v217 = *(_OWORD *)v216;
      *(unsigned char *)(v215 + 16) = *(unsigned char *)(v216 + 16);
      *(_OWORD *)unint64_t v215 = v217;
      uint64_t v218 = (void *)((v187 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v219 = ((unint64_t)v188 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v220 = *(void *)v219;
      v219 += 15;
      *uint64_t v218 = v220;
      uint64_t v221 = (void *)(((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v222 = *(void *)(v219 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v223 = *(void *)((v219 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v222, v223);
      *uint64_t v221 = v222;
      v221[1] = v223;
      uint64_t v125 = v305;
      if (v278) {
        goto LABEL_103;
      }
      goto LABEL_74;
    }
    int v126 = (*(uint64_t (**)(uint64_t))(v273 + 48))(v211);
  }
LABEL_72:
  if (!v126)
  {
LABEL_82:
    unint64_t v128 = (unint64_t)&v125[v290] & v119;
    unint64_t v129 = (v292 + v128) & v120;
    goto LABEL_83;
  }
LABEL_73:
  memcpy(v124, v125, v249);
LABEL_74:
  size_t v127 = v310;
LABEL_103:
  unint64_t v224 = ((((v257
           + ((((((((((v308 + v127) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v225 = (unint64_t)&v124[v224];
  unint64_t v226 = (unint64_t)&v125[v224];
  unint64_t v227 = v225 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v227 = *(void *)(v226 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v227 + 8) = *(unsigned char *)((v226 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v228 = (void **)((v226 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v229 = *v228;
  uint64_t v230 = (void *)((v225 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v230 = *v228;
  unint64_t v231 = ((unint64_t)v230 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v232 = ((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v233 = *(void **)v232;
  id v234 = v229;
  if ((unint64_t)v233 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v231 = *(_OWORD *)v232;
  }
  else
  {
    id v235 = v233;
    *(void *)unint64_t v231 = v233;
    uint64_t v236 = *(void **)(v232 + 8);
    *(void *)(v231 + 8) = v236;
    id v237 = v236;
  }
  return a1;
}

void sub_24D75D954(uint64_t a1)
{
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (a1 + (v4 | v7 | 7) + 8) & ~(unint64_t)(v4 | v7 | 7);
  uint64_t v9 = *(unsigned int *)(v3 + 84);
  if (v9 <= *(_DWORD *)(v6 + 84)) {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v3 + 84);
  }
  if (v10 <= 0x7FFFFFFE) {
    int v11 = 2147483646;
  }
  else {
    int v11 = v10;
  }
  uint64_t v12 = *(void *)(v3 + 64) + 7;
  uint64_t v13 = v7 + 8;
  uint64_t v124 = ~v7;
  unint64_t v127 = (((*(void *)(*(void *)(v5 - 8) + 64) + 7 + ((v7 + 8 + (v12 & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v9 == v11)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v3 + 48))(v8, v9, AssociatedTypeWitness)) {
      goto LABEL_18;
    }
LABEL_16:
    uint64_t v14 = (uint64_t *)((v12 + v8) & 0xFFFFFFFFFFFFFFF8);
LABEL_17:
    (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v14 + v13) & v124, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v14 = (uint64_t *)((v12 + v8) & 0xFFFFFFFFFFFFFFF8);
  if (v10 > 0x7FFFFFFE)
  {
    if ((*(unsigned int (**)(unint64_t))(v6 + 48))(((unint64_t)v14 + v13) & ~v7)) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  uint64_t v15 = *v14;
  if ((unint64_t)*v14 >= 0xFFFFFFFF) {
    LODWORD(v15) = -1;
  }
  if ((v15 + 1) < 2) {
    goto LABEL_17;
  }
LABEL_18:
  unint64_t v16 = (v8 + v127 + 16) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v120 = sub_24DCC8CE8();
  uint64_t v20 = *(void *)(v120 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v116 = v19;
  uint64_t v113 = v21 | v19;
  uint64_t v22 = v21 | 7;
  uint64_t v23 = (v16 + (v21 | v19 | 7) + 9) & ~(v21 | v19 | 7);
  uint64_t v24 = *(unsigned int *)(v18 + 84);
  unsigned int v25 = *(_DWORD *)(v20 + 84);
  if (v25 <= 0x7FFFFFFE) {
    unsigned int v26 = 2147483646;
  }
  else {
    unsigned int v26 = *(_DWORD *)(v20 + 84);
  }
  unsigned int v109 = v26;
  if (v24 > v26) {
    unsigned int v26 = *(_DWORD *)(v18 + 84);
  }
  if (v26 <= 0x7FFFFFFF) {
    int v27 = 0x7FFFFFFF;
  }
  else {
    int v27 = v26;
  }
  uint64_t v111 = *(void *)(v18 + 64);
  uint64_t v28 = v111 + 7;
  uint64_t v128 = ~v22;
  uint64_t v29 = v21 + 16;
  uint64_t v115 = v21 | 7;
  unint64_t v108 = (v21 + 16 + ((v111 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v22;
  uint64_t v30 = ~v21;
  uint64_t v119 = v21 + 12;
  uint64_t v31 = *(void *)(*(void *)(v120 - 8) + 64);
  uint64_t v104 = v31 + v21;
  uint64_t v105 = v31 + 12;
  uint64_t v106 = ~v21;
  uint64_t v102 = v21 + 10;
  unint64_t v32 = (v21
       + 10
       + ((((((v31 + 12 + ((v31 + v21 + ((v21 + 12) & ~v21)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21;
  uint64_t v121 = v17;
  uint64_t v122 = v18;
  unsigned int v103 = *(_DWORD *)(v20 + 84);
  uint64_t v125 = v23;
  if (v24 == v27)
  {
    uint64_t v33 = *(uint64_t (**)(void))(v18 + 48);
    goto LABEL_28;
  }
  unint64_t v36 = (v28 + v23) & 0xFFFFFFFFFFFFFFF8;
  if ((v26 & 0x80000000) != 0)
  {
    unint64_t v39 = (v119 + ((v29 + v36) & v128)) & v30;
    if (v25 > 0x7FFFFFFD)
    {
      uint64_t v33 = *(uint64_t (**)(void))(v20 + 48);
LABEL_28:
      unint64_t v34 = (v21
           + 10
           + ((((((v31 + 12 + ((v31 + v21 + ((v21 + 12) & ~v21)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21;
      int v35 = v33();
      unint64_t v32 = v34;
      if (v35) {
        goto LABEL_42;
      }
      goto LABEL_34;
    }
    unint64_t v40 = (v104 + v39) & v30;
    unint64_t v41 = (v105 + v40) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v96 = *(void *)(v41 + 8);
    if (v96 >= 0xFFFFFFFF) {
      LODWORD(v96) = -1;
    }
    if ((v96 + 1) < 2)
    {
      unint64_t v117 = (v21
            + 10
            + ((((((v31 + 12 + ((v31 + v21 + ((v21 + 12) & ~v21)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21;
      uint64_t v38 = ~v21;
      goto LABEL_35;
    }
  }
  else
  {
    unint64_t v37 = *(void *)(v36 + 8);
    if (v37 >= 0xFFFFFFFF) {
      LODWORD(v37) = -1;
    }
    if (v37 == -1)
    {
LABEL_34:
      unint64_t v117 = v32;
      uint64_t v38 = v106;
      unint64_t v39 = (v119 + ((v29 + ((v28 + v125) & 0xFFFFFFFFFFFFFFF8)) & v128)) & v106;
      unint64_t v40 = (v104 + v39) & v106;
      unint64_t v41 = (v105 + v40) & 0xFFFFFFFFFFFFFFF8;
LABEL_35:
      (*(void (**)(void))(v122 + 8))();
      swift_bridgeObjectRelease();
      uint64_t v42 = *(void (**)(unint64_t, uint64_t))(v20 + 8);
      v42(v39, v120);
      v42(v40, v120);
      swift_bridgeObjectRelease();
      unint64_t v43 = (v102 + ((((v41 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v38;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v43, 1, v120)) {
        v42(v43, v120);
      }
      uint64_t v44 = 7;
      if (!v103) {
        uint64_t v44 = 8;
      }
      unint64_t v45 = ((v44 + v31 + v43) & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v46 = (uint64_t *)(((v45 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v47 = v46[1];
      if ((v47 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v46, v47);
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = v121;
      unsigned int v25 = v103;
      unint64_t v32 = v117;
    }
  }
LABEL_42:
  uint64_t v107 = v20;
  if (v25) {
    uint64_t v48 = v31;
  }
  else {
    uint64_t v48 = v31 + 1;
  }
  uint64_t v100 = v48 + 7;
  unint64_t v118 = (((((((((v48 + 7 + v32) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v101 = swift_getAssociatedTypeWitness();
  uint64_t v49 = *(void *)(v101 - 8);
  uint64_t v50 = v49;
  int v51 = *(_DWORD *)(v49 + 80) & 0xF8;
  uint64_t v52 = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(unsigned __int8 *)(v53 + 80);
  uint64_t v55 = v51 | v54 | 7;
  uint64_t v56 = (v108 + v125 + (v113 | v55) + v118 + 16) & ~(v113 | v55);
  uint64_t v57 = *(unsigned int *)(v49 + 84);
  if (v57 <= *(_DWORD *)(v53 + 84)) {
    unsigned int v58 = *(_DWORD *)(v53 + 84);
  }
  else {
    unsigned int v58 = *(_DWORD *)(v49 + 84);
  }
  if (v58 <= 0x7FFFFFFE) {
    unsigned int v59 = 2147483646;
  }
  else {
    unsigned int v59 = v58;
  }
  if (v59 <= v24) {
    unsigned int v60 = v24;
  }
  else {
    unsigned int v60 = v59;
  }
  if (v60 <= v109) {
    unsigned int v60 = v109;
  }
  if (v60 <= 0x7FFFFFFF) {
    int v61 = 0x7FFFFFFF;
  }
  else {
    int v61 = v60;
  }
  uint64_t v62 = ~v116;
  uint64_t v63 = v111 + v116;
  uint64_t v64 = ~v55;
  uint64_t v65 = v111 + v55;
  uint64_t v66 = *(void *)(v49 + 64) + 7;
  unint64_t v67 = ((((*(void *)(*(void *)(v52 - 8) + 64) + 7 + ((v54 + 8 + (v66 & 0xFFFFFFFFFFFFFFF8)) & ~v54)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v126 = (v115 + 16 + v67 + ((v111 + v55 + ((v111 + v116) & ~v116)) & ~v55)) & v128;
  uint64_t v114 = v52;
  uint64_t v110 = v54 + 8;
  uint64_t v112 = ~v54;
  if (v24 == v61)
  {
    uint64_t v68 = v24;
    uint64_t v69 = v56;
    int v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v56, v68, v17);
LABEL_61:
    uint64_t v56 = v69;
    goto LABEL_62;
  }
  uint64_t v72 = (v63 + v56) & v62;
  uint64_t v73 = (v65 + v72) & v64;
  if (v59 == v61)
  {
    if (v57 == v59)
    {
      uint64_t v69 = v56;
      int v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))((v65 + v72) & v64, v57, v101);
      goto LABEL_61;
    }
    uint64_t v91 = (unint64_t *)((v66 + v73) & 0xFFFFFFFFFFFFFFF8);
    BOOL v92 = v58 > 0x7FFFFFFE;
    uint64_t v71 = v107;
    if (!v92)
    {
      unint64_t v93 = *v91;
      goto LABEL_101;
    }
    uint64_t v94 = ((unint64_t)v91 + v54 + 8) & ~v54;
    uint64_t v95 = *(uint64_t (**)(uint64_t))(v53 + 48);
LABEL_98:
    uint64_t v97 = v56;
    uint64_t v98 = v71;
    int v99 = v95(v94);
    uint64_t v71 = v98;
    uint64_t v56 = v97;
    if (v99) {
      goto LABEL_75;
    }
    goto LABEL_63;
  }
  unint64_t v89 = v73 + v67;
  if ((v60 & 0x80000000) == 0)
  {
    unint64_t v90 = *(void *)(v89 + 8);
    if (v90 >= 0xFFFFFFFF) {
      LODWORD(v90) = -1;
    }
    int v70 = v90 + 1;
LABEL_62:
    uint64_t v71 = v107;
    if (v70) {
      goto LABEL_75;
    }
LABEL_63:
    uint64_t v72 = (v63 + v56) & v62;
    uint64_t v73 = (v65 + v72) & v64;
LABEL_64:
    uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
    uint64_t v123 = v56;
    uint64_t v75 = v71;
    v74(v56, v121);
    v74(v72, v121);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v73, v101);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v53 + 8))((v110 + ((v66 + v73) & 0xFFFFFFFFFFFFFFF8)) & v112, v114);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v76 = (v115 + 16 + v73 + v67) & v128;
    uint64_t v77 = v75;
    unint64_t v78 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v78((v119 + v76) & v106, v120);
    uint64_t v79 = (v104 + ((v119 + v76) & v106)) & v106;
    v78(v79, v120);
    swift_bridgeObjectRelease();
    unint64_t v80 = (v102 + ((((((v105 + v79) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v106;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v77 + 48))(v80, 1, v120)) {
      v78(v80, v120);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v81 = (uint64_t *)((((((v100 + v80) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v82 = v81[1];
    if ((v82 & 0x3000000000000000) == 0) {
      sub_24D400DCC(*v81, v82);
    }
    swift_bridgeObjectRelease();
    unint64_t v83 = v76 + v118 + 16;
    uint64_t v84 = *(void **)(v83 + 16);
    LODWORD(v85) = -1;
    if ((unint64_t)v84 < 0xFFFFFFFF) {
      uint64_t v85 = *(void *)(v83 + 16);
    }
    if ((int)v85 - 1 < 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v83 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24D466534(*(void *)((((v83 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v83 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
    uint64_t v56 = v123;
    goto LABEL_75;
  }
  uint64_t v71 = v107;
  uint64_t v94 = (v119 + ((v115 + 16 + v89) & v128)) & v106;
  if (v103 > 0x7FFFFFFD)
  {
    uint64_t v95 = *(uint64_t (**)(uint64_t))(v107 + 48);
    goto LABEL_98;
  }
  unint64_t v93 = *(void *)(((v105 + ((v104 + v94) & v106)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_101:
  if (v93 >= 0xFFFFFFFF) {
    LODWORD(v93) = -1;
  }
  if ((v93 + 1) < 2) {
    goto LABEL_64;
  }
LABEL_75:
  unint64_t v86 = (id *)((v56 + ((((v118 + v126 + 327) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);

  unint64_t v87 = ((unint64_t)v86 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v87 >= 0xFFFFFFFFuLL)
  {

    uint64_t v88 = *(void **)(v87 + 8);
  }
}

void *sub_24D75E638(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v297 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v297 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v273 = a1;
  uint64_t v303 = ((unint64_t)a1 + v10 + 8) & ~v10;
  int v11 = (char *)(((unint64_t)a2 + v10 + 8) & ~v10);
  uint64_t v12 = *(unsigned int *)(v5 + 84);
  uint64_t v294 = v8;
  uint64_t v13 = *(unsigned int *)(v8 + 84);
  if (v12 <= v13) {
    unsigned int v14 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v5 + 84);
  }
  if (v14 <= 0x7FFFFFFE) {
    int v15 = 2147483646;
  }
  else {
    int v15 = v14;
  }
  uint64_t v16 = *(void *)(v5 + 64) + 7;
  uint64_t v291 = ~v9;
  uint64_t v17 = v9 + 8;
  uint64_t v287 = *(void *)(*(void *)(v297 - 8) + 64) + 7;
  unint64_t v300 = ((((v287 + ((v9 + 8 + (v16 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  swift_retain();
  if (v12 == v15)
  {
    int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, v12, AssociatedTypeWitness);
    uint64_t v19 = (char *)v303;
    uint64_t v20 = AssociatedTypeWitness;
    size_t v21 = v300;
    if (!v18) {
      goto LABEL_17;
    }
LABEL_16:
    memcpy(v19, v11, v21);
    goto LABEL_19;
  }
  uint64_t v306 = AssociatedTypeWitness;
  uint64_t v22 = (uint64_t *)((unint64_t)&v11[v16] & 0xFFFFFFFFFFFFFFF8);
  if (v14 <= 0x7FFFFFFE)
  {
    uint64_t v23 = *v22;
    if ((unint64_t)*v22 >= 0xFFFFFFFF) {
      LODWORD(v23) = -1;
    }
    uint64_t v19 = (char *)v303;
    uint64_t v20 = v306;
    size_t v21 = v300;
    if ((v23 + 1) < 2) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  int v24 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v294 + 48))(((unint64_t)v22 + v17) & v291, v13, v297);
  uint64_t v19 = (char *)v303;
  uint64_t v20 = v306;
  size_t v21 = v300;
  if (v24) {
    goto LABEL_16;
  }
LABEL_17:
  uint64_t v22 = (uint64_t *)((unint64_t)&v11[v16] & 0xFFFFFFFFFFFFFFF8);
LABEL_18:
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v19, v11, v20);
  unsigned int v25 = (void *)((unint64_t)&v19[v16] & 0xFFFFFFFFFFFFFFF8);
  void *v25 = *v22;
  unint64_t v26 = ((unint64_t)v25 + v17) & v291;
  unint64_t v27 = ((unint64_t)v22 + v17) & v291;
  uint64_t v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v294 + 16);
  swift_bridgeObjectRetain();
  v28(v26, v27, v297);
  uint64_t v29 = (void *)((v287 + v26) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)((v287 + v27) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v29 = *v30;
  uint64_t v31 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = (void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_19:
  uint64_t v33 = &v19[v21];
  unint64_t v34 = &v11[v21];
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)uint64_t v33 = v35;
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = v37;
  uint64_t v39 = *(unsigned __int8 *)(v37 + 80);
  uint64_t v40 = sub_24DCC8CE8();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = v41;
  uint64_t v43 = *(unsigned __int8 *)(v41 + 80);
  uint64_t v44 = v43 | 7;
  uint64_t v271 = v39;
  uint64_t v274 = v43 | v39;
  uint64_t v45 = v43 | v39 | 7;
  unint64_t v46 = (void *)((unint64_t)&v33[v45 + 9] & ~v45);
  unint64_t v47 = (const void *)((unint64_t)&v34[v45 + 9] & ~v45);
  unsigned int v48 = *(_DWORD *)(v37 + 84);
  uint64_t v49 = *(unsigned int *)(v41 + 84);
  if (v49 <= 0x7FFFFFFE) {
    unsigned int v50 = 2147483646;
  }
  else {
    unsigned int v50 = *(_DWORD *)(v41 + 84);
  }
  unsigned int v276 = v50;
  if (v48 > v50) {
    unsigned int v50 = *(_DWORD *)(v37 + 84);
  }
  if (v50 <= 0x7FFFFFFF) {
    int v51 = 0x7FFFFFFF;
  }
  else {
    int v51 = v50;
  }
  uint64_t v278 = *(void *)(v37 + 64);
  uint64_t v52 = v278 + 7;
  uint64_t v53 = ~v44;
  uint64_t v54 = v43 + 16;
  uint64_t v282 = v43 | 7;
  unint64_t v301 = (v43 + 16 + ((v278 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v44;
  uint64_t v55 = ~v43;
  uint64_t v56 = v43 + 12;
  size_t v57 = *(void *)(v41 + 64);
  uint64_t v268 = v43 + 10;
  unint64_t v307 = (v43
        + 10
        + ((((((v57 + 12 + ((v57 + v43 + ((v43 + 12) & ~v43)) & ~v43)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v43;
  size_t v304 = v57;
  unsigned int v305 = *(_DWORD *)(v41 + 84);
  uint64_t v269 = v40;
  uint64_t v265 = ~v43;
  size_t v284 = v57 + v43;
  unint64_t v288 = v46;
  uint64_t v298 = v47;
  uint64_t v263 = *(void *)(v40 - 8);
  uint64_t v264 = v43 + 12;
  uint64_t v292 = v36;
  uint64_t v295 = ~v44;
  uint64_t v285 = v38;
  unsigned int v270 = *(_DWORD *)(v38 + 84);
  size_t v259 = v57 + 12;
  if (v48 == v51)
  {
    unsigned int v58 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v38 + 48);
    unint64_t v59 = (unint64_t)v47;
    uint64_t v49 = *(unsigned int *)(v38 + 84);
    uint64_t v60 = v36;
    goto LABEL_29;
  }
  uint64_t v63 = (void *)(((unint64_t)v47 + v52) & 0xFFFFFFFFFFFFFFF8);
  if ((v50 & 0x80000000) == 0)
  {
    unint64_t v64 = v63[1];
    if (v64 >= 0xFFFFFFFF) {
      LODWORD(v64) = -1;
    }
    if (v64 == -1) {
      goto LABEL_35;
    }
    goto LABEL_55;
  }
  uint64_t v60 = v40;
  unint64_t v65 = ((unint64_t)v63 + v54) & v53;
  unint64_t v59 = (v56 + v65) & v55;
  if (v49 > 0x7FFFFFFD)
  {
    unsigned int v58 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v41 + 48);
LABEL_29:
    int v61 = v46;
    int v62 = v58(v59, v49, v60);
    unint64_t v46 = v61;
    unint64_t v47 = v298;
    if (!v62)
    {
LABEL_35:
      uint64_t v63 = (void *)(((unint64_t)v47 + v52) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v65 = ((unint64_t)v63 + v54) & v53;
      unint64_t v261 = (v56 + v65) & v55;
      unint64_t v266 = (v284 + v261) & v55;
      goto LABEL_36;
    }
LABEL_55:
    uint64_t v108 = 7;
    if (v305)
    {
      size_t v84 = v57;
    }
    else
    {
      uint64_t v108 = 8;
      size_t v84 = v57 + 1;
    }
    memcpy(v46, v47, v301+ ((((((((((v108 + v57 + v307) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
    uint64_t v85 = v270;
    uint64_t v86 = v271;
LABEL_59:
    size_t v106 = v84;
    goto LABEL_60;
  }
  unint64_t v107 = *(void *)(((v57 + 12 + ((v57 + v43 + v59) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v107 >= 0xFFFFFFFF) {
    LODWORD(v107) = -1;
  }
  if ((v107 + 1) >= 2) {
    goto LABEL_55;
  }
  unint64_t v261 = (v56 + v65) & v55;
  unint64_t v266 = (v57 + v43 + v59) & v55;
LABEL_36:
  (*(void (**)(void *, const void *, uint64_t))(v285 + 16))(v288, v47, v36);
  uint64_t v66 = (void *)(((unint64_t)v288 + v52) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v66 = *v63;
  v66[1] = v63[1];
  unint64_t v67 = ((unint64_t)v66 + v54) & v53;
  *(unsigned char *)unint64_t v67 = *(unsigned char *)v65;
  uint64_t v68 = v67 | 4;
  int v69 = *(_DWORD *)(v65 | 4);
  *(unsigned char *)(v68 + 4) = *(unsigned char *)((v65 | 4) + 4);
  *(_DWORD *)uint64_t v68 = v69;
  *(_WORD *)(v67 + 10) = *(_WORD *)(v65 + 10);
  unint64_t v70 = (v56 + v67) & v55;
  uint64_t v71 = *(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 16);
  swift_bridgeObjectRetain();
  v71(v70, v261, v269);
  v71((v284 + v70) & v55, v266, v269);
  uint64_t v72 = (unsigned char *)(((v284 + v70) & v55) + v57);
  *uint64_t v72 = *(unsigned char *)(v266 + v57);
  v72[1] = *(unsigned char *)(v266 + v57 + 1);
  v72[2] = *(unsigned char *)(v266 + v57 + 2);
  v72[3] = *(unsigned char *)(v266 + v57 + 3);
  v72[4] = *(unsigned char *)(v266 + v57 + 4);
  unint64_t v73 = (unint64_t)(v72 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v266 + v57 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v73 = *(void *)v74;
  *(void *)(v73 + 8) = *(void *)(v74 + 8);
  *(unsigned char *)(v73 + 16) = *(unsigned char *)(v74 + 16);
  *(unsigned char *)(v73 + 17) = *(unsigned char *)(v74 + 17);
  *(unsigned char *)(v73 + 18) = *(unsigned char *)(v74 + 18);
  *(unsigned char *)(v73 + 19) = *(unsigned char *)(v74 + 19);
  unint64_t v75 = (v73 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = (v74 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v75 = *(void *)v76;
  *(unsigned char *)(v75 + 8) = *(unsigned char *)(v76 + 8);
  *(unsigned char *)(v75 + 9) = *(unsigned char *)(v76 + 9);
  *(unsigned char *)(v75 + 10) = *(unsigned char *)(v76 + 10);
  *(unsigned char *)(v75 + 11) = *(unsigned char *)(v76 + 11);
  *(unsigned char *)(v75 + 12) = *(unsigned char *)(v76 + 12);
  uint64_t v77 = (void *)((v74 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v78 = (void *)((v73 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v78 = *v77;
  unint64_t v79 = ((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v80 = ((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v79 = *(void *)v80;
  *(unsigned char *)(v79 + 8) = *(unsigned char *)(v80 + 8);
  *(unsigned char *)(v79 + 9) = *(unsigned char *)(v80 + 9);
  unint64_t v81 = (void *)((v268 + v79) & v55);
  unint64_t v82 = (const void *)((v268 + v80) & v55);
  unint64_t v83 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48);
  swift_bridgeObjectRetain();
  if (v83(v82, 1, v269))
  {
    if (v305) {
      size_t v84 = v57;
    }
    else {
      size_t v84 = v57 + 1;
    }
    memcpy(v81, v82, v84);
  }
  else
  {
    v71((unint64_t)v81, (unint64_t)v82, v269);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v81, 0, 1, v269);
    if (v305) {
      size_t v84 = v57;
    }
    else {
      size_t v84 = v57 + 1;
    }
  }
  uint64_t v85 = v270;
  uint64_t v86 = v271;
  unint64_t v87 = (void *)(((unint64_t)v81 + v84 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v88 = (void *)(((unint64_t)v82 + v84 + 7) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v87 = *v88;
  unint64_t v89 = ((unint64_t)v87 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v90 = ((unint64_t)v88 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v91 = *(void *)v90;
  *(unsigned char *)(v89 + 8) = *(unsigned char *)(v90 + 8);
  *(void *)unint64_t v89 = v91;
  BOOL v92 = (void *)(((unint64_t)v87 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v93 = (void *)(((unint64_t)v88 + 31) & 0xFFFFFFFFFFFFFFF8);
  *BOOL v92 = *v93;
  unint64_t v94 = ((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v95 = (uint64_t *)(((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v96 = v95[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v96 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v94 = *(_OWORD *)v95;
  }
  else
  {
    uint64_t v97 = *v95;
    sub_24D3F9C18(*v95, v96);
    *(void *)unint64_t v94 = v97;
    *(void *)(v94 + 8) = v96;
  }
  unint64_t v98 = (v94 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v99 = ((unint64_t)v95 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v100 = *(void *)v99;
  *(unsigned char *)(v98 + 8) = *(unsigned char *)(v99 + 8);
  *(void *)unint64_t v98 = v100;
  *(unsigned char *)(v98 + 9) = *(unsigned char *)(v99 + 9);
  unint64_t v101 = (v98 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v102 = (v99 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v103 = *(_DWORD *)v102;
  *(unsigned char *)(v101 + 4) = *(unsigned char *)(v102 + 4);
  *(_DWORD *)unint64_t v101 = v103;
  uint64_t v104 = (void *)((v98 + 25) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v105 = (void *)((v99 + 25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v104 = *v105;
  v104[1] = v105[1];
  swift_bridgeObjectRetain();
  size_t v106 = v57;
  if (!v305) {
    goto LABEL_59;
  }
LABEL_60:
  unint64_t v272 = v307 + 7;
  unint64_t v109 = (((((((((v307 + 7 + v106) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v267 = swift_getAssociatedTypeWitness();
  uint64_t v110 = *(void *)(v267 - 8);
  uint64_t v111 = v110;
  int v112 = *(_DWORD *)(v110 + 80) & 0xF8;
  uint64_t v113 = swift_getAssociatedTypeWitness();
  uint64_t v114 = *(void *)(v113 - 8);
  uint64_t v115 = v114;
  uint64_t v116 = *(unsigned __int8 *)(v114 + 80);
  uint64_t v117 = v112 | v116 | 7;
  uint64_t v118 = v301 + (v274 | v117) + v109 + 16;
  uint64_t v119 = (char *)(((unint64_t)v288 + v118) & ~(v274 | v117));
  uint64_t v120 = (char *)(((unint64_t)v298 + v118) & ~(v274 | v117));
  uint64_t v121 = *(unsigned int *)(v110 + 84);
  if (v121 <= *(_DWORD *)(v114 + 84)) {
    unsigned int v122 = *(_DWORD *)(v114 + 84);
  }
  else {
    unsigned int v122 = *(_DWORD *)(v110 + 84);
  }
  if (v122 <= 0x7FFFFFFE) {
    unsigned int v123 = 2147483646;
  }
  else {
    unsigned int v123 = v122;
  }
  if (v123 <= v85) {
    unsigned int v124 = v85;
  }
  else {
    unsigned int v124 = v123;
  }
  if (v124 <= v276) {
    unsigned int v124 = v276;
  }
  if (v124 <= 0x7FFFFFFF) {
    int v125 = 0x7FFFFFFF;
  }
  else {
    int v125 = v124;
  }
  uint64_t v126 = ~v86;
  uint64_t v127 = v278 + v86;
  uint64_t v128 = (v278 + v86) & ~v86;
  uint64_t v129 = ~v117;
  uint64_t v130 = v278 + v117;
  uint64_t v131 = *(void *)(v110 + 64) + 7;
  uint64_t v132 = ~v116;
  uint64_t v133 = v116 + 8;
  unint64_t v134 = ((((*(void *)(v114 + 64) + 7 + ((v116 + 8 + (v131 & 0xFFFFFFFFFFFFFFF8)) & ~v116)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v299 = (v282 + 16 + v134 + ((v278 + v117 + v128) & ~v117)) & v295;
  uint64_t v302 = v120;
  unint64_t v279 = v134;
  uint64_t v280 = v113;
  uint64_t v275 = v132;
  uint64_t v277 = *(void *)(v114 + 64) + 7;
  uint64_t v260 = v131;
  uint64_t v262 = v133;
  uint64_t v289 = ~v117;
  uint64_t v281 = v126;
  if (v85 == v125)
  {
    uint64_t v135 = v292;
    int v136 = (*(uint64_t (**)(char *, uint64_t))(v285 + 48))(v120, v85);
    uint64_t v120 = v302;
    goto LABEL_83;
  }
  uint64_t v135 = v292;
  unint64_t v137 = (unint64_t)&v120[v127] & v126;
  unint64_t v138 = (v130 + v137) & v129;
  if (v123 == v125)
  {
    if (v121 == v123)
    {
      int v136 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v110 + 48))((v130 + v137) & v129, v121, v267);
      uint64_t v120 = v302;
      goto LABEL_83;
    }
    unint64_t v148 = (unint64_t *)((v131 + v138) & 0xFFFFFFFFFFFFFFF8);
    size_t v141 = v304;
    if (v122 <= 0x7FFFFFFE)
    {
      unint64_t v149 = *v148;
      goto LABEL_123;
    }
    int v151 = (*(uint64_t (**)(unint64_t))(v114 + 48))(((unint64_t)v148 + v133) & v132);
LABEL_96:
    uint64_t v120 = v302;
    if (v151) {
      goto LABEL_84;
    }
LABEL_97:
    unint64_t v137 = (unint64_t)&v120[v127] & v281;
    unint64_t v138 = (v130 + v137) & v289;
    goto LABEL_98;
  }
  unint64_t v139 = v134 + v138;
  if ((v124 & 0x80000000) == 0)
  {
    unint64_t v140 = *(void *)(v139 + 8);
    if (v140 >= 0xFFFFFFFF) {
      LODWORD(v140) = -1;
    }
    int v136 = v140 + 1;
LABEL_83:
    size_t v141 = v304;
    if (v136)
    {
LABEL_84:
      uint64_t v142 = 7;
      if (!v305) {
        uint64_t v142 = 8;
      }
      uint64_t v143 = v299;
      if (v305) {
        size_t v144 = v141;
      }
      else {
        size_t v144 = v141 + 1;
      }
      memcpy(v119, v120, ((((((((((((((v142 + v141 + v307) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ v299+ 327) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
      unint64_t v146 = v307 + 7;
      uint64_t v145 = v273;
LABEL_90:
      size_t v147 = v144;
      goto LABEL_118;
    }
    goto LABEL_97;
  }
  uint64_t v150 = (v264 + ((v282 + 16 + v139) & v295)) & v265;
  size_t v141 = v304;
  if (v305 > 0x7FFFFFFD)
  {
    int v151 = (*(uint64_t (**)(uint64_t))(v263 + 48))(v150);
    goto LABEL_96;
  }
  unint64_t v149 = *(void *)(((v259 + ((v284 + v150) & v265)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_123:
  if (v149 >= 0xFFFFFFFF) {
    LODWORD(v149) = -1;
  }
  if ((v149 + 1) >= 2) {
    goto LABEL_84;
  }
LABEL_98:
  unint64_t v152 = v119;
  uint64_t v283 = v282 + 16;
  char v153 = *(void (**)(char *, char *, uint64_t))(v285 + 16);
  v153(v152, v120, v135);
  int v286 = v152;
  unint64_t v154 = (unint64_t)&v152[v127] & v281;
  v153((char *)v154, (char *)v137, v135);
  unint64_t v155 = (v130 + v154) & v289;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v111 + 16))(v155, v138, v267);
  uint64_t v156 = (void *)((v260 + v155) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v157 = (void *)((v260 + v138) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v156 = *v157;
  unint64_t v158 = ((unint64_t)v156 + v262) & v275;
  unint64_t v159 = ((unint64_t)v157 + v262) & v275;
  unint64_t v160 = *(void (**)(unint64_t, unint64_t, uint64_t))(v115 + 16);
  swift_bridgeObjectRetain();
  v160(v158, v159, v280);
  uint64_t v161 = (void *)((v277 + v159) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v162 = (void *)((v277 + v158) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v162 = *v161;
  unint64_t v163 = (void *)(((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v164 = (void *)(((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v163 = *v164;
  v163[1] = v164[1];
  uint64_t v165 = (void *)(v279 + v155);
  *uint64_t v165 = *(void *)(v279 + v138);
  v165[1] = *(void *)(v279 + v138 + 8);
  unint64_t v166 = (v283 + v279 + v155) & v295;
  unint64_t v167 = (v283 + v279 + v138) & v295;
  *(unsigned char *)unint64_t v166 = *(unsigned char *)v167;
  uint64_t v168 = v166 | 4;
  int v169 = *(_DWORD *)(v167 | 4);
  *(unsigned char *)(v168 + 4) = *(unsigned char *)((v167 | 4) + 4);
  *(_DWORD *)uint64_t v168 = v169;
  *(_WORD *)(v166 + 10) = *(_WORD *)(v167 + 0xA);
  unint64_t v293 = v166;
  unint64_t v170 = (v264 + v166) & v265;
  unint64_t v290 = v167;
  unint64_t v171 = (v264 + v167) & v265;
  uint64_t v172 = *(void (**)(unint64_t, unint64_t, uint64_t))(v263 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v172(v170, v171, v269);
  size_t v173 = (v284 + v171) & v265;
  v172((v284 + v170) & v265, v173, v269);
  uint64_t v174 = (unsigned char *)(((v284 + v170) & v265) + v304);
  *uint64_t v174 = *(unsigned char *)(v173 + v304);
  v174[1] = *(unsigned char *)(v173 + v304 + 1);
  v174[2] = *(unsigned char *)(v173 + v304 + 2);
  v174[3] = *(unsigned char *)(v173 + v304 + 3);
  v174[4] = *(unsigned char *)(v173 + v304 + 4);
  unint64_t v175 = (unint64_t)(v174 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v176 = (v173 + v304 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v175 = *(void *)v176;
  *(void *)(v175 + 8) = *(void *)(v176 + 8);
  *(unsigned char *)(v175 + 16) = *(unsigned char *)(v176 + 16);
  *(unsigned char *)(v175 + 17) = *(unsigned char *)(v176 + 17);
  *(unsigned char *)(v175 + 18) = *(unsigned char *)(v176 + 18);
  *(unsigned char *)(v175 + 19) = *(unsigned char *)(v176 + 19);
  unint64_t v177 = (v175 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v178 = (v176 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v177 = *(void *)v178;
  *(unsigned char *)(v177 + 8) = *(unsigned char *)(v178 + 8);
  *(unsigned char *)(v177 + 9) = *(unsigned char *)(v178 + 9);
  *(unsigned char *)(v177 + 10) = *(unsigned char *)(v178 + 10);
  *(unsigned char *)(v177 + 11) = *(unsigned char *)(v178 + 11);
  *(unsigned char *)(v177 + 12) = *(unsigned char *)(v178 + 12);
  unint64_t v179 = (void *)((v176 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v180 = (void *)((v175 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v180 = *v179;
  unint64_t v181 = ((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v182 = ((unint64_t)v179 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v181 = *(void *)v182;
  *(unsigned char *)(v181 + 8) = *(unsigned char *)(v182 + 8);
  *(unsigned char *)(v181 + 9) = *(unsigned char *)(v182 + 9);
  unint64_t v183 = (void *)((v268 + v181) & v265);
  int v184 = (const void *)((v268 + v182) & v265);
  uint64_t v185 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v263 + 48);
  swift_bridgeObjectRetain();
  if (v185(v184, 1, v269))
  {
    unsigned int v186 = v305;
    size_t v187 = v304;
    if (v305) {
      size_t v188 = v304;
    }
    else {
      size_t v188 = v304 + 1;
    }
    memcpy(v183, v184, v188);
  }
  else
  {
    v172((unint64_t)v183, (unint64_t)v184, v269);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v263 + 56))(v183, 0, 1, v269);
    unsigned int v186 = v305;
    size_t v187 = v304;
    if (v305) {
      size_t v188 = v304;
    }
    else {
      size_t v188 = v304 + 1;
    }
  }
  uint64_t v119 = v286;
  size_t v296 = v188;
  size_t v189 = v188 + 7;
  int v190 = (void *)(((unint64_t)v183 + v189) & 0xFFFFFFFFFFFFFFF8);
  long long v191 = (void *)(((unint64_t)v184 + v189) & 0xFFFFFFFFFFFFFFF8);
  *int v190 = *v191;
  unint64_t v192 = ((unint64_t)v190 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v193 = ((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v194 = *(void *)v193;
  *(unsigned char *)(v192 + 8) = *(unsigned char *)(v193 + 8);
  *(void *)unint64_t v192 = v194;
  long long v195 = (void *)(((unint64_t)v190 + 31) & 0xFFFFFFFFFFFFFFF8);
  long long v196 = (void *)(((unint64_t)v191 + 31) & 0xFFFFFFFFFFFFFFF8);
  *long long v195 = *v196;
  unint64_t v197 = ((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v198 = (uint64_t *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v199 = v198[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v199 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v197 = *(_OWORD *)v198;
  }
  else
  {
    uint64_t v200 = *v198;
    sub_24D3F9C18(*v198, v199);
    *(void *)unint64_t v197 = v200;
    *(void *)(v197 + 8) = v199;
  }
  size_t v147 = v187;
  unint64_t v201 = (v197 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v202 = ((unint64_t)v198 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v203 = *(void *)v202;
  *(unsigned char *)(v201 + 8) = *(unsigned char *)(v202 + 8);
  *(void *)unint64_t v201 = v203;
  *(unsigned char *)(v201 + 9) = *(unsigned char *)(v202 + 9);
  unint64_t v204 = (v201 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v205 = (v202 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v206 = *(_DWORD *)v205;
  *(unsigned char *)(v204 + 4) = *(unsigned char *)(v205 + 4);
  *(_DWORD *)unint64_t v204 = v206;
  uint64_t v207 = (void *)((v201 + 25) & 0xFFFFFFFFFFFFFFF8);
  id v208 = (void *)((v202 + 25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v207 = *v208;
  v207[1] = v208[1];
  unint64_t v209 = ((((((((((v189 + v307) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v210 = v293 + v209;
  uint64_t v211 = (long long *)(v290 + v209);
  unint64_t v212 = *(void *)(v290 + v209 + 16);
  if (v212 >= 0xFFFFFFFF) {
    LODWORD(v212) = -1;
  }
  int v213 = v212 - 1;
  swift_bridgeObjectRetain();
  if (v213 < 0)
  {
    *(void *)unint64_t v210 = *(void *)v211;
    *(unsigned char *)(v210 + 8) = *((unsigned char *)v211 + 8);
    *(unsigned char *)(v210 + 9) = *((unsigned char *)v211 + 9);
    unint64_t v226 = (void *)*((void *)v211 + 2);
    id v227 = v226;
    *(void *)(v210 + 16) = v226;
    uint64_t v228 = (void *)*((void *)v211 + 3);
    id v229 = v228;
    *(void *)(v210 + 24) = v228;
    *(unsigned char *)(v210 + 32) = *((unsigned char *)v211 + 32);
    *(unsigned char *)(v210 + 33) = *((unsigned char *)v211 + 33);
    *(unsigned char *)(v210 + 34) = *((unsigned char *)v211 + 34);
    *(void *)(v210 + 40) = *((void *)v211 + 5);
    *(void *)(v210 + 48) = *((void *)v211 + 6);
    *(void *)(v210 + 56) = *((void *)v211 + 7);
    *(void *)(v210 + 64) = *((void *)v211 + 8);
    *(unsigned char *)(v210 + 72) = *((unsigned char *)v211 + 72);
    *(void *)(v210 + 80) = *((void *)v211 + 10);
    *(void *)(v210 + 88) = *((void *)v211 + 11);
    unint64_t v308 = (void *)*((void *)v211 + 12);
    *(void *)(v210 + 96) = v308;
    *(unsigned char *)(v210 + 104) = *((unsigned char *)v211 + 104);
    *(unsigned char *)(v210 + 105) = *((unsigned char *)v211 + 105);
    *(void *)(v210 + 112) = *((void *)v211 + 14);
    *(void *)(v210 + 120) = *((void *)v211 + 15);
    *(void *)(v210 + 128) = *((void *)v211 + 16);
    *(void *)(v210 + 136) = *((void *)v211 + 17);
    *(void *)(v210 + 144) = *((void *)v211 + 18);
    *(void *)(v210 + 152) = *((void *)v211 + 19);
    *(void *)(v210 + 160) = *((void *)v211 + 20);
    *(void *)(v210 + 168) = *((void *)v211 + 21);
    *(unsigned char *)(v210 + 176) = *((unsigned char *)v211 + 176);
    *(void *)(v210 + 184) = *((void *)v211 + 23);
    uint64_t v230 = *((void *)v211 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v231 = v308;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v230)
    {
      *(void *)(v210 + 192) = v230;
      *(void *)(v210 + 200) = *((void *)v211 + 25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v210 + 192) = v211[12];
    }
    unint64_t v146 = v272;
    uint64_t v145 = v273;
    size_t v147 = v304;
    unsigned int v186 = v305;
    uint64_t v119 = v286;
    uint64_t v143 = v299;
    *(void *)(v210 + 208) = *((void *)v211 + 26);
    *(void *)(v210 + 216) = *((void *)v211 + 27);
    *(void *)(v210 + 224) = *((void *)v211 + 28);
    *(void *)(v210 + 232) = *((void *)v211 + 29);
    *(void *)(v210 + 240) = *((void *)v211 + 30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v214 = *v211;
    long long v215 = v211[1];
    long long v216 = v211[3];
    *(_OWORD *)(v210 + 32) = v211[2];
    *(_OWORD *)(v210 + 48) = v216;
    *(_OWORD *)unint64_t v210 = v214;
    *(_OWORD *)(v210 + 16) = v215;
    long long v217 = v211[4];
    long long v218 = v211[5];
    long long v219 = v211[7];
    *(_OWORD *)(v210 + 96) = v211[6];
    *(_OWORD *)(v210 + 112) = v219;
    *(_OWORD *)(v210 + 64) = v217;
    *(_OWORD *)(v210 + 80) = v218;
    long long v220 = v211[8];
    long long v221 = v211[9];
    long long v222 = v211[11];
    *(_OWORD *)(v210 + 160) = v211[10];
    *(_OWORD *)(v210 + 176) = v222;
    *(_OWORD *)(v210 + 128) = v220;
    *(_OWORD *)(v210 + 144) = v221;
    long long v223 = v211[12];
    long long v224 = v211[13];
    long long v225 = v211[14];
    *(void *)(v210 + 240) = *((void *)v211 + 30);
    *(_OWORD *)(v210 + 208) = v224;
    *(_OWORD *)(v210 + 224) = v225;
    *(_OWORD *)(v210 + 192) = v223;
    unint64_t v146 = v307 + 7;
    uint64_t v145 = v273;
    uint64_t v143 = v299;
  }
  unint64_t v232 = (_OWORD *)((v210 + 255) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v233 = (long long *)(((unint64_t)v211 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v234 = *v233;
  *(_OWORD *)((char *)v232 + 9) = *(long long *)((char *)v233 + 9);
  _OWORD *v232 = v234;
  unint64_t v235 = (v210 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v236 = ((unint64_t)v211 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v237 = *(_OWORD *)v236;
  *(unsigned char *)(v235 + 16) = *(unsigned char *)(v236 + 16);
  *(_OWORD *)unint64_t v235 = v237;
  char v238 = (void *)((v210 + 311) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v239 = ((unint64_t)v211 + 311) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v240 = *(void *)v239;
  v239 += 15;
  void *v238 = v240;
  unsigned int v241 = (void *)(((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v242 = *(void *)(v239 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v243 = *(void *)((v239 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_24D5203A8(v242, v243);
  *unsigned int v241 = v242;
  v241[1] = v243;
  size_t v144 = v296;
  if (!v186) {
    goto LABEL_90;
  }
LABEL_118:
  unint64_t v244 = ((((v143
           + ((((((((((v146 + v147) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v245 = (unint64_t)&v119[v244];
  unint64_t v246 = (unint64_t)&v302[v244];
  unint64_t v247 = v245 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v247 = *(void *)(v246 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v247 + 8) = *(unsigned char *)((v246 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v248 = (void **)((v246 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v249 = *v248;
  unint64_t v250 = (void *)((v245 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v250 = *v248;
  unint64_t v251 = ((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v252 = ((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v253 = *(void **)v252;
  id v254 = v249;
  if ((unint64_t)v253 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v251 = *(_OWORD *)v252;
  }
  else
  {
    id v255 = v253;
    *(void *)unint64_t v251 = v253;
    unsigned int v256 = *(void **)(v252 + 8);
    *(void *)(v251 + 8) = v256;
    id v257 = v256;
  }
  return v145;
}

void *sub_24D75FC0C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v7 | v11 | 7;
  uint64_t v550 = a1;
  uint64_t v13 = (char *)(((unint64_t)a1 + v12 + 8) & ~v12);
  unsigned int v14 = (char *)(((unint64_t)a2 + v12 + 8) & ~v12);
  uint64_t v15 = *(unsigned int *)(v5 + 84);
  uint64_t v16 = *(unsigned int *)(v10 + 84);
  if (v15 <= v16) {
    unsigned int v17 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v17 = *(_DWORD *)(v5 + 84);
  }
  if (v17 <= 0x7FFFFFFE) {
    int v18 = 2147483646;
  }
  else {
    int v18 = v17;
  }
  uint64_t v19 = *(void *)(v5 + 64) + 7;
  uint64_t v20 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v21 = (((v20 + ((v11 + 8 + (v19 & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v22 = v21 + 16;
  uint64_t v587 = v8;
  uint64_t v590 = AssociatedTypeWitness;
  uint64_t v582 = ~v11;
  uint64_t v585 = *(void *)(v8 - 8);
  uint64_t v579 = v11 + 8;
  if (v15 == v18)
  {
    uint64_t v575 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    size_t v577 = v21 + 16;
    uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
    int v24 = v13;
    int v25 = v23(v13, v15, AssociatedTypeWitness);
    unint64_t v26 = v14;
    int v27 = v23(v14, v15, AssociatedTypeWitness);
    if (v25) {
      goto LABEL_9;
    }
LABEL_20:
    uint64_t v28 = (uint64_t *)((unint64_t)&v24[v19] & 0xFFFFFFFFFFFFFFF8);
    if (v27)
    {
      unsigned int v14 = v26;
      uint64_t v13 = v24;
      size_t v22 = v577;
      uint64_t v34 = v590;
      goto LABEL_22;
    }
    uint64_t v29 = (uint64_t *)((unint64_t)&v26[v19] & 0xFFFFFFFFFFFFFFF8);
    unsigned int v14 = v26;
    uint64_t v13 = v24;
    uint64_t v20 = v575;
    size_t v22 = v577;
    uint64_t v34 = v590;
    goto LABEL_27;
  }
  uint64_t v28 = (uint64_t *)((unint64_t)&v13[v19] & 0xFFFFFFFFFFFFFFF8);
  if (v17 > 0x7FFFFFFE)
  {
    uint64_t v575 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    size_t v577 = v21 + 16;
    int v24 = v13;
    uint64_t v35 = ~v11;
    uint64_t v36 = ((unint64_t)v28 + v11 + 8) & ~v11;
    uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v38 = v9;
    uint64_t v39 = v11 + 8;
    int v40 = v37(v36, v16, v9);
    uint64_t v41 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))v37;
    int v573 = v40;
    unint64_t v26 = v14;
    int v27 = v41((v39 + ((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8)) & v35, v16, v38);
    if (v573)
    {
LABEL_9:
      size_t v22 = v577;
      unsigned int v14 = v26;
      uint64_t v13 = v24;
      if (!v27)
      {
        uint64_t v28 = (uint64_t *)((unint64_t)&v24[v19] & 0xFFFFFFFFFFFFFFF8);
        uint64_t v29 = (uint64_t *)((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8);
LABEL_24:
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v14, v590);
        *uint64_t v28 = *v29;
        unint64_t v42 = ((unint64_t)v28 + v579) & v582;
        unint64_t v43 = ((unint64_t)v29 + v579) & v582;
        uint64_t v44 = *(void (**)(unint64_t, unint64_t, uint64_t))(v585 + 16);
        swift_bridgeObjectRetain();
        v44(v42, v43, v587);
        uint64_t v45 = (void *)((v575 + v42) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v46 = (void *)((v575 + v43) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v45 = *v46;
        unint64_t v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
        unsigned int v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v47 = *v48;
        v47[1] = v48[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_28;
      }
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  uint64_t v30 = *v28;
  if ((unint64_t)*v28 >= 0xFFFFFFFF) {
    LODWORD(v30) = -1;
  }
  unsigned int v31 = v30 + 1;
  uint64_t v29 = (uint64_t *)((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = *v29;
  if ((unint64_t)*v29 >= 0xFFFFFFFF) {
    LODWORD(v32) = -1;
  }
  unsigned int v33 = v32 + 1;
  if (v31 >= 2)
  {
    uint64_t v575 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    if (v33 < 2) {
      goto LABEL_24;
    }
    goto LABEL_25;
  }
  uint64_t v34 = AssociatedTypeWitness;
  if (v33 >= 2)
  {
LABEL_22:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v34);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v585 + 8))(((unint64_t)v28 + v579) & v582, v587);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    memcpy(v13, v14, v22);
    goto LABEL_28;
  }
LABEL_27:
  (*(void (**)(char *, char *, uint64_t))(v6 + 24))(v13, v14, v34);
  *uint64_t v28 = *v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v585 + 24))(((unint64_t)v28 + v579) & v582, ((unint64_t)v29 + v579) & v582, v587);
  uint64_t v49 = (void *)((v20 + (((unint64_t)v28 + v579) & v582)) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v50 = v20 + (((unint64_t)v29 + v579) & v582);
  int v51 = v13;
  unint64_t v52 = (v50 & 0xFFFFFFFFFFFFFFF8) + 15;
  *uint64_t v49 = *(void *)(v50 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v54 = (void *)(v52 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = v51;
  *uint64_t v53 = *v54;
  v53[1] = v54[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v55 = &v13[v22];
  uint64_t v56 = &v14[v22];
  uint64_t v57 = *(void *)v56;
  v55[8] = v56[8];
  *(void *)uint64_t v55 = v57;
  uint64_t v58 = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = v59;
  uint64_t v61 = *(unsigned __int8 *)(v59 + 80);
  uint64_t v62 = sub_24DCC8CE8();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = v63;
  uint64_t v65 = *(unsigned __int8 *)(v63 + 80);
  uint64_t v66 = v65 | 7;
  uint64_t v561 = v61;
  uint64_t v67 = v65 | v61;
  uint64_t v68 = v65 | v61 | 7;
  int v69 = (void *)((unint64_t)&v13[v22 + 9 + v68] & ~v68);
  unint64_t v70 = (const void *)((unint64_t)&v56[v68 + 9] & ~v68);
  uint64_t v71 = *(unsigned int *)(v59 + 84);
  unsigned int v72 = *(_DWORD *)(v63 + 84);
  if (v72 <= 0x7FFFFFFE) {
    unsigned int v73 = 2147483646;
  }
  else {
    unsigned int v73 = *(_DWORD *)(v63 + 84);
  }
  unsigned int v557 = v73;
  if (v71 <= v73) {
    unsigned int v74 = v73;
  }
  else {
    unsigned int v74 = *(_DWORD *)(v59 + 84);
  }
  if (v74 <= 0x7FFFFFFF) {
    int v75 = 0x7FFFFFFF;
  }
  else {
    int v75 = v74;
  }
  uint64_t v76 = *(void *)(v59 + 64);
  uint64_t v77 = v76 + 7;
  uint64_t v78 = ~v66;
  uint64_t v79 = v65 + 16;
  unint64_t v551 = (v65 + 16 + ((v76 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v66;
  uint64_t v80 = ~v65;
  uint64_t v81 = v65 + 12;
  size_t v82 = *(void *)(v63 + 64);
  uint64_t v83 = v82 + v65;
  size_t v548 = v82 + 12;
  uint64_t v570 = v65 + 10;
  size_t v586 = v82;
  unint64_t v588 = (v65
        + 10
        + ((((((v82 + 12 + ((v82 + v65 + ((v65 + 12) & ~v65)) & ~v65)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v65;
  unsigned int v591 = *(_DWORD *)(v63 + 84);
  uint64_t v571 = v82 + v65;
  uint64_t v572 = v62;
  uint64_t v569 = *(void *)(v62 - 8);
  uint64_t v593 = ~v66;
  uint64_t v578 = v58;
  uint64_t v580 = v69;
  v583 = v70;
  uint64_t v549 = ~v65;
  uint64_t v574 = v65 + 12;
  uint64_t v576 = v60;
  unsigned int v565 = v71;
  uint64_t v563 = v65 | 7;
  uint64_t v559 = v76;
  uint64_t v555 = v67;
  if (v71 == v75)
  {
    size_t v84 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v60 + 48);
    uint64_t v85 = v71;
    uint64_t v86 = (void *)v70;
    int v87 = v84(v69, v71, v58);
    int v88 = v84(v86, v85, v58);
    int v69 = v580;
    size_t v89 = v586;
    if (v87)
    {
      unint64_t v70 = v583;
      if (!v88) {
        goto LABEL_61;
      }
      goto LABEL_87;
    }
    uint64_t v83 = v571;
    if (!v88) {
      goto LABEL_82;
    }
    goto LABEL_100;
  }
  unint64_t v90 = ((unint64_t)v69 + v77) & 0xFFFFFFFFFFFFFFF8;
  if ((v74 & 0x80000000) != 0)
  {
    unint64_t v93 = (v81 + ((v79 + v90) & v78)) & v80;
    if (v72 <= 0x7FFFFFFD)
    {
      size_t v122 = v82 + 12;
      unint64_t v123 = *(void *)(((v548 + ((v83 + v93) & v80)) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v123 >= 0xFFFFFFFF) {
        LODWORD(v123) = -1;
      }
      unint64_t v94 = (void *)(((unint64_t)v70 + v77) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v98 = ((unint64_t)v94 + v79) & v78;
      unint64_t v99 = (v81 + v98) & v80;
      if ((v123 + 1) >= 2) {
        goto LABEL_84;
      }
      goto LABEL_94;
    }
    int v92 = (*(uint64_t (**)(unint64_t))(v64 + 48))(v93);
    int v69 = v580;
    unint64_t v70 = v583;
  }
  else
  {
    unint64_t v91 = *(void *)(v90 + 8);
    if (v91 >= 0xFFFFFFFF) {
      LODWORD(v91) = -1;
    }
    int v92 = v91 + 1;
  }
  unint64_t v94 = (void *)(((unint64_t)v70 + v77) & 0xFFFFFFFFFFFFFFF8);
  if (!v92)
  {
    if ((v74 & 0x80000000) == 0)
    {
      unint64_t v96 = v94[1];
      if (v96 >= 0xFFFFFFFF) {
        LODWORD(v96) = -1;
      }
      int v97 = v96 + 1;
LABEL_81:
      size_t v89 = v586;
      uint64_t v83 = v571;
      if (!v97)
      {
LABEL_82:
        unint64_t v94 = (void *)(((unint64_t)v583 + v77) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v98 = ((unint64_t)v94 + v79) & v593;
        unint64_t v99 = (v574 + v98) & v80;
        unint64_t v145 = (v83 + v99) & v80;
        goto LABEL_97;
      }
LABEL_100:
      unint64_t v170 = v69;
      (*(void (**)(void *, uint64_t))(v576 + 8))(v69, v578);
      swift_bridgeObjectRelease();
      unint64_t v171 = (v574 + ((v79 + (((unint64_t)v170 + v77) & 0xFFFFFFFFFFFFFFF8)) & v593)) & v80;
      uint64_t v172 = *(void (**)(unint64_t, uint64_t))(v64 + 8);
      v172(v171, v572);
      unint64_t v173 = (v83 + v171) & v80;
      v172(v173, v572);
      swift_bridgeObjectRelease();
      unint64_t v174 = (v570
            + ((((((v548 + v173) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v80;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v64 + 48))(v174, 1, v572)) {
        v172(v174, v572);
      }
      if (v591) {
        size_t v121 = v89;
      }
      else {
        size_t v121 = v89 + 1;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v175 = (uint64_t *)((((((v121 + 7 + v174) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v176 = v175[1];
      unint64_t v134 = v551;
      if ((v176 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v175, v176);
      }
      swift_bridgeObjectRelease();
      memcpy(v580, v583, v551+ ((((((((((v121 + 7 + v588) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
      goto LABEL_125;
    }
    unint64_t v98 = ((unint64_t)v94 + v79) & v593;
    unint64_t v99 = (v81 + v98) & v80;
    if (v591 > 0x7FFFFFFD)
    {
      int v97 = (*(uint64_t (**)(unint64_t))(v64 + 48))(v99);
      int v69 = v580;
      goto LABEL_81;
    }
    uint64_t v83 = v571;
    size_t v122 = v548;
LABEL_94:
    unint64_t v145 = (v83 + v99) & v80;
    unint64_t v148 = *(void *)(((v122 + v145) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v148 >= 0xFFFFFFFF) {
      LODWORD(v148) = -1;
    }
    size_t v89 = v586;
    if ((v148 + 1) < 2)
    {
LABEL_97:
      unint64_t v546 = v145;
      unint64_t v149 = v69;
      (*(void (**)(void *, const void *, uint64_t))(v576 + 24))(v69, v583, v578);
      uint64_t v150 = (void *)(((unint64_t)v149 + v77) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v150 = *v94;
      v150[1] = v94[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v151 = ((unint64_t)v150 + v79) & v593;
      *(unsigned char *)unint64_t v151 = *(unsigned char *)v98;
      uint64_t v152 = v151 | 4;
      int v153 = *(_DWORD *)(v98 | 4);
      *(unsigned char *)(v152 + 4) = *(unsigned char *)((v98 | 4) + 4);
      *(_DWORD *)uint64_t v152 = v153;
      *(_WORD *)(v151 + 10) = *(_WORD *)(v98 + 10);
      unint64_t v154 = (v574 + v151) & v80;
      unint64_t v155 = *(void (**)(unint64_t, unint64_t, uint64_t))(v64 + 24);
      v155(v154, v99, v572);
      v155((v83 + v154) & v80, v546, v572);
      uint64_t v156 = (unsigned char *)(((v83 + v154) & v80) + v89);
      *uint64_t v156 = *(unsigned char *)(v546 + v89);
      v156[1] = *(unsigned char *)(v546 + v89 + 1);
      v156[2] = *(unsigned char *)(v546 + v89 + 2);
      v156[3] = *(unsigned char *)(v546 + v89 + 3);
      v156[4] = *(unsigned char *)(v546 + v89 + 4);
      unint64_t v157 = (unint64_t)(v156 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v158 = (v546 + v89 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v157 = *(void *)v158;
      *(void *)(v157 + 8) = *(void *)(v158 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v157 + 16) = *(unsigned char *)(v158 + 16);
      *(unsigned char *)(v157 + 17) = *(unsigned char *)(v158 + 17);
      *(unsigned char *)(v157 + 18) = *(unsigned char *)(v158 + 18);
      *(unsigned char *)(v157 + 19) = *(unsigned char *)(v158 + 19);
      unint64_t v159 = (v157 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = (v158 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v159 = *(void *)v160;
      *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
      *(unsigned char *)(v159 + 9) = *(unsigned char *)(v160 + 9);
      *(unsigned char *)(v159 + 10) = *(unsigned char *)(v160 + 10);
      *(unsigned char *)(v159 + 11) = *(unsigned char *)(v160 + 11);
      *(unsigned char *)(v159 + 12) = *(unsigned char *)(v160 + 12);
      uint64_t v161 = (void *)((v158 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v162 = (void *)((v157 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v162 = *v161;
      unint64_t v163 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v164 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v163 = *(void *)v164;
      *(unsigned char *)(v163 + 8) = *(unsigned char *)(v164 + 8);
      *(unsigned char *)(v163 + 9) = *(unsigned char *)(v164 + 9);
      uint64_t v165 = (char *)((v570 + v163) & v80);
      unint64_t v166 = (char *)((v570 + v164) & v80);
      unint64_t v167 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
      int v168 = v167(v165, 1, v572);
      int v169 = v167(v166, 1, v572);
      if (v168)
      {
        if (!v169)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v165, v166, v572);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v165, 0, 1, v572);
LABEL_115:
          size_t v121 = v586;
          unsigned int v177 = v591;
          goto LABEL_116;
        }
      }
      else
      {
        if (!v169)
        {
          v155((unint64_t)v165, (unint64_t)v166, v572);
          goto LABEL_115;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v165, v572);
      }
      unsigned int v177 = v591;
      size_t v121 = v586;
      if (v591) {
        size_t v178 = v586;
      }
      else {
        size_t v178 = v586 + 1;
      }
      memcpy(v165, v166, v178);
LABEL_116:
      unint64_t v134 = v551;
      if (!v177) {
        ++v121;
      }
      unint64_t v179 = (unint64_t)&v165[v121 + 7];
      unint64_t v180 = (void *)((unint64_t)&v166[v121 + 7] & 0xFFFFFFFFFFFFFFF8);
      unint64_t v181 = (v179 & 0xFFFFFFFFFFFFFFF8) + 15;
      *(void *)(v179 & 0xFFFFFFFFFFFFFFF8) = *v180;
      unint64_t v182 = (v179 & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v183 = v181 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v184 = ((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v185 = *(void *)v184;
      *(unsigned char *)(v183 + 8) = *(unsigned char *)(v184 + 8);
      *(void *)unint64_t v183 = v185;
      unsigned int v186 = (void *)(((unint64_t)v180 + 31) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(v182 & 0xFFFFFFFFFFFFFFF8) = *v186;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      size_t v187 = (uint64_t *)(((v182 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v188 = ((unint64_t)v186 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v189 = v187[1];
      uint64_t v190 = *(void *)(v188 + 8);
      uint64_t v191 = v190 & 0x3000000000000000;
      if ((v189 & 0x3000000000000000) != 0)
      {
        if (!v191)
        {
          uint64_t v192 = *(void *)v188;
          sub_24D3F9C18(*(void *)v188, *(void *)(v188 + 8));
          uint64_t *v187 = v192;
          v187[1] = v190;
LABEL_124:
          unint64_t v193 = ((unint64_t)v187 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v194 = (v188 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v195 = *(void *)v194;
          *(unsigned char *)(v193 + 8) = *(unsigned char *)(v194 + 8);
          *(void *)unint64_t v193 = v195;
          *(unsigned char *)(v193 + 9) = *(unsigned char *)(v194 + 9);
          unint64_t v196 = (v193 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v197 = (v194 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v198 = *(_DWORD *)v197;
          *(unsigned char *)(v196 + 4) = *(unsigned char *)(v197 + 4);
          *(_DWORD *)unint64_t v196 = v198;
          unint64_t v199 = (void *)((v193 + 25) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v200 = (void *)((v194 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v199 = *v200;
          v199[1] = v200[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_125:
          size_t v144 = v121;
          goto LABEL_126;
        }
      }
      else
      {
        if (!v191)
        {
          uint64_t v443 = *(void *)v188;
          sub_24D3F9C18(*(void *)v188, *(void *)(v188 + 8));
          uint64_t v444 = *v187;
          unint64_t v445 = v187[1];
          uint64_t *v187 = v443;
          v187[1] = v190;
          sub_24D400DCC(v444, v445);
          goto LABEL_124;
        }
        sub_24D400DCC(*v187, v189);
      }
      *(_OWORD *)size_t v187 = *(_OWORD *)v188;
      goto LABEL_124;
    }
    goto LABEL_100;
  }
  if ((v74 & 0x80000000) == 0)
  {
    unint64_t v95 = v94[1];
    if (v95 >= 0xFFFFFFFF) {
      LODWORD(v95) = -1;
    }
    size_t v89 = v586;
    unint64_t v70 = v583;
    if (v95 == -1) {
      goto LABEL_61;
    }
    goto LABEL_87;
  }
  unint64_t v98 = ((unint64_t)v94 + v79) & v593;
  unint64_t v99 = (v81 + v98) & v80;
  if (v591 > 0x7FFFFFFD)
  {
    int v100 = (*(uint64_t (**)(unint64_t))(v64 + 48))(v99);
    int v69 = v580;
    size_t v89 = v586;
    unint64_t v70 = v583;
    if (!v100)
    {
LABEL_61:
      unint64_t v94 = (void *)(((unint64_t)v70 + v77) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v98 = ((unint64_t)v94 + v79) & v593;
      unint64_t v99 = (v574 + v98) & v80;
      unint64_t v101 = (v571 + v99) & v80;
      goto LABEL_62;
    }
LABEL_87:
    uint64_t v147 = 7;
    if (!v591) {
      uint64_t v147 = 8;
    }
    unint64_t v134 = v551;
    if (v591) {
      size_t v121 = v89;
    }
    else {
      size_t v121 = v89 + 1;
    }
    memcpy(v69, v70, v551+ ((((((((((v147 + v89 + v588) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
    goto LABEL_125;
  }
  uint64_t v83 = v571;
  size_t v122 = v548;
LABEL_84:
  unint64_t v101 = (v83 + v99) & v80;
  unint64_t v146 = *(void *)(((v122 + v101) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v146 >= 0xFFFFFFFF) {
    LODWORD(v146) = -1;
  }
  size_t v89 = v586;
  if ((v146 + 1) >= 2) {
    goto LABEL_87;
  }
LABEL_62:
  unint64_t v102 = v69;
  (*(void (**)(void *, const void *, uint64_t))(v576 + 16))(v69, v70, v578);
  int v103 = (void *)(((unint64_t)v102 + v77) & 0xFFFFFFFFFFFFFFF8);
  *int v103 = *v94;
  v103[1] = v94[1];
  unint64_t v104 = ((unint64_t)v103 + v79) & v593;
  *(unsigned char *)unint64_t v104 = *(unsigned char *)v98;
  uint64_t v105 = v104 | 4;
  int v106 = *(_DWORD *)(v98 | 4);
  *(unsigned char *)(v105 + 4) = *(unsigned char *)((v98 | 4) + 4);
  *(_DWORD *)uint64_t v105 = v106;
  *(_WORD *)(v104 + 10) = *(_WORD *)(v98 + 10);
  unint64_t v107 = (v574 + v104) & v80;
  uint64_t v108 = *(void (**)(unint64_t, unint64_t, uint64_t))(v64 + 16);
  swift_bridgeObjectRetain();
  v108(v107, v99, v572);
  v108((v571 + v107) & v80, v101, v572);
  unint64_t v109 = (unsigned char *)(((v571 + v107) & v80) + v89);
  *unint64_t v109 = *(unsigned char *)(v101 + v89);
  v109[1] = *(unsigned char *)(v101 + v89 + 1);
  v109[2] = *(unsigned char *)(v101 + v89 + 2);
  v109[3] = *(unsigned char *)(v101 + v89 + 3);
  v109[4] = *(unsigned char *)(v101 + v89 + 4);
  unint64_t v110 = (unint64_t)(v109 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v111 = (v101 + v89 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v110 = *(void *)v111;
  *(void *)(v110 + 8) = *(void *)(v111 + 8);
  *(unsigned char *)(v110 + 16) = *(unsigned char *)(v111 + 16);
  *(unsigned char *)(v110 + 17) = *(unsigned char *)(v111 + 17);
  *(unsigned char *)(v110 + 18) = *(unsigned char *)(v111 + 18);
  *(unsigned char *)(v110 + 19) = *(unsigned char *)(v111 + 19);
  unint64_t v112 = (v110 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v113 = (v111 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v112 = *(void *)v113;
  *(unsigned char *)(v112 + 8) = *(unsigned char *)(v113 + 8);
  *(unsigned char *)(v112 + 9) = *(unsigned char *)(v113 + 9);
  *(unsigned char *)(v112 + 10) = *(unsigned char *)(v113 + 10);
  *(unsigned char *)(v112 + 11) = *(unsigned char *)(v113 + 11);
  *(unsigned char *)(v112 + 12) = *(unsigned char *)(v113 + 12);
  uint64_t v114 = (void *)((v111 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v115 = (void *)((v110 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v115 = *v114;
  unint64_t v116 = ((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v117 = ((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v116 = *(void *)v117;
  *(unsigned char *)(v116 + 8) = *(unsigned char *)(v117 + 8);
  *(unsigned char *)(v116 + 9) = *(unsigned char *)(v117 + 9);
  uint64_t v118 = (void *)((v570 + v116) & v80);
  uint64_t v119 = (const void *)((v570 + v117) & v80);
  uint64_t v120 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48);
  swift_bridgeObjectRetain();
  if (v120(v119, 1, v572))
  {
    if (v591) {
      size_t v121 = v89;
    }
    else {
      size_t v121 = v89 + 1;
    }
    memcpy(v118, v119, v121);
  }
  else
  {
    v108((unint64_t)v118, (unint64_t)v119, v572);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v118, 0, 1, v572);
    if (v591) {
      size_t v121 = v89;
    }
    else {
      size_t v121 = v89 + 1;
    }
  }
  unsigned int v124 = (void *)(((unint64_t)v118 + v121 + 7) & 0xFFFFFFFFFFFFFFF8);
  int v125 = (void *)(((unint64_t)v119 + v121 + 7) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v124 = *v125;
  unint64_t v126 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v127 = ((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v128 = *(void *)v127;
  *(unsigned char *)(v126 + 8) = *(unsigned char *)(v127 + 8);
  *(void *)unint64_t v126 = v128;
  uint64_t v129 = (void *)(((unint64_t)v124 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v130 = (void *)(((unint64_t)v125 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v129 = *v130;
  unint64_t v131 = ((unint64_t)v129 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v132 = (uint64_t *)(((unint64_t)v130 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v133 = v132[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v134 = v551;
  if ((v133 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v131 = *(_OWORD *)v132;
  }
  else
  {
    uint64_t v135 = *v132;
    sub_24D3F9C18(*v132, v133);
    *(void *)unint64_t v131 = v135;
    *(void *)(v131 + 8) = v133;
  }
  unint64_t v136 = (v131 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v137 = ((unint64_t)v132 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v138 = *(void *)v137;
  *(unsigned char *)(v136 + 8) = *(unsigned char *)(v137 + 8);
  *(void *)unint64_t v136 = v138;
  *(unsigned char *)(v136 + 9) = *(unsigned char *)(v137 + 9);
  unint64_t v139 = (v136 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v140 = (v137 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v141 = *(_DWORD *)v140;
  *(unsigned char *)(v139 + 4) = *(unsigned char *)(v140 + 4);
  *(_DWORD *)unint64_t v139 = v141;
  uint64_t v142 = (void *)((v136 + 25) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v143 = (void *)((v137 + 25) & 0xFFFFFFFFFFFFFFF8);
  void *v142 = *v143;
  v142[1] = v143[1];
  swift_bridgeObjectRetain();
  size_t v144 = v89;
  if (!v591) {
    goto LABEL_125;
  }
LABEL_126:
  unint64_t v554 = v588 + 7;
  unint64_t v201 = (((((((((v588 + 7 + v144) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v553 = swift_getAssociatedTypeWitness();
  uint64_t v202 = *(void *)(v553 - 8);
  int v203 = *(_DWORD *)(v202 + 80) & 0xF8;
  uint64_t v204 = swift_getAssociatedTypeWitness();
  uint64_t v205 = *(void *)(v204 - 8);
  uint64_t v206 = v205;
  uint64_t v207 = *(unsigned __int8 *)(v205 + 80);
  uint64_t v208 = v203 | v207 | 7;
  uint64_t v209 = v134 + (v555 | v208) + v201 + 16;
  unint64_t v210 = (char *)(((unint64_t)v580 + v209) & ~(v555 | v208));
  uint64_t v211 = (char *)(((unint64_t)v583 + v209) & ~(v555 | v208));
  uint64_t v556 = v202;
  uint64_t v212 = *(unsigned int *)(v202 + 84);
  uint64_t v213 = *(unsigned int *)(v205 + 84);
  if (v212 <= v213) {
    unsigned int v214 = *(_DWORD *)(v205 + 84);
  }
  else {
    unsigned int v214 = *(_DWORD *)(v202 + 84);
  }
  if (v214 <= 0x7FFFFFFE) {
    unsigned int v215 = 2147483646;
  }
  else {
    unsigned int v215 = v214;
  }
  if (v215 <= v565) {
    unsigned int v216 = v565;
  }
  else {
    unsigned int v216 = v215;
  }
  if (v216 <= v557) {
    unsigned int v217 = v557;
  }
  else {
    unsigned int v217 = v216;
  }
  if (v217 <= 0x7FFFFFFF) {
    int v218 = 0x7FFFFFFF;
  }
  else {
    int v218 = v217;
  }
  uint64_t v219 = ~v561;
  uint64_t v220 = v559 + v561;
  uint64_t v221 = ~v208;
  uint64_t v222 = v559 + v208;
  uint64_t v223 = *(void *)(v202 + 64) + 7;
  uint64_t v224 = ~v207;
  uint64_t v225 = v207 + 8;
  unint64_t v226 = ((((*(void *)(v205 + 64) + 7 + ((v207 + 8 + (v223 & 0xFFFFFFFFFFFFFFF8)) & ~v207)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v227 = v563 + 16;
  uint64_t v581 = (v563 + 16 + v226 + ((v559 + v208 + ((v559 + v561) & ~v561)) & ~v208)) & v593;
  uint64_t v584 = v211;
  uint64_t v562 = v223;
  uint64_t v564 = v563 + 16;
  unint64_t v545 = v226;
  uint64_t v547 = *(void *)(v204 - 8);
  uint64_t v552 = v204;
  uint64_t v544 = *(void *)(v205 + 64) + 7;
  uint64_t v558 = v225;
  uint64_t v560 = v224;
  if (v565 == v218)
  {
    uint64_t v228 = *(uint64_t (**)(char *))(v576 + 48);
    uint64_t v229 = ~v208;
    uint64_t v230 = v222;
    uint64_t v231 = v219;
    int v543 = v228(v210);
    int v232 = ((uint64_t (*)(char *, void, uint64_t))v228)(v211, v565, v578);
    uint64_t v219 = v231;
    uint64_t v222 = v230;
    uint64_t v221 = v229;
    if (v543)
    {
      if (!v232) {
        goto LABEL_199;
      }
      goto LABEL_193;
    }
    goto LABEL_227;
  }
  v566 = v210;
  unint64_t v233 = (v222 + ((unint64_t)&v210[v220] & v219)) & v221;
  if (v215 != v218)
  {
    unint64_t v239 = v226 + v233;
    if ((v217 & 0x80000000) == 0)
    {
      unint64_t v240 = *(void *)(v239 + 8);
      if (v240 >= 0xFFFFFFFF) {
        LODWORD(v240) = -1;
      }
      if (v240 != -1) {
        goto LABEL_153;
      }
LABEL_178:
      unint64_t v265 = (unint64_t)&v584[v220] & v219;
      unint64_t v266 = (v222 + v265) & v221;
      if (v215 == v218)
      {
        if (v212 == v215)
        {
          uint64_t v267 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v556 + 48);
          unint64_t v268 = (v222 + v265) & v221;
          uint64_t v269 = v212;
          uint64_t v270 = v553;
        }
        else
        {
          uint64_t v273 = (unint64_t *)((v562 + v266) & 0xFFFFFFFFFFFFFFF8);
          if (v214 <= 0x7FFFFFFE)
          {
            unint64_t v274 = *v273;
            if (v274 >= 0xFFFFFFFF) {
              LODWORD(v274) = -1;
            }
            uint64_t v275 = v566;
            if ((v274 + 1) >= 2) {
              goto LABEL_228;
            }
            goto LABEL_243;
          }
          unint64_t v268 = ((unint64_t)v273 + v558) & v560;
          uint64_t v267 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v547 + 48);
          uint64_t v269 = v213;
          uint64_t v270 = v552;
        }
        uint64_t v382 = v221;
        uint64_t v383 = v222;
        uint64_t v384 = v219;
        int v232 = v267(v268, v269, v270);
        uint64_t v219 = v384;
        uint64_t v222 = v383;
        uint64_t v221 = v382;
        unint64_t v210 = v566;
      }
      else
      {
        unint64_t v271 = v226 + v266;
        unint64_t v210 = v566;
        if ((v217 & 0x80000000) != 0)
        {
          uint64_t v365 = (v574 + ((v564 + v271) & v593)) & v549;
          if (v591 <= 0x7FFFFFFD)
          {
            uint64_t v275 = v566;
            unint64_t v507 = *(void *)(((v548 + ((v571 + v365) & v549)) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v507 >= 0xFFFFFFFF) {
              LODWORD(v507) = -1;
            }
            if ((v507 + 1) >= 2) {
              goto LABEL_228;
            }
            goto LABEL_243;
          }
          uint64_t v366 = v221;
          uint64_t v367 = v222;
          uint64_t v368 = v219;
          int v232 = (*(uint64_t (**)(uint64_t))(v569 + 48))(v365);
          uint64_t v219 = v368;
          uint64_t v222 = v367;
          uint64_t v221 = v366;
        }
        else
        {
          unint64_t v272 = *(void *)(v271 + 8);
          if (v272 >= 0xFFFFFFFF) {
            LODWORD(v272) = -1;
          }
          int v232 = v272 + 1;
        }
      }
LABEL_227:
      uint64_t v275 = v210;
      if (v232)
      {
LABEL_228:
        uint64_t v385 = *(void (**)(char *, uint64_t))(v576 + 8);
        uint64_t v386 = v221;
        uint64_t v387 = v222;
        uint64_t v388 = v219;
        v385(v275, v578);
        unint64_t v389 = (unint64_t)&v275[v220] & v388;
        v385((char *)v389, v578);
        unint64_t v390 = (v387 + v389) & v386;
        (*(void (**)(unint64_t, uint64_t))(v556 + 8))(v390, v553);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v547 + 8))((v558 + ((v562 + v390) & 0xFFFFFFFFFFFFFFF8)) & v560, v552);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v391 = (v564 + v545 + v390) & v593;
        uint64_t v392 = *(void (**)(unint64_t, uint64_t))(v569 + 8);
        v392((v574 + v391) & v549, v572);
        unint64_t v393 = (v571 + ((v574 + v391) & v549)) & v549;
        v392(v393, v572);
        swift_bridgeObjectRelease();
        unint64_t v394 = (v570
              + ((((((v548 + v393) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v549;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v569 + 48))(v394, 1, v572)) {
          v392(v394, v572);
        }
        if (v591) {
          size_t v281 = v586;
        }
        else {
          size_t v281 = v586 + 1;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v395 = (uint64_t *)((((((v281 + 7 + v394) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v396 = v395[1];
        uint64_t v282 = v550;
        unint64_t v283 = v588 + 7;
        if ((v396 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v395, v396);
        }
        swift_bridgeObjectRelease();
        unint64_t v397 = (((((((((v281 + 7 + v588) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 19) & 0xFFFFFFFFFFFFFFF8)
              + 25) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v398 = v397 + v391;
        uint64_t v399 = v397 + v391 + 16;
        uint64_t v400 = *(void **)(v398 + 32);
        int v401 = -1;
        if ((unint64_t)v400 < 0xFFFFFFFF) {
          int v401 = (int)v400;
        }
        unint64_t v210 = v275;
        uint64_t v211 = v584;
        if (v401 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v399 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v399 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v399 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        uint64_t v280 = v581;
        memcpy(v210, v584, ((((v397 + v581 + 327) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
        goto LABEL_294;
      }
      unint64_t v265 = (unint64_t)&v584[v220] & v219;
      unint64_t v266 = (v222 + v265) & v221;
LABEL_243:
      v402 = *(void (**)(char *, char *, uint64_t))(v576 + 24);
      uint64_t v403 = v275;
      uint64_t v404 = v275;
      uint64_t v405 = v221;
      uint64_t v406 = v222;
      uint64_t v407 = v219;
      unint64_t v408 = v266;
      v402(v404, v584, v578);
      uint64_t v568 = v403;
      unint64_t v409 = (unint64_t)&v403[v220] & v407;
      v402((char *)v409, (char *)v265, v578);
      uint64_t v410 = (v406 + v409) & v405;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v556 + 24))(v410, v408, v553);
      uint64_t v411 = (void *)((v562 + v410) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v412 = (void *)((v562 + v408) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v411 = *v412;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v547 + 24))(((unint64_t)v411 + v558) & v560, ((unint64_t)v412 + v558) & v560, v552);
      uint64_t v413 = (void *)((v544 + (((unint64_t)v411 + v558) & v560)) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v414 = (v544 + (((unint64_t)v412 + v558) & v560)) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v415 = *(void *)v414;
      v414 += 15;
      *uint64_t v413 = v415;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v416 = (void *)(((unint64_t)v413 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v416 = *(void *)(v414 & 0xFFFFFFFFFFFFFFF8);
      v416[1] = *(void *)((v414 & 0xFFFFFFFFFFFFFFF8) + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v417 = (void *)(v545 + v410);
      void *v417 = *(void *)(v545 + v408);
      v417[1] = *(void *)(v545 + v408 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v418 = ((unint64_t)v417 + v564) & v593;
      unint64_t v419 = (v564 + v545 + v408) & v593;
      *(unsigned char *)unint64_t v418 = *(unsigned char *)v419;
      uint64_t v420 = v418 | 4;
      int v421 = *(_DWORD *)(v419 | 4);
      *(unsigned char *)(v420 + 4) = *(unsigned char *)((v419 | 4) + 4);
      *(_DWORD *)uint64_t v420 = v421;
      *(_WORD *)(v418 + 10) = *(_WORD *)(v419 + 0xA);
      unint64_t v595 = v419;
      unint64_t v422 = (v574 + v419) & v549;
      uint64_t v423 = *(void (**)(unint64_t, unint64_t, uint64_t))(v569 + 24);
      v423((v574 + v418) & v549, v422, v572);
      unint64_t v424 = (v571 + ((v574 + v418) & v549)) & v549;
      uint64_t v425 = (v571 + v422) & v549;
      v423(v424, v425, v572);
      v426 = (unsigned char *)(v424 + v586);
      size_t v427 = v425 + v586;
      unsigned char *v426 = *(unsigned char *)(v425 + v586);
      v426[1] = *(unsigned char *)(v425 + v586 + 1);
      v426[2] = *(unsigned char *)(v425 + v586 + 2);
      v426[3] = *(unsigned char *)(v425 + v586 + 3);
      v426[4] = *(unsigned char *)(v425 + v586 + 4);
      unint64_t v428 = (v424 + v586 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v429 = (v427 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v428 = *(void *)v429;
      *(void *)(v428 + 8) = *(void *)(v429 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v428 + 16) = *(unsigned char *)(v429 + 16);
      *(unsigned char *)(v428 + 17) = *(unsigned char *)(v429 + 17);
      *(unsigned char *)(v428 + 18) = *(unsigned char *)(v429 + 18);
      *(unsigned char *)(v428 + 19) = *(unsigned char *)(v429 + 19);
      unint64_t v430 = (v428 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v431 = (v429 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v430 = *(void *)v431;
      *(unsigned char *)(v430 + 8) = *(unsigned char *)(v431 + 8);
      *(unsigned char *)(v430 + 9) = *(unsigned char *)(v431 + 9);
      *(unsigned char *)(v430 + 10) = *(unsigned char *)(v431 + 10);
      *(unsigned char *)(v430 + 11) = *(unsigned char *)(v431 + 11);
      *(unsigned char *)(v430 + 12) = *(unsigned char *)(v431 + 12);
      v432 = (void *)((v429 + 47) & 0xFFFFFFFFFFFFFFF8);
      v433 = (void *)((v428 + 47) & 0xFFFFFFFFFFFFFFF8);
      void *v433 = *v432;
      unint64_t v434 = ((unint64_t)v433 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v435 = ((unint64_t)v432 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v434 = *(void *)v435;
      *(unsigned char *)(v434 + 8) = *(unsigned char *)(v435 + 8);
      *(unsigned char *)(v434 + 9) = *(unsigned char *)(v435 + 9);
      v436 = (char *)((v570 + v434) & v549);
      uint64_t v437 = (char *)((v570 + v435) & v549);
      uint64_t v438 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v569 + 48);
      LODWORD(v429) = v438(v436, 1, v572);
      int v439 = v438(v437, 1, v572);
      if (v429)
      {
        if (!v439)
        {
          (*(void (**)(char *, char *, uint64_t))(v569 + 16))(v436, v437, v572);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v569 + 56))(v436, 0, 1, v572);
LABEL_254:
          size_t v441 = v586;
          unsigned int v440 = v591;
          goto LABEL_255;
        }
      }
      else
      {
        if (!v439)
        {
          v423((unint64_t)v436, (unint64_t)v437, v572);
          goto LABEL_254;
        }
        (*(void (**)(char *, uint64_t))(v569 + 8))(v436, v572);
      }
      unsigned int v440 = v591;
      size_t v441 = v586;
      if (v591) {
        size_t v442 = v586;
      }
      else {
        size_t v442 = v586 + 1;
      }
      memcpy(v436, v437, v442);
LABEL_255:
      if (v440) {
        size_t v281 = v441;
      }
      else {
        size_t v281 = v441 + 1;
      }
      unint64_t v446 = (unint64_t)&v436[v281 + 7];
      v447 = (void *)((unint64_t)&v437[v281 + 7] & 0xFFFFFFFFFFFFFFF8);
      unint64_t v448 = (unint64_t)v447 + 31;
      unint64_t v449 = (v446 & 0xFFFFFFFFFFFFFFF8) + 15;
      *(void *)(v446 & 0xFFFFFFFFFFFFFFF8) = *v447;
      unint64_t v450 = (v446 & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v451 = v449 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v452 = ((unint64_t)v447 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v453 = *(void *)v452;
      *(unsigned char *)(v451 + 8) = *(unsigned char *)(v452 + 8);
      *(void *)unint64_t v451 = v453;
      uint64_t v454 = (void *)(v450 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v455 = (v448 & 0xFFFFFFFFFFFFFFF8) + 15;
      *uint64_t v454 = *(void *)(v448 & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v456 = (uint64_t *)(((unint64_t)v454 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v457 = v455 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v458 = v456[1];
      uint64_t v459 = *(void *)(v457 + 8);
      uint64_t v460 = v459 & 0x3000000000000000;
      if ((v458 & 0x3000000000000000) != 0)
      {
        if (!v460)
        {
          uint64_t v461 = *(void *)v457;
          sub_24D3F9C18(*(void *)v457, *(void *)(v457 + 8));
          *uint64_t v456 = v461;
          v456[1] = v459;
          goto LABEL_264;
        }
      }
      else
      {
        if (!v460)
        {
          uint64_t v495 = *(void *)v457;
          sub_24D3F9C18(*(void *)v457, *(void *)(v457 + 8));
          uint64_t v496 = *v456;
          unint64_t v497 = v456[1];
          *uint64_t v456 = v495;
          v456[1] = v459;
          sub_24D400DCC(v496, v497);
LABEL_264:
          uint64_t v211 = v584;
          unint64_t v462 = ((unint64_t)v456 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v463 = (v457 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v464 = *(void *)v463;
          *(unsigned char *)(v462 + 8) = *(unsigned char *)(v463 + 8);
          *(void *)unint64_t v462 = v464;
          *(unsigned char *)(v462 + 9) = *(unsigned char *)(v463 + 9);
          unint64_t v465 = (v462 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v466 = (v463 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v467 = *(_DWORD *)v466;
          *(unsigned char *)(v465 + 4) = *(unsigned char *)(v466 + 4);
          *(_DWORD *)unint64_t v465 = v467;
          v468 = (void *)((v462 + 25) & 0xFFFFFFFFFFFFFFF8);
          os_log_type_t v469 = (void *)((v463 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v468 = *v469;
          v468[1] = v469[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          unint64_t v473 = ((((((((((v281 + 7 + v588) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          unint64_t v470 = v418 + v473;
          v471 = (long long *)(v595 + v473);
          v472 = *(void **)(v470 + 16);
          LODWORD(v473) = -1;
          if ((unint64_t)v472 >= 0xFFFFFFFF) {
            LODWORD(v474) = -1;
          }
          else {
            uint64_t v474 = *(void *)(v470 + 16);
          }
          int v475 = v474 - 1;
          if (*((void *)v471 + 2) < 0xFFFFFFFFuLL) {
            unint64_t v473 = *((void *)v471 + 2);
          }
          int v476 = v473 - 1;
          if ((v475 & 0x80000000) == 0)
          {
            if (v476 < 0)
            {
              *(void *)unint64_t v470 = *(void *)v471;
              *(unsigned char *)(v470 + 8) = *((unsigned char *)v471 + 8);
              *(unsigned char *)(v470 + 9) = *((unsigned char *)v471 + 9);
              unint64_t v477 = (void *)*((void *)v471 + 2);
              id v478 = v477;
              *(void *)(v470 + 16) = v477;
              v479 = (void *)*((void *)v471 + 3);
              id v480 = v479;
              *(void *)(v470 + 24) = v479;
              *(unsigned char *)(v470 + 32) = *((unsigned char *)v471 + 32);
              *(unsigned char *)(v470 + 33) = *((unsigned char *)v471 + 33);
              *(unsigned char *)(v470 + 34) = *((unsigned char *)v471 + 34);
              *(void *)(v470 + 40) = *((void *)v471 + 5);
              *(void *)(v470 + 48) = *((void *)v471 + 6);
              *(void *)(v470 + 56) = *((void *)v471 + 7);
              *(void *)(v470 + 64) = *((void *)v471 + 8);
              *(unsigned char *)(v470 + 72) = *((unsigned char *)v471 + 72);
              *(void *)(v470 + 80) = *((void *)v471 + 10);
              *(void *)(v470 + 88) = *((void *)v471 + 11);
              uint64_t v592 = (void *)*((void *)v471 + 12);
              *(void *)(v470 + 96) = v592;
              *(unsigned char *)(v470 + 104) = *((unsigned char *)v471 + 104);
              *(unsigned char *)(v470 + 105) = *((unsigned char *)v471 + 105);
              *(void *)(v470 + 112) = *((void *)v471 + 14);
              *(void *)(v470 + 120) = *((void *)v471 + 15);
              *(void *)(v470 + 128) = *((void *)v471 + 16);
              *(void *)(v470 + 136) = *((void *)v471 + 17);
              *(void *)(v470 + 144) = *((void *)v471 + 18);
              *(void *)(v470 + 152) = *((void *)v471 + 19);
              *(void *)(v470 + 160) = *((void *)v471 + 20);
              *(void *)(v470 + 168) = *((void *)v471 + 21);
              *(unsigned char *)(v470 + 176) = *((unsigned char *)v471 + 176);
              *(void *)(v470 + 184) = *((void *)v471 + 23);
              uint64_t v481 = *((void *)v471 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v482 = v592;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v481)
              {
                *(void *)(v470 + 192) = v481;
                *(void *)(v470 + 200) = *((void *)v471 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v470 + 192) = v471[12];
              }
              uint64_t v282 = v550;
              unint64_t v283 = v588 + 7;
              uint64_t v211 = v584;
              *(void *)(v470 + 208) = *((void *)v471 + 26);
              *(void *)(v470 + 216) = *((void *)v471 + 27);
              *(void *)(v470 + 224) = *((void *)v471 + 28);
              *(void *)(v470 + 232) = *((void *)v471 + 29);
              *(void *)(v470 + 240) = *((void *)v471 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_293;
            }
            goto LABEL_277;
          }
          if ((v476 & 0x80000000) == 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v470 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_277:
            long long v483 = *v471;
            long long v484 = v471[1];
            long long v485 = v471[3];
            *(_OWORD *)(v470 + 32) = v471[2];
            *(_OWORD *)(v470 + 48) = v485;
            *(_OWORD *)unint64_t v470 = v483;
            *(_OWORD *)(v470 + 16) = v484;
            long long v486 = v471[4];
            long long v487 = v471[5];
            long long v488 = v471[7];
            *(_OWORD *)(v470 + 96) = v471[6];
            *(_OWORD *)(v470 + 112) = v488;
            *(_OWORD *)(v470 + 64) = v486;
            *(_OWORD *)(v470 + 80) = v487;
            long long v489 = v471[8];
            long long v490 = v471[9];
            long long v491 = v471[11];
            *(_OWORD *)(v470 + 160) = v471[10];
            *(_OWORD *)(v470 + 176) = v491;
            *(_OWORD *)(v470 + 128) = v489;
            *(_OWORD *)(v470 + 144) = v490;
            long long v492 = v471[12];
            long long v493 = v471[13];
            long long v494 = v471[14];
            *(void *)(v470 + 240) = *((void *)v471 + 30);
            *(_OWORD *)(v470 + 208) = v493;
            *(_OWORD *)(v470 + 224) = v494;
            *(_OWORD *)(v470 + 192) = v492;
            uint64_t v282 = v550;
            unint64_t v283 = v588 + 7;
LABEL_293:
            v508 = (_OWORD *)((v470 + 255) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v509 = (long long *)(((unint64_t)v471 + 255) & 0xFFFFFFFFFFFFFFF8);
            long long v510 = *v509;
            *(_OWORD *)((char *)v508 + 9) = *(long long *)((char *)v509 + 9);
            _OWORD *v508 = v510;
            unint64_t v511 = (v470 + 287) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v512 = ((unint64_t)v471 + 287) & 0xFFFFFFFFFFFFFFF8;
            long long v513 = *(_OWORD *)v512;
            *(unsigned char *)(v511 + 16) = *(unsigned char *)(v512 + 16);
            *(_OWORD *)unint64_t v511 = v513;
            id v514 = (void *)((v470 + 311) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v515 = ((unint64_t)v471 + 311) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v516 = *(void *)v515;
            v515 += 15;
            *id v514 = v516;
            os_log_type_t v517 = (uint64_t *)(((unint64_t)v514 + 15) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v518 = *(void *)(v515 & 0xFFFFFFFFFFFFFFF8);
            unint64_t v519 = *(void *)((v515 & 0xFFFFFFFFFFFFFFF8) + 8);
            sub_24D5203A8(v518, v519);
            uint64_t v520 = *v517;
            unint64_t v521 = v517[1];
            *os_log_type_t v517 = v518;
            v517[1] = v519;
            sub_24D466534(v520, v521);
            unint64_t v210 = v568;
            uint64_t v280 = v581;
LABEL_294:
            size_t v358 = v281;
            goto LABEL_295;
          }
          *(void *)unint64_t v470 = *(void *)v471;
          *(unsigned char *)(v470 + 8) = *((unsigned char *)v471 + 8);
          *(unsigned char *)(v470 + 9) = *((unsigned char *)v471 + 9);
          v498 = (void *)*((void *)v471 + 2);
          id v499 = v498;
          *(void *)(v470 + 16) = v498;

          uint64_t v500 = *(void **)(v470 + 24);
          v501 = (void *)*((void *)v471 + 3);
          id v502 = v501;
          *(void *)(v470 + 24) = v501;

          *(unsigned char *)(v470 + 32) = *((unsigned char *)v471 + 32);
          *(unsigned char *)(v470 + 33) = *((unsigned char *)v471 + 33);
          *(unsigned char *)(v470 + 34) = *((unsigned char *)v471 + 34);
          *(void *)(v470 + 40) = *((void *)v471 + 5);
          *(void *)(v470 + 48) = *((void *)v471 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v470 + 56) = *((void *)v471 + 7);
          *(void *)(v470 + 64) = *((void *)v471 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v470 + 72) = *((unsigned char *)v471 + 72);
          *(void *)(v470 + 80) = *((void *)v471 + 10);
          *(void *)(v470 + 88) = *((void *)v471 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v503 = *(void **)(v470 + 96);
          unint64_t v504 = (void *)*((void *)v471 + 12);
          *(void *)(v470 + 96) = v504;
          id v505 = v504;

          *(unsigned char *)(v470 + 104) = *((unsigned char *)v471 + 104);
          *(unsigned char *)(v470 + 105) = *((unsigned char *)v471 + 105);
          *(void *)(v470 + 112) = *((void *)v471 + 14);
          *(void *)(v470 + 120) = *((void *)v471 + 15);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v470 + 128) = *((void *)v471 + 16);
          *(void *)(v470 + 136) = *((void *)v471 + 17);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v470 + 144) = *((void *)v471 + 18);
          *(void *)(v470 + 152) = *((void *)v471 + 19);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v470 + 160) = *((void *)v471 + 20);
          *(void *)(v470 + 168) = *((void *)v471 + 21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v470 + 176) = *((unsigned char *)v471 + 176);
          *(void *)(v470 + 184) = *((void *)v471 + 23);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v506 = *((void *)v471 + 24);
          if (*(void *)(v470 + 192))
          {
            uint64_t v282 = v550;
            unint64_t v283 = v588 + 7;
            if (v506)
            {
              *(void *)(v470 + 192) = v506;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(void *)(v470 + 200) = *((void *)v471 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
LABEL_292:
              *(void *)(v470 + 208) = *((void *)v471 + 26);
              *(void *)(v470 + 216) = *((void *)v471 + 27);
              *(void *)(v470 + 224) = *((void *)v471 + 28);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(void *)(v470 + 232) = *((void *)v471 + 29);
              *(void *)(v470 + 240) = *((void *)v471 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_293;
            }
            sub_24D5F9A0C(v470 + 192);
          }
          else
          {
            uint64_t v282 = v550;
            unint64_t v283 = v588 + 7;
            if (v506)
            {
              *(void *)(v470 + 192) = v506;
              *(void *)(v470 + 200) = *((void *)v471 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_292;
            }
          }
          *(_OWORD *)(v470 + 192) = v471[12];
          goto LABEL_292;
        }
        sub_24D400DCC(*v456, v458);
      }
      *(_OWORD *)uint64_t v456 = *(_OWORD *)v457;
      goto LABEL_264;
    }
    unint64_t v252 = (v574 + ((v227 + v239) & v593)) & v549;
    if (v591 <= 0x7FFFFFFD)
    {
      unint64_t v251 = *(void *)(((v548 + ((v571 + v252) & v549)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_175:
      if (v251 >= 0xFFFFFFFF) {
        LODWORD(v251) = -1;
      }
      if ((v251 + 1) >= 2) {
        goto LABEL_153;
      }
      goto LABEL_178;
    }
    uint64_t v253 = *(uint64_t (**)(unint64_t))(v569 + 48);
LABEL_170:
    unint64_t v256 = v226;
    uint64_t v257 = ~v208;
    uint64_t v258 = v222;
    uint64_t v259 = v219;
    int v260 = v253(v252);
    uint64_t v219 = v259;
    uint64_t v222 = v258;
    uint64_t v221 = v257;
    unint64_t v226 = v256;
    if (v260) {
      goto LABEL_153;
    }
    goto LABEL_178;
  }
  if (v212 != v215)
  {
    unint64_t v250 = (unint64_t *)((v223 + v233) & 0xFFFFFFFFFFFFFFF8);
    if (v214 <= 0x7FFFFFFE)
    {
      unint64_t v251 = *v250;
      goto LABEL_175;
    }
    unint64_t v252 = ((unint64_t)v250 + v225) & v224;
    uint64_t v253 = *(uint64_t (**)(unint64_t))(v206 + 48);
    goto LABEL_170;
  }
  unint64_t v234 = v226;
  uint64_t v235 = ~v208;
  uint64_t v236 = v222;
  uint64_t v237 = v219;
  int v238 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v556 + 48))(v233, v212, v553);
  uint64_t v219 = v237;
  uint64_t v222 = v236;
  uint64_t v221 = v235;
  unint64_t v226 = v234;
  if (!v238) {
    goto LABEL_178;
  }
LABEL_153:
  unint64_t v241 = (unint64_t)&v584[v220] & v219;
  unint64_t v242 = (v222 + v241) & v221;
  if (v215 == v218)
  {
    if (v212 == v215)
    {
      unint64_t v243 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v556 + 48);
      unint64_t v244 = (v222 + v241) & v221;
      uint64_t v245 = v212;
      uint64_t v246 = v553;
LABEL_191:
      uint64_t v276 = v221;
      uint64_t v277 = v222;
      uint64_t v278 = v219;
      int v249 = v243(v244, v245, v246);
      uint64_t v219 = v278;
      uint64_t v222 = v277;
      uint64_t v221 = v276;
      unint64_t v210 = v566;
      goto LABEL_192;
    }
    id v254 = (unint64_t *)((v562 + v242) & 0xFFFFFFFFFFFFFFF8);
    if (v214 > 0x7FFFFFFE)
    {
      unint64_t v244 = ((unint64_t)v254 + v558) & v560;
      unint64_t v243 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v547 + 48);
      uint64_t v245 = v213;
      uint64_t v246 = v552;
      goto LABEL_191;
    }
    unint64_t v255 = *v254;
    if (v255 >= 0xFFFFFFFF) {
      LODWORD(v255) = -1;
    }
    unint64_t v210 = v566;
    uint64_t v211 = v584;
    if ((v255 + 1) >= 2) {
      goto LABEL_193;
    }
  }
  else
  {
    unint64_t v247 = v226 + v242;
    unint64_t v210 = v566;
    if ((v217 & 0x80000000) == 0)
    {
      unint64_t v248 = *(void *)(v247 + 8);
      if (v248 >= 0xFFFFFFFF) {
        LODWORD(v248) = -1;
      }
      int v249 = v248 + 1;
LABEL_192:
      uint64_t v211 = v584;
      if (!v249)
      {
LABEL_199:
        unint64_t v241 = (unint64_t)&v211[v220] & v219;
        unint64_t v242 = (v222 + v241) & v221;
        goto LABEL_200;
      }
LABEL_193:
      uint64_t v279 = 7;
      if (!v591) {
        uint64_t v279 = 8;
      }
      uint64_t v280 = v581;
      if (v591) {
        size_t v281 = v586;
      }
      else {
        size_t v281 = v586 + 1;
      }
      memcpy(v210, v211, ((((((((((((((v279 + v586 + v588) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ v581+ 327) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
      uint64_t v282 = v550;
      unint64_t v283 = v588 + 7;
      goto LABEL_294;
    }
    uint64_t v261 = (v574 + ((v564 + v247) & v593)) & v549;
    if (v591 > 0x7FFFFFFD)
    {
      uint64_t v262 = v221;
      uint64_t v263 = v222;
      uint64_t v264 = v219;
      int v249 = (*(uint64_t (**)(uint64_t))(v569 + 48))(v261);
      uint64_t v219 = v264;
      uint64_t v222 = v263;
      uint64_t v221 = v262;
      goto LABEL_192;
    }
    unint64_t v381 = *(void *)(((v548 + ((v571 + v261) & v549)) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v381 >= 0xFFFFFFFF) {
      LODWORD(v381) = -1;
    }
    uint64_t v211 = v584;
    if ((v381 + 1) >= 2) {
      goto LABEL_193;
    }
  }
LABEL_200:
  size_t v284 = *(void (**)(char *, char *, uint64_t))(v576 + 16);
  uint64_t v285 = v211;
  uint64_t v286 = v221;
  uint64_t v287 = v222;
  uint64_t v288 = v219;
  v284(v210, v285, v578);
  uint64_t v567 = v210;
  unint64_t v289 = (unint64_t)&v210[v220] & v288;
  v284((char *)v289, (char *)v241, v578);
  unint64_t v290 = (v287 + v289) & v286;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v556 + 16))(v290, v242, v553);
  uint64_t v291 = (void *)((v562 + v290) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v292 = (void *)((v562 + v242) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v291 = *v292;
  unint64_t v293 = ((unint64_t)v291 + v558) & v560;
  unint64_t v294 = ((unint64_t)v292 + v558) & v560;
  uint64_t v295 = *(void (**)(unint64_t, unint64_t, uint64_t))(v547 + 16);
  swift_bridgeObjectRetain();
  v295(v293, v294, v552);
  size_t v296 = (void *)((v544 + v294) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v297 = (void *)((v544 + v293) & 0xFFFFFFFFFFFFFFF8);
  void *v297 = *v296;
  uint64_t v298 = (void *)(((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v299 = (void *)(((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v298 = *v299;
  v298[1] = v299[1];
  unint64_t v300 = (void *)(v545 + v290);
  *unint64_t v300 = *(void *)(v545 + v242);
  v300[1] = *(void *)(v545 + v242 + 8);
  unint64_t v301 = (v564 + v545 + v290) & v593;
  unint64_t v302 = (v564 + v545 + v242) & v593;
  *(unsigned char *)unint64_t v301 = *(unsigned char *)v302;
  uint64_t v303 = v301 | 4;
  int v304 = *(_DWORD *)(v302 | 4);
  *(unsigned char *)(v303 + 4) = *(unsigned char *)((v302 | 4) + 4);
  *(_DWORD *)uint64_t v303 = v304;
  *(_WORD *)(v301 + 10) = *(_WORD *)(v302 + 0xA);
  unint64_t v594 = v301;
  unint64_t v305 = (v574 + v301) & v549;
  unint64_t v306 = (v574 + v302) & v549;
  unint64_t v307 = *(void (**)(unint64_t, unint64_t, uint64_t))(v569 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v307(v305, v306, v572);
  uint64_t v308 = (v571 + v306) & v549;
  v307((v571 + v305) & v549, v308, v572);
  size_t v281 = v586;
  size_t v309 = (unsigned char *)(((v571 + v305) & v549) + v586);
  *size_t v309 = *(unsigned char *)(v308 + v586);
  v309[1] = *(unsigned char *)(v308 + v586 + 1);
  v309[2] = *(unsigned char *)(v308 + v586 + 2);
  v309[3] = *(unsigned char *)(v308 + v586 + 3);
  v309[4] = *(unsigned char *)(v308 + v586 + 4);
  unint64_t v310 = (unint64_t)(v309 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v311 = (v308 + v586 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v310 = *(void *)v311;
  *(void *)(v310 + 8) = *(void *)(v311 + 8);
  *(unsigned char *)(v310 + 16) = *(unsigned char *)(v311 + 16);
  *(unsigned char *)(v310 + 17) = *(unsigned char *)(v311 + 17);
  *(unsigned char *)(v310 + 18) = *(unsigned char *)(v311 + 18);
  *(unsigned char *)(v310 + 19) = *(unsigned char *)(v311 + 19);
  unint64_t v312 = (v310 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v313 = (v311 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v312 = *(void *)v313;
  *(unsigned char *)(v312 + 8) = *(unsigned char *)(v313 + 8);
  *(unsigned char *)(v312 + 9) = *(unsigned char *)(v313 + 9);
  *(unsigned char *)(v312 + 10) = *(unsigned char *)(v313 + 10);
  *(unsigned char *)(v312 + 11) = *(unsigned char *)(v313 + 11);
  *(unsigned char *)(v312 + 12) = *(unsigned char *)(v313 + 12);
  uint64_t v314 = (void *)((v311 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v315 = (void *)((v310 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v315 = *v314;
  unint64_t v316 = ((unint64_t)v315 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v317 = ((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v316 = *(void *)v317;
  *(unsigned char *)(v316 + 8) = *(unsigned char *)(v317 + 8);
  *(unsigned char *)(v316 + 9) = *(unsigned char *)(v317 + 9);
  uint64_t v318 = (void *)((v570 + v316) & v549);
  uint64_t v319 = (const void *)((v570 + v317) & v549);
  uint64_t v320 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v569 + 48);
  swift_bridgeObjectRetain();
  if (v320(v319, 1, v572))
  {
    unsigned int v321 = v591;
    if (!v591) {
      size_t v281 = v586 + 1;
    }
    memcpy(v318, v319, v281);
  }
  else
  {
    v307((unint64_t)v318, (unint64_t)v319, v572);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v569 + 56))(v318, 0, 1, v572);
    unsigned int v321 = v591;
    if (!v591) {
      size_t v281 = v586 + 1;
    }
  }
  uint64_t v322 = (void *)(((unint64_t)v318 + v281 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v323 = (void *)(((unint64_t)v319 + v281 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v322 = *v323;
  unint64_t v324 = ((unint64_t)v322 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v325 = ((unint64_t)v323 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v326 = *(void *)v325;
  *(unsigned char *)(v324 + 8) = *(unsigned char *)(v325 + 8);
  *(void *)unint64_t v324 = v326;
  v327 = (void *)(((unint64_t)v322 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v328 = (void *)(((unint64_t)v323 + 31) & 0xFFFFFFFFFFFFFFF8);
  void *v327 = *v328;
  unint64_t v329 = ((unint64_t)v327 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v330 = (uint64_t *)(((unint64_t)v328 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v331 = v330[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v331 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v329 = *(_OWORD *)v330;
  }
  else
  {
    uint64_t v332 = *v330;
    sub_24D3F9C18(*v330, v331);
    *(void *)unint64_t v329 = v332;
    *(void *)(v329 + 8) = v331;
  }
  uint64_t v211 = v584;
  unint64_t v333 = (v329 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v334 = ((unint64_t)v330 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v335 = *(void *)v334;
  *(unsigned char *)(v333 + 8) = *(unsigned char *)(v334 + 8);
  *(void *)unint64_t v333 = v335;
  *(unsigned char *)(v333 + 9) = *(unsigned char *)(v334 + 9);
  unint64_t v336 = (v333 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v337 = (v334 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v338 = *(_DWORD *)v337;
  *(unsigned char *)(v336 + 4) = *(unsigned char *)(v337 + 4);
  *(_DWORD *)unint64_t v336 = v338;
  uint64_t v339 = (void *)((v333 + 25) & 0xFFFFFFFFFFFFFFF8);
  v340 = (void *)((v334 + 25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v339 = *v340;
  v339[1] = v340[1];
  unint64_t v341 = ((((((((((v281 + 7 + v588) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v342 = v594 + v341;
  uint64_t v343 = (long long *)(v302 + v341);
  unint64_t v344 = *((void *)v343 + 2);
  if (v344 >= 0xFFFFFFFF) {
    LODWORD(v344) = -1;
  }
  int v345 = v344 - 1;
  swift_bridgeObjectRetain();
  if (v345 < 0)
  {
    *(void *)unint64_t v342 = *(void *)v343;
    *(unsigned char *)(v342 + 8) = *((unsigned char *)v343 + 8);
    *(unsigned char *)(v342 + 9) = *((unsigned char *)v343 + 9);
    uint64_t v359 = (void *)*((void *)v343 + 2);
    id v360 = v359;
    *(void *)(v342 + 16) = v359;
    unint64_t v361 = (void *)*((void *)v343 + 3);
    id v362 = v361;
    *(void *)(v342 + 24) = v361;
    *(unsigned char *)(v342 + 32) = *((unsigned char *)v343 + 32);
    *(unsigned char *)(v342 + 33) = *((unsigned char *)v343 + 33);
    *(unsigned char *)(v342 + 34) = *((unsigned char *)v343 + 34);
    *(void *)(v342 + 40) = *((void *)v343 + 5);
    *(void *)(v342 + 48) = *((void *)v343 + 6);
    *(void *)(v342 + 56) = *((void *)v343 + 7);
    *(void *)(v342 + 64) = *((void *)v343 + 8);
    *(unsigned char *)(v342 + 72) = *((unsigned char *)v343 + 72);
    *(void *)(v342 + 80) = *((void *)v343 + 10);
    *(void *)(v342 + 88) = *((void *)v343 + 11);
    uint64_t v589 = (void *)*((void *)v343 + 12);
    *(void *)(v342 + 96) = v589;
    *(unsigned char *)(v342 + 104) = *((unsigned char *)v343 + 104);
    *(unsigned char *)(v342 + 105) = *((unsigned char *)v343 + 105);
    *(void *)(v342 + 112) = *((void *)v343 + 14);
    *(void *)(v342 + 120) = *((void *)v343 + 15);
    *(void *)(v342 + 128) = *((void *)v343 + 16);
    *(void *)(v342 + 136) = *((void *)v343 + 17);
    *(void *)(v342 + 144) = *((void *)v343 + 18);
    *(void *)(v342 + 152) = *((void *)v343 + 19);
    *(void *)(v342 + 160) = *((void *)v343 + 20);
    *(void *)(v342 + 168) = *((void *)v343 + 21);
    *(unsigned char *)(v342 + 176) = *((unsigned char *)v343 + 176);
    *(void *)(v342 + 184) = *((void *)v343 + 23);
    uint64_t v363 = *((void *)v343 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v364 = v589;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v363)
    {
      *(void *)(v342 + 192) = v363;
      *(void *)(v342 + 200) = *((void *)v343 + 25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v342 + 192) = v343[12];
    }
    uint64_t v282 = v550;
    uint64_t v211 = v584;
    size_t v358 = v586;
    unsigned int v321 = v591;
    unint64_t v283 = v554;
    *(void *)(v342 + 208) = *((void *)v343 + 26);
    *(void *)(v342 + 216) = *((void *)v343 + 27);
    *(void *)(v342 + 224) = *((void *)v343 + 28);
    *(void *)(v342 + 232) = *((void *)v343 + 29);
    *(void *)(v342 + 240) = *((void *)v343 + 30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v346 = *v343;
    long long v347 = v343[1];
    long long v348 = v343[3];
    *(_OWORD *)(v342 + 32) = v343[2];
    *(_OWORD *)(v342 + 48) = v348;
    *(_OWORD *)unint64_t v342 = v346;
    *(_OWORD *)(v342 + 16) = v347;
    long long v349 = v343[4];
    long long v350 = v343[5];
    long long v351 = v343[7];
    *(_OWORD *)(v342 + 96) = v343[6];
    *(_OWORD *)(v342 + 112) = v351;
    *(_OWORD *)(v342 + 64) = v349;
    *(_OWORD *)(v342 + 80) = v350;
    long long v352 = v343[8];
    long long v353 = v343[9];
    long long v354 = v343[11];
    *(_OWORD *)(v342 + 160) = v343[10];
    *(_OWORD *)(v342 + 176) = v354;
    *(_OWORD *)(v342 + 128) = v352;
    *(_OWORD *)(v342 + 144) = v353;
    long long v355 = v343[12];
    long long v356 = v343[13];
    long long v357 = v343[14];
    *(void *)(v342 + 240) = *((void *)v343 + 30);
    *(_OWORD *)(v342 + 208) = v356;
    *(_OWORD *)(v342 + 224) = v357;
    *(_OWORD *)(v342 + 192) = v355;
    uint64_t v282 = v550;
    size_t v358 = v586;
    unint64_t v283 = v588 + 7;
  }
  char v369 = (_OWORD *)((v342 + 255) & 0xFFFFFFFFFFFFFFF8);
  id v370 = (long long *)(((unint64_t)v343 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v371 = *v370;
  *(_OWORD *)((char *)v369 + 9) = *(long long *)((char *)v370 + 9);
  *char v369 = v371;
  unint64_t v372 = (v342 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v373 = ((unint64_t)v343 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v374 = *(_OWORD *)v373;
  *(unsigned char *)(v372 + 16) = *(unsigned char *)(v373 + 16);
  *(_OWORD *)unint64_t v372 = v374;
  v375 = (void *)((v342 + 311) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v376 = ((unint64_t)v343 + 311) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v377 = *(void *)v376;
  v376 += 15;
  void *v375 = v377;
  v378 = (void *)(((unint64_t)v375 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v379 = *(void *)(v376 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v380 = *(void *)((v376 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_24D5203A8(v379, v380);
  void *v378 = v379;
  v378[1] = v380;
  unint64_t v210 = v567;
  uint64_t v280 = v581;
  if (!v321) {
    goto LABEL_294;
  }
LABEL_295:
  unint64_t v522 = ((((v280
           + ((((((((((v283 + v358) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v523 = (unint64_t)&v210[v522];
  unint64_t v524 = (unint64_t)&v211[v522];
  unint64_t v525 = v523 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v525 = *(void *)(v524 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v525 + 8) = *(unsigned char *)((v524 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v526 = (void **)((v523 + 23) & 0xFFFFFFFFFFFFFFF8);
  v527 = (void **)((v524 + 23) & 0xFFFFFFFFFFFFFFF8);
  v528 = *v527;
  uint64_t v529 = *v526;
  *uint64_t v526 = *v527;
  id v530 = v528;

  unint64_t v531 = (id *)(((unint64_t)v526 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v532 = ((unint64_t)v527 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v533 = *(void **)v532;
  if ((unint64_t)*v531 < 0xFFFFFFFF)
  {
    if ((unint64_t)v533 >= 0xFFFFFFFF)
    {
      id v539 = v533;
      *unint64_t v531 = v533;
      char v540 = *(void **)(v532 + 8);
      v531[1] = v540;
      id v541 = v540;
      return v282;
    }
LABEL_301:
    *(_OWORD *)unint64_t v531 = *(_OWORD *)v532;
    return v282;
  }
  if ((unint64_t)v533 < 0xFFFFFFFF)
  {

    goto LABEL_301;
  }
  id v534 = v533;
  id v535 = *v531;
  *unint64_t v531 = v533;

  id v536 = v531[1];
  v537 = *(void **)(v532 + 8);
  v531[1] = v537;
  id v538 = v537;

  return v282;
}

__n128 sub_24D762E18(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v7 | v11 | 7;
  uint64_t v13 = (char *)(((unint64_t)a1 + v12 + 8) & ~v12);
  unsigned int v14 = (char *)(((unint64_t)a2 + v12 + 8) & ~v12);
  uint64_t v15 = *(unsigned int *)(v5 + 84);
  if (v15 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v16 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v16 = *(_DWORD *)(v5 + 84);
  }
  if (v16 <= 0x7FFFFFFE) {
    int v17 = 2147483646;
  }
  else {
    int v17 = v16;
  }
  uint64_t v18 = *(void *)(v5 + 64) + 7;
  uint64_t v19 = v11 + 8;
  size_t v20 = ((((*(void *)(v9 + 64) + 7 + ((v11 + 8 + (v18 & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v241 = v8;
  uint64_t v235 = ~v11;
  uint64_t v238 = *(void *)(v9 + 64) + 7;
  if (v15 == v17)
  {
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, v15, AssociatedTypeWitness)) {
      goto LABEL_17;
    }
LABEL_16:
    memcpy(v13, v14, v20);
    goto LABEL_19;
  }
  unint64_t v21 = (uint64_t *)((unint64_t)&v14[v18] & 0xFFFFFFFFFFFFFFF8);
  if (v16 <= 0x7FFFFFFE)
  {
    uint64_t v22 = *v21;
    if ((unint64_t)*v21 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    if ((v22 + 1) < 2) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  if ((*(unsigned int (**)(unint64_t))(v9 + 48))(((unint64_t)v21 + v19) & ~v11)) {
    goto LABEL_16;
  }
LABEL_17:
  unint64_t v21 = (uint64_t *)((unint64_t)&v14[v18] & 0xFFFFFFFFFFFFFFF8);
LABEL_18:
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v14, AssociatedTypeWitness);
  uint64_t v23 = (void *)((unint64_t)&v13[v18] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v21;
  int v24 = v13;
  unint64_t v25 = ((unint64_t)v23 + v19) & v235;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(v25, ((unint64_t)v21 + v19) & v235, v241);
  unint64_t v26 = v238 + v25;
  uint64_t v13 = v24;
  v26 &= 0xFFFFFFFFFFFFFFF8;
  int v27 = (void *)((v238 + (((unint64_t)v21 + v19) & v235)) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v26 = *v27;
  *(_OWORD *)((v26 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_19:
  uint64_t v28 = &v13[v20];
  uint64_t v29 = &v14[v20];
  uint64_t v30 = *(void *)v29;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = v32;
  uint64_t v34 = *(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = sub_24DCC8CE8();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v38 = v37 | 7;
  uint64_t v220 = v34;
  uint64_t v224 = v37 | v34;
  uint64_t v39 = v37 | v34 | 7;
  unint64_t v242 = (void *)((unint64_t)&v13[v20 + 9 + v39] & ~v39);
  int v40 = (const void *)((unint64_t)&v29[v39 + 9] & ~v39);
  uint64_t v41 = *(unsigned int *)(v32 + 84);
  unsigned int v42 = *(_DWORD *)(v36 + 84);
  if (v42 <= 0x7FFFFFFE) {
    unsigned int v43 = 2147483646;
  }
  else {
    unsigned int v43 = *(_DWORD *)(v36 + 84);
  }
  unsigned int v226 = v43;
  if (v41 > v43) {
    unsigned int v43 = *(_DWORD *)(v32 + 84);
  }
  if (v43 <= 0x7FFFFFFF) {
    int v44 = 0x7FFFFFFF;
  }
  else {
    int v44 = v43;
  }
  uint64_t v228 = *(void *)(v32 + 64);
  uint64_t v45 = v228 + 7;
  uint64_t v46 = ~v38;
  uint64_t v47 = v37 + 16;
  uint64_t v222 = v37 | 7;
  unint64_t v239 = (v37 + 16 + ((v228 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v38;
  uint64_t v48 = ~v37;
  uint64_t v49 = v37 + 12;
  size_t v50 = *(void *)(v36 + 64);
  size_t v51 = v50 + v37;
  uint64_t v215 = v37 + 10;
  unint64_t v245 = (v37
        + 10
        + ((((((v50 + 12 + ((v50 + v37 + ((v37 + 12) & ~v37)) & ~v37)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v37;
  unsigned int v244 = *(_DWORD *)(v36 + 84);
  uint64_t v216 = *(void *)(v35 - 8);
  uint64_t v217 = v35;
  uint64_t v214 = ~v37;
  uint64_t v218 = v37 + 12;
  uint64_t v236 = v40;
  size_t v231 = v50;
  uint64_t v232 = v31;
  size_t v213 = v50 + v37;
  uint64_t v233 = v33;
  uint64_t v234 = v46;
  size_t v208 = v50 + 12;
  if (v41 == v44)
  {
    int v52 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v40, v41, v31);
    goto LABEL_29;
  }
  unint64_t v53 = ((unint64_t)v40 + v45) & 0xFFFFFFFFFFFFFFF8;
  if ((v43 & 0x80000000) == 0)
  {
    unint64_t v54 = *(void *)(v53 + 8);
    if (v54 >= 0xFFFFFFFF) {
      LODWORD(v54) = -1;
    }
    if (v54 == -1) {
      goto LABEL_35;
    }
    goto LABEL_52;
  }
  unint64_t v55 = (v47 + v53) & v46;
  unint64_t v76 = (v49 + v55) & v48;
  if (v42 > 0x7FFFFFFD)
  {
    int v52 = (*(uint64_t (**)(unint64_t))(v36 + 48))(v76);
LABEL_29:
    int v40 = v236;
    if (!v52)
    {
LABEL_35:
      unint64_t v53 = ((unint64_t)v40 + v45) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v55 = (v47 + v53) & v46;
      uint64_t v56 = v218;
      unint64_t v209 = (v218 + v55) & v48;
      size_t v211 = (v51 + v209) & v48;
      goto LABEL_36;
    }
LABEL_52:
    uint64_t v94 = 7;
    if (v244)
    {
      size_t v75 = v50;
    }
    else
    {
      uint64_t v94 = 8;
      size_t v75 = v50 + 1;
    }
    memcpy(v242, v40, v239+ ((((((((((v94 + v50 + v245) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
    uint64_t v77 = v220;
    uint64_t v78 = v222;
LABEL_56:
    size_t v50 = v75;
    goto LABEL_57;
  }
  unint64_t v93 = *(void *)(((v50 + 12 + ((v51 + v76) & v48)) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v93 >= 0xFFFFFFFF) {
    LODWORD(v93) = -1;
  }
  if ((v93 + 1) >= 2) {
    goto LABEL_52;
  }
  uint64_t v56 = v37 + 12;
  unint64_t v209 = (v49 + v55) & v48;
  size_t v211 = (v51 + v76) & v48;
LABEL_36:
  (*(void (**)(void *, const void *, uint64_t))(v233 + 32))(v242, v40, v232);
  uint64_t v57 = (_OWORD *)(((unint64_t)v242 + v45) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v57 = *(_OWORD *)v53;
  unint64_t v58 = ((unint64_t)v57 + v47) & v46;
  *(unsigned char *)unint64_t v58 = *(unsigned char *)v55;
  uint64_t v59 = v58 | 4;
  int v60 = *(_DWORD *)(v55 | 4);
  *(unsigned char *)(v59 + 4) = *(unsigned char *)((v55 | 4) + 4);
  *(_DWORD *)uint64_t v59 = v60;
  *(_WORD *)(v58 + 10) = *(_WORD *)(v55 + 10);
  unint64_t v61 = (v56 + v58) & v48;
  uint64_t v62 = *(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32);
  v62(v61, v209, v217);
  v62((v51 + v61) & v48, v211, v217);
  uint64_t v63 = (unsigned char *)(((v51 + v61) & v48) + v50);
  *uint64_t v63 = *(unsigned char *)(v211 + v50);
  v63[1] = *(unsigned char *)(v211 + v50 + 1);
  v63[2] = *(unsigned char *)(v211 + v50 + 2);
  v63[3] = *(unsigned char *)(v211 + v50 + 3);
  v63[4] = *(unsigned char *)(v211 + v50 + 4);
  unint64_t v64 = (unint64_t)(v63 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v211 + v50 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v64 = *(_OWORD *)v65;
  *(unsigned char *)(v64 + 16) = *(unsigned char *)(v65 + 16);
  *(unsigned char *)(v64 + 17) = *(unsigned char *)(v65 + 17);
  *(unsigned char *)(v64 + 18) = *(unsigned char *)(v65 + 18);
  *(unsigned char *)(v64 + 19) = *(unsigned char *)(v65 + 19);
  unint64_t v66 = (v64 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v65 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v66 = *(void *)v67;
  *(unsigned char *)(v66 + 8) = *(unsigned char *)(v67 + 8);
  *(unsigned char *)(v66 + 9) = *(unsigned char *)(v67 + 9);
  *(unsigned char *)(v66 + 10) = *(unsigned char *)(v67 + 10);
  *(unsigned char *)(v66 + 11) = *(unsigned char *)(v67 + 11);
  *(unsigned char *)(v66 + 12) = *(unsigned char *)(v67 + 12);
  uint64_t v68 = (void *)((v65 + 47) & 0xFFFFFFFFFFFFFFF8);
  int v69 = (void *)((v64 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v69 = *v68;
  unint64_t v70 = ((unint64_t)v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v71 = ((unint64_t)v68 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v70 = *(void *)v71;
  *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
  *(unsigned char *)(v70 + 9) = *(unsigned char *)(v71 + 9);
  unsigned int v72 = (void *)((v215 + v70) & v48);
  unsigned int v73 = (const void *)((v215 + v71) & v48);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v216 + 48))(v73, 1, v217))
  {
    unsigned int v74 = v244;
    if (v244) {
      size_t v75 = v50;
    }
    else {
      size_t v75 = v50 + 1;
    }
    memcpy(v72, v73, v75);
  }
  else
  {
    v62((unint64_t)v72, (unint64_t)v73, v217);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v216 + 56))(v72, 0, 1, v217);
    unsigned int v74 = v244;
    if (v244) {
      size_t v75 = v50;
    }
    else {
      size_t v75 = v50 + 1;
    }
  }
  uint64_t v77 = v220;
  uint64_t v78 = v222;
  uint64_t v79 = (void *)(((unint64_t)v72 + v75 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v80 = (void *)(((unint64_t)v73 + v75 + 7) & 0xFFFFFFFFFFFFFFF8);
  void *v79 = *v80;
  unint64_t v81 = ((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v82 = ((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v83 = *(void *)v82;
  *(unsigned char *)(v81 + 8) = *(unsigned char *)(v82 + 8);
  *(void *)unint64_t v81 = v83;
  size_t v84 = (void *)(((unint64_t)v79 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v85 = (void *)(((unint64_t)v80 + 31) & 0xFFFFFFFFFFFFFFF8);
  *size_t v84 = *v85;
  uint64_t v86 = (_OWORD *)(((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v87 = (_OWORD *)(((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v86 = *v87;
  unint64_t v88 = ((unint64_t)v86 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v89 = ((unint64_t)v87 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v90 = *(void *)v89;
  *(unsigned char *)(v88 + 8) = *(unsigned char *)(v89 + 8);
  *(void *)unint64_t v88 = v90;
  *(unsigned char *)(v88 + 9) = *(unsigned char *)(v89 + 9);
  unint64_t v91 = (v88 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v92 = (v89 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v83) = *(_DWORD *)v92;
  *(unsigned char *)(v91 + 4) = *(unsigned char *)(v92 + 4);
  *(_DWORD *)unint64_t v91 = v83;
  *(_OWORD *)((v88 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v89 + 25) & 0xFFFFFFFFFFFFFFF8);
  if (!v74) {
    goto LABEL_56;
  }
LABEL_57:
  uint64_t v221 = swift_getAssociatedTypeWitness();
  uint64_t v95 = *(void *)(v221 - 8);
  uint64_t v96 = v95;
  int v97 = *(_DWORD *)(v95 + 80) & 0xF8;
  uint64_t v98 = swift_getAssociatedTypeWitness();
  uint64_t v99 = *(void *)(v98 - 8);
  uint64_t v100 = v99;
  uint64_t v101 = *(unsigned __int8 *)(v99 + 80);
  uint64_t v102 = v97 | v101 | 7;
  unint64_t v103 = v239
       + (v224 | v102)
       + ((((((((((v245 + 7 + v50) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v243 = (char *)(((unint64_t)v242 + v103) & ~(v224 | v102));
  unint64_t v104 = (char *)(((unint64_t)v236 + v103) & ~(v224 | v102));
  uint64_t v105 = *(unsigned int *)(v95 + 84);
  uint64_t v106 = *(unsigned int *)(v99 + 84);
  if (v105 <= v106) {
    unsigned int v107 = *(_DWORD *)(v99 + 84);
  }
  else {
    unsigned int v107 = *(_DWORD *)(v95 + 84);
  }
  if (v107 <= 0x7FFFFFFE) {
    unsigned int v108 = 2147483646;
  }
  else {
    unsigned int v108 = v107;
  }
  if (v108 <= v41) {
    unsigned int v109 = v41;
  }
  else {
    unsigned int v109 = v108;
  }
  if (v109 <= v226) {
    unsigned int v109 = v226;
  }
  if (v109 <= 0x7FFFFFFF) {
    int v110 = 0x7FFFFFFF;
  }
  else {
    int v110 = v109;
  }
  uint64_t v111 = ~v77;
  uint64_t v112 = v228 + v77;
  uint64_t v113 = (v228 + v77) & ~v77;
  uint64_t v114 = ~v102;
  uint64_t v115 = v228 + v102;
  uint64_t v116 = *(void *)(v95 + 64) + 7;
  uint64_t v117 = ~v101;
  uint64_t v118 = v101 + 8;
  unint64_t v119 = ((((*(void *)(v99 + 64) + 7 + ((v101 + 8 + (v116 & 0xFFFFFFFFFFFFFFF8)) & ~v101)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v120 = v78 + 16;
  uint64_t v240 = (v78 + 16 + v119 + ((v228 + v102 + v113) & ~v102)) & v234;
  uint64_t v219 = v98;
  uint64_t v227 = *(void *)(v99 + 64) + 7;
  unint64_t v229 = v119;
  uint64_t v225 = v117;
  uint64_t v210 = v116;
  uint64_t v212 = v118;
  uint64_t v237 = ~v102;
  uint64_t v230 = v111;
  if (v41 == v110)
  {
    uint64_t v121 = v233;
    int v122 = (*(uint64_t (**)(char *, void, uint64_t))(v233 + 48))(v104, v41, v232);
    goto LABEL_73;
  }
  unint64_t v123 = (unint64_t)&v104[v112] & v111;
  unint64_t v124 = (v115 + v123) & v114;
  uint64_t v121 = v233;
  if (v108 == v110)
  {
    if (v105 == v108)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v95 + 48))((v115 + v123) & v114, v105, v221))goto LABEL_83; {
      goto LABEL_103;
      }
    }
    unint64_t v196 = (unint64_t *)((v116 + v124) & 0xFFFFFFFFFFFFFFF8);
    if (v107 <= 0x7FFFFFFE)
    {
      unint64_t v197 = *v196;
      goto LABEL_100;
    }
    int v122 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v99 + 48))(((unint64_t)v196 + v118) & v117, v106, v98);
LABEL_73:
    if (!v122)
    {
LABEL_83:
      unint64_t v123 = (unint64_t)&v104[v112] & v230;
      unint64_t v124 = (v115 + v123) & v237;
      goto LABEL_84;
    }
LABEL_103:
    uint64_t v199 = 7;
    if (!v244) {
      uint64_t v199 = 8;
    }
    uint64_t v158 = v240;
    if (v244) {
      size_t v156 = v231;
    }
    else {
      size_t v156 = v231 + 1;
    }
    memcpy(v243, v104, ((((((((((((((v199 + v231 + v245) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ v240+ 327) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
    unint64_t v157 = v245 + 7;
    goto LABEL_109;
  }
  unint64_t v125 = v119 + v124;
  if ((v109 & 0x80000000) == 0)
  {
    unint64_t v126 = *(void *)(v125 + 8);
    if (v126 >= 0xFFFFFFFF) {
      LODWORD(v126) = -1;
    }
    if (v126 == -1) {
      goto LABEL_83;
    }
    goto LABEL_103;
  }
  uint64_t v198 = (v218 + ((v120 + v125) & v234)) & v214;
  if (v244 > 0x7FFFFFFD)
  {
    int v122 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v216 + 48))(v198, v244, v217);
    goto LABEL_73;
  }
  unint64_t v197 = *(void *)(((v208 + ((v213 + v198) & v214)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_100:
  if (v197 >= 0xFFFFFFFF) {
    LODWORD(v197) = -1;
  }
  if ((v197 + 1) >= 2) {
    goto LABEL_103;
  }
LABEL_84:
  uint64_t v223 = v120;
  unint64_t v127 = *(void (**)(void))(v121 + 32);
  v127();
  unint64_t v128 = (unint64_t)&v243[v112] & v230;
  ((void (*)(unint64_t, unint64_t, uint64_t))v127)(v128, v123, v232);
  unint64_t v129 = (v115 + v128) & v237;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v96 + 32))(v129, v124, v221);
  uint64_t v130 = (void *)((v210 + v129) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v131 = (void *)((v210 + v124) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v130 = *v131;
  unint64_t v132 = ((unint64_t)v130 + v212) & v225;
  unint64_t v133 = ((unint64_t)v131 + v212) & v225;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v100 + 32))(v132, v133, v219);
  unint64_t v134 = (void *)((v227 + v132) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v135 = (void *)((v227 + v133) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v134 = *v135;
  *(_OWORD *)(((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_OWORD *)(v229 + v129) = *(_OWORD *)(v229 + v124);
  unint64_t v136 = (v223 + v229 + v129) & v234;
  unint64_t v137 = (v223 + v229 + v124) & v234;
  *(unsigned char *)unint64_t v136 = *(unsigned char *)v137;
  uint64_t v138 = v136 | 4;
  int v139 = *(_DWORD *)(v137 | 4);
  *(unsigned char *)(v138 + 4) = *(unsigned char *)((v137 | 4) + 4);
  *(_DWORD *)uint64_t v138 = v139;
  *(_WORD *)(v136 + 10) = *(_WORD *)(v137 + 0xA);
  unint64_t v140 = *(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32);
  v140((v218 + v136) & v214, (v218 + v137) & v214, v217);
  size_t v141 = (v213 + ((v218 + v136) & v214)) & v214;
  size_t v142 = (v213 + ((v218 + v137) & v214)) & v214;
  v140(v141, v142, v217);
  size_t v143 = v231;
  size_t v144 = (unsigned char *)(v141 + v231);
  *size_t v144 = *(unsigned char *)(v142 + v231);
  v144[1] = *(unsigned char *)(v142 + v231 + 1);
  v144[2] = *(unsigned char *)(v142 + v231 + 2);
  v144[3] = *(unsigned char *)(v142 + v231 + 3);
  v144[4] = *(unsigned char *)(v142 + v231 + 4);
  unint64_t v145 = (v141 + v231 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v146 = (v142 + v231 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v145 = *(_OWORD *)v146;
  *(unsigned char *)(v145 + 16) = *(unsigned char *)(v146 + 16);
  *(unsigned char *)(v145 + 17) = *(unsigned char *)(v146 + 17);
  *(unsigned char *)(v145 + 18) = *(unsigned char *)(v146 + 18);
  *(unsigned char *)(v145 + 19) = *(unsigned char *)(v146 + 19);
  unint64_t v147 = (v145 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v148 = (v146 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v147 = *(void *)v148;
  *(unsigned char *)(v147 + 8) = *(unsigned char *)(v148 + 8);
  *(unsigned char *)(v147 + 9) = *(unsigned char *)(v148 + 9);
  *(unsigned char *)(v147 + 10) = *(unsigned char *)(v148 + 10);
  *(unsigned char *)(v147 + 11) = *(unsigned char *)(v148 + 11);
  *(unsigned char *)(v147 + 12) = *(unsigned char *)(v148 + 12);
  unint64_t v149 = (void *)((v146 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v150 = (void *)((v145 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v150 = *v149;
  unint64_t v151 = ((unint64_t)v150 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v152 = ((unint64_t)v149 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v151 = *(void *)v152;
  *(unsigned char *)(v151 + 8) = *(unsigned char *)(v152 + 8);
  *(unsigned char *)(v151 + 9) = *(unsigned char *)(v152 + 9);
  int v153 = (void *)((v215 + v151) & v214);
  unint64_t v154 = (const void *)((v215 + v152) & v214);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v216 + 48))(v154, 1, v217))
  {
    unsigned int v155 = v244;
    if (v244) {
      size_t v156 = v231;
    }
    else {
      size_t v156 = v231 + 1;
    }
    memcpy(v153, v154, v156);
  }
  else
  {
    v140((unint64_t)v153, (unint64_t)v154, v217);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v216 + 56))(v153, 0, 1, v217);
    unsigned int v155 = v244;
    if (v244) {
      size_t v156 = v231;
    }
    else {
      size_t v156 = v231 + 1;
    }
  }
  unint64_t v157 = v245 + 7;
  uint64_t v158 = v240;
  unint64_t v159 = (void *)(((unint64_t)v153 + v156 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v160 = (void *)(((unint64_t)v154 + v156 + 7) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v159 = *v160;
  unint64_t v161 = ((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v162 = ((unint64_t)v160 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v163 = *(void *)v162;
  *(unsigned char *)(v161 + 8) = *(unsigned char *)(v162 + 8);
  *(void *)unint64_t v161 = v163;
  unint64_t v164 = (void *)(((unint64_t)v159 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v165 = (void *)(((unint64_t)v160 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v164 = *v165;
  unint64_t v166 = (_OWORD *)(((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v167 = (_OWORD *)(((unint64_t)v165 + 15) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v166 = *v167;
  unint64_t v168 = ((unint64_t)v166 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v169 = ((unint64_t)v167 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v170 = *(void *)v169;
  *(unsigned char *)(v168 + 8) = *(unsigned char *)(v169 + 8);
  *(void *)unint64_t v168 = v170;
  *(unsigned char *)(v168 + 9) = *(unsigned char *)(v169 + 9);
  unint64_t v171 = (v168 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v172 = (v169 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v163) = *(_DWORD *)v172;
  *(unsigned char *)(v171 + 4) = *(unsigned char *)(v172 + 4);
  *(_DWORD *)unint64_t v171 = v163;
  *(_OWORD *)((v168 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v169 + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v173 = ((((((((((v156 + 7 + v245) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v174 = v136 + v173;
  unint64_t v175 = (long long *)(v137 + v173);
  long long v176 = v175[7];
  long long v178 = v175[4];
  long long v177 = v175[5];
  *(_OWORD *)(v174 + 96) = v175[6];
  *(_OWORD *)(v174 + 112) = v176;
  *(_OWORD *)(v174 + 64) = v178;
  *(_OWORD *)(v174 + 80) = v177;
  long long v179 = v175[11];
  long long v181 = v175[8];
  long long v180 = v175[9];
  *(_OWORD *)(v174 + 160) = v175[10];
  *(_OWORD *)(v174 + 176) = v179;
  *(_OWORD *)(v174 + 128) = v181;
  *(_OWORD *)(v174 + 144) = v180;
  long long v183 = v175[13];
  long long v182 = v175[14];
  long long v184 = v175[12];
  *(void *)(v174 + 240) = *((void *)v175 + 30);
  *(_OWORD *)(v174 + 208) = v183;
  *(_OWORD *)(v174 + 224) = v182;
  *(_OWORD *)(v174 + 192) = v184;
  long long v185 = *v175;
  long long v186 = v175[1];
  long long v187 = v175[3];
  *(_OWORD *)(v174 + 32) = v175[2];
  *(_OWORD *)(v174 + 48) = v187;
  *(_OWORD *)unint64_t v174 = v185;
  *(_OWORD *)(v174 + 16) = v186;
  unint64_t v188 = (_OWORD *)((v174 + 255) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v189 = (long long *)(((unint64_t)v175 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v190 = *v189;
  *(_OWORD *)((char *)v188 + 9) = *(long long *)((char *)v189 + 9);
  *unint64_t v188 = v190;
  unint64_t v191 = (v174 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v192 = ((unint64_t)v175 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v193 = *(_OWORD *)v192;
  *(unsigned char *)(v191 + 16) = *(unsigned char *)(v192 + 16);
  *(_OWORD *)unint64_t v191 = v193;
  unint64_t v194 = (void *)((v174 + 311) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v195 = (void *)(((unint64_t)v175 + 311) & 0xFFFFFFFFFFFFFFF8);
  void *v194 = *v195;
  *(_OWORD *)(((unint64_t)v194 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (!v155) {
LABEL_109:
  }
    size_t v143 = v156;
  unint64_t v200 = ((((v158
           + ((((((((((v157 + v143) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v201 = (unint64_t)&v243[v200];
  unint64_t v202 = (unint64_t)&v104[v200];
  unint64_t v203 = v201 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v203 = *(void *)(v202 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v203 + 8) = *(unsigned char *)((v202 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v204 = (void *)((v201 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v205 = (void *)((v202 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v204 = *v205;
  uint64_t v206 = (__n128 *)(((unint64_t)v205 + 15) & 0xFFFFFFFFFFFFFFF8);
  __n128 result = *v206;
  *(__n128 *)(((unint64_t)v204 + 15) & 0xFFFFFFFFFFFFFFF8) = *v206;
  return result;
}

void *sub_24D764058(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v7 | v11 | 7;
  os_log_type_t v517 = a1;
  uint64_t v13 = (char *)(((unint64_t)a1 + v12 + 8) & ~v12);
  unsigned int v14 = (char *)(((unint64_t)a2 + v12 + 8) & ~v12);
  uint64_t v15 = *(unsigned int *)(v5 + 84);
  uint64_t v16 = *(unsigned int *)(v10 + 84);
  if (v15 <= v16) {
    unsigned int v17 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v17 = *(_DWORD *)(v5 + 84);
  }
  if (v17 <= 0x7FFFFFFE) {
    int v18 = 2147483646;
  }
  else {
    int v18 = v17;
  }
  uint64_t v19 = *(void *)(v5 + 64) + 7;
  uint64_t v20 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v21 = (((v20 + ((v11 + 8 + (v19 & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v22 = v21 + 16;
  uint64_t v534 = *(void *)(v8 - 8);
  uint64_t v536 = v8;
  uint64_t v527 = AssociatedTypeWitness;
  uint64_t v529 = v11 + 8;
  uint64_t v531 = ~v11;
  if (v15 == v18)
  {
    uint64_t v523 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    size_t v525 = v21 + 16;
    uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
    int v24 = v13;
    int v25 = v23(v13, v15, AssociatedTypeWitness);
    unint64_t v26 = v14;
    int v27 = v23(v14, v15, AssociatedTypeWitness);
    if (v25) {
      goto LABEL_9;
    }
LABEL_20:
    uint64_t v28 = (uint64_t *)((unint64_t)&v24[v19] & 0xFFFFFFFFFFFFFFF8);
    if (v27)
    {
      unsigned int v14 = v26;
      uint64_t v13 = v24;
      size_t v22 = v525;
      uint64_t v34 = v527;
      goto LABEL_22;
    }
    uint64_t v29 = (uint64_t *)((unint64_t)&v26[v19] & 0xFFFFFFFFFFFFFFF8);
    unsigned int v14 = v26;
    uint64_t v13 = v24;
    uint64_t v20 = v523;
    size_t v22 = v525;
    uint64_t v34 = v527;
    goto LABEL_27;
  }
  uint64_t v28 = (uint64_t *)((unint64_t)&v13[v19] & 0xFFFFFFFFFFFFFFF8);
  if (v17 > 0x7FFFFFFE)
  {
    uint64_t v523 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    size_t v525 = v21 + 16;
    int v24 = v13;
    uint64_t v35 = ~v11;
    uint64_t v36 = ((unint64_t)v28 + v11 + 8) & ~v11;
    uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v38 = v9;
    uint64_t v39 = v11 + 8;
    int v40 = v37(v36, v16, v9);
    uint64_t v41 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))v37;
    int v521 = v40;
    unint64_t v26 = v14;
    int v27 = v41((v39 + ((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8)) & v35, v16, v38);
    if (v521)
    {
LABEL_9:
      size_t v22 = v525;
      unsigned int v14 = v26;
      uint64_t v13 = v24;
      if (!v27)
      {
        uint64_t v28 = (uint64_t *)((unint64_t)&v24[v19] & 0xFFFFFFFFFFFFFFF8);
        uint64_t v29 = (uint64_t *)((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8);
LABEL_24:
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v14, v527);
        *uint64_t v28 = *v29;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v534 + 32))(((unint64_t)v28 + v529) & v531, ((unint64_t)v29 + v529) & v531, v536);
        unsigned int v42 = (void *)((v523 + (((unint64_t)v28 + v529) & v531)) & 0xFFFFFFFFFFFFFFF8);
        unsigned int v43 = (void *)((v523 + (((unint64_t)v29 + v529) & v531)) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v42 = *v43;
        *(_OWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_28;
      }
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  uint64_t v30 = *v28;
  if ((unint64_t)*v28 >= 0xFFFFFFFF) {
    LODWORD(v30) = -1;
  }
  unsigned int v31 = v30 + 1;
  uint64_t v29 = (uint64_t *)((unint64_t)&v14[v19] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = *v29;
  if ((unint64_t)*v29 >= 0xFFFFFFFF) {
    LODWORD(v32) = -1;
  }
  unsigned int v33 = v32 + 1;
  if (v31 >= 2)
  {
    uint64_t v523 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
    if (v33 < 2) {
      goto LABEL_24;
    }
    goto LABEL_25;
  }
  uint64_t v34 = AssociatedTypeWitness;
  if (v33 >= 2)
  {
LABEL_22:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v34);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v534 + 8))(((unint64_t)v28 + v529) & v531, v536);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    memcpy(v13, v14, v22);
    goto LABEL_28;
  }
LABEL_27:
  (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v13, v14, v34);
  *uint64_t v28 = *v29;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v534 + 40))(((unint64_t)v28 + v529) & v531, ((unint64_t)v29 + v529) & v531, v536);
  int v44 = (void *)((v20 + (((unint64_t)v28 + v529) & v531)) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v45 = (v20 + (((unint64_t)v29 + v529) & v531)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = *(void *)v45;
  v45 += 15;
  void *v44 = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v47 = *(void *)(v45 & 0xFFFFFFFFFFFFFFF8);
  v47[1] = *(void *)((v45 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v48 = &v13[v22];
  uint64_t v49 = &v14[v22];
  uint64_t v50 = *(void *)v49;
  v48[8] = v49[8];
  *(void *)uint64_t v48 = v50;
  uint64_t v51 = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = v52;
  uint64_t v54 = *(unsigned __int8 *)(v52 + 80);
  uint64_t v522 = sub_24DCC8CE8();
  uint64_t v55 = *(void *)(v522 - 8);
  uint64_t v56 = *(unsigned __int8 *)(v55 + 80);
  uint64_t v57 = v56 | 7;
  uint64_t v509 = v54;
  uint64_t v501 = v56 | v54;
  uint64_t v58 = v56 | v54 | 7;
  uint64_t v59 = (unint64_t)&v48[v58 + 9] & ~v58;
  uint64_t v60 = (unint64_t)&v49[v58 + 9] & ~v58;
  uint64_t v61 = *(unsigned int *)(v52 + 84);
  unsigned int v537 = *(_DWORD *)(v55 + 84);
  if (v537 <= 0x7FFFFFFE) {
    unsigned int v62 = 2147483646;
  }
  else {
    unsigned int v62 = *(_DWORD *)(v55 + 84);
  }
  unsigned int v505 = v62;
  if (v61 <= v62) {
    unsigned int v63 = v62;
  }
  else {
    unsigned int v63 = *(_DWORD *)(v52 + 84);
  }
  if (v63 <= 0x7FFFFFFF) {
    int v64 = 0x7FFFFFFF;
  }
  else {
    int v64 = v63;
  }
  uint64_t v65 = *(void *)(v52 + 64);
  uint64_t v66 = v65 + 7;
  uint64_t v67 = ~v57;
  uint64_t v68 = v56 + 16;
  unint64_t v499 = (v56 + 16 + ((v65 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v57;
  uint64_t v69 = v56 + 12;
  size_t v70 = *(void *)(*(void *)(v522 - 8) + 64);
  uint64_t v71 = v70 + v56;
  uint64_t v72 = (v70 + v56 + ((v56 + 12) & ~v56)) & ~v56;
  size_t v535 = v70;
  size_t v73 = v70 + 12;
  uint64_t v515 = v56 + 10;
  unint64_t v530 = (v56 + 10 + ((((((v73 + v72) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v56;
  uint64_t v516 = *(void *)(v522 - 8);
  uint64_t v74 = ~v56;
  uint64_t v498 = ~v56;
  uint64_t v518 = v71;
  uint64_t v528 = v51;
  size_t v497 = v73;
  unint64_t v532 = (void *)v59;
  unint64_t v519 = (const void *)v60;
  uint64_t v524 = v56 + 12;
  uint64_t v526 = v53;
  uint64_t v538 = ~v57;
  unsigned int v513 = v61;
  uint64_t v511 = v56 | 7;
  uint64_t v507 = v65;
  if (v61 == v64)
  {
    size_t v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
    uint64_t v76 = *(void *)(v522 - 8);
    uint64_t v77 = v65 + 7;
    uint64_t v78 = *(unsigned int *)(v53 + 84);
    int v79 = v75(v59, v61, v51);
    int v80 = v75(v60, v78, v51);
    uint64_t v66 = v77;
    uint64_t v55 = v76;
    uint64_t v59 = (uint64_t)v532;
    unint64_t v81 = (const void *)v60;
    if (v79)
    {
      if (!v80) {
        goto LABEL_68;
      }
      goto LABEL_90;
    }
LABEL_57:
    uint64_t v90 = v518;
    if (v80)
    {
LABEL_58:
      uint64_t v91 = v59;
      uint64_t v92 = v66;
      (*(void (**)(uint64_t, uint64_t))(v526 + 8))(v59, v528);
      swift_bridgeObjectRelease();
      unint64_t v93 = (v524 + ((v68 + ((v92 + v91) & 0xFFFFFFFFFFFFFFF8)) & v538)) & v74;
      uint64_t v94 = *(void (**)(unint64_t, uint64_t))(v55 + 8);
      v94(v93, v522);
      unint64_t v95 = (v90 + v93) & v74;
      v94(v95, v522);
      swift_bridgeObjectRelease();
      unint64_t v96 = (v515 + ((((((v497 + v95) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v74;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v55 + 48))(v96, 1, v522)) {
        v94(v96, v522);
      }
      if (v537) {
        size_t v97 = v535;
      }
      else {
        size_t v97 = v535 + 1;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v98 = (uint64_t *)((((((v97 + 7 + v96) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v99 = v98[1];
      unint64_t v100 = v499;
      unint64_t v101 = v530;
      if ((v99 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v98, v99);
      }
      swift_bridgeObjectRelease();
      size_t v102 = v499
           + ((((((((((v97 + 7 + v530) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v103 = v532;
      goto LABEL_96;
    }
    goto LABEL_85;
  }
  unint64_t v82 = (v66 + v59) & 0xFFFFFFFFFFFFFFF8;
  if ((v63 & 0x80000000) != 0)
  {
    unint64_t v85 = (v69 + ((v68 + v82) & v67)) & v74;
    if (v537 <= 0x7FFFFFFD)
    {
      unint64_t v130 = *(void *)(((v73 + ((v71 + v85) & v74)) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v130 >= 0xFFFFFFFF) {
        LODWORD(v130) = -1;
      }
      unint64_t v81 = (const void *)v60;
      int v87 = (void *)((v66 + v60) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v104 = ((unint64_t)v87 + v68) & v67;
      uint64_t v90 = v71;
      unint64_t v105 = (v69 + v104) & v74;
      if ((v130 + 1) >= 2) {
        goto LABEL_87;
      }
LABEL_98:
      unint64_t v150 = (v90 + v105) & v74;
      unint64_t v153 = *(void *)(((v73 + v150) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v153 >= 0xFFFFFFFF) {
        LODWORD(v153) = -1;
      }
      if ((v153 + 1) >= 2) {
        goto LABEL_58;
      }
LABEL_101:
      unint64_t v154 = v81;
      uint64_t v155 = v66;
      uint64_t v156 = v59;
      (*(void (**)(uint64_t, const void *, uint64_t))(v526 + 40))(v59, v154, v528);
      unint64_t v157 = (void *)((v155 + v156) & 0xFFFFFFFFFFFFFFF8);
      void *v157 = *v87;
      v157[1] = v87[1];
      swift_bridgeObjectRelease();
      unint64_t v158 = ((unint64_t)v157 + v68) & v538;
      *(unsigned char *)unint64_t v158 = *(unsigned char *)v104;
      uint64_t v159 = v158 | 4;
      int v160 = *(_DWORD *)(v104 | 4);
      *(unsigned char *)(v159 + 4) = *(unsigned char *)((v104 | 4) + 4);
      *(_DWORD *)uint64_t v159 = v160;
      *(_WORD *)(v158 + 10) = *(_WORD *)(v104 + 10);
      unint64_t v161 = (v524 + v158) & v74;
      unint64_t v162 = *(void (**)(unint64_t, unint64_t, uint64_t))(v55 + 40);
      v162(v161, v105, v522);
      v162((v90 + v161) & v74, v150, v522);
      uint64_t v163 = (unsigned char *)(((v90 + v161) & v74) + v535);
      *uint64_t v163 = *(unsigned char *)(v150 + v535);
      v163[1] = *(unsigned char *)(v150 + v535 + 1);
      v163[2] = *(unsigned char *)(v150 + v535 + 2);
      v163[3] = *(unsigned char *)(v150 + v535 + 3);
      v163[4] = *(unsigned char *)(v150 + v535 + 4);
      unint64_t v164 = (unint64_t)(v163 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v165 = (v150 + v535 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v164 = *(void *)v165;
      *(void *)(v164 + 8) = *(void *)(v165 + 8);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v164 + 16) = *(unsigned char *)(v165 + 16);
      *(unsigned char *)(v164 + 17) = *(unsigned char *)(v165 + 17);
      *(unsigned char *)(v164 + 18) = *(unsigned char *)(v165 + 18);
      *(unsigned char *)(v164 + 19) = *(unsigned char *)(v165 + 19);
      unint64_t v166 = (v164 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v167 = (v165 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v166 = *(void *)v167;
      *(unsigned char *)(v166 + 8) = *(unsigned char *)(v167 + 8);
      *(unsigned char *)(v166 + 9) = *(unsigned char *)(v167 + 9);
      *(unsigned char *)(v166 + 10) = *(unsigned char *)(v167 + 10);
      *(unsigned char *)(v166 + 11) = *(unsigned char *)(v167 + 11);
      *(unsigned char *)(v166 + 12) = *(unsigned char *)(v167 + 12);
      unint64_t v168 = (void *)((v165 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v169 = (void *)((v164 + 47) & 0xFFFFFFFFFFFFFFF8);
      void *v169 = *v168;
      unint64_t v170 = ((unint64_t)v169 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v171 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v170 = *(void *)v171;
      *(unsigned char *)(v170 + 8) = *(unsigned char *)(v171 + 8);
      *(unsigned char *)(v170 + 9) = *(unsigned char *)(v171 + 9);
      unint64_t v172 = (char *)((v515 + v170) & v74);
      unint64_t v173 = (char *)((v515 + v171) & v74);
      unint64_t v174 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
      LODWORD(v164) = v174(v172, 1, v522);
      int v175 = v174(v173, 1, v522);
      if (v164)
      {
        if (!v175)
        {
          (*(void (**)(char *, char *, uint64_t))(v516 + 32))(v172, v173, v522);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v516 + 56))(v172, 0, 1, v522);
LABEL_111:
          unint64_t v101 = v530;
          size_t v97 = v535;
          unsigned int v176 = v537;
          goto LABEL_112;
        }
      }
      else
      {
        if (!v175)
        {
          v162((unint64_t)v172, (unint64_t)v173, v522);
          goto LABEL_111;
        }
        (*(void (**)(char *, uint64_t))(v516 + 8))(v172, v522);
      }
      unsigned int v176 = v537;
      size_t v97 = v535;
      if (v537) {
        size_t v177 = v535;
      }
      else {
        size_t v177 = v535 + 1;
      }
      memcpy(v172, v173, v177);
      unint64_t v101 = v530;
LABEL_112:
      unint64_t v100 = v499;
      if (!v176) {
        ++v97;
      }
      unint64_t v178 = (unint64_t)&v172[v97 + 7];
      long long v179 = (void *)((unint64_t)&v173[v97 + 7] & 0xFFFFFFFFFFFFFFF8);
      unint64_t v180 = (v178 & 0xFFFFFFFFFFFFFFF8) + 15;
      *(void *)(v178 & 0xFFFFFFFFFFFFFFF8) = *v179;
      unint64_t v181 = (v178 & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRelease();
      unint64_t v182 = v180 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v183 = ((unint64_t)v179 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v184 = *(void *)v183;
      *(unsigned char *)(v182 + 8) = *(unsigned char *)(v183 + 8);
      *(void *)unint64_t v182 = v184;
      long long v185 = (void *)(((unint64_t)v179 + 31) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(v181 & 0xFFFFFFFFFFFFFFF8) = *v185;
      swift_bridgeObjectRelease();
      long long v186 = (uint64_t *)(((v181 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v187 = (uint64_t *)(((unint64_t)v185 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v188 = v186[1];
      if ((v188 & 0x3000000000000000) == 0)
      {
        uint64_t v189 = v187[1];
        if ((v189 & 0x3000000000000000) == 0)
        {
          uint64_t v426 = *v186;
          *long long v186 = *v187;
          v186[1] = v189;
          sub_24D400DCC(v426, v188);
          goto LABEL_118;
        }
        sub_24D400DCC(*v186, v188);
      }
      *(_OWORD *)long long v186 = *(_OWORD *)v187;
LABEL_118:
      uint64_t v131 = v501;
      unint64_t v190 = ((unint64_t)v186 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v191 = ((unint64_t)v187 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v192 = *(void *)v191;
      *(unsigned char *)(v190 + 8) = *(unsigned char *)(v191 + 8);
      *(void *)unint64_t v190 = v192;
      *(unsigned char *)(v190 + 9) = *(unsigned char *)(v191 + 9);
      unint64_t v193 = (v190 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v194 = (v191 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v195 = *(_DWORD *)v194;
      *(unsigned char *)(v193 + 4) = *(unsigned char *)(v194 + 4);
      *(_DWORD *)unint64_t v193 = v195;
      unint64_t v196 = (void *)((v190 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v197 = (void *)((v191 + 25) & 0xFFFFFFFFFFFFFFF8);
      void *v196 = *v197;
      v196[1] = v197[1];
      swift_bridgeObjectRelease();
      goto LABEL_119;
    }
    uint64_t v86 = v66;
    int v84 = (*(uint64_t (**)(unint64_t))(v55 + 48))(v85);
    uint64_t v66 = v86;
    uint64_t v59 = (uint64_t)v532;
  }
  else
  {
    unint64_t v83 = *(void *)(v82 + 8);
    if (v83 >= 0xFFFFFFFF) {
      LODWORD(v83) = -1;
    }
    int v84 = v83 + 1;
  }
  unint64_t v81 = v519;
  int v87 = (void *)(((unint64_t)v519 + v66) & 0xFFFFFFFFFFFFFFF8);
  if (!v84)
  {
    if ((v63 & 0x80000000) == 0)
    {
      unint64_t v89 = v87[1];
      if (v89 >= 0xFFFFFFFF) {
        LODWORD(v89) = -1;
      }
      int v80 = v89 + 1;
      goto LABEL_57;
    }
    unint64_t v104 = ((unint64_t)v87 + v68) & v67;
    unint64_t v105 = (v69 + v104) & v74;
    if (v537 > 0x7FFFFFFD)
    {
      unint64_t v147 = v105;
      uint64_t v148 = v66;
      int v149 = (*(uint64_t (**)(unint64_t))(v55 + 48))(v147);
      uint64_t v66 = v148;
      uint64_t v59 = (uint64_t)v532;
      uint64_t v90 = v518;
      if (v149) {
        goto LABEL_58;
      }
LABEL_85:
      int v87 = (void *)(((unint64_t)v81 + v66) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v104 = ((unint64_t)v87 + v68) & v538;
      unint64_t v105 = (v524 + v104) & v74;
      unint64_t v150 = (v90 + v105) & v74;
      goto LABEL_101;
    }
    uint64_t v90 = v518;
    size_t v73 = v497;
    goto LABEL_98;
  }
  if ((v63 & 0x80000000) == 0)
  {
    unint64_t v88 = v87[1];
    if (v88 >= 0xFFFFFFFF) {
      LODWORD(v88) = -1;
    }
    if (v88 == -1) {
      goto LABEL_68;
    }
    goto LABEL_90;
  }
  unint64_t v104 = ((unint64_t)v87 + v68) & v67;
  unint64_t v105 = (v69 + v104) & v74;
  if (v537 > 0x7FFFFFFD)
  {
    unint64_t v106 = v105;
    uint64_t v107 = v66;
    int v108 = (*(uint64_t (**)(unint64_t))(v55 + 48))(v106);
    uint64_t v66 = v107;
    uint64_t v59 = (uint64_t)v532;
    if (!v108)
    {
LABEL_68:
      int v87 = (void *)(((unint64_t)v81 + v66) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v104 = ((unint64_t)v87 + v68) & v538;
      unint64_t v105 = (v524 + v104) & v74;
      unint64_t v109 = (v518 + v105) & v74;
      goto LABEL_69;
    }
    goto LABEL_90;
  }
  uint64_t v90 = v518;
  size_t v73 = v497;
LABEL_87:
  unint64_t v109 = (v90 + v105) & v74;
  unint64_t v151 = *(void *)(((v73 + v109) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v151 >= 0xFFFFFFFF) {
    LODWORD(v151) = -1;
  }
  if ((v151 + 1) >= 2)
  {
LABEL_90:
    uint64_t v152 = 7;
    if (!v537) {
      uint64_t v152 = 8;
    }
    unint64_t v101 = v530;
    unint64_t v100 = v499;
    size_t v102 = v499
         + ((((((((((v152 + v535 + v530) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    if (v537) {
      size_t v97 = v535;
    }
    else {
      size_t v97 = v535 + 1;
    }
    unint64_t v103 = (void *)v59;
LABEL_96:
    memcpy(v103, v81, v102);
    uint64_t v131 = v501;
LABEL_119:
    size_t v146 = v97;
    goto LABEL_120;
  }
LABEL_69:
  uint64_t v110 = v66;
  uint64_t v111 = v59;
  (*(void (**)(uint64_t, const void *, uint64_t))(v526 + 32))(v59, v81, v528);
  uint64_t v112 = (_OWORD *)((v110 + v111) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v112 = *(_OWORD *)v87;
  unint64_t v113 = ((unint64_t)v112 + v68) & v538;
  *(unsigned char *)unint64_t v113 = *(unsigned char *)v104;
  uint64_t v114 = v113 | 4;
  int v115 = *(_DWORD *)(v104 | 4);
  *(unsigned char *)(v114 + 4) = *(unsigned char *)((v104 | 4) + 4);
  *(_DWORD *)uint64_t v114 = v115;
  *(_WORD *)(v113 + 10) = *(_WORD *)(v104 + 10);
  unint64_t v116 = (v524 + v113) & v74;
  uint64_t v117 = *(void (**)(unint64_t, unint64_t, uint64_t))(v55 + 32);
  v117(v116, v105, v522);
  v117((v518 + v116) & v74, v109, v522);
  uint64_t v118 = (unsigned char *)(((v518 + v116) & v74) + v535);
  unsigned char *v118 = *(unsigned char *)(v109 + v535);
  v118[1] = *(unsigned char *)(v109 + v535 + 1);
  v118[2] = *(unsigned char *)(v109 + v535 + 2);
  v118[3] = *(unsigned char *)(v109 + v535 + 3);
  v118[4] = *(unsigned char *)(v109 + v535 + 4);
  unint64_t v119 = (unint64_t)(v118 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v120 = (v109 + v535 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v119 = *(_OWORD *)v120;
  *(unsigned char *)(v119 + 16) = *(unsigned char *)(v120 + 16);
  *(unsigned char *)(v119 + 17) = *(unsigned char *)(v120 + 17);
  *(unsigned char *)(v119 + 18) = *(unsigned char *)(v120 + 18);
  *(unsigned char *)(v119 + 19) = *(unsigned char *)(v120 + 19);
  unint64_t v121 = (v119 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v122 = (v120 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v121 = *(void *)v122;
  *(unsigned char *)(v121 + 8) = *(unsigned char *)(v122 + 8);
  *(unsigned char *)(v121 + 9) = *(unsigned char *)(v122 + 9);
  *(unsigned char *)(v121 + 10) = *(unsigned char *)(v122 + 10);
  *(unsigned char *)(v121 + 11) = *(unsigned char *)(v122 + 11);
  *(unsigned char *)(v121 + 12) = *(unsigned char *)(v122 + 12);
  unint64_t v123 = (void *)((v120 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v124 = (void *)((v119 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v124 = *v123;
  unint64_t v125 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v126 = ((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v125 = *(void *)v126;
  *(unsigned char *)(v125 + 8) = *(unsigned char *)(v126 + 8);
  *(unsigned char *)(v125 + 9) = *(unsigned char *)(v126 + 9);
  unint64_t v127 = (void *)((v515 + v125) & v74);
  unint64_t v128 = (const void *)((v515 + v126) & v74);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v128, 1, v522))
  {
    unsigned int v129 = v537;
    if (v537) {
      size_t v97 = v535;
    }
    else {
      size_t v97 = v535 + 1;
    }
    memcpy(v127, v128, v97);
  }
  else
  {
    v117((unint64_t)v127, (unint64_t)v128, v522);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v127, 0, 1, v522);
    unsigned int v129 = v537;
    if (v537) {
      size_t v97 = v535;
    }
    else {
      size_t v97 = v535 + 1;
    }
  }
  unint64_t v100 = v499;
  uint64_t v131 = v501;
  unint64_t v101 = v530;
  unint64_t v132 = (void *)(((unint64_t)v127 + v97 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v133 = (void *)(((unint64_t)v128 + v97 + 7) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v132 = *v133;
  unint64_t v134 = ((unint64_t)v132 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v135 = ((unint64_t)v133 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v136 = *(void *)v135;
  *(unsigned char *)(v134 + 8) = *(unsigned char *)(v135 + 8);
  *(void *)unint64_t v134 = v136;
  unint64_t v137 = (void *)(((unint64_t)v132 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v138 = (void *)(((unint64_t)v133 + 31) & 0xFFFFFFFFFFFFFFF8);
  void *v137 = *v138;
  int v139 = (_OWORD *)(((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v140 = (_OWORD *)(((unint64_t)v138 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v139 = *v140;
  unint64_t v141 = ((unint64_t)v139 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v142 = ((unint64_t)v140 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v143 = *(void *)v142;
  *(unsigned char *)(v141 + 8) = *(unsigned char *)(v142 + 8);
  *(void *)unint64_t v141 = v143;
  *(unsigned char *)(v141 + 9) = *(unsigned char *)(v142 + 9);
  unint64_t v144 = (v141 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v145 = (v142 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v136) = *(_DWORD *)v145;
  *(unsigned char *)(v144 + 4) = *(unsigned char *)(v145 + 4);
  *(_DWORD *)unint64_t v144 = v136;
  *(_OWORD *)((v141 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v142 + 25) & 0xFFFFFFFFFFFFFFF8);
  size_t v146 = v535;
  if (!v129) {
    goto LABEL_119;
  }
LABEL_120:
  unint64_t v504 = v101 + 7;
  unint64_t v198 = (((((((((v101 + 7 + v146) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v503 = swift_getAssociatedTypeWitness();
  uint64_t v199 = *(void *)(v503 - 8);
  int v200 = *(_DWORD *)(v199 + 80) & 0xF8;
  uint64_t v201 = swift_getAssociatedTypeWitness();
  uint64_t v202 = *(void *)(v201 - 8);
  uint64_t v203 = *(unsigned __int8 *)(v202 + 80);
  uint64_t v204 = v200 | v203 | 7;
  uint64_t v205 = v100 + (v131 | v204) + v198 + 16;
  uint64_t v206 = (char *)(((unint64_t)v532 + v205) & ~(v131 | v204));
  uint64_t v207 = (char *)(((unint64_t)v519 + v205) & ~(v131 | v204));
  uint64_t v502 = v199;
  uint64_t v208 = *(unsigned int *)(v199 + 84);
  uint64_t v209 = *(unsigned int *)(v202 + 84);
  if (v208 <= v209) {
    unsigned int v210 = *(_DWORD *)(v202 + 84);
  }
  else {
    unsigned int v210 = *(_DWORD *)(v199 + 84);
  }
  if (v210 <= 0x7FFFFFFE) {
    unsigned int v211 = 2147483646;
  }
  else {
    unsigned int v211 = v210;
  }
  if (v211 <= v513) {
    unsigned int v212 = v513;
  }
  else {
    unsigned int v212 = v211;
  }
  if (v212 <= v505) {
    unsigned int v213 = v505;
  }
  else {
    unsigned int v213 = v212;
  }
  if (v213 <= 0x7FFFFFFF) {
    int v214 = 0x7FFFFFFF;
  }
  else {
    int v214 = v213;
  }
  uint64_t v215 = ~v509;
  uint64_t v216 = v507 + v509;
  uint64_t v217 = ~v204;
  uint64_t v218 = v507 + v204;
  uint64_t v219 = *(void *)(v199 + 64) + 7;
  uint64_t v220 = ~v203;
  uint64_t v221 = v203 + 8;
  unint64_t v222 = ((((*(void *)(*(void *)(v201 - 8) + 64) + 7 + ((v203 + 8 + (v219 & 0xFFFFFFFFFFFFFFF8)) & ~v203)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v223 = v511 + 16;
  uint64_t v224 = v511 + 16 + v222 + ((v507 + v204 + ((v507 + v509) & ~v509)) & ~v204);
  uint64_t v533 = v206;
  uint64_t v520 = v207;
  uint64_t v510 = v219;
  uint64_t v512 = v224 & v538;
  uint64_t v506 = v220;
  uint64_t v508 = v223;
  uint64_t v500 = v201;
  uint64_t v493 = *(void *)(*(void *)(v201 - 8) + 64) + 7;
  unint64_t v494 = v222;
  uint64_t v495 = v221;
  uint64_t v496 = *(void *)(v201 - 8);
  if (v513 == v214)
  {
    uint64_t v225 = *(uint64_t (**)(char *))(v526 + 48);
    uint64_t v226 = ~v204;
    uint64_t v227 = v218;
    uint64_t v228 = v215;
    int v492 = v225(v206);
    int v229 = ((uint64_t (*)(char *, void, uint64_t))v225)(v207, v513, v528);
    uint64_t v215 = v228;
    uint64_t v218 = v227;
    uint64_t v217 = v226;
    uint64_t v231 = v516;
    uint64_t v230 = v517;
    if (v492)
    {
      if (!v229) {
        goto LABEL_191;
      }
      goto LABEL_186;
    }
    if (!v229) {
      goto LABEL_233;
    }
    goto LABEL_211;
  }
  unint64_t v232 = (v218 + ((unint64_t)&v206[v216] & v215)) & v217;
  if (v211 != v214)
  {
    unint64_t v238 = v222 + v232;
    if ((v213 & 0x80000000) == 0)
    {
      unint64_t v239 = *(void *)(v238 + 8);
      if (v239 >= 0xFFFFFFFF) {
        LODWORD(v239) = -1;
      }
      if (v239 != -1) {
        goto LABEL_149;
      }
LABEL_171:
      unint64_t v264 = (unint64_t)&v520[v216] & v215;
      unint64_t v265 = (v218 + v264) & v217;
      if (v211 == v214)
      {
        if (v208 == v211)
        {
          uint64_t v266 = v503;
          uint64_t v267 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v502 + 48);
          unint64_t v268 = (v218 + v264) & v217;
          uint64_t v269 = v208;
LABEL_208:
          uint64_t v356 = v217;
          uint64_t v357 = v218;
          uint64_t v358 = v215;
          int v272 = v267(v268, v269, v266);
          uint64_t v215 = v358;
          uint64_t v218 = v357;
          uint64_t v217 = v356;
LABEL_209:
          uint64_t v231 = v516;
LABEL_210:
          uint64_t v207 = v520;
          if (!v272)
          {
LABEL_233:
            unint64_t v264 = (unint64_t)&v207[v216] & v215;
            unint64_t v265 = (v218 + v264) & v217;
            goto LABEL_234;
          }
LABEL_211:
          uint64_t v359 = *(void (**)(char *, uint64_t))(v526 + 8);
          uint64_t v360 = v217;
          uint64_t v361 = v218;
          uint64_t v362 = v215;
          v359(v533, v528);
          unint64_t v363 = (unint64_t)&v533[v216] & v362;
          v359((char *)v363, v528);
          unint64_t v364 = (v361 + v363) & v360;
          (*(void (**)(unint64_t, uint64_t))(v502 + 8))(v364, v503);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v496 + 8))((v495 + ((v510 + v364) & 0xFFFFFFFFFFFFFFF8)) & v506, v500);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v365 = (v508 + v494 + v364) & v538;
          uint64_t v366 = *(void (**)(unint64_t, uint64_t))(v231 + 8);
          v366((v524 + v365) & v498, v522);
          unint64_t v367 = (v518 + ((v524 + v365) & v498)) & v498;
          v366(v367, v522);
          swift_bridgeObjectRelease();
          unint64_t v368 = (v515
                + ((((((v497 + v367) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v498;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v231 + 48))(v368, 1, v522)) {
            v366(v368, v522);
          }
          if (v537) {
            size_t v285 = v535;
          }
          else {
            size_t v285 = v535 + 1;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v369 = (uint64_t *)((((((v285 + 7 + v368) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v370 = v369[1];
          uint64_t v283 = v512;
          if ((v370 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v369, v370);
          }
          swift_bridgeObjectRelease();
          unint64_t v371 = (((((((((v285 + 7 + v530) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 19) & 0xFFFFFFFFFFFFFFF8)
                + 25) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v372 = v371 + v365;
          uint64_t v373 = v371 + v365 + 16;
          long long v374 = *(void **)(v372 + 32);
          int v375 = -1;
          if ((unint64_t)v374 < 0xFFFFFFFF) {
            int v375 = (int)v374;
          }
          uint64_t v230 = v517;
          uint64_t v207 = v520;
          if (v375 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v373 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_24D466534(*(void *)((((v373 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v373 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          size_t v284 = ((((v371 + v512 + 327) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
          goto LABEL_225;
        }
        uint64_t v273 = (unint64_t *)((v510 + v265) & 0xFFFFFFFFFFFFFFF8);
        if (v210 > 0x7FFFFFFE)
        {
          unint64_t v268 = ((unint64_t)v273 + v495) & v506;
          uint64_t v267 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v496 + 48);
          uint64_t v269 = v209;
          uint64_t v266 = v500;
          goto LABEL_208;
        }
        unint64_t v274 = *v273;
      }
      else
      {
        unint64_t v270 = v222 + v265;
        if ((v213 & 0x80000000) == 0)
        {
          unint64_t v271 = *(void *)(v270 + 8);
          if (v271 >= 0xFFFFFFFF) {
            LODWORD(v271) = -1;
          }
          int v272 = v271 + 1;
          goto LABEL_209;
        }
        uint64_t v275 = (v524 + ((v508 + v270) & v538)) & v498;
        if (v537 > 0x7FFFFFFD)
        {
          uint64_t v231 = v516;
          uint64_t v276 = v217;
          uint64_t v277 = v218;
          uint64_t v278 = v215;
          int v272 = (*(uint64_t (**)(uint64_t))(v516 + 48))(v275);
          uint64_t v215 = v278;
          uint64_t v218 = v277;
          uint64_t v217 = v276;
          goto LABEL_210;
        }
        unint64_t v274 = *(void *)(((v497 + ((v518 + v275) & v498)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v274 >= 0xFFFFFFFF) {
        LODWORD(v274) = -1;
      }
      uint64_t v231 = v516;
      if ((v274 + 1) < 2)
      {
LABEL_234:
        uint64_t v388 = *(void (**)(void))(v526 + 40);
        uint64_t v389 = v217;
        uint64_t v390 = v218;
        uint64_t v391 = v215;
        unint64_t v392 = v265;
        v388();
        unint64_t v393 = (unint64_t)&v533[v216] & v391;
        ((void (*)(unint64_t, unint64_t, uint64_t))v388)(v393, v264, v528);
        unint64_t v394 = (v390 + v393) & v389;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v502 + 40))(v394, v392, v503);
        v395 = (void *)((v510 + v394) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v396 = (void *)((v510 + v392) & 0xFFFFFFFFFFFFFFF8);
        void *v395 = *v396;
        swift_bridgeObjectRelease();
        unint64_t v397 = ((unint64_t)v395 + v495) & v506;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v496 + 40))(v397, ((unint64_t)v396 + v495) & v506, v500);
        unint64_t v398 = (void *)((v493 + v397) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v399 = (v493 + (((unint64_t)v396 + v495) & v506)) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v400 = *(void *)v399;
        v399 += 15;
        *unint64_t v398 = v400;
        swift_bridgeObjectRelease();
        int v401 = (void *)(((unint64_t)v398 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v401 = *(void *)(v399 & 0xFFFFFFFFFFFFFFF8);
        v401[1] = *(void *)((v399 & 0xFFFFFFFFFFFFFFF8) + 8);
        swift_bridgeObjectRelease();
        v402 = (void *)(v494 + v394);
        void *v402 = *(void *)(v494 + v392);
        v402[1] = *(void *)(v494 + v392 + 8);
        swift_bridgeObjectRelease();
        unint64_t v403 = (v508 + v494 + v394) & v538;
        unint64_t v404 = (v508 + v494 + v392) & v538;
        *(unsigned char *)unint64_t v403 = *(unsigned char *)v404;
        uint64_t v405 = v403 | 4;
        int v406 = *(_DWORD *)(v404 | 4);
        *(unsigned char *)(v405 + 4) = *(unsigned char *)((v404 | 4) + 4);
        *(_DWORD *)uint64_t v405 = v406;
        *(_WORD *)(v403 + 10) = *(_WORD *)(v404 + 0xA);
        uint64_t v407 = *(void (**)(unint64_t, unint64_t, uint64_t))(v516 + 40);
        v407((v524 + v403) & v498, (v524 + v404) & v498, v522);
        unint64_t v408 = (v518 + ((v524 + v403) & v498)) & v498;
        unint64_t v409 = (v518 + ((v524 + v404) & v498)) & v498;
        v407(v408, v409, v522);
        uint64_t v410 = (unsigned char *)(v408 + v535);
        unsigned char *v410 = *(unsigned char *)(v409 + v535);
        v410[1] = *(unsigned char *)(v409 + v535 + 1);
        v410[2] = *(unsigned char *)(v409 + v535 + 2);
        v410[3] = *(unsigned char *)(v409 + v535 + 3);
        v410[4] = *(unsigned char *)(v409 + v535 + 4);
        unint64_t v411 = (v408 + v535 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v412 = (v409 + v535 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v411 = *(void *)v412;
        *(void *)(v411 + 8) = *(void *)(v412 + 8);
        swift_bridgeObjectRelease();
        *(unsigned char *)(v411 + 16) = *(unsigned char *)(v412 + 16);
        *(unsigned char *)(v411 + 17) = *(unsigned char *)(v412 + 17);
        *(unsigned char *)(v411 + 18) = *(unsigned char *)(v412 + 18);
        *(unsigned char *)(v411 + 19) = *(unsigned char *)(v412 + 19);
        unint64_t v413 = (v411 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v414 = (v412 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v413 = *(void *)v414;
        *(unsigned char *)(v413 + 8) = *(unsigned char *)(v414 + 8);
        *(unsigned char *)(v413 + 9) = *(unsigned char *)(v414 + 9);
        *(unsigned char *)(v413 + 10) = *(unsigned char *)(v414 + 10);
        *(unsigned char *)(v413 + 11) = *(unsigned char *)(v414 + 11);
        *(unsigned char *)(v413 + 12) = *(unsigned char *)(v414 + 12);
        uint64_t v415 = (void *)((v412 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v416 = (void *)((v411 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v416 = *v415;
        unint64_t v417 = ((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v418 = ((unint64_t)v415 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v417 = *(void *)v418;
        *(unsigned char *)(v417 + 8) = *(unsigned char *)(v418 + 8);
        *(unsigned char *)(v417 + 9) = *(unsigned char *)(v418 + 9);
        unint64_t v419 = (char *)((v515 + v417) & v498);
        uint64_t v420 = (char *)((v515 + v418) & v498);
        int v421 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v516 + 48);
        LODWORD(v389) = v421(v419, 1, v522);
        int v422 = v421(v420, 1, v522);
        if (v389)
        {
          if (!v422)
          {
            (*(void (**)(char *, char *, uint64_t))(v516 + 32))(v419, v420, v522);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v516 + 56))(v419, 0, 1, v522);
LABEL_245:
            size_t v424 = v535;
            unsigned int v423 = v537;
            goto LABEL_246;
          }
        }
        else
        {
          if (!v422)
          {
            v407((unint64_t)v419, (unint64_t)v420, v522);
            goto LABEL_245;
          }
          (*(void (**)(char *, uint64_t))(v516 + 8))(v419, v522);
        }
        unsigned int v423 = v537;
        size_t v424 = v535;
        if (v537) {
          size_t v425 = v535;
        }
        else {
          size_t v425 = v535 + 1;
        }
        memcpy(v419, v420, v425);
LABEL_246:
        if (v423) {
          size_t v285 = v424;
        }
        else {
          size_t v285 = v424 + 1;
        }
        unint64_t v427 = (unint64_t)&v419[v285 + 7];
        unint64_t v428 = (void *)((unint64_t)&v420[v285 + 7] & 0xFFFFFFFFFFFFFFF8);
        unint64_t v429 = (v427 & 0xFFFFFFFFFFFFFFF8) + 15;
        *(void *)(v427 & 0xFFFFFFFFFFFFFFF8) = *v428;
        unint64_t v430 = (v427 & 0xFFFFFFFFFFFFFFF8) + 31;
        swift_bridgeObjectRelease();
        unint64_t v431 = v429 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v432 = ((unint64_t)v428 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v433 = *(void *)v432;
        *(unsigned char *)(v431 + 8) = *(unsigned char *)(v432 + 8);
        *(void *)unint64_t v431 = v433;
        unint64_t v434 = (void *)(((unint64_t)v428 + 31) & 0xFFFFFFFFFFFFFFF8);
        *(void *)(v430 & 0xFFFFFFFFFFFFFFF8) = *v434;
        swift_bridgeObjectRelease();
        unint64_t v435 = (uint64_t *)(((v430 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v436 = ((unint64_t)v434 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v437 = v435[1];
        if ((v437 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v435 = *(_OWORD *)v436;
          unint64_t v438 = v530;
          uint64_t v207 = v520;
        }
        else
        {
          uint64_t v439 = *(void *)(v436 + 8);
          unint64_t v438 = v530;
          uint64_t v207 = v520;
          if ((v439 & 0x3000000000000000) != 0)
          {
            sub_24D400DCC(*v435, v437);
            *(_OWORD *)unint64_t v435 = *(_OWORD *)v436;
          }
          else
          {
            uint64_t v440 = *v435;
            *unint64_t v435 = *(void *)v436;
            v435[1] = v439;
            sub_24D400DCC(v440, v437);
          }
        }
        unint64_t v441 = ((unint64_t)v435 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v442 = (v436 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v443 = *(void *)v442;
        *(unsigned char *)(v441 + 8) = *(unsigned char *)(v442 + 8);
        *(void *)unint64_t v441 = v443;
        *(unsigned char *)(v441 + 9) = *(unsigned char *)(v442 + 9);
        unint64_t v444 = (v441 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v445 = (v442 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v446 = *(_DWORD *)v445;
        *(unsigned char *)(v444 + 4) = *(unsigned char *)(v445 + 4);
        *(_DWORD *)unint64_t v444 = v446;
        v447 = (void *)((v441 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v448 = (void *)((v442 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v447 = *v448;
        v447[1] = v448[1];
        swift_bridgeObjectRelease();
        unint64_t v452 = ((((((((((v285 + 7 + v438) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 19) & 0xFFFFFFFFFFFFFFF8)
               + 25) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        unint64_t v449 = v403 + v452;
        unint64_t v450 = (long long *)(v404 + v452);
        unint64_t v451 = *(void **)(v449 + 16);
        LODWORD(v452) = -1;
        if ((unint64_t)v451 < 0xFFFFFFFF) {
          unint64_t v452 = *(void *)(v449 + 16);
        }
        if ((int)v452 - 1 >= 0)
        {
          long long v453 = *v450;
          long long v454 = v450[1];
          long long v455 = v450[3];
          *(_OWORD *)(v449 + 32) = v450[2];
          *(_OWORD *)(v449 + 48) = v455;
          *(_OWORD *)unint64_t v449 = v453;
          *(_OWORD *)(v449 + 16) = v454;
          long long v456 = v450[4];
          long long v457 = v450[5];
          long long v458 = v450[7];
          *(_OWORD *)(v449 + 96) = v450[6];
          *(_OWORD *)(v449 + 112) = v458;
          *(_OWORD *)(v449 + 64) = v456;
          *(_OWORD *)(v449 + 80) = v457;
          long long v459 = v450[8];
          long long v460 = v450[9];
          long long v461 = v450[11];
          *(_OWORD *)(v449 + 160) = v450[10];
          *(_OWORD *)(v449 + 176) = v461;
          *(_OWORD *)(v449 + 128) = v459;
          *(_OWORD *)(v449 + 144) = v460;
          long long v462 = v450[12];
          long long v463 = v450[13];
          long long v464 = v450[14];
          *(void *)(v449 + 240) = *((void *)v450 + 30);
          *(_OWORD *)(v449 + 208) = v463;
          *(_OWORD *)(v449 + 224) = v464;
          *(_OWORD *)(v449 + 192) = v462;
          uint64_t v283 = v512;
LABEL_275:
          uint64_t v481 = (_OWORD *)((v449 + 255) & 0xFFFFFFFFFFFFFFF8);
          id v482 = (long long *)(((unint64_t)v450 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v483 = *v482;
          *(_OWORD *)((char *)v481 + 9) = *(long long *)((char *)v482 + 9);
          *uint64_t v481 = v483;
          unint64_t v484 = (v449 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v485 = ((unint64_t)v450 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v486 = *(_OWORD *)v485;
          *(unsigned char *)(v484 + 16) = *(unsigned char *)(v485 + 16);
          *(_OWORD *)unint64_t v484 = v486;
          long long v487 = (void *)((v449 + 311) & 0xFFFFFFFFFFFFFFF8);
          long long v488 = (void *)(((unint64_t)v450 + 311) & 0xFFFFFFFFFFFFFFF8);
          void *v487 = *v488;
          long long v489 = (uint64_t *)(((unint64_t)v487 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v490 = *v489;
          unint64_t v491 = v489[1];
          *(_OWORD *)long long v489 = *(_OWORD *)(((unint64_t)v488 + 15) & 0xFFFFFFFFFFFFFFF8);
          sub_24D466534(v490, v491);
          unint64_t v318 = v504;
          uint64_t v230 = v517;
          goto LABEL_226;
        }
        unint64_t v465 = *((void *)v450 + 2);
        if (v465 >= 0xFFFFFFFF) {
          LODWORD(v465) = -1;
        }
        uint64_t v283 = v512;
        if ((int)v465 - 1 >= 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v449 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v466 = *v450;
          long long v467 = v450[1];
          long long v468 = v450[3];
          *(_OWORD *)(v449 + 32) = v450[2];
          *(_OWORD *)(v449 + 48) = v468;
          *(_OWORD *)unint64_t v449 = v466;
          *(_OWORD *)(v449 + 16) = v467;
          long long v469 = v450[4];
          long long v470 = v450[5];
          long long v471 = v450[7];
          *(_OWORD *)(v449 + 96) = v450[6];
          *(_OWORD *)(v449 + 112) = v471;
          *(_OWORD *)(v449 + 64) = v469;
          *(_OWORD *)(v449 + 80) = v470;
          long long v472 = v450[8];
          long long v473 = v450[9];
          long long v474 = v450[11];
          *(_OWORD *)(v449 + 160) = v450[10];
          *(_OWORD *)(v449 + 176) = v474;
          *(_OWORD *)(v449 + 128) = v472;
          *(_OWORD *)(v449 + 144) = v473;
          long long v475 = v450[12];
          long long v476 = v450[13];
          long long v477 = v450[14];
          *(void *)(v449 + 240) = *((void *)v450 + 30);
          *(_OWORD *)(v449 + 208) = v476;
          *(_OWORD *)(v449 + 224) = v477;
          *(_OWORD *)(v449 + 192) = v475;
          goto LABEL_275;
        }
        *(void *)unint64_t v449 = *(void *)v450;
        *(unsigned char *)(v449 + 8) = *((unsigned char *)v450 + 8);
        *(unsigned char *)(v449 + 9) = *((unsigned char *)v450 + 9);
        *(void *)(v449 + 16) = *((void *)v450 + 2);

        id v478 = *(void **)(v449 + 24);
        *(void *)(v449 + 24) = *((void *)v450 + 3);

        *(unsigned char *)(v449 + 32) = *((unsigned char *)v450 + 32);
        *(unsigned char *)(v449 + 33) = *((unsigned char *)v450 + 33);
        *(unsigned char *)(v449 + 34) = *((unsigned char *)v450 + 34);
        *(void *)(v449 + 40) = *((void *)v450 + 5);
        *(void *)(v449 + 48) = *((void *)v450 + 6);
        swift_bridgeObjectRelease();
        *(void *)(v449 + 56) = *((void *)v450 + 7);
        *(void *)(v449 + 64) = *((void *)v450 + 8);
        swift_bridgeObjectRelease();
        *(unsigned char *)(v449 + 72) = *((unsigned char *)v450 + 72);
        *(void *)(v449 + 80) = *((void *)v450 + 10);
        *(void *)(v449 + 88) = *((void *)v450 + 11);
        swift_bridgeObjectRelease();
        v479 = *(void **)(v449 + 96);
        *(void *)(v449 + 96) = *((void *)v450 + 12);

        *(unsigned char *)(v449 + 104) = *((unsigned char *)v450 + 104);
        *(unsigned char *)(v449 + 105) = *((unsigned char *)v450 + 105);
        *(void *)(v449 + 112) = *((void *)v450 + 14);
        *(void *)(v449 + 120) = *((void *)v450 + 15);
        swift_bridgeObjectRelease();
        *(void *)(v449 + 128) = *((void *)v450 + 16);
        *(void *)(v449 + 136) = *((void *)v450 + 17);
        swift_bridgeObjectRelease();
        *(void *)(v449 + 144) = *((void *)v450 + 18);
        *(void *)(v449 + 152) = *((void *)v450 + 19);
        swift_bridgeObjectRelease();
        *(void *)(v449 + 160) = *((void *)v450 + 20);
        *(void *)(v449 + 168) = *((void *)v450 + 21);
        swift_bridgeObjectRelease();
        *(unsigned char *)(v449 + 176) = *((unsigned char *)v450 + 176);
        *(void *)(v449 + 184) = *((void *)v450 + 23);
        swift_bridgeObjectRelease();
        uint64_t v480 = *((void *)v450 + 24);
        if (*(void *)(v449 + 192))
        {
          if (v480)
          {
            *(void *)(v449 + 192) = v480;
            swift_bridgeObjectRelease();
            *(void *)(v449 + 200) = *((void *)v450 + 25);
            swift_bridgeObjectRelease();
LABEL_274:
            *(void *)(v449 + 208) = *((void *)v450 + 26);
            *(void *)(v449 + 216) = *((void *)v450 + 27);
            *(void *)(v449 + 224) = *((void *)v450 + 28);
            swift_bridgeObjectRelease();
            *(void *)(v449 + 232) = *((void *)v450 + 29);
            *(void *)(v449 + 240) = *((void *)v450 + 30);
            swift_bridgeObjectRelease();
            goto LABEL_275;
          }
          sub_24D5F9A0C(v449 + 192);
        }
        *(_OWORD *)(v449 + 192) = v450[12];
        goto LABEL_274;
      }
      goto LABEL_211;
    }
    unint64_t v251 = (v524 + ((v223 + v238) & v538)) & v498;
    if (v537 <= 0x7FFFFFFD)
    {
      unint64_t v250 = *(void *)(((v497 + ((v518 + v251) & v498)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_168:
      if (v250 >= 0xFFFFFFFF) {
        LODWORD(v250) = -1;
      }
      if ((v250 + 1) >= 2) {
        goto LABEL_149;
      }
      goto LABEL_171;
    }
    unint64_t v252 = *(uint64_t (**)(unint64_t))(v516 + 48);
LABEL_163:
    unint64_t v255 = v222;
    uint64_t v256 = ~v204;
    uint64_t v257 = v218;
    uint64_t v258 = v215;
    int v259 = v252(v251);
    uint64_t v215 = v258;
    uint64_t v218 = v257;
    uint64_t v217 = v256;
    unint64_t v222 = v255;
    if (v259) {
      goto LABEL_149;
    }
    goto LABEL_171;
  }
  if (v208 != v211)
  {
    int v249 = (unint64_t *)((v219 + v232) & 0xFFFFFFFFFFFFFFF8);
    if (v210 <= 0x7FFFFFFE)
    {
      unint64_t v250 = *v249;
      goto LABEL_168;
    }
    unint64_t v251 = ((unint64_t)v249 + v221) & v220;
    unint64_t v252 = *(uint64_t (**)(unint64_t))(v202 + 48);
    goto LABEL_163;
  }
  unint64_t v233 = v222;
  uint64_t v234 = ~v204;
  uint64_t v235 = v218;
  uint64_t v236 = v215;
  int v237 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v502 + 48))(v232, v208, v503);
  uint64_t v215 = v236;
  uint64_t v218 = v235;
  uint64_t v217 = v234;
  unint64_t v222 = v233;
  if (!v237) {
    goto LABEL_171;
  }
LABEL_149:
  unint64_t v240 = (unint64_t)&v520[v216] & v215;
  unint64_t v241 = (v218 + v240) & v217;
  if (v211 == v214)
  {
    if (v208 == v211)
    {
      uint64_t v242 = v503;
      unint64_t v243 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v502 + 48);
      unint64_t v244 = (v218 + v240) & v217;
      uint64_t v245 = v208;
LABEL_183:
      uint64_t v279 = v217;
      uint64_t v280 = v218;
      uint64_t v281 = v215;
      int v248 = v243(v244, v245, v242);
      uint64_t v215 = v281;
      uint64_t v218 = v280;
      uint64_t v217 = v279;
LABEL_184:
      uint64_t v231 = v516;
      uint64_t v230 = v517;
LABEL_185:
      uint64_t v207 = v520;
      if (!v248)
      {
LABEL_191:
        unint64_t v240 = (unint64_t)&v207[v216] & v215;
        unint64_t v241 = (v218 + v240) & v217;
        goto LABEL_192;
      }
      goto LABEL_186;
    }
    uint64_t v253 = (unint64_t *)((v510 + v241) & 0xFFFFFFFFFFFFFFF8);
    if (v210 > 0x7FFFFFFE)
    {
      unint64_t v244 = ((unint64_t)v253 + v495) & v506;
      unint64_t v243 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v496 + 48);
      uint64_t v245 = v209;
      uint64_t v242 = v500;
      goto LABEL_183;
    }
    unint64_t v254 = *v253;
  }
  else
  {
    unint64_t v246 = v222 + v241;
    if ((v213 & 0x80000000) == 0)
    {
      unint64_t v247 = *(void *)(v246 + 8);
      if (v247 >= 0xFFFFFFFF) {
        LODWORD(v247) = -1;
      }
      int v248 = v247 + 1;
      goto LABEL_184;
    }
    uint64_t v260 = (v524 + ((v508 + v246) & v538)) & v498;
    if (v537 > 0x7FFFFFFD)
    {
      uint64_t v231 = v516;
      uint64_t v261 = v217;
      uint64_t v262 = v218;
      uint64_t v263 = v215;
      int v248 = (*(uint64_t (**)(uint64_t))(v516 + 48))(v260);
      uint64_t v215 = v263;
      uint64_t v218 = v262;
      uint64_t v217 = v261;
      uint64_t v230 = v517;
      goto LABEL_185;
    }
    unint64_t v254 = *(void *)(((v497 + ((v518 + v260) & v498)) & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  if (v254 >= 0xFFFFFFFF) {
    LODWORD(v254) = -1;
  }
  uint64_t v231 = v516;
  uint64_t v230 = v517;
  uint64_t v207 = v520;
  if ((v254 + 1) >= 2)
  {
LABEL_186:
    uint64_t v282 = 7;
    if (!v537) {
      uint64_t v282 = 8;
    }
    uint64_t v283 = v512;
    size_t v284 = ((((((((((((((v282 + v535 + v530) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 19) & 0xFFFFFFFFFFFFFFF8)
               + 25) & 0xFFFFFFFFFFFFFFF8)
             + v512
             + 327) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    if (v537) {
      size_t v285 = v535;
    }
    else {
      size_t v285 = v535 + 1;
    }
LABEL_225:
    memcpy(v533, v207, v284);
    unint64_t v318 = v504;
LABEL_226:
    size_t v317 = v285;
    goto LABEL_227;
  }
LABEL_192:
  unint64_t v514 = v241;
  uint64_t v286 = *(void (**)(void))(v526 + 32);
  uint64_t v287 = v217;
  uint64_t v288 = v218;
  uint64_t v289 = v215;
  v286();
  unint64_t v290 = (unint64_t)&v533[v216] & v289;
  ((void (*)(unint64_t, unint64_t, uint64_t))v286)(v290, v240, v528);
  unint64_t v291 = (v288 + v290) & v287;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v502 + 32))(v291, v514, v503);
  uint64_t v292 = (void *)((v510 + v291) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v293 = (void *)((v510 + v514) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v292 = *v293;
  unint64_t v294 = ((unint64_t)v292 + v495) & v506;
  unint64_t v295 = ((unint64_t)v293 + v495) & v506;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v496 + 32))(v294, v295, v500);
  size_t v296 = (void *)((v493 + v294) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v297 = (void *)((v493 + v295) & 0xFFFFFFFFFFFFFFF8);
  void *v296 = *v297;
  *(_OWORD *)(((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_OWORD *)(v494 + v291) = *(_OWORD *)(v494 + v514);
  unint64_t v298 = (v508 + v494 + v291) & v538;
  unint64_t v299 = (v508 + v494 + v514) & v538;
  *(unsigned char *)unint64_t v298 = *(unsigned char *)v299;
  uint64_t v300 = v298 | 4;
  int v301 = *(_DWORD *)(v299 | 4);
  *(unsigned char *)(v300 + 4) = *(unsigned char *)((v299 | 4) + 4);
  *(_DWORD *)uint64_t v300 = v301;
  *(_WORD *)(v298 + 10) = *(_WORD *)(v299 + 0xA);
  unint64_t v302 = *(void (**)(unint64_t, unint64_t, uint64_t))(v231 + 32);
  v302((v524 + v298) & v498, (v524 + v299) & v498, v522);
  unint64_t v303 = (v518 + ((v524 + v298) & v498)) & v498;
  unint64_t v304 = (v518 + ((v524 + v299) & v498)) & v498;
  v302(v303, v304, v522);
  unint64_t v305 = (unsigned char *)(v303 + v535);
  unsigned char *v305 = *(unsigned char *)(v304 + v535);
  v305[1] = *(unsigned char *)(v304 + v535 + 1);
  v305[2] = *(unsigned char *)(v304 + v535 + 2);
  v305[3] = *(unsigned char *)(v304 + v535 + 3);
  v305[4] = *(unsigned char *)(v304 + v535 + 4);
  unint64_t v306 = (v303 + v535 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v307 = (v304 + v535 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v306 = *(_OWORD *)v307;
  *(unsigned char *)(v306 + 16) = *(unsigned char *)(v307 + 16);
  *(unsigned char *)(v306 + 17) = *(unsigned char *)(v307 + 17);
  *(unsigned char *)(v306 + 18) = *(unsigned char *)(v307 + 18);
  *(unsigned char *)(v306 + 19) = *(unsigned char *)(v307 + 19);
  unint64_t v308 = (v306 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v309 = (v307 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v308 = *(void *)v309;
  *(unsigned char *)(v308 + 8) = *(unsigned char *)(v309 + 8);
  *(unsigned char *)(v308 + 9) = *(unsigned char *)(v309 + 9);
  *(unsigned char *)(v308 + 10) = *(unsigned char *)(v309 + 10);
  *(unsigned char *)(v308 + 11) = *(unsigned char *)(v309 + 11);
  *(unsigned char *)(v308 + 12) = *(unsigned char *)(v309 + 12);
  unint64_t v310 = (void *)((v307 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v311 = (void *)((v306 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v311 = *v310;
  unint64_t v312 = ((unint64_t)v311 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v313 = ((unint64_t)v310 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v312 = *(void *)v313;
  *(unsigned char *)(v312 + 8) = *(unsigned char *)(v313 + 8);
  *(unsigned char *)(v312 + 9) = *(unsigned char *)(v313 + 9);
  uint64_t v314 = (void *)((v515 + v312) & v498);
  uint64_t v315 = (const void *)((v515 + v313) & v498);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v231 + 48))(v315, 1, v522))
  {
    unsigned int v316 = v537;
    if (v537) {
      size_t v285 = v535;
    }
    else {
      size_t v285 = v535 + 1;
    }
    memcpy(v314, v315, v285);
  }
  else
  {
    v302((unint64_t)v314, (unint64_t)v315, v522);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v231 + 56))(v314, 0, 1, v522);
    unsigned int v316 = v537;
    if (v537) {
      size_t v285 = v535;
    }
    else {
      size_t v285 = v535 + 1;
    }
  }
  size_t v317 = v535;
  unint64_t v318 = v504;
  uint64_t v207 = v520;
  uint64_t v283 = v512;
  uint64_t v319 = (void *)(((unint64_t)v314 + v285 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v320 = (void *)(((unint64_t)v315 + v285 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v319 = *v320;
  unint64_t v321 = ((unint64_t)v319 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v322 = ((unint64_t)v320 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v323 = *(void *)v322;
  *(unsigned char *)(v321 + 8) = *(unsigned char *)(v322 + 8);
  *(void *)unint64_t v321 = v323;
  unint64_t v324 = (void *)(((unint64_t)v319 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v325 = (void *)(((unint64_t)v320 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v324 = *v325;
  uint64_t v326 = (_OWORD *)(((unint64_t)v324 + 15) & 0xFFFFFFFFFFFFFFF8);
  v327 = (_OWORD *)(((unint64_t)v325 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v326 = *v327;
  unint64_t v328 = ((unint64_t)v326 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v329 = ((unint64_t)v327 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v330 = *(void *)v329;
  *(unsigned char *)(v328 + 8) = *(unsigned char *)(v329 + 8);
  *(void *)unint64_t v328 = v330;
  *(unsigned char *)(v328 + 9) = *(unsigned char *)(v329 + 9);
  unint64_t v331 = (v328 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v332 = (v329 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v323) = *(_DWORD *)v332;
  *(unsigned char *)(v331 + 4) = *(unsigned char *)(v332 + 4);
  *(_DWORD *)unint64_t v331 = v323;
  *(_OWORD *)((v328 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v329 + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v333 = ((((((((((v285 + 7 + v530) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v334 = v298 + v333;
  uint64_t v335 = (long long *)(v299 + v333);
  long long v336 = v335[7];
  long long v338 = v335[4];
  long long v337 = v335[5];
  *(_OWORD *)(v334 + 96) = v335[6];
  *(_OWORD *)(v334 + 112) = v336;
  *(_OWORD *)(v334 + 64) = v338;
  *(_OWORD *)(v334 + 80) = v337;
  long long v339 = v335[11];
  long long v341 = v335[8];
  long long v340 = v335[9];
  *(_OWORD *)(v334 + 160) = v335[10];
  *(_OWORD *)(v334 + 176) = v339;
  *(_OWORD *)(v334 + 128) = v341;
  *(_OWORD *)(v334 + 144) = v340;
  long long v343 = v335[13];
  long long v342 = v335[14];
  long long v344 = v335[12];
  *(void *)(v334 + 240) = *((void *)v335 + 30);
  *(_OWORD *)(v334 + 208) = v343;
  *(_OWORD *)(v334 + 224) = v342;
  *(_OWORD *)(v334 + 192) = v344;
  long long v345 = *v335;
  long long v346 = v335[1];
  long long v347 = v335[3];
  *(_OWORD *)(v334 + 32) = v335[2];
  *(_OWORD *)(v334 + 48) = v347;
  *(_OWORD *)unint64_t v334 = v345;
  *(_OWORD *)(v334 + 16) = v346;
  long long v348 = (_OWORD *)((v334 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v349 = (long long *)(((unint64_t)v335 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v350 = *v349;
  *(_OWORD *)((char *)v348 + 9) = *(long long *)((char *)v349 + 9);
  *long long v348 = v350;
  unint64_t v351 = (v334 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v352 = ((unint64_t)v335 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v353 = *(_OWORD *)v352;
  *(unsigned char *)(v351 + 16) = *(unsigned char *)(v352 + 16);
  *(_OWORD *)unint64_t v351 = v353;
  long long v354 = (void *)((v334 + 311) & 0xFFFFFFFFFFFFFFF8);
  long long v355 = (void *)(((unint64_t)v335 + 311) & 0xFFFFFFFFFFFFFFF8);
  *long long v354 = *v355;
  *(_OWORD *)(((unint64_t)v354 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v355 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v230 = v517;
  if (!v316) {
    goto LABEL_226;
  }
LABEL_227:
  unint64_t v376 = ((((v283
           + ((((((((((v318 + v317) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v377 = (unint64_t)&v533[v376];
  unint64_t v378 = (unint64_t)&v207[v376];
  unint64_t v379 = v377 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v379 = *(void *)(v378 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v379 + 8) = *(unsigned char *)((v378 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v380 = (void **)((v377 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v381 = (void **)((v378 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v382 = *v380;
  *unint64_t v380 = *v381;

  unint64_t v383 = ((unint64_t)v380 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v384 = ((unint64_t)v381 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v385 = *(void **)v383;
  if (*(void *)v383 < 0xFFFFFFFFuLL)
  {
LABEL_231:
    *(_OWORD *)unint64_t v383 = *(_OWORD *)v384;
    return v230;
  }
  if (*(void *)v384 < 0xFFFFFFFFuLL)
  {

    goto LABEL_231;
  }
  *(void *)unint64_t v383 = *(void *)v384;

  uint64_t v386 = *(void **)(v383 + 8);
  *(void *)(v383 + 8) = *(void *)(v384 + 8);

  return v230;
}

uint64_t sub_24D766C0C(_DWORD *a1, unsigned int a2)
{
  uint64_t v81 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v91 = v81;
  unsigned int v2 = *(_DWORD *)(v81 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v89 = v83;
  unsigned int v3 = *(_DWORD *)(v83 + 84);
  unsigned int v65 = v3;
  if (v2 > v3) {
    unsigned int v3 = v2;
  }
  unsigned int v68 = v3;
  if (v3 <= 0x7FFFFFFE) {
    unsigned int v3 = 2147483646;
  }
  unsigned int v70 = v3;
  unsigned int v71 = v2;
  unsigned int v4 = v3 - 1;
  uint64_t v79 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v90 = v79;
  unsigned int v5 = *(_DWORD *)(v79 + 84);
  uint64_t v77 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v88 = v77;
  unsigned int v6 = *(_DWORD *)(v77 + 84);
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v77 + 84);
  }
  if (v5 <= v7) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v5;
  }
  unsigned int v64 = v8;
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  unsigned int v67 = v8;
  unsigned int v9 = v8 - 1;
  unsigned int v69 = v9;
  if (v4 > v9) {
    unsigned int v9 = v4;
  }
  unsigned int v73 = v9;
  uint64_t v62 = swift_getAssociatedTypeWitness();
  uint64_t v75 = *(void *)(v62 - 8);
  unsigned int v10 = *(_DWORD *)(v75 + 84);
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = v11;
  uint64_t v13 = v81;
  unsigned int v63 = v10;
  if (v10 <= *(_DWORD *)(v11 + 84)) {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v14 = v10;
  }
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = v14;
  }
  unsigned int v82 = v5;
  if (v15 <= v5) {
    unsigned int v16 = v5;
  }
  else {
    unsigned int v16 = v15;
  }
  if (v16 <= v7) {
    unsigned int v16 = v7;
  }
  if (v16 <= 0x7FFFFFFF) {
    int v17 = 0x7FFFFFFF;
  }
  else {
    int v17 = v16;
  }
  if (v73 <= v17 - 1) {
    unsigned int v18 = v17 - 1;
  }
  else {
    unsigned int v18 = v73;
  }
  if (v18 <= 0x7FFFFFFF) {
    unsigned int v19 = 0x7FFFFFFF;
  }
  else {
    unsigned int v19 = v18;
  }
  uint64_t v20 = *(unsigned __int8 *)(v83 + 80);
  uint64_t v21 = *(void *)(v83 + 64);
  uint64_t v22 = *(unsigned __int8 *)(v79 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v77 + 80);
  uint64_t v24 = *(void *)(v79 + 64);
  uint64_t v25 = *(void *)(v77 + 64);
  unsigned int v84 = v6;
  uint64_t v80 = v75;
  uint64_t v26 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v27 = *(void *)(v75 + 64);
  uint64_t v28 = *(void *)(v11 + 64);
  uint64_t v29 = 7;
  if (!v6) {
    uint64_t v29 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v30 = *(_DWORD *)(v91 + 80) & 0xF8 | v20 | 7;
  uint64_t v31 = *(void *)(v13 + 64) + 7;
  unint64_t v86 = ((((v21 + ((v20 + 8 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v32 = v23 | 7;
  uint64_t v33 = v23 | v22 | 7;
  uint64_t v85 = v33 + 9;
  uint64_t v61 = v25 + v23;
  uint64_t v34 = v25 + 12;
  unint64_t v35 = ((((((((((v29
                + v25
                + ((v23
                  + ((((((v25 + 12 + ((v25 + v23 + ((v23 + 12) & ~v23)) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v23)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v78 = v35 + ((v23 + 16 + ((v24 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(v23 | 7));
  uint64_t v36 = *(_DWORD *)(v75 + 80) & 0xF8 | v26 | 7;
  uint64_t v37 = v23 | v22 | v36;
  uint64_t v74 = v24 + v22;
  uint64_t v76 = v24 + v36;
  uint64_t v38 = v27 + 7;
  unint64_t v39 = ((((v28 + ((v26 + 8 + ((v27 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v26) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v19 < a2)
  {
    unint64_t v40 = (((((((((((v23 | 7) + 16 + ((v76 + (v74 & ~v22)) & ~v36) + v39) & ~v32) + v35 + 311) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + ((v78 + v37 + ((v85 + ((v30 + 8) & ~v30) + v86) & ~v33)) & ~v37)
            + 39) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v40 & 0xFFFFFFF8) != 0) {
      unsigned int v41 = 2;
    }
    else {
      unsigned int v41 = a2 - v19 + 1;
    }
    if (v41 >= 0x10000) {
      unsigned int v42 = 4;
    }
    else {
      unsigned int v42 = 2;
    }
    if (v41 < 0x100) {
      unsigned int v42 = 1;
    }
    if (v41 >= 2) {
      uint64_t v43 = v42;
    }
    else {
      uint64_t v43 = 0;
    }
    switch(v43)
    {
      case 1:
        int v44 = *((unsigned __int8 *)a1 + v40);
        if (!*((unsigned char *)a1 + v40)) {
          break;
        }
        goto LABEL_55;
      case 2:
        int v44 = *(unsigned __int16 *)((char *)a1 + v40);
        if (*(_WORD *)((char *)a1 + v40)) {
          goto LABEL_55;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24D7674B8);
      case 4:
        int v44 = *(_DWORD *)((char *)a1 + v40);
        if (!v44) {
          break;
        }
LABEL_55:
        int v46 = v44 - 1;
        if ((v40 & 0xFFFFFFF8) != 0)
        {
          int v46 = 0;
          int v47 = *a1;
        }
        else
        {
          int v47 = 0;
        }
        return v19 + (v47 | v46) + 1;
      default:
        break;
    }
  }
  if ((v18 & 0x80000000) != 0)
  {
    uint64_t v49 = v34;
    uint64_t v50 = ((unint64_t)a1 + v30 + 8) & ~v30;
    if (v4 == v19)
    {
      if (v71 == v70)
      {
        unsigned int v51 = (*(uint64_t (**)(uint64_t))(v91 + 48))(v50);
        goto LABEL_94;
      }
      uint64_t v54 = (unint64_t *)((v31 + v50) & 0xFFFFFFFFFFFFFFF8);
      if (v68 <= 0x7FFFFFFE) {
        goto LABEL_71;
      }
      unsigned int v51 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v89 + 48))(((unint64_t)v54 + v20 + 8) & ~v20, v65, AssociatedTypeWitness);
      goto LABEL_94;
    }
    uint64_t v52 = ~v23;
    unint64_t v53 = (v85 + v86 + v50) & ~v33;
    if (v69 == v19)
    {
      if (v82 == v67) {
        goto LABEL_78;
      }
      unint64_t v56 = (v24 + 7 + v53) & 0xFFFFFFFFFFFFFFF8;
      if ((v64 & 0x80000000) != 0)
      {
        uint64_t v57 = v23 + 16;
LABEL_92:
        uint64_t v60 = (v23 + 12 + ((v57 + v56) & ~v32)) & v52;
        if (v84 <= 0x7FFFFFFD)
        {
          unint64_t v55 = *(void *)(((v49 + ((v61 + v60) & v52)) & 0xFFFFFFFFFFFFFFF8) + 8);
          goto LABEL_72;
        }
        unsigned int v51 = (*(uint64_t (**)(uint64_t))(v88 + 48))(v60);
        goto LABEL_94;
      }
    }
    else
    {
      unint64_t v53 = (v53 + v37 + v78) & ~v37;
      if (v82 == v17)
      {
LABEL_78:
        unsigned int v51 = (*(uint64_t (**)(unint64_t))(v90 + 48))(v53);
        goto LABEL_94;
      }
      unint64_t v58 = (v76 + ((v74 + v53) & ~v22)) & ~v36;
      if (v15 == v17)
      {
        if (v63 == v15)
        {
          unsigned int v51 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v80 + 48))(v58, v63, v62);
        }
        else
        {
          uint64_t v54 = (unint64_t *)((v38 + v58) & 0xFFFFFFFFFFFFFFF8);
          if (v14 <= 0x7FFFFFFE)
          {
LABEL_71:
            unint64_t v55 = *v54;
LABEL_72:
            if (v55 >= 0xFFFFFFFF) {
              LODWORD(v55) = -1;
            }
            if ((v55 + 1) >= 2) {
              unsigned int v51 = v55;
            }
            else {
              unsigned int v51 = 0;
            }
            goto LABEL_94;
          }
          unsigned int v51 = (*(uint64_t (**)(unint64_t))(v12 + 48))(((unint64_t)v54 + v26 + 8) & ~v26);
        }
LABEL_94:
        if (v51 >= 2) {
          return v51 - 1;
        }
        else {
          return 0;
        }
      }
      unint64_t v56 = v58 + v39;
      if ((v16 & 0x80000000) != 0)
      {
        uint64_t v57 = (v23 | 7) + 16;
        goto LABEL_92;
      }
    }
    unint64_t v59 = *(void *)(v56 + 8);
    if (v59 >= 0xFFFFFFFF) {
      LODWORD(v59) = -1;
    }
    unsigned int v51 = v59 + 1;
    goto LABEL_94;
  }
  uint64_t v48 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v48) = -1;
  }
  return (v48 + 1);
}

void sub_24D7674CC(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v89 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v106 = v89;
  unsigned int v3 = *(_DWORD *)(v89 + 84);
  uint64_t v95 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v104 = v95;
  unsigned int v4 = *(_DWORD *)(v95 + 84);
  unsigned int v84 = v3;
  if (v3 > v4) {
    unsigned int v4 = v3;
  }
  unsigned int v82 = v4;
  if (v4 <= 0x7FFFFFFE) {
    unsigned int v4 = 2147483646;
  }
  unsigned int v87 = v4;
  unsigned int v5 = v4 - 1;
  uint64_t v93 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v105 = v93;
  unsigned int v6 = *(_DWORD *)(v93 + 84);
  uint64_t v91 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v103 = v91;
  unsigned int v7 = *(_DWORD *)(v91 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v91 + 84);
  }
  if (v6 <= v8) {
    unsigned int v9 = v8;
  }
  else {
    unsigned int v9 = v6;
  }
  unsigned int v80 = v9;
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  unsigned int v85 = v9;
  unsigned int v10 = v9 - 1;
  unsigned int v88 = v5;
  unsigned int v86 = v10;
  if (v5 <= v10) {
    unsigned int v5 = v10;
  }
  uint64_t v98 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v11 = *(_DWORD *)(v98 + 84);
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = v89;
  unsigned int v14 = *(_DWORD *)(v12 + 84);
  unsigned int v77 = v11;
  if (v11 > v14) {
    unsigned int v14 = v11;
  }
  unsigned int v76 = v14;
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  unsigned int v83 = v6;
  unsigned int v79 = v14;
  if (v14 <= v6) {
    unsigned int v14 = v6;
  }
  if (v14 <= v8) {
    unsigned int v15 = v8;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v15 <= 0x7FFFFFFF) {
    int v16 = 0x7FFFFFFF;
  }
  else {
    int v16 = v15;
  }
  unsigned int v90 = v16;
  unsigned int v17 = v16 - 1;
  if (v5 <= v17) {
    unsigned int v18 = v17;
  }
  else {
    unsigned int v18 = v5;
  }
  if (v18 <= 0x7FFFFFFF) {
    unsigned int v19 = 0x7FFFFFFF;
  }
  else {
    unsigned int v19 = v18;
  }
  unsigned int v78 = v7;
  BOOL v20 = v7 == 0;
  uint64_t v21 = *(unsigned __int8 *)(v95 + 80);
  uint64_t v22 = *(_DWORD *)(v106 + 80) & 0xF8 | v21 | 7;
  uint64_t v81 = *(void *)(v13 + 64) + 7;
  uint64_t v23 = *(unsigned __int8 *)(v93 + 80);
  uint64_t v24 = *(unsigned __int8 *)(v91 + 80);
  uint64_t v25 = v24 | v23;
  uint64_t v26 = v24 | v23 | 7;
  unint64_t v97 = ((((*(void *)(v95 + 64) + ((v21 + 8 + (v81 & 0xFFFFFFFFFFFFFFF8)) & ~v21) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v27 = *(void *)(v93 + 64);
  uint64_t v96 = v24 + 12;
  uint64_t v28 = *(void *)(v91 + 64);
  uint64_t v92 = v28 + v24;
  uint64_t v94 = v28 + 12;
  if (v20) {
    uint64_t v29 = v28 + 1;
  }
  else {
    uint64_t v29 = v28;
  }
  uint64_t v75 = v12;
  uint64_t v30 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v31 = *(void *)(v98 + 64) + 7;
  uint64_t v32 = *(void *)(v12 + 64);
  uint64_t v33 = v30 + 8;
  uint64_t v34 = v32 + ((v30 + 8 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v30);
  uint64_t v35 = v27 + 7;
  unint64_t v36 = (v24 + 16 + ((v27 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(v24 | 7);
  unint64_t v37 = v29
      + ((v24
        + ((((((v28 + 12 + ((v28 + v24 + ((v24 + 12) & ~v24)) & ~v24)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 10) & ~v24)
      + 7;
  unint64_t v38 = (((((((((v37 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v39 = *(_DWORD *)(v98 + 80) & 0xF8 | v30 | 7;
  uint64_t v40 = v25 | v39;
  unint64_t v41 = v38 + v36;
  uint64_t v42 = (v38 + v36 + (v25 | v39) + ((v26 + 9 + ((v22 + 8) & ~v22) + v97) & ~v26)) & ~(v25 | v39);
  uint64_t v43 = v27 + v23;
  uint64_t v44 = v27 + v39;
  uint64_t v45 = (v27 + v39 + ((v27 + v23) & ~v23)) & ~v39;
  unint64_t v46 = ((((v34 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v47 = (v24 | 7) + 16;
  uint64_t v48 = (v47 + v45 + v46) & ~(v24 | 7);
  size_t v49 = ((((((((v48 + v38 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v42 + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v19 >= a3)
  {
    int v52 = 0;
  }
  else
  {
    if (v49) {
      unsigned int v50 = 2;
    }
    else {
      unsigned int v50 = a3 - v19 + 1;
    }
    if (v50 >= 0x10000) {
      int v51 = 4;
    }
    else {
      int v51 = 2;
    }
    if (v50 < 0x100) {
      int v51 = 1;
    }
    if (v50 >= 2) {
      int v52 = v51;
    }
    else {
      int v52 = 0;
    }
  }
  if (a2 > v19)
  {
    if (v49) {
      int v53 = 1;
    }
    else {
      int v53 = a2 - v19;
    }
    if (v49)
    {
      unsigned int v54 = ~v19 + a2;
      bzero(a1, v49);
      *a1 = v54;
    }
    switch(v52)
    {
      case 1:
        *((unsigned char *)a1 + v49) = v53;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v49) = v53;
        return;
      case 3:
        goto LABEL_129;
      case 4:
        *(unsigned int *)((char *)a1 + v49) = v53;
        return;
      default:
        return;
    }
  }
  uint64_t v101 = ~v22;
  uint64_t v99 = ~(v24 | 7);
  uint64_t v55 = ~v24;
  uint64_t v56 = ~v30;
  switch(v52)
  {
    case 1:
      *((unsigned char *)a1 + v49) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_64;
    case 2:
      *(_WORD *)((char *)a1 + v49) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_64;
    case 3:
LABEL_129:
      __break(1u);
      JUMPOUT(0x24D767F98);
    case 4:
      *(unsigned int *)((char *)a1 + v49) = 0;
      goto LABEL_63;
    default:
LABEL_63:
      if (!a2) {
        return;
      }
LABEL_64:
      if ((v18 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) != 0) {
          uint64_t v57 = a2 ^ 0x80000000;
        }
        else {
          uint64_t v57 = a2 - 1;
        }
        uint64_t v62 = a1;
        goto LABEL_75;
      }
      unint64_t v58 = (_DWORD *)(((unint64_t)a1 + v22 + 8) & v101);
      if (v88 == v19)
      {
        uint64_t v57 = a2 + 1;
        if (v57 > v87)
        {
          if (!v97) {
            return;
          }
          unsigned int v59 = a2 - v87;
          uint64_t v60 = (void *)(((unint64_t)a1 + v22 + 8) & v101);
          size_t v61 = v97;
          goto LABEL_88;
        }
        if (a2 == -1) {
          return;
        }
        if (v84 == v87)
        {
          uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v106 + 56);
          uint64_t v67 = ((unint64_t)a1 + v22 + 8) & v101;
          uint64_t v63 = a2 + 1;
          goto LABEL_106;
        }
        uint64_t v62 = (void *)(((unint64_t)v58 + v81) & 0xFFFFFFFFFFFFFFF8);
        if (v82 > 0x7FFFFFFE)
        {
          uint64_t v67 = ((unint64_t)v62 + v21 + 8) & ~v21;
          uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v104 + 56);
          uint64_t v63 = a2 + 1;
          goto LABEL_106;
        }
        if (v57 <= 0x7FFFFFFE)
        {
LABEL_75:
          *uint64_t v62 = v57;
          return;
        }
        unsigned int v70 = a2 - 2147483646;
        *uint64_t v62 = 0;
LABEL_98:
        *(_DWORD *)uint64_t v62 = v70;
        return;
      }
      unint64_t v58 = (_DWORD *)(((unint64_t)v58 + v97 + v26 + 9) & ~v26);
      if (v86 == v19)
      {
        uint64_t v63 = a2 + 1;
        if (v63 <= v85)
        {
          if (a2 == -1) {
            return;
          }
          if (v83 == v85)
          {
            uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v105 + 56);
            uint64_t v67 = (uint64_t)v58;
            goto LABEL_106;
          }
          unsigned int v71 = (void *)(((unint64_t)v58 + v35) & 0xFFFFFFFFFFFFFFF8);
          if ((v80 & 0x80000000) == 0)
          {
            if ((v63 & 0x80000000) != 0)
            {
              *unsigned int v71 = a2 - 0x7FFFFFFF;
              v71[1] = 0;
            }
            else
            {
              v71[1] = a2;
            }
            return;
          }
          uint64_t v67 = (v96 + (((unint64_t)v71 + v24 + 16) & v99)) & v55;
          if (v78 > 0x7FFFFFFD)
          {
            uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v103 + 56);
            goto LABEL_106;
          }
          uint64_t v62 = (void *)((v94 + ((v92 + v67) & v55)) & 0xFFFFFFFFFFFFFFF8);
          if (v63 <= 0x7FFFFFFE)
          {
            v62[1] = v63;
            return;
          }
          unsigned int v70 = a2 - 2147483646;
          *uint64_t v62 = 0;
          v62[1] = 0;
          goto LABEL_98;
        }
        int v64 = v36
            + (((((((((v37 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8) + 25) & 0xFFFFFFF8);
        size_t v61 = (v64 + 16);
        if (v64 == -16) {
          return;
        }
        unsigned int v65 = v85;
LABEL_87:
        unsigned int v59 = a2 - v65;
        uint64_t v60 = v58;
LABEL_88:
        bzero(v60, v61);
        *unint64_t v58 = v59;
        return;
      }
      unint64_t v58 = (_DWORD *)(((unint64_t)v58 + v40 + v41) & ~v40);
      uint64_t v68 = a2 + 1;
      if (v68 > v90)
      {
        int v69 = (((v48
               + (((((((((v37 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8) + 25) & 0xFFFFFFF8)
               + 327) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8;
        size_t v61 = (v69 + 16);
        if (v69 == -16) {
          return;
        }
        unsigned int v65 = v90;
        goto LABEL_87;
      }
      if (a2 == -1) {
        return;
      }
      if (v83 == v90)
      {
        uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v105 + 56);
        uint64_t v67 = (uint64_t)v58;
        uint64_t v63 = a2 + 1;
      }
      else
      {
        uint64_t v67 = (v44 + (((unint64_t)v58 + v43) & ~v23)) & ~v39;
        if (v79 == v90)
        {
          if (v77 == v79)
          {
            uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v98 + 56);
            uint64_t v63 = a2 + 1;
          }
          else
          {
            unsigned int v73 = (void *)((v31 + v67) & 0xFFFFFFFFFFFFFFF8);
            if (v76 <= 0x7FFFFFFE)
            {
              if (v68 > 0x7FFFFFFE)
              {
                void *v73 = 0;
                *(_DWORD *)unsigned int v73 = a2 - 2147483646;
              }
              else
              {
                void *v73 = v68;
              }
              return;
            }
            uint64_t v67 = ((unint64_t)v73 + v33) & v56;
            uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v75 + 56);
            uint64_t v63 = a2 + 1;
          }
        }
        else
        {
          uint64_t v72 = (void *)(v67 + v46);
          if ((v15 & 0x80000000) == 0)
          {
            if ((v68 & 0x80000000) != 0)
            {
              *uint64_t v72 = a2 - 0x7FFFFFFF;
              v72[1] = 0;
            }
            else
            {
              v72[1] = a2;
            }
            return;
          }
          uint64_t v67 = (v96 + (((unint64_t)v72 + v47) & v99)) & v55;
          if (v78 <= 0x7FFFFFFD)
          {
            uint64_t v74 = (void *)((v94 + ((v92 + v67) & v55)) & 0xFFFFFFFFFFFFFFF8);
            if (v68 > 0x7FFFFFFE)
            {
              *uint64_t v74 = 0;
              v74[1] = 0;
              *(_DWORD *)uint64_t v74 = a2 - 2147483646;
            }
            else
            {
              v74[1] = v68;
            }
            return;
          }
          uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v103 + 56);
          uint64_t v63 = a2 + 1;
        }
      }
LABEL_106:
      v66(v67, v63);
      return;
  }
}

uint64_t sub_24D767FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unsigned int v6 = v5;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v59 = a1;
  uint64_t v80 = *MEMORY[0x263EF8340];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v53 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC8CE8();
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  int v52 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unsigned int v15 = (char *)&v50 - v14;
  int v16 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  unsigned int v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v60 = 0;
  char v62 = 0;
  __int16 v61 = 0;
  __int16 v63 = 0;
  char v69 = 0;
  long long v68 = 0u;
  long long v67 = 0u;
  long long v66 = 0u;
  long long v65 = 0u;
  long long v64 = 0u;
  int v70 = 0;
  long long v71 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  memset(v74, 0, 26);
  uint64_t v76 = 0;
  uint64_t v77 = 0;
  uint64_t v75 = 0;
  int v78 = 0;
  sub_24D7685FC(v6[*(int *)(v17 + 40)], (uint64_t)&v60);
  sub_24D76861C(v6[v16[13]], (uint64_t)&v60);
  uint64_t v20 = *v6;
  uint64_t v58 = a4;
  uint64_t v57 = a5;
  switch(v20)
  {
    case 1:
      int v21 = 2;
      goto LABEL_9;
    case 2:
      int v60 = 4;
      uint64_t v22 = 0;
      goto LABEL_7;
    case 3:
      int v60 = 1;
      uint64_t v22 = 1;
LABEL_7:
      sub_24D76863C(v22, (uint64_t)&v60);
      break;
    default:
      if (v6[v16[27]]) {
        int v21 = 3;
      }
      else {
        int v21 = 1;
      }
LABEL_9:
      int v60 = v21;
      break;
  }
  uint64_t v23 = v16[20];
  sub_24D76865C(v6[v23], (uint64_t)&v60);
  sub_24D768670(v6[v16[9]], (uint64_t)&v60);
  uint64_t v24 = v16[21];
  int v25 = v6[v24];
  sub_24D409F80((uint64_t)v6, (uint64_t)v19);
  if (v25) {
    LOBYTE(v25) = v19[v16[12]] ^ 1;
  }
  sub_24D409FE4((uint64_t)v19);
  sub_24D769414(v25 & 1, (uint64_t)&v60);
  uint64_t v76 = qword_24DCDB2C0[(char)v6[v24]];
  *((void *)&v71 + 1) = *(void *)&v6[v16[19]];
  sub_24D769434(v6[v16[11]], (uint64_t)&v60);
  sub_24D769454(v6[v16[15]], (uint64_t)&v60);
  sub_24D769474(v6[v16[16]], (uint64_t)&v60);
  sub_24D769494(v6[v16[28]], (uint64_t)&v60);
  sub_24D7694B4(v6[v16[35]], (uint64_t)&v60);
  sub_24D7694D4(v6[v16[18]], (uint64_t)&v60);
  sub_24D7694F4(v6[v16[23]], (uint64_t)&v60);
  sub_24D769514(v6[v16[24]], (uint64_t)&v60);
  sub_24D3F0BA0(v59, (uint64_t)v79, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v79) != 1)
  {
    v74[24] = v79[32];
    v74[25] = v79[34];
  }
  uint64_t v26 = v54;
  uint64_t v27 = v11;
  if (v6[v23] == 1) {
    LODWORD(v77) = v6[v16[22]];
  }
  uint64_t v28 = (uint64_t)v15;
  if (*v6 != 1)
  {
    uint64_t v29 = *(void *)&v6[v16[26]];
    *(void *)&long long v64 = *(void *)&v6[v16[25]];
    *(void *)&long long v72 = v29;
  }
  __int16 v63 = *((_WORD *)v6 + 5);
  uint64_t v30 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v54 + 16);
  v30(v15, &v6[v16[7]], v27);
  *((void *)&v64 + 1) = sub_24D769534((uint64_t)v15);
  *(void *)&long long v65 = v31;
  v30(v15, &v6[v16[8]], v27);
  *((void *)&v65 + 1) = sub_24D769534((uint64_t)v15);
  *(void *)&long long v66 = v32;
  uint64_t v33 = v27;
  uint64_t v34 = v53;
  sub_24D502A50((uint64_t)&v6[v16[29]], v53);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v34, 1, v33) == 1)
  {
    uint64_t v35 = sub_24D419088(v34);
  }
  else
  {
    unint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
    int v51 = (void (*)(uint64_t, char *, uint64_t))v30;
    unint64_t v37 = v52;
    v36(v52, v34, v33);
    v51(v28, v37, v33);
    *((void *)&v66 + 1) = sub_24D769534(v28);
    *(void *)&long long v67 = v38;
    sub_24D769664((uint64_t)&v60);
    uint64_t v35 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v37, v33);
  }
  uint64_t v39 = &v6[v16[31]];
  if (v39[8]) {
    uint64_t v40 = 0;
  }
  else {
    uint64_t v40 = *(void *)v39;
  }
  *((void *)&v67 + 1) = v40;
  if (v6[8])
  {
    unint64_t v41 = &v6[v16[36]];
    if (v41[4])
    {
      int v42 = 0;
      goto LABEL_29;
    }
  }
  else
  {
    unint64_t v41 = v6 + 4;
  }
  int v42 = *(_DWORD *)v41;
LABEL_29:
  int v70 = v42;
  uint64_t v43 = &v6[v16[34]];
  if (v43[8]) {
    uint64_t v44 = 0;
  }
  else {
    uint64_t v44 = __ROR8__(*(void *)v43, 32);
  }
  *(void *)&long long v71 = v44;
  MEMORY[0x270FA5388](v35);
  *(&v50 - 6) = v45;
  *(&v50 - 5) = (uint64_t)&v60;
  *(&v50 - 4) = v59;
  *(&v50 - 3) = (uint64_t)v6;
  uint64_t v46 = v56;
  *(&v50 - 2) = v55;
  *(&v50 - 1) = v46;
  sub_24D768690(sub_24D769640, (uint64_t)(&v50 - 8), v47, v48);
  return fpfs_free_metadata_tag_data();
}

uint64_t sub_24D7685FC(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 4;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFFB | v2;
  return result;
}

uint64_t sub_24D76861C(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 8;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFF7 | v2;
  return result;
}

uint64_t sub_24D76863C(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 2;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFFD | v2;
  return result;
}

uint64_t sub_24D76865C(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFFE | result;
  return result;
}

uint64_t sub_24D768670(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 16;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFEF | v2;
  return result;
}

uint64_t sub_24D768690(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4) {
    return a1(0);
  }
  MEMORY[0x270FA5388](a1);
  return sub_24DCC98A8();
}

uint64_t sub_24D768718@<X0>(uint64_t (*a1)(void *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v55 = a4;
  uint64_t v54 = sub_24DCC9858();
  MEMORY[0x270FA5388](v54);
  uint64_t v59 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v61 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v62 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v53 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int v60 = "collaborationIdentifier";
  unint64_t v65 = 0x800000024DCFC310;
  while (v11)
  {
    unint64_t v17 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v18 = v17 | (v12 << 6);
LABEL_21:
    uint64_t v22 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v18);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    if (*v22 != 0xD000000000000015 || v23 != v65)
    {
      uint64_t v14 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v18);
      uint64_t v16 = *v14;
      unint64_t v15 = v14[1];
      if ((sub_24DCCAE28() & 1) == 0)
      {
        uint64_t v63 = v24;
        uint64_t v64 = v23;
        uint64_t v51 = a2;
        int v52 = (unsigned char *)(v15 >> 62);
        swift_bridgeObjectRetain();
        sub_24D3F9C18(v16, v15);
        sub_24DCC9848();
        sub_24D3F0EB8();
        uint64_t v25 = sub_24DCCA458();
        (*v53)(v59, v54);
        uint64_t v26 = 0;
        switch((unint64_t)v52)
        {
          case 1uLL:
            LODWORD(v26) = HIDWORD(v16) - v16;
            if (__OFSUB__(HIDWORD(v16), v16)) {
              goto LABEL_55;
            }
            uint64_t v26 = (int)v26;
LABEL_29:
            BOOL v29 = __OFADD__(v26, 24);
            uint64_t v30 = v26 + 24;
            if (v29) {
              goto LABEL_51;
            }
            BOOL v29 = __OFADD__(v30, v25);
            uint64_t v31 = v30 + v25;
            if (v29) {
              goto LABEL_52;
            }
            if (__OFADD__(v31, 1)) {
              goto LABEL_53;
            }
            size_t v50 = v25;
            int v32 = (int)v52;
            uint64_t v58 = (void *)swift_slowAlloc();
            uint64_t v33 = 0;
            size_t v49 = v58 + 3;
            switch(v32)
            {
              case 1:
                LODWORD(v33) = HIDWORD(v16) - v16;
                if (__OFSUB__(HIDWORD(v16), v16)) {
                  goto LABEL_57;
                }
                uint64_t v33 = (int)v33;
LABEL_36:
                uint64_t v34 = v33;
                sub_24DCC8BC8();
                uint64_t v35 = v34;
                v58[2] = v34;
                goto LABEL_40;
              case 2:
                if (__OFSUB__(*(void *)(v16 + 24), *(void *)(v16 + 16))) {
                  goto LABEL_58;
                }
                sub_24DCC8BC8();
                uint64_t v37 = *(void *)(v16 + 16);
                uint64_t v36 = *(void *)(v16 + 24);
                BOOL v29 = __OFSUB__(v36, v37);
                uint64_t v38 = v36 - v37;
                if (v29) {
                  goto LABEL_59;
                }
                v58[2] = v38;
                uint64_t v40 = *(void *)(v16 + 16);
                uint64_t v39 = *(void *)(v16 + 24);
                BOOL v29 = __OFSUB__(v39, v40);
                uint64_t v35 = v39 - v40;
                if (v29) {
                  goto LABEL_60;
                }
LABEL_40:
                size_t v41 = v50;
                if (v50 == 0x7FFFFFFFFFFFFFFFLL) {
                  goto LABEL_54;
                }
                int v52 = (char *)v49 + v35;
                uint64_t v42 = sub_24DCC9898();
                swift_bridgeObjectRelease();
                uint64_t v43 = v52;
                memcpy(v52, (const void *)(v42 + 32), v41);
                swift_release();
                v43[v41] = 0;
                uint64_t v44 = v58;
                *uint64_t v58 = v13;
                v44[1] = v43;
                sub_24D400DCC(v16, v15);
                uint64_t v13 = v44;
                a2 = v51;
                break;
              case 3:
                goto LABEL_36;
              default:
                uint64_t v33 = BYTE6(v15);
                goto LABEL_36;
            }
            break;
          case 2uLL:
            uint64_t v28 = *(void *)(v16 + 16);
            uint64_t v27 = *(void *)(v16 + 24);
            BOOL v29 = __OFSUB__(v27, v28);
            uint64_t v26 = v27 - v28;
            if (!v29) {
              goto LABEL_29;
            }
            goto LABEL_56;
          case 3uLL:
            goto LABEL_29;
          default:
            uint64_t v26 = BYTE6(v15);
            goto LABEL_29;
        }
      }
    }
  }
  int64_t v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_50;
  }
  if (v19 >= v62) {
    goto LABEL_42;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v19);
  ++v12;
  if (v20) {
    goto LABEL_20;
  }
  int64_t v12 = v19 + 1;
  if (v19 + 1 >= v62) {
    goto LABEL_42;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v12);
  if (v20) {
    goto LABEL_20;
  }
  int64_t v12 = v19 + 2;
  if (v19 + 2 >= v62) {
    goto LABEL_42;
  }
  unint64_t v20 = *(void *)(v61 + 8 * v12);
  if (v20)
  {
LABEL_20:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
    goto LABEL_21;
  }
  int64_t v21 = v19 + 3;
  if (v21 < v62)
  {
    unint64_t v20 = *(void *)(v61 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v12 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        if (v12 >= v62) {
          goto LABEL_42;
        }
        unint64_t v20 = *(void *)(v61 + 8 * v12);
        ++v21;
        if (v20) {
          goto LABEL_20;
        }
      }
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      JUMPOUT(0x24D768C18);
    }
    int64_t v12 = v21;
    goto LABEL_20;
  }
LABEL_42:
  swift_release();
  uint64_t v45 = v57;
  uint64_t result = v56(v13);
  if (v45)
  {
    if (v13)
    {
      do
      {
        uint64_t v47 = (void *)*v13;
        uint64_t result = MEMORY[0x25332B030](v13, -1, -1);
        uint64_t v13 = v47;
      }
      while (v47);
    }
  }
  else if (v13)
  {
    do
    {
      uint64_t v48 = (void *)*v13;
      uint64_t result = MEMORY[0x25332B030](v13, -1, -1);
      uint64_t v13 = v48;
    }
    while (v48);
  }
  return result;
}

uint64_t sub_24D768C38@<X0>(uint64_t (*a1)(void *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + *(int *)(type metadata accessor for ItemMetadata() + 128));
  if (v7) {
    return sub_24D768718(a1, a2, v7, a3);
  }
  else {
    return a1(0);
  }
}

uint64_t sub_24D768CB8(uint64_t (*a1)(void, void, uint64_t))
{
  uint64_t v3 = type metadata accessor for ItemMetadata();
  unsigned int v4 = (uint64_t *)(v1 + *(int *)(v3 + 132));
  unint64_t v5 = v4[1];
  if (v5 >> 60 == 15) {
    return a1(0, 0, 1);
  }
  uint64_t v7 = *v4;
  MEMORY[0x270FA5388](v3);
  sub_24D3F9C18(v7, v5);
  sub_24DCC8B08();
  return sub_24D416034(v7, v5);
}

uint64_t sub_24D768DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a2 + 176) = a1;
  sub_24D3F0BA0(a3, (uint64_t)v17, &qword_26B197970);
  int v12 = sub_24D3F0D40((uint64_t)v17);
  if (v12 == 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = v18;
  }
  if (v12 == 1) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = v19;
  }
  v16[2] = a7;
  v16[3] = a2;
  v16[4] = a4;
  v16[5] = a5;
  v16[6] = a6;
  return sub_24D768690(sub_24D7696E8, (uint64_t)v16, v13, v14);
}

uint64_t sub_24D768EA8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a2 + 192) = a1;
  uint64_t v11 = type metadata accessor for ItemMetadata();
  int v12 = (uint64_t *)(a3 + *(int *)(v11 + 56));
  uint64_t v13 = v12[1];
  if (v13)
  {
    uint64_t v27 = *v12;
    uint64_t v28 = v13;
    uint64_t v25 = 47;
    unint64_t v26 = 0xE100000000000000;
    uint64_t v23 = 58;
    unint64_t v24 = 0xE100000000000000;
    unint64_t v22 = sub_24D3F0EB8();
    uint64_t v19 = MEMORY[0x263F8D310];
    unint64_t v20 = v22;
    uint64_t v11 = sub_24DCCA478();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v15 = 0;
  }
  MEMORY[0x270FA5388](v11);
  void v18[2] = a6;
  v18[3] = a2;
  uint64_t v19 = a3;
  unint64_t v20 = a4;
  uint64_t v21 = a5;
  sub_24D768690(sub_24D769714, (uint64_t)v18, v16, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D768FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  *(void *)(a2 + 160) = a1;
  uint64_t v6 = *(void *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 120));
  if (!v6) {
    return a4(a2);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  v11[4] = sub_24D7698A8;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_24DCA7E34;
  v11[3] = &block_descriptor_9;
  uint64_t v9 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  fpfs_serialize_tags();
  _Block_release(v9);
  a4(a2);
  return swift_release();
}

uint64_t sub_24D769164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  int64_t v8 = *(void *)(a2 + 16);
  int64_t v9 = *(void *)(a3 + 16);
  if (v8 >= v9) {
    return v8 < v9;
  }
  if (v8 < 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  if (!a1)
  {
LABEL_6:

    uint64_t result = swift_beginAccess();
    uint64_t v12 = *v6 + 1;
    if (!__OFADD__(*v6, 1))
    {
      swift_beginAccess();
      *uint64_t v6 = v12;
      return v8 < v9;
    }
    goto LABEL_10;
  }
  *(void *)a1 = objc_msgSend(v11, sel_UTF8String);
  uint64_t result = swift_beginAccess();
  if (*v6 < (unint64_t)v9)
  {
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(v10 + 24 * *v6 + 16);
    goto LABEL_6;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24D7692A4(uint64_t *a1, uint64_t a2)
{
  if (!a1) {
    return 1;
  }
  int v2 = (void *)(a2 + 16);
  uint64_t v3 = *a1;
  unsigned int v4 = *((unsigned __int8 *)a1 + 8);
  uint64_t result = swift_beginAccess();
  if (!*v2)
  {
LABEL_12:
    swift_endAccess();
    return 1;
  }
  if (v3)
  {
    sub_24DCC9988();
    sub_24D3F0EB8();
    uint64_t v6 = sub_24DCCA478();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    if (v4 <= 1) {
      char v9 = 1;
    }
    else {
      char v9 = v4;
    }
    uint64_t v10 = (void *)*v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *int v2 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v10 = sub_24DA158F0(0, v10[2] + 1, 1, v10);
      *int v2 = v10;
    }
    unint64_t v13 = v10[2];
    unint64_t v12 = v10[3];
    if (v13 >= v12 >> 1)
    {
      uint64_t v10 = sub_24DA158F0((void *)(v12 > 1), v13 + 1, 1, v10);
      *int v2 = v10;
    }
    v10[2] = v13 + 1;
    uint64_t v14 = &v10[3 * v13];
    v14[4] = v6;
    v14[5] = v8;
    *((unsigned char *)v14 + 48) = v9;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D769414(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 32;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFDF | v2;
  return result;
}

uint64_t sub_24D769434(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 128;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFF7F | v2;
  return result;
}

uint64_t sub_24D769454(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFEFF | v2;
  return result;
}

uint64_t sub_24D769474(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 512;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFDFF | v2;
  return result;
}

uint64_t sub_24D769494(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 2048;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFF7FF | v2;
  return result;
}

uint64_t sub_24D7694B4(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 1024;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFBFF | v2;
  return result;
}

uint64_t sub_24D7694D4(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 0x4000;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFBFFF | v2;
  return result;
}

uint64_t sub_24D7694F4(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 0x8000;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFF7FFF | v2;
  return result;
}

uint64_t sub_24D769514(uint64_t result, uint64_t a2)
{
  if (result) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFEFFFF | v2;
  return result;
}

uint64_t sub_24D769534(uint64_t a1)
{
  uint64_t result = sub_24DCC8C88();
  double v4 = v3;
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = sub_24DCC8CE8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  double v6 = (v4 - (double)(uint64_t)v4) * 1000000000.0;
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v6 < 9.22337204e18) {
    return (uint64_t)v4;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_24D769640(uint64_t a1)
{
  return sub_24D768DD8(a1, v1[3], v1[4], v1[5], v1[6], v1[7], v1[2]);
}

uint64_t sub_24D769664(uint64_t result)
{
  *(_DWORD *)(result + 4) |= 0x1000u;
  return result;
}

uint64_t sub_24D769674()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D7696AC(uint64_t *a1)
{
  return sub_24D7692A4(a1, v1);
}

uint64_t sub_24D7696B4(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 4) >> 1) & 1;
}

uint64_t sub_24D7696C0()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_24D7696E8(uint64_t a1)
{
  return sub_24D76982C(a1, sub_24D768EA8);
}

uint64_t sub_24D769714(uint64_t a1)
{
  *(void *)(*(void *)(v1 + 24) + 136) = a1;
  return sub_24D768CB8((uint64_t (*)(void, void, uint64_t))sub_24D769774);
}

uint64_t sub_24D769774@<X0>(uint64_t a1@<X8>)
{
  v3[2] = *(void *)(v1 + 16);
  int8x16_t v4 = vextq_s8(*(int8x16_t *)(v1 + 24), *(int8x16_t *)(v1 + 24), 8uLL);
  long long v5 = *(_OWORD *)(v1 + 40);
  return sub_24D768C38((uint64_t (*)(void *))sub_24D769800, (uint64_t)v3, a1);
}

uint64_t sub_24D7697D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 24))(a1, a2, 0);
}

uint64_t sub_24D769800(uint64_t a1)
{
  return sub_24D76982C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D768FF0);
}

uint64_t sub_24D76982C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[3], v2[4], v2[5], v2[6], v2[2]);
}

uint64_t sub_24D769858()
{
  return swift_deallocObject();
}

uint64_t sub_24D769868()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D7698A8(uint64_t a1)
{
  return sub_24D769164(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_24D7698B0(unint64_t a1)
{
  if ((a1 >> 62) <= 1)
  {
    sub_24D6D3E0C(a1);
    uint64_t v2 = (void *)sub_24DCC8818();
    sub_24DCCA728();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    id v3 = objc_msgSend(v2, sel_domain);
    sub_24DCC97E8();

    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    objc_msgSend(v2, sel_code);
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(v2, sel_underlyingErrors);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    uint64_t v5 = sub_24DCC9C28();

    if (*(void *)(v5 + 16))
    {
      id v6 = *(id *)(v5 + 32);
      swift_bridgeObjectRelease();
      sub_24D3FB6F8(0, (unint64_t *)&qword_26B1940A0);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_7:
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        swift_getErrorValue();
        id v9 = sub_24DBA2828(v11);
        id v10 = objc_msgSend(v9, sel_description);
        sub_24DCC97E8();

        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();

        sub_24D6D3E28(a1);
        swift_bridgeObjectRelease();
        return 0;
      }
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      id v7 = objc_msgSend(v12, sel_domain);
      sub_24DCC97E8();

      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      objc_msgSend(v12, sel_code);
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
    }
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  unint64_t result = 0x74726F706D696572;
  switch(__ROR8__(a1, 3) ^ 0x1000000000000000)
  {
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0x526C616974726170;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_24D769D8C(void *a1, uint64_t a2, uint64_t a3)
{
  size_t v50 = a1;
  uint64_t v48 = a2;
  uint64_t v4 = sub_24DCC8288();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v47 = a3;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = swift_getAssociatedConformanceWitness();
  uint64_t v43 = AssociatedConformanceWitness;
  uint64_t v44 = AssociatedTypeWitness;
  *(void *)&long long v54 = AssociatedTypeWitness;
  *((void *)&v54 + 1) = v7;
  *(void *)&long long v55 = AssociatedConformanceWitness;
  *((void *)&v55 + 1) = v9;
  uint64_t v42 = v9;
  uint64_t v10 = type metadata accessor for ThrottlingKey();
  uint64_t v11 = sub_24DCCA3F8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v49 = v10;
  uint64_t v51 = *(void *)(v10 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v45 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v46 = (char *)&v39 - v18;
  _s3__C4CodeOMa_1(0);
  *(void *)&long long v54 = -2010;
  sub_24D784B58((unint64_t *)&qword_26B194040, _s3__C4CodeOMa_1);
  uint64_t v19 = v50;
  if (sub_24DCC86A8() & 1) != 0 || (*(void *)&long long v54 = -2005, (sub_24DCC86A8()))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v48, v11);
    uint64_t v20 = v51;
    uint64_t v21 = v49;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v15, 1, v49) == 1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      return 0;
    }
    unint64_t v22 = v46;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v46, v15, v21);
    uint64_t v23 = v45;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v45, v22, v21);
    *(void *)&long long v54 = v44;
    *((void *)&v54 + 1) = v7;
    *(void *)&long long v55 = v43;
    *((void *)&v55 + 1) = v42;
    uint64_t v24 = type metadata accessor for ReconciliationID();
    unsigned int v25 = v23[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (v25 >= 2)
      {
        if (v25 != 10) {
          goto LABEL_25;
        }
LABEL_13:
        (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        if (!sub_24D8903D0())
        {
LABEL_14:
          (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v21);
          return 0;
        }
LABEL_17:
        uint64_t v27 = (void *)sub_24DCC8818();
        id v28 = objc_msgSend(v27, sel_userInfo);
        uint64_t v29 = sub_24DCC9578();

        uint64_t v30 = sub_24DCC97E8();
        if (*(void *)(v29 + 16) && (unint64_t v32 = sub_24D4053BC(v30, v31), (v33 & 1) != 0))
        {
          sub_24D3F7E8C(*(void *)(v29 + 56) + 32 * v32, (uint64_t)&v54);
        }
        else
        {
          long long v54 = 0u;
          long long v55 = 0u;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v21);
        if (*((void *)&v55 + 1))
        {
          if (swift_dynamicCast() & 1) != 0 && (v53[0]) {
            return 0;
          }
        }
        else
        {
          sub_24D3E3E54((uint64_t)&v54);
        }
        return 1;
      }
    }
    else
    {
      if (v25 < 2) {
        goto LABEL_13;
      }
      if (v25 != 10)
      {
LABEL_25:
        (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v21);
        (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        return 0;
      }
    }
    (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
    if (sub_24D8903D0()) {
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  LODWORD(v54) = sub_24DCC8308();
  sub_24D4C5C60();
  if ((sub_24DCC86A8() & 1) == 0)
  {
    LODWORD(v54) = sub_24DCC82C8();
    if ((sub_24DCC86A8() & 1) == 0)
    {
      *(void *)&long long v54 = -1004;
      if (sub_24DCC86A8()) {
        return 0;
      }
      *(void *)&long long v54 = -1000;
      if (sub_24DCC86A8()) {
        return 0;
      }
      *(void *)&long long v54 = -1003;
      if (sub_24DCC86A8()) {
        return 0;
      }
      LODWORD(v54) = sub_24DCC8388();
      if (sub_24DCC86A8()) {
        return 0;
      }
      uint64_t v34 = v39;
      sub_24DCC8188();
      sub_24D784B58((unint64_t *)&qword_26B1943D0, MEMORY[0x263F06038]);
      uint64_t v35 = v41;
      char v36 = sub_24DCC86A8();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v35);
      if (v36) {
        return 0;
      }
      id v56 = v19;
      id v37 = v19;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      if (swift_dynamicCast())
      {
        sub_24D735EC8((uint64_t)&v54, (uint64_t)v52);
        sub_24D735EC8((uint64_t)v52, (uint64_t)v53);
        if (sub_24D5B3C48((uint64_t)v53) == 19)
        {

          return 1;
        }
        sub_24D5B3AB4((uint64_t)v52);
      }

      return 0;
    }
  }
  return sub_24D8903D0();
}

uint64_t sub_24D76A63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v106 = a1;
  uint64_t v102 = a7;
  uint64_t v94 = a5;
  uint64_t v97 = a3;
  uint64_t v98 = a4;
  uint64_t v9 = *(void *)(*(void *)a6 + 88);
  uint64_t v10 = *(void *)(*(void *)a6 + 96);
  uint64_t v11 = *(void *)(*(void *)a6 + 104);
  uint64_t v109 = *(void *)(*(void *)a6 + 80);
  uint64_t v110 = v9;
  uint64_t v111 = v10;
  uint64_t v112 = v11;
  uint64_t v12 = type metadata accessor for ReconciliationMutation();
  uint64_t v100 = *(void *)(v12 - 8);
  uint64_t v101 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v104 = v10;
  uint64_t v105 = (char *)&v84 - v13;
  uint64_t v103 = v109;
  uint64_t v110 = v9;
  uint64_t v111 = v10;
  uint64_t v112 = v11;
  uint64_t v14 = type metadata accessor for ItemReconciliation();
  uint64_t v15 = sub_24DCCA3F8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v84 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  unint64_t v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  int v108 = (char *)&v84 - v23;
  uint64_t v24 = a2;
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v24, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v19, 1, v14) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  uint64_t v86 = a6;
  unsigned int v85 = v22;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v108, v19, v14);
  uint64_t v28 = v103;
  uint64_t v109 = v103;
  uint64_t v110 = v9;
  uint64_t v111 = v104;
  uint64_t v112 = v11;
  uint64_t v29 = type metadata accessor for JobResult();
  uint64_t v95 = v26;
  uint64_t v96 = v29;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v99 = v14;
  uint64_t v33 = AssociatedConformanceWitness;
  uint64_t v87 = v11;
  uint64_t v88 = v9;
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  uint64_t v109 = AssociatedTypeWitness;
  uint64_t v110 = v31;
  uint64_t v111 = v33;
  uint64_t v112 = v34;
  type metadata accessor for ReconciliationID();
  uint64_t v35 = type metadata accessor for ReconciliationSideMutation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v36 = (uint64_t)v105;
  id v37 = &v105[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v38 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  uint64_t v93 = AssociatedTypeWitness;
  unsigned int v90 = v39;
  uint64_t v89 = v38 + 16;
  v39(v105, v106, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(_WORD *)id v37 = 262;
  uint64_t v92 = v35;
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = v101;
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = v102;
  sub_24D907568(v102, v36);
  uint64_t v42 = v41;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
  v43(v36, v40);
  uint64_t v44 = v28;
  uint64_t v45 = type metadata accessor for ItemReconciliationHalf();
  if (v108[*(int *)(v45 + 60)] == 1)
  {
    uint64_t v46 = v42;
    uint64_t v47 = (uint64_t)v105;
    uint64_t v48 = v43;
    uint64_t v49 = &v105[*(int *)(TupleTypeMetadata2 + 48)];
    v90(v105, v106, v93);
    swift_storeEnumTagMultiPayload();
    *uint64_t v49 = 1;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_24D907568(v46, v47);
    v48(v47, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v108, v99);
  }
  uint64_t v50 = v106;
  if (v108[*(int *)(v99 + 56)] == 1)
  {
    uint64_t v101 = v45;
    uint64_t v51 = *(void *)(v86 + 24);
    uint64_t v52 = v88;
    uint64_t v109 = v28;
    uint64_t v110 = v88;
    uint64_t v53 = v104;
    uint64_t v54 = v87;
    uint64_t v111 = v104;
    uint64_t v112 = v87;
    uint64_t v105 = (char *)type metadata accessor for ItemJob();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_24DA604B8(MetatypeMetadata, MetatypeMetadata);
    swift_allocObject();
    uint64_t v56 = sub_24DCC9C58();
    uint64_t v109 = v44;
    uint64_t v110 = v52;
    uint64_t v111 = v53;
    uint64_t v112 = v54;
    uint64_t v57 = v54;
    *uint64_t v58 = type metadata accessor for Ingestion.FaultDirectoryInTree();
    uint64_t v59 = sub_24D785484(v56);
    uint64_t v60 = v50;
    uint64_t v61 = v107;
    uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v51 + 272))(v50, v59);
    if (v61)
    {
      (*(void (**)(char *, uint64_t))(v95 + 8))(v108, v99);
      return swift_bridgeObjectRelease();
    }
    uint64_t v64 = v62;
    swift_bridgeObjectRelease();
    uint64_t v113 = v64;
    sub_24DCC9D48();
    swift_getWitnessTable();
    sub_24DCC9FD8();
    swift_bridgeObjectRelease();
    uint64_t v107 = 0;
    if (v109)
    {
      if (*(unsigned char *)(v109 + 112) == 1)
      {
        uint64_t v65 = sub_24D983A48();
        swift_retain();
        uint64_t v66 = v102;
        sub_24D85246C(v102, v65);
        swift_release();
        uint64_t v67 = v57;
        uint64_t v69 = v97;
        uint64_t v68 = v98;
        uint64_t v70 = v88;
LABEL_20:
        uint64_t v82 = v103;
        swift_release();
        uint64_t v109 = v82;
        uint64_t v110 = v70;
        uint64_t v111 = v104;
        uint64_t v112 = v67;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v83 = sub_24DC09730(v60, v69, v68, 2048);
        sub_24D85246C(v66, v83);
        swift_release();
        uint64_t v63 = *(uint64_t (**)(void))(v95 + 8);
        return v63();
      }
      swift_release();
    }
    uint64_t v71 = v102;
    uint64_t v72 = v99;
    long long v73 = v108;
    BOOL v74 = sub_24DB86F3C(v99);
    uint64_t v75 = v95;
    uint64_t v76 = v85;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v85, v73, v72);
    uint64_t v69 = v97;
    uint64_t v68 = v98;
    uint64_t v70 = v88;
    if (v74)
    {
      uint64_t v77 = *(void *)&v76[*(int *)(v101 + 36)];
      (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v72);
      if ((v77 & 0x10) == 0)
      {
        uint64_t v78 = v103;
        uint64_t v79 = v104;
        uint64_t v80 = v94;
        uint64_t v66 = v71;
LABEL_19:
        uint64_t v109 = v78;
        uint64_t v110 = v70;
        uint64_t v67 = v87;
        uint64_t v111 = v79;
        uint64_t v112 = v87;
        type metadata accessor for DiskImport.UnfaultDirectoryAndChildren();
        swift_allocObject();
        uint64_t v81 = sub_24D983960(v60, v69, v68, v80);
        sub_24D85246C(v66, v81);
        goto LABEL_20;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v72);
    }
    uint64_t v78 = v103;
    uint64_t v79 = v104;
    uint64_t v80 = v94;
    uint64_t v66 = v71;
    if ((v94 & 0x20) == 0) {
      uint64_t v80 = v94 | 0x20;
    }
    goto LABEL_19;
  }
  uint64_t v63 = *(uint64_t (**)(void))(v95 + 8);
  return v63();
}

void sub_24D76AF68()
{
  sub_24D76AF88();
  qword_26B1A24A0 = v0;
}

void sub_24D76AF88()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81A0], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81C0], *MEMORY[0x263EF81F8]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82A0], 0);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF8180], 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF8280], (const char *)*MEMORY[0x263EF8290]);
  if (*MEMORY[0x263EF8198])
  {
    xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF8198], 1);
    if (*MEMORY[0x263EF81A8])
    {
      xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF81A8], 1);
      id v1 = objc_allocWithZone(MEMORY[0x263F3C6F0]);
      uint64_t v2 = (void *)sub_24DCC97B8();
      objc_msgSend(v1, sel_initWithLabel_options_criteria_, v2, 1, v0);

      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_24D76B0E4()
{
  id result = sub_24D76B104();
  qword_26B1A22A8 = (uint64_t)result;
  return result;
}

id sub_24D76B104()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81A0], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81C0], *MEMORY[0x263EF81F8]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82A0], 0);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF8180], 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF8280], (const char *)*MEMORY[0x263EF8290]);
  id v1 = objc_allocWithZone(MEMORY[0x263F3C6F0]);
  uint64_t v2 = (void *)sub_24DCC97B8();
  id v3 = objc_msgSend(v1, sel_initWithLabel_criteria_, v2, v0);

  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_24D76B21C()
{
  return 128;
}

uint64_t sub_24D76B22C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t type metadata accessor for DiskImportContinuation()
{
  return self;
}

unint64_t sub_24D76B2A0@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24D7846A4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24D76B2CC()
{
  uint64_t result = 0x676E69646E6570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E65726170;
      break;
    case 2:
      uint64_t result = 0x7463656C6573;
      break;
    case 3:
      uint64_t result = 1802725732;
      break;
    case 4:
      uint64_t result = 0x72656469766F7270;
      break;
    case 5:
      uint64_t result = 0x70756E61656C63;
      break;
    default:
      return result;
  }
  return result;
}

void sub_24D76B380(void *a1@<X8>)
{
  *a1 = &unk_26FFA10E8;
}

uint64_t sub_24D76B390(void *a1, uint64_t a2)
{
  uint64_t v90 = a2;
  uint64_t v4 = *(void *)(*a1 + 88);
  uint64_t v5 = *(void *)(*a1 + 96);
  uint64_t v6 = *(void *)(*a1 + 104);
  uint64_t v94 = *(void *)(*a1 + 80);
  uint64_t v3 = v94;
  uint64_t v95 = v4;
  uint64_t v96 = v5;
  uint64_t v97 = v6;
  uint64_t v7 = type metadata accessor for ReconciliationMutation();
  uint64_t v79 = *(void *)(v7 - 8);
  uint64_t v80 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v83 = (char *)&v73 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  unsigned int v85 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v88 = (char *)&v73 - v12;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v77 = v3;
  uint64_t v78 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v81 = v6;
  uint64_t v82 = v4;
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v94 = AssociatedTypeWitness;
  uint64_t v95 = v13;
  uint64_t v84 = AssociatedConformanceWitness;
  uint64_t v96 = AssociatedConformanceWitness;
  uint64_t v97 = v15;
  uint64_t v16 = type metadata accessor for ReconciliationID();
  TupleTypeMetadata2 = (void *)swift_getTupleTypeMetadata2();
  uint64_t v89 = sub_24DCCA3F8();
  uint64_t v92 = *(uint64_t (***)(char *, uint64_t))(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v18 = (char *)&v73 - v17;
  uint64_t v19 = swift_getTupleTypeMetadata2();
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)&v73 - v21;
  uint64_t v91 = *(void *)(v16 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v73 - v27;
  uint64_t v87 = a1;
  uint64_t v29 = a1[2];
  uint64_t v30 = v98;
  (*(void (**)(uint64_t))(*(void *)v29 + 224))(v26);
  if (v30) {
    return v18 & 1;
  }
  unint64_t v32 = v92;
  BOOL v74 = v25;
  uint64_t v75 = v28;
  uint64_t v98 = 0;
  uint64_t v76 = v16;
  uint64_t v73 = AssociatedTypeWitness;
  uint64_t v33 = TupleTypeMetadata2;
  if ((*(unsigned int (**)(char *, uint64_t, void *))(*(TupleTypeMetadata2 - 1) + 48))(v18, 1, TupleTypeMetadata2) != 1)
  {
    char v37 = v18[*((int *)v33 + 12)];
    uint64_t v38 = *(int *)(v19 + 48);
    uint64_t v39 = v91;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v91 + 32);
    uint64_t v41 = v18;
    uint64_t v42 = v76;
    v40(v22, v41, v76);
    v22[v38] = v37;
    int v43 = v22[*(int *)(v19 + 48)];
    uint64_t v44 = v75;
    uint64_t v45 = v22;
    uint64_t v46 = v42;
    v40(v75, v45, v42);
    uint64_t v47 = v39;
    uint64_t v48 = (uint64_t)v44;
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
    uint64_t v50 = v74;
    v49(v74, v48, v46);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v50, v46);
LABEL_16:
      uint64_t v71 = (void *)(*(uint64_t (**)(uint64_t))(*v87 + 264))(v51);
      MEMORY[0x270FA5388](v71);
      *(&v73 - 2) = v90;
      *(&v73 - 1) = v48;
      char v72 = sub_24D3E6F1C((uint64_t)sub_24D784D7C, (uint64_t)(&v73 - 4));

      LOBYTE(v18) = v72 & 1;
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v46);
      return v18 & 1;
    }
    LODWORD(v92) = v43;
    TupleTypeMetadata2 = v49;
    uint64_t v52 = v86;
    uint64_t v53 = v88;
    uint64_t v54 = v73;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v88, v50, v73);
    uint64_t v55 = v84;
    char v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 64))(v54, v84);
    uint64_t v57 = v85;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v85, v53, v54);
    if (v56)
    {
      uint64_t v58 = *(uint64_t (***)(char *, uint64_t))(v52 + 8);
      uint64_t v89 = (v52 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v92 = v58;
      ((void (*)(char *, uint64_t))v58)(v57, v54);
      uint64_t v59 = v82;
      uint64_t v60 = (uint64_t)v83;
      uint64_t v61 = v81;
    }
    else
    {
      int v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 72))(v54, v55);
      uint64_t v63 = *(void (**)(char *, uint64_t))(v52 + 8);
      v63(v57, v54);
      uint64_t v64 = v52 + 8;
      uint64_t v59 = v82;
      uint64_t v60 = (uint64_t)v83;
      uint64_t v61 = v81;
      if (((v62 | v92) & 1) == 0)
      {
        uint64_t v51 = ((uint64_t (*)(char *, uint64_t))v63)(v53, v54);
        uint64_t v47 = v91;
        goto LABEL_16;
      }
      uint64_t v89 = v64 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v92 = (uint64_t (**)(char *, uint64_t))v63;
    }
    uint64_t v94 = v77;
    uint64_t v95 = v59;
    uint64_t v96 = v78;
    uint64_t v97 = v61;
    type metadata accessor for JobResult();
    uint64_t v86 = type metadata accessor for ReconciliationSideMutation();
    uint64_t v87 = (void *)swift_getTupleTypeMetadata2();
    uint64_t v65 = v46;
    uint64_t v66 = (_WORD *)(v60 + *((int *)v87 + 12));
    uint64_t v18 = (char *)TupleTypeMetadata2;
    ((void (*)(uint64_t, uint64_t, uint64_t))TupleTypeMetadata2)(v60, v48, v65);
    *uint64_t v66 = 3;
    swift_storeEnumTagMultiPayload();
    uint64_t v67 = v48;
    uint64_t v68 = v80;
    swift_storeEnumTagMultiPayload();
    uint64_t v69 = v90;
    sub_24D907568(v90, v60);
    unsigned int v85 = *(char **)(v79 + 8);
    ((void (*)(uint64_t, uint64_t))v85)(v60, v68);
    uint64_t v70 = (unsigned char *)(v60 + *((int *)v87 + 12));
    ((void (*)(uint64_t, uint64_t, uint64_t))v18)(v60, v67, v76);
    unsigned char *v70 = 0;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_24D907568(v69, v60);
    ((void (*)(uint64_t, uint64_t))v85)(v60, v68);
    ((void (*)(char *, uint64_t))v92)(v88, v73);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v67, v76);
    LOBYTE(v18) = 1;
    return v18 & 1;
  }
  uint64_t v34 = v32[1](v18, v89);
  uint64_t v35 = v98;
  char v36 = (*(uint64_t (**)(uint64_t))(*(void *)v29 + 232))(v34);
  if (!v35)
  {
    if ((v36 & 1) == 0) {
      sub_24D76BFD4(v87, v90);
    }
    LOBYTE(v18) = 1;
  }
  return v18 & 1;
}

uint64_t sub_24D76BCB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v26 = a3;
  uint64_t v3 = *(void *)(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 96);
  uint64_t v5 = *(void *)(*(void *)a1 + 104);
  uint64_t v28 = *(void *)(*(void *)a1 + 80);
  uint64_t v29 = v3;
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  uint64_t v23 = type metadata accessor for ReconciliationMutation();
  uint64_t v27 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v7 = (char *)v22 - v6;
  uint64_t v29 = v3;
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  v22[2] = type metadata accessor for JobResult();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = swift_getAssociatedConformanceWitness();
  uint64_t v28 = AssociatedTypeWitness;
  uint64_t v29 = v9;
  uint64_t v30 = AssociatedConformanceWitness;
  uint64_t v31 = v11;
  uint64_t v12 = type metadata accessor for ReconciliationID();
  type metadata accessor for ReconciliationSideMutation();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = &v7[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v15 = *(void *)(v12 - 8);
  v22[0] = *(void *)(v15 + 16);
  v22[1] = v15 + 16;
  uint64_t v16 = v24;
  ((void (*)(char *, uint64_t, uint64_t))v22[0])(v7, v24, v12);
  *(_WORD *)uint64_t v14 = 3;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = v23;
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = v25;
  sub_24D907568(v25, (uint64_t)v7);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v27 + 8);
  v27 += 8;
  v19(v7, v17);
  uint64_t v20 = &v7[*(int *)(TupleTypeMetadata2 + 48)];
  ((void (*)(char *, uint64_t, uint64_t))v22[0])(v7, v16, v12);
  *uint64_t v20 = 0;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v18, (uint64_t)v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v7, v17);
  *uint64_t v26 = 1;
  return result;
}

uint64_t sub_24D76BFD4(void *a1, uint64_t a2)
{
  uint64_t v22 = a2;
  uint64_t v3 = (void *)*a1;
  uint64_t v23 = sub_24DCC8CE8();
  uint64_t v4 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v6 = (char *)&AssociatedTypeWitness - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v3[13];
  uint64_t v8 = v3[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&AssociatedTypeWitness - v10;
  id v12 = objc_msgSend(self, sel_queue);
  sub_24D6050CC(0, 0, (uint64_t)"scheduleDiskImportFinished(db:result:)", 38, 2, (uint64_t)sub_24D784D2C, (uint64_t)a1);

  uint64_t v13 = v3[10];
  uint64_t v14 = v3[12];
  uint64_t v24 = v13;
  uint64_t v25 = v8;
  uint64_t v26 = v14;
  uint64_t v27 = v7;
  type metadata accessor for JobResult();
  uint64_t v24 = v8;
  uint64_t v25 = v13;
  uint64_t v26 = v7;
  uint64_t v27 = v14;
  type metadata accessor for DiskImport.DiskImportFinished();
  sub_24DBB275C();
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v16 = v15;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v23);
  double v18 = v16 * 1000000000.0;
  if ((~COERCE__INT64(v16 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v18 < 9.22337204e18)
  {
    uint64_t v19 = (uint64_t)v18;
    swift_allocObject();
    uint64_t v20 = sub_24D983960((uint64_t)v11, 0x2000000000000000, v19, 0x20000);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
    sub_24D855694(v22, v20);
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_24D76C2FC()
{
  return 0xD000000000000014;
}

uint64_t sub_24D76C318(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v19 = a5;
  uint64_t v20 = a4;
  uint64_t v21 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  id v12 = (char *)&v19 - v11;
  if ((*(unsigned char *)(v5 + 140) & 2) != 0)
  {
    uint64_t v15 = v21;
    uint64_t v16 = a1[2];
    (*(void (**)(uint64_t))(*(void *)v16 + 224))(v10);
    int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2);
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    if (v17 == 1 && ((*(uint64_t (**)(uint64_t))(*(void *)v16 + 232))(v18) & 1) == 0) {
      sub_24D76BFD4(a1, v15);
    }
  }
  else if ((sub_24D76B390(a1, v21) & 1) == 0)
  {
    type metadata accessor for DiskImportContinuation();
    uint64_t v13 = swift_allocObject();
    v20(v13);
    return swift_release();
  }
  return ((uint64_t (*)(void, void, void, void))v20)(0, 0, 0, 0);
}

uint64_t type metadata accessor for DiskImport.ContinueDiskImport()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D76C67C()
{
  return 0xD00000000000001ELL;
}

void sub_24D76C698(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, id), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v84 = a5;
  unsigned int v85 = a4;
  uint64_t v96 = a3;
  uint64_t v113 = a2;
  uint64_t v8 = *v6;
  uint64_t v10 = *(void *)(*v6 + 608);
  uint64_t v11 = *(void *)(*v6 + 616);
  uint64_t v12 = *(void *)(*v6 + 624);
  uint64_t v114 = *(void *)(*v6 + 600);
  uint64_t v9 = v114;
  uint64_t v115 = v10;
  uint64_t v116 = v11;
  uint64_t v117 = v12;
  uint64_t v13 = type metadata accessor for ItemReconciliation();
  uint64_t v87 = sub_24DCCA3F8();
  uint64_t v107 = *(void *)(v87 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v87);
  uint64_t v101 = (char *)&v78 - v15;
  uint64_t v94 = v13;
  uint64_t v103 = *(void *)(v13 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v86 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v91 = (char *)&v78 - v18;
  uint64_t v114 = v9;
  uint64_t v115 = v10;
  uint64_t v97 = v10;
  uint64_t v116 = v11;
  uint64_t v117 = v12;
  uint64_t v112 = v12;
  uint64_t v93 = type metadata accessor for ReconciliationMutation();
  uint64_t v104 = *(void (***)(char *, uint64_t))(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v20 = (char *)&v78 - v19;
  uint64_t v102 = v9;
  uint64_t v21 = type metadata accessor for SnapshotItem();
  uint64_t v95 = *(void *)(v21 - 8);
  uint64_t v22 = *(void *)(v95 + 64);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v78 - v25;
  uint64_t v92 = a1;
  uint64_t v27 = (uint64_t)v6 + *(void *)(v8 + 576);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1 + 32) + 472))(v27, v113);
  uint64_t v109 = v26;
  id v110 = 0;
  uint64_t v90 = v20;
  uint64_t v79 = v30;
  uint64_t v99 = v11;
  uint64_t v31 = MEMORY[0x253327DC0](v29, v21);
  uint64_t v111 = v6;
  uint64_t v32 = (uint64_t)v101;
  uint64_t v33 = v27;
  uint64_t v34 = v95;
  uint64_t v35 = v29;
  if (v31)
  {
    uint64_t v36 = 0;
    int v108 = (void (**)(char *, uint64_t *, uint64_t))(v95 + 16);
    uint64_t v106 = (void (**)(char *, char *, uint64_t))(v95 + 32);
    uint64_t v89 = (void (**)(uint64_t, uint64_t))(v104 + 1);
    uint64_t v104 = (void (**)(char *, uint64_t))(v95 + 8);
    uint64_t v88 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48);
    uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v103 + 32);
    uint64_t v80 = (void (**)(char *, char *, uint64_t))(v103 + 16);
    uint64_t v83 = (void (**)(char *, uint64_t))(v103 + 8);
    uint64_t v81 = (void (**)(uint64_t, uint64_t))(v107 + 8);
    uint64_t v98 = v33;
    uint64_t v103 = v22;
    uint64_t v107 = v29;
    uint64_t v105 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    do
    {
      char v37 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v37)
      {
        uint64_t v38 = v109;
        (*(void (**)(char *, unint64_t, uint64_t))(v34 + 16))(v109, v35+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v36, v21);
        uint64_t v39 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v69 = sub_24DCCA778();
        if (v22 != 8)
        {
          __break(1u);
          return;
        }
        uint64_t v114 = v69;
        uint64_t v70 = v109;
        (*v108)(v109, &v114, v21);
        uint64_t v38 = v70;
        swift_unknownObjectRelease();
        uint64_t v35 = v107;
        uint64_t v39 = v36 + 1;
        if (__OFADD__(v36, 1))
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      (*v106)(v24, v38, v21);
      if ((v111[17] & 0x20) != 0)
      {
        uint64_t v114 = v102;
        uint64_t v115 = v97;
        uint64_t v116 = v99;
        uint64_t v117 = v112;
        uint64_t v100 = type metadata accessor for JobResult();
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t v41 = swift_getAssociatedTypeWitness();
        uint64_t v113 = v39;
        uint64_t v42 = v41;
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v44 = swift_getAssociatedConformanceWitness();
        uint64_t v114 = AssociatedTypeWitness;
        uint64_t v115 = v42;
        uint64_t v116 = AssociatedConformanceWitness;
        uint64_t v117 = v44;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v46 = (uint64_t)v90;
        uint64_t v47 = &v90[*(int *)(TupleTypeMetadata2 + 48)];
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
        uint64_t v49 = AssociatedTypeWitness;
        uint64_t v33 = v98;
        v48(v90, v105, v49);
        swift_storeEnumTagMultiPayload();
        *(_WORD *)uint64_t v47 = 262;
        uint64_t v32 = (uint64_t)v101;
        uint64_t v39 = v113;
        uint64_t v50 = v96;
        swift_storeEnumTagMultiPayload();
        uint64_t v51 = v93;
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v50, v46);
        uint64_t v52 = v46;
        uint64_t v34 = v95;
        uint64_t v24 = v105;
        uint64_t v53 = v51;
        uint64_t v35 = v107;
        uint64_t v22 = v103;
        (*v89)(v52, v53);
      }
      uint64_t WitnessTable = swift_getWitnessTable();
      if (sub_24D98BCC4(v21, WitnessTable) == 1)
      {
        id v55 = v110;
        sub_24D4759C8((uint64_t)v24, v32);
        id v110 = v55;
        if (v55)
        {
          swift_release();
          (*v104)(v24, v21);
          swift_bridgeObjectRelease();
          id v77 = v110;
          id v28 = v110;
          v85(0, 0, 0, v77);

          return;
        }
        uint64_t v56 = v94;
        if ((*v88)(v32, 1, v94) != 1)
        {
          uint64_t v113 = v39;
          uint64_t v57 = v91;
          (*v82)(v91, v32, v56);
          uint64_t v58 = type metadata accessor for ItemReconciliationHalf();
          int v59 = v57[*(int *)(v58 + 56)];
          if (v59 == 6)
          {
            uint64_t v60 = v86;
            (*v80)(v86, v57, v56);
            uint64_t v61 = *v83;
            goto LABEL_17;
          }
          uint64_t v60 = v86;
          (*v80)(v86, v57, v56);
          uint64_t v61 = *v83;
          if (v59 == 1)
          {
            v61(v60, v56);
            goto LABEL_19;
          }
LABEL_17:
          int v62 = v60[*(int *)(v58 + 56)];
          v61(v60, v56);
          if (v62)
          {
            uint64_t v63 = v91;
            goto LABEL_21;
          }
LABEL_19:
          uint64_t v64 = v91;
          if (v91[*(int *)(v58 + 60)])
          {
            uint64_t v63 = v91;
LABEL_21:
            v61(v63, v56);
          }
          else
          {
            uint64_t v65 = v102;
            uint64_t v66 = v97;
            uint64_t v114 = v102;
            uint64_t v115 = v97;
            uint64_t v67 = v99;
            uint64_t v116 = v99;
            uint64_t v117 = v112;
            type metadata accessor for JobResult();
            uint64_t v114 = v65;
            uint64_t v115 = v66;
            uint64_t v116 = v67;
            uint64_t v117 = v112;
            type metadata accessor for Ingestion.UnfaultDirectoryInTree();
            uint64_t v68 = sub_24DC095B8((uint64_t)v24, v111[15], v111[16], v111[17] | 0x20000);
            sub_24D85246C(v96, v68);
            swift_release();
            v61(v64, v94);
          }
          (*v104)(v24, v21);
          uint64_t v32 = (uint64_t)v101;
          uint64_t v33 = v98;
          uint64_t v22 = v103;
          uint64_t v35 = v107;
          uint64_t v39 = v113;
          goto LABEL_4;
        }
        (*v104)(v24, v21);
        (*v81)(v32, v87);
        uint64_t v22 = v103;
        uint64_t v35 = v107;
      }
      else
      {
        (*v104)(v24, v21);
      }
LABEL_4:
      ++v36;
    }
    while (v39 != MEMORY[0x253327DC0](v35, v21));
  }
  swift_bridgeObjectRelease();
  uint64_t v71 = v99;
  if (!v79)
  {
    uint64_t v72 = v102;
    uint64_t v73 = v97;
    uint64_t v114 = v102;
    uint64_t v115 = v97;
    uint64_t v74 = v112;
    uint64_t v116 = v99;
    uint64_t v117 = v112;
    type metadata accessor for JobResult();
    uint64_t v114 = v72;
    uint64_t v115 = v73;
    uint64_t v116 = v71;
    uint64_t v117 = v74;
    type metadata accessor for Ingestion.UnfaultDirectoryInTree();
    uint64_t v75 = sub_24DC095B8(v33, v111[15], v111[16], v111[17] | 0x20000);
    sub_24D85246C(v96, v75);
    swift_release();
  }
  uint64_t v76 = swift_retain();
  v85(v76, 0, 0, 0);
  swift_release_n();
}

uint64_t type metadata accessor for DiskImport.UnfaultDirectoryAndChildren()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D76D23C()
{
  return 0xD000000000000015;
}

void sub_24D76D258(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, void, void), uint64_t a5)
{
  uint64_t v102 = a5;
  uint64_t v103 = a4;
  uint64_t v114 = a3;
  uint64_t v118 = a2;
  uint64_t v7 = *v5;
  uint64_t v9 = *(void *)(*v5 + 608);
  uint64_t v10 = *(void *)(*v5 + 616);
  uint64_t v11 = *(void *)(*v5 + 624);
  uint64_t v120 = *(void *)(*v5 + 600);
  uint64_t v8 = v120;
  uint64_t v121 = v9;
  uint64_t v122 = v10;
  uint64_t v123 = v11;
  uint64_t v96 = type metadata accessor for PersistenceTrigger();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v94 = (char *)&v82 - v12;
  uint64_t v92 = sub_24DCC8CE8();
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v90 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v100 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v93 = (uint64_t)&v82 - v14;
  uint64_t v120 = v8;
  uint64_t v121 = v9;
  uint64_t v116 = v9;
  uint64_t v122 = v10;
  uint64_t v123 = v11;
  uint64_t v119 = v11;
  uint64_t v101 = type metadata accessor for ReconciliationMutation();
  uint64_t v98 = *(void *)(v101 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v101);
  uint64_t v97 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v117 = (char *)&v82 - v17;
  uint64_t v18 = type metadata accessor for SnapshotItem();
  uint64_t v99 = *(void *)(v18 - 8);
  uint64_t v19 = *(void *)(v99 + 64);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v82 - v22;
  uint64_t v24 = a1;
  uint64_t v25 = *(void *)(a1 + 32);
  uint64_t v26 = *(void *)(v7 + 576);
  uint64_t v88 = v5;
  uint64_t v27 = (uint64_t)v5 + v26;
  id v28 = *(uint64_t (**)(char *, uint64_t))(*(void *)v25 + 472);
  uint64_t v89 = v25;
  uint64_t v30 = v28((char *)v5 + v26, v118);
  uint64_t v112 = v23;
  uint64_t v83 = v19;
  uint64_t v84 = 0;
  uint64_t v86 = v27;
  uint64_t v87 = v31;
  uint64_t v113 = v8;
  uint64_t v85 = v24;
  uint64_t v32 = MEMORY[0x253327DC0](v30, v18);
  uint64_t v33 = v101;
  uint64_t v34 = (uint64_t)v117;
  uint64_t v35 = v99;
  uint64_t v36 = v30;
  if (v32)
  {
    char v37 = v21;
    uint64_t v120 = v113;
    uint64_t v121 = v116;
    uint64_t v122 = v10;
    uint64_t v123 = v119;
    uint64_t v38 = type metadata accessor for JobResult();
    uint64_t v39 = 0;
    uint64_t v111 = (void (**)(char *, uint64_t *, uint64_t))(v35 + 16);
    uint64_t v107 = (void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v108 = v38;
    uint64_t v106 = (void (**)(uint64_t, char *, uint64_t))(v100 + 16);
    uint64_t v105 = (void (**)(uint64_t, uint64_t))(v98 + 8);
    uint64_t v104 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v109 = v30;
    uint64_t v110 = v10;
    while (1)
    {
      char v40 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v40)
      {
        unint64_t v41 = v36
            + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))
            + *(void *)(v35 + 72) * v39;
        uint64_t v42 = v112;
        (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v112, v41, v18);
        uint64_t v43 = AssociatedTypeWitness;
      }
      else
      {
        uint64_t v52 = sub_24DCCA778();
        uint64_t v43 = AssociatedTypeWitness;
        uint64_t v42 = v112;
        if (v83 != 8) {
          goto LABEL_28;
        }
        uint64_t v120 = v52;
        (*v111)(v112, &v120, v18);
        swift_unknownObjectRelease();
      }
      if (__OFADD__(v39, 1)) {
        break;
      }
      uint64_t v117 = (char *)(v39 + 1);
      (*v107)(v37, v42, v18);
      (*v106)(v34, v37, v43);
      uint64_t v118 = v39;
      uint64_t v44 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v46 = swift_getAssociatedConformanceWitness();
      uint64_t v120 = v43;
      uint64_t v121 = v44;
      uint64_t v122 = AssociatedConformanceWitness;
      uint64_t v123 = v46;
      type metadata accessor for ReconciliationID();
      swift_storeEnumTagMultiPayload();
      uint64_t WitnessTable = swift_getWitnessTable();
      if (sub_24D98BCC4(v18, WitnessTable) == 1) {
        char v48 = 2;
      }
      else {
        char v48 = 6;
      }
      uint64_t v10 = v110;
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v49 = v118;
      uint64_t v50 = (char *)(v34 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      *uint64_t v50 = v48;
      v50[1] = 0;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v114, v34);
      (*v105)(v34, v33);
      (*v104)(v37, v18);
      uint64_t v36 = v109;
      uint64_t v51 = MEMORY[0x253327DC0](v109, v18);
      uint64_t v39 = v49 + 1;
      if (v117 == (char *)v51) {
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v53 = v103;
  if (v87)
  {
LABEL_16:
    uint64_t v54 = swift_retain();
    v53(v54, 0, 0, 0);
    swift_release_n();
    return;
  }
  uint64_t v55 = (uint64_t)v97;
  uint64_t v120 = v113;
  uint64_t v121 = v116;
  uint64_t v122 = v10;
  uint64_t v123 = v119;
  uint64_t v118 = type metadata accessor for JobResult();
  uint64_t v56 = v98;
  uint64_t v57 = swift_getAssociatedTypeWitness();
  uint64_t v58 = AssociatedTypeWitness;
  uint64_t v59 = swift_getAssociatedConformanceWitness();
  uint64_t v60 = swift_getAssociatedConformanceWitness();
  uint64_t v120 = v58;
  uint64_t v121 = v57;
  uint64_t v122 = v59;
  uint64_t v123 = v60;
  type metadata accessor for ReconciliationID();
  uint64_t v61 = v10;
  type metadata accessor for ReconciliationSideMutation();
  int v62 = (_WORD *)(v55 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16);
  v63(v55, v86, v58);
  swift_storeEnumTagMultiPayload();
  *int v62 = 6;
  swift_storeEnumTagMultiPayload();
  uint64_t v64 = v101;
  swift_storeEnumTagMultiPayload();
  sub_24D907568(v114, v55);
  uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8))(v55, v64);
  uint64_t v66 = v85;
  uint64_t v67 = v84;
  char v68 = (*(uint64_t (**)(uint64_t))(**(void **)(v85 + 16) + 240))(v65);
  if (v67)
  {
    id v29 = v67;
    v103(0, 0, 0, v67);

    return;
  }
  uint64_t v117 = (char *)v63;
  uint64_t v69 = v66;
  if (v68)
  {
LABEL_23:
    uint64_t v80 = v94;
    ((void (*)(char *, uint64_t, uint64_t))v117)(v94, v86, AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    uint64_t v81 = v96;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *))(*(void *)v69 + 312))(v80);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v80, v81);
    uint64_t v53 = v103;
    goto LABEL_16;
  }
  uint64_t v120 = v113;
  uint64_t v121 = v116;
  uint64_t v122 = v61;
  uint64_t v123 = v119;
  type metadata accessor for DiskImport.ContinueDiskImport();
  sub_24DBB275C();
  uint64_t v70 = v90;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v72 = v71;
  (*(void (**)(char *, uint64_t))(v91 + 8))(v70, v92);
  double v73 = v72 * 1000000000.0;
  if ((~COERCE__INT64(v72 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v74 = v114;
  uint64_t v75 = v100;
  if (v73 > -9.22337204e18)
  {
    if (v73 >= 9.22337204e18) {
      goto LABEL_27;
    }
    uint64_t v76 = (uint64_t)v73;
    uint64_t v77 = v88[17];
    swift_allocObject();
    uint64_t v78 = v93;
    uint64_t v79 = sub_24D983960(v93, 0x2000000000000000, v76, v77);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v78, AssociatedTypeWitness);
    sub_24D85246C(v74, v79);
    swift_release();
    goto LABEL_23;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t type metadata accessor for DiskImport.MarkDirectorDiskImportAsDone()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D76DEEC()
{
  return 0xD000000000000014;
}

uint64_t sub_24D76DF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a3;
  v12[6] = v6;
  uint64_t v13 = *(void (**)(uint64_t (*)(void *), void *))(*(void *)v11 + 752);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13(sub_24D784C70, v12);
  swift_release();

  return swift_release();
}

uint64_t sub_24D76E010(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a3;
  v12[6] = a4;
  swift_retain_n();
  id v13 = a1;
  uint64_t v14 = type metadata accessor for Continuation();
  swift_retain();
  swift_retain();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D732EF0, v11, (uint64_t)sub_24D784D08, (uint64_t)v12, v14, MEMORY[0x263F8D310]);
  swift_release();

  return swift_release();
}

uint64_t sub_24D76E158(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void, void, void, uint64_t))
{
  uint64_t v4 = a4;
  if (a1)
  {
    type metadata accessor for JobResult();
    type metadata accessor for DiskImport.DiskImportFinished();
    uint64_t v8 = (uint64_t)a3 + *(void *)(*a3 + 576);
    uint64_t v10 = a3[15];
    uint64_t v9 = a3[16];
    uint64_t v11 = a3[17];
    swift_allocObject();
    uint64_t v12 = sub_24D983960(v8, v10, v9, v11);
    sub_24D85246C(a2, v12);
    swift_release();
    uint64_t v4 = a4;
  }
  return v4(0, 0, 0, a1);
}

uint64_t type metadata accessor for DiskImport.DiskImportFinished()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D76E2BC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D76E32C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24DCC8CE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v7 = v6;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  double v9 = v7 * 1000000000.0;
  if ((~COERCE__INT64(v7 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v9 < 9.22337204e18)
  {
    *(void *)(v1 + 16) = (uint64_t)v9;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_24D76E458(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  double v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = 0x746976697463613CLL;
  unint64_t v21 = 0xEA00000000003A79;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v11 = v10;
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = v12(v9, v6);
  double v14 = v11 * 1000000000.0;
  if ((~COERCE__INT64(v11 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_24D9AC244((uint64_t)v14, a3);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v16 = v20;
  unint64_t v15 = v21;
  uint64_t v20 = 0x6974617269707865;
  unint64_t v21 = 0xEB000000003A6E6FLL;
  if (a2)
  {
LABEL_9:
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v20 = v16;
    unint64_t v21 = v15;
    swift_bridgeObjectRetain();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v20;
  }
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v18 = v17;
  uint64_t result = v12(v9, v6);
  double v19 = v18 * 1000000000.0;
  if ((~COERCE__INT64(v18 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_13;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v19 < 9.22337204e18)
  {
    sub_24D9AC244((uint64_t)v19, a1);
    goto LABEL_9;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_24D76E700(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000024DD06270 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024DD06290)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_24D76E7EC(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_24D76E828(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v16[0] = a4;
  int v21 = a3;
  uint64_t v17 = a5;
  uint64_t v18 = a6;
  uint64_t v19 = a7;
  uint64_t v20 = a8;
  type metadata accessor for DiskImport.ImportingFolder.CodingKeys();
  swift_getWitnessTable();
  uint64_t v10 = sub_24DCCAD58();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)v16 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  uint64_t v17 = a2;
  LOBYTE(v18) = v21 & 1;
  char v22 = 0;
  sub_24D7852D0();
  uint64_t v14 = v16[1];
  sub_24DCCAC58();
  if (!v14)
  {
    uint64_t v17 = v16[0];
    char v22 = 1;
    sub_24DCCACF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_24D76E9FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a2;
  v13[1] = a3;
  v13[2] = a4;
  v13[3] = a5;
  type metadata accessor for DiskImport.ImportingFolder.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_24DCCAC08();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0B8();
  if (!v5)
  {
    char v14 = 0;
    sub_24D78527C();
    sub_24DCCAB08();
    uint64_t WitnessTable = v13[0];
    char v14 = 1;
    sub_24DCCAB98();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return WitnessTable;
}

unint64_t sub_24D76EC20()
{
  return sub_24D76E7EC(*v0);
}

uint64_t sub_24D76EC34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24D771D80(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_24D76E700, a4);
}

uint64_t sub_24D76EC4C@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24D771DD4(a1, (uint64_t (*)(void, void, void, void))sub_24D42CEDC, a2);
}

uint64_t sub_24D76EC64(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D76ECB8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D76ED0C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_24D76E9FC(a1, a2[2], a2[3], a2[4], a2[5]);
  if (!v3)
  {
    *(void *)a3 = result;
    *(unsigned char *)(a3 + 8) = v6 & 1;
    *(void *)(a3 + 16) = v7;
  }
  return result;
}

uint64_t sub_24D76ED50(void *a1, uint64_t *a2)
{
  return sub_24D76E828(a1, *(void *)v2, *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), a2[2], a2[3], a2[4], a2[5]);
}

uint64_t sub_24D76ED88()
{
  return sub_24D76E458(*(void *)v0, *(unsigned char *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_24D76EDA0()
{
  uint64_t v1 = *v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = type metadata accessor for DiskImport.ImportingFolder();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if ((MEMORY[0x2533276A0](v1, AssociatedTypeWitness, v3, *(void *)(AssociatedConformanceWitness + 32)) & 1) != 0
    && (uint64_t v5 = v0[1],
        uint64_t v6 = swift_getAssociatedTypeWitness(),
        uint64_t v7 = swift_getAssociatedConformanceWitness(),
        (MEMORY[0x2533276A0](v5, v6, v3, *(void *)(v7 + 32)) & 1) != 0)
    && (sub_24DCC9EE8() & 1) != 0)
  {
    char v8 = sub_24DCC9EE8();
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_24D76EF08(void *a1, void *a2)
{
  uint64_t v4 = a2[4];
  uint64_t v5 = a2[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v204 = a2;
  uint64_t v7 = a2[5];
  uint64_t v8 = a2[3];
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v215 = AssociatedTypeWitness;
  uint64_t v216 = v9;
  uint64_t v201 = swift_getAssociatedConformanceWitness();
  int64_t v202 = AssociatedConformanceWitness;
  uint64_t v217 = AssociatedConformanceWitness;
  uint64_t v218 = v201;
  uint64_t v11 = type metadata accessor for ReconciliationID();
  uint64_t v194 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v193 = (char *)&v171 - v12;
  uint64_t v13 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v205 = (char *)&v171 - v14;
  uint64_t v15 = sub_24DCCA3F8();
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  int v195 = (char *)&v171 - v17;
  uint64_t v196 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v16);
  long long v186 = (char *)&v171 - v18;
  uint64_t v215 = v5;
  uint64_t v216 = v8;
  uint64_t v217 = v4;
  uint64_t v218 = v7;
  uint64_t v19 = type metadata accessor for DiskImport.ImportingFolder();
  uint64_t v203 = v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v188 = sub_24DCCA3F8();
  uint64_t v173 = *(void *)(v188 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v188);
  unint64_t v190 = (char *)&v171 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v189 = (uint64_t)&v171 - v24;
  uint64_t v198 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v23);
  long long v187 = (char *)&v171 - v25;
  uint64_t v206 = AssociatedTypeWitness;
  uint64_t v26 = v175;
  uint64_t v27 = swift_getTupleTypeMetadata2();
  uint64_t v191 = sub_24DCCA3F8();
  id v28 = *(void (***)(uint64_t, char *, uint64_t))(v191 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v191);
  uint64_t v31 = (uint64_t (**)(char *, uint64_t))((char *)&v171 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v29);
  uint64_t v197 = (uint64_t)&v171 - v32;
  if (sub_24D76EDA0())
  {
    swift_getWitnessTable();
    if (sub_24DCC9EE8())
    {
      uint64_t v33 = a1[3];
      uint64_t v34 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v33);
      return sub_24D90FFEC(0xD000000000000022, 0x800000024DD06060, v33, v34);
    }
  }
  unint64_t v182 = v28;
  uint64_t v192 = TupleTypeMetadata2;
  uint64_t v204 = (void *)v11;
  uint64_t v36 = a1[3];
  uint64_t v199 = a1[4];
  long long v185 = __swift_project_boxed_opaque_existential_1(a1, v36);
  uint64_t v215 = 0;
  uint64_t v216 = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  uint64_t v215 = 0xD000000000000016;
  uint64_t v216 = 0x800000024DD05FC0;
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D90FFEC(v215, v216, v36, v199);
  swift_bridgeObjectRelease();
  uint64_t v37 = *v26;
  uint64_t v38 = *v26;
  uint64_t v174 = *(void *)(v202 + 32);
  char v39 = MEMORY[0x2533276A0](v38, v206, v19);
  char v40 = v26;
  uint64_t v199 = v19;
  int v200 = a1;
  if ((v39 & 1) == 0)
  {
    uint64_t v184 = v31;
    uint64_t v41 = a1[3];
    uint64_t v42 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v41);
    uint64_t v215 = 0;
    uint64_t v216 = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v215 = 0xD000000000000011;
    uint64_t v216 = 0x800000024DD05FE0;
    uint64_t v210 = sub_24DCC95D8();
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24D90FFEC(v215, v216, v41, v42);
    uint64_t v43 = v206;
    swift_bridgeObjectRelease();
    uint64_t v44 = *(void *)(v37 + 64);
    uint64_t v176 = v37 + 64;
    uint64_t v45 = 1 << *(unsigned char *)(v37 + 32);
    uint64_t v46 = -1;
    if (v45 < 64) {
      uint64_t v46 = ~(-1 << v45);
    }
    unint64_t v47 = v46 & v44;
    long long v185 = (void *)v27;
    uint64_t v183 = v27 - 8;
    unint64_t v178 = (char *)(v198 + 16);
    v182 += 4;
    unint64_t v181 = (void (**)(char *, uint64_t, uint64_t))(v198 + 32);
    unint64_t v180 = (uint64_t (**)(char *, uint64_t))(v198 + 8);
    int64_t v177 = (unint64_t)(v45 + 63) >> 6;
    int64_t v172 = v177 - 1;
    uint64_t v179 = v37;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v48 = 0;
    while (1)
    {
      uint64_t v49 = v197;
      if (v47)
      {
        unint64_t v50 = __clz(__rbit64(v47));
        v47 &= v47 - 1;
        unint64_t v51 = v50 | (v48 << 6);
        uint64_t v52 = v185;
        uint64_t v53 = (char *)v184;
        goto LABEL_10;
      }
      int64_t v61 = v48 + 1;
      uint64_t v52 = v185;
      uint64_t v53 = (char *)v184;
      if (__OFADD__(v48, 1)) {
        goto LABEL_139;
      }
      if (v61 >= v177) {
        goto LABEL_22;
      }
      unint64_t v62 = *(void *)(v176 + 8 * v61);
      if (v62) {
        goto LABEL_14;
      }
      v48 += 2;
      if (v61 + 1 >= v177)
      {
        unint64_t v47 = 0;
        uint64_t v55 = 1;
        int64_t v48 = v61;
        goto LABEL_23;
      }
      unint64_t v62 = *(void *)(v176 + 8 * v48);
      if (v62)
      {
        ++v61;
        goto LABEL_14;
      }
      int64_t v63 = v61 + 2;
      if (v61 + 2 >= v177)
      {
LABEL_22:
        unint64_t v47 = 0;
        uint64_t v55 = 1;
      }
      else
      {
        unint64_t v62 = *(void *)(v176 + 8 * v63);
        if (v62)
        {
          v61 += 2;
LABEL_14:
          unint64_t v47 = (v62 - 1) & v62;
          unint64_t v51 = __clz(__rbit64(v62)) + (v61 << 6);
          int64_t v48 = v61;
LABEL_10:
          uint64_t v54 = v179;
          (*(void (**)(char *, unint64_t, uint64_t))(v198 + 16))(v53, *(void *)(v179 + 48) + *(void *)(v198 + 72) * v51, v43);
          uint64_t v55 = 0;
          uint64_t v56 = *(void *)(v54 + 56) + 24 * v51;
          uint64_t v57 = &v53[*((int *)v52 + 12)];
          uint64_t v58 = *(void *)v56;
          char v59 = *(unsigned char *)(v56 + 8);
          uint64_t v60 = *(void *)(v56 + 16);
          *(void *)uint64_t v57 = v58;
          v57[8] = v59;
          *((void *)v57 + 2) = v60;
          goto LABEL_23;
        }
        while (1)
        {
          int64_t v61 = v63 + 1;
          if (__OFADD__(v63, 1)) {
            goto LABEL_143;
          }
          if (v61 >= v177) {
            break;
          }
          unint64_t v62 = *(void *)(v176 + 8 * v61);
          ++v63;
          if (v62) {
            goto LABEL_14;
          }
        }
        unint64_t v47 = 0;
        uint64_t v55 = 1;
        int64_t v48 = v172;
      }
LABEL_23:
      uint64_t v64 = *(v52 - 1);
      (*(void (**)(char *, uint64_t, uint64_t, void *))(v64 + 56))(v53, v55, 1, v52);
      (*v182)(v49, v53, v191);
      if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v64 + 48))(v49, 1, v52) == 1)
      {
        swift_release();
        char v40 = v175;
        uint64_t v19 = v199;
        a1 = v200;
        break;
      }
      uint64_t v65 = v49 + *((int *)v52 + 12);
      uint64_t v66 = *(void *)v65;
      char v67 = *(unsigned char *)(v65 + 8);
      uint64_t v68 = *(void *)(v65 + 16);
      uint64_t v69 = v187;
      (*v181)(v187, v49, v43);
      uint64_t v71 = v200[3];
      uint64_t v70 = v200[4];
      __swift_project_boxed_opaque_existential_1(v200, v71);
      uint64_t v210 = 0;
      uint64_t v211 = 0xE000000000000000;
      sub_24DCC9968();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v215 = v66;
      LOBYTE(v216) = v67;
      uint64_t v217 = v68;
      swift_getWitnessTable();
      sub_24DCCADC8();
      uint64_t v72 = v71;
      uint64_t v43 = v206;
      sub_24D90FFEC(v210, v211, v72, v70);
      swift_bridgeObjectRelease();
      uint64_t result = (*v180)(v69, v43);
    }
  }
  uint64_t v73 = v40[1];
  uint64_t v179 = *(void *)(v201 + 32);
  if ((MEMORY[0x2533276A0](v73, v203, v19) & 1) == 0)
  {
    uint64_t v75 = a1[3];
    uint64_t v74 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v75);
    uint64_t v215 = 0;
    uint64_t v216 = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v215 = 0xD000000000000015;
    uint64_t v216 = 0x800000024DD06000;
    uint64_t v210 = sub_24DCC95D8();
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24D90FFEC(v215, v216, v75, v74);
    swift_bridgeObjectRelease();
    uint64_t v76 = *(void *)(v73 + 64);
    unint64_t v180 = (uint64_t (**)(char *, uint64_t))(v73 + 64);
    uint64_t v77 = 1 << *(unsigned char *)(v73 + 32);
    uint64_t v78 = -1;
    if (v77 < 64) {
      uint64_t v78 = ~(-1 << v77);
    }
    uint64_t v79 = v73;
    unint64_t v80 = v78 & v76;
    uint64_t v191 = v192 - 8;
    unint64_t v182 = (void (**)(uint64_t, char *, uint64_t))(v196 + 16);
    long long v187 = (char *)(v173 + 32);
    long long v185 = (void *)(v196 + 32);
    uint64_t v184 = (uint64_t (**)(char *, uint64_t))(v196 + 8);
    unint64_t v181 = (void (**)(char *, uint64_t, uint64_t))((unint64_t)(v77 + 63) >> 6);
    unint64_t v178 = (char *)v181 - 1;
    uint64_t v183 = v79;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v81 = 0;
    for (i = v203; ; uint64_t result = (*v184)(v103, i))
    {
      uint64_t v83 = v189;
      if (v80)
      {
        unint64_t v84 = __clz(__rbit64(v80));
        v80 &= v80 - 1;
        unint64_t v85 = v84 | (v81 << 6);
        uint64_t v86 = v192;
        uint64_t v87 = v190;
        goto LABEL_37;
      }
      uint64_t v95 = v81 + 1;
      uint64_t v86 = v192;
      uint64_t v87 = v190;
      if (__OFADD__(v81, 1)) {
        goto LABEL_140;
      }
      if (v95 >= (uint64_t)v181) {
        goto LABEL_49;
      }
      unint64_t v96 = (unint64_t)v180[v95];
      if (v96) {
        goto LABEL_41;
      }
      v81 += 2;
      if (v95 + 1 >= (uint64_t)v181)
      {
        unint64_t v80 = 0;
        uint64_t v89 = 1;
        uint64_t v81 = v95;
        goto LABEL_50;
      }
      unint64_t v96 = (unint64_t)v180[v81];
      if (v96)
      {
        ++v95;
        goto LABEL_41;
      }
      uint64_t v97 = v95 + 2;
      if (v95 + 2 >= (uint64_t)v181)
      {
LABEL_49:
        unint64_t v80 = 0;
        uint64_t v89 = 1;
      }
      else
      {
        unint64_t v96 = (unint64_t)v180[v97];
        if (v96)
        {
          v95 += 2;
LABEL_41:
          unint64_t v80 = (v96 - 1) & v96;
          unint64_t v85 = __clz(__rbit64(v96)) + (v95 << 6);
          uint64_t v81 = v95;
LABEL_37:
          uint64_t v88 = v183;
          (*(void (**)(char *, unint64_t, uint64_t))(v196 + 16))(v87, *(void *)(v183 + 48) + *(void *)(v196 + 72) * v85, v203);
          uint64_t v89 = 0;
          uint64_t v90 = *(void *)(v88 + 56) + 24 * v85;
          uint64_t v91 = &v87[*(int *)(v86 + 48)];
          uint64_t v92 = *(void *)v90;
          char v93 = *(unsigned char *)(v90 + 8);
          uint64_t v94 = *(void *)(v90 + 16);
          *(void *)uint64_t v91 = v92;
          v91[8] = v93;
          *((void *)v91 + 2) = v94;
          goto LABEL_50;
        }
        while (1)
        {
          uint64_t v95 = v97 + 1;
          if (__OFADD__(v97, 1)) {
            goto LABEL_144;
          }
          if (v95 >= (uint64_t)v181) {
            break;
          }
          unint64_t v96 = (unint64_t)v180[v95];
          ++v97;
          if (v96) {
            goto LABEL_41;
          }
        }
        unint64_t v80 = 0;
        uint64_t v89 = 1;
        uint64_t v81 = (uint64_t)v178;
      }
LABEL_50:
      uint64_t v98 = *(void *)(v86 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v87, v89, 1, v86);
      (*(void (**)(uint64_t, char *, uint64_t))v187)(v83, v87, v188);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v83, 1, v86) == 1)
      {
        swift_release();
        char v40 = v175;
        a1 = v200;
        break;
      }
      uint64_t v99 = v83 + *(int *)(v86 + 48);
      uint64_t v100 = *(void *)v99;
      char v101 = *(unsigned char *)(v99 + 8);
      uint64_t v102 = *(void *)(v99 + 16);
      uint64_t v103 = v186;
      ((void (*)(char *, uint64_t, uint64_t))*v185)(v186, v83, i);
      uint64_t v104 = v200[3];
      uint64_t v197 = v200[4];
      __swift_project_boxed_opaque_existential_1(v200, v104);
      uint64_t v210 = 0;
      uint64_t v211 = 0xE000000000000000;
      sub_24DCC9968();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v215 = v100;
      LOBYTE(v216) = v101;
      uint64_t v217 = v102;
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24D90FFEC(v210, v211, v104, v197);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v105 = v40[2];
  uint64_t v106 = v40;
  if (sub_24DCC9EE8() & 1) != 0 && (sub_24DCC9EE8()) {
    goto LABEL_116;
  }
  uint64_t v107 = a1[3];
  uint64_t v108 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v107);
  uint64_t v215 = 0;
  uint64_t v216 = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  uint64_t v215 = 0xD000000000000018;
  uint64_t v216 = 0x800000024DD06020;
  uint64_t v109 = sub_24DCC9EA8();
  uint64_t v110 = (char *)v106[3];
  uint64_t result = sub_24DCC9EA8();
  if (__OFADD__(v109, result)) {
    goto LABEL_142;
  }
  uint64_t v189 = (uint64_t)v110;
  uint64_t v210 = v109 + result;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D90FFEC(v215, v216, v107, v108);
  swift_bridgeObjectRelease();
  if ((v105 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24DCCA5F8();
    uint64_t v111 = v206;
    uint64_t result = sub_24DCC9EF8();
    uint64_t v105 = v210;
    uint64_t v191 = v211;
    uint64_t v112 = v212;
    uint64_t v199 = v213;
    unint64_t v113 = v214;
  }
  else
  {
    uint64_t v114 = -1 << *(unsigned char *)(v105 + 32);
    uint64_t v115 = *(void *)(v105 + 56);
    uint64_t v191 = v105 + 56;
    uint64_t v112 = ~v114;
    uint64_t v116 = -v114;
    if (v116 < 64) {
      uint64_t v117 = ~(-1 << v116);
    }
    else {
      uint64_t v117 = -1;
    }
    unint64_t v113 = v117 & v115;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v199 = 0;
    uint64_t v111 = v206;
  }
  uint64_t v118 = v195;
  uint64_t v192 = v105 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v119 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v198 + 56);
  uint64_t v188 = v112;
  unint64_t v190 = (char *)((unint64_t)(v112 + 64) >> 6);
  uint64_t v197 = v198 + 16;
  uint64_t v120 = (uint64_t (**)(char *, uint64_t))(v198 + 8);
  while ((v105 & 0x8000000000000000) == 0)
  {
    if (v113)
    {
      unint64_t v121 = __clz(__rbit64(v113));
      v113 &= v113 - 1;
      uint64_t v122 = v121 | (v199 << 6);
    }
    else
    {
      uint64_t v126 = v199 + 1;
      if (__OFADD__(v199, 1))
      {
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
        goto LABEL_141;
      }
      if (v126 >= (uint64_t)v190) {
        goto LABEL_87;
      }
      unint64_t v127 = *(void *)(v191 + 8 * v126);
      uint64_t v128 = v199 + 1;
      if (!v127)
      {
        uint64_t v128 = v199 + 2;
        if (v199 + 2 >= (uint64_t)v190) {
          goto LABEL_87;
        }
        unint64_t v127 = *(void *)(v191 + 8 * v128);
        if (!v127)
        {
          uint64_t v128 = v199 + 3;
          if (v199 + 3 >= (uint64_t)v190) {
            goto LABEL_87;
          }
          unint64_t v127 = *(void *)(v191 + 8 * v128);
          if (!v127)
          {
            unsigned int v129 = (char *)(v199 + 4);
            do
            {
              if (v190 == v129) {
                goto LABEL_87;
              }
              unint64_t v127 = *(void *)(v191 + 8 * (void)v129++);
            }
            while (!v127);
            uint64_t v128 = (uint64_t)(v129 - 1);
          }
        }
      }
      unint64_t v113 = (v127 - 1) & v127;
      uint64_t v122 = __clz(__rbit64(v127)) + (v128 << 6);
      uint64_t v199 = v128;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v198 + 16))(v118, *(void *)(v105 + 48) + *(void *)(v198 + 72) * v122, v111);
LABEL_70:
    (*v119)(v118, 0, 1, v111);
    uint64_t v123 = a1[3];
    uint64_t v124 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v123);
    uint64_t v215 = 0;
    uint64_t v216 = 0xE000000000000000;
    sub_24DCC9968();
    sub_24DCCADC8();
    uint64_t v125 = v123;
    uint64_t v111 = v206;
    sub_24D90FFEC(v215, v216, v125, v124);
    uint64_t v118 = v195;
    swift_bridgeObjectRelease();
    uint64_t result = (*v120)(v118, v111);
  }
  if (sub_24DCCA628())
  {
    sub_24DCCADE8();
    swift_unknownObjectRelease();
    goto LABEL_70;
  }
LABEL_87:
  (*v119)(v118, 1, 1, v111);
  sub_24D3E6690();
  uint64_t v130 = v189;
  if ((v189 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24DCCA5F8();
    uint64_t v131 = v203;
    uint64_t result = sub_24DCC9EF8();
    uint64_t v130 = v215;
    uint64_t v198 = v216;
    uint64_t v132 = v217;
    uint64_t v206 = v218;
    unint64_t v133 = v219;
  }
  else
  {
    uint64_t v134 = -1 << *(unsigned char *)(v189 + 32);
    uint64_t v135 = *(void *)(v189 + 56);
    uint64_t v198 = v189 + 56;
    uint64_t v132 = ~v134;
    uint64_t v136 = -v134;
    if (v136 < 64) {
      uint64_t v137 = ~(-1 << v136);
    }
    else {
      uint64_t v137 = -1;
    }
    unint64_t v133 = v137 & v135;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v206 = 0;
    uint64_t v131 = v203;
  }
  uint64_t v138 = v205;
  uint64_t v199 = v130 & 0x7FFFFFFFFFFFFFFFLL;
  int v139 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v196 + 56);
  int v195 = (char *)v132;
  uint64_t v197 = (unint64_t)(v132 + 64) >> 6;
  int64_t v202 = v196 + 16;
  unint64_t v140 = (uint64_t (**)(char *, uint64_t))(v196 + 8);
  uint64_t v141 = v130;
  while (2)
  {
    if ((v130 & 0x8000000000000000) == 0)
    {
      if (v133)
      {
        unint64_t v142 = __clz(__rbit64(v133));
        v133 &= v133 - 1;
        unint64_t v143 = v142 | (v206 << 6);
      }
      else
      {
        uint64_t v146 = v206 + 1;
        if (__OFADD__(v206, 1)) {
          goto LABEL_138;
        }
        if (v146 >= v197) {
          goto LABEL_115;
        }
        unint64_t v147 = *(void *)(v198 + 8 * v146);
        uint64_t v148 = v206 + 1;
        if (!v147)
        {
          uint64_t v148 = v206 + 2;
          if (v206 + 2 >= v197) {
            goto LABEL_115;
          }
          unint64_t v147 = *(void *)(v198 + 8 * v148);
          if (!v147)
          {
            uint64_t v148 = v206 + 3;
            if (v206 + 3 >= v197) {
              goto LABEL_115;
            }
            unint64_t v147 = *(void *)(v198 + 8 * v148);
            if (!v147)
            {
              uint64_t v149 = v206 + 4;
              do
              {
                if (v197 == v149) {
                  goto LABEL_115;
                }
                unint64_t v147 = *(void *)(v198 + 8 * v149++);
              }
              while (!v147);
              uint64_t v148 = v149 - 1;
            }
          }
        }
        unint64_t v133 = (v147 - 1) & v147;
        unint64_t v143 = __clz(__rbit64(v147)) + (v148 << 6);
        uint64_t v206 = v148;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v196 + 16))(v138, *(void *)(v130 + 48) + *(void *)(v196 + 72) * v143, v131);
      goto LABEL_96;
    }
    if (sub_24DCCA628())
    {
      unint64_t v150 = v205;
      sub_24DCCADE8();
      uint64_t v138 = v150;
      swift_unknownObjectRelease();
LABEL_96:
      (*v139)(v138, 0, 1, v131);
      uint64_t v144 = a1[3];
      uint64_t v145 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v144);
      uint64_t v208 = 0;
      uint64_t v209 = 0xE000000000000000;
      sub_24DCC9968();
      sub_24DCCADC8();
      sub_24D90FFEC(v208, v209, v144, v145);
      uint64_t v138 = v205;
      uint64_t v131 = v203;
      swift_bridgeObjectRelease();
      uint64_t result = (*v140)(v138, v131);
      uint64_t v130 = v141;
      continue;
    }
    break;
  }
  uint64_t v138 = v205;
LABEL_115:
  (*v139)(v138, 1, 1, v131);
  sub_24D3E6690();
  uint64_t v106 = v175;
LABEL_116:
  uint64_t v151 = v106[4];
  swift_getWitnessTable();
  uint64_t result = sub_24DCC9EE8();
  if (result) {
    return result;
  }
  uint64_t v152 = a1[3];
  uint64_t v153 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v152);
  uint64_t v208 = 0;
  uint64_t v209 = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  uint64_t v208 = 0xD000000000000014;
  uint64_t v209 = 0x800000024DD06040;
  uint64_t v207 = sub_24DCC9EA8();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v154 = v152;
  uint64_t v155 = v204;
  sub_24D90FFEC(v208, v209, v154, v153);
  swift_bridgeObjectRelease();
  uint64_t v156 = *(void *)(v151 + 56);
  uint64_t v201 = v151 + 56;
  uint64_t v157 = 1 << *(unsigned char *)(v151 + 32);
  uint64_t v158 = -1;
  if (v157 < 64) {
    uint64_t v158 = ~(-1 << v157);
  }
  unint64_t v159 = v158 & v156;
  int64_t v202 = (unint64_t)(v157 + 63) >> 6;
  uint64_t v205 = (char *)(v194 + 16);
  uint64_t v206 = v151;
  uint64_t v203 = v194 + 8;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v160 = 0;
  uint64_t v161 = v194;
  unint64_t v162 = v193;
  while (2)
  {
    if (v159)
    {
      unint64_t v163 = __clz(__rbit64(v159));
      v159 &= v159 - 1;
      unint64_t v164 = v163 | (v160 << 6);
LABEL_121:
      (*(void (**)(char *, unint64_t, void *))(v161 + 16))(v162, *(void *)(v206 + 48) + *(void *)(v161 + 72) * v164, v155);
      uint64_t v165 = a1[3];
      uint64_t v166 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v165);
      uint64_t v208 = 0;
      uint64_t v209 = 0xE000000000000000;
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      uint64_t v167 = v165;
      uint64_t v155 = v204;
      sub_24D90FFEC(v208, v209, v167, v166);
      swift_bridgeObjectRelease();
      uint64_t result = (*(uint64_t (**)(char *, void *))(v161 + 8))(v162, v155);
      continue;
    }
    break;
  }
  int64_t v168 = v160 + 1;
  if (__OFADD__(v160, 1))
  {
    __break(1u);
    goto LABEL_137;
  }
  if (v168 >= v202) {
    return swift_release();
  }
  unint64_t v169 = *(void *)(v201 + 8 * v168);
  ++v160;
  if (v169) {
    goto LABEL_133;
  }
  int64_t v160 = v168 + 1;
  if (v168 + 1 >= v202) {
    return swift_release();
  }
  unint64_t v169 = *(void *)(v201 + 8 * v160);
  if (v169) {
    goto LABEL_133;
  }
  int64_t v170 = v168 + 2;
  if (v170 >= v202) {
    return swift_release();
  }
  unint64_t v169 = *(void *)(v201 + 8 * v170);
  int64_t v160 = v170;
  if (v169)
  {
LABEL_133:
    unint64_t v159 = (v169 - 1) & v169;
    unint64_t v164 = __clz(__rbit64(v169)) + (v160 << 6);
    goto LABEL_121;
  }
  while (1)
  {
    int64_t v160 = v170 + 1;
    if (__OFADD__(v170, 1)) {
      break;
    }
    if (v160 >= v202) {
      return swift_release();
    }
    unint64_t v169 = *(void *)(v201 + 8 * v160);
    ++v170;
    if (v169) {
      goto LABEL_133;
    }
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
  return result;
}

uint64_t sub_24D770978(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000024DD061F0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024DD06210 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024DD06230 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024DD06250 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6F466465727474 && a2 == 0xEC00000073726564 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C667265764F7369 && a2 == 0xED0000676E69776FLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_24D770C08(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x6C6F466465727474;
      break;
    case 5:
      unint64_t result = 0x6C667265764F7369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D770CD8(void *a1, void *a2)
{
  uint64_t v3 = a2[2];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v27 = a2[5];
  uint64_t v38 = v3;
  uint64_t v39 = v4;
  uint64_t v40 = v5;
  uint64_t v41 = v27;
  type metadata accessor for DiskImport.MonitoredFolders.CodingKeys();
  swift_getWitnessTable();
  uint64_t v29 = sub_24DCCAD58();
  uint64_t v25 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v7 = (char *)&v21 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  uint64_t v42 = *v28;
  char v37 = 0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = v3;
  uint64_t v39 = v4;
  uint64_t v24 = v4;
  uint64_t v40 = v5;
  uint64_t v41 = v27;
  type metadata accessor for DiskImport.ImportingFolder();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = *(void *)(AssociatedConformanceWitness + 32);
  sub_24DCC9638();
  uint64_t v11 = *(void *)(AssociatedConformanceWitness + 24);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v35 = v11;
  uint64_t v36 = WitnessTable;
  swift_getWitnessTable();
  uint64_t v13 = v26;
  sub_24DCCACF8();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v7, v29);
  }
  uint64_t v22 = v11;
  uint64_t v23 = v10;
  uint64_t v21 = AssociatedConformanceWitness;
  uint64_t v26 = AssociatedTypeWitness;
  uint64_t v38 = v28[1];
  LOBYTE(v42) = 1;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedConformanceWitness();
  sub_24DCC9638();
  uint64_t v17 = *(void *)(v16 + 24);
  uint64_t v33 = v17;
  uint64_t v34 = WitnessTable;
  swift_getWitnessTable();
  uint64_t v18 = v29;
  sub_24DCCACF8();
  uint64_t v19 = v17;
  uint64_t v38 = v28[2];
  LOBYTE(v42) = 2;
  uint64_t v20 = v26;
  sub_24DCC9F28();
  uint64_t v32 = v22;
  swift_getWitnessTable();
  sub_24DCCACF8();
  uint64_t v38 = v28[3];
  LOBYTE(v42) = 3;
  sub_24DCC9F28();
  uint64_t v31 = v19;
  swift_getWitnessTable();
  sub_24DCCACF8();
  uint64_t v42 = v28[4];
  char v37 = 4;
  uint64_t v38 = v20;
  uint64_t v39 = v15;
  uint64_t v40 = v21;
  uint64_t v41 = v16;
  type metadata accessor for ReconciliationID();
  swift_getWitnessTable();
  sub_24DCC9F28();
  uint64_t v30 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24DCCACF8();
  LOBYTE(v38) = 5;
  sub_24DCCACB8();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v7, v18);
}

uint64_t sub_24D771204@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for DiskImport.ImportingFolder();
  swift_getTupleTypeMetadata2();
  sub_24DCC9C98();
  uint64_t v3 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  uint64_t v16 = sub_24DCC95B8();
  uint64_t v4 = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_24DCC9C98();
  uint64_t v5 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  uint64_t v6 = sub_24DCC95B8();
  uint64_t v7 = sub_24DCC9C98();
  if (MEMORY[0x253327DD0](v7, AssociatedTypeWitness)) {
    uint64_t v8 = sub_24D7846E4(v7, AssociatedTypeWitness, v3);
  }
  else {
    uint64_t v8 = MEMORY[0x263F8EE88];
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_24DCC9C98();
  if (MEMORY[0x253327DD0](v9, v4)) {
    uint64_t v10 = sub_24D7846E4(v9, v4, v5);
  }
  else {
    uint64_t v10 = MEMORY[0x263F8EE88];
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for ReconciliationID();
  uint64_t v12 = sub_24DCC9C98();
  if (MEMORY[0x253327DD0](v12, v11))
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v14 = sub_24D7846E4(v12, v11, WitnessTable);
  }
  else
  {
    uint64_t v14 = MEMORY[0x263F8EE88];
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v16;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v14;
  *(unsigned char *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_24D77149C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v40 = a6;
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v10 = type metadata accessor for DiskImport.MonitoredFolders.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v50 = v10;
  uint64_t v44 = sub_24DCCAC08();
  uint64_t v43 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v52 = (char *)&v40 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  type metadata accessor for DiskImport.ImportingFolder();
  swift_getTupleTypeMetadata2();
  sub_24DCC9C98();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = *(void *)(AssociatedConformanceWitness + 32);
  uint64_t v53 = sub_24DCC95B8();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_24DCC9C98();
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v16 = *(void *)(v15 + 32);
  uint64_t v17 = sub_24DCC95B8();
  uint64_t v18 = sub_24DCC9C98();
  if (MEMORY[0x253327DD0](v18, AssociatedTypeWitness)) {
    uint64_t v47 = sub_24D7846E4(v18, AssociatedTypeWitness, v13);
  }
  else {
    uint64_t v47 = MEMORY[0x263F8EE88];
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_24DCC9C98();
  if (MEMORY[0x253327DD0](v19, v14)) {
    uint64_t v46 = sub_24D7846E4(v19, v14, v16);
  }
  else {
    uint64_t v46 = MEMORY[0x263F8EE88];
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = AssociatedTypeWitness;
  uint64_t v64 = v14;
  uint64_t v65 = AssociatedConformanceWitness;
  uint64_t v66 = v15;
  uint64_t v20 = type metadata accessor for ReconciliationID();
  uint64_t v21 = sub_24DCC9C98();
  uint64_t v22 = MEMORY[0x253327DD0](v21, v20);
  uint64_t v48 = v17;
  uint64_t v42 = v16;
  uint64_t v41 = v15;
  if (v22)
  {
    uint64_t v23 = swift_getWitnessTable();
    uint64_t v45 = sub_24D7846E4(v21, v20, v23);
  }
  else
  {
    uint64_t v45 = MEMORY[0x263F8EE88];
  }
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v55, v55[3]);
  uint64_t v25 = v51;
  uint64_t v24 = v52;
  sub_24DCCB0B8();
  if (!v25)
  {
    uint64_t v26 = v13;
    sub_24DCC9638();
    uint64_t v51 = 0;
    char v67 = 0;
    uint64_t v27 = *(void *)(AssociatedConformanceWitness + 16);
    uint64_t v28 = swift_getWitnessTable();
    uint64_t v61 = v27;
    uint64_t v62 = v28;
    uint64_t AssociatedConformanceWitness = v28;
    swift_getWitnessTable();
    uint64_t v29 = v44;
    uint64_t v30 = v51;
    sub_24DCCAB98();
    if (!v30)
    {
      uint64_t v50 = v27;
      uint64_t v51 = v26;
      swift_bridgeObjectRelease();
      uint64_t v53 = v63;
      sub_24DCC9638();
      char v67 = 1;
      uint64_t v59 = *(void *)(v41 + 16);
      uint64_t v31 = v59;
      uint64_t v60 = AssociatedConformanceWitness;
      swift_getWitnessTable();
      sub_24DCCAB98();
      swift_bridgeObjectRelease();
      uint64_t v32 = v63;
      sub_24DCC9F28();
      char v67 = 2;
      uint64_t v58 = v50;
      swift_getWitnessTable();
      sub_24DCCAB98();
      swift_bridgeObjectRelease();
      uint64_t v33 = v63;
      sub_24DCC9F28();
      char v67 = 3;
      uint64_t v57 = v31;
      swift_getWitnessTable();
      sub_24DCCAB98();
      swift_bridgeObjectRelease();
      uint64_t v34 = v63;
      swift_getWitnessTable();
      sub_24DCC9F28();
      char v67 = 4;
      uint64_t v56 = swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v35 = v52;
      sub_24DCCAB98();
      swift_bridgeObjectRelease();
      uint64_t v36 = v63;
      LOBYTE(v63) = 5;
      char v37 = sub_24DCCAB68();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v29);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      uint64_t v39 = v40;
      *uint64_t v40 = v53;
      v39[1] = v32;
      v39[2] = v33;
      v39[3] = v34;
      v39[4] = v36;
      *((unsigned char *)v39 + 40) = v37 & 1;
      return result;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v29);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

BOOL sub_24D771CD4(char *a1, char *a2)
{
  return sub_24D3F0D84(*a1, *a2);
}

uint64_t sub_24D771CEC()
{
  return sub_24D586754();
}

uint64_t sub_24D771CFC()
{
  return sub_24D58672C();
}

uint64_t sub_24D771D0C()
{
  return sub_24DCCB048();
}

unint64_t sub_24D771D58()
{
  return sub_24D770C08(*v0);
}

uint64_t sub_24D771D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_24D771D80(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_24D770978, a4);
}

uint64_t sub_24D771D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5]);
  *a5 = result;
  return result;
}

uint64_t sub_24D771DBC@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_24D771DD4(a1, (uint64_t (*)(void, void, void, void))sub_24D78525C, a2);
}

uint64_t sub_24D771DD4@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5]);
  *a3 = result;
  return result;
}

uint64_t sub_24D771E10(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D771E64(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

double sub_24D771EB8@<D0>(void *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  sub_24D77149C(a1, a2[2], a2[3], a2[4], a2[5], (uint64_t *)&v7);
  if (!v3)
  {
    long long v6 = v8[0];
    *a3 = v7;
    a3[1] = v6;
    double result = *(double *)((char *)v8 + 9);
    *(_OWORD *)((char *)a3 + 25) = *(_OWORD *)((char *)v8 + 9);
  }
  return result;
}

uint64_t sub_24D771F08(void *a1, void *a2)
{
  return sub_24D770CD8(a1, a2);
}

double sub_24D771F20@<D0>(_OWORD *a1@<X8>)
{
  sub_24D771204((uint64_t)&v4);
  long long v2 = v5[0];
  *a1 = v4;
  a1[1] = v2;
  double result = *(double *)((char *)v5 + 9);
  *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)v5 + 9);
  return result;
}

void *sub_24D771F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24D771FD0(a1, a2, a3, a4);
}

void *sub_24D771FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(MEMORY[0x263F3C6F8]);
  swift_retain();
  id v10 = objc_msgSend(v9, sel_init);
  v4[16] = a1;
  v4[17] = v10;
  v4[18] = a2;
  v4[19] = a3;
  v4[20] = a4;
  v4[21] = 0;
  swift_retain();
  swift_release();
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a1 + 32) + 16) + 136);
  v14[3] = type metadata accessor for DocumentWharf();
  v14[4] = &off_26FFDC750;
  v14[0] = v11;
  swift_retain_n();
  uint64_t v12 = sub_24D7CA03C((uint64_t)v14, 0xD000000000000019, 0x800000024DD06090);
  swift_release();
  swift_release();
  return v12;
}

void sub_24D7720C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 248);
  uint64_t v3 = *(void *)(*(void *)v0 + 272);
  uint64_t v4 = *(void *)(*(void *)v0 + 264);
  uint64_t v139 = *(void *)(*(void *)v0 + 256);
  uint64_t v140 = v2;
  uint64_t v5 = v139;
  uint64_t v6 = v2;
  uint64_t v141 = v3;
  uint64_t v142 = v4;
  uint64_t v7 = type metadata accessor for ItemReconciliation();
  uint64_t v98 = sub_24DCCA3F8();
  uint64_t v96 = *(void *)(v98 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v98);
  uint64_t v106 = (uint64_t)&v92 - v9;
  uint64_t v104 = v7;
  uint64_t v95 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v105 = (char *)&v92 - v10;
  uint64_t v11 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v113 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v112 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v122 = (char *)&v92 - v16;
  uint64_t v93 = v17;
  MEMORY[0x270FA5388](v15);
  uint64_t v126 = (char *)&v92 - v18;
  uint64_t v139 = v6;
  uint64_t v140 = v5;
  uint64_t v141 = v4;
  uint64_t v142 = v3;
  uint64_t v19 = type metadata accessor for ItemReconciliation();
  uint64_t v102 = sub_24DCCA3F8();
  unint64_t v133 = *(char **)(v102 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v102);
  uint64_t v110 = (uint64_t)&v92 - v21;
  uint64_t v109 = v19;
  uint64_t v132 = *(void (***)(char *, char *, uint64_t))(v19 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v103 = (char *)&v92 - v22;
  uint64_t v111 = v6;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v139 = v23;
  uint64_t v140 = AssociatedTypeWitness;
  uint64_t v141 = AssociatedConformanceWitness;
  uint64_t v142 = v25;
  uint64_t v97 = v25;
  uint64_t v129 = type metadata accessor for ReconciliationID();
  uint64_t v121 = *(void *)(v129 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v129);
  uint64_t v128 = (char *)&v92 - v27;
  uint64_t v120 = *(void *)(v23 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v116 = (void (**)(char *, uint64_t))((char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v125 = (void (**)(char *, uint64_t))((char *)&v92 - v31);
  uint64_t v94 = v32;
  MEMORY[0x270FA5388](v30);
  uint64_t v134 = (char *)&v92 - v33;
  sub_24D7CA754();
  sub_24D7CA20C((uint64_t)&v139);
  uint64_t v34 = v139;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v135 = v111;
  uint64_t v136 = v11;
  uint64_t v107 = v4;
  uint64_t v137 = v4;
  uint64_t v138 = v3;
  uint64_t v35 = type metadata accessor for DiskImport.ImportingFolder();
  uint64_t v36 = *(void *)(AssociatedConformanceWitness + 32);
  uint64_t v37 = nullsub_1(v34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v135 = v37;
  uint64_t v127 = v35;
  uint64_t v115 = v36;
  sub_24DCC95C8();
  swift_getWitnessTable();
  uint64_t v38 = sub_24DCC9D78();
  uint64_t v39 = MEMORY[0x253327DC0](v38, v23);
  uint64_t v143 = AssociatedTypeWitness;
  if (!v39) {
    goto LABEL_19;
  }
  uint64_t v40 = 0;
  uint64_t v114 = v1 + 80;
  uint64_t v41 = v120;
  uint64_t v123 = (void (**)(char *, uint64_t *, uint64_t))(v120 + 16);
  uint64_t v119 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 32);
  uint64_t v118 = (void (**)(char *, uint64_t, uint64_t))(v121 + 8);
  uint64_t v108 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v132 + 6);
  char v101 = (void (**)(char *, uint64_t, uint64_t))(v132 + 4);
  uint64_t v99 = (void (**)(char *, uint64_t))(v132 + 1);
  uint64_t v117 = (void (**)(uint64_t, uint64_t))(v120 + 8);
  uint64_t v100 = (void (**)(uint64_t, uint64_t))(v133 + 8);
  uint64_t v124 = (void (**)(char *, uint64_t))v23;
  uint64_t v130 = v38;
  while (1)
  {
    char v45 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v45)
    {
      uint64_t v46 = *(void (**)(char *, uint64_t *, uint64_t))(v41 + 16);
      v46(v134, (uint64_t *)(v38+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * (void)v40), v23);
      uint64_t v47 = (char *)v40 + 1;
      if (__OFADD__(v40, 1)) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v65 = sub_24DCCA778();
      if (v94 != 8)
      {
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        return;
      }
      uint64_t v139 = v65;
      uint64_t v46 = *v123;
      (*v123)(v134, &v139, v23);
      swift_unknownObjectRelease();
      uint64_t v47 = (char *)v40 + 1;
      if (__OFADD__(v40, 1))
      {
LABEL_18:
        __break(1u);
LABEL_19:
        uint64_t v42 = v121;
LABEL_20:
        swift_bridgeObjectRelease();
        sub_24D7CA20C((uint64_t)&v139);
        swift_bridgeObjectRelease();
        uint64_t v66 = v140;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v67 = *(void (***)(char *, uint64_t *, uint64_t))(v97 + 32);
        uint64_t v68 = nullsub_1(v66);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v135 = v68;
        uint64_t v123 = v67;
        sub_24DCC95C8();
        swift_getWitnessTable();
        uint64_t v69 = sub_24DCC9D78();
        if (!MEMORY[0x253327DC0](v69, AssociatedTypeWitness))
        {
LABEL_38:
          swift_bridgeObjectRelease();
          uint64_t v91 = v131;
          sub_24D7769A8();
          if (!v91)
          {
            sub_24D7784B4();
            sub_24D775F9C();
          }
          return;
        }
        uint64_t v70 = 0;
        uint64_t v120 = v1 + 80;
        uint64_t v71 = (void (**)(char *, uint64_t *, uint64_t))(v113 + 16);
        uint64_t v132 = (void (**)(char *, char *, uint64_t))(v113 + 32);
        uint64_t v125 = (void (**)(char *, uint64_t))(v42 + 8);
        uint64_t v119 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
        uint64_t v118 = (void (**)(char *, uint64_t, uint64_t))(v95 + 32);
        uint64_t v121 = v1 + 88;
        uint64_t v116 = (void (**)(char *, uint64_t))(v95 + 8);
        uint64_t v124 = (void (**)(char *, uint64_t))(v113 + 8);
        uint64_t v117 = (void (**)(uint64_t, uint64_t))(v96 + 8);
        uint64_t v130 = v69;
        while (2)
        {
          char v74 = sub_24DCC9CB8();
          sub_24DCC9C68();
          if (v74)
          {
            uint64_t v75 = *(void (**)(char *, uint64_t *, uint64_t))(v113 + 16);
            v75(v126, (uint64_t *)(v69+ ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ *(void *)(v113 + 72) * (void)v70), AssociatedTypeWitness);
          }
          else
          {
            uint64_t v90 = sub_24DCCA778();
            if (v93 != 8) {
              goto LABEL_46;
            }
            uint64_t v139 = v90;
            uint64_t v75 = *v71;
            (*v71)(v126, &v139, AssociatedTypeWitness);
            swift_unknownObjectRelease();
          }
          uint64_t v76 = (uint64_t)v122;
          if (__OFADD__(v70, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          unint64_t v133 = v70;
          uint64_t v134 = v70 + 1;
          (*v132)(v122, v126, AssociatedTypeWitness);
          sub_24D7CA20C((uint64_t)&v139);
          uint64_t v77 = v71;
          swift_bridgeObjectRelease();
          uint64_t AssociatedTypeWitness = v143;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v78 = v128;
          v75(v128, (uint64_t *)v76, AssociatedTypeWitness);
          uint64_t v79 = v129;
          swift_storeEnumTagMultiPayload();
          swift_getWitnessTable();
          char v80 = sub_24DCC9F08();
          swift_bridgeObjectRelease();
          (*v125)(v78, v79);
          if ((v80 & 1) == 0)
          {
            swift_retain();
            uint64_t v81 = v106;
            uint64_t v82 = v131;
            sub_24D475DF0(v76, v106);
            uint64_t v131 = v82;
            uint64_t v83 = v105;
            if (v82)
            {
              swift_release();
              (*v124)(v122, v143);
              goto LABEL_42;
            }
            swift_release();
            uint64_t v84 = v104;
            if ((*v119)(v81, 1, v104) == 1)
            {
              (*v117)(v81, v98);
              unint64_t v85 = v122;
              uint64_t AssociatedTypeWitness = v143;
              uint64_t v71 = v77;
              v75(v112, (uint64_t *)v122, v143);
              uint64_t v139 = 0;
              uint64_t v140 = 0;
              uint64_t v141 = 0;
              LOBYTE(v142) = 1;
              swift_beginAccess();
              sub_24DCC9638();
              sub_24DCC9668();
              swift_endAccess();
              sub_24D7CAC00();
              (*v124)(v85, AssociatedTypeWitness);
              goto LABEL_35;
            }
            (*v118)(v83, v81, v84);
            uint64_t v86 = &v83[*(int *)(v84 + 52)];
            if (v86[*(int *)(type metadata accessor for ItemReconciliationHalf() + 56)] == 4)
            {
              (*v116)(v83, v84);
              uint64_t AssociatedTypeWitness = v143;
              (*v124)(v122, v143);
LABEL_23:
              uint64_t v69 = v130;
              uint64_t v71 = v77;
            }
            else
            {
              uint64_t v87 = v122;
              uint64_t v88 = v143;
              v75(v112, (uint64_t *)v122, v143);
              uint64_t v139 = 0;
              uint64_t v140 = 0;
              uint64_t v141 = 0;
              LOBYTE(v142) = 1;
              swift_beginAccess();
              sub_24DCC9638();
              sub_24DCC9668();
              swift_endAccess();
              sub_24D7CAC00();
              uint64_t v89 = v83;
              uint64_t AssociatedTypeWitness = v88;
              uint64_t v71 = v77;
              (*v116)(v89, v84);
              (*v124)(v87, AssociatedTypeWitness);
LABEL_35:
              uint64_t v69 = v130;
            }
            uint64_t v72 = v134;
            uint64_t v73 = MEMORY[0x253327DC0](v69, AssociatedTypeWitness);
            uint64_t v70 = v133 + 1;
            if (v72 == (char *)v73) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        v75(v112, (uint64_t *)v76, AssociatedTypeWitness);
        uint64_t v139 = 0;
        uint64_t v140 = 0;
        uint64_t v141 = 0;
        LOBYTE(v142) = 1;
        swift_beginAccess();
        sub_24DCC9638();
        sub_24DCC9668();
        swift_endAccess();
        sub_24D7CAC00();
        (*v124)((char *)v76, AssociatedTypeWitness);
        goto LABEL_23;
      }
    }
    uint64_t v132 = v40;
    unint64_t v133 = v47;
    uint64_t v49 = v124;
    uint64_t v48 = (uint64_t)v125;
    (*v119)((uint64_t)v125, (uint64_t)v134, (uint64_t)v124);
    sub_24D7CA20C((uint64_t)&v139);
    uint64_t v50 = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v128;
    v46(v128, (uint64_t *)v48, (uint64_t)v49);
    uint64_t v52 = v129;
    swift_storeEnumTagMultiPayload();
    swift_getWitnessTable();
    char v53 = sub_24DCC9F08();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))*v118)(v51, v52);
    if ((v53 & 1) == 0) {
      break;
    }
    v46((char *)v116, (uint64_t *)v48, (uint64_t)v49);
    uint64_t v139 = 0;
    uint64_t v140 = 0;
    uint64_t v141 = 0;
    LOBYTE(v142) = 1;
    swift_beginAccess();
    sub_24DCC9638();
    sub_24DCC9668();
    swift_endAccess();
    sub_24D7CAC00();
    (*v117)(v48, (uint64_t)v49);
    uint64_t v1 = v50;
    uint64_t AssociatedTypeWitness = v143;
    uint64_t v38 = v130;
    uint64_t v42 = v121;
    uint64_t v41 = v120;
    uint64_t v23 = (uint64_t)v49;
LABEL_4:
    uint64_t v43 = v133;
    uint64_t v44 = MEMORY[0x253327DC0](v38, v23);
    uint64_t v40 = (void (**)(char *, char *, uint64_t))((char *)v132 + 1);
    if (v43 == (char *)v44) {
      goto LABEL_20;
    }
  }
  uint64_t v54 = v46;
  swift_retain();
  uint64_t v55 = v110;
  uint64_t v56 = v131;
  sub_24D4759C8(v48, v110);
  uint64_t v131 = v56;
  uint64_t v1 = v50;
  uint64_t AssociatedTypeWitness = v143;
  uint64_t v38 = v130;
  if (!v56)
  {
    swift_release();
    uint64_t v57 = v109;
    int v58 = (*v108)(v55, 1, v109);
    uint64_t v23 = (uint64_t)v124;
    if (v58 == 1)
    {
      (*v100)(v55, v102);
      uint64_t v59 = v125;
      v46((char *)v116, (uint64_t *)v125, v23);
      uint64_t v139 = 0;
      uint64_t v140 = 0;
      uint64_t v141 = 0;
      LOBYTE(v142) = 1;
      swift_beginAccess();
      sub_24DCC9638();
      sub_24DCC9668();
      swift_endAccess();
      sub_24D7CAC00();
      (*v117)((uint64_t)v59, v23);
      uint64_t v42 = v121;
    }
    else
    {
      uint64_t v60 = v103;
      (*v101)(v103, v55, v57);
      uint64_t v61 = type metadata accessor for ItemReconciliationHalf();
      uint64_t v62 = v60;
      BOOL v63 = v60[*(int *)(v61 + 56)] == 3;
      uint64_t v42 = v121;
      if (v63)
      {
        (*v99)(v62, v57);
        (*v117)((uint64_t)v125, v23);
      }
      else
      {
        uint64_t v64 = v125;
        v54((char *)v116, (uint64_t *)v125, v23);
        uint64_t v139 = 0;
        uint64_t v140 = 0;
        uint64_t v141 = 0;
        LOBYTE(v142) = 1;
        swift_beginAccess();
        sub_24DCC9638();
        sub_24DCC9668();
        swift_endAccess();
        sub_24D7CAC00();
        (*v99)(v103, v57);
        (*v117)((uint64_t)v64, v23);
      }
    }
    uint64_t v41 = v120;
    goto LABEL_4;
  }
  swift_release();
  (*v117)((uint64_t)v125, (uint64_t)v124);
LABEL_42:
  swift_bridgeObjectRelease();
}

uint64_t sub_24D77348C(char a1)
{
  uint64_t result = sub_24D775E94();
  if (a1)
  {
    return sub_24D7CA8F0();
  }
  return result;
}

uint64_t sub_24D7734D0(void *a1)
{
  uint64_t v3 = *v1;
  sub_24D7CA20C((uint64_t)&v8);
  long long v10 = v8;
  *(_OWORD *)uint64_t v11 = v9[0];
  *(_OWORD *)&v11[9] = *(_OWORD *)((char *)v9 + 9);
  long long v4 = *(_OWORD *)(v3 + 264);
  v7[0] = *(_OWORD *)(v3 + 248);
  v7[1] = v4;
  uint64_t v5 = (void *)type metadata accessor for DiskImport.MonitoredFolders();
  sub_24D76EF08(a1, v5);
  uint64_t v12 = v10;
  sub_24D4C6A78((uint64_t)&v12);
  uint64_t v13 = *((void *)&v10 + 1);
  sub_24D4C6A78((uint64_t)&v13);
  uint64_t v14 = *(void *)v11;
  sub_24D4C6A78((uint64_t)&v14);
  uint64_t v15 = *(void *)&v11[8];
  sub_24D4C6A78((uint64_t)&v15);
  *(void *)&v7[0] = *(void *)&v11[16];
  return sub_24D4C6A78((uint64_t)v7);
}

void sub_24D7735BC(uint64_t a1)
{
  uint64_t v3 = sub_24DCC9078();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  uint64_t v30 = 0xD000000000000017;
  unint64_t v31 = 0x800000024DD05F80;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v29 = *(void *)(a1 + 16);
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v29 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
  sub_24D3E4A9C((unint64_t *)&qword_26B199DD0, &qword_26B197E00);
  uint64_t v25 = v7;
  sub_24DCC9708();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v26 = v30;
  unint64_t v27 = v31;
  id v8 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  swift_bridgeObjectRetain_n();
  uint64_t v28 = v6;
  uint64_t v9 = sub_24DCC9068();
  os_log_type_t v10 = sub_24DCCA128();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v24 = v3;
    uint64_t v13 = v12;
    uint64_t v29 = a1;
    uint64_t v30 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v23 = v4;
    uint64_t v14 = sub_24DCC9708();
    uint64_t v29 = sub_24D418FB4(v14, v15, &v30);
    sub_24DCCA428();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v9, v10, "💂🏼‍♀️  TTR-ing stuck items:\n%s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v13, -1, -1);
    MEMORY[0x25332B030](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v28, v3);
  }
  uint64_t v16 = *(void **)(v1 + 136);
  uint64_t v17 = (void *)sub_24DCC97B8();
  uint64_t v18 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  sub_24D3FB6F8(0, (unint64_t *)&qword_26B199EA0);
  uint64_t v19 = (void *)sub_24DCC9C18();
  sub_24DCC8A58();
  uint64_t v20 = (void *)sub_24DCC9C18();
  uint64_t v21 = (void *)sub_24DCC97B8();
  objc_msgSend(v16, sel_requestTapToRadarWithTitle_description_keywords_attachments_displayReason_, v17, v18, v19, v20, v21);
}

uint64_t sub_24D773A28(uint64_t a1)
{
  uint64_t v218 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 272);
  unint64_t v4 = *(void *)(*v1 + 256);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v224 = (char *)v201 - v7;
  uint64_t v8 = *(void *)(v2 + 264);
  uint64_t v9 = v2;
  unint64_t v10 = AssociatedTypeWitness;
  uint64_t v11 = *(void *)(v9 + 248);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_24DCCA3F8();
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v225 = (char *)v201 - v15;
  uint64_t v210 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v232 = (char *)v201 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v205 = (char *)v201 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v209 = (char *)v201 - v20;
  uint64_t v246 = v11;
  unint64_t v247 = v4;
  uint64_t v248 = v8;
  uint64_t v249 = v3;
  uint64_t v21 = type metadata accessor for DiskImport.ImportingFolder();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v214 = sub_24DCCA3F8();
  unint64_t v203 = *(void *)(v214 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v214);
  uint64_t v221 = (char *)v201 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  unint64_t v222 = (char *)v201 - v24;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v26 = v12;
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v246 = v12;
  unint64_t v247 = v10;
  uint64_t v220 = AssociatedConformanceWitness;
  uint64_t v248 = AssociatedConformanceWitness;
  uint64_t v249 = v27;
  uint64_t v219 = v27;
  uint64_t v243 = type metadata accessor for ReconciliationID();
  uint64_t v28 = *(void *)(v243 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v243);
  uint64_t v235 = (char *)v201 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v242 = (char *)v201 - v32;
  uint64_t v211 = *(void *)(v12 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  unint64_t v233 = (char *)v201 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v207 = (char *)v201 - v36;
  MEMORY[0x270FA5388](v35);
  int v237 = (char *)v201 - v37;
  uint64_t v208 = v21;
  uint64_t v38 = swift_getTupleTypeMetadata2();
  uint64_t v217 = (void (**)(char *, char *, uint64_t))sub_24DCCA3F8();
  uint64_t v39 = (uint64_t)*(v217 - 1);
  uint64_t v40 = MEMORY[0x270FA5388](v217);
  uint64_t v42 = (char *)v201 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v40);
  uint64_t v223 = (char *)v201 - v44;
  unint64_t v244 = v1;
  uint64_t v45 = v1[19];
  uint64_t v46 = 1000000000 * v45;
  if ((unsigned __int128)(v45 * (__int128)1000000000) >> 64 != (1000000000 * v45) >> 63)
  {
LABEL_142:
    __break(1u);
    goto LABEL_143;
  }
  uint64_t v227 = v218 - v46;
  if (__OFSUB__(v218, v46))
  {
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
    return result;
  }
  uint64_t v240 = v10;
  uint64_t v47 = v244;
  sub_24D7CA20C((uint64_t)&v246);
  uint64_t v48 = v246;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v255 = v48;
  uint64_t v204 = *(void *)(v220 + 32);
  uint64_t v49 = sub_24DCC9638();
  swift_getWitnessTable();
  unint64_t v206 = v49;
  uint64_t v226 = sub_24DCC9D78();
  int v229 = 0;
  uint64_t v236 = v47 + 10;
  uint64_t v228 = (uint64_t (**)(char *, uint64_t))(v38 - 8);
  uint64_t v216 = (void (**)(char *, char *, void))(v39 + 32);
  uint64_t v231 = (void (**)(char *, char *, uint64_t))(v211 + 32);
  unint64_t v238 = (void (**)(char *, char *, uint64_t))(v211 + 16);
  unint64_t v241 = (void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v234 = v47 + 14;
  uint64_t v230 = (void (**)(char *, uint64_t))(v211 + 8);
  uint64_t v245 = (void *)MEMORY[0x263F8EE78];
  v201[2] = 0x800000024DD05F30;
  unint64_t v202 = (unint64_t)"- Provider phase for ";
  v201[1] = 0x800000024DD05EE0;
  v201[3] = 0x800000024DD05F00;
  uint64_t v239 = v26;
  uint64_t v50 = v221;
  uint64_t v51 = v222;
  uint64_t v52 = v237;
  uint64_t v213 = v38;
  uint64_t v212 = v42;
LABEL_4:
  char v53 = v223;
  uint64_t v54 = v226;
  while (1)
  {
    uint64_t v55 = MEMORY[0x253327DC0](v54, v38);
    uint64_t v56 = v229;
    uint64_t v57 = v240;
    if (v229 == (void (**)(char *, char *, uint64_t))v55)
    {
      uint64_t v58 = *(void *)(v38 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v42, 1, 1, v38);
    }
    else
    {
      char v59 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v59)
      {
        uint64_t v60 = *(void *)(v38 - 8);
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v60 + 16))(v42, v54+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * (void)v56, v38);
        BOOL v61 = __OFADD__(v56, 1);
        uint64_t v62 = (void (**)(char *, char *, uint64_t))((char *)v56 + 1);
        if (v61) {
          goto LABEL_138;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        uint64_t v60 = *(void *)(v38 - 8);
        if (*(void *)(v60 + 64) != 8) {
          goto LABEL_144;
        }
        uint64_t v246 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v60 + 16))(v42, &v246, v38);
        uint64_t result = swift_unknownObjectRelease();
        BOOL v61 = __OFADD__(v56, 1);
        uint64_t v62 = (void (**)(char *, char *, uint64_t))((char *)v56 + 1);
        if (v61)
        {
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
      }
      int v229 = v62;
      uint64_t v58 = v60;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v42, 0, 1, v38);
      uint64_t v52 = v237;
    }
    (*v216)(v53, v42, v217);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v53, 1, v38) == 1) {
      break;
    }
    BOOL v63 = &v53[*(int *)(v38 + 48)];
    uint64_t v64 = v53;
    uint64_t v65 = *(void *)v63;
    char v66 = v63[8];
    uint64_t v67 = *((void *)v63 + 2);
    (*v231)(v52, v64, v26);
    if (v67 < v227)
    {
      sub_24D7CA20C((uint64_t)&v246);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v68 = *v238;
      uint64_t v69 = v242;
      (*v238)(v242, v52, v26);
      uint64_t v70 = v243;
      swift_storeEnumTagMultiPayload();
      swift_getWitnessTable();
      char v71 = sub_24DCC9F08();
      swift_bridgeObjectRelease();
      uint64_t v72 = *v241;
      uint64_t v73 = v69;
      uint64_t v50 = v221;
      uint64_t v74 = v70;
      uint64_t v26 = v239;
      (*v241)(v73, v74);
      if ((v71 & 1) == 0)
      {
        uint64_t v246 = 0;
        unint64_t v247 = 0xE000000000000000;
        sub_24DCCA728();
        sub_24DCC9968();
        sub_24DCCADC8();
        sub_24DCC9968();
        uint64_t v255 = v67 / 1000000000;
        sub_24D4E3A40();
        sub_24DCCA518();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v87 = v246;
        unint64_t v88 = v247;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v89 = v245;
        }
        else {
          uint64_t v89 = sub_24DA13838(0, v245[2] + 1, 1, v245);
        }
        unint64_t v91 = v89[2];
        unint64_t v90 = v89[3];
        if (v91 >= v90 >> 1) {
          uint64_t v89 = sub_24DA13838((void *)(v90 > 1), v91 + 1, 1, v89);
        }
        v89[2] = v91 + 1;
        uint64_t v245 = v89;
        uint64_t v92 = &v89[2 * v91];
        v92[4] = v87;
        v92[5] = v88;
        uint64_t v93 = v237;
        v68(v235, v237, v26);
        uint64_t v94 = v243;
        swift_storeEnumTagMultiPayload();
        swift_beginAccess();
        sub_24DCC9F28();
        uint64_t v95 = v242;
        sub_24DCC9EB8();
        uint64_t v96 = v94;
        uint64_t v26 = v239;
        v72(v95, v96);
        sub_24D7CAC00();
        v68(v207, v93, v26);
        uint64_t v246 = 0;
        unint64_t v247 = 0;
        uint64_t v248 = 0;
        LOBYTE(v249) = 1;
        sub_24DCC9668();
        swift_endAccess();
        sub_24D7CAC00();
        uint64_t v52 = v93;
        (*v230)(v93, v26);
        uint64_t v51 = v222;
        uint64_t v38 = v213;
        uint64_t v42 = v212;
        goto LABEL_4;
      }
    }
    uint64_t v54 = v226;
    if ((v66 & 1) == 0 && v65 < v218)
    {
      uint64_t v246 = 0;
      unint64_t v247 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v75 = v246;
      unint64_t v76 = v247;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native) {
        uint64_t v78 = v245;
      }
      else {
        uint64_t v78 = sub_24DA13838(0, v245[2] + 1, 1, v245);
      }
      unint64_t v80 = v78[2];
      unint64_t v79 = v78[3];
      uint64_t v51 = v222;
      if (v80 >= v79 >> 1) {
        uint64_t v78 = sub_24DA13838((void *)(v79 > 1), v80 + 1, 1, v78);
      }
      uint64_t v42 = v212;
      v78[2] = v80 + 1;
      uint64_t v245 = v78;
      uint64_t v81 = &v78[2 * v80];
      v81[4] = v75;
      v81[5] = v76;
      uint64_t v82 = *v238;
      uint64_t v83 = v237;
      (*v238)(v235, v237, v26);
      uint64_t v84 = v243;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      swift_getWitnessTable();
      sub_24DCC9F28();
      unint64_t v85 = v242;
      sub_24DCC9EB8();
      uint64_t v86 = v84;
      uint64_t v26 = v239;
      (*v241)(v85, v86);
      sub_24D7CAC00();
      v82(v207, v83, v26);
      uint64_t v246 = 0;
      unint64_t v247 = 0;
      uint64_t v248 = 0;
      LOBYTE(v249) = 1;
      sub_24DCC9668();
      swift_endAccess();
      sub_24D7CAC00();
      uint64_t v52 = v83;
      (*v230)(v83, v26);
      uint64_t v38 = v213;
      goto LABEL_4;
    }
    uint64_t v52 = v237;
    (*v230)(v237, v26);
    uint64_t v51 = v222;
    uint64_t v38 = v213;
    uint64_t v42 = v212;
    char v53 = v223;
  }
  swift_bridgeObjectRelease();
  uint64_t v97 = v244;
  sub_24D7CA20C((uint64_t)&v246);
  swift_bridgeObjectRelease();
  unint64_t v98 = v247;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v255 = v98;
  uint64_t v208 = *(void *)(v219 + 32);
  uint64_t v99 = sub_24DCC9638();
  swift_getWitnessTable();
  uint64_t v100 = TupleTypeMetadata2;
  uint64_t v213 = v99;
  uint64_t v101 = sub_24DCC9D78();
  uint64_t v102 = 0;
  uint64_t v223 = (char *)(v100 - 8);
  uint64_t v217 = (void (**)(char *, char *, uint64_t))(v203 + 32);
  int v229 = (void (**)(char *, char *, uint64_t))(v210 + 32);
  int v237 = (char *)(v210 + 16);
  uint64_t v212 = (char *)(v97 + 11);
  uint64_t v228 = (uint64_t (**)(char *, uint64_t))(v210 + 8);
  unint64_t v206 = 0x800000024DD05EC0;
  unint64_t v203 = v202 | 0x8000000000000000;
  uint64_t v207 = (char *)0x800000024DD05E90;
  uint64_t v103 = v209;
  uint64_t v216 = (void (**)(char *, char *, void))v101;
  while (1)
  {
    if (v102 == MEMORY[0x253327DC0](v101, v100))
    {
      uint64_t v104 = *(void *)(v100 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56))(v50, 1, 1, v100);
    }
    else
    {
      char v105 = sub_24DCC9CB8();
      sub_24DCC9C68();
      if (v105)
      {
        uint64_t v106 = *(void *)(v100 - 8);
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v106 + 16))(v50, v101+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v102, v100);
        BOOL v61 = __OFADD__(v102++, 1);
        if (v61) {
          goto LABEL_139;
        }
      }
      else
      {
        uint64_t result = sub_24DCCA778();
        uint64_t v106 = *(void *)(v100 - 8);
        if (*(void *)(v106 + 64) != 8) {
          goto LABEL_145;
        }
        uint64_t v246 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v106 + 16))(v50, &v246, v100);
        uint64_t result = swift_unknownObjectRelease();
        BOOL v61 = __OFADD__(v102++, 1);
        if (v61) {
          goto LABEL_139;
        }
      }
      uint64_t v104 = v106;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v50, 0, 1, v100);
    }
    (*v217)(v51, v50, v214);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v51, 1, v100) == 1) {
      break;
    }
    uint64_t v226 = v102;
    uint64_t v107 = &v51[*(int *)(v100 + 48)];
    uint64_t v108 = *(void *)v107;
    char v109 = v107[8];
    uint64_t v110 = *((void *)v107 + 2);
    (*v229)(v103, v51, v57);
    if (v110 < v227)
    {
      uint64_t v111 = v57;
      sub_24D7CA20C((uint64_t)&v246);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v112 = *(void (**)(char *, char *, uint64_t))v237;
      uint64_t v113 = v242;
      (*(void (**)(char *, char *, uint64_t))v237)(v242, v103, v111);
      uint64_t v114 = v243;
      swift_storeEnumTagMultiPayload();
      swift_getWitnessTable();
      char v115 = sub_24DCC9F08();
      swift_bridgeObjectRelease();
      uint64_t v116 = *v241;
      uint64_t v117 = v113;
      uint64_t v51 = v222;
      uint64_t v118 = v114;
      uint64_t v103 = v209;
      (*v241)(v117, v118);
      if ((v115 & 1) == 0)
      {
        uint64_t v246 = 0;
        unint64_t v247 = 0xE000000000000000;
        sub_24DCCA728();
        sub_24DCC9968();
        sub_24DCCADC8();
        sub_24DCC9968();
        uint64_t v255 = v110 / 1000000000;
        sub_24D4E3A40();
        sub_24DCCA518();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v129 = v246;
        unint64_t v130 = v247;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v131 = v245;
        }
        else {
          uint64_t v131 = sub_24DA13838(0, v245[2] + 1, 1, v245);
        }
        unint64_t v133 = v131[2];
        unint64_t v132 = v131[3];
        if (v133 >= v132 >> 1) {
          uint64_t v131 = sub_24DA13838((void *)(v132 > 1), v133 + 1, 1, v131);
        }
        v131[2] = v133 + 1;
        uint64_t v245 = v131;
        uint64_t v134 = &v131[2 * v133];
        v134[4] = v129;
        v134[5] = v130;
        uint64_t v135 = v240;
        v112(v235, v103, v240);
        uint64_t v136 = v243;
        swift_storeEnumTagMultiPayload();
        swift_beginAccess();
        sub_24DCC9F28();
        uint64_t v137 = v242;
        sub_24DCC9EB8();
        v116(v137, v136);
        sub_24D7CAC00();
        v112(v205, v103, v135);
        uint64_t v57 = v135;
        uint64_t v246 = 0;
        unint64_t v247 = 0;
        uint64_t v248 = 0;
        LOBYTE(v249) = 1;
        sub_24DCC9668();
        swift_endAccess();
        sub_24D7CAC00();
        (*v228)(v103, v135);
        goto LABEL_45;
      }
    }
    if ((v109 & 1) != 0 || v108 >= v218)
    {
      uint64_t v57 = v240;
      (*v228)(v103, v240);
LABEL_45:
      uint64_t v100 = TupleTypeMetadata2;
      uint64_t v50 = v221;
      goto LABEL_46;
    }
    uint64_t v246 = 0;
    unint64_t v247 = 0xE000000000000000;
    sub_24DCCA728();
    sub_24DCC9968();
    sub_24DCCADC8();
    sub_24DCC9968();
    uint64_t v119 = v246;
    unint64_t v120 = v247;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v121 = v245;
    }
    else {
      uint64_t v121 = sub_24DA13838(0, v245[2] + 1, 1, v245);
    }
    unint64_t v123 = v121[2];
    unint64_t v122 = v121[3];
    uint64_t v50 = v221;
    if (v123 >= v122 >> 1) {
      uint64_t v121 = sub_24DA13838((void *)(v122 > 1), v123 + 1, 1, v121);
    }
    v121[2] = v123 + 1;
    uint64_t v245 = v121;
    uint64_t v124 = &v121[2 * v123];
    v124[4] = v119;
    v124[5] = v120;
    uint64_t v125 = *(void (**)(char *, char *, uint64_t))v237;
    uint64_t v126 = v240;
    (*(void (**)(char *, char *, uint64_t))v237)(v235, v103, v240);
    uint64_t v127 = v243;
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    swift_getWitnessTable();
    sub_24DCC9F28();
    uint64_t v128 = v242;
    sub_24DCC9EB8();
    (*v241)(v128, v127);
    sub_24D7CAC00();
    v125(v205, v103, v126);
    uint64_t v246 = 0;
    unint64_t v247 = 0;
    uint64_t v248 = 0;
    LOBYTE(v249) = 1;
    sub_24DCC9668();
    swift_endAccess();
    uint64_t v57 = v126;
    sub_24D7CAC00();
    (*v228)(v103, v126);
    uint64_t v100 = TupleTypeMetadata2;
LABEL_46:
    uint64_t v101 = (uint64_t)v216;
    uint64_t v102 = v226;
  }
  swift_bridgeObjectRelease();
  sub_24D7CA20C((uint64_t)&v246);
  uint64_t v138 = v248;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v138 & 0xC000000000000001) != 0)
  {
    sub_24DCCA5F8();
    uint64_t result = sub_24DCC9EF8();
    uint64_t v138 = v250;
    uint64_t v226 = v251;
    uint64_t v139 = v252;
    uint64_t v140 = v253;
    unint64_t v141 = v254;
  }
  else
  {
    uint64_t v140 = 0;
    uint64_t v142 = -1 << *(unsigned char *)(v138 + 32);
    uint64_t v143 = *(void *)(v138 + 56);
    uint64_t v226 = v138 + 56;
    uint64_t v139 = ~v142;
    uint64_t v144 = -v142;
    if (v144 < 64) {
      uint64_t v145 = ~(-1 << v144);
    }
    else {
      uint64_t v145 = -1;
    }
    unint64_t v141 = v145 & v143;
  }
  uint64_t v146 = v225;
  uint64_t v227 = v138 & 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v147 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v211 + 56);
  unint64_t v222 = (char *)v139;
  uint64_t v223 = (char *)((unint64_t)(v139 + 64) >> 6);
  uint64_t v221 = "ort";
  uint64_t v148 = v233;
  if (v138 < 0) {
    goto LABEL_72;
  }
LABEL_70:
  if (v141)
  {
    unint64_t v149 = __clz(__rbit64(v141));
    v141 &= v141 - 1;
    unint64_t v150 = v149 | ((void)v140 << 6);
LABEL_86:
    uint64_t v152 = v239;
    (*(void (**)(char *, unint64_t, uint64_t))(v211 + 16))(v146, *(void *)(v138 + 48) + *(void *)(v211 + 72) * v150, v239);
    while (1)
    {
      (*v147)(v146, 0, 1, v152);
      (*v231)(v233, v146, v152);
      uint64_t v246 = 0;
      unint64_t v247 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      sub_24DCCADC8();
      uint64_t v157 = v246;
      unint64_t v158 = v247;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v159 = v245;
      }
      else {
        unint64_t v159 = sub_24DA13838(0, v245[2] + 1, 1, v245);
      }
      unint64_t v161 = v159[2];
      unint64_t v160 = v159[3];
      if (v161 >= v160 >> 1) {
        unint64_t v159 = sub_24DA13838((void *)(v160 > 1), v161 + 1, 1, v159);
      }
      v159[2] = v161 + 1;
      uint64_t v245 = v159;
      unint64_t v162 = &v159[2 * v161];
      v162[4] = v157;
      v162[5] = v158;
      uint64_t v163 = v239;
      (*v238)(v235, v148, v239);
      uint64_t v164 = v243;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      swift_getWitnessTable();
      sub_24DCC9F28();
      uint64_t v165 = v242;
      sub_24DCC9EB8();
      (*v241)(v165, v164);
      swift_endAccess();
      sub_24D7CAC00();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v230)(v148, v163);
      uint64_t v146 = v225;
      if ((v138 & 0x8000000000000000) == 0) {
        goto LABEL_70;
      }
LABEL_72:
      if (!sub_24DCCA628()) {
        break;
      }
      uint64_t v151 = v225;
      uint64_t v152 = v239;
      sub_24DCCADE8();
      uint64_t v146 = v151;
      swift_unknownObjectRelease();
    }
    uint64_t v146 = v225;
    goto LABEL_96;
  }
  uint64_t v153 = (uint64_t)(v140 + 1);
  if (__OFADD__(v140, 1))
  {
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  if (v153 < (uint64_t)v223)
  {
    unint64_t v154 = *(void *)(v226 + 8 * v153);
    uint64_t v155 = v140 + 1;
    if (v154) {
      goto LABEL_85;
    }
    uint64_t v155 = v140 + 2;
    if ((uint64_t)(v140 + 2) >= (uint64_t)v223) {
      goto LABEL_96;
    }
    unint64_t v154 = *(void *)(v226 + 8 * (void)v155);
    if (v154) {
      goto LABEL_85;
    }
    uint64_t v155 = v140 + 3;
    if ((uint64_t)(v140 + 3) >= (uint64_t)v223) {
      goto LABEL_96;
    }
    unint64_t v154 = *(void *)(v226 + 8 * (void)v155);
    if (v154)
    {
LABEL_85:
      unint64_t v141 = (v154 - 1) & v154;
      unint64_t v150 = __clz(__rbit64(v154)) + ((void)v155 << 6);
      uint64_t v140 = v155;
      goto LABEL_86;
    }
    uint64_t v156 = v140 + 4;
    while (v223 != v156)
    {
      unint64_t v154 = *(void *)(v226 + 8 * (void)v156++);
      if (v154)
      {
        uint64_t v155 = v156 - 1;
        goto LABEL_85;
      }
    }
  }
LABEL_96:
  uint64_t v166 = v239;
  (*v147)(v146, 1, 1, v239);
  sub_24D3E6690();
  uint64_t v167 = sub_24DCC9C98();
  uint64_t v168 = MEMORY[0x253327DD0](v167, v166);
  unint64_t v169 = v244;
  if (v168) {
    uint64_t v170 = sub_24D7846E4(v167, v166, v204);
  }
  else {
    uint64_t v170 = MEMORY[0x263F8EE88];
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v169[12] = v170;
  swift_bridgeObjectRelease();
  sub_24D7CAC00();
  sub_24D7CA20C((uint64_t)&v246);
  uint64_t v171 = v249;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v171 & 0xC000000000000001) != 0)
  {
    sub_24DCCA5F8();
    uint64_t v172 = v240;
    uint64_t result = sub_24DCC9EF8();
    uint64_t v171 = v255;
    unint64_t v238 = v256;
    uint64_t v173 = v257;
    uint64_t v174 = v258;
    unint64_t v175 = v259;
  }
  else
  {
    uint64_t v174 = 0;
    uint64_t v176 = -1 << *(unsigned char *)(v171 + 32);
    uint64_t v177 = *(void *)(v171 + 56);
    unint64_t v238 = (void (**)(char *, char *, uint64_t))(v171 + 56);
    uint64_t v173 = ~v176;
    uint64_t v178 = -v176;
    if (v178 < 64) {
      uint64_t v179 = ~(-1 << v178);
    }
    else {
      uint64_t v179 = -1;
    }
    unint64_t v175 = v179 & v177;
    uint64_t v172 = v240;
  }
  unint64_t v180 = v224;
  uint64_t v239 = v171 & 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v181 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v210 + 56);
  uint64_t v231 = (void (**)(char *, char *, uint64_t))v173;
  unint64_t v233 = (char *)((unint64_t)(v173 + 64) >> 6);
  unint64_t v182 = v242;
  if (v171 < 0) {
    goto LABEL_108;
  }
LABEL_106:
  if (v175)
  {
    unint64_t v183 = __clz(__rbit64(v175));
    v175 &= v175 - 1;
    unint64_t v184 = v183 | ((void)v174 << 6);
    goto LABEL_122;
  }
  uint64_t v186 = (uint64_t)(v174 + 1);
  if (__OFADD__(v174, 1)) {
    goto LABEL_141;
  }
  if (v186 >= (uint64_t)v233) {
    goto LABEL_132;
  }
  unint64_t v187 = (unint64_t)v238[v186];
  uint64_t v188 = v174 + 1;
  if (v187) {
    goto LABEL_121;
  }
  uint64_t v188 = v174 + 2;
  if ((uint64_t)(v174 + 2) >= (uint64_t)v233) {
    goto LABEL_132;
  }
  unint64_t v187 = (unint64_t)v238[(void)v188];
  if (v187) {
    goto LABEL_121;
  }
  uint64_t v188 = v174 + 3;
  if ((uint64_t)(v174 + 3) >= (uint64_t)v233) {
    goto LABEL_132;
  }
  unint64_t v187 = (unint64_t)v238[(void)v188];
  if (v187)
  {
LABEL_121:
    unint64_t v175 = (v187 - 1) & v187;
    unint64_t v184 = __clz(__rbit64(v187)) + ((void)v188 << 6);
    uint64_t v174 = v188;
LABEL_122:
    (*(void (**)(char *, unint64_t, uint64_t))(v210 + 16))(v180, *(void *)(v171 + 48) + *(void *)(v210 + 72) * v184, v172);
    while (1)
    {
      (*v181)(v180, 0, 1, v172);
      (*v229)(v232, v180, v172);
      uint64_t v246 = 0;
      unint64_t v247 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      sub_24DCCADC8();
      uint64_t v190 = v246;
      unint64_t v191 = v247;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v192 = v245;
      }
      else {
        uint64_t v192 = sub_24DA13838(0, v245[2] + 1, 1, v245);
      }
      unint64_t v194 = v192[2];
      unint64_t v193 = v192[3];
      if (v194 >= v193 >> 1) {
        uint64_t v192 = sub_24DA13838((void *)(v193 > 1), v194 + 1, 1, v192);
      }
      v192[2] = v194 + 1;
      uint64_t v245 = v192;
      int v195 = &v192[2 * v194];
      v195[4] = v190;
      v195[5] = v191;
      uint64_t v196 = v232;
      uint64_t v172 = v240;
      (*(void (**)(char *, char *, uint64_t))v237)(v235, v232, v240);
      uint64_t v197 = v243;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      swift_getWitnessTable();
      sub_24DCC9F28();
      sub_24DCC9EB8();
      (*v241)(v182, v197);
      swift_endAccess();
      sub_24D7CAC00();
      uint64_t result = (*v228)(v196, v172);
      unint64_t v180 = v224;
      if ((v171 & 0x8000000000000000) == 0) {
        goto LABEL_106;
      }
LABEL_108:
      if (!sub_24DCCA628())
      {
        unint64_t v180 = v224;
        goto LABEL_132;
      }
      long long v185 = v224;
      sub_24DCCADE8();
      unint64_t v180 = v185;
      swift_unknownObjectRelease();
    }
  }
  uint64_t v189 = v174 + 4;
  while (v233 != v189)
  {
    unint64_t v187 = (unint64_t)v238[(void)v189++];
    if (v187)
    {
      uint64_t v188 = v189 - 1;
      goto LABEL_121;
    }
  }
LABEL_132:
  (*v181)(v180, 1, 1, v172);
  sub_24D3E6690();
  uint64_t v198 = sub_24DCC9C98();
  if (MEMORY[0x253327DD0](v198, v172)) {
    uint64_t v199 = sub_24D7846E4(v198, v172, v208);
  }
  else {
    uint64_t v199 = MEMORY[0x263F8EE88];
  }
  int v200 = v244;
  swift_bridgeObjectRelease();
  v200[13] = v199;
  swift_bridgeObjectRelease();
  sub_24D7CAC00();
  if (v245[2])
  {
    sub_24D7CA528();
    sub_24D7735BC((uint64_t)v245);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D775E94()
{
  if (*(void *)(v0 + 168))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24DCCA2B8();
    swift_unknownObjectRelease();
    if (*(void *)(v0 + 168))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_24DCCA288();
      swift_unknownObjectRelease();
    }
  }
  *(void *)(v0 + 168) = 0;

  return swift_unknownObjectRelease();
}

uint64_t sub_24D775F34()
{
  return 1;
}

uint64_t sub_24D775F9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = sub_24DCC92E8();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v41 = (void *)((char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v40 = (void *)((char *)v34 - v6);
  uint64_t v46 = sub_24DCC93E8();
  uint64_t v39 = *(void *)(v46 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v46);
  uint64_t v38 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v45 = (char *)v34 - v9;
  uint64_t v44 = (void (*)(char *, uint64_t))sub_24DCC9398();
  uint64_t v43 = *((void *)v44 - 1);
  MEMORY[0x270FA5388](v44);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24DCCA248();
  uint64_t ObjectType = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D7CA20C((uint64_t)&v49);
  long long v51 = v49;
  *(_OWORD *)uint64_t v52 = v50[0];
  *(_OWORD *)&v52[9] = *(_OWORD *)((char *)v50 + 9);
  uint64_t v15 = v2[31];
  uint64_t v16 = v2[32];
  uint64_t v17 = v2[33];
  uint64_t v18 = v2[34];
  v48[0] = v15;
  v48[1] = v16;
  v48[2] = v17;
  v48[3] = v18;
  type metadata accessor for DiskImport.MonitoredFolders();
  char v19 = sub_24D76EDA0();
  uint64_t v53 = v51;
  sub_24D4C6A78((uint64_t)&v53);
  uint64_t v54 = *((void *)&v51 + 1);
  sub_24D4C6A78((uint64_t)&v54);
  uint64_t v55 = *(void *)v52;
  sub_24D4C6A78((uint64_t)&v55);
  uint64_t v56 = *(void *)&v52[8];
  sub_24D4C6A78((uint64_t)&v56);
  v48[0] = *(void *)&v52[16];
  uint64_t result = sub_24D4C6A78((uint64_t)v48);
  if (v19) {
    return sub_24D775E94();
  }
  uint64_t v37 = v3;
  if (!v1[21])
  {
    sub_24D775F34();
    uint64_t v36 = (void (*)(void *))sub_24D3FB6F8(0, (unint64_t *)&qword_26B199E30);
    uint64_t v21 = (void *)sub_24DA637A8();
    v34[2] = v21;
    *(void *)&long long v49 = MEMORY[0x263F8EE78];
    v34[1] = sub_24D784B58((unint64_t *)&qword_26B194030, MEMORY[0x263F8F148]);
    id v35 = v21;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B193FA0);
    sub_24D3E4A9C((unint64_t *)&qword_26B193FB0, (uint64_t *)&unk_26B193FA0);
    sub_24DCCA5B8();
    uint64_t v22 = sub_24DCCA258();

    (*(void (**)(char *, uint64_t))(ObjectType + 8))(v14, v12);
    v1[21] = v22;
    uint64_t result = swift_unknownObjectRelease();
    if (v1[21])
    {
      swift_getObjectType();
      uint64_t v23 = swift_allocObject();
      swift_weakInit();
      uint64_t v24 = (void *)swift_allocObject();
      v24[2] = v15;
      v24[3] = v16;
      v24[4] = v17;
      v24[5] = v18;
      v24[6] = v23;
      swift_unknownObjectRetain();
      swift_retain();
      sub_24D82F614();
      sub_24D3D6620(0, (uint64_t)v11, (uint64_t)sub_24D784C10, (uint64_t)v24);
      swift_unknownObjectRelease();
      swift_release();
      (*(void (**)(char *, void *))(v43 + 8))(v11, v44);
      uint64_t result = swift_release();
      if (v1[21])
      {
        uint64_t ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v25 = v38;
        sub_24DCC93C8();
        uint64_t v26 = v1[18];
        uint64_t v27 = v40;
        *uint64_t v40 = v26;
        LODWORD(v43) = *MEMORY[0x263F8F018];
        uint64_t v28 = v42;
        uint64_t v36 = *(void (**)(void *))(v42 + 104);
        uint64_t v29 = v37;
        v36(v27);
        MEMORY[0x2533274A0](v25, v27);
        uint64_t v30 = *(void (**)(void *, uint64_t))(v28 + 8);
        v30(v27, v29);
        uint64_t v44 = *(void (**)(char *, uint64_t))(v39 + 8);
        v44(v25, v46);
        *uint64_t v27 = v26;
        ((void (*)(void *, void, uint64_t))v36)(v27, v43, v29);
        uint64_t v31 = v41;
        uint64_t v32 = ObjectType;
        sub_24D418098(v41);
        uint64_t v33 = v45;
        MEMORY[0x2533283D0](v45, v27, v31, v32);
        swift_unknownObjectRelease();
        v30(v31, v29);
        v30(v27, v29);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v44)(v33, v46);
        if (v1[21])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          sub_24DCCA298();
          return swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_24D776714()
{
  uint64_t v0 = sub_24DCC8CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24DCC9078();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v9 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v10 = sub_24DCC9068();
    os_log_type_t v11 = sub_24DCCA118();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_24D3D0000, v10, v11, "💂🏼‍♀️  evaluating stuck imports", v12, 2u);
      MEMORY[0x25332B030](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v14 = v13;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    double v15 = v14 * 1000000000.0;
    if ((~COERCE__INT64(v14 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18)
        {
          uint64_t v16 = sub_24D773A28((uint64_t)v15);
          sub_24D775F9C(v16);
          return swift_release();
        }
LABEL_11:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

void sub_24D7769A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = sub_24DCC9078();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v35 = (char *)&v33 - v6;
  sub_24D7CA20C((uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v2[33];
  uint64_t v8 = v2[31];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = v2[32];
  uint64_t v11 = v2[34];
  uint64_t v40 = v8;
  uint64_t v41 = v10;
  uint64_t v42 = v7;
  uint64_t v43 = v11;
  type metadata accessor for DiskImport.ImportingFolder();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v46 = *(void *)(AssociatedConformanceWitness + 32);
  uint64_t v12 = sub_24DCC95D8();
  swift_bridgeObjectRelease();
  sub_24D7CA20C((uint64_t)&v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v38 = swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_24DCC95D8();
  swift_bridgeObjectRelease();
  uint64_t v15 = v12 + v14;
  if (__OFADD__(v12, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_24D7CA20C((uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_24DCC9EA8();
  swift_bridgeObjectRelease();
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_24D7CA20C((uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_24DCC9EA8();
  swift_bridgeObjectRelease();
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v20 = v1;
  sub_24D7CA20C((uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v41 = v13;
  uint64_t v42 = AssociatedConformanceWitness;
  uint64_t v43 = v38;
  type metadata accessor for ReconciliationID();
  swift_getWitnessTable();
  uint64_t v21 = sub_24DCC9EA8();
  swift_bridgeObjectRelease();
  uint64_t v22 = v19 + v21;
  if (__OFADD__(v19, v21))
  {
LABEL_20:
    __break(1u);
    return;
  }
  sub_24D7CA20C((uint64_t)&v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v45 & 1) != 0 || v22 < 51)
  {
    sub_24D7CA20C((uint64_t)&v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v45 == 1 && v22 <= 29)
    {
      id v28 = (id)fpfs_current_or_default_log();
      uint64_t v29 = v34;
      sub_24DCC9088();
      uint64_t v30 = sub_24DCC9068();
      os_log_type_t v31 = sub_24DCCA118();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl(&dword_24D3D0000, v30, v31, "💂🏼‍♀️ we can track more items", v32, 2u);
        MEMORY[0x25332B030](v32, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v37);
      swift_beginAccess();
      *((unsigned char *)v20 + 120) = 0;
      sub_24D7CAC00();
      sub_24D7784B4();
    }
  }
  else
  {
    id v23 = (id)fpfs_current_or_default_log();
    uint64_t v24 = v35;
    sub_24DCC9088();
    uint64_t v25 = sub_24DCC9068();
    os_log_type_t v26 = sub_24DCCA118();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 134217984;
      uint64_t v44 = v22;
      sub_24DCCA428();
      _os_log_impl(&dword_24D3D0000, v25, v26, "💂🏼‍♀️ we're tracking to many importing items (%ld)", v27, 0xCu);
      MEMORY[0x25332B030](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v37);
    swift_beginAccess();
    *((unsigned char *)v20 + 120) = 1;
    sub_24D7CAC00();
  }
}

uint64_t sub_24D776FCC(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = (result / 0x3E8 + 1) * v2;
  if (((unsigned __int128)(result / 0x3E8 + 1) * v2) >> 64 != v3 >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t result = 1000000000 * v3;
  if ((unsigned __int128)(v3 * (__int128)1000000000) >> 64 != (1000000000 * v3) >> 63) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_24D777018(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = a2;
  uint64_t v88 = a1;
  uint64_t v3 = (void *)*v2;
  unint64_t v76 = v2 + 14;
  uint64_t v4 = v3[33];
  uint64_t v5 = v3[31];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v78 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v65 = (uint8_t *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v68 = (uint8_t *)&v57 - v9;
  uint64_t v62 = sub_24DCC9078();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v72 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v11 - 8);
  char v59 = (uint8_t *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v69 = (os_log_t)type metadata accessor for SnapshotItem();
  uint64_t v58 = sub_24DCCA3F8();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v75 = (char *)&v57 - v13;
  uint64_t v14 = v3[34];
  uint64_t v15 = v3[32];
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v67 = v4;
  uint64_t v66 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v64 = v14;
  uint64_t v63 = v15;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v83 = AssociatedTypeWitness;
  uint64_t v84 = v16;
  uint64_t v60 = AssociatedConformanceWitness;
  uint64_t v85 = AssociatedConformanceWitness;
  uint64_t v86 = v18;
  uint64_t v19 = type metadata accessor for ReconciliationID();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v57 - v21;
  uint64_t v23 = sub_24DCCA3F8();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  os_log_type_t v26 = (char *)&v57 - v25;
  uint64_t v27 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v78 + 16);
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v73 = v27;
  uint64_t v74 = v78 + 16;
  v27((uint8_t *)v22, v88, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  swift_getWitnessTable();
  sub_24DCC9F28();
  sub_24DCC9EC8();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  swift_endAccess();
  sub_24D7CAC00();
  id v28 = v2;
  uint64_t v29 = v77;
  uint64_t result = sub_24D7769A8();
  if (v29) {
    return result;
  }
  os_log_type_t v31 = v75;
  uint64_t v32 = v88;
  sub_24D7CA20C((uint64_t)&v83);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v87) {
    return result;
  }
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(**(void **)(v2[16] + 32) + 240);
  swift_retain();
  v33(v32, 1);
  swift_release();
  uint64_t v77 = v2 + 10;
  os_log_t v34 = v69;
  Class isa = v69[-1].isa;
  if ((*((unsigned int (**)(char *, uint64_t, os_log_t))isa + 6))(v31, 1, v69) != 1)
  {
    uint64_t v39 = (uint64_t)v59;
    sub_24D409F80((uint64_t)&v31[SLODWORD(v34[6].isa)], (uint64_t)v59);
    (*((void (**)(char *, os_log_t))isa + 1))(v31, v34);
    unsigned int v40 = *(_DWORD *)(v39 + 4);
    char v41 = *(unsigned char *)(v39 + 8);
    uint64_t result = sub_24D409FE4(v39);
    uint64_t v36 = v70;
    uint64_t v38 = v72;
    uint64_t v37 = v32;
    if (v41)
    {
      unint64_t v76 = 0;
      LODWORD(v75) = 1;
      goto LABEL_8;
    }
    uint64_t v43 = v28[20];
    uint64_t v44 = (v40 / 0x3E8 + 1) * v43;
    if (((unsigned __int128)(v40 / 0x3E8 + 1) * v43) >> 64 == v44 >> 63)
    {
      uint64_t v45 = 1000000000 * v44;
      if ((unsigned __int128)(v44 * (__int128)1000000000) >> 64 == (1000000000 * v44) >> 63)
      {
        uint64_t v42 = v68;
        if (!__OFADD__(v71, v45))
        {
          unint64_t v76 = (void *)(v71 + v45);
          LODWORD(v75) = 0;
          goto LABEL_13;
        }
LABEL_20:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v58);
  unint64_t v76 = 0;
  LODWORD(v75) = 1;
  uint64_t v36 = v70;
  uint64_t v37 = v32;
  uint64_t v38 = v72;
LABEL_8:
  uint64_t v42 = v68;
LABEL_13:
  id v46 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  v73(v42, v37, v36);
  uint64_t v47 = sub_24DCC9068();
  uint64_t v48 = v36;
  os_log_type_t v49 = sub_24DCCA118();
  if (os_log_type_enabled(v47, v49))
  {
    os_log_t v69 = v47;
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    uint64_t v83 = v70;
    uint64_t v68 = v50;
    *(_DWORD *)uint64_t v50 = 136315138;
    char v59 = v50 + 4;
    uint64_t v51 = sub_24DCCAD78();
    uint64_t v79 = sub_24D418FB4(v51, v52, &v83);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    (*(void (**)(uint8_t *, uint64_t))(v78 + 8))(v42, v48);
    os_log_t v53 = v69;
    os_log_type_t v54 = v49;
    uint64_t v55 = v68;
    _os_log_impl(&dword_24D3D0000, v69, v54, "💂🏼‍♀️ start monitoring import:disk for %s", v68, 0xCu);
    uint64_t v56 = v70;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v56, -1, -1);
    uint64_t v37 = v32;
    MEMORY[0x25332B030](v55, -1, -1);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v72, v62);
  }
  else
  {
    (*(void (**)(uint8_t *, uint64_t))(v78 + 8))(v42, v48);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v62);
  }
  v73(v65, v37, v48);
  LOBYTE(v83) = (_BYTE)v75;
  uint64_t v79 = (uint64_t)v76;
  uint64_t v80 = v75 & 1;
  uint64_t v81 = v71;
  char v82 = 0;
  swift_beginAccess();
  uint64_t v83 = v66;
  uint64_t v84 = v63;
  uint64_t v85 = v67;
  uint64_t v86 = v64;
  type metadata accessor for DiskImport.ImportingFolder();
  sub_24DCC9638();
  sub_24DCC9668();
  swift_endAccess();
  sub_24D7CAC00();
  return sub_24D7769A8();
}

uint64_t sub_24D777A68(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = a2;
  uint64_t v88 = a1;
  uint64_t v3 = (void *)*v2;
  unint64_t v76 = v2 + 14;
  uint64_t v4 = v3[34];
  uint64_t v5 = v3[32];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v78 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v65 = (uint8_t *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v68 = (uint8_t *)&v57 - v9;
  uint64_t v62 = sub_24DCC9078();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v72 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v11 - 8);
  char v59 = (uint8_t *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v69 = (os_log_t)type metadata accessor for SnapshotItem();
  uint64_t v58 = sub_24DCCA3F8();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v75 = (char *)&v57 - v13;
  uint64_t v14 = v3[33];
  uint64_t v15 = v3[31];
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v64 = v14;
  uint64_t v63 = v15;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v67 = v4;
  uint64_t v66 = v5;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v83 = v16;
  uint64_t v84 = AssociatedTypeWitness;
  uint64_t v85 = AssociatedConformanceWitness;
  uint64_t v86 = v18;
  uint64_t v60 = v18;
  uint64_t v19 = type metadata accessor for ReconciliationID();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v57 - v21;
  uint64_t v23 = sub_24DCCA3F8();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  os_log_type_t v26 = (char *)&v57 - v25;
  uint64_t v27 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v78 + 16);
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v73 = v27;
  uint64_t v74 = v78 + 16;
  v27((uint8_t *)v22, v88, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  swift_getWitnessTable();
  sub_24DCC9F28();
  sub_24DCC9EC8();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  swift_endAccess();
  sub_24D7CAC00();
  id v28 = v2;
  uint64_t v29 = v77;
  uint64_t result = sub_24D7769A8();
  if (v29) {
    return result;
  }
  os_log_type_t v31 = v75;
  uint64_t v32 = v88;
  sub_24D7CA20C((uint64_t)&v83);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v87) {
    return result;
  }
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(**(void **)(v2[16] + 40) + 240);
  swift_retain();
  v33(v32, 1);
  swift_release();
  uint64_t v77 = v2 + 10;
  os_log_t v34 = v69;
  Class isa = v69[-1].isa;
  if ((*((unsigned int (**)(char *, uint64_t, os_log_t))isa + 6))(v31, 1, v69) != 1)
  {
    uint64_t v39 = (uint64_t)v59;
    sub_24D409F80((uint64_t)&v31[SLODWORD(v34[6].isa)], (uint64_t)v59);
    (*((void (**)(char *, os_log_t))isa + 1))(v31, v34);
    unsigned int v40 = *(_DWORD *)(v39 + 4);
    char v41 = *(unsigned char *)(v39 + 8);
    uint64_t result = sub_24D409FE4(v39);
    uint64_t v36 = v70;
    uint64_t v38 = v72;
    uint64_t v37 = v32;
    if (v41)
    {
      unint64_t v76 = 0;
      LODWORD(v75) = 1;
      goto LABEL_8;
    }
    uint64_t v43 = v28[20];
    uint64_t v44 = (v40 / 0x3E8 + 1) * v43;
    if (((unsigned __int128)(v40 / 0x3E8 + 1) * v43) >> 64 == v44 >> 63)
    {
      uint64_t v45 = 1000000000 * v44;
      if ((unsigned __int128)(v44 * (__int128)1000000000) >> 64 == (1000000000 * v44) >> 63)
      {
        uint64_t v42 = v68;
        if (!__OFADD__(v71, v45))
        {
          unint64_t v76 = (void *)(v71 + v45);
          LODWORD(v75) = 0;
          goto LABEL_13;
        }
LABEL_20:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v58);
  unint64_t v76 = 0;
  LODWORD(v75) = 1;
  uint64_t v36 = v70;
  uint64_t v37 = v32;
  uint64_t v38 = v72;
LABEL_8:
  uint64_t v42 = v68;
LABEL_13:
  id v46 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  v73(v42, v37, v36);
  uint64_t v47 = sub_24DCC9068();
  uint64_t v48 = v36;
  os_log_type_t v49 = sub_24DCCA118();
  if (os_log_type_enabled(v47, v49))
  {
    os_log_t v69 = v47;
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    uint64_t v83 = v70;
    uint64_t v68 = v50;
    *(_DWORD *)uint64_t v50 = 136315138;
    char v59 = v50 + 4;
    uint64_t v51 = sub_24DCCAD78();
    uint64_t v79 = sub_24D418FB4(v51, v52, &v83);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    (*(void (**)(uint8_t *, uint64_t))(v78 + 8))(v42, v48);
    os_log_t v53 = v69;
    os_log_type_t v54 = v49;
    uint64_t v55 = v68;
    _os_log_impl(&dword_24D3D0000, v69, v54, "💂🏼‍♀️ start monitoring import:provider for %s", v68, 0xCu);
    uint64_t v56 = v70;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v56, -1, -1);
    uint64_t v37 = v32;
    MEMORY[0x25332B030](v55, -1, -1);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v72, v62);
  }
  else
  {
    (*(void (**)(uint8_t *, uint64_t))(v78 + 8))(v42, v48);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v62);
  }
  v73(v65, v37, v48);
  LOBYTE(v83) = (_BYTE)v75;
  uint64_t v79 = (uint64_t)v76;
  uint64_t v80 = v75 & 1;
  uint64_t v81 = v71;
  char v82 = 0;
  swift_beginAccess();
  uint64_t v83 = v63;
  uint64_t v84 = v66;
  uint64_t v85 = v64;
  uint64_t v86 = v67;
  type metadata accessor for DiskImport.ImportingFolder();
  sub_24DCC9638();
  sub_24DCC9668();
  swift_endAccess();
  sub_24D7CAC00();
  return sub_24D7769A8();
}

uint64_t sub_24D7784B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24DCC8CE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D7CA20C((uint64_t)&v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v8 = v7;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    double v9 = v8 * 1000000000.0;
    if ((~COERCE__INT64(v8 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v9 > -9.22337204e18)
      {
        if (v9 < 9.22337204e18)
        {
          uint64_t v10 = *(void *)(*(void *)(v0 + 128) + 16);
          MEMORY[0x270FA5388](result);
          *(&v13 - 2) = v1;
          *(&v13 - 1) = v11;
          uint64_t v12 = *(void (**)(uint64_t (*)(uint64_t, uint64_t, int), uint64_t *))(*(void *)v10 + 264);
          swift_retain();
          v12(sub_24D784B38, &v13 - 4);
          return swift_release();
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_24D7786C8(uint64_t a1, uint64_t a2, int a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v101 = a5;
  int v115 = a3;
  uint64_t v122 = a2;
  uint64_t v123 = a1;
  uint64_t v6 = *a4;
  uint64_t v7 = *(void *)(*a4 + 264);
  uint64_t v8 = *(void *)(*a4 + 248);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v6 + 272);
  uint64_t v124 = a4;
  uint64_t v11 = *(void *)(v6 + 256);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v106 = v7;
  uint64_t v105 = v8;
  uint64_t v104 = v10;
  uint64_t v103 = v11;
  uint64_t v130 = AssociatedTypeWitness;
  uint64_t v131 = v12;
  uint64_t v13 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v132 = AssociatedConformanceWitness;
  uint64_t v133 = swift_getAssociatedConformanceWitness();
  uint64_t v110 = v133;
  uint64_t v14 = type metadata accessor for ReconciliationID();
  uint64_t v117 = *(void *)(v14 - 8);
  uint64_t v118 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v116 = (char *)&v101 - v15;
  uint64_t v121 = sub_24DCCA3F8();
  uint64_t v135 = *(void *)(v121 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v121);
  uint64_t v114 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v113 = (char *)&v101 - v19;
  uint64_t v125 = v12;
  uint64_t v20 = *(void *)(v12 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v107 = (char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v108 = (char *)&v101 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v111 = (uint64_t)&v101 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v119 = (char *)&v101 - v27;
  uint64_t v28 = sub_24DCCA3F8();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v101 - v31;
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v30);
  uint64_t v36 = (char *)&v101 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v34);
  uint64_t v39 = (char *)&v101 - v38;
  MEMORY[0x270FA5388](v37);
  char v41 = (char *)&v101 - v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, v123, v28);
  uint64_t v123 = v33;
  int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v32, 1, v13);
  uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v135 + 16);
  uint64_t v112 = v20;
  uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v42 == 1)
  {
    uint64_t v45 = v119;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
    id v46 = v113;
    uint64_t v47 = v121;
    (*v43)(v113, v122, v121);
    uint64_t v48 = v125;
    if ((*v44)(v46, 1, v125) == 1)
    {
      (*(void (**)(char *, uint64_t))(v135 + 8))(v46, v47);
LABEL_33:
      sub_24D7CA20C((uint64_t)&v130);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v85 = v134 ^ 1;
      return v85 & 1;
    }
    uint64_t v62 = v112;
    (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v45, v46, v48);
    sub_24D7CA20C((uint64_t)&v130);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void (**)(char *, char *))(v62 + 16);
    uint64_t v64 = v48;
    uint64_t v65 = v116;
    uint64_t v66 = v64;
    v63(v116, v45);
    uint64_t v67 = v118;
    swift_storeEnumTagMultiPayload();
    swift_getWitnessTable();
    char v68 = sub_24DCC9F08();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v65, v67);
    if (v68)
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v119, v66);
      goto LABEL_33;
    }
    uint64_t v86 = v119;
    ((void (*)(char *, char *, uint64_t))v63)(v107, v119, v66);
    swift_beginAccess();
    sub_24DCC9F28();
    char v87 = v108;
    sub_24DCC9EB8();
    uint64_t v88 = *(void (**)(char *, uint64_t))(v62 + 8);
    v88(v87, v66);
    swift_endAccess();
    sub_24D7CAC00();
    uint64_t v89 = v120;
    sub_24D7769A8(v90);
    if (!v89)
    {
      v88(v86, v66);
      goto LABEL_33;
    }
    v88(v86, v66);
    return v85 & 1;
  }
  uint64_t v113 = v36;
  uint64_t v119 = v39;
  unsigned __int8 v49 = v115;
  uint64_t v50 = v123;
  uint64_t v51 = v13;
  (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v41, v32, v13);
  unint64_t v52 = v114;
  uint64_t v53 = v121;
  (*v43)(v114, v122, v121);
  uint64_t v54 = v125;
  unsigned int v55 = (*v44)(v52, 1, v125);
  uint64_t v56 = v51;
  uint64_t v102 = v41;
  if (v55 != 1)
  {
    uint64_t v69 = v50;
    uint64_t v70 = v112;
    uint64_t v71 = v111;
    (*(void (**)(uint64_t, char *, uint64_t))(v112 + 32))(v111, v52, v54);
    int v72 = v49;
    if (v49 == 4)
    {
      sub_24D7CA20C((uint64_t)&v130);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v91 = v116;
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v116, v71, v54);
      uint64_t v92 = v118;
      swift_storeEnumTagMultiPayload();
      swift_getWitnessTable();
      char v93 = sub_24DCC9F08();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v117 + 8))(v91, v92);
      if (v93)
      {
        uint64_t v73 = v69;
        uint64_t v71 = v111;
        uint64_t v54 = v125;
      }
      else
      {
        sub_24D7CA20C((uint64_t)&v130);
        uint64_t v97 = v131;
        uint64_t v126 = v105;
        uint64_t v127 = v103;
        uint64_t v128 = v106;
        uint64_t v129 = v104;
        type metadata accessor for DiskImport.ImportingFolder();
        uint64_t v98 = v125;
        MEMORY[0x2533276F0](&v126, v111, v97);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v129 == 1)
        {
          uint64_t v71 = v111;
          uint64_t v99 = v120;
          sub_24D777A68(v111, v101);
          uint64_t v73 = v123;
          if (v99)
          {
            (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v98);
            (*(void (**)(char *, uint64_t))(v73 + 8))(v102, v56);
            return v85 & 1;
          }
        }
        else
        {
          uint64_t v73 = v123;
          uint64_t v71 = v111;
        }
        uint64_t v54 = v98;
      }
    }
    else
    {
      uint64_t v73 = v50;
      if (v72 != 3) {
        goto LABEL_32;
      }
      sub_24D7CA20C((uint64_t)&v130);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v74 = *(void (**)(char *))(v50 + 16);
      uint64_t v75 = v51;
      unint64_t v76 = v116;
      uint64_t v77 = (uint64_t)v102;
      v74(v116);
      uint64_t v78 = v118;
      swift_storeEnumTagMultiPayload();
      swift_getWitnessTable();
      char v79 = sub_24DCC9F08();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v117 + 8))(v76, v78);
      if (v79)
      {
        uint64_t v56 = v75;
LABEL_29:
        uint64_t v71 = v111;
        uint64_t v54 = v125;
        goto LABEL_32;
      }
      sub_24D7CA20C((uint64_t)&v130);
      uint64_t v94 = v130;
      uint64_t v126 = v105;
      uint64_t v127 = v103;
      uint64_t v128 = v106;
      uint64_t v129 = v104;
      uint64_t v95 = type metadata accessor for DiskImport.ImportingFolder();
      MEMORY[0x2533276F0](&v126, v77, v94, v75, v95, *(void *)(AssociatedConformanceWitness + 32));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = v75;
      if (v129 != 1)
      {
        uint64_t v73 = v123;
        goto LABEL_29;
      }
      uint64_t v96 = v120;
      sub_24D777018(v77, v101);
      uint64_t v73 = v123;
      uint64_t v71 = v111;
      uint64_t v54 = v125;
      if (v96)
      {
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v111, v125);
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v77, v75);
        return v85 & 1;
      }
    }
LABEL_32:
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v54);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v102, v56);
    goto LABEL_33;
  }
  (*(void (**)(char *, uint64_t))(v135 + 8))(v52, v53);
  sub_24D7CA20C((uint64_t)&v130);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v58 = v56;
  char v59 = v116;
  v57(v116, v41, v58);
  uint64_t v60 = v118;
  swift_storeEnumTagMultiPayload();
  swift_getWitnessTable();
  char v61 = sub_24DCC9F08();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v59, v60);
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v102, v58);
    goto LABEL_33;
  }
  uint64_t v80 = v102;
  v57(v113, v102, v58);
  swift_beginAccess();
  sub_24DCC9F28();
  uint64_t v81 = v119;
  sub_24DCC9EB8();
  char v82 = *(void (**)(char *, uint64_t))(v50 + 8);
  v82(v81, v58);
  swift_endAccess();
  sub_24D7CAC00();
  uint64_t v83 = v120;
  sub_24D7769A8(v84);
  if (!v83)
  {
    v82(v80, v58);
    goto LABEL_33;
  }
  v82(v80, v58);
  return v85 & 1;
}

void sub_24D779570(uint64_t a1)
{
  uint64_t v352 = a1;
  Class isa = v1->isa;
  uint64_t v3 = *((void *)v1->isa + 34);
  uint64_t v4 = *((void *)v1->isa + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v315 = sub_24DCCA3F8();
  uint64_t v314 = *(void *)(v315 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v315);
  unint64_t v311 = (char *)&v292 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v305 = (char *)&v292 - v8;
  uint64_t v9 = *((void *)isa + 33);
  long long v350 = v1;
  uint64_t v10 = *((void *)isa + 31);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v336 = sub_24DCCA3F8();
  uint64_t v335 = *(void (**)(char *, char *, uint64_t))(v336 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v336);
  unint64_t v332 = (char *)&v292 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v312 = (char *)&v292 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v320 = (char *)&v292 - v16;
  uint64_t v307 = sub_24DCC9078();
  uint64_t v306 = *(void *)(v307 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v307);
  unint64_t v295 = (char *)&v292 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v309 = (char *)&v292 - v20;
  uint64_t v334 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v298 = (char *)&v292 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v310 = (char *)&v292 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  unint64_t v324 = (char *)&v292 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  size_t v296 = (char *)&v292 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  unint64_t v304 = (char *)&v292 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  unint64_t v293 = (char *)&v292 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v297 = (char *)&v292 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  unint64_t v303 = (char *)&v292 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  int v301 = (char *)&v292 - v38;
  MEMORY[0x270FA5388](v37);
  unint64_t v294 = (char *)&v292 - v39;
  uint64_t v323 = sub_24DCC8CE8();
  uint64_t v322 = *(void *)(v323 - 8);
  MEMORY[0x270FA5388](v323);
  unint64_t v321 = (char *)&v292 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v354 = (os_log_t)v10;
  os_log_t v355 = v4;
  uint64_t v356 = v9;
  uint64_t v357 = v3;
  uint64_t v41 = type metadata accessor for PersistenceTrigger();
  uint64_t v353 = *(void *)(v41 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  long long v338 = (void (**)(char *, uint64_t))((char *)&v292 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  long long v337 = (void (*)(char *, char *, uint64_t))((char *)&v292 - v45);
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  long long v340 = (char *)&v292 - v47;
  MEMORY[0x270FA5388](v46);
  unsigned __int8 v49 = (char *)&v292 - v48;
  uint64_t v344 = v9;
  uint64_t v347 = v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v343 = v3;
  os_log_t v348 = v4;
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  os_log_t v354 = (os_log_t)v11;
  os_log_t v355 = (os_log_t)AssociatedTypeWitness;
  uint64_t v330 = AssociatedTypeWitness;
  uint64_t v341 = AssociatedConformanceWitness;
  uint64_t v356 = AssociatedConformanceWitness;
  uint64_t v357 = v51;
  uint64_t v339 = type metadata accessor for ReconciliationID();
  uint64_t v342 = sub_24DCCA3F8();
  unint64_t v52 = *(void (***)(char *, uint64_t))(v342 - 8);
  uint64_t v53 = MEMORY[0x270FA5388](v342);
  unint64_t v313 = (char *)&v292 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  size_t v317 = (char *)&v292 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v326 = (char *)&v292 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  unint64_t v308 = (char *)&v292 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  unint64_t v328 = (char *)&v292 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  unint64_t v318 = (char *)&v292 - v64;
  uint64_t v346 = v11;
  uint64_t v345 = *(void *)(v11 - 8);
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  unint64_t v325 = (char *)&v292 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  unint64_t v333 = (char *)&v292 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v71 = (char *)&v292 - v70;
  uint64_t v72 = MEMORY[0x270FA5388](v69);
  unint64_t v299 = (char *)&v292 - v73;
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  uint64_t v300 = (char *)&v292 - v75;
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  uint64_t v78 = (char *)&v292 - v77;
  uint64_t v79 = MEMORY[0x270FA5388](v76);
  uint64_t v81 = (char *)&v292 - v80;
  uint64_t v82 = MEMORY[0x270FA5388](v79);
  unint64_t v302 = (char *)&v292 - v83;
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  unint64_t v329 = (char *)&v292 - v85;
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  uint64_t v319 = (char *)&v292 - v87;
  uint64_t v88 = MEMORY[0x270FA5388](v86);
  v327 = (char *)&v292 - v89;
  uint64_t v90 = MEMORY[0x270FA5388](v88);
  uint64_t v331 = (uint64_t)&v292 - v91;
  MEMORY[0x270FA5388](v90);
  unsigned int v316 = (char *)&v292 - v92;
  char v93 = *(void (**)(char *, uint64_t, uint64_t))(v353 + 16);
  v93(v49, v352, v41);
  unint64_t v351 = (void (*)(char *, char *, uint64_t))v49;
  uint64_t v352 = v41;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xBu:
      uint64_t v94 = v51;
      long long v338 = v52;
      uint64_t v95 = v340;
      uint64_t v96 = ((uint64_t (*)(char *, void, uint64_t))v93)(v340, v351, v352);
      MEMORY[0x270FA5388](v96);
      strcpy((char *)&v292 - 32, " otherID from to ");
      uint64_t v97 = v339;
      uint64_t v98 = v342;
      os_log_t v354 = (os_log_t)v339;
      os_log_t v355 = (os_log_t)v342;
      uint64_t v356 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1995E0);
      uint64_t v357 = v356;
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v100 = &v95[TupleTypeMetadata[12]];
      int v101 = v95[TupleTypeMetadata[16]];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v338[1](v100, v98);
        (*(void (**)(char *, uint64_t))(*(void *)(v97 - 8) + 8))(v95, v97);
LABEL_60:
        (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v353 + 8))(v351, v352);
LABEL_61:
        uint64_t v113 = v349;
        goto LABEL_62;
      }
      int v114 = v95[TupleTypeMetadata[20]];
      if (v114 == 6)
      {
        uint64_t v331 = v94;
        uint64_t v162 = v346;
        uint64_t v117 = v338;
        if ((v101 - 3) >= 2)
        {
          (*(void (**)(char *, uint64_t))(v345 + 8))(v95, v346);
          goto LABEL_59;
        }
        uint64_t v163 = *(void (**)(char *, char *, uint64_t))(v345 + 32);
        uint64_t v164 = v316;
        uint64_t v336 = v345 + 32;
        uint64_t v335 = v163;
        v163(v316, v95, v346);
        uint64_t v165 = (void (*)(char *, char *, uint64_t))v117[4];
        long long v340 = (char *)(v117 + 4);
        long long v337 = v165;
        v165(v318, v100, v98);
        (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v353 + 8))(v351, v352);
        sub_24D7CA20C((uint64_t)&v354);
        os_log_t v166 = v354;
        uint64_t v167 = v162;
        uint64_t v362 = v347;
        os_log_t v363 = v348;
        uint64_t v364 = v344;
        uint64_t v365 = v343;
        uint64_t v168 = type metadata accessor for DiskImport.ImportingFolder();
        uint64_t v353 = *(void *)(v341 + 32);
        MEMORY[0x2533276F0](&v362, v164, v166, v162, v168);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v352 = v168;
        if (v365)
        {
          (*(void (**)(char *, uint64_t))(v345 + 8))(v164, v162);
          uint64_t v169 = v334;
          uint64_t v170 = v339;
          uint64_t v171 = v313;
        }
        else
        {
          id v234 = (id)fpfs_current_or_default_log();
          uint64_t v235 = v309;
          sub_24DCC9088();
          uint64_t v236 = v302;
          (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v302, v164, v167);
          int v237 = sub_24DCC9068();
          os_log_type_t v238 = sub_24DCCA118();
          if (os_log_type_enabled(v237, v238))
          {
            uint64_t v239 = v236;
            uint64_t v240 = (uint8_t *)swift_slowAlloc();
            uint64_t v241 = swift_slowAlloc();
            os_log_t v354 = (os_log_t)v241;
            *(_DWORD *)uint64_t v240 = 136315138;
            uint64_t v242 = sub_24DCCAD78();
            uint64_t v362 = sub_24D418FB4(v242, v243, (uint64_t *)&v354);
            sub_24DCCA428();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v345 + 8))(v239, v346);
            _os_log_impl(&dword_24D3D0000, v237, v238, "💂🏼‍♀️ stop monitoring import:disk for %s", v240, 0xCu);
            swift_arrayDestroy();
            uint64_t v244 = v241;
            uint64_t v167 = v346;
            MEMORY[0x25332B030](v244, -1, -1);
            MEMORY[0x25332B030](v240, -1, -1);

            (*(void (**)(char *, uint64_t))(v306 + 8))(v309, v307);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v345 + 8))(v236, v167);

            (*(void (**)(char *, uint64_t))(v306 + 8))(v235, v307);
          }
          uint64_t v169 = v334;
          uint64_t v170 = v339;
          uint64_t v171 = v313;
          v335(v327, v316, v167);
          os_log_t v354 = 0;
          os_log_t v355 = 0;
          uint64_t v356 = 0;
          LOBYTE(v357) = 1;
          swift_beginAccess();
          sub_24DCC9638();
          sub_24DCC9668();
          swift_endAccess();
          sub_24D7CAC00();
        }
        uint64_t v266 = v342;
        v337(v171, v318, v342);
        uint64_t v267 = *(void *)(v170 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v267 + 48))(v171, 1, v170) == 1)
        {
          v338[1](v171, v266);
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v113 = v349;
          if (EnumCaseMultiPayload != 1)
          {
            (*(void (**)(char *, uint64_t))(v267 + 8))(v171, v170);
            goto LABEL_62;
          }
          uint64_t v269 = v297;
          uint64_t v270 = v330;
          (*(void (**)(char *, char *, uint64_t))(v169 + 32))(v297, v171, v330);
          sub_24D7CA20C((uint64_t)&v354);
          uint64_t v353 = *(void *)(v331 + 32);
          MEMORY[0x2533276F0](&v362, v269, v355, v270, v352);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v365)
          {
            (*(void (**)(char *, uint64_t))(v334 + 8))(v269, v330);
            goto LABEL_62;
          }
          id v274 = (id)fpfs_current_or_default_log();
          uint64_t v275 = v295;
          sub_24DCC9088();
          uint64_t v276 = v334;
          uint64_t v277 = v293;
          unint64_t v351 = *(void (**)(char *, char *, uint64_t))(v334 + 16);
          v351(v293, v269, v330);
          uint64_t v278 = sub_24DCC9068();
          os_log_type_t v279 = sub_24DCCA118();
          if (os_log_type_enabled(v278, v279))
          {
            os_log_t v348 = v278;
            uint64_t v280 = (uint8_t *)swift_slowAlloc();
            uint64_t v281 = swift_slowAlloc();
            os_log_t v354 = (os_log_t)v281;
            *(_DWORD *)uint64_t v280 = 136315138;
            uint64_t v347 = (uint64_t)(v280 + 4);
            uint64_t v282 = v330;
            uint64_t v283 = sub_24DCCAD78();
            uint64_t v362 = sub_24D418FB4(v283, v284, (uint64_t *)&v354);
            sub_24DCCA428();
            swift_bridgeObjectRelease();
            size_t v285 = *(void (**)(char *, uint64_t))(v276 + 8);
            v285(v277, v282);
            os_log_t v286 = v348;
            os_log_type_t v287 = v279;
            uint64_t v288 = v285;
            _os_log_impl(&dword_24D3D0000, v348, v287, "💂🏼‍♀️ stop monitoring import:provider for %s", v280, 0xCu);
            swift_arrayDestroy();
            uint64_t v289 = v281;
            unint64_t v290 = v297;
            MEMORY[0x25332B030](v289, -1, -1);
            MEMORY[0x25332B030](v280, -1, -1);

            (*(void (**)(char *, uint64_t))(v306 + 8))(v295, v307);
          }
          else
          {
            unint64_t v290 = v269;
            uint64_t v288 = *(void (**)(char *, uint64_t))(v276 + 8);
            v288(v277, v330);

            (*(void (**)(char *, uint64_t))(v306 + 8))(v275, v307);
          }
          uint64_t v291 = v330;
          v351(v301, v290, v330);
          os_log_t v354 = 0;
          os_log_t v355 = 0;
          uint64_t v356 = 0;
          LOBYTE(v357) = 1;
          swift_beginAccess();
          sub_24DCC9638();
          sub_24DCC9668();
          swift_endAccess();
          sub_24D7CAC00();
          v288(v290, v291);
        }
LABEL_14:
        uint64_t v113 = v349;
        goto LABEL_62;
      }
      uint64_t v115 = v346;
      uint64_t v116 = v345;
      uint64_t v117 = v338;
      if (v114 == 4)
      {
        uint64_t v172 = v329;
        (*(void (**)(char *, char *, uint64_t))(v345 + 32))(v329, v95, v346);
        uint64_t v173 = v326;
        ((void (*)(char *, char *, uint64_t))v117[4])(v326, v100, v98);
        long long v340 = *(char **)(v116 + 16);
        ((void (*)(char *, char *, uint64_t))v340)(v327, v172, v115);
        uint64_t v362 = 0;
        os_log_t v363 = 0;
        uint64_t v364 = 0;
        LOBYTE(v365) = 1;
        uint64_t v174 = v350 + 10;
        swift_beginAccess();
        os_log_t v354 = (os_log_t)v347;
        os_log_t v355 = v348;
        uint64_t v356 = v344;
        uint64_t v357 = v343;
        type metadata accessor for DiskImport.ImportingFolder();
        uint64_t v347 = *(void *)(v341 + 32);
        sub_24DCC9638();
        unint64_t v175 = v117;
        os_log_t v348 = v174;
        sub_24DCC9668();
        swift_endAccess();
        sub_24D7CAC00();
        uint64_t v176 = v116;
        uint64_t v177 = v317;
        uint64_t v178 = v173;
        uint64_t v179 = v342;
        ((void (*)(char *, char *, uint64_t))v117[2])(v317, v178, v342);
        unint64_t v180 = *(void (***)(char *, uint64_t))(v97 - 8);
        int v181 = ((uint64_t (*)(char *, uint64_t, uint64_t))v180[6])(v177, 1, v97);
        unint64_t v182 = v175;
        uint64_t v183 = v179;
        if (v181 != 1)
        {
          uint64_t v184 = v334;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v185 = (uint64_t)v303;
            uint64_t v186 = v330;
            (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v303, v177, v330);
            unint64_t v187 = v321;
            sub_24DCC8CD8();
            sub_24DCC8C88();
            double v189 = v188;
            (*(void (**)(char *, uint64_t))(v322 + 8))(v187, v323);
            double v190 = v189 * 1000000000.0;
            if ((~COERCE__INT64(v189 * 1000000000.0) & 0x7FF0000000000000) != 0)
            {
              uint64_t v191 = v349;
              uint64_t v192 = v326;
              uint64_t v193 = (uint64_t)v329;
              if (v190 > -9.22337204e18)
              {
                if (v190 < 9.22337204e18)
                {
                  uint64_t v116 = v176;
                  sub_24D777A68(v185, (uint64_t)v190);
                  uint64_t v113 = v191;
                  if (v191)
                  {
                    (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v185, v186);
                    uint64_t v124 = v192;
                    uint64_t v331 = v193;
                    uint64_t v123 = v338;
                    goto LABEL_23;
                  }
                  (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v185, v186);
                  v338[1](v192, v342);
                  (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v193, v346);
                  goto LABEL_100;
                }
LABEL_110:
                __break(1u);
                JUMPOUT(0x24D77C354);
              }
LABEL_109:
              __break(1u);
              goto LABEL_110;
            }
LABEL_108:
            __break(1u);
            goto LABEL_109;
          }
          unint64_t v182 = v180;
          uint64_t v183 = v97;
          unint64_t v175 = v338;
          uint64_t v179 = v342;
          uint64_t v115 = v346;
        }
        v182[1](v177, v183);
        ((void (*)(char *, char *, uint64_t))v340)(v319, v329, v115);
        swift_beginAccess();
        sub_24DCC9F28();
        uint64_t v245 = v327;
        sub_24DCC9EB8();
        uint64_t v246 = *(void (**)(char *, uint64_t))(v176 + 8);
        v246(v245, v115);
        swift_endAccess();
        sub_24D7CAC00();
        v175[1](v326, v179);
        v246(v329, v115);
        uint64_t v113 = v349;
        goto LABEL_100;
      }
      if (v114 != 3)
      {
        (*(void (**)(char *, uint64_t))(v345 + 8))(v340, v346);
LABEL_59:
        v117[1](v100, v98);
        goto LABEL_60;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v345 + 32))(v331, v340, v346);
      ((void (*)(char *, char *, uint64_t))v117[4])(v328, v100, v98);
      uint64_t v118 = v321;
      sub_24DCC8CD8();
      sub_24DCC8C88();
      double v120 = v119;
      (*(void (**)(char *, uint64_t))(v322 + 8))(v118, v323);
      double v121 = v120 * 1000000000.0;
      uint64_t v122 = v349;
      if ((~COERCE__INT64(v120 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_106;
      }
      if (v121 <= -9.22337204e18)
      {
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
      if (v121 >= 9.22337204e18)
      {
LABEL_107:
        __break(1u);
        goto LABEL_108;
      }
      sub_24D777018(v331, (uint64_t)v121);
      uint64_t v113 = v122;
      if (v122)
      {
        uint64_t v123 = v338;
        uint64_t v124 = v328;
LABEL_23:
        v123[1](v124, v342);
        (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v331, v346);
        (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v353 + 8))(v351, v352);
        return;
      }
      uint64_t v214 = v338;
      uint64_t v215 = v308;
      uint64_t v216 = v342;
      ((void (*)(char *, char *, uint64_t))v338[2])(v308, v328, v342);
      uint64_t v217 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v97 - 8);
      int v218 = v217[6](v215, 1, v97);
      uint64_t v219 = v215;
      uint64_t v220 = v214;
      uint64_t v221 = v214;
      uint64_t v222 = v216;
      if (v218 == 1) {
        goto LABEL_99;
      }
      uint64_t v223 = v219;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v221 = (void (**)(char *, uint64_t))v217;
        uint64_t v222 = v97;
        uint64_t v216 = v342;
        uint64_t v219 = v223;
LABEL_99:
        v221[1](v219, v222);
        uint64_t v271 = v346;
        (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v319, v331, v346);
        swift_beginAccess();
        sub_24DCC9F28();
        int v272 = v327;
        sub_24DCC9EB8();
        uint64_t v273 = *(void (**)(char *, uint64_t))(v116 + 8);
        v273(v272, v271);
        swift_endAccess();
        sub_24D7CAC00();
        v220[1](v328, v216);
        v273((char *)v331, v271);
        goto LABEL_100;
      }
      uint64_t v224 = v223;
      uint64_t v225 = v334;
      uint64_t v226 = v294;
      uint64_t v227 = v330;
      (*(void (**)(char *, char *, uint64_t))(v334 + 32))(v294, v224, v330);
      (*(void (**)(char *, char *, uint64_t))(v225 + 16))(v301, v226, v227);
      uint64_t v362 = 0;
      os_log_t v363 = 0;
      uint64_t v364 = 0;
      LOBYTE(v365) = 1;
      swift_beginAccess();
      os_log_t v354 = (os_log_t)v347;
      os_log_t v355 = v348;
      uint64_t v356 = v344;
      uint64_t v357 = v343;
      type metadata accessor for DiskImport.ImportingFolder();
      sub_24DCC9638();
      sub_24DCC9668();
      swift_endAccess();
      sub_24D7CAC00();
      (*(void (**)(char *, uint64_t))(v225 + 8))(v226, v227);
      v220[1](v328, v342);
      (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v331, v346);
LABEL_100:
      (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v353 + 8))(v351, v352);
LABEL_62:
      sub_24D7769A8();
      if (!v113) {
        sub_24D775F9C();
      }
      return;
    case 0x14u:
      uint64_t v102 = v338;
      v93((char *)v338, (uint64_t)v351, v352);
      if ((*v102 & 0x8000000000000000) == 0)
      {
        os_log_t v354 = (os_log_t)v347;
        os_log_t v355 = v348;
        uint64_t v103 = v344;
        uint64_t v104 = v343;
        uint64_t v356 = v344;
        uint64_t v357 = v343;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v105 = swift_dynamicCastClass();
        uint64_t v106 = v346;
        uint64_t v107 = v345;
        if (v105) {
          goto LABEL_9;
        }
        goto LABEL_6;
      }
      uint64_t v331 = v51;
      uint64_t v125 = v347;
      os_log_t v354 = (os_log_t)v347;
      os_log_t v355 = v348;
      uint64_t v126 = v344;
      uint64_t v127 = v343;
      uint64_t v356 = v344;
      uint64_t v357 = v343;
      type metadata accessor for Propagation.CreateItem();
      uint64_t v128 = swift_dynamicCastClass();
      uint64_t v129 = v346;
      uint64_t v130 = v345;
      if (v128) {
        goto LABEL_29;
      }
      os_log_t v354 = v348;
      os_log_t v355 = v125;
      uint64_t v356 = v127;
      uint64_t v357 = v126;
      type metadata accessor for Ingestion.FetchChildrenMetadata();
      uint64_t v131 = v125;
      uint64_t v132 = swift_dynamicCastClass();
      if (v132) {
        goto LABEL_38;
      }
      os_log_t v354 = v348;
      os_log_t v355 = v131;
      uint64_t v356 = v127;
      uint64_t v357 = v126;
      type metadata accessor for Propagation.CreateItem();
      uint64_t v133 = swift_dynamicCastClass();
      uint64_t v134 = v334;
      uint64_t v135 = v126;
      if (v133) {
        goto LABEL_72;
      }
      goto LABEL_6;
    case 0x15u:
      uint64_t v331 = v51;
      uint64_t v108 = (uint64_t *)v337;
      v93((char *)v337, (uint64_t)v351, v352);
      uint64_t v109 = *v108;
      if (v109 < 0)
      {
        uint64_t v125 = v347;
        os_log_t v354 = (os_log_t)v347;
        os_log_t v355 = v348;
        uint64_t v126 = v344;
        uint64_t v127 = v343;
        uint64_t v356 = v344;
        uint64_t v357 = v343;
        type metadata accessor for Propagation.CreateItem();
        uint64_t v128 = swift_dynamicCastClass();
        uint64_t v129 = v346;
        uint64_t v130 = v345;
        if (v128)
        {
LABEL_29:
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v353 + 8))(v351, v352);
          uint64_t v136 = v128 + *(void *)(*(void *)v128 + 648);
          swift_beginAccess();
          uint64_t v137 = v335;
          uint64_t v138 = v332;
          uint64_t v139 = v136;
          uint64_t v140 = v336;
          (*((void (**)(char *, uint64_t, uint64_t))v335 + 2))(v332, v139, v336);
          swift_release();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v138, 1, v129) == 1)
          {
            (*((void (**)(char *, uint64_t))v137 + 1))(v138, v140);
          }
          else
          {
            unint64_t v147 = v333;
            (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v333, v138, v129);
            uint64_t v148 = v325;
            (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v325, v147, v129);
            unint64_t v149 = v125;
            uint64_t v150 = v127;
            uint64_t v151 = sub_24D7CA2B0((uint64_t)&v354);
            uint64_t v358 = (uint64_t)v149;
            os_log_t v359 = v348;
            uint64_t v360 = v344;
            uint64_t v361 = v150;
            type metadata accessor for DiskImport.ImportingFolder();
            sub_24DCC9638();
            uint64_t v152 = (void (*)(uint64_t *, void))sub_24DCC9648();
            if ((*(unsigned char *)(v153 + 24) & 1) == 0) {
              sub_24D76E32C();
            }
            v152(&v362, 0);
            unint64_t v154 = *(void (**)(char *, uint64_t))(v130 + 8);
            v154(v148, v129);
            v151((uint64_t)&v354, 0);
            v154(v333, v129);
          }
          goto LABEL_14;
        }
        os_log_t v354 = v348;
        os_log_t v355 = v125;
        uint64_t v356 = v127;
        uint64_t v357 = v126;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v131 = v125;
        uint64_t v132 = swift_dynamicCastClass();
        if (v132)
        {
LABEL_38:
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v353 + 8))(v351, v352);
          uint64_t v155 = v334;
          uint64_t v156 = v324;
          uint64_t v157 = v127;
          uint64_t v158 = v330;
          (*(void (**)(char *, uint64_t, uint64_t))(v334 + 16))(v324, v132 + *(void *)(*(void *)v132 + 576), v330);
          swift_release();
          unint64_t v159 = sub_24D7CA2B0((uint64_t)&v354);
          uint64_t v358 = (uint64_t)v131;
          os_log_t v359 = v348;
          uint64_t v360 = v126;
          uint64_t v361 = v157;
          type metadata accessor for DiskImport.ImportingFolder();
          sub_24DCC9638();
          unint64_t v160 = (void (*)(uint64_t *, void))sub_24DCC9648();
          if ((*(unsigned char *)(v161 + 24) & 1) == 0) {
            sub_24D76E32C();
          }
          v160(&v362, 0);
          (*(void (**)(char *, uint64_t))(v155 + 8))(v156, v158);
          v159((uint64_t)&v354, 0);
          goto LABEL_14;
        }
        os_log_t v354 = v348;
        os_log_t v355 = v131;
        uint64_t v356 = v127;
        uint64_t v357 = v126;
        type metadata accessor for Ingestion.FetchContent();
        uint64_t v209 = swift_dynamicCastClass();
        uint64_t v210 = v334;
        if (v209)
        {
          uint64_t v211 = v131;
          uint64_t v212 = v305;
          sub_24DBCE2FC();
          uint64_t v213 = v330;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48))(v212, 1, v330) == 1)
          {
            swift_release();
            (*(void (**)(char *, uint64_t))(v314 + 8))(v212, v315);
          }
          else
          {
            uint64_t v260 = v304;
            (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v304, v212, v213);
            uint64_t v261 = v296;
            (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v296, v260, v213);
            swift_retain();
            uint64_t v262 = sub_24D7CA2B0((uint64_t)&v354);
            uint64_t v358 = (uint64_t)v211;
            os_log_t v359 = v348;
            uint64_t v360 = v344;
            uint64_t v361 = v127;
            type metadata accessor for DiskImport.ImportingFolder();
            sub_24DCC9638();
            uint64_t v263 = (void (*)(uint64_t *, void))sub_24DCC9648();
            if ((*(unsigned char *)(v264 + 24) & 1) == 0) {
              sub_24D76E32C();
            }
            v263(&v362, 0);
            unint64_t v265 = *(void (**)(char *, uint64_t))(v210 + 8);
            v265(v261, v213);
            v262((uint64_t)&v354, 0);
            swift_release_n();
            v265(v304, v213);
          }
LABEL_13:
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v353 + 8))(v351, v352);
          goto LABEL_14;
        }
      }
      else
      {
        os_log_t v354 = (os_log_t)v347;
        os_log_t v355 = v348;
        uint64_t v103 = v344;
        uint64_t v104 = v343;
        uint64_t v356 = v344;
        uint64_t v357 = v343;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v105 = swift_dynamicCastClass();
        uint64_t v106 = v346;
        uint64_t v107 = v345;
        if (v105)
        {
LABEL_9:
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v353 + 8))(v351, v352);
          (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v71, v105 + *(void *)(*(void *)v105 + 576), v106);
          swift_release();
          uint64_t v110 = sub_24D7CA2B0((uint64_t)&v354);
          uint64_t v358 = v347;
          os_log_t v359 = v348;
          uint64_t v360 = v103;
          uint64_t v361 = v104;
          type metadata accessor for DiskImport.ImportingFolder();
          sub_24DCC9638();
          uint64_t v111 = (void (*)(uint64_t *, void))sub_24DCC9648();
          if ((*(unsigned char *)(v112 + 24) & 1) == 0) {
            sub_24D76E32C();
          }
          v111(&v362, 0);
          (*(void (**)(char *, uint64_t))(v107 + 8))(v71, v106);
          v110((uint64_t)&v354, 0);
          uint64_t v113 = v349;
          goto LABEL_62;
        }
        uint64_t v141 = v347;
        os_log_t v142 = v348;
        os_log_t v354 = (os_log_t)v347;
        os_log_t v355 = v348;
        uint64_t v356 = v103;
        uint64_t v357 = v104;
        type metadata accessor for Ingestion.FetchContent();
        if (swift_dynamicCastClass())
        {
          uint64_t v342 = v109;
          uint64_t v143 = v320;
          sub_24DBCE2FC();
          uint64_t v144 = v107;
          uint64_t v145 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
          uint64_t v146 = v346;
          if (v145(v143, 1, v346) == 1)
          {
            swift_release();
            (*((void (**)(char *, uint64_t))v335 + 1))(v143, v336);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v81, v143, v146);
            (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v78, v81, v146);
            swift_retain();
            uint64_t v205 = sub_24D7CA2B0((uint64_t)&v354);
            uint64_t v358 = v141;
            os_log_t v359 = v348;
            uint64_t v360 = v103;
            uint64_t v361 = v343;
            type metadata accessor for DiskImport.ImportingFolder();
            sub_24DCC9638();
            unint64_t v206 = (void (*)(uint64_t *, void))sub_24DCC9648();
            if ((*(unsigned char *)(v207 + 24) & 1) == 0) {
              sub_24D76E32C();
            }
            v206(&v362, 0);
            uint64_t v208 = *(void (**)(char *, uint64_t))(v144 + 8);
            v208(v78, v146);
            v205((uint64_t)&v354, 0);
            swift_release_n();
            v208(v81, v146);
          }
          goto LABEL_60;
        }
        os_log_t v354 = (os_log_t)v141;
        os_log_t v355 = v142;
        uint64_t v356 = v103;
        uint64_t v357 = v104;
        type metadata accessor for Ingestion.DeleteRejectedItemInTree();
        uint64_t v194 = swift_dynamicCastClass();
        if (v194)
        {
          uint64_t v195 = v107;
          uint64_t v196 = v104;
          uint64_t v197 = v103;
          uint64_t v198 = v194 + *(void *)(*(void *)v194 + 632);
          swift_beginAccess();
          uint64_t v199 = v335;
          int v200 = v312;
          uint64_t v201 = v198;
          uint64_t v202 = v336;
          (*((void (**)(char *, uint64_t, uint64_t))v335 + 2))(v312, v201, v336);
          unint64_t v203 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
          uint64_t v204 = v346;
          if (v203(v200, 1, v346) == 1)
          {
            swift_release();
            (*((void (**)(char *, uint64_t))v199 + 1))(v200, v202);
          }
          else
          {
            unint64_t v247 = v300;
            (*(void (**)(char *, char *, uint64_t))(v195 + 32))(v300, v200, v204);
            uint64_t v248 = v299;
            (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v299, v247, v204);
            swift_retain();
            uint64_t v249 = sub_24D7CA2B0((uint64_t)&v354);
            uint64_t v358 = v347;
            os_log_t v359 = v348;
            uint64_t v360 = v197;
            uint64_t v361 = v196;
            uint64_t v250 = v248;
            type metadata accessor for DiskImport.ImportingFolder();
            sub_24DCC9638();
            uint64_t v251 = (void (*)(uint64_t *, void))sub_24DCC9648();
            if ((*(unsigned char *)(v252 + 24) & 1) == 0) {
              sub_24D76E32C();
            }
            v251(&v362, 0);
            uint64_t v253 = *(void (**)(char *, uint64_t))(v195 + 8);
            v253(v250, v204);
            v249((uint64_t)&v354, 0);
            swift_release_n();
            v253(v247, v204);
          }
          uint64_t v113 = v349;
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v353 + 8))(v351, v352);
          goto LABEL_62;
        }
        os_log_t v354 = v142;
        os_log_t v355 = (os_log_t)v141;
        uint64_t v356 = v104;
        uint64_t v357 = v103;
        uint64_t v135 = v103;
        type metadata accessor for Propagation.CreateItem();
        uint64_t v133 = swift_dynamicCastClass();
        uint64_t v134 = v334;
        if (v133)
        {
LABEL_72:
          (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v353 + 8))(v351, v352);
          uint64_t v228 = v133 + *(void *)(*(void *)v133 + 648);
          swift_beginAccess();
          uint64_t v229 = v314;
          uint64_t v230 = v311;
          uint64_t v231 = v228;
          uint64_t v232 = v315;
          (*(void (**)(char *, uint64_t, uint64_t))(v314 + 16))(v311, v231, v315);
          swift_release();
          uint64_t v233 = v330;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v230, 1, v330) == 1)
          {
            (*(void (**)(char *, uint64_t))(v229 + 8))(v230, v232);
            goto LABEL_61;
          }
          unint64_t v254 = v310;
          (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v310, v230, v233);
          uint64_t v255 = v298;
          (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v298, v254, v233);
          uint64_t v256 = sub_24D7CA2B0((uint64_t)&v354);
          uint64_t v358 = v347;
          os_log_t v359 = v348;
          uint64_t v360 = v135;
          uint64_t v361 = v343;
          type metadata accessor for DiskImport.ImportingFolder();
          sub_24DCC9638();
          uint64_t v257 = (void (*)(uint64_t *, void))sub_24DCC9648();
          if ((*(unsigned char *)(v258 + 24) & 1) == 0) {
            sub_24D76E32C();
          }
          v257(&v362, 0);
          unint64_t v259 = *(void (**)(char *, uint64_t))(v134 + 8);
          v259(v255, v233);
          v256((uint64_t)&v354, 0);
          v259(v310, v233);
          goto LABEL_14;
        }
      }
LABEL_6:
      swift_release();
      goto LABEL_60;
    case 0x29u:
      sub_24D7CA528();
      goto LABEL_13;
    default:
      goto LABEL_60;
  }
}

uint64_t sub_24D77C3D0()
{
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t *sub_24D77C408()
{
  uint64_t v0 = sub_24D7CA184();
  swift_release();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_24D77C448()
{
  sub_24D77C408();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DiskImport.Monitor()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DiskImport()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D77C4A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D77C4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24D77C574(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_24D77C638(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t sub_24D77C6A8(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24D77C6F0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for DiskImport.MonitoredFolders()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D77C754(void *a1, int a2, uint64_t (*a3)(void), char *a4)
{
  unint64_t v302 = a3;
  int v301 = a4;
  LODWORD(v277) = a2;
  uint64_t v5 = (void *)*a1;
  uint64_t v272 = sub_24DCC8CE8();
  uint64_t v269 = *(void *)(v272 - 8);
  MEMORY[0x270FA5388](v272);
  uint64_t v271 = (char *)v259 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v5[72];
  uint64_t v8 = v5[74];
  uint64_t v265 = type metadata accessor for SnapshotItem();
  uint64_t v264 = sub_24DCCA3F8();
  uint64_t v263 = *(void *)(v264 - 8);
  MEMORY[0x270FA5388](v264);
  uint64_t v266 = (char *)v259 - v9;
  uint64_t v282 = sub_24DCC9078();
  uint64_t v285 = *(void *)(v282 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v282);
  os_log_type_t v279 = (char *)v259 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v270 = (char *)v259 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v280 = (char *)v259 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v281 = (uint64_t)v259 - v16;
  uint64_t v17 = v5[75];
  uint64_t v18 = v5[73];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v291 = sub_24DCCA3F8();
  uint64_t v288 = *(void **)(v291 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v291);
  TupleTypeMetadata2 = (char *)v259 - v21;
  uint64_t v292 = AssociatedTypeWitness;
  uint64_t v293 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v20);
  unint64_t v290 = (char *)v259 - v22;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = sub_24DCCA3F8();
  uint64_t v294 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v259 - v26;
  uint64_t v298 = v23;
  uint64_t v296 = *(void *)(v23 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v268 = (uint64_t)v259 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v267 = (char *)v259 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v273 = (char *)v259 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v295 = (uint64_t)v259 - v34;
  uint64_t v286 = v7;
  unint64_t v305 = (char *)v7;
  uint64_t v306 = v18;
  uint64_t v284 = v18;
  uint64_t v287 = v8;
  uint64_t v307 = v8;
  uint64_t v308 = v17;
  uint64_t v283 = v17;
  uint64_t v35 = type metadata accessor for ItemReconciliation();
  uint64_t v36 = sub_24DCCA3F8();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)v259 - v39;
  uint64_t v300 = v35;
  uint64_t v299 = *(void *)(v35 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v38);
  uint64_t v43 = (char *)v259 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v41);
  uint64_t v46 = (char *)v259 - v45;
  uint64_t v47 = MEMORY[0x270FA5388](v44);
  unsigned __int8 v49 = (uint64_t (*)(void))((char *)v259 - v48);
  uint64_t v50 = MEMORY[0x270FA5388](v47);
  uint64_t v278 = (char *)v259 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  id v274 = (char *)v259 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v276 = (char *)v259 - v55;
  MEMORY[0x270FA5388](v54);
  uint64_t v297 = (char *)v259 - v56;
  uint64_t v275 = a1;
  uint64_t result = sub_24DA38684();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v58 = v303;
  uint64_t result = v302();
  if (v58) {
    return result;
  }
  unint64_t v302 = v49;
  uint64_t v303 = 0;
  uint64_t v60 = v299;
  uint64_t v59 = v300;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v299 + 48))(v40, 1, v300) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v40, v36);
  }
  uint64_t v61 = v297;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v297, v40, v59);
  uint64_t v62 = v294;
  (*(void (**)(char *, char *, uint64_t))(v294 + 16))(v27, v61, v24);
  uint64_t v63 = v296;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v296 + 48))(v27, 1, v298) == 1)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
    return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v27, v24);
  }
  uint64_t v64 = v298;
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v295, v27, v298);
  uint64_t v66 = v288;
  uint64_t v65 = (uint64_t)TupleTypeMetadata2;
  uint64_t v67 = (void (*)(char *))v288[2];
  int v301 = &v61[*(int *)(v59 + 52)];
  v67(TupleTypeMetadata2);
  uint64_t v68 = v292;
  uint64_t v69 = v293;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v293 + 48))(v65, 1, v292) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v295, v64);
    (*(void (**)(char *, uint64_t))(v299 + 8))(v61, v300);
    return ((uint64_t (*)(uint64_t, uint64_t))v66[1])(v65, v291);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v290, v65, v68);
  uint64_t v294 = type metadata accessor for ItemReconciliationHalf();
  if (v61[*(int *)(v294 + 56)] != 3)
  {
    uint64_t v102 = *(void (**)(char *, char *, uint64_t))(v299 + 16);
    v102(v46, v61, v300);
    BOOL v103 = (v277 & 1) != 0 && v46[*(int *)(v294 + 56)] == 6;
    uint64_t v117 = v284;
    uint64_t v118 = v300;
    double v119 = *(void (**)(char *, uint64_t))(v299 + 8);
    v119(v46, v300);
    v102(v43, v297, v118);
    if (v103)
    {
      double v120 = &v43[*(int *)(v118 + 52)];
      uint64_t v121 = v283;
      LODWORD(v120) = v120[*(int *)(type metadata accessor for ItemReconciliationHalf() + 52)];
      v119(v43, v118);
      if (v120)
      {
        uint64_t v122 = v295;
        uint64_t v123 = v303;
        char v124 = (*(uint64_t (**)(uint64_t))(*(void *)v275[4] + 408))(v295);
        uint64_t v125 = v298;
        if (v123)
        {
          (*(void (**)(char *, uint64_t))(v293 + 8))(v290, v292);
          (*(void (**)(uint64_t, uint64_t))(v296 + 8))(v122, v125);
          return ((uint64_t (*)(char *, uint64_t))v119)(v297, v300);
        }
        if (v124)
        {
          uint64_t v127 = v292;
          uint64_t v118 = v300;
          goto LABEL_28;
        }
        uint64_t v303 = 0;
        unint64_t v305 = (char *)v286;
        uint64_t v306 = v117;
        uint64_t v307 = v287;
        uint64_t v308 = v121;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v129 = v268;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v296 + 16))(v268, v295, v125);
        uint64_t v130 = v271;
        sub_24DCC8CD8();
        sub_24DCC8C88();
        double v132 = v131;
        uint64_t v133 = *(void (**)(char *, uint64_t))(v269 + 8);
        v133(v130, v272);
        double v134 = v132 * 1000000000.0;
        if ((~COERCE__INT64(v132 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v134 > -9.22337204e18)
          {
            if (v134 < 9.22337204e18)
            {
              uint64_t v135 = sub_24DC09730(v129, 0x2000000000000000, (uint64_t)v134, 0x20000);
              uint64_t v136 = *(void (**)(uint64_t, uint64_t))(v296 + 8);
              v136(v129, v298);
              uint64_t v137 = v271;
              sub_24DCC8CD8();
              sub_24DCC8C88();
              double v139 = v138;
              v133(v137, v272);
              double v140 = v139 * 1000000000.0;
              if ((~COERCE__INT64(v139 * 1000000000.0) & 0x7FF0000000000000) != 0)
              {
                if (v140 > -9.22337204e18)
                {
                  if (v140 < 9.22337204e18)
                  {
                    uint64_t v141 = v303;
                    sub_24D912448(v135);
                    if (v141)
                    {
                      swift_release();
                      (*(void (**)(char *, uint64_t))(v293 + 8))(v290, v292);
                      v136(v295, v298);
                      return ((uint64_t (*)(char *, uint64_t))v119)(v297, v300);
                    }
                    swift_release();
                    uint64_t v125 = v298;
                    uint64_t v127 = v292;
                    uint64_t v128 = v290;
                    uint64_t v118 = v300;
LABEL_29:
                    (*(void (**)(char *, uint64_t))(v293 + 8))(v128, v127);
                    (*(void (**)(uint64_t, uint64_t))(v296 + 8))(v295, v125);
                    return ((uint64_t (*)(char *, uint64_t))v119)(v297, v118);
                  }
LABEL_94:
                  __break(1u);
                  goto LABEL_95;
                }
LABEL_93:
                __break(1u);
                goto LABEL_94;
              }
LABEL_92:
              __break(1u);
              goto LABEL_93;
            }
LABEL_91:
            __break(1u);
            goto LABEL_92;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_91;
      }
    }
    else
    {
      v119(v43, v118);
    }
    uint64_t v127 = v292;
    uint64_t v125 = v298;
LABEL_28:
    uint64_t v128 = v290;
    goto LABEL_29;
  }
  id v70 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  id v71 = (id)fpfs_current_or_default_log();
  uint64_t v72 = v281;
  sub_24DCC9088();
  uint64_t v73 = v299;
  uint64_t v74 = v300;
  uint64_t v75 = v299 + 16;
  uint64_t v76 = v276;
  uint64_t v291 = *(void *)(v299 + 16);
  ((void (*)(char *, char *, uint64_t))v291)(v276, v61, v300);
  uint64_t v77 = v70;
  uint64_t v78 = sub_24DCC9068();
  os_log_type_t v79 = sub_24DCCA118();
  int v80 = v79;
  BOOL v81 = os_log_type_enabled(v78, v79);
  uint64_t v277 = v75;
  uint64_t v288 = v77;
  if (v81)
  {
    uint64_t v82 = v76;
    uint64_t v83 = swift_slowAlloc();
    uint64_t v84 = (void *)swift_slowAlloc();
    uint64_t v262 = v84;
    TupleTypeMetadata2 = (char *)swift_slowAlloc();
    unint64_t v305 = TupleTypeMetadata2;
    *(_DWORD *)uint64_t v83 = 138412546;
    id v85 = objc_msgSend(v77, sel_enter);
    os_log_t v261 = v78;
    id v86 = v85;
    uint64_t v304 = (uint64_t)v85;
    int v260 = v80;
    sub_24DCCA428();
    *uint64_t v84 = v86;

    *(_WORD *)(v83 + 12) = 2082;
    v259[1] = v83 + 14;
    uint64_t v87 = v274;
    uint64_t v88 = (void (*)(char *, char *, uint64_t))v291;
    ((void (*)(char *, char *, uint64_t))v291)(v274, v82, v300);
    uint64_t v89 = *(char **)(v73 + 8);
    ((void (*)(char *, uint64_t))v89)(v82, v300);
    uint64_t v90 = sub_24DB8E8F4(v300);
    unint64_t v92 = v91;
    ((void (*)(char *, uint64_t))v89)(v87, v300);
    char v93 = v89;
    uint64_t v304 = sub_24D418FB4(v90, v92, (uint64_t *)&v305);
    uint64_t v94 = v300;
    sub_24DCCA428();
    uint64_t v95 = v294;
    swift_bridgeObjectRelease();
    os_log_t v96 = v261;
    _os_log_impl(&dword_24D3D0000, v261, (os_log_type_t)v260, "%@ evaluating disk import status for %{public}s", (uint8_t *)v83, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    uint64_t v97 = v262;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v97, -1, -1);
    uint64_t v98 = (uint64_t)TupleTypeMetadata2;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v98, -1, -1);
    MEMORY[0x25332B030](v83, -1, -1);

    uint64_t v99 = v282;
    TupleTypeMetadata2 = *(char **)(v285 + 8);
    ((void (*)(uint64_t, uint64_t))TupleTypeMetadata2)(v281, v282);
    uint64_t v100 = v280;
    int v101 = v278;
  }
  else
  {
    char v93 = *(char **)(v73 + 8);
    ((void (*)(char *, uint64_t))v93)(v76, v74);

    uint64_t v99 = v282;
    TupleTypeMetadata2 = *(char **)(v285 + 8);
    ((void (*)(uint64_t, uint64_t))TupleTypeMetadata2)(v72, v282);
    uint64_t v94 = v74;
    uint64_t v100 = v280;
    int v101 = v278;
    uint64_t v88 = (void (*)(char *, char *, uint64_t))v291;
    uint64_t v95 = v294;
  }
  uint64_t v104 = type metadata accessor for ItemReconciliationHalf();
  if (v301[*(int *)(v104 + 52)] != 3)
  {
    uint64_t v105 = v104;
    int v301 = v93;
    id v106 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v107 = v297;
    v88(v101, v297, v94);
    uint64_t v108 = v302;
    v88((char *)v302, v107, v94);
    uint64_t v109 = v94;
    uint64_t v110 = sub_24DCC9068();
    int v111 = sub_24DCCA138();
    if (os_log_type_enabled(v110, (os_log_type_t)v111))
    {
      LODWORD(v281) = v111;
      uint64_t v112 = swift_slowAlloc();
      uint64_t v278 = (char *)swift_slowAlloc();
      unint64_t v305 = v278;
      *(_DWORD *)uint64_t v112 = 136446466;
      uint64_t v113 = v101[*(int *)(v109 + 52) + *(int *)(v105 + 52)];
      ((void (*)(char *, uint64_t))v301)(v101, v109);
      unint64_t v114 = 0xED00006465747365;
      uint64_t v115 = 0x7265746E49746F6ELL;
      uint64_t v116 = v302;
      switch(v113)
      {
        case 1:
          unint64_t v114 = 0xEC000000676E6974;
          uint64_t v115 = 0x746F687370616E73;
          break;
        case 2:
          unint64_t v114 = 0xE800000000000000;
          uint64_t v115 = 0x676E696863746177;
          break;
        case 3:
          unint64_t v114 = 0x800000024DCFBCB0;
          uint64_t v115 = 0xD000000000000011;
          break;
        case 4:
          uint64_t v115 = 0xD000000000000015;
          unint64_t v114 = 0x800000024DCFBC90;
          break;
        default:
          break;
      }
      uint64_t v304 = sub_24D418FB4(v115, v114, (uint64_t *)&v305);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v112 + 12) = 2082;
      os_log_t v142 = v274;
      uint64_t v143 = v300;
      ((void (*)(char *, uint64_t (*)(void), uint64_t))v291)(v274, v116, v300);
      uint64_t v144 = v116;
      char v93 = v301;
      ((void (*)(uint64_t (*)(void), uint64_t))v301)(v144, v143);
      uint64_t v145 = sub_24DB8E8F4(v143);
      unint64_t v147 = v146;
      ((void (*)(char *, uint64_t))v93)(v142, v300);
      uint64_t v304 = sub_24D418FB4(v145, v147, (uint64_t *)&v305);
      sub_24DCCA428();
      uint64_t v94 = v300;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v110, (os_log_type_t)v281, "👽 item content status is %{public}s instead of content:import: %{public}s", (uint8_t *)v112, 0x16u);
      uint64_t v148 = v278;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v148, -1, -1);
      MEMORY[0x25332B030](v112, -1, -1);

      uint64_t v99 = v282;
      ((void (*)(char *, uint64_t))TupleTypeMetadata2)(v280, v282);
      uint64_t v95 = v294;
    }
    else
    {
      uint64_t v126 = v108;
      char v93 = v301;
      ((void (*)(uint64_t (*)(void), uint64_t))v301)(v126, v109);
      ((void (*)(char *, uint64_t))v93)(v101, v109);

      uint64_t v99 = v282;
      ((void (*)(char *, uint64_t))TupleTypeMetadata2)(v100, v282);
      uint64_t v94 = v109;
    }
  }
  uint64_t v149 = v94;
  if (v297[*(int *)(v95 + 52)] == 2)
  {
    uint64_t v150 = v275[4];
    uint64_t v151 = v295;
    uint64_t v152 = v303;
    char v153 = (*(uint64_t (**)(uint64_t))(*(void *)v150 + 408))(v295);
    uint64_t v154 = v296;
    if (v152)
    {
      uint64_t v155 = v288;
      sub_24D77EDB8(v288);

      (*(void (**)(char *, uint64_t))(v293 + 8))(v290, v292);
      (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v151, v298);
      return ((uint64_t (*)(char *, uint64_t))v93)(v297, v149);
    }
    if (v153)
    {
      id v163 = (id)fpfs_current_or_default_log();
      uint64_t v164 = v270;
      sub_24DCC9088();
      uint64_t v165 = sub_24DCC9068();
      os_log_type_t v166 = sub_24DCCA118();
      if (os_log_type_enabled(v165, v166))
      {
        uint64_t v167 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v167 = 0;
        _os_log_impl(&dword_24D3D0000, v165, v166, "skip item with pending children", v167, 2u);
        uint64_t v168 = v167;
        uint64_t v164 = v270;
        MEMORY[0x25332B030](v168, -1, -1);
      }

      ((void (*)(char *, uint64_t))TupleTypeMetadata2)(v164, v99);
      uint64_t v169 = v288;
      sub_24D77EDB8(v288);

      (*(void (**)(char *, uint64_t))(v293 + 8))(v290, v292);
      (*(void (**)(uint64_t, uint64_t))(v296 + 8))(v295, v298);
      return ((uint64_t (*)(char *, uint64_t))v93)(v297, v149);
    }
    int v301 = v93;
    int v170 = v297[*(int *)(v95 + 60)];
    uint64_t v171 = *(void (**)(char *, uint64_t, uint64_t))(v296 + 16);
    uint64_t v172 = v273;
    uint64_t v173 = v298;
    v171(v273, v295, v298);
    if (v170 == 1) {
      char v174 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v150 + 368))(v172, 1);
    }
    else {
      char v174 = 1;
    }
    uint64_t v303 = 0;
    uint64_t v175 = v296 + 8;
    uint64_t v176 = *(uint64_t (**)(void))(v296 + 8);
    ((void (*)(char *, uint64_t))v176)(v273, v173);
    uint64_t v177 = v267;
    v171(v267, v295, v173);
    uint64_t v296 = v175;
    unint64_t v302 = v176;
    if (v174)
    {
      ((void (*)(char *, uint64_t))v176)(v177, v173);
      uint64_t v178 = v287;
      uint64_t v179 = v286;
      uint64_t v180 = v173;
      goto LABEL_60;
    }
    uint64_t v196 = v266;
    uint64_t v197 = v303;
    (*(void (**)(char *, uint64_t))(*(void *)v150 + 240))(v177, 1);
    uint64_t v198 = v177;
    if (v197)
    {
      uint64_t v199 = v298;
      int v200 = v302;
      ((void (*)(char *, uint64_t))v302)(v177, v298);
      uint64_t v201 = v288;
      sub_24D77EDB8(v288);

      (*(void (**)(char *, uint64_t))(v293 + 8))(v290, v292);
      ((void (*)(uint64_t, uint64_t))v200)(v295, v199);
      return ((uint64_t (*)(char *, uint64_t))v301)(v297, v149);
    }
    uint64_t v303 = 0;
    uint64_t v208 = v265;
    uint64_t v209 = *(void *)(v265 - 8);
    int v210 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v209 + 48))(v196, 1, v265);
    uint64_t v211 = v298;
    if (v210 == 1)
    {
      ((void (*)(char *, uint64_t))v302)(v198, v298);
      (*(void (**)(char *, uint64_t))(v263 + 8))(v196, v264);
      uint64_t v212 = v211;
    }
    else
    {
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v214 = v196;
      char v215 = sub_24D98BC10(v208, WitnessTable);
      ((void (*)(char *, uint64_t))v302)(v198, v211);
      (*(void (**)(char *, uint64_t))(v209 + 8))(v214, v208);
      uint64_t v212 = v211;
      if ((v215 & 1) == 0)
      {
        uint64_t v149 = v300;
        uint64_t v180 = v211;
        uint64_t v178 = v287;
        uint64_t v179 = v286;
LABEL_60:
        uint64_t v181 = v284;
        unint64_t v305 = (char *)v179;
        uint64_t v306 = v284;
        uint64_t v182 = v283;
        uint64_t v307 = v178;
        uint64_t v308 = v283;
        type metadata accessor for Mutation();
        uint64_t v294 = sub_24DCC9C98();
        unint64_t v305 = (char *)v179;
        uint64_t v306 = v181;
        uint64_t v307 = v178;
        uint64_t v308 = v182;
        uint64_t v291 = type metadata accessor for ReconciliationMutation();
        sub_24DCCAD88();
        swift_allocObject();
        TupleTypeMetadata2 = (char *)sub_24DCC9C58();
        uint64_t v184 = v183;
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v186 = v292;
        uint64_t v187 = swift_getAssociatedConformanceWitness();
        unint64_t v305 = (char *)v180;
        uint64_t v306 = v186;
        uint64_t v307 = AssociatedConformanceWitness;
        uint64_t v308 = v187;
        type metadata accessor for ReconciliationID();
        type metadata accessor for ReconciliationSideMutation();
        double v188 = (_WORD *)(v184 + *(int *)(swift_getTupleTypeMetadata2() + 48));
        uint64_t v189 = v293;
        double v190 = v290;
        (*(void (**)(uint64_t, char *, uint64_t))(v293 + 16))(v184, v290, v186);
        swift_storeEnumTagMultiPayload();
        *double v188 = 4;
        uint64_t v191 = v294;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        uint64_t v192 = sub_24D785484((uint64_t)TupleTypeMetadata2);
        uint64_t v193 = (void **)v275;
        uint64_t v194 = v303;
        sub_24D6E6464(v191, v192);
        if (v194)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v195 = v288;
          sub_24D77EDB8(v288);

          (*(void (**)(char *, uint64_t))(v189 + 8))(v190, v186);
          ((void (*)(uint64_t, uint64_t))v302)(v295, v298);
          return ((uint64_t (*)(char *, uint64_t))v301)(v297, v149);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v305 = (char *)v286;
        uint64_t v306 = v284;
        uint64_t v307 = v287;
        uint64_t v308 = v283;
        type metadata accessor for ConcreteJobResult();
        uint64_t v202 = (void *)sub_24D907530();
        unint64_t v203 = v271;
        sub_24DCC8CD8();
        sub_24DCC8C88();
        double v205 = v204;
        unint64_t v206 = *(void (**)(char *, uint64_t))(v269 + 8);
        v206(v203, v272);
        double v207 = v205 * 1000000000.0;
        if ((~COERCE__INT64(v205 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v207 > -9.22337204e18)
          {
            if (v207 < 9.22337204e18)
            {
              sub_24DC0F868(v295, 0x2000000000000000, (uint64_t)v207, 0x20000, v193, 0, (uint64_t)v202);
              uint64_t v244 = v271;
              sub_24DCC8CD8();
              sub_24DCC8C88();
              double v246 = v245;
              v206(v244, v272);
              double v247 = v246 * 1000000000.0;
              if ((~COERCE__INT64(v246 * 1000000000.0) & 0x7FF0000000000000) != 0)
              {
                if (v247 > -9.22337204e18)
                {
                  if (v247 < 9.22337204e18)
                  {
                    sub_24D9126EC(v202, (uint64_t)v247);
LABEL_87:
                    swift_release();
                    uint64_t v258 = v288;
                    sub_24D77EDB8(v288);

                    (*(void (**)(char *, uint64_t))(v293 + 8))(v290, v292);
                    ((void (*)(uint64_t, uint64_t))v302)(v295, v298);
                    return (*(uint64_t (**)(char *, uint64_t))(v299 + 8))(v297, v300);
                  }
                  goto LABEL_103;
                }
LABEL_102:
                __break(1u);
LABEL_103:
                __break(1u);
                goto LABEL_104;
              }
LABEL_101:
              __break(1u);
              goto LABEL_102;
            }
            goto LABEL_97;
          }
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
          goto LABEL_98;
        }
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
    }
    uint64_t v216 = v286;
    uint64_t v217 = v284;
    unint64_t v305 = (char *)v286;
    uint64_t v306 = v284;
    uint64_t v307 = v287;
    uint64_t v218 = v287;
    uint64_t v219 = v283;
    uint64_t v308 = v283;
    type metadata accessor for Mutation();
    uint64_t v282 = sub_24DCC9C98();
    unint64_t v305 = (char *)v216;
    uint64_t v306 = v217;
    uint64_t v307 = v218;
    uint64_t v308 = v219;
    uint64_t v220 = type metadata accessor for ReconciliationMutation();
    int v301 = (char *)v220;
    sub_24DCCAD88();
    uint64_t v291 = *(void *)(*(void *)(v220 - 8) + 72);
    uint64_t v294 = 2 * v291;
    swift_allocObject();
    uint64_t v281 = sub_24DCC9C58();
    uint64_t v222 = v221;
    uint64_t v223 = swift_getAssociatedConformanceWitness();
    uint64_t v224 = v292;
    uint64_t v225 = swift_getAssociatedConformanceWitness();
    unint64_t v305 = (char *)v212;
    uint64_t v306 = v224;
    uint64_t v307 = v223;
    uint64_t v308 = v225;
    type metadata accessor for ReconciliationID();
    uint64_t v226 = type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
    uint64_t v227 = (unsigned char *)(v222 + *((int *)TupleTypeMetadata2 + 12));
    uint64_t v285 = *(void *)(v293 + 16);
    uint64_t v228 = v290;
    ((void (*)(uint64_t, char *, uint64_t))v285)(v222, v290, v224);
    swift_storeEnumTagMultiPayload();
    unsigned char *v227 = 0;
    uint64_t v280 = (char *)v226;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v229 = v222 + v291;
    type metadata accessor for ReconciliationSideMutation();
    uint64_t v230 = (_WORD *)(v229 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    uint64_t v231 = v228;
    uint64_t v232 = (void (*)(uint64_t, char *, uint64_t))v285;
    ((void (*)(uint64_t, char *, uint64_t))v285)(v229, v231, v224);
    swift_storeEnumTagMultiPayload();
    _WORD *v230 = 6;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v233 = v222 + v294;
    uint64_t v234 = *((int *)TupleTypeMetadata2 + 12);
    v232(v222 + v294, v290, v224);
    swift_storeEnumTagMultiPayload();
    uint64_t v235 = v271;
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v237 = v236;
    os_log_type_t v238 = *(void (**)(char *, uint64_t))(v269 + 8);
    v238(v235, v272);
    double v239 = v237 * 1000000000.0;
    if ((~COERCE__INT64(v237 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v239 > -9.22337204e18)
      {
        if (v239 < 9.22337204e18)
        {
          uint64_t v240 = v233 + v234;
          *(_OWORD *)uint64_t v240 = xmmword_24DCDB2F0;
          *(void *)(v240 + 16) = (uint64_t)v239;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          uint64_t v241 = sub_24D785484(v281);
          uint64_t v242 = v303;
          sub_24D6E6464(v282, v241);
          if (v242)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v243 = v288;
            sub_24D77EDB8(v288);

            (*(void (**)(char *, uint64_t))(v293 + 8))(v290, v292);
            ((void (*)(uint64_t, uint64_t))v302)(v295, v298);
            return (*(uint64_t (**)(char *, uint64_t))(v299 + 8))(v297, v300);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v305 = (char *)v286;
          uint64_t v306 = v284;
          uint64_t v307 = v287;
          uint64_t v308 = v283;
          type metadata accessor for DiskImport.ContinueDiskImport();
          sub_24DBB275C();
          uint64_t v248 = v271;
          sub_24DCC8CD8();
          sub_24DCC8C88();
          double v250 = v249;
          v238(v248, v272);
          double v251 = v250 * 1000000000.0;
          if ((~COERCE__INT64(v250 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v251 > -9.22337204e18)
            {
              if (v251 < 9.22337204e18)
              {
                uint64_t v252 = v268;
                uint64_t v253 = sub_24D732E08(v268, 0x2000000000000000, (uint64_t)v251, 0x10000);
                ((void (*)(uint64_t, uint64_t))v302)(v252, v298);
                unint64_t v254 = v271;
                sub_24DCC8CD8();
                sub_24DCC8C88();
                double v256 = v255;
                v238(v254, v272);
                double v257 = v256 * 1000000000.0;
                if ((~COERCE__INT64(v256 * 1000000000.0) & 0x7FF0000000000000) != 0)
                {
                  if (v257 > -9.22337204e18)
                  {
                    if (v257 < 9.22337204e18)
                    {
                      sub_24D912448(v253);
                      goto LABEL_87;
                    }
LABEL_109:
                    __break(1u);
                    JUMPOUT(0x24D77EDA4);
                  }
LABEL_108:
                  __break(1u);
                  goto LABEL_109;
                }
LABEL_107:
                __break(1u);
                goto LABEL_108;
              }
LABEL_106:
              __break(1u);
              goto LABEL_107;
            }
LABEL_105:
            __break(1u);
            goto LABEL_106;
          }
LABEL_104:
          __break(1u);
          goto LABEL_105;
        }
        goto LABEL_100;
      }
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  id v156 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v157 = sub_24DCC9068();
  os_log_type_t v158 = sub_24DCCA118();
  BOOL v159 = os_log_type_enabled(v157, v158);
  uint64_t v160 = v296;
  if (v159)
  {
    uint64_t v161 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v161 = 0;
    _os_log_impl(&dword_24D3D0000, v157, v158, "skip item not watching content", v161, 2u);
    MEMORY[0x25332B030](v161, -1, -1);
  }

  ((void (*)(char *, uint64_t))TupleTypeMetadata2)(v279, v99);
  uint64_t v162 = v288;
  sub_24D77EDB8(v288);

  (*(void (**)(char *, uint64_t))(v293 + 8))(v290, v292);
  (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v295, v298);
  return ((uint64_t (*)(char *, uint64_t))v93)(v297, v149);
}

uint64_t sub_24D77EDB8(void *a1)
{
  uint64_t v2 = sub_24DCC9078();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v7 = a1;
  uint64_t v8 = sub_24DCC9068();
  os_log_type_t v9 = sub_24DCCA118();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v16[0] = v2;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = [v7 leave];
    v16[1] = v13;
    sub_24DCCA428();
    *uint64_t v12 = v13;

    _os_log_impl(&dword_24D3D0000, v8, v9, "%@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v12, -1, -1);
    uint64_t v14 = v11;
    uint64_t v2 = v16[0];
    MEMORY[0x25332B030](v14, -1, -1);
  }
  else
  {

    uint64_t v8 = v7;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24D77EFBC(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = a2;
  return sub_24D77C754(a1, a3, (uint64_t (*)(void))sub_24D784AA0, v4);
}

uint64_t sub_24D77EFFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v22 = *a1;
  uint64_t v5 = *(void *)(v22 + 592);
  uint64_t v6 = *(void *)(v22 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v21 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v21 - v12;
  uint64_t v14 = v29;
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1[4] + 280))(a2);
  if (!v14)
  {
    uint64_t v29 = v6;
    uint64_t v16 = v21;
    uint64_t v17 = v22;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v8);
      uint64_t v18 = *(void *)(v17 + 584);
      uint64_t v19 = *(void *)(v17 + 600);
      uint64_t v25 = v29;
      uint64_t v26 = v18;
      uint64_t v27 = v5;
      uint64_t v28 = v19;
      uint64_t v20 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v23, 1, 1, v20);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v13, v11, AssociatedTypeWitness);
      sub_24D4759C8((uint64_t)v13, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, AssociatedTypeWitness);
    }
  }
  return result;
}

uint64_t sub_24D77F2F4(uint64_t (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v60 = a1;
  uint64_t v6 = *(void **)a3;
  uint64_t v7 = sub_24DCC8CE8();
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v6[74];
  uint64_t v10 = v6[72];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v53 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v57 = (uint64_t)&v50 - v12;
  uint64_t v13 = type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v58 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v50 - v15;
  uint64_t v17 = v6[73];
  uint64_t v18 = v6[75];
  uint64_t v62 = v10;
  uint64_t v63 = v17;
  uint64_t v59 = v17;
  uint64_t v64 = v9;
  uint64_t v65 = v18;
  uint64_t result = type metadata accessor for ItemReconciliation();
  if (*(unsigned char *)(a2 + *(int *)(result + 56)) != 1) {
    return result;
  }
  uint64_t result = (*(uint64_t (**)(void, uint64_t))(**(void **)(a3 + 32) + 240))(v60, 1);
  if (v3) {
    return result;
  }
  uint64_t v51 = 0;
  uint64_t v20 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v13) != 1)
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    char v22 = sub_24D98BC10(v13, WitnessTable);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v13);
    uint64_t v23 = v60;
    if ((v22 & 1) == 0) {
      goto LABEL_14;
    }
    uint64_t v62 = v10;
    uint64_t v63 = v59;
    uint64_t v64 = v9;
    uint64_t v65 = v18;
    type metadata accessor for Ingestion.UnfaultDirectoryInTree();
    uint64_t v25 = v52;
    uint64_t v24 = v53;
    (*(void (**)(uint64_t, uint64_t (*)(char *, uint64_t), uint64_t))(v52 + 16))(v57, v23, v53);
    uint64_t v26 = v54;
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v28 = v27;
    uint64_t v29 = v56;
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v55 + 8);
    uint64_t result = v30(v26, v56);
    double v31 = v28 * 1000000000.0;
    if ((~COERCE__INT64(v28 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v31 > -9.22337204e18)
      {
        uint64_t v60 = v30;
        if (v31 < 9.22337204e18)
        {
          uint64_t v32 = v57;
          uint64_t v33 = sub_24DC095B8(v57, 0x2000000000000000, (uint64_t)v31, 0x10000);
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v32, v24);
          sub_24DCC8CD8();
          sub_24DCC8C88();
          double v35 = v34;
          uint64_t result = v60(v26, v29);
          double v36 = v35 * 1000000000.0;
          if ((~COERCE__INT64(v35 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v36 > -9.22337204e18)
            {
              if (v36 < 9.22337204e18)
              {
                sub_24D912448(v33);
                return swift_release();
              }
              goto LABEL_28;
            }
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v14);
LABEL_14:
  uint64_t v37 = *(void *)(a3 + 24);
  uint64_t v38 = v59;
  uint64_t v62 = v10;
  uint64_t v63 = v59;
  uint64_t v64 = v9;
  uint64_t v65 = v18;
  uint64_t v58 = type metadata accessor for ItemJob();
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  sub_24DA604B8(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  uint64_t v40 = sub_24DCC9C58();
  uint64_t v62 = v10;
  uint64_t v63 = v38;
  uint64_t v64 = v9;
  uint64_t v65 = v18;
  *uint64_t v41 = type metadata accessor for Ingestion.FaultDirectoryInTree();
  uint64_t v42 = sub_24D785484(v40);
  uint64_t v43 = v51;
  uint64_t v44 = (*(uint64_t (**)(void, uint64_t))(*(void *)v37 + 272))(v60, v42);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v43)
  {
    uint64_t v61 = v44;
    sub_24DCC9D48();
    swift_getWitnessTable();
    sub_24DCC9FD8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v62)
    {
      if (*(unsigned char *)(v62 + 112) == 1)
      {
        uint64_t v45 = sub_24D983A48();
        swift_retain();
        uint64_t v46 = v54;
        sub_24DCC8CD8();
        sub_24DCC8C88();
        double v48 = v47;
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v46, v56);
        double v49 = v48 * 1000000000.0;
        if ((~COERCE__INT64(v48 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v49 > -9.22337204e18)
          {
            if (v49 < 9.22337204e18)
            {
              sub_24D912448(v45);
              swift_release();
              return swift_release();
            }
            goto LABEL_31;
          }
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_24D77FA28(uint64_t a1, ValueMetadata *a2)
{
  uint64_t v512 = a2;
  uint64_t v509 = (char *)a1;
  uint64_t v3 = *(void *)(a2->Kind + 576);
  uint64_t v4 = *(ValueMetadata **)(a2->Kind + 600);
  uint64_t v5 = *(ValueMetadata **)(a2->Kind + 592);
  uint64_t v514 = *(void *)(a2->Kind + 584);
  uint64_t v2 = v514;
  uint64_t v515 = v3;
  uint64_t v516 = v4;
  os_log_type_t v517 = v5;
  uint64_t v6 = type metadata accessor for ItemReconciliation();
  uint64_t v464 = sub_24DCCA3F8();
  uint64_t v463 = *(void *)(v464 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v464);
  uint64_t v478 = (uint64_t)&v432 - v8;
  uint64_t v473 = v6;
  uint64_t v476 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v7);
  long long v470 = (char *)&v432 - v9;
  uint64_t v490 = type metadata accessor for FileTreeError();
  uint64_t v481 = sub_24DCCA3F8();
  uint64_t v480 = *(void *)(v481 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v481);
  id v482 = (char *)&v432 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  v479 = (char *)&v432 - v12;
  uint64_t v456 = sub_24DCC9078();
  uint64_t v457 = *(void *)(v456 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v456);
  long long v458 = (char *)&v432 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v447 = (char *)&v432 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v439 = (char *)&v432 - v17;
  id AssociatedTypeWitness = (id)swift_getAssociatedTypeWitness();
  uint64_t v471 = sub_24DCCA3F8();
  uint64_t v465 = *(void *)(v471 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v471);
  long long v462 = (char *)&v432 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  unint64_t v452 = (char *)&v432 - v21;
  uint64_t v514 = v3;
  uint64_t v515 = v2;
  uint64_t v516 = v5;
  os_log_type_t v517 = v4;
  uint64_t v451 = type metadata accessor for ReconciliationMutation();
  uint64_t v453 = *(void *)(v451 - 8);
  MEMORY[0x270FA5388](v451);
  unint64_t v450 = (char *)&v432 - v22;
  uint64_t v514 = v3;
  uint64_t v515 = v2;
  uint64_t v516 = v5;
  os_log_type_t v517 = v4;
  uint64_t v23 = type metadata accessor for ItemReconciliation();
  uint64_t v466 = sub_24DCCA3F8();
  uint64_t v467 = *(void *)(v466 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v466);
  int v446 = (char *)&v432 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v477 = (uint64_t)&v432 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v436 = (uint64_t)&v432 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v442 = (uint64_t)&v432 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  unint64_t v441 = (char *)&v432 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v448 = (uint64_t)&v432 - v35;
  uint64_t v474 = v23;
  uint64_t v475 = *(void *)(v23 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v455 = (uint64_t)&v432 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v472 = (uint64_t)&v432 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  unint64_t v435 = (char *)&v432 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v440 = (uint64_t)&v432 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v443 = (char *)&v432 - v44;
  uint64_t v45 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v47 = swift_getAssociatedConformanceWitness();
  uint64_t v514 = (uint64_t)AssociatedTypeWitness;
  uint64_t v515 = v45;
  os_log_t isa = AssociatedConformanceWitness;
  uint64_t v507 = (ValueMetadata *)v47;
  uint64_t v516 = (ValueMetadata *)AssociatedConformanceWitness;
  os_log_type_t v517 = (ValueMetadata *)v47;
  uint64_t v502 = type metadata accessor for ThrottlingKey();
  uint64_t v469 = sub_24DCCA3F8();
  uint64_t v468 = *(void *)(v469 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v469);
  long long v459 = (char *)&v432 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  long long v460 = (char *)&v432 - v51;
  unsigned int v505 = (void (*)(void, void, void))v45;
  uint64_t v503 = *(uint8_t **)(v45 - 8);
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  unint64_t v449 = (char *)&v432 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  long long v454 = (char *)&v432 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  unint64_t v491 = (char *)&v432 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  unint64_t v485 = (char *)&v432 - v59;
  id v508 = AssociatedTypeWitness;
  unint64_t v504 = (uint8_t *)*((void *)AssociatedTypeWitness - 1);
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  long long v461 = (uint64_t (*)(char *, uint64_t))((char *)&v432 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  unint64_t v445 = (char *)&v432 - v63;
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  uint64_t v495 = (uint64_t (*)(char *, uint64_t))((char *)&v432 - v65);
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  unint64_t v438 = (char *)&v432 - v67;
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  unint64_t v437 = (char *)&v432 - v69;
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  unint64_t v444 = (uint64_t (*)(char *, uint64_t))((char *)&v432 - v71);
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  uint64_t v501 = (uint8_t *)&v432 - v73;
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  int v492 = (char *)&v432 - v75;
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  uint64_t v496 = (char *)&v432 - v77;
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  unint64_t v484 = (char *)&v432 - v79;
  MEMORY[0x270FA5388](v78);
  uint64_t v493 = (char *)&v432 - v80;
  uint64_t v81 = type metadata accessor for SnapshotItem();
  uint64_t v500 = *(unsigned int (***)(void, void, void))(v81 - 8);
  MEMORY[0x270FA5388](v81);
  unint64_t v494 = (char *)&v432 - v82;
  uint64_t v83 = type metadata accessor for SnapshotItem();
  uint64_t v498 = *(void **)(v83 - 8);
  unint64_t v499 = (char *)v83;
  MEMORY[0x270FA5388](v83);
  long long v483 = (char *)&v432 - v84;
  uint64_t v488 = v3;
  uint64_t v514 = v3;
  uint64_t v515 = v2;
  uint64_t v486 = v2;
  long long v489 = v5;
  uint64_t v516 = v5;
  os_log_type_t v517 = v4;
  long long v487 = v4;
  uint64_t v85 = type metadata accessor for PersistenceTrigger();
  uint64_t v510 = *(void *)(v85 - 8);
  uint64_t v511 = v85;
  uint64_t v86 = MEMORY[0x270FA5388](v85);
  uint64_t v88 = (char *)&v432 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = MEMORY[0x270FA5388](v86);
  size_t v497 = (char *)&v432 - v90;
  uint64_t v91 = MEMORY[0x270FA5388](v89);
  char v93 = (char *)&v432 - v92;
  uint64_t v94 = MEMORY[0x270FA5388](v91);
  os_log_t v96 = (char *)&v432 - v95;
  uint64_t v97 = MEMORY[0x270FA5388](v94);
  uint64_t v99 = (char *)&v432 - v98;
  uint64_t v100 = MEMORY[0x270FA5388](v97);
  uint64_t v102 = (char *)&v432 - v101;
  MEMORY[0x270FA5388](v100);
  uint64_t v104 = (char *)&v432 - v103;
  uint64_t v105 = v512;
  uint64_t result = sub_24DA38684();
  if (result)
  {
    uint64_t v434 = v81;
    if (*(uint64_t *)((char *)&v105->Kind + qword_26B1A2648))
    {
      swift_retain();
      uint64_t v107 = (uint64_t)v509;
      uint64_t v108 = v513;
      sub_24D779570((uint64_t)v509);
      if (v108) {
        return swift_release();
      }
      uint64_t v433 = v88;
      uint64_t v513 = 0;
      swift_release();
      uint64_t v109 = v107;
    }
    else
    {
      uint64_t v433 = v88;
      uint64_t v109 = (uint64_t)v509;
    }
    uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t))(v510 + 16);
    v110(v104, v109, v511);
    uint64_t v509 = v104;
    int v111 = swift_getEnumCaseMultiPayload() - 5;
    uint64_t v112 = v434;
    uint64_t v113 = (uint64_t)v509;
    switch(v111)
    {
      case 0:
        v110(v102, (uint64_t)v509, v511);
        unint64_t v114 = v499;
        uint64_t v115 = sub_24DCCA3F8();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v117 = &v102[*(int *)(TupleTypeMetadata3 + 48)];
        uint64_t v118 = *(void *)&v102[*(int *)(TupleTypeMetadata3 + 64)];
        double v119 = v498;
        double v120 = (unsigned int (*)(char *, uint64_t, char *))v498[6];
        if (v120(v102, 1, v114) == 1)
        {
          uint64_t v121 = *(void (**)(char *, uint64_t))(*(void *)(v115 - 8) + 8);
          v121(v117, v115);
          v121(v102, v115);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
        }
        if (v120(v117, 1, v114) != 1)
        {
          ((void (*)(char *, char *))v119[1])(v102, v114);
          goto LABEL_77;
        }
        uint64_t v173 = v483;
        uint64_t v174 = ((uint64_t (*)(char *, char *, char *))v119[4])(v483, v102, v114);
        if ((v118 & 2) == 0)
        {
          ((void (*)(char *, char *))v119[1])(v173, v114);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
        }
        MEMORY[0x270FA5388](v174);
        uint64_t v219 = v512;
        uint64_t v220 = v513;
        *(&v432 - 2) = (uint64_t)v512;
        *(&v432 - 1) = (uint64_t)v173;
        sub_24D77C754(v219, 0, (uint64_t (*)(void))sub_24D784B1C, (char *)&v432 - 32);
        if (v220)
        {
          ((void (*)(char *, char *))v119[1])(v173, v114);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
        }
        uint64_t v513 = 0;
        ((void (*)(char *, char *))v119[1])(v173, v114);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
      case 1:
        v110(v99, (uint64_t)v509, v511);
        uint64_t v115 = sub_24DCCA3F8();
        uint64_t v122 = v112;
        uint64_t v123 = swift_getTupleTypeMetadata3();
        uint64_t v117 = &v99[*(int *)(v123 + 48)];
        char v124 = v500;
        if (((unsigned int (**)(char *, uint64_t, uint64_t))v500)[6](v99, 1, v122) == 1)
        {
          uint64_t v125 = *(void (**)(char *, uint64_t))(*(void *)(v115 - 8) + 8);
          v125(v117, v115);
          v125(v99, v115);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
        }
        uint64_t v175 = *(void *)&v99[*(int *)(v123 + 64)];
        uint64_t v176 = v494;
        uint64_t v177 = ((uint64_t (*)(char *, char *, uint64_t))v124[4])(v494, v99, v122);
        if ((v175 & 2) != 0)
        {
          MEMORY[0x270FA5388](v177);
          uint64_t v217 = v512;
          uint64_t v218 = v513;
          *(&v432 - 2) = (uint64_t)v512;
          *(&v432 - 1) = (uint64_t)v176;
          sub_24D77C754(v217, 0, (uint64_t (*)(void))sub_24D784B00, (char *)&v432 - 32);
          if (v218)
          {
            ((void (*)(char *, uint64_t))v124[1])(v176, v434);
            (*(void (**)(char *, uint64_t))(*(void *)(v115 - 8) + 8))(v117, v115);
            return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
          }
          uint64_t v513 = 0;
          ((void (*)(char *, uint64_t))v124[1])(v176, v434);
        }
        else
        {
          ((void (*)(char *, uint64_t))v124[1])(v176, v122);
        }
LABEL_77:
        (*(void (**)(char *, uint64_t))(*(void *)(v115 - 8) + 8))(v117, v115);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
      case 2:
      case 3:
      case 4:
      case 8:
      case 9:
      case 10:
      case 11:
        return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
      case 5:
        v110(v93, (uint64_t)v509, v511);
        uint64_t v127 = v507;
        id v126 = v508;
        uint64_t v129 = (uint64_t)v505;
        os_log_t v128 = isa;
        uint64_t v514 = (uint64_t)v508;
        uint64_t v515 = (uint64_t)v505;
        uint64_t v516 = (ValueMetadata *)isa;
        os_log_type_t v517 = v507;
        uint64_t v514 = type metadata accessor for ReconciliationID();
        uint64_t v515 = sub_24DCCA3F8();
        uint64_t v516 = &type metadata for ContentStatus;
        os_log_type_t v517 = &type metadata for ContentStatus;
        uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
        double v131 = &v93[*(int *)(TupleTypeMetadata + 48)];
        int v132 = v93[*(int *)(TupleTypeMetadata + 80)];
        uint64_t v514 = (uint64_t)v126;
        uint64_t v515 = v129;
        uint64_t v516 = (ValueMetadata *)v128;
        os_log_type_t v517 = v127;
        type metadata accessor for ReconciliationID();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          if (v132 == 3)
          {
            uint64_t v133 = v503;
            double v134 = v485;
            uint64_t v135 = (*((uint64_t (**)(char *, char *, uint64_t))v503 + 4))(v485, v93, v129);
            MEMORY[0x270FA5388](v135);
            uint64_t v136 = v512;
            uint64_t v137 = v513;
            *(&v432 - 2) = (uint64_t)v512;
            *(&v432 - 1) = (uint64_t)v134;
            sub_24D77C754(v136, 0, (uint64_t (*)(void))sub_24D784AE4, (char *)&v432 - 32);
            if (v137)
            {
              (*((void (**)(char *, uint64_t))v133 + 1))(v134, v129);
LABEL_37:
              uint64_t v183 = sub_24DCCA3F8();
              (*(void (**)(char *, uint64_t))(*(void *)(v183 - 8) + 8))(v131, v183);
              return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
            }
            uint64_t v513 = 0;
            (*((void (**)(char *, uint64_t))v133 + 1))(v134, v129);
          }
          else
          {
            (*((void (**)(char *, uint64_t))v503 + 1))(v93, v129);
          }
        }
        else if (v132 == 2)
        {
          uint64_t v178 = v504;
          uint64_t v179 = v484;
          uint64_t v180 = (*((uint64_t (**)(char *, char *, id))v504 + 4))(v484, v93, v126);
          MEMORY[0x270FA5388](v180);
          uint64_t v181 = v512;
          uint64_t v182 = v513;
          *(&v432 - 2) = (uint64_t)v512;
          *(&v432 - 1) = (uint64_t)v179;
          sub_24D77C754(v181, 0, (uint64_t (*)(void))sub_24D784ABC, (char *)&v432 - 32);
          if (v182)
          {
            (*((void (**)(char *, id))v178 + 1))(v179, v126);
            goto LABEL_37;
          }
          uint64_t v513 = 0;
          (*((void (**)(char *, id))v178 + 1))(v179, v126);
        }
        else
        {
          (*((void (**)(char *, id))v504 + 1))(v93, v126);
        }
        uint64_t v230 = sub_24DCCA3F8();
        (*(void (**)(char *, uint64_t))(*(void *)(v230 - 8) + 8))(v131, v230);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
      case 6:
        double v138 = v497;
        uint64_t v139 = ((uint64_t (*)(char *, char *, uint64_t))v110)(v497, v509, v511);
        MEMORY[0x270FA5388](v139);
        strcpy((char *)&v432 - 32, " otherID from to ");
        uint64_t v141 = v507;
        id v140 = v508;
        uint64_t v142 = (uint64_t)v505;
        os_log_t v143 = isa;
        uint64_t v514 = (uint64_t)v508;
        uint64_t v515 = (uint64_t)v505;
        uint64_t v516 = (ValueMetadata *)isa;
        os_log_type_t v517 = v507;
        uint64_t v514 = type metadata accessor for ReconciliationID();
        uint64_t v515 = sub_24DCCA3F8();
        uint64_t v516 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1995E0);
        os_log_type_t v517 = v516;
        uint64_t v144 = (int *)swift_getTupleTypeMetadata();
        uint64_t v145 = (ValueMetadata *)&v138[v144[12]];
        int v146 = v138[v144[16]];
        int v147 = v138[v144[20]];
        uint64_t v514 = (uint64_t)v140;
        uint64_t v515 = v142;
        uint64_t v516 = (ValueMetadata *)v143;
        os_log_type_t v517 = v141;
        uint64_t v148 = type metadata accessor for ReconciliationID();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v149 = sub_24DCCA3F8();
          (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v149 - 8) + 8))(v145, v149);
          (*(void (**)(char *, uint64_t))(*(void *)(v148 - 8) + 8))(v138, v148);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
        }
        uint64_t v184 = (ValueMetadata *)v496;
        uint64_t v185 = (*((uint64_t (**)(char *, char *, id))v504 + 4))(v496, v138, v140);
        if (v147 != 2)
        {
          uint64_t v186 = v513;
          uint64_t v187 = (uint64_t)v492;
          if (v147 == 3)
          {
            uint64_t v223 = v145;
            MEMORY[0x270FA5388](v185);
            uint64_t v224 = v512;
            *(&v432 - 2) = (uint64_t)v512;
            *(&v432 - 1) = (uint64_t)v184;
            sub_24D77C754(v224, 0, (uint64_t (*)(void))sub_24D78546C, (char *)&v432 - 32);
            if (v186)
            {
              (*((void (**)(ValueMetadata *, id))v504 + 1))(v184, v140);
              uint64_t v225 = sub_24DCCA3F8();
              (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v225 - 8) + 8))(v223, v225);
              return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
            }
            double v188 = v224;
            uint64_t v226 = v489;
            uint64_t v227 = v487;
            uint64_t v228 = v486;
            uint64_t v145 = v223;
LABEL_117:
            if (v146 != 3)
            {
              if (v146)
              {
                uint64_t v513 = v186;
                (*((void (**)(char *, id))v504 + 1))(v496, v140);
              }
              else
              {
                uint64_t v285 = v145;
                uint64_t v286 = v496;
                uint64_t v516 = v188;
                os_log_type_t v517 = (ValueMetadata *)v496;
                sub_24D77C754(v188, 1, (uint64_t (*)(void))sub_24D784AA0, (char *)&v514);
                if (v186)
                {
                  (*((void (**)(char *, id))v504 + 1))(v286, v140);
                  uint64_t v287 = sub_24DCCA3F8();
                  (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v287 - 8) + 8))(v285, v287);
                  return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
                }
                uint64_t v513 = 0;
                (*((void (**)(char *, id))v504 + 1))(v286, v140);
                uint64_t v145 = v285;
              }
LABEL_126:
              uint64_t v295 = sub_24DCCA3F8();
              (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v295 - 8) + 8))(v145, v295);
              return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
            }
            uint64_t v507 = v145;
            uint64_t v514 = v488;
            uint64_t v515 = v228;
            uint64_t v516 = v226;
            os_log_type_t v517 = v227;
            uint64_t v513 = v186;
            type metadata accessor for DiskImport.ContinueDiskImport();
            uint64_t v288 = (uint64_t)v492;
            sub_24DBB275C();
            uint64_t v289 = sub_24D7C0440();
            uint64_t v291 = sub_24D732E08(v288, v289, v290, 0x20000);
            uint64_t v292 = (void (*)(uint64_t, id))*((void *)v504 + 1);
            v292(v288, v140);
            sub_24D9ACA64();
            uint64_t v293 = v513;
            sub_24D912448(v291);
            if (!v293)
            {
              uint64_t v513 = 0;
              v292((uint64_t)v496, v140);
              swift_release();
              uint64_t v145 = v507;
              goto LABEL_126;
            }
            v292((uint64_t)v496, v140);
            swift_release();
            uint64_t v294 = sub_24DCCA3F8();
            (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v294 - 8) + 8))(v507, v294);
            return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
          }
          if (v147 != 6)
          {
            double v188 = v512;
LABEL_71:
            uint64_t v226 = v489;
            uint64_t v227 = v487;
            uint64_t v228 = v486;
            goto LABEL_117;
          }
          uint64_t v507 = v145;
          double v188 = v512;
          char v189 = (*(uint64_t (**)(uint64_t))(*(void *)v512[1].Kind + 232))(v185);
          if (!v186)
          {
            if ((v189 & 1) == 0)
            {
              uint64_t v514 = v488;
              uint64_t v515 = v486;
              uint64_t v516 = v489;
              os_log_type_t v517 = v487;
              uint64_t v513 = 0;
              type metadata accessor for DiskImport.ContinueDiskImport();
              sub_24DBB275C();
              uint64_t v190 = sub_24D7C0440();
              uint64_t v192 = sub_24D732E08(v187, v190, v191, 0x20000);
              uint64_t v193 = v188;
              uint64_t v194 = (void (*)(uint64_t, id))*((void *)v504 + 1);
              v194(v187, v140);
              sub_24D9ACA64();
              uint64_t v186 = v513;
              sub_24D912448(v192);
              if (v186)
              {
                v194((uint64_t)v496, v140);
                swift_release();
                uint64_t v195 = sub_24DCCA3F8();
                (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v195 - 8) + 8))(v507, v195);
                return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
              }
              swift_release();
              double v188 = v193;
              uint64_t v184 = (ValueMetadata *)v496;
            }
            uint64_t v145 = v507;
            uint64_t v516 = v188;
            os_log_type_t v517 = v184;
            sub_24D77C754(v188, 0, (uint64_t (*)(void))sub_24D784AA0, (char *)&v514);
            goto LABEL_71;
          }
LABEL_67:
          (*((void (**)(ValueMetadata *, id))v504 + 1))(v184, v140);
          uint64_t v222 = sub_24DCCA3F8();
          (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v222 - 8) + 8))(v507, v222);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
        }
        uint64_t v507 = v145;
        double v188 = v512;
        uint64_t v186 = v513;
        char v221 = (*(uint64_t (**)(uint64_t))(*(void *)v512[1].Kind + 240))(v185);
        if (v186) {
          goto LABEL_67;
        }
        if (v221)
        {
          uint64_t v226 = v489;
          uint64_t v227 = v487;
          uint64_t v228 = v486;
LABEL_116:
          uint64_t v145 = v507;
          goto LABEL_117;
        }
        uint64_t v514 = v488;
        uint64_t v515 = v486;
        uint64_t v516 = v489;
        os_log_type_t v517 = v487;
        uint64_t v513 = 0;
        type metadata accessor for DiskImport.ContinueDiskImport();
        uint64_t v257 = (uint64_t)v492;
        sub_24DBB275C();
        uint64_t v258 = sub_24D7C0440();
        uint64_t v260 = sub_24D732E08(v257, v258, v259, 0x20000);
        os_log_t v261 = v188;
        uint64_t v262 = (void (*)(uint64_t, id))*((void *)v504 + 1);
        v262(v257, v140);
        sub_24D9ACA64();
        uint64_t v263 = v513;
        sub_24D912448(v260);
        uint64_t v513 = v263;
        if (!v263)
        {
          swift_release();
          double v188 = v261;
          uint64_t v226 = v489;
          uint64_t v227 = v487;
          uint64_t v228 = v486;
          uint64_t v186 = v513;
          goto LABEL_116;
        }
        v262((uint64_t)v496, v140);
        swift_release();
        uint64_t v264 = sub_24DCCA3F8();
        (*(void (**)(ValueMetadata *, uint64_t))(*(void *)(v264 - 8) + 8))(v507, v264);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
      case 7:
        uint64_t v150 = v433;
        v110(v433, (uint64_t)v509, v511);
        __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
        id v151 = *(id *)&v150[*(int *)(swift_getTupleTypeMetadata2() + 48)];
        id v152 = v508;
        char v153 = v505;
        uint64_t v514 = (uint64_t)v508;
        uint64_t v515 = (uint64_t)v505;
        uint64_t v516 = (ValueMetadata *)isa;
        os_log_type_t v517 = v507;
        uint64_t v154 = type metadata accessor for ReconciliationID();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v156 = v150[*(int *)(TupleTypeMetadata2 + 48)];
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          if (v156 != 6)
          {
            (*((void (**)(char *, void (*)(void, void, void)))v503 + 1))(v150, v153);

            return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
          }
          uint64_t v157 = (uint64_t)v491;
          (*((void (**)(char *, char *, void))v503 + 4))(v491, v150, v153);
          uint64_t v518 = (unsigned int (**)(void, void, void))v151;
          id v158 = v151;
          int v159 = swift_dynamicCast();
          uint64_t v160 = v513;
          if (v159)
          {
            uint64_t v161 = v151;
            uint64_t v162 = v514;
            uint64_t v163 = v515;
            char v164 = (char)v516;
            if (v516 <= 0xFBu)
            {

              sub_24D512AD8(v162, v163, v164);
              goto LABEL_82;
            }
            sub_24D512AD8(v514, v515, (char)v516);
            id v151 = v161;
            uint64_t v157 = (uint64_t)v491;
          }
          uint64_t v514 = (uint64_t)v151;
          id v165 = v151;
          os_log_type_t v166 = v482;
          uint64_t v167 = v490;
          int v168 = swift_dynamicCast();
          uint64_t v169 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v167 - 8) + 56);
          if (v168)
          {
            uint64_t v170 = *(void *)(v167 - 8);
            v169(v166, 0, 1, v167);
            if (swift_getEnumCaseMultiPayload() == 13)
            {
              (*((void (**)(uint64_t, void (*)(void, void, void)))v503 + 1))(v157, v153);

              (*(void (**)(char *, uint64_t))(v170 + 8))(v166, v167);
              return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
            }
            uint64_t v229 = v167;
          }
          else
          {
            v169(v166, 1, 1, v167);
            uint64_t v170 = v480;
            uint64_t v229 = v481;
          }
          (*(void (**)(char *, uint64_t))(v170 + 8))(v166, v229);
          uint64_t v232 = v478;
          sub_24D475DF0(v157, v478);
          if (v160)
          {
            (*((void (**)(uint64_t, void (*)(void, void, void)))v503 + 1))(v157, v153);

            return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
          }
          uint64_t v233 = v232;
          uint64_t v234 = v476;
          uint64_t v235 = v473;
          int v236 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v476 + 48))(v233, 1, v473);
          uint64_t v513 = 0;
          if (v236 == 1)
          {
            (*((void (**)(uint64_t, void (*)(void, void, void)))v503 + 1))(v157, v153);

            (*(void (**)(uint64_t, uint64_t))(v463 + 8))(v233, v464);
            return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
          }
          unint64_t v243 = v470;
          (*(void (**)(char *, uint64_t, uint64_t))(v234 + 32))(v470, v233, v235);
          uint64_t v244 = v465;
          double v245 = *(void (**)(char *))(v465 + 16);
          double v246 = v462;
          os_log_t isa = (os_log_t)&v243[*(int *)(v235 + 52)];
          v245(v462);
          if ((*((unsigned int (**)(char *, uint64_t, id))v504 + 6))(v246, 1, v152) == 1)
          {

            (*(void (**)(char *, uint64_t))(v476 + 8))(v243, v235);
            (*((void (**)(char *, void (*)(void, void, void)))v503 + 1))(v491, v153);
            (*(void (**)(char *, uint64_t))(v244 + 8))(v246, v471);
            return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
          }
          uint64_t v265 = v504;
          uint64_t v266 = v461;
          (*((void (**)(uint64_t (*)(char *, uint64_t), char *, id))v504 + 4))(v461, v246, v152);
          if (*((unsigned char *)&isa->isa + *(int *)(type metadata accessor for ItemReconciliationHalf() + 56)) == 4)
          {
            uint64_t v500 = (unsigned int (**)(void, void, void))v151;
            id v267 = (id)fpfs_current_or_default_log();
            uint64_t v268 = v458;
            sub_24DCC9088();
            uint64_t v269 = v153;
            uint64_t v270 = v503;
            uint64_t v271 = (void (*)(char *, char *, void))*((void *)v503 + 2);
            uint64_t v272 = v454;
            v271(v454, v491, v153);
            uint64_t v273 = sub_24DCC9068();
            os_log_type_t v274 = sub_24DCCA128();
            if (os_log_type_enabled(v273, v274))
            {
              os_log_t isa = v273;
              uint64_t v275 = (uint64_t (*)(char *, uint64_t))swift_slowAlloc();
              uint64_t v502 = swift_slowAlloc();
              uint64_t v514 = (uint64_t)v502;
              uint64_t v501 = (uint8_t *)v275;
              *(_DWORD *)uint64_t v275 = 136446210;
              unint64_t v499 = (char *)v275 + 4;
              uint64_t v276 = v449;
              v271(v449, v272, v153);
              uint64_t v277 = (ValueMetadata *)*((void *)v270 + 1);
              ((void (*)(char *, void (*)(void, void, void)))v277)(v272, v153);
              uint64_t v278 = sub_24DCCAD78();
              unint64_t v280 = v279;
              uint64_t v507 = v277;
              ((void (*)(char *, void (*)(void, void, void)))v277)(v276, v269);
              id v152 = v508;
              uint64_t v518 = (unsigned int (**)(void, void, void))sub_24D418FB4(v278, v280, &v514);
              sub_24DCCA428();
              swift_bridgeObjectRelease();
              os_log_t v281 = isa;
              uint64_t v282 = v501;
              _os_log_impl(&dword_24D3D0000, isa, v274, "👽  enumerating %{public}s is throttled, unfaulting folder to allow user access", v501, 0xCu);
              uint64_t v283 = v502;
              swift_arrayDestroy();
              uint64_t v284 = v473;
              MEMORY[0x25332B030](v283, -1, -1);
              MEMORY[0x25332B030](v282, -1, -1);

              (*(void (**)(char *, uint64_t))(v457 + 8))(v458, v456);
            }
            else
            {
              uint64_t v507 = (ValueMetadata *)*((void *)v270 + 1);
              ((void (*)(char *, void (*)(void, void, void)))v507)(v272, v153);

              (*(void (**)(char *, uint64_t))(v457 + 8))(v268, v456);
              uint64_t v284 = v473;
            }
            uint64_t v342 = v455;
            uint64_t v343 = v470;
            sub_24DB864D4(v284, v455);
            uint64_t v344 = v461;
            uint64_t v345 = v513;
            sub_24D77F2F4(v461, v342, (uint64_t)v512);
            uint64_t v346 = v504;
            uint64_t v347 = v491;
            if (v345)
            {

              (*(void (**)(uint64_t, uint64_t))(v475 + 8))(v342, v474);
              (*((void (**)(uint64_t (*)(char *, uint64_t), id))v346 + 1))(v344, v152);
              (*(void (**)(char *, uint64_t))(v476 + 8))(v343, v284);
              ((void (*)(char *, void (*)(void, void, void)))v507)(v347, v269);
              return (*(uint64_t (**)(char *, uint64_t))(v510 + 8))(v509, v511);
            }
            uint64_t v513 = 0;

            (*(void (**)(uint64_t, uint64_t))(v475 + 8))(v342, v474);
            (*((void (**)(uint64_t (*)(char *, uint64_t), id))v346 + 1))(v344, v152);
            (*(void (**)(char *, uint64_t))(v476 + 8))(v343, v284);
            ((void (*)(char *, void (*)(void, void, void)))v507)(v347, v269);
            uint64_t v113 = (uint64_t)v509;
            return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
          }

          (*((void (**)(uint64_t (*)(char *, uint64_t), id))v265 + 1))(v266, v152);
          (*(void (**)(char *, uint64_t))(v476 + 8))(v470, v235);
LABEL_82:
          (*((void (**)(char *, void (*)(void, void, void)))v503 + 1))(v491, v153);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
        }
        break;
      case 12:
        v110(v96, (uint64_t)v509, v511);
        id v171 = v508;
        uint64_t v514 = (uint64_t)v508;
        uint64_t v515 = (uint64_t)v505;
        uint64_t v516 = (ValueMetadata *)isa;
        os_log_type_t v517 = v507;
        uint64_t v172 = type metadata accessor for ReconciliationID();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          (*(void (**)(char *, uint64_t))(*(void *)(v172 - 8) + 8))(v96, v172);
        }
        else
        {
          uint64_t v214 = v504;
          char v215 = (ValueMetadata *)v493;
          (*((void (**)(char *, char *, id))v504 + 4))(v493, v96, v171);
          uint64_t v216 = v513;
          uint64_t v516 = v512;
          os_log_type_t v517 = v215;
          sub_24D77C754(v512, 0, (uint64_t (*)(void))sub_24D784AA0, (char *)&v514);
          if (!v216) {
            uint64_t v513 = 0;
          }
          (*((void (**)(ValueMetadata *, id))v214 + 1))(v215, v171);
        }
        return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
      default:
        uint64_t v113 = (uint64_t)v509;
        return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
    }
    uint64_t v507 = (ValueMetadata *)v154;
    uint64_t v500 = (unsigned int (**)(void, void, void))v151;
    uint64_t v196 = v504;
    uint64_t v197 = (void (*)(uint8_t *, char *, id))*((void *)v504 + 2);
    v197(v501, v150, v152);
    int v198 = 1;
    int v199 = 0;
    int v200 = 0;
    switch(v156)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
        uint64_t v201 = (void (*)(uint8_t *, id))*((void *)v196 + 1);
        id v202 = v508;
        v201(v501, v508);
        if (v156 != 6)
        {
          v201((uint8_t *)v433, v202);

          uint64_t v113 = (uint64_t)v509;
          return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
        }
        (*((void (**)(uint64_t (*)(char *, uint64_t), char *, id))v196 + 4))((uint8_t *)v495, v433, v202);
        id v203 = v500;
        uint64_t v518 = v500;
        double v204 = v500;
        if (!swift_dynamicCast()) {
          goto LABEL_50;
        }
        uint64_t v205 = v514;
        uint64_t v206 = v515;
        char v207 = (char)v516;
        if (v516 <= 0xFBu)
        {

          sub_24D512AD8(v205, v206, v207);
        }
        else
        {
          sub_24D512AD8(v514, v515, (char)v516);
          id v203 = v500;
LABEL_50:
          uint64_t v514 = (uint64_t)v203;
          id v208 = v203;
          uint64_t v209 = v479;
          uint64_t v210 = v490;
          int v211 = swift_dynamicCast();
          uint64_t v212 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v210 - 8) + 56);
          if (v211)
          {
            uint64_t v213 = *(void *)(v210 - 8);
            v212(v209, 0, 1, v210);
            if (swift_getEnumCaseMultiPayload() == 13)
            {
              v201((uint8_t *)v495, v508);

              (*(void (**)(char *, uint64_t))(v213 + 8))(v209, v210);
              uint64_t v113 = (uint64_t)v509;
              return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
            }
            unsigned int v505 = (void (*)(void, void, void))v197;
            uint64_t v231 = v210;
          }
          else
          {
            unsigned int v505 = (void (*)(void, void, void))v197;
            v212(v209, 1, 1, v210);
            uint64_t v213 = v480;
            uint64_t v231 = v481;
          }
          (*(void (**)(char *, uint64_t))(v213 + 8))(v209, v231);
          os_log_type_t v238 = v512;
          uint64_t v237 = v513;
          uint64_t v239 = v477;
          uint64_t v240 = v495;
          sub_24D4759C8((uint64_t)v495, v477);
          uint64_t v513 = v237;
          if (v237)
          {
            v201((uint8_t *)v240, v508);

            return (*(uint64_t (**)(char *, uint64_t))(v510 + 8))(v509, v511);
          }
          uint64_t v241 = v475;
          uint64_t v242 = v474;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v475 + 48))(v239, 1, v474) == 1)
          {
            v201((uint8_t *)v240, v508);

            (*(void (**)(uint64_t, uint64_t))(v467 + 8))(v239, v466);
            uint64_t v113 = (uint64_t)v509;
            return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
          }
          uint64_t v247 = v472;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v241 + 32))(v472, v239, v242);
          uint64_t v248 = type metadata accessor for ItemReconciliationHalf();
          if (*(unsigned char *)(v247 + *(int *)(v248 + 56)) == 3)
          {
            unint64_t v504 = (uint8_t *)v248;
            uint64_t v249 = *(int *)(TupleTypeMetadata2 + 48);
            uint64_t v250 = (uint64_t)v459;
            double v251 = v495;
            uint64_t v252 = v505;
            v505(v459, (uint8_t *)v495, v508);
            swift_storeEnumTagMultiPayload();
            *(unsigned char *)(v250 + v249) = 6;
            (*((void (**)(uint64_t, void, uint64_t))v502[-1].isa + 7))(v250, 0, 1);
            uint64_t v253 = v500;
            uint64_t v254 = v513;
            BOOL v255 = sub_24D769D8C(v500, v250, (uint64_t)v238);
            uint64_t v513 = v254;
            if (v254)
            {

              (*(void (**)(uint64_t, uint64_t))(v468 + 8))(v250, v469);
              (*(void (**)(uint64_t, uint64_t))(v475 + 8))(v472, v474);
LABEL_105:
              double v256 = v251;
LABEL_106:
              v201((uint8_t *)v256, v508);
              return (*(uint64_t (**)(char *, uint64_t))(v510 + 8))(v509, v511);
            }
            BOOL v324 = v255;
            unsigned int v505 = v252;
            (*(void (**)(uint64_t, uint64_t))(v468 + 8))(v250, v469);
            if (v324)
            {
              uint64_t v325 = v488;
              uint64_t v326 = v486;
              uint64_t v514 = v488;
              uint64_t v515 = v486;
              v327 = v489;
              unint64_t v328 = v487;
              uint64_t v516 = v489;
              os_log_type_t v517 = v487;
              type metadata accessor for ConcreteJobResult();
              os_log_t isa = (os_log_t)sub_24D907530();
              uint64_t v514 = v325;
              uint64_t v515 = v326;
              uint64_t v516 = v327;
              os_log_type_t v517 = v328;
              uint64_t v329 = type metadata accessor for JobResult();
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v330 = swift_getTupleTypeMetadata2();
              uint64_t v331 = (uint64_t)v450;
              unint64_t v332 = &v450[*(int *)(v330 + 48)];
              double v251 = v495;
              v505((uint8_t *)v450, (uint8_t *)v495, v508);
              swift_storeEnumTagMultiPayload();
              *unint64_t v332 = 0;
              swift_storeEnumTagMultiPayload();
              uint64_t v333 = v451;
              swift_storeEnumTagMultiPayload();
              uint64_t v503 = (uint8_t *)v329;
              os_log_t v334 = isa;
              sub_24D907568((uint64_t)isa, v331);
              uint64_t v335 = *(NSObject **)(v453 + 8);
              v453 += 8;
              uint64_t v502 = v335;
              ((void (*)(uint64_t, uint64_t))v335)(v331, v333);
              uint64_t v336 = v475;
              uint64_t v337 = (uint64_t)v446;
              uint64_t v338 = v472;
              uint64_t v339 = v474;
              (*(void (**)(char *, uint64_t, uint64_t))(v475 + 16))(v446, v472, v474);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v336 + 56))(v337, 0, 1, v339);
              long long v340 = (uint64_t *)(v338 + *(int *)(v339 + 64));
              uint64_t v341 = v513;
              sub_24D76A63C((uint64_t)v251, v337, *v340, v340[1], 0x10000, (uint64_t)v512, (uint64_t)v334);
              uint64_t v513 = v341;
              if (v341)
              {
                swift_release();

                (*(void (**)(uint64_t, uint64_t))(v467 + 8))(v337, v466);
                (*(void (**)(uint64_t, uint64_t))(v475 + 8))(v338, v339);
                goto LABEL_105;
              }
              p_os_log_t isa = &v334->isa;
              (*(void (**)(uint64_t, uint64_t))(v467 + 8))(v337, v466);
              if ((*(unsigned char *)(v338 + *((int *)v504 + 15)) & 1) == 0)
              {
                type metadata accessor for ReconciliationSideMutation();
                uint64_t v370 = swift_getTupleTypeMetadata2();
                uint64_t v371 = (uint64_t)v450;
                unint64_t v372 = &v450[*(int *)(v370 + 48)];
                v505((uint8_t *)v450, (uint8_t *)v495, v508);
                swift_storeEnumTagMultiPayload();
                *(_WORD *)unint64_t v372 = 3;
                *(_OWORD *)(v372 + 8) = *(_OWORD *)v340;
                swift_storeEnumTagMultiPayload();
                uint64_t v373 = v451;
                swift_storeEnumTagMultiPayload();
                sub_24D907568((uint64_t)p_isa, v371);
                ((void (*)(uint64_t, uint64_t))v502)(v371, v373);
                uint64_t v514 = v488;
                uint64_t v515 = v486;
                uint64_t v516 = v489;
                os_log_type_t v517 = v487;
                type metadata accessor for Materialization.MaterializeItem();
                uint64_t v374 = sub_24DC1BC78((uint64_t)v495, *v340, v340[1], 1);
                sub_24D85246C((uint64_t)p_isa, v374);
                swift_release();
              }
              uint64_t v514 = v488;
              uint64_t v515 = v486;
              uint64_t v516 = v489;
              os_log_type_t v517 = v487;
              type metadata accessor for Ingestion.FetchChildrenMetadata();
              uint64_t v375 = sub_24DC09730((uint64_t)v495, *v340, v340[1], 0x400000);
              sub_24D85246C((uint64_t)p_isa, v375);
              swift_release();
              uint64_t v376 = sub_24D9ACA64();
              uint64_t v377 = v513;
              sub_24D9126EC(p_isa, v376);
              uint64_t v513 = v377;
              if (v377)
              {
                swift_release();
LABEL_167:

                (*(void (**)(uint64_t, uint64_t))(v475 + 8))(v472, v474);
                double v256 = v495;
                goto LABEL_106;
              }
              swift_release();
            }
            else if ((*(unsigned char *)(v472 + *((int *)v504 + 15)) & 1) == 0)
            {
              id v353 = (id)fpfs_current_or_default_log();
              sub_24DCC9088();
              v505(v445, (uint8_t *)v495, v508);
              os_log_t v354 = sub_24DCC9068();
              os_log_type_t v355 = sub_24DCCA128();
              if (os_log_type_enabled(v354, v355))
              {
                uint64_t v356 = (uint8_t *)swift_slowAlloc();
                uint64_t v507 = (ValueMetadata *)swift_slowAlloc();
                uint64_t v514 = (uint64_t)v507;
                *(_DWORD *)uint64_t v356 = 136446210;
                uint64_t v503 = v356 + 4;
                unint64_t v504 = v356;
                uint64_t v357 = v492;
                uint64_t v358 = v445;
                id v359 = v508;
                v505(v492, v445, v508);
                v201((uint8_t *)v358, v359);
                uint64_t v360 = sub_24DCCAD78();
                unint64_t v362 = v361;
                v201((uint8_t *)v357, v359);
                uint64_t v518 = (unsigned int (**)(void, void, void))sub_24D418FB4(v360, v362, &v514);
                sub_24DCCA428();
                swift_bridgeObjectRelease();
                os_log_t v363 = v504;
                _os_log_impl(&dword_24D3D0000, v354, v355, "👽  enumerating %{public}s is throttled, unfaulting folder to allow user access", v504, 0xCu);
                uint64_t v364 = v507;
                swift_arrayDestroy();
                MEMORY[0x25332B030](v364, -1, -1);
                MEMORY[0x25332B030](v363, -1, -1);
              }
              else
              {
                v201((uint8_t *)v445, v508);
              }

              (*(void (**)(char *, uint64_t))(v457 + 8))(v447, v456);
              uint64_t v378 = v513;
              sub_24D77F2F4(v495, v472, (uint64_t)v512);
              uint64_t v513 = v378;
              if (v378) {
                goto LABEL_167;
              }
            }

            (*(void (**)(uint64_t, uint64_t))(v475 + 8))(v472, v474);
          }
          else
          {

            (*(void (**)(uint64_t, uint64_t))(v241 + 8))(v247, v242);
          }
        }
        v201((uint8_t *)v495, v508);
        uint64_t v113 = (uint64_t)v509;
        return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
      case 12:
        int v198 = 0;
        int v199 = 1;
        goto LABEL_128;
      case 23:
        goto LABEL_129;
      default:
LABEL_128:
        int v200 = v198;
        int v198 = 0;
LABEL_129:
        uint64_t v518 = v500;
        uint64_t v296 = v500;
        if (!swift_dynamicCast()) {
          goto LABEL_132;
        }
        uint64_t v297 = v514;
        char v298 = (char)v516;
        if (v516 <= 0xFBu)
        {
          uint64_t v321 = v515;

          sub_24D512AD8(v297, v321, v298);
          uint64_t v322 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
          id v323 = v508;
          v322(v501, v508);
          goto LABEL_144;
        }
        sub_24D512AD8(v514, v515, (char)v516);
LABEL_132:
        uint64_t v299 = *(int *)(TupleTypeMetadata2 + 48);
        uint64_t v300 = (uint64_t)v460;
        id v301 = v508;
        v197((uint8_t *)v460, (char *)v501, v508);
        swift_storeEnumTagMultiPayload();
        *(unsigned char *)(v300 + v299) = v156;
        (*((void (**)(uint64_t, void, uint64_t))v502[-1].isa + 7))(v300, 0, 1);
        unint64_t v302 = v500;
        uint64_t v303 = v513;
        BOOL v304 = sub_24D769D8C(v500, v300, (uint64_t)v512);
        uint64_t v513 = v303;
        if (v303)
        {

          (*(void (**)(uint64_t, uint64_t))(v468 + 8))(v300, v469);
          unint64_t v305 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
          v305(v501, v301);
          v305((uint8_t *)v433, v301);
          return (*(uint64_t (**)(char *, uint64_t))(v510 + 8))(v509, v511);
        }
        BOOL v306 = v304;
        (*(void (**)(uint64_t, uint64_t))(v468 + 8))(v300, v469);
        if (v306)
        {
          if (v198)
          {
            uint64_t v307 = v513;
            sub_24D4759C8((uint64_t)v501, v448);
            uint64_t v513 = v307;
            if (v307)
            {
LABEL_172:
              unint64_t v381 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
              id v382 = v508;
              v381(v501, v508);

              goto LABEL_173;
            }
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v475 + 48))(v448, 1, v474) != 1)
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v475 + 32))(v443, v448, v474);
              uint64_t v384 = v488;
              uint64_t v385 = v486;
              uint64_t v514 = v488;
              uint64_t v515 = v486;
              uint64_t v386 = v489;
              uint64_t v387 = v487;
              uint64_t v516 = v489;
              os_log_type_t v517 = v487;
              type metadata accessor for ConcreteJobResult();
              os_log_t isa = (os_log_t)sub_24D907530();
              uint64_t v514 = v384;
              uint64_t v515 = v385;
              uint64_t v516 = v386;
              os_log_type_t v517 = v387;
              type metadata accessor for JobResult();
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v388 = swift_getTupleTypeMetadata2();
              uint64_t v389 = (uint64_t)v450;
              uint64_t v390 = &v450[*(int *)(v388 + 48)];
              v197((uint8_t *)v450, (char *)v501, v508);
              swift_storeEnumTagMultiPayload();
              uint64_t v391 = (uint64_t *)&v443[*(int *)(v474 + 64)];
              *(void *)uint64_t v390 = 0x80000000000;
              *(_OWORD *)(v390 + 8) = *(_OWORD *)v391;
              swift_storeEnumTagMultiPayload();
              uint64_t v392 = v451;
              swift_storeEnumTagMultiPayload();
              os_log_t v393 = isa;
              sub_24D907568((uint64_t)isa, v389);
              (*(void (**)(uint64_t, uint64_t))(v453 + 8))(v389, v392);
              uint64_t v394 = v475;
              uint64_t v395 = (uint64_t)v441;
              uint64_t v396 = v474;
              (*(void (**)(char *, char *, uint64_t))(v475 + 16))(v441, v443, v474);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v394 + 56))(v395, 0, 1, v396);
              uint64_t v397 = v513;
              sub_24D76A63C((uint64_t)v501, v395, *v391, v391[1], 0x10000, (uint64_t)v512, (uint64_t)v393);
              if (v397)
              {
                swift_release();

                (*(void (**)(char *, uint64_t))(v467 + 8))(v441, v466);
                (*(void (**)(char *, uint64_t))(v475 + 8))(v443, v474);
                unint64_t v398 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
                id v399 = v508;
                v398(v501, v508);
                v398((uint8_t *)v433, v399);
                return (*(uint64_t (**)(char *, uint64_t))(v510 + 8))(v509, v511);
              }
              (*(void (**)(char *, uint64_t))(v467 + 8))(v441, v466);
              uint64_t v402 = sub_24D9ACA64();
              sub_24D9126EC(v393, v402);
              uint64_t v513 = 0;
              (*(void (**)(char *, uint64_t))(v475 + 8))(v443, v474);
              swift_release();
              if (!v199) {
                goto LABEL_171;
              }
              goto LABEL_141;
            }
            (*(void (**)(uint64_t, uint64_t))(v467 + 8))(v448, v466);
          }
          if (!v199)
          {
LABEL_171:
            uint64_t v383 = v513;
            uint64_t v516 = v512;
            os_log_type_t v517 = (ValueMetadata *)v501;
            sub_24D77C754(v512, 0, (uint64_t (*)(void))sub_24D784AA0, (char *)&v514);
            uint64_t v513 = v383;
            if (v383) {
              goto LABEL_172;
            }
            uint64_t v322 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
            id v323 = v508;
            v322(v501, v508);

LABEL_144:
            v322((uint8_t *)v433, v323);
            uint64_t v113 = (uint64_t)v509;
            return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
          }
LABEL_141:
          uint64_t v308 = v488;
          uint64_t v309 = v486;
          uint64_t v514 = v488;
          uint64_t v515 = v486;
          unint64_t v310 = v489;
          unint64_t v311 = v487;
          uint64_t v516 = v489;
          os_log_type_t v517 = v487;
          type metadata accessor for ConcreteJobResult();
          unint64_t v312 = (void *)sub_24D907530();
          uint64_t v514 = v308;
          uint64_t v515 = v309;
          uint64_t v516 = v310;
          os_log_type_t v517 = v311;
          type metadata accessor for JobResult();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v313 = swift_getTupleTypeMetadata2();
          uint64_t v314 = (uint64_t)v450;
          uint64_t v315 = &v450[*(int *)(v313 + 48)];
          v197((uint8_t *)v450, (char *)v501, v508);
          swift_storeEnumTagMultiPayload();
          *(_WORD *)uint64_t v315 = 262;
          swift_storeEnumTagMultiPayload();
          uint64_t v316 = v451;
          swift_storeEnumTagMultiPayload();
          sub_24D907568((uint64_t)v312, v314);
          (*(void (**)(uint64_t, uint64_t))(v453 + 8))(v314, v316);
          uint64_t v317 = sub_24D9ACA64();
          uint64_t v318 = v513;
          sub_24D9126EC(v312, v317);
          uint64_t v513 = v318;
          if (v318)
          {
            uint64_t v319 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
            id v320 = v508;
            v319(v501, v508);
            swift_release();

            v319((uint8_t *)v433, v320);
            return (*(uint64_t (**)(char *, uint64_t))(v510 + 8))(v509, v511);
          }
          swift_release();
          goto LABEL_171;
        }
        uint64_t v348 = v513;
        uint64_t v349 = v452;
        long long v350 = v501;
        (*(void (**)(uint8_t *))(*(void *)v512[2].Kind + 280))(v501);
        uint64_t v513 = v348;
        if (v348)
        {
          unint64_t v351 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
          id v352 = v508;
          v351(v350, v508);

          v351((uint8_t *)v433, v352);
          return (*(uint64_t (**)(char *, uint64_t))(v510 + 8))(v509, v511);
        }
        if ((*((unsigned int (**)(char *, uint64_t, id))v504 + 6))(v349, 1, v508) == 1)
        {
          uint64_t v365 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
          v365(v501, v508);

          uint64_t v366 = *(void (**)(char *, void))(v465 + 8);
          unint64_t v367 = v452;
          unint64_t v368 = (id *)&v503;
LABEL_159:
          v366(v367, *(v368 - 32));
LABEL_160:
          v365((uint8_t *)v433, v508);
          uint64_t v113 = (uint64_t)v509;
          return (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 8))(v113, v511);
        }
        unint64_t v379 = v444;
        (*((void (**)(uint64_t (*)(char *, uint64_t), char *, id))v504 + 4))(v444, v452, v508);
        uint64_t v380 = v513;
        sub_24D4759C8((uint64_t)v379, v442);
        uint64_t v513 = v380;
        if (v380)
        {

          unint64_t v381 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
          id v382 = v508;
          v381((uint8_t *)v444, v508);
          v381(v501, v382);
LABEL_173:
          v381((uint8_t *)v433, v382);
          return (*(uint64_t (**)(char *, uint64_t))(v510 + 8))(v509, v511);
        }
        uint64_t v507 = *(ValueMetadata **)(v475 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v507)(v442, 1, v474) == 1)
        {

          uint64_t v365 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
          id v400 = v508;
          v365((uint8_t *)v444, v508);
          v365(v501, v400);
          uint64_t v366 = *(void (**)(char *, void))(v467 + 8);
          int v401 = &v474;
LABEL_181:
          unint64_t v367 = (char *)*(v401 - 32);
          unint64_t v368 = (id *)&v498;
          goto LABEL_159;
        }
        unint64_t v403 = *(uint8_t **)(v475 + 32);
        uint64_t v404 = v440;
        unsigned int v505 = (void (*)(void, void, void))(v475 + 32);
        uint64_t v503 = v403;
        ((void (*)(char *, uint64_t, uint64_t))v403)((char *)v440, v442, v474);
        if (*(unsigned char *)(v404 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 56)) != 3)
        {

          (*(void (**)(char *, uint64_t))(v475 + 8))((char *)v440, v474);
          uint64_t v365 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
          id v419 = v508;
          v365((uint8_t *)v444, v508);
          v365(v501, v419);
          goto LABEL_160;
        }
        id v405 = (id)fpfs_current_or_default_log();
        sub_24DCC9088();
        id v406 = v508;
        v197((uint8_t *)v437, (char *)v501, v508);
        v197((uint8_t *)v438, (char *)v444, v406);
        uint64_t v407 = sub_24DCC9068();
        os_log_type_t v408 = sub_24DCCA128();
        uint64_t v502 = v407;
        LODWORD(v499) = v408;
        if (os_log_type_enabled(v407, v408))
        {
          uint64_t v409 = swift_slowAlloc();
          uint64_t v498 = (void *)swift_slowAlloc();
          uint64_t v514 = (uint64_t)v498;
          *(_DWORD *)uint64_t v409 = 136446466;
          os_log_t isa = (os_log_t)isa[1].isa;
          uint64_t v410 = v437;
          id v411 = v508;
          uint64_t v412 = sub_24DCCAD78();
          uint64_t v518 = (unsigned int (**)(void, void, void))sub_24D418FB4(v412, v413, &v514);
          size_t v497 = (char *)&v519;
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          uint64_t v365 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
          v365((uint8_t *)v410, v411);
          *(_WORD *)(v409 + 12) = 2082;
          uint64_t v496 = (char *)(v409 + 14);
          unint64_t v414 = v438;
          uint64_t v415 = sub_24DCCAD78();
          uint64_t v518 = (unsigned int (**)(void, void, void))sub_24D418FB4(v415, v416, &v514);
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          v365((uint8_t *)v414, v411);
          unint64_t v417 = v502;
          _os_log_impl(&dword_24D3D0000, v502, (os_log_type_t)v499, "👽  import of %{public}s within %{public}s is throttled, unfaulting folder to allow user access", (uint8_t *)v409, 0x16u);
          unint64_t v418 = v498;
          swift_arrayDestroy();
          MEMORY[0x25332B030](v418, -1, -1);
          MEMORY[0x25332B030](v409, -1, -1);
        }
        else
        {
          uint64_t v365 = (void (*)(uint8_t *, id))*((void *)v504 + 1);
          id v420 = v508;
          v365((uint8_t *)v437, v508);
          v365((uint8_t *)v438, v420);
        }
        (*(void (**)(char *, uint64_t))(v457 + 8))(v439, v456);
        uint64_t v421 = v513;
        sub_24D77F2F4(v444, v440, (uint64_t)v512);
        uint64_t v513 = v421;
        if (v421)
        {

          (*(void (**)(char *, uint64_t))(v475 + 8))((char *)v440, v474);
LABEL_192:
          id v422 = v508;
          v365((uint8_t *)v444, v508);
          v365(v501, v422);
          v365((uint8_t *)v433, v422);
          return (*(uint64_t (**)(char *, uint64_t))(v510 + 8))(v509, v511);
        }
        if (v200)
        {
          uint64_t v423 = v513;
          sub_24D4759C8((uint64_t)v501, v436);
          uint64_t v513 = v423;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v507)(v436, 1, v474) == 1)
          {

            (*(void (**)(char *, uint64_t))(v475 + 8))((char *)v440, v474);
            id v424 = v508;
            v365((uint8_t *)v444, v508);
            v365(v501, v424);
            uint64_t v366 = *(void (**)(char *, void))(v467 + 8);
            int v401 = &v468;
            goto LABEL_181;
          }
          uint64_t v426 = (uint64_t)v435;
          ((void (*)(char *, uint64_t, uint64_t))v503)(v435, v436, v474);
          uint64_t v427 = v513;
          sub_24D77F2F4((uint64_t (*)(char *, uint64_t))v501, v426, (uint64_t)v512);
          uint64_t v513 = v427;
          if (v427)
          {

            unint64_t v428 = *(void (**)(char *, uint64_t))(v475 + 8);
            uint64_t v429 = v474;
            v428(v435, v474);
            v428((char *)v440, v429);
            goto LABEL_192;
          }

          unint64_t v430 = *(void (**)(char *, uint64_t))(v475 + 8);
          uint64_t v431 = v474;
          v430(v435, v474);
          v430((char *)v440, v431);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v475 + 8))((char *)v440, v474);
        }
        id v425 = v508;
        v365((uint8_t *)v444, v508);
        v365(v501, v425);
        goto LABEL_160;
    }
  }
  return result;
}

uint64_t sub_24D7840D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SnapshotItem();
  return sub_24D4759C8(a1 + *(int *)(v4 + 36), a2);
}

uint64_t sub_24D78414C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v22 = a2;
  uint64_t v3 = *(void *)(*(void *)a1 + 584);
  uint64_t v4 = *(void *)(*(void *)a1 + 576);
  uint64_t v5 = *(void *)(*(void *)a1 + 600);
  uint64_t v6 = *(void *)(*(void *)a1 + 592);
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  uint64_t v7 = type metadata accessor for ItemReconciliation();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v20 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v12 = v27;
  uint64_t result = sub_24D475DF0(v22 + *(int *)(v11 + 36), (uint64_t)v10);
  if (!v12)
  {
    uint64_t v22 = v5;
    uint64_t v27 = v6;
    uint64_t v14 = v20;
    uint64_t v15 = v21;
    uint64_t v16 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v7) == 1)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v8);
      uint64_t v23 = v4;
      uint64_t v24 = v3;
      uint64_t v25 = v27;
      uint64_t v26 = v22;
      uint64_t v17 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 1, 1, v17);
    }
    else
    {
      sub_24DB864D4(v7, v15);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v7);
      uint64_t v23 = v4;
      uint64_t v24 = v3;
      uint64_t v25 = v27;
      uint64_t v26 = v22;
      uint64_t v18 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 0, 1, v18);
    }
  }
  return result;
}

uint64_t sub_24D784408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v3 = *(void *)(*(void *)a1 + 584);
  uint64_t v4 = *(void *)(*(void *)a1 + 576);
  uint64_t v5 = *(void *)(*(void *)a1 + 600);
  uint64_t v6 = *(void *)(*(void *)a1 + 592);
  uint64_t v22 = v3;
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  uint64_t v25 = v6;
  uint64_t v7 = type metadata accessor for ItemReconciliation();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v19 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = v26;
  uint64_t result = sub_24D475DF0(v21, (uint64_t)&v18 - v9);
  if (!v11)
  {
    uint64_t v21 = v8;
    uint64_t v26 = v6;
    uint64_t v13 = v19;
    uint64_t v14 = v20;
    uint64_t v15 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v7) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v21);
      uint64_t v22 = v4;
      uint64_t v23 = v3;
      uint64_t v24 = v26;
      uint64_t v25 = v5;
      uint64_t v16 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
    }
    else
    {
      sub_24DB864D4(v7, v14);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v7);
      uint64_t v22 = v4;
      uint64_t v23 = v3;
      uint64_t v24 = v26;
      uint64_t v25 = v5;
      uint64_t v17 = type metadata accessor for ItemReconciliation();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 0, 1, v17);
    }
  }
  return result;
}

unint64_t sub_24D7846A4(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t type metadata accessor for DiskImport.MonitoredFolders.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DiskImport.ImportingFolder()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D7846E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v39 - v11;
  uint64_t v40 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v39 - v14;
  if (MEMORY[0x253327D80](v13))
  {
    sub_24DCCA708();
    uint64_t v16 = sub_24DCCA6F8();
  }
  else
  {
    uint64_t v16 = MEMORY[0x263F8EE88];
  }
  uint64_t v44 = MEMORY[0x253327DD0](v5, a2);
  if (!v44) {
    return v16;
  }
  uint64_t v17 = 0;
  uint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v50 = v16 + 56;
  uint64_t v46 = v6 + 32;
  uint64_t v48 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  uint64_t v43 = v15;
  while (1)
  {
    char v18 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v18)
    {
      uint64_t v19 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v19(v15, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17), a2);
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_24DCCA778();
      if (v40 != 8) {
        goto LABEL_23;
      }
      uint64_t v52 = result;
      uint64_t v19 = *v49;
      (*v49)(v15, &v52, a2);
      swift_unknownObjectRelease();
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20)
      {
LABEL_20:
        __break(1u);
        return v16;
      }
    }
    uint64_t v47 = v21;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v45(v51, v15, a2);
    uint64_t v22 = sub_24DCC9678();
    uint64_t v23 = v16;
    uint64_t v24 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v25 = v22 & ~v24;
    unint64_t v26 = v25 >> 6;
    uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
    uint64_t v28 = 1 << v25;
    uint64_t v29 = *(void *)(v6 + 72);
    if (((1 << v25) & v27) != 0)
    {
      uint64_t v30 = ~v24;
      do
      {
        v19(v9, (uint64_t *)(*(void *)(v23 + 48) + v29 * v25), a2);
        uint64_t v31 = a3;
        char v32 = sub_24DCC9798();
        uint64_t v33 = *v48;
        (*v48)(v9, a2);
        if (v32)
        {
          v33(v51, a2);
          a3 = v31;
          uint64_t v6 = v41;
          uint64_t v5 = v42;
          uint64_t v16 = v23;
          goto LABEL_7;
        }
        unint64_t v25 = (v25 + 1) & v30;
        unint64_t v26 = v25 >> 6;
        uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
        uint64_t v28 = 1 << v25;
        a3 = v31;
      }
      while ((v27 & (1 << v25)) != 0);
      uint64_t v6 = v41;
      uint64_t v5 = v42;
    }
    uint64_t v34 = v51;
    *(void *)(v50 + 8 * v26) = v28 | v27;
    unint64_t v35 = *(void *)(v23 + 48) + v29 * v25;
    uint64_t v16 = v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v45)(v35, v34, a2);
    uint64_t v37 = *(void *)(v23 + 16);
    BOOL v20 = __OFADD__(v37, 1);
    uint64_t v38 = v37 + 1;
    if (v20) {
      break;
    }
    *(void *)(v23 + 16) = v38;
LABEL_7:
    uint64_t v15 = v43;
    uint64_t v17 = v47;
    if (v47 == v44) {
      return v16;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_24D784AA0@<X0>(uint64_t a1@<X8>)
{
  return sub_24D77EFFC(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24D784ABC@<X0>(uint64_t a1@<X8>)
{
  return sub_24D4759C8(*(void *)(v1 + 24), a1);
}

uint64_t sub_24D784AE4@<X0>(uint64_t a1@<X8>)
{
  return sub_24D784408(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24D784B00@<X0>(uint64_t a1@<X8>)
{
  return sub_24D78414C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24D784B1C@<X0>(uint64_t a1@<X8>)
{
  return sub_24D7840D0(*(void *)(v1 + 24), a1);
}

uint64_t sub_24D784B38(uint64_t a1, uint64_t a2, int a3)
{
  return sub_24D7786C8(a1, a2, a3, *(uint64_t **)(v3 + 16), *(void *)(v3 + 24)) & 1;
}

uint64_t sub_24D784B58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D784BA0()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_24D784BD8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D784C10()
{
  return sub_24D776714();
}

uint64_t sub_24D784C20()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D784C70(void *a1)
{
  return sub_24D76E010(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_24D784C80()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D784CB8()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D784D08()
{
  return sub_24D76E158(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(uint64_t (**)(void, void, void, uint64_t))(v0 + 40));
}

uint64_t sub_24D784D2C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t sub_24D784D7C@<X0>(unsigned char *a1@<X8>)
{
  return sub_24D76BCB0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24D784D84(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v27 = a3;
  uint64_t v28 = a1;
  uint64_t v29 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)swift_allocObject();
  v26[1] = a4;
  v13[2] = a4;
  v13[3] = a5;
  void v13[4] = a6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18FFF0);
  uint64_t inited = swift_initStackObject();
  uint64_t v15 = MEMORY[0x263F8EE78];
  *(void *)(inited + 16) = MEMORY[0x263F8EE78];
  *(void *)(inited + 24) = v15;
  *(void *)(inited + 32) = v15;
  *(void *)(inited + 40) = v15;
  *(void *)(inited + 48) = 0;
  v26[0] = a5;
  swift_retain();
  id v16 = a6;
  swift_beginAccess();
  uint64_t v17 = *(void **)(inited + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_24DA14898(0, v17[2] + 1, 1, v17);
  }
  unint64_t v19 = v17[2];
  unint64_t v18 = v17[3];
  if (v19 >= v18 >> 1) {
    uint64_t v17 = sub_24DA14898((void *)(v18 > 1), v19 + 1, 1, v17);
  }
  void v17[2] = v19 + 1;
  BOOL v20 = &v17[15 * v19];
  v20[4] = v28;
  v20[5] = a2;
  v20[6] = 5;
  *(_OWORD *)(v20 + 7) = 0u;
  *(_OWORD *)(v20 + 9) = 0u;
  *(_OWORD *)(v20 + 11) = 0u;
  *(_OWORD *)(v20 + 13) = 0u;
  *(_OWORD *)(v20 + 15) = 0u;
  v20[17] = 0;
  *((_DWORD *)v20 + 36) = 151715840;
  *(void *)(inited + 32) = v17;
  swift_endAccess();
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v22 = v21;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v29);
  double v24 = v22 * 1000000000.0;
  if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v24 < 9.22337204e18)
  {
    uint64_t v25 = v27;
    sub_24D82ACA0((void *)inited, (uint64_t)v24);
    (*(void (**)(void (*)(void *), void *))(*(void *)v25 + 2368))(sub_24D78512C, v13);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24D7850EC()
{
  swift_release();

  return swift_deallocObject();
}

void sub_24D78512C(void *a1)
{
  sub_24D662694(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32));
}

ValueMetadata *type metadata accessor for DiskImportStatus()
{
  return &type metadata for DiskImportStatus;
}

uint64_t sub_24D785174()
{
  return sub_24D3E4A9C(&qword_26986E750, &qword_26986E758);
}

unint64_t sub_24D7851B4()
{
  unint64_t result = qword_26986E760[0];
  if (!qword_26986E760[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26986E760);
  }
  return result;
}

uint64_t sub_24D785208()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D785224()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D785240()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D78525C()
{
  return 6;
}

uint64_t type metadata accessor for DiskImport.ImportingFolder.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D78527C()
{
  unint64_t result = qword_26B1958E0;
  if (!qword_26B1958E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1958E0);
  }
  return result;
}

unint64_t sub_24D7852D0()
{
  unint64_t result = qword_26B1958D0;
  if (!qword_26B1958D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1958D0);
  }
  return result;
}

unsigned char *sub_24D785324(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D7853F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24D785418()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D785434()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D785450()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D78546C@<X0>(uint64_t a1@<X8>)
{
  return sub_24D784ABC(a1);
}

uint64_t sub_24D785484(uint64_t a1)
{
  return a1;
}

uint64_t sub_24D7854B0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_24DCC9F88();
  if (!v18) {
    return sub_24DCC9C98();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_24DCC9528();
  uint64_t v32 = sub_24DCCA888();
  sub_24DCCA828();
  uint64_t v36 = v8;
  uint64_t result = sub_24DCC9F78();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    unint64_t v35 = v14;
    ++v33;
    while (1)
    {
      double v21 = (void (*)(char *, void))sub_24DCCA028();
      double v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_24DCCA868();
      sub_24DCC9FA8();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_24D7858B0(uint64_t a1)
{
  return sub_24D7858E0(a1, (uint64_t (*)(void))sub_24DA13948);
}

uint64_t sub_24D7858C8(uint64_t a1)
{
  return sub_24D7858E0(a1, (uint64_t (*)(void))sub_24DA13954);
}

uint64_t sub_24D7858E0(uint64_t a1, uint64_t (*a2)(void))
{
  size_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v5 + v3) <= *(void *)(v4 + 24) >> 1)
  {
    size_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v3) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v4 = a2();
  size_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v4 + 16);
  if ((*(void *)(v4 + 24) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v10 = (void *)(v4 + v9 + 32);
  if (a1 + 32 < (unint64_t)v10 + v8 && (unint64_t)v10 < a1 + 32 + v8) {
    goto LABEL_21;
  }
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v3)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)(v4 + 16);
  BOOL v13 = __OFADD__(v12, v8);
  size_t v14 = v12 + v8;
  if (!v13)
  {
    *(void *)(v4 + 16) = v14;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v4;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D785A3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  size_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  size_t v3 = sub_24DA13838(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D785B90(unint64_t a1)
{
  return sub_24D786678(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_24D8F2D88);
}

uint64_t sub_24D785BA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_24DA14180(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D785D4C(uint64_t a1, uint64_t (*a2)(void))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v5 + v3 <= *(void *)(v4 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v4 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v3) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v4 + 16);
  if ((*(void *)(v4 + 24) >> 1) - v8 < v3)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = (void *)(v4 + v8 + 32);
  if (a1 + 32 < (unint64_t)v9 + v3 && (unint64_t)v9 < a1 + 32 + v3) {
    goto LABEL_21;
  }
  memcpy(v9, (const void *)(a1 + 32), v3);
  if (!v3)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v4;
    return result;
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v11, v3);
  uint64_t v13 = v11 + v3;
  if (!v12)
  {
    *(void *)(v4 + 16) = v13;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D785EA4(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  int64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  int64_t v3 = sub_24DA15074(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_26B193A90);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D78601C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x253328830](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_24D8F2FBC(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_24DCC9C48();
}

uint64_t sub_24D7861E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_24DA153EC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[7 * v8 + 4];
  if (a1 + 32 < v9 + 56 * v2 && v9 < a1 + 32 + 56 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1907E0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D786354(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_24DA15674(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C6B0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7864B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_24DA158DC(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D786660(unint64_t a1)
{
  return sub_24D786678(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_24D8F31E4);
}

uint64_t sub_24D786678(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x253328830](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_24DCC9C48();
}

id sub_24D78684C(uint64_t a1)
{
  return sub_24D786864(a1);
}

id sub_24D786864(uint64_t a1)
{
  id result = objc_msgSend(v1, sel_longAtIndex_, a1);
  if ((unint64_t)result > 5)
  {
    sub_24D511F64();
    swift_allocError();
    unsigned char *v3 = 0;
    return (id)swift_willThrow();
  }
  return result;
}

void *sub_24D7868D0()
{
  if (qword_26B199D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_26B1994C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_26B197138;
  if (*((void *)off_26B197138 + 2) && (unint64_t v1 = sub_24D4053BC(0x6465727574706143, 0xEF746E65746E6F43), (v2 & 1) != 0))
  {
    sub_24D3F7E8C(v0[7] + 32 * v1, (uint64_t)v5);
    sub_24D3F7E7C(v5, &v7);
    swift_endAccess();
    sub_24D3F7E7C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DD8);
    swift_dynamicCast();
    unint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    unint64_t v3 = &unk_26FFA12D0;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DD8);
    *(void *)&long long v7 = &unk_26FFA12D0;
    swift_beginAccess();
    sub_24D6EADB4((uint64_t)&v7, 0x6465727574706143, 0xEF746E65746E6F43);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

void *sub_24D786AD8()
{
  if (qword_26B199D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_26B1994C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_26B197138;
  if (*((void *)off_26B197138 + 2) && (unint64_t v1 = sub_24D4053BC(0xD000000000000012, 0x800000024DD063B0), (v2 & 1) != 0))
  {
    sub_24D3F7E8C(v0[7] + 32 * v1, (uint64_t)v5);
    sub_24D3F7E7C(v5, &v7);
    swift_endAccess();
    sub_24D3F7E7C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DE0);
    swift_dynamicCast();
    unint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    unint64_t v3 = &unk_26FFA12F8;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DE0);
    *(void *)&long long v7 = &unk_26FFA12F8;
    swift_beginAccess();
    sub_24D6EADB4((uint64_t)&v7, 0xD000000000000012, 0x800000024DD063B0);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

void *sub_24D786CD0()
{
  if (qword_26B199D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_26B1994C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_26B197138;
  if (*((void *)off_26B197138 + 2) && (unint64_t v1 = sub_24D4053BC(0xD000000000000012, 0x800000024DD06420), (v2 & 1) != 0))
  {
    sub_24D3F7E8C(v0[7] + 32 * v1, (uint64_t)v5);
    sub_24D3F7E7C(v5, &v7);
    swift_endAccess();
    sub_24D3F7E7C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DB8);
    swift_dynamicCast();
    unint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    unint64_t v3 = &unk_26FFA1258;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DB8);
    *(void *)&long long v7 = &unk_26FFA1258;
    swift_beginAccess();
    sub_24D6EADB4((uint64_t)&v7, 0xD000000000000012, 0x800000024DD06420);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

void *sub_24D786EC8()
{
  if (qword_26B199D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_26B1994C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_26B197138;
  if (*((void *)off_26B197138 + 2) && (unint64_t v1 = sub_24D4053BC(0x6174654D6D657449, 0xEC00000061746164), (v2 & 1) != 0))
  {
    sub_24D3F7E8C(v0[7] + 32 * v1, (uint64_t)v5);
    sub_24D3F7E7C(v5, &v7);
    swift_endAccess();
    sub_24D3F7E7C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DC0);
    swift_dynamicCast();
    unint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    unint64_t v3 = &unk_26FFA0F88;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DC0);
    *(void *)&long long v7 = &unk_26FFA0F88;
    swift_beginAccess();
    sub_24D6EADB4((uint64_t)&v7, 0x6174654D6D657449, 0xEC00000061746164);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

void *sub_24D7870C8()
{
  if (qword_26B199D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_26B1994C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_26B197138;
  if (*((void *)off_26B197138 + 2) && (unint64_t v1 = sub_24D4053BC(0x746F726854626F4ALL, 0xEB00000000656C74), (v2 & 1) != 0))
  {
    sub_24D3F7E8C(v0[7] + 32 * v1, (uint64_t)v5);
    sub_24D3F7E7C(v5, &v7);
    swift_endAccess();
    sub_24D3F7E7C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DB8);
    swift_dynamicCast();
    unint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    unint64_t v3 = &unk_26FFA0F60;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DB8);
    *(void *)&long long v7 = &unk_26FFA0F60;
    swift_beginAccess();
    sub_24D6EADB4((uint64_t)&v7, 0x746F726854626F4ALL, 0xEB00000000656C74);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

uint64_t sub_24D7872C8()
{
  return sub_24D787300(0xD000000000000015, 0x800000024DD06540, &qword_26B197DE8, (uint64_t (*)(uint64_t))sub_24D790094);
}

uint64_t sub_24D787300(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (qword_26B199D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_26B1994C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = off_26B197138;
  if (*((void *)off_26B197138 + 2) && (unint64_t v9 = sub_24D4053BC(a1, a2), (v10 & 1) != 0))
  {
    sub_24D3F7E8C(v8[7] + 32 * v9, (uint64_t)v14);
    sub_24D3F7E7C(v14, &v16);
    swift_endAccess();
    sub_24D3F7E7C(&v16, v14);
    __swift_instantiateConcreteTypeFromMangledName(a3);
    swift_dynamicCast();
    uint64_t v11 = v15;
  }
  else
  {
    uint64_t v12 = swift_endAccess();
    uint64_t v11 = a4(v12);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(a3);
    *(void *)&long long v16 = v11;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_24D6EADB4((uint64_t)&v16, a1, a2);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v11;
}

uint64_t sub_24D7874FC()
{
  return sub_24D402044(&qword_26B199CF0, &qword_26B197DF8, (uint64_t (*)(uint64_t))sub_24D7908F4);
}

uint64_t sub_24D787524()
{
  return sub_24D7875B4(qword_26986E840);
}

uint64_t sub_24D787530()
{
  return sub_24D7875B4((uint64_t *)&unk_26986F370);
}

uint64_t sub_24D78753C()
{
  return sub_24D7875B4(&qword_26986E838);
}

uint64_t sub_24D787548()
{
  return sub_24D7875B4(qword_26B199210);
}

uint64_t sub_24D787554()
{
  return sub_24D7875B4((uint64_t *)&unk_26B199298);
}

uint64_t sub_24D787560()
{
  return sub_24D7875B4(qword_26B199180);
}

uint64_t sub_24D78756C()
{
  return sub_24D7875B4(&qword_26986F2A0);
}

uint64_t sub_24D787578()
{
  return sub_24D7875B4(&qword_26986E830);
}

uint64_t sub_24D787584()
{
  return sub_24D7875B4((uint64_t *)&unk_26986F2F0);
}

uint64_t sub_24D787590()
{
  return sub_24D7875B4(&qword_26986E828);
}

uint64_t sub_24D78759C()
{
  return sub_24D7875B4((uint64_t *)&unk_26986F0F0);
}

uint64_t sub_24D7875A8()
{
  return sub_24D7875B4(&qword_26986E820);
}

uint64_t sub_24D7875B4(uint64_t *a1)
{
  if (qword_26B199D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_26B1994C0 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v2 = sub_24DCCB118();
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t v5 = off_26B197138;
  if (*((void *)off_26B197138 + 2) && (unint64_t v6 = sub_24D4053BC(v2, v4), (v7 & 1) != 0))
  {
    sub_24D3F7E8C(v5[7] + 32 * v6, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v14 + 1))
  {
    sub_24D3F7E7C(&v13, &v16);
    swift_endAccess();
    sub_24D3F7E7C(&v16, &v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B195DA8);
    swift_dynamicCast();
    uint64_t v8 = v15;
  }
  else
  {
    sub_24D3E3E54((uint64_t)&v13);
    swift_endAccess();
    if (qword_26B199388 != -1) {
      swift_once();
    }
    uint64_t v8 = qword_26B1A23C8;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_24DCCB118();
    uint64_t v11 = v10;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B195DA8);
    *(void *)&long long v16 = v8;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_24D6EADB4((uint64_t)&v16, v9, v11);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v8;
}

void *sub_24D787830()
{
  if (qword_26B199D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_26B1994C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_26B197138;
  if (*((void *)off_26B197138 + 2) && (unint64_t v1 = sub_24D4053BC(0xD000000000000036, 0x800000024DD064A0), (v2 & 1) != 0))
  {
    sub_24D3F7E8C(v0[7] + 32 * v1, (uint64_t)v5);
    sub_24D3F7E7C(v5, &v7);
    swift_endAccess();
    sub_24D3F7E7C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DD0);
    swift_dynamicCast();
    uint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    uint64_t v3 = &unk_26FFA2340;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DD0);
    *(void *)&long long v7 = &unk_26FFA2340;
    swift_beginAccess();
    sub_24D6EADB4((uint64_t)&v7, 0xD000000000000036, 0x800000024DD064A0);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

void *sub_24D787A28()
{
  if (qword_26B199D50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_26B1994C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = off_26B197138;
  if (*((void *)off_26B197138 + 2) && (unint64_t v1 = sub_24D4053BC(0xD000000000000036, 0x800000024DD064E0), (v2 & 1) != 0))
  {
    sub_24D3F7E8C(v0[7] + 32 * v1, (uint64_t)v5);
    sub_24D3F7E7C(v5, &v7);
    swift_endAccess();
    sub_24D3F7E7C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DC8);
    swift_dynamicCast();
    uint64_t v3 = v6;
  }
  else
  {
    swift_endAccess();
    uint64_t v3 = &unk_26FFA2368;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DC8);
    *(void *)&long long v7 = &unk_26FFA2368;
    swift_beginAccess();
    sub_24D6EADB4((uint64_t)&v7, 0xD000000000000036, 0x800000024DD064E0);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

uint64_t sub_24D787C20()
{
  return sub_24D402044((uint64_t *)&unk_26B196F50, &qword_26B197DE8, (uint64_t (*)(uint64_t))sub_24D790290);
}

uint64_t sub_24D787C48(unsigned __int8 *a1, char *a2)
{
  return sub_24D5EFD40(*a1, *a2);
}

uint64_t sub_24D787C54()
{
  return sub_24DCCB048();
}

uint64_t sub_24D787D4C()
{
  sub_24DCC98F8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D787E2C()
{
  return sub_24DCCB048();
}

uint64_t sub_24D787F20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D791004();
  *a1 = result;
  return result;
}

void sub_24D787F50(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x64695F656C6966;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC000000746E6574;
      uint64_t v3 = 0x6E6F635F74736574;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E6F697461636F6CLL;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6874676E656CLL;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x7367616C66;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_24D78800C(void *a1@<X8>)
{
  *a1 = &unk_26FFA10C0;
}

uint64_t sub_24D78801C()
{
  uint64_t result = 0x64695F656C6966;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E6F635F74736574;
      break;
    case 2:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 3:
      uint64_t result = 0x6874676E656CLL;
      break;
    case 4:
      uint64_t result = 0x7367616C66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D7880C8(char a1, id a2)
{
  switch(a1)
  {
    case 1:
      sub_24D3F0BA0(v2 + 8, (uint64_t)v14, &qword_26B199088);
      sub_24D3F0BA0((uint64_t)v14, (uint64_t)&v15, &qword_26B199088);
      if (v16 >> 60 == 15) {
        uint64_t v8 = 0;
      }
      else {
        uint64_t v8 = sub_24DCC8B28();
      }
      id v10 = objc_msgSend(a2, sel_bindObjectParameter_, v8);
      swift_unknownObjectRelease();
      goto LABEL_16;
    case 2:
      sub_24D3F0BA0(v2 + 24, (uint64_t)v14, &qword_26986E808);
      sub_24D3F0BA0((uint64_t)v14, (uint64_t)&v15, &qword_26986E808);
      if (v17) {
        uint64_t v9 = -1;
      }
      else {
        uint64_t v9 = v15;
      }
      goto LABEL_11;
    case 3:
      sub_24D3F0BA0(v2 + 24, (uint64_t)v14, &qword_26986E808);
      sub_24D3F0BA0((uint64_t)v14, (uint64_t)&v15, &qword_26986E808);
      if (v17) {
        uint64_t v9 = -1;
      }
      else {
        uint64_t v9 = v16;
      }
LABEL_11:
      id v10 = objc_msgSend(a2, sel_bindLongParameter_, v9);
LABEL_16:
      uint64_t v13 = sub_24DCC97E8();

      uint64_t result = v13;
      break;
    case 4:
      id v11 = objc_msgSend(a2, sel_bindUnsignedLongParameter_, *(void *)(v2 + 48));
      uint64_t v12 = sub_24DCC97E8();

      uint64_t result = v12;
      break;
    default:
      uint64_t v4 = (void *)sub_24DCCB088();
      id v5 = objc_msgSend(a2, sel_bindObjectParameter_, v4);

      uint64_t v6 = sub_24DCC97E8();
      uint64_t result = v6;
      break;
  }
  return result;
}

void sub_24D7882F8(id a1@<X1>, char a2@<W0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(a2)
  {
    case 1:
      if (objc_msgSend(a1, sel_isNullAtIndex_, a3)) {
        goto LABEL_8;
      }
      id v9 = objc_msgSend(a1, sel_dataAtIndex_, a3);
      uint64_t v10 = sub_24DCC8B68();
      uint64_t v12 = v11;

      *(void *)(a4 + 24) = MEMORY[0x263F06F78];
      *(void *)a4 = v10;
      *(void *)(a4 + 8) = v12;
      return;
    case 2:
    case 3:
      id v7 = objc_msgSend(a1, sel_longLongAtIndex_, a3);
      uint64_t v8 = MEMORY[0x263F8E5C0];
      goto LABEL_6;
    case 4:
      if (objc_msgSend(a1, sel_isNullAtIndex_, a3))
      {
LABEL_8:
        *(_OWORD *)a4 = 0u;
        *(_OWORD *)(a4 + 16) = 0u;
      }
      else
      {
        id v7 = objc_msgSend(a1, sel_unsignedIntegerAtIndex_, a3);
        uint64_t v8 = MEMORY[0x263F8D9D0];
LABEL_6:
        *(void *)(a4 + 24) = v8;
        *(void *)a4 = v7;
      }
      return;
    default:
      id v7 = objc_msgSend(a1, sel_unsignedLongLongAtIndex_, a3);
      uint64_t v8 = MEMORY[0x263F8E970];
      goto LABEL_6;
  }
}

uint64_t sub_24D788454@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  char v22 = 1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B199088);
  uint64_t result = sub_24DA6D460((uint64_t)&v22, v7, a1, v7, a2);
  if (!v3)
  {
    uint64_t v9 = v20;
    unint64_t v10 = v21;
    char v22 = 2;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F40);
    sub_24DA6D460((uint64_t)&v22, v11, a1, v11, a2);
    if ((v21 & 1) != 0
      || (uint64_t v12 = v20, v22 = 3, sub_24DA6D460((uint64_t)&v22, v11, a1, v11, a2), v21 == 1))
    {
      uint64_t v12 = 0;
      uint64_t v19 = 0;
      char v13 = 1;
    }
    else
    {
      char v13 = 0;
      uint64_t v19 = v20;
    }
    char v22 = 4;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194888);
    uint64_t result = sub_24DA6D460((uint64_t)&v22, v14, a1, v14, a2);
    uint64_t v15 = v20;
    if ((_BYTE)v21) {
      uint64_t v15 = 0;
    }
    if (v21 >> 60 == 15)
    {
      uint64_t v18 = v15;
      char v22 = 0;
      uint64_t result = sub_24DA6D460((uint64_t)&v22, MEMORY[0x263F8E970], a1, MEMORY[0x263F8E970], a2);
      uint64_t v9 = 0;
      uint64_t v17 = v19;
      uint64_t v16 = v20;
      unint64_t v10 = 0xF000000000000000;
      uint64_t v15 = v18;
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v17 = v19;
    }
    *(void *)a3 = v16;
    *(void *)(a3 + 8) = v9;
    *(void *)(a3 + 16) = v10;
    *(void *)(a3 + 24) = v12;
    *(void *)(a3 + 32) = v17;
    *(unsigned char *)(a3 + 40) = v13;
    *(void *)(a3 + 48) = v15;
  }
  return result;
}

uint64_t sub_24D788660(char *a1, void *a2)
{
  return sub_24D7880C8(*a1, a2);
}

void sub_24D7886B0(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

double sub_24D7886CC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_24D788454(a1, a2, (uint64_t)v7);
  if (!v3)
  {
    long long v6 = v7[1];
    *(_OWORD *)a3 = v7[0];
    *(_OWORD *)(a3 + 16) = v6;
    double result = *(double *)&v8;
    *(_OWORD *)(a3 + 32) = v8;
    *(void *)(a3 + 48) = v9;
  }
  return result;
}

unint64_t sub_24D78871C(uint64_t a1)
{
  unint64_t result = sub_24D788744();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24D788744()
{
  unint64_t result = qword_26986E7F0;
  if (!qword_26986E7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E7F0);
  }
  return result;
}

unint64_t sub_24D78879C()
{
  unint64_t result = qword_26B192C88;
  if (!qword_26B192C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B192C88);
  }
  return result;
}

uint64_t sub_24D7887F0()
{
  return sub_24D3E4A9C(&qword_26986E7F8, &qword_26B197DD8);
}

unsigned char *_s9SQLFieldsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D7888F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9SQLFieldsOMa_0()
{
  return &_s9SQLFieldsON;
}

uint64_t sub_24D788930()
{
  return sub_24D3E4A9C(&qword_26986E800, &qword_26B197DD8);
}

unint64_t sub_24D788970()
{
  unint64_t result = qword_26B192C78;
  if (!qword_26B192C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B192C78);
  }
  return result;
}

unint64_t sub_24D7889C8()
{
  unint64_t result = qword_26B1936E8[0];
  if (!qword_26B1936E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1936E8);
  }
  return result;
}

unint64_t sub_24D788A1C(unsigned __int8 a1)
{
  switch(a1 >> 6)
  {
    case 1:
      unint64_t v4 = 0x696C756465686373;
      goto LABEL_7;
    case 2:
      int v2 = a1;
      unint64_t result = 25705;
      switch(v2)
      {
        case 129:
          unint64_t result = 0x6E6F6974656C6564;
          break;
        case 130:
          unint64_t result = 0x5F64657461647075;
          break;
        case 131:
          unint64_t result = 0xD000000000000016;
          break;
        case 132:
          goto LABEL_13;
        case 133:
          goto LABEL_14;
        case 134:
          unint64_t result = 0xD00000000000001FLL;
          break;
        case 135:
          unint64_t result = 0x656C69665F736676;
          break;
        default:
          return result;
      }
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      switch(a1)
      {
        case 0xC1u:
        case 0xC4u:
LABEL_13:
          unint64_t result = 0x5F746E65746E6F63;
          break;
        case 0xC2u:
          unint64_t result = 0xD000000000000014;
          break;
        case 0xC3u:
          unint64_t result = 0xD000000000000013;
          break;
        case 0xC5u:
LABEL_14:
          unint64_t result = 0xD000000000000012;
          break;
        case 0xC6u:
          unint64_t result = 0x765F6E69616D6F64;
          break;
        default:
          return result;
      }
      break;
    default:
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000011;
LABEL_7:
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      unint64_t result = v4;
      break;
  }
  return result;
}

uint64_t sub_24D788E70(uint64_t a1, uint64_t a2)
{
  return sub_24D78DF7C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_24D3F8984);
}

uint64_t sub_24D788E88(uint64_t a1)
{
  return sub_24D3F8984(a1, *v1);
}

uint64_t sub_24D788E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D78DFEC(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_24D3F8984);
}

unint64_t sub_24D788EA8()
{
  return sub_24D788A1C(*v0);
}

uint64_t sub_24D788EB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24D790A40(*a1, *a2);
}

char *sub_24D788EBC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EC8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCD57D0;
  *(_DWORD *)(inited + 32) = -2088599168;
  unint64_t v1 = sub_24DA13C70((char *)1, 8, 1, (char *)inited);
  unint64_t v3 = *((void *)v1 + 2);
  unint64_t v2 = *((void *)v1 + 3);
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    unint64_t v1 = sub_24DA13C70((char *)(v2 > 1), v3 + 1, 1, v1);
    unint64_t v2 = *((void *)v1 + 3);
    int64_t v4 = v2 >> 1;
  }
  *((void *)v1 + 2) = v5;
  v1[v3 + 32] = -124;
  unint64_t v6 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    unint64_t v1 = sub_24DA13C70((char *)(v2 > 1), v3 + 2, 1, v1);
    unint64_t v2 = *((void *)v1 + 3);
    int64_t v4 = v2 >> 1;
  }
  *((void *)v1 + 2) = v6;
  v1[v5 + 32] = -123;
  unint64_t v7 = v3 + 3;
  if (v4 < (uint64_t)(v3 + 3))
  {
    unint64_t v1 = sub_24DA13C70((char *)(v2 > 1), v3 + 3, 1, v1);
    unint64_t v2 = *((void *)v1 + 3);
    int64_t v4 = v2 >> 1;
  }
  *((void *)v1 + 2) = v7;
  v1[v6 + 32] = -122;
  unint64_t v8 = v3 + 4;
  if (v4 < (uint64_t)(v3 + 4))
  {
    unint64_t v1 = sub_24DA13C70((char *)(v2 > 1), v3 + 4, 1, v1);
    unint64_t v2 = *((void *)v1 + 3);
    int64_t v4 = v2 >> 1;
  }
  *((void *)v1 + 2) = v8;
  v1[v7 + 32] = -58;
  unint64_t v9 = v3 + 5;
  if (v4 < (uint64_t)(v3 + 5))
  {
    unint64_t v1 = sub_24DA13C70((char *)(v2 > 1), v3 + 5, 1, v1);
    unint64_t v2 = *((void *)v1 + 3);
    int64_t v4 = v2 >> 1;
  }
  *((void *)v1 + 2) = v9;
  v1[v8 + 32] = -60;
  if (v4 < (uint64_t)(v3 + 6)) {
    unint64_t v1 = sub_24DA13C70((char *)(v2 > 1), v3 + 6, 1, v1);
  }
  *((void *)v1 + 2) = v3 + 6;
  v1[v9 + 32] = -59;
  unint64_t v35 = v1;
  unint64_t v10 = sub_24D7868D0();
  int64_t v11 = v10[2];
  if (v11)
  {
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_24D7C6F70(0, v11, 0);
    uint64_t v12 = 0;
    uint64_t v13 = v33;
    uint64_t v14 = *(void *)(v33 + 16);
    do
    {
      char v15 = *((unsigned char *)v10 + v12 + 32);
      unint64_t v16 = *(void *)(v33 + 24);
      if (v14 + v12 >= v16 >> 1) {
        sub_24D7C6F70(v16 > 1, v14 + v12 + 1, 1);
      }
      *(void *)(v33 + 16) = v14 + v12 + 1;
      *(unsigned char *)(v33 + v14 + v12++ + 32) = v15;
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x263F8EE78];
  }
  sub_24D785D4C(v13, (uint64_t (*)(void))sub_24DA13C70);
  uint64_t v17 = (char *)sub_24D786AD8();
  uint64_t v18 = *((void *)v17 + 2);
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (v18)
  {
    uint64_t v20 = (unsigned __int8 *)(v17 + 32);
    do
    {
      int v22 = *v20++;
      int v21 = v22;
      if (v22 && v21 != 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v23 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_24D7C6F20(0, *(void *)(v19 + 16) + 1, 1);
          }
          unint64_t v25 = *(void *)(v19 + 16);
          unint64_t v24 = *(void *)(v19 + 24);
          if (v25 >= v24 >> 1) {
            sub_24D7C6F20(v24 > 1, v25 + 1, 1);
          }
          *(void *)(v19 + 16) = v25 + 1;
          *(unsigned char *)(v19 + v25 + 32) = v21;
        }
      }
      --v18;
    }
    while (v18);
  }
  swift_bridgeObjectRelease();
  int64_t v26 = *(void *)(v19 + 16);
  if (v26)
  {
    uint64_t v34 = MEMORY[0x263F8EE78];
    sub_24D7C6F70(0, v26, 0);
    uint64_t v27 = 0;
    uint64_t v28 = v34;
    uint64_t v29 = *(void *)(v34 + 16);
    do
    {
      char v30 = *(unsigned char *)(v19 + v27 + 32);
      unint64_t v31 = *(void *)(v34 + 24);
      if (v29 + v27 >= v31 >> 1) {
        sub_24D7C6F70(v31 > 1, v29 + v27 + 1, 1);
      }
      *(void *)(v34 + 16) = v29 + v27 + 1;
      *(unsigned char *)(v34 + v29 + v27++ + 32) = v30 | 0x40;
    }
    while (v26 != v27);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v28 = MEMORY[0x263F8EE78];
  }
  sub_24D785D4C(v28, (uint64_t (*)(void))sub_24DA13C70);
  return v35;
}

char *sub_24D7893D0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EC8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCD57D0;
  *(_DWORD *)(inited + 32) = -2088599168;
  unint64_t v1 = sub_24DA13C70((char *)1, 8, 1, (char *)inited);
  unint64_t v3 = *((void *)v1 + 2);
  unint64_t v2 = *((void *)v1 + 3);
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    unint64_t v1 = sub_24DA13C70((char *)(v2 > 1), v3 + 1, 1, v1);
    unint64_t v2 = *((void *)v1 + 3);
    int64_t v4 = v2 >> 1;
  }
  *((void *)v1 + 2) = v5;
  v1[v3 + 32] = -124;
  unint64_t v6 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    unint64_t v1 = sub_24DA13C70((char *)(v2 > 1), v3 + 2, 1, v1);
    unint64_t v2 = *((void *)v1 + 3);
    int64_t v4 = v2 >> 1;
  }
  *((void *)v1 + 2) = v6;
  v1[v5 + 32] = -123;
  unint64_t v7 = v3 + 3;
  if (v4 < (uint64_t)(v3 + 3))
  {
    unint64_t v1 = sub_24DA13C70((char *)(v2 > 1), v3 + 3, 1, v1);
    unint64_t v2 = *((void *)v1 + 3);
    int64_t v4 = v2 >> 1;
  }
  *((void *)v1 + 2) = v7;
  v1[v6 + 32] = -122;
  unint64_t v8 = v3 + 4;
  if (v4 < (uint64_t)(v3 + 4)) {
    unint64_t v1 = sub_24DA13C70((char *)(v2 > 1), v3 + 4, 1, v1);
  }
  *((void *)v1 + 2) = v8;
  v1[v7 + 32] = -58;
  int64_t v9 = v3 + 7;
  if (__OFADD__(v8, 3))
  {
    __break(1u);
  }
  else
  {
    unint64_t v10 = *((void *)v1 + 3);
    unint64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) >= v9) {
      goto LABEL_11;
    }
  }
  if ((uint64_t)v8 <= v9) {
    int64_t v46 = v3 + 7;
  }
  else {
    int64_t v46 = v3 + 4;
  }
  unint64_t v1 = sub_24DA13C70((char *)1, v46, 1, v1);
  unint64_t v8 = *((void *)v1 + 2);
  unint64_t v10 = *((void *)v1 + 3);
  unint64_t v11 = v10 >> 1;
LABEL_11:
  unint64_t v12 = v8 + 1;
  if (v11 <= v8) {
    unint64_t v1 = sub_24DA13C70((char *)(v10 > 1), v8 + 1, 1, v1);
  }
  *((void *)v1 + 2) = v12;
  v1[v8 + 32] = -121;
  unint64_t v13 = *((void *)v1 + 3);
  unint64_t v14 = v8 + 2;
  if ((uint64_t)(v8 + 2) > (uint64_t)(v13 >> 1)) {
    unint64_t v1 = sub_24DA13C70((char *)(v13 > 1), v8 + 2, 1, v1);
  }
  *((void *)v1 + 2) = v14;
  v1[v12 + 32] = -64;
  unint64_t v15 = *((void *)v1 + 3);
  int64_t v16 = v8 + 3;
  if (v16 > (uint64_t)(v15 >> 1)) {
    unint64_t v1 = sub_24DA13C70((char *)(v15 > 1), v16, 1, v1);
  }
  *((void *)v1 + 2) = v16;
  v1[v14 + 32] = -63;
  int64_t v17 = v16 + 2;
  if (__OFADD__(v16, 2))
  {
    __break(1u);
  }
  else
  {
    unint64_t v18 = *((void *)v1 + 3);
    unint64_t v19 = v18 >> 1;
    if ((uint64_t)(v18 >> 1) >= v17) {
      goto LABEL_19;
    }
  }
  if (v16 <= v17) {
    int64_t v47 = v16 + 2;
  }
  else {
    int64_t v47 = v16;
  }
  unint64_t v1 = sub_24DA13C70((char *)1, v47, 1, v1);
  unint64_t v18 = *((void *)v1 + 3);
  unint64_t v19 = v18 >> 1;
LABEL_19:
  unint64_t v20 = *((void *)v1 + 2);
  unint64_t v21 = v20 + 1;
  if (v19 <= v20)
  {
    unint64_t v1 = sub_24DA13C70((char *)(v18 > 1), v20 + 1, 1, v1);
    unint64_t v18 = *((void *)v1 + 3);
    unint64_t v19 = v18 >> 1;
  }
  *((void *)v1 + 2) = v21;
  v1[v20 + 32] = -62;
  int64_t v22 = v20 + 2;
  if ((uint64_t)v19 < v22) {
    unint64_t v1 = sub_24DA13C70((char *)(v18 > 1), v22, 1, v1);
  }
  *((void *)v1 + 2) = v22;
  v1[v21 + 32] = -61;
  uint64_t v50 = v1;
  char v23 = sub_24D7868D0();
  int64_t v24 = v23[2];
  if (v24)
  {
    uint64_t v48 = MEMORY[0x263F8EE78];
    sub_24D7C6F70(0, v24, 0);
    uint64_t v25 = 0;
    uint64_t v26 = v48;
    uint64_t v27 = *(void *)(v48 + 16);
    do
    {
      char v28 = *((unsigned char *)v23 + v25 + 32);
      unint64_t v29 = *(void *)(v48 + 24);
      if (v27 + v25 >= v29 >> 1) {
        sub_24D7C6F70(v29 > 1, v27 + v25 + 1, 1);
      }
      *(void *)(v48 + 16) = v27 + v25 + 1;
      *(unsigned char *)(v48 + v27 + v25++ + 32) = v28;
    }
    while (v24 != v25);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x263F8EE78];
  }
  sub_24D785D4C(v26, (uint64_t (*)(void))sub_24DA13C70);
  char v30 = (char *)sub_24D786AD8();
  uint64_t v31 = *((void *)v30 + 2);
  uint64_t v32 = MEMORY[0x263F8EE78];
  if (v31)
  {
    uint64_t v33 = (unsigned __int8 *)(v30 + 32);
    do
    {
      int v35 = *v33++;
      int v34 = v35;
      if (v35 && v34 != 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v36 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        if ((v36 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_24D7C6F20(0, *(void *)(v32 + 16) + 1, 1);
          }
          unint64_t v38 = *(void *)(v32 + 16);
          unint64_t v37 = *(void *)(v32 + 24);
          if (v38 >= v37 >> 1) {
            sub_24D7C6F20(v37 > 1, v38 + 1, 1);
          }
          *(void *)(v32 + 16) = v38 + 1;
          *(unsigned char *)(v32 + v38 + 32) = v34;
        }
      }
      --v31;
    }
    while (v31);
  }
  swift_bridgeObjectRelease();
  int64_t v39 = *(void *)(v32 + 16);
  if (v39)
  {
    uint64_t v49 = MEMORY[0x263F8EE78];
    sub_24D7C6F70(0, v39, 0);
    uint64_t v40 = 0;
    uint64_t v41 = v49;
    uint64_t v42 = *(void *)(v49 + 16);
    do
    {
      char v43 = *(unsigned char *)(v32 + v40 + 32);
      unint64_t v44 = *(void *)(v49 + 24);
      if (v42 + v40 >= v44 >> 1) {
        sub_24D7C6F70(v44 > 1, v42 + v40 + 1, 1);
      }
      *(void *)(v49 + 16) = v42 + v40 + 1;
      *(unsigned char *)(v49 + v42 + v40++ + 32) = v43 | 0x40;
    }
    while (v39 != v40);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v41 = MEMORY[0x263F8EE78];
  }
  sub_24D785D4C(v41, (uint64_t (*)(void))sub_24DA13C70);
  return v50;
}

void *sub_24D789A10()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DC8);
  swift_getWitnessTable();
  sub_24DCC9CF8();
  swift_getAssociatedTypeWitness();
  if (swift_dynamicCastMetatype()) {
    sub_24DCC9CF8();
  }
  else {
    sub_24DCC9D08();
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemStateVersion();
  if (swift_dynamicCastMetatype()) {
    sub_24DCC9CF8();
  }
  else {
    sub_24DCC9D08();
  }
  sub_24D7868D0();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DD8);
  uint64_t v1 = sub_24D3E4A9C(&qword_26986E800, &qword_26B197DD8);
  sub_24D7854B0((void (*)(char *, char *))sub_24D7914B8, 0, v0, (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, MEMORY[0x263F8E628], v1, MEMORY[0x263F8E658], v2);
  swift_bridgeObjectRelease();
  sub_24DCC9CF8();
  unint64_t v3 = (char *)sub_24D786AD8();
  uint64_t v4 = *((void *)v3 + 2);
  if (v4)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    unint64_t v6 = (unsigned __int8 *)(v3 + 32);
    do
    {
      int v8 = *v6++;
      int v7 = v8;
      if (v8 && v7 != 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v9 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        if ((v9 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_24D7C6F20(0, *(void *)(v5 + 16) + 1, 1);
          }
          unint64_t v11 = *(void *)(v5 + 16);
          unint64_t v10 = *(void *)(v5 + 24);
          if (v11 >= v10 >> 1) {
            sub_24D7C6F20(v10 > 1, v11 + 1, 1);
          }
          *(void *)(v5 + 16) = v11 + 1;
          *(unsigned char *)(v5 + v11 + 32) = v7;
        }
      }
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DE0);
  uint64_t v13 = sub_24D3E4A9C(&qword_26986E810, &qword_26B197DE0);
  sub_24D7854B0((void (*)(char *, char *))sub_24D3F5410, 0, v12, (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, MEMORY[0x263F8E628], v13, MEMORY[0x263F8E658], v14);
  swift_release();
  sub_24DCC9CF8();
  return &unk_26FFA1320;
}

uint64_t sub_24D789E74(uint64_t a1, void *a2, int *a3)
{
  int v168 = a2;
  os_log_type_t v166 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_24DCCA3F8();
  uint64_t v159 = *(void *)(v5 - 8);
  uint64_t v160 = v5;
  MEMORY[0x270FA5388](v5);
  id v158 = (char *)&v141 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v152 = sub_24DCCA3F8();
  uint64_t v151 = *(void *)(v152 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v152);
  uint64_t v156 = (char *)&v141 - v9;
  uint64_t v163 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  int v147 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  int v146 = (char *)&v141 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v145 = (char *)&v141 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v144 = (char *)&v141 - v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v157 = type metadata accessor for ItemStateVersion();
  uint64_t v155 = *(void *)(v157 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v157);
  os_log_t v143 = (char *)&v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v142 = (char *)&v141 - v20;
  uint64_t v154 = v17;
  uint64_t v161 = sub_24DCCA3F8();
  uint64_t v150 = *(void *)(v161 - 8);
  MEMORY[0x270FA5388](v161);
  char v153 = (char *)&v141 - v21;
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v169 = v7;
  *((void *)&v169 + 1) = AssociatedTypeWitness;
  uint64_t v164 = AssociatedTypeWitness;
  uint64_t v149 = v22;
  *(void *)&long long v170 = v22;
  *((void *)&v170 + 1) = v23;
  uint64_t v148 = v23;
  uint64_t v165 = type metadata accessor for FileItemVersion();
  sub_24DCCA3F8();
  uint64_t v24 = MEMORY[0x270FA5388](a1);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  char v30 = (char *)&v141 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = (char *)&v141 - v32;
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  char v36 = (char *)&v141 - v35;
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v34);
  uint64_t v40 = (char *)&v141 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v38);
  char v43 = (char *)&v141 - v42;
  uint64_t v44 = MEMORY[0x270FA5388](v41);
  int64_t v46 = (char *)&v141 - v45;
  uint64_t v47 = MEMORY[0x270FA5388](v44);
  uint64_t v49 = (char *)&v141 - v48;
  uint64_t v50 = MEMORY[0x270FA5388](v47);
  uint64_t v52 = (char *)&v141 - v51;
  unsigned __int8 v53 = MEMORY[0x270FA5388](v50);
  uint64_t v62 = (char *)&v141 - v61;
  switch(v53 >> 6)
  {
    case 1:
      uint64_t v72 = v176;
      uint64_t v73 = (uint64_t)sub_24DB17500(v53 & 0x3F, v168, *(void *)(v167 + v166[16]), *(void *)(v167 + v166[16] + 8), *(unsigned char *)(v167 + v166[16] + 16));
      if (v72) {
        return (uint64_t)v62;
      }
      return v73;
    case 2:
      switch(v53)
      {
        case 0x81u:
          uint64_t v116 = v166[9];
          goto LABEL_30;
        case 0x82u:
          uint64_t v116 = v166[10];
LABEL_30:
          uint64_t v115 = *(void *)(v167 + v116);
          goto LABEL_31;
        case 0x83u:
          uint64_t v117 = *(unsigned __int8 *)(v167 + v166[11]);
          if (v117 == 3) {
            goto LABEL_28;
          }
          goto LABEL_35;
        case 0x84u:
          uint64_t v115 = *(unsigned __int8 *)(v167 + v166[13]);
LABEL_31:
          *((void *)&v170 + 1) = MEMORY[0x263F8D6C8];
          *(void *)&long long v169 = v115;
          goto LABEL_36;
        case 0x85u:
          uint64_t v117 = *(unsigned __int8 *)(v167 + v166[14]);
          if (v117 == 6)
          {
LABEL_28:
            long long v169 = 0u;
            long long v170 = 0u;
          }
          else
          {
LABEL_35:
            *((void *)&v170 + 1) = MEMORY[0x263F8D6C8];
            *(void *)&long long v169 = v117;
          }
LABEL_36:
          uint64_t v62 = (char *)sub_24D3E3EB4((uint64_t)&v169);
          uint64_t v124 = v123;
          sub_24D3E3E54((uint64_t)&v169);
          if (v124) {
            return (uint64_t)v62;
          }
          sub_24DCCA978();
          __break(1u);
LABEL_38:
          id v65 = objc_msgSend(v168, sel_bindBooleanParameter_, *(unsigned __int8 *)(v167 + v166[15]));
          break;
        case 0x86u:
          goto LABEL_38;
        case 0x87u:
          uint64_t v118 = v58;
          uint64_t v119 = v60;
          uint64_t v120 = v59;
          (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v36, v167 + v166[12], v60);
          uint64_t v121 = v165;
          uint64_t v122 = *(void *)(v165 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v36, 1, v165) == 1)
          {
            (*(void (**)(char *, uint64_t))(v120 + 8))(v36, v119);
            uint64_t v71 = 0;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v52, v36, v118);
            (*(void (**)(char *, uint64_t))(v122 + 8))(v36, v121);
            (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v62, v52, v118);
            swift_dynamicCast();
            uint64_t v71 = sub_24DCCAE08();
          }
          goto LABEL_56;
        default:
          return sub_24DA6D0B0(v168, v161, *(void *)(AssociatedConformanceWitness + 40));
      }
      goto LABEL_54;
    case 3:
      uint64_t v66 = v165;
      switch(v53)
      {
        case 0xC1u:
          uint64_t v98 = v58;
          uint64_t v99 = v60;
          uint64_t v100 = v59;
          (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v30, v167 + v166[12], v60);
          uint64_t v101 = *(void *)(v66 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v30, 1, v66) == 1)
          {
            (*(void (**)(char *, uint64_t))(v100 + 8))(v30, v99);
            uint64_t v71 = 0;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v40, v30, v98);
            (*(void (**)(char *, uint64_t))(v101 + 8))(v30, v66);
            (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v43, v40, v98);
            swift_dynamicCast();
            if (BYTE8(v170)) {
              uint64_t v71 = 0;
            }
            else {
              uint64_t v71 = sub_24DCCAFB8();
            }
          }
          goto LABEL_56;
        case 0xC2u:
          uint64_t v85 = v60;
          uint64_t v86 = v59;
          uint64_t v87 = v57;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v57, v167 + v166[12], v60);
          uint64_t v88 = *(void *)(v66 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v87, 1, v66) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v87, v85);
            uint64_t v89 = v154;
            uint64_t v90 = *(void *)(v154 - 8);
            uint64_t v91 = 1;
            uint64_t v84 = v153;
          }
          else
          {
            uint64_t v128 = v163;
            uint64_t v127 = v164;
            uint64_t v129 = v145;
            (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v145, v87 + *(int *)(v66 + 56), v164);
            (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v66);
            (*(void (**)(char *, char *, uint64_t))(v128 + 32))(v144, v129, v127);
            uint64_t v130 = v142;
            uint64_t v131 = v157;
            swift_dynamicCast();
            uint64_t v89 = v154;
            uint64_t v90 = *(void *)(v154 - 8);
            uint64_t v84 = v153;
            (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v153, v130, v154);
            (*(void (**)(char *, uint64_t))(v155 + 8))(v130, v131);
            uint64_t v91 = 0;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v84, v91, 1, v89);
          uint64_t v125 = v161;
          uint64_t v62 = (char *)sub_24DA6D0B0(v168, v161, *(void *)(AssociatedConformanceWitness + 40));
          id v126 = &v176;
          goto LABEL_43;
        case 0xC3u:
          uint64_t v92 = v60;
          uint64_t v93 = v59;
          uint64_t v94 = v56;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v56, v167 + v166[12], v60);
          uint64_t v95 = *(void *)(v66 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v94, 1, v66) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v92);
            uint64_t v96 = 0;
            uint64_t v97 = 0;
          }
          else
          {
            uint64_t v133 = v163;
            uint64_t v132 = v164;
            double v134 = v147;
            (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v147, v94 + *(int *)(v66 + 56), v164);
            (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v94, v66);
            (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v146, v134, v132);
            uint64_t v135 = v143;
            uint64_t v136 = v157;
            swift_dynamicCast();
            uint64_t v137 = (uint64_t *)&v135[*(int *)(v136 + 36)];
            uint64_t v96 = *v137;
            uint64_t v97 = v137[1];
            double v138 = *(void (**)(char *, uint64_t))(v155 + 8);
            swift_bridgeObjectRetain();
            v138(v135, v136);
          }
          uint64_t v62 = (char *)sub_24D719BE4(v96, v97);
          swift_bridgeObjectRelease();
          return (uint64_t)v62;
        case 0xC4u:
          uint64_t v77 = v58;
          uint64_t v78 = v59;
          uint64_t v79 = v60;
          uint64_t v80 = v55;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v55, v167 + v166[12], v60);
          uint64_t v81 = *(void *)(v66 - 8);
          uint64_t v82 = 1;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v80, 1, v66) == 1)
          {
            uint64_t v81 = v78;
            uint64_t v83 = v79;
            uint64_t v84 = v156;
          }
          else
          {
            uint64_t v84 = v156;
            (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v156, v80, v77);
            uint64_t v82 = 0;
            uint64_t v83 = v66;
          }
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v83);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v84, v82, 1, v77);
          uint64_t v125 = v152;
          uint64_t v62 = (char *)sub_24DA6D0B0(v168, v152, *(void *)(v149 + 32));
          id v126 = &v177;
LABEL_43:
          (*(void (**)(char *, uint64_t))(*(v126 - 32) + 8))(v84, v125);
          return (uint64_t)v62;
        case 0xC5u:
          uint64_t v102 = v167 + v166[12];
          uint64_t v167 = v59;
          uint64_t v103 = v60;
          uint64_t v104 = v54;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v54, v102, v60);
          uint64_t v105 = *(void *)(v66 - 8);
          uint64_t v106 = 1;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v104, 1, v66) == 1)
          {
            uint64_t v108 = v163;
            uint64_t v107 = v164;
            uint64_t v110 = v159;
            uint64_t v109 = v160;
            int v111 = v158;
            uint64_t v105 = v167;
            uint64_t v112 = v103;
          }
          else
          {
            uint64_t v108 = v163;
            uint64_t v107 = v164;
            int v111 = v158;
            (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v158, v104 + *(int *)(v66 + 56), v164);
            uint64_t v106 = 0;
            uint64_t v112 = v66;
            uint64_t v110 = v159;
            uint64_t v109 = v160;
          }
          (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v112);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56))(v111, v106, 1, v107);
          uint64_t v62 = (char *)sub_24DA6D0B0(v168, v109, *(void *)(v148 + 32));
          (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v109);
          return (uint64_t)v62;
        case 0xC6u:
          uint64_t v113 = *(void **)(v167 + v166[18]);
          if (v113) {
            id v114 = objc_msgSend(v113, sel_version);
          }
          else {
            id v114 = 0;
          }
          id v65 = objc_msgSend(v168, sel_bindLongParameter_, v114);
          goto LABEL_54;
        default:
          uint64_t v67 = v58;
          uint64_t v68 = v60;
          uint64_t v69 = v59;
          (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v33, v167 + v166[12], v60);
          uint64_t v70 = *(void *)(v66 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v33, 1, v66) == 1)
          {
            (*(void (**)(char *, uint64_t))(v69 + 8))(v33, v68);
            uint64_t v71 = 0;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v46, v33, v67);
            (*(void (**)(char *, uint64_t))(v70 + 8))(v33, v66);
            (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v49, v46, v67);
            swift_dynamicCast();
            LODWORD(v169) = DWORD2(v169);
            uint64_t v71 = sub_24DCCAE08();
          }
LABEL_56:
          id v139 = objc_msgSend(v168, sel_bindObjectParameter_, v71);
          swift_unknownObjectRelease();
          goto LABEL_57;
      }
    default:
      uint64_t v63 = (long long *)(v167 + v166[17]);
      unint64_t v64 = *((void *)v63 + 2);
      if (v64 >> 60 == 11)
      {
        id v65 = objc_msgSend(v168, sel_bindObjectParameter_, 0);
LABEL_54:
        id v139 = v65;
LABEL_57:
        uint64_t v62 = (char *)sub_24DCC97E8();
      }
      else
      {
        uint64_t v74 = *((void *)v63 + 6);
        int v75 = *((_DWORD *)v63 + 10);
        long long v171 = *v63;
        unint64_t v172 = v64;
        long long v173 = *(long long *)((char *)v63 + 24);
        char v174 = v75 & 1;
        uint64_t v175 = v74;
        uint64_t v76 = v176;
        uint64_t v73 = sub_24D7880C8(v53, v168);
        if (!v76) {
          return v73;
        }
      }
      return (uint64_t)v62;
  }
}

void sub_24D78B2F0(unsigned __int8 a1@<W0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int v115 = a3;
  uint64_t v113 = (uint64_t *)a4;
  id v114 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_24DCCA3F8();
  uint64_t v109 = *(void *)(v5 - 8);
  uint64_t v110 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v111 = (uint64_t)&v108 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v108 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v108 - v9;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v19 = (char *)&v108 - v18;
  switch(a1 >> 6)
  {
    case 1:
      int v34 = a1 & 0x3F;
      if ((a1 & 0x3F) != 0)
      {
        uint64_t v35 = v116;
        uint64_t v36 = (uint64_t)v113;
        id v37 = v114;
        uint64_t v38 = v115;
        if (v34 == 1)
        {
          v113[3] = (uint64_t)&type metadata for JobWaitCondition;
          *(void *)uint64_t v36 = objc_msgSend(v37, sel_longAtIndex_, v38);
        }
        else if (objc_msgSend(v114, sel_isNullAtIndex_, v115))
        {
          *(_OWORD *)uint64_t v36 = 0u;
          *(_OWORD *)(v36 + 16) = 0u;
        }
        else
        {
          uint64_t v42 = sub_24D5F2810(v38);
          if (!v35)
          {
            uint64_t v43 = v42;
            uint64_t v44 = type metadata accessor for Continuation();
            uint64_t v45 = v113;
            v113[3] = v44;
            *uint64_t v45 = v43;
          }
        }
      }
      else
      {
        id v39 = objc_msgSend(v114, sel_longAtIndex_, v115);
        uint64_t v40 = MEMORY[0x263F8D6C8];
LABEL_16:
        uint64_t v41 = v113;
        v113[3] = v40;
        *uint64_t v41 = (uint64_t)v39;
      }
      break;
    case 2:
      switch(a1)
      {
        case 0x81u:
          uint64_t v82 = &type metadata for DeletionStatus;
          goto LABEL_49;
        case 0x82u:
          uint64_t v82 = &type metadata for Fields;
LABEL_49:
          uint64_t v92 = v113;
          id v91 = v114;
          v113[3] = (uint64_t)v82;
          *uint64_t v92 = (uint64_t)objc_msgSend(v91, sel_longAtIndex_, v115);
          return;
        case 0x83u:
          id v83 = v114;
          uint64_t v84 = v115;
          if (objc_msgSend(v114, sel_isNullAtIndex_, v115)) {
            goto LABEL_3;
          }
          id v85 = objc_msgSend(v83, sel_longAtIndex_, v84);
          uint64_t v86 = v113;
          if ((unint64_t)v85 > 2)
          {
            sub_24D511F64();
            swift_allocError();
            *uint64_t v99 = 0;
            swift_willThrow();
          }
          else
          {
            v113[3] = (uint64_t)&type metadata for MaterializationStatus;
            *(unsigned char *)uint64_t v86 = (_BYTE)v85;
          }
          return;
        case 0x84u:
          uint64_t v79 = (unsigned __int8 *)v113;
          v113[3] = (uint64_t)&type metadata for ContentStatus;
          uint64_t v80 = v116;
          unsigned __int8 v81 = sub_24D3FAFEC(v115);
          if (v80) {
            __swift_deallocate_boxed_opaque_existential_0((uint64_t)v79);
          }
          else {
            unsigned __int8 *v79 = v81;
          }
          return;
        case 0x85u:
          uint64_t v93 = v115;
          if (objc_msgSend(v114, sel_isNullAtIndex_, v115)) {
            goto LABEL_3;
          }
          uint64_t v94 = v116;
          unsigned __int8 v95 = sub_24D786864(v93);
          if (!v94)
          {
            uint64_t v96 = (unsigned __int8 *)v113;
            v113[3] = (uint64_t)&type metadata for DiskImportStatus;
            *uint64_t v96 = v95;
          }
          return;
        case 0x86u:
          unsigned __int8 v97 = objc_msgSend(v114, sel_BOOLAtIndex_, v115);
          uint64_t v98 = (unsigned __int8 *)v113;
          v113[3] = MEMORY[0x263F8D4F8];
          *uint64_t v98 = v97;
          return;
        case 0x87u:
          id v87 = v114;
          uint64_t v88 = v115;
          if (objc_msgSend(v114, sel_isNullAtIndex_, v115)) {
            goto LABEL_3;
          }
          unint64_t v89 = (unint64_t)objc_msgSend(v87, sel_longLongAtIndex_, v88);
          uint64_t v90 = (unint64_t *)v113;
          if ((v89 & 0x8000000000000000) != 0)
          {
            sub_24DCCA968();
            __break(1u);
            JUMPOUT(0x24D78BE5CLL);
          }
          v113[3] = MEMORY[0x263F8E970];
          unint64_t *v90 = v89;
          return;
        default:
          uint64_t v23 = v17;
          uint64_t v24 = v16;
          uint64_t v25 = v11;
          uint64_t v26 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
          id v27 = v114;
          uint64_t v28 = v116;
          sub_24DA6D2AC(v27, v115, v25, v26, (uint64_t)v19);
          if (v28) {
            return;
          }
          uint64_t v29 = *(void *)(v25 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v19, 1, v25) == 1)
          {
            (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v24);
            goto LABEL_35;
          }
          uint64_t v106 = v113;
          v113[3] = v25;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v106);
          (*(void (**)(uint64_t *, char *, uint64_t))(v29 + 32))(boxed_opaque_existential_0, v19, v25);
          break;
      }
      break;
    case 3:
      switch(a1)
      {
        case 0xC1u:
          id v64 = v114;
          uint64_t v65 = v115;
          if (objc_msgSend(v114, sel_isNullAtIndex_, v115)) {
            goto LABEL_3;
          }
          id v39 = objc_msgSend(v64, sel_longLongAtIndex_, v65);
          uint64_t v40 = MEMORY[0x263F8E5C0];
          goto LABEL_16;
        case 0xC2u:
          uint64_t v50 = v17;
          uint64_t v51 = v16;
          uint64_t v52 = v11;
          uint64_t v53 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
          id v54 = v114;
          uint64_t v55 = v116;
          sub_24DA6D2AC(v54, v115, v52, v53, (uint64_t)v15);
          if (v55) {
            return;
          }
          uint64_t v56 = *(void *)(v52 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v15, 1, v52) == 1)
          {
            (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v51);
            goto LABEL_35;
          }
          uint64_t v102 = v113;
          v113[3] = v52;
          uint64_t v103 = __swift_allocate_boxed_opaque_existential_0(v102);
          (*(void (**)(uint64_t *, char *, uint64_t))(v56 + 32))(v103, v15, v52);
          return;
        case 0xC3u:
          id v57 = v114;
          uint64_t v58 = v115;
          if (objc_msgSend(v114, sel_isNullAtIndex_, v115)) {
            goto LABEL_3;
          }
          id v59 = objc_msgSend(v57, sel_stringAtIndex_, v58);
          uint64_t v60 = sub_24DCC97E8();
          uint64_t v62 = v61;

          uint64_t v63 = v113;
          v113[3] = (uint64_t)&type metadata for Filename;
          *uint64_t v63 = v60;
          v63[1] = v62;
          return;
        case 0xC4u:
          uint64_t v46 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
          id v47 = v114;
          uint64_t v48 = v116;
          sub_24DA6D2AC(v47, v115, v7, v46, (uint64_t)v10);
          if (v48) {
            return;
          }
          uint64_t v49 = *(void *)(v7 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v10, 1, v7) == 1)
          {
            (*(void (**)(char *, uint64_t))(v108 + 8))(v10, v8);
            goto LABEL_35;
          }
          uint64_t v100 = v113;
          v113[3] = v7;
          uint64_t v101 = __swift_allocate_boxed_opaque_existential_0(v100);
          (*(void (**)(uint64_t *, char *, uint64_t))(v49 + 32))(v101, v10, v7);
          return;
        case 0xC5u:
          uint64_t v66 = AssociatedTypeWitness;
          uint64_t v67 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
          id v68 = v114;
          uint64_t v69 = v111;
          uint64_t v70 = v116;
          sub_24DA6D2AC(v68, v115, v66, v67, v111);
          if (v70) {
            return;
          }
          uint64_t v71 = *(void *)(v66 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v69, 1, v66) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v69, v110);
LABEL_35:
            uint64_t v72 = (uint64_t)v113;
            *(_OWORD *)uint64_t v113 = 0u;
            *(_OWORD *)(v72 + 16) = 0u;
          }
          else
          {
            uint64_t v104 = v113;
            v113[3] = v66;
            uint64_t v105 = __swift_allocate_boxed_opaque_existential_0(v104);
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v71 + 32))(v105, v69, v66);
          }
          return;
        case 0xC6u:
          id v73 = v114;
          uint64_t v74 = v115;
          if ((objc_msgSend(v73, sel_isNullAtIndex_, v115) & 1) == 0)
          {
            id v75 = objc_msgSend(v73, sel_integerAtIndex_, v74);
            if (v75)
            {
              id v76 = objc_msgSend(self, sel_domainVersionWithVersion_, v75);

              uint64_t v77 = sub_24D3FB6F8(0, (unint64_t *)&qword_26986C5C8);
              uint64_t v78 = v113;
              v113[3] = v77;
              *uint64_t v78 = (uint64_t)v76;
              return;
            }
          }

          break;
        default:
          id v30 = v114;
          uint64_t v31 = v115;
          if (objc_msgSend(v114, sel_isNullAtIndex_, v115)) {
            goto LABEL_3;
          }
          unsigned int v32 = objc_msgSend(v30, sel_unsignedIntAtIndex_, v31);
          uint64_t v33 = (unsigned int *)v113;
          v113[3] = MEMORY[0x263F8E8F8];
          unsigned int *v33 = v32;
          return;
      }
      goto LABEL_3;
    default:
      id v20 = v114;
      uint64_t v21 = v115;
      if (objc_msgSend(v114, sel_isNullAtIndex_, v115))
      {
LABEL_3:
        uint64_t v22 = (uint64_t)v113;
        *(_OWORD *)uint64_t v113 = 0u;
        *(_OWORD *)(v22 + 16) = 0u;
      }
      else
      {
        sub_24D7882F8(v20, a1, v21, (uint64_t)v113);
      }
      break;
  }
}

void *sub_24D78BEA8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v164 = a5;
  uint64_t v214 = &_s9SQLFieldsON_0;
  uint64_t v215 = a2;
  unint64_t v165 = sub_24D790040();
  unint64_t v216 = v165;
  uint64_t v217 = a4;
  uint64_t v168 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v166 = *(void *)(v168 - 8);
  MEMORY[0x270FA5388](v168);
  uint64_t v167 = &v159[-v9];
  unint64_t v10 = sub_24D78879C();
  uint64_t v214 = &_s9SQLFieldsON;
  uint64_t v215 = a2;
  uint64_t v222 = a2;
  unint64_t v173 = v10;
  unint64_t v216 = v10;
  uint64_t v217 = a4;
  uint64_t v176 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v175 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  char v174 = &v159[-v11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v190 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v181 = &v159[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v180 = &v159[-v15];
  uint64_t v16 = (ValueMetadata *)swift_getAssociatedTypeWitness();
  Description = (void (**)(unsigned char *, uint64_t, uint64_t, ValueMetadata *))v16[-1].Description;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v179 = &v159[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17);
  uint64_t v187 = &v159[-v19];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v214 = v16;
  uint64_t v215 = AssociatedTypeWitness;
  uint64_t v178 = AssociatedConformanceWitness;
  unint64_t v216 = AssociatedConformanceWitness;
  uint64_t v217 = v21;
  uint64_t v177 = v21;
  uint64_t v192 = type metadata accessor for FileItemVersion();
  uint64_t v194 = sub_24DCCA3F8();
  uint64_t v193 = *(void *)(v194 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v194);
  long long v169 = &v159[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v22);
  uint64_t v196 = &v159[-v24];
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t v163 = a3;
  uint64_t v162 = a1;
  uint64_t v172 = swift_getAssociatedConformanceWitness();
  uint64_t v202 = type metadata accessor for ItemStateVersion();
  MEMORY[0x270FA5388](v202);
  long long v171 = &v159[-v26];
  uint64_t v188 = sub_24DCCA3F8();
  uint64_t v185 = *(void *)(v188 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v188);
  uint64_t v182 = &v159[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = &v159[-v30];
  uint64_t v189 = *(void *)(v25 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v184 = &v159[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v32);
  uint64_t v183 = &v159[-v34];
  id v203 = (void (*)(unsigned char *, uint64_t, uint64_t, ValueMetadata *))AssociatedTypeWitness;
  uint64_t v200 = sub_24DCCA3F8();
  uint64_t v197 = *(void *)(v200 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v200);
  uint64_t v186 = &v159[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  id v39 = &v159[-v38];
  uint64_t v40 = MEMORY[0x270FA5388](v37);
  long long v170 = &v159[-v41];
  MEMORY[0x270FA5388](v40);
  int v198 = &v159[-v42];
  uint64_t v43 = sub_24DCCA3F8();
  uint64_t v204 = *(void *)(v43 - 8);
  uint64_t v44 = MEMORY[0x270FA5388](v43);
  uint64_t v191 = &v159[-((v45 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v48 = &v159[-v47];
  uint64_t v49 = MEMORY[0x270FA5388](v46);
  uint64_t v51 = &v159[-v50];
  MEMORY[0x270FA5388](v49);
  uint64_t v205 = &v159[-v52];
  int v199 = v16;
  if (!swift_dynamicCastMetatype())
  {
    LOBYTE(v214) = -60;
    uint64_t v58 = v206;
    unint64_t result = (void *)sub_24DA6D460((uint64_t)&v214, v43, v222, v43, a4);
    if (v58) {
      return result;
    }
    uint64_t v195 = a4;
    uint64_t v206 = 0;
    uint64_t v57 = v204;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v204 + 32))(v205, v48, v43);
    uint64_t v161 = (ValueMetadata *)v43;
    uint64_t v56 = Description;
LABEL_7:
    uint64_t v59 = (uint64_t)v203;
    if (swift_dynamicCastMetatype())
    {
      LOBYTE(v214) = -62;
      uint64_t v60 = v195;
      uint64_t v61 = v206;
      (*(void (**)(uint64_t, ValueMetadata **, uint64_t, uint64_t, uint64_t))(v195 + 32))(v25, &v214, v25, v222, v195);
      uint64_t v206 = v61;
      if (v61) {
        return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v57 + 8))(v205, v161);
      }
      uint64_t v195 = v60;
      uint64_t v62 = v189;
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v189 + 48))(v31, 1, v25) != 1)
      {
        uint64_t v92 = v183;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v62 + 32))(v183, v31, v25);
        uint64_t v93 = v184;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v62 + 16))(v184, v92, v25);
        LOBYTE(v213) = -61;
        uint64_t v94 = v222;
        uint64_t v95 = v62;
        uint64_t v96 = v195;
        sub_24D71B65C(v222, (uint64_t)&type metadata for Filename);
        uint64_t v97 = v206;
        sub_24DA6D460((uint64_t)&v213, (uint64_t)&type metadata for Filename, v94, (uint64_t)&type metadata for Filename, v96);
        uint64_t v206 = v97;
        uint64_t v98 = v200;
        if (v97)
        {
          uint64_t v99 = *(void (**)(unsigned char *, uint64_t))(v95 + 8);
          v99(v93, v25);
          v99(v92, v25);
          return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v204 + 8))(v205, v161);
        }
        uint64_t v120 = (uint64_t)v93;
        uint64_t v82 = (uint64_t)v199;
        (*(void (**)(unsigned char *, uint64_t))(v95 + 8))(v92, v25);
        sub_24D958F08(v120, (uint64_t)v214, v215, v25, (uint64_t)v171);
        uint64_t v121 = v170;
        uint64_t v59 = (uint64_t)v203;
        int v122 = swift_dynamicCast();
        uint64_t v63 = v190;
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v190 + 56))(v121, v122 ^ 1u, 1, v59);
        uint64_t v64 = v197;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v197 + 32))(v198, v121, v98);
        uint64_t v57 = v204;
LABEL_18:
        id v83 = v191;
        uint64_t v84 = v161;
        (*(void (**)(unsigned char *, unsigned char *, ValueMetadata *))(v57 + 16))(v191, v205, v161);
        if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v56[6])(v83, 1, v82) == 1)
        {
          (*(void (**)(unsigned char *, ValueMetadata *))(v57 + 8))(v83, v84);
          uint64_t v85 = 1;
        }
        else
        {
          uint64_t v86 = v187;
          id v203 = v56[4];
          ((void (*)(unsigned char *, unsigned char *, uint64_t))v203)(v187, v83, v82);
          id v87 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v64 + 16);
          uint64_t v88 = v186;
          uint64_t v89 = v200;
          v87(v186, v198, v200);
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v63 + 48))(v88, 1, v59) == 1)
          {
            ((void (*)(unsigned char *, uint64_t))v56[1])(v86, v82);
            uint64_t v90 = v197;
            (*(void (**)(unsigned char *, uint64_t))(v197 + 8))(v88, v89);
            uint64_t v85 = 1;
            uint64_t v57 = v204;
            uint64_t v91 = v193;
            uint64_t v64 = v90;
LABEL_26:
            uint64_t v105 = v196;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v192 - 8) + 56))(v196, v85, 1);
            LOBYTE(v213) = 0;
            uint64_t v106 = v206;
            (*(void (**)(ValueMetadata **__return_ptr, void, uint64_t *, void, uint64_t))(v195 + 32))(&v214, MEMORY[0x263F8E970], &v213, MEMORY[0x263F8E970], v222);
            uint64_t v107 = v194;
            if (v106)
            {
              (*(void (**)(unsigned char *, uint64_t))(v91 + 8))(v105, v194);
              (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v198, v200);
              return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v57 + 8))(v205, v161);
            }
            uint64_t v206 = 0;
            if (v215)
            {
              uint64_t v108 = 0;
              uint64_t v109 = 0;
              uint64_t v110 = 0;
              uint64_t v111 = 0;
              unint64_t v112 = 0;
              uint64_t v113 = 0;
              unint64_t v114 = 0xB000000000000000;
              goto LABEL_34;
            }
            uint64_t v115 = v64;
            uint64_t v116 = v174;
            sub_24DA6D8E4((uint64_t)sub_24D7914B4, 0, v222, (uint64_t)&_s9SQLFieldsON, v195, v173, (uint64_t)v174);
            uint64_t v117 = v176;
            uint64_t WitnessTable = swift_getWitnessTable();
            uint64_t v119 = v206;
            sub_24D788454(v117, WitnessTable, (uint64_t)v218);
            uint64_t v206 = v119;
            if (!v119)
            {
              uint64_t v108 = v218[0];
              uint64_t v109 = v218[1];
              unint64_t v114 = v218[2];
              uint64_t v110 = v218[3];
              uint64_t v111 = v218[4];
              unint64_t v112 = v219;
              id v203 = v220;
              (*(void (**)(unsigned char *, uint64_t))(v175 + 8))(v116, v117);
              uint64_t v113 = v203;
LABEL_34:
              uint64_t v202 = v109;
              v221[0] = v108;
              v221[1] = v109;
              v221[2] = v114;
              v221[3] = v110;
              v221[4] = v111;
              v221[5] = v112;
              id v203 = v113;
              v221[6] = v113;
              LOBYTE(v214) = 0x80;
              uint64_t v123 = v222;
              uint64_t v124 = v108;
              uint64_t v125 = v188;
              unint64_t v126 = v114;
              uint64_t v127 = v195;
              sub_24D71B65C(v222, v188);
              uint64_t v128 = v206;
              sub_24DA6D460((uint64_t)&v214, v125, v123, v125, v127);
              if (v128)
              {
                (*(void (**)(unsigned char *, uint64_t))(v193 + 8))(v196, v194);
                sub_24D3E3850(v124, v202, v126);
                (*(void (**)(unsigned char *, uint64_t))(v197 + 8))(v198, v200);
                return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v204 + 8))(v205, v161);
              }
              else
              {
                uint64_t v129 = v124;
                Description = (void (**)(unsigned char *, uint64_t, uint64_t, ValueMetadata *))v112;
                LOBYTE(v213) = -127;
                uint64_t v130 = v222;
                sub_24D71B65C(v222, (uint64_t)&type metadata for DeletionStatus);
                sub_24DA6D460((uint64_t)&v213, (uint64_t)&type metadata for DeletionStatus, v130, (uint64_t)&type metadata for DeletionStatus, v127);
                uint64_t v131 = v214;
                LOBYTE(v208) = -126;
                uint64_t v132 = v222;
                sub_24D71B65C(v222, (uint64_t)&type metadata for Fields);
                sub_24DA6D460((uint64_t)&v208, (uint64_t)&type metadata for Fields, v132, (uint64_t)&type metadata for Fields, v195);
                int v199 = v131;
                uint64_t v192 = v213;
                LOBYTE(v208) = -125;
                uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1977A0);
                uint64_t v134 = v222;
                sub_24D71B65C(v222, v133);
                sub_24DA6D460((uint64_t)&v208, v133, v134, v133, v195);
                LODWORD(v191) = v212;
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v193 + 16))(v169, v196, v194);
                LOBYTE(v208) = -124;
                uint64_t v135 = v222;
                sub_24D71B65C(v222, (uint64_t)&type metadata for ContentStatus);
                uint64_t v136 = v135;
                uint64_t v137 = v195;
                sub_24DA6D460((uint64_t)&v208, (uint64_t)&type metadata for ContentStatus, v136, (uint64_t)&type metadata for ContentStatus, v195);
                uint64_t v206 = 0;
                LODWORD(v190) = v211;
                LOBYTE(v208) = -123;
                uint64_t v138 = v137;
                uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1995E0);
                uint64_t v140 = v222;
                sub_24D71B65C(v222, v139);
                uint64_t v141 = v206;
                sub_24DA6D460((uint64_t)&v208, v139, v140, v139, v138);
                if (v141)
                {
                  sub_24D3E3850(v129, v202, v126);
                  uint64_t v142 = *(void (**)(unsigned char *, uint64_t))(v193 + 8);
                  uint64_t v143 = v194;
                  v142(v169, v194);
                  (*(void (**)(unsigned char *, uint64_t))(v185 + 8))(v182, v188);
                  v142(v196, v143);
                  (*(void (**)(unsigned char *, uint64_t))(v197 + 8))(v198, v200);
                  return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v204 + 8))(v205, v161);
                }
                else
                {
                  LODWORD(v189) = v210;
                  LOBYTE(v208) = -122;
                  uint64_t v144 = MEMORY[0x263F8D4F8];
                  uint64_t v145 = v222;
                  sub_24D71B65C(v222, MEMORY[0x263F8D4F8]);
                  sub_24DA6D460((uint64_t)&v208, v144, v145, v144, v138);
                  char v146 = v209;
                  int v147 = v167;
                  sub_24DA6D8E4((uint64_t)sub_24D3F5410, 0, v222, (uint64_t)&_s9SQLFieldsON_0, v195, v165, (uint64_t)v167);
                  uint64_t v148 = v168;
                  uint64_t v149 = swift_getWitnessTable();
                  uint64_t v187 = (unsigned char *)sub_24DB177F8((uint64_t)v147, v148, v149);
                  uint64_t v186 = v150;
                  LODWORD(v184) = v151;
                  uint64_t v206 = 0;
                  (*(void (**)(unsigned char *, uint64_t))(v166 + 8))(v167, v168);
                  char v207 = -58;
                  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E20);
                  uint64_t v153 = v222;
                  uint64_t v154 = v195;
                  sub_24D71B65C(v222, v152);
                  uint64_t v155 = v206;
                  sub_24DA6D460((uint64_t)&v207, v152, v153, v152, v154);
                  if (v155)
                  {
                    sub_24D3E380C(v187, v186, (char)v184);
                    sub_24D3E3850(v129, v202, v126);
                    uint64_t v156 = *(void (**)(unsigned char *, uint64_t))(v193 + 8);
                    uint64_t v157 = v194;
                    v156(v169, v194);
                    (*(void (**)(unsigned char *, uint64_t))(v185 + 8))(v182, v188);
                    v156(v196, v157);
                    (*(void (**)(unsigned char *, uint64_t))(v197 + 8))(v198, v200);
                    return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v204 + 8))(v205, v161);
                  }
                  else
                  {
                    uint64_t v158 = v208;
                    (*(void (**)(unsigned char *, uint64_t))(v193 + 8))(v196, v194);
                    (*(void (**)(unsigned char *, uint64_t))(v197 + 8))(v198, v200);
                    (*(void (**)(unsigned char *, ValueMetadata *))(v204 + 8))(v205, v161);
                    return (void *)sub_24DB8B7E4((uint64_t)v182, (uint64_t)v199, v192, (char)v191, (uint64_t)v169, v190, v189, v146, v164, (uint64_t)v187, (uint64_t)v186, (char)v184, (uint64_t)v221, v158, 0);
                  }
                }
              }
            }
            (*(void (**)(unsigned char *, uint64_t))(v175 + 8))(v116, v117);
            (*(void (**)(unsigned char *, uint64_t))(v91 + 8))(v105, v107);
            (*(void (**)(unsigned char *, uint64_t))(v115 + 8))(v198, v200);
            return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v57 + 8))(v205, v161);
          }
          uint64_t v100 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v63 + 32);
          uint64_t v101 = v180;
          v100(v180, v88, v59);
          uint64_t v102 = v86;
          uint64_t v103 = (uint64_t)v179;
          ((void (*)(unsigned char *, unsigned char *, uint64_t))v203)(v179, v102, v82);
          uint64_t v104 = (uint64_t)v181;
          v100(v181, v101, v59);
          uint64_t v64 = v197;
          sub_24DB33528(v103, 0, v104, 0, 0, 0, v82, v59, (uint64_t)v196);
          uint64_t v85 = 0;
          uint64_t v57 = v204;
        }
        uint64_t v91 = v193;
        goto LABEL_26;
      }
      (*(void (**)(unsigned char *, uint64_t))(v185 + 8))(v31, v188);
      uint64_t v63 = v190;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v190 + 56))(v198, 1, 1, v59);
      uint64_t v64 = v197;
    }
    else
    {
      LOBYTE(v214) = -59;
      uint64_t v78 = v200;
      uint64_t v79 = v195;
      uint64_t v80 = v206;
      sub_24DA6D460((uint64_t)&v214, v200, v222, v200, v195);
      uint64_t v206 = v80;
      if (v80) {
        return (void *)(*(uint64_t (**)(unsigned char *, ValueMetadata *))(v57 + 8))(v205, v161);
      }
      uint64_t v195 = v79;
      unsigned __int8 v81 = v39;
      uint64_t v64 = v197;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v197 + 32))(v198, v81, v78);
      uint64_t v63 = v190;
    }
    uint64_t v82 = (uint64_t)v199;
    goto LABEL_18;
  }
  uint64_t v53 = (ValueMetadata *)v43;
  LOBYTE(v213) = -121;
  uint64_t v54 = v206;
  unint64_t result = (*(void *(**)(ValueMetadata **__return_ptr, void, uint64_t *, void, uint64_t, uint64_t))(a4 + 32))(&v214, MEMORY[0x263F8E970], &v213, MEMORY[0x263F8E970], v222, a4);
  if (v54) {
    return result;
  }
  uint64_t v195 = a4;
  uint64_t v206 = 0;
  if (v215)
  {
    uint64_t v56 = Description;
    Description[7](v205, 1, 1, v199);
    uint64_t v57 = v204;
    uint64_t v161 = v53;
    goto LABEL_7;
  }
  uint64_t v161 = v214;
  LOBYTE(v214) = -64;
  uint64_t v65 = MEMORY[0x263F8E8F8];
  uint64_t v66 = v222;
  uint64_t v67 = v195;
  sub_24D71B65C(v222, MEMORY[0x263F8E8F8]);
  uint64_t v68 = v206;
  unint64_t result = (void *)sub_24DA6D460((uint64_t)&v214, v65, v66, v65, v67);
  if (!v68)
  {
    uint64_t v69 = v161;
    int v160 = v213;
    LOBYTE(v208) = -63;
    uint64_t v206 = 0;
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F40);
    sub_24D71B65C(v66, v70);
    uint64_t v71 = v206;
    unint64_t result = (void *)sub_24DA6D460((uint64_t)&v208, v70, v66, v70, v195);
    if (!v71)
    {
      uint64_t v206 = 0;
      uint64_t v72 = v214;
      char v73 = v215;
      uint64_t v214 = v69;
      LODWORD(v215) = v160;
      unint64_t v216 = (unint64_t)v72;
      LOBYTE(v217) = v73;
      uint64_t v74 = (uint64_t)v199;
      int v75 = swift_dynamicCast();
      uint64_t v56 = Description;
      Description[7](v51, v75 ^ 1u, 1, (ValueMetadata *)v74);
      id v76 = *(void (**)(unsigned char *, unsigned char *, ValueMetadata *))(v204 + 32);
      uint64_t v77 = v51;
      uint64_t v57 = v204;
      uint64_t v161 = v53;
      v76(v205, v77, v53);
      goto LABEL_7;
    }
  }
  return result;
}

uint64_t sub_24D78DCBC(unsigned __int8 *a1, void *a2, int *a3)
{
  return sub_24D789E74(*a1, a2, a3);
}

void sub_24D78DCD8(unsigned __int8 *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
}

void *sub_24D78DCFC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_24D78BEA8(*(void *)(a3 + 16), a1, *(void *)(a3 + 24), a2, a4);
}

void *sub_24D78DD20@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_24D789A10();
  *a1 = result;
  return result;
}

unint64_t sub_24D78DD50(unsigned int a1)
{
  switch((a1 >> 4) & 3)
  {
    case 1u:
      LOBYTE(a1) = a1 & 0xCF;
      uint64_t v1 = 6254694;
      goto LABEL_4;
    case 2u:
      uint64_t v4 = 0x696C756465686373;
      goto LABEL_6;
    case 3u:
      int v3 = a1;
      unint64_t result = 1684957547;
      switch(v3)
      {
        case '1':
          unint64_t result = 0x6E6964696C6C6F63;
          break;
        case '2':
          unint64_t result = 0x5F73695F6D657469;
          break;
        case '3':
          unint64_t result = 0x6168635F7473616CLL;
          break;
        case '4':
          unint64_t result = 0xD000000000000020;
          break;
        case '5':
          unint64_t result = 0xD000000000000015;
          break;
        default:
          return result;
      }
      return result;
    default:
      uint64_t v1 = 6255462;
LABEL_4:
      uint64_t v4 = v1;
      sub_24D788A1C(a1);
LABEL_6:
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      return v4;
  }
}

uint64_t sub_24D78DF64(uint64_t a1, uint64_t a2)
{
  return sub_24D78DF7C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_24D3F7F94);
}

uint64_t sub_24D78DF7C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  uint64_t v5 = *v3;
  sub_24DCCAFF8();
  a3(v7, v5);
  return sub_24DCCB048();
}

uint64_t sub_24D78DFCC(uint64_t a1)
{
  return sub_24D3F7F94(a1, *v1);
}

uint64_t sub_24D78DFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D78DFEC(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_24D3F7F94);
}

uint64_t sub_24D78DFEC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v6 = *v4;
  sub_24DCCAFF8();
  a4(v8, v6);
  return sub_24DCCB048();
}

unint64_t sub_24D78E038()
{
  return sub_24D78DD50(*v0);
}

uint64_t sub_24D78E040(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24D790E28(*a1, *a2);
}

char *sub_24D78E04C()
{
  uint64_t v0 = sub_24D787300(0xD00000000000001FLL, 0x800000024DD06480, &qword_26B199DC8, (uint64_t (*)(uint64_t))sub_24D7893D0);
  int64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v34 = MEMORY[0x263F8EE78];
    sub_24D7C6F48(0, v1, 0);
    uint64_t v2 = 0;
    uint64_t v3 = v34;
    uint64_t v4 = *(void *)(v34 + 16);
    do
    {
      char v5 = *(unsigned char *)(v0 + v2 + 32);
      unint64_t v6 = *(void *)(v34 + 24);
      if (v4 + v2 >= v6 >> 1) {
        sub_24D7C6F48(v6 > 1, v4 + v2 + 1, 1);
      }
      *(void *)(v34 + 16) = v4 + v2 + 1;
      *(unsigned char *)(v34 + v4 + v2++ + 32) = v5;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  uint64_t v35 = v3;
  uint64_t v7 = sub_24D402044(qword_26B197828, &qword_26B199DC8, (uint64_t (*)(uint64_t))sub_24D788EBC);
  unint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    unint64_t v10 = (unsigned __int8 *)(v7 + 32);
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
    do
    {
      unsigned int v13 = *v10++;
      char v12 = v13;
      if (v13 <= 0xC5)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_24DA13C64(0, *((void *)v11 + 2) + 1, 1, v11);
        }
        unint64_t v15 = *((void *)v11 + 2);
        unint64_t v14 = *((void *)v11 + 3);
        if (v15 >= v14 >> 1) {
          uint64_t v11 = sub_24DA13C64((char *)(v14 > 1), v15 + 1, 1, v11);
        }
        *((void *)v11 + 2) = v15 + 1;
        v11[v15 + 32] = v12 | 0x10;
      }
      --v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  sub_24D785D4C((uint64_t)v11, (uint64_t (*)(void))sub_24DA13C64);
  uint64_t v17 = (char *)v3;
  int64_t v18 = *(void *)(v3 + 16);
  int64_t v19 = v18 + 6;
  if (__OFADD__(v18, 6))
  {
    __break(1u);
LABEL_45:
    uint64_t v17 = sub_24DA13C64((char *)(v16 > 1), v18, 1, v17);
    unint64_t v16 = *((void *)v17 + 3);
    int64_t v21 = v16 >> 1;
    goto LABEL_26;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native
    || (unint64_t v16 = *(void *)(v35 + 24), v21 = v16 >> 1, (uint64_t)(v16 >> 1) < v19))
  {
    if (v18 <= v19) {
      int64_t v22 = v18 + 6;
    }
    else {
      int64_t v22 = v18;
    }
    uint64_t v17 = sub_24DA13C64(isUniquelyReferenced_nonNull_native, v22, 1, (char *)v35);
    unint64_t v16 = *((void *)v17 + 3);
    int64_t v21 = v16 >> 1;
  }
  unint64_t v8 = *((void *)v17 + 2);
  int64_t v18 = v8 + 1;
  if (v21 <= v8) {
    goto LABEL_45;
  }
LABEL_26:
  *((void *)v17 + 2) = v18;
  v17[v8 + 32] = 48;
  unint64_t v23 = v8 + 2;
  if (v21 < (uint64_t)(v8 + 2))
  {
    uint64_t v17 = sub_24DA13C64((char *)(v16 > 1), v8 + 2, 1, v17);
    unint64_t v16 = *((void *)v17 + 3);
    int64_t v21 = v16 >> 1;
  }
  *((void *)v17 + 2) = v23;
  v17[v18 + 32] = 49;
  unint64_t v24 = v8 + 3;
  if (v21 < (uint64_t)(v8 + 3))
  {
    uint64_t v17 = sub_24DA13C64((char *)(v16 > 1), v8 + 3, 1, v17);
    unint64_t v16 = *((void *)v17 + 3);
    int64_t v21 = v16 >> 1;
  }
  *((void *)v17 + 2) = v24;
  v17[v23 + 32] = 50;
  unint64_t v25 = v8 + 4;
  if (v21 < (uint64_t)(v8 + 4))
  {
    uint64_t v17 = sub_24DA13C64((char *)(v16 > 1), v8 + 4, 1, v17);
    unint64_t v16 = *((void *)v17 + 3);
    int64_t v21 = v16 >> 1;
  }
  *((void *)v17 + 2) = v25;
  v17[v24 + 32] = 51;
  unint64_t v26 = v8 + 5;
  if (v21 < (uint64_t)(v8 + 5))
  {
    uint64_t v17 = sub_24DA13C64((char *)(v16 > 1), v8 + 5, 1, v17);
    unint64_t v16 = *((void *)v17 + 3);
    int64_t v21 = v16 >> 1;
  }
  *((void *)v17 + 2) = v26;
  v17[v25 + 32] = 52;
  if (v21 < (uint64_t)(v8 + 6)) {
    uint64_t v17 = sub_24DA13C64((char *)(v16 > 1), v8 + 6, 1, v17);
  }
  *((void *)v17 + 2) = v8 + 6;
  v17[v26 + 32] = 53;
  uint64_t v36 = v17;
  uint64_t v27 = sub_24D786CD0();
  int64_t v28 = v27[2];
  if (v28)
  {
    sub_24D7C6F48(0, v28, 0);
    uint64_t v29 = 0;
    uint64_t v30 = *(void *)(v9 + 16);
    do
    {
      char v31 = *((unsigned char *)v27 + v29 + 32);
      unint64_t v32 = *(void *)(v9 + 24);
      if (v30 + v29 >= v32 >> 1) {
        sub_24D7C6F48(v32 > 1, v30 + v29 + 1, 1);
      }
      *(void *)(v9 + 16) = v30 + v29 + 1;
      *(unsigned char *)(v9 + v30 + v29++ + 32) = v31 | 0x20;
    }
    while (v28 != v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  sub_24D785D4C(v9, (uint64_t (*)(void))sub_24DA13C64);
  return v36;
}

uint64_t sub_24D78E538()
{
  uint64_t v0 = type metadata accessor for ItemReconciliationHalf();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24DA6D5A0(v0, WitnessTable);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DC8);
  uint64_t v3 = swift_getWitnessTable();
  uint64_t v4 = MEMORY[0x263F8E658];
  uint64_t v6 = sub_24D7854B0((void (*)(char *, char *))sub_24D3F2FA4, 0, v2, (uint64_t)&type metadata for ItemReconciliationSQLFields, MEMORY[0x263F8E628], v3, MEMORY[0x263F8E658], v5);
  swift_bridgeObjectRelease();
  uint64_t v13 = v6;
  uint64_t v7 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v8 = swift_getWitnessTable();
  sub_24DA6D5A0(v7, v8);
  swift_getWitnessTable();
  sub_24DCC9AA8();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DC0);
  swift_getWitnessTable();
  sub_24DCC9CF8();
  sub_24DCC9CF8();
  sub_24D786CD0();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DB8);
  uint64_t v10 = sub_24D3E4A9C(&qword_26986E818, &qword_26B199DB8);
  sub_24D7854B0((void (*)(char *, char *))sub_24D71B664, 0, v9, (uint64_t)&type metadata for ItemReconciliationSQLFields, MEMORY[0x263F8E628], v10, v4, v11);
  swift_bridgeObjectRelease();
  sub_24DCC9CF8();
  return v13;
}

unsigned __int8 *sub_24D78E7D8@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  unsigned int v2 = *result;
  if (v2 >= 0xC6) {
    char v3 = 56;
  }
  else {
    char v3 = v2 | 0x10;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_24D78E7F4(uint64_t a1, id a2, int *a3)
{
  uint64_t v6 = a1;
  switch((a1 >> 4) & 3)
  {
    case 1u:
      uint64_t v6 = a1 & 0xFFFFFFCF;
      v3 += a3[13];
      goto LABEL_8;
    case 2u:
      uint64_t v7 = sub_24DB17A8C(a1 & 1, (uint64_t)a2, *(void *)(v3 + a3[16]), *(void *)(v3 + a3[16] + 8));
      if (!v4) {
        return v7;
      }
      return v3;
    case 3u:
      switch((char)a1)
      {
        case '1':
          uint64_t v20 = *(void *)(v3 + a3[15]);
          uint64_t v23 = v20;
          *(void *)&long long v21 = swift_getAssociatedTypeWitness();
          *((void *)&v21 + 1) = swift_getAssociatedTypeWitness();
          *(void *)&long long v22 = swift_getAssociatedConformanceWitness();
          *((void *)&v22 + 1) = swift_getAssociatedConformanceWitness();
          type metadata accessor for ReconciliationID();
          uint64_t v12 = sub_24DCC9D48();
          swift_getWitnessTable();
          if (sub_24DCC9FE8())
          {
            id v10 = objc_msgSend(a2, sel_bindObjectParameter_, 0);
            goto LABEL_15;
          }
          *(void *)&long long v21 = v20;
          swift_bridgeObjectRetain();
          swift_getWitnessTable();
          uint64_t WitnessTable = swift_getWitnessTable();
          uint64_t v3 = sub_24D7341C0((uint64_t)&v21, v12, WitnessTable);
          swift_bridgeObjectRelease();
          return v3;
        case '2':
          uint64_t v11 = *(int *)(type metadata accessor for ItemReconciliationHalf() + 76);
          goto LABEL_17;
        case '3':
          id v10 = objc_msgSend(a2, sel_bindLongParameter_, *(void *)(v3 + a3[17]));
          goto LABEL_15;
        case '4':
          id v10 = objc_msgSend(a2, sel_bindBooleanParameter_, *(unsigned __int8 *)(v3 + a3[18]));
LABEL_15:
          id v13 = v10;
          uint64_t v3 = sub_24DCC97E8();

          return v3;
        case '5':
          uint64_t v11 = a3[19];
LABEL_17:
          uint64_t v14 = *(void *)(v3 + v11);
          uint64_t v15 = MEMORY[0x263F8D6C8];
          goto LABEL_18;
        default:
          uint64_t v8 = *(char *)(v3 + a3[14]);
          if (v8 == 4)
          {
            long long v21 = 0u;
            long long v22 = 0u;
          }
          else
          {
            uint64_t v15 = MEMORY[0x263F8D6C8];
            uint64_t v14 = qword_24DCDBD30[v8];
LABEL_18:
            *((void *)&v22 + 1) = v15;
            *(void *)&long long v21 = v14;
          }
          uint64_t v3 = sub_24D3E3EB4((uint64_t)&v21);
          uint64_t v17 = v16;
          sub_24D3E3E54((uint64_t)&v21);
          if (!v17)
          {
            sub_24DCCA978();
            __break(1u);
            JUMPOUT(0x24D78EBD0);
          }
          return result;
      }
      return v3;
    default:
LABEL_8:
      uint64_t v9 = (int *)type metadata accessor for ItemReconciliationHalf();
      uint64_t v7 = sub_24D789E74(v6, a2, v9);
      if (v4) {
        return v3;
      }
      return v7;
  }
}

void sub_24D78EBF8(unsigned int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v45 = a4;
  id v46 = a2;
  uint64_t v7 = sub_24DCCA7D8();
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a1 >> 4) & 3)
  {
    case 1u:
      unsigned __int8 v13 = a1 & 0xCF;
      uint64_t v12 = (uint64_t)v45;
      id v11 = v46;
      unsigned int v14 = a3;
      goto LABEL_4;
    case 2u:
      uint64_t v15 = v45;
      if (a1)
      {
        v45[3] = &type metadata for NSecTimestamp;
        id v16 = objc_msgSend(v46, sel_longAtIndex_, a3);
      }
      else
      {
        v45[3] = &type metadata for JobSchedulingPriority;
        id v16 = objc_msgSend(v46, sel_unsignedLongAtIndex_, a3);
      }
      void *v15 = v16;
      break;
    case 3u:
      int v17 = a1;
      uint64_t v18 = a3;
      switch(v17)
      {
        case '1':
          uint64_t v42 = v8;
          unsigned int v44 = objc_msgSend(v46, sel_isNullAtIndex_, a3);
          unsigned int v43 = a3;
          uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
          uint64_t v23 = swift_getAssociatedTypeWitness();
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          uint64_t v25 = swift_getAssociatedConformanceWitness();
          if (v44)
          {
            id v47 = AssociatedTypeWitness;
            uint64_t v48 = v23;
            uint64_t v49 = AssociatedConformanceWitness;
            uint64_t v50 = v25;
            type metadata accessor for ReconciliationID();
            uint64_t v26 = sub_24DCC9528();
            uint64_t v27 = sub_24DCC9D48();
            int64_t v28 = v45;
            v45[3] = v27;
            *int64_t v28 = v26;
          }
          else
          {
            id v47 = AssociatedTypeWitness;
            uint64_t v48 = v23;
            uint64_t v49 = AssociatedConformanceWitness;
            uint64_t v50 = v25;
            uint64_t v34 = (ValueMetadata *)type metadata accessor for ReconciliationID();
            uint64_t v35 = (ValueMetadata *)sub_24DCC9D48();
            uint64_t v36 = (uint64_t)v45;
            v45[3] = v35;
            uint64_t WitnessTable = swift_getWitnessTable();
            swift_getWitnessTable();
            uint64_t v37 = v43;
            sub_24D734460(v35, v43);
            if (v4)
            {
              __swift_deallocate_boxed_opaque_existential_0(v36);
              id v47 = v4;
              id v38 = v4;
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
              if (swift_dynamicCast())
              {

                sub_24DCCAD88();
                swift_allocObject();
                uint64_t v39 = sub_24DCC9C58();
                sub_24D734460(v34, v37);
                uint64_t v41 = v45;
                v45[3] = v35;
                *uint64_t v41 = v39;
                (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v7);
              }
            }
          }
          return;
        case '2':
          id v29 = v46;
          if (objc_msgSend(v46, sel_isNullAtIndex_, v18)) {
            goto LABEL_21;
          }
          id v30 = objc_msgSend(v29, sel_longAtIndex_, v18);
          char v31 = &type metadata for SyncPausedStatus;
          goto LABEL_26;
        case '3':
          id v30 = objc_msgSend(v46, sel_longAtIndex_, a3);
          char v31 = (ValueMetadata *)MEMORY[0x263F8D6C8];
          goto LABEL_26;
        case '4':
          unsigned __int8 v19 = objc_msgSend(v46, sel_BOOLAtIndex_, a3);
          long long v21 = (ValueMetadata *)MEMORY[0x263F8D4F8];
          uint64_t v20 = v45;
          goto LABEL_19;
        case '5':
          id v32 = v46;
          if (objc_msgSend(v46, sel_isNullAtIndex_, v18)) {
            goto LABEL_21;
          }
          id v30 = objc_msgSend(v32, sel_longAtIndex_, v18);
          char v31 = &type metadata for PolicyContentStatus;
LABEL_26:
          uint64_t v40 = v45;
          v45[3] = v31;
          *uint64_t v40 = v30;
          break;
        default:
          if (objc_msgSend(v46, sel_isNullAtIndex_, a3))
          {
LABEL_21:
            uint64_t v33 = v45;
            *(_OWORD *)uint64_t v45 = 0u;
            *((_OWORD *)v33 + 1) = 0u;
          }
          else
          {
            unsigned __int8 v19 = sub_24D3FB058(a3);
            uint64_t v20 = v45;
            if (!v4)
            {
              long long v21 = &type metadata for FileItemKind;
LABEL_19:
              v20[3] = v21;
              *(unsigned char *)uint64_t v20 = v19;
            }
          }
          break;
      }
      break;
    default:
      uint64_t v12 = (uint64_t)v45;
      id v11 = v46;
      unsigned __int8 v13 = a1;
      unsigned int v14 = a3;
LABEL_4:
      sub_24D78B2F0(v13, v11, v14, v12);
      break;
  }
}

uint64_t sub_24D78F1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v85 = a1;
  uint64_t v67 = a8;
  uint64_t v88 = &_s9SQLFieldsON_1;
  uint64_t v89 = a4;
  unint64_t v69 = sub_24D71C2A0();
  unint64_t v90 = v69;
  uint64_t v91 = a7;
  uint64_t v71 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v68 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v70 = (uint64_t)v65 - v14;
  uint64_t v76 = a3;
  uint64_t v77 = a6;
  uint64_t v15 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v72 = *(void *)(v15 - 8);
  uint64_t v73 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v78 = (uint64_t)v65 - v16;
  unint64_t v17 = sub_24D78FD74();
  uint64_t v88 = &type metadata for ItemReconciliationHalfSQLFields;
  uint64_t v89 = a4;
  unint64_t v90 = v17;
  uint64_t v91 = a7;
  uint64_t v18 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v83 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v74 = (uint64_t)v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  long long v22 = (char *)v65 - v21;
  uint64_t v23 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v79 = *(void *)(v23 - 8);
  uint64_t v80 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  int64_t v28 = (char *)v65 - v27;
  uint64_t v81 = a4;
  uint64_t v82 = a7;
  uint64_t v75 = v17;
  sub_24DA6D8E4((uint64_t)sub_24D3F2FA4, 0, a4, (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, a7, v17, (uint64_t)v22);
  uint64_t v29 = a5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v31 = a2;
  uint64_t v32 = a2;
  uint64_t v33 = v18;
  uint64_t v34 = v84;
  sub_24D78BEA8(v32, v18, v29, WitnessTable, (uint64_t)v28);
  if (v34) {
    return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v22, v18);
  }
  uint64_t v66 = v26;
  v65[1] = v31;
  v65[2] = v29;
  uint64_t v84 = v28;
  uint64_t v36 = v80;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v83 + 8);
  v37(v22, v33);
  LOBYTE(v87) = 50;
  sub_24DA6D460((uint64_t)&v87, (uint64_t)&type metadata for SyncPausedStatus, v81, (uint64_t)&type metadata for SyncPausedStatus, v82);
  v65[0] = v37;
  uint64_t v83 = WitnessTable;
  id v38 = v84;
  *(void *)&v84[*(int *)(v36 + 76)] = v88;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v66, v38, v36);
  uint64_t v39 = v74;
  sub_24DA6D8E4((uint64_t)sub_24D3F4230, 0, v81, (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, v82, v75, v74);
  sub_24D78BEA8(v76, v33, v77, v83, v78);
  ((void (*)(uint64_t, uint64_t))v65[0])(v39, v33);
  LOBYTE(v88) = 48;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B196E90);
  uint64_t v41 = v81;
  uint64_t v42 = v82;
  sub_24D71B65C(v81, v40);
  sub_24DA6D460((uint64_t)&v88, v40, v41, v40, v42);
  LODWORD(v83) = v92[2];
  LOBYTE(v86) = 49;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v44 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v46 = swift_getAssociatedConformanceWitness();
  uint64_t v88 = (ValueMetadata *)AssociatedTypeWitness;
  uint64_t v89 = v44;
  unint64_t v90 = AssociatedConformanceWitness;
  uint64_t v91 = v46;
  type metadata accessor for ReconciliationID();
  uint64_t v47 = sub_24DCC9D48();
  sub_24DA6D460((uint64_t)&v86, v47, v81, v47, v82);
  uint64_t v48 = v80;
  uint64_t v49 = v87;
  uint64_t v50 = v70;
  sub_24DA6D8E4((uint64_t)sub_24D71B664, 0, v81, (uint64_t)&_s9SQLFieldsON_1, v82, v69, v70);
  uint64_t v51 = v71;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v53 = sub_24DB17420(v50, v51, v52);
  uint64_t v55 = v54;
  uint64_t v75 = (uint64_t)v53;
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v50, v51);
  LOBYTE(v86) = 51;
  uint64_t v56 = MEMORY[0x263F8D6C8];
  uint64_t v57 = v81;
  uint64_t v58 = v82;
  sub_24D71B65C(v81, MEMORY[0x263F8D6C8]);
  sub_24DA6D460((uint64_t)&v86, v56, v57, v56, v58);
  uint64_t v59 = (uint64_t)v88;
  LOBYTE(v86) = 52;
  uint64_t v60 = MEMORY[0x263F8D4F8];
  uint64_t v61 = v81;
  uint64_t v62 = v82;
  sub_24D71B65C(v81, MEMORY[0x263F8D4F8]);
  sub_24DA6D460((uint64_t)&v86, v60, v61, v60, v62);
  LODWORD(v74) = v92[1];
  v92[0] = 53;
  uint64_t v63 = v81;
  uint64_t v64 = v82;
  sub_24D71B65C(v81, (uint64_t)&type metadata for PolicyContentStatus);
  sub_24DA6D460((uint64_t)v92, (uint64_t)&type metadata for PolicyContentStatus, v63, (uint64_t)&type metadata for PolicyContentStatus, v64);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v84, v48);
  return sub_24DB8BA58((uint64_t)v66, v78, v83, v49, v75, v55, v59, v74, v67, v86);
}

uint64_t sub_24D78FBB8(unsigned __int8 *a1, void *a2, int *a3)
{
  return sub_24D78E7F4(*a1, a2, a3);
}

void sub_24D78FBD4(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
}

uint64_t sub_24D78FBFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  return sub_24D78F1C4(a1, a4[2], a4[3], a2, a4[4], a4[5], a3, a5);
}

uint64_t sub_24D78FC28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24D78E538();
  *a1 = result;
  return result;
}

uint64_t sub_24D78FC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D78FF5C(a1, a2, a3, (uint64_t (*)(void))sub_24D78FC88, (uint64_t (*)(void))sub_24D3FB138);
}

unint64_t sub_24D78FC88()
{
  unint64_t result = qword_26B190328;
  if (!qword_26B190328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B190328);
  }
  return result;
}

unint64_t sub_24D78FCE0()
{
  unint64_t result = qword_26B199A60;
  if (!qword_26B199A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199A60);
  }
  return result;
}

uint64_t sub_24D78FD34(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24D78FD74()
{
  unint64_t result = qword_26B193788;
  if (!qword_26B193788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193788);
  }
  return result;
}

uint64_t sub_24D78FDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D78FF5C(a1, a2, a3, (uint64_t (*)(void))sub_24D78FDF4, (uint64_t (*)(void))sub_24D78FE48);
}

unint64_t sub_24D78FDF4()
{
  unint64_t result = qword_26B193780;
  if (!qword_26B193780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193780);
  }
  return result;
}

unint64_t sub_24D78FE48()
{
  unint64_t result = qword_26B193770;
  if (!qword_26B193770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193770);
  }
  return result;
}

unint64_t sub_24D78FEA0()
{
  unint64_t result = qword_26B193778;
  if (!qword_26B193778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193778);
  }
  return result;
}

uint64_t sub_24D78FEF4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24D78FF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D78FF5C(a1, a2, a3, (uint64_t (*)(void))sub_24D78FF98, (uint64_t (*)(void))sub_24D78FFEC);
}

uint64_t sub_24D78FF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24D78FF98()
{
  unint64_t result = qword_26B192C80;
  if (!qword_26B192C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B192C80);
  }
  return result;
}

unint64_t sub_24D78FFEC()
{
  unint64_t result = qword_26B192C70;
  if (!qword_26B192C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B192C70);
  }
  return result;
}

unint64_t sub_24D790040()
{
  unint64_t result = qword_26B193220;
  if (!qword_26B193220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193220);
  }
  return result;
}

char *sub_24D790094()
{
  uint64_t v0 = sub_24D786EC8();
  int64_t v1 = v0[2];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_24D7C6F98(0, v1, 0);
    uint64_t v2 = 0;
    uint64_t v3 = v16;
    uint64_t v4 = *(void *)(v16 + 16);
    do
    {
      char v5 = *((unsigned char *)v0 + v2 + 32);
      unint64_t v6 = *(void *)(v16 + 24);
      if (v4 + v2 >= v6 >> 1) {
        sub_24D7C6F98(v6 > 1, v4 + v2 + 1, 1);
      }
      *(void *)(v16 + 16) = v4 + v2 + 1;
      *(unsigned char *)(v16 + v4 + v2++ + 32) = v5;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  sub_24D785D4C(v3, (uint64_t (*)(void))sub_24DA13C7C);
  uint64_t v8 = &aH_0;
  int64_t v9 = unk_26FFA2328;
  uint64_t v10 = unk_26FFA2328 + 2;
  if (__OFADD__(unk_26FFA2328, 2))
  {
    __break(1u);
LABEL_20:
    uint64_t v8 = sub_24DA13C7C((char *)(v7 > 1), v9, 1, v8);
    unint64_t v7 = *((void *)v8 + 3);
    unint64_t v12 = v7 >> 1;
    goto LABEL_16;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native
    || (unint64_t v7 = unk_26FFA2330, v12 = unk_26FFA2330 >> 1, unk_26FFA2330 >> 1 < v10))
  {
    if (v9 <= v10) {
      int64_t v13 = v9 + 2;
    }
    else {
      int64_t v13 = v9;
    }
    uint64_t v8 = sub_24DA13C7C(isUniquelyReferenced_nonNull_native, v13, 1, &aH_0);
    unint64_t v7 = *((void *)v8 + 3);
    unint64_t v12 = v7 >> 1;
  }
  uint64_t v10 = *((void *)v8 + 2);
  int64_t v9 = v10 + 1;
  if (v12 <= v10) {
    goto LABEL_20;
  }
LABEL_16:
  *((void *)v8 + 2) = v9;
  v8[v10 + 32] = 31;
  int64_t v14 = v10 + 2;
  if ((uint64_t)v12 < v14) {
    uint64_t v8 = sub_24DA13C7C((char *)(v7 > 1), v14, 1, v8);
  }
  *((void *)v8 + 2) = v14;
  v8[v9 + 32] = 32;
  return v8;
}

char *sub_24D790290()
{
  uint64_t v0 = sub_24D786EC8();
  int64_t v1 = v0[2];
  if (v1)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_24D7C6F98(0, v1, 0);
    uint64_t v2 = 0;
    uint64_t v3 = v20;
    uint64_t v4 = *(void *)(v20 + 16);
    do
    {
      char v5 = *((unsigned char *)v0 + v2 + 32);
      unint64_t v6 = *(void *)(v20 + 24);
      if (v4 + v2 >= v6 >> 1) {
        sub_24D7C6F98(v6 > 1, v4 + v2 + 1, 1);
      }
      *(void *)(v20 + 16) = v4 + v2 + 1;
      *(unsigned char *)(v20 + v4 + v2++ + 32) = v5;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  sub_24D785D4C(v3, (uint64_t (*)(void))sub_24DA13C7C);
  unint64_t v7 = &aH_1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v7 = sub_24DA13C7C(0, unk_26FFA23C8 + 1, 1, &aH_1);
  }
  unint64_t v9 = *((void *)v7 + 2);
  unint64_t v8 = *((void *)v7 + 3);
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_24DA13C7C((char *)(v8 > 1), v9 + 1, 1, v7);
  }
  *((void *)v7 + 2) = v9 + 1;
  v7[v9 + 32] = 33;
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
  type metadata accessor for VFSItem(0);
  if (swift_dynamicCastMetatype())
  {
    uint64_t v10 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    unint64_t v12 = v9 + 1;
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
    do
    {
      int v13 = v7[v11 + 32];
      if ((v13 - 28) < 7)
      {
LABEL_20:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_24D7C6F98(0, *((void *)v10 + 2) + 1, 1);
        }
        unint64_t v16 = *((void *)v10 + 2);
        unint64_t v15 = *((void *)v10 + 3);
        if (v16 >= v15 >> 1) {
          sub_24D7C6F98(v15 > 1, v16 + 1, 1);
        }
        *((void *)v10 + 2) = v16 + 1;
        v10[v16 + 32] = v13;
      }
      else
      {
        switch(v7[v11 + 32])
        {
          case 25:
            swift_bridgeObjectRelease();
            break;
          default:
            char v14 = sub_24DCCAE28();
            swift_bridgeObjectRelease();
            if ((v14 & 1) == 0) {
              goto LABEL_20;
            }
            break;
        }
      }
      ++v11;
    }
    while (v12 != v11);
    swift_bridgeObjectRelease_n();
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_24DA13C7C(0, *((void *)v10 + 2) + 1, 1, v10);
  }
  unint64_t v18 = *((void *)v10 + 2);
  unint64_t v17 = *((void *)v10 + 3);
  if (v18 >= v17 >> 1) {
    uint64_t v10 = sub_24DA13C7C((char *)(v17 > 1), v18 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v18 + 1;
  v10[v18 + 32] = 34;
  return v10;
}

void *sub_24D7908F4()
{
  if (qword_26B199388 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26B1A23C8;
  int64_t v1 = *(void *)(qword_26B1A23C8 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_24D7C7174(0, v1, 0);
    uint64_t v3 = 0;
    uint64_t v2 = v8;
    uint64_t v4 = *(void *)(v8 + 16);
    do
    {
      char v5 = *(unsigned char *)(v0 + v3 + 32);
      unint64_t v6 = *(void *)(v8 + 24);
      if (v4 + v3 >= v6 >> 1) {
        sub_24D7C7174(v6 > 1, v4 + v3 + 1, 1);
      }
      *(void *)(v8 + 16) = v4 + v3 + 1;
      *(unsigned char *)(v8 + v4 + v3++ + 32) = v5;
    }
    while (v1 != v3);
    swift_bridgeObjectRelease();
  }
  sub_24D785D4C(v2, (uint64_t (*)(void))sub_24DA14A18);
  return &unk_26FFA2390;
}

uint64_t sub_24D790A40(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1 >> 6)
  {
    case 1:
      if ((a2 & 0xC0) != 0x40) {
        return 0;
      }
      unint64_t v2 = 0x6574617473;
      int v6 = a2 & 0x3F;
      int v7 = a1 & 0x3F;
      if ((a1 & 0x3F) != 0)
      {
        if (v7 == 1) {
          unint64_t v5 = 0xD000000000000010;
        }
        else {
          unint64_t v5 = 0xD000000000000012;
        }
        if (v7 == 1) {
          unint64_t v3 = 0x800000024DCFAE10;
        }
        else {
          unint64_t v3 = 0x800000024DCFAE30;
        }
        if ((a2 & 0x3F) != 0) {
          goto LABEL_14;
        }
LABEL_27:
        unint64_t v8 = 0xE500000000000000;
        goto LABEL_62;
      }
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6574617473;
      if ((a2 & 0x3F) == 0) {
        goto LABEL_27;
      }
LABEL_14:
      if (v6 == 1) {
        unint64_t v2 = 0xD000000000000010;
      }
      else {
        unint64_t v2 = 0xD000000000000012;
      }
      if (v6 == 1) {
        unint64_t v8 = 0x800000024DCFAE10;
      }
      else {
        unint64_t v8 = 0x800000024DCFAE30;
      }
LABEL_62:
      if (v5 == v2 && v3 == v8)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      else
      {
        char v10 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10 & 1;
      }
    case 2:
      switch(a1)
      {
        case 0x81u:
          return a2 == 129;
        case 0x82u:
          return a2 == 130;
        case 0x83u:
          return a2 == 131;
        case 0x84u:
          return a2 == 132;
        case 0x85u:
          return a2 == 133;
        case 0x86u:
          return a2 == 134;
        case 0x87u:
          return a2 == 135;
        default:
          return a2 == 128;
      }
    case 3:
      switch(a1)
      {
        case 0xC1u:
          if (a2 != 193) {
            return 0;
          }
          break;
        case 0xC2u:
          if (a2 != 194) {
            return 0;
          }
          break;
        case 0xC3u:
          if (a2 != 195) {
            return 0;
          }
          break;
        case 0xC4u:
          if (a2 != 196) {
            return 0;
          }
          break;
        case 0xC5u:
          if (a2 != 197) {
            return 0;
          }
          break;
        case 0xC6u:
          if (a2 != 198) {
            return 0;
          }
          break;
        default:
          if (a2 != 192) {
            return 0;
          }
          break;
      }
      return 1;
    default:
      if (a2 > 0x3Fu) {
        return 0;
      }
      unint64_t v2 = 0x64695F656C6966;
      unint64_t v3 = 0xE700000000000000;
      uint64_t v4 = a1;
      unint64_t v5 = 0x64695F656C6966;
      switch(v4)
      {
        case 1:
          unint64_t v5 = 0x6E6F635F74736574;
          unint64_t v3 = 0xEC000000746E6574;
          break;
        case 2:
          unint64_t v3 = 0xE800000000000000;
          unint64_t v5 = 0x6E6F697461636F6CLL;
          break;
        case 3:
          unint64_t v3 = 0xE600000000000000;
          unint64_t v5 = 0x6874676E656CLL;
          break;
        case 4:
          unint64_t v3 = 0xE500000000000000;
          unint64_t v5 = 0x7367616C66;
          break;
        default:
          break;
      }
      unint64_t v8 = 0xE700000000000000;
      switch(a2)
      {
        case 1u:
          unint64_t v2 = 0x6E6F635F74736574;
          unint64_t v8 = 0xEC000000746E6574;
          break;
        case 2u:
          unint64_t v8 = 0xE800000000000000;
          unint64_t v2 = 0x6E6F697461636F6CLL;
          break;
        case 3u:
          unint64_t v8 = 0xE600000000000000;
          unint64_t v2 = 0x6874676E656CLL;
          break;
        case 4u:
          unint64_t v8 = 0xE500000000000000;
          unint64_t v2 = 0x7367616C66;
          break;
        default:
          goto LABEL_62;
      }
      goto LABEL_62;
  }
}

uint64_t sub_24D790E28(unsigned int a1, unsigned __int8 a2)
{
  switch((a1 >> 4) & 3)
  {
    case 1u:
      if ((a2 & 0x30) != 0x10) {
        goto LABEL_38;
      }
      LOBYTE(a1) = a1 & 0xCF;
      a2 &= 0xCFu;
      goto LABEL_6;
    case 2u:
      if ((a2 & 0x30) != 0x20) {
        goto LABEL_38;
      }
      BOOL v3 = (a1 & 1) == 0;
      if (a1) {
        uint64_t v4 = 0x6D617473656D6974;
      }
      else {
        uint64_t v4 = 0x797469726F697270;
      }
      if (v3) {
        unint64_t v5 = 0xE800000000000000;
      }
      else {
        unint64_t v5 = 0xE900000000000070;
      }
      if (a2) {
        uint64_t v6 = 0x6D617473656D6974;
      }
      else {
        uint64_t v6 = 0x797469726F697270;
      }
      if (a2) {
        unint64_t v7 = 0xE900000000000070;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v4 == v6 && v5 == v7)
      {
        swift_bridgeObjectRelease_n();
        uint64_t result = 1;
      }
      else
      {
        char v8 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = v8 & 1;
      }
      break;
    case 3u:
      switch((char)a1)
      {
        case '1':
          if (a2 != 49) {
            goto LABEL_38;
          }
          break;
        case '2':
          if (a2 != 50) {
            goto LABEL_38;
          }
          break;
        case '3':
          if (a2 != 51) {
            goto LABEL_38;
          }
          break;
        case '4':
          if (a2 != 52) {
            goto LABEL_38;
          }
          break;
        case '5':
          if (a2 != 53) {
            goto LABEL_38;
          }
          break;
        default:
          if (a2 != 48) {
            goto LABEL_38;
          }
          break;
      }
      return 1;
    default:
      if ((a2 & 0x30) != 0)
      {
LABEL_38:
        uint64_t result = 0;
      }
      else
      {
LABEL_6:
        uint64_t result = sub_24D790A40(a1, a2);
      }
      break;
  }
  return result;
}

uint64_t sub_24D791004()
{
  unint64_t v0 = sub_24DCCAA88();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_24D791050(uint64_t a1)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  uint64_t v3 = a1 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v3 = a1;
  }
  *(void *)(v3 + 16) = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for ItemReconciliationHalfSQLFields(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x1D) {
    goto LABEL_17;
  }
  if (a2 + 227 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 227) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 227;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 227;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 227;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v6 >= 0x1C) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for ItemReconciliationHalfSQLFields(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 227 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 227) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1D) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1C)
  {
    unsigned int v6 = ((a2 - 29) >> 8) + 1;
    *uint64_t result = a2 - 29;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D791200);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_24D791228(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  unsigned int v4 = (v1 & 7 | (8 * (v1 >> 6))) - 14;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return v4;
  }
}

unsigned char *sub_24D79124C(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_24D79125C(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *uint64_t result = *result & 7 | ((_BYTE)a2 << 6);
  }
  else {
    *uint64_t result = ((a2 - 2) & 7 | (((a2 - 2) >> 3) << 6)) ^ 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemReconciliationHalfSQLFields()
{
  return &type metadata for ItemReconciliationHalfSQLFields;
}

uint64_t getEnumTagSinglePayload for ItemReconciliationSQLFields(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 5) {
    goto LABEL_17;
  }
  if (a2 + 251 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 251) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 251;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 251;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 251;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 1) & 4 | (*a1 >> 4) & 3) ^ 7;
  if (v6 >= 4) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for ItemReconciliationSQLFields(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 251 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 251) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 4)
  {
    unsigned int v6 = ((a2 - 5) >> 8) + 1;
    *uint64_t result = a2 - 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D791414);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = (16 * ((3 * a2) & 3)) | 8;
        break;
    }
  }
  return result;
}

uint64_t sub_24D79143C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  unsigned int v2 = (v1 >> 4) & 3;
  unsigned int v3 = (v1 & 7 | (8 * (v1 >> 6))) + 3;
  if (v2 == 3) {
    return v3;
  }
  else {
    return v2;
  }
}

unsigned char *sub_24D791460(unsigned char *result)
{
  *result &= 0xCFu;
  return result;
}

unsigned char *sub_24D791470(unsigned char *result, unsigned int a2)
{
  if (a2 < 3) {
    *uint64_t result = *result & 0xC7 | (16 * (a2 & 3));
  }
  else {
    *uint64_t result = (8 * (a2 - 3)) & 0xC0 | (a2 - 3) & 7 | 0x30;
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemReconciliationSQLFields()
{
  return &type metadata for ItemReconciliationSQLFields;
}

unsigned char *sub_24D7914B8@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_24D3F2FA4(a1, a2);
}

uint64_t sub_24D7914D0()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24D791580(unint64_t a1, uint64_t a2, void *a3, NSObject *a4, void *a5, uint64_t a6)
{
  uint64_t v796 = a6;
  v801 = a4;
  id v774 = a3;
  uint64_t v762 = a2;
  unint64_t v793 = a1;
  LODWORD(v792) = a1;
  uint64_t v7 = *a5;
  uint64_t v8 = *(void *)(*a5 + 88);
  unint64_t v9 = *(void (**)(void, void, void))(*a5 + 104);
  uint64_t v723 = type metadata accessor for SnapshotItem();
  uint64_t v715 = sub_24DCCA3F8();
  uint64_t v714 = *(void *)(v715 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v715);
  v739 = (char *)&v703 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  v706 = (char *)&v703 - v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  Class isa = AssociatedTypeWitness[-1].isa;
  uint64_t v14 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  v740 = (char *)&v703 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v707 = (char *)&v703 - v17;
  MEMORY[0x270FA5388](v16);
  v779 = (char **)((char *)&v703 - v18);
  uint64_t v19 = *(NSObject **)(v7 + 96);
  v787 = a5;
  uint64_t v20 = *(int **)(v7 + 80);
  uint64_t v21 = (int *)swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  v807 = v21;
  uint64_t v808 = (uint64_t)AssociatedTypeWitness;
  uint64_t v754 = AssociatedConformanceWitness;
  v809 = AssociatedConformanceWitness;
  uint64_t v810 = v23;
  uint64_t v785 = type metadata accessor for ReconciliationID();
  uint64_t v705 = sub_24DCCA3F8();
  uint64_t v704 = *(void *)(v705 - 8);
  MEMORY[0x270FA5388](v705);
  uint64_t v710 = (char *)&v703 - v24;
  uint64_t v25 = type metadata accessor for SnapshotItem();
  uint64_t v735 = sub_24DCCA3F8();
  uint64_t v718 = *(void *)(v735 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v735);
  v722 = (char *)&v703 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v708 = (char *)&v703 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v737 = (char *)&v703 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v717 = (char *)&v703 - v33;
  uint64_t v747 = v25;
  uint64_t v744 = *(void *)(v25 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v711 = (char *)&v703 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v703 = (char *)&v703 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v724 = (char *)&v703 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v709 = (char *)&v703 - v40;
  v807 = v20;
  uint64_t v808 = v8;
  v809 = v19;
  uint64_t v810 = (uint64_t)v9;
  uint64_t v734 = type metadata accessor for TestingOperation();
  uint64_t v733 = *(void *)(v734 - 8);
  MEMORY[0x270FA5388](v734);
  uint64_t v732 = (char *)&v703 - v41;
  uint64_t v764 = sub_24DCC9078();
  uint64_t v765 = *(void *)(v764 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v764);
  v761 = (char *)&v703 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  v727 = (char *)&v703 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  v743 = (char *)&v703 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  v760 = (char *)&v703 - v49;
  MEMORY[0x270FA5388](v48);
  v725 = (char *)&v703 - v50;
  v807 = v20;
  uint64_t v808 = v8;
  v809 = v19;
  uint64_t v810 = (uint64_t)v9;
  uint64_t v784 = type metadata accessor for ReconciliationMutation();
  uint64_t v789 = *(void *)(v784 - 8);
  uint64_t v51 = MEMORY[0x270FA5388](v784);
  uint64_t v720 = (char *)&v703 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v51);
  v783 = (char *)&v703 - v53;
  os_log_t v780 = AssociatedTypeWitness;
  uint64_t v773 = sub_24DCCA3F8();
  uint64_t v772 = *(void *)(v773 - 8);
  uint64_t v54 = MEMORY[0x270FA5388](v773);
  v748 = (char *)&v703 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  v713 = (char *)&v703 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  v771 = (char *)&v703 - v59;
  MEMORY[0x270FA5388](v58);
  uint64_t v716 = (char *)&v703 - v60;
  v807 = v20;
  uint64_t v808 = v8;
  v799 = v9;
  TupleTypeMetadata2 = v8;
  v809 = v19;
  uint64_t v810 = (uint64_t)v9;
  uint64_t v61 = type metadata accessor for ItemReconciliation();
  uint64_t v788 = *(void *)(v61 - 8);
  uint64_t v62 = MEMORY[0x270FA5388](v61);
  v770 = (void (*)(uint64_t, uint64_t))((char *)&v703 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  uint64_t v712 = (char *)&v703 - v65;
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  v769 = (char *)&v703 - v67;
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  v753 = (char *)&v703 - v69;
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  uint64_t v729 = (char *)&v703 - v71;
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  uint64_t v726 = (char *)&v703 - v73;
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  v742 = (char *)&v703 - v75;
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  v768 = (char *)&v703 - v77;
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  v766 = (char *)&v703 - v79;
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  v751 = (char *)&v703 - v81;
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  uint64_t v721 = (uint64_t)&v703 - v83;
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  v755 = (char *)&v703 - v85;
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  v719 = (char *)&v703 - v87;
  MEMORY[0x270FA5388](v86);
  v746 = (char *)&v703 - v88;
  uint64_t v797 = v89;
  uint64_t v749 = sub_24DCCA3F8();
  uint64_t v750 = *(void *)(v749 - 8);
  uint64_t v90 = MEMORY[0x270FA5388](v749);
  uint64_t v736 = (uint64_t)&v703 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = MEMORY[0x270FA5388](v90);
  unint64_t v728 = (char *)&v703 - v93;
  uint64_t v94 = MEMORY[0x270FA5388](v92);
  v738 = (char *)&v703 - v95;
  uint64_t v96 = MEMORY[0x270FA5388](v94);
  uint64_t v731 = (uint64_t)&v703 - v97;
  MEMORY[0x270FA5388](v96);
  v756 = (char *)&v703 - v98;
  uint64_t v99 = sub_24DCCA3F8();
  uint64_t v794 = *(void *)(v99 - 8);
  uint64_t v795 = v99;
  uint64_t v100 = MEMORY[0x270FA5388](v99);
  uint64_t v102 = (char *)&v703 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = MEMORY[0x270FA5388](v100);
  uint64_t v105 = (char *)&v703 - v104;
  uint64_t v106 = MEMORY[0x270FA5388](v103);
  v757 = (char *)&v703 - v107;
  uint64_t v108 = MEMORY[0x270FA5388](v106);
  uint64_t v110 = (char *)&v703 - v109;
  uint64_t v111 = MEMORY[0x270FA5388](v108);
  uint64_t v113 = (char *)&v703 - v112;
  uint64_t v114 = MEMORY[0x270FA5388](v111);
  uint64_t v116 = (char *)&v703 - v115;
  uint64_t v117 = MEMORY[0x270FA5388](v114);
  v745 = (char *)&v703 - v118;
  uint64_t v119 = MEMORY[0x270FA5388](v117);
  v758 = (char *)&v703 - v120;
  uint64_t v121 = MEMORY[0x270FA5388](v119);
  uint64_t v123 = (char *)&v703 - v122;
  v814 = (char *)v21;
  v802 = (char *)*((void *)v21 - 1);
  uint64_t v124 = MEMORY[0x270FA5388](v121);
  v767 = (char *)&v703 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = MEMORY[0x270FA5388](v124);
  v782 = (char *)&v703 - v127;
  uint64_t v128 = MEMORY[0x270FA5388](v126);
  v741 = (char *)&v703 - v129;
  uint64_t v130 = MEMORY[0x270FA5388](v128);
  v776 = ((char *)&v703 - v131);
  uint64_t v132 = MEMORY[0x270FA5388](v130);
  v763 = (char *)&v703 - v133;
  uint64_t v134 = MEMORY[0x270FA5388](v132);
  v775 = ((char *)&v703 - v135);
  uint64_t v136 = MEMORY[0x270FA5388](v134);
  uint64_t v138 = (char *)&v703 - v137;
  uint64_t v139 = MEMORY[0x270FA5388](v136);
  v786 = (char *)&v703 - v140;
  uint64_t v141 = MEMORY[0x270FA5388](v139);
  v752 = (char *)&v703 - v142;
  uint64_t v143 = MEMORY[0x270FA5388](v141);
  v759 = (char *)&v703 - v144;
  uint64_t v145 = MEMORY[0x270FA5388](v143);
  uint64_t v730 = (char *)&v703 - v146;
  MEMORY[0x270FA5388](v145);
  v777 = (uint8_t *)&v703 - v147;
  v791 = v20;
  v790 = v19;
  uint64_t v148 = v801;
  v778 = (int *)type metadata accessor for ItemReconciliationHalf();
  if (*((unsigned char *)&v148->isa + v778[14]) == 6) {
    unint64_t v149 = 4096;
  }
  else {
    unint64_t v149 = 69632;
  }
  if (v792 > 0x17)
  {
LABEL_252:
    int v702 = 0;
    uint64_t v701 = 394;
    sub_24DCCA978();
    __break(1u);
    JUMPOUT(0x24D7979B8);
  }
  switch((char)v793)
  {
    case 1:
      unint64_t v793 = v149;
      (*(void (**)(char *, NSObject *, uint64_t))(v794 + 16))(v113, v148, v795);
      long long v169 = (void (**)(NSObject *, char *, char *))v802;
      long long v170 = v814;
      if ((*((unsigned int (**)(char *, uint64_t, char *))v802 + 6))(v113, 1, v814) == 1) {
        goto LABEL_243;
      }
      long long v171 = v775;
      v169[4](v775, v113, v170);
      uint64_t v172 = v797;
      unint64_t v173 = (char *)v148 + *(int *)(v797 + 52);
      uint64_t v175 = v799;
      uint64_t v174 = TupleTypeMetadata2;
      uint64_t v176 = (void *)type metadata accessor for ItemReconciliationHalf();
      uint64_t v177 = *(void *)&v173[*((int *)v176 + 19)];
      uint64_t v178 = v148;
      uint64_t v179 = v788;
      uint64_t v180 = *(int **)(v788 + 16);
      uint64_t v181 = v768;
      uint64_t v794 = v788 + 16;
      v792 = v180;
      ((void (*)(char *, NSObject *, uint64_t))v180)(v768, v178, v172);
      if ((v177 & 4) != 0)
      {
        uint64_t v221 = *(void *)&v181[*(int *)(v172 + 52) + *((int *)v176 + 19)] >> 3;
        uint64_t v795 = *(void *)(v179 + 8);
        ((void (*)(char *, uint64_t))v795)(v181, v172);
        unint64_t v793 = v793 & 0xFFFFFF7FFFFFFFFFLL | ((unint64_t)(v221 & 1) << 39);
      }
      else
      {
        uint64_t v795 = *(void *)(v179 + 8);
        ((void (*)(char *, uint64_t))v795)(v181, v172);
      }
      uint64_t v222 = (char *)v787[4];
      uint64_t v223 = v798;
      uint64_t v224 = (char *)(*(uint64_t (**))(*(void *)v222 + 296))(v171);
      if (v223) {
        goto LABEL_29;
      }
      v786 = v222;
      uint64_t v798 = 0;
      if (v225)
      {
        id v272 = (id)fpfs_current_or_default_log();
        uint64_t v273 = v761;
        sub_24DCC9088();
        os_log_type_t v274 = v753;
        uint64_t v275 = v797;
        uint64_t v276 = (void (*)(char *, char *, uint64_t))v792;
        ((void (*)(char *, NSObject *, uint64_t))v792)(v753, v801, v797);
        v799 = (void (*)(void, void, void))*((void *)v802 + 2);
        v799(v763, v171, v814);
        uint64_t v277 = sub_24DCC9068();
        os_log_type_t v278 = sub_24DCCA128();
        v801 = v277;
        LODWORD(TupleTypeMetadata2) = v278;
        if (os_log_type_enabled(v277, v278))
        {
          uint64_t v279 = swift_slowAlloc();
          unint64_t v280 = v276;
          os_log_t v281 = (void (*)(char *, uint64_t))v795;
          uint64_t v282 = v279;
          uint64_t v796 = swift_slowAlloc();
          v807 = (int *)v796;
          *(_DWORD *)uint64_t v282 = 136446466;
          unint64_t v793 = v282 + 4;
          uint64_t v283 = v755;
          v280(v755, v274, v275);
          v281(v274, v275);
          uint64_t v284 = sub_24DB8E8F4(v275);
          unint64_t v286 = v285;
          v281(v283, v275);
          uint64_t v803 = sub_24D418FB4(v284, v286, (uint64_t *)&v807);
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          *(_WORD *)(v282 + 12) = 2082;
          uint64_t v797 = v282 + 14;
          uint64_t v287 = v752;
          uint64_t v288 = v763;
          uint64_t v289 = v814;
          v799(v752, v763, v814);
          uint64_t v290 = (void (*)(char *, char *))*((void *)v802 + 1);
          v290(v288, v289);
          uint64_t v291 = sub_24DCCAD78();
          unint64_t v293 = v292;
          v290(v287, v289);
          uint64_t v803 = sub_24D418FB4(v291, v293, (uint64_t *)&v807);
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          uint64_t v294 = v801;
          _os_log_impl(&dword_24D3D0000, v801, (os_log_type_t)TupleTypeMetadata2, "🚔  cannot propagate update for %{public}s: snapshot version not found for %{public}s", (uint8_t *)v282, 0x16u);
          uint64_t v295 = v796;
          swift_arrayDestroy();
          MEMORY[0x25332B030](v295, -1, -1);
          MEMORY[0x25332B030](v282, -1, -1);

          (*(void (**)(char *, uint64_t))(v765 + 8))(v761, v764);
          return ((uint64_t (*)(NSObject *, char *))v290)(v775, v289);
        }
        else
        {
          uint64_t v337 = (void (*)(char *, char *))*((void *)v802 + 1);
          uint64_t v338 = v814;
          v337(v763, v814);
          ((void (*)(char *, uint64_t))v795)(v274, v275);

          (*(void (**)(char *, uint64_t))(v765 + 8))(v273, v764);
          return ((uint64_t (*)(NSObject *, char *))v337)(v171, v338);
        }
      }
      uint64_t v206 = v224;
      if ((v762 & 0x10) != 0)
      {
        v782 = v224;
        if (v173[*((int *)v176 + 11)] == 1)
        {
          id v320 = v801;
          uint64_t v321 = 2;
          if ((*((unsigned char *)&v801->isa + v778[10]) & 8) != 0) {
            uint64_t v321 = 134217730;
          }
          uint64_t v322 = v321 | v793;
        }
        else
        {
          uint64_t v360 = (*(uint64_t (**))(*(void *)v787[3] + 304))(v171);
          uint64_t v798 = 0;
          uint64_t v322 = v793 | 0x8000001;
          if ((v361 & 1) == 0)
          {
            if ((v360 & ~v322) != 0) {
              uint64_t v362 = v360;
            }
            else {
              uint64_t v362 = 0;
            }
            v322 |= v362;
          }
          id v320 = v801;
        }
        os_log_t v363 = v742;
        if (v173[*((int *)v176 + 14)] == 6) {
          uint64_t v364 = v322;
        }
        else {
          uint64_t v364 = v322 | 0x20000;
        }
        v807 = v791;
        uint64_t v808 = v174;
        v809 = v790;
        uint64_t v810 = (uint64_t)v175;
        type metadata accessor for Propagation.UpdateItem();
        uint64_t v365 = v797;
        uint64_t v366 = (uint64_t *)((char *)v320 + *(int *)(v797 + 64));
        uint64_t v367 = *v366;
        uint64_t v368 = v366[1];
        id v369 = v774;
        id v370 = v774;
        uint64_t v371 = sub_24D7B47A0((uint64_t)v775, (uint64_t)v782, 16, v369, v367, v368, v364);
        BOOL v372 = sub_24D8903D0();
        ((void (*)(char *, NSObject *, uint64_t))v792)(v363, v320, v365);
        if (v372)
        {
          unint64_t v373 = *(void *)&v363[v778[17] + 16];
          ((void (*)(char *, uint64_t))v795)(v363, v365);
          uint64_t v374 = v796;
          uint64_t v375 = (uint64_t)v783;
          if (v373 >> 60 != 11) {
            goto LABEL_109;
          }
        }
        else
        {
          ((void (*)(char *, uint64_t))v795)(v363, v365);
          uint64_t v374 = v796;
          uint64_t v375 = (uint64_t)v783;
        }
        sub_24D8F94C4(1);
LABEL_109:
        v807 = v791;
        uint64_t v808 = TupleTypeMetadata2;
        v809 = v790;
        uint64_t v810 = (uint64_t)v175;
        type metadata accessor for JobResult();
        sub_24D855694(v374, (uint64_t)v371);
        uint64_t v795 = type metadata accessor for ReconciliationSideMutation();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        v801 = v371;
        uint64_t v382 = v375 + *(int *)(TupleTypeMetadata2 + 48);
        v799 = (void (*)(void, void, void))*((void *)v802 + 2);
        uint64_t v383 = v814;
        v799(v375, v775, v814);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v382 = 0;
        *(void *)(v382 + 8) = 0;
        *(unsigned char *)(v382 + 16) = 2;
        swift_storeEnumTagMultiPayload();
        uint64_t v384 = v784;
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v374, v375);
        uint64_t v797 = *(void *)(v789 + 8);
        ((void (*)(uint64_t, uint64_t))v797)(v375, v384);
        uint64_t v385 = (void *)(v375 + *(int *)(TupleTypeMetadata2 + 48));
        uint64_t v386 = (uint64_t)v775;
        v799(v375, v775, v383);
        swift_storeEnumTagMultiPayload();
        *uint64_t v385 = 65560;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v796, v375);
        swift_release();
        ((void (*)(uint64_t, uint64_t))v797)(v375, v384);
        uint64_t v335 = (uint64_t (*)(uint8_t *, char *))*((void *)v802 + 1);
        uint64_t v336 = (uint8_t *)v386;
LABEL_230:
        long long v462 = v383;
        return v335(v336, v462);
      }
      if ((v762 & 0x10000000000) != 0)
      {
        uint64_t v232 = v737;
        (*(void (**)(NSObject *, uint64_t))(*(void *)v786 + 240))(v171, 1);
        v782 = v206;
        uint64_t v798 = 0;
        uint64_t v358 = v744;
        uint64_t v359 = v747;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v744 + 48))(v232, 1, v747) == 1)
        {
          (*(void (**)(char *, uint64_t))(v718 + 8))(v232, v735);
        }
        else
        {
          uint64_t v544 = v232;
          uint64_t v232 = v724;
          (*(void (**)(char *, char *, uint64_t))(v358 + 32))(v724, v544, v359);
          uint64_t WitnessTable = swift_getWitnessTable();
          char v546 = sub_24D98BCC4(v359, WitnessTable);
          uint64_t v547 = *((char *)&v801->isa + *(int *)(v797 + 56));
          if (v547 == 4 || qword_24DCDC008[v546] != qword_24DCDC008[v547])
          {
            v807 = v791;
            uint64_t v808 = v174;
            v809 = v790;
            uint64_t v810 = (uint64_t)v175;
            type metadata accessor for JobResult();
            uint64_t v551 = *(int *)(swift_getTupleTypeMetadata2() + 48);
            uint64_t v552 = *((void *)v802 + 2);
            uint64_t v797 = (uint64_t)(v802 + 16);
            v801 = v552;
            uint64_t v553 = v171;
            uint64_t v554 = (uint64_t)v783;
            uint64_t v555 = (int *)v814;
            ((void (*)(char *, NSObject *, char *))v552)(v783, v553, v814);
            swift_storeEnumTagMultiPayload();
            *(unsigned char *)(v554 + v551) = sub_24D98BCC4(v747, WitnessTable);
            uint64_t v556 = v784;
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v796, v554);
            uint64_t v557 = (*(uint64_t (**)(uint64_t, uint64_t))(v789 + 8))(v554, v556);
            MEMORY[0x270FA5388](v557);
            qmemcpy(&v703 - 10, " item destinationItemID baseVersion fields version domainVersion ", 65);
            BYTE1(v701) = 0;
            v807 = v555;
            uint64_t v808 = v735;
            v809 = v773;
            uint64_t v558 = v174;
            uint64_t v559 = (int *)swift_getAssociatedTypeWitness();
            uint64_t v560 = swift_getAssociatedTypeWitness();
            uint64_t v561 = swift_getAssociatedConformanceWitness();
            uint64_t v796 = v561;
            uint64_t v562 = swift_getAssociatedConformanceWitness();
            uint64_t v803 = (uint64_t)v559;
            uint64_t v804 = v560;
            v805 = v561;
            uint64_t v806 = v562;
            type metadata accessor for FileItemVersion();
            uint64_t v810 = sub_24DCCA3F8();
            v811 = &type metadata for Fields;
            uint64_t v812 = MEMORY[0x263F8D9D0];
            uint64_t v813 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
            uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
            uint64_t v564 = v732;
            unsigned int v565 = &v732[TupleTypeMetadata[12]];
            v566 = &v732[TupleTypeMetadata[16]];
            uint64_t v567 = &v732[TupleTypeMetadata[20]];
            uint64_t v568 = TupleTypeMetadata[24];
            uint64_t v794 = TupleTypeMetadata[28];
            uint64_t v795 = v568;
            unint64_t v793 = TupleTypeMetadata[32];
            ((void (*)(char *, NSObject *, int *))v801)(v732, v775, v555);
            uint64_t v569 = v744;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v744 + 56))(v565, 1, 1, v747);
            (*((void (**)(char *, uint64_t, uint64_t, os_log_t))isa + 7))(v566, 1, 1, v780);
            v807 = v559;
            uint64_t v808 = v560;
            v809 = v796;
            uint64_t v810 = v562;
            uint64_t v570 = type metadata accessor for FileItemVersion();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v570 - 8) + 56))(v567, 1, 1, v570);
            *(void *)&v564[v795] = v762;
            *(void *)&v564[v794] = v782;
            id v571 = v774;
            *(void *)&v564[v793] = v774;
            v807 = v791;
            uint64_t v808 = v558;
            v809 = v790;
            uint64_t v810 = (uint64_t)v799;
            type metadata accessor for DirectionalTestingOperation();
            swift_storeEnumTagMultiPayload();
            uint64_t v572 = v734;
            swift_storeEnumTagMultiPayload();
            int v573 = *(void (**)(char *, void))(*v787 + 488);
            id v574 = v571;
            v573(v564, 0);
            (*(void (**)(char *, uint64_t))(v733 + 8))(v564, v572);
            (*(void (**)(char *, uint64_t))(v569 + 8))(v724, v747);
LABEL_190:
            uint64_t v335 = (uint64_t (*)(uint8_t *, char *))*((void *)v802 + 1);
            uint64_t v336 = (uint8_t *)v775;
LABEL_132:
            long long v462 = v814;
            return v335(v336, v462);
          }
          (*(void (**)(char *, uint64_t))(v744 + 8))(v724, v747);
        }
        id v399 = (int *)v787[5];
        BOOL v548 = sub_24D8903D0();
        uint64_t v206 = v782;
        if (!v548)
        {
          uint64_t v262 = v762;
          goto LABEL_49;
        }
        int v549 = *((unsigned __int8 *)&v801->isa + *(int *)(v797 + 56));
        if (v549 != 2)
        {
          uint64_t v262 = v762;
          if (v549 != 4) {
            goto LABEL_49;
          }
          __break(1u);
          goto LABEL_173;
        }
        uint64_t v633 = v772;
        v634 = v713;
        uint64_t v635 = v773;
        (*(void (**)(char *, char *, uint64_t))(v772 + 16))(v713, v173, v773);
        if ((*((unsigned int (**)(char *, uint64_t, os_log_t))isa + 6))(v634, 1, v780) == 1)
        {
          (*(void (**)(char *, uint64_t))(v633 + 8))(v634, v635);
          uint64_t v262 = v762;
LABEL_240:
          uint64_t v206 = v782;
          goto LABEL_49;
        }
        Class v636 = isa;
        uint64_t v637 = v707;
        uint64_t v638 = v634;
        os_log_t v639 = v780;
        (*((void (**)(char *, char *, os_log_t))isa + 4))(v707, v638, v780);
        v640 = v706;
        uint64_t v641 = v798;
        (*(void (**)(char *, uint64_t))(*(void *)v399 + 240))(v637, 1);
        if (v641)
        {
          (*((void (**)(char *, os_log_t))v636 + 1))(v637, v639);
LABEL_29:
          uint64_t v226 = (uint64_t (*)(NSObject *, char *))*((void *)v802 + 1);
          uint64_t v227 = v171;
          return v226(v227, v814);
        }
        uint64_t v679 = v795;
        uint64_t v798 = 0;
        uint64_t v680 = v723;
        uint64_t v681 = *(void *)(v723 - 8);
        int v682 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v681 + 48))(v640, 1, v723);
        uint64_t v795 = v679;
        if (v682 == 1)
        {
          (*(void (**)(char *, uint64_t))(v714 + 8))(v640, v715);
        }
        else
        {
          uint64_t v699 = swift_getWitnessTable();
          char v700 = sub_24D98BC10(v680, v699);
          (*(void (**)(char *, uint64_t))(v681 + 8))(v640, v680);
          if (v700)
          {
            uint64_t v262 = v762 | 8;
            (*((void (**)(char *, os_log_t))isa + 1))(v707, v780);
LABEL_239:
            uint64_t v175 = v799;
            uint64_t v174 = TupleTypeMetadata2;
            goto LABEL_240;
          }
        }
        (*((void (**)(char *, os_log_t))isa + 1))(v707, v780);
        uint64_t v262 = v762;
        goto LABEL_239;
      }
      uint64_t v262 = v762;
LABEL_49:
      uint64_t v263 = v787[5];
      BOOL v264 = sub_24D8903D0();
      uint64_t v265 = v743;
      v782 = v206;
      uint64_t v772 = v263;
      if (v264)
      {
        if ((v262 & 0x4000) != 0 && *((unsigned char *)&v801->isa + v778[13])) {
          v262 &= ~0x4000uLL;
        }
        uint64_t v266 = v790;
LABEL_150:
        v807 = v791;
        uint64_t v808 = v174;
        v809 = v266;
        uint64_t v810 = (uint64_t)v175;
        uint64_t v506 = (uint8_t *)type metadata accessor for JobResult();
        uint64_t v507 = (uint8_t *)type metadata accessor for ReconciliationSideMutation();
        uint64_t v508 = swift_getTupleTypeMetadata2();
        uint64_t v509 = (uint64_t)v783;
        uint64_t v510 = &v783[*(int *)(v508 + 48)];
        uint64_t v511 = v802 + 16;
        uint64_t v512 = (uint64_t)v775;
        v779 = (char **)*((void *)v802 + 2);
        ((void (*)(char *, NSObject *, char *))v779)(v783, v775, v814);
        swift_storeEnumTagMultiPayload();
        *(void *)uint64_t v510 = v762;
        v776 = v507;
        swift_storeEnumTagMultiPayload();
        uint64_t v513 = v784;
        swift_storeEnumTagMultiPayload();
        v777 = v506;
        sub_24D907568(v796, v509);
        uint64_t v514 = v789 + 8;
        uint64_t v515 = *(void (**)(uint64_t, uint64_t))(v789 + 8);
        v515(v509, v513);
        uint64_t v789 = v514;
        if (v262)
        {
          v771 = v511;
          if ((v262 & 8) == 0) {
            goto LABEL_157;
          }
          int v516 = *((unsigned __int8 *)&v801->isa + *(int *)(v797 + 56));
          if (v516 == 1) {
            goto LABEL_157;
          }
          if (v516 != 4)
          {
            uint64_t v517 = v793;
            if (*(unint64_t *)((char *)&v801[2].isa + v778[17]) >> 60 != 11) {
              uint64_t v517 = v793 | 0x8000000;
            }
            unint64_t v793 = v517;
LABEL_157:
            v807 = v791;
            uint64_t v808 = TupleTypeMetadata2;
            v809 = v790;
            uint64_t v810 = (uint64_t)v799;
            type metadata accessor for Propagation.UpdateItem();
            uint64_t v518 = v797;
            uint64_t v519 = v801;
            uint64_t v520 = (uint64_t *)((char *)v801 + *(int *)(v797 + 64));
            uint64_t v521 = *v520;
            uint64_t v522 = v520[1];
            id v523 = v774;
            id v524 = v774;
            uint64_t v525 = sub_24D7B47A0((uint64_t)v775, (uint64_t)v782, v262, v523, v521, v522, v793);
            BOOL v526 = sub_24D8903D0();
            uint64_t v527 = v729;
            ((void (*)(char *, NSObject *, uint64_t))v792)(v729, v519, v518);
            v770 = v515;
            if (v526)
            {
              unint64_t v528 = *(void *)&v527[v778[17] + 16];
              ((void (*)(char *, uint64_t))v795)(v527, v518);
              uint64_t v529 = (uint64_t (**)(uint64_t, char *))v802;
              if (v528 >> 60 != 11) {
                goto LABEL_165;
              }
            }
            else
            {
              ((void (*)(char *, uint64_t))v795)(v527, v518);
              uint64_t v529 = (uint64_t (**)(uint64_t, char *))v802;
            }
            sub_24D8F94C4(1);
LABEL_165:
            uint64_t v537 = v796;
            sub_24D855694(v796, v525);
            uint64_t v538 = *(int *)(v508 + 48);
            uint64_t v539 = (uint64_t)v783;
            char v540 = &v783[v538];
            uint64_t v541 = (uint64_t)v775;
            v542 = v814;
            ((void (*)(char *, NSObject *, char *))v779)(v783, v775, v814);
            swift_storeEnumTagMultiPayload();
            *(void *)char v540 = 0;
            *((void *)v540 + 1) = 0;
            v540[16] = 2;
            swift_storeEnumTagMultiPayload();
            uint64_t v543 = v784;
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v537, v539);
            swift_release();
            v770(v539, v543);
            return v529[1](v541, v542);
          }
          goto LABEL_250;
        }
        unint64_t v530 = v722;
        uint64_t v531 = v798;
        (*(void (**)(uint64_t, uint64_t))(*(void *)v786 + 240))(v512, 1);
        long long v171 = v512;
        if (!v531)
        {
          uint64_t v798 = 0;
          uint64_t v532 = v744;
          uint64_t v533 = v747;
          int v534 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v744 + 48))(v530, 1, v747);
          v771 = v511;
          if (v534 == 1)
          {
            uint64_t v535 = v735;
            uint64_t v536 = (*(uint64_t (**)(char *, uint64_t))(v718 + 8))(v530, v735);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v532 + 32))(v711, v530, v533);
            uint64_t v599 = (uint64_t)v783;
            v600 = &v783[*(int *)(v508 + 48)];
            v770 = v515;
            ((void (*)(char *, NSObject *, char *))v779)(v783, v171, v814);
            swift_storeEnumTagMultiPayload();
            uint64_t v601 = (int *)swift_getAssociatedTypeWitness();
            uint64_t v602 = swift_getAssociatedTypeWitness();
            uint64_t v603 = swift_getAssociatedConformanceWitness();
            uint64_t v604 = swift_getAssociatedConformanceWitness();
            v807 = v601;
            uint64_t v808 = v602;
            v809 = v603;
            uint64_t v810 = v604;
            uint64_t v605 = type metadata accessor for FileItemVersion();
            TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
            uint64_t v607 = *(int *)(TupleTypeMetadata3 + 48);
            uint64_t v608 = *(int *)(TupleTypeMetadata3 + 64);
            uint64_t v609 = v747;
            v610 = v711;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v605 - 8) + 16))(v600, &v711[*(int *)(v747 + 40)], v605);
            v600[v607] = 1;
            v600[v608] = 1;
            swift_storeEnumTagMultiPayload();
            uint64_t v611 = v784;
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v796, v599);
            v770(v599, v611);
            uint64_t v536 = (*(uint64_t (**)(char *, uint64_t))(v532 + 8))(v610, v609);
            uint64_t v535 = v735;
          }
          MEMORY[0x270FA5388](v536);
          qmemcpy(&v703 - 10, " item destinationItemID baseVersion fields version domainVersion ", 65);
          BYTE1(v701) = 0;
          v807 = (int *)v814;
          uint64_t v808 = v535;
          v809 = v773;
          uint64_t v613 = v799;
          uint64_t v612 = TupleTypeMetadata2;
          v614 = (int *)swift_getAssociatedTypeWitness();
          uint64_t v615 = swift_getAssociatedTypeWitness();
          uint64_t v616 = swift_getAssociatedConformanceWitness();
          v801 = v616;
          uint64_t v617 = swift_getAssociatedConformanceWitness();
          uint64_t v803 = (uint64_t)v614;
          uint64_t v804 = v615;
          v805 = v616;
          uint64_t v806 = v617;
          type metadata accessor for FileItemVersion();
          uint64_t v810 = sub_24DCCA3F8();
          v811 = &type metadata for Fields;
          uint64_t v812 = MEMORY[0x263F8D9D0];
          uint64_t v813 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
          v618 = (int *)swift_getTupleTypeMetadata();
          v619 = v732;
          uint64_t v620 = &v732[v618[12]];
          v621 = &v732[v618[16]];
          uint64_t v622 = &v732[v618[20]];
          uint64_t v623 = v618[24];
          uint64_t v796 = v618[28];
          uint64_t v797 = v623;
          uint64_t v795 = v618[32];
          ((void (*)(char *, NSObject *, char *))v779)(v732, v775, v814);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v744 + 56))(v620, 1, 1, v747);
          (*((void (**)(char *, uint64_t, uint64_t, os_log_t))isa + 7))(v621, 1, 1, v780);
          v807 = v614;
          uint64_t v808 = v615;
          v809 = v801;
          uint64_t v810 = v617;
          uint64_t v624 = type metadata accessor for FileItemVersion();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v624 - 8) + 56))(v622, 1, 1, v624);
          *(void *)&v619[v797] = v762;
          *(void *)&v619[v796] = v782;
          id v625 = v774;
          *(void *)&v619[v795] = v774;
          v807 = v791;
          uint64_t v808 = v612;
          v809 = v790;
          uint64_t v810 = (uint64_t)v613;
          type metadata accessor for DirectionalTestingOperation();
          swift_storeEnumTagMultiPayload();
          uint64_t v626 = v734;
          swift_storeEnumTagMultiPayload();
          v627 = *(void (**)(char *, void))(*v787 + 488);
          id v628 = v625;
          v627(v619, 0);
          (*(void (**)(char *, uint64_t))(v733 + 8))(v619, v626);
          goto LABEL_190;
        }
        goto LABEL_29;
      }
      if (qword_26B190338 != -1) {
        swift_once();
      }
      if ((qword_26B1A22B8 & v762) != 0)
      {
        id v387 = (id)fpfs_current_or_default_log();
        sub_24DCC9088();
        uint64_t v388 = sub_24DCC9068();
        os_log_type_t v389 = sub_24DCCA138();
        if (os_log_type_enabled(v388, v389))
        {
          uint64_t v390 = (uint8_t *)swift_slowAlloc();
          uint64_t v391 = (void (*)(void, void, void))swift_slowAlloc();
          v779 = (char **)v262;
          uint64_t v392 = v391;
          v807 = (int *)v391;
          *(_DWORD *)uint64_t v390 = 136446210;
          v777 = v390 + 4;
          uint64_t v393 = sub_24D97C4E0(qword_26B1A22B8 & v762);
          uint64_t v803 = sub_24D418FB4(v393, v394, (uint64_t *)&v807);
          uint64_t v174 = TupleTypeMetadata2;
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24D3D0000, v388, v389, "☢️  file providers don't support setting the bit: %{public}s", v390, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25332B030](v392, -1, -1);
          MEMORY[0x25332B030](v390, -1, -1);

          uint64_t v262 = (uint64_t)v779;
          (*(void (**)(char *, uint64_t))(v765 + 8))(v743, v764);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v765 + 8))(v265, v764);
        }
        BOOL v485 = (qword_26B1A22B8 & v262) == 0;
        uint64_t v175 = v799;
        uint64_t v463 = v262;
        uint64_t v464 = v727;
        uint64_t v465 = v726;
        if (!v485) {
          v463 &= ~qword_26B1A22B8;
        }
      }
      else
      {
        uint64_t v463 = v262;
        uint64_t v464 = v727;
        uint64_t v465 = v726;
      }
      uint64_t v486 = v463;
      if ((v463 & 8) == 0) {
        goto LABEL_149;
      }
      int v487 = *((unsigned __int8 *)&v801->isa + *(int *)(v797 + 56));
      if (v487 == 1) {
        goto LABEL_149;
      }
      if (v487 == 4)
      {
LABEL_251:
        __break(1u);
        goto LABEL_252;
      }
      if (*(unint64_t *)((char *)&v801[2].isa + v778[17]) >> 60 != 11
        || (v173[*((int *)v176 + 13)] | 4) != 4)
      {
LABEL_149:
        uint64_t v266 = v790;
        uint64_t v262 = v463;
        goto LABEL_150;
      }
      id v488 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      long long v489 = v465;
      uint64_t v490 = v797;
      unint64_t v491 = v464;
      int v492 = v465;
      uint64_t v493 = (void (*)(char *, char *, uint64_t))v792;
      ((void (*)(char *, NSObject *, uint64_t))v792)(v489, v801, v797);
      unint64_t v494 = (uint8_t *)sub_24DCC9068();
      os_log_type_t v495 = sub_24DCCA128();
      if (os_log_type_enabled((os_log_t)v494, v495))
      {
        uint64_t v496 = (uint8_t *)swift_slowAlloc();
        v779 = (char **)swift_slowAlloc();
        v807 = (int *)v779;
        v776 = v494;
        v777 = v496;
        *(_DWORD *)uint64_t v496 = 136315138;
        v771 = (char *)(v496 + 4);
        size_t v497 = v755;
        v493(v755, v492, v490);
        uint64_t v498 = v492;
        unint64_t v499 = (void (*)(char *, uint64_t))v795;
        ((void (*)(char *, uint64_t))v795)(v498, v490);
        uint64_t v500 = sub_24DB8E8F4(v490);
        unint64_t v502 = v501;
        v499(v497, v490);
        uint64_t v803 = sub_24D418FB4(v500, v502, (uint64_t *)&v807);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        uint64_t v503 = (uint8_t *)v776;
        unint64_t v504 = v777;
        _os_log_impl(&dword_24D3D0000, v776, v495, "☢️  trying to propagate content from a dataless item %s", v777, 0xCu);
        unsigned int v505 = v779;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v505, -1, -1);
        uint64_t v174 = TupleTypeMetadata2;
        MEMORY[0x25332B030](v504, -1, -1);

        (*(void (**)(char *, uint64_t))(v765 + 8))(v727, v764);
      }
      else
      {
        ((void (*)(char *, uint64_t))v795)(v492, v490);

        (*(void (**)(char *, uint64_t))(v765 + 8))(v491, v764);
      }
      v642 = v814;
      uint64_t v643 = v744;
      v644 = v708;
      uint64_t v645 = (uint64_t)v775;
      uint64_t v646 = v798;
      (*(void (**)(NSObject *, uint64_t))(*(void *)v786 + 240))(v775, 1);
      uint64_t v175 = v799;
      if (!v646)
      {
        uint64_t v798 = 0;
        uint64_t v262 = v486 & 0xFFFFFFFFFFFFFFF7;
        uint64_t v678 = v747;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v643 + 48))(v644, 1, v747) == 1)
        {
          (*(void (**)(char *, uint64_t))(v718 + 8))(v644, v735);
          uint64_t v266 = v790;
        }
        else
        {
          uint64_t v683 = *(void (**)(char *, char *, uint64_t))(v643 + 32);
          v779 = (char **)(v486 & 0xFFFFFFFFFFFFFFF7);
          uint64_t v684 = v703;
          v683(v703, v644, v678);
          v807 = v791;
          uint64_t v808 = v174;
          uint64_t v266 = v790;
          v809 = v790;
          uint64_t v810 = (uint64_t)v175;
          v777 = (uint8_t *)type metadata accessor for JobResult();
          v776 = type metadata accessor for ReconciliationSideMutation();
          uint64_t v685 = swift_getTupleTypeMetadata2();
          uint64_t v686 = (uint64_t)v783;
          v687 = &v783[*(int *)(v685 + 48)];
          (*((void (**)(char *, uint64_t, char *))v802 + 2))(v783, v645, v814);
          swift_storeEnumTagMultiPayload();
          v688 = (int *)swift_getAssociatedTypeWitness();
          uint64_t v689 = swift_getAssociatedTypeWitness();
          uint64_t v690 = swift_getAssociatedConformanceWitness();
          uint64_t v691 = swift_getAssociatedConformanceWitness();
          v807 = v688;
          uint64_t v808 = v689;
          v809 = v690;
          uint64_t v810 = v691;
          uint64_t v692 = type metadata accessor for FileItemVersion();
          uint64_t v693 = swift_getTupleTypeMetadata3();
          uint64_t v694 = *(int *)(v693 + 48);
          uint64_t v695 = *(int *)(v693 + 64);
          uint64_t v696 = v747;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v692 - 8) + 16))(v687, &v684[*(int *)(v747 + 40)], v692);
          v687[v694] = 1;
          v687[v695] = 0;
          uint64_t v175 = v799;
          uint64_t v174 = TupleTypeMetadata2;
          swift_storeEnumTagMultiPayload();
          uint64_t v697 = v784;
          swift_storeEnumTagMultiPayload();
          sub_24D907568(v796, v686);
          (*(void (**)(uint64_t, uint64_t))(v789 + 8))(v686, v697);
          uint64_t v698 = v684;
          uint64_t v262 = (uint64_t)v779;
          (*(void (**)(char *, uint64_t))(v744 + 8))(v698, v696);
        }
        goto LABEL_150;
      }
      return (*((uint64_t (**)(uint64_t, char *))v802 + 1))(v645, v642);
    case 2:
      (*(void (**)(char *, NSObject *, uint64_t))(v794 + 16))(v116, v148, v795);
      uint64_t v182 = (void (**)(char *, char *, char *))v802;
      uint64_t v183 = v814;
      if ((*((unsigned int (**)(char *, uint64_t, char *))v802 + 6))(v116, 1, v814) == 1) {
        goto LABEL_244;
      }
      v182[4](v786, v116, v183);
      uint64_t v184 = v797;
      uint64_t v185 = v771;
      (*(void (**)(char *, char *, uint64_t))(v772 + 16))(v771, (char *)v148 + *(int *)(v797 + 52), v773);
      Class v186 = isa;
      os_log_t v187 = v780;
      int v188 = (*((uint64_t (**)(char *, uint64_t, os_log_t))isa + 6))(v185, 1, v780);
      uint64_t v189 = v799;
      uint64_t v190 = v778;
      if (v188 == 1) {
        goto LABEL_245;
      }
      (*((void (**)(char **, char *, os_log_t))v186 + 4))(v779, v185, v187);
      uint64_t v191 = *(uint64_t *)((char *)&v148->isa + v190[9]);
      uint64_t v192 = v788;
      uint64_t v193 = v766;
      (*(void (**)(char *, NSObject *, uint64_t))(v788 + 16))(v766, v148, v184);
      if ((v191 & 0x10) != 0)
      {
        uint64_t v194 = 4096;
        if ((v193[v190[9]] & 1) == 0) {
          uint64_t v194 = 0x2000000;
        }
      }
      else
      {
        uint64_t v194 = 4096;
      }
      uint64_t v794 = v194;
      (*(void (**)(char *, uint64_t))(v192 + 8))(v193, v184);
      uint64_t v795 = (uint64_t)v182[2];
      ((void (*)(char *, char *, char *))v795)(v138, v786, v814);
      unint64_t v243 = (uint64_t *)((char *)v148 + *(int *)(v184 + 64));
      uint64_t v245 = *v243;
      uint64_t v244 = v243[1];
      double v246 = v791;
      uint64_t v247 = TupleTypeMetadata2;
      v807 = v791;
      uint64_t v808 = TupleTypeMetadata2;
      uint64_t v248 = v790;
      v809 = v790;
      uint64_t v810 = (uint64_t)v189;
      uint64_t v249 = type metadata accessor for JobResult();
      v807 = v246;
      uint64_t v808 = v247;
      v809 = v248;
      uint64_t v810 = (uint64_t)v189;
      type metadata accessor for Propagation.DeleteItem();
      swift_allocObject();
      id v250 = v774;
      id v251 = v774;
      uint64_t v252 = sub_24D7B4074((uint64_t)v138, v250, v245, v244, v794);
      v801 = *((void *)v802 + 1);
      v802 += 8;
      uint64_t v253 = v814;
      ((void (*)(char *, char *))v801)(v138, v814);
      uint64_t v797 = v249;
      sub_24D855694(v796, v252);
      swift_release();
      TupleTypeMetadata2 = type metadata accessor for ReconciliationSideMutation();
      uint64_t v254 = swift_getTupleTypeMetadata2();
      uint64_t v255 = (uint64_t)v783;
      double v256 = &v783[*(int *)(v254 + 48)];
      ((void (*)(char *, char *, char *))v795)(v783, v786, v253);
      swift_storeEnumTagMultiPayload();
      *(void *)double v256 = 0;
      *((void *)v256 + 1) = 0;
      v256[16] = 2;
      swift_storeEnumTagMultiPayload();
      uint64_t v257 = v784;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v796, v255);
      uint64_t v258 = *(void (**)(uint64_t, uint64_t))(v789 + 8);
      v258(v255, v257);
      Class v259 = isa;
      uint64_t v260 = v779;
      os_log_t v261 = v780;
      (*((void (**)(uint64_t, char **, os_log_t))isa + 2))(v255, v779, v780);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v796, v255);
      v258(v255, v257);
      (*((void (**)(char **, os_log_t))v259 + 1))(v260, v261);
      return ((uint64_t (*)(char *, char *))v801)(v786, v814);
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      goto LABEL_252;
    case 6:
      unint64_t v793 = v149;
      (*(void (**)(char *, NSObject *, uint64_t))(v794 + 16))(v105, v148, v795);
      uint64_t v159 = (void (**)(char *, char *, char *))v802;
      int v160 = v814;
      if ((*((unsigned int (**)(char *, uint64_t, char *))v802 + 6))(v105, 1, v814) == 1) {
        goto LABEL_242;
      }
      v159[4](v782, v105, v160);
      BOOL v161 = sub_24D8903D0();
      uint64_t v162 = v799;
      uint64_t v163 = TupleTypeMetadata2;
      uint64_t v164 = v788;
      unint64_t v165 = (char *)v770;
      if (v161) {
        goto LABEL_71;
      }
      uint64_t v166 = v797;
      uint64_t v167 = (char *)v148 + *(int *)(v797 + 52);
      int v168 = v167[*(int *)(type metadata accessor for ItemReconciliationHalf() + 44)];
      if (v168 == 3)
      {
        (*(void (**)(char *, NSObject *, uint64_t))(v164 + 16))(v165, v148, v166);
      }
      else
      {
        (*(void (**)(char *, NSObject *, uint64_t))(v164 + 16))(v165, v148, v166);
        if (!v168)
        {
          (*(void (**)(char *, uint64_t))(v164 + 8))(v165, v166);
          uint64_t v162 = v799;
          goto LABEL_70;
        }
      }
      int v269 = v165[v778[13]];
      (*(void (**)(char *, uint64_t))(v164 + 8))(v165, v166);
      uint64_t v162 = v799;
      if (v269 != 3) {
        goto LABEL_71;
      }
LABEL_70:
      v793 |= 1uLL;
LABEL_71:
      v807 = v791;
      uint64_t v808 = v163;
      v809 = v790;
      uint64_t v810 = (uint64_t)v162;
      uint64_t v323 = type metadata accessor for JobResult();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v324 = swift_getTupleTypeMetadata2();
      uint64_t v325 = (uint64_t)v783;
      uint64_t v326 = &v783[*(int *)(v324 + 48)];
      v327 = v159[2];
      v327(v783, v782, v814);
      swift_storeEnumTagMultiPayload();
      *uint64_t v326 = 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v328 = v784;
      swift_storeEnumTagMultiPayload();
      uint64_t v795 = v323;
      sub_24D907568(v796, v325);
      uint64_t v329 = v799;
      uint64_t v330 = v789 + 8;
      uint64_t v331 = *(void (**)(uint64_t, uint64_t))(v789 + 8);
      v331(v325, v328);
      if ((v793 & 0x10000) != 0)
      {
        type metadata accessor for ReconciliationSideMutation();
        uint64_t v789 = v330;
        unint64_t v332 = (unsigned char *)(v325 + *(int *)(swift_getTupleTypeMetadata2() + 48));
        v327((char *)v325, v782, v814);
        swift_storeEnumTagMultiPayload();
        *unint64_t v332 = 3;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_24D907568(v796, v325);
        v331(v325, v328);
      }
      v807 = v791;
      uint64_t v808 = TupleTypeMetadata2;
      v809 = v790;
      uint64_t v810 = (uint64_t)v329;
      type metadata accessor for Ingestion.FetchChildrenMetadata();
      uint64_t v333 = (uint8_t *)v782;
      sub_24DC09730((uint64_t)v782, *(uint64_t *)((char *)&v801->isa + *(int *)(v797 + 64)), *(uint64_t *)((char *)&v801[1].isa + *(int *)(v797 + 64)), v793);
      uint64_t v334 = sub_24D983A98(0x2000);
      swift_retain();
      swift_release();
      sub_24D85246C(v796, v334);
      swift_release();
      uint64_t v335 = (uint64_t (*)(uint8_t *, char *))*((void *)v802 + 1);
      uint64_t v336 = v333;
      goto LABEL_132;
    case 12:
      (*(void (**)(char *, NSObject *, uint64_t))(v794 + 16))(v102, v148, v795);
      char v207 = (void (**)(char *, char *, char *))v802;
      uint64_t v208 = v814;
      if ((*((unsigned int (**)(char *, uint64_t, char *))v802 + 6))(v102, 1, v814) == 1) {
        goto LABEL_247;
      }
      uint64_t v209 = (uint64_t)v767;
      v207[4](v767, v102, v208);
      BOOL v210 = sub_24DB86F3C(v797);
      uint64_t v211 = 32;
      unsigned __int8 v212 = v791;
      v807 = v791;
      uint64_t v808 = TupleTypeMetadata2;
      if (v210) {
        uint64_t v211 = 128;
      }
      uint64_t v795 = v211 | v149;
      uint64_t v213 = v790;
      v809 = v790;
      uint64_t v810 = (uint64_t)v799;
      type metadata accessor for JobResult();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v214 = swift_getTupleTypeMetadata2();
      uint64_t v215 = v208;
      uint64_t v216 = (uint64_t)v783;
      uint64_t v217 = &v783[*(int *)(v214 + 48)];
      v207[2](v783, (char *)v209, v215);
      swift_storeEnumTagMultiPayload();
      *(void *)uint64_t v217 = 0;
      *((void *)v217 + 1) = 0;
      v217[16] = 2;
      swift_storeEnumTagMultiPayload();
      uint64_t v218 = v784;
      swift_storeEnumTagMultiPayload();
      uint64_t v219 = v796;
      sub_24D907568(v796, v216);
      (*(void (**)(uint64_t, uint64_t))(v789 + 8))(v216, v218);
      v807 = v212;
      uint64_t v808 = TupleTypeMetadata2;
      v809 = v213;
      uint64_t v810 = (uint64_t)v799;
      type metadata accessor for Ingestion.DeleteRejectedItemInTree();
      uint64_t v220 = sub_24DC09A04(v209, *(uint64_t *)((char *)&v801->isa + *(int *)(v797 + 64)), *(uint64_t *)((char *)&v801[1].isa + *(int *)(v797 + 64)), v795);
      sub_24D85246C(v219, v220);
      swift_release();
      return ((uint64_t (*)(uint64_t, char *))v207[1])(v209, v814);
    case 23:
      unint64_t v793 = v149;
      (*(void (**)(char *, NSObject *, uint64_t))(v794 + 16))(v110, v148, v795);
      uint64_t v195 = v802;
      uint64_t v196 = v814;
      v782 = (char *)*((void *)v802 + 6);
      if (((unsigned int (*)(char *, uint64_t, char *))v782)(v110, 1, v814) == 1) {
        goto LABEL_246;
      }
      uint64_t v197 = v148;
      int v198 = v776;
      v779 = (char **)*((void *)v195 + 4);
      ((void (*)(NSObject *, char *, char *))v779)(v776, v110, v196);
      uint64_t v199 = v797;
      uint64_t v200 = (char *)v197 + *(int *)(v797 + 52);
      uint64_t v201 = type metadata accessor for ItemReconciliationHalf();
      uint64_t v202 = *(int *)(v201 + 76);
      v786 = v200;
      uint64_t v203 = *(void *)&v200[v202];
      uint64_t v204 = v788;
      uint64_t v205 = v769;
      (*(void (**)(char *, NSObject *, uint64_t))(v788 + 16))(v769, v197, v199);
      v792 = (int *)v201;
      if ((v203 & 4) != 0)
      {
        uint64_t v228 = v199;
        uint64_t v229 = *(void *)&v205[*(int *)(v199 + 52) + *(int *)(v201 + 76)] >> 3;
        uint64_t v206 = *(char **)(v204 + 8);
        ((void (*)(char *, uint64_t))v206)(v205, v228);
        unint64_t v793 = v793 & 0xFFFFFF7FFFFFFFFFLL | ((unint64_t)(v229 & 1) << 39);
      }
      else
      {
        uint64_t v206 = *(char **)(v204 + 8);
        ((void (*)(char *, uint64_t))v206)(v205, v199);
      }
      uint64_t v176 = v787;
      uint64_t v230 = v787[4];
      BOOL v231 = sub_24D8903D0();
      uint64_t v232 = v814;
      if (v231)
      {
        uint64_t v233 = v798;
        uint64_t v175 = v799;
        long long v171 = v801;
        unint64_t v173 = v802;
        uint64_t v174 = TupleTypeMetadata2;
        uint64_t v234 = v786;
LABEL_34:
        int v235 = v234[v792[11]];
        uint64_t v798 = v233;
        if (v235 || *((unsigned char *)&v171->isa + v778[13]) != 2) {
          goto LABEL_129;
        }
        uint64_t v236 = v772;
        uint64_t v237 = v748;
        uint64_t v238 = v773;
        (*(void (**)(char *, char *, uint64_t))(v772 + 16))(v748, v234, v773);
        Class v239 = isa;
        os_log_t v240 = v780;
        if ((*((unsigned int (**)(char *, uint64_t, os_log_t))isa + 6))(v237, 1, v780) == 1)
        {
          (*(void (**)(char *, uint64_t))(v236 + 8))(v237, v238);
          goto LABEL_128;
        }
        id v353 = v740;
        (*((void (**)(char *, char *, os_log_t))v239 + 4))(v740, v237, v240);
        os_log_t v354 = *(void (**)(char *, uint64_t))(*(void *)v176[5] + 240);
        os_log_type_t v355 = v739;
        uint64_t v356 = v798;
        v354(v353, 1);
        if (!v356)
        {
          uint64_t v798 = 0;
          uint64_t v395 = v723;
          uint64_t v396 = *(void *)(v723 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v396 + 48))(v355, 1, v723) == 1)
          {
            (*(void (**)(char *, uint64_t))(v714 + 8))(v355, v715);
            Class v397 = isa;
            os_log_t v398 = v780;
          }
          else
          {
            uint64_t v448 = swift_getWitnessTable();
            char v449 = sub_24D98BC10(v395, v448);
            (*(void (**)(char *, uint64_t))(v396 + 8))(v355, v395);
            Class v397 = isa;
            os_log_t v398 = v780;
            if ((v449 & 1) == 0)
            {
              v807 = v791;
              uint64_t v808 = v174;
              uint64_t v588 = (uint64_t)v175;
              v809 = v790;
              uint64_t v810 = (uint64_t)v175;
              type metadata accessor for JobResult();
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v589 = swift_getTupleTypeMetadata2();
              uint64_t v590 = (uint64_t)v783;
              unsigned int v591 = &v783[*(int *)(v589 + 48)];
              uint64_t v592 = (void (*)(char *, NSObject *, char *))*((void *)v802 + 2);
              uint64_t v593 = v776;
              v592(v783, v776, v814);
              swift_storeEnumTagMultiPayload();
              uint64_t v594 = *(int *)(v797 + 64);
              *(_WORD *)unsigned int v591 = 768;
              *(_OWORD *)(v591 + 8) = *(_OWORD *)((char *)&v801->isa + v594);
              swift_storeEnumTagMultiPayload();
              uint64_t v595 = v784;
              swift_storeEnumTagMultiPayload();
              sub_24D907568(v796, v590);
              (*(void (**)(uint64_t, uint64_t))(v789 + 8))(v590, v595);
              if ((*((unsigned char *)&v801->isa + v778[10]) & 8) == 0)
              {
                v596 = v732;
                uint64_t v597 = v814;
                v592(v732, v593, v814);
                v807 = v791;
                uint64_t v808 = TupleTypeMetadata2;
                v809 = v790;
                uint64_t v810 = v588;
                type metadata accessor for DirectionalTestingOperation();
                swift_storeEnumTagMultiPayload();
                uint64_t v598 = v734;
                swift_storeEnumTagMultiPayload();
                (*(void (**)(char *, void))(*v787 + 488))(v596, 0);
                (*(void (**)(char *, uint64_t))(v733 + 8))(v596, v598);
                (*((void (**)(char *, os_log_t))isa + 1))(v740, v780);
                return (*((uint64_t (**)(NSObject *, char *))v802 + 1))(v593, v597);
              }
              (*((void (**)(char *, os_log_t))isa + 1))(v740, v780);
              uint64_t v175 = (void (*)(void, void, void))v588;
              uint64_t v174 = TupleTypeMetadata2;
              goto LABEL_128;
            }
          }
          (*((void (**)(char *, os_log_t))v397 + 1))(v353, v398);
LABEL_128:
          unint64_t v173 = v802;
LABEL_129:
          v807 = v791;
          uint64_t v808 = v174;
          v809 = v790;
          uint64_t v810 = (uint64_t)v175;
          uint64_t v450 = type metadata accessor for JobResult();
          type metadata accessor for ReconciliationSideMutation();
          uint64_t v451 = swift_getTupleTypeMetadata2();
          uint64_t v452 = (uint64_t)v783;
          uint64_t v453 = &v783[*(int *)(v451 + 48)];
          long long v454 = (uint8_t *)v776;
          uint64_t v794 = *((void *)v173 + 2);
          ((void (*)(char *, NSObject *, char *))v794)(v783, v776, v814);
          swift_storeEnumTagMultiPayload();
          char *v453 = 1;
          swift_storeEnumTagMultiPayload();
          uint64_t v455 = v784;
          swift_storeEnumTagMultiPayload();
          uint64_t v456 = v796;
          uint64_t v795 = v450;
          sub_24D907568(v796, v452);
          uint64_t v457 = v799;
          uint64_t v458 = v789 + 8;
          long long v459 = *(void (**)(uint64_t, uint64_t))(v789 + 8);
          v459(v452, v455);
          if ((v793 & 0x10000) != 0)
          {
            type metadata accessor for ReconciliationSideMutation();
            uint64_t v789 = v458;
            long long v460 = (unsigned char *)(v452 + *(int *)(swift_getTupleTypeMetadata2() + 48));
            ((void (*)(uint64_t, uint8_t *, char *))v794)(v452, v454, v814);
            swift_storeEnumTagMultiPayload();
            *long long v460 = 3;
            uint64_t v457 = v799;
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v456, v452);
            v459(v452, v455);
          }
          v807 = v791;
          uint64_t v808 = TupleTypeMetadata2;
          v809 = v790;
          uint64_t v810 = (uint64_t)v457;
          type metadata accessor for Ingestion.FetchContent();
          uint64_t v461 = sub_24DC095B8((uint64_t)v454, *(uint64_t *)((char *)&v801->isa + *(int *)(v797 + 64)), *(uint64_t *)((char *)&v801[1].isa + *(int *)(v797 + 64)), v793);
          sub_24D85246C(v456, v461);
          swift_release();
          uint64_t v335 = (uint64_t (*)(uint8_t *, char *))*((void *)v802 + 1);
          uint64_t v336 = v454;
          goto LABEL_132;
        }
        (*((void (**)(char *, os_log_t))v239 + 1))(v353, v240);
        uint64_t v226 = (uint64_t (*)(NSObject *, char *))*((void *)v802 + 1);
        uint64_t v357 = (NSObject **)&v808;
LABEL_182:
        uint64_t v227 = *(v357 - 32);
        return v226(v227, v814);
      }
      int v241 = *((unsigned __int8 *)&v801->isa + *(int *)(v797 + 56));
      if (v241 == 2)
      {
        uint64_t v270 = v757;
        uint64_t v271 = v798;
        (*(void (**))(*(void *)v230 + 280))(v198);
        if (v271) {
          return (*((uint64_t (**)(NSObject *, char *))v802 + 1))(v198, v232);
        }
        uint64_t v798 = 0;
        if (((unsigned int (*)(char *, uint64_t, char *))v782)(v270, 1, v232) == 1)
        {
          (*(void (**)(char *, uint64_t))(v794 + 8))(v270, v795);
          long long v171 = v801;
          unint64_t v173 = v802;
          uint64_t v175 = v799;
          uint64_t v174 = TupleTypeMetadata2;
        }
        else
        {
          uint64_t v376 = (uint64_t)v741;
          ((void (*)(char *, char *, char *))v779)(v741, v270, v232);
          uint64_t v377 = v736;
          uint64_t v378 = v798;
          sub_24D4759C8(v376, v736);
          uint64_t v174 = TupleTypeMetadata2;
          if (v378)
          {
            unint64_t v379 = (void (*)(uint64_t, char *))*((void *)v802 + 1);
            v379(v376, v232);
            return ((uint64_t (*)(NSObject *, char *))v379)(v776, v232);
          }
          id v399 = (int *)v797;
          int v400 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v788 + 48))(v377, 1, v797);
          uint64_t v401 = v377;
          long long v171 = v801;
          unint64_t v173 = v802;
          uint64_t v175 = v799;
          uint64_t v798 = 0;
          if (v400 != 1)
          {
LABEL_173:
            uint64_t v550 = v712;
            (*(void (**)(char *, uint64_t, int *))(v788 + 32))(v712, v401, v399);
            if (!v550[v399[13] + v792[11]]) {
              v793 |= 1uLL;
            }
            ((void (*)(char *, int *))v206)(v550, v399);
            (*((void (**)(char *, char *))v173 + 1))(v741, v232);
            goto LABEL_78;
          }
          uint64_t v402 = v401;
          (*((void (**)(char *, char *))v802 + 1))(v741, v232);
          (*(void (**)(uint64_t, uint64_t))(v750 + 8))(v402, v749);
        }
LABEL_78:
        int v198 = v776;
        uint64_t v234 = v786;
LABEL_79:
        uint64_t v342 = v798;
        uint64_t v343 = (*(uint64_t (**))(*(void *)v176[3] + 304))(v198);
        uint64_t v345 = v198;
        uint64_t v233 = v342;
        if (v342) {
          return (*((uint64_t (**)(NSObject *, char *))v173 + 1))(v345, v232);
        }
        if ((v344 & 1) == 0)
        {
          if ((v343 & ~v793) != 0) {
            uint64_t v346 = v343;
          }
          else {
            uint64_t v346 = 0;
          }
          v793 |= v346;
        }
        goto LABEL_34;
      }
      if (v241 != 4)
      {
        uint64_t v234 = v786;
        int v242 = v786[v792[11]];
        long long v171 = v801;
        unint64_t v173 = v802;
        uint64_t v175 = v799;
        uint64_t v174 = TupleTypeMetadata2;
        if (v242 != 3) {
          v793 |= v242 == 0;
        }
        goto LABEL_79;
      }
      goto LABEL_248;
    default:
      unint64_t v793 = v149;
      v792 = *(int **)(v794 + 16);
      v782 = (char *)(v794 + 16);
      ((void (*)(char *, NSObject *, uint64_t))v792)(v123, v148, v795);
      uint64_t v150 = v802;
      int v151 = v814;
      v786 = (char *)*((void *)v802 + 6);
      if (((unsigned int (*)(char *, uint64_t, char *))v786)(v123, 1, v814) == 1)
      {
        __break(1u);
LABEL_242:
        __break(1u);
LABEL_243:
        __break(1u);
LABEL_244:
        __break(1u);
LABEL_245:
        __break(1u);
LABEL_246:
        __break(1u);
LABEL_247:
        __break(1u);
LABEL_248:
        __break(1u);
      }
      else
      {
        uint64_t v152 = (void (*)(uint8_t *, char *, char *))*((void *)v150 + 4);
        uint64_t v153 = v777;
        v152(v777, v123, v151);
        uint64_t v154 = v787[4];
        uint64_t v155 = v798;
        uint64_t v156 = (char **)(*(uint64_t (**)(uint8_t *))(*(void *)v154 + 296))(v153);
        if (v155) {
          return (*((uint64_t (**)(uint8_t *, char *))v150 + 1))(v153, v151);
        }
        uint64_t v798 = 0;
        if (v157)
        {
          id v296 = (id)fpfs_current_or_default_log();
          uint64_t v297 = v760;
          sub_24DCC9088();
          uint64_t v298 = v788;
          uint64_t v299 = *(void (**)(char *, NSObject *, uint64_t))(v788 + 16);
          uint64_t v300 = v751;
          uint64_t v301 = v797;
          v299(v751, v801, v797);
          unint64_t v302 = v759;
          v799 = (void (*)(void, void, void))*((void *)v802 + 2);
          v799(v759, v777, v814);
          uint64_t v303 = sub_24DCC9068();
          os_log_type_t v304 = sub_24DCCA128();
          v801 = v303;
          LODWORD(TupleTypeMetadata2) = v304;
          if (os_log_type_enabled(v303, v304))
          {
            uint64_t v305 = swift_slowAlloc();
            uint64_t v796 = swift_slowAlloc();
            v807 = (int *)v796;
            *(_DWORD *)uint64_t v305 = 136446466;
            uint64_t v795 = v305 + 4;
            BOOL v306 = v755;
            v299(v755, v300, v301);
            uint64_t v307 = *(void (**)(char *, uint64_t))(v298 + 8);
            v307(v300, v301);
            uint64_t v308 = sub_24DB8E8F4(v301);
            unint64_t v310 = v309;
            v307(v306, v301);
            uint64_t v803 = sub_24D418FB4(v308, v310, (uint64_t *)&v807);
            sub_24DCCA428();
            swift_bridgeObjectRelease();
            *(_WORD *)(v305 + 12) = 2082;
            uint64_t v797 = v305 + 14;
            unint64_t v311 = v752;
            unint64_t v312 = v759;
            uint64_t v313 = v814;
            v799(v752, v759, v814);
            uint64_t v314 = (void (*)(char *, char *))*((void *)v802 + 1);
            v314(v312, v313);
            uint64_t v315 = sub_24DCCAD78();
            unint64_t v317 = v316;
            v314(v311, v313);
            uint64_t v803 = sub_24D418FB4(v315, v317, (uint64_t *)&v807);
            sub_24DCCA428();
            swift_bridgeObjectRelease();
            uint64_t v318 = v801;
            _os_log_impl(&dword_24D3D0000, v801, (os_log_type_t)TupleTypeMetadata2, "🚔  cannot propagate creation for %{public}s: snapshot version not found for %{public}s", (uint8_t *)v305, 0x16u);
            uint64_t v319 = v796;
            swift_arrayDestroy();
            MEMORY[0x25332B030](v319, -1, -1);
            MEMORY[0x25332B030](v305, -1, -1);

            (*(void (**)(char *, uint64_t))(v765 + 8))(v760, v764);
            return ((uint64_t (*)(uint8_t *, char *))v314)(v777, v313);
          }
          else
          {
            uint64_t v339 = (void (*)(char *, char *))*((void *)v802 + 1);
            long long v340 = v302;
            uint64_t v341 = v814;
            v339(v340, v814);
            (*(void (**)(char *, uint64_t))(v298 + 8))(v300, v301);

            (*(void (**)(char *, uint64_t))(v765 + 8))(v297, v764);
            return ((uint64_t (*)(uint8_t *, char *))v339)(v777, v341);
          }
        }
        id v267 = (void (*)(char *, char *, char *))v152;
        v779 = v156;
        uint64_t v268 = v758;
        (*(void (**)(uint8_t *))(*(void *)v154 + 280))(v777);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v788 + 56))(v756, 1, 1, v797);
        uint64_t v347 = v745;
        uint64_t v348 = v268;
        uint64_t v349 = v795;
        ((void (*)(char *, char *, uint64_t))v792)(v745, v348, v795);
        long long v350 = v814;
        if (((unsigned int (*)(char *, uint64_t, char *))v786)(v347, 1, v814) == 1)
        {
          uint64_t v798 = 0;
          (*(void (**)(char *, uint64_t))(v794 + 8))(v347, v349);
          unint64_t v351 = v787;
          id v352 = v746;
        }
        else
        {
          uint64_t v380 = (uint64_t)v730;
          v267(v730, v347, v350);
          unint64_t v351 = v787;
          uint64_t v381 = v731;
          sub_24D4759C8(v380, v731);
          id v352 = v746;
          uint64_t v798 = 0;
          (*((void (**)(uint64_t, char *))v802 + 1))(v380, v350);
          uint64_t v403 = v750;
          uint64_t v404 = v756;
          uint64_t v405 = v749;
          (*(void (**)(char *, uint64_t))(v750 + 8))(v756, v749);
          (*(void (**)(char *, uint64_t, uint64_t))(v403 + 32))(v404, v381, v405);
        }
        id v406 = (int *)v351[5];
        BOOL v407 = sub_24D8903D0();
        os_log_type_t v408 = *(void (**)(char *, char *, uint64_t))(v750 + 16);
        uint64_t v409 = v797;
        Class v410 = isa;
        id v411 = v738;
        v792 = v406;
        if (v407)
        {
          uint64_t v412 = v749;
          v408(v738, v756, v749);
          uint64_t v413 = v788;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v788 + 48))(v411, 1, v409) == 1)
          {
            (*(void (**)(char *, uint64_t))(v750 + 8))(v411, v412);
LABEL_124:
            v807 = v791;
            uint64_t v808 = TupleTypeMetadata2;
            v809 = v790;
            uint64_t v810 = (uint64_t)v799;
            uint64_t v420 = type metadata accessor for JobResult();
            type metadata accessor for ReconciliationSideMutation();
            uint64_t v421 = swift_getTupleTypeMetadata2();
            uint64_t v422 = (uint64_t)v783;
            uint64_t v423 = &v783[*(int *)(v421 + 48)];
            id v424 = (int *)*((void *)v802 + 2);
            id v425 = (int *)v814;
            unint64_t v793 = (unint64_t)(v802 + 16);
            v792 = v424;
            ((void (*)(char *, uint8_t *, char *))v424)(v783, v777, v814);
            swift_storeEnumTagMultiPayload();
            uint64_t v426 = v797;
            uint64_t v427 = (char *)*(int *)(v797 + 64);
            *(void *)uint64_t v423 = 2;
            unint64_t v428 = v801;
            v782 = v427;
            *(_OWORD *)(v423 + 8) = *(_OWORD *)&v427[(void)v801];
            swift_storeEnumTagMultiPayload();
            uint64_t v429 = v784;
            swift_storeEnumTagMultiPayload();
            v786 = (char *)v420;
            sub_24D907568(v796, v422);
            unint64_t v430 = *(objc_class **)(v789 + 8);
            v789 += 8;
            Class isa = v430;
            ((void (*)(uint64_t, uint64_t))v430)(v422, v429);
            id v431 = (id)fpfs_current_or_default_log();
            uint64_t v432 = v725;
            sub_24DCC9088();
            uint64_t v433 = v788;
            uint64_t v434 = *(void (**)(char *, NSObject *, uint64_t))(v788 + 16);
            unint64_t v435 = v719;
            v434(v719, v428, v426);
            uint64_t v436 = sub_24DCC9068();
            os_log_type_t v437 = sub_24DCCA128();
            if (os_log_type_enabled(v436, v437))
            {
              os_log_t v780 = v436;
              unint64_t v438 = (uint8_t *)swift_slowAlloc();
              v778 = (int *)swift_slowAlloc();
              v807 = v778;
              v776 = v438;
              *(_DWORD *)unint64_t v438 = 136446210;
              v775 = (v438 + 4);
              uint64_t v439 = v755;
              v434(v755, v435, v426);
              uint64_t v440 = *(void (**)(char *, uint64_t))(v433 + 8);
              v440(v435, v426);
              uint64_t v441 = sub_24DB8E8F4(v426);
              unint64_t v443 = v442;
              v440(v439, v426);
              uint64_t v803 = sub_24D418FB4(v441, v443, (uint64_t *)&v807);
              id v425 = (int *)v814;
              sub_24DCCA428();
              swift_bridgeObjectRelease();
              os_log_t v444 = v780;
              unint64_t v445 = v776;
              _os_log_impl(&dword_24D3D0000, v780, v437, "🚔  cannot propagate creation for %{public}s: parent folder is not reconciled", (uint8_t *)v776, 0xCu);
              int v446 = v778;
              swift_arrayDestroy();
              MEMORY[0x25332B030](v446, -1, -1);
              uint64_t v447 = TupleTypeMetadata2;
              MEMORY[0x25332B030](v445, -1, -1);

              (*(void (**)(char *, uint64_t))(v765 + 8))(v725, v764);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v433 + 8))(v435, v426);

              (*(void (**)(char *, uint64_t))(v765 + 8))(v432, v764);
              uint64_t v447 = TupleTypeMetadata2;
            }
            uint64_t v466 = v801;
            uint64_t v467 = (char *)v801 + *(int *)(v426 + 52);
            uint64_t v468 = v799;
            uint64_t v469 = type metadata accessor for ItemReconciliationHalf();
            if (v467[*(int *)(v469 + 44)] == 2)
            {
              type metadata accessor for ReconciliationSideMutation();
              uint64_t v470 = swift_getTupleTypeMetadata2();
              uint64_t v471 = (uint64_t)v783;
              uint64_t v472 = &v783[*(int *)(v470 + 48)];
              ((void (*)(char *, uint8_t *, int *))v792)(v783, v777, v425);
              swift_storeEnumTagMultiPayload();
              *(_WORD *)uint64_t v472 = 770;
              *(_OWORD *)(v472 + 8) = *(_OWORD *)&v782[(void)v466];
              swift_storeEnumTagMultiPayload();
              uint64_t v473 = v784;
              swift_storeEnumTagMultiPayload();
              sub_24D907568(v796, v471);
              uint64_t v469 = ((uint64_t (*)(uint64_t, uint64_t))isa)(v471, v473);
            }
            MEMORY[0x270FA5388](v469);
            strcpy((char *)&v703 - 48, " item version domainVersion ");
            v807 = v425;
            uint64_t v808 = v735;
            v809 = MEMORY[0x263F8D9D0];
            uint64_t v810 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
            uint64_t v474 = (int *)swift_getTupleTypeMetadata();
            uint64_t v475 = v732;
            uint64_t v476 = &v732[v474[12]];
            uint64_t v477 = v474[16];
            uint64_t v478 = v474[20];
            v479 = v425;
            uint64_t v480 = v777;
            ((void (*)(char *, uint8_t *, int *))v792)(v732, v777, v479);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v744 + 56))(v476, 1, 1, v747);
            *(void *)&v475[v477] = v779;
            id v481 = v774;
            *(void *)&v475[v478] = v774;
            v807 = v791;
            uint64_t v808 = v447;
            v809 = v790;
            uint64_t v810 = (uint64_t)v468;
            type metadata accessor for DirectionalTestingOperation();
            swift_storeEnumTagMultiPayload();
            uint64_t v482 = v734;
            swift_storeEnumTagMultiPayload();
            long long v483 = *(void (**)(char *, void))(*v787 + 488);
            id v484 = v481;
            v483(v475, 0);
            (*(void (**)(char *, uint64_t))(v733 + 8))(v475, v482);
            (*(void (**)(char *, uint64_t))(v750 + 8))(v756, v749);
            (*(void (**)(char *, uint64_t))(v794 + 8))(v758, v795);
            return (*((uint64_t (**)(uint8_t *, int *))v802 + 1))(v480, v479);
          }
          (*(void (**)(char *, char *, uint64_t))(v413 + 32))(v352, v411, v409);
          unint64_t v414 = &v352[*(int *)(v409 + 52)];
          uint64_t v415 = v772;
          unint64_t v416 = *(void (**)(char *))(v772 + 16);
          unint64_t v417 = v716;
          v786 = v414;
          uint64_t v418 = v773;
          v416(v716);
          int v419 = (*((uint64_t (**)(char *, uint64_t, os_log_t))v410 + 6))(v417, 1, v780);
          (*(void (**)(char *, uint64_t))(v415 + 8))(v417, v418);
          if (v419 == 1)
          {
            (*(void (**)(char *, uint64_t))(v413 + 8))(v746, v797);
            goto LABEL_124;
          }
          v793 |= v786[*(int *)(type metadata accessor for ItemReconciliationHalf() + 44)] == 0;
          uint64_t v409 = v797;
          (*(void (**)(char *, uint64_t))(v413 + 8))(v746, v797);
        }
        uint64_t v575 = v728;
        uint64_t v576 = v749;
        v408(v728, v756, v749);
        uint64_t v577 = v788;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v788 + 48))(v575, 1, v409) == 1)
        {
          (*(void (**)(char *, uint64_t))(v750 + 8))(v575, v576);
          uint64_t v579 = v798;
          uint64_t v578 = v799;
          uint64_t v580 = v790;
          uint64_t v581 = TupleTypeMetadata2;
        }
        else
        {
          uint64_t v582 = v721;
          (*(void (**)(uint64_t, char *, uint64_t))(v577 + 32))(v721, v575, v409);
          v583 = v717;
          uint64_t v584 = v798;
          (*(void (**)(uint8_t *, uint64_t))(*(void *)v154 + 240))(v777, 1);
          uint64_t v579 = v584;
          uint64_t v585 = v799;
          if (v584)
          {
            (*(void (**)(uint64_t, uint64_t))(v577 + 8))(v582, v409);
            (*(void (**)(char *, uint64_t))(v750 + 8))(v756, v576);
            (*(void (**)(char *, uint64_t))(v794 + 8))(v758, v795);
            uint64_t v226 = (uint64_t (*)(NSObject *, char *))*((void *)v802 + 1);
            uint64_t v357 = &v809;
            goto LABEL_182;
          }
          uint64_t v586 = v744;
          uint64_t v587 = v747;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v744 + 48))(v583, 1, v747) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v788 + 8))(v721, v797);
            (*(void (**)(char *, uint64_t))(v718 + 8))(v583, v735);
          }
          else
          {
            uint64_t v629 = (uint64_t)v709;
            (*(void (**)(char *, char *, uint64_t))(v586 + 32))(v709, v583, v587);
            v807 = v791;
            uint64_t v808 = TupleTypeMetadata2;
            v809 = v790;
            uint64_t v810 = (uint64_t)v585;
            type metadata accessor for ReconciliationTable();
            v630 = v710;
            uint64_t v631 = v721;
            char v632 = sub_24D48DC00(v710, v801, v629, v721, v787);
            char v647 = v632;
            (*(void (**)(char *, uint64_t))(v704 + 8))(v630, v705);
            swift_bridgeObjectRelease();
            uint64_t v648 = v793;
            if (v647) {
              uint64_t v648 = v793 | 0x40000000000;
            }
            unint64_t v793 = v648;
            (*(void (**)(uint64_t, uint64_t))(v586 + 8))(v629, v587);
            (*(void (**)(uint64_t, uint64_t))(v788 + 8))(v631, v797);
          }
          uint64_t v580 = v790;
          uint64_t v581 = TupleTypeMetadata2;
          uint64_t v578 = v585;
        }
        unint64_t v649 = (v793 >> 21) & 1;
        if ((*(uint64_t *)((unsigned char *)&v801->isa + v778[10]) & 0x80000000000) == 0) {
          LODWORD(v649) = 1;
        }
        if (v649) {
          unint64_t v650 = v793;
        }
        else {
          unint64_t v650 = v793 | 0x200000;
        }
        uint64_t v651 = (v650 >> 9) & 1;
        if ((*(uint64_t *)((unsigned char *)&v801->isa + v778[10]) & 0x8000) == 0) {
          LODWORD(v651) = 1;
        }
        if (v651) {
          unint64_t v652 = v650;
        }
        else {
          unint64_t v652 = v650 | 0x200;
        }
        int v653 = *((unsigned __int8 *)&v801->isa + *(int *)(v797 + 56));
        v654 = v791;
        uint64_t v655 = (uint64_t)v783;
        if (v653 == 1)
        {
LABEL_220:
          uint64_t v798 = v579;
          BOOL v657 = sub_24D8903D0();
          if (v653 != 2 && v657)
          {
            v807 = v654;
            uint64_t v808 = v581;
            v809 = v580;
            uint64_t v810 = (uint64_t)v578;
            type metadata accessor for JobResult();
            type metadata accessor for ReconciliationSideMutation();
            v658 = (unsigned char *)(v655 + *(int *)(swift_getTupleTypeMetadata2() + 48));
            (*((void (**)(uint64_t, uint8_t *, char *))v802 + 2))(v655, v777, v814);
            swift_storeEnumTagMultiPayload();
            unsigned char *v658 = 0;
            uint64_t v578 = v799;
            uint64_t v581 = TupleTypeMetadata2;
            swift_storeEnumTagMultiPayload();
            uint64_t v659 = v784;
            swift_storeEnumTagMultiPayload();
            sub_24D907568(v796, v655);
            (*(void (**)(uint64_t, uint64_t))(v789 + 8))(v655, v659);
          }
          v807 = v654;
          uint64_t v808 = v581;
          v809 = v580;
          uint64_t v810 = (uint64_t)v578;
          type metadata accessor for Propagation.CreateItem();
          v660 = (uint64_t *)((char *)v801 + *(int *)(v797 + 64));
          uint64_t v661 = *v660;
          uint64_t v662 = v660[1];
          id v663 = v774;
          id v664 = v774;
          uint64_t v665 = sub_24D7B3FF8((uint64_t)v777, (uint64_t)v779, v663, v661, v662, v652);
          if (!sub_24D8903D0()) {
            sub_24D8F94C4(1);
          }
          v807 = v654;
          uint64_t v808 = TupleTypeMetadata2;
          v809 = v580;
          uint64_t v810 = (uint64_t)v799;
          type metadata accessor for JobResult();
          uint64_t v666 = v796;
          sub_24D855694(v796, v665);
          v667 = type metadata accessor for ReconciliationSideMutation();
          uint64_t v668 = swift_getTupleTypeMetadata2();
          v799 = (void (*)(void, void, void))v665;
          TupleTypeMetadata2 = v668;
          uint64_t v669 = v655 + *(int *)(v668 + 48);
          uint64_t v670 = v655;
          v671 = (void (*)(uint64_t, uint8_t *, char *))*((void *)v802 + 2);
          uint64_t v672 = v777;
          v671(v670, v777, v814);
          swift_storeEnumTagMultiPayload();
          *(void *)uint64_t v669 = 0;
          *(void *)(v669 + 8) = 0;
          *(unsigned char *)(v669 + 16) = 2;
          v801 = v667;
          swift_storeEnumTagMultiPayload();
          uint64_t v673 = v784;
          swift_storeEnumTagMultiPayload();
          sub_24D907568(v666, v670);
          uint64_t v674 = *(void (**)(uint64_t, uint64_t))(v789 + 8);
          v674(v670, v673);
          uint64_t v675 = (uint64_t)v720;
          v676 = v672;
          uint64_t v383 = v814;
          v671((uint64_t)v720, v676, v814);
          swift_storeEnumTagMultiPayload();
          if (qword_26B199AA0 != -1) {
            swift_once();
          }
          uint64_t v677 = qword_26B1A24C8;
          if ((qword_26B1A24C8 & ~v762) == 0) {
            uint64_t v677 = 0;
          }
          *(void *)(v675 + *(int *)(TupleTypeMetadata2 + 48)) = v677 | v762;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_24D907568(v796, v675);
          swift_release();
          v674(v675, v673);
          (*(void (**)(char *, uint64_t))(v750 + 8))(v756, v749);
          (*(void (**)(char *, uint64_t))(v794 + 8))(v758, v795);
          uint64_t v335 = (uint64_t (*)(uint8_t *, char *))*((void *)v802 + 1);
          uint64_t v336 = v777;
          goto LABEL_230;
        }
        if (v653 != 4)
        {
          uint64_t v656 = (v652 >> 27) & 1;
          if (*(unint64_t *)((char *)&v801[2].isa + v778[17]) >> 60 == 11) {
            LODWORD(v656) = 1;
          }
          if (!v656) {
            v652 |= 0x8000000uLL;
          }
          goto LABEL_220;
        }
      }
      __break(1u);
LABEL_250:
      __break(1u);
      goto LABEL_251;
  }
}

void sub_24D797A1C()
{
}

uint64_t sub_24D797A78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = v2;
  uint64_t v6 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, &v1[*(void *)(v5 + 576)], AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + v6) = sub_24DB1702C();
  uint64_t v7 = type metadata accessor for ThrottlingKey();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
}

uint64_t sub_24D797C84()
{
  uint64_t v1 = type metadata accessor for JobLockRule();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned int v4 = v11 - v3 + 22;
  swift_beginAccess();
  sub_24D73C78C((uint64_t)(v0 + 7), (uint64_t)v11);
  uint64_t v5 = v0[15];
  uint64_t v6 = (char *)v0 + *(void *)(*v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v4, v6, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_24D578CBC((uint64_t)v11, v5, (uint64_t)v4);
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  sub_24D73C7F4((uint64_t)v11);
  return v8;
}

void sub_24D797E64()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  uint64_t v3 = *(void **)(v0 + *(void *)(*(void *)v0 + 584));
}

uint64_t sub_24D797F34()
{
  uint64_t v0 = sub_24D98339C();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);

  return v0;
}

uint64_t sub_24D79800C()
{
  return sub_24D7B1A28(sub_24D797F34);
}

uint64_t type metadata accessor for Propagation.PropagationJob()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D79803C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t result = sub_24DCCA3F8();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_24DCCA3F8();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for ItemState();
      uint64_t result = sub_24DCCA3F8();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedConformanceWitness();
        type metadata accessor for FileItemVersion();
        swift_getTupleTypeMetadata2();
        uint64_t result = sub_24DCCA3F8();
        if (v4 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t sub_24D798380()
{
  return sub_24DCC9888();
}

uint64_t sub_24D7983C4(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  unint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v2);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v2, 1, TupleTypeMetadata2) != 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v2, AssociatedTypeWitness);
    return 0;
  }
  return v6;
}

unint64_t sub_24D798548(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
  *(void *)(inited + 32) = sub_24DCC97E8();
  *(void *)(inited + 40) = v7;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  uint64_t v8 = sub_24DCC9868();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = v9;
  return sub_24D428D08(inited);
}

uint64_t sub_24D798664()
{
  return sub_24D798380();
}

uint64_t sub_24D79867C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270EF2670](a1, WitnessTable);
}

uint64_t sub_24D7986D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270EF2668](a1, WitnessTable);
}

void *sub_24D798724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!sub_24D8903D0())
  {
    sub_24D414684((uint64_t)v10);
LABEL_7:
    uint64_t v8 = v10;
    goto LABEL_8;
  }
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t))(**(void **)(a1 + 40) + 264))(v11, a2);
  if (v3) {
    return result;
  }
  sub_24D3F0BA0((uint64_t)v11, (uint64_t)v10, &qword_26B197970);
  sub_24D3F0BA0((uint64_t)v11, (uint64_t)v12, &qword_26B197970);
  if sub_24D3F0D40((uint64_t)v12) == 1 || (v12[33]) {
    goto LABEL_7;
  }
  sub_24D401194(v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
  sub_24D414684((uint64_t)v9);
  uint64_t v8 = v9;
LABEL_8:
  sub_24D3F0BA0((uint64_t)v8, (uint64_t)v13, &qword_26B197970);
  return (void *)sub_24D3F0BA0((uint64_t)v13, a3, &qword_26B197970);
}

uint64_t sub_24D798860()
{
  return 0x692D657461657263;
}

uint64_t sub_24D798880()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 656);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 4;
  }
  else {
    return *(unsigned __int8 *)(v1 + *(int *)(v2 + 40));
  }
}

uint64_t sub_24D7989AC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 656);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 2;
  }
  uint64_t v4 = v1 + *(int *)(v2 + 40);
  return *(unsigned __int8 *)(v4 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_24D798AE8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 656);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t result = 0;
  if (!v3)
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    return *(void *)(v5 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_24D798C2C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 656);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  unsigned __int8 v3 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2))
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    uint64_t v4 = *(unsigned int *)(v5 + 4);
    unsigned __int8 v3 = *(unsigned char *)(v5 + 8);
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_24D798D70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 656);
  swift_beginAccess();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ItemState();
  uint64_t v6 = 1;
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
    uint64_t v6 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v6, 1, AssociatedTypeWitness);
}

uint64_t sub_24D798F00()
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v1 = *(void **)(v0 + *(void *)(*(void *)v0 + 584));
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_description);
    sub_24DCC97E8();
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D799118()
{
  if ((*(unsigned char *)(v0 + 139) & 8) != 0) {
    return 2;
  }
  else {
    return 4;
  }
}

int *sub_24D799134(uint64_t a1, uint64_t a2)
{
  uint64_t v188 = a2;
  uint64_t v146 = a1;
  uint64_t v3 = (char *)*v2;
  uint64_t v4 = *(void *)(*v2 + 608);
  uint64_t v182 = *(void *)(*v2 + 624);
  uint64_t v152 = type metadata accessor for JobLockRule();
  uint64_t v151 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  uint64_t v150 = (char *)v132 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  uint64_t v184 = v7;
  uint64_t v185 = v8;
  uint64_t v186 = AssociatedConformanceWitness;
  uint64_t v187 = v10;
  uint64_t v11 = type metadata accessor for FileItemVersion();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v138 = sub_24DCCA3F8();
  uint64_t v137 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  uint64_t v136 = (char *)v132 - v12;
  uint64_t v142 = sub_24DCCA3F8();
  uint64_t v140 = *(void *)(v142 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v142);
  uint64_t v141 = (char *)v132 - v14;
  uint64_t v143 = v11;
  uint64_t v139 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v134 = (char *)v132 - v15;
  uint64_t v149 = sub_24DCCA3F8();
  uint64_t v153 = *(void *)(v149 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v149);
  uint64_t v148 = (char *)v132 - v17;
  uint64_t v154 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v145 = (char *)v132 - v18;
  uint64_t v180 = v3;
  uint64_t v183 = v2;
  uint64_t v19 = *((void *)v3 + 77);
  uint64_t v20 = *((void *)v3 + 75);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v162 = type metadata accessor for ItemState();
  uint64_t v161 = *(void *)(v162 - 8);
  MEMORY[0x270FA5388](v162);
  uint64_t v174 = (int *)((char *)v132 - v22);
  uint64_t v23 = v182;
  swift_getAssociatedConformanceWitness();
  uint64_t v158 = AssociatedTypeWitness;
  uint64_t v24 = type metadata accessor for ItemState();
  uint64_t v156 = sub_24DCCA3F8();
  uint64_t v155 = *(void *)(v156 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v156);
  uint64_t v147 = (char *)v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v173 = (uint64_t)v132 - v28;
  uint64_t v157 = v24;
  uint64_t v160 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v159 = (char *)v132 - v29;
  uint64_t v172 = v21;
  uint64_t v171 = sub_24DCCA3F8();
  uint64_t v170 = *(void *)(v171 - 8);
  MEMORY[0x270FA5388](v171);
  long long v169 = (char *)v132 - v30;
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  uint64_t v184 = v31;
  uint64_t v185 = v32;
  uint64_t v186 = v33;
  uint64_t v187 = v34;
  uint64_t v165 = type metadata accessor for FileItemVersion();
  uint64_t v168 = sub_24DCCA3F8();
  uint64_t v167 = *(void *)(v168 - 8);
  MEMORY[0x270FA5388](v168);
  uint64_t v166 = (char *)v132 - v35;
  uint64_t v36 = type metadata accessor for SnapshotItem();
  uint64_t v164 = sub_24DCCA3F8();
  uint64_t v163 = *(void *)(v164 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v164);
  uint64_t v178 = (char *)v132 - v38;
  uint64_t v176 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v175 = (char *)v132 - v39;
  uint64_t v184 = v20;
  uint64_t v185 = v4;
  uint64_t v144 = v4;
  uint64_t v186 = v19;
  uint64_t v187 = v23;
  uint64_t v40 = type metadata accessor for ItemReconciliation();
  uint64_t v41 = (int *)sub_24DCCA3F8();
  uint64_t v177 = *((void *)v41 - 1);
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)v132 - v43;
  uint64_t v179 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)v132 - v45;
  uint64_t v47 = *(void *)(v188 + 16);
  uint64_t v48 = v181;
  uint64_t v49 = (uint64_t)v183 + *((void *)v180 + 72);
  sub_24D475DF0(v49, (uint64_t)v44);
  if (!v48)
  {
    v132[0] = v47;
    v132[1] = v20;
    uint64_t v180 = v46;
    uint64_t v133 = v36;
    uint64_t v181 = 0;
    uint64_t v50 = v179;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48))(v44, 1, v40) == 1)
    {
      uint64_t v51 = *(void (**)(char *, int *))(v177 + 8);
      uint64_t v52 = v44;
      uint64_t v53 = v41;
LABEL_4:
      v51(v52, v53);
      return 0;
    }
    uint64_t v55 = v180;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v180, v44, v40);
    uint64_t v56 = v183;
    uint64_t v57 = v178;
    uint64_t v58 = v181;
    (*(void (**)(uint64_t, void))(**(void **)(v188 + 40) + 248))(v49, *(void *)((char *)v56 + *(void *)(*v56 + 632)));
    uint64_t v181 = v58;
    if (v58)
    {
LABEL_7:
      (*(void (**)(char *, uint64_t))(v50 + 8))(v55, v40);
      return v41;
    }
    uint64_t v59 = v176;
    uint64_t v60 = v133;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v57, 1, v133) == 1)
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v55, v40);
      uint64_t v51 = *(void (**)(char *, int *))(v163 + 8);
      uint64_t v52 = v57;
      uint64_t v61 = &v189;
LABEL_10:
      uint64_t v53 = (int *)*(v61 - 32);
      goto LABEL_4;
    }
    uint64_t v177 = v40;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v175, v57, v60);
    uint64_t v62 = (uint64_t *)&v55[*(int *)(type metadata accessor for ItemReconciliationHalf() + 68)];
    uint64_t v63 = *v62;
    uint64_t v64 = v62[1];
    unint64_t v65 = v62[2];
    uint64_t v66 = v62[3];
    uint64_t v67 = v62[4];
    uint64_t v68 = v62[5];
    uint64_t v69 = v62[6];
    uint64_t v70 = (void *)((char *)v56 + *(void *)(*v56 + 664));
    uint64_t v71 = v59;
    uint64_t v72 = *v70;
    uint64_t v73 = v70[1];
    unint64_t v74 = v70[2];
    uint64_t *v70 = v63;
    v70[1] = v64;
    v70[2] = v65;
    v70[3] = v66;
    v70[4] = v67;
    v70[5] = v68;
    v70[6] = v69;
    sub_24D3F1CDC(v63, v64, v65);
    unint64_t v75 = v74;
    uint64_t v76 = v175;
    uint64_t v77 = v133;
    sub_24D3E3850(v72, v73, v75);
    uint64_t v78 = v165;
    uint64_t v79 = *(void *)(v165 - 8);
    uint64_t v80 = v166;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v166, &v76[*(int *)(v77 + 40)], v165);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v80, 0, 1, v78);
    uint64_t v81 = (char *)v56 + *(void *)(*v56 + 640);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v167 + 40))(v81, v80, v168);
    swift_endAccess();
    uint64_t v82 = v172;
    uint64_t v83 = *(void *)(v172 - 8);
    uint64_t v84 = v169;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v169, &v76[*(int *)(v77 + 36)], v172);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v82);
    uint64_t v85 = (char *)v56 + *(void *)(*v56 + 648);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v170 + 40))(v85, v84, v171);
    swift_endAccess();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v41 = v174;
    sub_24D98B988(v77, WitnessTable, (uint64_t)v174);
    uint64_t v87 = v173;
    uint64_t v88 = v181;
    sub_24D47CABC((uint64_t)v41, v173);
    uint64_t v181 = v88;
    if (v88)
    {
      (*(void (**)(int *, uint64_t))(v161 + 8))(v41, v162);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v76, v77);
LABEL_13:
      uint64_t v40 = v177;
      uint64_t v50 = v179;
      uint64_t v55 = v180;
      goto LABEL_7;
    }
    (*(void (**)(int *, uint64_t))(v161 + 8))(v41, v162);
    uint64_t v89 = v160;
    uint64_t v90 = v157;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48))(v87, 1, v157) == 1)
    {
      (*(void (**)(char *, uint64_t))(v176 + 8))(v76, v77);
      (*(void (**)(char *, uint64_t))(v179 + 8))(v180, v177);
      uint64_t v51 = *(void (**)(char *, int *))(v155 + 8);
      uint64_t v52 = (char *)v87;
      uint64_t v61 = &v185;
      goto LABEL_10;
    }
    uint64_t v91 = v159;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v159, v87, v90);
    uint64_t v92 = *(void *)(v188 + 32);
    BOOL v93 = sub_24D8903D0();
    uint64_t v94 = &v91[*(int *)(v90 + 40)];
    if (v93)
    {
      int v95 = *v94;
      uint64_t v96 = type metadata accessor for ItemMetadata();
      uint64_t v41 = (int *)v96;
      v94[*(int *)(v96 + 80)] = v95 != 2;
      uint64_t v97 = v154;
      uint64_t v98 = v153;
      if (v95 != 2) {
        v94[*(int *)(v96 + 84)] = 0;
      }
      if (v94[*(int *)(v96 + 84)])
      {
        uint64_t v99 = v159;
        uint64_t v100 = v181;
        uint64_t v101 = (*(uint64_t (**)(char *))(*(void *)v92 + 520))(v159);
        uint64_t v181 = v100;
        if (v100)
        {
          (*(void (**)(char *, uint64_t))(v89 + 8))(v99, v90);
          (*(void (**)(char *, uint64_t))(v176 + 8))(v175, v133);
          goto LABEL_13;
        }
        *(void *)&v94[v41[19]] = v101;
        uint64_t v102 = v99;
      }
      else
      {
        uint64_t v102 = v159;
      }
    }
    else
    {
      uint64_t v41 = (int *)type metadata accessor for ItemMetadata();
      v94[v41[20]] = 0;
      uint64_t v97 = v154;
      uint64_t v102 = v159;
      uint64_t v98 = v153;
    }
    uint64_t v103 = v180;
    uint64_t v104 = &v102[*(int *)(v90 + 40)];
    type metadata accessor for ItemMetadata();
    v104[v41[18]] = 0;
    uint64_t v105 = v147;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v147, v102, v90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v105, 0, 1, v90);
    uint64_t v106 = (char *)v56 + *(void *)(*v56 + 656);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v155 + 40))(v106, v105, v156);
    swift_endAccess();
    uint64_t v107 = &v103[*(int *)(v177 + 52)];
    uint64_t v108 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
    uint64_t v109 = v98;
    uint64_t v110 = v148;
    uint64_t v111 = v149;
    v108(v148, v107, v149);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v110, 1, v158) == 1)
    {
      (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v111);
    }
    else
    {
      uint64_t v188 = *(void *)(v97 + 32);
      ((void (*)(char *, char *, uint64_t))v188)(v145, v110, v158);
      uint64_t v112 = type metadata accessor for ItemReconciliationHalf();
      uint64_t v113 = v140;
      uint64_t v114 = v141;
      uint64_t v115 = v142;
      (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v141, &v107[*(int *)(v112 + 48)], v142);
      uint64_t v116 = v139;
      uint64_t v117 = v143;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v114, 1, v143) == 1)
      {
        (*(void (**)(char *, uint64_t))(v97 + 8))(v145, v158);
        (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v115);
      }
      else
      {
        uint64_t v118 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
        uint64_t v119 = v134;
        v118(v134, v114, v117);
        uint64_t v120 = TupleTypeMetadata2;
        uint64_t v121 = v136;
        uint64_t v122 = v117;
        uint64_t v123 = &v136[*(int *)(TupleTypeMetadata2 + 48)];
        ((void (*)(char *, char *, uint64_t))v188)(v136, v145, v158);
        uint64_t v124 = v122;
        uint64_t v90 = v157;
        v118(v123, v119, v124);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v121, 0, 1, v120);
        uint64_t v125 = (char *)v56 + *(void *)(*v56 + 672);
        swift_beginAccess();
        uint64_t v126 = v121;
        uint64_t v97 = v154;
        (*(void (**)(char *, char *, uint64_t))(v137 + 40))(v125, v126, v138);
        swift_endAccess();
      }
      uint64_t v89 = v160;
      uint64_t v102 = v159;
    }
    uint64_t v127 = v133;
    uint64_t v128 = v175;
    swift_beginAccess();
    sub_24D73C78C((uint64_t)(v56 + 7), (uint64_t)&v184);
    uint64_t v129 = v56[15];
    uint64_t v130 = (uint64_t)v150;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v150, v102, v158);
    uint64_t v131 = v152;
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = (int *)sub_24D578CBC((uint64_t)&v184, v129, v130);
    (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v130, v131);
    sub_24D73C7F4((uint64_t)&v184);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v102, v90);
    (*(void (**)(char *, uint64_t))(v176 + 8))(v128, v127);
    (*(void (**)(char *, uint64_t))(v179 + 8))(v180, v177);
  }
  return v41;
}

uint64_t sub_24D79A6EC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void (*a7)(void, uint64_t, uint64_t, int8x16_t *), uint64_t a8)
{
  uint64_t v132 = a8;
  uint64_t v133 = a7;
  uint64_t v148 = a6;
  uint64_t v155 = a5;
  id v165 = a4;
  uint64_t v143 = a3;
  uint64_t v145 = a2;
  uint64_t v152 = a1;
  uint64_t v9 = *v8;
  uint64_t v10 = *(void *)(*v8 + 624);
  uint64_t v11 = *(void *)(*v8 + 608);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v141 = type metadata accessor for ItemState();
  uint64_t v13 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v161 = (uint64_t)v122 - v14;
  uint64_t v15 = *(void *)(v9 + 616);
  uint64_t v156 = v8;
  uint64_t v16 = *(void *)(v9 + 600);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  v162[0] = v17;
  v162[1] = v18;
  uint64_t v163 = v19;
  uint64_t v164 = v20;
  uint64_t v144 = type metadata accessor for FileItemVersion();
  uint64_t v21 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v160 = (uint64_t)v122 - v22;
  v162[0] = v11;
  v162[1] = v16;
  uint64_t v163 = v10;
  uint64_t v164 = v15;
  uint64_t v136 = v15;
  uint64_t v23 = (int8x16_t *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v147 = v23[-1].i64[1];
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v146 = (char *)v122 - v25;
  uint64_t v128 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v127 = (char *)v122 - v26;
  uint64_t v27 = type metadata accessor for SnapshotItem();
  uint64_t v154 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v129 = (uint64_t)v122 - v29;
  uint64_t v134 = AssociatedTypeWitness;
  uint64_t v135 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)v122 - v30;
  uint64_t v140 = v11;
  uint64_t v142 = v10;
  uint64_t v32 = type metadata accessor for ItemPropagationResult();
  uint64_t v138 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v137 = (char *)v122 - v33;
  uint64_t v139 = v34;
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v35 = sub_24DCCB058();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (void **)((char *)v122 - v37);
  uint64_t v153 = v27;
  uint64_t v159 = sub_24DCCA3F8();
  uint64_t v158 = *(void *)(v159 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v165);
  uint64_t v149 = (char *)v122 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = (void *)MEMORY[0x270FA5388](v39);
  uint64_t v157 = (char *)v122 - v42;
  uint64_t v150 = v23;
  uint64_t v130 = v31;
  if (v41)
  {
    strcpy((char *)v162, " domver:");
    BYTE1(v162[1]) = 0;
    WORD1(v162[1]) = 0;
    HIDWORD(v162[1]) = -402653184;
    id v43 = objc_msgSend(v41, sel_description);
    sub_24DCC97E8();

    sub_24DCC9968();
    swift_bridgeObjectRelease();
    uint64_t v45 = v162[0];
    unint64_t v44 = v162[1];
  }
  else
  {
    uint64_t v45 = 0;
    unint64_t v44 = 0xE000000000000000;
  }
  uint64_t v46 = v156;
  (*(void (**)(void **, void (*)(uint64_t), uint64_t))(v36 + 16))(v38, v152, v35);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = *v38;
    v162[0] = 0;
    v162[1] = 0xE000000000000000;
    id v48 = v47;
    sub_24DCC9968();
    uint64_t v49 = v141;
    swift_getWitnessTable();
    uint64_t v50 = v145;
    sub_24DCCADC8();
    sub_24DCC9968();
    uint64_t v51 = v162[1];
    uint64_t v140 = v162[0];
    uint64_t v52 = v157;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v154 + 56))(v157, 1, 1, v153);

    goto LABEL_6;
  }
  uint64_t v53 = v138;
  uint64_t v54 = v139;
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v138 + 48))(v38, 1, v139) == 1)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v55 = swift_getAssociatedConformanceWitness();
    uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 64);
    uint64_t v57 = swift_checkMetadataState();
    if (v56(v57, v55))
    {
      swift_bridgeObjectRelease();
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t v47 = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = v157;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v154 + 56))(v157, 1, 1, v153);
      uint64_t v140 = 0;
      uint64_t v51 = 0;
      LODWORD(v152) = 0;
      uint64_t v142 = 0;
      uint64_t v50 = v145;
      uint64_t v49 = v141;
      goto LABEL_20;
    }
    v162[0] = 0;
    v162[1] = 0xE000000000000000;
    sub_24DCCA728();
    sub_24DCC9968();
    uint64_t v49 = v141;
    swift_getWitnessTable();
    uint64_t v50 = v145;
    sub_24DCCADC8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v51 = v162[1];
    uint64_t v140 = v162[0];
    uint64_t v52 = v157;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v154 + 56))(v157, 1, 1, v153);
    uint64_t v47 = 0;
LABEL_6:
    LODWORD(v152) = 0;
    uint64_t v142 = 0;
LABEL_20:
    uint64_t v83 = v143;
    uint64_t v84 = v144;
    goto LABEL_21;
  }
  v122[1] = v45;
  unint64_t v124 = v44;
  (*(void (**)(char *, void **, uint64_t))(v53 + 32))(v137, v38, v54);
  uint64_t v58 = (uint64_t)v46 + *(void *)(*v46 + 576);
  swift_getAssociatedTypeWitness();
  uint64_t v59 = swift_getAssociatedConformanceWitness();
  uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t))(v59 + 64);
  uint64_t v61 = swift_checkMetadataState();
  uint64_t v136 = v58;
  uint64_t v125 = v61;
  uint64_t v126 = v59;
  uint64_t v123 = v60;
  int v62 = v60(v61, v59) & 1;
  uint64_t v63 = v142 + 64;
  uint64_t v64 = v130;
  uint64_t v152 = *(void (**)(uint64_t))(v142 + 64);
  v152(v140);
  uint64_t v65 = AssociatedConformanceWitness;
  uint64_t v66 = v134;
  LODWORD(v58) = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v134, AssociatedConformanceWitness) & 1;
  uint64_t v67 = *(void (**)(char *, uint64_t))(v135 + 8);
  v67(v64, v66);
  if (v62 != v58)
  {
    uint64_t AssociatedConformanceWitness = v63;
    swift_bridgeObjectRelease();
    uint64_t v68 = v140;
    uint64_t v69 = v142;
    uint64_t v70 = type metadata accessor for FileTreeError();
    swift_getWitnessTable();
    uint64_t v47 = (void *)swift_allocError();
    uint64_t v72 = v71;
    char v73 = v123(v125, v126);
    uint64_t v130 = (char *)v70;
    if (v73)
    {
      sub_24DBB275C();
LABEL_17:
      uint64_t v79 = 0;
LABEL_19:
      uint64_t v46 = v156;
      uint64_t v80 = v157;
      uint64_t v49 = v141;
      uint64_t v81 = v138;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))(v72, v79, 1, v134);
      sub_24DCCA3F8();
      swift_getTupleTypeMetadata2();
      uint64_t v82 = v137;
      ((void (*)(uint64_t, uint64_t))v152)(v68, v69);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v154 + 56))(v80, 1, 1, v153);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v139);
      uint64_t v140 = 0;
      uint64_t v51 = 0;
      LODWORD(v152) = 0;
      uint64_t v142 = 0;
      uint64_t v52 = v80;
      uint64_t v50 = v145;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  uint64_t v123 = *(uint64_t (**)(uint64_t, uint64_t))(v126 + 72);
  int v74 = ((uint64_t (*)(uint64_t))v123)(v125) & 1;
  ((void (*)(uint64_t, uint64_t))v152)(v140, v142);
  int v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 72))(v66, v65) & 1;
  v67(v64, v66);
  if (v74 != v75)
  {
    uint64_t AssociatedConformanceWitness = v63;
    swift_bridgeObjectRelease();
    uint64_t v68 = v140;
    uint64_t v69 = v142;
    uint64_t v76 = type metadata accessor for FileTreeError();
    swift_getWitnessTable();
    uint64_t v47 = (void *)swift_allocError();
    uint64_t v72 = v77;
    char v78 = v123(v125, v126);
    uint64_t v130 = (char *)v76;
    if (v78)
    {
      sub_24DBB27A0();
      goto LABEL_17;
    }
LABEL_18:
    uint64_t v79 = 1;
    goto LABEL_19;
  }
  uint64_t v49 = v141;
  uint64_t v50 = v145;
  uint64_t v105 = *(char *)(v145 + *(int *)(v141 + 40));
  uint64_t v106 = v137;
  char v107 = sub_24D98BCC4(v140, v142);
  uint64_t v84 = v144;
  uint64_t v108 = v106;
  if (qword_24DCDC008[v105] == qword_24DCDC008[v107]) {
    goto LABEL_29;
  }
  if (v105 == 3)
  {
    if (v107)
    {
LABEL_35:
      swift_bridgeObjectRelease();
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t v47 = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = v157;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v154 + 56))(v157, 1, 1, v153);
      (*(void (**)(char *, uint64_t))(v138 + 8))(v106, v139);
      uint64_t v140 = 0;
      uint64_t v51 = 0;
      LODWORD(v152) = 0;
      uint64_t v142 = 0;
      goto LABEL_36;
    }
  }
  else if ((_BYTE)v105 || v107 != 3)
  {
    goto LABEL_35;
  }
LABEL_29:
  uint64_t v109 = (uint64_t)v127;
  uint64_t v110 = v140;
  (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v127, v108, v140);
  uint64_t v111 = v129;
  sub_24D97AFF8(v109, v110, v142, v129);
  uint64_t v113 = v153;
  uint64_t v112 = v154;
  uint64_t v52 = v157;
  (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v157, v111, v153);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v52, 0, 1, v113);
  uint64_t v114 = v108;
  uint64_t v115 = *(void *)&v108[*(int *)(v139 + 36)];
  LODWORD(v152) = v114[*(int *)(v139 + 40)];
  v162[0] = 0;
  v162[1] = 0xE000000000000000;
  sub_24DCC9968();
  swift_getWitnessTable();
  sub_24DCCADC8();
  sub_24DCC9968();
  uint64_t v117 = v162[0];
  uint64_t v116 = v162[1];
  v162[0] = 0;
  v162[1] = 0xE000000000000000;
  sub_24DCC9968();
  swift_getWitnessTable();
  sub_24DCCADC8();
  sub_24DCC9968();
  v162[0] = v117;
  v162[1] = v116;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v119 = v162[0];
  uint64_t v118 = v162[1];
  v162[0] = 0;
  v162[1] = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  strcpy((char *)v162, "stillPending:");
  HIWORD(v162[1]) = -4864;
  uint64_t v142 = v115;
  sub_24D97C4E0(v115);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v162[0] = v119;
  v162[1] = v118;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v121 = v162[0];
  uint64_t v120 = v162[1];
  v162[0] = 0;
  v162[1] = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  strcpy((char *)v162, "shouldFetch:");
  BYTE5(v162[1]) = 0;
  HIWORD(v162[1]) = -5120;
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v162[0] = v121;
  v162[1] = v120;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v51 = v162[1];
  uint64_t v140 = v162[0];
  (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v129, v153);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v137, v139);
  uint64_t v47 = 0;
LABEL_36:
  uint64_t v46 = v156;
  uint64_t v83 = v143;
LABEL_21:
  uint64_t v85 = *(void *)(v84 - 8);
  uint64_t v86 = v160;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16))(v160, v83, v84);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v86, 0, 1, v84);
  uint64_t v87 = *(uint64_t *)((char *)v46 + *(void *)(*v46 + 632));
  uint64_t v88 = v46;
  uint64_t v89 = *(void *)(v49 - 8);
  uint64_t v90 = v161;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v161, v50, v49);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v90, 0, 1, v49);
  uint64_t v91 = v149;
  (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v149, v52, v159);
  if (v47)
  {
    uint64_t v92 = *(void **)((char *)v88 + *(void *)(*v88 + 584));
    id v93 = v47;
    id v94 = v92;
  }
  else
  {
    uint64_t v92 = 0;
  }
  int v95 = v146;
  uint64_t v96 = v148;
  uint64_t v97 = (uint64_t)v165;
  id v98 = v165;
  uint64_t v99 = (uint64_t *)swift_retain();
  sub_24D73DF6C(v99, v160, v87, 0, v161, v91, v142, (int)v152, v95, v97, (uint64_t)v47, (uint64_t)v92);
  uint64_t v101 = v150;
  uint64_t v100 = v151;
  uint64_t v102 = sub_24D75BACC(v155, v96, v150);
  if (v100)
  {

    swift_bridgeObjectRelease();
    (*(void (**)(char *, int8x16_t *))(v147 + 8))(v95, v101);
  }
  else
  {
    uint64_t v103 = v102;
    (*(void (**)(char *, int8x16_t *))(v147 + 8))(v95, v101);
    v133(0, v140, v51, v103);

    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v157, v159);
}

uint64_t sub_24D79BCD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v51 = a8;
  uint64_t v44 = a7;
  uint64_t v45 = a5;
  uint64_t v47 = (void *)a6;
  uint64_t v48 = a4;
  uint64_t v43 = a3;
  uint64_t v49 = a2;
  uint64_t v46 = a1;
  uint64_t v9 = *(void **)v8;
  uint64_t v42 = *(void *)(*(void *)v8 + 616);
  uint64_t v41 = v9[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v55 = swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for FileItemVersion();
  uint64_t v36 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v37 = (char *)&v35 - v13;
  uint64_t v50 = v8;
  uint64_t v15 = v9[78];
  uint64_t v38 = v9[76];
  uint64_t v39 = v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = type metadata accessor for ItemState();
  uint64_t v16 = *(void *)(v35 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v35);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v20 = v48;
  uint64_t v40 = *(void *)(*(void *)(v48 + 32) + 16);
  (*(void (**)(char *, uint64_t))(v16 + 16))((char *)&v35 - v18, v49);
  uint64_t v21 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v43, v10);
  unint64_t v22 = (*(unsigned __int8 *)(v16 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v23 = (v17 + *(unsigned __int8 *)(v21 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v24 = (v12 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = (char *)swift_allocObject();
  uint64_t v27 = v38;
  *((void *)v26 + 2) = v41;
  *((void *)v26 + 3) = v27;
  uint64_t v28 = v39;
  *((void *)v26 + 4) = v42;
  *((void *)v26 + 5) = v28;
  uint64_t v29 = v44;
  *((void *)v26 + 6) = v20;
  *((void *)v26 + 7) = v29;
  uint64_t v30 = v50;
  *((void *)v26 + 8) = v51;
  *((void *)v26 + 9) = v30;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v26[v22], v19, v35);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v26[v23], v37, v36);
  uint64_t v31 = v46;
  *(void *)&v26[v24] = v45;
  sub_24D3F0BA0((uint64_t)v31, (uint64_t)&v26[v25], qword_26B197140);
  uint64_t v32 = v47;
  sub_24D3F0BA0((uint64_t)v47, (uint64_t)&v26[(v25 + 63) & 0xFFFFFFFFFFFFFFF8], &qword_26B197970);
  uint64_t v33 = *(void (**)(void *, uint64_t, void *, void (*)(void *, char), char *))(*(void *)v40 + 592);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D5D990C(v31, (void (*)(void, void, void, void, void, void, void))sub_24D3F1CDC);
  sub_24D401194(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
  v33(v31, v49, v32, sub_24D7B9F94, v26);
  swift_release();
  return swift_release();
}

void sub_24D79C178(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v56 = a7;
  unint64_t v57 = a8;
  uint64_t v63 = a4;
  uint64_t v64 = a5;
  LODWORD(v61) = a2;
  int v62 = a1;
  uint64_t v58 = a6;
  uint64_t v59 = a9;
  uint64_t v12 = *(void *)a3;
  uint64_t v13 = *(void *)(*(void *)a3 + 104);
  uint64_t v14 = *(void *)(*(void *)a3 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v66 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v68 = swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for FileItemVersion();
  uint64_t v54 = *(void *)(v15 - 8);
  uint64_t v55 = v15;
  uint64_t v16 = *(void *)(v54 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v50 - v17;
  uint64_t v19 = *(void *)(v12 + 96);
  uint64_t v60 = a3;
  uint64_t v20 = *(void *)(v12 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v21 = type metadata accessor for ItemState();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  MEMORY[0x270FA5388](v21);
  unint64_t v25 = (char *)&v50 - v24;
  if (v61)
  {
    uint64_t v37 = swift_allocObject();
    uint64_t v61 = v37;
    uint64_t v38 = v64;
    *(void *)(v37 + 16) = v63;
    *(void *)(v37 + 24) = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v56, v21);
    uint64_t v56 = v21;
    uint64_t v39 = v54;
    uint64_t v40 = *(void (**)(char *, unint64_t, uint64_t))(v54 + 16);
    uint64_t v53 = v18;
    v40(v18, v57, v55);
    unint64_t v41 = (*(unsigned __int8 *)(v22 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    unint64_t v42 = (v23 + *(unsigned __int8 *)(v39 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    unint64_t v57 = (v16 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v52 = (v57 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v51 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = (char *)swift_allocObject();
    *((void *)v43 + 2) = v14;
    *((void *)v43 + 3) = v20;
    *((void *)v43 + 4) = v13;
    *((void *)v43 + 5) = v19;
    uint64_t v44 = v62;
    *((void *)v43 + 6) = v58;
    *((void *)v43 + 7) = v44;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v43[v41], v25, v56);
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v43[v42], v53, v55);
    uint64_t v45 = v59;
    *(void *)&v43[v57] = v60;
    *(void *)&v43[v52] = v45;
    uint64_t v46 = (uint64_t *)&v43[v51];
    uint64_t v47 = v64;
    *uint64_t v46 = v63;
    v46[1] = v47;
    sub_24D46C820(v44, 1);
    swift_retain();
    uint64_t v48 = v44;
    sub_24D46C820(v44, 1);
    uint64_t v49 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_24D6E9F88((uint64_t)"stageCreation(capturedContent:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 102, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v61, (uint64_t)sub_24D7B9808, (uint64_t)v43, v49, MEMORY[0x263F8D310]);
    sub_24D7B76E8(v48, 1, MEMORY[0x263F8EED8]);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v27 = v56;
    uint64_t v26 = v57;
    uint64_t v28 = v59;
    uint64_t v29 = v60;
    BOOL v30 = sub_24D8903D0();
    uint64_t v32 = v63;
    uint64_t v31 = v64;
    if (v30)
    {
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v32;
      *(void *)(v33 + 24) = v31;
      uint64_t v34 = (void *)swift_allocObject();
      v34[2] = v32;
      void v34[3] = v31;
      uint64_t v35 = v62;
      uint64_t v34[4] = v62;
      sub_24D46C820(v35, 0);
      swift_retain();
      sub_24D46C820(v35, 0);
      uint64_t v36 = type metadata accessor for Continuation();
      swift_retain();
      sub_24D6E9F88((uint64_t)"stageCreation(capturedContent:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 102, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v33, (uint64_t)sub_24D7B7710, (uint64_t)v34, v36, MEMORY[0x263F8D310]);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v35 = v62;
      swift_retain();
      sub_24D79C7AC(a10, (uint64_t)v35, v27, v26, v29, v28, a11, v32, v31);
    }
    sub_24D7B76E8(v35, 0, MEMORY[0x263F8EED8]);
  }
}

uint64_t sub_24D79C7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v69 = a8;
  uint64_t v70 = a6;
  uint64_t v72 = a1;
  uint64_t v73 = a7;
  uint64_t v78 = a3;
  uint64_t v79 = a5;
  uint64_t v68 = a4;
  uint64_t v71 = a2;
  uint64_t v11 = (void *)*v9;
  uint64_t v67 = *(void *)(*v9 + 616);
  uint64_t v66 = v11[75];
  uint64_t v77 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v81 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v83 = swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for FileItemVersion();
  uint64_t v63 = *(void *)(v12 - 8);
  uint64_t v64 = v12;
  uint64_t v65 = *(void *)(v63 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v76 = (char *)&v51 - v13;
  uint64_t v14 = v11[78];
  uint64_t v15 = v11[76];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = type metadata accessor for ItemState();
  uint64_t v74 = *(void *)(v16 - 8);
  uint64_t v75 = v16;
  uint64_t v59 = *(void *)(v74 + 64);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v51 - v17;
  unint64_t v52 = (char *)&v51 - v17;
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v58 = v14;
  uint64_t v20 = v15;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v56 = v20;
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v19;
  uint64_t v81 = v21;
  uint64_t AssociatedConformanceWitness = v22;
  uint64_t v83 = v23;
  type metadata accessor for FileItemVersion();
  swift_getTupleTypeMetadata2();
  uint64_t v24 = sub_24DCCA3F8();
  uint64_t v61 = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v62 = v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v51 - v26;
  unint64_t v57 = (char *)&v51 - v26;
  uint64_t v28 = v10[17];
  uint64_t v29 = 34;
  if ((v28 & 0x210000) == 0) {
    uint64_t v29 = 32;
  }
  if ((v28 & 0x200) != 0) {
    uint64_t v30 = v29;
  }
  else {
    uint64_t v30 = 2 * ((v28 & 0x210000) != 0);
  }
  uint64_t v54 = v30;
  uint64_t v53 = *(void **)(*(void *)(v79 + 32) + 16);
  uint64_t v60 = (char *)v10 + v11[72];
  uint64_t v31 = (char *)v10 + v11[84];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v31, v24);
  uint64_t v55 = *(void *)((char *)v10 + *(void *)(*v10 + 584));
  uint64_t v32 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v18, v78, v75);
  uint64_t v33 = v63;
  uint64_t v34 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v76, v68, v64);
  unint64_t v35 = (*(unsigned __int8 *)(v32 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v36 = (v59 + *(unsigned __int8 *)(v33 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v37 = (v65 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = (char *)swift_allocObject();
  uint64_t v40 = v67;
  uint64_t v41 = v56;
  *((void *)v39 + 2) = v66;
  *((void *)v39 + 3) = v41;
  uint64_t v42 = v58;
  *((void *)v39 + 4) = v40;
  *((void *)v39 + 5) = v42;
  uint64_t v43 = v69;
  *((void *)v39 + 6) = v79;
  *((void *)v39 + 7) = v43;
  *((void *)v39 + 8) = v77;
  *((void *)v39 + 9) = v10;
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v39[v35], v52, v75);
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v39[v36], v76, v34);
  *(void *)&v39[v37] = v70;
  uint64_t v44 = v54;
  *(void *)&v39[v38] = v54;
  uint64_t v76 = (char *)(*v53 + 616);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), char *, uint64_t, uint64_t))v76;
  uint64_t v46 = swift_getAssociatedTypeWitness();
  uint64_t v47 = swift_getAssociatedConformanceWitness();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v50 = v46;
  uint64_t v48 = v57;
  v45(v78, v71, v72, v60, v57, v55, v44, v73, sub_24D7B8DF8, v39, v50, v47);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v48, v61);
}

uint64_t sub_24D79CEB4(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v74 = a6;
  uint64_t v75 = a7;
  uint64_t v76 = a5;
  uint64_t v86 = a4;
  unint64_t v71 = a3;
  unint64_t v69 = a2;
  uint64_t v77 = a1;
  uint64_t v8 = *(void **)v7;
  uint64_t v9 = *(void *)(*(void *)v7 + 616);
  uint64_t v10 = *(void *)(*(void *)v7 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v89 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v91 = swift_getAssociatedConformanceWitness();
  uint64_t v85 = type metadata accessor for FileItemVersion();
  uint64_t v70 = *(void *)(v85 - 8);
  uint64_t v67 = *(void *)(v70 + 64);
  MEMORY[0x270FA5388](v85);
  uint64_t v84 = (char *)&v57 - v11;
  uint64_t v80 = v8;
  uint64_t v12 = v8[78];
  uint64_t v13 = v8[76];
  uint64_t v14 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v83 = type metadata accessor for ItemState();
  uint64_t v65 = *(void *)(v83 - 8);
  uint64_t v62 = *(void *)(v65 + 64);
  MEMORY[0x270FA5388](v83);
  uint64_t v82 = (char *)&v57 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v68 = v12;
  uint64_t v66 = v13;
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v16;
  uint64_t v89 = v17;
  uint64_t AssociatedConformanceWitness = v18;
  uint64_t v91 = v19;
  uint64_t v60 = type metadata accessor for FileItemVersion();
  uint64_t v64 = sub_24DCCA3F8();
  uint64_t v63 = *(void *)(v64 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v64);
  uint64_t v81 = (char *)&v57 - v21;
  uint64_t v87 = v14;
  uint64_t v79 = *(void **)(v14 - 8);
  uint64_t v22 = v79[8];
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v78 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v57 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v57 - v27;
  uint64_t v29 = *(void **)(*(void *)(v86 + 32) + 16);
  uint64_t v61 = v7;
  swift_getAssociatedTypeWitness();
  uint64_t v72 = v10;
  uint64_t v73 = v9;
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 64);
  swift_retain();
  uint64_t v32 = swift_checkMetadataState();
  char v33 = v31(v32, v30);
  uint64_t v34 = *v29;
  uint64_t v80 = v29;
  if (v33) {
    (*(void (**)(void))(v34 + 96))();
  }
  else {
    (*(void (**)(void))(v34 + 104))();
  }
  unint64_t v35 = v79;
  unint64_t v36 = (void (*)(char *, char *, uint64_t))v79[2];
  uint64_t v58 = v26;
  unint64_t v37 = v28;
  uint64_t v59 = v28;
  uint64_t v38 = v87;
  v36(v26, v28, v87);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v81, 1, 1);
  uint64_t v39 = v61;
  uint64_t v60 = *(void *)(v39 + *(void *)(*(void *)v39 + 584));
  v36(v78, v37, v38);
  uint64_t v40 = v65;
  (*(void (**)(char *, unint64_t, uint64_t))(v65 + 16))(v82, v69, v83);
  uint64_t v41 = v70;
  (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v84, v71, v85);
  unint64_t v42 = (*((unsigned __int8 *)v35 + 80) + 72) & ~(unint64_t)*((unsigned __int8 *)v35 + 80);
  unint64_t v69 = (v22 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = (*(unsigned __int8 *)(v40 + 80) + v69 + 8) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v44 = (v62 + *(unsigned __int8 *)(v41 + 80) + v43) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  unint64_t v71 = (v67 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = (char *)swift_allocObject();
  uint64_t v46 = v66;
  *((void *)v45 + 2) = v72;
  *((void *)v45 + 3) = v46;
  uint64_t v47 = v68;
  *((void *)v45 + 4) = v73;
  *((void *)v45 + 5) = v47;
  uint64_t v48 = v87;
  uint64_t v49 = v74;
  uint64_t v50 = v75;
  *((void *)v45 + 6) = v86;
  *((void *)v45 + 7) = v49;
  *((void *)v45 + 8) = v50;
  ((void (*)(char *, char *, uint64_t))v35[4])(&v45[v42], v78, v48);
  *(void *)&v45[v69] = v39;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v45[v43], v82, v83);
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v45[v44], v84, v85);
  *(void *)&v45[v71] = v76;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t, uint64_t, void, uint64_t (*)(uint64_t), char *))(*v80 + 504);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v52 = v58;
  uint64_t v53 = v81;
  v51(v58, v81, v60, v77, 0, sub_24D7B7DCC, v45);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v53, v64);
  uint64_t v54 = (void (*)(char *, uint64_t))v79[1];
  uint64_t v55 = v87;
  v54(v52, v87);
  return ((uint64_t (*)(char *, uint64_t))v54)(v59, v55);
}

uint64_t sub_24D79D74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v65 = a8;
  uint64_t v66 = a6;
  uint64_t v60 = a5;
  uint64_t v61 = a7;
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v59 = a1;
  uint64_t v67 = a9;
  uint64_t v9 = *(void **)a2;
  uint64_t v64 = *(void *)(*(void *)a2 + 104);
  uint64_t v62 = v9[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v76 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v78 = swift_getAssociatedConformanceWitness();
  uint64_t v11 = type metadata accessor for FileItemVersion();
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v72 = v11;
  uint64_t v58 = *(void *)(v71 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v70 = (char *)&v48 - v12;
  uint64_t v63 = a2;
  uint64_t v13 = v9[10];
  uint64_t v14 = v9[12];
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v56 = v14;
  uint64_t v55 = v13;
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = type metadata accessor for ItemState();
  uint64_t v68 = *(void *)(v16 - 8);
  uint64_t v69 = v16;
  uint64_t v17 = *(void *)(v68 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v54 = (char *)&v48 - v19;
  uint64_t v52 = v15;
  uint64_t v21 = *(void *)(v15 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  MEMORY[0x270FA5388](v18);
  uint64_t v24 = (char *)&v48 - v23;
  uint64_t v53 = (char *)&v48 - v23;
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v25 = sub_24DCCB058();
  uint64_t v50 = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void *)(v26 + 64);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v48 - v28;
  uint64_t v51 = (char *)&v48 - v28;
  uint64_t v30 = swift_allocObject();
  uint64_t v57 = v30;
  uint64_t v31 = v74;
  *(void *)(v30 + 16) = v73;
  *(void *)(v30 + 24) = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v29, v59, v25);
  uint64_t v49 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v60, v15);
  uint64_t v32 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v20, v61, v69);
  uint64_t v33 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v70, v65, v72);
  unint64_t v34 = (*(unsigned __int8 *)(v26 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v35 = (v27 + *(unsigned __int8 *)(v21 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v36 = (v22 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (*(unsigned __int8 *)(v32 + 80) + v36 + 8) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v38 = (v17 + *(unsigned __int8 *)(v33 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v39 = (v58 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = (char *)swift_allocObject();
  uint64_t v42 = v55;
  *((void *)v41 + 2) = v62;
  *((void *)v41 + 3) = v42;
  uint64_t v43 = v56;
  *((void *)v41 + 4) = v64;
  *((void *)v41 + 5) = v43;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v41[v34], v51, v50);
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v41[v35], v53, v52);
  *(void *)&v41[v36] = v66;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v41[v37], v54, v69);
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v41[v38], v70, v72);
  *(void *)&v41[v39] = v63;
  *(void *)&v41[v40] = v67;
  unint64_t v44 = &v41[(v40 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v45 = v74;
  *(void *)unint64_t v44 = v73;
  *((void *)v44 + 1) = v45;
  uint64_t v46 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D6E9F88((uint64_t)"lookup(continuation:requestedState:otherVersion:on:result:completion:)", 70, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v57, (uint64_t)sub_24D7B865C, (uint64_t)v41, v46, MEMORY[0x263F8D310]);
  swift_release();
  return swift_release();
}

void sub_24D79DDE4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, int8x16_t *), uint64_t a9)
{
  uint64_t v66 = a8;
  uint64_t v62 = a6;
  uint64_t v63 = a7;
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  uint64_t v53 = a2;
  uint64_t v67 = a1;
  uint64_t v65 = a9;
  uint64_t v10 = *a3;
  uint64_t v11 = *(void *)(*a3 + 608);
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v54 = *(void *)(v12 - 8);
  uint64_t v55 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v51 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v52 = (char *)&v48 - v15;
  uint64_t v64 = a3;
  uint64_t v16 = *(void *)(v10 + 624);
  uint64_t v50 = type metadata accessor for ItemPropagationResult();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v61 = sub_24DCCB058();
  uint64_t v58 = *(void *)(v61 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v61);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v56 = (void (*)(uint64_t))((char *)&v48 - v21);
  MEMORY[0x270FA5388](v20);
  uint64_t v49 = (void (*)(uint64_t))((char *)&v48 - v22);
  uint64_t v23 = sub_24DCC8288();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v16;
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  uint64_t v27 = sub_24DCCB058();
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (void **)((char *)&v48 - v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))((char *)&v48 - v28, v67, v27);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = *v29;
    id v32 = v31;
    sub_24DCC8158();
    sub_24D7B896C();
    char v33 = sub_24DCC86A8();

    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    if ((v33 & 1) != 0
      && (swift_getAssociatedTypeWitness(),
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(),
          unint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72),
          uint64_t v36 = swift_checkMetadataState(),
          (v35(v36, AssociatedConformanceWitness) & 1) != 0))
    {

      unint64_t v37 = v49;
      (*(void (**)(void (*)(uint64_t), uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 1, 1);
      uint64_t v38 = v61;
      swift_storeEnumTagMultiPayload();
      sub_24D79A6EC(v37, v59, v60, 0, v62, v63, v66, v65);
      (*(void (**)(void (*)(uint64_t), uint64_t))(v58 + 8))(v37, v38);
    }
    else
    {
      unint64_t v40 = v56;
      *(void *)uint64_t v56 = v31;
      uint64_t v41 = v61;
      swift_storeEnumTagMultiPayload();
      id v42 = v31;
      sub_24D79A6EC(v40, v59, v60, 0, v62, v63, v66, v65);
      (*(void (**)(void (*)(uint64_t), uint64_t))(v58 + 8))(v40, v41);
    }
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = swift_retain();
    v66(v39, 0, 0, 0);
    swift_release_n();
  }
  else
  {
    uint64_t v44 = v54;
    uint64_t v43 = v55;
    uint64_t v45 = v52;
    (*(void (**)(char *, void **, uint64_t))(v54 + 32))(v52, v29, v55);
    uint64_t v46 = (uint64_t)v51;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v51, v45, v43);
    sub_24D7CDE2C(v46, 0, 0, v11, v19);
    uint64_t v47 = v61;
    swift_storeEnumTagMultiPayload();
    sub_24D79A6EC((void (*)(uint64_t))v19, v59, v60, 0, v62, v63, v66, v65);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v19, v47);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
  }
}

uint64_t sub_24D79E458(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, uint64_t a8, char a9)
{
  unint64_t v123 = a7;
  uint64_t v124 = a8;
  uint64_t v118 = a1;
  unint64_t v119 = a6;
  uint64_t v129 = a5;
  uint64_t v130 = a3;
  uint64_t v131 = a4;
  uint64_t v10 = *a2;
  uint64_t v11 = *(void *)(*a2 + 96);
  uint64_t v12 = *(void *)(*a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v133 = swift_getAssociatedTypeWitness();
  uint64_t v134 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v136 = swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v111 = sub_24DCCA3F8();
  uint64_t v109 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v108 = (char *)&v102 - v13;
  type metadata accessor for ItemPropagationResult();
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v115 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v120 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v114 = (char *)&v102 - v17;
  uint64_t v18 = *(void *)(v10 + 104);
  uint64_t v125 = a2;
  uint64_t v19 = *(void *)(v10 + 88);
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  uint64_t v133 = v20;
  uint64_t v134 = v21;
  uint64_t AssociatedConformanceWitness = v22;
  uint64_t v136 = v23;
  uint64_t v132 = type metadata accessor for FileItemVersion();
  uint64_t v117 = *(void *)(v132 - 8);
  uint64_t v24 = *(void *)(v117 + 64);
  MEMORY[0x270FA5388](v132);
  uint64_t v26 = (char *)&v102 - v25;
  uint64_t v121 = v11;
  uint64_t v122 = v12;
  swift_getAssociatedConformanceWitness();
  uint64_t v27 = type metadata accessor for ItemState();
  uint64_t v113 = *(void *)(v27 - 8);
  uint64_t v28 = *(void *)(v113 + 64);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v102 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  uint64_t v116 = v14;
  uint64_t v31 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v32 = sub_24DCCB058();
  MEMORY[0x270FA5388](v32);
  unint64_t v34 = (void **)((char *)&v102 - v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))((char *)&v102 - v33, v118, v32);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t AssociatedTypeWitness = v27;
  uint64_t v128 = v26;
  uint64_t v126 = v30;
  if (EnumCaseMultiPayload == 1)
  {
    unint64_t v37 = *v34;
    uint64_t v38 = swift_allocObject();
    uint64_t v120 = v38;
    uint64_t v39 = v131;
    *(void *)(v38 + 16) = v130;
    *(void *)(v38 + 24) = v39;
    unint64_t v40 = v30;
    uint64_t v41 = v18;
    uint64_t v42 = v113;
    (*(void (**)(char *, unint64_t, uint64_t))(v113 + 16))(v40, v119, v27);
    uint64_t v43 = v117;
    (*(void (**)(char *, unint64_t, uint64_t))(v117 + 16))(v26, v123, v132);
    unint64_t v44 = (*(unsigned __int8 *)(v42 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    unint64_t v45 = (v28 + *(unsigned __int8 *)(v43 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v123 = (v24 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v46 = (v123 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = (char *)swift_allocObject();
    uint64_t v48 = v122;
    *((void *)v47 + 2) = v19;
    *((void *)v47 + 3) = v48;
    uint64_t v49 = v121;
    *((void *)v47 + 4) = v41;
    *((void *)v47 + 5) = v49;
    *((void *)v47 + 6) = v129;
    *((void *)v47 + 7) = v37;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v47[v44], v126, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v47[v45], v128, v132);
    uint64_t v50 = v124;
    *(void *)&v47[v123] = v125;
    *(void *)&v47[v46] = v50;
    uint64_t v51 = &v47[(v46 + 15) & 0xFFFFFFFFFFFFFFF8];
    uint64_t v52 = v131;
    *(void *)uint64_t v51 = v130;
    *((void *)v51 + 1) = v52;
    swift_retain_n();
    swift_retain();
    id v53 = v37;
    uint64_t v54 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    sub_24D6E9F88((uint64_t)"create(capturedContent:stagedContext:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 109, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v120, (uint64_t)sub_24D7B9808, (uint64_t)v47, v54, MEMORY[0x263F8D310]);

    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v106 = v24;
    uint64_t v56 = v113;
    uint64_t v107 = v19;
    uint64_t v118 = v18;
    unint64_t v57 = v119;
    uint64_t v105 = *(void **)((char *)v34 + *(int *)(v31 + 48));
    uint64_t v58 = v115;
    uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 32);
    uint64_t v60 = v114;
    uint64_t v61 = v116;
    uint64_t v104 = v115 + 32;
    uint64_t v103 = v59;
    v59(v114, (uint64_t)v34, v116);
    if ((a9 & 0x20) == 0) {
      goto LABEL_7;
    }
    uint64_t v62 = v60;
    uint64_t v63 = v129 + *(void *)(*(void *)v129 + 672);
    swift_beginAccess();
    uint64_t v64 = v109;
    uint64_t v65 = v108;
    uint64_t v66 = v111;
    (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v108, v63, v111);
    LODWORD(v63) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v65, 1);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
    BOOL v67 = v63 == 1;
    uint64_t v60 = v62;
    if (v67)
    {
      TupleTypeMetadata2 = *(void *)(v125[5] + 16);
      uint64_t v68 = v129;
      uint64_t v111 = v68 + *(void *)(*(void *)v68 + 576);
      uint64_t v69 = v58;
      (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v120, v60, v61);
      uint64_t v70 = v56;
      (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v126, v57, AssociatedTypeWitness);
      uint64_t v71 = v117;
      (*(void (**)(char *, unint64_t, uint64_t))(v117 + 16))(v128, v123, v132);
      unint64_t v72 = (*(unsigned __int8 *)(v69 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      unint64_t v73 = (v112 + *(unsigned __int8 *)(v56 + 80) + v72) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      unint64_t v74 = (v28 + *(unsigned __int8 *)(v71 + 80) + v73) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
      unint64_t v123 = (v106 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v119 = (v123 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v75 = (char *)swift_allocObject();
      uint64_t v76 = v122;
      *((void *)v75 + 2) = v107;
      *((void *)v75 + 3) = v76;
      uint64_t v77 = v120;
      uint64_t v78 = v121;
      *((void *)v75 + 4) = v118;
      *((void *)v75 + 5) = v78;
      *((void *)v75 + 6) = v125;
      *((void *)v75 + 7) = v68;
      uint64_t v79 = v131;
      *((void *)v75 + 8) = v130;
      *((void *)v75 + 9) = v79;
      v103(&v75[v72], v77, v61);
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(&v75[v73], v126, AssociatedTypeWitness);
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v75[v74], v128, v132);
      uint64_t v80 = v105;
      uint64_t v81 = v124;
      *(void *)&v75[v123] = v105;
      *(void *)&v75[v119] = v81;
      uint64_t v82 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))(*(void *)TupleTypeMetadata2
                                                                                    + 656);
      id v83 = v80;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v82(v111, sub_24D7B958C, v75);
    }
    else
    {
LABEL_7:
      uint64_t v84 = swift_allocObject();
      uint64_t v111 = v84;
      uint64_t v85 = v131;
      *(void *)(v84 + 16) = v130;
      *(void *)(v84 + 24) = v85;
      (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v120, v60, v61);
      (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v126, v57, AssociatedTypeWitness);
      uint64_t v86 = v117;
      (*(void (**)(char *, unint64_t, uint64_t))(v117 + 16))(v128, v123, v132);
      unint64_t v87 = (*(unsigned __int8 *)(v58 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      unint64_t v88 = (v112 + *(unsigned __int8 *)(v56 + 80) + v87) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      unint64_t v89 = (v28 + *(unsigned __int8 *)(v86 + 80) + v88) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
      unint64_t v123 = (v106 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v90 = (v123 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v91 = (v90 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v92 = (char *)swift_allocObject();
      uint64_t v93 = v122;
      *((void *)v92 + 2) = v107;
      *((void *)v92 + 3) = v93;
      uint64_t v94 = v120;
      uint64_t v95 = v121;
      *((void *)v92 + 4) = v118;
      *((void *)v92 + 5) = v95;
      *((void *)v92 + 6) = v129;
      v103(&v92[v87], v94, v61);
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v92[v88], v126, AssociatedTypeWitness);
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(&v92[v89], v128, v132);
      uint64_t v96 = v105;
      *(void *)&v92[v123] = v105;
      *(void *)&v92[v90] = v125;
      *(void *)&v92[v91] = v124;
      uint64_t v97 = &v92[(v91 + 15) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v98 = v131;
      *(void *)uint64_t v97 = v130;
      *((void *)v97 + 1) = v98;
      uint64_t v99 = type metadata accessor for Continuation();
      swift_retain_n();
      uint64_t v100 = v129;
      swift_retain_n();
      swift_retain();
      swift_retain();
      id v101 = v96;
      sub_24D6E9F88((uint64_t)"create(capturedContent:stagedContext:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 109, 2u, (uint64_t)sub_24D7B4A74, v100, (uint64_t)sub_24D73CC58, v111, (uint64_t)sub_24D7B903C, (uint64_t)v92, v99, MEMORY[0x263F8D310]);

      swift_release();
    }
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(v114, v116);
  }
}

uint64_t sub_24D79F214(uint64_t a1, void (*a2)(void, uint64_t, uint64_t, int8x16_t *), uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(void, uint64_t, uint64_t, int8x16_t *), uint64_t a8)
{
  uint64_t v19 = a7;
  uint64_t v20 = a8;
  type metadata accessor for ItemPropagationResult();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v13 = sub_24DCCB058();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (void (*)(uint64_t))((char *)&v19 - v15);
  *(void (**)(void, uint64_t, uint64_t, int8x16_t *))((char *)&v19 - v15) = a2;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a2;
  sub_24D79A6EC(v16, a3, a4, 0, a5, a6, v19, v20);
  return (*(uint64_t (**)(void (*)(uint64_t), uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_24D79F3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v60 = a8;
  uint64_t v61 = a3;
  uint64_t v58 = a7;
  uint64_t v55 = a6;
  uint64_t v67 = a5;
  uint64_t v65 = a4;
  uint64_t v62 = a9;
  uint64_t v63 = a10;
  uint64_t v10 = *(void **)a2;
  uint64_t v59 = *(void *)(*(void *)a2 + 104);
  uint64_t v57 = v10[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v69 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v71 = swift_getAssociatedConformanceWitness();
  uint64_t v64 = type metadata accessor for FileItemVersion();
  uint64_t v66 = *(void *)(v64 - 8);
  uint64_t v53 = *(void *)(v66 + 64);
  MEMORY[0x270FA5388](v64);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v51 = (char *)&v45 - v12;
  uint64_t v56 = a2;
  uint64_t v14 = v10[10];
  uint64_t v15 = v10[12];
  swift_getAssociatedTypeWitness();
  uint64_t v52 = v14;
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = type metadata accessor for ItemState();
  uint64_t v49 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t v50 = (char *)&v45 - v19;
  type metadata accessor for ItemPropagationResult();
  uint64_t v21 = sub_24DCCA3F8();
  uint64_t v47 = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v45 - v24;
  uint64_t v48 = (char *)&v45 - v24;
  uint64_t v26 = swift_allocObject();
  uint64_t v54 = v26;
  uint64_t v27 = v67;
  *(void *)(v26 + 16) = v65;
  *(void *)(v26 + 24) = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v55, v21);
  uint64_t v46 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v58, v16);
  uint64_t v28 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v13, v60, v64);
  unint64_t v29 = (*(unsigned __int8 *)(v22 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v30 = (v23 + *(unsigned __int8 *)(v17 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v31 = (v18 + *(unsigned __int8 *)(v28 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v32 = (v53 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = (char *)swift_allocObject();
  uint64_t v36 = v52;
  *((void *)v35 + 2) = v57;
  *((void *)v35 + 3) = v36;
  *((void *)v35 + 4) = v59;
  *((void *)v35 + 5) = v15;
  uint64_t v37 = v61;
  *((void *)v35 + 6) = v61;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v35[v29], v48, v47);
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v35[v30], v50, v49);
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v35[v31], v51, v64);
  uint64_t v39 = v62;
  uint64_t v38 = v63;
  *(void *)&v35[v32] = v62;
  *(void *)&v35[v33] = v56;
  *(void *)&v35[v34] = v38;
  unint64_t v40 = &v35[(v34 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v41 = v67;
  *(void *)unint64_t v40 = v65;
  *((void *)v40 + 1) = v41;
  uint64_t v42 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  id v43 = v39;
  swift_retain();
  swift_retain();
  sub_24D6E9F88((uint64_t)"create(capturedContent:stagedContext:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 109, 2u, (uint64_t)sub_24D7B4A74, v37, (uint64_t)sub_24D73CC58, v54, (uint64_t)sub_24D7B903C, (uint64_t)v35, v42, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D79F974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, void (*a8)(void, uint64_t, uint64_t, int8x16_t *), uint64_t a9)
{
  uint64_t v20 = a7;
  uint64_t v21 = a8;
  uint64_t v18 = a5;
  uint64_t v19 = a6;
  type metadata accessor for ItemPropagationResult();
  uint64_t v12 = sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v13 = sub_24DCCB058();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (void (*)(uint64_t))((char *)&v18 - v15);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))((char *)&v18 - v15, a2, v12);
  swift_storeEnumTagMultiPayload();
  sub_24D79A6EC(v16, a3, a4, v18, v19, v20, v21, a9);
  return (*(uint64_t (**)(void (*)(uint64_t), uint64_t))(v14 + 8))(v16, v13);
}

void sub_24D79FB34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v111 = a4;
  uint64_t v112 = a5;
  uint64_t v113 = a3;
  uint64_t v114 = a2;
  uint64_t v118 = (void *)a1;
  uint64_t v7 = (void *)*v5;
  uint64_t v8 = *(uint64_t **)(*v5 + 624);
  uint64_t v9 = *(void *)(*v5 + 608);
  swift_getAssociatedTypeWitness();
  uint64_t v102 = v9;
  uint64_t v103 = v8;
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for ItemState();
  uint64_t v11 = sub_24DCCA3F8();
  uint64_t v99 = *(void *)(v11 - 8);
  uint64_t v100 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v110 = (char *)&v96 - v12;
  uint64_t v13 = v7[77];
  uint64_t v14 = v7[75];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v104 = v13;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v120 = AssociatedTypeWitness;
  uint64_t v121 = v16;
  uint64_t v122 = AssociatedConformanceWitness;
  uint64_t v123 = v18;
  uint64_t v19 = type metadata accessor for FileItemVersion();
  uint64_t v108 = sub_24DCCA3F8();
  uint64_t v20 = *(void *)(v108 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v108);
  uint64_t v23 = (char *)&v96 - v22;
  uint64_t v107 = v10;
  uint64_t v117 = *(void *)(v10 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v97 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  unint64_t v105 = (unint64_t)&v96 - v27;
  uint64_t v28 = *(void *)(v19 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v109 = (char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  unint64_t v32 = (char *)&v96 - v31;
  uint64_t v98 = *(uint64_t **)(v118[4] + 16);
  sub_24D3F0BA0((uint64_t)v6 + v7[83], (uint64_t)v124, qword_26B197140);
  unint64_t v33 = (char *)v6 + *(void *)(*v6 + 640);
  swift_beginAccess();
  uint64_t v34 = v20;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v36 = v33;
  uint64_t v37 = v19;
  uint64_t v38 = v28;
  uint64_t v39 = v108;
  v35(v23, v36, v108);
  LODWORD(v106) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v23, 1, v37);
  uint64_t v115 = v37;
  uint64_t v116 = v28;
  unint64_t v101 = (unint64_t)v32;
  if (v106 == 1)
  {
    sub_24D5D990C(v124, (void (*)(void, void, void, void, void, void, void))sub_24D3F1CDC);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v39);
    uint64_t v120 = v14;
    uint64_t v121 = v102;
    uint64_t v122 = v104;
    uint64_t v123 = (uint64_t)v103;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    unint64_t v40 = (void *)swift_allocError();
    uint64_t v42 = v41;
    uint64_t v43 = swift_getAssociatedTypeWitness();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v45 = (void *)(v42 + *(int *)(TupleTypeMetadata2 + 48));
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v42, (char *)v6 + *(void *)(*v6 + 576), v43);
    *uint64_t v45 = 0xD000000000000019;
    v45[1] = 0x800000024DD068D0;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v42, 0, 1, TupleTypeMetadata2);
    swift_willThrow();
    LODWORD(v110) = 0;
    uint64_t v46 = v112;
    goto LABEL_6;
  }
  uint64_t v108 = v14;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v48 = v109;
  v47(v109, v23, v37);
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v32, v48, v37);
  uint64_t v49 = (char *)v6 + *(void *)(*v6 + 656);
  swift_beginAccess();
  uint64_t v50 = v99;
  uint64_t v51 = v110;
  uint64_t v52 = v49;
  uint64_t v53 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v110, v52, v100);
  uint64_t v54 = v117;
  uint64_t v55 = v107;
  int v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48))(v51, 1, v107);
  uint64_t v46 = v112;
  if (v56 != 1)
  {
    uint64_t v61 = v97;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v97, v110, v55);
    (*(void (**)(unint64_t, char *, uint64_t))(v54 + 16))(v105, v61, v55);
    uint64_t v62 = *(void *)(*v6 + 576);
    uint64_t v103 = v6;
    uint64_t v63 = (uint64_t)v6 + v62;
    sub_24D5D990C(v124, (void (*)(void, void, void, void, void, void, void))sub_24D3F1CDC);
    sub_24D798724((uint64_t)v118, v63, (uint64_t)v119);
    uint64_t v77 = *(void (**)(unint64_t, uint64_t))(v54 + 8);
    uint64_t v117 = v54 + 8;
    uint64_t v106 = v77;
    v77((unint64_t)v61, v55);
    uint64_t v78 = *(char **)(v38 + 8);
    uint64_t v116 = v38 + 8;
    uint64_t v110 = v78;
    ((void (*)(char *, uint64_t))v78)(v109, v37);
    sub_24D3F0BA0((uint64_t)v119, (uint64_t)&v120, &qword_26B197970);
    int v79 = sub_24D3F0D40((uint64_t)&v120);
    if (v79 == 1)
    {
      uint64_t v80 = *(int *)(v55 + 40);
      uint64_t v81 = (void *)(v105 + v80 + *(int *)(type metadata accessor for ItemMetadata() + 148));
      swift_bridgeObjectRelease();
      *uint64_t v81 = 0;
      v81[1] = 0;
    }
    uint64_t v82 = v55;
    swift_getAssociatedTypeWitness();
    uint64_t v83 = swift_getAssociatedConformanceWitness();
    uint64_t v84 = *(uint64_t (**)(uint64_t, uint64_t))(v83 + 64);
    sub_24D401194(v119, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
    uint64_t v85 = swift_checkMetadataState();
    if (v84(v85, v83) & 1) != 0 || ((*(uint64_t (**)(uint64_t, uint64_t))(v83 + 72))(v85, v83))
    {
      sub_24D401194(v119, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
      unint64_t v86 = v105;
      unint64_t v87 = v101;
      sub_24D79CEB4(v114, v105, v101, (uint64_t)v118, v113, (uint64_t)v111, v46);
      sub_24D5D990C(v124, (void (*)(void, void, void, void, void, void, void))sub_24D3E3850);
    }
    else
    {
      unint64_t v91 = v111;
      if (v114)
      {
        type metadata accessor for StagedContext();
        uint64_t v92 = swift_dynamicCastClass();
        uint64_t v93 = v113;
        if (!v92) {
          sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Propagation.swift", 101, 2, 892);
        }
        uint64_t v94 = v92;
        uint64_t v88 = v82;
        swift_retain();
        uint64_t v95 = v94;
        unint64_t v86 = v105;
        unint64_t v89 = v101;
        sub_24D79C7AC((uint64_t)v124, v95, v105, v101, (uint64_t)v118, v93, (uint64_t)v119, (uint64_t)v91, v46);
        sub_24D5D990C(v124, (void (*)(void, void, void, void, void, void, void))sub_24D3E3850);
        swift_release();
        sub_24D401194(v119, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
        goto LABEL_21;
      }
      unint64_t v86 = v105;
      unint64_t v87 = v101;
      sub_24D79BCD4(v124, v105, v101, (uint64_t)v118, v113, (uint64_t)v119, (uint64_t)v111, v46);
      sub_24D5D990C(v124, (void (*)(void, void, void, void, void, void, void))sub_24D3E3850);
      sub_24D401194(v119, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
    }
    uint64_t v88 = v82;
    unint64_t v89 = v87;
LABEL_21:
    uint64_t v90 = v115;
    sub_24D401194(v119, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
    ((void (*)(unint64_t, uint64_t))v110)(v89, v90);
    v106(v86, v88);
    return;
  }
  sub_24D5D990C(v124, (void (*)(void, void, void, void, void, void, void))sub_24D3F1CDC);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v110, v53);
  uint64_t v120 = v108;
  uint64_t v121 = v102;
  uint64_t v122 = v104;
  uint64_t v123 = (uint64_t)v103;
  type metadata accessor for Propagation.PropagationError();
  uint64_t v57 = v38;
  swift_getWitnessTable();
  unint64_t v40 = (void *)swift_allocError();
  uint64_t v59 = v58;
  swift_getAssociatedTypeWitness();
  uint64_t v60 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v109, v37);
  LODWORD(v110) = 0;
LABEL_6:
  uint64_t v64 = (void *)swift_allocObject();
  uint64_t v65 = (void (*)(void, void, void, int8x16_t *))v111;
  v64[2] = v6;
  v64[3] = v65;
  uint64_t v66 = (uint64_t)v118;
  v64[4] = v46;
  v64[5] = v66;
  uint64_t v67 = v113;
  uint64_t v68 = v114;
  v64[6] = v113;
  if (v68 && (type metadata accessor for StagedContext(), (uint64_t v69 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v70 = v69;
    uint64_t v71 = (void *)swift_allocObject();
    v71[2] = v118;
    v71[3] = v65;
    v71[4] = v46;
    v71[5] = sub_24D7B4ED8;
    v71[6] = v64;
    v71[7] = v40;
    uint64_t v72 = *v98;
    uint64_t v111 = *(void (**)(void, void, void))(*v98 + 608);
    uint64_t v112 = v72 + 608;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v73 = v40;
    v111(v70, sub_24D7B78A0, v71);
    uint64_t v74 = v115;
    sub_24D5D990C(v124, (void (*)(void, void, void, void, void, void, void))sub_24D3E3850);
    swift_release();

    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v75 = v118;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_24D7AB0EC(v40, v6, v65, v46, v75, v67);
    sub_24D5D990C(v124, (void (*)(void, void, void, void, void, void, void))sub_24D3E3850);
    swift_release();

    uint64_t v74 = v115;
  }
  uint64_t v76 = v116;
  if (v110) {
    (*(void (**)(unint64_t, uint64_t))(v117 + 8))(v105, v107);
  }
  if (v106 != 1) {
    (*(void (**)(unint64_t, uint64_t))(v76 + 8))(v101, v74);
  }
}

id sub_24D7A0998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_getAssociatedTypeWitness();
  type metadata accessor for SnapshotItem();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v5 = a1 + TupleTypeMetadata[12];
  uint64_t v6 = TupleTypeMetadata[16];
  uint64_t v7 = TupleTypeMetadata[20];
  uint64_t v8 = (uint64_t)v1 + *(void *)(v3 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v8, AssociatedTypeWitness);
  uint64_t v10 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  uint64_t v11 = *v1;
  *(void *)(a1 + v6) = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 632));
  id v14 = *(id *)((char *)v1 + *(void *)(v11 + 584));
  *(void *)(a1 + v7) = v14;
  type metadata accessor for DirectionalTestingOperation();
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = type metadata accessor for TestingOperation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 0, 1, v12);

  return v14;
}

uint64_t sub_24D7A0C90()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 640);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v2 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v6 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  sub_24D3E3850(*(void *)(v0 + *(void *)(*(void *)v0 + 664)), *(void *)(v0 + *(void *)(*(void *)v0 + 664) + 8), *(void *)(v0 + *(void *)(*(void *)v0 + 664) + 16));
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 672);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_24DCCA3F8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_24D7A104C()
{
  uint64_t v0 = sub_24D797F34();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 640);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v2 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v6 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  sub_24D3E3850(*(void *)(v0 + *(void *)(*(void *)v0 + 664)), *(void *)(v0 + *(void *)(*(void *)v0 + 664) + 8), *(void *)(v0 + *(void *)(*(void *)v0 + 664) + 16));
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 672);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return v0;
}

uint64_t sub_24D7A1414()
{
  return sub_24D7B1A28(sub_24D7A104C);
}

uint64_t type metadata accessor for Propagation.CreateItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D7A1444()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_24DCCA3F8();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
    uint64_t result = sub_24DCCA3F8();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedConformanceWitness();
      type metadata accessor for ItemState();
      uint64_t result = sub_24DCCA3F8();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedConformanceWitness();
        type metadata accessor for FileItemVersion();
        uint64_t result = sub_24DCCA3F8();
        if (v4 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t sub_24D7A1768()
{
  return 0x692D657461647075;
}

uint64_t sub_24D7A1788()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 664);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 4;
  }
  else {
    return *(unsigned __int8 *)(v1 + *(int *)(v2 + 40));
  }
}

uint64_t sub_24D7A18B4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 664);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 2;
  }
  uint64_t v4 = v1 + *(int *)(v2 + 40);
  return *(unsigned __int8 *)(v4 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_24D7A19F0()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 664);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t result = 0;
  if (!v3)
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    return *(void *)(v5 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_24D7A1B34()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 664);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ItemState();
  unsigned __int8 v3 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2))
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v1 + *(int *)(v2 + 40);
    uint64_t v4 = *(unsigned int *)(v5 + 4);
    unsigned __int8 v3 = *(unsigned char *)(v5 + 8);
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_24D7A1C78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 664);
  swift_beginAccess();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ItemState();
  uint64_t v6 = 1;
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
    uint64_t v6 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v6, 1, AssociatedTypeWitness);
}

uint64_t sub_24D7A1E08()
{
  uint64_t v1 = v0;
  sub_24DCCA728();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(v1 + *(void *)(*(void *)v1 + 584));
  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_description);
    sub_24DCC97E8();
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D97C4E0(*(void *)(v1 + *(void *)(*(void *)v1 + 640)));
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void (*sub_24D7A20BC(uint64_t a1, void *a2))(void, void)
{
  uint64_t v347 = a2;
  uint64_t v306 = a1;
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 608);
  uint64_t v5 = *(void *)(*(void *)v2 + 624);
  uint64_t v305 = type metadata accessor for JobLockRule();
  uint64_t v302 = *(void *)(v305 - 8);
  MEMORY[0x270FA5388](v305);
  os_log_type_t v304 = (char *)&v284 - v6;
  uint64_t v7 = type metadata accessor for SnapshotItem();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v294 = *(void *)(v8 - 8);
  uint64_t v295 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v298 = v7;
  uint64_t v299 = (char *)&v284 - v10;
  uint64_t v297 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v293 = (char *)&v284 - v11;
  uint64_t v345 = v3;
  uint64_t v348 = v2;
  uint64_t v12 = *(void *)(v3 + 616);
  uint64_t v13 = *(void *)(v3 + 600);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = type metadata accessor for ItemState();
  uint64_t v322 = *(void *)(v14 - 8);
  uint64_t v323 = (void (*)(void, void))v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v321 = (uint64_t *)((char *)&v284 - v15);
  uint64_t v349 = v4;
  uint64_t v16 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v17 = type metadata accessor for ItemState();
  uint64_t v307 = sub_24DCCA3F8();
  uint64_t v309 = *(void *)(v307 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v307);
  uint64_t v303 = (char *)&v284 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v320 = (uint64_t)&v284 - v21;
  uint64_t v310 = v17;
  uint64_t v311 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v308 = (char *)&v284 - v22;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  uint64_t v351 = v23;
  uint64_t v352 = v24;
  uint64_t v353 = AssociatedConformanceWitness;
  uint64_t v354 = v26;
  uint64_t v317 = type metadata accessor for FileItemVersion();
  uint64_t v27 = sub_24DCCA3F8();
  uint64_t v318 = *(void *)(v27 - 8);
  uint64_t v319 = v27;
  MEMORY[0x270FA5388](v27);
  unint64_t v316 = (char *)&v284 - v28;
  uint64_t v29 = type metadata accessor for SnapshotItem();
  uint64_t v30 = sub_24DCCA3F8();
  uint64_t v314 = *(void *)(v30 - 8);
  uint64_t v315 = (void (*)(void, void))v30;
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v329 = (char *)&v284 - v32;
  uint64_t v327 = v29;
  uint64_t v328 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v326 = (char *)&v284 - v33;
  uint64_t v34 = v349;
  uint64_t v35 = swift_getAssociatedTypeWitness();
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  uint64_t v38 = swift_getAssociatedConformanceWitness();
  uint64_t v351 = v35;
  uint64_t v352 = v36;
  uint64_t v353 = v37;
  uint64_t v354 = v38;
  uint64_t v39 = type metadata accessor for FileItemVersion();
  uint64_t v40 = sub_24DCCA3F8();
  uint64_t v334 = *(void *)(v40 - 8);
  uint64_t v335 = (char *)v40;
  uint64_t v41 = MEMORY[0x270FA5388](v40);
  uint64_t v313 = (char *)&v284 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v331 = (char *)&v284 - v44;
  uint64_t v333 = v39;
  uint64_t v336 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v330 = (char *)&v284 - v45;
  uint64_t v46 = AssociatedTypeWitness;
  uint64_t v47 = sub_24DCCA3F8();
  uint64_t v340 = *(void *)(v47 - 8);
  uint64_t v341 = v47;
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  uint64_t v300 = (char *)&v284 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  unint64_t v312 = (char *)&v284 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v342 = (char *)&v284 - v53;
  uint64_t v343 = *(void *)(v46 - 8);
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  id v296 = (char *)&v284 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v301 = (char *)&v284 - v57;
  MEMORY[0x270FA5388](v56);
  uint64_t v337 = (char *)&v284 - v58;
  uint64_t v324 = v13;
  uint64_t v325 = v12;
  uint64_t v351 = v13;
  uint64_t v352 = v34;
  uint64_t v353 = v12;
  uint64_t v332 = v16;
  uint64_t v354 = v16;
  uint64_t v59 = type metadata accessor for ItemReconciliation();
  uint64_t v60 = sub_24DCCA3F8();
  uint64_t v338 = *(void *)(v60 - 8);
  uint64_t v339 = v60;
  uint64_t v61 = MEMORY[0x270FA5388](v60);
  uint64_t v63 = (char *)&v284 - v62;
  uint64_t v344 = *(void *)(v59 - 8);
  uint64_t v64 = MEMORY[0x270FA5388](v61);
  uint64_t v66 = (char *)&v284 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = MEMORY[0x270FA5388](v64);
  uint64_t v69 = (char *)&v284 - v68;
  uint64_t v70 = MEMORY[0x270FA5388](v67);
  uint64_t v72 = (char *)&v284 - v71;
  MEMORY[0x270FA5388](v70);
  uint64_t v74 = (char *)&v284 - v73;
  uint64_t v75 = (void (*)(void, void))v347[2];
  uint64_t v76 = v346;
  uint64_t v77 = (uint64_t)&v348[*(void *)(v345 + 576)];
  sub_24D475DF0(v77, (uint64_t)v63);
  if (!v76)
  {
    uint64_t v345 = v77;
    uint64_t v346 = 0;
    uint64_t v78 = v342;
    uint64_t v290 = v66;
    uint64_t v291 = v75;
    uint64_t v289 = v69;
    unint64_t v292 = v74;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v344 + 48))(v63, 1, v59) == 1)
    {
      (*(void (**)(char *, uint64_t))(v338 + 8))(v63, v339);
      return 0;
    }
    uint64_t v338 = (uint64_t)v72;
    uint64_t v79 = v344;
    uint64_t v80 = v292;
    (*(void (**)(void))(v344 + 32))();
    uint64_t v82 = v340;
    uint64_t v81 = v341;
    uint64_t v83 = *(void (**)(char *))(v340 + 16);
    uint64_t v84 = v78;
    uint64_t v339 = (uint64_t)&v80[*(int *)(v59 + 52)];
    v83(v78);
    uint64_t v85 = v343 + 48;
    unint64_t v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v343 + 48);
    if (v86(v84, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v59);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v81);
      return 0;
    }
    unint64_t v87 = (char *)v59;
    unint64_t v286 = v86;
    uint64_t v287 = v85;
    uint64_t v88 = v343 + 32;
    unint64_t v89 = v337;
    unint64_t v285 = *(void (**)(char *, char *, uint64_t))(v343 + 32);
    v285(v337, v84, AssociatedTypeWitness);
    uint64_t v288 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v91 = v334;
    uint64_t v90 = v335;
    uint64_t v92 = v331;
    (*(void (**)(char *, uint64_t, char *))(v334 + 16))(v331, v339 + *(int *)(v288 + 48), v335);
    uint64_t v93 = v336;
    uint64_t v94 = v333;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v336 + 48))(v92, 1, v333) == 1)
    {
      (*(void (**)(char *, uint64_t))(v343 + 8))(v89, AssociatedTypeWitness);
      (*(void (**)(char *, char *))(v344 + 8))(v292, v87);
      (*(void (**)(char *, char *))(v91 + 8))(v92, v90);
      return 0;
    }
    uint64_t v96 = v343;
    uint64_t v284 = v88;
    uint64_t v342 = v87;
    uint64_t v97 = v330;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v330, v92, v94);
    uint64_t v75 = (void (*)(void, void))v347[5];
    uint64_t v98 = v329;
    uint64_t v99 = v346;
    (*(void (**)(uint64_t, void))(*(void *)v75 + 248))(v345, *(void *)&v348[*(void *)(*(void *)v348 + 632)]);
    uint64_t v346 = v99;
    if (v99)
    {
      (*(void (**)(char *, uint64_t))(v93 + 8))(v97, v94);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v337, AssociatedTypeWitness);
LABEL_12:
      (*(void (**)(char *, char *))(v344 + 8))(v292, v342);
      return v75;
    }
    uint64_t v101 = v327;
    uint64_t v100 = v328;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v328 + 48))(v98, 1, v327) == 1)
    {
      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v94);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v337, AssociatedTypeWitness);
      (*(void (**)(char *, char *))(v344 + 8))(v292, v342);
      (*(void (**)(char *, void))(v314 + 8))(v98, v315);
      return 0;
    }
    uint64_t v315 = v75;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v326, v98, v101);
    uint64_t v102 = *(char **)(v96 + 16);
    uint64_t v103 = v312;
    uint64_t v104 = AssociatedTypeWitness;
    uint64_t v331 = (char *)(v96 + 16);
    uint64_t v329 = v102;
    ((void (*)(char *, char *, uint64_t))v102)(v312, v337, AssociatedTypeWitness);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v103, 0, 1, v104);
    unint64_t v105 = v348;
    uint64_t v106 = &v348[*(void *)(*(void *)v348 + 648)];
    swift_beginAccess();
    (*(void (**)(unsigned char *, char *, uint64_t))(v340 + 40))(v106, v103, v341);
    swift_endAccess();
    uint64_t v107 = v336;
    uint64_t v108 = v313;
    (*(void (**)(char *, char *, uint64_t))(v336 + 16))(v313, v330, v94);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v108, 0, 1, v94);
    uint64_t v109 = &v105[*(void *)(*(void *)v105 + 680)];
    swift_beginAccess();
    (*(void (**)(unsigned char *, char *, char *))(v334 + 40))(v109, v108, v335);
    swift_endAccess();
    uint64_t v334 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v110 = (uint64_t *)&v292[*(int *)(v334 + 68)];
    uint64_t v111 = *v110;
    uint64_t v112 = v110[1];
    unint64_t v113 = v110[2];
    uint64_t v114 = v110[3];
    uint64_t v115 = v110[4];
    uint64_t v116 = v110[5];
    uint64_t v117 = v110[6];
    uint64_t v118 = (uint64_t *)&v105[*(void *)(*(void *)v105 + 672)];
    uint64_t v119 = *v118;
    uint64_t v120 = v118[1];
    unint64_t v121 = v118[2];
    uint64_t v345 = v118[3];
    uint64_t v122 = v326;
    uint64_t v335 = (char *)v118[5];
    uint64_t *v118 = v111;
    v118[1] = v112;
    v118[2] = v113;
    v118[3] = v114;
    v118[4] = v115;
    v118[5] = v116;
    v118[6] = v117;
    sub_24D3F1CDC(v111, v112, v113);
    uint64_t v123 = v105;
    sub_24D3E3850(v119, v120, v121);
    uint64_t v125 = v316;
    uint64_t v124 = v317;
    uint64_t v126 = *(void *)(v317 - 8);
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v316, &v122[*(int *)(v101 + 40)], v317);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v125, 0, 1, v124);
    uint64_t v127 = &v105[*(void *)(*(void *)v105 + 656)];
    swift_beginAccess();
    (*(void (**)(unsigned char *, char *, uint64_t))(v318 + 40))(v127, v125, v319);
    swift_endAccess();
    uint64_t v128 = v343;
    uint64_t v129 = *(void *)(*(void *)v105 + 688);
    v105[v129] = 0;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v131 = (void (*)(void, void, void))v321;
    sub_24D98B988(v101, WitnessTable, (uint64_t)v321);
    uint64_t v132 = v320;
    uint64_t v75 = v291;
    uint64_t v133 = v346;
    sub_24D47CABC((uint64_t)v131, v320);
    uint64_t v346 = v133;
    if (v133)
    {
      (*(void (**)(void (*)(void, void, void), void))(v322 + 8))(v131, v323);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v122, v101);
      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v337, AssociatedTypeWitness);
      goto LABEL_12;
    }
    uint64_t v345 = v129;
    (*(void (**)(void (*)(void, void, void), void))(v322 + 8))(v131, v323);
    uint64_t v135 = v310;
    uint64_t v134 = v311;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v311 + 48))(v132, 1, v310) == 1)
    {
      (*(void (**)(char *, uint64_t))(v328 + 8))(v122, v327);
      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
      (*(void (**)(char *, uint64_t))(v343 + 8))(v337, AssociatedTypeWitness);
      (*(void (**)(char *, char *))(v344 + 8))(v292, v342);
      (*(void (**)(uint64_t, uint64_t))(v309 + 8))(v132, v307);
      return 0;
    }
    uint64_t v136 = v308;
    (*(void (**)(char *, uint64_t, uint64_t))(v134 + 32))(v308, v132, v135);
    uint64_t v323 = (void (*)(void, void))v347[4];
    BOOL v137 = sub_24D8903D0();
    uint64_t v138 = *(int *)(v135 + 40);
    uint64_t v139 = &v136[v138];
    if (!v137)
    {
      v139[*(int *)(type metadata accessor for ItemMetadata() + 80)] = 0;
      uint64_t v146 = v307;
      uint64_t v147 = v309;
      goto LABEL_96;
    }
    uint64_t v335 = &v136[v138];
    int v140 = *v139;
    uint64_t v141 = v344;
    uint64_t v142 = v344 + 16;
    uint64_t v143 = v338;
    uint64_t v144 = v342;
    uint64_t v321 = *(void **)(v344 + 16);
    ((void (*)(uint64_t, char *, char *))v321)(v338, v292, v342);
    if (v140 == 2)
    {
      uint64_t v322 = *(void *)(v141 + 8);
      ((void (*)(uint64_t, char *))v322)(v143, v144);
      BOOL v145 = 0;
    }
    else
    {
      char v148 = *(unsigned char *)(v143 + *(int *)(v334 + 52));
      uint64_t v322 = *(void *)(v141 + 8);
      ((void (*)(uint64_t, char *))v322)(v143, v144);
      BOOL v145 = (v148 & 0xFB) == 0;
    }
    uint64_t v338 = type metadata accessor for ItemMetadata();
    uint64_t v149 = *(int *)(v338 + 80);
    uint64_t v150 = v335;
    v335[v149] = v145;
    uint64_t v151 = *(void *)((char *)v123 + *(void *)(*v123 + 640));
    uint64_t v152 = v330;
    uint64_t v153 = (void (*)(char *, char *, char *))v321;
    if ((v151 & 0x10) != 0)
    {
      uint64_t v154 = v123[17];
      if (v154)
      {
        v150[v149] = 0;
        goto LABEL_30;
      }
      if ((v154 & 2) != 0)
      {
        uint64_t v319 = v142;
        uint64_t v320 = v151;
        v150[v149] = 1;
        uint64_t v175 = (void (*)(void, void))v347[3];
        uint64_t v176 = v349;
        uint64_t v351 = v349;
        uint64_t v177 = v324;
        uint64_t v178 = v325;
        uint64_t v352 = v324;
        uint64_t v179 = v332;
        uint64_t v353 = v332;
        uint64_t v354 = v325;
        uint64_t v347 = (void *)type metadata accessor for ItemJob();
        uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
        sub_24DA604B8(MetatypeMetadata, MetatypeMetadata);
        swift_allocObject();
        uint64_t v181 = sub_24DCC9C58();
        uint64_t v351 = v176;
        uint64_t v352 = v177;
        uint64_t v353 = v179;
        uint64_t v354 = v178;
        uint64_t *v182 = type metadata accessor for Materialization.EvictItem();
        uint64_t v183 = sub_24D785484(v181);
        uint64_t v75 = v175;
        uint64_t v184 = v346;
        uint64_t v185 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v175 + 272))(v337, v183);
        uint64_t v346 = v184;
        if (v184) {
          goto LABEL_62;
        }
        uint64_t v200 = v185;
        swift_bridgeObjectRelease();
        uint64_t v351 = v200;
        sub_24DCC9D48();
        swift_getWitnessTable();
        char v201 = sub_24DCC9FE8();
        swift_bridgeObjectRelease();
        if ((v201 & 1) == 0)
        {
          uint64_t v123 = v348;
          v348[v345] = 1;
          goto LABEL_69;
        }
LABEL_65:
        uint64_t v123 = v348;
LABEL_69:
        uint64_t v147 = v309;
        uint64_t v157 = v339;
        uint64_t v158 = v288;
        uint64_t v151 = v320;
        uint64_t v153 = (void (*)(char *, char *, char *))v321;
LABEL_35:
        uint64_t v159 = v342;
        uint64_t v161 = v289;
        uint64_t v160 = v290;
        if ((*(unsigned char *)(v157 + *(int *)(v158 + 36)) & 0x10) != 0)
        {
          v335[*(int *)(v338 + 84)] = 0;
          uint64_t v162 = v292;
          v153(v161, v292, v159);
          uint64_t v320 = v151;
          if ((v151 & 0x100000000000) != 0)
          {
            uint64_t v167 = v159;
            int v168 = v161[*((int *)v159 + 14)];
            ((void (*)(char *, char *))v322)(v161, v167);
            if (v168 == 1) {
              v335[*(int *)(v338 + 60)] = 1;
            }
            uint64_t v159 = v342;
            ((void (*)(char *, char *, char *))v321)(v160, v292, v342);
            uint64_t v151 = v320;
            goto LABEL_45;
          }
          ((void (*)(char *, char *))v322)(v161, v159);
          ((void (*)(char *, char *, char *))v321)(v160, v162, v159);
          uint64_t v151 = v320;
        }
        else
        {
          v153(v290, v292, v342);
          if ((v151 & 0x100000000000) != 0)
          {
LABEL_45:
            long long v169 = v159;
            int v170 = v160[*((int *)v159 + 14)];
            ((void (*)(char *, char *))v322)(v160, v169);
            if (v170 == 1)
            {
              uint64_t v171 = *(int *)(v338 + 60);
              if ((v335[v171] & 1) == 0)
              {
                uint64_t v172 = v151;
                uint64_t v75 = v323;
                uint64_t v173 = v346;
                (*(void (**)(char *, uint64_t))(*(void *)v323 + 240))(v337, 1);
                uint64_t v346 = v173;
                if (v173)
                {
                  (*(void (**)(char *, uint64_t))(v311 + 8))(v308, v310);
                  (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                  (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                  (*(void (**)(char *, uint64_t))(v343 + 8))(v337, AssociatedTypeWitness);
                  ((void (*)(char *, char *))v322)(v292, v342);
                  return v75;
                }
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v297 + 48))(v299, 1, v298) == 1)
                {
                  (*(void (**)(char *, uint64_t))(v294 + 8))(v299, v295);
                }
                else
                {
                  uint64_t v203 = v297;
                  uint64_t v202 = v298;
                  uint64_t v204 = v293;
                  (*(void (**)(char *, char *, uint64_t))(v297 + 32))(v293, v299, v298);
                  int v205 = v204[*(int *)(v202 + 48) + *(int *)(v338 + 72)];
                  (*(void (**)(char *, uint64_t))(v203 + 8))(v204, v202);
                  if (v205 == 1)
                  {
                    uint64_t v206 = v335;
                    v335[*(int *)(v338 + 72)] = 1;
                    v206[v171] = 1;
                  }
                }
                uint64_t v123 = v348;
                uint64_t v147 = v309;
                uint64_t v151 = v172;
              }
            }
            if (!fpfs_supports_pkg_dataless_escape_prevention()
              || (uint64_t v207 = *(int *)(v338 + 60), (v335[v207] & 1) != 0))
            {
              uint64_t v163 = AssociatedTypeWitness;
              uint64_t v135 = v310;
              uint64_t v164 = (void (*)(char *, char *, uint64_t))v329;
              id v165 = v301;
              uint64_t v166 = v334;
              goto LABEL_76;
            }
            if (v335[*(int *)(v338 + 108)] == 1) {
              v335[v207] = 1;
            }
            uint64_t v163 = AssociatedTypeWitness;
            uint64_t v147 = v309;
            uint64_t v135 = v310;
            uint64_t v123 = v348;
LABEL_41:
            uint64_t v164 = (void (*)(char *, char *, uint64_t))v329;
            id v165 = v301;
            uint64_t v166 = v334;
LABEL_76:
            if ((v151 & 0x10010) == 0 || (uint64_t v208 = *(int *)(v338 + 84), !v335[v208]))
            {
              uint64_t v215 = v335;
              goto LABEL_84;
            }
            uint64_t v320 = v151;
            uint64_t v209 = v323;
            uint64_t v210 = *(void *)&v292[*(int *)(v166 + 36)];
            v164(v165, v337, v163);
            if ((v210 & 0x10) != 0)
            {
              (*(void (**)(char *, uint64_t))(v343 + 8))(v165, AssociatedTypeWitness);
              uint64_t v215 = v335;
              LODWORD(v151) = v320;
            }
            else
            {
              uint64_t v211 = v346;
              char v212 = (*(uint64_t (**)(char *))(*(void *)v209 + 464))(v165);
              uint64_t v346 = v211;
              if (v211)
              {
                uint64_t v75 = *(void (**)(void, void))(v343 + 8);
                uint64_t v213 = v165;
                uint64_t v214 = AssociatedTypeWitness;
                v75(v213, AssociatedTypeWitness);
                (*(void (**)(char *, uint64_t))(v311 + 8))(v308, v135);
                (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                v75(v337, v214);
                goto LABEL_90;
              }
              char v267 = v212;
              (*(void (**)(char *, uint64_t))(v343 + 8))(v165, AssociatedTypeWitness);
              uint64_t v215 = v335;
              LODWORD(v151) = v320;
              if ((v267 & 1) == 0)
              {
LABEL_84:
                if ((v151 & 0x10000) == 0)
                {
                  uint64_t v146 = v307;
                  uint64_t v136 = v308;
                  goto LABEL_96;
                }
                uint64_t v136 = v308;
                if (v215[*(int *)(v338 + 84)])
                {
                  uint64_t v216 = v346;
                  uint64_t v217 = (*(uint64_t (**)(char *))(*(void *)v323 + 520))(v308);
                  uint64_t v346 = v216;
                  uint64_t v218 = v336;
                  if (v216)
                  {
                    (*(void (**)(char *, uint64_t))(v311 + 8))(v136, v135);
                    (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                    uint64_t v219 = *(void (**)(char *, uint64_t))(v218 + 8);
                    uint64_t v75 = (void (*)(void, void))(v218 + 8);
                    v219(v330, v333);
                    goto LABEL_89;
                  }
                  *(void *)&v215[*(int *)(v338 + 76)] = v217;
                  uint64_t v146 = v307;
                }
                else
                {
                  uint64_t v146 = v307;
                }
LABEL_96:
                uint64_t v220 = v303;
                uint64_t v221 = v311;
                uint64_t v222 = v136;
                (*(void (**)(char *, char *, uint64_t))(v311 + 16))(v303, v136, v135);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v221 + 56))(v220, 0, 1, v135);
                uint64_t v223 = v220;
                uint64_t v224 = (char *)v123 + *(void *)(*v123 + 664);
                swift_beginAccess();
                (*(void (**)(char *, char *, uint64_t))(v147 + 40))(v224, v223, v146);
                swift_endAccess();
                uint64_t v225 = *(void *)((char *)v123 + *(void *)(*v123 + 640));
                uint64_t v226 = v123;
                uint64_t v227 = (uint64_t)v304;
                if (v225 == 16)
                {
                  uint64_t v228 = v222;
                  if ((v226[136] & 2) != 0)
                  {
                    swift_beginAccess();
                    sub_24D73C78C((uint64_t)(v226 + 56), (uint64_t)&v351);
                    uint64_t v349 = *((void *)v226 + 15);
                    sub_24DCCAD88();
                    uint64_t v229 = *(void *)(v302 + 72);
                    swift_allocObject();
                    uint64_t v348 = (unsigned char *)sub_24DCC9C58();
                    uint64_t v231 = v230;
                    uint64_t v232 = v337;
                    uint64_t v233 = AssociatedTypeWitness;
                    uint64_t v234 = (void (*)(uint64_t, char *, uint64_t))v329;
                    ((void (*)(uint64_t, char *, uint64_t))v329)(v230, v337, AssociatedTypeWitness);
                    swift_storeEnumTagMultiPayload();
                    uint64_t v235 = v231 + v229;
                    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
                    uint64_t v237 = v235 + *(int *)(TupleTypeMetadata3 + 48);
                    uint64_t v238 = v311;
                    uint64_t v239 = v235 + *(int *)(TupleTypeMetadata3 + 64);
                    v234(v235, v232, v233);
                    uint64_t v240 = v237;
                    int v241 = v308;
                    v234(v240, v308, v233);
                    uint64_t v242 = v239;
                    unint64_t v243 = v241;
                    v234(v242, v241, v233);
                    swift_storeEnumTagMultiPayload();
                    sub_24D785484((uint64_t)v348);
                    uint64_t v75 = (void (*)(void, void))sub_24D5773A8();
                    swift_bridgeObjectRelease();
                    sub_24D73C7F4((uint64_t)&v351);
                    (*(void (**)(char *, uint64_t))(v238 + 8))(v243, v310);
                    (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                    (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                    (*(void (**)(char *, uint64_t))(v343 + 8))(v232, v233);
                    goto LABEL_12;
                  }
                }
                else
                {
                  uint64_t v228 = v222;
                  if ((v225 & 8) != 0 && v222[*(int *)(v135 + 40)] == 2)
                  {
                    uint64_t v244 = v348;
                    swift_beginAccess();
                    sub_24D73C78C((uint64_t)(v244 + 56), (uint64_t)&v351);
                    uint64_t v245 = *((void *)v244 + 15);
                    uint64_t v246 = AssociatedTypeWitness;
                    ((void (*)(uint64_t, char *, uint64_t))v329)(v227, v222, AssociatedTypeWitness);
                    uint64_t v247 = v305;
                    swift_storeEnumTagMultiPayload();
                    uint64_t v75 = (void (*)(void, void))sub_24D578CBC((uint64_t)&v351, v245, v227);
                    (*(void (**)(uint64_t, uint64_t))(v302 + 8))(v227, v247);
                    sub_24D73C7F4((uint64_t)&v351);
                    (*(void (**)(char *, uint64_t))(v311 + 8))(v222, v135);
                    (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                    (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                    (*(void (**)(char *, uint64_t))(v343 + 8))(v337, v246);
                    goto LABEL_12;
                  }
                  uint64_t v226 = v348;
                  if ((v225 & 2) != 0)
                  {
                    uint64_t v75 = v323;
                    uint64_t v254 = v300;
                    uint64_t v255 = v337;
                    uint64_t v256 = v346;
                    (*(void (**)(char *))(*(void *)v323 + 280))(v337);
                    uint64_t v346 = v256;
                    if (v256)
                    {
                      (*(void (**)(char *, uint64_t))(v311 + 8))(v222, v135);
                      (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                      (*(void (**)(char *, uint64_t))(v343 + 8))(v255, AssociatedTypeWitness);
                    }
                    else if (v286(v254, 1, AssociatedTypeWitness) == 1)
                    {
                      (*(void (**)(char *, uint64_t))(v340 + 8))(v300, v341);
                      uint64_t v257 = v348;
                      swift_beginAccess();
                      sub_24D73C78C((uint64_t)(v257 + 56), (uint64_t)&v351);
                      uint64_t v349 = *((void *)v257 + 15);
                      uint64_t v258 = AssociatedTypeWitness;
                      uint64_t v259 = swift_getTupleTypeMetadata3();
                      uint64_t v260 = (uint64_t)v304;
                      os_log_t v261 = &v304[*(int *)(v259 + 48)];
                      uint64_t v262 = &v304[*(int *)(v259 + 64)];
                      uint64_t v263 = v337;
                      BOOL v264 = (void (*)(char *, char *, uint64_t))v329;
                      ((void (*)(char *, char *, uint64_t))v329)(v304, v337, v258);
                      uint64_t v265 = v308;
                      v264(v261, v308, v258);
                      v264(v262, v265, v258);
                      uint64_t v266 = v305;
                      swift_storeEnumTagMultiPayload();
                      uint64_t v75 = (void (*)(void, void))sub_24D578CBC((uint64_t)&v351, v349, v260);
                      (*(void (**)(uint64_t, uint64_t))(v302 + 8))(v260, v266);
                      sub_24D73C7F4((uint64_t)&v351);
                      (*(void (**)(char *, uint64_t))(v311 + 8))(v265, v310);
                      (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                      (*(void (**)(char *, uint64_t))(v343 + 8))(v263, v258);
                    }
                    else
                    {
                      uint64_t v268 = v296;
                      uint64_t v269 = AssociatedTypeWitness;
                      v285(v296, v300, AssociatedTypeWitness);
                      uint64_t v270 = v348;
                      swift_beginAccess();
                      sub_24D73C78C((uint64_t)(v270 + 56), (uint64_t)&v351);
                      uint64_t v349 = *((void *)v270 + 15);
                      uint64_t v271 = swift_getTupleTypeMetadata3();
                      uint64_t v272 = (uint64_t)v304;
                      uint64_t v273 = &v304[*(int *)(v271 + 48)];
                      os_log_type_t v274 = &v304[*(int *)(v271 + 64)];
                      uint64_t v275 = (void (*)(char *, char *, uint64_t))v329;
                      ((void (*)(char *, char *, uint64_t))v329)(v304, v337, v269);
                      v275(v273, v268, v269);
                      uint64_t v276 = v308;
                      v275(v274, v308, v269);
                      uint64_t v277 = v305;
                      swift_storeEnumTagMultiPayload();
                      uint64_t v75 = (void (*)(void, void))sub_24D578CBC((uint64_t)&v351, v349, v272);
                      (*(void (**)(uint64_t, uint64_t))(v302 + 8))(v272, v277);
                      sub_24D73C7F4((uint64_t)&v351);
                      os_log_type_t v278 = *(void (**)(char *, uint64_t))(v343 + 8);
                      v278(v268, v269);
                      (*(void (**)(char *, uint64_t))(v311 + 8))(v276, v310);
                      (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                      v278(v337, v269);
                    }
                    goto LABEL_12;
                  }
                }
                swift_beginAccess();
                sub_24D73C78C((uint64_t)(v226 + 56), (uint64_t)&v351);
                uint64_t v349 = *((void *)v226 + 15);
                uint64_t v248 = AssociatedTypeWitness;
                uint64_t v249 = swift_getTupleTypeMetadata3();
                uint64_t v250 = v227 + *(int *)(v249 + 48);
                uint64_t v251 = v302;
                uint64_t v252 = v305;
                uint64_t v348 = (unsigned char *)(v227 + *(int *)(v249 + 64));
                uint64_t v253 = (void (*)(uint64_t, char *, uint64_t))v329;
                ((void (*)(uint64_t, char *, uint64_t))v329)(v227, v337, v248);
                v253(v250, v228, v248);
                v253((uint64_t)v348, v228, v248);
                swift_storeEnumTagMultiPayload();
                uint64_t v75 = (void (*)(void, void))sub_24D578CBC((uint64_t)&v351, v349, v227);
                (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v227, v252);
                sub_24D73C7F4((uint64_t)&v351);
                (*(void (**)(char *, uint64_t))(v311 + 8))(v228, v310);
                (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
                (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
                (*(void (**)(char *, uint64_t))(v343 + 8))(v337, v248);
                goto LABEL_12;
              }
            }
            v215[v208] = 0;
            goto LABEL_84;
          }
        }
        ((void (*)(char *, char *))v322)(v160, v159);
        fpfs_supports_pkg_dataless_escape_prevention();
        uint64_t v163 = AssociatedTypeWitness;
        uint64_t v135 = v310;
        goto LABEL_41;
      }
    }
    if (v145) {
      goto LABEL_34;
    }
LABEL_30:
    if ((v151 & 0x10010) == 0)
    {
      v150[*(int *)(v338 + 84)] = 1;
LABEL_34:
      uint64_t v147 = v309;
      uint64_t v157 = v339;
      uint64_t v158 = v288;
      goto LABEL_35;
    }
    uint64_t v75 = v315;
    uint64_t v155 = v326;
    uint64_t v156 = v346;
    (*(void (**)(void *__return_ptr, char *))(*(void *)v315 + 264))(v355, v326);
    uint64_t v346 = v156;
    if (v156)
    {
      (*(void (**)(char *, uint64_t))(v311 + 8))(v308, v310);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v155, v327);
      (*(void (**)(char *, uint64_t))(v336 + 8))(v152, v333);
LABEL_89:
      (*(void (**)(char *, uint64_t))(v343 + 8))(v337, AssociatedTypeWitness);
      goto LABEL_90;
    }
    uint64_t v319 = v142;
    uint64_t v320 = v151;
    sub_24D3F0BA0((uint64_t)v355, (uint64_t)v356, &qword_26B197970);
    if (sub_24D3F0D40((uint64_t)v356) == 1)
    {
      char v174 = 6;
    }
    else
    {
      long long v370 = v356[12];
      long long v371 = v356[13];
      long long v372 = v356[14];
      uint64_t v373 = v357;
      long long v366 = v356[8];
      long long v367 = v356[9];
      long long v368 = v356[10];
      long long v369 = v356[11];
      long long v362 = v356[4];
      long long v363 = v356[5];
      long long v364 = v356[6];
      long long v365 = v356[7];
      long long v358 = v356[0];
      long long v359 = v356[1];
      long long v360 = v356[2];
      long long v361 = v356[3];
      char v186 = (*(uint64_t (**)(void))(*v347 + 520))();
      char v174 = sub_24D409E28(v186 & 1, v150);
      sub_24D401194(v355, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
      if (v174 == 5) {
        goto LABEL_58;
      }
    }
    uint64_t v75 = v323;
    uint64_t v187 = v346;
    char v188 = (*(uint64_t (**)(char *, void))(*(void *)v323 + 304))(v337, 0);
    uint64_t v346 = v187;
    if (v187)
    {
LABEL_63:
      (*(void (**)(char *, uint64_t))(v311 + 8))(v308, v310);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v326, v327);
      (*(void (**)(char *, uint64_t))(v336 + 8))(v330, v333);
      (*(void (**)(char *, uint64_t))(v343 + 8))(v337, AssociatedTypeWitness);
LABEL_90:
      ((void (*)(char *, char *))v322)(v292, v342);
      return v75;
    }
    if ((v188 & 1) == 0)
    {
      if ((v348[140] & 0x44) != 0)
      {
        char v174 = 3;
      }
      else if (v174 == 6)
      {
LABEL_60:
        if ((v320 & 0x10) != 0)
        {
          uint64_t v189 = (void (*)(void, void))v347[3];
          uint64_t v190 = v349;
          uint64_t v351 = v349;
          uint64_t v192 = v324;
          uint64_t v191 = v325;
          uint64_t v352 = v324;
          uint64_t v193 = v332;
          uint64_t v353 = v332;
          uint64_t v354 = v325;
          uint64_t v347 = (void *)type metadata accessor for ItemJob();
          uint64_t v194 = swift_getMetatypeMetadata();
          sub_24DA604B8(v194, v194);
          swift_allocObject();
          uint64_t v195 = sub_24DCC9C58();
          uint64_t v351 = v190;
          uint64_t v352 = v192;
          uint64_t v353 = v193;
          uint64_t v354 = v191;
          uint64_t *v196 = type metadata accessor for Materialization.MaterializeItem();
          uint64_t v197 = sub_24D785484(v195);
          uint64_t v75 = v189;
          uint64_t v198 = v346;
          uint64_t v199 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v189 + 272))(v337, v197);
          uint64_t v346 = v198;
          if (v198)
          {
LABEL_62:
            swift_bridgeObjectRelease();
            goto LABEL_63;
          }
          uint64_t v279 = v199;
          swift_bridgeObjectRelease();
          uint64_t v350 = v279;
          sub_24DCC9D48();
          swift_getWitnessTable();
          sub_24DCC9FD8();
          swift_bridgeObjectRelease();
          if (v351)
          {
            int v280 = *(unsigned __int8 *)(v351 + 112);
            if (v280 == 3 || v280 == 4 && !(*(void *)(v351 + 96) & 0xFFFFFFFFFFFFFFFELL | *(void *)(v351 + 104)))
            {
              swift_release();
            }
            else
            {
              uint64_t v281 = *(void *)(v351 + 136);
              swift_release();
              if ((v281 & 0x800000) != 0)
              {
                uint64_t v282 = *(int *)(v338 + 84);
                unsigned int v283 = v335[v282];
                if (v283 == 1)
                {
                  LOBYTE(v283) = 4;
                }
                else if (v335[v282] && v283 <= 4)
                {
                  LOBYTE(v283) = 4;
                }
                v335[v282] = v283;
              }
            }
          }
        }
        goto LABEL_65;
      }
LABEL_59:
      v335[*(int *)(v338 + 84)] = v174;
      goto LABEL_60;
    }
LABEL_58:
    char v174 = 5;
    goto LABEL_59;
  }
  return v75;
}

void sub_24D7A4AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v75 = (void *)a8;
  uint64_t v87 = a7;
  uint64_t v84 = a6;
  uint64_t v90 = a5;
  uint64_t v71 = a4;
  uint64_t v88 = a1;
  uint64_t v89 = a3;
  uint64_t v74 = (void *)a2;
  uint64_t v12 = *v10;
  uint64_t v13 = *(void *)(*v10 + 624);
  uint64_t v14 = *(void *)(*v10 + 608);
  uint64_t v73 = a10;
  uint64_t v72 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v92 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v94 = swift_getAssociatedConformanceWitness();
  uint64_t v86 = type metadata accessor for FileItemVersion();
  uint64_t v82 = *(void *)(v86 - 8);
  uint64_t v70 = *(void *)(v82 + 64);
  MEMORY[0x270FA5388](v86);
  uint64_t v85 = (char *)&v58 - v15;
  uint64_t v66 = v12;
  uint64_t v16 = *(void *)(v12 + 616);
  uint64_t v17 = *(void *)(v12 + 600);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v18;
  uint64_t v92 = v19;
  uint64_t AssociatedConformanceWitness = v20;
  uint64_t v94 = v21;
  uint64_t v83 = type metadata accessor for FileItemVersion();
  uint64_t v79 = *(void *)(v83 - 8);
  uint64_t v67 = *(void *)(v79 + 64);
  MEMORY[0x270FA5388](v83);
  uint64_t v81 = (char *)&v58 - v22;
  uint64_t v69 = v13;
  uint64_t v68 = v14;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  uint64_t v80 = type metadata accessor for ItemState();
  uint64_t v77 = *(void *)(v80 - 8);
  uint64_t v63 = *(void *)(v77 + 64);
  uint64_t v25 = MEMORY[0x270FA5388](v80);
  uint64_t v78 = (char *)&v58 - v26;
  uint64_t v27 = v23;
  uint64_t v76 = *(void *)(v23 - 8);
  uint64_t v60 = *(void *)(v76 + 64);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v58 - v28;
  uint64_t v59 = (char *)&v58 - v28;
  uint64_t v62 = v16;
  uint64_t v61 = v17;
  uint64_t v30 = swift_getAssociatedTypeWitness();
  uint64_t v31 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v27;
  uint64_t v92 = v30;
  uint64_t v32 = v27;
  uint64_t v58 = v27;
  uint64_t AssociatedConformanceWitness = v24;
  uint64_t v94 = v31;
  uint64_t v33 = type metadata accessor for ReconciliationID();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v58 - v35;
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))((char *)&v58 - v35, (char *)v10 + *(void *)(v66 + 576), v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = v84;
  uint64_t v66 = (*(uint64_t (**)(char *))(*(void *)v84 + 480))(v36);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
  uint64_t v65 = (v10[17] >> 33) & 0x40;
  uint64_t v38 = *(void *)(*(void *)(v37 + 32) + 16);
  uint64_t v64 = *(void *)((char *)v11 + *(void *)(*v11 + 640));
  uint64_t v39 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v29, v88, v32);
  uint64_t v40 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v78, v89, v80);
  uint64_t v41 = v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v81, v71, v83);
  uint64_t v42 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v85, v90, v86);
  unint64_t v43 = (*(unsigned __int8 *)(v39 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v44 = (v60 + *(unsigned __int8 *)(v40 + 80) + v43) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v45 = (v63 + *(unsigned __int8 *)(v41 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  unint64_t v46 = (v67 + *(unsigned __int8 *)(v42 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  unint64_t v47 = (v70 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = (char *)swift_allocObject();
  uint64_t v49 = v68;
  *((void *)v48 + 2) = v61;
  *((void *)v48 + 3) = v49;
  uint64_t v50 = v69;
  *((void *)v48 + 4) = v62;
  *((void *)v48 + 5) = v50;
  uint64_t v51 = v72;
  *((void *)v48 + 6) = v37;
  *((void *)v48 + 7) = v51;
  *((void *)v48 + 8) = v73;
  *((void *)v48 + 9) = v11;
  *((void *)v48 + 10) = v87;
  uint64_t v52 = v74;
  sub_24D3F0BA0((uint64_t)v74, (uint64_t)(v48 + 88), qword_26B197140);
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(&v48[v43], v59, v58);
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v48[v44], v78, v80);
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v48[v45], v81, v83);
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(&v48[v46], v85, v86);
  uint64_t v53 = (uint64_t)&v48[v47];
  uint64_t v54 = v75;
  sub_24D3F0BA0((uint64_t)v75, v53, &qword_26B197970);
  uint64_t v55 = *(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, void (*)(void *, char), char *))(*(void *)v38 + 600);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D5D990C(v52, (void (*)(void, void, void, void, void, void, void))sub_24D3F1CDC);
  sub_24D401194(v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
  uint64_t v56 = v52;
  uint64_t v57 = (void *)v66;
  v55(v88, v56, v89, v64, v90, v66, v54, v65, sub_24D7B7384, v48);
  swift_release();
  swift_release();
}

void sub_24D7A540C(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, unint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13)
{
  if (a2)
  {
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a4;
    *(void *)(v23 + 24) = a5;
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = a6;
    v24[3] = a1;
    v24[4] = a4;
    v24[5] = a5;
    v24[6] = a3;
    v24[7] = a7;
    char v25 = 1;
    sub_24D46C820(a1, 1);
    swift_retain();
    sub_24D46C820(a1, 1);
    uint64_t v26 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_24D6E9F88((uint64_t)"stageUpdate(itemID:capturedContent:requestedState:otherVersion:baseVersion:on:result:nonSyncableAttributes:completion:)", 119, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v23, (uint64_t)sub_24D7B7780, (uint64_t)v24, v26, MEMORY[0x263F8D310]);
    swift_release();
    swift_release();
  }
  else
  {
    sub_24D3F0BA0((uint64_t)a8, (uint64_t)v27, qword_26B197140);
    if (v28 >> 60 == 11 || !sub_24D8903D0())
    {
      swift_retain();
      sub_24D7A5BA0(a9, a8, (uint64_t)a1, a10, a11, a12, a3, a7, a13, a4, a5);
    }
    else
    {
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = a4;
      *(void *)(v20 + 24) = a5;
      uint64_t v21 = (void *)swift_allocObject();
      v21[2] = a4;
      v21[3] = a5;
      v21[4] = a1;
      sub_24D46C820(a1, 0);
      swift_retain();
      sub_24D46C820(a1, 0);
      uint64_t v22 = type metadata accessor for Continuation();
      swift_retain();
      sub_24D6E9F88((uint64_t)"stageUpdate(itemID:capturedContent:requestedState:otherVersion:baseVersion:on:result:nonSyncableAttributes:completion:)", 119, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D73CC58, v20, (uint64_t)sub_24D7B7710, (uint64_t)v21, v22, MEMORY[0x263F8D310]);
      swift_release();
      swift_release();
    }
    char v25 = 0;
  }
  sub_24D7B76E8(a1, v25, MEMORY[0x263F8EED8]);
}

uint64_t sub_24D7A5714(uint64_t *a1, void *a2, void (*a3)(void, void, void, int8x16_t *), uint64_t a4, void *a5, uint64_t a6)
{
  unint64_t v47 = a5;
  uint64_t v48 = a6;
  uint64_t v39 = a4;
  uint64_t v40 = a3;
  id v46 = a2;
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(*a1 + 608);
  uint64_t v9 = *(void *)(*a1 + 624);
  uint64_t v45 = type metadata accessor for SnapshotItem();
  uint64_t v10 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v44 = (char *)&v39 - v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v43 = type metadata accessor for ItemState();
  uint64_t v12 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v41 = (char *)&v39 - v13;
  uint64_t v14 = *(void *)(v7 + 616);
  uint64_t v15 = *(void *)(v7 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v49 = AssociatedTypeWitness;
  uint64_t v50 = v17;
  uint64_t v51 = AssociatedConformanceWitness;
  uint64_t v52 = v19;
  uint64_t v20 = type metadata accessor for FileItemVersion();
  uint64_t v21 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v39 - v22;
  uint64_t v49 = v8;
  uint64_t v50 = v15;
  uint64_t v51 = v9;
  uint64_t v52 = v14;
  uint64_t v24 = (int8x16_t *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v42 = v24[-1].i64[1];
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v39 - v25;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v23, 1, 1, v20);
  uint64_t v27 = *(uint64_t *)((char *)a1 + *(void *)(*a1 + 632));
  uint64_t v28 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v41, 1, 1);
  uint64_t v29 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1);
  uint64_t v30 = *(void **)((char *)a1 + *(void *)(*a1 + 584));
  uint64_t v31 = (uint64_t)v46;
  id v32 = v46;
  id v33 = v30;
  uint64_t v34 = (uint64_t *)swift_retain();
  sub_24D73DF6C(v34, (uint64_t)v23, v27, 0, v28, v29, 0, 0, v26, 0, v31, (uint64_t)v30);
  uint64_t v35 = v53;
  uint64_t v36 = sub_24D75BACC(v47, v48, v24);
  if (!v35)
  {
    uint64_t v37 = v36;
    v40(0, 0, 0, v36);
  }
  return (*(uint64_t (**)(char *, int8x16_t *))(v42 + 8))(v26, v24);
}

uint64_t sub_24D7A5BA0(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v79 = a7;
  uint64_t v80 = a1;
  unint64_t v64 = a4;
  unint64_t v65 = a6;
  unint64_t v67 = a5;
  uint64_t v69 = a3;
  uint64_t v70 = a2;
  uint64_t v73 = a11;
  uint64_t v74 = a8;
  uint64_t v12 = *v11;
  uint64_t v13 = *(void *)(*v11 + 616);
  uint64_t v14 = *(void *)(*v11 + 600);
  uint64_t v71 = (void *)a9;
  uint64_t v72 = a10;
  uint64_t v68 = v13;
  uint64_t v66 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v82 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v84 = swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for FileItemVersion();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v76 = v15;
  uint64_t v77 = v16;
  uint64_t v63 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v75 = (char *)&v54 - v17;
  uint64_t v78 = v11;
  uint64_t v18 = *(void *)(v12 + 608);
  uint64_t v19 = *(void *)(v12 + 624);
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v20;
  uint64_t v82 = v21;
  uint64_t AssociatedConformanceWitness = v22;
  uint64_t v84 = v23;
  uint64_t v24 = type metadata accessor for FileItemVersion();
  uint64_t v58 = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  unint64_t v60 = *(void *)(v25 + 64);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v54 - v26;
  uint64_t v59 = (char *)&v54 - v26;
  uint64_t v62 = v19;
  uint64_t v61 = v18;
  uint64_t v28 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v29 = type metadata accessor for ItemState();
  uint64_t v56 = v29;
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(void *)(v30 + 64);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v34 = (char *)&v54 - v33;
  uint64_t v57 = (char *)&v54 - v33;
  uint64_t v35 = *(void *)(v28 - 8);
  uint64_t v36 = *(void *)(v35 + 64);
  MEMORY[0x270FA5388](v32);
  uint64_t v55 = (char *)&v54 - v37;
  (*(void (**)(void))(v35 + 16))();
  (*(void (**)(char *, unint64_t, uint64_t))(v30 + 16))(v34, v64, v29);
  uint64_t v54 = v25;
  (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v27, v65, v24);
  uint64_t v38 = v77;
  (*(void (**)(char *, unint64_t, uint64_t))(v77 + 16))(v75, v67, v76);
  unint64_t v39 = (*(unsigned __int8 *)(v35 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v40 = (v36 + *(unsigned __int8 *)(v30 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v41 = (v31 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = (*(unsigned __int8 *)(v25 + 80) + v42 + 56) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v60 = (v60 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v60 + 255) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (*(unsigned __int8 *)(v38 + 80) + v65 + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v67 = (v63 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (char *)swift_allocObject();
  uint64_t v45 = v61;
  *((void *)v44 + 2) = v66;
  *((void *)v44 + 3) = v45;
  uint64_t v46 = v62;
  *((void *)v44 + 4) = v68;
  *((void *)v44 + 5) = v46;
  uint64_t v47 = v79;
  *((void *)v44 + 6) = v78;
  *((void *)v44 + 7) = v47;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v44[v39], v55, v28);
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v44[v40], v57, v56);
  uint64_t v48 = v70;
  *(void *)&v44[v41] = v69;
  sub_24D3F0BA0((uint64_t)v48, (uint64_t)&v44[v42], qword_26B197140);
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v44[v43], v59, v58);
  uint64_t v49 = v71;
  sub_24D3F0BA0((uint64_t)v71, (uint64_t)&v44[v60], &qword_26B197970);
  uint64_t v50 = &v44[v65];
  uint64_t v51 = v73;
  *(void *)uint64_t v50 = v72;
  *((void *)v50 + 1) = v51;
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v44[v64], v75, v76);
  *(void *)&v44[v67] = v74;
  swift_retain();
  uint64_t v52 = v79;
  swift_retain();
  swift_retain();
  sub_24D5D990C(v48, (void (*)(void, void, void, void, void, void, void))sub_24D3F1CDC);
  sub_24D401194(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
  swift_retain();
  swift_retain();
  sub_24D7A6424(v80, v52, (uint64_t (*)(void, void))sub_24D7B5630, (uint64_t)v44);
  return swift_release();
}

uint64_t sub_24D7A62C4(char a1)
{
  *(void *)(v1 + 16) = 0;
  swift_release();
  if ((*(unsigned char *)(v1 + 136) & 2) == 0
    || (uint64_t v3 = v1 + *(void *)(*(void *)v1 + 664),
        swift_beginAccess(),
        swift_getAssociatedTypeWitness(),
        swift_getAssociatedConformanceWitness(),
        uint64_t v4 = type metadata accessor for ItemState(),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
    || *(unsigned char *)(v3 + *(int *)(v4 + 40)) != 1)
  {
    a1 = sub_24D983288(a1 & 1);
  }
  return a1 & 1;
}

uint64_t sub_24D7A6424(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void), uint64_t a4)
{
  uint64_t v23 = a1;
  uint64_t v24 = (void *)*v4;
  uint64_t v25 = a2;
  uint64_t v7 = v24[78];
  uint64_t v8 = v24[76];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v22 - v12;
  if ((*((unsigned char *)v4 + v24[80] + 6) & 4) == 0 || sub_24D8903D0()) {
    return a3(MEMORY[0x263F8EE78], 0);
  }
  uint64_t v15 = swift_allocObject();
  uint64_t v22 = v15;
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v23, AssociatedTypeWitness);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (char *)swift_allocObject();
  uint64_t v19 = v24;
  *((void *)v18 + 2) = v24[75];
  *((void *)v18 + 3) = v8;
  *((void *)v18 + 4) = v19[77];
  *((void *)v18 + 5) = v7;
  *((void *)v18 + 6) = v25;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v18[v16], v13, AssociatedTypeWitness);
  uint64_t v20 = &v18[v17];
  *(void *)uint64_t v20 = a3;
  *((void *)v20 + 1) = a4;
  swift_retain_n();
  swift_retain();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986E8C8);
  sub_24D6E5F30((uint64_t)"getListOfUpdatedConflicts(itemID:on:completion:)", 48, 2, (uint64_t)sub_24D417998, v22, (uint64_t)sub_24D7B5AD8, (uint64_t)v18, v21);
  swift_release();
  return swift_release();
}

void *sub_24D7A66D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void), uint64_t a4)
{
  uint64_t v75 = a4;
  uint64_t v74 = a3;
  uint64_t v6 = *(void *)(*(void *)a1 + 96);
  uint64_t v65 = *(void *)(*(void *)a1 + 80);
  uint64_t v66 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v67 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v68 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v72 = (char *)&v60 - v8;
  uint64_t v9 = sub_24DCC9078();
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v71 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v69 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v73 = *(uint8_t **)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v60 - v14;
  uint64_t v16 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v60 - v17;
  uint64_t v19 = v76;
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t))(**(void **)(a1 + 32) + 264))(v79, a2);
  if (!v19)
  {
    uint64_t v61 = v12;
    uint64_t v62 = v18;
    uint64_t v76 = a2;
    uint64_t v63 = v16;
    uint64_t v64 = v11;
    sub_24D3F0BA0((uint64_t)v79, (uint64_t)v80, &qword_26B197970);
    if (sub_24D3F0D40((uint64_t)v80) == 1) {
      return (void *)v74(MEMORY[0x263F8EE78], 0);
    }
    uint64_t v21 = v81;
    uint64_t v22 = v74;
    if (!v81)
    {
      sub_24D401194(v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
      return (void *)v22(MEMORY[0x263F8EE78], 0);
    }
    uint64_t v23 = *(void (**)(uint64_t))(**(void **)(a1 + 16) + 160);
    swift_bridgeObjectRetain();
    uint64_t v24 = v15;
    uint64_t v25 = v76;
    v23(v76);
    uint64_t v27 = v63;
    uint64_t v26 = v64;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v24, 1, v64) == 1)
    {
      swift_bridgeObjectRelease();
      sub_24D401194(v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
      (*((void (**)(char *, uint64_t))v73 + 1))(v24, v61);
      return (void *)v22(MEMORY[0x263F8EE78], 0);
    }
    uint64_t v60 = 0;
    uint64_t v61 = v21;
    uint64_t v28 = v62;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v62, v24, v26);
    if (fpfs_supports_partial_conflicts_resolution())
    {
      uint64_t v29 = *(void **)(*(void *)(a1 + 40) + 16);
      uint64_t v30 = v29[17] + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
      swift_beginAccess();
      uint64_t v31 = *(unsigned int *)(v30 + 8);
      uint64_t v32 = (void *)swift_allocObject();
      void v32[2] = a1;
      v32[3] = v22;
      v32[4] = v75;
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t (*)(void *, char), void *))(*v29 + 560);
      swift_retain();
      swift_retain();
      swift_retain();
      v33(v28, v31, v61, sub_24D7B5B8C, v32);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_24D401194(v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v28, v64);
    }
    else
    {
      uint64_t v77 = MEMORY[0x263F8EE78];
      id v34 = (id)fpfs_current_or_default_log();
      uint64_t v35 = v69;
      sub_24DCC9088();
      uint64_t v36 = v25;
      uint64_t v37 = v67;
      uint64_t v38 = v68;
      unint64_t v39 = v72;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v72, v36, v68);
      unint64_t v40 = sub_24DCC9068();
      os_log_type_t v41 = sub_24DCCA118();
      if (os_log_type_enabled(v40, v41))
      {
        unint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v76 = swift_slowAlloc();
        uint64_t v82 = v76;
        *(_DWORD *)unint64_t v42 = 136315138;
        uint64_t v73 = v42 + 4;
        swift_getAssociatedConformanceWitness();
        uint64_t v43 = sub_24DCCAD78();
        uint64_t v78 = sub_24D418FB4(v43, v44, &v82);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v72, v38);
        _os_log_impl(&dword_24D3D0000, v40, v41, "⚔️  marking all loseres as resolved for %s", v42, 0xCu);
        uint64_t v45 = v76;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v45, -1, -1);
        MEMORY[0x25332B030](v42, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
      }

      (*(void (**)(char *, uint64_t))(v70 + 8))(v35, v71);
      uint64_t v46 = *(char **)(v61 + 16);
      if (v46)
      {
        uint64_t v47 = (uint64_t *)(v61 + 48);
        do
        {
          uint64_t v72 = v46;
          uint64_t v48 = *(v47 - 2);
          unint64_t v49 = *(v47 - 1);
          uint64_t v51 = *v47;
          uint64_t v50 = v47[1];
          unint64_t v53 = v47[2];
          uint64_t v52 = v47[3];
          uint64_t v54 = v47[5];
          uint64_t v69 = (char *)v47[4];
          sub_24D3F9C18(v48, v49);
          uint64_t v70 = v51;
          swift_bridgeObjectRetain();
          sub_24D3F9C18(v50, v53);
          swift_bridgeObjectRetain();
          uint64_t v71 = v52;
          swift_bridgeObjectRetain();
          sub_24D3F9C18(v48, v49);
          sub_24D3F9C18(v50, v53);
          swift_bridgeObjectRetain();
          uint64_t v55 = (void *)sub_24DCC8B28();
          uint64_t v73 = (uint8_t *)v53;
          uint64_t v56 = (void *)sub_24DCC8B28();
          uint64_t v76 = v50;
          if (v54)
          {
            uint64_t v57 = (void *)sub_24DCC97B8();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v57 = 0;
          }
          id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F055A8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v55, v56, v57);
          sub_24D400DCC(v76, (unint64_t)v73);
          sub_24D400DCC(v48, v49);

          objc_msgSend(v58, sel_setConflictResolved_, 1);
          id v59 = v58;
          MEMORY[0x253327CA0]();
          if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_24DCC9C78();
          }
          v47 += 8;
          sub_24DCC9CD8();
          sub_24DCC9C48();

          sub_24D400DCC(v48, v49);
          swift_bridgeObjectRelease();
          sub_24D400DCC(v76, (unint64_t)v73);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v46 = v72 - 1;
        }
        while (v72 != (char *)1);
      }
      swift_bridgeObjectRelease();
      v74(v77, 0);
      swift_bridgeObjectRelease();
      sub_24D401194(v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v62, v64);
    }
  }
  return result;
}

uint64_t sub_24D7A7084(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = a5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  a2 &= 1u;
  *(unsigned char *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a4;
  *(void *)(v10 + 40) = a5;
  swift_retain_n();
  sub_24D3DEC74(a1, a2);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986E8C8);
  sub_24D6E61D0((uint64_t)"getListOfUpdatedConflicts(itemID:on:completion:)", 48, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D417998, v9, (uint64_t)sub_24D7B5BF4, v10, v11);
  swift_release();

  return swift_release();
}

void sub_24D7A71B4(void *a1, char a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v9 = sub_24DCC9078();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v31 = a4;
    id v14 = a1;
    id v15 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v16 = a1;
    uint64_t v17 = sub_24DCC9068();
    os_log_type_t v18 = sub_24DCCA128();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v29 = v4;
      uint64_t v20 = (uint8_t *)v19;
      uint64_t v21 = swift_slowAlloc();
      os_log_t v30 = v17;
      uint64_t v22 = (void *)v21;
      uint64_t v28 = a3;
      *(_DWORD *)uint64_t v20 = 138412290;
      v27[1] = v20 + 4;
      swift_getErrorValue();
      id v23 = sub_24DBA2828(v33);
      id v32 = v23;
      a3 = v28;
      sub_24DCCA428();
      *uint64_t v22 = v23;
      sub_24D7B76E8(a1, 1, MEMORY[0x263F8EEA0]);
      _os_log_impl(&dword_24D3D0000, v30, v18, "⚔️  Failed updateConflictList: %@", v20, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      uint64_t v24 = v22;
      uint64_t v17 = v30;
      MEMORY[0x25332B030](v24, -1, -1);
      MEMORY[0x25332B030](v20, -1, -1);
    }
    else
    {
      sub_24D7B76E8(a1, 1, MEMORY[0x263F8EEA0]);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    id v25 = a1;
    a3(a1, 1);
    uint64_t v26 = (void (*)(id))MEMORY[0x263F8EEA0];
    sub_24D7B76E8(a1, 1, MEMORY[0x263F8EEA0]);
    sub_24D7B76E8(a1, 1, v26);
  }
  else
  {
    if (a1) {
      uint64_t v13 = a1;
    }
    else {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    }
    a3(v13, 0);
  }
}

uint64_t sub_24D7A749C(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v76 = a7;
  uint64_t v77 = a8;
  uint64_t v81 = a5;
  uint64_t v82 = a6;
  uint64_t v80 = a4;
  LODWORD(v62) = a2;
  uint64_t v63 = a1;
  uint64_t v75 = a14;
  uint64_t v64 = a13;
  uint64_t v73 = a12;
  uint64_t v69 = a11;
  uint64_t v65 = (void *)*a3;
  uint64_t v15 = v65[77];
  uint64_t v16 = v65[75];
  uint64_t v72 = a10;
  uint64_t v74 = a9;
  uint64_t v70 = v16;
  uint64_t v71 = v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v84 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v86 = swift_getAssociatedConformanceWitness();
  uint64_t v79 = type metadata accessor for FileItemVersion();
  uint64_t v17 = *(void *)(v79 - 8);
  uint64_t v67 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v79);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = v65[78];
  uint64_t v21 = v65[76];
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v68 = v20;
  uint64_t v66 = v21;
  swift_getAssociatedConformanceWitness();
  uint64_t v23 = type metadata accessor for ItemState();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = *(void *)(v22 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  uint64_t v31 = MEMORY[0x270FA5388](v26);
  id v32 = v65;
  id v34 = (char *)&v56 - v33;
  uint64_t v35 = a3[17];
  uint64_t v78 = v19;
  if ((v35 & 0x200000) != 0 || (*((unsigned char *)a3 + v65[80] + 5) & 8) != 0)
  {
    uint64_t v36 = v31;
    uint64_t v37 = v22;
    uint64_t v38 = v17;
    if ((v35 & 0x8000000000) != 0) {
      uint64_t v42 = 66;
    }
    else {
      uint64_t v42 = 2;
    }
    uint64_t v39 = v64;
    uint64_t v40 = v63;
    char v41 = v62;
  }
  else
  {
    uint64_t v36 = v31;
    uint64_t v37 = v22;
    uint64_t v38 = v17;
    uint64_t v39 = v64;
    uint64_t v40 = v63;
    char v41 = v62;
    if ((v35 & 0x8000000000) != 0) {
      uint64_t v42 = 64;
    }
    else {
      uint64_t v42 = 0;
    }
  }
  if (v41) {
    uint64_t v40 = 0;
  }
  uint64_t v64 = v40;
  if (*((unsigned char *)a3 + v65[86])) {
    v42 |= 0x80uLL;
  }
  uint64_t v65 = (void *)v42;
  uint64_t v43 = v80;
  uint64_t v61 = *(void *)(*(void *)(v80 + 32) + 16);
  uint64_t v62 = *(void *)((char *)a3 + v32[80]);
  uint64_t v63 = *(void *)((char *)a3 + v32[73]);
  unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  id v58 = v34;
  uint64_t v57 = v37;
  v44(v34, v81, v37);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v60 = v28;
  uint64_t v59 = v36;
  v45(v28, v82, v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v78, v39, v79);
  unint64_t v46 = (*(unsigned __int8 *)(v29 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v47 = (v30 + *(unsigned __int8 *)(v24 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v48 = (v25 + *(unsigned __int8 *)(v38 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v49 = (v67 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = (char *)swift_allocObject();
  uint64_t v51 = v66;
  *((void *)v50 + 2) = v70;
  *((void *)v50 + 3) = v51;
  uint64_t v52 = v68;
  *((void *)v50 + 4) = v71;
  *((void *)v50 + 5) = v52;
  *((void *)v50 + 6) = v43;
  *((void *)v50 + 7) = a3;
  uint64_t v53 = v73;
  *((void *)v50 + 8) = v69;
  *((void *)v50 + 9) = v53;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v50[v46], v58, v57);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v50[v47], v60, v59);
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v50[v48], v78, v79);
  *(void *)&v50[v49] = v75;
  uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t (*)(uint64_t), char *))(*(void *)v61 + 624);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v54(v81, v82, v62, v76, v77, v74, v63, v65, v72, v64, sub_24D7B60B0, v50);
  swift_release();
  return swift_release();
}

uint64_t sub_24D7A7B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v64 = a8;
  uint64_t v60 = a6;
  uint64_t v61 = a7;
  uint64_t v73 = a4;
  uint64_t v74 = a5;
  uint64_t v59 = a1;
  uint64_t v66 = a3;
  uint64_t v67 = a9;
  uint64_t v9 = *(void **)a2;
  uint64_t v63 = *(void *)(*(void *)a2 + 104);
  uint64_t v62 = v9[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v76 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v78 = swift_getAssociatedConformanceWitness();
  uint64_t v72 = type metadata accessor for FileItemVersion();
  uint64_t v70 = *(void *)(v72 - 8);
  uint64_t v58 = *(void *)(v70 + 64);
  MEMORY[0x270FA5388](v72);
  uint64_t v71 = (char *)&v48 - v11;
  uint64_t v65 = a2;
  uint64_t v12 = v9[12];
  uint64_t v13 = v9[10];
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v56 = v12;
  uint64_t v55 = v13;
  swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for ItemState();
  uint64_t v53 = v15;
  uint64_t v69 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v69 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v48 - v18;
  uint64_t v54 = (char *)&v48 - v18;
  uint64_t v51 = v14;
  uint64_t v68 = *(void *)(v14 - 8);
  uint64_t v20 = *(void *)(v68 + 64);
  MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v48 - v21;
  uint64_t v52 = (char *)&v48 - v21;
  type metadata accessor for ItemPropagationResult();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v23 = sub_24DCCB058();
  uint64_t v49 = v23;
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v48 - v26;
  uint64_t v50 = (char *)&v48 - v26;
  uint64_t v28 = swift_allocObject();
  uint64_t v57 = v28;
  uint64_t v29 = v74;
  *(void *)(v28 + 16) = v73;
  *(void *)(v28 + 24) = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, v59, v23);
  uint64_t v30 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v22, v60, v14);
  uint64_t v31 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v19, v61, v15);
  uint64_t v32 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v71, v64, v72);
  unint64_t v33 = (*(unsigned __int8 *)(v24 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v34 = (v25 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (*(unsigned __int8 *)(v30 + 80) + v34 + 8) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v36 = (v20 + *(unsigned __int8 *)(v31 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v37 = (v16 + *(unsigned __int8 *)(v32 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v38 = (v58 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = (char *)swift_allocObject();
  uint64_t v41 = v55;
  *((void *)v40 + 2) = v62;
  *((void *)v40 + 3) = v41;
  uint64_t v42 = v56;
  *((void *)v40 + 4) = v63;
  *((void *)v40 + 5) = v42;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v40[v33], v50, v49);
  uint64_t v43 = v66;
  *(void *)&v40[v34] = v66;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v40[v35], v52, v51);
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v40[v36], v54, v53);
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(&v40[v37], v71, v72);
  unint64_t v44 = &v40[v38];
  uint64_t v45 = v74;
  *(void *)unint64_t v44 = v73;
  *((void *)v44 + 1) = v45;
  *(void *)&v40[v39] = v65;
  *(void *)&v40[(v39 + 15) & 0xFFFFFFFFFFFFFFF8] = v67;
  uint64_t v46 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_24D6E9F88((uint64_t)"update(itemID:capturedContent:stagedContext:requestedState:otherVersion:baseVersion:on:result:nonSyncableAttributes:completion:)", 128, 2u, (uint64_t)sub_24D7B6304, v43, (uint64_t)sub_24D73CC58, v57, (uint64_t)sub_24D7B6948, (uint64_t)v40, v46, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D7A81FC(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void, uint64_t, uint64_t, int8x16_t *), uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v160 = a8;
  uint64_t v144 = a7;
  BOOL v145 = (void (*)(void, uint64_t, uint64_t, int8x16_t *))a6;
  uint64_t v154 = a5;
  uint64_t v168 = a4;
  uint64_t v142 = a3;
  uint64_t v178 = a1;
  uint64_t v10 = *a2;
  uint64_t v11 = *(void *)(*a2 + 624);
  uint64_t v12 = *(void *)(*a2 + 608);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = (void *)swift_getAssociatedConformanceWitness();
  uint64_t v163 = type metadata accessor for ItemState();
  uint64_t v14 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v176 = (uint64_t)&v138 - v15;
  uint64_t v16 = *(void *)(v10 + 616);
  uint64_t v177 = a2;
  uint64_t v17 = *(void *)(v10 + 600);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  v179[0] = v18;
  v179[1] = v19;
  uint64_t v180 = v20;
  uint64_t v181 = v21;
  uint64_t v153 = type metadata accessor for FileItemVersion();
  uint64_t v22 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v175 = (uint64_t)&v138 - v23;
  v179[0] = v12;
  v179[1] = v17;
  uint64_t v149 = v17;
  uint64_t v180 = v11;
  uint64_t v181 = v16;
  uint64_t v143 = v16;
  uint64_t v159 = (int8x16_t *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v156 = v159[-1].i64[1];
  uint64_t v24 = MEMORY[0x270FA5388](v159);
  uint64_t v158 = (char *)&v138 - v25;
  uint64_t v148 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v147 = (char *)&v138 - v26;
  uint64_t v27 = type metadata accessor for SnapshotItem();
  uint64_t v151 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v155 = (uint64_t)&v138 - v28;
  uint64_t v152 = v29;
  uint64_t v30 = sub_24DCCA3F8();
  uint64_t v172 = *(void *)(v30 - 8);
  uint64_t v173 = v30;
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  char v174 = (char *)&v138 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v182 = (char *)&v138 - v34;
  uint64_t v150 = AssociatedTypeWitness;
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v33);
  unint64_t v37 = (char *)&v138 - v36;
  uint64_t v167 = v12;
  uint64_t v162 = v11;
  uint64_t v38 = type metadata accessor for ItemPropagationResult();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v166 = (char *)&v138 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v138 - v42;
  long long v169 = v44;
  uint64_t v45 = sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v47 = sub_24DCCB058();
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  uint64_t v50 = (uint64_t *)((char *)&v138 - v49);
  uint64_t v171 = v45;
  uint64_t v170 = *(void *)(v45 - 8);
  uint64_t v51 = MEMORY[0x270FA5388](v48);
  uint64_t v157 = (char *)&v138 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v51);
  uint64_t v54 = (char *)&v138 - v53;
  (*(void (**)(uint64_t *, char *, uint64_t))(v55 + 16))(v50, v178, v47);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v178 = v54;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t AssociatedConformanceWitness = (void *)*v50;
    uint64_t v57 = v169;
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v39 + 56))(v54, 1, 1, v169);
    uint64_t v149 = 0;
    uint64_t v58 = 0;
    uint64_t v150 = 0xE000000000000000;
    uint64_t v60 = v170;
    uint64_t v59 = v171;
    uint64_t v61 = v39;
    goto LABEL_20;
  }
  uint64_t v141 = v35;
  uint64_t v62 = *(void **)((char *)v50 + *(int *)(TupleTypeMetadata2 + 48));
  uint64_t v61 = v39;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v39 + 48))(v50, 1, v169) != 1)
  {
    uint64_t v64 = *(void (**)(char *, uint64_t *, int *))(v39 + 32);
    uint64_t v65 = v43;
    uint64_t v66 = v43;
    uint64_t v67 = v169;
    v64(v66, v50, v169);
    uint64_t v68 = *(void (**)(char *, char *, int *))(v61 + 16);
    uint64_t v69 = v62;
    id v165 = v62;
    uint64_t v70 = v178;
    v68(v178, v65, v67);
    (*(void (**)(char *, void, uint64_t, int *))(v61 + 56))(v70, 0, 1, v67);
    uint64_t v71 = v162;
    uint64_t v72 = v162 + 64;
    uint64_t v73 = *(void (**)(void, void))(v162 + 64);
    id v139 = v69;
    uint64_t v74 = v37;
    int v140 = v65;
    uint64_t v75 = v71;
    uint64_t v138 = v72;
    uint64_t v76 = v73;
    v73(v167, v75);
    uint64_t v77 = v150;
    LODWORD(v73) = sub_24D586AFC(v150, (uint64_t)AssociatedConformanceWitness);
    uint64_t v78 = v141;
    (*(void (**)(char *, uint64_t))(v141 + 8))(v74, v77);
    uint64_t v146 = v61;
    uint64_t v79 = swift_getAssociatedTypeWitness();
    uint64_t v80 = swift_getAssociatedConformanceWitness();
    unsigned __int8 v81 = sub_24D586AFC(v79, v80);
    uint64_t v63 = v165;
    if (v73 != v81)
    {
      uint64_t v85 = v167;
      uint64_t v86 = v162;
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t AssociatedConformanceWitness = (void *)swift_allocError();
      uint64_t v88 = v87;
      sub_24DCCA3F8();
      swift_getTupleTypeMetadata2();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v88, v142, v77);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v88, 0, 1, v77);
      uint64_t v89 = v140;
      v76(v85, v86);
      swift_storeEnumTagMultiPayload();

      uint64_t v61 = v146;
      uint64_t v57 = v169;
      (*(void (**)(char *, int *))(v146 + 8))(v89, v169);
      uint64_t v60 = v170;
      uint64_t v59 = v171;
      if (v63) {
        goto LABEL_11;
      }
LABEL_18:
      uint64_t v149 = 0;
      uint64_t v58 = 0;
      unint64_t v91 = 0xE000000000000000;
      goto LABEL_19;
    }
    uint64_t v82 = v140;
    char v83 = sub_24D98BCC4(v167, v162);
    uint64_t v57 = v169;
    uint64_t v60 = v170;
    uint64_t v59 = v171;
    uint64_t v61 = v146;
    id v84 = v139;
    if (qword_24DCDC008[v83] == qword_24DCDC008[*(char *)(v168 + *(int *)(v163 + 40))]) {
      goto LABEL_8;
    }
    if (v83 == 3)
    {
      if (*(unsigned char *)(v168 + *(int *)(v163 + 40))) {
        goto LABEL_17;
      }
    }
    else if (v83 || *(unsigned char *)(v168 + *(int *)(v163 + 40)) != 3)
    {
LABEL_17:
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t AssociatedConformanceWitness = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();

      (*(void (**)(char *, int *))(v61 + 8))(v82, v57);
      if (v63) {
        goto LABEL_11;
      }
      goto LABEL_18;
    }
LABEL_8:
    (*(void (**)(char *, int *))(v146 + 8))(v82, v169);

    uint64_t AssociatedConformanceWitness = 0;
    if (!v63) {
      goto LABEL_18;
    }
    goto LABEL_11;
  }
  uint64_t v57 = v169;
  (*(void (**)(char *, uint64_t, uint64_t, int *))(v39 + 56))(v178, 1, 1, v169);
  uint64_t AssociatedConformanceWitness = 0;
  uint64_t v60 = v170;
  uint64_t v59 = v171;
  uint64_t v63 = v62;
  if (!v62) {
    goto LABEL_18;
  }
LABEL_11:
  strcpy((char *)v179, " domver:");
  BYTE1(v179[1]) = 0;
  WORD1(v179[1]) = 0;
  HIDWORD(v179[1]) = -402653184;
  uint64_t v58 = v63;
  id v90 = objc_msgSend(v63, sel_description);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v149 = v179[0];
  unint64_t v91 = v179[1];
LABEL_19:
  uint64_t v150 = v91;
LABEL_20:
  uint64_t v92 = v167;
  uint64_t v93 = v157;
  (*(void (**)(void))(v60 + 16))();
  uint64_t v94 = *(uint64_t (**)(char *, uint64_t, int *))(v61 + 48);
  unsigned int v95 = v94(v93, 1, v57);
  id v165 = v58;
  long long v169 = (int *)v94;
  if (v95 == 1)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v93, v59);
    if (AssociatedConformanceWitness)
    {
      swift_bridgeObjectRelease();
      v179[0] = 0;
      v179[1] = 0xE000000000000000;
      sub_24DCC9968();
      uint64_t v96 = v163;
      swift_getWitnessTable();
      uint64_t v97 = v168;
      sub_24DCCADC8();
    }
    else
    {
      v179[0] = 0;
      v179[1] = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      uint64_t v96 = v163;
      swift_getWitnessTable();
      uint64_t v97 = v168;
      sub_24DCCADC8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
    }
    sub_24DCC9968();
    uint64_t v162 = v179[0];
    uint64_t v167 = v179[1];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v151 + 56))(v182, 1, 1, v152);
    uint64_t v113 = v154;
    uint64_t v107 = v57;
  }
  else
  {
    uint64_t v98 = v166;
    (*(void (**)(char *, char *, int *))(v61 + 32))(v166, v93, v57);
    uint64_t v99 = (uint64_t)v147;
    (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v147, v98, v92);
    uint64_t v100 = v155;
    sub_24D97AFF8(v99, v92, v162, v155);
    uint64_t v157 = (char *)(v61 + 48);
    uint64_t v101 = v151;
    uint64_t v102 = *(void (**)(char *, uint64_t, uint64_t))(v151 + 16);
    uint64_t v103 = v182;
    uint64_t v146 = v61;
    uint64_t v104 = v152;
    v102(v182, v100, v152);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v103, 0, 1, v104);
    v179[0] = 0;
    v179[1] = 0xE000000000000000;
    sub_24DCC9968();
    swift_getWitnessTable();
    sub_24DCCADC8();
    sub_24DCC9968();
    uint64_t v106 = v179[0];
    uint64_t v105 = v179[1];
    v179[0] = 0;
    v179[1] = 0xE000000000000000;
    sub_24DCC9968();
    uint64_t v107 = v57;
    uint64_t v108 = v163;
    swift_getWitnessTable();
    sub_24DCCADC8();
    sub_24DCC9968();
    v179[0] = v106;
    v179[1] = v105;
    swift_bridgeObjectRetain();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v110 = v179[0];
    uint64_t v109 = v179[1];
    v179[0] = 0;
    v179[1] = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    strcpy((char *)v179, "stillPending:");
    HIWORD(v179[1]) = -4864;
    sub_24D97C4E0(*(void *)&v166[v107[9]]);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v179[0] = v110;
    v179[1] = v109;
    swift_bridgeObjectRetain();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v112 = v179[0];
    uint64_t v111 = v179[1];
    v179[0] = 0;
    v179[1] = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    strcpy((char *)v179, "shouldFetch:");
    BYTE5(v179[1]) = 0;
    HIWORD(v179[1]) = -5120;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v179[0] = v112;
    v179[1] = v111;
    uint64_t v96 = v108;
    uint64_t v97 = v168;
    swift_bridgeObjectRetain();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v162 = v179[0];
    uint64_t v167 = v179[1];
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v155, v104);
    (*(void (**)(char *, int *))(v146 + 8))(v166, v107);
    uint64_t v113 = v154;
  }
  uint64_t v114 = v153;
  uint64_t v115 = v177;
  uint64_t v116 = *(void *)(v153 - 8);
  uint64_t v117 = v175;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 16))(v175, v113, v153);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v116 + 56))(v117, 0, 1, v114);
  uint64_t v118 = *(uint64_t *)((char *)v115 + *(void *)(*v115 + 632));
  uint64_t v119 = *(void *)(v96 - 8);
  uint64_t v120 = v176;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16))(v176, v97, v96);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v119 + 56))(v120, 0, 1, v96);
  (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v174, v182, v173);
  unint64_t v121 = v178;
  if (((unsigned int (*)(char *, uint64_t, int *))v169)(v178, 1, v107))
  {
    uint64_t v122 = 0;
    int v123 = 0;
    uint64_t v124 = AssociatedConformanceWitness;
    uint64_t v125 = v165;
    if (AssociatedConformanceWitness)
    {
LABEL_28:
      uint64_t v126 = *(void **)((char *)v177 + *(void *)(*v177 + 584));
      id v127 = v124;
      id v128 = v126;
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v122 = *(void *)&v121[v107[9]];
    int v123 = v121[v107[10]];
    uint64_t v124 = AssociatedConformanceWitness;
    uint64_t v125 = v165;
    if (AssociatedConformanceWitness) {
      goto LABEL_28;
    }
  }
  uint64_t v126 = 0;
LABEL_31:
  id v129 = v125;
  uint64_t v130 = (uint64_t *)swift_retain();
  uint64_t v131 = v122;
  uint64_t v132 = v158;
  sub_24D73DF6C(v130, v175, v118, 0, v176, v174, v131, v123, v158, (uint64_t)v125, (uint64_t)v124, (uint64_t)v126);
  uint64_t v133 = v159;
  uint64_t v134 = v161;
  uint64_t v135 = sub_24D75BACC(v160, a9, v159);
  if (!v134)
  {
    uint64_t v136 = v135;
    v145(0, v162, v167, v135);
  }
  swift_bridgeObjectRelease();

  (*(void (**)(char *, int8x16_t *))(v156 + 8))(v132, v133);
  (*(void (**)(char *, uint64_t))(v172 + 8))(v182, v173);
  return (*(uint64_t (**)(char *, uint64_t))(v170 + 8))(v178, v171);
}

uint64_t sub_24D7A96DC(uint64_t a1, void (**a2)(void, void, void), uint64_t a3, void (*a4)(void, void, void, int8x16_t *), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v182 = a4;
  uint64_t v183 = a5;
  uint64_t v184 = a2;
  uint64_t v195 = (void *)a1;
  uint64_t v7 = (void *)*v5;
  uint64_t v189 = a3;
  uint64_t v190 = v7;
  uint64_t v9 = (void (*)(void, void))v7[75];
  uint64_t v10 = (void (*)(char *, uint64_t))v7[78];
  uint64_t v11 = (void (*)(void, void))v7[77];
  uint64_t v200 = (void (*)(void, void))v7[76];
  uint64_t v8 = v200;
  char v201 = v9;
  uint64_t v202 = (uint64_t)v10;
  uint64_t v203 = v11;
  uint64_t v158 = type metadata accessor for ItemReconciliation();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v159 = *(void *)(v12 - 8);
  uint64_t v160 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v161 = (char *)&v158 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v193 = type metadata accessor for ItemState();
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v164 = *(void *)(v14 - 8);
  uint64_t v165 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v163 = (char *)&v158 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v180 = v10;
  uint64_t v181 = v8;
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v200 = (void (*)(void, void))v16;
  char v201 = (void (*)(void, void))v17;
  uint64_t v202 = AssociatedConformanceWitness;
  uint64_t v203 = (void (*)(void, void))v19;
  uint64_t v20 = type metadata accessor for FileItemVersion();
  uint64_t v21 = sub_24DCCA3F8();
  uint64_t v167 = *(void *)(v21 - 8);
  uint64_t v168 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v166 = (char *)&v158 - v22;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v179 = (uint64_t)v11;
  uint64_t v185 = v9;
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  uint64_t v200 = (void (*)(void, void))v23;
  char v201 = (void (*)(void, void))v24;
  uint64_t v202 = v25;
  uint64_t v203 = (void (*)(void, void))v26;
  uint64_t v27 = type metadata accessor for FileItemVersion();
  uint64_t v28 = sub_24DCCA3F8();
  uint64_t v171 = *(void **)(v28 - 8);
  uint64_t v172 = (char *)v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v170 = (char *)&v158 - v29;
  uint64_t v30 = AssociatedTypeWitness;
  uint64_t v31 = sub_24DCCA3F8();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v158 - v34;
  uint64_t v177 = v20;
  uint64_t v178 = *(void *)(v20 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  long long v169 = (char *)&v158 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v175 = (char *)&v158 - v39;
  uint64_t v176 = *(void *)(v193 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v162 = (char *)&v158 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  unint64_t v173 = (unint64_t)&v158 - v43;
  uint64_t v192 = v27;
  uint64_t v196 = *(void *)(v27 - 8);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  char v174 = (char *)&v158 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  unint64_t v187 = (unint64_t)&v158 - v47;
  uint64_t v48 = *(void *)(v30 - 8);
  uint64_t v49 = MEMORY[0x270FA5388](v46);
  uint64_t v51 = (char *)&v158 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = MEMORY[0x270FA5388](v49);
  char v186 = (char *)&v158 - v53;
  MEMORY[0x270FA5388](v52);
  uint64_t v188 = (uint64_t)&v158 - v54;
  uint64_t v55 = *(void **)(v195[4] + 16);
  sub_24D3F0BA0((uint64_t)v6 + v190[84], (uint64_t)v204, qword_26B197140);
  uint64_t v56 = *(void *)(*v6 + 648);
  uint64_t v194 = v6;
  uint64_t v57 = (char *)v6 + v56;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v35, v57, v31);
  int v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v35, 1, v30);
  uint64_t v190 = (void *)v48;
  uint64_t v191 = v55;
  if (v58 != 1)
  {
    uint64_t v66 = v181;
    uint64_t v67 = v185;
    uint64_t v68 = AssociatedTypeWitness;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v186, v35, AssociatedTypeWitness);
    uint64_t v69 = (char *)v194 + *(void *)(*v194 + 656);
    swift_beginAccess();
    uint64_t v71 = v170;
    uint64_t v70 = v171;
    uint64_t v72 = v69;
    uint64_t v73 = v172;
    ((void (*)(char *, char *, char *))v171[2])(v170, v72, v172);
    uint64_t v74 = v192;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v196 + 48))(v71, 1, v192) == 1)
    {
      swift_retain();
      sub_24D5D990C(v204, (void (*)(void, void, void, void, void, void, void))sub_24D3F1CDC);
      ((void (*)(char *, char *))v70[1])(v71, v73);
      uint64_t v200 = v67;
      char v201 = v66;
      uint64_t v202 = v179;
      uint64_t v203 = (void (*)(void, void))v180;
      type metadata accessor for Propagation.PropagationError();
      swift_getWitnessTable();
      uint64_t v75 = (void (*)(void, void))swift_allocError();
      uint64_t v77 = v76;
      uint64_t v78 = swift_getAssociatedTypeWitness();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v80 = (void *)(v77 + *(int *)(TupleTypeMetadata2 + 48));
      uint64_t v65 = v194;
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v77, (char *)v65 + *(void *)(*v65 + 576), v78);
      *uint64_t v80 = 0xD000000000000011;
      v80[1] = 0x800000024DD066D0;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v77, 0, 1, TupleTypeMetadata2);
      uint64_t v181 = v75;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v186, v68);
      goto LABEL_5;
    }
    uint64_t v172 = v51;
    (*(void (**)(char *, char *, uint64_t))(v196 + 32))(v174, v71, v74);
    uint64_t v102 = v194;
    uint64_t v103 = (char *)v194 + *(void *)(*v194 + 680);
    swift_beginAccess();
    uint64_t v105 = v166;
    uint64_t v104 = v167;
    uint64_t v106 = v103;
    uint64_t v107 = v168;
    (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v166, v106, v168);
    uint64_t v108 = v74;
    uint64_t v109 = v105;
    uint64_t v111 = v177;
    uint64_t v110 = v178;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48))(v109, 1, v177) == 1)
    {
      swift_retain();
      sub_24D5D990C(v204, (void (*)(void, void, void, void, void, void, void))sub_24D3F1CDC);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v109, v107);
      uint64_t v200 = v67;
      char v201 = v66;
      uint64_t v202 = v179;
      uint64_t v203 = (void (*)(void, void))v180;
      type metadata accessor for Propagation.PropagationError();
      swift_getWitnessTable();
      uint64_t v112 = (void (*)(void, void))swift_allocError();
      uint64_t v114 = v113;
      uint64_t v115 = v108;
      char v83 = v102;
      uint64_t v116 = swift_getAssociatedTypeWitness();
      uint64_t v117 = swift_getTupleTypeMetadata2();
      uint64_t v118 = (void *)(v114 + *(int *)(v117 + 48));
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, (char *)v83 + *(void *)(*v83 + 576), v116);
      void *v118 = 0xD000000000000011;
      v118[1] = 0x800000024DD06670;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v114, 0, 1, v117);
      uint64_t v181 = v112;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v174, v115);
      ((void (*)(char *, uint64_t))v190[1])(v186, AssociatedTypeWitness);
      LODWORD(v185) = 0;
      LODWORD(v186) = 0;
      uint64_t v82 = v183;
      unsigned __int8 v81 = v184;
      goto LABEL_6;
    }
    uint64_t v119 = v169;
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v169, v109, v111);
    uint64_t v170 = (char *)v190[2];
    uint64_t v171 = v190 + 2;
    ((void (*)(uint64_t, char *, uint64_t))v170)(v188, v186, AssociatedTypeWitness);
    (*(void (**)(unint64_t, char *, uint64_t))(v196 + 16))(v187, v174, v108);
    (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v175, v119, v111);
    uint64_t v120 = (char *)v102 + *(void *)(*v102 + 664);
    swift_beginAccess();
    uint64_t v122 = v163;
    uint64_t v121 = v164;
    uint64_t v123 = v165;
    (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v163, v120, v165);
    uint64_t v124 = v176;
    uint64_t v125 = v193;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v122, 1, v193) == 1)
    {
      swift_retain();
      sub_24D5D990C(v204, (void (*)(void, void, void, void, void, void, void))sub_24D3F1CDC);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v123);
      uint64_t v200 = v185;
      char v201 = v66;
      uint64_t v202 = v179;
      uint64_t v203 = (void (*)(void, void))v180;
      type metadata accessor for Propagation.PropagationError();
      swift_getWitnessTable();
      uint64_t v126 = (void (*)(void, void))swift_allocError();
      uint64_t v128 = v127;
      swift_getAssociatedTypeWitness();
      uint64_t v129 = swift_getTupleTypeMetadata2();
      uint64_t v130 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56);
      LODWORD(v185) = 1;
      v130(v128, 1, 1, v129);
      uint64_t v181 = v126;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v169, v111);
      (*(void (**)(char *, uint64_t))(v196 + 8))(v174, v192);
      ((void (*)(char *, uint64_t))v190[1])(v186, AssociatedTypeWitness);
      LODWORD(v186) = 0;
      uint64_t v82 = v183;
      unsigned __int8 v81 = v184;
      char v83 = v194;
      goto LABEL_6;
    }
    uint64_t v131 = AssociatedTypeWitness;
    uint64_t v132 = v192;
    uint64_t v133 = v162;
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v162, v122, v125);
    (*(void (**)(unint64_t, char *, uint64_t))(v124 + 16))(v173, v133, v125);
    uint64_t v134 = (uint64_t)v194 + *(void *)(*v194 + 576);
    swift_retain();
    sub_24D5D990C(v204, (void (*)(void, void, void, void, void, void, void))sub_24D3F1CDC);
    sub_24D798724((uint64_t)v195, v134, (uint64_t)v199);
    uint64_t v135 = *(void (**)(char *, uint64_t))(v124 + 8);
    uint64_t v136 = v133;
    uint64_t v137 = v125;
    uint64_t v176 = v124 + 8;
    v135(v136, v125);
    uint64_t v138 = *(void (**)(void, void))(v178 + 8);
    v178 += 8;
    uint64_t v181 = v138;
    v138(v169, v111);
    id v139 = *(void (**)(void, void))(v196 + 8);
    v196 += 8;
    uint64_t v185 = v139;
    v139(v174, v132);
    int v140 = (char *)v190[1];
    uint64_t v141 = v186;
    uint64_t v142 = v131;
    ++v190;
    char v186 = v140;
    ((void (*)(char *, uint64_t))v140)(v141, v131);
    sub_24D3F0BA0((uint64_t)v199, (uint64_t)&v200, &qword_26B197970);
    if (sub_24D3F0D40((uint64_t)&v200) == 1)
    {
      uint64_t v143 = *(int *)(v137 + 40);
      uint64_t v144 = (void *)(v173 + v143 + *(int *)(type metadata accessor for ItemMetadata() + 148));
      swift_bridgeObjectRelease();
      *uint64_t v144 = 0;
      v144[1] = 0;
    }
    uint64_t v145 = (uint64_t)v195;
    unint64_t v146 = (unint64_t)v175;
    uint64_t v147 = (uint64_t)v161;
    if (v184)
    {
      uint64_t v180 = v135;
      type metadata accessor for StagedContext();
      uint64_t v148 = swift_dynamicCastClass();
      if (!v148) {
        goto LABEL_37;
      }
      uint64_t v149 = v148;
      sub_24D401194(v199, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
      swift_retain();
      sub_24D4759C8(v188, v147);
      int v153 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v158 - 8) + 48))(v147, 1);
      if (v153 == 1)
      {
        sub_24D401194(v199, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
        (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v147, v160);
        ((void (*)(char *, uint64_t, uint64_t))v170)(v172, v188, v142);
        type metadata accessor for NSFileProviderItemIdentifier(0);
        if (swift_dynamicCast()) {
          uint64_t v154 = v198;
        }
        else {
          uint64_t v154 = 0;
        }
        uint64_t v155 = (int8x16_t *)(id)FPItemNotFoundError();

        if (v155)
        {
          swift_willThrow();
          unint64_t v156 = v173;
          uint64_t v157 = v155;
          v182(0, 0, 0, v155);
          swift_release();
          sub_24D5D990C(v204, (void (*)(void, void, void, void, void, void, void))sub_24D3E3850);
          swift_release();

          sub_24D401194(v199, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
          v181(v146, v177);
          v185(v187, v132);
          ((void (*)(uint64_t, uint64_t))v186)(v188, AssociatedTypeWitness);
          return ((uint64_t (*)(unint64_t, uint64_t))v180)(v156, v193);
        }
        sub_24D401194(v199, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
        __break(1u);
LABEL_37:
        sub_24D401194(v199, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
        sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Propagation.swift", 101, 2, 1435);
      }
      (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v147, v160);
      unint64_t v150 = v187;
      uint64_t v151 = v188;
      unint64_t v152 = v173;
      sub_24D7A5BA0(v188, v204, v149, v173, v187, v146, (uint64_t)v195, v189, (uint64_t)v199, (uint64_t)v182, v183);
      swift_release();
      uint64_t v137 = v193;
      uint64_t v135 = v180;
    }
    else
    {
      sub_24D401194(v199, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
      unint64_t v150 = v187;
      uint64_t v151 = v188;
      unint64_t v152 = v173;
      sub_24D7A4AEC(v188, (uint64_t)v204, v173, v187, v146, v145, v189, (uint64_t)v199, (uint64_t)v182, v183);
    }
    sub_24D5D990C(v204, (void (*)(void, void, void, void, void, void, void))sub_24D3E3850);
    swift_release();
    sub_24D401194(v199, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
    sub_24D401194(v199, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
    v181(v146, v177);
    v185(v150, v132);
    ((void (*)(uint64_t, uint64_t))v186)(v151, v142);
    return ((uint64_t (*)(unint64_t, uint64_t))v135)(v152, v137);
  }
  swift_retain();
  sub_24D5D990C(v204, (void (*)(void, void, void, void, void, void, void))sub_24D3F1CDC);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
  uint64_t v200 = v185;
  char v201 = v181;
  uint64_t v202 = v179;
  uint64_t v203 = (void (*)(void, void))v180;
  type metadata accessor for Propagation.PropagationError();
  swift_getWitnessTable();
  uint64_t v59 = (void (*)(void, void))swift_allocError();
  uint64_t v61 = v60;
  uint64_t v62 = swift_getAssociatedTypeWitness();
  uint64_t v63 = swift_getTupleTypeMetadata2();
  uint64_t v64 = (void *)(v61 + *(int *)(v63 + 48));
  uint64_t v65 = v194;
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v61, (char *)v65 + *(void *)(*v65 + 576), v62);
  *uint64_t v64 = 0xD000000000000010;
  v64[1] = 0x800000024DD059E0;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v61, 0, 1, v63);
  uint64_t v181 = v59;
  swift_willThrow();
LABEL_5:
  LODWORD(v185) = 0;
  LODWORD(v186) = 0;
  uint64_t v82 = v183;
  unsigned __int8 v81 = v184;
  char v83 = v65;
LABEL_6:
  id v84 = (void *)swift_allocObject();
  uint64_t v85 = v182;
  v84[2] = v83;
  v84[3] = v85;
  uint64_t v86 = v195;
  v84[4] = v82;
  v84[5] = v86;
  uint64_t v87 = v189;
  v84[6] = v189;
  if (v81 && (type metadata accessor for StagedContext(), (uint64_t v88 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v89 = v88;
    id v90 = (void *)swift_allocObject();
    v90[2] = v86;
    v90[3] = v85;
    v90[4] = v82;
    v90[5] = sub_24D7B4ED8;
    unint64_t v91 = v181;
    v90[6] = v84;
    v90[7] = v91;
    uint64_t v184 = (void (**)(void, void, void))(*v191 + 608);
    uint64_t v92 = (void (*)(uint64_t, uint64_t (*)(), void *))*v184;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v93 = v91;
    v92(v89, sub_24D7B4EE0, v90);
    uint64_t v94 = v192;
    sub_24D5D990C(v204, (void (*)(void, void, void, void, void, void, void))sub_24D3E3850);
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    uint64_t v95 = v196;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v96 = v181;
    sub_24D7AB0EC(v181, v83, v85, v82, v86, v87);
    sub_24D5D990C(v204, (void (*)(void, void, void, void, void, void, void))sub_24D3E3850);
    swift_release();
    swift_release();

    uint64_t v95 = v196;
    uint64_t v94 = v192;
  }
  uint64_t v97 = v190;
  uint64_t v98 = v188;
  uint64_t v99 = AssociatedTypeWitness;
  int v100 = (int)v185;
  if (!v185)
  {
    if (!v186) {
      goto LABEL_12;
    }
LABEL_15:
    (*(void (**)(unint64_t, uint64_t))(v176 + 8))(v173, v193);
    uint64_t result = v187;
    if (!v100) {
      return result;
    }
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v178 + 8))(v175, v177);
  if (v186) {
    goto LABEL_15;
  }
LABEL_12:
  uint64_t result = v187;
  if (!v100) {
    return result;
  }
LABEL_16:
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(result, v94);
  return ((uint64_t (*)(uint64_t, uint64_t))v97[1])(v98, v99);
}

uint64_t sub_24D7AB0EC(void *a1, uint64_t *a2, void (*a3)(void, void, void, int8x16_t *), uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v46 = a4;
  uint64_t v47 = a3;
  id v43 = a1;
  uint64_t v7 = *a2;
  uint64_t v8 = *(void *)(*a2 + 608);
  uint64_t v9 = *(void *)(*a2 + 624);
  uint64_t v42 = type metadata accessor for SnapshotItem();
  uint64_t v10 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v41 = (char *)&v39 - v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for ItemState();
  uint64_t v13 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v40 = (char *)&v39 - v14;
  uint64_t v15 = *(void *)(v7 + 616);
  uint64_t v16 = *(void *)(v7 + 600);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v48 = AssociatedTypeWitness;
  uint64_t v49 = v18;
  uint64_t v50 = AssociatedConformanceWitness;
  uint64_t v51 = v20;
  uint64_t v21 = type metadata accessor for FileItemVersion();
  uint64_t v22 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v39 - v23;
  uint64_t v48 = v8;
  uint64_t v49 = v16;
  uint64_t v50 = v9;
  uint64_t v51 = v15;
  uint64_t v25 = (int8x16_t *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v26 = v25[-1].i64[1];
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v39 - v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v24, 1, 1, v21);
  uint64_t v29 = *(uint64_t *)((char *)a2 + *(void *)(*a2 + 632));
  uint64_t v30 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v40, 1, 1, v12);
  uint64_t v31 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1);
  uint64_t v32 = *(void **)((char *)a2 + *(void *)(*a2 + 584));
  uint64_t v33 = (uint64_t)v43;
  id v34 = v43;
  id v35 = v32;
  uint64_t v36 = (uint64_t *)swift_retain();
  sub_24D73DF6C(v36, (uint64_t)v24, v29, 0, v30, v31, 0, 0, v28, 0, v33, (uint64_t)v32);
  uint64_t v37 = sub_24D75BACC(v44, v45, v25);
  v47(0, 0, 0, v37);

  return (*(uint64_t (**)(char *, int8x16_t *))(v26 + 8))(v28, v25);
}

uint64_t sub_24D7AB59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  swift_retain();
  swift_retain();
  id v17 = a6;
  uint64_t v18 = type metadata accessor for Continuation();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, a9, v15, a10, (uint64_t)v16, v18, MEMORY[0x263F8D310]);
  swift_release();

  return swift_release();
}

uint64_t sub_24D7AB6BC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_24D7AB6D4(a1, a2);
}

uint64_t sub_24D7AB6D4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = *(void *)(*(void *)v2 + 624);
  v29[1] = *(void *)(*(void *)v2 + 608);
  v29[2] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_24DCCA3F8();
  v29[0] = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v29 - v8;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v29 - v11;
  if (sub_24D8903D0() && (*(unsigned char *)(v2 + *(void *)(*(void *)v2 + 640)) & 0x10) != 0)
  {
    uint64_t v18 = v35;
    uint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(a1 + 16) + 152))(v2 + *(void *)(*(void *)v2 + 576));
    if (!v18)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(char *, uint64_t))(v29[0] + 8))(v9, v6);
        uint64_t v19 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v21 = swift_getAssociatedConformanceWitness();
        uint64_t v31 = AssociatedTypeWitness;
        uint64_t v32 = v19;
        uint64_t v33 = AssociatedConformanceWitness;
        uint64_t v34 = v21;
        uint64_t v22 = type metadata accessor for ReconciliationID();
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v30, 1, 1, v22);
      }
      else
      {
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v23(v12, v9, AssociatedTypeWitness);
        uint64_t v24 = v30;
        v23(v30, v12, AssociatedTypeWitness);
        uint64_t v25 = swift_getAssociatedTypeWitness();
        uint64_t v26 = swift_getAssociatedConformanceWitness();
        uint64_t v27 = swift_getAssociatedConformanceWitness();
        uint64_t v31 = AssociatedTypeWitness;
        uint64_t v32 = v25;
        uint64_t v33 = v26;
        uint64_t v34 = v27;
        uint64_t v28 = type metadata accessor for ReconciliationID();
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v24, 0, 1, v28);
      }
    }
  }
  else
  {
    uint64_t v13 = swift_getAssociatedTypeWitness();
    uint64_t v14 = swift_getAssociatedConformanceWitness();
    uint64_t v15 = swift_getAssociatedConformanceWitness();
    uint64_t v31 = AssociatedTypeWitness;
    uint64_t v32 = v13;
    uint64_t v33 = v14;
    uint64_t v34 = v15;
    uint64_t v16 = type metadata accessor for ReconciliationID();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v30, 1, 1, v16);
  }
  return result;
}

id sub_24D7ABBCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_getAssociatedTypeWitness();
  type metadata accessor for SnapshotItem();
  sub_24DCCA3F8();
  swift_getAssociatedTypeWitness();
  sub_24DCCA3F8();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v5 = a1 + TupleTypeMetadata[12];
  uint64_t v15 = a1 + TupleTypeMetadata[16];
  uint64_t v16 = a1 + TupleTypeMetadata[20];
  uint64_t v17 = TupleTypeMetadata[24];
  uint64_t v18 = TupleTypeMetadata[28];
  uint64_t v19 = TupleTypeMetadata[32];
  uint64_t v6 = (uint64_t)v1 + *(void *)(v3 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v6, AssociatedTypeWitness);
  uint64_t v8 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v15, 1, 1, v9);
  uint64_t v10 = (uint64_t)v1 + *(void *)(*v1 + 680);
  swift_beginAccess();
  type metadata accessor for FileItemVersion();
  uint64_t v11 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v16, v10, v11);
  uint64_t v12 = *v1;
  *(void *)(a1 + v17) = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 640));
  *(void *)(a1 + v18) = *(uint64_t *)((char *)v1 + *(void *)(v12 + 632));
  id v20 = *(id *)((char *)v1 + *(void *)(v12 + 584));
  *(void *)(a1 + v19) = v20;
  type metadata accessor for DirectionalTestingOperation();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = type metadata accessor for TestingOperation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);

  return v20;
}

uint64_t sub_24D7AC120()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v9 = v0 + *(void *)(*(void *)v0 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v3 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v9, v3);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 664);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v5 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_24D3E3850(*(void *)(v0 + *(void *)(*(void *)v0 + 672)), *(void *)(v0 + *(void *)(*(void *)v0 + 672) + 8), *(void *)(v0 + *(void *)(*(void *)v0 + 672) + 16));
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 680);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v7 = sub_24DCCA3F8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_24D7AC4AC()
{
  uint64_t v0 = sub_24D797F34();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v9 = v0 + *(void *)(*(void *)v0 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v3 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v9, v3);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 664);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState();
  uint64_t v5 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_24D3E3850(*(void *)(v0 + *(void *)(*(void *)v0 + 672)), *(void *)(v0 + *(void *)(*(void *)v0 + 672) + 8), *(void *)(v0 + *(void *)(*(void *)v0 + 672) + 16));
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 680);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v7 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return v0;
}

uint64_t sub_24D7AC844()
{
  return sub_24D7B1A28(sub_24D7AC4AC);
}

uint64_t type metadata accessor for Propagation.UpdateItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D7AC874()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_24DCCA3F8();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
    uint64_t result = sub_24DCCA3F8();
    if (v2 <= 0x3F)
    {
      type metadata accessor for SnapshotItem();
      uint64_t result = sub_24DCCA3F8();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_24D7ACA80()
{
  return 0x692D6574656C6564;
}

uint64_t sub_24D7ACAA0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for SnapshotItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = (char *)v0 + *(void *)(v1 + 680);
  swift_beginAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2)) {
    return 4;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_24D98BCC4(v2, WitnessTable);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_24D7ACC38()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 680);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2)) {
    return 2;
  }
  uint64_t v4 = v1 + *(int *)(v2 + 48);
  return *(unsigned __int8 *)(v4 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_24D7ACD20()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 680);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t result = 0;
  if (!v3)
  {
    uint64_t v5 = v1 + *(int *)(v2 + 48);
    return *(void *)(v5 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_24D7ACE10()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 680);
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for SnapshotItem();
  unsigned __int8 v3 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2))
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v1 + *(int *)(v2 + 48);
    uint64_t v4 = *(unsigned int *)(v5 + 4);
    unsigned __int8 v3 = *(unsigned char *)(v5 + 8);
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_24D7ACF00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 680);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for SnapshotItem();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a1, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v7 = v3 + *(int *)(v4 + 36);
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a1, v7, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
}

uint64_t sub_24D7AD0D0()
{
  return 0;
}

uint64_t sub_24D7AD1AC(uint64_t a1, void **a2)
{
  uint64_t v198 = a2;
  uint64_t v3 = v2;
  uint64_t v161 = a1;
  uint64_t v4 = *v2;
  uint64_t v5 = *((void *)*v2 + 76);
  uint64_t v6 = (void (*)(char *, char *, uint64_t))*((void *)*v2 + 78);
  uint64_t v171 = type metadata accessor for SnapshotItem();
  uint64_t v170 = sub_24DCCA3F8();
  uint64_t v169 = *(void *)(v170 - 8);
  MEMORY[0x270FA5388](v170);
  unint64_t v173 = (char *)&v142 - v7;
  uint64_t v175 = type metadata accessor for JobLockRule();
  MEMORY[0x270FA5388](v175);
  char v174 = (char *)&v142 - v8;
  uint64_t v196 = v4;
  uint64_t v9 = *((void *)v4 + 75);
  uint64_t v10 = *((void *)v4 + 77);
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v158 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v154 = (char *)&v142 - v12;
  uint64_t v159 = v13;
  uint64_t v157 = sub_24DCCA3F8();
  uint64_t v156 = *(void *)(v157 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v157);
  uint64_t v155 = (char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v162 = (char *)&v142 - v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v180 = sub_24DCCA3F8();
  uint64_t v164 = *(void *)(v180 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v180);
  uint64_t v163 = (char *)&v142 - v19;
  uint64_t v172 = AssociatedTypeWitness;
  uint64_t v165 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v160 = (char *)&v142 - v20;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v183 = sub_24DCCA3F8();
  uint64_t v182 = *(void *)(v183 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v183);
  uint64_t v167 = (char *)&v142 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v166 = (char *)&v142 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v177 = (char *)&v142 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v181 = (char *)&v142 - v29;
  uint64_t v186 = v21;
  uint64_t v185 = *(void *)(v21 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v168 = (char *)&v142 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v184 = (char *)&v142 - v32;
  uint64_t v33 = swift_getAssociatedTypeWitness();
  uint64_t v34 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v36 = swift_getAssociatedConformanceWitness();
  uint64_t v199 = v33;
  uint64_t v200 = v34;
  uint64_t v201 = AssociatedConformanceWitness;
  uint64_t v202 = v36;
  uint64_t v37 = type metadata accessor for FileItemVersion();
  uint64_t v38 = sub_24DCCA3F8();
  uint64_t v191 = *(void *)(v38 - 8);
  uint64_t v192 = v38;
  uint64_t v39 = MEMORY[0x270FA5388](v38);
  uint64_t v176 = (char *)&v142 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  unint64_t v187 = (char *)&v142 - v42;
  uint64_t v190 = v37;
  uint64_t v189 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v142 - v43;
  uint64_t v179 = v9;
  uint64_t v199 = v9;
  uint64_t v200 = v5;
  uint64_t v194 = v5;
  uint64_t v178 = v10;
  uint64_t v201 = v10;
  uint64_t v202 = (uint64_t)v6;
  uint64_t v188 = v6;
  uint64_t v45 = type metadata accessor for ItemReconciliation();
  uint64_t v46 = sub_24DCCA3F8();
  uint64_t v193 = *(unsigned __int8 **)(v46 - 8);
  uint64_t v47 = MEMORY[0x270FA5388](v46);
  uint64_t v49 = (char *)&v142 - v48;
  uint64_t v195 = *(void *)(v45 - 8);
  uint64_t v50 = MEMORY[0x270FA5388](v47);
  uint64_t v52 = (char *)&v142 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v50);
  uint64_t v54 = (char *)&v142 - v53;
  uint64_t v55 = v197;
  uint64_t v56 = (uint64_t)v3 + *((void *)v196 + 72);
  sub_24D475DF0(v56, (uint64_t)v49);
  if (!v55)
  {
    uint64_t v57 = v193;
    int v153 = (uint64_t (*)(char *, uint64_t, uint64_t))v46;
    uint64_t v151 = v3;
    uint64_t v150 = v56;
    uint64_t v196 = v54;
    unint64_t v152 = v44;
    uint64_t v197 = 0;
    uint64_t v58 = v195;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v49, 1, v45) == 1)
    {
      (*((void (**)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))v57 + 1))(v49, v153);
      return 0;
    }
    uint64_t v193 = (unsigned __int8 *)v52;
    uint64_t v59 = v196;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v196, v49, v45);
    uint64_t v60 = &v59[*(int *)(v45 + 52)];
    uint64_t v61 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v63 = v191;
    uint64_t v62 = v192;
    uint64_t v64 = v187;
    (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v187, &v60[*(int *)(v61 + 48)], v192);
    uint64_t v65 = v189;
    uint64_t v66 = v190;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48))(v64, 1, v190) == 1)
    {
      (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v45);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v62);
      return 0;
    }
    uint64_t v194 = v45;
    uint64_t v67 = v152;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v152, v64, v66);
    uint64_t v68 = v182;
    uint64_t v69 = v182 + 16;
    uint64_t v70 = v181;
    uint64_t v71 = v60;
    uint64_t v72 = v183;
    uint64_t v188 = *(void (**)(char *, char *, uint64_t))(v182 + 16);
    v188(v181, v71, v183);
    uint64_t v73 = (void *)v185;
    uint64_t v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v185 + 48);
    uint64_t v75 = v186;
    unint64_t v187 = (char *)(v185 + 48);
    int v153 = v74;
    if (v74(v70, 1, v186) == 1)
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v67, v66);
      (*(void (**)(char *, uint64_t))(v195 + 8))(v196, v194);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v72);
      return 0;
    }
    uint64_t v148 = v69;
    uint64_t v77 = (void (*)(char *, char *, uint64_t))v73[4];
    uint64_t v78 = v72;
    uint64_t v79 = v65;
    uint64_t v80 = v184;
    uint64_t v144 = v73 + 4;
    uint64_t v143 = v77;
    v77(v184, v70, v75);
    unsigned __int8 v81 = (void (*)(char *, char *, uint64_t))v73[2];
    uint64_t v82 = v177;
    uint64_t v181 = (char *)(v73 + 2);
    uint64_t v149 = v81;
    v81(v177, v80, v75);
    char v83 = v73 + 7;
    id v84 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v73[7];
    LOBYTE(v73) = 1;
    uint64_t v147 = v83;
    unint64_t v146 = v84;
    v84(v82, 0, 1, v75);
    uint64_t v85 = v151;
    uint64_t v86 = (uint64_t)v151 + *((void *)*v151 + 79);
    swift_beginAccess();
    uint64_t v87 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 40);
    uint64_t v177 = (char *)(v68 + 40);
    uint64_t v145 = v87;
    v87(v86, v82, v78);
    swift_endAccess();
    uint64_t v88 = v176;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v176, v152, v66);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v88, 0, 1, v66);
    uint64_t v89 = v85;
    uint64_t v90 = (uint64_t)v85 + *((void *)*v85 + 81);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v191 + 40))(v90, v88, v192);
    swift_endAccess();
    uint64_t v91 = type metadata accessor for ItemReconciliationHalf();
    uint64_t v92 = *(int *)(v91 + 36);
    uint64_t v93 = *(void *)&v196[v92];
    uint64_t v95 = v193;
    uint64_t v94 = v194;
    (*(void (**)(unsigned __int8 *))(v195 + 16))(v193);
    if ((v93 & 2) == 0) {
      LODWORD(v73) = (v95[*(int *)(v91 + 36)] >> 4) & 1;
    }
    uint64_t v96 = v95;
    uint64_t v97 = *(unsigned __int8 **)(v195 + 8);
    v195 += 8;
    uint64_t v98 = ((uint64_t (*)(unsigned __int8 *, uint64_t))v97)(v96, v94);
    uint64_t v99 = v85;
    uint64_t v46 = *((void *)*v85 + 83);
    *((unsigned char *)v85 + v46) = (_BYTE)v73;
    if ((((uint64_t (*)(uint64_t))(*v198)[19])(v98) & 0x4000) == 0)
    {
      char v100 = 0;
      uint64_t v101 = v186;
      uint64_t v102 = v198;
LABEL_18:
      uint64_t v103 = v150;
      goto LABEL_19;
    }
    uint64_t v101 = v186;
    uint64_t v102 = v198;
    if ((v196[v92] & 0x10) != 0)
    {
      char v100 = 1;
      goto LABEL_18;
    }
    if (v89[17] == (char *)0x2000000)
    {
      char v100 = 1;
      uint64_t v103 = v150;
LABEL_19:
      *((unsigned char *)v99 + *((void *)*v99 + 84)) = v100 & 1;
      uint64_t v104 = v197;
      uint64_t v105 = (*(uint64_t (**)(uint64_t))(*v102[5] + 296))(v103);
      if (v104)
      {
        (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v101);
        (*(void (**)(char *, uint64_t))(v189 + 8))(v152, v190);
        ((void (*)(char *, uint64_t))v97)(v196, v194);
        return v46;
      }
      uint64_t v107 = (uint64_t)v99 + *((void *)*v99 + 82);
      *(void *)uint64_t v107 = v105;
      *(unsigned char *)(v107 + 8) = v106 & 1;
      uint64_t v203 = sub_24DCC9C98();
      if (*((unsigned char *)v99 + v46))
      {
        v149(v174, v184, v101);
        swift_storeEnumTagMultiPayload();
        sub_24DCC9D48();
        sub_24DCC9D08();
      }
      uint64_t v108 = v173;
      (*(void (**)(char *, uint64_t))(*v198[4] + 240))(v184, 1);
      uint64_t v197 = 0;
      uint64_t v193 = v97;
      uint64_t v109 = (uint64_t)v99 + *((void *)*v99 + 85);
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v169 + 40))(v109, v108, v170);
      swift_endAccess();
      uint64_t v110 = v171;
      uint64_t v111 = 1;
      int v112 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 48))(v109, 1, v171);
      uint64_t v113 = v166;
      if (!v112)
      {
        v149(v166, (char *)(v109 + *(int *)(v110 + 36)), v101);
        uint64_t v111 = 0;
      }
      v146(v113, v111, 1, v101);
      uint64_t v114 = (char *)v99 + *((void *)*v99 + 80);
      swift_beginAccess();
      uint64_t v115 = v183;
      v145((uint64_t)v114, v113, v183);
      swift_endAccess();
      uint64_t v116 = v167;
      v188(v167, v114, v115);
      int v117 = v153(v116, 1, v101);
      uint64_t v118 = v168;
      if (v117 != 1)
      {
        v143(v168, v116, v101);
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v124 = &v174[*(int *)(TupleTypeMetadata3 + 48)];
        uint64_t v125 = &v174[*(int *)(TupleTypeMetadata3 + 64)];
        uint64_t v126 = v149;
        v149(v174, v184, v101);
        v126(v124, v118, v101);
        v126(v125, v118, v101);
        swift_storeEnumTagMultiPayload();
        sub_24DCC9D48();
        sub_24DCC9D08();
        swift_beginAccess();
        sub_24D73C78C((uint64_t)(v99 + 7), (uint64_t)&v199);
        uint64_t v46 = sub_24D5773A8();
        swift_bridgeObjectRelease();
        sub_24D73C7F4((uint64_t)&v199);
        uint64_t v127 = *(void (**)(char *, uint64_t))(v185 + 8);
        v127(v118, v101);
        v127(v184, v101);
        (*(void (**)(char *, uint64_t))(v189 + 8))(v152, v190);
        ((void (*)(char *, uint64_t))v193)(v196, v194);
        return v46;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v101);
      (*(void (**)(char *, uint64_t))(v189 + 8))(v152, v190);
      ((void (*)(char *, uint64_t))v193)(v196, v194);
      (*(void (**)(char *, uint64_t))(v182 + 8))(v116, v115);
      return 0;
    }
    uint64_t v119 = v164;
    uint64_t v120 = v163;
    (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v163, v196, v180);
    uint64_t v121 = v165;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v120, 1, v172) == 1)
    {
      uint64_t v193 = v97;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v180);
    }
    else
    {
      uint64_t v128 = v160;
      uint64_t v129 = v120;
      uint64_t v130 = v172;
      (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v160, v129, v172);
      uint64_t v131 = v197;
      (*(void (**)(char *, uint64_t))(*v102[5] + 240))(v128, 1);
      uint64_t v197 = v131;
      if (v131)
      {
        (*(void (**)(char *, uint64_t))(v121 + 8))(v128, v130);
        (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v101);
        (*(void (**)(char *, uint64_t))(v189 + 8))(v152, v190);
        ((void (*)(char *, uint64_t))v97)(v196, v94);
        return v46;
      }
      uint64_t v193 = v97;
      (*(void (**)(char *, uint64_t))(v121 + 8))(v128, v130);
      uint64_t v132 = v156;
      uint64_t v133 = v155;
      uint64_t v134 = v157;
      (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v155, v162, v157);
      uint64_t v135 = v158;
      uint64_t v136 = v159;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v133, 1, v159) != 1)
      {
        uint64_t v137 = v154;
        (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v154, v133, v136);
        uint64_t v138 = v135;
        id v139 = &v137[*(int *)(v136 + 48)];
        uint64_t v140 = type metadata accessor for ItemMetadata();
        uint64_t v103 = v150;
        if (v139[*(int *)(v140 + 64)] == 1)
        {
          char v141 = v139[*(int *)(v140 + 60)];
          (*(void (**)(char *, uint64_t))(v138 + 8))(v154, v159);
          if (v141)
          {
            char v100 = 1;
            uint64_t v102 = v198;
LABEL_35:
            uint64_t v97 = v193;
            goto LABEL_19;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v138 + 8))(v154, v159);
        }
        uint64_t v102 = v198;
LABEL_30:
        uint64_t v122 = v197;
        char v100 = (*(uint64_t (**)(uint64_t))(*v102[5] + 464))(v103);
        uint64_t v197 = v122;
        if (v122)
        {
          (*(void (**)(char *, uint64_t))(v185 + 8))(v184, v101);
          (*(void (**)(char *, uint64_t))(v189 + 8))(v152, v190);
          ((void (*)(char *, uint64_t))v193)(v196, v94);
          return v46;
        }
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v132 + 8))(v133, v134);
      uint64_t v102 = v198;
    }
    uint64_t v103 = v150;
    goto LABEL_30;
  }
  return v46;
}

void sub_24D7AE954(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, int8x16_t *), uint64_t a5)
{
  uint64_t v142 = a4;
  uint64_t v143 = a5;
  uint64_t v141 = a3;
  uint64_t v147 = a1;
  uint64_t v6 = (uint64_t *)*v5;
  uint64_t v7 = *(void *)(*v5 + 608);
  uint64_t v8 = *(void *)(*v5 + 624);
  uint64_t v137 = type metadata accessor for SnapshotItem();
  uint64_t v9 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v138 = (char *)&v116 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v135 = type metadata accessor for ItemState();
  uint64_t v11 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v136 = (char *)&v116 - v12;
  unint64_t v146 = v6;
  uint64_t v13 = v6[77];
  uint64_t v14 = (char *)v6[75];
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v148 = v15;
  uint64_t v149 = v16;
  uint64_t v150 = AssociatedConformanceWitness;
  uint64_t v151 = v18;
  uint64_t v130 = type metadata accessor for FileItemVersion();
  uint64_t v19 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v131 = (char *)&v116 - v20;
  uint64_t v148 = v7;
  uint64_t v149 = (uint64_t)v14;
  uint64_t v150 = v8;
  uint64_t v151 = v13;
  uint64_t v144 = v13;
  uint64_t v134 = (int8x16_t *)type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v133 = v134[-1].i64[1];
  MEMORY[0x270FA5388](v134);
  uint64_t v132 = (char *)&v116 - v21;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v148 = v22;
  uint64_t v149 = v23;
  uint64_t v150 = v24;
  uint64_t v151 = v25;
  uint64_t v26 = type metadata accessor for FileItemVersion();
  uint64_t v126 = sub_24DCCA3F8();
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  id v139 = (char *)&v116 - v27;
  uint64_t v28 = AssociatedTypeWitness;
  uint64_t v29 = sub_24DCCA3F8();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v116 - v32;
  uint64_t v128 = v26;
  uint64_t v129 = *(void *)(v26 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  uint64_t v124 = (char *)&v116 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v127 = (char *)&v116 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v123 = (char *)&v116 - v39;
  uint64_t v40 = v28;
  uint64_t v41 = *(void *)(v28 - 8);
  uint64_t v42 = *(void *)(v41 + 64);
  uint64_t v43 = MEMORY[0x270FA5388](v38);
  uint64_t v120 = (char *)&v116 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v43);
  uint64_t v122 = (char *)&v116 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v140 = (char *)&v116 - v47;
  MEMORY[0x270FA5388](v46);
  uint64_t v121 = (char *)&v116 - v48;
  uint64_t v117 = *(void *)(v147[4] + 16);
  uint64_t v49 = v146[79];
  unint64_t v146 = v5;
  uint64_t v50 = (char *)v5 + v49;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v33, v50, v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v33, 1, v40) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
    uint64_t v148 = (uint64_t)v14;
    uint64_t v149 = v7;
    uint64_t v150 = v144;
    uint64_t v151 = v8;
    type metadata accessor for Propagation.PropagationError();
    swift_getWitnessTable();
    uint64_t v51 = (void *)swift_allocError();
    uint64_t v53 = v52;
    uint64_t v54 = swift_getAssociatedTypeWitness();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v56 = (void *)(v53 + *(int *)(TupleTypeMetadata2 + 48));
    uint64_t v57 = v146;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v53, (char *)v57 + *(void *)(*v57 + 576), v54);
    void *v56 = 0xD000000000000010;
    v56[1] = 0x800000024DD059E0;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v53, 0, 1, TupleTypeMetadata2);
    swift_willThrow();
  }
  else
  {
    uint64_t v118 = v7;
    uint64_t v58 = v144;
    uint64_t v116 = *(void (**)(void))(v41 + 32);
    ((void (*)(char *, char *, uint64_t))v116)(v140, v33, v40);
    uint64_t v59 = *(void *)(*v146 + 648);
    uint64_t v119 = v41;
    uint64_t v60 = (char *)v146 + v59;
    swift_beginAccess();
    uint64_t v61 = v125;
    uint64_t v62 = v139;
    uint64_t v63 = v126;
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v139, v60, v126);
    uint64_t v64 = v129;
    uint64_t v65 = v128;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v62, 1, v128) == 1)
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v139, v63);
      uint64_t v148 = (uint64_t)v14;
      uint64_t v149 = v118;
      uint64_t v150 = v58;
      uint64_t v151 = v8;
      type metadata accessor for Propagation.PropagationError();
      swift_getWitnessTable();
      uint64_t v51 = (void *)swift_allocError();
      uint64_t v67 = v66;
      uint64_t v68 = swift_getAssociatedTypeWitness();
      uint64_t v69 = swift_getTupleTypeMetadata2();
      uint64_t v70 = (void *)(v67 + *(int *)(v69 + 48));
      uint64_t v57 = v146;
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v67, (char *)v57 + *(void *)(*v57 + 576), v68);
      void *v70 = 0xD000000000000011;
      v70[1] = 0x800000024DD06670;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v67, 0, 1, v69);
      swift_willThrow();
    }
    else
    {
      uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
      v71(v127, v139, v65);
      int v72 = *((unsigned __int8 *)v146 + *(void *)(*v146 + 664));
      if (v72 == 2)
      {
        uint64_t v148 = (uint64_t)v14;
        uint64_t v149 = v118;
        uint64_t v150 = v58;
        uint64_t v151 = v8;
        type metadata accessor for Propagation.PropagationError();
        swift_getWitnessTable();
        uint64_t v51 = (void *)swift_allocError();
        uint64_t v73 = v65;
        uint64_t v75 = v74;
        uint64_t v76 = swift_getAssociatedTypeWitness();
        uint64_t v77 = swift_getTupleTypeMetadata2();
        uint64_t v78 = (void *)(v75 + *(int *)(v77 + 48));
        uint64_t v57 = v146;
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v75, (char *)v57 + *(void *)(*v57 + 576), v76);
        *uint64_t v78 = 0xD000000000000016;
        v78[1] = 0x800000024DD06690;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v75, 0, 1, v77);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v64 + 8))(v127, v73);
      }
      else
      {
        if (*((unsigned char *)v146 + *(void *)(*v146 + 672)) != 2)
        {
          LODWORD(v139) = v72 & 1;
          uint64_t v138 = v14;
          uint64_t v97 = v121;
          uint64_t v98 = AssociatedTypeWitness;
          v116();
          uint64_t v99 = v123;
          v71(v123, v127, v65);
          char v100 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
          uint64_t v101 = v97;
          v100(v122, v97, v98);
          (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v124, v99, v65);
          uint64_t v102 = v146;
          uint64_t v140 = *(char **)((char *)v102 + *(void *)(*v102 + 584));
          v100(v120, v101, v98);
          uint64_t v103 = v119;
          unint64_t v104 = (*(unsigned __int8 *)(v119 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
          uint64_t v105 = (void *)swift_allocObject();
          uint64_t v106 = v118;
          v105[2] = v138;
          v105[3] = v106;
          uint64_t v107 = v143;
          v105[4] = v144;
          v105[5] = v8;
          v105[6] = v147;
          v105[7] = v102;
          v105[8] = v142;
          v105[9] = v107;
          ((void (*)(char *, char *, uint64_t))v116)((char *)v105 + v104, v120, v98);
          *(void *)((char *)v105 + ((v42 + v104 + 7) & 0xFFFFFFFFFFFFFFF8)) = v141;
          uint64_t v108 = *(void (**)(char *, void, char *, char *, uint64_t (*)(uint64_t), void *))(*(void *)v117 + 632);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v109 = v122;
          uint64_t v110 = v124;
          v108(v122, v139, v124, v140, sub_24D7B49B8, v105);
          swift_release();
          uint64_t v111 = *(void (**)(char *, uint64_t))(v129 + 8);
          int v112 = v110;
          uint64_t v113 = v128;
          v111(v112, v128);
          uint64_t v114 = *(void (**)(char *, uint64_t))(v103 + 8);
          uint64_t v115 = AssociatedTypeWitness;
          v114(v109, AssociatedTypeWitness);
          v111(v123, v113);
          v114(v121, v115);
          return;
        }
        uint64_t v148 = (uint64_t)v14;
        uint64_t v149 = v118;
        uint64_t v150 = v58;
        uint64_t v151 = v8;
        type metadata accessor for Propagation.PropagationError();
        swift_getWitnessTable();
        uint64_t v51 = (void *)swift_allocError();
        uint64_t v79 = v65;
        uint64_t v81 = v80;
        uint64_t v82 = swift_getAssociatedTypeWitness();
        uint64_t v83 = swift_getTupleTypeMetadata2();
        id v84 = (void *)(v81 + *(int *)(v83 + 48));
        uint64_t v57 = v146;
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v81, (char *)v57 + *(void *)(*v57 + 576), v82);
        *id v84 = 0xD000000000000011;
        v84[1] = 0x800000024DD066B0;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v81, 0, 1, v83);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v129 + 8))(v127, v79);
      }
    }
    (*(void (**)(char *, uint64_t))(v119 + 8))(v140, AssociatedTypeWitness);
  }
  uint64_t v85 = (uint64_t)v131;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v131, 1, 1);
  uint64_t v86 = (char *)v57 + *(void *)(*v57 + 656);
  uint64_t v87 = *(void *)v86;
  int v88 = v86[8];
  uint64_t v89 = (uint64_t)v136;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v136, 1, 1);
  uint64_t v90 = v138;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v138, 1, 1);
  uint64_t v91 = *(void **)((char *)v57 + *(void *)(*v57 + 584));
  swift_retain();
  id v92 = v51;
  id v93 = v91;
  uint64_t v94 = v132;
  sub_24D73DF6C(v57, v85, v87, v88, v89, v90, 0, 0, v132, 0, (uint64_t)v51, (uint64_t)v91);
  uint64_t v95 = v134;
  uint64_t v96 = sub_24D75BACC(v147, v141, v134);
  (*(void (**)(char *, int8x16_t *))(v133 + 8))(v94, v95);
  v142(0, 0, 0, v96);
}

uint64_t sub_24D7AFC5C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a3;
  uint64_t v50 = a7;
  uint64_t v44 = a6;
  uint64_t v40 = a5;
  uint64_t v41 = a4;
  uint64_t v42 = a1;
  uint64_t v46 = (void *)*a2;
  uint64_t v47 = a2;
  uint64_t v48 = v46[12];
  uint64_t v43 = v46[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v39 = (char *)&v35 - v12;
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v14 = sub_24DCCB058();
  uint64_t v37 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v36 = (char *)&v35 - v17;
  uint64_t v19 = swift_allocObject();
  uint64_t v45 = v19;
  *(void *)(v19 + 16) = a4;
  *(void *)(v19 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v42, v14);
  uint64_t v20 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v44, AssociatedTypeWitness);
  unint64_t v21 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v22 = (v16 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (*(unsigned __int8 *)(v20 + 80) + v22 + 8) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = (char *)swift_allocObject();
  uint64_t v27 = v47;
  uint64_t v28 = v46;
  *((void *)v26 + 2) = v46[11];
  *((void *)v26 + 3) = v43;
  *((void *)v26 + 4) = v28[13];
  *((void *)v26 + 5) = v48;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v26[v21], v36, v37);
  *(void *)&v26[v22] = v27;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v26[v23], v39, v38);
  uint64_t v29 = &v26[v24];
  uint64_t v30 = v40;
  *(void *)uint64_t v29 = v41;
  *((void *)v29 + 1) = v30;
  uint64_t v31 = v49;
  uint64_t v32 = v50;
  *(void *)&v26[v25] = v49;
  *(void *)&v26[(v25 + 15) & 0xFFFFFFFFFFFFFFF8] = v32;
  uint64_t v33 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D7B4A74, v31, (uint64_t)sub_24D73CC58, v45, (uint64_t)sub_24D7B4D38, (uint64_t)v26, v33, MEMORY[0x263F8D310]);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D7B0074(int8x16_t *a1, void *a2, int8x16_t *a3, void (*a4)(void, uint64_t, unint64_t, int8x16_t *), uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v132 = a6;
  uint64_t v133 = a7;
  uint64_t v116 = a5;
  uint64_t v117 = a4;
  uint64_t v124 = a3;
  uint64_t v141 = a1;
  uint64_t v8 = *a2;
  uint64_t v9 = *(void **)(*a2 + 96);
  uint64_t v10 = *(void **)(*a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v113[1] = swift_getAssociatedConformanceWitness();
  uint64_t v131 = type metadata accessor for ItemState();
  uint64_t v12 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v143 = (uint64_t)v113 - v13;
  uint64_t v14 = *(void *)(v8 + 104);
  uint64_t v136 = a2;
  unint64_t v15 = *(void *)(v8 + 88);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v145 = v16;
  unint64_t v146 = v17;
  uint64_t v147 = AssociatedConformanceWitness;
  uint64_t v148 = v19;
  uint64_t v126 = type metadata accessor for FileItemVersion();
  uint64_t v20 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v142 = (uint64_t)v113 - v21;
  uint64_t v145 = (uint64_t)v10;
  unint64_t v146 = v15;
  uint64_t v147 = (uint64_t)v9;
  uint64_t v148 = v14;
  uint64_t v128 = type metadata accessor for Reconciliation.ReconcileAfterPropagation();
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v130 = (char *)v113 - v22;
  uint64_t v23 = type metadata accessor for SnapshotItem();
  unint64_t v138 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v118 = (char *)v113 - v25;
  uint64_t v115 = AssociatedTypeWitness;
  uint64_t v114 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v122 = (char *)v113 - v27;
  uint64_t v135 = *(v10 - 1);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v121 = (char *)v113 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)v113 - v30;
  uint64_t v125 = v9;
  uint64_t v32 = type metadata accessor for FileTreeError();
  uint64_t v119 = *(void (***)(char *, uint64_t))(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v120 = (char *)v113 - v33;
  uint64_t v123 = v10;
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v35 = sub_24DCCB058();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (void *)((char *)v113 - v37);
  id v139 = (void (*)(void, void, void))v23;
  uint64_t v144 = sub_24DCCA3F8();
  uint64_t v140 = *(void *)(v144 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v144);
  uint64_t v129 = (char *)v113 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v134 = (char *)v113 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)v113 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v149 = (uint64_t)v113 - v46;
  (*(void (**)(uint64_t *, int8x16_t *, uint64_t))(v36 + 16))(v38, v141, v35);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v47 = v119;
    uint64_t v145 = *v38;
    uint64_t v48 = (int8x16_t *)v145;
    id v49 = (id)v145;
    uint64_t v50 = v120;
    int v51 = swift_dynamicCast();
    uint64_t v52 = v144;
    uint64_t v53 = v134;
    uint64_t v141 = v48;
    if (v51)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v55 = v137;
      if (EnumCaseMultiPayload == 9)
      {
LABEL_6:
        uint64_t v56 = v136;
        v47[1](v50, v32);

        (*(void (**)(int8x16_t *, uint64_t))(*(void *)v56[4] + 240))(v124, 1);
        if (v55)
        {

          return;
        }
        uint64_t v137 = 0;
        uint64_t v109 = v149;
        uint64_t v110 = v45;
        uint64_t v64 = v140;
        (*(void (**)(uint64_t, char *, uint64_t))(v140 + 32))(v149, v110, v52);
        uint64_t v78 = v109;
        uint64_t v135 = 0;
        uint64_t v125 = 0;
        uint64_t v124 = v141;
        uint64_t v141 = 0;
        uint64_t v77 = v126;
        goto LABEL_17;
      }
      if (EnumCaseMultiPayload == 3)
      {
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
        uint64_t v32 = v115;

        uint64_t v47 = v114;
        goto LABEL_6;
      }
      v47[1](v50, v32);
      uint64_t v48 = v141;
    }

    unint64_t v80 = v138;
    uint64_t v79 = v139;
    uint64_t v81 = v149;
    (*(void (**)(uint64_t, uint64_t, uint64_t, void (*)(void, void, void)))(v138 + 56))(v149, 1, 1, v139);
    uint64_t v82 = v48;
    uint64_t v78 = v81;
    uint64_t v135 = 0;
    uint64_t v125 = 0;
    uint64_t v124 = v48;
    uint64_t v77 = v126;
    uint64_t v64 = v140;
    goto LABEL_20;
  }
  id v57 = v121;
  uint64_t v58 = v122;
  uint64_t v59 = v31;
  uint64_t v120 = (char *)v32;
  uint64_t v60 = v125;
  uint64_t v61 = *(void **)((char *)v38 + *(int *)(TupleTypeMetadata2 + 48));
  uint64_t v62 = (uint64_t)v123;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, void *))(v135 + 48))(v38, 1, v123) != 1)
  {
    uint64_t v66 = v135;
    (*(void (**)(char *, uint64_t *, uint64_t))(v135 + 32))(v59, v38, v62);
    (*(void (**)(id, char *, uint64_t))(v66 + 16))(v57, v59, v62);
    uint64_t v67 = v149;
    sub_24D97AFF8((uint64_t)v57, v62, (uint64_t)v60, v149);
    (*(void (**)(uint64_t, void, uint64_t, void (*)(void, void, void)))(v138 + 56))(v67, 0, 1, v139);
    uint64_t v68 = (void (**)(char *, uint64_t))v60[8];
    uint64_t v121 = v61;
    uint64_t v119 = v68;
    ((void (*)(uint64_t, void *))v68)(v62, v60);
    uint64_t v69 = v115;
    LOBYTE(v67) = sub_24DCC9798();
    uint64_t v70 = v114;
    v114[1](v58, v69);
    if (v67)
    {
      (*(void (**)(char *, uint64_t))(v135 + 8))(v59, v62);

      uint64_t v63 = 0;
    }
    else
    {
      swift_getWitnessTable();
      uint64_t v141 = (int8x16_t *)swift_allocError();
      uint64_t v71 = v61;
      uint64_t v72 = v69;
      uint64_t v74 = v73;
      sub_24DCCA3F8();
      swift_getTupleTypeMetadata2();
      ((void (*)(uint64_t, int8x16_t *, uint64_t))v70[2])(v74, v124, v72);
      uint64_t v75 = v72;
      uint64_t v61 = v71;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v70[7])(v74, 0, 1, v75);
      ((void (*)(uint64_t, void *))v119)(v62, v125);
      uint64_t v63 = v141;
      swift_storeEnumTagMultiPayload();

      (*(void (**)(char *, uint64_t))(v135 + 8))(v59, v62);
    }
    uint64_t v64 = v140;
    uint64_t v53 = v134;
    uint64_t v76 = v63;
    uint64_t v141 = v63;
    if (v61) {
      goto LABEL_10;
    }
LABEL_15:
    uint64_t v135 = 0;
    uint64_t v125 = 0;
    uint64_t v124 = v63;
    goto LABEL_16;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, void (*)(void, void, void)))(v138 + 56))(v149, 1, 1, v139);
  uint64_t v63 = 0;
  uint64_t v64 = v140;
  uint64_t v53 = v134;
  uint64_t v141 = 0;
  if (!v61) {
    goto LABEL_15;
  }
LABEL_10:
  uint64_t v145 = 0x3A7265766D6F6420;
  unint64_t v146 = 0xE800000000000000;
  uint64_t v125 = v61;
  id v65 = objc_msgSend(v61, sel_description);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v135 = v145;
  uint64_t v124 = v63;
LABEL_16:
  uint64_t v77 = v126;
  uint64_t v78 = v149;
LABEL_17:
  unint64_t v80 = v138;
  uint64_t v79 = v139;
LABEL_20:
  uint64_t v83 = v144;
  id v139 = *(void (**)(void, void, void))(v64 + 16);
  v139(v53, v78, v144);
  if ((*(unsigned int (**)(char *, uint64_t, void))(v80 + 48))(v53, 1, v79) == 1)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v53, v83);
    uint64_t v145 = 0x3A6C61757463613CLL;
    unint64_t v146 = 0xEB000000006C696ELL;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v84 = v145;
    unint64_t v85 = v146;
  }
  else
  {
    uint64_t v86 = v53;
    uint64_t v87 = v118;
    (*(void (**)(char *, char *, void))(v80 + 32))(v118, v86, v79);
    uint64_t v145 = 0;
    unint64_t v146 = 0xE000000000000000;
    sub_24DCC9968();
    swift_getWitnessTable();
    sub_24DCCADC8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v84 = v145;
    unint64_t v85 = v146;
    (*(void (**)(char *, void (*)(void, void, void)))(v80 + 8))(v87, v79);
  }
  int v88 = v129;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v142, 1, 1, v77);
  uint64_t v89 = v132;
  uint64_t v90 = (char *)v89 + *(void *)(*v89 + 656);
  uint64_t v91 = *(void *)v90;
  int v92 = v90[8];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 56))(v143, 1, 1);
  v139(v88, v149, v83);
  id v93 = v141;
  unint64_t v138 = v85;
  if (v141)
  {
    uint64_t v94 = *(void **)((char *)v89 + *(void *)(*v89 + 584));
    uint64_t v95 = v141;
    id v96 = v94;
  }
  else
  {
    uint64_t v94 = 0;
  }
  uint64_t v97 = (int8x16_t *)v128;
  swift_retain();
  uint64_t v98 = (uint64_t)v125;
  uint64_t v99 = v125;
  char v100 = v89;
  id v101 = v99;
  uint64_t v112 = (uint64_t)v93;
  uint64_t v111 = v98;
  uint64_t v102 = v93;
  uint64_t v103 = v130;
  sub_24D73DF6C(v100, v142, v91, v92, v143, v88, 0, 0, v130, v111, v112, (uint64_t)v94);
  uint64_t v104 = v137;
  uint64_t v105 = sub_24D75BACC(v136, v133, v97);
  if (v104)
  {
    swift_bridgeObjectRelease();

    (*(void (**)(char *, int8x16_t *))(v127 + 8))(v103, v97);
  }
  else
  {
    uint64_t v106 = v105;
    (*(void (**)(char *, int8x16_t *))(v127 + 8))(v103, v97);
    uint64_t v107 = v124;
    if (!v106)
    {
      uint64_t v108 = v124;
      uint64_t v106 = v107;
    }
    v117(0, v84, v138, v106);

    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v149, v144);
}

id sub_24D7B10C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_24DCCA3F8();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v5 = v3;
  uint64_t v6 = a1 + TupleTypeMetadata[12];
  uint64_t v16 = a1 + TupleTypeMetadata[16];
  uint64_t v17 = TupleTypeMetadata[20];
  uint64_t v18 = TupleTypeMetadata[24];
  uint64_t v7 = (uint64_t)v1 + *(void *)(v5 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v7, AssociatedTypeWitness);
  uint64_t v9 = (uint64_t)v1 + *(void *)(*v1 + 632);
  swift_beginAccess();
  uint64_t v10 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v6, v9, v10);
  uint64_t v11 = (uint64_t)v1 + *(void *)(*v1 + 648);
  swift_beginAccess();
  type metadata accessor for FileItemVersion();
  uint64_t v12 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v16, v11, v12);
  uint64_t v13 = *v1;
  *(unsigned char *)(a1 + v17) = *((unsigned char *)v1 + *(void *)(*v1 + 664));
  id v19 = *(id *)((char *)v1 + *(void *)(v13 + 584));
  *(void *)(a1 + v18) = v19;
  type metadata accessor for DirectionalTestingOperation();
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = type metadata accessor for TestingOperation();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 0, 1, v14);

  return v19;
}

uint64_t sub_24D7B155C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_24DCCA3F8();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(void *)(*(void *)v0 + 640), v2);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v5 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 680);
  type metadata accessor for SnapshotItem();
  uint64_t v7 = sub_24DCCA3F8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_24D7B17B0()
{
  uint64_t v0 = sub_24D797F34();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 632);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_24DCCA3F8();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(void *)(*(void *)v0 + 640), v2);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 648);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  uint64_t v5 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 680);
  type metadata accessor for SnapshotItem();
  uint64_t v7 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return v0;
}

uint64_t sub_24D7B1A10()
{
  return sub_24D7B1A28(sub_24D7B17B0);
}

uint64_t sub_24D7B1A28(uint64_t (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Propagation.DeleteItem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D7B1A98()
{
  return 0x6E6F6974656C6564;
}

void sub_24D7B1ABC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, unint64_t, id), uint64_t a5)
{
  uint64_t v110 = a3;
  uint64_t v120 = a2;
  uint64_t v9 = *v5;
  uint64_t v10 = *(void *)(*v5 + 608);
  uint64_t v11 = *(void *)(*v5 + 624);
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v105 = sub_24DCCA3F8();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v107 = (char *)&v87 - v13;
  unint64_t v14 = *(void *)(v9 + 600);
  uint64_t v121 = v5;
  uint64_t v15 = *(void *)(v9 + 616);
  uint64_t v129 = v10;
  unint64_t v130 = v14;
  uint64_t v131 = v11;
  uint64_t v132 = v15;
  uint64_t v109 = type metadata accessor for ReconciliationMutation();
  uint64_t v113 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v108 = (char *)&v87 - v16;
  uint64_t v114 = v10;
  uint64_t v115 = v11;
  uint64_t v129 = v10;
  unint64_t v130 = v14;
  unint64_t v116 = v14;
  uint64_t v131 = v11;
  uint64_t v132 = v15;
  uint64_t v119 = v15;
  uint64_t v17 = type metadata accessor for ItemReconciliation();
  uint64_t v122 = sub_24DCCA3F8();
  uint64_t v112 = *(void (***)(uint64_t, uint64_t))(v122 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v122);
  uint64_t v123 = (char *)&v87 - v19;
  uint64_t v126 = v17;
  uint64_t v111 = *(void (***)(char *, uint64_t))(v17 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v124 = (char *)&v87 - v21;
  uint64_t v118 = *(void *)(v12 - 8);
  uint64_t v22 = *(void *)(v118 + 64);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v106 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v87 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v127 = (char *)&v87 - v27;
  uint64_t v28 = sub_24DCC9078();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v87 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*a1 + 152))(v30) & 0x4000) == 0)
  {
    id v33 = (id)FPNotSupportedError();
    a4(0, 0, 0, v33);

    return;
  }
  uint64_t v117 = a5;
  uint64_t v125 = a4;
  uint64_t v34 = a1[4];
  if (sub_24D8903D0())
  {
    id v35 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v36 = sub_24DCC9068();
    os_log_type_t v37 = sub_24DCCA128();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_24D3D0000, v36, v37, "DeletionAcked triggered on FS snapshot", v38, 2u);
      MEMORY[0x25332B030](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
    id v39 = (id)FPNotSupportedError();
    v125(0, 0, 0, v39);

    return;
  }
  uint64_t v40 = (char *)v121 + *(void *)(*v121 + 576);
  uint64_t v41 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v34 + 472))(v40, v120);
  uint64_t v95 = v42;
  uint64_t v43 = v125;
  uint64_t v44 = v41;
  uint64_t v94 = v34;
  uint64_t v99 = a1;
  uint64_t v92 = (uint64_t)v40;
  uint64_t v93 = MEMORY[0x253327D80](v41, v12);
  uint64_t v120 = v44;
  if (!MEMORY[0x253327DC0](v44, v12))
  {
LABEL_25:
    uint64_t v98 = 0;
LABEL_26:
    swift_bridgeObjectRelease();
    if (!v95)
    {
      uint64_t v66 = v92;
      (*(void (**)(uint64_t, uint64_t))(*(void *)v94 + 240))(v92, 1);
      uint64_t v67 = v118;
      uint64_t v68 = v107;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v107, 1, v12) == 1)
      {
        (*(void (**)(char *, uint64_t))(v104 + 8))(v68, v105);
      }
      else
      {
        uint64_t v69 = v106;
        (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v106, v68, v12);
        uint64_t WitnessTable = swift_getWitnessTable();
        if (sub_24D98BCC4(v12, WitnessTable) == 1)
        {
          uint64_t v72 = v114;
          uint64_t v71 = v115;
          uint64_t v129 = v114;
          unint64_t v130 = v116;
          unint64_t v73 = v116;
          uint64_t v131 = v115;
          uint64_t v132 = v119;
          uint64_t v74 = v119;
          uint64_t v127 = (char *)type metadata accessor for JobResult();
          uint64_t v129 = v72;
          unint64_t v130 = v73;
          uint64_t v131 = v71;
          uint64_t v132 = v74;
          type metadata accessor for Ingestion.ReSnapshotChildren();
          uint64_t v75 = v121;
          uint64_t v76 = sub_24DC09654(v66, v121[15], v121[16], v121[17]);
          sub_24D85246C(v110, v76);
          swift_release();
          uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
          uint64_t v78 = swift_getAssociatedTypeWitness();
          uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
          uint64_t v80 = swift_getAssociatedConformanceWitness();
          uint64_t v129 = AssociatedTypeWitness;
          unint64_t v130 = v78;
          uint64_t v131 = AssociatedConformanceWitness;
          uint64_t v132 = v80;
          uint64_t v43 = v125;
          type metadata accessor for ReconciliationID();
          type metadata accessor for ReconciliationSideMutation();
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          uint64_t v82 = (uint64_t)v108;
          uint64_t v83 = &v108[*(int *)(TupleTypeMetadata2 + 48)];
          uint64_t v84 = v92;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v108, v92, AssociatedTypeWitness);
          swift_storeEnumTagMultiPayload();
          *uint64_t v83 = 1;
          swift_storeEnumTagMultiPayload();
          uint64_t v85 = v109;
          swift_storeEnumTagMultiPayload();
          sub_24D907568(v110, v82);
          (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v82, v85);
          uint64_t v129 = v72;
          unint64_t v130 = v116;
          uint64_t v131 = v115;
          uint64_t v132 = v119;
          type metadata accessor for Ingestion.DeleteFolderFromSnapshotIfEmpty();
          sub_24D732E04(v84, v75[15], v75[16], v75[17]);
          uint64_t v86 = sub_24D8F94C4(8);
          swift_retain();
          swift_release();
          sub_24D85246C(v110, v86);
          swift_release();
          (*(void (**)(char *, uint64_t))(v118 + 8))(v106, v12);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v12);
        }
      }
    }
    uint64_t v129 = 0;
    unint64_t v130 = 0xE000000000000000;
    uint64_t v65 = v95;
    swift_retain();
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v129 = 0x3A656C6174733CLL;
    unint64_t v130 = 0xE700000000000000;
    uint64_t v128 = v98;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v128 = v93;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v43(v65, v129, v130, 0);
    swift_release_n();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v45 = 0;
  uint64_t v98 = 0;
  uint64_t v102 = v99[2];
  uint64_t v46 = v118;
  uint64_t v103 = (void (**)(char *, uint64_t *, uint64_t))(v118 + 16);
  id v101 = (void (**)(char *, char *, uint64_t))(v118 + 32);
  char v100 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 6);
  uint64_t v97 = (void (**)(char *, uint64_t, uint64_t))(v111 + 4);
  id v96 = v111 + 1;
  uint64_t v111 = (void (**)(char *, uint64_t))(v118 + 8);
  uint64_t v91 = (void (**)(uint64_t, uint64_t))(v113 + 8);
  ++v112;
  uint64_t v47 = (uint64_t)v123;
  uint64_t v48 = v120;
  while (1)
  {
    char v50 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v50)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v46 + 16))(v127, v48+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v45, v12);
      uint64_t v43 = (void (*)(uint64_t, uint64_t, unint64_t, id))(v45 + 1);
      if (__OFADD__(v45, 1)) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v64 = sub_24DCCA778();
      if (v22 != 8) {
        goto LABEL_34;
      }
      uint64_t v129 = v64;
      (*v103)(v127, &v129, v12);
      swift_unknownObjectRelease();
      uint64_t v43 = (void (*)(uint64_t, uint64_t, unint64_t, id))(v45 + 1);
      if (__OFADD__(v45, 1))
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    (*v101)(v26, v127, v12);
    sub_24D4759C8((uint64_t)v26, v47);
    uint64_t v51 = v126;
    if ((*v100)(v47, 1, v126) == 1)
    {
      (*v111)(v26, v12);
      (*v112)(v47, v122);
      goto LABEL_10;
    }
    uint64_t v52 = v47;
    uint64_t v53 = (uint64_t)v124;
    (*v97)(v124, v52, v51);
    if (sub_24DBCE39C(v53, v99)) {
      break;
    }
    (*v96)(v124, v51);
    (*v111)(v26, v12);
    uint64_t v47 = (uint64_t)v123;
LABEL_10:
    uint64_t v48 = v120;
    ++v45;
    BOOL v49 = v43 == (void (*)(uint64_t, uint64_t, unint64_t, id))MEMORY[0x253327DC0](v120, v12);
    uint64_t v43 = v125;
    if (v49) {
      goto LABEL_26;
    }
  }
  BOOL v54 = __OFADD__(v98++, 1);
  uint64_t v47 = (uint64_t)v123;
  if (!v54)
  {
    uint64_t v55 = swift_getWitnessTable();
    if (sub_24D98BCC4(v12, v55) == 1
      && ((*(uint64_t (**)(char *, uint64_t))(*(void *)v94 + 368))(v26, 1) & 1) == 0)
    {
      uint64_t v129 = v114;
      unint64_t v130 = v116;
      uint64_t v131 = v115;
      uint64_t v132 = v119;
      uint64_t v90 = type metadata accessor for JobResult();
      uint64_t v56 = swift_getAssociatedTypeWitness();
      uint64_t v88 = swift_getAssociatedTypeWitness();
      uint64_t v89 = v56;
      uint64_t v87 = swift_getAssociatedConformanceWitness();
      unint64_t v57 = v88;
      uint64_t v58 = swift_getAssociatedConformanceWitness();
      uint64_t v129 = v56;
      unint64_t v130 = v57;
      uint64_t v131 = v87;
      uint64_t v132 = v58;
      uint64_t v88 = type metadata accessor for ReconciliationID();
      type metadata accessor for ReconciliationSideMutation();
      uint64_t v59 = swift_getTupleTypeMetadata2();
      uint64_t v60 = (uint64_t)v108;
      uint64_t v61 = &v108[*(int *)(v59 + 48)];
      (*(void (**)(char *, char *))(*(void *)(v89 - 8) + 16))(v108, v26);
      swift_storeEnumTagMultiPayload();
      *(_OWORD *)uint64_t v61 = *(_OWORD *)(v121 + 15);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = v109;
      swift_storeEnumTagMultiPayload();
      sub_24D907568(v110, v60);
      uint64_t v63 = v62;
      uint64_t v46 = v118;
      (*v91)(v60, v63);
    }
    (*v96)(v124, v126);
    (*v111)(v26, v12);
    goto LABEL_10;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t type metadata accessor for Propagation.DeletionAcked()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D7B2C34(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a2;
  uint64_t v6 = *(void *)(*a2 + 96);
  uint64_t v7 = *(void *)(*a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_24DCCA3F8();
  uint64_t v82 = *(void *)(v9 - 8);
  uint64_t v83 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v94 = (char *)&v74 - v10;
  uint64_t v89 = sub_24DCC9078();
  uint64_t v85 = *(void (***)(char *, uint64_t))(v89 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v89);
  uint64_t v92 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = AssociatedTypeWitness;
  uint64_t v84 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v93 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v86 = (char *)&v74 - v15;
  uint64_t v16 = *(void *)(v4 + 88);
  uint64_t v17 = *(void *)(v4 + 104);
  uint64_t v95 = v7;
  uint64_t v96 = v6;
  uint64_t v99 = v7;
  uint64_t v100 = v16;
  uint64_t v101 = v6;
  uint64_t v102 = v17;
  uint64_t v18 = type metadata accessor for ItemReconciliation();
  uint64_t v19 = sub_24DCCA3F8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v74 - v22;
  uint64_t v91 = v18;
  uint64_t v90 = *(void *)(v18 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v87 = (char *)&v74 - v25;
  if (((*(uint64_t (**)(uint64_t))(v5 + 152))(v24) & 0x4000) == 0) {
    goto LABEL_2;
  }
  uint64_t v27 = v97;
  sub_24D4759C8(a1, (uint64_t)v23);
  uint64_t v97 = v27;
  if (v27) {
    return v26 & 1;
  }
  uint64_t MetatypeMetadata = a1;
  uint64_t v30 = v90;
  uint64_t v29 = v91;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v23, 1, v91) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
LABEL_2:
    char v26 = 0;
    return v26 & 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v87, v23, v29);
  uint64_t v31 = v84 + 2;
  uint64_t v32 = v86;
  ((void (*)(char *, uint64_t, uint64_t))v84[2])(v86, MetatypeMetadata, v88);
  uint64_t v33 = 1;
  uint64_t v103 = 1;
  uint64_t v34 = (void *)a2[3];
  uint64_t v36 = v95;
  uint64_t v35 = v96;
  uint64_t v99 = v95;
  uint64_t v100 = v16;
  uint64_t v101 = v96;
  uint64_t v102 = v17;
  uint64_t v77 = type metadata accessor for ItemJob();
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  uint64_t v99 = v16;
  uint64_t v100 = v36;
  uint64_t v101 = v17;
  uint64_t v102 = v35;
  uint64_t v37 = v88;
  uint64_t v80 = type metadata accessor for Propagation.DeletionAcked();
  uint64_t v38 = *v34;
  uint64_t v84 = v34;
  uint64_t v79 = v38 + 272;
  uint64_t v78 = *(uint64_t (**)(char *, uint64_t))(v38 + 272);
  swift_beginAccess();
  uint64_t v75 = v85 + 1;
  uint64_t v76 = (unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 4);
  id v39 = (void (**)(char *, char *, uint64_t))(v31 + 2);
  uint64_t v85 = (void (**)(char *, uint64_t))(v31 - 1);
  *(void *)&long long v40 = 134217984;
  long long v74 = v40;
  uint64_t v41 = v97;
  while (1)
  {
    if (__ROR8__(0x1CAC083126E978D5 * v33 + 0x10624DD2F1A9FB8, 3) <= 0x4189374BC6A7EEuLL)
    {
      id v42 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      uint64_t v43 = sub_24DCC9068();
      os_log_type_t v44 = sub_24DCCA128();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = swift_slowAlloc();
        *(_DWORD *)uint64_t v45 = v74;
        *(void *)(v45 + 4) = v103;
        _os_log_impl(&dword_24D3D0000, v43, v44, "wasDeletionAcked: too many iterations %ld, is there a cycle in the tree?", (uint8_t *)v45, 0xCu);
        MEMORY[0x25332B030](v45, -1, -1);
      }

      (*v75)(v92, v89);
    }
    sub_24DA604B8(MetatypeMetadata, MetatypeMetadata);
    swift_allocObject();
    uint64_t v46 = sub_24DCC9C58();
    *uint64_t v47 = v80;
    uint64_t v48 = sub_24D785484(v46);
    uint64_t v49 = v78(v32, v48);
    if (v41)
    {
      uint64_t v97 = v41;
      swift_bridgeObjectRelease();
      (*v85)(v32, v37);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v87, v91);
      return v26 & 1;
    }
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
    uint64_t v98 = v50;
    sub_24DCC9D48();
    swift_getWitnessTable();
    if ((sub_24DCC9FE8() & 1) == 0) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v51 = v94;
    (*(void (**)(char *))(*(void *)a2[4] + 280))(v32);
    if ((*v76)(v51, 1, v37) == 1)
    {
      (*v85)(v32, v37);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v87, v91);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v51, v83);
      goto LABEL_42;
    }
    uint64_t v52 = *v39;
    uint64_t v53 = v93;
    (*v39)(v93, v51, v37);
    swift_getAssociatedConformanceWitness();
    char v54 = sub_24DCC9798();
    uint64_t v55 = v32;
    uint64_t v56 = *v85;
    (*v85)(v55, v37);
    if (v54)
    {
      v56(v53, v37);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v87, v91);
      goto LABEL_42;
    }
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v52)(v55, v53, v37);
    uint64_t v33 = v103 + 1;
    if (__OFADD__(v103, 1)) {
      goto LABEL_54;
    }
    uint64_t v32 = v55;
    ++v103;
  }
  uint64_t v57 = v77;
  if (!MEMORY[0x253327DC0](v50, v77))
  {
    swift_bridgeObjectRelease();
    uint64_t v60 = v90;
    uint64_t v62 = v91;
LABEL_41:
    (*v85)(v32, v37);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v87, v62);
LABEL_42:
    char v26 = 0;
    return v26 & 1;
  }
  uint64_t v58 = *(void *)&v87[*(int *)(v91 + 64) + 8];
  if (sub_24DCC9CB8())
  {
    uint64_t v59 = 0;
    uint64_t v60 = v90;
    while (1)
    {
      uint64_t result = sub_24DCC9C68();
      uint64_t v61 = v59 + 1;
      if (__OFADD__(v59, 1)) {
        goto LABEL_55;
      }
      if (*(void *)(*(void *)(v50 + 8 * v59 + 32) + 128) >= v58) {
        goto LABEL_43;
      }
      ++v59;
      if (v61 == MEMORY[0x253327DC0](v50, v57)) {
        goto LABEL_40;
      }
    }
  }
  if (sub_24DCC9CB8())
  {
    uint64_t v63 = 0;
    uint64_t v60 = v90;
    while (1)
    {
      uint64_t result = sub_24DCC9C68();
      uint64_t v64 = v63 + 1;
      if (__OFADD__(v63, 1)) {
        goto LABEL_56;
      }
      if (*(void *)(*(void *)(v50 + 8 * v63 + 32) + 128) >= v58) {
        goto LABEL_43;
      }
      ++v63;
      if (v64 == MEMORY[0x253327DC0](v50, v57)) {
        goto LABEL_40;
      }
    }
  }
  char v65 = sub_24DCC9CB8();
  uint64_t v60 = v90;
  if (v65)
  {
    uint64_t v66 = 0;
    while (1)
    {
      uint64_t result = sub_24DCC9C68();
      uint64_t v67 = v66 + 1;
      if (__OFADD__(v66, 1)) {
        goto LABEL_57;
      }
      if (*(void *)(*(void *)(v50 + 8 * v66 + 32) + 128) >= v58)
      {
LABEL_43:
        swift_retain();
        goto LABEL_44;
      }
      ++v66;
      if (v67 == MEMORY[0x253327DC0](v50, v57)) {
        goto LABEL_40;
      }
    }
  }
  uint64_t v68 = 4;
  while (2)
  {
    uint64_t v69 = v68 - 4;
    char v70 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v70)
    {
      uint64_t v71 = *(void *)(v50 + 8 * v68);
      uint64_t result = swift_retain();
      BOOL v72 = __OFADD__(v69, 1);
      uint64_t v73 = v68 - 3;
      if (v72) {
        break;
      }
      goto LABEL_48;
    }
    uint64_t result = sub_24DCCA778();
    uint64_t v71 = result;
    BOOL v72 = __OFADD__(v69, 1);
    uint64_t v73 = v68 - 3;
    if (!v72)
    {
LABEL_48:
      if (*(void *)(v71 + 128) >= v58)
      {
LABEL_44:
        swift_bridgeObjectRelease();
        (*v85)(v86, v88);
        (*(void (**)(char *, uint64_t))(v60 + 8))(v87, v91);
        char v26 = 1;
        return v26 & 1;
      }
      swift_release();
      ++v68;
      if (v73 == MEMORY[0x253327DC0](v50, v57))
      {
LABEL_40:
        swift_bridgeObjectRelease();
        uint64_t v37 = v88;
        uint64_t v62 = v91;
        uint64_t v32 = v86;
        goto LABEL_41;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_24D7B37DC()
{
  return 0x752D6C65636E6163;
}

uint64_t sub_24D7B3800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 16);
  uint64_t v10 = v5 + *(void *)(*(void *)v5 + 576);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a4;
  v11[4] = a5;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t (*)(void *), void *))(*(void *)v9 + 760);
  swift_retain();
  swift_retain();
  swift_retain();
  v12(v10, sub_24D7B4828, v11);
  swift_release();

  return swift_release();
}

uint64_t sub_24D7B390C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a3;
  v8[3] = a4;
  v8[4] = a1;
  swift_retain_n();
  id v9 = a1;
  uint64_t v10 = type metadata accessor for Continuation();
  sub_24D6E9F88((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D732EF0, v7, (uint64_t)sub_24D7B484C, (uint64_t)v8, v10, MEMORY[0x263F8D310]);
  swift_release();

  return swift_release();
}

uint64_t sub_24D7B3A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_24D732E08(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v5;
}

uint64_t type metadata accessor for Propagation.CancelUpdate()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for Propagation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D7B3AE0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = v5 + *(void *)(*(void *)v5 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v11, a1, AssociatedTypeWitness);
  *(void *)(v5 + *(void *)(*(void *)v5 + 584)) = a2;
  id v13 = a2;
  uint64_t v14 = sub_24D983344(a3, a4, a5);
  swift_retain();

  uint64_t v15 = *(void **)(v14 + 96);
  uint64_t v16 = *(void **)(v14 + 104);
  *(void *)(v14 + 96) = 0;
  *(void *)(v14 + 104) = 0;
  char v17 = *(unsigned char *)(v14 + 112);
  *(unsigned char *)(v14 + 112) = 0;
  sub_24D3E380C(v15, v16, v17);
  swift_release();
  return v14;
}

uint64_t sub_24D7B3C14(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6 + *(void *)(*(void *)v6 + 640);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FileItemVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = v6 + *(void *)(*(void *)v6 + 648);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v9, 1, 1, AssociatedTypeWitness);
  uint64_t v11 = v6 + *(void *)(*(void *)v6 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for ItemState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = v6 + *(void *)(*(void *)v6 + 664);
  *(void *)uint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  *(void *)(v13 + 16) = 0xB000000000000000;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  uint64_t v14 = v6 + *(void *)(*(void *)v6 + 672);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v14, 1, 1, TupleTypeMetadata2);
  *(void *)(v6 + *(void *)(*(void *)v6 + 632)) = a2;
  return sub_24D7B3AE0(a1, a3, a4, a5, a6);
}

uint64_t sub_24D7B3FF8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_24D7B3C14(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_24D7B4074(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = v5 + *(void *)(*(void *)v5 + 632);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
  v10(v8, 1, 1, AssociatedTypeWitness);
  v10(v5 + *(void *)(*(void *)v5 + 640), 1, 1, AssociatedTypeWitness);
  uint64_t v11 = v5 + *(void *)(*(void *)v5 + 648);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for FileItemVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = v5 + *(void *)(*(void *)v5 + 656);
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  *(unsigned char *)(v5 + *(void *)(*(void *)v5 + 664)) = 2;
  *(unsigned char *)(v5 + *(void *)(*(void *)v5 + 672)) = 2;
  uint64_t v14 = v5 + *(void *)(*(void *)v5 + 680);
  uint64_t v15 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  return sub_24D7B3AE0(a1, a2, a3, a4, a5);
}

uint64_t sub_24D7B4348(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24D7B4074(a1, a2, a3, a4, a5);
}

uint64_t sub_24D7B43B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7 + *(void *)(*(void *)v7 + 648);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v8, 1, 1, AssociatedTypeWitness);
  uint64_t v17 = v7 + *(void *)(*(void *)v7 + 656);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for FileItemVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v17, 1, 1, v10);
  uint64_t v11 = v7 + *(void *)(*(void *)v7 + 664);
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = type metadata accessor for ItemState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = v7 + *(void *)(*(void *)v7 + 672);
  *(void *)uint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  *(void *)(v13 + 16) = 0xB000000000000000;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  uint64_t v14 = v7 + *(void *)(*(void *)v7 + 680);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for FileItemVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(void *)(v7 + *(void *)(*(void *)v7 + 632)) = a2;
  *(void *)(v7 + *(void *)(*(void *)v7 + 640)) = a3;
  *(unsigned char *)(v7 + *(void *)(*(void *)v7 + 688)) = 0;
  return sub_24D7B3AE0(a1, a4, a5, a6, a7);
}

uint64_t sub_24D7B47A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_24D7B43B4(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_24D7B4828(void *a1)
{
  return sub_24D7B390C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24D7B4834()
{
  return objectdestroy_10Tm_1(MEMORY[0x263F8EEB0]);
}

uint64_t sub_24D7B484C()
{
  return (*(uint64_t (**)(void, void, void, void))(v0 + 16))(0, 0, 0, *(void *)(v0 + 32));
}

uint64_t type metadata accessor for Propagation.PropagationError()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D7B48A8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D7B49B8(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (void *)v1[6];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v8 = v1[9];
  uint64_t v9 = *(void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D7AFC5C(a1, v5, v6, v7, v8, (uint64_t)v1 + v4, v9);
}

uint64_t sub_24D7B4A74()
{
  return sub_24D983288(1);
}

uint64_t sub_24D7B4A7C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v3 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = *(void *)(v3 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (id *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    uint64_t v8 = *(void *)(v1 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v4, 1, v1)) {
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v4, v1);
    }
  }
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((((v10 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6), AssociatedTypeWitness);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D7B4D38()
{
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v1 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24D7B0074((int8x16_t *)(v0 + v2), *(void **)(v0 + v3), (int8x16_t *)(v0 + v5), *(void (**)(void, uint64_t, unint64_t, int8x16_t *))(v0 + v6), *(void *)(v0 + v6 + 8), *(uint64_t **)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D7B4EE0()
{
  return sub_24D7B78DC((uint64_t)&unk_26FFC06C8, (uint64_t)&unk_26FFC06F0, (uint64_t)sub_24D73CC58, (uint64_t)sub_24D7B77BC);
}

uint64_t sub_24D7B4F1C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v29 = AssociatedTypeWitness;
  unint64_t v30 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v3 = v30 + *(void *)(v2 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v27 = (v3 + *(unsigned __int8 *)(*(void *)v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  unint64_t v5 = (((*(void *)(*(void *)v4 + 64) + v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v34 = v6;
  uint64_t v35 = v7;
  unint64_t v32 = v5;
  uint64_t v33 = type metadata accessor for FileItemVersion();
  uint64_t v36 = *(unsigned __int8 *)(*(void *)(v33 - 8) + 80);
  uint64_t v31 = (v5 + v36 + 56) & ~v36;
  uint64_t v28 = *(void *)(*(void *)(v33 - 8) + 64) + v31;
  uint64_t v37 = swift_getAssociatedTypeWitness();
  uint64_t v38 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FileItemVersion();
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  swift_release();
  swift_release();
  uint64_t v10 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v10(v0 + v30, v29);
  v10(v0 + v27, v29);
  swift_bridgeObjectRelease();
  unint64_t v11 = v0 + v27 + v4[12];
  uint64_t v12 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v13 = v11 + v12[7];
  uint64_t v14 = sub_24DCC8CE8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void (**)(unint64_t, uint64_t))(v15 + 8);
  v16(v13, v14);
  v16(v11 + v12[8], v14);
  swift_bridgeObjectRelease();
  unint64_t v17 = v11 + v12[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v15 + 48))(v17, 1, v14)) {
    v16(v17, v14);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t *)(v11 + v12[33]);
  unint64_t v19 = v18[1];
  if (v19 >> 60 != 15) {
    sub_24D400DCC(*v18, v19);
  }
  unint64_t v20 = (v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v21 = *(void *)(v0 + v32 + 16);
  if (v21 >> 60 != 11 && v21 >> 60 != 15) {
    sub_24D400DCC(*(void *)(v0 + v32 + 8), v21);
  }
  (*(void (**)(uint64_t))(*(void *)(v34 - 8) + 8))(v0 + v31);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v35 - 8) + 8))(v0 + v31 + *(int *)(v33 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v0 + v20;
  uint64_t v24 = *(void **)(v0 + v20 + 16);
  if (v24 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v23 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v25 = v0 + ((((v20 + 255) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9);
  (*(void (**)(uint64_t))(*(void *)(v37 - 8) + 8))(v25);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v38 - 8) + 8))(v25 + *(int *)(v8 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24D7B5630(uint64_t a1, char a2)
{
  int v16 = a2 & 1;
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v4 = v15 + *(void *)(v3 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v14 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v13 = (*(void *)(v5 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v7 = (((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 255) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return sub_24D7A749C(a1, v16, *(void **)(v2 + 48), *(void *)(v2 + 56), v2 + v15, v2 + v14, *(void *)(v2 + v13), v2 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8), v2 + v7, v2 + v8, *(void *)(v2 + v9), *(void *)(v2 + v9 + 8), v2 + v11, *(void *)(v2 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D7B59D4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();

  return swift_deallocObject();
}

void *sub_24D7B5AD8()
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D7A66D0(*(void *)(v0 + 48), v0 + v2, *(uint64_t (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8));
}

uint64_t sub_24D7B5B8C(void *a1, char a2)
{
  return sub_24D7A7084(a1, a2 & 1, v2[2], v2[3], v2[4]);
}

uint64_t sub_24D7B5B9C()
{
  sub_24D7B76E8(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24), MEMORY[0x263F8EEA0]);
  swift_release();

  return swift_deallocObject();
}

void sub_24D7B5BF4()
{
  sub_24D7A71B4(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(void, void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24D7B5C18()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v3 = v19 + *(void *)(v2 + 64);
  swift_getAssociatedConformanceWitness();
  unint64_t v4 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v23 = (v3 + *(unsigned __int8 *)(*(void *)v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v20 = *(void *)(*(void *)v4 + 64);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FileItemVersion();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  unint64_t v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v19, AssociatedTypeWitness);
  v7(v0 + v23, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v8 = v0 + v23 + v4[12];
  unint64_t v9 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v10 = v8 + v9[7];
  uint64_t v11 = sub_24DCC8CE8();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = *(void (**)(unint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  unint64_t v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11)) {
    v13(v14, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v15 = (uint64_t *)(v8 + v9[33]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_24D400DCC(*v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v0 + ((v23 + v20 + v6) & ~v6);
  (*(void (**)(uint64_t))(*(void *)(v21 - 8) + 8))(v17);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v22 - 8) + 8))(v17 + *(int *)(v5 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24D7B60B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return sub_24D7A7B10(a1, v1[6], v1[7], v1[8], v1[9], (uint64_t)v1 + v3, (uint64_t)v1 + v6, (uint64_t)v1 + v9, *(uint64_t *)((char *)v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D7B6304()
{
  return sub_24D7A62C4(1);
}

uint64_t sub_24D7B630C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v24 = type metadata accessor for ItemPropagationResult();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v23 = TupleTypeMetadata2;
  uint64_t v3 = sub_24DCCB058();
  uint64_t v32 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v25 = (v32 + 48) & ~v32;
  unint64_t v4 = (*(void *)(*(void *)(v3 - 8) + 64) + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v26 = type metadata accessor for ItemState();
  uint64_t v29 = *(unsigned __int8 *)(*(void *)(v26 - 8) + 80);
  unint64_t v33 = (v7 + v8 + v29) & ~v29;
  uint64_t v28 = *(void *)(*(void *)(v26 - 8) + 64);
  uint64_t v30 = swift_getAssociatedTypeWitness();
  uint64_t v31 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for FileItemVersion();
  uint64_t v27 = *(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  unint64_t v10 = (id *)(v0 + v25);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
  }
  else
  {
    if (!(*(unsigned int (**)(id *, uint64_t))(*(void *)(v24 - 8) + 48))(v10, 1)) {
      (*(void (**)(id *))(*(void *)(v1 - 8) + 8))(v10);
    }
  }
  swift_release();
  uint64_t v11 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v11(v0 + v7, AssociatedTypeWitness);
  v11(v0 + v33, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v12 = v0 + v33 + *(int *)(v26 + 40);
  unint64_t v13 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v14 = v12 + v13[7];
  uint64_t v15 = sub_24DCC8CE8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(unint64_t, uint64_t))(v16 + 8);
  v17(v14, v15);
  v17(v12 + v13[8], v15);
  swift_bridgeObjectRelease();
  unint64_t v18 = v12 + v13[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v15)) {
    v17(v18, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v19 = (uint64_t *)(v12 + v13[33]);
  unint64_t v20 = v19[1];
  if (v20 >> 60 != 15) {
    sub_24D400DCC(*v19, v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v0 + ((v33 + v28 + v27) & ~v27);
  (*(void (**)(uint64_t))(*(void *)(v30 - 8) + 8))(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v31 - 8) + 8))(v21 + *(int *)(v9 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24D7B6948()
{
  type metadata accessor for ItemPropagationResult();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v1 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v2 = (*(void *)(v1 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = v2;
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (v2 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v13 = v4;
  uint64_t v5 = *(void *)(v3 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D7A81FC((char *)(v0 + v15), *(uint64_t **)(v0 + v14), v0 + v13, v0 + v7, v0 + v10, *(void (**)(void, uint64_t, uint64_t, int8x16_t *))(v0 + v11), *(void *)(v0 + v11 + 8), *(void **)(v0 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D7B6C8C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v28 = (*(unsigned __int8 *)(v26 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v2 = v28 + *(void *)(v26 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v31 = AssociatedTypeWitness;
  uint64_t v29 = type metadata accessor for ItemState();
  uint64_t v40 = *(unsigned __int8 *)(*(void *)(v29 - 8) + 80);
  uint64_t v39 = *(void *)(*(void *)(v29 - 8) + 64);
  uint64_t v3 = swift_getAssociatedTypeWitness();
  uint64_t v4 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v36 = v3;
  uint64_t v37 = v4;
  uint64_t v34 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v34 - 8) + 80);
  unint64_t v27 = (v2 + v40) & ~v40;
  unint64_t v6 = (v27 + v39 + v5) & ~v5;
  uint64_t v7 = *(void *)(*(void *)(v34 - 8) + 64);
  uint64_t v33 = swift_getAssociatedTypeWitness();
  uint64_t v35 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FileItemVersion();
  unint64_t v32 = v6;
  uint64_t v38 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v30 = (v6 + v7 + v38) & ~v38;
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64) + v30;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v10 = *(void *)(v0 + 104);
  if (v10 >> 60 != 15 && (v10 & 0xF000000000000000) != 0xB000000000000000) {
    sub_24D400DCC(*(void *)(v0 + 96), v10);
  }
  uint64_t v25 = v9 + 7;
  unint64_t v11 = *(void (**)(unint64_t, uint64_t))(v26 + 8);
  v11(v0 + v28, v31);
  v11(v0 + v27, v31);
  swift_bridgeObjectRelease();
  unint64_t v12 = v0 + v27 + *(int *)(v29 + 40);
  unint64_t v13 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v14 = v12 + v13[7];
  uint64_t v15 = sub_24DCC8CE8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(unint64_t, uint64_t))(v16 + 8);
  v17(v14, v15);
  v17(v12 + v13[8], v15);
  swift_bridgeObjectRelease();
  unint64_t v18 = v12 + v13[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v15)) {
    v17(v18, v15);
  }
  unint64_t v19 = v25 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v20 = (uint64_t *)(v12 + v13[33]);
  unint64_t v21 = v20[1];
  if (v21 >> 60 != 15) {
    sub_24D400DCC(*v20, v21);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v36 - 8) + 8))(v0 + v32);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v37 - 8) + 8))(v0 + v32 + *(int *)(v34 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v33 - 8) + 8))(v0 + v30);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v35 - 8) + 8))(v0 + v30 + *(int *)(v8 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v0 + v19;
  uint64_t v23 = *(void **)(v0 + v19 + 16);
  if (v23 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v22 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_24D7B7384(void *a1, char a2)
{
  char v14 = a2 & 1;
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v4 = v13 + *(void *)(v3 + 64);
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v12 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v8 = (v12 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  sub_24D7A540C(a1, v14, v2[6], v2[7], v2[8], v2[9], v2[10], v2 + 11, (uint64_t)v2 + v13, (unint64_t)v2 + v12, (unint64_t)v2 + v8, (unint64_t)v2 + v11, (uint64_t)v2 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
}

void sub_24D7B76E8(id a1, char a2, void (*a3)(id))
{
  if (a2) {

  }
  else {
    a3(a1);
  }
}

uint64_t sub_24D7B76F8()
{
  return objectdestroy_10Tm_1(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D7B7710()
{
  return sub_24D7BA1CC();
}

uint64_t sub_24D7B7728()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D7B7780()
{
  return sub_24D7A5714(*(uint64_t **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void, void, void, int8x16_t *))(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_24D7B77A4()
{
  return objectdestroy_10Tm_1(MEMORY[0x263F8EEB0]);
}

uint64_t sub_24D7B77BC()
{
  return sub_24D7BA8D0();
}

uint64_t objectdestroy_23Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D7B7828(void *a1)
{
  return sub_24D7AB0EC(a1, *(uint64_t **)(v1 + 16), *(void (**)(void, void, void, int8x16_t *))(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t objectdestroy_26Tm()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D7B78A0()
{
  return sub_24D7B78DC((uint64_t)&unk_26FFC09E8, (uint64_t)&unk_26FFC0A10, (uint64_t)sub_24D73CC58, (uint64_t)sub_24D7B77BC);
}

uint64_t sub_24D7B78DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24D7AB59C(*(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void **)(v4 + 56), a1, a2, a3, a4);
}

uint64_t sub_24D7B791C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v18 = (*(void *)(v2 + 64) + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v23 = (v18 + *(unsigned __int8 *)(*(void *)v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80);
  uint64_t v20 = *(void *)(*(void *)v3 + 64);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v6(v0 + v19, AssociatedTypeWitness);
  swift_release();
  v6(v0 + v23, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v23 + v3[12];
  unint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  unint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v14 = (uint64_t *)(v7 + v8[33]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_24D400DCC(*v14, v15);
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = v0 + ((v23 + v20 + v5) & ~v5);
  (*(void (**)(uint64_t))(*(void *)(v21 - 8) + 8))(v16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v22 - 8) + 8))(v16 + *(int *)(v4 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24D7B7DCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v3 = (*(void *)(v2 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_24D79D74C(a1, v1[6], v1[7], v1[8], (uint64_t)v1 + v10, *(uint64_t *)((char *)v1 + v3), (uint64_t)v1 + v5, (uint64_t)v1 + v8, *(uint64_t *)((char *)v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D7B8034()
{
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v2 = sub_24DCCB058();
  uint64_t v30 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v24 = (((v30 + 48) & ~v30) + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v6 = (*(void *)(v5 + 64) + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for ItemState();
  uint64_t v28 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v31 = (v6 + v28 + 8) & ~v28;
  uint64_t v26 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t v29 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FileItemVersion();
  unint64_t v9 = (id *)(v0 + ((v30 + 48) & ~v30));
  uint64_t v25 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

LABEL_5:
    unint64_t v10 = v24;
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    goto LABEL_5;
  }
  uint64_t v23 = *(void *)(v1 - 8);
  unint64_t v10 = v24;
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v1)) {
    (*(void (**)(id *, uint64_t))(v23 + 8))(v9, v1);
  }
LABEL_6:
  uint64_t v11 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v11(v0 + v10, AssociatedTypeWitness);
  swift_release();
  v11(v0 + v31, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  uint64_t v12 = v0 + v31 + *(int *)(v7 + 40);
  unint64_t v13 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v14 = v12 + v13[7];
  uint64_t v15 = sub_24DCC8CE8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v17(v14, v15);
  v17(v12 + v13[8], v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = v12 + v13[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v15)) {
    v17(v18, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v19 = (uint64_t *)(v12 + v13[33]);
  unint64_t v20 = v19[1];
  if (v20 >> 60 != 15) {
    sub_24D400DCC(*v19, v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v0 + ((v31 + v26 + v25) & ~v25);
  (*(void (**)(uint64_t))(*(void *)(v27 - 8) + 8))(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v29 - 8) + 8))(v21 + *(int *)(v8 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_24D7B865C()
{
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v1 = *(void *)(sub_24DCCB058() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v14 = v2;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v13 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v5 = (*(void *)(v4 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = v5;
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24D79DDE4(v0 + v14, v0 + v13, *(uint64_t **)(v0 + v12), v0 + v7, v0 + v10, *(void **)(v0 + v11), *(void *)(v0 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t, uint64_t, uint64_t, int8x16_t *))(v0+ ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

unint64_t sub_24D7B896C()
{
  unint64_t result = qword_26B1943D0;
  if (!qword_26B1943D0)
  {
    sub_24DCC8288();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1943D0);
  }
  return result;
}

uint64_t sub_24D7B89C4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v2 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v17 = *(void *)(*(void *)v2 + 64);
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  unint64_t v18 = v3;
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v3 + v2[12];
  unint64_t v7 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v8 = v6 + v7[7];
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[8], v9);
  swift_bridgeObjectRelease();
  unint64_t v12 = v6 + v7[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
    v11(v12, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v13 = (uint64_t *)(v6 + v7[33]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_24D400DCC(*v13, v14);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = v0 + ((v18 + v17 + v5) & ~v5);
  (*(void (**)(uint64_t))(*(void *)(v19 - 8) + 8))(v15);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v20 - 8) + 8))(v15 + *(int *)(v4 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24D7B8DF8(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D79E458(a1, *(uint64_t **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), v1 + v4, v1 + v7, *(void *)(v1 + v8), *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D7B9000()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D7B903C()
{
  return sub_24D7B9824();
}

uint64_t sub_24D7B9054()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v21 = type metadata accessor for ItemPropagationResult();
  uint64_t v2 = *(void *)(sub_24DCCA3F8() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v3 = v20 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ItemState();
  uint64_t v25 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v28 = (v3 + v25) & ~v25;
  uint64_t v24 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for FileItemVersion();
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v22 = *(void *)(*(void *)(v6 - 8) + 64);
  swift_release();
  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(unint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v0 + v20, 1)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v20, v1);
  }
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v28, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v28 + *(int *)(v5 + 40);
  unint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  unint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v14 = (uint64_t *)(v7 + v8[33]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_24D400DCC(*v14, v15);
  }
  unint64_t v16 = (v28 + v24 + v23) & ~v23;
  unint64_t v17 = (v22 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v18 = v0 + v16;
  (*(void (**)(uint64_t))(*(void *)(v26 - 8) + 8))(v18);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(v27 - 8) + 8))(v18 + *(int *)(v6 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24D7B958C(uint64_t a1)
{
  type metadata accessor for ItemPropagationResult();
  uint64_t v2 = *(void *)(sub_24DCCA3F8() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D79F3B0(a1, v1[6], v1[7], v1[8], v1[9], (uint64_t)v1 + v3, (uint64_t)v1 + v6, (uint64_t)v1 + v9, *(void **)((char *)v1 + v10), *(uint64_t *)((char *)v1 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D7B9808()
{
  return sub_24D7BA660();
}

uint64_t sub_24D7B9824()
{
  type metadata accessor for ItemPropagationResult();
  uint64_t v1 = *(void *)(sub_24DCCA3F8() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v2 = v11 + *(void *)(v1 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v4 = (v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D79F974(*(void *)(v0 + 48), v0 + v11, v0 + v4, v0 + v7, *(void **)(v0 + v8), *(void **)(v0 + v9), *(void *)(v0 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, uint64_t, uint64_t, int8x16_t *))(v0+ ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24D7B9AB0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v2 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v25 = *(void *)(*(void *)v2 + 64);
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  unint64_t v22 = (v3 + v25 + v5) & ~v5;
  unint64_t v6 = (((*(void *)(*(void *)(v4 - 8) + 64) + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v3 + v2[12];
  unint64_t v8 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v9 = v7 + v8[7];
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  unint64_t v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
    v12(v13, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v14 = (uint64_t *)(v7 + v8[33]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    sub_24D400DCC(*v14, v15);
  }
  unint64_t v16 = (v6 + 63) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v23 - 8) + 8))(v0 + v22);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v24 - 8) + 8))(v0 + v22 + *(int *)(v4 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v17 = *(void *)(v0 + v6 + 16);
  if (v17 >> 60 != 11 && v17 >> 60 != 15) {
    sub_24D400DCC(*(void *)(v0 + v6 + 8), v17);
  }
  uint64_t v19 = v0 + v16;
  unint64_t v20 = *(void **)(v0 + v16 + 16);
  if (v20 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v19 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_24D7B9F94(void *a1, char a2)
{
  int v3 = a2 & 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24D79C178(a1, v3, v2[6], v2[7], v2[8], v2[9], (uint64_t)v2 + v5, (unint64_t)v2 + v8, *(uint64_t *)((char *)v2 + v9), (uint64_t)v2 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8), (uint64_t)v2 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_24D7BA1B4()
{
  return objectdestroy_10Tm_1(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D7BA1CC()
{
  return (*(uint64_t (**)(void, void, void, void))(v0 + 16))(*(void *)(v0 + 32), 0, 0, 0);
}

uint64_t objectdestroy_115Tm()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v2 = (int *)(type metadata accessor for ItemState() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v17 = *(void *)(*(void *)v2 + 64);
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  swift_release();

  unint64_t v18 = v3;
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v3 + v2[12];
  uint64_t v7 = (int *)type metadata accessor for ItemMetadata();
  unint64_t v8 = v6 + v7[7];
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[8], v9);
  swift_bridgeObjectRelease();
  unint64_t v12 = v6 + v7[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
    v11(v12, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v13 = (uint64_t *)(v6 + v7[33]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_24D400DCC(*v13, v14);
  }
  unint64_t v15 = (v18 + v17 + v5) & ~v5;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v19 - 8) + 8))(v0 + v15);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(v20 - 8) + 8))(v0 + v15 + *(int *)(v4 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24D7BA660()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(void *)(type metadata accessor for ItemState() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(type metadata accessor for FileItemVersion() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D79F214(*(void *)(v0 + 48), *(void (**)(void, uint64_t, uint64_t, int8x16_t *))(v0 + 56), v0 + v2, v0 + v5, *(void **)(v0 + v6), *(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, uint64_t, uint64_t, int8x16_t *))(v0+ ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24D7BA868()
{
  return objectdestroy_10Tm_1(MEMORY[0x263F8EEB0]);
}

uint64_t objectdestroy_10Tm_1(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_24D7BA8D0()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_24D7BA908()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_24D7BA9B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) == 0 && ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x18)
  {
    uint64_t v10 = AssociatedTypeWitness;
    if (*(_DWORD *)(v5 + 84) < 0x7FFFFFFFu)
    {
      unint64_t v11 = *(void *)((((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v11 >= 0xFFFFFFFF) {
        LODWORD(v11) = -1;
      }
      if (v11 != -1) {
        goto LABEL_9;
      }
    }
    else if ((*(unsigned int (**)(uint64_t *))(v5 + 48))(a2))
    {
LABEL_9:
      memcpy(a1, a2, ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      return a1;
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v10);
    unint64_t v12 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v13 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  swift_retain();
  return a1;
}

uint64_t sub_24D7BAB48(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v3 + 84) >= 0x7FFFFFFFu)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 48))(a1);
    if (result) {
      return result;
    }
    goto LABEL_7;
  }
  unint64_t v5 = *(void *)(((a1 + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v5 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  uint64_t result = (v5 + 1);
  if (v5 == -1)
  {
LABEL_7:
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_24D7BAC78(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84) < 0x7FFFFFFFu)
  {
    unint64_t v7 = *(void *)((((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v7 >= 0xFFFFFFFF) {
      LODWORD(v7) = -1;
    }
    if (v7 != -1) {
      goto LABEL_3;
    }
LABEL_7:
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v8 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v9 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRetain();
    return a1;
  }
  if (!(*(unsigned int (**)(const void *))(v5 + 48))(a2)) {
    goto LABEL_7;
  }
LABEL_3:
  memcpy(a1, a2, ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
  return a1;
}

void *sub_24D7BADD0(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(v5 + 64);
  if (v6 >= 0x7FFFFFFF)
  {
    unint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
    int v9 = v8(a1, v6, AssociatedTypeWitness);
    int v10 = v8(a2, v6, AssociatedTypeWitness);
    if (v9) {
      goto LABEL_3;
    }
LABEL_8:
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      unint64_t v14 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v15 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v14 = *v15;
      v14[1] = v15[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  unint64_t v13 = *(void *)((((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  int v10 = v13 + 1;
  if (*(void *)((((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL) {
    goto LABEL_8;
  }
LABEL_3:
  if (v10)
  {
LABEL_10:
    memcpy(a1, a2, ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  unint64_t v11 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v12 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24D7BAFFC(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84) < 0x7FFFFFFFu)
  {
    unint64_t v7 = *(void *)((((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v7 >= 0xFFFFFFFF) {
      LODWORD(v7) = -1;
    }
    if (v7 != -1) {
      goto LABEL_3;
    }
LABEL_7:
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    *(_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    return a1;
  }
  if (!(*(unsigned int (**)(const void *))(v5 + 48))(a2)) {
    goto LABEL_7;
  }
LABEL_3:
  memcpy(a1, a2, ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
  return a1;
}

void *sub_24D7BB148(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(v5 + 64);
  if (v6 >= 0x7FFFFFFF)
  {
    unint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
    int v9 = v8(a1, v6, AssociatedTypeWitness);
    int v10 = v8(a2, v6, AssociatedTypeWitness);
    if (v9) {
      goto LABEL_3;
    }
LABEL_8:
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      unint64_t v12 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v13 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v12 = *v13;
      v12[1] = v13[1];
      swift_bridgeObjectRelease();
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  unint64_t v11 = *(void *)((((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v11 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  int v10 = v11 + 1;
  if (*(void *)((((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL) {
    goto LABEL_8;
  }
LABEL_3:
  if (v10)
  {
LABEL_10:
    memcpy(a1, a2, ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24D7BB360(int *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    int v7 = 0x7FFFFFFF;
  }
  else {
    int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 - 1 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    unsigned int v11 = a2 - v7 + 2;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24D7BB508);
      case 4:
        int v14 = *(int *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_21:
        unsigned int v16 = v14 - 1;
        if (v10)
        {
          unsigned int v16 = 0;
          int v17 = *a1;
        }
        else
        {
          int v17 = 0;
        }
        return (v17 | v16) + v7;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v19 = *(void *)((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v19 >= 0xFFFFFFFF) {
      LODWORD(v19) = -1;
    }
    unsigned int v18 = v19 + 1;
  }
  else
  {
    unsigned int v18 = (*(uint64_t (**)(int *))(v5 + 48))(a1);
  }
  if (v18 >= 2) {
    return v18 - 1;
  }
  else {
    return 0;
  }
}

void sub_24D7BB51C(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v10 = v9 - 1;
  size_t v11 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v12 = a3 - v9 + 2;
  if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0) {
    unsigned int v12 = 2;
  }
  if (v12 >= 0x10000) {
    int v13 = 4;
  }
  else {
    int v13 = 2;
  }
  if (v12 < 0x100) {
    int v13 = 1;
  }
  if (v12 >= 2) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = 0;
  }
  if (v10 < a3) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v10 < a2)
  {
    unsigned int v16 = a2 - v9;
    if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v17 = v16 + 1;
    }
    else {
      int v17 = 1;
    }
    if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      bzero(a1, v11);
      *a1 = v16;
    }
    switch(v15)
    {
      case 1:
        *((unsigned char *)a1 + v11) = v17;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v11) = v17;
        return;
      case 3:
        goto LABEL_46;
      case 4:
        *(unsigned int *)((char *)a1 + v11) = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      *((unsigned char *)a1 + v11) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)((char *)a1 + v11) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x24D7BB758);
    case 4:
      *(unsigned int *)((char *)a1 + v11) = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (a2 + 1 <= v9)
        {
          if (a2 != -1)
          {
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v20 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
              if (((a2 + 1) & 0x80000000) != 0)
              {
                *uint64_t v20 = a2 - 0x7FFFFFFF;
                v20[1] = 0;
              }
              else
              {
                v20[1] = a2;
              }
            }
            else
            {
              unint64_t v19 = *(void (**)(unsigned int *))(v6 + 56);
              v19(a1);
            }
          }
        }
        else if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
        {
          unsigned int v18 = a2 - v9;
          bzero(a1, ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
          *a1 = v18;
        }
      }
      return;
  }
}

uint64_t sub_24D7BB780(uint64_t a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v2 + 84) < 0x7FFFFFFFu)
  {
    unint64_t v5 = *(void *)(((a1 + *(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v5 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 48);
    return v3(a1);
  }
}

void sub_24D7BB854(_DWORD *a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v7 >= a2)
  {
    if (a2)
    {
      if (v6 < 0x7FFFFFFF)
      {
        unsigned int v12 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
        if ((a2 & 0x80000000) != 0)
        {
          *unsigned int v12 = a2 ^ 0x80000000;
          v12[1] = 0;
        }
        else
        {
          v12[1] = (a2 - 1);
        }
      }
      else
      {
        size_t v11 = *(void (**)(_DWORD *, uint64_t))(v5 + 56);
        v11(a1, a2);
      }
    }
  }
  else
  {
    int v9 = (v8 + 7) & 0xFFFFFFF8;
    if (v9 != -16)
    {
      int v10 = ~v7 + a2;
      bzero(a1, (v9 + 16));
      *a1 = v10;
    }
  }
}

uint64_t sub_24D7BB984()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7BB9E0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_24D7C7284(0, v1, 0);
  uint64_t result = sub_24DB3A898(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v27 = v3 + 80;
  int v28 = v5;
  uint64_t v29 = v3 + 64;
  uint64_t v30 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_26;
    }
    sub_24D6D0AE0(*(void *)(v3 + 48) + 40 * v6, (uint64_t)v36);
    unsigned int v12 = *(void **)(*(void *)(v3 + 56) + 8 * v6);
    uint64_t v37 = v12;
    sub_24D6D0AE0((uint64_t)v36, (uint64_t)v34);
    *((void *)&v35 + 1) = v12;
    v32[0] = v34[0];
    v32[1] = v34[1];
    long long v33 = v35;
    id v13 = v12;
    id v14 = v12;
    sub_24D415F74((uint64_t)v36, &qword_26986E8D0);
    uint64_t v15 = (void *)*((void *)&v33 + 1);
    uint64_t v16 = sub_24DCCA658();
    uint64_t v31 = v17;
    id v18 = v15;
    sub_24D415F74((uint64_t)v32, &qword_26986E8D0);
    uint64_t v2 = v38;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_24D7C7284(0, *(void *)(v2 + 16) + 1, 1);
      uint64_t v2 = v38;
    }
    unint64_t v20 = *(void *)(v2 + 16);
    unint64_t v19 = *(void *)(v2 + 24);
    if (v20 >= v19 >> 1)
    {
      uint64_t result = sub_24D7C7284(v19 > 1, v20 + 1, 1);
      uint64_t v2 = v38;
    }
    *(void *)(v2 + 16) = v20 + 1;
    uint64_t v21 = (void *)(v2 + 24 * v20);
    uint64_t v3 = v30;
    v21[4] = v16;
    v21[5] = v31;
    v21[6] = v15;
    int64_t v9 = 1 << *(unsigned char *)(v30 + 32);
    if (v6 >= v9) {
      goto LABEL_27;
    }
    uint64_t v8 = v29;
    uint64_t v22 = *(void *)(v29 + 8 * v11);
    if ((v22 & (1 << v6)) == 0) {
      goto LABEL_28;
    }
    int v5 = v28;
    if (*(_DWORD *)(v30 + 36) != v28) {
      goto LABEL_29;
    }
    unint64_t v23 = v22 & (-2 << (v6 & 0x3F));
    if (v23)
    {
      int64_t v9 = __clz(__rbit64(v23)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v1;
    }
    else
    {
      unint64_t v24 = v11 + 1;
      unint64_t v25 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v1;
      if (v11 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v29 + 8 * v24);
        if (v26)
        {
LABEL_22:
          int64_t v9 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v11)
          {
            unint64_t v26 = *(void *)(v27 + 8 * v11++);
            if (v26)
            {
              unint64_t v24 = v11 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24D7BBC94(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, unint64_t a4, void (*a5)(char *, uint64_t), uint64_t a6, unint64_t a7, NSObject *a8, uint64_t a9, unint64_t a10, char a11, unsigned __int8 a12, void (*a13)(uint64_t), uint64_t a14)
{
  int v153 = a8;
  unint64_t v159 = a7;
  uint64_t v160 = a6;
  uint64_t v157 = a5;
  uint64_t v158 = a2;
  uint64_t v166 = a14;
  uint64_t v165 = a13;
  uint64_t v180 = *MEMORY[0x263EF8340];
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986C610);
  MEMORY[0x270FA5388](v163);
  uint64_t v164 = (uint64_t *)((char *)&v144 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v152 = (uint64_t)&v144 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24DCC8A58();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v162 = (uint64_t *)((char *)&v144 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v150 = (char *)&v144 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v149 = (char *)&v144 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  unint64_t v146 = (char *)&v144 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v156 = (char *)&v144 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v169 = (char *)&v144 - v33;
  uint64_t v34 = sub_24DCC9078();
  uint64_t v170 = *(void *)(v34 - 8);
  uint64_t v171 = v34;
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v167 = (char *)&v144 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v148 = (char *)&v144 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v40 = (char *)&v144 - v39;
  uint64_t v41 = *(void **)(v14 + 16);
  id v42 = (void *)sub_24DCC8948();
  *(void *)&long long v175 = 0;
  id v43 = objc_msgSend(v41, sel_permanentStorageForItemAtURL_allocateIfNone_error_, v42, 1, &v175);

  os_log_type_t v44 = (void *)v175;
  uint64_t v168 = v21;
  if (v43)
  {
    id v161 = v43;
    uint64_t v155 = v22;
    int v147 = a12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24DCDC030;
    *(void *)(inited + 32) = sub_24DCC97E8();
    *(void *)(inited + 40) = v46;
    id v47 = v44;
    uint64_t v48 = sub_24DCC8918();
    uint64_t v49 = MEMORY[0x263F8D310];
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v48;
    *(void *)(inited + 56) = v50;
    *(void *)(inited + 80) = sub_24DCC97E8();
    *(void *)(inited + 88) = v51;
    *(void *)(inited + 120) = v49;
    uint64_t v145 = a3;
    *(void *)(inited + 96) = a3;
    *(void *)(inited + 104) = a4;
    *(void *)(inited + 128) = sub_24DCC97E8();
    *(void *)(inited + 136) = v52;
    unint64_t v154 = a4;
    swift_bridgeObjectRetain();
    uint64_t v151 = a1;
    uint64_t v53 = sub_24DCC8918();
    *(void *)(inited + 168) = v49;
    *(void *)(inited + 144) = v53;
    *(void *)(inited + 152) = v54;
    uint64_t v55 = sub_24DCC97E8();
    uint64_t v56 = MEMORY[0x263F8D4F8];
    *(void *)(inited + 176) = v55;
    *(void *)(inited + 184) = v57;
    *(void *)(inited + 216) = v56;
    *(unsigned char *)(inited + 192) = 1;
    *(void *)(inited + 224) = sub_24DCC97E8();
    *(void *)(inited + 232) = v58;
    *(void *)(inited + 264) = __swift_instantiateConcreteTypeFromMangledName(&qword_26986E308);
    *(void *)(inited + 240) = v158;
    *(void *)(inited + 272) = sub_24DCC97E8();
    *(void *)(inited + 280) = v59;
    *(void *)(inited + 312) = v49;
    uint64_t v60 = v160;
    *(void *)(inited + 288) = v157;
    *(void *)(inited + 296) = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v61 = sub_24D428D08(inited);
    uint64_t v62 = (void *)MEMORY[0x263F8E970];
    if (a11)
    {
      uint64_t v63 = sub_24DCC97E8();
      uint64_t v65 = v64;
      uint64_t v177 = v62;
      *(void *)&long long v175 = 9;
      sub_24D3F7E7C(&v175, v174);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v172 = v61;
      sub_24D706588(v174, v63, v65, isUniquelyReferenced_nonNull_native);
      unint64_t v61 = v172;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v147)
    {
      uint64_t v67 = sub_24DCC97E8();
      uint64_t v69 = v68;
      uint64_t v177 = v62;
      *(void *)&long long v175 = 1;
      sub_24D3F7E7C(&v175, v174);
      char v70 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v172 = v61;
      sub_24D706588(v174, v67, v69, v70);
      uint64_t v160 = v172;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v160 = v61;
    }
    id v73 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    unint64_t v74 = v154;
    swift_bridgeObjectRetain_n();
    uint64_t v75 = sub_24DCC9068();
    os_log_type_t v76 = sub_24DCCA108();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      *(void *)&long long v175 = v78;
      *(_DWORD *)uint64_t v77 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&v174[0] = sub_24D418FB4(v145, v74, (uint64_t *)&v175);
      sub_24DCCA428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24D3D0000, v75, v76, "⚔️  Putting remote version %s into Genstore...", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v78, -1, -1);
      MEMORY[0x25332B030](v77, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v158 = *(void (**)(char *, uint64_t))(v170 + 8);
    v158(v40, v171);
    uint64_t v21 = v168;
    uint64_t v22 = v155;
    uint64_t v79 = (void *)sub_24DCC8948();
    uint64_t v80 = swift_bridgeObjectRetain();
    sub_24DC32710(v80);
    swift_bridgeObjectRelease();
    uint64_t v81 = (void *)sub_24DCC9558();
    swift_bridgeObjectRelease();
    *(void *)&long long v175 = 0;
    id v82 = v161;
    id v83 = objc_msgSend(v161, sel_prepareAdditionCreationWithItemAtURL_byMoving_creationInfo_error_, v79, 1, v81, &v175);

    uint64_t v84 = (void *)v175;
    a1 = v151;
    if (v83)
    {
      sub_24DCC89E8();
      id v85 = v84;

      uint64_t v86 = v152;
      sub_24D4FFDB8((uint64_t)v153, v152);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v86, 1, v21) == 1)
      {
        sub_24D415F74(v86, (uint64_t *)&unk_26B199050);
LABEL_23:
        uint64_t v108 = v169;
        uint64_t v171 = sub_24DCC8948();
        sub_24DC32710(v160);
        swift_bridgeObjectRelease();
        uint64_t v170 = sub_24DCC9558();
        swift_bridgeObjectRelease();
        uint64_t v109 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
        uint64_t v110 = v149;
        v109(v149, a1, v21);
        uint64_t v111 = v150;
        v109(v150, (uint64_t)v108, v21);
        uint64_t v112 = *(unsigned __int8 *)(v22 + 80);
        uint64_t v113 = (v112 + 32) & ~v112;
        uint64_t v114 = (v23 + v112 + v113) & ~v112;
        uint64_t v115 = swift_allocObject();
        uint64_t v116 = v166;
        *(void *)(v115 + 16) = v165;
        *(void *)(v115 + 24) = v116;
        uint64_t v117 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 32);
        v117(v115 + v113, v110, v21);
        v117(v115 + v114, v111, v21);
        uint64_t v178 = sub_24D7BF4C8;
        uint64_t v179 = v115;
        *(void *)&long long v175 = MEMORY[0x263EF8330];
        *((void *)&v175 + 1) = 1107296256;
        uint64_t v176 = sub_24D3D5088;
        uint64_t v177 = &block_descriptor_11;
        uint64_t v118 = _Block_copy(&v175);
        swift_retain();
        swift_release();
        id v119 = v161;
        uint64_t v121 = (void *)v170;
        uint64_t v120 = (void *)v171;
        objc_msgSend(v161, sel_createAdditionStagedAtURL_creationInfo_completionHandler_, v171, v170, v118);
        _Block_release(v118);

        return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v169, v21);
      }
      unint64_t v159 = a10;
      uint64_t v88 = v156;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v156, v86, v21);
      id v89 = (id)fpfs_current_or_default_log();
      uint64_t v90 = v148;
      sub_24DCC9088();
      uint64_t v91 = v146;
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v146, v88, v21);
      unint64_t v92 = v154;
      swift_bridgeObjectRetain_n();
      uint64_t v93 = sub_24DCC9068();
      uint64_t v94 = v21;
      os_log_type_t v95 = sub_24DCCA108();
      int v153 = v93;
      if (os_log_type_enabled(v93, v95))
      {
        uint64_t v96 = swift_slowAlloc();
        uint64_t v152 = swift_slowAlloc();
        *(void *)&long long v175 = v152;
        *(_DWORD *)uint64_t v96 = 136315394;
        uint64_t v157 = (void (*)(char *, uint64_t))(v96 + 4);
        sub_24D7BF4CC((unint64_t *)&qword_26B18F640, MEMORY[0x263F06EA8]);
        uint64_t v97 = sub_24DCCAD78();
        *(void *)&v174[0] = sub_24D418FB4(v97, v98, (uint64_t *)&v175);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        uint64_t v99 = v91;
        uint64_t v100 = v168;
        uint64_t v157 = *(void (**)(char *, uint64_t))(v22 + 8);
        v157(v99, v168);
        *(_WORD *)(v96 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&v174[0] = sub_24D418FB4(v145, v92, (uint64_t *)&v175);
        sub_24DCCA428();
        swift_bridgeObjectRelease_n();
        uint64_t v101 = v153;
        _os_log_impl(&dword_24D3D0000, v153, v95, "⚔️  associate thumnail %s for loser %s", (uint8_t *)v96, 0x16u);
        uint64_t v102 = v152;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v102, -1, -1);
        a1 = v151;
        MEMORY[0x25332B030](v96, -1, -1);

        v158(v148, v171);
        uint64_t v21 = v100;
      }
      else
      {
        uint64_t v157 = *(void (**)(char *, uint64_t))(v22 + 8);
        v157(v91, v94);

        swift_bridgeObjectRelease_n();
        v158(v90, v171);
        uint64_t v21 = v94;
      }
      uint64_t v103 = (void *)sub_24DCC8948();
      uint64_t v104 = (void *)sub_24DCC8948();
      if (v159 >> 60 == 15) {
        uint64_t v105 = 0;
      }
      else {
        uint64_t v105 = (void *)sub_24DCC8B28();
      }
      uint64_t v22 = v155;
      *(void *)&long long v175 = 0;
      unsigned int v106 = objc_msgSend(v103, sel_fp_associateThumbnailToVersionAtURL_thumbnailMetadata_error_, v104, v105, &v175);

      if (v106)
      {
        id v107 = (id)v175;
        v157(v156, v21);
        goto LABEL_23;
      }
      id v123 = (id)v175;
      swift_bridgeObjectRelease();
      BOOL v72 = (void *)sub_24DCC8828();

      swift_willThrow();
      uint64_t v124 = v157;
      v157(v156, v21);
      v124(v169, v21);
    }
    else
    {
      id v87 = (id)v175;
      swift_bridgeObjectRelease();
      BOOL v72 = (void *)sub_24DCC8828();

      swift_willThrow();
    }
  }
  else
  {
    id v71 = (id)v175;
    BOOL v72 = (void *)sub_24DCC8828();

    swift_willThrow();
  }
  uint64_t v125 = v162;
  id v126 = (id)fpfs_current_or_default_log();
  uint64_t v127 = v167;
  sub_24DCC9088();
  (*(void (**)(void *, uint64_t, uint64_t))(v22 + 16))(v125, a1, v21);
  id v128 = v72;
  id v129 = v72;
  unint64_t v130 = sub_24DCC9068();
  os_log_type_t v131 = sub_24DCCA128();
  if (os_log_type_enabled(v130, v131))
  {
    uint64_t v132 = swift_slowAlloc();
    uint64_t v162 = (void *)swift_slowAlloc();
    uint64_t v169 = (char *)swift_slowAlloc();
    *(void *)&long long v175 = v169;
    *(_DWORD *)uint64_t v132 = 136446466;
    id v161 = (id)(v132 + 4);
    uint64_t v133 = (void *)sub_24DCC8948();
    uint64_t v134 = v22;
    id v135 = objc_msgSend(v133, sel_fp_shortDescription);

    uint64_t v136 = sub_24DCC97E8();
    unint64_t v138 = v137;

    *(void *)&v174[0] = sub_24D418FB4(v136, v138, (uint64_t *)&v175);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v134 + 8))(v125, v168);
    *(_WORD *)(v132 + 12) = 2112;
    swift_getErrorValue();
    id v139 = sub_24DBA2828(v173);
    *(void *)&v174[0] = v139;
    sub_24DCCA428();
    uint64_t v140 = v162;
    *uint64_t v162 = v139;

    _os_log_impl(&dword_24D3D0000, v130, v131, "failed to add version to %{public}s: %@", (uint8_t *)v132, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v140, -1, -1);
    uint64_t v141 = v169;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v141, -1, -1);
    MEMORY[0x25332B030](v132, -1, -1);

    (*(void (**)(char *, uint64_t))(v170 + 8))(v167, v171);
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(v125, v21);

    (*(void (**)(char *, uint64_t))(v170 + 8))(v127, v171);
  }
  uint64_t v142 = (uint64_t)v164;
  *uint64_t v164 = v72;
  swift_storeEnumTagMultiPayload();
  id v143 = v72;
  v165(v142);

  return sub_24D415F74(v142, &qword_26986C610);
}

uint64_t sub_24D7BCD44(void *a1, void *a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v58 = a6;
  uint64_t v59 = a5;
  uint64_t v61 = a4;
  uint64_t v62 = a3;
  uint64_t v60 = a1;
  uint64_t v7 = sub_24DCC8408();
  uint64_t v56 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC8A58();
  uint64_t v57 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unsigned int v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24DCC9078();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986C610);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (uint64_t *)((char *)&v50 - v24);
  if (a2)
  {
    uint64_t *v25 = (uint64_t)a2;
    swift_storeEnumTagMultiPayload();
    id v26 = a2;
LABEL_3:
    v62(v25);
    return sub_24D415F74((uint64_t)v25, &qword_26986C610);
  }
  uint64_t v50 = v16;
  uint64_t v51 = v17;
  uint64_t v52 = v9;
  uint64_t v53 = v12;
  uint64_t v54 = v15;
  uint64_t v55 = v22;
  uint64_t v27 = v60;
  if (!v60)
  {
    id v44 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v45 = sub_24DCC9068();
    os_log_type_t v46 = sub_24DCCA108();
    if (os_log_type_enabled(v45, v46))
    {
      id v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v47 = 0;
      _os_log_impl(&dword_24D3D0000, v45, v46, "⚔️  no addition was created", v47, 2u);
      MEMORY[0x25332B030](v47, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v50);
    int v63 = 22;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D7BF4CC((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
    uint64_t v48 = v52;
    sub_24DCC8808();
    uint64_t v49 = sub_24DCC83E8();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v7);
    uint64_t *v25 = v49;
    swift_storeEnumTagMultiPayload();
    goto LABEL_3;
  }
  uint64_t v28 = v23;
  uint64_t v29 = self;
  id v30 = v27;
  uint64_t v31 = (void *)sub_24DCC8948();
  id v32 = objc_msgSend(v30, sel_nameSpace);
  id v33 = objc_msgSend(v30, sel_name);
  objc_msgSend(v29, sel___itemAtURL_didGainVersionWithClientID_name_purposeID_, v31, v32, v33, 0);

  uint64_t v34 = v57;
  uint64_t v25 = v28;
  uint64_t v35 = v10;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v57 + 16))(v28, v58, v10);
  id v36 = [v30 url];
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v38 = v53;
    sub_24DCC89E8();

    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    uint64_t v40 = v54;
    v39(v54, v38, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v35);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v40, 1, v35);
    id v42 = v62;
    if (result != 1)
    {
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986C618);
      v39((char *)v28 + *(int *)(v43 + 48), v40, v35);
      swift_storeEnumTagMultiPayload();
      v42(v28);

      return sub_24D415F74((uint64_t)v25, &qword_26986C610);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v54, 1, 1, v10);
  }
  __break(1u);
  return result;
}

uint64_t sub_24D7BD310(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  if (a1) {
    unint64_t v8 = a1;
  }
  else {
    unint64_t v8 = sub_24D42B794(MEMORY[0x263F8EE78]);
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_24D7BB9E0(v8);
  swift_bridgeObjectRelease();
  if (*(void *)(v9 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986B0F0);
    uint64_t v10 = sub_24DCCA9F8();
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE80];
  }
  uint64_t v24 = v10;
  uint64_t v11 = (void *)swift_bridgeObjectRetain();
  sub_24D7BD980(v11, 1, &v24);
  swift_bridgeObjectRelease();
  uint64_t v23 = v24;
  if (!(a3 >> 62))
  {
    uint64_t v12 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_9;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    a5(v23, a2);
    return swift_release();
  }
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24DCCA9C8();
  if (!v12) {
    goto LABEL_16;
  }
LABEL_9:
  uint64_t v13 = 4;
  while (1)
  {
    if ((a3 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x253328820](v13 - 4, a3);
    }
    else {
      id v14 = *(id *)(a3 + 8 * v13);
    }
    uint64_t v15 = v14;
    uint64_t v16 = v13 - 3;
    if (__OFADD__(v13 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    id v17 = objc_msgSend(v14, sel_nameSpace);
    if (!v17) {
      break;
    }
    uint64_t v18 = v17;
    uint64_t v19 = sub_24DCC97E8();
    uint64_t v21 = v20;

    sub_24D7BEDE0(v15, v19, v21);
    swift_bridgeObjectRelease();
    ++v13;
    if (v16 == v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_24D7BD528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v11[1] = *(id *)MEMORY[0x263EF8340];
  int v5 = *(void **)(v3 + 16);
  uint64_t v6 = (void *)sub_24DCC8948();
  v11[0] = 0;
  id v7 = objc_msgSend(v5, sel_permanentStorageForItemAtURL_allocateIfNone_error_, v6, 0, v11);

  if (v7)
  {
    id v8 = v11[0];
    a3 = sub_24D7BF278(v7);
  }
  else
  {
    id v9 = v11[0];
    sub_24DCC8828();

    swift_willThrow();
  }
  return a3;
}

id sub_24D7BD624(uint64_t a1, uint64_t a2)
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = *(void **)(v2 + 16);
  v10[0] = 0;
  id v5 = objc_msgSend(v4, sel_permanentStorageForItemWithDocID_deviceID_allocateIfNone_error_, a1, a2, 0, v10);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = v10[0];
    id v8 = (id)sub_24D7BF278(v6);
  }
  else
  {
    id v8 = v10[0];
    sub_24DCC8828();

    swift_willThrow();
  }
  return v8;
}

void sub_24D7BD710(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  v21[7] = *(id *)MEMORY[0x263EF8340];
  id v9 = *(void **)(v5 + 16);
  v21[0] = 0;
  id v10 = objc_msgSend(v9, sel_permanentStorageForItemWithDocID_deviceID_allocateIfNone_error_, a1, a2, 0, v21);
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = v21[0];
    uint64_t v13 = (void *)sub_24DCC9C18();
    v21[4] = a4;
    v21[5] = a5;
    v21[0] = (id)MEMORY[0x263EF8330];
    v21[1] = (id)1107296256;
    v21[2] = sub_24D6024BC;
    v21[3] = &block_descriptor_13;
    id v14 = _Block_copy(v21);
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_removeAllAdditionsForNamespaces_completionHandler_, v13, v14);
    _Block_release(v14);
  }
  else
  {
    id v15 = v21[0];
    uint64_t v16 = (void *)sub_24DCC8828();

    swift_willThrow();
    id v17 = v16;
    LODWORD(v21[0]) = sub_24DCC8368();
    sub_24D4C5C60();
    LOBYTE(v15) = sub_24DCC86A8();

    if (v15)
    {

      ((void (*)(void))a4)(0);
    }
    else
    {
      uint64_t v18 = (void *)sub_24DCC8818();
      unsigned __int8 v19 = objc_msgSend(v18, sel_fp_isGSInvalidStorageError);

      if (v19)
      {
        ((void (*)(void))a4)(0);
      }
      else
      {
        id v20 = v16;
        ((void (*)(void *))a4)(v16);
      }
    }
  }
}

uint64_t sub_24D7BD93C()
{
  return v0;
}

uint64_t type metadata accessor for GSRemoteVersionsManager()
{
  return self;
}

void sub_24D7BD980(void *a1, char a2, void *a3)
{
  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v43 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  id v8 = (void *)a1[6];
  swift_bridgeObjectRetain();
  id v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  id v10 = v8;
  unint64_t v12 = sub_24D4053BC(v7, v6);
  uint64_t v13 = v9[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_23;
  }
  char v16 = v11;
  if (v9[3] >= v15)
  {
    if (a2)
    {
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_24DC7C730();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    uint64_t v22 = (uint64_t *)(v21[6] + 16 * v12);
    *uint64_t v22 = v7;
    v22[1] = v6;
    *(void *)(v21[7] + 8 * v12) = v8;
    uint64_t v23 = v21[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v25;
    uint64_t v26 = v43 - 1;
    if (v43 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v27 = (void **)(a1 + 9);
    while (1)
    {
      uint64_t v29 = (uint64_t)*(v27 - 2);
      uint64_t v28 = (uint64_t)*(v27 - 1);
      id v8 = *v27;
      id v30 = (void *)*a3;
      swift_bridgeObjectRetain();
      id v31 = v8;
      unint64_t v32 = sub_24D4053BC(v29, v28);
      uint64_t v34 = v30[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v24 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v24) {
        break;
      }
      char v37 = v33;
      if (v30[3] < v36)
      {
        sub_24D7038BC(v36, 1);
        unint64_t v32 = sub_24D4053BC(v29, v28);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      uint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
      *uint64_t v40 = v29;
      v40[1] = v28;
      *(void *)(v39[7] + 8 * v32) = v8;
      uint64_t v41 = v39[2];
      BOOL v24 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v24) {
        goto LABEL_24;
      }
      v39[2] = v42;
      v27 += 3;
      if (!--v26) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_24D7038BC(v15, a2 & 1);
  unint64_t v17 = sub_24D4053BC(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    unsigned __int8 v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_24DCCAF18();
  __break(1u);
LABEL_26:
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCCA948();
  sub_24DCC9968();
  sub_24DCCA978();
  __break(1u);
}

uint64_t sub_24D7BDD18(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, char a11, char a12, uint64_t a13, void (*a14)(uint64_t, uint64_t, id, id), uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v154 = a8;
  uint64_t v158 = a2;
  uint64_t v159 = a7;
  uint64_t v161 = a6;
  uint64_t v157 = a5;
  uint64_t v171 = a3;
  uint64_t v186 = *MEMORY[0x263EF8340];
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986C610);
  MEMORY[0x270FA5388](v163);
  uint64_t v164 = (uint64_t *)((char *)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v153 = (uint64_t)&v148 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_24DCC8A58();
  uint64_t v173 = *(void **)(v175 - 8);
  uint64_t v22 = v173[8];
  uint64_t v23 = MEMORY[0x270FA5388](v175);
  uint64_t v162 = (char *)&v148 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v152 = (char *)&v148 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v151 = (char *)&v148 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  unint64_t v160 = (unint64_t)&v148 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v156 = (char *)&v148 - v31;
  MEMORY[0x270FA5388](v30);
  char v174 = (char *)&v148 - v32;
  uint64_t v33 = sub_24DCC9078();
  uint64_t v176 = *(void *)(v33 - 8);
  uint64_t v177 = v33;
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  uint64_t v172 = (char *)&v148 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v150 = (char *)&v148 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)&v148 - v38;
  uint64_t v40 = (void *)swift_allocObject();
  uint64_t v165 = a14;
  uint64_t v166 = a15;
  v40[2] = a14;
  v40[3] = a15;
  uint64_t v41 = a1;
  uint64_t v167 = a16;
  v40[4] = a16;
  v40[5] = a17;
  uint64_t v169 = v40;
  uint64_t v42 = *(void **)(a13 + 16);
  swift_retain();
  uint64_t v168 = a17;
  swift_bridgeObjectRetain();
  uint64_t v43 = (void *)sub_24DCC8948();
  *(void *)&long long v181 = 0;
  id v44 = objc_msgSend(v42, sel_permanentStorageForItemAtURL_allocateIfNone_error_, v43, 1, &v181);

  uint64_t v45 = (void *)v181;
  id v170 = v44;
  if (v44)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24DCDC030;
    *(void *)(inited + 32) = sub_24DCC97E8();
    *(void *)(inited + 40) = v47;
    id v48 = v45;
    uint64_t v49 = sub_24DCC8918();
    uint64_t v50 = MEMORY[0x263F8D310];
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v49;
    *(void *)(inited + 56) = v51;
    *(void *)(inited + 80) = sub_24DCC97E8();
    *(void *)(inited + 88) = v52;
    *(void *)(inited + 120) = v50;
    *(void *)(inited + 96) = v171;
    *(void *)(inited + 104) = a4;
    *(void *)(inited + 128) = sub_24DCC97E8();
    *(void *)(inited + 136) = v53;
    unint64_t v155 = a4;
    swift_bridgeObjectRetain();
    uint64_t v149 = a1;
    uint64_t v54 = sub_24DCC8918();
    *(void *)(inited + 168) = v50;
    *(void *)(inited + 144) = v54;
    *(void *)(inited + 152) = v55;
    uint64_t v56 = sub_24DCC97E8();
    uint64_t v57 = MEMORY[0x263F8D4F8];
    *(void *)(inited + 176) = v56;
    *(void *)(inited + 184) = v58;
    *(void *)(inited + 216) = v57;
    *(unsigned char *)(inited + 192) = 1;
    *(void *)(inited + 224) = sub_24DCC97E8();
    *(void *)(inited + 232) = v59;
    *(void *)(inited + 264) = __swift_instantiateConcreteTypeFromMangledName(&qword_26986E308);
    *(void *)(inited + 240) = v158;
    *(void *)(inited + 272) = sub_24DCC97E8();
    *(void *)(inited + 280) = v60;
    *(void *)(inited + 312) = v50;
    uint64_t v61 = v161;
    *(void *)(inited + 288) = v157;
    *(void *)(inited + 296) = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v62 = sub_24D428D08(inited);
    int v63 = (void *)MEMORY[0x263F8E970];
    if (a11)
    {
      uint64_t v64 = sub_24DCC97E8();
      uint64_t v66 = v65;
      uint64_t v183 = v63;
      *(void *)&long long v181 = 9;
      sub_24D3F7E7C(&v181, v180);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v178 = v62;
      sub_24D706588(v180, v64, v66, isUniquelyReferenced_nonNull_native);
      unint64_t v62 = v178;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a12)
    {
      uint64_t v68 = sub_24DCC97E8();
      uint64_t v70 = v69;
      uint64_t v183 = v63;
      *(void *)&long long v181 = 1;
      sub_24D3F7E7C(&v181, v180);
      char v71 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v178 = v62;
      sub_24D706588(v180, v68, v70, v71);
      uint64_t v161 = v178;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v161 = v62;
    }
    id v76 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    unint64_t v77 = v155;
    swift_bridgeObjectRetain_n();
    uint64_t v78 = sub_24DCC9068();
    os_log_type_t v79 = sub_24DCCA108();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      *(void *)&long long v181 = v81;
      *(_DWORD *)uint64_t v80 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&v180[0] = sub_24D418FB4(v171, v77, (uint64_t *)&v181);
      sub_24DCCA428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24D3D0000, v78, v79, "⚔️  Putting remote version %s into Genstore...", v80, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v81, -1, -1);
      MEMORY[0x25332B030](v80, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v158 = *(void (**)(char *, uint64_t))(v176 + 8);
    v158(v39, v177);
    uint64_t v75 = v173;
    unint64_t v82 = v160;
    id v83 = (void *)sub_24DCC8948();
    uint64_t v84 = swift_bridgeObjectRetain();
    sub_24DC32710(v84);
    swift_bridgeObjectRelease();
    id v85 = (void *)sub_24DCC9558();
    swift_bridgeObjectRelease();
    *(void *)&long long v181 = 0;
    id v86 = v170;
    id v87 = objc_msgSend(v170, sel_prepareAdditionCreationWithItemAtURL_byMoving_creationInfo_error_, v83, 1, v85, &v181);

    uint64_t v88 = (void *)v181;
    uint64_t v74 = v175;
    if (v87)
    {
      sub_24DCC89E8();
      id v89 = v88;

      uint64_t v90 = v153;
      sub_24D4FFDB8(v154, v153);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v75[6])(v90, 1, v74) == 1)
      {
        sub_24D415F74(v90, (uint64_t *)&unk_26B199050);
        uint64_t v41 = v149;
LABEL_23:
        uint64_t v113 = v174;
        uint64_t v177 = sub_24DCC8948();
        sub_24DC32710(v161);
        swift_bridgeObjectRelease();
        uint64_t v176 = sub_24DCC9558();
        swift_bridgeObjectRelease();
        uint64_t v114 = (void (*)(char *, uint64_t, uint64_t))v75[2];
        uint64_t v115 = v151;
        v114(v151, v41, v74);
        uint64_t v116 = v152;
        v114(v152, (uint64_t)v113, v74);
        uint64_t v117 = *((unsigned __int8 *)v75 + 80);
        uint64_t v118 = (v117 + 32) & ~v117;
        uint64_t v119 = (v22 + v117 + v118) & ~v117;
        uint64_t v120 = swift_allocObject();
        uint64_t v121 = v169;
        *(void *)(v120 + 16) = sub_24D7BF554;
        *(void *)(v120 + 24) = v121;
        uint64_t v122 = v75;
        id v123 = (void (*)(uint64_t, char *, uint64_t))v75[4];
        v123(v120 + v118, v115, v74);
        v123(v120 + v119, v116, v74);
        uint64_t v184 = sub_24D7BF4C8;
        uint64_t v185 = v120;
        *(void *)&long long v181 = MEMORY[0x263EF8330];
        *((void *)&v181 + 1) = 1107296256;
        uint64_t v182 = sub_24D3D5088;
        uint64_t v183 = &block_descriptor_21_0;
        uint64_t v124 = _Block_copy(&v181);
        swift_retain();
        swift_release();
        id v125 = v170;
        uint64_t v127 = (void *)v176;
        id v126 = (void *)v177;
        objc_msgSend(v170, sel_createAdditionStagedAtURL_creationInfo_completionHandler_, v177, v176, v124);
        _Block_release(v124);

        ((void (*)(char *, uint64_t))v122[1])(v174, v74);
        return swift_release();
      }
      unint64_t v160 = (unint64_t)a10;
      unint64_t v92 = v156;
      ((void (*)(char *, uint64_t, uint64_t))v75[4])(v156, v90, v74);
      id v93 = (id)fpfs_current_or_default_log();
      uint64_t v94 = v150;
      sub_24DCC9088();
      ((void (*)(unint64_t, char *, uint64_t))v75[2])(v82, v92, v74);
      unint64_t v95 = v155;
      swift_bridgeObjectRetain_n();
      uint64_t v96 = sub_24DCC9068();
      uint64_t v97 = v74;
      os_log_type_t v98 = sub_24DCCA108();
      if (os_log_type_enabled(v96, v98))
      {
        uint64_t v99 = swift_slowAlloc();
        uint64_t v159 = swift_slowAlloc();
        *(void *)&long long v181 = v159;
        *(_DWORD *)uint64_t v99 = 136315394;
        uint64_t v157 = v99 + 4;
        sub_24D7BF4CC((unint64_t *)&qword_26B18F640, MEMORY[0x263F06EA8]);
        uint64_t v100 = sub_24DCCAD78();
        *(void *)&v180[0] = sub_24D418FB4(v100, v101, (uint64_t *)&v181);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        unint64_t v102 = v82;
        uint64_t v103 = (void (*)(unint64_t, uint64_t))v173[1];
        v103(v102, v97);
        *(_WORD *)(v99 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&v180[0] = sub_24D418FB4(v171, v95, (uint64_t *)&v181);
        sub_24DCCA428();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24D3D0000, v96, v98, "⚔️  associate thumnail %s for loser %s", (uint8_t *)v99, 0x16u);
        uint64_t v104 = v159;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v104, -1, -1);
        uint64_t v105 = v99;
        uint64_t v75 = v173;
        MEMORY[0x25332B030](v105, -1, -1);

        unsigned int v106 = v150;
      }
      else
      {
        unint64_t v107 = v82;
        uint64_t v103 = (void (*)(unint64_t, uint64_t))v75[1];
        v103(v107, v97);

        swift_bridgeObjectRelease_n();
        unsigned int v106 = v94;
      }
      v158(v106, v177);
      uint64_t v74 = v97;
      uint64_t v108 = (void *)sub_24DCC8948();
      uint64_t v109 = (void *)sub_24DCC8948();
      uint64_t v41 = v149;
      if (v160 >> 60 == 15) {
        uint64_t v110 = 0;
      }
      else {
        uint64_t v110 = (void *)sub_24DCC8B28();
      }
      *(void *)&long long v181 = 0;
      unsigned int v111 = objc_msgSend(v108, sel_fp_associateThumbnailToVersionAtURL_thumbnailMetadata_error_, v109, v110, &v181);

      if (v111)
      {
        id v112 = (id)v181;
        v103((unint64_t)v156, v74);
        goto LABEL_23;
      }
      id v128 = (id)v181;
      swift_bridgeObjectRelease();
      id v73 = (void *)sub_24DCC8828();

      swift_willThrow();
      v103((unint64_t)v156, v74);
      v103((unint64_t)v174, v74);
    }
    else
    {
      id v91 = (id)v181;
      swift_bridgeObjectRelease();
      id v73 = (void *)sub_24DCC8828();

      swift_willThrow();
      uint64_t v41 = v149;
    }
  }
  else
  {
    id v72 = (id)v181;
    id v73 = (void *)sub_24DCC8828();

    swift_willThrow();
    uint64_t v74 = v175;
    uint64_t v75 = v173;
  }
  id v129 = (id)fpfs_current_or_default_log();
  unint64_t v130 = v172;
  sub_24DCC9088();
  os_log_type_t v131 = v162;
  ((void (*)(char *, uint64_t, uint64_t))v75[2])(v162, v41, v74);
  id v132 = v73;
  id v133 = v73;
  uint64_t v134 = sub_24DCC9068();
  os_log_type_t v135 = sub_24DCCA128();
  if (os_log_type_enabled(v134, v135))
  {
    uint64_t v136 = swift_slowAlloc();
    uint64_t v173 = (void *)swift_slowAlloc();
    char v174 = (char *)swift_slowAlloc();
    *(void *)&long long v181 = v174;
    *(_DWORD *)uint64_t v136 = 136446466;
    uint64_t v171 = v136 + 4;
    unint64_t v137 = (void *)sub_24DCC8948();
    id v138 = objc_msgSend(v137, sel_fp_shortDescription);

    uint64_t v139 = sub_24DCC97E8();
    unint64_t v141 = v140;

    *(void *)&v180[0] = sub_24D418FB4(v139, v141, (uint64_t *)&v181);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v75[1])(v131, v175);
    *(_WORD *)(v136 + 12) = 2112;
    swift_getErrorValue();
    id v142 = sub_24DBA2828(v179);
    *(void *)&v180[0] = v142;
    sub_24DCCA428();
    id v143 = v173;
    *uint64_t v173 = v142;

    _os_log_impl(&dword_24D3D0000, v134, v135, "failed to add version to %{public}s: %@", (uint8_t *)v136, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v143, -1, -1);
    uint64_t v144 = v174;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v144, -1, -1);
    MEMORY[0x25332B030](v136, -1, -1);

    (*(void (**)(char *, uint64_t))(v176 + 8))(v172, v177);
  }
  else
  {
    ((void (*)(char *, uint64_t))v75[1])(v131, v74);

    (*(void (**)(char *, uint64_t))(v176 + 8))(v130, v177);
  }
  uint64_t v145 = (uint64_t)v164;
  *uint64_t v164 = v73;
  swift_storeEnumTagMultiPayload();
  id v146 = v73;
  sub_24D69AB38(v145, v165, v166, v167, v168);

  sub_24D415F74(v145, &qword_26986C610);
  return swift_release();
}

void sub_24D7BEDE0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8A58();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v31 - v14;
  if (sub_24DCC97E8() == a2 && v16 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      goto LABEL_15;
    }
  }
  id v19 = objc_msgSend(a1, sel_storage);
  if (!v19)
  {
LABEL_23:
    __break(1u);
    return;
  }
  id v20 = objc_msgSend(v19, sel_documentURL);
  swift_unknownObjectRelease();
  if (v20)
  {
    sub_24DCC89E8();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v9, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
    {
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v21 = (void *)sub_24DCC8948();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v15, 1, 1, v6);
    uint64_t v21 = 0;
  }
  uint64_t v22 = self;
  id v23 = objc_msgSend(a1, sel_nameSpace);
  id v24 = objc_msgSend(a1, sel_name);
  objc_msgSend(v22, sel___itemAtURL_didResolveConflictVersionWithClientID_name_purposeID_, v21, v23, v24, 0);

LABEL_15:
  id v25 = objc_msgSend(a1, sel_storage);
  if (!v25)
  {
    __break(1u);
    goto LABEL_23;
  }
  id v26 = objc_msgSend(v25, sel_documentURL);
  swift_unknownObjectRelease();
  if (v26)
  {
    sub_24DCC89E8();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v9, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
    {
      uint64_t v27 = 0;
    }
    else
    {
      uint64_t v27 = (void *)sub_24DCC8948();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, 1, 1, v6);
    uint64_t v27 = 0;
  }
  uint64_t v28 = self;
  id v29 = objc_msgSend(a1, sel_nameSpace);
  id v30 = objc_msgSend(a1, sel_name);
  objc_msgSend(v28, sel___itemAtURL_didLoseVersionWithClientID_name_purposeID_, v27, v29, v30, 0);
}

uint64_t sub_24D7BF278(void *a1)
{
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v2 = (void *)sub_24DCC97B8();
  id v3 = objc_msgSend(a1, sel_enumeratorForAdditionsInNameSpace_withOptions_withoutOptions_ordering_, v2, 0, 0, 0);

  if (v3)
  {
    while (1)
    {
      if (objc_msgSend(v3, sel_nextObject, v6, v7))
      {
        sub_24DCCA528();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v6 = 0u;
        long long v7 = 0u;
      }
      sub_24D7BF41C((uint64_t)&v6, (uint64_t)&v8);
      if (!*((void *)&v9 + 1)) {
        break;
      }
      sub_24D3F7E7C(&v8, v10);
      sub_24D3F7E8C((uint64_t)v10, (uint64_t)&v8);
      sub_24D7BF484();
      if (swift_dynamicCast())
      {
        id v4 = (id)v6;
        MEMORY[0x253327CA0]();
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_24DCC9C78();
        }
        sub_24DCC9CD8();
        sub_24DCC9C48();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  sub_24D415F74((uint64_t)&v8, qword_26B197F50);
  return v11;
}

uint64_t sub_24D7BF41C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B197F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24D7BF484()
{
  unint64_t result = qword_26986C6C0;
  if (!qword_26986C6C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26986C6C0);
  }
  return result;
}

uint64_t sub_24D7BF4CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D7BF514()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_24D7BF554(uint64_t a1)
{
  sub_24D69AB38(a1, *(void (**)(uint64_t, uint64_t, id, id))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t objectdestroyTm_3()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = (*(void *)(v2 + 64) + v3 + v4) & ~v3;
  swift_release();
  uint64_t v6 = v0 + v4;
  long long v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v6, v1);
  v7(v0 + v5, v1);

  return swift_deallocObject();
}

uint64_t sub_24D7BF658(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  long long v8 = *(void (**)(uint64_t *))(v2 + 16);
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = v2 + ((*(void *)(v5 + 64) + v6 + v7) & ~v6);

  return sub_24D7BCD44(a1, a2, v8, v9, v2 + v7, v10);
}

uint64_t sub_24D7BF718()
{
  uint64_t v2 = sub_24DCC8288();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v37 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24DCC82A8();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24DCC9078();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24DCC8A58();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  char v18 = (char *)v33 - v17;
  id v19 = objc_msgSend(self, sel_fp_supportDirectory);
  uint64_t v40 = v0;
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  id v20 = v19;
  v33[1] = v1;
  sub_24DCC89E8();

  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v21(v11, v16, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_6:
    sub_24D419150((uint64_t)v11);
    id v25 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v26 = sub_24DCC9068();
    os_log_type_t v27 = sub_24DCCA128();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_24D3D0000, v26, v27, "Error initializing GlobalResource, cannot resolve fp_suportDirectory", v28, 2u);
      MEMORY[0x25332B030](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v35);
    sub_24DCC8158();
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D4A4604();
    id v29 = v36;
    uint64_t v30 = v39;
    sub_24DCC8808();
    sub_24DCC8128();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v30);
    swift_willThrow();
    goto LABEL_9;
  }
  v21(v18, v11, v12);
  sub_24DCC8A18();
  sub_24DCC9898();
  int v22 = fpfs_lp_openat();
  uint64_t v23 = swift_release();
  if (v22 < 0)
  {
    int v32 = MEMORY[0x253327160](v23);
    sub_24D90CF14(v32, 1, 0, 0xAu);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
LABEL_9:
    uint64_t v24 = v40;
    type metadata accessor for GlobalResourceStore();
    swift_deallocPartialClassInstance();
    return v24;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  uint64_t v24 = v40;
  *(_DWORD *)(v40 + 16) = v22;
  return v24;
}

uint64_t sub_24D7BFC3C()
{
  uint64_t v3 = *(unsigned int *)(v0 + 16);
  *(void *)&long long v8 = 0x656372756F736572;
  *((void *)&v8 + 1) = 0xEA00000000002F73;
  sub_24DCC9968();
  long long v4 = v8;
  long long v8 = xmmword_24DCDC080;
  swift_bridgeObjectRetain();
  uint64_t result = sub_24DBA9C5C(v3, v4, *((uint64_t *)&v4 + 1), 0x200000, 0, 0, (uint64_t)&v8, (uint64_t)sub_24DCAFF80, 0);
  if (v1)
  {
    sub_24D70694C(v8, *((unint64_t *)&v8 + 1));
    swift_bridgeObjectRelease();
    id v6 = v1;
    LODWORD(v8) = sub_24DCC8368();
    sub_24D4C5C60();
    char v7 = sub_24DCC86A8();

    if (v7)
    {

      return 0;
    }
    return v2;
  }
  if (*((void *)&v8 + 1) >> 60 != 11)
  {
    uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D7BFD88()
{
  sub_24D40CB10(*(unsigned int *)(v0 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GlobalResourceStore()
{
  return self;
}

void *sub_24D7BFDE4()
{
  if (MEMORY[0x263F8EEE0]) {
    return &unk_26FFC5CF8;
  }
  else {
    return (void *)(MEMORY[0x263F8EE60] + 8);
  }
}

uint64_t sub_24D7BFE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24DCB07C0(a1, a2, a3, a4, *(unsigned int *)(*(void *)v4 + 16));
}

uint64_t sub_24D7BFE2C()
{
  return sub_24D7BFC3C();
}

void sub_24D7BFE50()
{
}

uint64_t sub_24D7BFE70()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D7BFED0()
{
  swift_release();

  return v0;
}

uint64_t sub_24D7BFEF8()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SyncEngine()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D7BFF50(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 112);
}

uint64_t sub_24D7BFF58(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 120);
}

uint64_t sub_24D7BFF60(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2();
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(a4 + 16) == 1)
  {
    uint64_t v8 = *(void *)(a5 + 24);
    BOOL v9 = __OFSUB__(v8, 1);
    uint64_t v10 = v8 - 1;
    if (v9) {
      __break(1u);
    }
    else {
      *(void *)(a5 + 24) = v10;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JobSchedulingOrder()
{
  return &type metadata for JobSchedulingOrder;
}

uint64_t sub_24D7BFFE8(unint64_t a1)
{
  if (a1 >> 61 >= 5) {
    return 1;
  }
  else {
    return a1 >> 61;
  }
}

BOOL sub_24D7BFFF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t sub_24D7C000C(unint64_t a1)
{
  if ((a1 & 0x1FFFFFFFFFFFFFFFLL) != 0)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9E38();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    unint64_t v1 = a1 >> 61;
    uint64_t result = 0x756F72676B636162;
    switch(v1)
    {
      case 0uLL:
        return result;
      case 2uLL:
        uint64_t result = 0x746C7561666564;
        break;
      case 3uLL:
        uint64_t result = 0x74696E4972657375;
        break;
      case 4uLL:
        uint64_t result = 0x65746E4972657375;
        break;
      default:
        uint64_t result = 0x7974696C697475;
        break;
    }
  }
  return result;
}

BOOL sub_24D7C0238(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_24D7C024C(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_24D7C0260(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_24D7C0274(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t sub_24D7C0288()
{
  return sub_24D7C000C(*v0);
}

BOOL sub_24D7C0290(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_24D7C02A8(void *a1, void *a2)
{
  if (*a2 < *a1) {
    return 1;
  }
  return *a1 == *a2 && a1[1] < a2[1];
}

BOOL sub_24D7C02D8(void *a1, void *a2)
{
  if (*a1 < *a2) {
    return 0;
  }
  return *a2 != *a1 || a2[1] >= a1[1];
}

BOOL sub_24D7C0308(void *a1, void *a2)
{
  if (*a2 < *a1) {
    return 0;
  }
  return *a1 != *a2 || a1[1] >= a2[1];
}

BOOL sub_24D7C0338(void *a1, void *a2)
{
  if (*a1 < *a2) {
    return 1;
  }
  return *a2 == *a1 && a2[1] < a1[1];
}

uint64_t sub_24D7C0368()
{
  uint64_t v2 = sub_24D7C000C(*v0);
  sub_24DCC9968();
  sub_24DCC9E38();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_24D7C03E8()
{
  unint64_t result = qword_26986E8D8;
  if (!qword_26986E8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E8D8);
  }
  return result;
}

uint64_t sub_24D7C0440()
{
  uint64_t v0 = sub_24DCC8CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v5 = v4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  double v7 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18) {
    return 0x2000000000000000;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_24D7C0568()
{
  uint64_t v0 = sub_24DCC8CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v5 = v4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  double v7 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18) {
    return 0;
  }
LABEL_7:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for JobSchedulingPriority()
{
  return &type metadata for JobSchedulingPriority;
}

unint64_t sub_24D7C06A4()
{
  unint64_t result = qword_26986E8E0;
  if (!qword_26986E8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E8E0);
  }
  return result;
}

uint64_t sub_24D7C06F8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_24D7C0728()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  id v2 = (id)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_put_, v2);
}

id sub_24D7C07AC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, void *a3@<X8>)
{
  id v8 = *(id *)v3;
  uint64_t v9 = *(void *)(v3 + 8);
  uint64_t v10 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;

  return v8;
}

uint64_t sub_24D7C083C@<X0>(void *a1@<X0>, void *a2@<X1>, void **a3@<X8>)
{
  double v4 = *v3;
  *a3 = *v3;
  a3[1] = a1;
  a3[3] = &type metadata for SubFPCTLTermDumper;
  a3[4] = &off_26FFC0DA8;
  a3[2] = a2;
  id v5 = v4;

  return swift_bridgeObjectRetain();
}

uint64_t destroy for SubFPCTLTermDumper(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s9libfssync18SubFPCTLTermDumperVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubFPCTLTermDumper(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SubFPCTLTermDumper(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubFPCTLTermDumper(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubFPCTLTermDumper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubFPCTLTermDumper()
{
  return &type metadata for SubFPCTLTermDumper;
}

uint64_t sub_24D7C0A68@<X0>(unsigned __int8 a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v39[2] = *MEMORY[0x263EF8340];
  v26[6] = *(_DWORD *)(a3 + 16);
  v26[7] = 2129920;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  v33[0] = *a2;
  v33[1] = v7;
  int v9 = *((_DWORD *)a2 + 4);
  int v10 = *((_DWORD *)a2 + 5);
  int v34 = v9;
  int v35 = v10;
  sub_24D3F0BA0((uint64_t)(a2 + 3), (uint64_t)v38, qword_26B199BD0);
  uint64_t v11 = sub_24D3F0BA0((uint64_t)v38, (uint64_t)v39, qword_26B199BD0);
  if (v39[1])
  {
    uint64_t v12 = MEMORY[0x270FA5388](v11);
    if ((v14 & 0x1000000000000000) != 0 || !(v14 & 0x2000000000000000 | v13 & 0x1000000000000000))
    {
      uint64_t result = sub_24DCCA718();
      if (v4) {
        return result;
      }
      uint64_t v20 = v26[1];
    }
    else
    {
      MEMORY[0x270FA5388](v12);
      if ((v16 & 0x2000000000000000) != 0)
      {
        uint64_t v27 = v15;
        uint64_t v28 = v16 & 0xFFFFFFFFFFFFFFLL;
        uint64_t result = (uint64_t)sub_24D7C3F84((uint64_t)&v27, (uint64_t)v33, (void *(*)(uint64_t *__return_ptr, uint64_t))sub_24D5B22B8, v26);
        if (v4) {
          return result;
        }
        uint64_t v20 = v26[0];
      }
      else
      {
        if ((v15 & 0x1000000000000000) != 0)
        {
          uint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v17 = sub_24DCCA7E8();
        }
        uint64_t result = (uint64_t)sub_24D7C3ECC(v17, v18, (void *(*)(uint64_t *__return_ptr))sub_24D5B2790);
        if (v4) {
          return result;
        }
        uint64_t v20 = result;
      }
    }
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v27 = v8;
    uint64_t v28 = v7;
    int v29 = v9;
    int v30 = v10;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v21 = fpfs_openfdbyhandle();
    if ((v21 & 0x80000000) != 0)
    {
      int v22 = MEMORY[0x253327160]();
      sub_24D90CF14(v22, 0, 0, 0xAu);
      return swift_willThrow();
    }
    uint64_t v20 = v21;
  }
  if (a1 - 1 >= 2 && v9)
  {
    uint64_t v23 = a4;
    uint64_t v24 = a3;
  }
  else
  {
    uint64_t v23 = a4;
    uint64_t v24 = a3;
  }
  sub_24D40CB1C(v24, v23);
  return sub_24D40CB10(v20);
}

void sub_24D7C0DE4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = fpfs_openfdbyhandle();
  uint64_t v12 = a2;
  if ((v4 & 0x80000000) != 0)
  {
    int v7 = MEMORY[0x253327160]();
    id v6 = (void *)sub_24D90CF14(v7, 0, 0, 0xAu);
    swift_willThrow();
  }
  else
  {
    uint64_t v5 = v4;
    sub_24D40CB1C(a1, a2);
    if (!v11)
    {
      sub_24D40CB10(v5);
      return;
    }
    sub_24D40CB10(v5);
    id v6 = v11;
  }
  id v8 = v6;
  sub_24DCC8368();
  sub_24D4C5C60();
  char v9 = sub_24DCC86A8();

  if (v9)
  {
    uint64_t v10 = type metadata accessor for VFSItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v12, 1, 1, v10);
  }
}

uint64_t sub_24D7C0FC8@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t (**a7)(uint64_t, uint64_t)@<X7>, uint64_t a8@<X8>, unsigned __int8 a9, uint64_t a10, NSObject *a11, unsigned __int8 a12, uint64_t a13)
{
  return sub_24D40D6F8(a4, a1, a2, a3, a5, a6, a7, a9, a8, a10, a11, a12, a13);
}

unint64_t sub_24D7C1034()
{
  unint64_t result = qword_26986E8F0;
  if (!qword_26986E8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E8F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PackageInternalLookupPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D7C1154);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PackageInternalLookupPolicy()
{
  return &type metadata for PackageInternalLookupPolicy;
}

double sub_24D7C118C(uint64_t a1)
{
  *(void *)a1 = 8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(unsigned char *)(a1 + 120) = 10;
  return result;
}

BOOL sub_24D7C11C0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v7 = v6;
  uint64_t v11 = a1;
  uint64_t v33 = *MEMORY[0x263EF8340];
  if (a2 != 1)
  {
    if (a2 == 2)
    {
      if (!a1) {
        goto LABEL_5;
      }
      uint64_t v11 = *(unsigned __int8 *)(a5 + 48);
      if ((v11 & 1) == 0) {
        goto LABEL_5;
      }
      __break(1u);
    }
    sub_24DA8626C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSFileTree+Lookup.swift", 130, 2, 580, v11, 0);
  }
LABEL_5:
  uint64_t v12 = MEMORY[0x270FA5388](a1);
  uint64_t v31 = 0;
  __darwin_time_t v32 = 0;
  *(void *)&long long v29 = 0;
  *((void *)&v29 + 1) = v13;
  uint64_t v30 = 0;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    swift_bridgeObjectRetain();
    sub_24DCCA718();
    if (v7)
    {
LABEL_11:
      swift_bridgeObjectRelease();

      return 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = v27;
  }
  else
  {
    MEMORY[0x270FA5388](v14);
    if ((a4 & 0x2000000000000000) != 0)
    {
      v26[0] = a3;
      v26[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v31 = v26;
      *(_OWORD *)&v28.st_dev = v29;
      *(void *)&v28.st_uid = v30;
      *(void *)&v28.st_rdev = v26;
      v28.st_atimespec.tv_sec = v32;
      swift_bridgeObjectRetain();
      uint64_t v18 = fpfs_openfdbyhandle();
      if ((v18 & 0x80000000) != 0)
      {
        int v23 = MEMORY[0x253327160]();
        uint64_t v24 = (void *)sub_24D90CF14(v23, 0, 0, 0xAu);
        swift_willThrow();
        swift_bridgeObjectRelease();

        return 0;
      }
      uint64_t v19 = v18;
      unsigned int v27 = v18;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        uint64_t v15 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v16 = a3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v15 = sub_24DCCA7E8();
        uint64_t v16 = v25;
      }
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_24D7C3ECC(v15, v16, (void *(*)(uint64_t *__return_ptr))sub_24D7C176C);
      if (v7) {
        goto LABEL_11;
      }
      uint64_t v19 = (uint64_t)v17;
      unsigned int v27 = v17;
      swift_bridgeObjectRelease();
    }
  }
  memset(&v28, 0, 28);
  memset(&v28.st_atimespec, 0, 112);
  if (fstat(v19, &v28) < 0)
  {
    int v21 = MEMORY[0x253327160]();
    int v22 = (void *)sub_24D90CF14(v21, 4, 0, 0xAu);
    swift_willThrow();
    sub_24D40CB10(v19);

    return 0;
  }
  else
  {
    sub_24D40CB10(v19);
    return v28.st_ino == a6;
  }
}

uint64_t sub_24D7C15BC(uint64_t result)
{
  *(unsigned char *)(result + 120) = 4;
  return result;
}

uint64_t sub_24D7C15C8()
{
  swift_release();
  if (*(void *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D7C1640()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 128))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_24D7C16B0()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D7C1720()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D7C1760()
{
  return sub_24DC34030(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void *sub_24D7C176C@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D5B2790(a1);
}

uint64_t sub_24D7C1784@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D5B22B8(a1);
}

void *sub_24D7C179C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24D5B2770(a1, a2);
}

uint64_t sub_24D7C17B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  return sub_24D7C1EAC(-2, a1, a2, a3, a4, a5, a6, a7, a9, a8);
}

void sub_24D7C17FC(uint64_t *a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  id v8 = v7;
  uint64_t v54 = a6;
  int v53 = a4;
  uint64_t v55 = a7;
  v72[2] = *MEMORY[0x263EF8340];
  v57[5] = a2;
  v57[6] = a3;
  uint64_t v68 = 0;
  uint64_t v69 = 0;
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v64 = *a1;
  uint64_t v65 = v11;
  int v14 = *((_DWORD *)a1 + 4);
  int v13 = *((_DWORD *)a1 + 5);
  int v66 = v14;
  int v67 = v13;
  sub_24D3F0BA0((uint64_t)(a1 + 3), (uint64_t)v70, qword_26B199BD0);
  uint64_t v15 = sub_24D3F0BA0((uint64_t)v70, (uint64_t)v72, qword_26B199BD0);
  if (v72[1])
  {
    int v52 = a3;
    int v50 = v14;
    uint64_t v51 = v11;
    uint64_t v16 = MEMORY[0x270FA5388](v15);
    if ((v18 & 0x1000000000000000) != 0 || !(v18 & 0x2000000000000000 | v17 & 0x1000000000000000))
    {
      sub_24DCCA718();
      uint64_t v25 = a5;
      if (v7)
      {
        int v21 = v13;
        uint64_t v48 = 0;
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v49 = v12;
      MEMORY[0x270FA5388](v16);
      int v21 = v13;
      if ((v20 & 0x2000000000000000) != 0)
      {
        uint64_t v58 = v19;
        uint64_t v59 = v20 & 0xFFFFFFFFFFFFFFLL;
        uint64_t v68 = &v58;
        sub_24D5B22B8(v57);
        if (v7)
        {
          uint64_t v48 = 0;
          uint64_t v25 = a5;
          uint64_t v12 = v49;
          int v21 = v13;
          goto LABEL_14;
        }
        unsigned int v56 = v57[0];
      }
      else
      {
        if ((v19 & 0x1000000000000000) != 0)
        {
          uint64_t v22 = (v20 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v23 = v19 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v22 = sub_24DCCA7E8();
        }
        unsigned int v24 = sub_24D7C3ECC(v22, v23, (void *(*)(uint64_t *__return_ptr))sub_24D7C402C);
        if (v7)
        {
          uint64_t v48 = 0;
          uint64_t v25 = a5;
          uint64_t v12 = v49;
          goto LABEL_14;
        }
        unsigned int v56 = v24;
      }
      uint64_t v25 = a5;
    }
    uint64_t v27 = v56;
    goto LABEL_31;
  }
  uint64_t v68 = 0;
  uint64_t v58 = v12;
  uint64_t v59 = v11;
  int v60 = v14;
  int v61 = v13;
  uint64_t v62 = 0;
  uint64_t v63 = 0;
  uint64_t v26 = fpfs_openfdbyhandle();
  if ((v26 & 0x80000000) == 0)
  {
    uint64_t v27 = v26;
    a5(v26);
LABEL_32:
    sub_24D40CB10(v27);
    return;
  }
  int v52 = a3;
  int v50 = v14;
  uint64_t v51 = v11;
  int v28 = MEMORY[0x253327160]();
  id v8 = (void *)sub_24D90CF14(v28, 0, 0, 0xAu);
  swift_willThrow();
  uint64_t v48 = 0;
  uint64_t v25 = a5;
  int v21 = v13;
LABEL_14:
  id v29 = v8;
  LODWORD(v64) = sub_24DCC8348();
  sub_24D4C5C60();
  char v30 = sub_24DCC86A8();

  if ((v30 & 1) != 0 && (v52 & 3) != 0 && (v53 & 2) != 0)
  {

    uint64_t v55 = &v48;
    MEMORY[0x270FA5388](v31);
    uint64_t v68 = 0;
    uint64_t v69 = 0;
    uint64_t v32 = v51;
    uint64_t v64 = v12;
    uint64_t v65 = v51;
    int v33 = v50;
    int v66 = v50;
    int v67 = v21;
    uint64_t v34 = sub_24D3F0BA0((uint64_t)v70, (uint64_t)v71, qword_26B199BD0);
    if (!v71[1])
    {
      uint64_t v58 = v12;
      uint64_t v59 = v32;
      int v60 = v33;
      int v61 = v21;
      uint64_t v62 = 0;
      uint64_t v63 = 0;
      uint64_t v44 = fpfs_openfdbyhandle();
      if ((v44 & 0x80000000) != 0)
      {
        int v46 = MEMORY[0x253327160]();
        sub_24D90CF14(v46, 0, 0, 0xAu);
        swift_willThrow();
        return;
      }
      uint64_t v27 = v44;
      goto LABEL_31;
    }
    uint64_t v35 = MEMORY[0x270FA5388](v34);
    if ((v37 & 0x1000000000000000) != 0 || !(v37 & 0x2000000000000000 | v36 & 0x1000000000000000))
    {
      uint64_t v47 = v48;
      sub_24DCCA718();
      if (!v47)
      {
        uint64_t v27 = v56;
        goto LABEL_31;
      }
    }
    else
    {
      MEMORY[0x270FA5388](v35);
      if ((v39 & 0x2000000000000000) != 0)
      {
        uint64_t v58 = v38;
        uint64_t v59 = v39 & 0xFFFFFFFFFFFFFFLL;
        uint64_t v68 = &v58;
        uint64_t v45 = v48;
        sub_24D7C1784(v57);
        if (!v45)
        {
          uint64_t v27 = v57[0];
          goto LABEL_31;
        }
      }
      else
      {
        if ((v38 & 0x1000000000000000) != 0)
        {
          uint64_t v40 = (v39 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v41 = v38 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v40 = sub_24DCCA7E8();
        }
        uint64_t v42 = v48;
        uint64_t v43 = sub_24D7C3ECC(v40, v41, (void *(*)(uint64_t *__return_ptr))sub_24D7C402C);
        if (!v42)
        {
          uint64_t v27 = (uint64_t)v43;
LABEL_31:
          v25(v27);
          goto LABEL_32;
        }
      }
    }
  }
}

uint64_t sub_24D7C1EAC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v29 = a7;
  uint64_t v30 = a8;
  int v27 = a5;
  int v28 = a6;
  int v26 = a4;
  uint64_t v25 = a9;
  uint64_t v13 = sub_24DCCA3F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v24 - v18;
  uint64_t v20 = *(void *)(a10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))((char *)&v24 - v18, 1, 1, a10);
  uint64_t v31 = a10;
  int v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  int v35 = v26;
  int v36 = v27;
  int v37 = v28;
  uint64_t v38 = v19;
  uint64_t v39 = v29;
  uint64_t v40 = v30;
  uint64_t v21 = v41;
  sub_24D7C2BC8((void (*)(int *__return_ptr, void **))sub_24D7C4044);
  if (v21) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
  uint64_t v22 = v25;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, a10);
  if (result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v22, v17, a10);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
  __break(1u);
  return result;
}

void sub_24D7C20E0(uint64_t a1, int a2)
{
  int v3 = v2;
  v36[2] = *MEMORY[0x263EF8340];
  v22[5] = a2;
  v22[6] = 2129920;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  id v4 = *(id *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  id v29 = *(id *)a1;
  uint64_t v30 = v5;
  int v6 = *(_DWORD *)(a1 + 16);
  int v7 = *(_DWORD *)(a1 + 20);
  int v31 = v6;
  int v32 = v7;
  sub_24D3F0BA0(a1 + 24, (uint64_t)v35, qword_26B199BD0);
  uint64_t v8 = sub_24D3F0BA0((uint64_t)v35, (uint64_t)v36, qword_26B199BD0);
  if (!v36[1])
  {
    unint64_t v23 = (unint64_t)v4;
    uint64_t v24 = v5;
    int v25 = v6;
    int v26 = v7;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v16 = fpfs_openfdbyhandle();
    if ((v16 & 0x80000000) == 0)
    {
      uint64_t i = v16;
      goto LABEL_16;
    }
    int v18 = MEMORY[0x253327160]();
    int v3 = (void *)sub_24D90CF14(v18, 0, 0, 0xAu);
    swift_willThrow();
    goto LABEL_14;
  }
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  if ((v11 & 0x1000000000000000) != 0 || !(v11 & 0x2000000000000000 | v10 & 0x1000000000000000)) {
    goto LABEL_23;
  }
  MEMORY[0x270FA5388](v9);
  if ((v13 & 0x2000000000000000) == 0)
  {
    if ((v12 & 0x1000000000000000) != 0)
    {
      uint64_t v14 = (v13 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v14 = sub_24DCCA7E8();
    }
    uint64_t v16 = (uint64_t)sub_24D7C3ECC(v14, v15, (void *(*)(uint64_t *__return_ptr))sub_24D7C402C);
    if (!v2)
    {
      uint64_t i = v16;
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  unint64_t v23 = v12;
  uint64_t v24 = v13 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v33 = (id *)&v23;
  uint64_t v16 = sub_24D7C1784(v22);
  if (v2)
  {
LABEL_14:
    id v19 = v3;
    LODWORD(v29) = sub_24DCC8348();
    sub_24D4C5C60();
    sub_24DCC86A8();

    return;
  }
  for (uint64_t i = v22[0]; ; uint64_t i = v21)
  {
LABEL_16:
    uint64_t v20 = MEMORY[0x270FA5388](v16);
    id v29 = 0;
    LOBYTE(v23) = 1;
    MEMORY[0x270FA5388](v20);
    sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D7C4180);
    if (v2)
    {

LABEL_18:
      sub_24D40CB10(i);
      return;
    }
    if (v29) {
      break;
    }
    if ((v23 & 1) == 0) {
      goto LABEL_18;
    }
    __break(1u);
LABEL_23:
    uint64_t v16 = sub_24DCCA718();
    if (v2) {
      goto LABEL_14;
    }
  }
  swift_willThrow();
  sub_24D40CB10(i);
}

void *sub_24D7C24BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v7)(uint64_t *__return_ptr, void *);
  uint64_t v8;
  uint64_t v9;
  void *result;
  void v11[2];
  uint64_t v12;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    uint64_t result = (void *)sub_24DCCA718();
    if (!v4) {
      return (void *)HIDWORD(v12);
    }
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    if ((v6 & 0x2000000000000000) != 0)
    {
      v11[0] = v5;
      v11[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      uint64_t result = v7(&v12, v11);
      if (!v4) {
        return (void *)v12;
      }
    }
    else
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = v5 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = sub_24DCCA7E8();
      }
      return sub_24D7C3ECC(v8, v9, (void *(*)(uint64_t *__return_ptr))sub_24D7C402C);
    }
  }
  return result;
}

void sub_24D7C25D0(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void (*v8)(long long *__return_ptr, void *);
  uint64_t v9;
  long long v10;
  long long v11;
  uint64_t v12;
  long long v13;
  void v14[2];
  long long v15;
  unsigned char v16[24];
  _OWORD v17[2];
  uint64_t v18;

  if ((a3 & 0x1000000000000000) != 0 || !(a3 & 0x2000000000000000 | a2 & 0x1000000000000000))
  {
    sub_24DCCA718();
    if (!v4) {
      goto LABEL_11;
    }
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    if ((v7 & 0x2000000000000000) != 0)
    {
      v14[0] = v6;
      v14[1] = v7 & 0xFFFFFFFFFFFFFFLL;
      v8(&v11, v14);
      if (v4) {
        return;
      }
      uint64_t v15 = v11;
      *(void *)uint64_t v16 = v12;
      *(_OWORD *)&v16[8] = v13;
      goto LABEL_11;
    }
    if ((v6 & 0x1000000000000000) == 0) {
      sub_24DCCA7E8();
    }
    sub_24D7C3F28((void (*)(void))sub_24D7C40B0, (uint64_t)v17);
    if (!v4)
    {
      uint64_t v15 = v17[0];
      *(_OWORD *)uint64_t v16 = v17[1];
      *(void *)&v16[16] = v18;
LABEL_11:
      uint64_t v9 = *(void *)v16;
      uint64_t v10 = *(_OWORD *)&v16[8];
      *(_OWORD *)a4 = v15;
      *(void *)(a4 + 16) = v9;
      *(_OWORD *)(a4 + 24) = v10;
    }
  }
}

uint64_t sub_24D7C2728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, _DWORD *a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = a3;
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a6;
  v8[3] = a2;
  v8[4] = a4;
  v8[5] = a5;
  v8[6] = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24D7C4338;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_24D7C4358;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  id aBlock[2] = sub_24DBA9C30;
  aBlock[3] = &block_descriptor_27;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  int v11 = fpfs_openat();
  swift_release();
  _Block_release(v10);
  swift_release();
  _DWORD *v15 = v11;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D7C28E4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v17 = a2;
  uint64_t v18 = a5;
  uint64_t v9 = sub_24DCC8408();
  v16[1] = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_24DCCA3F8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v16 - v13;
  a3(a1);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a6 - 8) + 56))(v14, 0, 1, a6);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v17, v14, v11);
  return 0;
}

void sub_24D7C2BC8(void (*a1)(int *__return_ptr, void **))
{
  uint64_t v3 = sub_24DCC8408();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12[-2] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = 0;
  a1(&v13, &v14);
  if (v1)
  {
    uint64_t v7 = v14;
LABEL_3:

    return;
  }
  if (v14)
  {
    swift_willThrow();
    return;
  }
  if (v13 < 0)
  {
    uint64_t v8 = MEMORY[0x253327160]();
    if (!v8)
    {
      MEMORY[0x270FA5388](v8);
      *(&v11 - 2) = (uint64_t)&v13;
      sub_24DA89268((uint64_t (*)(uint64_t))sub_24D7C4320, (uint64_t)(&v11 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x253327160]() == 9939393)
    {
      sub_24D5FBFBC((uint64_t)v12);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
      sub_24D7C42C4();
      swift_allocError();
      sub_24D3F0BA0((uint64_t)v12, v9, (uint64_t *)&unk_26B192A40);
LABEL_16:
      swift_willThrow();
      uint64_t v7 = v14;
      goto LABEL_3;
    }
    if (MEMORY[0x253327160]() != 9939394)
    {
      MEMORY[0x253327160]();
      uint64_t v10 = sub_24DCC9098();
      if ((v10 & 0x100000000) != 0) {
        v12[0] = 22;
      }
      else {
        v12[0] = v10;
      }
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D5EFB20();
      sub_24DCC8808();
      sub_24DCC83E8();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      goto LABEL_16;
    }
    objc_msgSend(self, sel_fp_errorForDataProtectionClass_, 2);
    swift_willThrow();
  }
}

void sub_24D7C2E5C(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1);
  sub_24D7C2BC8((void (*)(int *__return_ptr, void **))sub_24D7C4088);
  if (v2)
  {
    uint64_t v4 = sub_24DCCA3F8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a2, v4);
  }
}

uint64_t sub_24D7C2F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _DWORD *a6@<X8>)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D7C4114;
  *(void *)(v13 + 24) = v12;
  v17[4] = sub_24D7C4134;
  v17[5] = v13;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  void v17[2] = sub_24D7C3388;
  v17[3] = &block_descriptor_14;
  uint64_t v14 = _Block_copy(v17);
  swift_retain();
  swift_release();
  int v15 = fpfs_fopendir();
  _Block_release(v14);
  swift_release();
  *a6 = v15;
  LOBYTE(a6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D7C30DC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a2;
  uint64_t v16 = a5;
  uint64_t v7 = sub_24DCC8408();
  v14[1] = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_24DCCA3F8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v14 - v11;
  a3(a1);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v15, v12, v9);
  return 0;
}

uint64_t sub_24D7C3388(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

void sub_24D7C33B4(int a1@<W0>, uint64_t *a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v32 = a4;
  uint64_t v31 = a5;
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v9 = sub_24DCC8408();
  uint64_t v30 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24DCC9078();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a2;
  if (*a2)
  {
LABEL_2:
    uint64_t v35 = v17;
    int v36 = 0;
    uint64_t v18 = fpfs_supports_long_paths();
    uint64_t v19 = 1025;
    if (v18) {
      uint64_t v19 = 0;
    }
    uint64_t v34 = v19;
    MEMORY[0x270FA5388](v18);
    *((_DWORD *)&v29 - 8) = a3;
    *(&v29 - 3) = (uint64_t)&v35;
    *(&v29 - 2) = (uint64_t)&v36;
    *(&v29 - 1) = (uint64_t)&v34;
    sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D7C43A4);
    uint64_t v20 = v36;
    if (!v5)
    {
      if (!v36)
      {
        id v25 = (id)fpfs_current_or_default_log();
        sub_24DCC9088();
        int v26 = sub_24DCC9068();
        os_log_type_t v27 = sub_24DCCA138();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v28 = 0;
          _os_log_impl(&dword_24D3D0000, v26, v27, "fpfs_fetch_url_for_handle: unexpected nil buffer", v28, 2u);
          MEMORY[0x25332B030](v28, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
        int v33 = 83;
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24D5EFB20();
        sub_24DCC8808();
        sub_24DCC83E8();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
        swift_willThrow();
        unint64_t v23 = (char *)v36;
        goto LABEL_8;
      }
      id v21 = objc_msgSend(self, sel_defaultManager);
      id v22 = objc_msgSend(v21, sel_stringWithFileSystemRepresentation_length_, v20, strlen(v20));

      sub_24DCC97E8();
      sub_24DCC88E8();
      swift_bridgeObjectRelease();
    }
    unint64_t v23 = (char *)v20;
LABEL_8:
    free(v23);
    return;
  }
  int v36 = 0;
  uint64_t v37 = 0;
  int v39 = 0;
  uint64_t v38 = 0;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  MEMORY[0x270FA5388](v14);
  *((_DWORD *)&v29 - 4) = a1;
  *(&v29 - 1) = v24;
  sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D5EFAE8);
  if (!v5)
  {
    uint64_t v17 = v37;
    goto LABEL_2;
  }
}

uint64_t sub_24D7C37F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  void aBlock[6] = a1;
  int v19 = a2;
  char v20 = BYTE4(a2) & 1;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = a8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D7C4238;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_24D3E1450;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  id aBlock[2] = sub_24D3E1424;
  aBlock[3] = &block_descriptor_18;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v15 = fpfs_fgetfileattrs();
  _Block_release(v14);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return v15;
}

uint64_t sub_24D7C39B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v3 = a3;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v14 = a3;
      sub_24D3F9C18(a1, a2);
      if (!sub_24DCC84D8())
      {
        sub_24DCC84E8();
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x24D7C3CC8);
      }
      if (__OFSUB__((int)a1, sub_24DCC84F8()))
      {
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
      }
      sub_24DCC84E8();
      sub_24DCC9898();
      int v6 = fpfs_fsetxattr();
      swift_release();
      uint64_t result = sub_24D400DCC(a1, a2);
LABEL_14:
      uint64_t v3 = v14;
LABEL_15:
      _DWORD *v3 = v6;
      return result;
    case 2uLL:
      uint64_t v14 = a3;
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      uint64_t v9 = sub_24DCC84D8();
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = sub_24DCC84F8();
        if (__OFSUB__(v8, v11)) {
          goto LABEL_19;
        }
        uint64_t v12 = v10 + v8 - v11;
      }
      else
      {
        uint64_t v12 = 0;
      }
      if (__OFSUB__(v13, v8)) {
        goto LABEL_17;
      }
      sub_24DCC84E8();
      if (v12)
      {
        sub_24DCC9898();
        int v6 = fpfs_fsetxattr();
        swift_release();
        swift_release();
        uint64_t result = swift_release();
        goto LABEL_14;
      }
      goto LABEL_21;
    default:
      sub_24DCC9898();
      int v6 = fpfs_fsetxattr();
      uint64_t result = swift_release();
      goto LABEL_15;
  }
}

uint64_t sub_24D7C3CD8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (*(_DWORD *)(result + 20) == *(_DWORD *)(a4 + 20))
  {
    uint64_t v5 = result;
    if (*(void *)result == *(void *)a4)
    {
      __int16 v7 = *(_WORD *)(result + 44);
      char v8 = *(unsigned char *)(result + 46);
      __int16 v9 = *(_WORD *)(result + 48);
      char v10 = *(unsigned char *)(result + 136);
      int v11 = *(_DWORD *)(result + 144);
      uint64_t v12 = *(void *)(result + 200);
      uint64_t v13 = *(void *)(result + 216);
      uint64_t v14 = *(void *)(result + 232);
      uint64_t v15 = *(void *)(result + 240);
      int v16 = *(_DWORD *)(result + 256);
      char v17 = *(unsigned char *)(v5 + 224) & 1;
      char v18 = *(unsigned char *)(v5 + 225) & 1;
      int v23 = *(_DWORD *)(v5 + 40);
      char v25 = v8;
      __int16 v24 = v7;
      __int16 v26 = v9;
      long long v19 = *(_OWORD *)(v5 + 72);
      long long v27 = *(_OWORD *)(v5 + 56);
      long long v28 = v19;
      long long v20 = *(_OWORD *)(v5 + 104);
      long long v29 = *(_OWORD *)(v5 + 88);
      long long v30 = v20;
      long long v31 = *(_OWORD *)(v5 + 120);
      char v32 = v10;
      int v33 = v11;
      long long v21 = *(_OWORD *)(v5 + 168);
      long long v34 = *(_OWORD *)(v5 + 152);
      long long v35 = v21;
      long long v36 = *(_OWORD *)(v5 + 184);
      uint64_t v37 = v12;
      uint64_t v38 = *(void *)(v5 + 208);
      uint64_t v39 = v13;
      char v40 = v17;
      char v41 = v18;
      uint64_t v42 = v14;
      uint64_t v43 = v15;
      uint64_t v44 = *(void *)(v5 + 248);
      int v45 = v16;
      uint64_t result = sub_24D7C4280((uint64_t)&v23);
      if (result)
      {
        uint64_t result = sub_24D405828(v15);
        if (a5)
        {
          if (!(_BYTE)result) {
            return result;
          }
          if (result == 1)
          {
            if (a5 < 4u)
            {
              uint64_t v22 = 2048;
LABEL_15:
              *(void *)(v5 + 240) = v22;
              MEMORY[0x270FA5388](result);
              return sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D7C428C);
            }
          }
          else if (result > a5)
          {
            a5 = result;
          }
          if (a5 == result) {
            return result;
          }
          uint64_t v22 = qword_24DCDC480[(char)a5 - 2];
          goto LABEL_15;
        }
        if (!(_BYTE)result) {
          return result;
        }
        uint64_t v22 = 0;
        goto LABEL_15;
      }
    }
  }
  return result;
}

void *sub_24D7C3ECC(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    uint64_t result = a3(&v5);
    if (!v3) {
      return (void *)v5;
    }
  }
  else
  {
    uint64_t result = ((void *(*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&v5 + 4), 0, 0);
    if (!v3) {
      return (void *)HIDWORD(v5);
    }
  }
  return result;
}

double sub_24D7C3F28@<D0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  a1();
  if (!v2)
  {
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
    *(_OWORD *)(a2 + 24) = v7;
  }
  return result;
}

void *sub_24D7C3F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *(*a3)(uint64_t *__return_ptr, uint64_t)@<X2>, _DWORD *a4@<X8>)
{
  *(void *)(a2 + 24) = a1;
  double result = a3(&v7, a2);
  if (!v4) {
    *a4 = v7;
  }
  return result;
}

void *sub_24D7C3FD0@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X2>, _DWORD *a2@<X8>)
{
  double result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_24D7C4014@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24D7C41D8(a1, a2);
}

void *sub_24D7C402C@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D7C4360(a1);
}

uint64_t sub_24D7C4044@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24D7C2728(a1, v2[8], a2, v2[9], v2[10], v2[2]);
}

uint64_t sub_24D7C4088@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24D7C2F54(a1, v2[4], v2[5], v2[6], v2[2], a2);
}

double sub_24D7C40B0@<D0>(uint64_t a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v6);
  if (!v2)
  {
    double result = v7;
    long long v5 = v8;
    *(_OWORD *)a1 = v6;
    *(double *)(a1 + 16) = result;
    *(_OWORD *)(a1 + 24) = v5;
  }
  return result;
}

uint64_t sub_24D7C4104()
{
  return swift_deallocObject();
}

uint64_t sub_24D7C4114(uint64_t a1)
{
  return sub_24D7C30DC(a1, *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_24D7C4124()
{
  return swift_deallocObject();
}

uint64_t sub_24D7C4134()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24D7C415C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D7C3CD8(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24));
}

uint64_t sub_24D7C4180@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v4 = 0x100000000;
  if (!*(unsigned char *)(v1 + 28)) {
    uint64_t v4 = 0;
  }
  uint64_t result = sub_24D7C37F8(*(void *)(v1 + 16), v4 | *(unsigned int *)(v1 + 24), *(unsigned int *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
  if (!v2) {
    *a1 = result;
  }
  return result;
}

void *sub_24D7C41D8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  void *(*v6)(uint64_t *__return_ptr, uint64_t);
  void *result;
  uint64_t v8;

  uint64_t v5 = *(void *)(v2 + 16);
  long long v6 = *(void *(**)(uint64_t *__return_ptr, uint64_t))(v2 + 24);
  *(void *)(v5 + 24) = a1;
  uint64_t result = v6(&v8, v5);
  if (!v3) {
    *a2 = v8;
  }
  return result;
}

uint64_t sub_24D7C4228()
{
  return swift_deallocObject();
}

uint64_t sub_24D7C4238(uint64_t a1)
{
  return sub_24D9C0200(a1, *(unsigned char **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v1 + 24), *(void *)(v1 + 32), a1, *(void ***)(v1 + 40));
}

uint64_t sub_24D7C4270()
{
  return swift_deallocObject();
}

uint64_t sub_24D7C4280(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 4) >> 5) & 1;
}

uint64_t sub_24D7C428C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = fpfs_set_evictable();
  *a1 = result;
  return result;
}

unint64_t sub_24D7C42C4()
{
  unint64_t result = qword_26B192A30;
  if (!qword_26B192A30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B192A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B192A30);
  }
  return result;
}

uint64_t sub_24D7C4320()
{
  return sub_24DBB1070();
}

uint64_t sub_24D7C4328()
{
  return swift_deallocObject();
}

uint64_t sub_24D7C4338(uint64_t a1)
{
  return sub_24D7C28E4(a1, *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16));
}

uint64_t sub_24D7C4348()
{
  return swift_deallocObject();
}

uint64_t sub_24D7C4358(uint64_t a1)
{
  return sub_24DBA9C08(a1, *(uint64_t (**)(void))(v1 + 16));
}

void *sub_24D7C4360@<X0>(_DWORD *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_24D7C43A4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = fpfs_fsgetpath();
  *a1 = result;
  return result;
}

void sub_24D7C43F4(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = &selRef_createIndexerWithExtension_enabled_error_;
  id v5 = objc_msgSend(v1, sel_itemVersion);
  if (v5)
  {
    long long v6 = v5;
    id v7 = objc_msgSend(v5, sel_contentVersion);

    uint64_t v8 = sub_24DCC8B68();
    unint64_t v51 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v51 = 0xC000000000000000;
  }
  id v10 = objc_msgSend(v2, sel_itemVersion);
  if (v10)
  {
    int v11 = v10;
    id v12 = objc_msgSend(v10, sel_equivalentContentVersions);

    uint64_t v13 = sub_24DCC9C28();
    int64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v48 = v2;
      uint64_t v49 = v8;
      uint64_t v52 = MEMORY[0x263F8EE78];
      sub_24D7C6E90(0, v14, 0);
      uint64_t v15 = v52;
      int v16 = (unint64_t *)(v13 + 40);
      do
      {
        uint64_t v17 = *(v16 - 1);
        unint64_t v18 = *v16;
        sub_24D3F9C18(v17, *v16);
        unint64_t v20 = *(void *)(v52 + 16);
        unint64_t v19 = *(void *)(v52 + 24);
        if (v20 >= v19 >> 1) {
          sub_24D7C6E90(v19 > 1, v20 + 1, 1);
        }
        v16 += 2;
        *(void *)(v52 + 16) = v20 + 1;
        unint64_t v21 = v52 + 16 * v20;
        *(void *)(v21 + 32) = v17;
        *(void *)(v21 + 40) = v18;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      uint64_t v2 = v48;
      uint64_t v8 = v49;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = MEMORY[0x263F8EE78];
    }
    uint64_t v4 = &selRef_createIndexerWithExtension_enabled_error_;
  }
  else
  {
    uint64_t v15 = 0;
  }
  id v22 = objc_msgSend(v2, sel_itemVersion);
  if (v22)
  {
    int v23 = v22;
    id v24 = objc_msgSend(v22, sel_metadataVersion);

    uint64_t v25 = sub_24DCC8B68();
    unint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    unint64_t v27 = 0xC000000000000000;
  }
  id v28 = objc_msgSend(v2, sel_itemVersion);
  if (v28)
  {
    long long v29 = v28;
    unint64_t v46 = v27;
    uint64_t v47 = v25;
    id v30 = objc_msgSend(v28, sel_equivalentMetadataVersions);

    uint64_t v31 = sub_24DCC9C28();
    int64_t v32 = *(void *)(v31 + 16);
    if (v32)
    {
      uint64_t v50 = v8;
      int v45 = a1;
      uint64_t v53 = MEMORY[0x263F8EE78];
      sub_24D7C6E90(0, v32, 0);
      uint64_t v33 = v53;
      long long v34 = (unint64_t *)(v31 + 40);
      do
      {
        uint64_t v36 = *(v34 - 1);
        unint64_t v35 = *v34;
        sub_24D3F9C18(v36, *v34);
        unint64_t v38 = *(void *)(v53 + 16);
        unint64_t v37 = *(void *)(v53 + 24);
        if (v38 >= v37 >> 1) {
          sub_24D7C6E90(v37 > 1, v38 + 1, 1);
        }
        v34 += 2;
        *(void *)(v53 + 16) = v38 + 1;
        unint64_t v39 = v53 + 16 * v38;
        *(void *)(v39 + 32) = v36;
        *(void *)(v39 + 40) = v35;
        --v32;
      }
      while (v32);
      swift_bridgeObjectRelease();
      a1 = v45;
      uint64_t v8 = v50;
      uint64_t v4 = &selRef_createIndexerWithExtension_enabled_error_;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = MEMORY[0x263F8EE78];
    }
    unint64_t v27 = v46;
    uint64_t v25 = v47;
  }
  else
  {
    uint64_t v33 = 0;
  }
  id v40 = [v2 v4[415]];
  char v41 = v40;
  if (!v40) {
    goto LABEL_31;
  }
  id v42 = objc_msgSend(v40, sel_lastEditorDeviceName);

  if (!v42)
  {
    char v41 = 0;
LABEL_31:
    uint64_t v44 = 0;
    goto LABEL_32;
  }
  char v41 = (void *)sub_24DCC97E8();
  uint64_t v44 = v43;

LABEL_32:
  *a1 = v8;
  a1[1] = v51;
  a1[2] = v15;
  a1[3] = v25;
  a1[4] = v27;
  a1[5] = v33;
  a1[6] = (uint64_t)v41;
  a1[7] = v44;
}

id sub_24D7C479C()
{
  id v1 = objc_msgSend(v0, sel_itemID);
  id v2 = objc_msgSend(v1, sel_identifier);

  uint64_t v3 = sub_24DCC97E8();
  uint64_t v5 = v4;
  if (v3 == sub_24DCC97E8() && v5 == v6)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  char v8 = sub_24DCCAE28();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_11:
    id v11 = objc_msgSend(v0, sel_itemID);
    id v12 = objc_msgSend(v11, sel_identifier);
LABEL_12:
    id v13 = v12;

    return v13;
  }
  if (!objc_msgSend(v0, sel_isTrashed))
  {
    id v11 = objc_msgSend(v0, sel_parentItemID);
    id v12 = objc_msgSend(v11, sel_identifier);
    goto LABEL_12;
  }
  unint64_t v9 = (void *)*MEMORY[0x263F053F8];

  return v9;
}

id sub_24D7C4938(uint64_t a1, void *a2, char a3)
{
  unint64_t v38 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB8);
  MEMORY[0x270FA5388](v5);
  id v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)a1;
  int v9 = *(unsigned __int8 *)(a1 + 8);
  id v10 = sub_24D4085F0(*(void *)a1, *(unsigned char *)(a1 + 8), a3);
  BOOL v11 = v9 == 2 && v8 == 0;
  id v12 = (id *)MEMORY[0x263F053F0];
  if (v11) {
    id v13 = (id)*MEMORY[0x263F053F0];
  }
  else {
    id v13 = 0;
  }
  uint64_t v14 = *(void *)(a1 + 16);
  int v15 = *(unsigned __int8 *)(a1 + 24);
  id v39 = v13;
  id v16 = sub_24D4085F0(v14, v15, a3 & 1);
  uint64_t v17 = v10;
  if (v15 == 2 && v14 == 0) {
    id v19 = *v12;
  }
  else {
    id v19 = 0;
  }
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v20 = *(void *)(a1 + 40);
  uint64_t v22 = (uint64_t)&v7[*(int *)(v5 + 40)];
  int v23 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for VFSItem(0) + 28));
  sub_24D409F80((uint64_t)v23, v22);
  *(void *)id v7 = v16;
  *((void *)v7 + 1) = v21;
  *((void *)v7 + 2) = v20;
  uint64_t v24 = qword_26B193850;
  id v37 = v16;
  id v25 = v19;
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  unint64_t v26 = v17;
  unint64_t v27 = v38;
  id v28 = sub_24D3FD758(v17, v38, (id *)v7, qword_26B1A2368, 0);
  sub_24D415F74((uint64_t)v7, &qword_26B193EB8);
  long long v29 = v39;
  objc_msgSend(v28, sel_setFormerIdentifier_, v39);

  objc_msgSend(v28, sel_setParentFormerIdentifier_, v25);
  int v30 = *v23;
  objc_msgSend(v28, sel_isExcludedFromSync);
  int v31 = *((unsigned __int16 *)v23 + 5);
  unsigned int v32 = objc_msgSend(v27, sel_supportsSyncingTrash);
  if ((*MEMORY[0x263F053D8] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v33 = *MEMORY[0x263F053D8] | 0x2CLL;
    if (v30 == 1)
    {
      long long v34 = v37;
      if ((~v31 & 0x140) != 0)
      {
LABEL_24:
        if ((v31 & 0x80) == 0) {
          goto LABEL_26;
        }
        goto LABEL_25;
      }
    }
    else
    {
      long long v34 = v37;
      if ((v31 & 0x100) == 0) {
        goto LABEL_24;
      }
    }
LABEL_23:
    v33 |= 1uLL;
    goto LABEL_24;
  }
  if (v30 == 1)
  {
    long long v34 = v37;
    if ((~v31 & 0x140) == 0)
    {
LABEL_21:
      uint64_t v33 = 44;
      goto LABEL_23;
    }
  }
  else
  {
    long long v34 = v37;
    if ((v31 & 0x100) != 0) {
      goto LABEL_21;
    }
  }
  uint64_t v33 = 44;
  if ((v31 & 0x80) == 0)
  {
    if ((v32 & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_25:
  v33 |= 2uLL;
LABEL_26:
  if (v32) {
LABEL_27:
  }
    v33 |= 0x10uLL;
LABEL_28:
  objc_msgSend(v28, sel_setCapabilities_, v33);

  return v28;
}

id sub_24D7C4C24(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB8);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = sub_24D4085F0(*(void *)a1, *(unsigned char *)(a1 + 8), a3);
  id v11 = sub_24D4085F0(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24), a3);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = (uint64_t)&v9[*(int *)(v7 + 48)];
  int v15 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for VFSItem(0) + 28));
  sub_24D409F80((uint64_t)v15, v14);
  *(void *)int v9 = v11;
  *((void *)v9 + 1) = v12;
  *((void *)v9 + 2) = v13;
  uint64_t v16 = qword_26B193850;
  id v17 = v11;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  id v18 = sub_24D3FD758(v10, a2, (id *)v9, qword_26B1A2368, 0);
  sub_24D415F74((uint64_t)v9, &qword_26B193EB8);
  objc_msgSend(v18, sel_setFormerIdentifier_, 0);
  objc_msgSend(v18, sel_setParentFormerIdentifier_, 0);
  int v19 = *v15;
  objc_msgSend(v18, sel_isExcludedFromSync);
  int v20 = *((unsigned __int16 *)v15 + 5);
  unsigned int v21 = objc_msgSend(a2, sel_supportsSyncingTrash);
  if ((*MEMORY[0x263F053D8] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v22 = *MEMORY[0x263F053D8] | 0x2CLL;
    if (v19 == 1)
    {
      if ((~v20 & 0x140) != 0)
      {
LABEL_12:
        if ((v20 & 0x80) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v20 & 0x100) == 0)
    {
      goto LABEL_12;
    }
LABEL_11:
    v22 |= 1uLL;
    goto LABEL_12;
  }
  if (v19 == 1)
  {
    if ((~v20 & 0x140) == 0)
    {
LABEL_9:
      uint64_t v22 = 44;
      goto LABEL_11;
    }
  }
  else if ((v20 & 0x100) != 0)
  {
    goto LABEL_9;
  }
  uint64_t v22 = 44;
  if ((v20 & 0x80) == 0)
  {
    if ((v21 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_13:
  v22 |= 2uLL;
LABEL_14:
  if (v21) {
LABEL_15:
  }
    v22 |= 0x10uLL;
LABEL_16:
  objc_msgSend(v18, sel_setCapabilities_, v22);

  return v18;
}

id sub_24D7C4E88(uint64_t a1, void *a2, char a3)
{
  return sub_24D7C4EA0(a1, a2, a3);
}

id sub_24D7C4EA0(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB8);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = sub_24D4085F0(*(void *)a1, *(unsigned char *)(a1 + 8), a3);
  id v11 = sub_24D4085F0(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24), a3);
  uint64_t v12 = *(void *)(a1 + 128);
  uint64_t v13 = *(void *)(a1 + 136);
  uint64_t v14 = (uint64_t)&v9[*(int *)(v7 + 48)];
  int v15 = (unsigned __int8 *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410) + 48));
  sub_24D409F80((uint64_t)v15, v14);
  *(void *)int v9 = v11;
  *((void *)v9 + 1) = v12;
  *((void *)v9 + 2) = v13;
  uint64_t v16 = qword_26B193850;
  id v17 = v11;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  id v18 = sub_24D3FD758(v10, a2, (id *)v9, qword_26B1A2368, 0);
  sub_24D415F74((uint64_t)v9, &qword_26B193EB8);
  objc_msgSend(v18, sel_setFormerIdentifier_, 0);
  objc_msgSend(v18, sel_setParentFormerIdentifier_, 0);
  int v19 = *v15;
  objc_msgSend(v18, sel_isExcludedFromSync);
  int v20 = *((unsigned __int16 *)v15 + 5);
  unsigned int v21 = objc_msgSend(a2, sel_supportsSyncingTrash);
  if ((*MEMORY[0x263F053D8] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v22 = *MEMORY[0x263F053D8] | 0x2CLL;
    if (v19 == 1)
    {
      if ((~v20 & 0x140) != 0)
      {
LABEL_12:
        if ((v20 & 0x80) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v20 & 0x100) == 0)
    {
      goto LABEL_12;
    }
LABEL_11:
    v22 |= 1uLL;
    goto LABEL_12;
  }
  if (v19 == 1)
  {
    if ((~v20 & 0x140) == 0)
    {
LABEL_9:
      uint64_t v22 = 44;
      goto LABEL_11;
    }
  }
  else if ((v20 & 0x100) != 0)
  {
    goto LABEL_9;
  }
  uint64_t v22 = 44;
  if ((v20 & 0x80) == 0)
  {
    if ((v21 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_13:
  v22 |= 2uLL;
LABEL_14:
  if (v21) {
LABEL_15:
  }
    v22 |= 0x10uLL;
LABEL_16:
  objc_msgSend(v18, sel_setCapabilities_, v22);

  return v18;
}

id sub_24D7C5108(uint64_t a1, void *a2, char a3)
{
  return sub_24D7C5120(a1, a2, a3);
}

id sub_24D7C5120(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB8);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(id *)a1;
  id v11 = sub_24D7C8F00(v10, a3);

  id v12 = *(id *)(a1 + 8);
  id v13 = sub_24D7C8F00(v12, a3);

  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 88);
  uint64_t v16 = (uint64_t)&v9[*(int *)(v7 + 48)];
  id v17 = (unsigned __int8 *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F50) + 48));
  sub_24D409F80((uint64_t)v17, v16);
  *(void *)int v9 = v13;
  *((void *)v9 + 1) = v14;
  *((void *)v9 + 2) = v15;
  uint64_t v18 = qword_26B193850;
  id v19 = v13;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  id v20 = sub_24D3FD758(v11, a2, (id *)v9, qword_26B1A2368, 0);
  sub_24D415F74((uint64_t)v9, &qword_26B193EB8);
  objc_msgSend(v20, sel_setFormerIdentifier_, 0);
  objc_msgSend(v20, sel_setParentFormerIdentifier_, 0);
  int v21 = *v17;
  objc_msgSend(v20, sel_isExcludedFromSync);
  int v22 = *((unsigned __int16 *)v17 + 5);
  unsigned int v23 = objc_msgSend(a2, sel_supportsSyncingTrash);
  if ((*MEMORY[0x263F053D8] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v24 = *MEMORY[0x263F053D8] | 0x2CLL;
    if (v21 == 1)
    {
      if ((~v22 & 0x140) != 0)
      {
LABEL_12:
        if ((v22 & 0x80) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v22 & 0x100) == 0)
    {
      goto LABEL_12;
    }
LABEL_11:
    v24 |= 1uLL;
    goto LABEL_12;
  }
  if (v21 == 1)
  {
    if ((~v22 & 0x140) == 0)
    {
LABEL_9:
      uint64_t v24 = 44;
      goto LABEL_11;
    }
  }
  else if ((v22 & 0x100) != 0)
  {
    goto LABEL_9;
  }
  uint64_t v24 = 44;
  if ((v22 & 0x80) == 0)
  {
    if ((v23 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_13:
  v24 |= 2uLL;
LABEL_14:
  if (v23) {
LABEL_15:
  }
    v24 |= 0x10uLL;
LABEL_16:
  objc_msgSend(v20, sel_setCapabilities_, v24);

  return v20;
}

id sub_24D7C5398(uint64_t a1, void *a2, char a3)
{
  return sub_24D7C53B0(a1, a2, a3);
}

id sub_24D7C53B0(uint64_t a1, void *a2, char a3)
{
  uint64_t v33 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB8);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *(id *)a1;
  id v32 = sub_24D7C8F00(v9, a3);

  id v10 = *(void **)(a1 + 8);
  id v11 = v9;
  id v12 = v10;
  id v13 = sub_24D7C8F00(v12, a3);

  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 88);
  uint64_t v16 = (uint64_t)&v8[*(int *)(v6 + 48)];
  id v17 = (unsigned __int8 *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F50) + 48));
  sub_24D409F80((uint64_t)v17, v16);
  *(void *)uint64_t v8 = v13;
  *((void *)v8 + 1) = v15;
  *((void *)v8 + 2) = v14;
  uint64_t v18 = qword_26B193850;
  id v19 = v12;
  id v31 = v13;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  id v20 = v32;
  int v21 = v33;
  id v22 = sub_24D3FD758(v32, v33, (id *)v8, qword_26B1A2368, 0);
  sub_24D415F74((uint64_t)v8, &qword_26B193EB8);
  objc_msgSend(v22, sel_setFormerIdentifier_, v11);

  objc_msgSend(v22, sel_setParentFormerIdentifier_, v19);
  int v23 = *v17;
  objc_msgSend(v22, sel_isExcludedFromSync);
  int v24 = *((unsigned __int16 *)v17 + 5);
  unsigned int v25 = objc_msgSend(v21, sel_supportsSyncingTrash);
  uint64_t v26 = v20;
  if ((*MEMORY[0x263F053D8] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v27 = *MEMORY[0x263F053D8] | 0x2CLL;
    if (v23 == 1)
    {
      id v28 = v31;
      if ((~v24 & 0x140) != 0)
      {
LABEL_12:
        if ((v24 & 0x80) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else
    {
      id v28 = v31;
      if ((v24 & 0x100) == 0) {
        goto LABEL_12;
      }
    }
LABEL_11:
    v27 |= 1uLL;
    goto LABEL_12;
  }
  if (v23 == 1)
  {
    id v28 = v31;
    if ((~v24 & 0x140) == 0)
    {
LABEL_9:
      uint64_t v27 = 44;
      goto LABEL_11;
    }
  }
  else
  {
    id v28 = v31;
    if ((v24 & 0x100) != 0) {
      goto LABEL_9;
    }
  }
  uint64_t v27 = 44;
  if ((v24 & 0x80) == 0)
  {
    if ((v25 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_13:
  v27 |= 2uLL;
LABEL_14:
  if (v25) {
LABEL_15:
  }
    v27 |= 0x10uLL;
LABEL_16:
  objc_msgSend(v22, sel_setCapabilities_, v27);

  return v22;
}

id sub_24D7C5660(void *a1, void *a2, char a3)
{
  unint64_t v46 = a2;
  uint64_t v5 = type metadata accessor for ItemMetadata();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v9 = (unsigned __int8 *)&v37 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB8);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(a1, sel_itemID);
  id v15 = objc_msgSend(v14, sel_identifier);

  id v38 = sub_24D7C8F00(v15, a3);
  id v16 = objc_msgSend(a1, sel_itemID);

  id v17 = sub_24D7C479C();
  id v18 = sub_24D7C8F00(v17, a3);

  id v19 = v18;
  id v20 = objc_msgSend(a1, sel_filename);
  uint64_t v21 = sub_24DCC97E8();
  uint64_t v23 = v22;

  uint64_t v44 = v21;
  uint64_t v45 = v23;
  uint64_t v42 = 58;
  unint64_t v43 = 0xE100000000000000;
  uint64_t v40 = 47;
  unint64_t v41 = 0xE100000000000000;
  sub_24D3F0EB8();
  uint64_t v24 = sub_24DCCA478();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  sub_24D3F9CA0((uint64_t)&v13[*(int *)(v11 + 48)]);
  id v37 = v19;
  *(void *)id v13 = v19;
  *((void *)v13 + 1) = v24;
  *((void *)v13 + 2) = v26;
  if (qword_26B193850 != -1) {
    swift_once();
  }
  uint64_t v27 = v38;
  id v28 = v46;
  id v29 = sub_24D3FD758(v38, v46, (id *)v13, qword_26B1A2368, 0);
  sub_24D415F74((uint64_t)v13, &qword_26B193EB8);
  objc_msgSend(v29, sel_setFormerIdentifier_, 0);
  objc_msgSend(v29, sel_setParentFormerIdentifier_, 0);
  sub_24D3F9CA0((uint64_t)v9);
  int v30 = *v9;
  sub_24D409FE4((uint64_t)v9);
  objc_msgSend(v29, sel_isExcludedFromSync);
  uint64_t v31 = v39;
  sub_24D3F9CA0(v39);
  int v32 = *(unsigned __int16 *)(v31 + 10);
  sub_24D409FE4(v31);
  unsigned int v33 = objc_msgSend(v28, sel_supportsSyncingTrash);
  if ((*MEMORY[0x263F053D8] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t v34 = *MEMORY[0x263F053D8] | 0x2CLL;
    if (v30 == 1)
    {
      unint64_t v35 = v37;
      if ((~v32 & 0x140) != 0)
      {
LABEL_12:
        if ((v32 & 0x80) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else
    {
      unint64_t v35 = v37;
      if ((v32 & 0x100) == 0) {
        goto LABEL_12;
      }
    }
LABEL_11:
    v34 |= 1uLL;
    goto LABEL_12;
  }
  if (v30 == 1)
  {
    unint64_t v35 = v37;
    if ((~v32 & 0x140) == 0)
    {
LABEL_9:
      uint64_t v34 = 44;
      goto LABEL_11;
    }
  }
  else
  {
    unint64_t v35 = v37;
    if ((v32 & 0x100) != 0) {
      goto LABEL_9;
    }
  }
  uint64_t v34 = 44;
  if ((v32 & 0x80) == 0)
  {
    if ((v33 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_13:
  v34 |= 2uLL;
LABEL_14:
  if (v33) {
LABEL_15:
  }
    v34 |= 0x10uLL;
LABEL_16:
  objc_msgSend(v29, sel_setCapabilities_, v34, v37);

  return v29;
}

uint64_t sub_24D7C5A54@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192308);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v107 - v8;
  id v10 = objc_msgSend(v2, sel_ownerNameComponents);
  uint64_t v128 = a1;
  if (v10)
  {
    uint64_t v11 = v10;
    sub_24DCC8778();

    uint64_t v12 = sub_24DCC8788();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = sub_24DCC8788();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
  }
  id v129 = v2;
  id v14 = objc_msgSend(v2, sel_preformattedOwnerName);
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = sub_24DCC97E8();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  uint64_t v19 = sub_24D7C6538(v16, v18);
  uint64_t v126 = v20;
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v9, (uint64_t *)&unk_26B192308);
  id v21 = v129;
  id v22 = objc_msgSend(v129, sel_mostRecentEditorNameComponents);
  uint64_t v127 = v19;
  if (v22)
  {
    uint64_t v23 = v22;
    sub_24DCC8778();

    uint64_t v24 = sub_24DCC8788();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 0, 1, v24);
  }
  else
  {
    uint64_t v25 = sub_24DCC8788();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 1, 1, v25);
  }
  id v26 = objc_msgSend(v21, sel_preformattedMostRecentEditorName);
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = sub_24DCC97E8();
    uint64_t v30 = v29;
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v30 = 0;
  }
  uint64_t v31 = sub_24D7C6538(v28, v30);
  uint64_t v124 = v32;
  uint64_t v125 = v31;
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v7, (uint64_t *)&unk_26B192308);
  unsigned int v33 = objc_msgSend(v21, sel_decorations);
  if (v33)
  {
    type metadata accessor for NSFileProviderItemDecorationIdentifier(0);
    uint64_t v34 = sub_24DCC9C28();

    int64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      uint64_t v136 = (void *)MEMORY[0x263F8EE78];
      sub_24D3E4C28(0, v35, 0);
      uint64_t v36 = 0;
      unsigned int v33 = v136;
      do
      {
        uint64_t v37 = sub_24DCC97E8();
        uint64_t v39 = v38;
        uint64_t v136 = v33;
        unint64_t v41 = v33[2];
        unint64_t v40 = v33[3];
        if (v41 >= v40 >> 1)
        {
          sub_24D3E4C28(v40 > 1, v41 + 1, 1);
          unsigned int v33 = v136;
        }
        ++v36;
        void v33[2] = v41 + 1;
        uint64_t v42 = &v33[2 * v41];
        unsigned char v42[4] = v37;
        v42[5] = v39;
      }
      while (v35 != v36);
      swift_bridgeObjectRelease();
      id v21 = v129;
    }
    else
    {
      swift_bridgeObjectRelease();
      unsigned int v33 = 0;
    }
  }
  id v123 = v33;
  id v43 = objc_msgSend(v21, sel_userInfo);
  if (v43)
  {
    uint64_t v44 = v43;
    uint64_t v45 = sub_24DCC9578();

    if (*(void *)(v45 + 16))
    {
      id v46 = objc_allocWithZone(MEMORY[0x263F05568]);
      uint64_t v47 = (void *)sub_24DCC9558();
      swift_bridgeObjectRelease();
      id v48 = objc_msgSend(v46, sel_initWithUserInfo_, v47);

      id v49 = objc_msgSend(v48, sel_keys);
      uint64_t v122 = sub_24DCC9C28();

      id v50 = objc_msgSend(v48, sel_values);
      uint64_t v121 = sub_24DCC9C28();

      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v121 = 0;
  uint64_t v122 = 0;
LABEL_26:
  id v51 = objc_msgSend(v21, sel_conflictingVersions);
  if (!v51)
  {
    uint64_t v113 = 0;
    goto LABEL_44;
  }
  uint64_t v52 = v51;
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B194070);
  unint64_t v53 = sub_24DCC9C28();

  if (v53 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
    if (v54) {
      goto LABEL_29;
    }
LABEL_43:
    swift_bridgeObjectRelease();
    uint64_t v113 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_44;
  }
  uint64_t v54 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v54) {
    goto LABEL_43;
  }
LABEL_29:
  uint64_t v136 = (void *)MEMORY[0x263F8EE78];
  uint64_t result = sub_24D7C6EB0(0, v54 & ~(v54 >> 63), 0);
  if (v54 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v56 = 0;
  uint64_t v57 = v136;
  unint64_t v130 = v53 & 0xC000000000000001;
  uint64_t v131 = v54;
  id v132 = (void *)v53;
  do
  {
    uint64_t v58 = v57;
    if (v130) {
      id v59 = (id)MEMORY[0x253328820](v56, v53);
    }
    else {
      id v59 = *(id *)(v53 + 8 * v56 + 32);
    }
    int v60 = v59;
    id v61 = objc_msgSend(v59, sel_contentVersion);
    id v133 = (id)sub_24DCC8B68();
    uint64_t v63 = v62;

    id v64 = objc_msgSend(v60, sel_metadataVersion);
    uint64_t v65 = sub_24DCC8B68();
    uint64_t v67 = v66;

    id v68 = objc_msgSend(v60, sel_lastEditorDeviceName);
    if (v68)
    {
      uint64_t v69 = v68;
      uint64_t v70 = sub_24DCC97E8();
      uint64_t v72 = v71;
    }
    else
    {

      uint64_t v70 = 0;
      uint64_t v72 = 0;
    }
    uint64_t v57 = v58;
    uint64_t v136 = v58;
    unint64_t v73 = v58[2];
    unint64_t v74 = v57[3];
    if (v73 >= v74 >> 1)
    {
      sub_24D7C6EB0(v74 > 1, v73 + 1, 1);
      uint64_t v57 = v136;
    }
    ++v56;
    v57[2] = v73 + 1;
    uint64_t v75 = &v57[8 * v73];
    v75[4] = v133;
    v75[5] = v63;
    v75[6] = 0;
    v75[7] = v65;
    v75[8] = v67;
    v75[9] = 0;
    v75[10] = v70;
    v75[11] = v72;
    unint64_t v53 = (unint64_t)v132;
  }
  while (v131 != v56);
  uint64_t v113 = v57;
  swift_bridgeObjectRelease();
  id v21 = v129;
LABEL_44:
  id v133 = objc_msgSend(v21, sel_collaborationIdentifier);
  id v132 = objc_msgSend(v21, sel_capabilities);
  LODWORD(v131) = objc_msgSend(v21, sel_isUploading);
  LODWORD(v130) = objc_msgSend(v21, sel_isUploaded);
  id v129 = objc_msgSend(v21, sel_uploadingError);
  id v120 = objc_msgSend(v21, sel_downloadingError);
  unsigned int v119 = objc_msgSend(v21, sel_isShared);
  unsigned int v118 = objc_msgSend(v21, sel_isTopLevelSharedItem);
  unsigned int v117 = objc_msgSend(v21, sel_isSharedByCurrentUser);
  unsigned int v116 = objc_msgSend(v21, sel_fp_isLastModifiedByCurrentUser);
  id v76 = objc_msgSend(v21, sel_sharingPermissions);
  if (v76)
  {
    unint64_t v77 = v76;
    uint64_t v78 = sub_24DCC97E8();
    uint64_t v111 = v79;
    uint64_t v112 = v78;
  }
  else
  {
    uint64_t v111 = 0;
    uint64_t v112 = 0;
  }
  unsigned int v115 = objc_msgSend(v21, sel_isContainer);
  unsigned int v114 = objc_msgSend(v21, sel_isContainerPristine);
  id v80 = objc_msgSend(v21, sel_fp_appContainerBundleIdentifier);
  if (v80)
  {
    uint64_t v81 = v80;
    uint64_t v82 = sub_24DCC97E8();
    uint64_t v109 = v83;
    uint64_t v110 = v82;
  }
  else
  {
    uint64_t v109 = 0;
    uint64_t v110 = 0;
  }
  id v84 = objc_msgSend(v21, sel_cloudContainerIdentifier);
  if (v84)
  {
    id v85 = v84;
    uint64_t v108 = sub_24DCC97E8();
    uint64_t v87 = v86;
  }
  else
  {
    uint64_t v108 = 0;
    uint64_t v87 = 0;
  }
  id v88 = objc_msgSend(v21, sel_containerDisplayName);
  if (v88)
  {
    id v89 = v88;
    uint64_t v90 = sub_24DCC97E8();
    uint64_t v92 = v91;
  }
  else
  {
    uint64_t v90 = 0;
    uint64_t v92 = 0;
  }
  id v93 = objc_msgSend(v21, sel_fp_displayName);
  if (v93)
  {
    uint64_t v94 = v93;
    uint64_t v95 = sub_24DCC97E8();
    uint64_t v97 = v96;

    uint64_t v136 = (void *)v95;
    uint64_t v137 = v97;
    v170[0] = 58;
    v170[1] = 0xE100000000000000;
    uint64_t v134 = 47;
    unint64_t v135 = 0xE100000000000000;
    sub_24D3F0EB8();
    uint64_t v98 = sub_24DCCA478();
    uint64_t v100 = v99;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v98 = 0;
    uint64_t v100 = 0;
  }
  id v101 = objc_msgSend(v21, sel_hasUnresolvedConflicts);
  if (v101)
  {
    unint64_t v102 = v101;
    unsigned __int8 v103 = objc_msgSend(v101, sel_BOOLValue);
  }
  else
  {
    unsigned __int8 v103 = 0;
  }
  id v104 = objc_msgSend(v21, sel_contentPolicy);
  sub_24D7C43F4(v170);
  uint64_t v106 = v170[6];
  uint64_t v105 = v170[7];
  swift_bridgeObjectRetain();
  sub_24D5DA4D8(v170);
  uint64_t v136 = v132;
  LOBYTE(v137) = v131;
  BYTE1(v137) = v130;
  id v138 = v129;
  id v139 = v120;
  char v140 = v119;
  char v141 = v118;
  char v142 = v117;
  uint64_t v143 = v127;
  uint64_t v144 = v126;
  uint64_t v145 = v125;
  uint64_t v146 = v124;
  char v147 = v116;
  uint64_t v148 = v112;
  uint64_t v149 = v111;
  id v150 = v133;
  char v151 = v115;
  char v152 = v114;
  uint64_t v153 = v110;
  uint64_t v154 = v109;
  uint64_t v155 = v108;
  uint64_t v156 = v87;
  uint64_t v157 = v90;
  uint64_t v158 = v92;
  uint64_t v159 = v98;
  uint64_t v160 = v100;
  unsigned __int8 v161 = v103;
  uint64_t v162 = v123;
  uint64_t v163 = v122;
  uint64_t v164 = v121;
  id v165 = v104;
  uint64_t v166 = 0;
  uint64_t v167 = v113;
  uint64_t v168 = v106;
  uint64_t v169 = v105;
  nullsub_1(&v136);
  return sub_24D3F0BA0((uint64_t)&v136, v128, &qword_26B197970);
}

uint64_t sub_24D7C6538(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192308);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24DCC8788();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_24D415FD0(v2, (uint64_t)v7, (uint64_t *)&unk_26B192308);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_24D415F74((uint64_t)v7, (uint64_t *)&unk_26B192308);
      a1 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      if (qword_26986A788 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)qword_269891640;
      uint64_t v13 = (void *)sub_24DCC8768();
      id v14 = objc_msgSend(v12, sel_stringFromPersonNameComponents_, v13);

      a1 = sub_24DCC97E8();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_24D7C675C()
{
  if (qword_26986A788 != -1) {
    swift_once();
  }
  return &qword_269891640;
}

void *sub_24D7C67A8()
{
  return &unk_24DCDC4A0;
}

uint64_t sub_24D7C67B4()
{
  return 65533;
}

id sub_24D7C67BC()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A78]), sel_init);
  qword_269891640 = (uint64_t)result;
  return result;
}

void sub_24D7C67F0()
{
  id v1 = (id)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setFilename_, v1);
}

void (*sub_24D7C6850(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  id v4 = objc_msgSend(v1, sel_filename);
  uint64_t v5 = sub_24DCC97E8();
  uint64_t v7 = v6;

  v3[2] = v5;
  void v3[3] = v7;
  v3[4] = 58;
  v3[5] = 0xE100000000000000;
  v3[6] = 47;
  v3[7] = 0xE100000000000000;
  sub_24D3F0EB8();
  uint64_t v8 = sub_24DCCA478();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  void *v3 = v8;
  v3[1] = v10;
  return sub_24D7C695C;
}

void sub_24D7C695C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v4 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setFilename_, v4);

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setFilename_, v5);
  }

  free(v2);
}

uint64_t sub_24D7C6A18()
{
  int v1 = objc_msgSend(v0, sel_unsupportedFields);

  return sub_24DA276BC(v1);
}

void sub_24D7C6A4C(void *a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_itemID);
  id v4 = objc_msgSend(v3, sel_identifier);

  *a1 = v4;
}

id sub_24D7C6AB0@<X0>(void *a1@<X8>)
{
  id result = sub_24D7C479C();
  *a1 = result;
  return result;
}

uint64_t sub_24D7C6ADC()
{
  id v1 = objc_msgSend(*v0, sel_filename);
  sub_24DCC97E8();

  sub_24D3F0EB8();
  uint64_t v2 = sub_24DCCA478();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_24D7C6B9C()
{
  id v1 = *v0;
  id v2 = (id)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setFilename_, v2);
}

void (*sub_24D7C6C00(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_24D7C6850(v2);
  return sub_24D7C6C5C;
}

void sub_24D7C6C5C(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_24D7C6CA4@<X0>(uint64_t a1@<X8>)
{
  return sub_24D3F9CA0(a1);
}

double sub_24D7C6CC8@<D0>(_OWORD *a1@<X8>)
{
  sub_24D7C43F4((uint64_t *)v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t sub_24D7C6D0C@<X0>(uint64_t a1@<X8>)
{
  sub_24D7C5A54((uint64_t)v3);
  return sub_24D3F0BA0((uint64_t)v3, a1, &qword_26B197970);
}

uint64_t sub_24D7C6D5C()
{
  int v1 = objc_msgSend(*v0, sel_unsupportedFields);

  return sub_24DA276BC(v1);
}

void sub_24D7C6D90(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  long long v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_24DCCA428();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_24D7C6E48(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_24D7C6E70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7350(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C6E90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C74CC(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C6EB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7638(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C6ED0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7EF8(a1, a2, a3, *v3, &qword_26B197E98);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C6EF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7EF8(a1, a2, a3, *v3, &qword_26986E988);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C6F20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7EF8(a1, a2, a3, *v3, (uint64_t *)&unk_26B197EA0);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C6F48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7EF8(a1, a2, a3, *v3, &qword_26B197EC0);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C6F70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7EF8(a1, a2, a3, *v3, &qword_26B197EC8);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C6F98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7EF8(a1, a2, a3, *v3, &qword_26B197EB8);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C6FC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C84F0(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_26B195E18, (uint64_t *)&unk_26B199410);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C6FF0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7EF8(a1, a2, a3, *v3, &qword_26B197ED0);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C7018(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C8D6C(a1, a2, a3, (void *)*v3, &qword_26B194200, type metadata accessor for NSFileProviderItemIdentifier);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C7054(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C77C4(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C7074(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C84F0(a1, a2, a3, (void *)*v3, &qword_26B1908F8, qword_26B18FC00);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C70A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7A04(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C70C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7BA8(a1, a2, a3, (void *)*v3, &qword_26986E930, (uint64_t *)&unk_269870700);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C70F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7BA8(a1, a2, a3, (void *)*v3, &qword_26986E938, &qword_26986E940);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C7124(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7D54(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C7144(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D3D4A54(a1, a2, a3, (void *)*v3, &qword_26986E900, &qword_26986E908);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C7174(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7EF8(a1, a2, a3, *v3, &qword_26B197ED8);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C719C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C8044(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C71BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C81A4(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C71DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D3D4A54(a1, a2, a3, (void *)*v3, &qword_26986F560, (uint64_t *)&unk_26986C6B0);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C720C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C8A80(a1, a2, a3, *v3, &qword_26B197EF8);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C7234(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C8350(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C7254(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C84F0(a1, a2, a3, (void *)*v3, &qword_26986FA70, &qword_26B18FF40);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C7284(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C8730(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C72A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C8A80(a1, a2, a3, *v3, (uint64_t *)&unk_26B197F10);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C72CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C7EF8(a1, a2, a3, *v3, &qword_26B194958);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24D7C72F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C8BDC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C7314(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24D7C8D6C(a1, a2, a3, (void *)*v3, &qword_26986E918, type metadata accessor for NSFileProviderItemDecorationIdentifier);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_24D7C7350(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986E980);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C74CC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B195E30);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C7638(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B195E28);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199F10);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C77C4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E90);
  uint64_t v10 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  id v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C7A04(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986E920);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 80 * v8) {
      memmove(v10 + 4, a4 + 4, 80 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 80 * v8 || v12 >= v13 + 80 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986E928);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C7BA8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 96);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 96 * v11) {
      memmove(v13 + 4, a4 + 4, 96 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 96 * v11 || v15 >= v16 + 96 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C7D54(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986E948);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 80 * v8) {
      memmove(v10 + 4, a4 + 4, 80 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 80 * v8 || v12 >= v13 + 80 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986E950);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C7EF8(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C8044(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986E910);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C81A4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194980);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1907E0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C8350(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986E970);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986E978);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C84DC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_24D7C84F0(a1, a2, a3, a4, &qword_26986FA70, &qword_26B18FF40);
}

uint64_t sub_24D7C84F0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  id v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C8730(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986E960);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986E968);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C88D8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1943A8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986EF80);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C8A80(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C8BDC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986E958);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 < a4 || v13 >= v14 + 8 * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_34:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24D7C8D6C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

id sub_24D7C8F00(void *a1, char a2)
{
  if (qword_26B194080 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_24DCC97E8();
  uint64_t v6 = v5;
  if (v4 != sub_24DCC97E8() || v6 != v7)
  {
    char v9 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9 & 1) != 0 && (a2) {
      goto LABEL_9;
    }
LABEL_11:
    if (qword_26B194088 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_24DCC97E8();
    uint64_t v13 = v12;
    if (v11 == sub_24DCC97E8() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
      if (a2)
      {
LABEL_19:
        int64_t v10 = (void **)MEMORY[0x263F053F8];
        goto LABEL_20;
      }
    }
    else
    {
      char v16 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16 & 1) != 0 && (a2) {
        goto LABEL_19;
      }
    }
    sub_24DCC97E8();
    id v19 = a1;
    uint64_t v20 = sub_24DCC97B8();
    swift_bridgeObjectRelease();

    return (id)v20;
  }
  swift_bridgeObjectRelease_n();
  if ((a2 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_9:
  int64_t v10 = (void **)MEMORY[0x263F053F0];
LABEL_20:
  unint64_t v17 = *v10;

  return v17;
}

int *sub_24D7C90F8(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = a2;
  int64_t v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)a1;
  char v14 = *(unsigned char *)(a1 + 8);
  id v46 = sub_24D4085F0(*(void *)a1, v14, a3);
  uint64_t v15 = sub_24D4086C0(v13, v14, a4, a5);
  if (!v5)
  {
    id v43 = v12;
    uint64_t v44 = a4;
    char v16 = v45;
    uint64_t v17 = *(void *)(a1 + 16);
    char v18 = *(unsigned char *)(a1 + 24);
    id v19 = v15;
    id v20 = sub_24D4085F0(v17, v18, a3 & 1);
    unint64_t v22 = sub_24D4086C0(v17, v18, v44, a5);
    uint64_t v42 = 0;
    uint64_t v24 = *(void *)(a1 + 128);
    uint64_t v23 = *(void *)(a1 + 136);
    uint64_t v25 = v10[10];
    uint64_t v26 = (uint64_t)v43;
    uint64_t v27 = (uint64_t)&v43[v25];
    uint64_t v28 = (unsigned __int8 *)(a1
                            + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410) + 48));
    sub_24D409F80((uint64_t)v28, v27);
    id v41 = v20;
    *(void *)uint64_t v26 = v20;
    *(void *)(v26 + 8) = v24;
    uint64_t v29 = v26;
    *(void *)(v26 + 16) = v23;
    uint64_t v30 = qword_26B193850;
    id v31 = v22;
    swift_bridgeObjectRetain();
    if (v30 != -1) {
      swift_once();
    }
    uint64_t v32 = v46;
    int64_t v10 = (int *)sub_24D3FD758(v46, v16, (id *)v26, qword_26B1A2368, 0);
    sub_24D415F74(v29, &qword_26B193EB8);
    unsigned int v33 = v19;
    objc_msgSend(v10, sel_setFormerIdentifier_, v19);

    objc_msgSend(v10, sel_setParentFormerIdentifier_, v31);
    uint64_t v34 = v31;

    int v35 = *v28;
    objc_msgSend(v10, sel_isExcludedFromSync);
    int v36 = *((unsigned __int16 *)v28 + 5);
    unsigned int v37 = objc_msgSend(v16, sel_supportsSyncingTrash);
    if ((*MEMORY[0x263F053D8] & 0xFFFFFFFFFFFFFFD3) != 0)
    {
      uint64_t v38 = *MEMORY[0x263F053D8] | 0x2CLL;
      if (v35 == 1)
      {
        uint64_t v39 = v41;
        if ((~v36 & 0x140) != 0)
        {
LABEL_16:
          if ((v36 & 0x80) == 0) {
            goto LABEL_18;
          }
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v39 = v41;
        if ((v36 & 0x100) == 0) {
          goto LABEL_16;
        }
      }
LABEL_15:
      v38 |= 1uLL;
      goto LABEL_16;
    }
    if (v35 == 1)
    {
      uint64_t v39 = v41;
      if ((~v36 & 0x140) == 0)
      {
LABEL_13:
        uint64_t v38 = 44;
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v39 = v41;
      if ((v36 & 0x100) != 0) {
        goto LABEL_13;
      }
    }
    uint64_t v38 = 44;
    if ((v36 & 0x80) == 0)
    {
      if ((v37 & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
LABEL_17:
    v38 |= 2uLL;
LABEL_18:
    if (!v37)
    {
LABEL_20:
      objc_msgSend(v10, sel_setCapabilities_, v38);
      swift_bridgeObjectRelease();

      return v10;
    }
LABEL_19:
    v38 |= 0x10uLL;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();

  return v10;
}

uint64_t sub_24D7C944C(char a1, unsigned __int16 a2, char a3)
{
  if ((*MEMORY[0x263F053D8] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    uint64_t result = *MEMORY[0x263F053D8] | 0x2CLL;
    if (a1)
    {
      if ((~a2 & 0x140) != 0) {
        goto LABEL_17;
      }
    }
    else if ((a2 & 0x100) == 0)
    {
LABEL_17:
      if ((a2 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
LABEL_16:
    result |= 1uLL;
    goto LABEL_17;
  }
  if (a1)
  {
    if ((~a2 & 0x140) != 0)
    {
      if ((a2 & 0x80) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      uint64_t result = 44;
LABEL_18:
      result |= 2uLL;
LABEL_19:
      if ((a3 & 1) == 0) {
        return result;
      }
      return result | 0x10;
    }
LABEL_15:
    uint64_t result = 44;
    goto LABEL_16;
  }
  if ((a2 & 0x100) != 0) {
    goto LABEL_15;
  }
  if ((a2 & 0x80) != 0) {
    goto LABEL_14;
  }
LABEL_8:
  uint64_t result = 44;
  if (a3) {
    return result | 0x10;
  }
  return result;
}

unint64_t sub_24D7C94E0()
{
  unint64_t result = qword_26B197490;
  if (!qword_26B197490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B197490);
  }
  return result;
}

unint64_t sub_24D7C9538()
{
  unint64_t result = qword_26B197E28;
  if (!qword_26B197E28)
  {
    type metadata accessor for NSFileProviderItemIdentifier(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B197E28);
  }
  return result;
}

unint64_t sub_24D7C9590(uint64_t a1)
{
  unint64_t result = sub_24D7C95B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24D7C95B8()
{
  unint64_t result = qword_26B197E40;
  if (!qword_26B197E40)
  {
    sub_24D3FB6F8(255, (unint64_t *)&unk_26B199E90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B197E40);
  }
  return result;
}

unint64_t sub_24D7C9620(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24D7C9F70;
  *(void *)(v7 + 24) = v6;
  id v21 = sub_24D3E3974;
  uint64_t v22 = v7;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v18 = 1107296256;
  id v19 = sub_24D3E38DC;
  id v20 = &block_descriptor_15;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  uint64_t aBlock = 0;
  id v9 = objc_msgSend(a3, sel_fetchSwift_error_, v8, &aBlock);
  _Block_release(v8);
  id v10 = (id)aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v9)
  {
    uint64_t v12 = 0xA3A6E616C70;
    uint64_t aBlock = 0xA3A6E616C70;
    unint64_t v18 = 0xE600000000000000;
    if (objc_msgSend(v9, sel_next))
    {
      do
      {
        uint64_t v13 = (void *)MEMORY[0x253329610]();
        id v14 = objc_msgSend(v9, sel_stringAtIndex_, 3, 538976288, 0xE400000000000000);
        sub_24DCC97E8();

        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
      }
      while ((objc_msgSend(v9, sel_next) & 1) != 0);
      swift_release();

      return aBlock;
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    uint64_t v15 = (void *)sub_24DCC8828();

    swift_willThrow();
    swift_release();
    return 0xD000000000000016;
  }
  return v12;
}

unint64_t sub_24D7C9900()
{
  return 0xD000000000000013;
}

uint64_t sub_24D7C9980()
{
  return 0;
}

uint64_t (*sub_24D7C9A6C())()
{
  return j__swift_endAccess_0;
}

id sub_24D7C9ACC()
{
  int v1 = (unint64_t *)&v0[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics];
  *(void *)&v0[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics] = 0;
  long long v2 = v0;
  if (!os_variant_has_internal_content()) {
    goto LABEL_5;
  }
  id v3 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v4 = (void *)sub_24DCC97B8();
  id v5 = objc_msgSend(v3, sel_initWithSuiteName_, v4);

  if (!v5) {
    goto LABEL_5;
  }
  uint64_t v6 = (void *)sub_24DCC97B8();
  unsigned int v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);

  if (v7) {
    unint64_t v8 = sub_24D42B554(MEMORY[0x263F8EE78]);
  }
  else {
LABEL_5:
  }
    unint64_t v8 = 0;
  swift_beginAccess();
  *int v1 = v8;
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_defaultStore);
  signed int v10 = objc_msgSend(v9, sel_sqlDatabaseStatementWarnTime);

  *(void *)&v2[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_maxQueryExecutionTime] = v10;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for PQLConnectionWithStatistics();
  return objc_msgSendSuper2(&v12, sel_init);
}

void sub_24D7C9C84(char a1)
{
  if ((a1 & 1) == 0
    || (long long v2 = &v1[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics],
        swift_beginAccess(),
        (uint64_t v3 = *(void *)v2) == 0))
  {
LABEL_27:
    swift_beginAccess();
    swift_bridgeObjectRetain();
    return;
  }
  uint64_t v22 = v2;
  uint64_t v23 = v1;
  *(void *)long long v2 = 0;
  uint64_t v4 = v3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v8) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_26;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_26;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v9);
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    char v16 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v12);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    id v19 = *(void **)(*(void *)(v3 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    id v20 = v19;
    id v21 = objc_msgSend(v20, sel_queryPlan);
    if (v21)
    {
      signed int v10 = v21;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24D7C9620(v18, v17, v23);
      swift_bridgeObjectRelease();
      signed int v10 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_setQueryPlan_, v10);
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_26:
    swift_release();
    *(void *)uint64_t v22 = v3;
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
}

id sub_24D7C9ED0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PQLConnectionWithStatistics();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PQLConnectionWithStatistics()
{
  return self;
}

uint64_t sub_24D7C9F38()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_24D7C9F70()
{
  return sub_24D7C9900();
}

uint64_t sub_24D7C9F78()
{
  return swift_deallocObject();
}

uint64_t sub_24D7C9F88()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_24D7CA03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = *(void *)(v8 + 80);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  int64_t v13 = (char *)&v15 - v12;
  *((unsigned char *)v4 + 72) = 0;
  sub_24D433858(v11, (uint64_t)(v4 + 2));
  (*(void (**)(uint64_t))(*(void *)(v8 + 104) + 8))(v9);
  __swift_destroy_boxed_opaque_existential_1(a1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v4 + *(void *)(*v4 + 136), v13, v9);
  v4[7] = a2;
  v4[8] = a3;
  return v4;
}

uint64_t *sub_24D7CA184()
{
  uint64_t v1 = *v0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 136));
  return v0;
}

uint64_t sub_24D7CA20C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 136);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t (*sub_24D7CA2B0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_24D7CA31C;
}

uint64_t sub_24D7CA31C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    *(unsigned char *)(*(void *)(a1 + 24) + 72) = 1;
  }
  return result;
}

uint64_t sub_24D7CA354(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](a1);
  unint64_t v7 = (char *)&v13 - v6;
  if (*(unsigned char *)(v1 + 72) == 1)
  {
    *(unsigned char *)(v1 + 72) = 0;
    sub_24DCC8718();
    swift_allocObject();
    sub_24DCC8708();
    sub_24DCC86E8();
    sub_24D7CA20C((uint64_t)v7);
    uint64_t v8 = sub_24DCC86F8();
    unint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    if (!v2)
    {
      uint64_t v11 = *(void *)(v1 + 40);
      uint64_t v12 = *(void *)(v1 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v11);
      (*(void (**)(void, void, uint64_t, unint64_t, uint64_t, uint64_t))(v12 + 8))(*(void *)(v1 + 56), *(void *)(v1 + 64), v8, v10, v11, v12);
      sub_24D400DCC(v8, v10);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24D7CA528()
{
  return sub_24D7CA910(sub_24D7CA354);
}

uint64_t sub_24D7CA548(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v7);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v8 + 16))(*(void *)(v1 + 56), *(void *)(v1 + 64), v7, v8);
  if (!v2)
  {
    unint64_t v11 = v10;
    if (v10 >> 60 != 15)
    {
      uint64_t v12 = result;
      sub_24DCC86D8();
      swift_allocObject();
      sub_24D3F9C18(v12, v11);
      sub_24DCC86C8();
      sub_24DCC86B8();
      sub_24D7CAC7C((uint64_t)v6);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_24D416034(v12, v11);
      swift_release();
      uint64_t result = sub_24D416034(v12, v11);
    }
    *(unsigned char *)(v1 + 72) = 0;
  }
  return result;
}

uint64_t sub_24D7CA754()
{
  return sub_24D7CA910(sub_24D7CA548);
}

uint64_t sub_24D7CA774(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v8);
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v9 + 24))(v1[7], v1[8], v8, v9);
  if (!v2)
  {
    (*(void (**)(uint64_t))(*(void *)(v3 + 104) + 8))(v4);
    sub_24D7CAC7C((uint64_t)v7);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_24D7CA8F0()
{
  return sub_24D7CA910(sub_24D7CA774);
}

uint64_t sub_24D7CA910(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = sub_24DCC9078();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  return a1(v3);
}

void sub_24D7CAC00()
{
  *(unsigned char *)(v0 + 72) = 1;
}

uint64_t sub_24D7CAC0C()
{
  sub_24D7CA184();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WharfResource()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D7CAC7C(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = &v1[*(void *)(*(void *)v1 + 136)];
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 24))(v4, a1);
  uint64_t result = swift_endAccess();
  v1[72] = 1;
  return result;
}

uint64_t sub_24D7CAD98(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_24D409148(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_24D409148(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24DCCAE28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24D7CAE24()
{
  char v1 = *v0;
  sub_24DCCAFF8();
  sub_24D409148(v1);
  sub_24DCC98F8();
  swift_bridgeObjectRelease();
  return sub_24DCCB048();
}

uint64_t sub_24D7CAE88()
{
  sub_24D409148(*v0);
  sub_24DCC98F8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D7CAEDC()
{
  char v1 = *v0;
  sub_24DCCAFF8();
  sub_24D409148(v1);
  sub_24DCC98F8();
  swift_bridgeObjectRelease();
  return sub_24DCCB048();
}

uint64_t sub_24D7CAF3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D7CC38C();
  *a1 = result;
  return result;
}

unint64_t sub_24D7CAF6C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24D409148(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_24D7CAF98(void *a1@<X8>)
{
  *a1 = &unk_26FFA1188;
}

unint64_t sub_24D7CAFA8()
{
  return sub_24D409148(*v0);
}

uint64_t sub_24D7CAFB0(char a1, id a2)
{
  switch(a1)
  {
    case 1:
      id v8 = objc_msgSend(a2, sel_bindBooleanParameter_, *((unsigned __int8 *)v2 + 8));
      goto LABEL_33;
    case 2:
      id v8 = objc_msgSend(a2, sel_bindBooleanParameter_, *((unsigned __int8 *)v2 + 9));
      goto LABEL_33;
    case 3:
      sub_24D7CC3E0((uint64_t)(v2 + 2), (uint64_t)v34);
      sub_24D7CC3E0((uint64_t)v34, (uint64_t)&v37);
      if (!v37) {
        goto LABEL_38;
      }
      swift_getErrorValue();
      uint64_t v10 = v27;
      uint64_t v9 = v28;
      uint64_t v11 = v29;
      goto LABEL_16;
    case 4:
      sub_24D7CC3E0((uint64_t)(v2 + 3), (uint64_t)v35);
      sub_24D7CC3E0((uint64_t)v35, (uint64_t)&v36);
      if (!v36) {
        goto LABEL_38;
      }
      swift_getErrorValue();
      uint64_t v10 = v30;
      uint64_t v9 = v31;
      uint64_t v11 = v32;
LABEL_16:
      unint64_t v14 = sub_24D735884(v9, v11);
      if (v3) {
        return v10;
      }
      uint64_t v24 = (uint64_t)v14;
      unint64_t v25 = v15;
      goto LABEL_40;
    case 5:
      id v8 = objc_msgSend(a2, sel_bindBooleanParameter_, 0);
      goto LABEL_33;
    case 6:
      id v8 = objc_msgSend(a2, sel_bindBooleanParameter_, *((unsigned __int8 *)v2 + 32));
      goto LABEL_33;
    case 7:
      id v8 = objc_msgSend(a2, sel_bindBooleanParameter_, *((unsigned __int8 *)v2 + 33));
      goto LABEL_33;
    case 8:
      id v8 = objc_msgSend(a2, sel_bindBooleanParameter_, *((unsigned __int8 *)v2 + 34));
      goto LABEL_33;
    case 9:
      uint64_t v6 = v2[5];
      uint64_t v7 = v2[6];
      goto LABEL_28;
    case 10:
      uint64_t v6 = v2[7];
      uint64_t v7 = v2[8];
      goto LABEL_28;
    case 11:
      id v8 = objc_msgSend(a2, sel_bindBooleanParameter_, *((unsigned __int8 *)v2 + 72));
      goto LABEL_33;
    case 12:
      uint64_t v6 = v2[10];
      uint64_t v7 = v2[11];
      goto LABEL_28;
    case 13:
      id v8 = objc_msgSend(a2, sel_bindBooleanParameter_, *((unsigned __int8 *)v2 + 104));
      goto LABEL_33;
    case 14:
      id v8 = objc_msgSend(a2, sel_bindBooleanParameter_, *((unsigned __int8 *)v2 + 105));
      goto LABEL_33;
    case 15:
      uint64_t v6 = v2[14];
      uint64_t v7 = v2[15];
      goto LABEL_28;
    case 16:
      uint64_t v6 = v2[16];
      uint64_t v7 = v2[17];
      goto LABEL_28;
    case 17:
      uint64_t v6 = v2[18];
      uint64_t v7 = v2[19];
      goto LABEL_28;
    case 18:
      uint64_t v19 = v2[20];
      uint64_t v20 = v2[21];
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_24D719BE4(v19, v20);
      goto LABEL_29;
    case 19:
      id v8 = objc_msgSend(a2, sel_bindBooleanParameter_, *((unsigned __int8 *)v2 + 176));
LABEL_33:
      id v21 = v8;
      uint64_t v10 = sub_24DCC97E8();

      return v10;
    case 20:
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v13 = sub_24D5F1BE0(v16);
      goto LABEL_29;
    case 21:
      uint64_t v17 = v2[24];
      uint64_t v18 = v2[25];
      sub_24D40110C(v17);
      uint64_t v10 = sub_24D5F1DA0(v17, v18);
      sub_24D401324(v17);
      return v10;
    case 22:
      uint64_t v4 = v2[26];
      goto LABEL_35;
    case 23:
      uint64_t v4 = v2[27];
LABEL_35:
      uint64_t v5 = MEMORY[0x263F8D6C8];
      goto LABEL_36;
    case 24:
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v13 = sub_24D5F1F4C(v12);
      goto LABEL_29;
    case 25:
      uint64_t v6 = v2[29];
      uint64_t v7 = v2[30];
LABEL_28:
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_24D5F1A28(v6, v7);
LABEL_29:
      uint64_t v10 = v13;
      swift_bridgeObjectRelease();
      break;
    default:
      uint64_t v4 = *v2;
      uint64_t v5 = MEMORY[0x263F8D9D0];
LABEL_36:
      v33[3] = v5;
      v33[0] = v4;
      uint64_t v10 = sub_24D3E3EB4((uint64_t)v33);
      uint64_t v23 = v22;
      sub_24D3E3E54((uint64_t)v33);
      if (!v23)
      {
        sub_24DCCA978();
        __break(1u);
LABEL_38:
        uint64_t v24 = 0;
        unint64_t v25 = 0xF000000000000000;
LABEL_40:
        uint64_t v10 = sub_24D5F0D1C(v24, v25);
        sub_24D416034(v24, v25);
      }
      break;
  }
  return v10;
}

void sub_24D7CB454(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  LOBYTE(v68[0]) = 0;
  type metadata accessor for NSFileProviderItemCapabilities(0);
  uint64_t v8 = v7;
  sub_24D71B65C(a1, v7);
  sub_24DA6D460((uint64_t)v68, v8, a1, v8, a2);
  if (!v3)
  {
    uint64_t v9 = v76;
    LOBYTE(v68[0]) = 1;
    uint64_t v10 = MEMORY[0x263F8D4F8];
    sub_24D71B65C(a1, MEMORY[0x263F8D4F8]);
    sub_24DA6D460((uint64_t)v68, v10, a1, v10, a2);
    LODWORD(v10) = v75;
    LOBYTE(v68[0]) = 2;
    sub_24DA6D460((uint64_t)v68, MEMORY[0x263F8D4F8], a1, MEMORY[0x263F8D4F8], a2);
    int v78 = v10;
    int v11 = v74;
    LOBYTE(v68[0]) = 3;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_26B19A060);
    sub_24D71B65C(a1, v12);
    sub_24DA6D460((uint64_t)v68, v12, a1, v12, a2);
    int v77 = v11;
    uint64_t v13 = v73;
    LOBYTE(v68[0]) = 4;
    sub_24DA6D460((uint64_t)v68, v12, a1, v12, a2);
    unint64_t v14 = v72;
    LOBYTE(v68[0]) = 6;
    sub_24DA6D460((uint64_t)v68, MEMORY[0x263F8D4F8], a1, MEMORY[0x263F8D4F8], a2);
    id v51 = v13;
    LOBYTE(v13) = v71;
    LOBYTE(v68[0]) = 7;
    sub_24DA6D460((uint64_t)v68, MEMORY[0x263F8D4F8], a1, MEMORY[0x263F8D4F8], a2);
    char v49 = (char)v13;
    id v50 = v14;
    LOBYTE(v14) = v70;
    LOBYTE(v68[0]) = 8;
    sub_24DA6D460((uint64_t)v68, MEMORY[0x263F8D4F8], a1, MEMORY[0x263F8D4F8], a2);
    char v48 = (char)v14;
    LOBYTE(v13) = v69;
    LOBYTE(v67[0]) = 9;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D80);
    sub_24D71B65C(a1, v15);
    sub_24DA6D460((uint64_t)v67, v15, a1, v15, a2);
    uint64_t v45 = v68[0];
    uint64_t v46 = v15;
    uint64_t v47 = v68[1];
    LOBYTE(v65[0]) = 10;
    sub_24DA6D460((uint64_t)v65, v15, a1, v15, a2);
    char v42 = (char)v13;
    uint64_t v43 = v67[0];
    uint64_t v44 = v67[1];
    LOBYTE(v65[0]) = 11;
    sub_24DA6D460((uint64_t)v65, MEMORY[0x263F8D4F8], a1, MEMORY[0x263F8D4F8], a2);
    char v41 = v66;
    LOBYTE(v62[0]) = 12;
    sub_24DA6D460((uint64_t)v62, v46, a1, v46, a2);
    uint64_t v39 = v65[0];
    uint64_t v40 = v65[1];
    LOBYTE(v62[0]) = 13;
    sub_24DA6D460((uint64_t)v62, MEMORY[0x263F8D4F8], a1, MEMORY[0x263F8D4F8], a2);
    char v38 = v64;
    LOBYTE(v62[0]) = 14;
    sub_24DA6D460((uint64_t)v62, MEMORY[0x263F8D4F8], a1, MEMORY[0x263F8D4F8], a2);
    char v37 = v63;
    LOBYTE(v61[0]) = 15;
    sub_24DA6D460((uint64_t)v61, v46, a1, v46, a2);
    uint64_t v35 = v62[0];
    uint64_t v36 = v62[1];
    LOBYTE(v60[0]) = 16;
    sub_24DA6D460((uint64_t)v60, v46, a1, v46, a2);
    uint64_t v16 = v61[0];
    uint64_t v34 = v61[1];
    LOBYTE(v59[0]) = 17;
    sub_24DA6D460((uint64_t)v59, v46, a1, v46, a2);
    uint64_t v32 = v60[0];
    uint64_t v33 = v60[1];
    LOBYTE(v57[0]) = 18;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_26B199BD0);
    sub_24D71B65C(a1, v17);
    sub_24DA6D460((uint64_t)v57, v17, a1, v17, a2);
    uint64_t v30 = v59[0];
    uint64_t v31 = v59[1];
    LOBYTE(v57[0]) = 19;
    sub_24DA6D460((uint64_t)v57, MEMORY[0x263F8D4F8], a1, MEMORY[0x263F8D4F8], a2);
    char v29 = v58;
    LOBYTE(v57[0]) = 20;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B19A020);
    sub_24D71B65C(a1, v18);
    sub_24DA6D460((uint64_t)v57, v18, a1, v18, a2);
    uint64_t v28 = v57[2];
    LOBYTE(v53) = 21;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199FE0);
    sub_24D71B65C(a1, v19);
    sub_24DA6D460((uint64_t)&v53, v19, a1, v19, a2);
    uint64_t v26 = v57[0];
    uint64_t v27 = v57[1];
    LOBYTE(v53) = 22;
    type metadata accessor for NSFileProviderContentPolicy(0);
    uint64_t v21 = v20;
    sub_24D71B65C(a1, v20);
    sub_24DA6D460((uint64_t)&v53, v21, a1, v21, a2);
    uint64_t v24 = v56;
    LOBYTE(v53) = 23;
    sub_24DA6D460((uint64_t)&v53, v21, a1, v21, a2);
    uint64_t v25 = v55;
    LOBYTE(v53) = 24;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B19A008);
    sub_24D71B65C(a1, v22);
    sub_24DA6D460((uint64_t)&v53, v22, a1, v22, a2);
    uint64_t v23 = v54;
    char v52 = 25;
    sub_24DA6D460((uint64_t)&v52, v15, a1, v15, a2);
    *(void *)a3 = v9;
    *(unsigned char *)(a3 + 8) = v78;
    *(unsigned char *)(a3 + 9) = v77;
    *(void *)(a3 + 16) = v51;
    *(void *)(a3 + 24) = v50;
    *(unsigned char *)(a3 + 32) = v49;
    *(unsigned char *)(a3 + 33) = v48;
    *(unsigned char *)(a3 + 34) = v42;
    *(void *)(a3 + 40) = v45;
    *(void *)(a3 + 48) = v47;
    *(void *)(a3 + 56) = v43;
    *(void *)(a3 + 64) = v44;
    *(unsigned char *)(a3 + 72) = v41;
    *(void *)(a3 + 80) = v39;
    *(void *)(a3 + 88) = v40;
    *(void *)(a3 + 96) = 0;
    *(unsigned char *)(a3 + 104) = v38;
    *(unsigned char *)(a3 + 105) = v37;
    *(void *)(a3 + 112) = v35;
    *(void *)(a3 + 120) = v36;
    *(void *)(a3 + 128) = v16;
    *(void *)(a3 + 136) = v34;
    *(void *)(a3 + 144) = v32;
    *(void *)(a3 + 152) = v33;
    *(void *)(a3 + 160) = v30;
    *(void *)(a3 + 168) = v31;
    *(unsigned char *)(a3 + 176) = v29;
    *(void *)(a3 + 184) = v28;
    *(void *)(a3 + 192) = v26;
    *(void *)(a3 + 200) = v27;
    *(void *)(a3 + 208) = v24;
    *(void *)(a3 + 216) = v25;
    *(void *)(a3 + 224) = v23;
    *(_OWORD *)(a3 + 232) = v53;
  }
}

uint64_t sub_24D7CBEFC(char *a1, void *a2)
{
  return sub_24D7CAFB0(*a1, a2);
}

double sub_24D7CBF74@<D0>(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_24D40941C(a2, *a1, a3, a4);
}

double sub_24D7CBF90@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_24D7CB454(a1, a2, (uint64_t)v13);
  if (!v3)
  {
    long long v6 = v25;
    *(_OWORD *)(a3 + 192) = v24;
    *(_OWORD *)(a3 + 208) = v6;
    *(_OWORD *)(a3 + 224) = v26;
    *(void *)(a3 + 240) = v27;
    long long v7 = v21;
    *(_OWORD *)(a3 + 128) = v20;
    *(_OWORD *)(a3 + 144) = v7;
    long long v8 = v23;
    *(_OWORD *)(a3 + 160) = v22;
    *(_OWORD *)(a3 + 176) = v8;
    long long v9 = v17;
    *(_OWORD *)(a3 + 64) = v16;
    *(_OWORD *)(a3 + 80) = v9;
    long long v10 = v19;
    *(_OWORD *)(a3 + 96) = v18;
    *(_OWORD *)(a3 + 112) = v10;
    long long v11 = v13[1];
    *(_OWORD *)a3 = v13[0];
    *(_OWORD *)(a3 + 16) = v11;
    double result = *(double *)&v14;
    long long v12 = v15;
    *(_OWORD *)(a3 + 32) = v14;
    *(_OWORD *)(a3 + 48) = v12;
  }
  return result;
}

unint64_t sub_24D7CC028(uint64_t a1)
{
  unint64_t result = sub_24D7CC050();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24D7CC050()
{
  unint64_t result = qword_26986E9A0;
  if (!qword_26986E9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E9A0);
  }
  return result;
}

unint64_t sub_24D7CC0A8()
{
  unint64_t result = qword_26986E9A8;
  if (!qword_26986E9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E9A8);
  }
  return result;
}

uint64_t sub_24D7CC0FC()
{
  return sub_24D7CC268(&qword_26986E9B0);
}

unsigned char *_s9SQLFieldsOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *unint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D7CC1FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9SQLFieldsOMa_3()
{
  return &_s9SQLFieldsON_2;
}

uint64_t sub_24D7CC234()
{
  return sub_24D7CC268(&qword_26986E9B8);
}

uint64_t sub_24D7CC268(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197DF0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24D7CC2B4()
{
  unint64_t result = qword_26B199F38[0];
  if (!qword_26B199F38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B199F38);
  }
  return result;
}

unint64_t sub_24D7CC308(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24D7CC338();
  unint64_t result = sub_24D409A0C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24D7CC338()
{
  unint64_t result = qword_26986E9C0;
  if (!qword_26986E9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E9C0);
  }
  return result;
}

uint64_t sub_24D7CC38C()
{
  unint64_t v0 = sub_24DCCAEA8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A) {
    return 26;
  }
  else {
    return v0;
  }
}

uint64_t sub_24D7CC3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B19A060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D7CC448(unsigned __int8 a1, id a2)
{
  uint64_t v4 = *v2;
  int v5 = a1 >> 5;
  if (v5 == 4)
  {
    if (a1 == 129)
    {
      long long v7 = *(void **)((char *)v2 + *(void *)(v4 + 584));
      if (v7) {
        id v8 = objc_msgSend(v7, sel_version);
      }
      else {
        id v8 = 0;
      }
      id v6 = objc_msgSend(a2, sel_bindLongParameter_, v8);
      goto LABEL_13;
    }
    return sub_24DB17074(a1, (uint64_t)a2);
  }
  if (v5 != 2) {
    return sub_24DB17074(a1, (uint64_t)a2);
  }
  if (a1 == 66)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v10 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
    long long v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 32);
    uint64_t v12 = swift_checkMetadataState();
    return v11(a2, v12, v10);
  }
  if (a1 != 67) {
    return sub_24DB17074(a1, (uint64_t)a2);
  }
  id v6 = objc_msgSend(a2, sel_bindUnsignedLongParameter_, *(uint64_t *)((char *)v2 + *(void *)(v4 + 632)));
LABEL_13:
  id v13 = v6;
  uint64_t v14 = sub_24DCC97E8();

  return v14;
}

void sub_24D7CC5F0(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v8 = a2 >> 5;
  if (v8 == 4)
  {
    if (a2 == 129)
    {
      id v10 = a1;
      if ((objc_msgSend(v10, sel_isNullAtIndex_, a3) & 1) != 0
        || (id v11 = objc_msgSend(v10, sel_integerAtIndex_, a3)) == 0)
      {

        *(_OWORD *)a4 = 0u;
        *(_OWORD *)(a4 + 16) = 0u;
      }
      else
      {
        id v12 = objc_msgSend(self, sel_domainVersionWithVersion_, v11);

        *(void *)(a4 + 24) = sub_24D71C2F4();
        *(void *)a4 = v12;
      }
      return;
    }
LABEL_10:
    sub_24DB172E0(a1, a2, a3, a4);
    return;
  }
  if (v8 != 2) {
    goto LABEL_10;
  }
  if (a2 != 66)
  {
    if (a2 == 67)
    {
      id v9 = objc_msgSend(a1, sel_unsignedLongAtIndex_, a3);
      *(void *)(a4 + 24) = MEMORY[0x263F8D9D0];
      *(void *)a4 = v9;
      return;
    }
    goto LABEL_10;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  long long v15 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v14 + 16);
  *(void *)(a4 + 24) = AssociatedTypeWitness;
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
  v15(a1, a3, AssociatedTypeWitness, v14);
  if (v4) {
    __swift_deallocate_boxed_opaque_existential_0(a4);
  }
}

uint64_t sub_24D7CC7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v41[0] = &_s9SQLFieldsON_1;
  v41[1] = a2;
  uint64_t v35 = (void *)sub_24D71C2A0();
  void v41[2] = v35;
  v41[3] = a3;
  uint64_t v8 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v29 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v13 = (char *)&v29 - v12;
  LOBYTE(v41[0]) = 66;
  uint64_t v14 = sub_24D71B65C(a2, AssociatedTypeWitness);
  uint64_t v15 = a2;
  uint64_t v37 = a1;
  long long v16 = v38;
  sub_24DA6D460((uint64_t)v41, v14, a2, AssociatedTypeWitness, a3);
  if (!v16)
  {
    uint64_t v32 = v10;
    uint64_t v33 = AssociatedTypeWitness;
    char v38 = v13;
    uint64_t v31 = v4;
    LOBYTE(v42) = 67;
    uint64_t v17 = MEMORY[0x263F8D9D0];
    sub_24D71B65C(a2, MEMORY[0x263F8D9D0]);
    sub_24DA6D460((uint64_t)&v42, v17, a2, v17, a3);
    uint64_t v18 = v41[0];
    LOBYTE(v40) = -127;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E20);
    sub_24D71B65C(v15, v19);
    sub_24DA6D460((uint64_t)&v40, v19, v15, v19, a3);
    uint64_t v20 = (uint64_t)v38;
    uint64_t v21 = v33;
    uint64_t v30 = v18;
    long long v22 = v42;
    uint64_t v23 = (uint64_t)v32;
    sub_24DA6D8E4((uint64_t)sub_24D71B664, 0, v15, (uint64_t)&_s9SQLFieldsON_1, a3, (uint64_t)v35, (uint64_t)v32);
    uint64_t v24 = v8;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v27 = sub_24DB17420(v23, v8, WitnessTable);
    uint64_t v29 = v28;
    uint64_t v35 = v22;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v23, v24);
    char v39 = 65;
    sub_24D71B65C(v15, (uint64_t)&type metadata for JobReason);
    sub_24DA6D460((uint64_t)&v39, (uint64_t)&type metadata for JobReason, v15, (uint64_t)&type metadata for JobReason, a3);
    sub_24D7B3FF8(v20, v30, v35, (uint64_t)v27, v29, v40);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v20, v21);
    a1 = sub_24DB1BC38(v37, v15, a3);
    swift_retain();
    swift_release();
  }
  return a1;
}

uint64_t sub_24D7CCC4C(unsigned __int8 *a1, void *a2)
{
  return sub_24D7CC448(*a1, a2);
}

void sub_24D7CCC74(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_24D7CCC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_24D7CC7E0(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

void *sub_24D7CCCBC(unsigned __int8 a1, id a2)
{
  id v4 = a2;
  int v5 = (void *)*v2;
  int v6 = a1 >> 5;
  if (v6 == 4)
  {
    if (a1 == 128)
    {
      uint64_t v14 = *(void *)((char *)v2 + v5[80]);
      v20[3] = MEMORY[0x263F8D6C8];
      v20[0] = v14;
      char v2 = (void *)sub_24D3E3EB4((uint64_t)v20);
      id v4 = v15;
      sub_24D3E3E54((uint64_t)v20);
      if (v4) {
        return v2;
      }
      LODWORD(v19) = 0;
      uint64_t v18 = 213;
      sub_24DCCA978();
      __break(1u);
    }
    else
    {
      if (a1 != 129)
      {
LABEL_10:
        uint64_t v10 = sub_24DB17074(a1, (uint64_t)a2);
        if (v3) {
          return v2;
        }
        return (void *)v10;
      }
      uint64_t v8 = *(void **)((char *)v2 + v5[73]);
      if (v8)
      {
        id v9 = objc_msgSend(v8, sel_version);
LABEL_17:
        id v7 = objc_msgSend(v4, sel_bindLongParameter_, v9, v18, v19);
        goto LABEL_18;
      }
    }
    id v9 = 0;
    goto LABEL_17;
  }
  if (v6 != 2) {
    goto LABEL_10;
  }
  if (a1 != 66)
  {
    if (a1 == 67)
    {
      id v7 = objc_msgSend(a2, sel_bindUnsignedLongParameter_, *(void *)((char *)v2 + v5[79]));
LABEL_18:
      id v16 = v7;
      char v2 = (void *)sub_24DCC97E8();

      return v2;
    }
    goto LABEL_10;
  }
  swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v12 = *(uint64_t (**)(id, uint64_t, uint64_t))(v11 + 32);
  uint64_t v13 = swift_checkMetadataState();
  return (void *)v12(v4, v13, v11);
}

void sub_24D7CCF08(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v8 = a2 >> 5;
  if (v8 == 4)
  {
    if (a2 == 128)
    {
      *(void *)(a4 + 24) = &type metadata for Fields;
      *(void *)a4 = objc_msgSend(a1, sel_longAtIndex_, a3);
      return;
    }
    if (a2 != 129) {
      goto LABEL_11;
    }
    id v10 = a1;
    if ((objc_msgSend(v10, sel_isNullAtIndex_, a3) & 1) != 0
      || (id v11 = objc_msgSend(v10, sel_integerAtIndex_, a3)) == 0)
    {

      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
    }
    else
    {
      id v12 = objc_msgSend(self, sel_domainVersionWithVersion_, v11);

      *(void *)(a4 + 24) = sub_24D71C2F4();
      *(void *)a4 = v12;
    }
  }
  else
  {
    if (v8 != 2)
    {
LABEL_11:
      sub_24DB172E0(a1, a2, a3, a4);
      return;
    }
    if (a2 != 66)
    {
      if (a2 == 67)
      {
        id v9 = objc_msgSend(a1, sel_unsignedLongAtIndex_, a3);
        *(void *)(a4 + 24) = MEMORY[0x263F8D9D0];
        *(void *)a4 = v9;
        return;
      }
      goto LABEL_11;
    }
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v14 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
    uint64_t v15 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v14 + 16);
    *(void *)(a4 + 24) = AssociatedTypeWitness;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
    v15(a1, a3, AssociatedTypeWitness, v14);
    if (v4) {
      __swift_deallocate_boxed_opaque_existential_0(a4);
    }
  }
}

uint64_t sub_24D7CD128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v42[0] = &_s9SQLFieldsON_1;
  v42[1] = a2;
  unint64_t v35 = sub_24D71C2A0();
  void v42[2] = v35;
  v42[3] = a3;
  uint64_t v8 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v28 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v28 - v12;
  LOBYTE(v42[0]) = 66;
  uint64_t v14 = sub_24D71B65C(a2, AssociatedTypeWitness);
  uint64_t v37 = a1;
  uint64_t v15 = v38;
  sub_24DA6D460((uint64_t)v42, v14, a2, AssociatedTypeWitness, a3);
  if (!v15)
  {
    uint64_t v32 = v10;
    uint64_t v33 = AssociatedTypeWitness;
    char v38 = v13;
    uint64_t v31 = v4;
    LOBYTE(v43) = 67;
    uint64_t v16 = MEMORY[0x263F8D9D0];
    sub_24D71B65C(a2, MEMORY[0x263F8D9D0]);
    sub_24DA6D460((uint64_t)&v43, v16, a2, v16, a3);
    uint64_t v17 = v42[0];
    LOBYTE(v41) = 0x80;
    sub_24D71B65C(a2, (uint64_t)&type metadata for Fields);
    sub_24DA6D460((uint64_t)&v41, (uint64_t)&type metadata for Fields, a2, (uint64_t)&type metadata for Fields, a3);
    uint64_t v19 = v43;
    LOBYTE(v40) = -127;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E20);
    sub_24D71B65C(a2, v20);
    sub_24DA6D460((uint64_t)&v40, v20, a2, v20, a3);
    uint64_t v21 = (uint64_t)v38;
    uint64_t v22 = v33;
    uint64_t v29 = v19;
    uint64_t v30 = v41;
    uint64_t v23 = (uint64_t)v32;
    sub_24DA6D8E4((uint64_t)sub_24D71C4C4, 0, a2, (uint64_t)&_s9SQLFieldsON_1, a3, v35, (uint64_t)v32);
    uint64_t v24 = v8;
    uint64_t WitnessTable = swift_getWitnessTable();
    long long v26 = sub_24DB17420(v23, v8, WitnessTable);
    unint64_t v35 = v27;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v23, v24);
    char v39 = 65;
    sub_24D71B65C(a2, (uint64_t)&type metadata for JobReason);
    sub_24DA6D460((uint64_t)&v39, (uint64_t)&type metadata for JobReason, a2, (uint64_t)&type metadata for JobReason, a3);
    sub_24D7B47A0(v21, v17, v29, v30, (uint64_t)v26, v35, v40);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v21, v22);
    a1 = sub_24DB1BC38(v37, a2, a3);
    swift_retain();
    swift_release();
  }
  return a1;
}

void *sub_24D7CD5E4(unsigned __int8 *a1, void *a2)
{
  return sub_24D7CCCBC(*a1, a2);
}

void sub_24D7CD60C(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_24D7CD628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_24D7CD128(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_24D7CD654(unsigned __int8 a1, id a2)
{
  int v4 = a1 >> 5;
  if (v4 != 4)
  {
    if (v4 == 2 && a1 == 66)
    {
      swift_getAssociatedTypeWitness();
      uint64_t v5 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      int v6 = *(uint64_t (**)(id, uint64_t, uint64_t))(v5 + 32);
      uint64_t v7 = swift_checkMetadataState();
      return v6(a2, v7, v5);
    }
    return sub_24DB17074(a1, (uint64_t)a2);
  }
  if (a1 != 129) {
    return sub_24DB17074(a1, (uint64_t)a2);
  }
  uint64_t v9 = *(void **)(v2 + *(void *)(*(void *)v2 + 584));
  if (v9) {
    id v10 = objc_msgSend(v9, sel_version);
  }
  else {
    id v10 = 0;
  }
  id v11 = objc_msgSend(a2, sel_bindLongParameter_, v10);
  uint64_t v12 = sub_24DCC97E8();

  return v12;
}

void sub_24D7CD7D4(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v8 = a2 >> 5;
  if (v8 != 4)
  {
    if (v8 == 2 && a2 == 66)
    {
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v10 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      id v11 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v10 + 16);
      *(void *)(a4 + 24) = AssociatedTypeWitness;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
      v11(a1, a3, AssociatedTypeWitness, v10);
      if (v4) {
        __swift_deallocate_boxed_opaque_existential_0(a4);
      }
      return;
    }
LABEL_10:
    sub_24DB172E0(a1, a2, a3, a4);
    return;
  }
  if (a2 != 129) {
    goto LABEL_10;
  }
  id v12 = a1;
  if ((objc_msgSend(v12, sel_isNullAtIndex_, a3) & 1) != 0
    || (id v13 = objc_msgSend(v12, sel_integerAtIndex_, a3)) == 0)
  {

    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  else
  {
    id v14 = objc_msgSend(self, sel_domainVersionWithVersion_, v13);

    *(void *)(a4 + 24) = sub_24D71C2F4();
    *(void *)a4 = v14;
  }
}

uint64_t sub_24D7CD994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v37[0] = &_s9SQLFieldsON_1;
  v37[1] = a2;
  unint64_t v32 = sub_24D71C2A0();
  v37[2] = v32;
  v37[3] = a3;
  uint64_t v8 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v31 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v13 = (char *)&v29 - v12;
  LOBYTE(v37[0]) = 66;
  uint64_t v14 = sub_24D71B65C(a2, AssociatedTypeWitness);
  uint64_t v15 = a2;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v34 = a1;
  uint64_t v18 = (uint64_t)v35;
  sub_24DA6D460((uint64_t)v37, v14, v16, AssociatedTypeWitness, a3);
  if (!v18)
  {
    uint64_t v29 = v4;
    uint64_t v30 = AssociatedTypeWitness;
    unint64_t v35 = v13;
    LOBYTE(v38) = -127;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E20);
    uint64_t v20 = v15;
    uint64_t v21 = v17;
    sub_24D71B65C(v15, v19);
    sub_24DA6D460((uint64_t)&v38, v19, v15, v19, v17);
    uint64_t v22 = (void *)v37[0];
    sub_24DA6D8E4((uint64_t)sub_24D71C4C4, 0, v20, (uint64_t)&_s9SQLFieldsON_1, v17, v32, (uint64_t)v10);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v24 = sub_24DB17420((uint64_t)v10, v8, WitnessTable);
    uint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v8);
    char v36 = 65;
    sub_24D71B65C(v20, (uint64_t)&type metadata for JobReason);
    sub_24DA6D460((uint64_t)&v36, (uint64_t)&type metadata for JobReason, v20, (uint64_t)&type metadata for JobReason, v21);
    uint64_t v27 = (uint64_t)v35;
    sub_24D7B4348((uint64_t)v35, v22, (uint64_t)v24, v26, v38);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v27, v30);
    uint64_t v15 = sub_24DB1BC38(v34, v20, v21);
    swift_retain();
    swift_release();
  }
  return v15;
}

uint64_t sub_24D7CDDBC(unsigned __int8 *a1, void *a2)
{
  return sub_24D7CD654(*a1, a2);
}

void sub_24D7CDDE4(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
}

uint64_t sub_24D7CDE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_24D7CD994(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_24D7CDE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  id v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v24 - v15;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v14, 1, v17) == 1)
  {
    uint64_t v18 = sub_24DCCA3F8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
    uint64_t v19 = type metadata accessor for ItemPropagationResult();
    uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    return v20(a5, 1, 1, v19);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
    v22(v16, a1, a4);
    v22(v13, (uint64_t)v16, a4);
    v22(a5, (uint64_t)v13, a4);
    uint64_t v23 = type metadata accessor for ItemPropagationResult();
    *(void *)&a5[*(int *)(v23 + 36)] = a2;
    a5[*(int *)(v23 + 40)] = a3 & 1;
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a5, 0, 1, v23);
  }
}

uint64_t *sub_24D7CE08C()
{
  unint64_t v0 = (uint64_t *)sub_24D580378();
  sub_24D43DD74(v0[2]);
  sub_24D43DD74(v0[4]);
  sub_24D43DD74(v0[6]);
  sub_24D43DD74(v0[8]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_24D43DD74(v0[15]);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_24D7CE110()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_24D7CE118(uint64_t result)
{
  *(unsigned char *)(v1 + 112) = result;
  return result;
}

uint64_t sub_24D7CE120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = *v7;
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = v14 + 136;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), void *))(v14 + 136);
  v15[2] = *(void *)(v16 + 56);
  v15[3] = *(void *)(v16 + 64);
  v15[4] = a6;
  v15[5] = a7;
  swift_retain();
  v17(a1, a2, a3, a5, sub_24D7D3D94, v15);

  return swift_release();
}

uint64_t sub_24D7CE20C@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);

  return v3(a1, 1, 1, AssociatedTypeWitness);
}

void sub_24D7CE2B4()
{
}

void sub_24D7CE318()
{
}

void sub_24D7CE37C()
{
}

void sub_24D7CE3E0()
{
}

void sub_24D7CE444()
{
}

void sub_24D7CE4A8()
{
}

void sub_24D7CE50C()
{
}

void sub_24D7CE570()
{
}

void sub_24D7CE5D4()
{
}

uint64_t sub_24D7CE638(uint64_t a1, uint64_t (*a2)(void))
{
  return a2(0);
}

void sub_24D7CE664()
{
}

void sub_24D7CE6C8()
{
}

void sub_24D7CE72C()
{
}

void sub_24D7CE790()
{
}

uint64_t sub_24D7CE7F4()
{
  uint64_t v1 = v0[2];
  v0[2] = 0;
  v0[3] = 0;
  sub_24D43DD74(v1);
  uint64_t v2 = v0[6];
  v0[6] = 0;
  v0[7] = 0;

  return sub_24D43DD74(v2);
}

void sub_24D7CE82C()
{
}

void sub_24D7CE890()
{
}

uint64_t sub_24D7CE8F4(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_24D7CE8FC()
{
  return sub_24DA60588(*v0);
}

uint64_t sub_24D7CE904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DA61198(a1, a2, a3, *v3);
}

uint64_t sub_24D7CE90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for ItemPropagationResult();
  *(void *)(a5 + *(int *)(result + 36)) = a2;
  *(unsigned char *)(a5 + *(int *)(result + 40)) = a3;
  return result;
}

uint64_t sub_24D7CE9A0(int a1)
{
  uint64_t result = 1701736302;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x65726F745353442ELL;
      break;
    case 2:
      uint64_t result = 0x656D75636F44534ELL;
      break;
    case 3:
      uint64_t result = 0x697461646E756F46;
      break;
    case 4:
      uint64_t result = 0x65636966664F534DLL;
      break;
    case 5:
      uint64_t result = 0x6E7953726F6C6F43;
      break;
    case 6:
      uint64_t result = 0x617469724BLL;
      break;
    case 7:
      uint64_t result = 0x7363616D45;
      break;
    case 8:
      uint64_t result = 0x6666457265746641;
      break;
    case 9:
      uint64_t result = 0x61727473756C6C49;
      break;
    case 10:
      uint64_t result = 0x706D6574726B6D61;
      break;
    case 11:
      uint64_t result = 5065046;
      break;
    default:
      type metadata accessor for fpfs_tempfile_pattern_t(0);
      sub_24DCCAED8();
      __break(1u);
      JUMPOUT(0x24D7CEB30);
  }
  return result;
}

uint64_t sub_24D7CEB60()
{
  return sub_24D7CE9A0(*v0);
}

uint64_t sub_24D7CEB68()
{
  return sub_24DCC9BE8();
}

uint64_t sub_24D7CEBF8()
{
  return sub_24DCC9B78();
}

uint64_t sub_24D7CEC78()
{
  return swift_retain();
}

unint64_t sub_24D7CEC80(unint64_t a1, char a2)
{
  if (a2)
  {
    unint64_t result = 0xD00000000000001DLL;
    switch(a1)
    {
      case 1uLL:
      case 2uLL:
        unint64_t result = 0xD000000000000029;
        break;
      case 3uLL:
        unint64_t result = 0x20646570706F7244;
        break;
      case 4uLL:
        unint64_t result = 0x204C5255746F6F72;
        break;
      case 5uLL:
        unint64_t result = 0xD000000000000014;
        break;
      case 6uLL:
        unint64_t result = 1953719668;
        break;
      case 7uLL:
        unint64_t result = 0xD000000000000013;
        break;
      case 8uLL:
        unint64_t result = 0xD000000000000019;
        break;
      default:
        return result;
    }
  }
  else
  {
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v3 = resetReason2str(a1);
    sub_24DCC97E8();

    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return 0xD00000000000001BLL;
  }
  return result;
}

unint64_t sub_24D7CEE44()
{
  return sub_24D7CEC80(*(void *)v0, *(unsigned char *)(v0 + 8));
}

unint64_t sub_24D7CEE50(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  int v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v25 - v10;
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v13, v2, a1);
  unint64_t v15 = 0xD000000000000035;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      unint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      goto LABEL_8;
    case 2u:
      uint64_t v19 = *((void *)v13 + 1);
      char v20 = v13[16];
      unint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v27 = v19;
      char v28 = v20;
      type metadata accessor for FileTreeWriter.StreamResetReason();
      swift_getWitnessTable();
      sub_24DCCADC8();
      return v29;
    case 3u:
      type metadata accessor for FileTreeWriter.StreamResetReason();
      uint64_t v21 = &v13[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v22 = *(void *)v21;
      LODWORD(v26) = v21[8];
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      unint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v27 = v22;
      char v28 = v26;
      swift_getWitnessTable();
LABEL_8:
      sub_24DCCADC8();
      unint64_t v15 = v29;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      return v15;
    case 4u:
      return v15;
    case 5u:
      return 0xD000000000000030;
    case 6u:
      return 0xD000000000000013;
    default:
      uint64_t v16 = sub_24DCCA3F8();
      type metadata accessor for JobLockAggregator();
      sub_24DCCA3F8();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v25 = &v13[*(int *)(TupleTypeMetadata3 + 48)];
      if (!*(void *)&v13[*(int *)(TupleTypeMetadata3 + 64)])
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
        unint64_t v29 = 0;
        unint64_t v30 = 0xE000000000000000;
        sub_24DCCA728();
        goto LABEL_13;
      }
      swift_release();
      uint64_t v18 = v26;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v25, 1, v4) == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
        unint64_t v29 = 0;
        unint64_t v30 = 0xE000000000000000;
LABEL_13:
        sub_24DCC9968();
        swift_getAssociatedConformanceWitness();
        sub_24DCCADC8();
        unint64_t v15 = v29;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
        (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v25, v16);
        return v15;
      }
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v6, v25, v4);
      unint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      uint64_t v24 = v18;
      sub_24DCC9968();
      sub_24DCCADC8();
      unint64_t v15 = v29;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
      return v15;
  }
}

uint64_t sub_24D7CF594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56))(a2, 1, 1);
  }
  else
  {
    uint64_t v8 = sub_24DCCA3F8();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a2, v6, v8);
  }
}

uint64_t sub_24D7CF6F8(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a2;
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v7 = sub_24DCCB058();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  sub_24DCCA3F8();
  uint64_t v11 = sub_24DCCB058();
  sub_24D45C584((void (*)(char *))sub_24D7D3DB8, v11, (uint64_t)v10);
  v14(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24D7CF874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for FileTreeWriter.ItemOrContinuation();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24D7CF910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)*v6;
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13[24];
  v14[3] = v13[25];
  v14[4] = a5;
  void v14[5] = a6;
  uint64_t v15 = (void (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t (*)(uint64_t), void *))v13[63];
  swift_retain();
  v15(a1, a2, a3, 0, a4, sub_24D7D057C, v14);

  return swift_release();
}

uint64_t sub_24D7CFA28(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a2;
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v7 = sub_24DCCB058();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  type metadata accessor for FileTreeWriter.ItemOrContinuation();
  uint64_t v11 = sub_24DCCB058();
  sub_24D45C584((void (*)(char *))sub_24D7D3DC0, v11, (uint64_t)v10);
  v14(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_24D7CFBA4()
{
}

void sub_24D7CFC08()
{
}

void sub_24D7CFC6C()
{
}

void sub_24D7CFCD0()
{
}

uint64_t sub_24D7CFD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t *), uint64_t a10)
{
  uint64_t v34 = a5;
  char v36 = a9;
  uint64_t v37 = a10;
  uint64_t v11 = sub_24DCC8408();
  uint64_t v35 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2();
  sub_24DCCA3F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v14 = sub_24DCCB058();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v32 = v14;
  uint64_t v33 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t *)((char *)&v32 - v16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v39 = v19;
  uint64_t v40 = AssociatedConformanceWitness;
  uint64_t v41 = v21;
  uint64_t v22 = type metadata accessor for FileItemVersion();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v24 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v27 = (char *)&v32 - v26;
  *((void *)v27 + 6) = *(void *)(a4 + 48);
  long long v28 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)a4;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = *(_OWORD *)(a4 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))((char *)&v32 + *(int *)(v25 + 48) - v26, v34, v22);
  LODWORD(v38) = 45;
  sub_24D5D7B80(a4);
  sub_24D5F77E0(MEMORY[0x263F8EE78]);
  sub_24D419240((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
  sub_24DCC8808();
  uint64_t v29 = sub_24DCC83E8();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
  *uint64_t v17 = v29;
  uint64_t v30 = v32;
  swift_storeEnumTagMultiPayload();
  v36(v17);
  (*(void (**)(uint64_t *, uint64_t))(v33 + 8))(v17, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v27, TupleTypeMetadata2);
}

void sub_24D7D0154()
{
}

void sub_24D7D01B8()
{
}

void sub_24D7D021C()
{
}

void sub_24D7D0280()
{
}

void sub_24D7D02E4()
{
}

void sub_24D7D0348()
{
}

void sub_24D7D03AC()
{
}

uint64_t sub_24D7D0410(uint64_t (*a1)(void))
{
  return a1();
}

void sub_24D7D0438()
{
}

uint64_t sub_24D7D049C(uint64_t (*a1)(void))
{
  return a1(0);
}

uint64_t sub_24D7D04CC()
{
  sub_24D43DD74(v0[2]);
  sub_24D43DD74(v0[4]);
  sub_24D43DD74(v0[6]);
  sub_24D43DD74(v0[8]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_24D43DD74(v0[15]);
  swift_release();

  return swift_release();
}

uint64_t sub_24D7D0544()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D7D057C(uint64_t a1)
{
  return sub_24D7CFA28(a1, *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D7D0588()
{
  sub_24D7CE08C();

  return swift_deallocClassInstance();
}

unint64_t sub_24D7D05B8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24D7D05E8();
  unint64_t result = sub_24D7D063C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24D7D05E8()
{
  unint64_t result = qword_26986E9C8;
  if (!qword_26986E9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E9C8);
  }
  return result;
}

unint64_t sub_24D7D063C()
{
  unint64_t result = qword_26986E9D0;
  if (!qword_26986E9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E9D0);
  }
  return result;
}

unint64_t sub_24D7D0694()
{
  unint64_t result = qword_26986E9D8;
  if (!qword_26986E9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E9D8);
  }
  return result;
}

unint64_t sub_24D7D06EC()
{
  unint64_t result = qword_26986E9E0;
  if (!qword_26986E9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E9E0);
  }
  return result;
}

unint64_t sub_24D7D0744()
{
  unint64_t result = qword_26986E9E8;
  if (!qword_26986E9E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26986E9F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E9E8);
  }
  return result;
}

unint64_t sub_24D7D07A4()
{
  unint64_t result = qword_26986E9F8;
  if (!qword_26986E9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986E9F8);
  }
  return result;
}

unint64_t sub_24D7D07FC()
{
  unint64_t result = qword_26986EA00;
  if (!qword_26986EA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986EA00);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileTreeWriterCollisionOptions()
{
  return &type metadata for FileTreeWriterCollisionOptions;
}

uint64_t sub_24D7D0860()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24D7D0908(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v10 = *(void *)v11;
    *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  }
  return v4;
}

uint64_t sub_24D7D0A08(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_24D7D0A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_24D7D0AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_24D7D0B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_24D7D0BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_24D7D0C44(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24D7D0DB0);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_21:
        int v14 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v14 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v15 = *a1;
        }
        else {
          int v15 = *(_DWORD *)a1;
        }
        return v7 + (v15 | v14) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v17 = *(unsigned __int8 *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 2) {
    return ((v17 + 2147483646) & 0x7FFFFFFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_24D7D0DC4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0xFE)
            {
              *(unsigned char *)(((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 8) = a2 + 1;
            }
            else
            {
              char v20 = *(void (**)(void))(v6 + 56);
              v20();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x24D7D0FC8);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for ItemPropagationResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D7D1008()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FileTreeWriter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D7D108C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8);
    uint64_t result = sub_24DCCA3F8();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v6 = &v5;
      uint64_t v7 = v2 + 64;
      unsigned int v8 = &unk_24DCDCBA8;
      swift_getTupleTypeLayout2();
      uint64_t v9 = &v4;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

char *sub_24D7D11B4(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  unint64_t v13 = ((v12 + ((v8 + v10) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13) {
    unint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v13 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v13 <= 0x11) {
    uint64_t v14 = 17;
  }
  else {
    uint64_t v14 = v13;
  }
  if (v14 > 3) {
    goto LABEL_15;
  }
  unsigned int v15 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  unsigned int v16 = v15 | 4;
  BOOL v20 = HIWORD(v15) == 0;
  uint64_t v17 = 2;
  if (!v20) {
    uint64_t v17 = 4;
  }
  if (v16 <= 0xFF) {
LABEL_15:
  }
    uint64_t v17 = 1;
  unint64_t v18 = v17 + v14;
  unsigned int v19 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  BOOL v20 = v18 <= 0x18 && ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) == 0;
  if (!v20 || v19 > 7)
  {
    uint64_t v22 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v22 + (((v19 | 7) + 16) & ~(unint64_t)(v19 | 7)));
    swift_retain();
    return a1;
  }
  if (v14 > 3)
  {
LABEL_29:
    unsigned int v25 = a2[v14];
    unsigned int v26 = v25 - 4;
    if (v25 < 4) {
      goto LABEL_52;
    }
    goto LABEL_34;
  }
  unsigned int v24 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (!HIWORD(v24))
  {
    if ((v24 | 4) > 0xFF)
    {
      unsigned int v25 = *(unsigned __int16 *)&a2[v14];
      unsigned int v26 = v25 - 4;
      if (v25 < 4) {
        goto LABEL_52;
      }
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  unsigned int v25 = *(_DWORD *)&a2[v14];
  unsigned int v26 = v25 - 4;
  if (v25 < 4)
  {
LABEL_52:
    switch(v25)
    {
      case 0u:
        uint64_t v32 = ~v10;
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        uint64_t v33 = (const void *)((unint64_t)&a2[v11] & v32);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v33, 1, v5))
        {
          memcpy((void *)((unint64_t)&a1[v11] & v32), v33, v12);
        }
        else
        {
          (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))((unint64_t)&a1[v11] & v32, v33, v5);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))((unint64_t)&a1[v11] & v32, 0, 1, v5);
        }
        *(void *)((((unint64_t)&a1[v11] & v32) + v12 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v33 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
        swift_retain();
        if (v14 > 3) {
          goto LABEL_70;
        }
        unsigned int v41 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v41))
        {
          *(_DWORD *)&a1[v14] = 0;
        }
        else if ((v41 | 4) <= 0xFF)
        {
LABEL_70:
          a1[v14] = 0;
        }
        else
        {
          *(_WORD *)&a1[v14] = 0;
        }
        return a1;
      case 1u:
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        if (v14 > 3) {
          goto LABEL_64;
        }
        int v39 = 1;
        unsigned int v40 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v40)) {
          goto LABEL_76;
        }
        if ((v40 | 4) <= 0xFF) {
LABEL_64:
        }
          a1[v14] = 1;
        else {
          *(_WORD *)&a1[v14] = 1;
        }
        break;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[16] = a2[16];
        if (v14 > 3) {
          goto LABEL_58;
        }
        unsigned int v34 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v34))
        {
          *(_DWORD *)&a1[v14] = 2;
        }
        else if ((v34 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 2;
        }
        else
        {
LABEL_58:
          a1[v14] = 2;
        }
        return a1;
      case 3u:
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        unint64_t v35 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        char v36 = *(unsigned char *)(v35 + 8);
        unint64_t v37 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v37 = *(void *)v35;
        *(unsigned char *)(v37 + 8) = v36;
        if (v14 > 3) {
          goto LABEL_62;
        }
        unsigned int v38 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v38))
        {
          int v39 = 3;
LABEL_76:
          *(_DWORD *)&a1[v14] = v39;
        }
        else if ((v38 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 3;
        }
        else
        {
LABEL_62:
          a1[v14] = 3;
        }
        break;
      default:
        goto LABEL_42;
    }
    return a1;
  }
LABEL_34:
  if (v14 <= 3) {
    uint64_t v27 = v14;
  }
  else {
    uint64_t v27 = 4;
  }
  switch(v27)
  {
    case 1:
      int v28 = *a2;
      if (v14 >= 4) {
        goto LABEL_41;
      }
      goto LABEL_51;
    case 2:
      int v28 = *(unsigned __int16 *)a2;
      if (v14 < 4) {
        goto LABEL_51;
      }
      goto LABEL_41;
    case 3:
      int v28 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v14 < 4) {
        goto LABEL_51;
      }
      goto LABEL_41;
    case 4:
      int v28 = *(_DWORD *)a2;
      if (v14 < 4)
      {
LABEL_51:
        unsigned int v25 = (v28 | (v26 << (8 * v14))) + 4;
        goto LABEL_52;
      }
LABEL_41:
      unsigned int v25 = v28 + 4;
      if (v25 <= 3) {
        goto LABEL_52;
      }
LABEL_42:
      if (v14 > 3) {
        goto LABEL_46;
      }
      unsigned int v29 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      unsigned int v30 = v29 | 4;
      BOOL v20 = HIWORD(v29) == 0;
      uint64_t v31 = 2;
      if (!v20) {
        uint64_t v31 = 4;
      }
      if (v30 <= 0xFF) {
LABEL_46:
      }
        uint64_t v31 = 1;
      memcpy(a1, a2, v31 + v14);
      break;
    default:
      goto LABEL_52;
  }
  return a1;
}

uint64_t sub_24D7D176C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(result - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(v3 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 + v8;
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v10 = *(void *)(*(void *)(v3 - 8) + 64);
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(v3 - 8) + 64) + 1;
  }
  unint64_t v11 = ((v10 + ((v6 + v8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v6 > v11) {
    unint64_t v11 = *(void *)(*(void *)(result - 8) + 64);
  }
  unint64_t v12 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v11 <= v12) {
    unint64_t v11 = v12;
  }
  if (v11 <= 0x11) {
    unint64_t v11 = 17;
  }
  if (v11 > 3) {
    goto LABEL_11;
  }
  unsigned int v14 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
  if (HIWORD(v14))
  {
    unsigned int v13 = *(_DWORD *)&a1[v11];
  }
  else
  {
    if ((v14 | 4) <= 0xFF)
    {
LABEL_11:
      unsigned int v13 = a1[v11];
      goto LABEL_16;
    }
    unsigned int v13 = *(unsigned __int16 *)&a1[v11];
  }
LABEL_16:
  unsigned int v15 = v13 - 4;
  if (v13 >= 4)
  {
    if (v11 <= 3) {
      uint64_t v16 = v11;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a1;
        goto LABEL_25;
      case 2:
        int v17 = *(unsigned __int16 *)a1;
        goto LABEL_25;
      case 3:
        int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_25;
      case 4:
        int v17 = *(_DWORD *)a1;
LABEL_25:
        int v18 = (v17 | (v15 << (8 * v11))) + 4;
        unsigned int v13 = v17 + 4;
        if (v11 < 4) {
          unsigned int v13 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 3 || v13 == 1)
  {
    uint64_t v21 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v5 + 8);
    return v21(a1, result);
  }
  else if (!v13)
  {
    uint64_t v19 = ~v8;
    (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, result);
    unint64_t v20 = (unint64_t)&a1[v9] & v19;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v20, 1, v3)) {
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v20, v3);
    }
    return swift_release();
  }
  return result;
}

unsigned char *sub_24D7D1A40(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  unint64_t v13 = ((v12 + ((v8 + v10) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13) {
    unint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v13 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v13 <= 0x11) {
    uint64_t v14 = 17;
  }
  else {
    uint64_t v14 = v13;
  }
  if (v14 > 3) {
    goto LABEL_14;
  }
  unsigned int v15 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (HIWORD(v15))
  {
    unsigned int v16 = *(_DWORD *)&a2[v14];
    unsigned int v17 = v16 - 4;
    if (v16 < 4) {
      goto LABEL_28;
    }
    goto LABEL_19;
  }
  if ((v15 | 4) <= 0xFF)
  {
LABEL_14:
    unsigned int v16 = a2[v14];
    unsigned int v17 = v16 - 4;
    if (v16 < 4) {
      goto LABEL_28;
    }
LABEL_19:
    if (v14 <= 3) {
      uint64_t v18 = v14;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *a2;
        if (v14 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 2:
        int v19 = *(unsigned __int16 *)a2;
        if (v14 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 3:
        int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v14 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 4:
        int v19 = *(_DWORD *)a2;
        if (v14 < 4) {
LABEL_26:
        }
          v19 |= v17 << (8 * v14);
LABEL_27:
        unsigned int v16 = v19 + 4;
        break;
      default:
        goto LABEL_28;
    }
    goto LABEL_28;
  }
  unsigned int v16 = *(unsigned __int16 *)&a2[v14];
  unsigned int v17 = v16 - 4;
  if (v16 >= 4) {
    goto LABEL_19;
  }
LABEL_28:
  switch(v16)
  {
    case 0u:
      uint64_t v20 = ~v10;
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      uint64_t v21 = (const void *)((unint64_t)&a2[v11] & v20);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v21, 1, v5))
      {
        memcpy((void *)((unint64_t)&a1[v11] & v20), v21, v12);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))((unint64_t)&a1[v11] & v20, v21, v5);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))((unint64_t)&a1[v11] & v20, 0, 1, v5);
      }
      *(void *)((((unint64_t)&a1[v11] & v20) + v12 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v21 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v14 <= 3)
      {
        unsigned int v33 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v33))
        {
          *(_DWORD *)&a1[v14] = 0;
          return a1;
        }
        if ((v33 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 0;
          return a1;
        }
      }
      a1[v14] = 0;
      return a1;
    case 1u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      if (v14 > 3) {
        goto LABEL_48;
      }
      int v31 = 1;
      unsigned int v32 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (HIWORD(v32)) {
        goto LABEL_60;
      }
      if ((v32 | 4) > 0xFF) {
        *(_WORD *)&a1[v14] = 1;
      }
      else {
LABEL_48:
      }
        a1[v14] = 1;
      return a1;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      if (v14 <= 3)
      {
        unsigned int v22 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v22))
        {
          *(_DWORD *)&a1[v14] = 2;
          return a1;
        }
        if ((v22 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 2;
          return a1;
        }
      }
      a1[v14] = 2;
      return a1;
    case 3u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      unint64_t v23 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      char v24 = *(unsigned char *)(v23 + 8);
      unint64_t v25 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v25 = *(void *)v23;
      *(unsigned char *)(v25 + 8) = v24;
      if (v14 > 3) {
        goto LABEL_38;
      }
      unsigned int v26 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (!HIWORD(v26))
      {
        if ((v26 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 3;
          return a1;
        }
LABEL_38:
        a1[v14] = 3;
        return a1;
      }
      int v31 = 3;
LABEL_60:
      *(_DWORD *)&a1[v14] = v31;
      return a1;
    default:
      if (v14 > 3) {
        goto LABEL_43;
      }
      unsigned int v27 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      unsigned int v28 = v27 | 4;
      BOOL v29 = HIWORD(v27) == 0;
      uint64_t v30 = 2;
      if (!v29) {
        uint64_t v30 = 4;
      }
      if (v28 <= 0xFF) {
LABEL_43:
      }
        uint64_t v30 = 1;
      memcpy(a1, a2, v30 + v14);
      return a1;
  }
}

unsigned __int8 *sub_24D7D1F68(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  unint64_t v13 = ((v12 + ((v8 + v10) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13) {
    unint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v13 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v13 <= 0x11) {
    uint64_t v14 = 17;
  }
  else {
    uint64_t v14 = v13;
  }
  if (v14 > 3)
  {
LABEL_15:
    unsigned int v16 = a1[v14];
    unsigned int v17 = v16 - 4;
    if (v16 < 4) {
      goto LABEL_29;
    }
    goto LABEL_20;
  }
  unsigned int v15 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (!HIWORD(v15))
  {
    if ((v15 | 4) > 0xFF)
    {
      unsigned int v16 = *(unsigned __int16 *)&a1[v14];
      unsigned int v17 = v16 - 4;
      if (v16 < 4) {
        goto LABEL_29;
      }
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  unsigned int v16 = *(_DWORD *)&a1[v14];
  unsigned int v17 = v16 - 4;
  if (v16 < 4) {
    goto LABEL_29;
  }
LABEL_20:
  if (v14 <= 3) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *a1;
      if (v14 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 2:
      int v19 = *(unsigned __int16 *)a1;
      if (v14 >= 4) {
        goto LABEL_28;
      }
      goto LABEL_27;
    case 3:
      int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v14 < 4) {
        goto LABEL_27;
      }
      goto LABEL_28;
    case 4:
      int v19 = *(_DWORD *)a1;
      if (v14 < 4) {
LABEL_27:
      }
        v19 |= v17 << (8 * v14);
LABEL_28:
      unsigned int v16 = v19 + 4;
      break;
    default:
      break;
  }
LABEL_29:
  uint64_t v42 = ~v10;
  if (v16 == 3 || v16 == 1)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
    if (v14 > 3) {
      goto LABEL_40;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((unint64_t)&a1[v11] & v42, 1, v5))(*(void (**)(unint64_t, uint64_t))(v9 + 8))((unint64_t)&a1[v11] & v42, v5); {
      swift_release();
      }
    }
    if (v14 > 3)
    {
LABEL_40:
      unsigned int v21 = a2[v14];
      unsigned int v22 = v21 - 4;
      if (v21 < 4) {
        goto LABEL_67;
      }
      goto LABEL_45;
    }
  }
  unsigned int v20 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (!HIWORD(v20))
  {
    if ((v20 | 4) > 0xFF)
    {
      unsigned int v21 = *(unsigned __int16 *)&a2[v14];
      unsigned int v22 = v21 - 4;
      if (v21 < 4) {
        goto LABEL_67;
      }
      goto LABEL_45;
    }
    goto LABEL_40;
  }
  unsigned int v21 = *(_DWORD *)&a2[v14];
  unsigned int v22 = v21 - 4;
  if (v21 < 4)
  {
LABEL_67:
    switch(v21)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        BOOL v29 = (void *)((unint64_t)&a1[v11] & v42);
        uint64_t v30 = (const void *)((unint64_t)&a2[v11] & v42);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v30, 1, v5))
        {
          memcpy(v29, v30, v12);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v29, v30, v5);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v29, 0, 1, v5);
        }
        *(void *)(((unint64_t)v29 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v30
                                                                                           + v12
                                                                                           + 7) & 0xFFFFFFFFFFFFFFF8);
        swift_retain();
        if (v14 > 3) {
          goto LABEL_85;
        }
        unsigned int v40 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v40))
        {
          *(_DWORD *)&a1[v14] = 0;
        }
        else if ((v40 | 4) <= 0xFF)
        {
LABEL_85:
          a1[v14] = 0;
        }
        else
        {
          *(_WORD *)&a1[v14] = 0;
        }
        return a1;
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        if (v14 > 3) {
          goto LABEL_79;
        }
        int v37 = 1;
        unsigned int v38 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v38)) {
          goto LABEL_91;
        }
        if ((v38 | 4) <= 0xFF)
        {
LABEL_79:
          a1[v14] = 1;
          return a1;
        }
        __int16 v39 = 1;
        goto LABEL_95;
      case 2u:
        long long v31 = *(_OWORD *)a2;
        a1[16] = a2[16];
        *(_OWORD *)a1 = v31;
        if (v14 > 3) {
          goto LABEL_73;
        }
        unsigned int v32 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v32))
        {
          *(_DWORD *)&a1[v14] = 2;
          return a1;
        }
        if ((v32 | 4) <= 0xFF)
        {
LABEL_73:
          a1[v14] = 2;
          return a1;
        }
        __int16 v39 = 2;
        goto LABEL_95;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
        unint64_t v33 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        char v34 = *(unsigned char *)(v33 + 8);
        unint64_t v35 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v35 = *(void *)v33;
        *(unsigned char *)(v35 + 8) = v34;
        if (v14 > 3) {
          goto LABEL_77;
        }
        unsigned int v36 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v36))
        {
          int v37 = 3;
LABEL_91:
          *(_DWORD *)&a1[v14] = v37;
        }
        else if ((v36 | 4) > 0xFF)
        {
          __int16 v39 = 3;
LABEL_95:
          *(_WORD *)&a1[v14] = v39;
        }
        else
        {
LABEL_77:
          a1[v14] = 3;
        }
        break;
      default:
        goto LABEL_53;
    }
    return a1;
  }
LABEL_45:
  if (v14 <= 3) {
    uint64_t v23 = v14;
  }
  else {
    uint64_t v23 = 4;
  }
  switch(v23)
  {
    case 1:
      int v24 = *a2;
      if (v14 >= 4) {
        goto LABEL_52;
      }
      goto LABEL_66;
    case 2:
      int v24 = *(unsigned __int16 *)a2;
      if (v14 < 4) {
        goto LABEL_66;
      }
      goto LABEL_52;
    case 3:
      int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v14 < 4) {
        goto LABEL_66;
      }
      goto LABEL_52;
    case 4:
      int v24 = *(_DWORD *)a2;
      if (v14 < 4)
      {
LABEL_66:
        unsigned int v21 = (v24 | (v22 << (8 * v14))) + 4;
        goto LABEL_67;
      }
LABEL_52:
      unsigned int v21 = v24 + 4;
      if (v21 <= 3) {
        goto LABEL_67;
      }
LABEL_53:
      if (v14 > 3) {
        goto LABEL_57;
      }
      unsigned int v25 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      unsigned int v26 = v25 | 4;
      BOOL v27 = HIWORD(v25) == 0;
      uint64_t v28 = 2;
      if (!v27) {
        uint64_t v28 = 4;
      }
      if (v26 <= 0xFF) {
LABEL_57:
      }
        uint64_t v28 = 1;
      memcpy(a1, a2, v28 + v14);
      break;
    default:
      goto LABEL_67;
  }
  return a1;
}

unsigned char *sub_24D7D2670(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 + v11;
  int v13 = *(_DWORD *)(v9 + 84);
  uint64_t v14 = *(void *)(v9 + 64);
  if (v13) {
    size_t v15 = *(void *)(v9 + 64);
  }
  else {
    size_t v15 = v14 + 1;
  }
  unint64_t v16 = ((((v8 + v11) & ~v11) + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v16) {
    unint64_t v16 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v16 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v16 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v16 <= 0x11) {
    uint64_t v17 = 17;
  }
  else {
    uint64_t v17 = v16;
  }
  if (v17 > 3) {
    goto LABEL_14;
  }
  unsigned int v18 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
  if (HIWORD(v18))
  {
    unsigned int v19 = *(_DWORD *)&a2[v17];
    unsigned int v20 = v19 - 4;
    if (v19 < 4) {
      goto LABEL_28;
    }
    goto LABEL_19;
  }
  if ((v18 | 4) <= 0xFF)
  {
LABEL_14:
    unsigned int v19 = a2[v17];
    unsigned int v20 = v19 - 4;
    if (v19 < 4) {
      goto LABEL_28;
    }
LABEL_19:
    if (v17 <= 3) {
      uint64_t v21 = v17;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *a2;
        if (v17 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 2:
        int v22 = *(unsigned __int16 *)a2;
        if (v17 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 3:
        int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v17 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 4:
        int v22 = *(_DWORD *)a2;
        if (v17 < 4) {
LABEL_26:
        }
          v22 |= v20 << (8 * v17);
LABEL_27:
        unsigned int v19 = v22 + 4;
        break;
      default:
        goto LABEL_28;
    }
    goto LABEL_28;
  }
  unsigned int v19 = *(unsigned __int16 *)&a2[v17];
  unsigned int v20 = v19 - 4;
  if (v19 >= 4) {
    goto LABEL_19;
  }
LABEL_28:
  switch(v19)
  {
    case 0u:
      uint64_t v23 = ~v11;
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      __dst = (void *)((unint64_t)&a1[v12] & v23);
      int v24 = (const void *)((unint64_t)&a2[v12] & v23);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v24, 1, v5))
      {
        memcpy(__dst, v24, v15);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(__dst, v24, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v5);
      }
      uint64_t v36 = 7;
      if (!v13) {
        uint64_t v36 = 8;
      }
      *(void *)(((unint64_t)__dst + v14 + v36) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v24
                                                                                             + v14
                                                                                             + v36) & 0xFFFFFFFFFFFFFFF8);
      if (v17 <= 3)
      {
        unsigned int v37 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
        if (HIWORD(v37))
        {
          *(_DWORD *)&a1[v17] = 0;
          return a1;
        }
        if ((v37 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v17] = 0;
          return a1;
        }
      }
      a1[v17] = 0;
      return a1;
    case 1u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      if (v17 > 3) {
        goto LABEL_48;
      }
      int v34 = 1;
      unsigned int v35 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
      if (HIWORD(v35)) {
        goto LABEL_62;
      }
      if ((v35 | 4) > 0xFF) {
        *(_WORD *)&a1[v17] = 1;
      }
      else {
LABEL_48:
      }
        a1[v17] = 1;
      return a1;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      if (v17 <= 3)
      {
        unsigned int v25 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
        if (HIWORD(v25))
        {
          *(_DWORD *)&a1[v17] = 2;
          return a1;
        }
        if ((v25 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v17] = 2;
          return a1;
        }
      }
      a1[v17] = 2;
      return a1;
    case 3u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      unint64_t v26 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      char v27 = *(unsigned char *)(v26 + 8);
      unint64_t v28 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v28 = *(void *)v26;
      *(unsigned char *)(v28 + 8) = v27;
      if (v17 > 3) {
        goto LABEL_38;
      }
      unsigned int v29 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
      if (!HIWORD(v29))
      {
        if ((v29 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v17] = 3;
          return a1;
        }
LABEL_38:
        a1[v17] = 3;
        return a1;
      }
      int v34 = 3;
LABEL_62:
      *(_DWORD *)&a1[v17] = v34;
      return a1;
    default:
      if (v17 > 3) {
        goto LABEL_43;
      }
      unsigned int v30 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
      unsigned int v31 = v30 | 4;
      BOOL v32 = HIWORD(v30) == 0;
      uint64_t v33 = 2;
      if (!v32) {
        uint64_t v33 = 4;
      }
      if (v31 <= 0xFF) {
LABEL_43:
      }
        uint64_t v33 = 1;
      memcpy(a1, a2, v33 + v17);
      return a1;
  }
}

unsigned __int8 *sub_24D7D2BB0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(v5 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v50 = v8 + v10;
  unint64_t v11 = (v8 + v10) & ~v10;
  size_t v12 = *(void *)(v9 + 64);
  int v46 = *(_DWORD *)(v9 + 84);
  size_t v47 = v12;
  if (!v46) {
    ++v12;
  }
  size_t __n = v12;
  unint64_t v13 = ((v12 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13) {
    unint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unint64_t v14 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v13 <= v14) {
    unint64_t v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v13 <= 0x11) {
    uint64_t v15 = 17;
  }
  else {
    uint64_t v15 = v13;
  }
  if (v15 > 3)
  {
LABEL_14:
    unsigned int v17 = a1[v15];
    unsigned int v18 = v17 - 4;
    if (v17 < 4) {
      goto LABEL_28;
    }
    goto LABEL_19;
  }
  unsigned int v16 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
  if (!HIWORD(v16))
  {
    if ((v16 | 4) > 0xFF)
    {
      unsigned int v17 = *(unsigned __int16 *)&a1[v15];
      unsigned int v18 = v17 - 4;
      if (v17 < 4) {
        goto LABEL_28;
      }
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  unsigned int v17 = *(_DWORD *)&a1[v15];
  unsigned int v18 = v17 - 4;
  if (v17 < 4) {
    goto LABEL_28;
  }
LABEL_19:
  if (v15 <= 3) {
    uint64_t v19 = v15;
  }
  else {
    uint64_t v19 = 4;
  }
  switch(v19)
  {
    case 1:
      int v20 = *a1;
      if (v15 < 4) {
        goto LABEL_26;
      }
      goto LABEL_27;
    case 2:
      int v20 = *(unsigned __int16 *)a1;
      if (v15 >= 4) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 3:
      int v20 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v15 < 4) {
        goto LABEL_26;
      }
      goto LABEL_27;
    case 4:
      int v20 = *(_DWORD *)a1;
      if (v15 < 4) {
LABEL_26:
      }
        v20 |= v18 << (8 * v15);
LABEL_27:
      unsigned int v17 = v20 + 4;
      break;
    default:
      break;
  }
LABEL_28:
  uint64_t v49 = ~v10;
  if (v17 == 3 || v17 == 1)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
    if (v15 > 3) {
      goto LABEL_39;
    }
  }
  else
  {
    if (!v17)
    {
      unint64_t v45 = (v8 + v10) & ~v10;
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((unint64_t)&a1[v50] & v49, 1, v5))(*(void (**)(unint64_t, uint64_t))(v9 + 8))((unint64_t)&a1[v50] & v49, v5); {
      swift_release();
      }
      unint64_t v11 = v45;
    }
    if (v15 > 3)
    {
LABEL_39:
      unsigned int v22 = a2[v15];
      unsigned int v23 = v22 - 4;
      if (v22 < 4) {
        goto LABEL_66;
      }
      goto LABEL_44;
    }
  }
  unsigned int v21 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
  if (!HIWORD(v21))
  {
    if ((v21 | 4) > 0xFF)
    {
      unsigned int v22 = *(unsigned __int16 *)&a2[v15];
      unsigned int v23 = v22 - 4;
      if (v22 < 4) {
        goto LABEL_66;
      }
      goto LABEL_44;
    }
    goto LABEL_39;
  }
  unsigned int v22 = *(_DWORD *)&a2[v15];
  unsigned int v23 = v22 - 4;
  if (v22 < 4)
  {
LABEL_66:
    switch(v22)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
        unsigned int v30 = (void *)((unint64_t)&a1[v50] & v49);
        unsigned int v31 = (const void *)((unint64_t)&a2[v50] & v49);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v31, 1, v5))
        {
          size_t v32 = __n;
          memcpy(v30, v31, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v30, v31, v5);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v30, 0, 1, v5);
          size_t v32 = __n;
        }
        uint64_t v41 = 7;
        if (!v46) {
          uint64_t v41 = 8;
        }
        *(void *)(((unint64_t)v30 + v47 + v41) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v31
                                                                                             + v47
                                                                                             + v41) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v42 = ((v11 + v32 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
        if (v8 > v42) {
          unint64_t v42 = v8;
        }
        if (v42 <= v14) {
          unint64_t v42 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
        }
        if (v42 <= 0x11) {
          unint64_t v42 = 17;
        }
        if (v42 > 3) {
          goto LABEL_92;
        }
        unsigned int v43 = ((1 << (8 * v42)) | 2u) >> (8 * v42);
        if (HIWORD(v43))
        {
          *(_DWORD *)&a1[v42] = 0;
        }
        else if ((v43 | 4) <= 0xFF)
        {
LABEL_92:
          a1[v42] = 0;
        }
        else
        {
          *(_WORD *)&a1[v42] = 0;
        }
        return a1;
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
        if (v15 > 3) {
          goto LABEL_78;
        }
        int v38 = 1;
        unsigned int v39 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
        if (HIWORD(v39)) {
          goto LABEL_98;
        }
        if ((v39 | 4) <= 0xFF)
        {
LABEL_78:
          a1[v15] = 1;
          return a1;
        }
        __int16 v40 = 1;
        goto LABEL_102;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[16] = a2[16];
        if (v15 > 3) {
          goto LABEL_72;
        }
        unsigned int v33 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
        if (HIWORD(v33))
        {
          *(_DWORD *)&a1[v15] = 2;
          return a1;
        }
        if ((v33 | 4) <= 0xFF)
        {
LABEL_72:
          a1[v15] = 2;
          return a1;
        }
        __int16 v40 = 2;
        goto LABEL_102;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
        unint64_t v34 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        char v35 = *(unsigned char *)(v34 + 8);
        unint64_t v36 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v36 = *(void *)v34;
        *(unsigned char *)(v36 + 8) = v35;
        if (v15 > 3) {
          goto LABEL_76;
        }
        unsigned int v37 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
        if (HIWORD(v37))
        {
          int v38 = 3;
LABEL_98:
          *(_DWORD *)&a1[v15] = v38;
        }
        else if ((v37 | 4) > 0xFF)
        {
          __int16 v40 = 3;
LABEL_102:
          *(_WORD *)&a1[v15] = v40;
        }
        else
        {
LABEL_76:
          a1[v15] = 3;
        }
        break;
      default:
        goto LABEL_52;
    }
    return a1;
  }
LABEL_44:
  if (v15 <= 3) {
    uint64_t v24 = v15;
  }
  else {
    uint64_t v24 = 4;
  }
  switch(v24)
  {
    case 1:
      int v25 = *a2;
      if (v15 >= 4) {
        goto LABEL_51;
      }
      goto LABEL_65;
    case 2:
      int v25 = *(unsigned __int16 *)a2;
      if (v15 < 4) {
        goto LABEL_65;
      }
      goto LABEL_51;
    case 3:
      int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v15 < 4) {
        goto LABEL_65;
      }
      goto LABEL_51;
    case 4:
      int v25 = *(_DWORD *)a2;
      if (v15 < 4)
      {
LABEL_65:
        unsigned int v22 = (v25 | (v23 << (8 * v15))) + 4;
        goto LABEL_66;
      }
LABEL_51:
      unsigned int v22 = v25 + 4;
      if (v22 <= 3) {
        goto LABEL_66;
      }
LABEL_52:
      if (v15 > 3) {
        goto LABEL_56;
      }
      unsigned int v26 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
      unsigned int v27 = v26 | 4;
      BOOL v28 = HIWORD(v26) == 0;
      uint64_t v29 = 2;
      if (!v28) {
        uint64_t v29 = 4;
      }
      if (v27 <= 0xFF) {
LABEL_56:
      }
        uint64_t v29 = 1;
      memcpy(a1, a2, v29 + v15);
      break;
    default:
      goto LABEL_66;
  }
  return a1;
}

uint64_t sub_24D7D3300(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v7 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v8 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v8 = *(void *)(v7 + 64) + 1;
  }
  unint64_t v9 = ((v8 + ((v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v6 > v9) {
    unint64_t v9 = v6;
  }
  if (v9 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v9 <= 0x11) {
    unint64_t v9 = 17;
  }
  if (v9 > 3)
  {
    unsigned int v10 = 5;
LABEL_14:
    char v12 = 8;
    goto LABEL_15;
  }
  unsigned int v11 = ((1 << (8 * v9)) | 2u) >> (8 * v9);
  if (HIWORD(v11)) {
    goto LABEL_18;
  }
  unsigned int v10 = v11 | 4;
  if (v10 <= 0xFF) {
    goto LABEL_14;
  }
  char v12 = 16;
LABEL_15:
  int v13 = (1 << v12) - v10;
  if (v13 >= 0)
  {
    if (v9 > 3) {
      goto LABEL_22;
    }
LABEL_19:
    unsigned int v14 = ((1 << (8 * v9)) | 2u) >> (8 * v9);
    unsigned int v15 = v14 | 4;
    BOOL v16 = HIWORD(v14) == 0;
    uint64_t v17 = 2;
    if (!v16) {
      uint64_t v17 = 4;
    }
    if (v15 > 0xFF) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_18:
  int v13 = 0x7FFFFFFF;
  if (v9 <= 3) {
    goto LABEL_19;
  }
LABEL_22:
  uint64_t v17 = 1;
LABEL_23:
  if (!a2) {
    return 0;
  }
  if (a2 <= v13) {
    goto LABEL_43;
  }
  unint64_t v18 = v17 + v9;
  char v19 = 8 * v18;
  if (v18 <= 3)
  {
    unsigned int v22 = ((a2 - v13 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v22))
    {
      int v20 = *(_DWORD *)((char *)a1 + v18);
      if (!v20) {
        goto LABEL_43;
      }
      goto LABEL_35;
    }
    if (v22 > 0xFF)
    {
      int v20 = *(unsigned __int16 *)((char *)a1 + v18);
      if (!*(unsigned __int16 *)((char *)a1 + v18)) {
        goto LABEL_43;
      }
      goto LABEL_35;
    }
    if (v22 < 2)
    {
LABEL_43:
      if (v9 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v9)) | 2u) >> (8 * v9);
        if (HIWORD(v30))
        {
          unsigned int v25 = *(_DWORD *)((char *)a1 + v9);
          unsigned int v26 = ~v25;
LABEL_51:
          int v29 = 0x7FFFFFFF;
LABEL_52:
          if (v29 > v26) {
            return -v25;
          }
          else {
            return 0;
          }
        }
        int v28 = v30 | 4;
        if ((v30 | 4) > 0xFF)
        {
          int v32 = *(unsigned __int16 *)((char *)a1 + v9);
          unsigned int v25 = v32 | 0xFFFF0000;
          unsigned int v26 = v32 ^ 0xFFFF;
          char v27 = 16;
        }
        else
        {
          int v31 = *((unsigned __int8 *)a1 + v9);
          unsigned int v25 = v31 | 0xFFFFFF00;
          unsigned int v26 = v31 ^ 0xFF;
          char v27 = 8;
        }
      }
      else
      {
        int v24 = *((unsigned __int8 *)a1 + v9);
        unsigned int v25 = v24 | 0xFFFFFF00;
        unsigned int v26 = v24 ^ 0xFF;
        char v27 = 8;
        int v28 = 5;
      }
      int v29 = (1 << v27) - v28;
      if (v29 >= 0) {
        goto LABEL_52;
      }
      goto LABEL_51;
    }
  }
  int v20 = *((unsigned __int8 *)a1 + v18);
  if (!*((unsigned char *)a1 + v18)) {
    goto LABEL_43;
  }
LABEL_35:
  int v23 = (v20 - 1) << v19;
  if (v18 > 3) {
    int v23 = 0;
  }
  if (v18)
  {
    if (v18 > 3) {
      LODWORD(v18) = 4;
    }
    switch((int)v18)
    {
      case 2:
        LODWORD(v18) = *a1;
        break;
      case 3:
        LODWORD(v18) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v18) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v18) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v13 + (v18 | v23) + 1;
}

void sub_24D7D3624(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v9 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v10 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v10 = *(void *)(v9 + 64) + 1;
  }
  unint64_t v11 = ((v10 + ((v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 > v11) {
    unint64_t v11 = v8;
  }
  if (v11 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v11 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v11 <= 0x11) {
    unint64_t v11 = 17;
  }
  char v12 = 8 * v11;
  if (v11 > 3)
  {
    unsigned int v13 = 5;
LABEL_12:
    char v14 = 8;
    goto LABEL_13;
  }
  unsigned int v16 = ((1 << v12) | 2u) >> v12;
  if (HIWORD(v16)) {
    goto LABEL_19;
  }
  unsigned int v13 = v16 | 4;
  if (v13 <= 0xFF) {
    goto LABEL_12;
  }
  char v14 = 16;
LABEL_13:
  int v15 = (1 << v14) - v13;
  if (v15 >= 0)
  {
    if (v11 > 3) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v15 = 0x7FFFFFFF;
  if (v11 > 3)
  {
LABEL_23:
    uint64_t v20 = 1;
    goto LABEL_24;
  }
LABEL_20:
  unsigned int v17 = ((1 << v12) | 2u) >> v12;
  unsigned int v18 = v17 | 4;
  BOOL v19 = HIWORD(v17) == 0;
  uint64_t v20 = 2;
  if (!v19) {
    uint64_t v20 = 4;
  }
  if (v18 <= 0xFF) {
    goto LABEL_23;
  }
LABEL_24:
  size_t v21 = v20 + v11;
  if (a3 <= v15)
  {
    int v22 = 0;
  }
  else if (v21 <= 3)
  {
    unsigned int v25 = ((a3 - v15 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v25))
    {
      int v22 = 4;
    }
    else if (v25 >= 0x100)
    {
      int v22 = 2;
    }
    else
    {
      int v22 = v25 > 1;
    }
  }
  else
  {
    int v22 = 1;
  }
  if (v15 < a2)
  {
    unsigned int v23 = ~v15 + a2;
    if (v21 < 4)
    {
      int v24 = (v23 >> (8 * v21)) + 1;
      if (v21)
      {
        int v26 = v23 & ~(-1 << (8 * v21));
        bzero(a1, v21);
        if (v21 == 3)
        {
          *(_WORD *)a1 = v26;
          a1[2] = BYTE2(v26);
        }
        else if (v21 == 2)
        {
          *(_WORD *)a1 = v26;
        }
        else
        {
          *a1 = v26;
        }
      }
    }
    else
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        a1[v21] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v21] = v24;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v21] = v24;
        return;
      default:
        return;
    }
  }
  switch(v22)
  {
    case 1:
      a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 2:
      *(_WORD *)&a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x24D7D396CLL);
    case 4:
      *(_DWORD *)&a1[v21] = 0;
      goto LABEL_43;
    default:
LABEL_43:
      if (!a2) {
        return;
      }
LABEL_44:
      int v27 = -a2;
      if (v11 > 3) {
        goto LABEL_45;
      }
      unsigned int v28 = ((1 << v12) | 2u) >> v12;
      if (HIWORD(v28))
      {
        *(_DWORD *)&a1[v11] = v27;
      }
      else if ((v28 | 4) <= 0xFF)
      {
LABEL_45:
        a1[v11] = v27;
      }
      else
      {
        *(_WORD *)&a1[v11] = v27;
      }
      return;
  }
}

uint64_t sub_24D7D3994(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = *(void *)(v3 - 8);
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v7 = ((v6 + ((v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v4 > v7) {
    unint64_t v7 = v4;
  }
  if (v7 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v7 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v7 <= 0x11) {
    unint64_t v7 = 17;
  }
  if (v7 > 3) {
    goto LABEL_11;
  }
  unsigned int v9 = ((1 << (8 * v7)) | 2u) >> (8 * v7);
  if (HIWORD(v9))
  {
    uint64_t result = *(unsigned int *)&a1[v7];
  }
  else
  {
    if ((v9 | 4) <= 0xFF)
    {
LABEL_11:
      uint64_t result = a1[v7];
      goto LABEL_16;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v7];
  }
LABEL_16:
  if (result >= 4)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_25;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_25;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_25;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_25:
        unsigned int v12 = (v11 | ((result - 4) << (8 * v7))) + 4;
        unsigned int v13 = v11 + 4;
        if (v7 >= 4) {
          uint64_t result = v13;
        }
        else {
          uint64_t result = v12;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24D7D3B48(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v7 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v8 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v8 = *(void *)(v7 + 64) + 1;
  }
  unint64_t v9 = ((v8 + ((v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v6 > v9) {
    unint64_t v9 = v6;
  }
  if (v9 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) {
    unint64_t v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  }
  if (v9 <= 0x11) {
    size_t v10 = 17;
  }
  else {
    size_t v10 = v9;
  }
  if (a2 > 3)
  {
    unsigned int v11 = a2 - 4;
    if (v10 < 4)
    {
      int v13 = (v11 >> (8 * v10)) + 4;
      v11 &= ~(-1 << (8 * v10));
      char v14 = (int *)&a1[v10];
      unsigned int v15 = ((1 << (8 * v10)) | 2u) >> (8 * v10);
      if (HIWORD(v15))
      {
        *char v14 = v13;
      }
      else if ((v15 | 4) > 0xFF)
      {
        *(_WORD *)char v14 = v13;
      }
      else
      {
        *(unsigned char *)char v14 = v13;
      }
    }
    else
    {
      a1[v10] = 4;
    }
    if (v10 >= 4) {
      int v16 = 4;
    }
    else {
      int v16 = v10;
    }
    bzero(a1, v10);
    switch(v16)
    {
      case 2:
        *(_WORD *)a1 = v11;
        break;
      case 3:
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
        break;
      case 4:
        *(_DWORD *)a1 = v11;
        break;
      default:
        *a1 = v11;
        break;
    }
  }
  else
  {
    if (v10 > 3)
    {
LABEL_13:
      a1[v10] = a2;
      return;
    }
    unsigned int v12 = ((1 << (8 * v10)) | 2u) >> (8 * v10);
    if (HIWORD(v12))
    {
      *(_DWORD *)&a1[v10] = a2;
    }
    else
    {
      if ((v12 | 4) <= 0xFF) {
        goto LABEL_13;
      }
      *(_WORD *)&a1[v10] = a2;
    }
  }
}

uint64_t type metadata accessor for FileTreeWriter.FileTreeChange()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeWriter.StreamResetReason()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D7D3D94(uint64_t a1)
{
  return sub_24D7CF6F8(a1, *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for FileTreeWriter.ItemOrContinuation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D7D3DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D7CF874(a1, a2);
}

uint64_t sub_24D7D3DC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FileTreeWriter.ItemOrContinuation();
  return sub_24D7CF594(v2, a1);
}

uint64_t sub_24D7D3E04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24D7D3E4C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t sub_24D7D3EBC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t sub_24D7D3F0C(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24D7D3F54(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for FileTreeWriter.EventStreamBatch()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D7D3FAC()
{
  uint64_t result = sub_24DCCA3F8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_24D7D4044(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  if (v7 <= 8) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = v7;
  }
  int v9 = *(_DWORD *)(v6 + 80);
  if ((v9 & 0x1000F8) != 0 || (unint64_t)(v8 + 1) > 0x18)
  {
    uint64_t v11 = *(void *)a2;
    *unint64_t v4 = *(void *)a2;
    unint64_t v4 = (void *)(v11 + ((unsigned __int16)((v9 & 0xF8) + 23) & (unsigned __int16)~(v9 & 0xF8) & 0x1F8));
LABEL_26:
    swift_retain();
    return v4;
  }
  unsigned int v12 = a2[v8];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v14 = v8;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a2;
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)a2;
        goto LABEL_22;
      case 3:
        int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_22;
      case 4:
        int v15 = *(_DWORD *)a2;
LABEL_22:
        int v16 = (v15 | (v13 << (8 * v8))) + 2;
        unsigned int v12 = v15 + 2;
        if (v8 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v8) = 1;
    goto LABEL_26;
  }
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(v4, a2, v7);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(v4, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  }
  *((unsigned char *)v4 + v8) = 0;
  return v4;
}

unsigned __int8 *sub_24D7D426C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    if (v7 <= 8) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = v7;
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          goto LABEL_17;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          goto LABEL_17;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_17;
        case 4:
          int v12 = *(_DWORD *)a1;
LABEL_17:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      swift_release();
    }
    else if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v14 = a2[v8];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v16 = v8;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_32;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_32;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_32;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_32:
          int v18 = (v17 | (v15 << (8 * v8))) + 2;
          unsigned int v14 = v17 + 2;
          if (v8 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[v8] = 1;
      swift_retain();
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v7);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      a1[v8] = 0;
    }
  }
  return a1;
}

void *sub_24D7D4514(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  if (v7 <= 8) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = v7;
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_16;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_16:
        int v13 = (v12 | (v10 << (8 * v8))) + 2;
        unsigned int v9 = v12 + 2;
        if (v8 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    *a1 = *(void *)a2;
    char v14 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    char v14 = 0;
  }
  *((unsigned char *)a1 + v8) = v14;
  return a1;
}

unsigned __int8 *sub_24D7D46D0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    if (v7 <= 8) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = v7;
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          goto LABEL_17;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          goto LABEL_17;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_17;
        case 4:
          int v12 = *(_DWORD *)a1;
LABEL_17:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      swift_release();
    }
    else if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v14 = a2[v8];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v16 = v8;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_32;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_32;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_32;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_32:
          int v18 = (v17 | (v15 << (8 * v8))) + 2;
          unsigned int v14 = v17 + 2;
          if (v8 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v19 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v7);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      char v19 = 0;
    }
    a1[v8] = v19;
  }
  return a1;
}

uint64_t sub_24D7D4974(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v3 + 84)) {
    unint64_t v4 = *(void *)(v3 + 64);
  }
  else {
    unint64_t v4 = *(void *)(v3 + 64) + 1;
  }
  uint64_t v5 = 8;
  if (v4 > 8) {
    uint64_t v5 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_25;
  }
  uint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v10 < 2)
    {
LABEL_25:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 2) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_25;
  }
LABEL_17:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 255;
}

void sub_24D7D4AE0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  size_t v7 = v6 + 1;
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << (8 * v7)) - 254) >> (8 * v7)) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v7 < 4)
    {
      int v10 = (v9 >> (8 * v7)) + 1;
      if (v6 != -1)
      {
        int v12 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v7] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v10;
        break;
      case 3:
LABEL_37:
        __break(1u);
        JUMPOUT(0x24D7D4CE0);
      case 4:
        *(_DWORD *)&a1[v7] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_25;
      case 3:
        goto LABEL_37;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      default:
LABEL_25:
        if (a2) {
LABEL_26:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24D7D4D08(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84)) {
    unint64_t v3 = *(void *)(v2 + 64);
  }
  else {
    unint64_t v3 = *(void *)(v2 + 64) + 1;
  }
  uint64_t v4 = 8;
  if (v3 > 8) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = a1[v4];
  int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_15;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_15:
        unsigned int v9 = (v8 | (v6 << (8 * v4))) + 2;
        LODWORD(v5) = v8 + 2;
        if (v4 >= 4) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = v9;
        }
        break;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_24D7D4DF8(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  if (v6 <= 8) {
    size_t v7 = 8;
  }
  else {
    size_t v7 = v6;
  }
  if (a2 > 1)
  {
    unsigned int v8 = a2 - 2;
    if (v7 <= 3) {
      char v9 = (v8 >> (8 * v7)) + 2;
    }
    else {
      char v9 = 2;
    }
    if (v7 <= 3) {
      int v10 = v8 & ~(-1 << (8 * v7));
    }
    else {
      int v10 = v8;
    }
    a1[v7] = v9;
    if (v7 >= 4) {
      int v11 = 4;
    }
    else {
      int v11 = v7;
    }
    bzero(a1, v7);
    switch(v11)
    {
      case 2:
        *(_WORD *)a1 = v10;
        break;
      case 3:
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
        break;
      case 4:
        *(_DWORD *)a1 = v10;
        break;
      default:
        *a1 = v10;
        break;
    }
  }
  else
  {
    a1[v7] = a2;
  }
}

uint64_t getEnumTagSinglePayload for FPCKRunningMode(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FPCKRunningMode(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_24D7D4F7C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24D7D4F98(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

__CFString *resetReason2str(unint64_t a1)
{
  if (a1 <= 0xA)
  {
    unint64_t v1 = off_265307AA0[a1];
    uint64_t v2 = off_265307A48[a1];
  }

  return v1;
}

uint64_t sub_24D7D5018(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  if (!v3) {
    return sub_24D90FFEC(0xD000000000000018, 0x800000024DCFB4A0, v4, v5);
  }
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D90FFEC(0xD000000000000017, 0x800000024DCFB480, v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v20 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v21 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v26)
  {
    if (v8)
    {
      uint64_t v25 = (v8 - 1) & v8;
      int64_t v26 = i;
      unint64_t v10 = __clz(__rbit64(v8)) | (i << 6);
      uint64_t result = a2;
      goto LABEL_6;
    }
    int64_t v16 = i + 1;
    uint64_t result = a2;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v21) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v20 + 8 * v16);
    int64_t v18 = i + 1;
    if (!v17)
    {
      int64_t v18 = i + 2;
      if (i + 2 >= v21) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v20 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = i + 3;
        if (i + 3 >= v21) {
          return swift_release();
        }
        unint64_t v17 = *(void *)(v20 + 8 * v18);
        if (!v17) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v25 = (v17 - 1) & v17;
    int64_t v26 = v18;
    unint64_t v10 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_6:
    uint64_t v12 = *(void *)(result + 48) + 56 * v10;
    int v13 = *(void **)v12;
    char v14 = *(unsigned char *)(v12 + 9);
    uint64_t v23 = a1[3];
    uint64_t v24 = a1[4];
    uint64_t v15 = *(unsigned __int8 *)(v12 + 8);
    __swift_project_boxed_opaque_existential_1(a1, v23);
    sub_24D4018B8(v13, v15, v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24DCC9968();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986D588);
    sub_24DCCA948();
    sub_24DCC9968();
    sub_24DCCA948();
    swift_bridgeObjectRelease();
    sub_24D90FFEC(0, 0xE000000000000000, v23, v24);
    swift_bridgeObjectRelease();
    sub_24D40160C(v13, v15, v14);
    swift_bridgeObjectRelease();
    unint64_t v8 = v25;
  }
  uint64_t v19 = i + 4;
  if (i + 4 >= v21) {
    return swift_release();
  }
  unint64_t v17 = *(void *)(v20 + 8 * v19);
  if (v17)
  {
    int64_t v18 = i + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v18 >= v21) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v20 + 8 * v18);
    ++v19;
    if (v17) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_24D7D539C(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v127 = a2;
  uint64_t v112 = a1;
  uint64_t v111 = a4;
  uint64_t v6 = *(uint8_t **)(*(void *)a3 + 584);
  uint64_t v7 = *(void *)(*(void *)a3 + 592);
  uint64_t v8 = *(void *)(*(void *)a3 + 600);
  uint64_t v119 = *(void *)(*(void *)a3 + 576);
  uint64_t v5 = v119;
  uint64_t v120 = (uint64_t)v6;
  uint64_t v121 = v7;
  uint64_t v122 = v8;
  unsigned int v118 = (void *)type metadata accessor for ItemReconciliation();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v110 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata3);
  unsigned __int8 v103 = (char *)v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v104 = (char *)v97 - v12;
  uint64_t v113 = v13;
  uint64_t v108 = sub_24DCCA3F8();
  uint64_t v107 = *(void (***)(char *, uint64_t))(v108 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v108);
  uint64_t v105 = (char *)v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v106 = (uint64_t)v97 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v109 = (char *)v97 - v18;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v114 = v7;
  uint64_t v21 = v8;
  uint64_t v116 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unsigned int v115 = v6;
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  uint64_t v119 = AssociatedTypeWitness;
  uint64_t v120 = v20;
  uint64_t v121 = AssociatedConformanceWitness;
  uint64_t v122 = v23;
  uint64_t v24 = type metadata accessor for ReconciliationID();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  unsigned int v28 = (char *)v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  int v31 = (char *)v97 - v30;
  MEMORY[0x270FA5388](v29);
  unsigned int v33 = (char *)v97 - v32;
  uint64_t v34 = v117;
  sub_24DB8C428((uint64_t)a3, 0, 0, 3, v118, v123);
  if (!v34)
  {
    uint64_t v99 = v28;
    uint64_t v100 = v31;
    uint64_t v102 = v25;
    uint64_t v117 = v24;
    uint64_t v35 = v113;
    unint64_t v36 = v115;
    uint64_t v37 = v116;
    int v38 = (void *)v123[0];
    if (v123[0])
    {
      LODWORD(v118) = v124;
      LODWORD(v109) = 253;
      id v39 = (id)v123[0];
LABEL_6:
      id v41 = v38;
      id v42 = v39;
      unsigned int v43 = (void *)sub_24DCC8818();
      type metadata accessor for FPCK(0);
      sub_24D7FC7C8(v127, v37, v36, v114, v21, v33);
      uint64_t v101 = 0;

      (*(void (**)(uint64_t, char *, uint64_t))(v102 + 32))(v112, v33, v117);
      uint64_t v44 = 0;
      uint64_t v45 = v111;
      char v46 = (char)v118;
LABEL_7:
      id v47 = objc_msgSend(v43, sel_domain);
      uint64_t v48 = sub_24DCC97E8();
      uint64_t v50 = v49;

      id v51 = objc_msgSend(v43, sel_code);
      sub_24D3F64B8((uint64_t)v123);

      *(void *)uint64_t v45 = v48;
      *(void *)(v45 + 8) = v50;
      *(void *)(v45 + 16) = v51;
      *(void *)(v45 + 24) = v44;
      *(unsigned char *)(v45 + 32) = (_BYTE)v109;
      *(unsigned char *)(v45 + 33) = v46;
      return;
    }
    id v39 = v125;
    if (v125)
    {
      LODWORD(v118) = v126;
      id v40 = v125;
      int v38 = 0;
      LODWORD(v109) = 252;
      goto LABEL_6;
    }
    uint64_t v101 = 0;
    id v52 = 0;
    uint64_t v53 = v117;
    uint64_t v54 = sub_24DCC9C98();
    if (MEMORY[0x253327DD0](v54, v53))
    {
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v56 = sub_24D7846E4(v54, v53, WitnessTable);
    }
    else
    {
      uint64_t v56 = MEMORY[0x263F8EE88];
    }
    swift_bridgeObjectRelease();
    uint64_t v119 = v56;
    uint64_t v57 = v109;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v110 + 56))(v109, 1, 1, v35);
    uint64_t v58 = type metadata accessor for FPCK(0);
    MEMORY[0x270FA5388](v58);
    v97[-6] = v37;
    v97[-5] = v36;
    v97[-4] = v114;
    v97[-3] = v21;
    v97[-2] = &v119;
    uint64_t v59 = v106;
    uint64_t v60 = v101;
    sub_24D7F3514(v127, a3, 0, (uint64_t (*)(char *))sub_24D823B60, (uint64_t)&v97[-8], v106);
    uint64_t v101 = v60;
    if (v60)
    {
      v107[1](v57, v108);
      sub_24D3F64B8((uint64_t)v123);
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v98 = v21;
    id v61 = v107;
    uint64_t v62 = (uint64_t)(v107 + 1);
    char v63 = (void (**)(char *, uint64_t))v107[1];
    uint64_t v64 = v35;
    uint64_t v65 = v108;
    ((void (*)(char *, uint64_t))v63)(v57, v108);
    uint64_t v66 = v59;
    uint64_t v67 = v65;
    uint64_t v68 = v64;
    ((void (*)(char *, uint64_t, uint64_t))v61[4])(v57, v66, v67);
    char v69 = v105;
    ((void (*)(char *, char *, uint64_t))v61[2])(v105, v57, v67);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v69, 1, v64) == 1)
    {
      ((void (*)(char *, uint64_t))v63)(v69, v67);
      sub_24D823284();
      char v70 = (void *)swift_allocError();
      *(void *)uint64_t v71 = 0;
      *(unsigned char *)(v71 + 8) = 11;
      unsigned int v43 = (void *)sub_24DCC8818();

      uint64_t v72 = v99;
      uint64_t v73 = v101;
      sub_24D7FC7C8(v127, v116, v115, v114, v98, v99);
      uint64_t v74 = v112;
      if (v73)
      {

        sub_24D3F64B8((uint64_t)v123);
        ((void (*)(char *, uint64_t))v63)(v109, v67);
LABEL_19:
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v101 = 0;
      ((void (*)(char *, uint64_t))v63)(v109, v67);
      (*(void (**)(uint64_t, char *, uint64_t))(v102 + 32))(v74, v72, v117);
      uint64_t v44 = 0;
      LODWORD(v109) = 250;
    }
    else
    {
      uint64_t v107 = v63;
      uint64_t v127 = v62;
      unsigned __int8 v75 = (char *)*(int *)(v64 + 48);
      uint64_t v76 = *(int *)(v68 + 64);
      uint64_t v77 = (uint64_t)v104;
      int v78 = &v104[v76];
      uint64_t v79 = &v69[v76];
      id v80 = v118;
      uint64_t v81 = *(v118 - 1);
      (*(void (**)(char *, char *, void *))(v81 + 32))(v104, v69, v118);
      uint64_t v82 = *(void **)&v75[(void)v69];
      uint64_t v99 = v75;
      *(void *)&v75[v77] = v82;
      uint64_t v83 = *(void *)v79;
      LOBYTE(v79) = v79[8];
      *(void *)int v78 = v83;
      uint64_t v105 = v78;
      v78[8] = (char)v79;
      uint64_t v106 = *(int *)(v68 + 48);
      id v84 = v103;
      id v85 = &v103[*(int *)(v68 + 64)];
      uint64_t v86 = *(void (**)(char *, uint64_t, void *))(v81 + 16);
      v97[1] = v81 + 16;
      v97[0] = v86;
      v86(v103, v77, v80);
      *(void *)&v84[v106] = v82;
      *(void *)id v85 = v83;
      v85[8] = (char)v79;
      uint64_t v87 = v80;
      id v88 = v82;
      unsigned int v43 = (void *)sub_24DCC8818();

      id v89 = *(void (**)(char *, void *))(v81 + 8);
      uint64_t v106 = v81 + 8;
      v89(v84, v80);
      uint64_t v90 = v100;
      uint64_t v91 = v101;
      sub_24D7FC7C8(v77, v116, v115, v114, v98, v100);
      if (v91)
      {

        sub_24D3F64B8((uint64_t)v123);
        ((void (*)(char *, uint64_t))v107)(v109, v108);
        (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v77, v113);
        goto LABEL_19;
      }
      uint64_t v101 = 0;
      ((void (*)(char *, uint64_t))v107)(v109, v108);
      (*(void (**)(uint64_t, char *, uint64_t))(v102 + 32))(v112, v90, v117);
      uint64_t v92 = v113;
      uint64_t v93 = *(int *)(v113 + 48);
      uint64_t v94 = &v84[*(int *)(v113 + 64)];
      ((void (*)(char *, uint64_t, void *))v97[0])(v84, v77, v87);
      *(void *)&v84[v93] = *(void *)&v99[v77];
      uint64_t v95 = v84;
      uint64_t v44 = *(void *)v105;
      unsigned __int8 v96 = v105[8];
      LODWORD(v109) = v96;
      *(void *)uint64_t v94 = v44;
      v94[8] = v96;
      v89(v95, v87);
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v77, v92);
    }
    swift_bridgeObjectRelease();
    id v39 = 0;
    char v46 = 70;
    uint64_t v45 = v111;
    goto LABEL_7;
  }
}

uint64_t sub_24D7D5F50(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return v3;
    }
    uint64_t v11 = MEMORY[0x263F8EE78];
    uint64_t result = sub_24D7C72A4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x253328820](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_unsignedLongLongValue);

      unint64_t v10 = *(void *)(v11 + 16);
      unint64_t v9 = *(void *)(v11 + 24);
      if (v10 >= v9 >> 1) {
        sub_24D7C72A4(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v10 + 1;
      *(void *)(v11 + 8 * v10 + 32) = v8;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_24D7D60B4(uint64_t a1, void *a2)
{
  int v78 = a2;
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v81 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  int64_t v82 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = *MEMORY[0x263F05238];
  uint64_t v79 = *MEMORY[0x263F05240];
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v80 = v7;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_23:
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    if (v16 == sub_24DCC97E8() && v15 == v18)
    {
LABEL_4:
      swift_bridgeObjectRelease();
    }
    else
    {
      char v20 = sub_24DCCAE28();
      swift_bridgeObjectRetain();
      id v21 = v17;
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_28;
      }
      if (v16 != sub_24DCC97E8() || v15 != v22)
      {
        char v24 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        if (v24) {
          goto LABEL_28;
        }
        self;
        if (swift_dynamicCastObjCClass())
        {
          long long v88 = 0uLL;
          sub_24DCC97D8();
          if (*((void *)&v88 + 1))
          {
            uint64_t v89 = MEMORY[0x263F8D310];
            uint64_t v90 = MEMORY[0x263F8D318];
            sub_24D57EC10(&v88, (uint64_t)&v86);
            swift_bridgeObjectRetain();
            uint64_t v25 = v78;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v91 = (void *)*v25;
            uint64_t v27 = v91;
            void *v25 = 0x8000000000000000;
            unint64_t v29 = sub_24D4053BC(v16, v15);
            uint64_t v30 = v27[2];
            BOOL v31 = (v28 & 1) == 0;
            uint64_t v32 = v30 + v31;
            if (__OFADD__(v30, v31)) {
              goto LABEL_66;
            }
            char v33 = v28;
            if (v27[3] >= v32)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                unint64_t v36 = v91;
                if ((v28 & 1) == 0) {
                  goto LABEL_55;
                }
              }
              else
              {
                unint64_t v54 = v29;
                sub_24DC7CE2C();
                unint64_t v29 = v54;
                unint64_t v36 = v91;
                if ((v33 & 1) == 0) {
                  goto LABEL_55;
                }
              }
            }
            else
            {
              sub_24D704514(v32, isUniquelyReferenced_nonNull_native);
              unint64_t v34 = sub_24D4053BC(v16, v15);
              if ((v33 & 1) != (v35 & 1)) {
                goto LABEL_70;
              }
              unint64_t v29 = v34;
              unint64_t v36 = v91;
              if ((v33 & 1) == 0)
              {
LABEL_55:
                unint64_t v77 = v29;
                uint64_t v55 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v86, v87);
                v76[0] = v76;
                MEMORY[0x270FA5388](v55);
                uint64_t v57 = (void *)((char *)v76 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
                (*(void (**)(uint64_t *))(v58 + 16))(v57);
                uint64_t v59 = *v57;
                uint64_t v60 = v57[1];
                uint64_t v84 = MEMORY[0x263F8D310];
                uint64_t v85 = MEMORY[0x263F8D318];
                *(void *)&long long v83 = v59;
                *((void *)&v83 + 1) = v60;
                unint64_t v61 = v77;
                v36[(v77 >> 6) + 8] |= 1 << v77;
                uint64_t v62 = (uint64_t *)(v36[6] + 16 * v61);
                *uint64_t v62 = v16;
                v62[1] = v15;
                sub_24D57EC10(&v83, v36[7] + 40 * v61);
                uint64_t v63 = v36[2];
                BOOL v64 = __OFADD__(v63, 1);
                uint64_t v65 = v63 + 1;
                if (v64) {
                  goto LABEL_68;
                }
                v36[2] = v65;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
                swift_bridgeObjectRetain();
LABEL_57:
                *int v78 = v36;

LABEL_62:
                swift_bridgeObjectRelease_n();
                goto LABEL_4;
              }
            }
            uint64_t v52 = v36[7] + 40 * v29;
            __swift_destroy_boxed_opaque_existential_1(v52);
            sub_24D57EC10(&v86, v52);
            goto LABEL_57;
          }
        }
        self;
        uint64_t v37 = swift_dynamicCastObjCClass();
        if (!v37)
        {
LABEL_28:

          goto LABEL_4;
        }
        int v38 = (void *)v37;
        swift_bridgeObjectRetain();
        unint64_t v77 = (unint64_t)v21;
        id v39 = objc_msgSend(v38, sel_longLongValue);
        uint64_t v90 = MEMORY[0x263F8E5C8];
        uint64_t v89 = MEMORY[0x263F8E5C0];
        *(void *)&long long v88 = v39;
        sub_24D57EC10(&v88, (uint64_t)&v86);
        id v40 = v78;
        char v41 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v91 = (void *)*v40;
        id v42 = v91;
        *id v40 = 0x8000000000000000;
        unint64_t v44 = sub_24D4053BC(v16, v15);
        uint64_t v45 = v42[2];
        BOOL v46 = (v43 & 1) == 0;
        uint64_t v47 = v45 + v46;
        if (__OFADD__(v45, v46)) {
          goto LABEL_67;
        }
        char v48 = v43;
        if (v42[3] >= v47)
        {
          if (v41)
          {
            id v51 = v91;
            if ((v43 & 1) == 0) {
              goto LABEL_59;
            }
          }
          else
          {
            sub_24DC7CE2C();
            id v51 = v91;
            if ((v48 & 1) == 0) {
              goto LABEL_59;
            }
          }
        }
        else
        {
          sub_24D704514(v47, v41);
          unint64_t v49 = sub_24D4053BC(v16, v15);
          if ((v48 & 1) != (v50 & 1)) {
            goto LABEL_70;
          }
          unint64_t v44 = v49;
          id v51 = v91;
          if ((v48 & 1) == 0)
          {
LABEL_59:
            uint64_t v66 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v86, v87);
            v76[0] = v76;
            MEMORY[0x270FA5388](v66);
            uint64_t v68 = (void *)((char *)v76 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v69 + 16))(v68);
            uint64_t v70 = *v68;
            uint64_t v85 = MEMORY[0x263F8E5C8];
            uint64_t v84 = MEMORY[0x263F8E5C0];
            *(void *)&long long v83 = v70;
            v51[(v44 >> 6) + 8] |= 1 << v44;
            uint64_t v71 = (uint64_t *)(v51[6] + 16 * v44);
            *uint64_t v71 = v16;
            v71[1] = v15;
            sub_24D57EC10(&v83, v51[7] + 40 * v44);
            uint64_t v72 = v51[2];
            BOOL v64 = __OFADD__(v72, 1);
            uint64_t v73 = v72 + 1;
            if (v64) {
              goto LABEL_69;
            }
            v51[2] = v73;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
            swift_bridgeObjectRetain();
            goto LABEL_61;
          }
        }
        uint64_t v53 = v51[7] + 40 * v44;
        __swift_destroy_boxed_opaque_existential_1(v53);
        sub_24D57EC10(&v86, v53);
LABEL_61:
        *int v78 = v51;
        id v74 = (id)v77;

        goto LABEL_62;
      }

      swift_bridgeObjectRelease_n();
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v11 >= v82) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v81 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_22;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v82) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v81 + 8 * v8);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v82) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v81 + 8 * v8);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v8 = v11 + 3;
  if (v11 + 3 >= v82) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v81 + 8 * v8);
  if (v12)
  {
LABEL_22:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_23;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v82) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v81 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v82) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v81 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  uint64_t result = sub_24DCCAF18();
  __break(1u);
  return result;
}

uint64_t sub_24D7D687C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 80);
  swift_bridgeObjectRetain();
  sub_24D7D5018(a2, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  sub_24D90FFEC(0xD00000000000001ALL, 0x800000024DCFB460, v6, v7);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  return sub_24D9100BC(8224, 0xE200000000000000, (void (*)(void *))sub_24D824ED0, a1, v8, MEMORY[0x263F8EE60] + 8, v9);
}

uint64_t sub_24D7D6984(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return 0x676E696E6E75723CLL;
}

uint64_t sub_24D7D6B24(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_24DCC9928();
  return sub_24DCC9A58();
}

void *sub_24D7D6BA4(void *a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = MEMORY[0x263F8EE80];
  uint64_t v4 = dispatch_group_create();
  dispatch_group_enter(v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  int64_t v13 = a1;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v1;
  v6[3] = a1;
  v6[4] = sub_24D824A54;
  v6[5] = v3;
  v6[6] = sub_24D82631C;
  v6[7] = v5;
  uint64_t v7 = *(void (**)(void **, void, void, void, uint64_t (*)(unint64_t), uint64_t, uint64_t (*)(), void *))(*(void *)v1 + 144);
  swift_retain_n();
  uint64_t v8 = v4;
  id v9 = a1;
  swift_retain();
  swift_retain();
  v7(&v13, 0, 0, 0, sub_24D824A54, v3, sub_24D824A60, v6);
  swift_release();
  swift_release();
  swift_release();
  sub_24DCCA168();
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  int64_t v11 = sub_24D8F16D0(v10);
  swift_release();

  swift_bridgeObjectRelease();
  return v11;
}

size_t sub_24D7D6D64(uint64_t a1, char a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = MEMORY[0x263F8EE80];
  uint64_t v6 = dispatch_group_create();
  dispatch_group_enter(v6);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  uint64_t v14 = a1;
  char v15 = a2;
  uint64_t v16 = a1;
  char v17 = a2;
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = v2;
  sub_24D46A3CC((uint64_t)&v16, (uint64_t)(v8 + 3));
  v8[5] = sub_24D824874;
  v8[6] = v5;
  v8[7] = sub_24D8248B4;
  v8[8] = v7;
  id v9 = *(void (**)(uint64_t *, void, void, void, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(), void *))(*(void *)v2 + 144);
  swift_retain_n();
  uint64_t v10 = v6;
  swift_retain();
  swift_retain();
  v9(&v14, 0, 0, 0, sub_24D824874, v5, sub_24D8248C0, v8);
  swift_release();
  swift_release();
  swift_release();
  sub_24DCCA168();
  swift_beginAccess();
  uint64_t v11 = swift_bridgeObjectRetain();
  size_t v12 = sub_24D8F17DC(v11);
  swift_release();

  swift_bridgeObjectRelease();
  return v12;
}

void sub_24D7D6F3C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (unsigned __int8 *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a2;
  id v9 = dispatch_group_create();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(unsigned char *)(v10 + 24) = -1;
  dispatch_group_enter(v9);
  uint64_t v29 = 0;
  unint64_t v30 = 0;
  uint64_t v31 = 1;
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v34 = 0;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v9;
  size_t v12 = *(void (**)(uint64_t *, uint64_t *, void, uint64_t, void (*)(uint64_t), uint64_t))(*v3 + 136);
  swift_retain();
  int64_t v13 = v9;
  v12(&v35, &v29, 0, 1, sub_24D8249F8, v11);
  swift_release();
  sub_24D400D4C(v29, v30, v31, v32, *((unint64_t *)&v32 + 1));
  sub_24DCCA168();
  swift_beginAccess();
  int v14 = *(unsigned __int8 *)(v10 + 24);
  if (v14 == 255) {
    goto LABEL_7;
  }
  char v15 = *(void **)(v10 + 16);
  if (v14)
  {
    uint64_t v28 = *(void *)(v10 + 16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    swift_willThrowTypedImpl();
LABEL_7:
    swift_release();

    return;
  }
  if (v15)
  {
    uint64_t v28 = *(void *)(v10 + 16);
    uint64_t v16 = a1[3];
    uint64_t v27 = a1[4];
    v26[1] = __swift_project_boxed_opaque_existential_1(a1, v16);
    sub_24D824A18(v15, v14);
    id v17 = objc_msgSend(v15, sel_description);
    uint64_t v18 = sub_24DCC97E8();
    v26[0] = a1;
    uint64_t v19 = v18;
    uint64_t v21 = v20;

    sub_24D90FFEC(v19, v21, v16, v27);
    swift_bridgeObjectRelease();
    sub_24D3F9CA0((uint64_t)v8);
    LODWORD(v16) = *v8;
    sub_24D3FC9D4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    if (v16 == 1)
    {
      uint64_t v22 = v26[0][3];
      uint64_t v23 = v26[0][4];
      char v24 = __swift_project_boxed_opaque_existential_1(v26[0], v22);
      MEMORY[0x270FA5388](v24);
      v26[-4] = v3;
      v26[-3] = &v28;
      v26[-2] = (void *)1;
      sub_24D9100BC(32, 0xE100000000000000, sub_24D824A30, (uint64_t)&v26[-6], v22, MEMORY[0x263F8EE60] + 8, v23);

      sub_24D824A00(v15, v14);
      swift_release();
      return;
    }

    uint64_t v25 = v15;
  }
  else
  {

    uint64_t v25 = 0;
  }
  sub_24D824A00(v25, v14);
  swift_release();
}

uint64_t sub_24D7D7294(void *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  char v50 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194240);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v51 = (void **)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199BC0);
  MEMORY[0x270FA5388](v10 - 8);
  size_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for VFSItem(0);
  uint64_t v52 = *(void *)(v13 - 8);
  uint64_t v53 = v13;
  MEMORY[0x270FA5388](v13);
  unint64_t v49 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a2;
  char v63 = a3;
  char v15 = dispatch_group_create();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986EF30);
  uint64_t v16 = swift_allocBox();
  uint64_t v18 = v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v17, 1, 1, v7);
  dispatch_group_enter(v15);
  long long v60 = 0u;
  long long v61 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v56 = 0u;
  long long v57 = 0u;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v16;
  *(void *)(v19 + 24) = v15;
  uint64_t v20 = *(void (**)(uint64_t *, long long *, void, uint64_t, void (*)(uint64_t), uint64_t))(*(void *)v4 + 136);
  uint64_t v54 = v16;
  uint64_t v21 = v4;
  swift_retain();
  uint64_t v22 = v15;
  v20(&v62, &v56, 0, 1, sub_24D82484C, v19);
  uint64_t v23 = (uint64_t)v12;
  uint64_t v24 = v52;
  swift_release();
  long long v48 = v61;
  uint64_t v47 = *((void *)&v60 + 1);
  sub_24D3E386C(v56, *((uint64_t *)&v56 + 1), v57, *((uint64_t *)&v57 + 1), v58, *((uint64_t *)&v58 + 1), v59, *((uint64_t *)&v59 + 1), v60);
  sub_24DCCA168();
  swift_beginAccess();
  int v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v18, 1, v7);
  uint64_t v26 = v53;
  if (v25) {
    goto LABEL_4;
  }
  uint64_t v27 = v53;
  uint64_t v28 = (uint64_t)v49;
  uint64_t v29 = v50;
  uint64_t v30 = v18;
  uint64_t v31 = v51;
  sub_24D415FD0(v30, (uint64_t)v51, (uint64_t *)&unk_26B194240);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v55 = *v31;
    long long v32 = v55;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    swift_willThrowTypedImpl();

    uint64_t v26 = v27;
LABEL_4:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v23, 1, 1, v26);
    uint64_t v33 = v23;
LABEL_5:

    sub_24D415F74(v33, (uint64_t *)&unk_26B199BC0);
    return swift_release();
  }
  uint64_t v35 = (uint64_t)v31;
  uint64_t v33 = v23;
  sub_24D3F0BA0(v35, v23, (uint64_t *)&unk_26B199BC0);
  uint64_t v36 = v23;
  uint64_t v37 = v27;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v36, 1, v27) == 1) {
    goto LABEL_5;
  }
  uint64_t v38 = v28;
  sub_24D3FC550(v33, v28, type metadata accessor for VFSItem);
  uint64_t v39 = v29[3];
  uint64_t v40 = v29[4];
  __swift_project_boxed_opaque_existential_1(v29, v39);
  uint64_t v41 = sub_24D5F713C();
  sub_24D90FFEC(v41, v42, v39, v40);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v28 + *(int *)(v37 + 28)) == 1)
  {
    uint64_t v43 = v29[3];
    uint64_t v44 = v29[4];
    uint64_t v45 = __swift_project_boxed_opaque_existential_1(v29, v43);
    MEMORY[0x270FA5388](v45);
    uint64_t v46 = v21;
    uint64_t v47 = v38;
    *(void *)&long long v48 = 1;
    sub_24D9100BC(32, 0xE100000000000000, (void (*)(void *))sub_24D824854, (uint64_t)(&v49 - 6), v43, MEMORY[0x263F8EE60] + 8, v44);
  }

  sub_24D3FC9D4(v38, type metadata accessor for VFSItem);
  return swift_release();
}

uint64_t sub_24D7D77A4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = 0x746976697463613CLL;
  unint64_t v21 = 0xEA00000000003A79;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v11 = v10;
  size_t v12 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = v12(v9, v6);
  double v14 = v11 * 1000000000.0;
  if ((~COERCE__INT64(v11 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_24D9AC244((uint64_t)v14, a3);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v16 = v20;
  unint64_t v15 = v21;
  uint64_t v20 = 0x6974617269707865;
  unint64_t v21 = 0xEB000000003A6E6FLL;
  if (a2)
  {
LABEL_9:
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v20 = v16;
    unint64_t v21 = v15;
    swift_bridgeObjectRetain();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v20;
  }
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v18 = v17;
  uint64_t result = v12(v9, v6);
  double v19 = v18 * 1000000000.0;
  if ((~COERCE__INT64(v18 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_13;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v19 < 9.22337204e18)
  {
    sub_24D9AC244((uint64_t)v19, a1);
    goto LABEL_9;
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_24D7D7A4C(void *a1)
{
  uint64_t v2 = v1;
  if (sub_24D858C6C() && !*(void *)(v1[4] + 16))
  {
    uint64_t v121 = a1[3];
    uint64_t v122 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v121);
    sub_24D90FFEC(0xD000000000000022, 0x800000024DD06060, v121, v122);
    return;
  }
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D90FFEC(0xD000000000000016, 0x800000024DD05FC0, v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = *v1;
  id v123 = v1;
  if (!*(void *)(*v1 + 16)) {
    goto LABEL_27;
  }
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D90FFEC(0xD000000000000011, 0x800000024DD05FE0, v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v127 = v5 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v131 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_156;
    }
    if (v14 >= v131) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v127 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v131) {
        goto LABEL_26;
      }
      unint64_t v15 = *(void *)(v127 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v131) {
          goto LABEL_26;
        }
        unint64_t v15 = *(void *)(v127 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v5 + 56);
    unsigned int v18 = *(unsigned __int8 *)(*(void *)(v5 + 48) + 16 * v13 + 8);
    uint64_t v19 = v17 + 24 * v13;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = a1[3];
    uint64_t v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v23);
    if (v18 < 2)
    {
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
    }
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24D7D77A4(v20, v21, v22);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24D90FFEC(538976288, 0xE400000000000000, v23, v24);
    swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v131) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v127 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_161;
    }
    if (v11 >= v131) {
      break;
    }
    unint64_t v15 = *(void *)(v127 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_26:
  swift_release();
  uint64_t v2 = v1;
LABEL_27:
  uint64_t v25 = v2[1];
  if (!*(void *)(v25 + 16)) {
    goto LABEL_49;
  }
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D90FFEC(0xD000000000000015, 0x800000024DD06000, v26, v27);
  swift_bridgeObjectRelease();
  uint64_t v124 = v25 + 64;
  uint64_t v28 = 1 << *(unsigned char *)(v25 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & *(void *)(v25 + 64);
  int64_t v128 = (unint64_t)(v28 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v31 = 0;
  while (2)
  {
    if (v30)
    {
      unint64_t v32 = __clz(__rbit64(v30));
      v30 &= v30 - 1;
      int64_t v134 = v31;
      unint64_t v33 = v32 | (v31 << 6);
      uint64_t v34 = v25;
LABEL_32:
      uint64_t v35 = *(void **)(*(void *)(v34 + 48) + 8 * v33);
      uint64_t v36 = *(void *)(v34 + 56) + 24 * v33;
      uint64_t v37 = *(void *)v36;
      char v38 = *(unsigned char *)(v36 + 8);
      uint64_t v39 = *(void *)(v36 + 16);
      uint64_t v40 = a1[3];
      uint64_t v41 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v40);
      id v42 = v35;
      sub_24D3D79D4();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24D7D77A4(v37, v38, v39);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24D90FFEC(538976288, 0xE400000000000000, v40, v41);

      swift_bridgeObjectRelease();
      int64_t v31 = v134;
      continue;
    }
    break;
  }
  int64_t v43 = v31 + 1;
  uint64_t v34 = v25;
  if (__OFADD__(v31, 1)) {
    goto LABEL_157;
  }
  if (v43 >= v128) {
    goto LABEL_48;
  }
  unint64_t v44 = *(void *)(v124 + 8 * v43);
  int64_t v45 = v31 + 1;
  if (v44) {
    goto LABEL_47;
  }
  int64_t v45 = v31 + 2;
  if (v31 + 2 >= v128) {
    goto LABEL_48;
  }
  unint64_t v44 = *(void *)(v124 + 8 * v45);
  if (v44) {
    goto LABEL_47;
  }
  int64_t v45 = v31 + 3;
  if (v31 + 3 >= v128) {
    goto LABEL_48;
  }
  unint64_t v44 = *(void *)(v124 + 8 * v45);
  if (v44)
  {
LABEL_47:
    unint64_t v30 = (v44 - 1) & v44;
    int64_t v134 = v45;
    unint64_t v33 = __clz(__rbit64(v44)) + (v45 << 6);
    goto LABEL_32;
  }
  uint64_t v46 = v31 + 4;
  if (v31 + 4 >= v128) {
    goto LABEL_48;
  }
  unint64_t v44 = *(void *)(v124 + 8 * v46);
  if (v44)
  {
    int64_t v45 = v31 + 4;
    goto LABEL_47;
  }
  while (1)
  {
    int64_t v45 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      goto LABEL_162;
    }
    if (v45 >= v128) {
      break;
    }
    unint64_t v44 = *(void *)(v124 + 8 * v45);
    ++v46;
    if (v44) {
      goto LABEL_47;
    }
  }
LABEL_48:
  swift_release();
  uint64_t v2 = v123;
LABEL_49:
  uint64_t v47 = v2[2];
  if (*(void *)(v47 + 16) || *(void *)(v2[3] + 16))
  {
    uint64_t v48 = a1[3];
    uint64_t v49 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v48);
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    if (__OFADD__(*(void *)(v47 + 16), *(void *)(v123[3] + 16))) {
      goto LABEL_164;
    }
    uint64_t v125 = v123[3];
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24D90FFEC(0xD000000000000018, 0x800000024DD06020, v48, v49);
    swift_bridgeObjectRelease();
    uint64_t v50 = v47 + 56;
    uint64_t v51 = -1;
    uint64_t v52 = -1 << *(unsigned char *)(v47 + 32);
    if (-v52 < 64) {
      uint64_t v51 = ~(-1 << -(char)v52);
    }
    unint64_t v53 = v51 & *(void *)(v47 + 56);
    int64_t v54 = (unint64_t)(63 - v52) >> 6;
    swift_bridgeObjectRetain();
    int64_t v55 = 0;
    while (1)
    {
      if (v53)
      {
        unint64_t v56 = __clz(__rbit64(v53));
        v53 &= v53 - 1;
        unint64_t v57 = v56 | (v55 << 6);
      }
      else
      {
        int64_t v58 = v55 + 1;
        if (__OFADD__(v55, 1))
        {
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        if (v58 >= v54) {
          goto LABEL_75;
        }
        unint64_t v59 = *(void *)(v50 + 8 * v58);
        int64_t v60 = v55 + 1;
        if (!v59)
        {
          int64_t v60 = v55 + 2;
          if (v55 + 2 >= v54) {
            goto LABEL_75;
          }
          unint64_t v59 = *(void *)(v50 + 8 * v60);
          if (!v59)
          {
            int64_t v60 = v55 + 3;
            if (v55 + 3 >= v54) {
              goto LABEL_75;
            }
            unint64_t v59 = *(void *)(v50 + 8 * v60);
            if (!v59)
            {
              int64_t v61 = v55 + 4;
              if (v55 + 4 >= v54)
              {
LABEL_75:
                sub_24D3E6690();
                uint64_t v132 = v125 + 56;
                uint64_t v65 = -1;
                uint64_t v66 = -1 << *(unsigned char *)(v125 + 32);
                if (-v66 < 64) {
                  uint64_t v65 = ~(-1 << -(char)v66);
                }
                unint64_t v67 = v65 & *(void *)(v125 + 56);
                int64_t v129 = (unint64_t)(63 - v66) >> 6;
                swift_bridgeObjectRetain();
                int64_t v68 = 0;
                while (1)
                {
                  if (v67)
                  {
                    unint64_t v70 = __clz(__rbit64(v67));
                    v67 &= v67 - 1;
                    unint64_t v71 = v70 | (v68 << 6);
                  }
                  else
                  {
                    int64_t v72 = v68 + 1;
                    if (__OFADD__(v68, 1)) {
                      goto LABEL_155;
                    }
                    if (v72 >= v129)
                    {
LABEL_109:
                      sub_24D3E6690();
                      uint64_t v2 = v123;
                      goto LABEL_110;
                    }
                    unint64_t v73 = *(void *)(v132 + 8 * v72);
                    int64_t v74 = v68 + 1;
                    if (!v73)
                    {
                      int64_t v74 = v68 + 2;
                      if (v68 + 2 >= v129) {
                        goto LABEL_109;
                      }
                      unint64_t v73 = *(void *)(v132 + 8 * v74);
                      if (!v73)
                      {
                        int64_t v74 = v68 + 3;
                        if (v68 + 3 >= v129) {
                          goto LABEL_109;
                        }
                        unint64_t v73 = *(void *)(v132 + 8 * v74);
                        if (!v73)
                        {
                          int64_t v75 = v68 + 4;
                          if (v68 + 4 >= v129) {
                            goto LABEL_109;
                          }
                          unint64_t v73 = *(void *)(v132 + 8 * v75);
                          if (!v73)
                          {
                            while (1)
                            {
                              int64_t v74 = v75 + 1;
                              if (__OFADD__(v75, 1)) {
                                break;
                              }
                              if (v74 >= v129) {
                                goto LABEL_109;
                              }
                              unint64_t v73 = *(void *)(v132 + 8 * v74);
                              ++v75;
                              if (v73) {
                                goto LABEL_95;
                              }
                            }
LABEL_160:
                            __break(1u);
LABEL_161:
                            __break(1u);
LABEL_162:
                            __break(1u);
                            goto LABEL_163;
                          }
                          int64_t v74 = v68 + 4;
                        }
                      }
                    }
LABEL_95:
                    unint64_t v67 = (v73 - 1) & v73;
                    unint64_t v71 = __clz(__rbit64(v73)) + (v74 << 6);
                    int64_t v68 = v74;
                  }
                  uint64_t v76 = *(void **)(*(void *)(v125 + 48) + 8 * v71);
                  uint64_t v78 = a1[3];
                  uint64_t v77 = a1[4];
                  __swift_project_boxed_opaque_existential_1(a1, v78);
                  uint64_t v79 = sub_24DCC97E8();
                  uint64_t v81 = v80;
                  if (v79 == sub_24DCC97E8() && v81 == v82)
                  {
                    id v69 = v76;
                    swift_bridgeObjectRelease_n();
                  }
                  else
                  {
                    char v84 = sub_24DCCAE28();
                    id v85 = v76;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v84 & 1) == 0)
                    {
                      uint64_t v86 = sub_24DCC97E8();
                      uint64_t v88 = v87;
                      if (v86 == sub_24DCC97E8() && v88 == v89)
                      {
                        swift_bridgeObjectRelease_n();
                      }
                      else
                      {
                        char v91 = sub_24DCCAE28();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if ((v91 & 1) == 0) {
                          sub_24DCC97E8();
                        }
                      }
                    }
                  }
                  sub_24DCC9968();
                  swift_bridgeObjectRelease();
                  sub_24D90FFEC(0x3A706620202020, 0xE700000000000000, v78, v77);

                  swift_bridgeObjectRelease();
                }
              }
              unint64_t v59 = *(void *)(v50 + 8 * v61);
              if (!v59)
              {
                while (1)
                {
                  int64_t v60 = v61 + 1;
                  if (__OFADD__(v61, 1)) {
                    break;
                  }
                  if (v60 >= v54) {
                    goto LABEL_75;
                  }
                  unint64_t v59 = *(void *)(v50 + 8 * v60);
                  ++v61;
                  if (v59) {
                    goto LABEL_72;
                  }
                }
LABEL_159:
                __break(1u);
                goto LABEL_160;
              }
              int64_t v60 = v55 + 4;
            }
          }
        }
LABEL_72:
        unint64_t v53 = (v59 - 1) & v59;
        unint64_t v57 = __clz(__rbit64(v59)) + (v60 << 6);
        int64_t v55 = v60;
      }
      unsigned int v62 = *(unsigned __int8 *)(*(void *)(v47 + 48) + 16 * v57 + 8);
      uint64_t v63 = a1[3];
      uint64_t v64 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v63);
      if (v62 < 2)
      {
        sub_24DCCAD78();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
      }
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24D90FFEC(0x3A736620202020, 0xE700000000000000, v63, v64);
      swift_bridgeObjectRelease();
    }
  }
LABEL_110:
  uint64_t v92 = v2[4];
  if (!*(void *)(v92 + 16)) {
    return;
  }
  uint64_t v93 = a1[3];
  uint64_t v94 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v93);
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D90FFEC(0xD000000000000014, 0x800000024DD06040, v93, v94);
  swift_bridgeObjectRelease();
  uint64_t v126 = v92 + 56;
  uint64_t v95 = 1 << *(unsigned char *)(v92 + 32);
  uint64_t v96 = -1;
  if (v95 < 64) {
    uint64_t v96 = ~(-1 << v95);
  }
  unint64_t v97 = v96 & *(void *)(v92 + 56);
  int64_t v130 = (unint64_t)(v95 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v98 = 0;
  while (2)
  {
    if (v97)
    {
      unint64_t v99 = __clz(__rbit64(v97));
      v97 &= v97 - 1;
      unint64_t v100 = v99 | (v98 << 6);
LABEL_132:
      uint64_t v104 = *(void *)(v92 + 48) + 16 * v100;
      uint64_t v105 = *(void **)v104;
      uint64_t v106 = *(unsigned __int8 *)(v104 + 8);
      char v107 = *(unsigned char *)(v104 + 9);
      uint64_t v108 = a1[3];
      uint64_t v135 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v108);
      if (v107)
      {
        uint64_t v109 = sub_24DCC97E8();
        uint64_t v111 = v110;
        if (v109 == sub_24DCC97E8() && v111 == v112)
        {
          sub_24D4018B8(v105, v106, 1);
          sub_24D4018B8(v105, v106, 1);
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v114 = sub_24DCCAE28();
          sub_24D4018B8(v105, v106, 1);
          sub_24D4018B8(v105, v106, 1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v114 & 1) == 0)
          {
            uint64_t v115 = sub_24DCC97E8();
            uint64_t v117 = v116;
            if (v115 == sub_24DCC97E8() && v117 == v118)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v120 = sub_24DCCAE28();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v120 & 1) == 0) {
                sub_24DCC97E8();
              }
            }
          }
        }
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        sub_24D40160C(v105, v106, 1);
      }
      else
      {
        if (v106 <= 1)
        {
          sub_24DCCAD78();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          sub_24DCC9968();
        }
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
      }
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24D90FFEC(538976288, 0xE400000000000000, v108, v135);
      swift_bridgeObjectRelease();
      sub_24D40160C(v105, v106, v107);
      continue;
    }
    break;
  }
  int64_t v101 = v98 + 1;
  if (__OFADD__(v98, 1)) {
    goto LABEL_158;
  }
  if (v101 >= v130)
  {
LABEL_151:
    swift_release();
    return;
  }
  unint64_t v102 = *(void *)(v126 + 8 * v101);
  ++v98;
  if (v102) {
    goto LABEL_131;
  }
  int64_t v98 = v101 + 1;
  if (v101 + 1 >= v130) {
    goto LABEL_151;
  }
  unint64_t v102 = *(void *)(v126 + 8 * v98);
  if (v102) {
    goto LABEL_131;
  }
  int64_t v98 = v101 + 2;
  if (v101 + 2 >= v130) {
    goto LABEL_151;
  }
  unint64_t v102 = *(void *)(v126 + 8 * v98);
  if (v102)
  {
LABEL_131:
    unint64_t v97 = (v102 - 1) & v102;
    unint64_t v100 = __clz(__rbit64(v102)) + (v98 << 6);
    goto LABEL_132;
  }
  int64_t v103 = v101 + 3;
  if (v103 >= v130) {
    goto LABEL_151;
  }
  unint64_t v102 = *(void *)(v126 + 8 * v103);
  if (v102)
  {
    int64_t v98 = v103;
    goto LABEL_131;
  }
  while (1)
  {
    int64_t v98 = v103 + 1;
    if (__OFADD__(v103, 1)) {
      break;
    }
    if (v98 >= v130) {
      goto LABEL_151;
    }
    unint64_t v102 = *(void *)(v126 + 8 * v98);
    ++v103;
    if (v102) {
      goto LABEL_131;
    }
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
}