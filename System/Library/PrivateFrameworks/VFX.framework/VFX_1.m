uint64_t sub_1B630E44C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 - 3;
  result = 1;
  switch(v1)
  {
    case 0:
    case 14:
    case 26:
    case 30:
    case 35:
    case 39:
    case 44:
    case 45:
    case 48:
    case 49:
    case 52:
    case 53:
      result = 4;
      break;
    case 1:
    case 15:
    case 16:
    case 17:
    case 27:
    case 31:
    case 36:
    case 37:
    case 40:
    case 41:
    case 55:
    case 56:
    case 57:
    case 78:
    case 82:
      result = 8;
      break;
    case 2:
    case 3:
    case 4:
    case 18:
    case 19:
    case 23:
    case 28:
    case 29:
    case 32:
    case 33:
      result = 16;
      break;
    case 5:
    case 6:
    case 10:
    case 24:
    case 25:
      result = 32;
      break;
    case 7:
    case 21:
    case 22:
      result = 24;
      break;
    case 8:
    case 9:
      result = 48;
      break;
    case 11:
    case 12:
      result = 64;
      break;
    case 13:
    case 34:
    case 38:
    case 43:
    case 47:
    case 51:
      result = 2;
      break;
    case 20:
      result = 12;
      break;
    case 42:
    case 46:
    case 50:
      return result;
    default:
      result = sub_1B6E32BE8();
      __break(1u);
      break;
  }
  return result;
}

void sub_1B630E520(uint64_t a1, uint64_t a2, int a3, id a4)
{
  id v6 = objc_msgSend(a4, sel_members);
  sub_1B630FF28();
  unint64_t v7 = sub_1B6E31C28();

  swift_bridgeObjectRetain();
  v8 = sub_1B630EABC(v7, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = (id)sub_1B6E32748();
    if (objc_msgSend(v8, sel_offset) == v9)
    {
      if (sub_1B630E8E0() == 128)
      {

        return;
      }
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      sub_1B630E8E0();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    else
    {
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      objc_msgSend(v8, sel_offset);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    uint64_t *v11 = v12;
    v11[1] = v13;
    swift_willThrow();
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    void *v10 = 0x20676E697373694DLL;
    v10[1] = 0xE800000000000000;
    swift_willThrow();
  }
}

uint64_t sub_1B630E8E0()
{
  id v1 = objc_msgSend(v0, sel_dataType);
  if (v1 == (id)2)
  {
    id v11 = objc_msgSend(v0, sel_arrayType);
    id v12 = objc_msgSend(v11, sel_arrayLength);
    id v13 = objc_msgSend(v11, sel_stride);

    return (void)v13 * (void)v12;
  }
  if (v1 == (id)1)
  {
    id v2 = objc_msgSend(v0, sel_structType);
    id v3 = objc_msgSend(v2, sel_members);
    sub_1B63989B8(0, (unint64_t *)&qword_1EB97D840);
    unint64_t v4 = sub_1B6E31C28();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1B6E32C18();
      if (v5)
      {
LABEL_5:
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        do
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v8 = (id)MEMORY[0x1BA9B4580](v6, v4);
          }
          else {
            id v8 = *(id *)(v4 + 8 * v6 + 32);
          }
          id v9 = v8;
          ++v6;
          uint64_t v10 = sub_1B630E8E0();

          v7 += v10;
        }
        while (v5 != v6);
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5) {
        goto LABEL_5;
      }
    }
    uint64_t v7 = 0;
LABEL_16:

    swift_bridgeObjectRelease_n();
    return v7;
  }
  id v14 = objc_msgSend(v0, sel_dataType);

  return sub_1B630E44C((uint64_t)v14);
}

void *sub_1B630EABC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B6E32C18();
  if (!v6) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v7 = 0;
  while (1)
  {
    id v8 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BA9B4580](v7, a1) : *(id *)(a1 + 8 * v7 + 32);
    id v9 = v8;
    id v10 = objc_msgSend(v8, sel_name);
    uint64_t v11 = sub_1B6E31798();
    uint64_t v13 = v12;

    if (v11 == a2 && v13 == a3) {
      break;
    }
    char v15 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_15;
    }

    if (v6 == ++v7) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  return v9;
}

void sub_1B630EC3C(uint64_t a1, uint64_t a2, int a3, id a4)
{
  id v6 = objc_msgSend(a4, sel_members);
  sub_1B630FF28();
  unint64_t v7 = sub_1B6E31C28();

  swift_bridgeObjectRetain();
  id v8 = sub_1B630EABC(v7, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = (id)sub_1B6E32748();
    if (objc_msgSend(v8, sel_offset) == v9)
    {
      if (sub_1B630E8E0() == 4)
      {

        return;
      }
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      sub_1B630E8E0();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    else
    {
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      objc_msgSend(v8, sel_offset);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    uint64_t *v11 = v12;
    v11[1] = v13;
    swift_willThrow();
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    void *v10 = 0x20676E697373694DLL;
    v10[1] = 0xE800000000000000;
    swift_willThrow();
  }
}

void sub_1B630EFFC(uint64_t a1, uint64_t a2, int a3, id a4)
{
  id v6 = objc_msgSend(a4, sel_members);
  sub_1B630FF28();
  unint64_t v7 = sub_1B6E31C28();

  swift_bridgeObjectRetain();
  id v8 = sub_1B630EABC(v7, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = (id)sub_1B6E32748();
    if (objc_msgSend(v8, sel_offset) == v9)
    {
      if (sub_1B630E8E0() == 32)
      {

        return;
      }
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      sub_1B630E8E0();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    else
    {
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      objc_msgSend(v8, sel_offset);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    uint64_t *v11 = v12;
    v11[1] = v13;
    swift_willThrow();
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    void *v10 = 0x20676E697373694DLL;
    v10[1] = 0xE800000000000000;
    swift_willThrow();
  }
}

void sub_1B630F3BC(uint64_t a1, uint64_t a2, int a3, id a4)
{
  id v6 = objc_msgSend(a4, sel_members);
  sub_1B630FF28();
  unint64_t v7 = sub_1B6E31C28();

  swift_bridgeObjectRetain();
  id v8 = sub_1B630EABC(v7, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = (id)sub_1B6E32748();
    if (objc_msgSend(v8, sel_offset) == v9)
    {
      if (sub_1B630E8E0() == 8)
      {

        return;
      }
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      sub_1B630E8E0();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    else
    {
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      objc_msgSend(v8, sel_offset);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    uint64_t *v11 = v12;
    v11[1] = v13;
    swift_willThrow();
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    void *v10 = 0x20676E697373694DLL;
    v10[1] = 0xE800000000000000;
    swift_willThrow();
  }
}

void sub_1B630F77C(uint64_t a1, uint64_t a2, int a3, id a4, id a5, id a6, char a7)
{
  id v13 = objc_msgSend(a6, sel_members);
  sub_1B630FF28();
  unint64_t v14 = sub_1B6E31C28();

  swift_bridgeObjectRetain();
  char v15 = sub_1B630FF68(v14, a1, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    id v16 = objc_msgSend(v15, sel_pointerType);
    if (v16)
    {
      v17 = v16;
      if (objc_msgSend(v16, sel_dataSize) == a4)
      {
        if ((a7 & 1) == 0 || objc_msgSend(v15, sel_offset) == a5)
        {

          return;
        }
        sub_1B6E328C8();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v21 = a1;
        uint64_t v22 = a2;
        sub_1B6E31948();
        objc_msgSend(v15, sel_offset);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
      }
      else
      {
        sub_1B6E328C8();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v21 = a1;
        uint64_t v22 = a2;
        sub_1B6E31948();
        objc_msgSend(v17, sel_dataSize);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
      }
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6AEE23C();
      swift_allocError();
      uint64_t *v20 = v21;
      v20[1] = v22;
      swift_willThrow();
    }
    else
    {
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6AEE23C();
      swift_allocError();
      uint64_t *v19 = a1;
      v19[1] = a2;
      swift_willThrow();
    }
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6AEE23C();
    swift_allocError();
    void *v18 = 0x20676E697373694DLL;
    v18[1] = 0xE800000000000000;
    swift_willThrow();
  }
}

void sub_1B630FBD8(uint64_t a1, uint64_t a2, int a3, id a4, id a5, char a6)
{
  id v11 = objc_msgSend(a5, sel_members);
  sub_1B630FF28();
  unint64_t v12 = sub_1B6E31C28();

  swift_bridgeObjectRetain();
  id v13 = sub_1B630FF68(v12, a1, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    id v14 = objc_msgSend(v13, sel_textureReferenceType);

    if (v14)
    {
      if ((a6 & 1) == 0 || objc_msgSend(v13, sel_offset) == a4)
      {

        return;
      }
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v17 = a1;
      uint64_t v18 = a2;
      sub_1B6E31948();
      objc_msgSend(v13, sel_offset);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v17 = a1;
      uint64_t v18 = a2;
      sub_1B6E31948();
    }
    sub_1B6AEE23C();
    swift_allocError();
    *id v16 = v17;
    v16[1] = v18;
    swift_willThrow();
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6AEE23C();
    swift_allocError();
    *char v15 = 0x20676E697373694DLL;
    v15[1] = 0xE800000000000000;
    swift_willThrow();
  }
}

unint64_t sub_1B630FF28()
{
  unint64_t result = qword_1EB97D840;
  if (!qword_1EB97D840)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB97D840);
  }
  return result;
}

void *sub_1B630FF68(unint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B6E32C18();
    if (v9) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_19;
  }
LABEL_3:
  uint64_t v10 = 0;
  uint64_t v20 = v4;
  id v21 = (id)a4;
  while (1)
  {
    id v11 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BA9B4580](v10, a1) : *(id *)(a1 + 8 * v10 + 32);
    unint64_t v12 = v11;
    id v13 = objc_msgSend(v11, sel_name, v20);
    uint64_t v14 = sub_1B6E31798();
    uint64_t v16 = v15;

    if (v14 == a2 && v16 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v18 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        goto LABEL_6;
      }
    }
    if (objc_msgSend(v12, sel_argumentIndex) == v21) {
      break;
    }
LABEL_6:

    if (v9 == ++v10) {
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  return v12;
}

void sub_1B631010C(uint64_t a1, uint64_t a2, id a3, uint64_t a4, id a5)
{
  id v9 = objc_msgSend(a5, sel_members);
  sub_1B630FF28();
  unint64_t v10 = sub_1B6E31C28();

  swift_bridgeObjectRetain();
  id v11 = sub_1B630EABC(v10, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
    if (objc_msgSend(v11, sel_offset) == a3)
    {
      if (sub_1B630E8E0() == a4)
      {

        return;
      }
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v14 = a1;
      uint64_t v15 = a2;
      sub_1B6E31948();
      sub_1B630E8E0();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    else
    {
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v14 = a1;
      uint64_t v15 = a2;
      sub_1B6E31948();
      objc_msgSend(v11, sel_offset);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6AEE23C();
    swift_allocError();
    *id v13 = v14;
    v13[1] = v15;
    swift_willThrow();
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6AEE23C();
    swift_allocError();
    *unint64_t v12 = 0x20676E697373694DLL;
    v12[1] = 0xE800000000000000;
    swift_willThrow();
  }
}

void sub_1B631047C(uint64_t a1, uint64_t a2, int a3, id a4)
{
  id v6 = objc_msgSend(a4, sel_members);
  sub_1B630FF28();
  unint64_t v7 = sub_1B6E31C28();

  swift_bridgeObjectRetain();
  id v8 = sub_1B630EABC(v7, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = (id)sub_1B6E32748();
    if (objc_msgSend(v8, sel_offset) == v9)
    {
      if (sub_1B630E8E0() == 64)
      {

        return;
      }
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      sub_1B630E8E0();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    else
    {
      sub_1B6E328C8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1;
      uint64_t v13 = a2;
      sub_1B6E31948();
      objc_msgSend(v8, sel_offset);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    uint64_t *v11 = v12;
    v11[1] = v13;
    swift_willThrow();
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    type metadata accessor for view_constants(0);
    sub_1B6AEE290();
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6AEE23C();
    swift_allocError();
    void *v10 = 0x20676E697373694DLL;
    v10[1] = 0xE800000000000000;
    swift_willThrow();
  }
}

void sub_1B631083C(uint64_t a1, int *a2, uint64_t *a3, void *a4, uint64_t a5, void *a6)
{
  sub_1B6311058((uint64_t)a3, (uint64_t)v82, (unint64_t *)&unk_1EB97E290, (uint64_t)&type metadata for RenderStates);
  uint64_t v12 = v82[0];
  uint64_t v13 = v82[1];
  sub_1B6311058((uint64_t)a3, (uint64_t)v83, (unint64_t *)&unk_1EB97E290, (uint64_t)&type metadata for RenderStates);
  if (v83[0]) {
    goto LABEL_2;
  }
  int v26 = *a2;
  if (qword_1EB985418 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)(a1 + 264);
  if (*(void *)(v27 + 16))
  {
    uint64_t v28 = *((void *)a2 + 11);
    int v85 = dword_1EB985420 & v26;
    long long v86 = *(_OWORD *)(a2 + 2);
    long long v87 = *(_OWORD *)(a2 + 6);
    long long v88 = *(_OWORD *)(a2 + 10);
    long long v89 = *(_OWORD *)(a2 + 14);
    long long v90 = *(_OWORD *)(a2 + 18);
    uint64_t v91 = v28;
    sub_1B6311200((int64x2_t *)&v85);
    if (v30)
    {
      v31 = (uint64_t *)(*(void *)(v27 + 56) + 112 * v29);
      uint64_t v12 = *v31;
      uint64_t v13 = v31[1];
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
LABEL_2:
      uint64_t ObjectType = swift_getObjectType();
      sub_1B6311AD0(a3);
      objc_msgSend(a4, sel_setRenderPipelineState_, v12);
      objc_msgSend(a4, sel_setDepthStencilState_, v13);
      if (*(unsigned char *)(a1 + 176)) {
        uint64_t v15 = *(void *)(a1 + 144) == 0;
      }
      else {
        uint64_t v15 = *(void *)(a1 + 144);
      }
      objc_msgSend(a4, sel_setFrontFacingWinding_, v15);
      objc_msgSend(a4, sel_setCullMode_, *(void *)(a1 + 152));
      objc_msgSend(a4, sel_setTriangleFillMode_, *(void *)(a1 + 160));
      if ((*(unsigned char *)(*(void *)a5 + 24) & 8) != 0) {
        objc_msgSend(a4, sel_setDepthClipMode_, *(void *)(a1 + 168));
      }
      objc_msgSend(a4, sel_setStencilFrontReferenceValue_backReferenceValue_, *(unsigned int *)(a1 + 136), *(unsigned int *)(a1 + 140));
      long long v16 = *(_OWORD *)(a1 + 352);
      v84[4] = *(_OWORD *)(a1 + 336);
      v84[5] = v16;
      v84[6] = *(_OWORD *)(a1 + 368);
      long long v17 = *(_OWORD *)(a1 + 288);
      v84[0] = *(_OWORD *)(a1 + 272);
      v84[1] = v17;
      long long v18 = *(_OWORD *)(a1 + 320);
      if (*(int *)(a1 + 240) <= 0) {
        uint64_t v19 = 3;
      }
      else {
        uint64_t v19 = 26;
      }
      v84[2] = *(_OWORD *)(a1 + 304);
      v84[3] = v18;
      sub_1B63119F8((uint64_t)v84);
      sub_1B62E5D0C(v84, a4, a5, v19);
      sub_1B6311920((uint64_t)v84);
      uint64_t v20 = *(void *)(a1 + 184);
      if (v20)
      {
        uint64_t v21 = *(void *)(a1 + 192);
        swift_unknownObjectRetain();
        objc_msgSend(a4, sel_setTessellationFactorBuffer_offset_instanceStride_, v20, v21, 0);
        uint64_t v23 = *(void *)(a1 + 104);
        uint64_t v22 = *(void *)(a1 + 112);
        uint64_t v24 = *(void *)(a1 + 32);
        if (v24)
        {
          swift_unknownObjectRetain();
          uint64_t v25 = *(void *)(a1 + 40);
        }
        else
        {
          uint64_t v25 = 0;
        }
        objc_msgSend(a4, sel_drawPatches_patchStart_patchCount_patchIndexBuffer_patchIndexBufferOffset_instanceCount_baseInstance_, 0, v22, v23, v24, v25, *(void *)(a1 + 120), *(void *)(a1 + 128));
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v42 = &qword_1E9DD6000;
        goto LABEL_43;
      }
      uint64_t v32 = *(void *)(a1 + 384);
      if (v32)
      {
        uint64_t v33 = *(void *)(a1 + 392);
        long long v34 = *(_OWORD *)(a1 + 240);
        uint64_t v35 = v34;
        if ((int)v34 >= 1)
        {
          uint64_t v36 = *(int *)(a1 + 224);
          uint64_t v37 = *(int *)(a1 + 228);
          uint64_t v38 = *(int *)(a1 + 232);
          *(_OWORD *)v71 = v34;
          swift_unknownObjectRetain();
          sub_1B638955C(v36, v37, v38, &v80);
          *(_OWORD *)v73 = v80;
          uint64_t v39 = v81;
          sub_1B638955C(v35, v71[1], v71[2], &v80);
          uint64_t v40 = v81;
          long long v41 = v80;
          long long v80 = *(_OWORD *)v73;
          uint64_t v81 = v39;
          long long v78 = v41;
          uint64_t v79 = v40;
          objc_msgSend(a4, sel_drawMeshThreadgroupsWithIndirectBuffer_indirectBufferOffset_threadsPerObjectThreadgroup_threadsPerMeshThreadgroup_, v32, v33, &v80, &v78);
          swift_unknownObjectRelease();
          v42 = &qword_1E9DD6000;
          goto LABEL_43;
        }
        uint64_t v52 = *(void *)(a1 + 32);
        if (v52) {
          objc_msgSend(a4, sel_drawIndexedPrimitives_indexType_indexBuffer_indexBufferOffset_indirectBuffer_indirectBufferOffset_, *(void *)(a1 + 16), *(void *)(a1 + 56), v52, *(void *)(a1 + 40), *(void *)(a1 + 384), *(void *)(a1 + 392));
        }
        else {
          objc_msgSend(a4, sel_drawPrimitives_indirectBuffer_indirectBufferOffset_, *(void *)(a1 + 16), *(void *)(a1 + 384), *(void *)(a1 + 392));
        }
      }
      else
      {
        int32x4_t v43 = *(int32x4_t *)(a1 + 240);
        if (v43.i32[0] < 1)
        {
          if ((*((unsigned char *)a2 + 1) & 0x20) != 0 && (uint64_t v53 = *(void *)(a1 + 80)) != 0)
          {
            uint64_t v68 = *(void *)(a1 + 88);
            uint64_t v69 = *(void *)(a1 + 96);
            uint64_t v70 = *(void *)(a1 + 56);
            uint64_t v54 = 4;
            if (!v70) {
              uint64_t v54 = 2;
            }
            uint64_t v75 = *(void *)(a1 + 96) / v54;
            swift_unknownObjectRetain();
          }
          else
          {
            uint64_t v55 = *(void *)(a1 + 40);
            uint64_t v56 = *(void *)(a1 + 48);
            uint64_t v57 = *(void *)(a1 + 64);
            uint64_t v58 = swift_unknownObjectRetain();
            if (!v58)
            {
              objc_msgSend(a4, sel_drawPrimitives_vertexStart_vertexCount_instanceCount_baseInstance_, *(void *)(a1 + 16), *(void *)(a1 + 112), *(void *)(a1 + 104), *(void *)(a1 + 120), *(void *)(a1 + 128));
              v42 = &qword_1E9DD6000;
              unint64_t v65 = qword_1E9DD6490;
              if ((unint64_t)qword_1E9DD6490 < 0x2540BE40ALL || !a6) {
                goto LABEL_44;
              }
              swift_getObjectType();
              uint64_t v66 = *(void *)(a1 + 120) * *(void *)(a1 + 104);
              swift_unknownObjectRetain();
              objc_msgSend(a6, sel_setStatsVertexCount_, (char *)objc_msgSend(a6, sel_statsVertexCount) + v66 * sub_1B6B660AC());
              uint64_t v67 = *(void *)(a1 + 104);
              switch(*(void *)(a1 + 16))
              {
                case 0:
                  break;
                case 1:
                  v67 /= 2;
                  break;
                case 2:
                  --v67;
                  break;
                case 3:
                  v67 /= 3;
                  break;
                case 4:
                  v67 -= 2;
                  break;
                default:
                  uint64_t v67 = 0;
                  break;
              }
              objc_msgSend(a6, sel_setStatsPrimitiveCount_, (char *)objc_msgSend(a6, sel_statsPrimitiveCount) + *(void *)(a1 + 120) * v67 * sub_1B6B660AC());
              swift_unknownObjectRelease();
LABEL_43:
              unint64_t v65 = v42[146];
LABEL_44:
              if (v65 >= 0x2540BE40ALL)
              {
                if (a6)
                {
                  objc_msgSend(a6, sel_setStatsDrawcallCount_, (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_statsDrawcallCount) + 1);
                  swift_unknownObjectRelease();
                }
              }
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              return;
            }
            LODWORD(v69) = v56;
            uint64_t v70 = *(void *)(a1 + 56);
            uint64_t v53 = v58;
            uint64_t v75 = v57;
            uint64_t v68 = v55;
          }
          uint64_t v59 = *(void *)(a1 + 16);
          uint64_t v60 = *(void *)(a1 + 120);
          uint64_t v72 = *(void *)(a1 + 112);
          uint64_t v61 = *(void *)(a1 + 128);
          swift_unknownObjectRetain();
          sub_1B6CC8638(v59, v75, v70, v53, v68, v69, v60, v72, v61, ObjectType);
          v42 = &qword_1E9DD6000;
          if ((unint64_t)qword_1E9DD6490 >= 0x2540BE40ALL && a6)
          {
            swift_getObjectType();
            uint64_t v62 = *(void *)(a1 + 120) * *(void *)(a1 + 64);
            swift_unknownObjectRetain();
            objc_msgSend(a6, sel_setStatsVertexCount_, (char *)objc_msgSend(a6, sel_statsVertexCount) + v62 * sub_1B6B660AC());
            uint64_t v63 = v75;
            switch(*(void *)(a1 + 16))
            {
              case 0:
                break;
              case 1:
                if (v75 >= 0) {
                  uint64_t v64 = v75;
                }
                else {
                  uint64_t v64 = v75 + 1;
                }
                uint64_t v63 = v64 >> 1;
                break;
              case 2:
                uint64_t v63 = v75 - 1;
                break;
              case 3:
                uint64_t v63 = v75 / 3;
                break;
              case 4:
                uint64_t v63 = v75 - 2;
                break;
              default:
                uint64_t v63 = 0;
                break;
            }
            objc_msgSend(a6, sel_setStatsPrimitiveCount_, (char *)objc_msgSend(a6, sel_statsPrimitiveCount) + *(void *)(a1 + 120) * v63 * sub_1B6B660AC());
            swift_unknownObjectRelease();
          }
          swift_unknownObjectRelease_n();
          goto LABEL_43;
        }
        uint64_t v44 = sub_1B6BC01FC(*(int32x4_t *)(a1 + 208), v43);
        uint64_t v46 = v45;
        uint64_t v48 = v47;
        sub_1B638955C(*(int *)(a1 + 224), *(int *)(a1 + 228), *(int *)(a1 + 232), &v80);
        *(_OWORD *)v74 = v80;
        uint64_t v49 = v81;
        sub_1B638955C(*(int *)(a1 + 240), *(int *)(a1 + 244), *(int *)(a1 + 248), &v80);
        uint64_t v50 = v81;
        long long v51 = v80;
        *(void *)&long long v80 = v44;
        *((void *)&v80 + 1) = v46;
        uint64_t v81 = v48;
        long long v78 = *(_OWORD *)v74;
        uint64_t v79 = v49;
        long long v76 = v51;
        uint64_t v77 = v50;
        objc_msgSend(a4, sel_drawMeshThreadgroups_threadsPerObjectThreadgroup_threadsPerMeshThreadgroup_, &v80, &v78, &v76);
      }
      v42 = &qword_1E9DD6000;
      goto LABEL_43;
    }
  }
}

uint64_t sub_1B6311058(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62CB234(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B63110D8(uint64_t a1, int64x2_t *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  id v8 = (void *)*v3;
  sub_1B6311200(a2);
  unint64_t v10 = v9;
  char v12 = v11;
  uint64_t v13 = v8[3];
  uint64_t v14 = v8[2] + ((v11 & 1) == 0);
  if (v13 < v14 || (a3 & 1) == 0)
  {
    if (v13 < v14 || (a3 & 1) != 0)
    {
      sub_1B63113C8(v14, a3 & 1);
      sub_1B6311200(a2);
      if ((v12 & 1) != (v18 & 1))
      {
        sub_1B6E33838();
        __break(1u);
        return;
      }
      unint64_t v10 = v17;
      uint64_t v15 = *v4;
      if (v12) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    sub_1B6AD2A6C();
  }
  uint64_t v15 = *v4;
  if (v12)
  {
LABEL_7:
    uint64_t v16 = v15[7] + 112 * v10;
    sub_1B67F80E0(a1, v16);
    return;
  }
LABEL_12:

  sub_1B630B81C(v10, a2, a1, v15);
}

double sub_1B6311200(int64x2_t *a1)
{
  sub_1B6E33918();
  sub_1B6E33958();
  sub_1B62D69C0();
  sub_1B6E33928();
  sub_1B6E33928();
  sub_1B6E33928();
  uint64_t v2 = sub_1B6E33988();

  *(void *)&double result = sub_1B63112D0(a1, v2).n128_u64[0];
  return result;
}

__n128 sub_1B63112D0(int64x2_t *a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    do
    {
      unint64_t v7 = (int64x2_t *)(*(void *)(v2 + 48) + 96 * v5);
      if (v7->i32[0] == a1->i32[0] && v7->i64[1] == a1->i64[1])
      {
        result.n128_u8[0] = vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v7[1], a1[1]), (int32x4_t)vceqq_s64(v7[2], a1[2])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v7[3], a1[3]), (int32x4_t)vceqq_s64(v7[4], a1[4])))), 7uLL)));
        if ((result.n128_u8[0] & 1) != 0 && v7[5].i64[0] == a1[5].i64[0] && v7[5].i64[1] == a1[5].i64[1]) {
          break;
        }
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return result;
}

uint64_t sub_1B63113C8(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_1B63117E4();
  char v43 = a2;
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  uint64_t v40 = (void *)(v5 + 64);
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v39 = v5 + 96;
  uint64_t v42 = v5;
  while (1)
  {
    if (v11)
    {
      uint64_t v50 = (v11 - 1) & v11;
      uint64_t v51 = v8;
      unint64_t v20 = __clz(__rbit64(v11)) | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v8 + 1;
    if (v8 + 1 >= v41) {
      goto LABEL_29;
    }
    unint64_t v22 = v40[v21];
    if (!v22)
    {
      uint64_t v21 = v8 + 2;
      if (v8 + 2 >= v41) {
        goto LABEL_29;
      }
      unint64_t v22 = v40[v21];
      if (!v22)
      {
        uint64_t v21 = v8 + 3;
        if (v8 + 3 >= v41) {
          goto LABEL_29;
        }
        unint64_t v22 = v40[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v50 = (v22 - 1) & v22;
    uint64_t v51 = v21;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
LABEL_21:
    uint64_t v23 = *(void *)(v5 + 56);
    uint64_t v24 = *(void *)(v5 + 48) + 96 * v20;
    int v25 = *(_DWORD *)v24;
    uint64_t v26 = *(void *)(v24 + 8);
    uint64_t v27 = *(void *)(v24 + 16);
    uint64_t v29 = *(void *)(v24 + 24);
    uint64_t v28 = *(void *)(v24 + 32);
    uint64_t v31 = *(void *)(v24 + 40);
    uint64_t v30 = *(void *)(v24 + 48);
    uint64_t v52 = *(void *)(v24 + 56);
    long long v54 = *(_OWORD *)(v24 + 64);
    long long v55 = *(_OWORD *)(v24 + 80);
    uint64_t v32 = (long long *)(v23 + 112 * v20);
    long long v53 = *v32;
    uint64_t v44 = *((void *)v32 + 2);
    char v45 = *((unsigned char *)v32 + 24);
    long long v46 = v32[2];
    long long v47 = v32[3];
    uint64_t v33 = *((void *)v32 + 8);
    long long v48 = *(long long *)((char *)v32 + 72);
    long long v49 = *(long long *)((char *)v32 + 88);
    uint64_t v34 = *((void *)v32 + 13);
    if ((v43 & 1) == 0)
    {
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B62D69C0();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33928();
    uint64_t v13 = sub_1B6E33988();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v35 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (v16 + 1 == v35) {
          unint64_t v16 = 0;
        }
        else {
          ++v16;
        }
        uint64_t v36 = *(void *)(v12 + 8 * v16);
      }
      while (v36 == -1);
      unint64_t v17 = __clz(__rbit64(~v36)) + (v16 << 6);
    }
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v7 + 48) + 96 * v17;
    *(_DWORD *)uint64_t v18 = v25;
    *(void *)(v18 + 8) = v26;
    *(void *)(v18 + 16) = v27;
    *(void *)(v18 + 24) = v29;
    *(void *)(v18 + 32) = v28;
    *(void *)(v18 + 40) = v31;
    *(void *)(v18 + 48) = v30;
    uint64_t v8 = v51;
    *(void *)(v18 + 56) = v52;
    *(_OWORD *)(v18 + 64) = v54;
    *(_OWORD *)(v18 + 80) = v55;
    uint64_t v19 = *(void *)(v7 + 56) + 112 * v17;
    *(_OWORD *)uint64_t v19 = v53;
    *(void *)(v19 + 16) = v44;
    *(unsigned char *)(v19 + 24) = v45;
    *(_OWORD *)(v19 + 32) = v46;
    *(_OWORD *)(v19 + 48) = v47;
    *(void *)(v19 + 64) = v33;
    *(_OWORD *)(v19 + 72) = v48;
    *(_OWORD *)(v19 + 88) = v49;
    *(void *)(v19 + 104) = v34;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v42;
    unint64_t v11 = v50;
  }
  while (v41 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v39 + 8 * v8++);
    if (v22)
    {
      uint64_t v21 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (v43)
  {
    uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
    id v3 = v2;
    if (v37 >= 64) {
      bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v40 = -1 << v37;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    id v3 = v2;
  }
  *id v3 = v7;
  return result;
}

void sub_1B63117E4()
{
  if (!qword_1EB980720)
  {
    sub_1B63AE588();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980720);
    }
  }
}

uint64_t sub_1B6311920(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B63119F8(uint64_t a1)
{
  return a1;
}

uint64_t *sub_1B6311AD0(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1B6311B24(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

void sub_1B6311B64(unint64_t a1@<X0>, uint64_t a2@<X1>, simd_float4x4 *a3@<X8>)
{
  unint64_t v6 = HIDWORD(a1);
  v7.columns[0] = 0uLL;
  if (a1 == 0xFFFFFFFF)
  {
    char v8 = 1;
    v7.columns[1] = 0uLL;
    v7.columns[2] = 0uLL;
    v7.columns[3] = 0uLL;
  }
  else
  {
    swift_retain();
    if (((a1 << 32) & 0x8000000000000000) == 0
      && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
      && ((uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v6 == -1)
       || *(_DWORD *)(v9 + 12 * (int)a1 + 8) == v6))
    {
      sub_1B631200C(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v9 + 12 * (int)a1) + 32), *(_DWORD *)(v9 + 12 * (int)a1), *(_WORD *)(v9 + 12 * (int)a1 + 4), 64, a2, (uint64_t)v11);
      swift_release();
      sub_1B6311EC0((uint64_t)v11, (uint64_t)&v15, &qword_1EB97F678, (uint64_t)&type metadata for InverseWorldTransform);
      if ((v16 & 1) == 0)
      {
        char v8 = 0;
        simd_float4x4 v7 = v15;
        goto LABEL_14;
      }
    }
    else
    {
      swift_release();
    }
    swift_retain();
    if (((a1 << 32) & 0x8000000000000000) == 0
      && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
      && ((uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v6 == -1)
       || *(_DWORD *)(v10 + 12 * (int)a1 + 8) == v6))
    {
      sub_1B633C4F4(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v10 + 12 * (int)a1) + 32), *(_DWORD *)(v10 + 12 * (int)a1), *(_WORD *)(v10 + 12 * (int)a1 + 4), 64, a2, (uint64_t)v12);
      swift_release();
      sub_1B6311EC0((uint64_t)v12, (uint64_t)&v13, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
      if ((v14 & 1) == 0)
      {
        simd_float4x4 v7 = __invert_f4(v13);
        char v8 = 0;
        goto LABEL_14;
      }
    }
    else
    {
      swift_release();
    }
    char v8 = 1;
    v7.columns[1].i64[0] = 0;
    v7.columns[1].i64[1] = 0;
    v7.columns[2].i64[0] = 0;
    v7.columns[2].i64[1] = 0;
    v7.columns[3].i64[0] = 0;
    v7.columns[3].i64[1] = 0;
    v7.columns[0] = 0uLL;
  }
LABEL_14:
  *a3 = v7;
  a3[1].columns[0].i8[0] = v8;
}

uint64_t sub_1B6311D74@<X0>(__int16 a1@<W0>, uint64_t a2@<X8>)
{
  unint64_t v3 = 0xD000000000000012;
  v6[0] = 0xD000000000000012;
  v6[1] = 0x80000001B6F3B790;
  v6[2] = 0;
  v6[3] = 0;
  if ((a1 & 0x4800) == 0x4000) {
    unint64_t v3 = 0xD00000000000001BLL;
  }
  v6[4] = MEMORY[0x1E4FBC860];
  v6[5] = v3;
  unint64_t v4 = 0x80000001B6F3B7B0;
  if ((a1 & 0x4800) == 0x4000) {
    unint64_t v4 = 0x80000001B6F3B7D0;
  }
  v6[6] = v4;
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = MEMORY[0x1E4FBC860];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  nullsub_1(v6);
  return sub_1B62CA3FC((uint64_t)v6, a2, &qword_1EB97EB68, (uint64_t)&type metadata for RenderFunctions);
}

uint64_t sub_1B6311E40(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62D879C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B6311EC0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62E9EB4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B6311F40(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6CD26D4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B6311FC0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B631200C@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    long long v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for InverseWorldTransform)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    char v17 = 0;
    uint64_t v18 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v8 + a3 * a4);
    uint64_t v9 = *v18;
    uint64_t v10 = v18[1];
    uint64_t v11 = v18[2];
    uint64_t v12 = v18[3];
    uint64_t v13 = v18[4];
    uint64_t v14 = v18[5];
    uint64_t v15 = v18[6];
    uint64_t v16 = v18[7];
  }
  else
  {
LABEL_5:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    char v17 = 1;
  }
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = v10;
  *(void *)(a6 + 16) = v11;
  *(void *)(a6 + 24) = v12;
  *(void *)(a6 + 32) = v13;
  *(void *)(a6 + 40) = v14;
  *(void *)(a6 + 48) = v15;
  *(void *)(a6 + 56) = v16;
  *(unsigned char *)(a6 + 64) = v17;
  return result;
}

uint64_t sub_1B63120B0()
{
  uint64_t v1 = *(long long **)(v0 + 4848);
  uint64_t v2 = *(void *)(v0 + 4840);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 4864) = v3;
  *(void *)(v3 + 16) = v2;
  memcpy((void *)(v3 + 24), v1, 0x328uLL);
  swift_retain();
  swift_retain();
  sub_1B63124DC((uint64_t *)v1);
  sub_1B62D8B50(255, (unint64_t *)&unk_1EB9804D0, (unint64_t *)&unk_1EB9804C0, (uint64_t)&protocolRef_MTLFunction, MEMORY[0x1E4FBB718]);
  swift_asyncLet_begin();
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 4872) = v4;
  memcpy((void *)(v4 + 16), v1, 0x328uLL);
  *(void *)(v4 + 824) = v2;
  swift_retain();
  sub_1B63124DC((uint64_t *)v1);
  swift_retain();
  sub_1B63135EC();
  swift_asyncLet_begin();
  long long v5 = *v1;
  long long v6 = v1[2];
  *(_OWORD *)(v0 + 4424) = v1[1];
  *(_OWORD *)(v0 + 4440) = v6;
  *(_OWORD *)(v0 + 4408) = v5;
  long long v7 = v1[3];
  long long v8 = v1[4];
  long long v9 = v1[6];
  *(_OWORD *)(v0 + 4488) = v1[5];
  *(_OWORD *)(v0 + 4504) = v9;
  *(_OWORD *)(v0 + 4456) = v7;
  *(_OWORD *)(v0 + 4472) = v8;
  long long v10 = v1[7];
  long long v11 = v1[8];
  long long v12 = v1[10];
  *(_OWORD *)(v0 + 4552) = v1[9];
  *(_OWORD *)(v0 + 4568) = v12;
  *(_OWORD *)(v0 + 4520) = v10;
  *(_OWORD *)(v0 + 4536) = v11;
  uint64_t v13 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6312FE4(v0 + 4528, v0 + 4688, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, MEMORY[0x1E4FBB718]);
  sub_1B6312FE4(v0 + 4688, v0 + 4728, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, v13);
  uint64_t v14 = *(void **)(v0 + 4848);
  if (*(void *)(v0 + 4736))
  {
    uint64_t v15 = *(void *)(v0 + 4840);
    uint64_t v16 = swift_allocObject();
    *(void *)(v0 + 4880) = v16;
    *(void *)(v16 + 16) = v15;
    memcpy((void *)(v16 + 24), v14, 0x328uLL);
    swift_retain();
    sub_1B63124DC((uint64_t *)v14);
    swift_retain();
    swift_asyncLet_begin();
    uint64_t v17 = swift_allocObject();
    *(void *)(v0 + 4888) = v17;
    *(void *)(v17 + 16) = v15;
    memcpy((void *)(v17 + 24), v14, 0x328uLL);
    swift_retain();
    sub_1B63124DC((uint64_t *)v14);
    swift_retain();
    swift_asyncLet_begin();
    uint64_t v18 = sub_1B679775C;
    uint64_t v19 = v0 + 16;
    uint64_t v20 = v0 + 2744;
    uint64_t v21 = v0 + 2704;
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 4840);
    uint64_t v23 = swift_allocObject();
    *(void *)(v0 + 4960) = v23;
    *(void *)(v23 + 16) = v22;
    memcpy((void *)(v23 + 24), v14, 0x328uLL);
    swift_retain();
    sub_1B63124DC((uint64_t *)v14);
    swift_retain();
    swift_asyncLet_begin();
    uint64_t v18 = sub_1B639409C;
    uint64_t v19 = v0 + 16;
    uint64_t v20 = v0 + 2744;
    uint64_t v21 = v0 + 1936;
  }
  return MEMORY[0x1F41881E0](v19, v20, v18, v21);
}

uint64_t *sub_1B63124DC(uint64_t *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  uint64_t v7 = a1[16];
  uint64_t v8 = a1[15];
  sub_1B6312ABC(*a1, a1[1]);
  sub_1B6312ABC(v2, v3);
  sub_1B6312ABC(v4, v5);
  sub_1B6312ABC(v8, v7);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B63125E8()
{
  sub_1B6313054(v0, (uint64_t)v9, (uint64_t (*)(void))sub_1B6313108);
  sub_1B63127F0(v9, (void (*)(void, void, void, void, void))sub_1B6312ABC);
  sub_1B631282C();
  sub_1B63127F0(v9, (void (*)(void, void, void, void, void))sub_1B6312CF0);
  sub_1B6313054(v0 + 40, (uint64_t)v8, (uint64_t (*)(void))sub_1B6313108);
  sub_1B63127F0(v8, (void (*)(void, void, void, void, void))sub_1B6312ABC);
  sub_1B631282C();
  sub_1B63127F0(v8, (void (*)(void, void, void, void, void))sub_1B6312CF0);
  sub_1B6313054(v0 + 80, (uint64_t)v7, (uint64_t (*)(void))sub_1B6313108);
  sub_1B63127F0(v7, (void (*)(void, void, void, void, void))sub_1B6312ABC);
  sub_1B631282C();
  sub_1B63127F0(v7, (void (*)(void, void, void, void, void))sub_1B6312CF0);
  sub_1B6313054(v0 + 120, (uint64_t)v6, (uint64_t (*)(void))sub_1B6313108);
  sub_1B63127F0(v6, (void (*)(void, void, void, void, void))sub_1B6312ABC);
  sub_1B631282C();
  sub_1B63127F0(v6, (void (*)(void, void, void, void, void))sub_1B6312CF0);
  uint64_t v1 = *(void *)(v0 + 160);
  if (v1)
  {
    sub_1B6E33938();
    uint64_t v2 = *(void *)(v1 + 16);
    sub_1B6E33928();
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = v1 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
        swift_bridgeObjectRelease();
        v3 += 16;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1B6E33938();
  }
  sub_1B6313054(v0 + 168, (uint64_t)&v5, (uint64_t (*)(void))sub_1B6313168);
  sub_1B6313054((uint64_t)&v5, (uint64_t)&v10, (uint64_t (*)(void))sub_1B6313168);
  return sub_1B6E33928();
}

void *sub_1B63127F0(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1B631282C()
{
  sub_1B6313054(v0, (uint64_t)v8, (uint64_t (*)(void))sub_1B6313108);
  uint64_t v1 = v8[4];
  sub_1B6313054(v0, (uint64_t)v9, (uint64_t (*)(void))sub_1B6313108);
  if (!v10) {
    return sub_1B6E33938();
  }
  sub_1B6E33938();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1B6E318B8();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_1B6E33928();
  if (v2)
  {
    uint64_t v3 = v1 + 64;
    do
    {
      uint64_t v4 = *(void *)(v3 - 32);
      uint64_t v5 = *(void *)(v3 - 24);
      int v6 = *(unsigned __int8 *)(v3 - 16);
      sub_1B62D6998(v3, (uint64_t)v11);
      sub_1B6E33928();
      if (v6 == 1)
      {
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
      }
      else
      {
        sub_1B6E33928();
      }
      v3 += 112;
      sub_1B62D66DC();
      sub_1B62D66CC(v4, v5, v6);
      --v2;
    }
    while (v2);
  }
  sub_1B6E33928();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t *sub_1B63129D0(uint64_t *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  uint64_t v7 = a1[16];
  uint64_t v8 = a1[15];
  sub_1B6312ABC(*a1, a1[1]);
  sub_1B6312ABC(v2, v3);
  sub_1B6312ABC(v4, v5);
  sub_1B6312ABC(v8, v7);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B6312ABC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

void sub_1B6312B20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18 = LOBYTE(STACK[0x3D8]);
  if (v18 == 2)
  {
    goto LABEL_7;
  }
  if (v18 == 1)
  {
    unint64_t v23 = STACK[0x3D0];
    swift_unknownObjectRelease();
    sub_1B6312CF0(a2, a3);
    sub_1B6312CF0(a7, a8);
    sub_1B6312CF0(a12, a13);
    sub_1B6312CF0(a17, a18);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    a1 = (void *)v23;
LABEL_9:
LABEL_7:

    return;
  }
  if (!LOBYTE(STACK[0x3D8])) {
    goto LABEL_9;
  }
}

uint64_t sub_1B6312CF0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B6312D54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v6 = 0;
  uint64_t v24 = a2;
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v7 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v14 = v13 | (v6 << 6);
LABEL_20:
    sub_1B6312FE4(*(void *)(v7 + 56) + 832 * v14, (uint64_t)&v25, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    sub_1B6312FE4((uint64_t)&v25, (uint64_t)v28, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    if (sub_1B6313160((uint64_t)v28) == 1) {
      nullsub_1(v28);
    }
  }
  uint64_t v15 = v6 + 1;
  if (v6 + 1 >= v12) {
    goto LABEL_22;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v15);
  if (v16) {
    goto LABEL_19;
  }
  uint64_t v15 = v6 + 2;
  if (v6 + 2 >= v12) {
    goto LABEL_22;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v15);
  if (v16) {
    goto LABEL_19;
  }
  uint64_t v15 = v6 + 3;
  if (v6 + 3 >= v12) {
    goto LABEL_22;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v15);
  if (v16) {
    goto LABEL_19;
  }
  uint64_t v15 = v6 + 4;
  if (v6 + 4 >= v12) {
    goto LABEL_22;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v15);
  if (v16) {
    goto LABEL_19;
  }
  uint64_t v15 = v6 + 5;
  if (v6 + 5 >= v12) {
    goto LABEL_22;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v15);
  if (v16)
  {
LABEL_19:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v6 = v15;
    goto LABEL_20;
  }
  while (v12 - 6 != v6)
  {
    unint64_t v16 = *(void *)(v7 + 112 + 8 * v6++);
    if (v16)
    {
      uint64_t v15 = v6 + 5;
      goto LABEL_19;
    }
  }
LABEL_22:
  memcpy(v26, __dst, sizeof(v26));
  uint64_t v25 = a4;
  uint64_t v27 = a1;
  sub_1B63133BC((uint64_t)&v25);
  sub_1B6312FE4((uint64_t)&v25, (uint64_t)v28, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  swift_unknownObjectRetain();
  sub_1B63124DC((uint64_t *)__src);
  id v17 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v30 = *(void *)(v24 + 40);
  *(void *)(v24 + 40) = 0x8000000000000000;
  sub_1B63131C0((uint64_t)v28, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v24 + 40) = v30;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6312FE4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  sub_1B63130BC(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1B6313054(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1B63130BC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B6313108()
{
  if (!qword_1EB97D6F0)
  {
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D6F0);
    }
  }
}

uint64_t sub_1B6313160(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 824);
}

void sub_1B6313168()
{
  if (!qword_1EB980450)
  {
    sub_1B6C46E98();
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980450);
    }
  }
}

uint64_t sub_1B63131C0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    unint64_t v14 = *v4;
    if (v11) {
      return sub_1B6313300(a1, v14[7] + 832 * v9, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6ACEE0C();
    goto LABEL_6;
  }
  sub_1B6ABB880(v13, a3 & 1);
  unint64_t v16 = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v17 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v16;
  unint64_t v14 = *v4;
  if (v11) {
    return sub_1B6313300(a1, v14[7] + 832 * v9, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  }
LABEL_10:

  return sub_1B6AD7B00(v9, a2, a1, v14);
}

uint64_t sub_1B6313300(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  sub_1B6313370(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(a2, a1, v7);
  return a2;
}

void sub_1B6313370(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B63133BC(uint64_t result)
{
  *(unsigned char *)(result + 824) = 1;
  return result;
}

unsigned __int8 *sub_1B63133C8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {

    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 2;
    }
    else if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

void *initializeWithTake for ShaderCache.RenderPipeline(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x338uLL);
}

void sub_1B63135EC()
{
  if (!qword_1EB980350)
  {
    sub_1B62D8B50(255, &qword_1EB980348, (unint64_t *)&unk_1EB9804C0, (uint64_t)&protocolRef_MTLFunction, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980350);
    }
  }
}

void sub_1B6313670(char a1)
{
  uint64_t v2 = (void *)v1;
  if (a1)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
    uint64_t v4 = *(char **)(v1 + 160);
    uint64_t v5 = *((void *)v4 + 2);
    uint64_t v6 = (char **)(v1 + 152);
    uint64_t v7 = *(void *)(v2[19] + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v2[20] = v4;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v4 = sub_1B6C166A8((uint64_t)v4);
    }
    *(void *)&v4[8 * (v3 % v5) + 32] = v7;
    v2[20] = v4;
    unint64_t v9 = *((void *)v4 + 2);
    if (v9)
    {
      int64_t v10 = *((void *)v4 + 4);
      unint64_t v11 = v9 - 1;
      if (v9 != 1)
      {
        if (v9 < 5)
        {
          unint64_t v12 = 1;
          goto LABEL_11;
        }
        unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL | 1;
        int64x2_t v13 = vdupq_n_s64(v10);
        unsigned int v14 = (int64x2_t *)(v4 + 56);
        unint64_t v15 = v11 & 0xFFFFFFFFFFFFFFFCLL;
        int64x2_t v16 = v13;
        do
        {
          int64x2_t v13 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v13, v14[-1]), (int8x16_t)v14[-1], (int8x16_t)v13);
          int64x2_t v16 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v16, *v14), *(int8x16_t *)v14, (int8x16_t)v16);
          v14 += 2;
          v15 -= 4;
        }
        while (v15);
        int8x16_t v17 = vbslq_s8((int8x16_t)vcgtq_s64(v16, v13), (int8x16_t)v13, (int8x16_t)v16);
        uint64_t v18 = vextq_s8(v17, v17, 8uLL).u64[0];
        int64_t v10 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v18, v17.i64[0]), *(int8x8_t *)v17.i8, (int8x8_t)v18);
        if (v11 != (v11 & 0xFFFFFFFFFFFFFFFCLL))
        {
LABEL_11:
          unint64_t v19 = v9 - v12;
          uint64_t v20 = &v4[8 * v12 + 32];
          do
          {
            int64_t v22 = *(void *)v20;
            v20 += 8;
            int64_t v21 = v22;
            if (v22 < v10) {
              int64_t v10 = v21;
            }
            --v19;
          }
          while (v19);
        }
      }
      if (v10 >= 4)
      {
        uint64_t v23 = v10 - 3;
        uint64_t v24 = 32;
        int64_t v25 = v10 - 3;
        do
        {
          uint64_t v26 = *v6;
          char v27 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v6 = v26;
          if ((v27 & 1) == 0)
          {
            uint64_t v26 = sub_1B6C16680((uint64_t)v26);
            *uint64_t v6 = v26;
          }
          vfx_deallocate_memory_entry((uint64_t)&v26[v24]);
          v24 += 24;
          --v25;
        }
        while (v25);
        sub_1B69DF04C(v23);
      }
    }
  }
  sub_1B63151F8();
  sub_1B6314298();
  v2[23] = 0;
  lock = (os_unfair_lock_s *)v2[16];
  os_unfair_lock_lock(lock);
  uint64_t v28 = v2[10];
  uint64_t v29 = *(void *)(v28 + 16);
  if (!v29) {
    goto LABEL_106;
  }
  uint64_t v30 = v28 + 32;
  uint64_t v122 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
  v129 = v2 + 12;
  v130 = v2 + 18;
  swift_retain();
  swift_retain();
  uint64_t v31 = 0;
  v131 = v2;
  uint64_t v124 = v30;
  uint64_t v125 = v29;
  while (2)
  {
    if (!*(void *)(v30 + 8 * v31)) {
      goto LABEL_27;
    }
    int v34 = v31;
    uint64_t v35 = *v129 + 32;
    uint64_t v36 = *(void *)(v35 + 40 * (int)v31);
    uint64_t v133 = *(void *)(v36 + 16);
    if (!v133)
    {
      if (*(unsigned char *)(v35 + 40 * (int)v31 + 24) == 1) {
        goto LABEL_88;
      }
LABEL_91:
      sub_1B631424C(0, &qword_1EB9801D0, (uint64_t)&type metadata for ChunksStorage, MEMORY[0x1E4FBB320]);
      sub_1B63141D0();
      v100 = sub_1B6314158();
      int v101 = *(_DWORD *)(v99 + 28);
      BOOL v102 = __OFSUB__(v101, 1);
      int v103 = v101 - 1;
      if (v103 < 0 != v102 || (*(_DWORD *)(v99 + 28) = v103) != 0)
      {
        ((void (*)(uint64_t *, void))v100)(&v137, 0);
        goto LABEL_24;
      }
      ((void (*)(uint64_t *, void))v100)(&v137, 0);
      uint64_t v104 = *(void *)(*v129 + 40 * v34 + 32);
      unint64_t v105 = *(void *)(v104 + 16);
      if (!v105)
      {
LABEL_104:
        sub_1B6381C7C((uint64_t)v2, v31);
        goto LABEL_24;
      }
      uint64_t v106 = v2[17] + 32;
      if (v105 == 1)
      {
        uint64_t v107 = 0;
        uint64_t v108 = 0;
      }
      else
      {
        uint64_t v109 = 0;
        uint64_t v110 = 0;
        uint64_t v107 = v105 & 0x7FFFFFFFFFFFFFFELL;
        v111 = (int *)(v104 + 36);
        uint64_t v112 = v105 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          uint64_t v113 = *(void *)(v106 + 8 * *(v111 - 1));
          uint64_t v114 = *(void *)(v106 + 8 * *v111);
          v109 += *(void *)(v113 + 240) - *(void *)(v113 + 232);
          v110 += *(void *)(v114 + 240) - *(void *)(v114 + 232);
          v111 += 2;
          v112 -= 2;
        }
        while (v112);
        uint64_t v108 = v110 + v109;
        if (v105 == v107) {
          goto LABEL_101;
        }
      }
      unint64_t v115 = v105 - v107;
      v116 = (int *)(v104 + 4 * v107 + 32);
      do
      {
        uint64_t v117 = *v116++;
        v108 += *(void *)(*(void *)(v106 + 8 * v117) + 240) - *(void *)(*(void *)(v106 + 8 * v117) + 232);
        --v115;
      }
      while (v115);
LABEL_101:
      if (v108 > 0) {
        goto LABEL_24;
      }
      if (v105 >= 2)
      {
        uint64_t v118 = *(void *)((char *)v2 + v122);
        uint64_t v137 = 0;
        unint64_t v138 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E32B18();
        uint64_t v119 = v137;
        unint64_t v120 = v138;
        uint64_t v121 = sub_1B6E32148();
        uint64_t v137 = 0;
        (*(void (**)(uint64_t, uint64_t *, uint64_t, unint64_t))(*(void *)v118 + 88))(v121, &v137, v119, v120);
        swift_release();
        swift_bridgeObjectRelease();
      }
      goto LABEL_104;
    }
    int v126 = v31;
    uint64_t v127 = v31;
    uint64_t v132 = v36 + 32;
    swift_bridgeObjectRetain();
    uint64_t v37 = 0;
    char v38 = 1;
    do
    {
      while (1)
      {
        char v134 = v38;
        uint64_t v39 = *(void *)(v2[17] + 8 * *(int *)(v132 + 4 * v37) + 32);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v39 + 376));
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v39 + 344));
        uint64_t v40 = *(void *)(v39 + 256);
        uint64_t v41 = *(void *)(v39 + 232);
        uint64_t v42 = v41 - v40;
        if (v41 == v40)
        {
          uint64_t v43 = *(void *)(v39 + 240);
        }
        else
        {
          uint64_t v135 = v37;
          uint64_t v44 = *(void *)(v39 + 56);
          uint64_t v45 = *(void *)(v44 + 16);
          if (v45)
          {
            swift_retain();
            uint64_t v46 = v44 + 56;
            do
            {
              sub_1B633B0E8();
              v46 += 40;
              --v45;
            }
            while (v45);
            swift_release();
          }
          if ((*(unsigned char *)(v39 + 184) & 1) == 0)
          {
            uint64_t v47 = *(void *)(v39 + 168);
            long long v48 = *(os_unfair_lock_s **)(*(void *)(v39 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
            swift_retain();
            os_unfair_lock_lock(v48);
            swift_release();
            uint64_t v49 = *(void *)(v39 + 16);
            uint64_t v50 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
            uint64_t v51 = OBJC_IVAR____TtC3VFX13EntityManager_entityCount;
            uint64_t v52 = *(void *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
            uint64_t v128 = v40 + *(void *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
            int v53 = *(_DWORD *)(v49 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
            uint64_t v54 = swift_retain();
            long long v55 = (int *)(v47 + 4 * v40);
            do
            {
              int v56 = *v55++;
              uint64_t v57 = (_DWORD *)(v52 + 12 * v56);
              *uint64_t v57 = v53;
              v57[1] = -1;
              ++v57[2];
              *(_DWORD *)(v54 + v50) = v56;
              int v53 = v56;
              --v42;
            }
            while (v42);
            *(void *)(v54 + v51) = v128 - v41;
            swift_release();
            uint64_t v58 = *(os_unfair_lock_s **)(*(void *)(v39 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
            swift_retain();
            os_unfair_lock_unlock(v58);
            swift_release();
          }
          uint64_t v59 = *(void *)(v39 + 192);
          if (v59)
          {
            uint64_t v60 = *(void *)(v39 + 208);
            sub_1B62C9D00(v40, v41, v59);
            sub_1B62C9D00(v40, v41, v60);
          }
          uint64_t v40 = *(void *)(v39 + 232);
          uint64_t v43 = *(void *)(v39 + 240);
          uint64_t v2 = v131;
          if (v43 == v40)
          {
            uint64_t v43 = 0;
            uint64_t v40 = 0;
            *(void *)(v39 + 232) = 0;
            *(void *)(v39 + 240) = 0;
          }
          uint64_t v37 = v135;
        }
        ++v37;
        *(void *)(v39 + 248) = v43;
        *(void *)(v39 + 256) = v40;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 376));
        if (*(void *)(v39 + 240) == *(void *)(v39 + 232)) {
          break;
        }
        char v38 = 0;
        if (v37 == v133)
        {
          swift_bridgeObjectRelease();
          uint64_t v30 = v124;
          uint64_t v29 = v125;
          int v34 = v126;
          uint64_t v31 = v127;
          goto LABEL_24;
        }
      }
      uint64_t v136 = v37;
      int v61 = *(_DWORD *)(v39 + 24);
      int v62 = *(_DWORD *)(v39 + 188);
      int v63 = *(unsigned __int8 *)(v39 + 120);
      uint64_t v64 = (void *)*v129;
      char v65 = swift_isUniquelyReferenced_nonNull_native();
      void *v129 = v64;
      if ((v65 & 1) == 0)
      {
        uint64_t v64 = sub_1B6C16694(v64);
        void *v129 = v64;
      }
      uint64_t v66 = v64 + 4;
      uint64_t v67 = (uint64_t)&v64[5 * v61 + 4];
      if (v63)
      {
        uint64_t v68 = *(char **)v67;
        uint64_t v69 = v66[5 * v61 + 1];
        uint64_t v70 = *(void *)(*(void *)v67 + 16);
        if (v69 == v70)
        {
          uint64_t v69 = 0;
          uint64_t v2 = v131;
        }
        else
        {
          uint64_t v2 = v131;
          if (*(_DWORD *)&v68[4 * v69 + 32] != v62)
          {
            uint64_t v83 = v70 - 1;
            while (v83 != v69)
            {
              int v84 = *(_DWORD *)&v68[4 * v69++ + 36];
              if (v84 == v62) {
                goto LABEL_71;
              }
            }
            uint64_t v69 = 0;
          }
        }
LABEL_71:
        char v87 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v67 = v68;
        if ((v87 & 1) == 0)
        {
          uint64_t v68 = sub_1B6315450((uint64_t)v68);
          *(void *)uint64_t v67 = v68;
        }
        uint64_t v88 = *((void *)v68 + 2) - 1;
        if (v88 - v69 < 0) {
          goto LABEL_107;
        }
        memmove(&v68[4 * v69 + 32], &v68[4 * v69 + 36], 4 * (v88 - v69));
        *((void *)v68 + 2) = v88;
        *(void *)uint64_t v67 = v68;
        long long v89 = &v66[5 * v61];
        int v90 = *((_DWORD *)v89 + 8);
        uint64_t v81 = v89 + 4;
        if (v90 == v62) {
          goto LABEL_75;
        }
      }
      else
      {
        v71 = &v66[5 * v61];
        uint64_t v74 = v71[1];
        v73 = v71 + 1;
        uint64_t v72 = v74;
        uint64_t v75 = *(char **)v67;
        uint64_t v76 = v74 & 0x7FFFFFFFFFFFFFFFLL;
        if ((v74 & 0x7FFFFFFFFFFFFFFFLL) != 0 && *((_DWORD *)v75 + 8) != v62)
        {
          uint64_t v77 = 0;
          uint64_t v85 = v76 - 1;
          while (v85 != v77)
          {
            int v86 = *(_DWORD *)&v75[4 * v77++ + 36];
            if (v86 == v62) {
              goto LABEL_56;
            }
          }
        }
        uint64_t v77 = 0;
LABEL_56:
        char v78 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v67 = v75;
        if ((v78 & 1) == 0)
        {
          uint64_t v75 = sub_1B6315450((uint64_t)v75);
          *(void *)uint64_t v67 = v75;
        }
        uint64_t v79 = *((void *)v75 + 2) - 1;
        if (v79 - v77 < 0)
        {
LABEL_107:
          sub_1B6E32C88();
          __break(1u);
          return;
        }
        memmove(&v75[4 * v77 + 32], &v75[4 * v77 + 36], 4 * (v79 - v77));
        *((void *)v75 + 2) = v79;
        *(void *)uint64_t v67 = v75;
        void *v73 = v72 - 1;
        long long v80 = &v66[5 * v61];
        int v82 = *((_DWORD *)v80 + 9);
        uint64_t v81 = (_DWORD *)v80 + 9;
        uint64_t v2 = v131;
        if (v82 == v62) {
LABEL_75:
        }
          *uint64_t v81 = -1;
      }
      LOBYTE(v66[5 * v61 + 3]) = 1;
      uint64_t v91 = v2[17];
      char v92 = swift_isUniquelyReferenced_nonNull_native();
      v2[17] = v91;
      if ((v92 & 1) == 0) {
        uint64_t v91 = sub_1B6D671CC(v91);
      }
      *(void *)(v91 + 8 * v62 + 32) = 0;
      v2[17] = v91;
      uint64_t v93 = v2[18];
      char v94 = swift_isUniquelyReferenced_nonNull_native();
      v2[18] = v93;
      if ((v94 & 1) == 0)
      {
        sub_1B6397798(0, *(void *)(v93 + 16) + 1, 1);
        uint64_t v93 = *v130;
      }
      unint64_t v96 = *(void *)(v93 + 16);
      unint64_t v95 = *(void *)(v93 + 24);
      if (v96 >= v95 >> 1)
      {
        sub_1B6397798(v95 > 1, v96 + 1, 1);
        uint64_t v93 = *v130;
      }
      *(void *)(v93 + 16) = v96 + 1;
      *(_DWORD *)(v93 + 4 * v96 + 32) = v62;
      uint64_t *v130 = v93;
      char v38 = (*(void *)(v39 + 240) == *(void *)(v39 + 232)) & v134;
      vfx_swift_deimmortalize(v39);
      vfx_swift_release_dealloc((void *)v39);
      uint64_t v37 = v136;
    }
    while (v136 != v133);
    swift_bridgeObjectRelease();
    uint64_t v30 = v124;
    uint64_t v29 = v125;
    int v34 = v126;
    uint64_t v31 = v127;
    if (v38)
    {
LABEL_88:
      v97 = (void *)*v129;
      char v98 = swift_isUniquelyReferenced_nonNull_native();
      void *v129 = v97;
      if ((v98 & 1) == 0) {
        v97 = sub_1B6C16694(v97);
      }
      HIDWORD(v97[5 * v34 + 7]) = 15;
      void *v129 = v97;
      goto LABEL_91;
    }
LABEL_24:
    uint64_t v32 = (void *)*v129;
    char v33 = swift_isUniquelyReferenced_nonNull_native();
    void *v129 = v32;
    if ((v33 & 1) == 0) {
      uint64_t v32 = sub_1B6C16694(v32);
    }
    LOBYTE(v32[5 * v34 + 7]) = 0;
    void *v129 = v32;
LABEL_27:
    if (++v31 != v29) {
      continue;
    }
    break;
  }
  swift_release();
  swift_release();
LABEL_106:
  os_unfair_lock_unlock(lock);
}

double (*sub_1B6314158())(void)
{
  uint64_t v1 = *v0;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void *v0 = v1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    void *v0 = sub_1B6C16694(v1);
  }
  return nullsub_1;
}

unint64_t sub_1B63141D0()
{
  unint64_t result = qword_1EB9801D8;
  if (!qword_1EB9801D8)
  {
    sub_1B68EAB9C(255, &qword_1EB9801D0, (uint64_t)&type metadata for ChunksStorage, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9801D8);
  }
  return result;
}

void sub_1B631424C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B6314298()
{
  uint64_t v1 = v0;
  uint64_t v2 = (os_unfair_lock_t *)((char *)v0 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocksLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)((char *)v0 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocksLock + 24));
  uint64_t v3 = *(void *)((char *)v0 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocks);
  *(void *)((char *)v1 + OBJC_IVAR____TtC3VFX13EntityManager_nextFrameBlocks) = MEMORY[0x1E4FBC860];
  os_unfair_lock_unlock(v2[3]);
  uint64_t v169 = *(void *)(v3 + 16);
  if (v169)
  {
    uint64_t v4 = 0;
    v168 = (char *)v1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
    v181 = v1 + 12;
    uint64_t v167 = v3 + 32;
    uint64_t v165 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
    v179 = v1 + 18;
    v180 = v1;
LABEL_4:
    uint64_t v172 = v4;
    v171 = *(void (**)(uint64_t))(v167 + 16 * v4);
    uint64_t v6 = *(uint64_t **)v168;
    uint64_t v5 = *((void *)v168 + 1);
    if (*(void *)v168)
    {
      uint64_t v7 = swift_retain();
      if (v5)
      {
        uint64_t v8 = 8 * v5;
        unint64_t v9 = v6;
        do
        {
          uint64_t v10 = *v9++;
          uint64_t v7 = ecs_stack_allocator_push_snapshot(*(void *)(v10 + 32));
          v8 -= 8;
        }
        while (v8);
      }
    }
    else
    {
      uint64_t v7 = swift_retain();
    }
    uint64_t v11 = v1[27];
    v1[27] = v11 + 1;
    if (v11) {
      goto LABEL_159;
    }
    uint64_t v170 = v5;
    double v12 = sub_1B63151F8();
    sub_1B6314298(v12);
    v1[23] = 0;
    lock = (os_unfair_lock_s *)v1[16];
    os_unfair_lock_lock(lock);
    uint64_t v13 = v1[10];
    uint64_t v14 = *(void *)(v13 + 16);
    v175 = v6;
    if (!v14) {
      goto LABEL_93;
    }
    uint64_t v15 = v13 + 32;
    swift_retain();
    swift_retain();
    uint64_t v16 = 0;
    uint64_t v173 = v15;
    uint64_t v174 = v14;
LABEL_18:
    if (!*(void *)(v15 + 8 * v16)) {
      goto LABEL_17;
    }
    int v19 = v16;
    uint64_t v20 = *v181 + 32;
    uint64_t v21 = *(void *)(v20 + 40 * (int)v16);
    uint64_t v183 = *(void *)(v21 + 16);
    if (!v183)
    {
      if (*(unsigned char *)(v20 + 40 * (int)v16 + 24) == 1) {
        goto LABEL_75;
      }
LABEL_78:
      sub_1B631424C(0, &qword_1EB9801D0, (uint64_t)&type metadata for ChunksStorage, MEMORY[0x1E4FBB320]);
      sub_1B63141D0();
      int v84 = v19;
      int v86 = sub_1B6314158();
      int v87 = *(_DWORD *)(v85 + 28);
      BOOL v88 = __OFSUB__(v87, 1);
      int v89 = v87 - 1;
      if (v89 < 0 != v88 || (*(_DWORD *)(v85 + 28) = v89) != 0)
      {
        ((void (*)(uint64_t *, void))v86)(&v188, 0);
        goto LABEL_14;
      }
      ((void (*)(uint64_t *, void))v86)(&v188, 0);
      uint64_t v90 = *(void *)(*v181 + 40 * v19 + 32);
      unint64_t v91 = *(void *)(v90 + 16);
      if (v91)
      {
        uint64_t v92 = v1[17] + 32;
        if (v91 == 1)
        {
          uint64_t v93 = 0;
          uint64_t v94 = 0;
          goto LABEL_86;
        }
        uint64_t v95 = 0;
        uint64_t v96 = 0;
        uint64_t v93 = v91 & 0x7FFFFFFFFFFFFFFELL;
        v97 = (int *)(v90 + 36);
        uint64_t v98 = v91 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          uint64_t v99 = *(void *)(v92 + 8 * *(v97 - 1));
          uint64_t v100 = *(void *)(v92 + 8 * *v97);
          v95 += *(void *)(v99 + 240) - *(void *)(v99 + 232);
          v96 += *(void *)(v100 + 240) - *(void *)(v100 + 232);
          v97 += 2;
          v98 -= 2;
        }
        while (v98);
        uint64_t v94 = v96 + v95;
        if (v91 != v93)
        {
LABEL_86:
          unint64_t v101 = v91 - v93;
          BOOL v102 = (int *)(v90 + 4 * v93 + 32);
          do
          {
            uint64_t v103 = *v102++;
            v94 += *(void *)(*(void *)(v92 + 8 * v103) + 240) - *(void *)(*(void *)(v92 + 8 * v103) + 232);
            --v101;
          }
          while (v101);
        }
        if (v94 > 0) {
          goto LABEL_14;
        }
        if (v91 >= 2)
        {
          uint64_t v104 = *(void *)((char *)v1 + v165);
          uint64_t v188 = 0;
          unint64_t v189 = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          sub_1B6E31948();
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E32B18();
          uint64_t v106 = v188;
          unint64_t v105 = v189;
          uint64_t v107 = sub_1B6E32148();
          uint64_t v188 = 0;
          (*(void (**)(uint64_t, uint64_t *, uint64_t, unint64_t))(*(void *)v104 + 88))(v107, &v188, v106, v105);
          int v19 = v84;
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
      sub_1B6381C7C((uint64_t)v1, v16);
      goto LABEL_14;
    }
    int v176 = v16;
    uint64_t v177 = v16;
    uint64_t v182 = v21 + 32;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    char v23 = 1;
    while (1)
    {
      while (1)
      {
        char v184 = v23;
        uint64_t v24 = *(void *)(v1[17] + 8 * *(int *)(v182 + 4 * v22) + 32);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 376));
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 344));
        uint64_t v25 = *(void *)(v24 + 256);
        uint64_t v26 = *(void *)(v24 + 232);
        uint64_t v27 = v26 - v25;
        if (v26 == v25)
        {
          uint64_t v28 = *(void *)(v24 + 240);
        }
        else
        {
          uint64_t v185 = v22;
          uint64_t v29 = *(void *)(v24 + 56);
          uint64_t v30 = *(void *)(v29 + 16);
          if (v30)
          {
            swift_retain();
            uint64_t v31 = v29 + 56;
            do
            {
              sub_1B633B0E8();
              v31 += 40;
              --v30;
            }
            while (v30);
            swift_release();
          }
          if ((*(unsigned char *)(v24 + 184) & 1) == 0)
          {
            uint64_t v32 = *(void *)(v24 + 168);
            char v33 = *(os_unfair_lock_s **)(*(void *)(v24 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
            swift_retain();
            os_unfair_lock_lock(v33);
            swift_release();
            uint64_t v34 = *(void *)(v24 + 16);
            uint64_t v35 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
            uint64_t v36 = OBJC_IVAR____TtC3VFX13EntityManager_entityCount;
            uint64_t v37 = *(void *)(v34 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
            uint64_t v178 = v25 + *(void *)(v34 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
            int v38 = *(_DWORD *)(v34 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
            uint64_t v39 = swift_retain();
            uint64_t v40 = (int *)(v32 + 4 * v25);
            do
            {
              int v41 = *v40++;
              uint64_t v42 = (_DWORD *)(v37 + 12 * v41);
              _DWORD *v42 = v38;
              v42[1] = -1;
              ++v42[2];
              *(_DWORD *)(v39 + v35) = v41;
              int v38 = v41;
              --v27;
            }
            while (v27);
            *(void *)(v39 + v36) = v178 - v26;
            swift_release();
            uint64_t v43 = *(os_unfair_lock_s **)(*(void *)(v24 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
            swift_retain();
            os_unfair_lock_unlock(v43);
            swift_release();
          }
          uint64_t v44 = *(void *)(v24 + 192);
          if (v44)
          {
            uint64_t v45 = *(void *)(v24 + 208);
            sub_1B62C9D00(v25, v26, v44);
            sub_1B62C9D00(v25, v26, v45);
          }
          uint64_t v25 = *(void *)(v24 + 232);
          uint64_t v28 = *(void *)(v24 + 240);
          uint64_t v1 = v180;
          uint64_t v22 = v185;
          if (v28 == v25)
          {
            uint64_t v28 = 0;
            uint64_t v25 = 0;
            *(void *)(v24 + 232) = 0;
            *(void *)(v24 + 240) = 0;
          }
        }
        ++v22;
        *(void *)(v24 + 248) = v28;
        *(void *)(v24 + 256) = v25;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 376));
        if (*(void *)(v24 + 240) == *(void *)(v24 + 232)) {
          break;
        }
        char v23 = 0;
        if (v22 == v183)
        {
          swift_bridgeObjectRelease();
          uint64_t v14 = v174;
          uint64_t v6 = v175;
          uint64_t v15 = v173;
          int v19 = v176;
          uint64_t v16 = v177;
          goto LABEL_14;
        }
      }
      uint64_t v186 = v22;
      int v46 = *(_DWORD *)(v24 + 24);
      int v47 = *(_DWORD *)(v24 + 188);
      int v48 = *(unsigned __int8 *)(v24 + 120);
      uint64_t v49 = (void *)*v181;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      void *v181 = v49;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v49 = sub_1B6C16694(v49);
        void *v181 = v49;
      }
      uint64_t v51 = v49 + 4;
      uint64_t v52 = (uint64_t)&v49[5 * v46 + 4];
      if (v48) {
        break;
      }
      int v56 = &v51[5 * v46];
      uint64_t v59 = v56[1];
      uint64_t v57 = v56 + 1;
      uint64_t v58 = v59;
      uint64_t v60 = *(char **)v52;
      uint64_t v61 = v59 & 0x7FFFFFFFFFFFFFFFLL;
      if ((v59 & 0x7FFFFFFFFFFFFFFFLL) != 0 && *((_DWORD *)v60 + 8) != v47)
      {
        uint64_t v62 = 0;
        uint64_t v80 = v61 - 1;
        while (v80 != v62)
        {
          int v81 = *(_DWORD *)&v60[4 * v62++ + 36];
          if (v81 == v47) {
            goto LABEL_45;
          }
        }
      }
      uint64_t v62 = 0;
LABEL_45:
      char v63 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)uint64_t v52 = v60;
      if ((v63 & 1) == 0)
      {
        uint64_t v60 = sub_1B6315450((uint64_t)v60);
        *(void *)uint64_t v52 = v60;
      }
      uint64_t v64 = *((void *)v60 + 2) - 1;
      if (v64 - v62 < 0)
      {
LABEL_170:
        uint64_t result = sub_1B6E32C88();
        __break(1u);
        return result;
      }
      memmove(&v60[4 * v62 + 32], &v60[4 * v62 + 36], 4 * (v64 - v62));
      *((void *)v60 + 2) = v64;
      *(void *)uint64_t v52 = v60;
      *uint64_t v57 = v58 - 1;
      char v65 = &v51[5 * v46];
      int v67 = *((_DWORD *)v65 + 9);
      uint64_t v66 = (_DWORD *)v65 + 9;
      uint64_t v1 = v180;
      if (v67 != v47) {
        goto LABEL_59;
      }
LABEL_58:
      *uint64_t v66 = -1;
LABEL_59:
      LOBYTE(v51[5 * v46 + 3]) = 1;
      uint64_t v74 = v1[17];
      char v75 = swift_isUniquelyReferenced_nonNull_native();
      v1[17] = v74;
      if ((v75 & 1) == 0) {
        uint64_t v74 = sub_1B6D671CC(v74);
      }
      *(void *)(v74 + 8 * v47 + 32) = 0;
      v1[17] = v74;
      uint64_t v76 = v1[18];
      char v77 = swift_isUniquelyReferenced_nonNull_native();
      v1[18] = v76;
      if ((v77 & 1) == 0)
      {
        sub_1B6397798(0, *(void *)(v76 + 16) + 1, 1);
        uint64_t v76 = *v179;
      }
      unint64_t v79 = *(void *)(v76 + 16);
      unint64_t v78 = *(void *)(v76 + 24);
      if (v79 >= v78 >> 1)
      {
        sub_1B6397798(v78 > 1, v79 + 1, 1);
        uint64_t v76 = *v179;
      }
      *(void *)(v76 + 16) = v79 + 1;
      *(_DWORD *)(v76 + 4 * v79 + 32) = v47;
      uint64_t *v179 = v76;
      char v23 = (*(void *)(v24 + 240) == *(void *)(v24 + 232)) & v184;
      vfx_swift_deimmortalize(v24);
      vfx_swift_release_dealloc((void *)v24);
      uint64_t v22 = v186;
      if (v186 == v183)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = v174;
        uint64_t v6 = v175;
        uint64_t v15 = v173;
        int v19 = v176;
        uint64_t v16 = v177;
        if (v23)
        {
LABEL_75:
          int v82 = (void *)*v181;
          char v83 = swift_isUniquelyReferenced_nonNull_native();
          void *v181 = v82;
          if ((v83 & 1) == 0) {
            int v82 = sub_1B6C16694(v82);
          }
          HIDWORD(v82[5 * v19 + 7]) = 15;
          void *v181 = v82;
          goto LABEL_78;
        }
LABEL_14:
        int8x16_t v17 = (void *)*v181;
        char v18 = swift_isUniquelyReferenced_nonNull_native();
        void *v181 = v17;
        if ((v18 & 1) == 0) {
          int8x16_t v17 = sub_1B6C16694(v17);
        }
        LOBYTE(v17[5 * v19 + 7]) = 0;
        void *v181 = v17;
LABEL_17:
        if (++v16 != v14) {
          goto LABEL_18;
        }
        swift_release();
        swift_release();
LABEL_93:
        os_unfair_lock_unlock(lock);
        if (v6 && v170)
        {
          uint64_t v108 = v6;
          do
          {
            uint64_t v109 = *(void *)(*v108 + 40);
            uint64_t v110 = *(void *)(v109 + 40);
            uint64_t v111 = *(void *)(v110 + 16);
            if (v111)
            {
              swift_bridgeObjectRetain();
              uint64_t v112 = 32;
              do
              {
                uint64_t v113 = *(void *)(v110 + v112);
                if (v113) {
                  MEMORY[0x1BA9B84C0](v113, -1, -1);
                }
                v112 += 16;
                --v111;
              }
              while (v111);
              swift_bridgeObjectRelease();
            }
            int v114 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v115 = *(char **)(v109 + 40);
            if (v114)
            {
              uint64_t v116 = *((void *)v115 + 2);
              char v117 = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v109 + 40) = v115;
              if ((v117 & 1) == 0)
              {
                unint64_t v115 = sub_1B68C0770(0, v116, 1, v115);
                *(void *)(v109 + 40) = v115;
              }
              if (v116)
              {
                uint64_t v118 = *((void *)v115 + 2) - v116;
                if (v118 < 0) {
                  goto LABEL_170;
                }
                memmove(v115 + 32, &v115[16 * v116 + 32], 16 * v118);
                *((void *)v115 + 2) = v118;
              }
              *(void *)(v109 + 40) = v115;
            }
            else
            {
              uint64_t v119 = (void *)MEMORY[0x1E4FBC860];
              if (*((void *)v115 + 3) >= 2uLL)
              {
                sub_1B631424C(0, &qword_1EB94A1C0, MEMORY[0x1E4FBB880], MEMORY[0x1E4FBBE00]);
                uint64_t v119 = (void *)swift_allocObject();
                int64_t v120 = j__malloc_size(v119);
                uint64_t v121 = v120 - 32;
                if (v120 < 32) {
                  uint64_t v121 = v120 - 17;
                }
                v119[2] = 0;
                v119[3] = 2 * (v121 >> 4);
              }
              *(void *)(v109 + 40) = v119;
              swift_bridgeObjectRelease();
            }
            ++v108;
            *(void *)(v109 + 32) = 0;
            uint64_t v1 = v180;
          }
          while (v108 != &v6[v170]);
        }
        sub_1B63773A4();
        uint64_t v122 = (os_unfair_lock_s *)v1[16];
        os_unfair_lock_lock(v122);
        uint64_t v123 = v1[10];
        uint64_t v124 = *(void *)(v123 + 16);
        if (v124)
        {
          v187 = v122;
          swift_retain();
          swift_retain();
          for (uint64_t i = 0; i != v124; ++i)
          {
            if (*(void *)(v123 + 32 + 8 * i))
            {
              int v126 = (void *)*v181;
              uint64_t v127 = *(void *)(*v181 + 40 * (int)i + 32);
              uint64_t v128 = *(void *)(v127 + 16);
              if (v128)
              {
                uint64_t v129 = 0;
                uint64_t v130 = v127 + 32;
                uint64_t v131 = v1[17] + 32;
                while (1)
                {
                  char v134 = *(void **)(v131 + 8 * *(int *)(v130 + 4 * v129));
                  unint64_t v135 = v134[24];
                  if (v135) {
                    break;
                  }
LABEL_126:
                  if (++v129 == v128) {
                    goto LABEL_144;
                  }
                }
                uint64_t v136 = (int8x16_t *)v134[26];
                uint64_t v137 = v134[27];
                uint64_t v138 = v134[25] + 63;
                if (v138 <= 127) {
                  unint64_t v139 = 1;
                }
                else {
                  unint64_t v139 = v138 >> 6;
                }
                if (v139 >= 4
                  && ((unint64_t)v136 + 8 * v139 <= v135 || v135 + 8 * v139 <= (unint64_t)v136))
                {
                  unint64_t v141 = v139 & 0xFFFFFFFFFFFFFFFCLL;
                  v142 = (int8x16_t *)(v135 + 16);
                  v143 = v136 + 1;
                  unint64_t v144 = v139 & 0xFFFFFFFFFFFFFFFCLL;
                  do
                  {
                    int8x16_t v145 = vbicq_s8(*v142, *v143);
                    v142[-1] = vbicq_s8(v142[-1], v143[-1]);
                    int8x16_t *v142 = v145;
                    v142 += 2;
                    v143 += 2;
                    v144 -= 4;
                  }
                  while (v144);
                  if (v139 != v141)
                  {
LABEL_141:
                    unint64_t v146 = v139 - v141;
                    uint64_t v147 = 8 * v141;
                    v148 = &v136->i64[v141];
                    v149 = (void *)(v135 + v147);
                    do
                    {
                      uint64_t v150 = *v148++;
                      *v149++ &= ~v150;
                      --v146;
                    }
                    while (v146);
                  }
                  uint64_t v132 = v137 + 63;
                  if (v132 <= 127) {
                    size_t v133 = 8;
                  }
                  else {
                    size_t v133 = (v132 >> 3) & 0xFFFFFFFFFFFFFFF8;
                  }
                  bzero(v136, v133);
                  goto LABEL_126;
                }
                unint64_t v141 = 0;
                goto LABEL_141;
              }
LABEL_144:
              char v151 = swift_isUniquelyReferenced_nonNull_native();
              void *v181 = v126;
              if ((v151 & 1) == 0)
              {
                int v126 = sub_1B6C16694(v126);
                void *v181 = v126;
              }
              uint64_t v152 = (uint64_t)&v126[5 * (int)i + 6];
              int v153 = swift_isUniquelyReferenced_nonNull_native();
              v154 = *(uint64_t **)v152;
              if (v153)
              {
                uint64_t v155 = v154[2];
                char v156 = swift_isUniquelyReferenced_nonNull_native();
                *(void *)uint64_t v152 = v154;
                if ((v156 & 1) == 0)
                {
                  MEMORY[0x1BA9B46C0](0, v155 & ~(v155 >> 63), 1);
                  v154 = *(uint64_t **)v152;
                }
                v157 = (char *)(v154 + 4);
                sub_1B631424C(0, &qword_1EB97D878, (uint64_t)&type metadata for ChunksStorage.FilteredChunk, MEMORY[0x1E4FBBB30]);
                swift_arrayDestroy();
                if (v155)
                {
                  uint64_t v158 = *(void *)(*(void *)v152 + 16) - v155;
                  if (v158 < 0) {
                    goto LABEL_170;
                  }
                  memmove(v157, &v157[8 * v155], 8 * v158);
                  *(void *)(*(void *)v152 + 16) -= v155;
                }
                sub_1B6E32A28();
              }
              else
              {
                v159 = (void *)MEMORY[0x1E4FBC860];
                if ((unint64_t)v154[3] >= 2)
                {
                  sub_1B69E8C44();
                  v159 = (void *)swift_allocObject();
                  int64_t v160 = j__malloc_size(v159);
                  uint64_t v161 = v160 - 32;
                  if (v160 < 32) {
                    uint64_t v161 = v160 - 25;
                  }
                  v159[2] = 0;
                  v159[3] = 2 * (v161 >> 3);
                }
                *(void *)uint64_t v152 = v159;
                swift_release();
              }
            }
          }
          swift_release();
          swift_release();
          uint64_t v6 = v175;
          uint64_t v122 = v187;
        }
        os_unfair_lock_unlock(v122);
        uint64_t v5 = v170;
LABEL_159:
        v171(v7);
        swift_release();
        if (v1[27] == 1) {
          sub_1B6313670(1);
        }
        if (v6 && v5)
        {
          uint64_t v162 = 8 * v5;
          do
          {
            uint64_t v163 = *v6++;
            ecs_stack_allocator_pop_snapshot(*(void *)(v163 + 32));
            v162 -= 8;
          }
          while (v162);
        }
        uint64_t v4 = v172 + 1;
        --v1[27];
        if (v172 + 1 == v169) {
          return swift_bridgeObjectRelease();
        }
        goto LABEL_4;
      }
    }
    int v53 = *(char **)v52;
    uint64_t v54 = v51[5 * v46 + 1];
    uint64_t v55 = *(void *)(*(void *)v52 + 16);
    if (v54 != v55)
    {
      if (*(_DWORD *)&v53[4 * v54 + 32] == v47)
      {
LABEL_54:
        char v70 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v52 = v53;
        if ((v70 & 1) == 0)
        {
          int v53 = sub_1B6315450((uint64_t)v53);
          *(void *)uint64_t v52 = v53;
        }
        uint64_t v71 = *((void *)v53 + 2) - 1;
        if (v71 - v54 < 0) {
          goto LABEL_170;
        }
        memmove(&v53[4 * v54 + 32], &v53[4 * v54 + 36], 4 * (v71 - v54));
        *((void *)v53 + 2) = v71;
        *(void *)uint64_t v52 = v53;
        uint64_t v72 = &v51[5 * v46];
        int v73 = *((_DWORD *)v72 + 8);
        uint64_t v66 = v72 + 4;
        if (v73 != v47) {
          goto LABEL_59;
        }
        goto LABEL_58;
      }
      uint64_t v68 = v55 - 1;
      while (v68 != v54)
      {
        int v69 = *(_DWORD *)&v53[4 * v54++ + 36];
        if (v69 == v47) {
          goto LABEL_54;
        }
      }
    }
    uint64_t v54 = 0;
    goto LABEL_54;
  }

  return swift_bridgeObjectRelease();
}

double sub_1B63151F8()
{
  uint64_t v1 = *(uint64_t **)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
    if (v2)
    {
      uint64_t v3 = 8 * v2;
      do
      {
        uint64_t v4 = *v1++;
        sub_1B6315260((uint64_t *)(v4 + 96));
        double result = 0.0;
        *(_OWORD *)(v4 + 152) = 0u;
        *(_OWORD *)(v4 + 136) = 0u;
        *(_OWORD *)(v4 + 120) = 0u;
        v3 -= 8;
      }
      while (v3);
    }
  }
  return result;
}

uint64_t sub_1B6315260(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(*a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(*a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    uint64_t v13 = v7 + 1;
    if (v7 + 1 >= v6) {
      goto LABEL_19;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    if (!v14)
    {
      uint64_t v13 = v7 + 2;
      if (v7 + 2 >= v6) {
        goto LABEL_19;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v13);
      if (!v14)
      {
        uint64_t v13 = v7 + 3;
        if (v7 + 3 >= v6) {
          goto LABEL_19;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v7 + 4;
          if (v7 + 4 >= v6) {
            goto LABEL_19;
          }
          unint64_t v14 = *(void *)(v2 + 8 * v13);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_18:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v7 = v13;
LABEL_5:
    uint64_t v10 = *(void *)(*(void *)(v1 + 48) + 8 * v9);
    uint64_t v11 = *(void *)(*(void *)(v1 + 56) + 8 * v9);
    double v12 = *(os_unfair_lock_s **)(v10 + 376);
    swift_retain();
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v12);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 344));
    sub_1B639147C(v11, v10);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 376));
    swift_release();
    swift_bridgeObjectRelease();
  }
  while (v6 - 5 != v7)
  {
    unint64_t v14 = *(void *)(v1 + 104 + 8 * v7++);
    if (v14)
    {
      uint64_t v13 = v7 + 4;
      goto LABEL_18;
    }
  }
LABEL_19:
  swift_release();
  uint64_t result = *a1;
  if (*(void *)(*a1 + 16))
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *a1;
    *a1 = 0x8000000000000000;
    sub_1B6B28880();
    sub_1B6E32B78();
    *a1 = v17;
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1B6315450(uint64_t a1)
{
  return sub_1B62B7EA0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1B6315464(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t *__return_ptr, uint64_t))
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v8 = sub_1B636E9A8(a1);
  if (v9 != 2)
  {
    unint64_t v11 = v10;
    uint64_t v18 = *(void *)(a3 + 16);
    uint64_t v19 = v18 + v8;
    if (v9)
    {
      uint64_t v24 = *(void *)(a3 + 32);
      uint64_t v15 = (void *)(a3 + 32);
      uint64_t v23 = v24 + 32 * v10;
    }
    else
    {
      sub_1B636E480(v18 + v8, 1, a1);
      uint64_t v20 = 1 << v11;
      if (v11 >= 0x40) {
        uint64_t v20 = 0;
      }
      uint64_t v22 = *(void *)(a3 + 32);
      uint64_t v15 = (void *)(a3 + 32);
      uint64_t v21 = v22;
      if (v11 > 0x40) {
        uint64_t v20 = 0;
      }
      v15[11] |= v20;
      uint64_t v23 = v21 + 32 * v11;
    }
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v17 = v19;
    goto LABEL_16;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v25);
  if (v28 + v27 <= 4096)
  {
    unint64_t v11 = v25;
    uint64_t v12 = *(void *)(a3 + 16) + v28;
    sub_1B636E480(v12, 1, v26);
    uint64_t v13 = 1 << v11;
    if (v11 >= 0x40) {
      uint64_t v13 = 0;
    }
    uint64_t v16 = *(void *)(a3 + 32);
    uint64_t v15 = (void *)(a3 + 32);
    uint64_t v14 = v16;
    if (v11 > 0x40) {
      uint64_t v13 = 0;
    }
    v15[11] |= v13;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 32 * v11 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v17 = v12;
LABEL_16:
    a4(&v25, v17);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*v15 + 32 * v11 + 24));
    return;
  }
  unint64_t v25 = 0;
  uint64_t v26 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v29 = 4096;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E32BE8();
  __break(1u);
}

void sub_1B6315740(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  long long v4 = *(_OWORD *)(v1 + 32);
  v48[0] = *(_OWORD *)(v1 + 16);
  v48[1] = v4;
  uint64_t v49 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v48, 0x200000000, v35);
  sub_1B62CA210((uint64_t)v35, (uint64_t)v43, (unint64_t *)&qword_1EB97DC50);
  if (v43[0])
  {
    if (v45 >= 1)
    {
      uint64_t v5 = v44;
      if (v44)
      {
        uint64_t v30 = v3;
        uint64_t v6 = v43[5];
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v7 = 48 * v5;
        uint64_t v8 = (uint64_t *)(v6 + 40);
        do
        {
          uint64_t v13 = *v8;
          uint64_t v14 = *(os_unfair_lock_s **)(*v8 + 376);
          swift_retain();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
          int v15 = *(_DWORD *)(v13 + 24);
          swift_retain();
          uint64_t v39 = 0;
          memset(v38, 0, sizeof(v38));
          uint64_t v37 = 0;
          memset(v36, 0, sizeof(v36));
          int v16 = sub_1B637F628(v15, (uint64_t)&type metadata for ProjectionMatrix, (uint64_t)&off_1F0F6EED0, 0, 0, (uint64_t)v38, (uint64_t)v36);
          swift_release();
          sub_1B6386458((uint64_t)v36);
          sub_1B6386458((uint64_t)v38);
          if (sub_1B63B4340(v16))
          {
            sub_1B66603E4(v16);
          }
          else
          {
            uint64_t v9 = *(void *)(v13 + 232);
            uint64_t v10 = *(void *)(v13 + 240);
            char v11 = *(unsigned char *)(v13 + 120);
            uint64_t v12 = *(unsigned int *)(v13 + 28);
            LOBYTE(v38[0]) = *(unsigned char *)(v13 + 32);
            sub_1B628EEF4(v9, v10, v16, v11, v12 | ((unint64_t)LOBYTE(v38[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
          swift_release();
          v8 += 6;
          v7 -= 48;
        }
        while (v7);
        sub_1B632F170(v35);
        uint64_t v3 = v30;
      }
    }
    sub_1B632F170(v35);
  }
  long long v17 = *(_OWORD *)(v2 + 72);
  v46[0] = *(_OWORD *)(v2 + 56);
  v46[1] = v17;
  uint64_t v47 = *(void *)(v2 + 88);
  sub_1B62C9DA8(v3, (uint64_t)v46, 0x200000000, v36);
  sub_1B62CA210((uint64_t)v36, (uint64_t)v38, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v38[0])
  {
    if (v42 >= 1)
    {
      uint64_t v18 = v41;
      if (v41)
      {
        uint64_t v19 = v40;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v20 = 48 * v18;
        uint64_t v21 = (uint64_t *)(v19 + 40);
        do
        {
          uint64_t v26 = *v21;
          uint64_t v27 = *(os_unfair_lock_s **)(*v21 + 376);
          swift_retain();
          os_unfair_lock_lock(v27);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v26 + 344));
          int v28 = *(_DWORD *)(v26 + 24);
          swift_retain();
          uint64_t v34 = 0;
          memset(v33, 0, sizeof(v33));
          uint64_t v32 = 0;
          memset(v31, 0, sizeof(v31));
          int v29 = sub_1B637F628(v28, (uint64_t)&type metadata for ProjectionMatrix, (uint64_t)&off_1F0F6EED0, 0, 0, (uint64_t)v33, (uint64_t)v31);
          swift_release();
          sub_1B6386458((uint64_t)v31);
          sub_1B6386458((uint64_t)v33);
          if (sub_1B63B4340(v29))
          {
            sub_1B66603E4(v29);
          }
          else
          {
            uint64_t v22 = *(void *)(v26 + 232);
            uint64_t v23 = *(void *)(v26 + 240);
            char v24 = *(unsigned char *)(v26 + 120);
            uint64_t v25 = *(unsigned int *)(v26 + 28);
            LOBYTE(v33[0]) = *(unsigned char *)(v26 + 32);
            sub_1B628EEF4(v22, v23, v29, v24, v25 | ((unint64_t)LOBYTE(v33[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 376));
          swift_release();
          v21 += 6;
          v20 -= 48;
        }
        while (v20);
        sub_1B632F170((uint64_t *)v36);
      }
    }
    sub_1B632F170((uint64_t *)v36);
  }
  sub_1B6332204(v3, 0);
}

void sub_1B6315B2C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare) & 1) == 0) {
    sub_1B6332204(a1, 1);
  }
}

uint64_t *sub_1B6315B50(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = 0;
  uint64_t v253 = *MEMORY[0x1E4F143B8];
  long long v4 = *(_OWORD *)(v1 + 56);
  long long v5 = *(_OWORD *)(v1 + 72);
  uint64_t v207 = *(void *)(v1 + 88);
  v206[0] = v4;
  v206[1] = v5;
  sub_1B62C9DA8(a1, (uint64_t)v206, 0x200000000, v208);
  sub_1B63175D8((uint64_t)v208, (uint64_t)&v235, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v235)
  {
    uint64_t v195 = v235;
    int v196 = v236;
    char v197 = v237;
    uint64_t v198 = v238;
    char v199 = v239;
    uint64_t v200 = v240;
    uint64_t v201 = v241;
    long long v202 = v242;
    long long v203 = v243;
    uint64_t v204 = v244;
    uint64_t v205 = v245;
    sub_1B6D866E8((uint64_t)&v195);
    sub_1B632F170(v208);
  }
  long long v6 = *(_OWORD *)(v173 + 112);
  v193[0] = *(_OWORD *)(v173 + 96);
  v193[1] = v6;
  uint64_t v194 = *(void *)(v173 + 128);
  sub_1B62C9DA8(v2, (uint64_t)v193, 0x200000000, v209);
  sub_1B63175D8((uint64_t)v209, (uint64_t)v228, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v228[0])
  {
    if (v234 < 1) {
      goto LABEL_150;
    }
    uint64_t v160 = v231;
    if (!v231) {
      goto LABEL_150;
    }
    uint64_t v153 = v2;
    uint64_t v166 = v233[4];
    int v164 = *(unsigned __int8 *)(v232 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v189[0] = v228[0];
    v189[1] = v228[1];
    uint64_t v190 = v229;
    uint64_t v156 = (uint64_t)(v233 + 6);
    uint64_t v158 = v230;
    int v176 = v233;
    uint64_t v178 = v233 + 13;
    uint64_t v155 = v233 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v7 = 0;
    while (1)
    {
      uint64_t v8 = (unsigned int *)(v158 + 48 * v7);
      uint64_t v9 = *v8;
      uint64_t v10 = v8[1];
      uint64_t v11 = *((void *)v8 + 3);
      uint64_t v174 = (uint64_t *)*((void *)v8 + 2);
      uint64_t v12 = *((void *)v8 + 5);
      uint64_t v168 = v3;
      uint64_t v171 = *((void *)v8 + 4);
      uint64_t v162 = v7;
      if (v164)
      {
        uint64_t v13 = *(os_unfair_lock_s **)(v12 + 376);
        swift_retain();
        os_unfair_lock_lock(v13);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v166);
      sub_1B63175D8(v156, (uint64_t)v252, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v14 = v176[4];
      uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v176[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
      v176[7] = v15;
      v155[1] = 0;
      v155[2] = 0;
      *uint64_t v155 = 0;
      swift_release();
      uint64_t v180 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v174, v11, v171, (uint64_t)v176);
      if (v174)
      {
        if (v171)
        {
          uint64_t v16 = v171;
          uint64_t v17 = 0;
          uint64_t v18 = v174;
          while (1)
          {
            uint64_t v19 = v18[v17];
            uint64_t v20 = v180 + 88 * v17;
            if (*(unsigned char *)(v20 + 56) == 1) {
              break;
            }
            int v22 = *(unsigned __int8 *)(v20 + 42);
            uint64_t v21 = *(void *)(v12 + 40);
            if (v22 == 1) {
              goto LABEL_20;
            }
            uint64_t v41 = *(void *)(v21 + 16);
            uint64_t v42 = *(void *)(v41 + 128);
            if (*(void *)(v42 + 16))
            {
              unint64_t v43 = sub_1B62C1A30((uint64_t)&type metadata for InverseWorldTransform);
              if ((v44 & 1) != 0
                && *(ValueMetadata **)(*(void *)(v41 + 24) + 16 * *(void *)(*(void *)(v42 + 56) + 8 * v43) + 32) == &type metadata for InverseWorldTransform)
              {
                *(void *)&v211[0] = &type metadata for InverseWorldTransform;
                *((void *)&v211[0] + 1) = &off_1F0F87E48;
                char v213 = 1;
                uint64_t v45 = *(void *)(*v178 + 16);
                if (v45)
                {
                  uint64_t v46 = *v178 + 32;
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v47 = 0;
                  while (2)
                  {
                    sub_1B691F668(v46, (uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                    sub_1B639192C((uint64_t)&v214, (uint64_t)&v222);
                    sub_1B639192C((uint64_t)v211, (uint64_t)v225);
                    switch(BYTE8(v224))
                    {
                      case 1:
                        sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                        if (v227 != 1) {
                          goto LABEL_60;
                        }
                        goto LABEL_66;
                      case 2:
                        sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                        if (v227 == 2) {
                          goto LABEL_71;
                        }
                        goto LABEL_59;
                      case 3:
                        sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                        if (v227 == 3)
                        {
LABEL_71:
                          sub_1B62C15C4(v210, (uint64_t)&v249);
                          sub_1B62C15C4((long long *)v225, (uint64_t)v247);
                          uint64_t v60 = *((void *)&v250 + 1);
                          uint64_t v61 = v251;
                          sub_1B62C14BC(&v249, *((uint64_t *)&v250 + 1));
                          LOBYTE(v60) = sub_1B6B3D86C(v247, v60, v61);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v247);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v249);
                          sub_1B6391400((uint64_t)&v222);
                          sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                          if (v60)
                          {
LABEL_45:
                            swift_bridgeObjectRelease();
                            int v38 = sub_1B6B1B930();
                            uint64_t v39 = *(void *)(v37 + 48);
                            if (v39)
                            {
                              uint64_t v40 = *(void *)(v37 + 64);
                              *(void *)(v39 + 8 * v40) = v19;
                              *(void *)(v37 + 64) = v40 + 1;
                            }
                            ((void (*)(long long *, void))v38)(&v222, 0);
                            uint64_t v18 = v174;
                            uint64_t v16 = v171;
                            goto LABEL_15;
                          }
                        }
                        else
                        {
LABEL_59:
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v210);
LABEL_60:
                          sub_1B691F6D0((uint64_t)&v222, (uint64_t (*)(void))sub_1B691F560);
                          sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                        }
LABEL_61:
                        ++v47;
                        v46 += 72;
                        if (v45 != v47) {
                          continue;
                        }
LABEL_47:
                        swift_bridgeObjectRelease();
                        uint64_t v18 = v174;
                        uint64_t v16 = v171;
                        break;
                      case 4:
                        sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                        if (v227 != 4) {
                          goto LABEL_60;
                        }
                        int v62 = LOBYTE(v210[0]);
                        int v63 = v225[0];
                        sub_1B6391400((uint64_t)&v222);
                        sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v62 == v63) {
                          goto LABEL_45;
                        }
                        goto LABEL_61;
                      case 5:
                        if (v227 != 5) {
                          goto LABEL_60;
                        }
                        int8x16_t v64 = vorrq_s8(*(int8x16_t *)&v225[8], v226);
                        if (*(void *)&vorr_s8(*(int8x8_t *)v64.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL)) | *(void *)v225) {
                          goto LABEL_60;
                        }
LABEL_44:
                        sub_1B6391400((uint64_t)&v222);
                        sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                        goto LABEL_45;
                      default:
                        sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                        if (v227) {
                          goto LABEL_60;
                        }
LABEL_66:
                        uint64_t v58 = *(void *)&v210[0];
                        uint64_t v59 = *(void *)v225;
                        sub_1B6391400((uint64_t)&v222);
                        sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v58 == v59) {
                          goto LABEL_45;
                        }
                        goto LABEL_61;
                    }
                    goto LABEL_54;
                  }
                }
LABEL_53:
                swift_retain();
LABEL_54:
                uint64_t v48 = *(void *)(v12 + 240) - *(void *)(v12 + 232);
                uint64_t v49 = ecs_stack_allocator_allocate(v176[4], 8 * v48, 8);
                *uint64_t v49 = v19;
                sub_1B639192C((uint64_t)v211, (uint64_t)&v222);
                *(void *)v225 = v49;
                *(void *)&v225[8] = v48;
                *(void *)&v225[16] = 1;
                uint64_t v50 = (void *)v176[13];
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v176[13] = v50;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  uint64_t v50 = sub_1B68C0C6C(0, v50[2] + 1, 1, v50);
                  *uint64_t v178 = v50;
                }
                unint64_t v53 = v50[2];
                unint64_t v52 = v50[3];
                if (v53 >= v52 >> 1)
                {
                  uint64_t v50 = sub_1B68C0C6C(v52 > 1, v53 + 1, 1, v50);
                  *uint64_t v178 = v50;
                }
                v50[2] = v53 + 1;
                uint64_t v54 = &v50[9 * v53];
                *((_OWORD *)v54 + 2) = v222;
                long long v55 = v223;
                long long v56 = v224;
                long long v57 = *(_OWORD *)v225;
                v54[12] = *(void *)&v225[16];
                *((_OWORD *)v54 + 4) = v56;
                *((_OWORD *)v54 + 5) = v57;
                *((_OWORD *)v54 + 3) = v55;
LABEL_15:
                sub_1B6391400((uint64_t)v211);
                swift_release();
              }
            }
LABEL_16:
            if (++v17 == v16) {
              goto LABEL_81;
            }
          }
          uint64_t v21 = *(void *)(v12 + 40);
LABEL_20:
          uint64_t v23 = *(void *)(v21 + 16);
          uint64_t v24 = *(void *)(v23 + 128);
          if (!*(void *)(v24 + 16)
            || (unint64_t v25 = sub_1B62C1A30((uint64_t)&type metadata for InverseWorldTransform), (v26 & 1) == 0)
            || *(ValueMetadata **)(*(void *)(v23 + 24) + 16 * *(void *)(*(void *)(v24 + 56) + 8 * v25) + 32) != &type metadata for InverseWorldTransform)
          {
            *(void *)&v211[0] = &type metadata for InverseWorldTransform;
            *((void *)&v211[0] + 1) = &off_1F0F87E48;
            char v213 = 0;
            uint64_t v27 = *(void *)(*v178 + 16);
            if (v27)
            {
              uint64_t v28 = *v178 + 32;
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v29 = 0;
              while (1)
              {
                sub_1B691F668(v28, (uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                sub_1B639192C((uint64_t)&v214, (uint64_t)&v222);
                sub_1B639192C((uint64_t)v211, (uint64_t)v225);
                switch(BYTE8(v224))
                {
                  case 1:
                    sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                    if (v227 != 1) {
                      goto LABEL_26;
                    }
                    goto LABEL_37;
                  case 2:
                    sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                    if (v227 == 2) {
                      goto LABEL_40;
                    }
                    goto LABEL_25;
                  case 3:
                    sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                    if (v227 == 3)
                    {
LABEL_40:
                      sub_1B62C15C4(v210, (uint64_t)&v249);
                      sub_1B62C15C4((long long *)v225, (uint64_t)v247);
                      uint64_t v34 = *((void *)&v250 + 1);
                      uint64_t v35 = v251;
                      sub_1B62C14BC(&v249, *((uint64_t *)&v250 + 1));
                      LOBYTE(v34) = sub_1B6B3D86C(v247, v34, v35);
                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v247);
                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v249);
                      sub_1B6391400((uint64_t)&v222);
                      sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                      if (v34) {
                        goto LABEL_45;
                      }
                    }
                    else
                    {
LABEL_25:
                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v210);
LABEL_26:
                      sub_1B691F6D0((uint64_t)&v222, (uint64_t (*)(void))sub_1B691F560);
                      sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                    }
LABEL_27:
                    ++v29;
                    v28 += 72;
                    if (v27 == v29) {
                      goto LABEL_47;
                    }
                    break;
                  case 4:
                    sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                    if (v227 != 4) {
                      goto LABEL_26;
                    }
                    int v30 = LOBYTE(v210[0]);
                    int v31 = v225[0];
                    sub_1B6391400((uint64_t)&v222);
                    sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                    if (v30 == v31) {
                      goto LABEL_45;
                    }
                    goto LABEL_27;
                  case 5:
                    if (v227 == 5)
                    {
                      int8x16_t v36 = vorrq_s8(*(int8x16_t *)&v225[8], v226);
                      if (!(*(void *)&vorr_s8(*(int8x8_t *)v36.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL)) | *(void *)v225)) {
                        goto LABEL_44;
                      }
                    }
                    goto LABEL_26;
                  default:
                    sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                    if (v227) {
                      goto LABEL_26;
                    }
LABEL_37:
                    uint64_t v32 = *(void *)&v210[0];
                    uint64_t v33 = *(void *)v225;
                    sub_1B6391400((uint64_t)&v222);
                    sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                    if (v32 == v33) {
                      goto LABEL_45;
                    }
                    goto LABEL_27;
                }
              }
            }
            goto LABEL_53;
          }
          goto LABEL_16;
        }
        goto LABEL_81;
      }
      if (v9 != v10) {
        break;
      }
LABEL_81:
      uint64_t v3 = v168;
      sub_1B6345178(v176, (unsigned __int16 **)v189, (uint64_t)v252);
      sub_1B634507C((char *)v12);
      ecs_stack_allocator_pop_snapshot(v166);
      if (v164)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
      }
      swift_release();
      uint64_t v7 = v162 + 1;
      if (v162 + 1 == v160)
      {
        sub_1B632F170(v209);
        uint64_t v2 = v153;
LABEL_150:
        sub_1B632F170(v209);
        goto LABEL_151;
      }
    }
    while (1)
    {
      uint64_t v65 = v180 + 88 * v9;
      if (*(unsigned char *)(v65 + 56) == 1) {
        break;
      }
      int v67 = *(unsigned __int8 *)(v65 + 42);
      uint64_t v66 = *(void *)(v12 + 40);
      if (v67 == 1) {
        goto LABEL_90;
      }
      uint64_t v86 = *(void *)(v66 + 16);
      uint64_t v87 = *(void *)(v86 + 128);
      if (*(void *)(v87 + 16))
      {
        unint64_t v88 = sub_1B62C1A30((uint64_t)&type metadata for InverseWorldTransform);
        if ((v89 & 1) != 0
          && *(ValueMetadata **)(*(void *)(v86 + 24) + 16 * *(void *)(*(void *)(v87 + 56) + 8 * v88) + 32) == &type metadata for InverseWorldTransform)
        {
          *(void *)&v211[0] = &type metadata for InverseWorldTransform;
          *((void *)&v211[0] + 1) = &off_1F0F87E48;
          char v213 = 1;
          uint64_t v90 = *(void *)(*v178 + 16);
          if (v90)
          {
            uint64_t v91 = *v178 + 32;
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v92 = 0;
            while (2)
            {
              sub_1B691F668(v91, (uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
              sub_1B639192C((uint64_t)&v214, (uint64_t)&v222);
              sub_1B639192C((uint64_t)v211, (uint64_t)v225);
              switch(BYTE8(v224))
              {
                case 1:
                  sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                  if (v227 != 1) {
                    goto LABEL_124;
                  }
                  goto LABEL_133;
                case 2:
                  sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                  if (v227 == 2) {
                    goto LABEL_138;
                  }
                  goto LABEL_123;
                case 3:
                  sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                  if (v227 == 3)
                  {
LABEL_138:
                    sub_1B62C15C4(v210, (uint64_t)&v249);
                    sub_1B62C15C4((long long *)v225, (uint64_t)v247);
                    uint64_t v97 = *((void *)&v250 + 1);
                    uint64_t v98 = v251;
                    sub_1B62C14BC(&v249, *((uint64_t *)&v250 + 1));
                    LOBYTE(v97) = sub_1B6B3D86C(v247, v97, v98);
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v247);
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v249);
                    sub_1B6391400((uint64_t)&v222);
                    sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                    if (v97)
                    {
LABEL_115:
                      swift_bridgeObjectRelease();
                      char v83 = sub_1B6B1B930();
                      uint64_t v84 = *(void *)(v82 + 48);
                      if (v84)
                      {
                        uint64_t v85 = *(void *)(v82 + 64);
                        *(void *)(v84 + 8 * v85) = v9;
                        *(void *)(v82 + 64) = v85 + 1;
                      }
                      ((void (*)(long long *, void))v83)(&v222, 0);
                      goto LABEL_85;
                    }
                  }
                  else
                  {
LABEL_123:
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v210);
LABEL_124:
                    sub_1B691F6D0((uint64_t)&v222, (uint64_t (*)(void))sub_1B691F560);
                    sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                  }
LABEL_125:
                  ++v92;
                  v91 += 72;
                  if (v90 != v92) {
                    continue;
                  }
LABEL_143:
                  swift_bridgeObjectRelease();
                  break;
                case 4:
                  sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                  if (v227 != 4) {
                    goto LABEL_124;
                  }
                  int v93 = LOBYTE(v210[0]);
                  int v94 = v225[0];
                  sub_1B6391400((uint64_t)&v222);
                  sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                  if (v93 == v94) {
                    goto LABEL_115;
                  }
                  goto LABEL_125;
                case 5:
                  if (v227 != 5) {
                    goto LABEL_124;
                  }
                  int8x16_t v99 = vorrq_s8(*(int8x16_t *)&v225[8], v226);
                  if (*(void *)&vorr_s8(*(int8x8_t *)v99.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v99, v99, 8uLL)) | *(void *)v225) {
                    goto LABEL_124;
                  }
LABEL_114:
                  sub_1B6391400((uint64_t)&v222);
                  sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                  goto LABEL_115;
                default:
                  sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
                  if (v227) {
                    goto LABEL_124;
                  }
LABEL_133:
                  uint64_t v95 = *(void *)&v210[0];
                  uint64_t v96 = *(void *)v225;
                  sub_1B6391400((uint64_t)&v222);
                  sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                  if (v95 == v96) {
                    goto LABEL_115;
                  }
                  goto LABEL_125;
              }
              goto LABEL_144;
            }
          }
LABEL_122:
          swift_retain();
LABEL_144:
          uint64_t v100 = *(void *)(v12 + 240) - *(void *)(v12 + 232);
          unint64_t v101 = ecs_stack_allocator_allocate(v176[4], 8 * v100, 8);
          *unint64_t v101 = v9;
          sub_1B639192C((uint64_t)v211, (uint64_t)&v222);
          *(void *)v225 = v101;
          *(void *)&v225[8] = v100;
          *(void *)&v225[16] = 1;
          BOOL v102 = (void *)v176[13];
          char v103 = swift_isUniquelyReferenced_nonNull_native();
          v176[13] = v102;
          if ((v103 & 1) == 0)
          {
            BOOL v102 = sub_1B68C0C6C(0, v102[2] + 1, 1, v102);
            *uint64_t v178 = v102;
          }
          unint64_t v105 = v102[2];
          unint64_t v104 = v102[3];
          if (v105 >= v104 >> 1)
          {
            BOOL v102 = sub_1B68C0C6C(v104 > 1, v105 + 1, 1, v102);
            *uint64_t v178 = v102;
          }
          v102[2] = v105 + 1;
          uint64_t v106 = &v102[9 * v105];
          *((_OWORD *)v106 + 2) = v222;
          long long v107 = v223;
          long long v108 = v224;
          long long v109 = *(_OWORD *)v225;
          v106[12] = *(void *)&v225[16];
          *((_OWORD *)v106 + 4) = v108;
          *((_OWORD *)v106 + 5) = v109;
          *((_OWORD *)v106 + 3) = v107;
LABEL_85:
          sub_1B6391400((uint64_t)v211);
          swift_release();
        }
      }
LABEL_86:
      if (++v9 == v10) {
        goto LABEL_81;
      }
    }
    uint64_t v66 = *(void *)(v12 + 40);
LABEL_90:
    uint64_t v68 = *(void *)(v66 + 16);
    uint64_t v69 = *(void *)(v68 + 128);
    if (!*(void *)(v69 + 16)
      || (unint64_t v70 = sub_1B62C1A30((uint64_t)&type metadata for InverseWorldTransform), (v71 & 1) == 0)
      || *(ValueMetadata **)(*(void *)(v68 + 24) + 16 * *(void *)(*(void *)(v69 + 56) + 8 * v70) + 32) != &type metadata for InverseWorldTransform)
    {
      *(void *)&v211[0] = &type metadata for InverseWorldTransform;
      *((void *)&v211[0] + 1) = &off_1F0F87E48;
      char v213 = 0;
      uint64_t v72 = *(void *)(*v178 + 16);
      if (v72)
      {
        uint64_t v73 = *v178 + 32;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v74 = 0;
        while (1)
        {
          sub_1B691F668(v73, (uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
          sub_1B639192C((uint64_t)&v214, (uint64_t)&v222);
          sub_1B639192C((uint64_t)v211, (uint64_t)v225);
          switch(BYTE8(v224))
          {
            case 1:
              sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
              if (v227 != 1) {
                goto LABEL_96;
              }
              goto LABEL_110;
            case 2:
              sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
              if (v227 == 2) {
                goto LABEL_104;
              }
              goto LABEL_95;
            case 3:
              sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
              if (v227 == 3)
              {
LABEL_104:
                sub_1B62C15C4(v210, (uint64_t)&v249);
                sub_1B62C15C4((long long *)v225, (uint64_t)v247);
                uint64_t v75 = *((void *)&v250 + 1);
                uint64_t v76 = v251;
                sub_1B62C14BC(&v249, *((uint64_t *)&v250 + 1));
                LOBYTE(v75) = sub_1B6B3D86C(v247, v75, v76);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v247);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v249);
                sub_1B6391400((uint64_t)&v222);
                sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
                if (v75) {
                  goto LABEL_115;
                }
              }
              else
              {
LABEL_95:
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v210);
LABEL_96:
                sub_1B691F6D0((uint64_t)&v222, (uint64_t (*)(void))sub_1B691F560);
                sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
              }
LABEL_97:
              ++v74;
              v73 += 72;
              if (v72 == v74) {
                goto LABEL_143;
              }
              break;
            case 4:
              sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
              if (v227 != 4) {
                goto LABEL_96;
              }
              int v77 = LOBYTE(v210[0]);
              int v78 = v225[0];
              sub_1B6391400((uint64_t)&v222);
              sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
              if (v77 == v78) {
                goto LABEL_115;
              }
              goto LABEL_97;
            case 5:
              if (v227 == 5)
              {
                int8x16_t v81 = vorrq_s8(*(int8x16_t *)&v225[8], v226);
                if (!(*(void *)&vorr_s8(*(int8x8_t *)v81.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)) | *(void *)v225)) {
                  goto LABEL_114;
                }
              }
              goto LABEL_96;
            default:
              sub_1B639192C((uint64_t)&v222, (uint64_t)v210);
              if (v227) {
                goto LABEL_96;
              }
LABEL_110:
              uint64_t v79 = *(void *)&v210[0];
              uint64_t v80 = *(void *)v225;
              sub_1B6391400((uint64_t)&v222);
              sub_1B691F6D0((uint64_t)&v214, (uint64_t (*)(void))sub_1B63B29DC);
              if (v79 == v80) {
                goto LABEL_115;
              }
              goto LABEL_97;
          }
        }
      }
      goto LABEL_122;
    }
    goto LABEL_86;
  }
LABEL_151:
  long long v110 = *(_OWORD *)(v173 + 232);
  long long v249 = *(_OWORD *)(v173 + 216);
  long long v250 = v110;
  uint64_t v251 = *(void *)(v173 + 248);
  sub_1B62C9DA8(v2, (uint64_t)&v249, 0x200000000, v210);
  sub_1B63175D8((uint64_t)v210, (uint64_t)&v222, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v222)
  {
    if (v226.i64[1] >= 1)
    {
      uint64_t v111 = *(void *)&v225[8];
      if (*(void *)&v225[8])
      {
        uint64_t v154 = v2;
        uint64_t v169 = v3;
        uint64_t v112 = *((void *)&v224 + 1);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v113 = 48 * v111;
        int v114 = (uint64_t *)(v112 + 40);
        do
        {
          uint64_t v119 = *v114;
          int64_t v120 = *(os_unfair_lock_s **)(*v114 + 376);
          swift_retain();
          os_unfair_lock_lock(v120);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v119 + 344));
          int v121 = *(_DWORD *)(v119 + 24);
          swift_retain();
          uint64_t v216 = 0;
          long long v214 = 0u;
          long long v215 = 0u;
          uint64_t v212 = 0;
          memset(v211, 0, sizeof(v211));
          int v122 = sub_1B637F628(v121, 0, 0, (uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, (uint64_t)&v214, (uint64_t)v211);
          swift_release();
          sub_1B62E2D70((uint64_t)v211, (unint64_t *)&qword_1EB97E850, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent);
          sub_1B62E2D70((uint64_t)&v214, (unint64_t *)&qword_1EB97E850, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent);
          if (sub_1B63B4340(v122))
          {
            sub_1B66603E4(v122);
          }
          else
          {
            uint64_t v115 = *(void *)(v119 + 232);
            uint64_t v116 = *(void *)(v119 + 240);
            char v117 = *(unsigned char *)(v119 + 120);
            uint64_t v118 = *(unsigned int *)(v119 + 28);
            LOBYTE(v214) = *(unsigned char *)(v119 + 32);
            sub_1B628EEF4(v115, v116, v122, v117, v118 | ((unint64_t)v214 << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v119 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v119 + 376));
          swift_release();
          v114 += 6;
          v113 -= 48;
        }
        while (v113);
        sub_1B632F170((uint64_t *)v210);
        uint64_t v3 = v169;
        uint64_t v2 = v154;
      }
    }
    sub_1B632F170((uint64_t *)v210);
  }
  long long v123 = *(_OWORD *)(v173 + 152);
  v247[0] = *(_OWORD *)(v173 + 136);
  v247[1] = v123;
  uint64_t v248 = *(void *)(v173 + 168);
  sub_1B62C9DA8(v2, (uint64_t)v247, 0x200000000, v211);
  uint64_t result = (uint64_t *)sub_1B63175D8((uint64_t)v211, (uint64_t)&v214, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v214)
  {
    long long v186 = v214;
    long long v187 = v215;
    uint64_t v188 = v216;
    if (v221 >= 1)
    {
      uint64_t v163 = v218;
      if (v218)
      {
        uint64_t v161 = v217;
        uint64_t v175 = v220[4];
        uint64_t v179 = v219;
        int v172 = *(unsigned __int8 *)(v219 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v159 = (uint64_t)(v220 + 6);
        uint64_t v177 = v2 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
        v181 = v220;
        v157 = v220 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v125 = 0;
        do
        {
          uint64_t v167 = v125;
          uint64_t v170 = v3;
          int v126 = (unsigned int *)(v161 + 48 * v125);
          uint64_t v127 = *v126;
          uint64_t v165 = v126[1];
          uint64_t v128 = v126[2];
          uint64_t v129 = (uint64_t *)*((void *)v126 + 2);
          uint64_t v130 = *((void *)v126 + 3);
          uint64_t v132 = *((void *)v126 + 4);
          uint64_t v131 = *((void *)v126 + 5);
          if (v172)
          {
            size_t v133 = *(os_unfair_lock_s **)(v131 + 376);
            swift_retain();
            os_unfair_lock_lock(v133);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v131 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v175);
          sub_1B63175D8(v159, (uint64_t)v246, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v134 = v181[4];
          uint64_t v135 = *(void *)(*(void *)(*(void *)(*(void *)(v131 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v181[6] = ecs_stack_allocator_allocate(v134, 48 * v135, 8);
          v181[7] = v135;
          v157[1] = 0;
          v157[2] = 0;
          void *v157 = 0;
          swift_release();
          uint64_t v136 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v129, v130, v132, (uint64_t)v181);
          uint64_t v137 = sub_1B62C9024((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, v129, v130, v132, (uint64_t)v181);
          uint64_t v138 = v137;
          if (v129)
          {
            for (; v132; --v132)
            {
              uint64_t v140 = *v129++;
              uint64_t v139 = v140;
              v184[0] = v179;
              v184[1] = v131;
              v184[2] = v181;
              v184[3] = v128;
              v184[4] = v140;
              if (*(void *)(v177 + 8) == 1 && *(void *)(v177 + 16) == 0)
              {
                *(void *)(v138 + 472) = 0;
                *(void *)(v138 + 480) = 0;
              }
              if (*(void *)(*(void *)(v138 + 176) + 16))
              {
                swift_isUniquelyReferenced_nonNull_native();
                uint64_t v182 = *(void *)(v138 + 176);
                *(void *)(v138 + 176) = 0x8000000000000000;
                sub_1B631773C();
                sub_1B6E32B78();
                *(void *)(v138 + 176) = v182;
                swift_bridgeObjectRelease();
              }
              *(void *)(v138 + 200) = 0;
              *(void *)(v138 + 208) = 0;
              *(void *)(v138 + 192) = 0;
              swift_unknownObjectRelease();
              if ((*(unsigned char *)(v138 + 272) & 1) == 0)
              {
                *(void *)(v138 + 288) = 0;
                *(void *)(v138 + 296) = 0;
                *(void *)(v138 + 280) = 0;
                swift_unknownObjectRelease();
                *(void *)(v138 + 304) = 0;
                *(void *)(v138 + 368) = 0;
                *(void *)(v138 + 376) = 0;
                *(void *)(v138 + 360) = 0;
                swift_unknownObjectRelease();
                *(void *)(v138 + 384) = 0;
                *(void *)(v138 + 392) = 0;
              }
              *(void *)(v138 + 112) = 0;
              *(void *)(v138 + 144) = 0;
              *(void *)(v138 + 152) = 0;
              *(void *)(v138 + 136) = 0;
              BOOL v142 = 1;
              *(unsigned char *)(v138 + 160) = 1;
              uint64_t v143 = *(void *)(v131 + 16);
              int v144 = *(unsigned __int8 *)(v143 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
              swift_retain();
              if (v144 == 4) {
                BOOL v142 = *(void *)(v143 + 216) > (uint64_t)*(unsigned __int8 *)(v143 + 225);
              }
              swift_retain();
              swift_release();
              uint64_t v145 = *(void *)(v131 + 192);
              if (v145 && (*(void *)(v145 + 8 * (v139 >> 6)) & (1 << v139)) != 0)
              {
                if (v142) {
                  *(void *)(*(void *)(v131 + 208) + 8 * (v139 >> 6)) |= 1 << v139;
                }
                swift_release();
                sub_1B62DB6C8((uint64_t)v184, v136);
              }
              else
              {
                swift_release();
              }
              v138 += 656;
              v136 += 88;
              ++v128;
            }
          }
          else if (v127 != v165)
          {
            uint64_t v146 = v137 + 656 * v127;
            uint64_t v147 = v136 + 88 * v127;
            do
            {
              v185[0] = v179;
              v185[1] = v131;
              v185[2] = v181;
              v185[3] = v128;
              v185[4] = v127;
              if (*(void *)(v177 + 8) == 1 && *(void *)(v177 + 16) == 0)
              {
                *(void *)(v146 + 472) = 0;
                *(void *)(v146 + 480) = 0;
              }
              if (*(void *)(*(void *)(v146 + 176) + 16))
              {
                swift_isUniquelyReferenced_nonNull_native();
                uint64_t v183 = *(void *)(v146 + 176);
                *(void *)(v146 + 176) = 0x8000000000000000;
                sub_1B631773C();
                sub_1B6E32B78();
                *(void *)(v146 + 176) = v183;
                swift_bridgeObjectRelease();
              }
              *(void *)(v146 + 200) = 0;
              *(void *)(v146 + 208) = 0;
              *(void *)(v146 + 192) = 0;
              swift_unknownObjectRelease();
              if ((*(unsigned char *)(v146 + 272) & 1) == 0)
              {
                *(void *)(v146 + 288) = 0;
                *(void *)(v146 + 296) = 0;
                *(void *)(v146 + 280) = 0;
                swift_unknownObjectRelease();
                *(void *)(v146 + 304) = 0;
                *(void *)(v146 + 368) = 0;
                *(void *)(v146 + 376) = 0;
                *(void *)(v146 + 360) = 0;
                swift_unknownObjectRelease();
                *(void *)(v146 + 384) = 0;
                *(void *)(v146 + 392) = 0;
              }
              *(void *)(v146 + 112) = 0;
              *(void *)(v146 + 144) = 0;
              *(void *)(v146 + 152) = 0;
              *(void *)(v146 + 136) = 0;
              BOOL v149 = 1;
              *(unsigned char *)(v146 + 160) = 1;
              uint64_t v150 = *(void *)(v131 + 16);
              int v151 = *(unsigned __int8 *)(v150 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
              swift_retain();
              if (v151 == 4) {
                BOOL v149 = *(void *)(v150 + 216) > (uint64_t)*(unsigned __int8 *)(v150 + 225);
              }
              swift_retain();
              swift_release();
              uint64_t v152 = *(void *)(v131 + 192);
              if (v152 && (*(void *)(v152 + 8 * (v127 >> 6)) & (1 << v127)) != 0)
              {
                if (v149) {
                  *(void *)(*(void *)(v131 + 208) + 8 * (v127 >> 6)) |= 1 << v127;
                }
                swift_release();
                sub_1B62DB6C8((uint64_t)v185, v147);
              }
              else
              {
                swift_release();
              }
              ++v127;
              v146 += 656;
              v147 += 88;
              ++v128;
            }
            while (v165 != v127);
          }
          v191[0] = v186;
          v191[1] = v187;
          uint64_t v192 = v188;
          uint64_t v3 = v170;
          sub_1B6345178(v181, (unsigned __int16 **)v191, (uint64_t)v246);
          sub_1B634507C((char *)v131);
          ecs_stack_allocator_pop_snapshot(v175);
          if (v172)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v131 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v131 + 376));
          }
          swift_release();
          uint64_t v125 = v167 + 1;
        }
        while (v167 + 1 != v163);
        sub_1B632F170((uint64_t *)v211);
      }
    }
    return sub_1B632F170((uint64_t *)v211);
  }
  return result;
}

uint64_t sub_1B63175D8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6317658(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B6317658(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B63176A4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B63176F0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B631773C()
{
  if (!qword_1EB94A188)
  {
    sub_1B63B70E8();
    unint64_t v0 = sub_1B6E32B88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB94A188);
    }
  }
}

uint64_t sub_1B63177A0(uint64_t a1, unint64_t a2, unsigned char *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v10 = *a4;
  uint64_t v11 = qword_1EB97DBA0;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1EB997A00;
  swift_release();
  if (v10 == v12) {
    return 2;
  }
  if (v10 != a5) {
    return 1;
  }
  if (a3[45] == 1)
  {
    if ((a4[34] & 1) == 0) {
      return 1;
    }
  }
  else if (a4[34])
  {
    return 1;
  }
  if (a3[56] != *((unsigned char *)a4 + 49)) {
    return 1;
  }
  uint64_t v14 = sub_1B62CACC8(a2);
  if (a4[6]) {
    return 0;
  }
  uint64_t v15 = (v14 & 0xFF00000000) == 0x200000000 ? 0 : v14;
  if (v15 != a4[5]) {
    return 0;
  }
  uint64_t v16 = *(void *)(*(void *)a3 + 16);
  if (!v16) {
    return 2;
  }
  uint64_t v45 = (uint64_t *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v46 = *(void *)a3 + 32;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v16; ++i)
  {
    uint64_t v19 = (int *)(v46 + 8 * i);
    uint64_t v20 = v19[1];
    uint64_t v21 = *v19;
    BOOL v22 = v21 == -1 && v20 == 0;
    if (!v22 && (v21 & 0x80000000) == 0 && v45[1] > v21)
    {
      uint64_t v23 = *v45;
      if (v20 == -1 || *(_DWORD *)(*v45 + 12 * (int)v21 + 8) == v20)
      {
        char v44 = (int *)(v23 + 12 * (int)v21);
        if (*(unsigned char *)(*(void *)(*(void *)(a1 + 136) + 8 * *v44 + 32) + 120))
        {
          uint64_t v25 = *(void *)(*(void *)(*(void *)(*(void *)(a1 + 80)
                                                  + 8 * *(__int16 *)(v23 + 12 * (int)v21 + 6)
                                                  + 32)
                                      + 16)
                          + 32);
          uint64_t v26 = *(void *)(v25 + 16);
          if (v26)
          {
            uint64_t v43 = v21;
            uint64_t v27 = (uint64_t *)(v25 + 32);
            while (1)
            {
              uint64_t v28 = *v27;
              if (swift_conformsToProtocol2() ? v28 : 0) {
                break;
              }
              v27 += 2;
              if (!--v26) {
                goto LABEL_20;
              }
            }
            uint64_t v30 = *(__int16 *)(v23 + 12 * (int)v21 + 4);
            int v31 = *(void **)(*(void *)(a1 + 136) + 8 * *v44 + 32);
            int v32 = *(unsigned __int8 *)(v31[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
            uint64_t v33 = swift_retain();
            if (v32 == 4)
            {
              char v34 = *(unsigned char *)(v33 + 225);
              uint64_t v35 = *(void *)(v33 + 216);
              swift_release();
              BOOL v36 = v35 > 1;
              if ((v34 & 1) == 0) {
                BOOL v36 = v35 > 0;
              }
            }
            else
            {
              swift_release();
              BOOL v36 = 1;
            }
            uint64_t v37 = v31[24];
            if (v37 && (*(void *)(v37 + 8 * (v30 >> 6)) & (1 << v30)) != 0)
            {
              if (v36) {
                *(void *)(v31[26] + 8 * (v30 >> 6)) |= 1 << v30;
              }
              uint64_t v38 = v43 | (v20 << 32);
              swift_retain();
              BOOL v39 = sub_1B62EC0CC((uint64_t)&type metadata for ParticleSpawnState, (uint64_t)&off_1F0F79A78, v38);
              swift_release();
              if (!v39) {
                goto LABEL_53;
              }
              swift_retain();
              BOOL v40 = sub_1B62EC0CC((uint64_t)&type metadata for ParticleBurstSpawn, (uint64_t)&off_1F0F78AC0, v38);
              swift_release();
              if (v40
                || (swift_retain(),
                    BOOL v41 = sub_1B62EC0CC((uint64_t)&type metadata for ParticlePeriodicBurstSpawn, (uint64_t)&off_1F0F967F0, v38), swift_release(), v41)|| (swift_retain(), v42 = sub_1B62EC0CC((uint64_t)&type metadata for ParticleSpawnDuration, (uint64_t)&off_1F0F89D90, v38), swift_release(), v42))
              {
LABEL_53:
                uint64_t v13 = 0;
                goto LABEL_56;
              }
            }
          }
        }
      }
    }
LABEL_20:
    ;
  }
  uint64_t v13 = 2;
LABEL_56:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1B6317B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  long long v4 = (uint64_t *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  for (uint64_t i = (int *)(a1 + 36); ; i += 2)
  {
    uint64_t v6 = *(i - 1);
    int v7 = *i;
    if ((v6 != -1 || v7 != 0) && (v6 & 0x80000000) == 0 && v4[1] > v6)
    {
      uint64_t v9 = *v4;
      if ((v7 == -1 || *(_DWORD *)(v9 + 12 * (int)v6 + 8) == v7)
        && *(unsigned char *)(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v9 + 12 * (int)v6) + 32) + 120) == 1)
      {
        uint64_t v10 = *(void *)(*(void *)(*(void *)(a2 + 80) + 8 * *(__int16 *)(v9 + 12 * (int)v6 + 6) + 32) + 16);
        uint64_t v11 = *(void *)(v10 + 128);
        if (*(void *)(v11 + 16))
        {
          unint64_t v12 = sub_1B62C1A30((uint64_t)&type metadata for ParticleSubSpawn);
          if ((v13 & 1) != 0
            && *(ValueMetadata **)(*(void *)(v10 + 24) + 16 * *(void *)(*(void *)(v11 + 56) + 8 * v12) + 32) == &type metadata for ParticleSubSpawn)
          {
            break;
          }
        }
      }
    }
    if (!--v2) {
      return 0;
    }
  }
  return 1;
}

uint64_t *sub_1B6317CA0(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 32);
  v29[0] = *(_OWORD *)(v1 + 16);
  v29[1] = v3;
  uint64_t v30 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v29, 0x200000000, v7);
  uint64_t result = (uint64_t *)sub_1B6311058((uint64_t)v7, (uint64_t)&v8, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v8)
  {
    long long v16 = v10;
    long long v17 = v11;
    long long v18 = v12;
    long long v19 = v13;
    long long v14 = v8;
    long long v15 = v9;
    int v21 = DWORD2(v8);
    uint64_t v20 = v8;
    char v22 = BYTE12(v8);
    uint64_t v23 = v9;
    char v24 = BYTE8(v9);
    long long v25 = v10;
    long long v26 = v11;
    long long v27 = v12;
    long long v28 = v13;
    MEMORY[0x1F4188790](result, v5);
    uint64_t v6 = *(void **)(a1 + 176);
    swift_retain();
    sub_1B636E6CC((uint64_t)&type metadata for DrawCallPool, (uint64_t)&off_1F0F59788, v6, (void (*)(uint64_t))sub_1B636EE04);
    swift_release();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B6365460(0);
    sub_1B632F170(v7);
    return sub_1B632F170(v7);
  }
  return result;
}

const char *sub_1B6317E48()
{
  return "CPUScriptRunnerSystem";
}

uint64_t sub_1B6317E5C(uint64_t a1)
{
  return a1;
}

uint64_t destroy for TriggerListComponent()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1B6317ED4(void *a1, void *a2)
{
  return a2;
}

void *initializeWithCopy for TriggerListComponent(void *a1, void *a2)
{
  swift_unknownObjectWeakCopyInit();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B6317F68(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  if (!*(void *)(v1 + 24))
  {
    if (*(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer)) {
      uint64_t v2 = swift_unknownObjectRetain();
    }
    else {
      uint64_t v2 = 0;
    }
    *(void *)(v1 + 24) = v2;
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1B6317FC8()
{
}

uint64_t *sub_1B6318028(uint64_t a1)
{
  uint64_t v308 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void *)(a1 + 8);
  swift_retain();
  sub_1B6359D30(v1, &v274);
  swift_release();
  long long v3 = (char *)v275;
  if ((void)v275)
  {
    char v4 = BYTE8(v280);
    uint64_t v5 = v280;
    uint64_t v186 = *((void *)&v279 + 1);
    uint64_t v187 = v279;
    uint64_t v178 = v278;
    long long v188 = v277;
    uint64_t v6 = v276;
    uint64_t v7 = *((void *)&v275 + 1);
    unsigned __int8 v179 = v274;
    v2.i32[0] = DWORD1(v274);
    int32x2_t v241 = v2;
    char v8 = BYTE8(v274);
    char v9 = BYTE8(v276);
    char v10 = BYTE8(v278);
  }
  else
  {
    long long v3 = sub_1B6D3EC54((uint64_t)&unk_1F0F82A20);
    uint64_t v7 = v11;
    *(void *)&long long v188 = sub_1B6D3EC54((uint64_t)&unk_1F0F829C0);
    *((void *)&v188 + 1) = v12;
    long long v13 = sub_1B6D3EC54((uint64_t)&unk_1F0F829F0);
    uint64_t v186 = v14;
    uint64_t v187 = (uint64_t)v13;
    char v8 = 0;
    uint64_t v6 = 0;
    uint64_t v178 = 0;
    uint64_t v5 = 0;
    char v9 = 1;
    v15.i32[0] = 1.0;
    int32x2_t v241 = v15;
    unsigned __int8 v179 = 2;
    char v10 = 1;
    char v4 = 1;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6319E94((uint64_t)v3, v7, v6, v9, 32, (uint64_t)v244);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v242[6] = v244[6];
  v242[7] = v244[7];
  v242[8] = v244[8];
  int v243 = v245;
  v242[2] = v244[2];
  v242[3] = v244[3];
  v242[4] = v244[4];
  v242[5] = v244[5];
  v242[0] = v244[0];
  v242[1] = v244[1];
  if (!v8)
  {
    long long v48 = *(_OWORD *)(v198 + 32);
    long long v285 = *(_OWORD *)(v198 + 16);
    long long v286 = v48;
    uint64_t v287 = *(void *)(v198 + 48);
    uint64_t v49 = swift_retain();
    sub_1B62C9DA8(v49, (uint64_t)&v285, 0x200000000, v288);
    sub_1B62D7410((uint64_t)v288, (uint64_t)&v274, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (!(void)v274)
    {
      swift_release();
      goto LABEL_129;
    }
    long long v255 = v274;
    long long v256 = v275;
    uint64_t v215 = *((void *)&v276 + 1);
    uint64_t v257 = v276;
    uint64_t v50 = *((void *)&v277 + 1);
    long long v51 = v278;
    uint64_t v52 = v279;
    swift_release();
    if (v52 <= 0 || !v50)
    {
      sub_1B632F170((uint64_t *)v288);
      goto LABEL_129;
    }
    uint64_t v53 = *(void *)(*((void *)&v51 + 1) + 32);
    int v226 = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v303[0] = v255;
    v303[1] = v256;
    uint64_t v304 = v257;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    uint64_t v205 = v50;
    uint64_t v210 = v53;
    while (1)
    {
      long long v56 = (unsigned int *)(v215 + 48 * v54);
      uint64_t v224 = *v56;
      uint64_t v218 = v56[1];
      uint64_t v58 = (uint64_t *)*((void *)v56 + 2);
      uint64_t v57 = *((void *)v56 + 3);
      uint64_t v59 = *((void *)v56 + 4);
      uint64_t v60 = *((void *)v56 + 5);
      uint64_t v221 = v55;
      if (v226)
      {
        uint64_t v61 = *(os_unfair_lock_s **)(v60 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v61);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v60 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v53);
      sub_1B62D7410(*((void *)&v51 + 1) + 48, (uint64_t)v284, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v62 = *(void *)(*((void *)&v51 + 1) + 32);
      uint64_t v63 = *(void *)(*(void *)(*(void *)(*(void *)(v60 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      *(void *)(*((void *)&v51 + 1) + 48) = ecs_stack_allocator_allocate(v62, 48 * v63, 8);
      *(void *)(*((void *)&v51 + 1) + 56) = v63;
      *(_OWORD *)(*((void *)&v51 + 1) + 72) = 0uLL;
      *(void *)(*((void *)&v51 + 1) + 64) = 0;
      swift_release();
      int8x16_t v64 = (float *)sub_1B62C9024((uint64_t)&type metadata for Scale1, (uint64_t)&off_1F0FA0DD0, v58, v57, v59, *((uint64_t *)&v51 + 1));
      uint64_t v65 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v58, v57, v59, *((uint64_t *)&v51 + 1));
      uint64_t v66 = (float *)v65;
      if (v58)
      {
        if (v59)
        {
          uint64_t v53 = v210;
          do
          {
            float v68 = sample_curve((uint64_t)v242, *v66);
            switch(v179)
            {
              case 1u:
                float v67 = (float)(*(float *)v241.i32 * v68) + *v64;
                break;
              case 2u:
                float v67 = (float)(*(float *)v241.i32 * v68) * *v64;
                break;
              case 3u:
                float v67 = *v64 + (float)((float)(v68 - *v64) * *(float *)v241.i32);
                break;
              default:
                float v67 = *(float *)v241.i32 * v68;
                break;
            }
            *v64++ = v67;
            ++v66;
            --v59;
          }
          while (v59);
          goto LABEL_53;
        }
      }
      else if (v224 != v218)
      {
        uint64_t v69 = v218 - v224;
        unint64_t v70 = (float *)(v65 + 4 * v224);
        char v71 = &v64[v224];
        uint64_t v53 = v210;
        do
        {
          float v73 = sample_curve((uint64_t)v242, *v70);
          switch(v179)
          {
            case 1u:
              float v72 = (float)(*(float *)v241.i32 * v73) + *v71;
              break;
            case 2u:
              float v72 = (float)(*(float *)v241.i32 * v73) * *v71;
              break;
            case 3u:
              float v72 = *v71 + (float)((float)(v73 - *v71) * *(float *)v241.i32);
              break;
            default:
              float v72 = *(float *)v241.i32 * v73;
              break;
          }
          *v71++ = v72;
          ++v70;
          --v69;
        }
        while (v69);
        goto LABEL_53;
      }
      uint64_t v53 = v210;
LABEL_53:
      uint64_t v55 = v221;
      sub_1B6345178(*((void **)&v51 + 1), (unsigned __int16 **)v303, (uint64_t)v284);
      sub_1B634507C((char *)v60);
      ecs_stack_allocator_pop_snapshot(v53);
      if (v226)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v60 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v60 + 376));
      }
      swift_release();
      if (++v54 == v205)
      {
        sub_1B632F170((uint64_t *)v288);
        sub_1B632F170((uint64_t *)v288);
LABEL_129:
        long long v146 = *(_OWORD *)(v198 + 152);
        uint64_t v263 = *(void *)(v198 + 168);
        long long v261 = *(_OWORD *)(v198 + 136);
        long long v262 = v146;
        swift_retain();
        uint64_t v147 = swift_retain();
        sub_1B62C9DA8(v147, (uint64_t)&v261, 0x200000000, &v295);
        sub_1B62D7410((uint64_t)&v295, (uint64_t)&v264, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
        if (!(void)v264)
        {
          sub_1B62CA064((uint64_t)&v261);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return (uint64_t *)swift_bridgeObjectRelease();
        }
        long long v252 = v264;
        long long v253 = v265;
        uint64_t v200 = *((void *)&v266 + 1);
        uint64_t v254 = v266;
        uint64_t v148 = *((void *)&v267 + 1);
        long long v149 = v268;
        uint64_t v150 = v269;
        sub_1B62CA064((uint64_t)&v261);
        swift_release();
        if (v150 <= 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v148)
          {
            uint64_t v212 = *(void *)(*((void *)&v149 + 1) + 32);
            int v151 = *(unsigned __int8 *)(v149 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            long long v258 = v252;
            long long v259 = v253;
            uint64_t v260 = v254;
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v152 = 0;
            uint64_t v199 = v148;
            int v196 = v151;
            while (1)
            {
              uint64_t v153 = (unsigned int *)(v200 + 48 * v152);
              uint64_t v208 = *v153;
              uint64_t v202 = v153[1];
              uint64_t v155 = (uint64_t *)*((void *)v153 + 2);
              uint64_t v154 = *((void *)v153 + 3);
              uint64_t v156 = *((void *)v153 + 4);
              uint64_t v157 = *((void *)v153 + 5);
              if (v151)
              {
                uint64_t v158 = *(os_unfair_lock_s **)(v157 + 376);
                swift_retain_n();
                os_unfair_lock_lock(v158);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v157 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v212);
              sub_1B62D7410(*((void *)&v149 + 1) + 48, (uint64_t)&v305, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
              uint64_t v159 = *(void *)(*((void *)&v149 + 1) + 32);
              uint64_t v160 = *(void *)(*(void *)(*(void *)(*(void *)(v157 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              *(void *)(*((void *)&v149 + 1) + 48) = ecs_stack_allocator_allocate(v159, 48 * v160, 8);
              *(void *)(*((void *)&v149 + 1) + 56) = v160;
              *(_OWORD *)(*((void *)&v149 + 1) + 72) = 0uLL;
              *(void *)(*((void *)&v149 + 1) + 64) = 0;
              swift_release();
              uint64_t v161 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v155, v154, v156, *((uint64_t *)&v149 + 1));
              uint64_t v162 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v155, v154, v156, *((uint64_t *)&v149 + 1));
              uint64_t v163 = (float *)v162;
              if (v155)
              {
                for (; v156; --v156)
                {
                  *(float *)v167.i32 = sample_curve((uint64_t)v242, *v163);
                  switch(v179)
                  {
                    case 1u:
                      *(float *)v167.i32 = *(float *)v241.i32 * *(float *)v167.i32;
                      float32x4_t v166 = vaddq_f32((float32x4_t)vdupq_lane_s32(v167, 0), *v161);
                      v166.i32[3] = v230;
                      break;
                    case 2u:
                      float32x4_t v166 = vmulq_n_f32(*v161, *(float *)v241.i32 * *(float *)v167.i32);
                      v166.i32[3] = v240;
                      break;
                    case 3u:
                      float v164 = v161->f32[2];
                      float v165 = *(float *)v241.i32 * (float)(*(float *)v167.i32 - v164);
                      *(float32x2_t *)v166.f32 = vadd_f32(*(float32x2_t *)v161->f32, vmul_n_f32(vsub_f32((float32x2_t)vdup_lane_s32(v167, 0), *(float32x2_t *)v161->f32), *(float *)v241.i32));
                      v166.f32[2] = v164 + v165;
                      goto LABEL_141;
                    default:
                      *(float *)v167.i32 = *(float *)v241.i32 * *(float *)v167.i32;
                      float32x4_t v166 = (float32x4_t)vdupq_lane_s32(v167, 0);
LABEL_141:
                      v166.i32[3] = 0;
                      break;
                  }
                  *v161++ = v166;
                  ++v163;
                }
              }
              else if (v208 != v202)
              {
                uint64_t v169 = v202 - v208;
                uint64_t v170 = (float *)(v162 + 4 * v208);
                uint64_t v171 = &v161[v208];
                uint64_t v168 = v199;
                do
                {
                  *(float *)v175.i32 = sample_curve((uint64_t)v242, *v170);
                  switch(v179)
                  {
                    case 1u:
                      *(float *)v175.i32 = *(float *)v241.i32 * *(float *)v175.i32;
                      float32x4_t v174 = vaddq_f32((float32x4_t)vdupq_lane_s32(v175, 0), *v171);
                      v174.i32[3] = v216;
                      break;
                    case 2u:
                      float32x4_t v174 = vmulq_n_f32(*v171, *(float *)v241.i32 * *(float *)v175.i32);
                      v174.i32[3] = v219;
                      break;
                    case 3u:
                      float v172 = v171->f32[2];
                      float v173 = *(float *)v241.i32 * (float)(*(float *)v175.i32 - v172);
                      *(float32x2_t *)v174.f32 = vadd_f32(*(float32x2_t *)v171->f32, vmul_n_f32(vsub_f32((float32x2_t)vdup_lane_s32(v175, 0), *(float32x2_t *)v171->f32), *(float *)v241.i32));
                      v174.f32[2] = v172 + v173;
                      goto LABEL_153;
                    default:
                      *(float *)v175.i32 = *(float *)v241.i32 * *(float *)v175.i32;
                      float32x4_t v174 = (float32x4_t)vdupq_lane_s32(v175, 0);
LABEL_153:
                      v174.i32[3] = 0;
                      break;
                  }
                  *v171++ = v174;
                  ++v170;
                  --v169;
                }
                while (v169);
                goto LABEL_149;
              }
              uint64_t v168 = v199;
LABEL_149:
              sub_1B6345178(*((void **)&v149 + 1), (unsigned __int16 **)&v258, (uint64_t)&v305);
              sub_1B634507C((char *)v157);
              ecs_stack_allocator_pop_snapshot(v212);
              int v151 = v196;
              if (v196)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v157 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v157 + 376));
              }
              swift_release();
              if (++v152 == v168)
              {
                sub_1B632F170((uint64_t *)&v295);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_168;
              }
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_168:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        int v176 = (uint64_t *)&v295;
        return sub_1B632F170(v176);
      }
    }
  }
  if (v8 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6319E94(v188, *((uint64_t *)&v188 + 1), v178, v10, 32, (uint64_t)&v274);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6319E94(v187, v186, v5, v4, 32, (uint64_t)&v264);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v287 = *(void *)(v198 + 128);
    long long v74 = *(_OWORD *)(v198 + 112);
    long long v285 = *(_OWORD *)(v198 + 96);
    long long v286 = v74;
    swift_retain();
    uint64_t v75 = swift_retain();
    sub_1B62C9DA8(v75, (uint64_t)&v285, 0x200000000, v288);
    sub_1B62D7410((uint64_t)v288, (uint64_t)&v295, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (!(void)v295)
    {
      sub_1B62CA064((uint64_t)&v285);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t *)swift_release();
    }
    long long v305 = v295;
    long long v306 = v296;
    uint64_t v184 = v298;
    uint64_t v307 = v297;
    uint64_t v76 = v299;
    uint64_t v77 = v300;
    v193 = v301;
    uint64_t v78 = v302;
    sub_1B62CA064((uint64_t)&v285);
    swift_release();
    if (v78 <= 0 || !v76)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_162:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v176 = (uint64_t *)v288;
      return sub_1B632F170(v176);
    }
    uint64_t v191 = v193[4];
    int v79 = *(unsigned __int8 *)(v77 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    long long v261 = v305;
    long long v262 = v306;
    uint64_t v263 = v307;
    float32x2_t v206 = (float32x2_t)vdupq_lane_s32(v241, 0).u64[0];
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v80 = 0;
    uint64_t v81 = 0;
    uint64_t v177 = v179;
    uint64_t v82 = v179;
    int v180 = v79;
    uint64_t v182 = v76;
    while (1)
    {
      uint64_t v234 = v81;
      uint64_t v189 = v80;
      char v83 = (unsigned int *)(v184 + 48 * v80);
      uint64_t v84 = *v83;
      uint64_t v85 = (uint64_t *)*((void *)v83 + 2);
      uint64_t v86 = *((void *)v83 + 3);
      uint64_t v87 = *((void *)v83 + 4);
      uint64_t v88 = *((void *)v83 + 5);
      uint64_t v227 = v83[1];
      if (v79)
      {
        char v89 = *(os_unfair_lock_s **)(v88 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v89);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v88 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v191);
      sub_1B62D7410((uint64_t)(v193 + 6), (uint64_t)v284, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v90 = v193[4];
      uint64_t v91 = *(void *)(*(void *)(*(void *)(*(void *)(v88 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v193[6] = ecs_stack_allocator_allocate(v90, 48 * v91, 8);
      v193[7] = v91;
      v193[9] = 0;
      v193[10] = 0;
      v193[8] = 0;
      swift_release();
      uint64_t v92 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v85, v86, v87, (uint64_t)v193);
      uint64_t v93 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v85, v86, v87, (uint64_t)v193);
      int v94 = (float *)v93;
      if (v85)
      {
        uint64_t v95 = v182;
        if (v87)
        {
          uint64_t v96 = v189;
          uint64_t v81 = v234;
          do
          {
            float v235 = sample_curve((uint64_t)v242, *v94);
            float v228 = sample_curve((uint64_t)&v274, *v94);
            float v100 = sample_curve((uint64_t)&v264, *v94);
            v101.f32[0] = v235;
            v102.i64[0] = __PAIR64__(LODWORD(v228), LODWORD(v235));
            v102.i64[1] = LODWORD(v100);
            switch(v82)
            {
              case 1:
                float32x4_t v99 = vaddq_f32(vmulq_n_f32(v102, *(float *)v241.i32), *v92);
                v99.i32[3] = v216;
                break;
              case 2:
                float32x4_t v99 = vmulq_f32(vmulq_n_f32(v102, *(float *)v241.i32), *v92);
                v99.i32[3] = v222;
                break;
              case 3:
                float v97 = v92->f32[2];
                float v98 = *(float *)v241.i32 * (float)(v100 - v97);
                v101.f32[1] = v228;
                *(float32x2_t *)v99.f32 = vadd_f32(*(float32x2_t *)v92->f32, vmul_f32(v206, vsub_f32(v101, *(float32x2_t *)v92->f32)));
                v99.f32[2] = v97 + v98;
                v99.i32[3] = 0;
                break;
              default:
                float32x4_t v99 = vmulq_n_f32(v102, *(float *)v241.i32);
                v99.i32[3] = v213;
                break;
            }
            *v92++ = v99;
            ++v94;
            --v87;
          }
          while (v87);
          goto LABEL_81;
        }
      }
      else
      {
        uint64_t v95 = v182;
        if (v84 != v227)
        {
          uint64_t v103 = v227 - v84;
          unint64_t v104 = (float *)(v93 + 4 * v84);
          unint64_t v105 = &v92[v84];
          uint64_t v96 = v189;
          uint64_t v81 = v234;
          do
          {
            float v236 = sample_curve((uint64_t)v242, *v104);
            float v229 = sample_curve((uint64_t)&v274, *v104);
            float v109 = sample_curve((uint64_t)&v264, *v104);
            v110.f32[0] = v236;
            v111.i64[0] = __PAIR64__(LODWORD(v229), LODWORD(v236));
            v111.i64[1] = LODWORD(v109);
            switch(v177)
            {
              case 1:
                float32x4_t v108 = vaddq_f32(vmulq_n_f32(v111, *(float *)v241.i32), *v105);
                v108.i32[3] = v201;
                break;
              case 2:
                float32x4_t v108 = vmulq_f32(vmulq_n_f32(v111, *(float *)v241.i32), *v105);
                v108.i32[3] = v197;
                break;
              case 3:
                float v106 = v105->f32[2];
                float v107 = *(float *)v241.i32 * (float)(v109 - v106);
                v110.f32[1] = v229;
                *(float32x2_t *)v108.f32 = vadd_f32(*(float32x2_t *)v105->f32, vmul_f32(v206, vsub_f32(v110, *(float32x2_t *)v105->f32)));
                v108.f32[2] = v106 + v107;
                v108.i32[3] = 0;
                break;
              default:
                float32x4_t v108 = vmulq_n_f32(v111, *(float *)v241.i32);
                v108.i32[3] = v203;
                break;
            }
            *v105++ = v108;
            ++v104;
            --v103;
          }
          while (v103);
          goto LABEL_81;
        }
      }
      uint64_t v96 = v189;
      uint64_t v81 = v234;
LABEL_81:
      sub_1B6345178(v193, (unsigned __int16 **)&v261, (uint64_t)v284);
      sub_1B634507C((char *)v88);
      ecs_stack_allocator_pop_snapshot(v191);
      int v79 = v180;
      if (v180)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v88 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v88 + 376));
      }
      swift_release();
      uint64_t v80 = v96 + 1;
      if (v80 == v95)
      {
        sub_1B632F170((uint64_t *)v288);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_162;
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6319E94(v188, *((uint64_t *)&v188 + 1), v178, v10, 32, (uint64_t)&v274);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v268 = v278;
  long long v269 = v279;
  long long v266 = v276;
  long long v267 = v277;
  int v273 = v283;
  long long v271 = v281;
  long long v272 = v282;
  long long v270 = v280;
  long long v264 = v274;
  long long v265 = v275;
  long long v16 = *(_OWORD *)(v198 + 72);
  long long v261 = *(_OWORD *)(v198 + 56);
  long long v262 = v16;
  uint64_t v263 = *(void *)(v198 + 88);
  uint64_t v17 = swift_retain();
  sub_1B62C9DA8(v17, (uint64_t)&v261, 0x200000000, v284);
  sub_1B62D7410((uint64_t)v284, (uint64_t)&v295, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!(void)v295)
  {
    swift_release();
    uint64_t v26 = 0;
    goto LABEL_97;
  }
  long long v249 = v295;
  long long v250 = v296;
  uint64_t v220 = v298;
  uint64_t v251 = v297;
  uint64_t v18 = v299;
  uint64_t v19 = v300;
  uint64_t v20 = v301;
  uint64_t v21 = v302;
  swift_release();
  if (v21 <= 0 || !v18)
  {
    sub_1B632F170(v284);
    uint64_t v26 = 0;
    goto LABEL_97;
  }
  uint64_t v22 = v18;
  uint64_t v23 = v20[4];
  int v24 = *(unsigned __int8 *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  long long v252 = v249;
  long long v253 = v250;
  uint64_t v254 = v251;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  int v209 = v24;
  uint64_t v217 = v22;
  uint64_t v214 = v23;
  do
  {
    long long v27 = (unsigned int *)(v220 + 48 * v25);
    uint64_t v231 = *v27;
    uint64_t v223 = v27[1];
    uint64_t v29 = (uint64_t *)*((void *)v27 + 2);
    uint64_t v28 = *((void *)v27 + 3);
    uint64_t v30 = *((void *)v27 + 4);
    uint64_t v31 = *((void *)v27 + 5);
    uint64_t v204 = v26;
    if (v24)
    {
      int v32 = *(os_unfair_lock_s **)(v31 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v32);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v31 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v23);
    sub_1B62D7410((uint64_t)(v20 + 6), (uint64_t)&v305, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v33 = v20[4];
    uint64_t v34 = *(void *)(*(void *)(*(void *)(*(void *)(v31 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v20[6] = ecs_stack_allocator_allocate(v33, 48 * v34, 8);
    v20[7] = v34;
    v20[9] = 0;
    v20[10] = 0;
    v20[8] = 0;
    swift_release();
    uint64_t v35 = (float32x2_t *)sub_1B62C9024((uint64_t)&type metadata for Scale2, (uint64_t)&off_1F0FA0F38, v29, v28, v30, (uint64_t)v20);
    uint64_t v36 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v29, v28, v30, (uint64_t)v20);
    uint64_t v37 = (float *)v36;
    if (v29)
    {
      if (!v30) {
        goto LABEL_24;
      }
      uint64_t v38 = v217;
      do
      {
        float v232 = sample_curve((uint64_t)v242, *v37);
        float v40 = sample_curve((uint64_t)&v264, *v37);
        v41.f32[0] = v232;
        switch(v179)
        {
          case 1u:
            float32x2_t v39 = vadd_f32(vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v40), LODWORD(v232)), *(float *)v241.i32), *v35);
            break;
          case 2u:
            float32x2_t v39 = vmul_f32(vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v40), LODWORD(v232)), *(float *)v241.i32), *v35);
            break;
          case 3u:
            v41.f32[1] = v40;
            float32x2_t v39 = vadd_f32(*v35, vmul_n_f32(vsub_f32(v41, *v35), *(float *)v241.i32));
            break;
          default:
            float32x2_t v39 = vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v40), LODWORD(v232)), *(float *)v241.i32);
            break;
        }
        *v35++ = v39;
        ++v37;
        --v30;
      }
      while (v30);
    }
    else
    {
      if (v231 == v223)
      {
LABEL_24:
        uint64_t v38 = v217;
        goto LABEL_25;
      }
      uint64_t v42 = v223 - v231;
      uint64_t v43 = (float *)(v36 + 4 * v231);
      char v44 = &v35[v231];
      uint64_t v38 = v217;
      do
      {
        float v233 = sample_curve((uint64_t)v242, *v43);
        float v46 = sample_curve((uint64_t)&v264, *v43);
        v47.f32[0] = v233;
        switch(v179)
        {
          case 1u:
            float32x2_t v45 = vadd_f32(vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v46), LODWORD(v233)), *(float *)v241.i32), *v44);
            break;
          case 2u:
            float32x2_t v45 = vmul_f32(vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v46), LODWORD(v233)), *(float *)v241.i32), *v44);
            break;
          case 3u:
            v47.f32[1] = v46;
            float32x2_t v45 = vadd_f32(*v44, vmul_n_f32(vsub_f32(v47, *v44), *(float *)v241.i32));
            break;
          default:
            float32x2_t v45 = vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v46), LODWORD(v233)), *(float *)v241.i32);
            break;
        }
        *v44++ = v45;
        ++v43;
        --v42;
      }
      while (v42);
    }
LABEL_25:
    uint64_t v26 = v204;
    sub_1B6345178(v20, (unsigned __int16 **)&v252, (uint64_t)&v305);
    sub_1B634507C((char *)v31);
    uint64_t v23 = v214;
    ecs_stack_allocator_pop_snapshot(v214);
    int v24 = v209;
    if (v209)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 376));
    }
    swift_release();
    ++v25;
  }
  while (v25 != v38);
  sub_1B632F170(v284);
  sub_1B632F170(v284);
LABEL_97:
  uint64_t v260 = *(void *)(v198 + 208);
  long long v113 = *(_OWORD *)(v198 + 192);
  long long v258 = *(_OWORD *)(v198 + 176);
  long long v259 = v113;
  swift_retain();
  uint64_t v114 = swift_retain();
  sub_1B62C9DA8(v114, (uint64_t)&v258, 0x200000000, &v285);
  sub_1B62D7410((uint64_t)&v285, (uint64_t)v288, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v288[0])
  {
    sub_1B62CA064((uint64_t)&v258);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  long long v246 = v288[0];
  long long v247 = v288[1];
  uint64_t v190 = v290;
  uint64_t v248 = v289;
  uint64_t v115 = v291;
  uint64_t v116 = v292;
  uint64_t v194 = v293;
  uint64_t v117 = v294;
  sub_1B62CA064((uint64_t)&v258);
  swift_release();
  if (v117 <= 0 || !v115)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_164;
  }
  uint64_t v118 = v115;
  uint64_t v119 = v194[4];
  int v120 = *(unsigned __int8 *)(v116 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  long long v255 = v246;
  long long v256 = v247;
  uint64_t v257 = v248;
  float32x2_t v211 = (float32x2_t)vdupq_lane_s32(v241, 0).u64[0];
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v121 = 0;
  uint64_t v122 = v179;
  uint64_t v183 = v118;
  uint64_t v185 = v119;
  int v181 = v120;
  while (2)
  {
    uint64_t v207 = v26;
    uint64_t v192 = v121;
    long long v123 = (unsigned int *)(v190 + 48 * v121);
    uint64_t v124 = *v123;
    uint64_t v237 = v123[1];
    int v126 = (uint64_t *)*((void *)v123 + 2);
    uint64_t v125 = *((void *)v123 + 3);
    uint64_t v128 = *((void *)v123 + 4);
    uint64_t v127 = *((void *)v123 + 5);
    if (v120)
    {
      uint64_t v129 = *(os_unfair_lock_s **)(v127 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v129);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v127 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v119);
    sub_1B62D7410((uint64_t)(v194 + 6), (uint64_t)v303, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v130 = v194[4];
    uint64_t v131 = *(void *)(*(void *)(*(void *)(*(void *)(v127 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v194[6] = ecs_stack_allocator_allocate(v130, 48 * v131, 8);
    v194[7] = v131;
    v194[9] = 0;
    v194[10] = 0;
    v194[8] = 0;
    swift_release();
    uint64_t v132 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v126, v125, v128, (uint64_t)v194);
    uint64_t v133 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v126, v125, v128, (uint64_t)v194);
    uint64_t v134 = (float *)v133;
    if (v126)
    {
      if (v128)
      {
        uint64_t v26 = v207;
        uint64_t v119 = v185;
        do
        {
          float v238 = sample_curve((uint64_t)v242, *v134);
          float v136 = sample_curve((uint64_t)&v264, *v134);
          v137.f32[0] = v238;
          v138.i64[0] = __PAIR64__(LODWORD(v136), LODWORD(v238));
          v138.i64[1] = COERCE_UNSIGNED_INT(1.0);
          switch(v122)
          {
            case 1:
              float32x4_t v135 = vaddq_f32(vmulq_n_f32(v138, *(float *)v241.i32), *v132);
              v135.i32[3] = v219;
              break;
            case 2:
              float32x4_t v135 = vmulq_f32(vmulq_n_f32(v138, *(float *)v241.i32), *v132);
              v135.i32[3] = v225;
              break;
            case 3:
              v137.f32[1] = v136;
              *(float32x2_t *)v135.f32 = vadd_f32(*(float32x2_t *)v132->f32, vmul_f32(v211, vsub_f32(v137, *(float32x2_t *)v132->f32)));
              v135.f32[2] = v132->f32[2] + (float)(*(float *)v241.i32 * (float)(1.0 - v132->f32[2]));
              v135.i32[3] = 0;
              break;
            default:
              float32x4_t v135 = vmulq_n_f32(v138, *(float *)v241.i32);
              v135.i32[3] = v216;
              break;
          }
          *v132++ = v135;
          ++v134;
          --v128;
        }
        while (v128);
        goto LABEL_124;
      }
LABEL_123:
      uint64_t v26 = v207;
      uint64_t v119 = v185;
      goto LABEL_124;
    }
    if (v124 == v237) {
      goto LABEL_123;
    }
    uint64_t v139 = v237 - v124;
    uint64_t v140 = (float *)(v133 + 4 * v124);
    unint64_t v141 = &v132[v124];
    uint64_t v26 = v207;
    uint64_t v119 = v185;
    do
    {
      float v239 = sample_curve((uint64_t)v242, *v140);
      float v143 = sample_curve((uint64_t)&v264, *v140);
      v144.f32[0] = v239;
      v145.i64[0] = __PAIR64__(LODWORD(v143), LODWORD(v239));
      v145.i64[1] = COERCE_UNSIGNED_INT(1.0);
      switch(v122)
      {
        case 1:
          float32x4_t v142 = vaddq_f32(vmulq_n_f32(v145, *(float *)v241.i32), *v141);
          v142.i32[3] = v197;
          break;
        case 2:
          float32x4_t v142 = vmulq_f32(vmulq_n_f32(v145, *(float *)v241.i32), *v141);
          v142.i32[3] = v201;
          break;
        case 3:
          v144.f32[1] = v143;
          *(float32x2_t *)v142.f32 = vadd_f32(*(float32x2_t *)v141->f32, vmul_f32(v211, vsub_f32(v144, *(float32x2_t *)v141->f32)));
          v142.f32[2] = v141->f32[2] + (float)(*(float *)v241.i32 * (float)(1.0 - v141->f32[2]));
          v142.i32[3] = 0;
          break;
        default:
          float32x4_t v142 = vmulq_n_f32(v145, *(float *)v241.i32);
          v142.i32[3] = v195;
          break;
      }
      *v141++ = v142;
      ++v140;
      --v139;
    }
    while (v139);
LABEL_124:
    sub_1B6345178(v194, (unsigned __int16 **)&v255, (uint64_t)v303);
    sub_1B634507C((char *)v127);
    ecs_stack_allocator_pop_snapshot(v119);
    int v120 = v181;
    if (v181)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v127 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v127 + 376));
    }
    swift_release();
    uint64_t v121 = v192 + 1;
    if (v192 + 1 != v183) {
      continue;
    }
    break;
  }
  sub_1B632F170((uint64_t *)&v285);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_164:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v176 = (uint64_t *)&v285;
  return sub_1B632F170(v176);
}

double sub_1B6319E94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  long long v24 = 0u;
  memset(v25, 0, 28);
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7) {
    float v8 = *(float *)(a2 + 4 * v7 + 28);
  }
  else {
    float v8 = 1.0;
  }
  uint64_t v9 = 32;
  if (a5 < 32) {
    uint64_t v9 = a5;
  }
  if (v9 <= 2) {
    uint64_t v10 = 2;
  }
  else {
    uint64_t v10 = v9;
  }
  *(float *)&v25[28] = (float)((float)v10 + -1.0) / v8;
  int v26 = 1065353216;
  sub_1B6319FC0(v10, a1, a2, a3, a4, v10, (uint64_t)&v18);
  LODWORD(v18) = DWORD1(v18);
  uint64_t v11 = (int *)&v18 + v10;
  int v12 = *v11;
  v11[1] = *v11;
  v11[2] = v12;
  long long v13 = *(_OWORD *)v25;
  *(_OWORD *)(a6 + 96) = v24;
  *(_OWORD *)(a6 + 112) = v13;
  *(_OWORD *)(a6 + 128) = *(_OWORD *)&v25[16];
  *(_DWORD *)(a6 + 144) = v26;
  long long v14 = v21;
  *(_OWORD *)(a6 + 32) = v20;
  *(_OWORD *)(a6 + 48) = v14;
  long long v15 = v23;
  *(_OWORD *)(a6 + 64) = v22;
  *(_OWORD *)(a6 + 80) = v15;
  double result = *(double *)&v18;
  long long v17 = v19;
  *(_OWORD *)a6 = v18;
  *(_OWORD *)(a6 + 16) = v17;
  return result;
}

void sub_1B6319FC0(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, char a5, unint64_t a6, uint64_t a7)
{
  uint64_t v13 = isStackAllocationSafe;
  v16[1] = *MEMORY[0x1E4F143B8];
  if (4 * isStackAllocationSafe >= 1025)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) == 0)
    {
      uint64_t v15 = swift_slowAlloc();
      sub_1B631A190(v15, v13, a2, a3, a4, a5, v13, a6, a7);
      JUMPOUT(0x1BA9B84C0);
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe, a2);
  sub_1B631A190((uint64_t)v16 - v14, v13, a2, a3, a4, a5, v13, a6, a7);
}

void sub_1B631A190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v16 = *(void *)(a4 + 16);
  if (v16)
  {
    float v17 = *(float *)(a4 + 4 * v16 + 28);
    if (!a7) {
      goto LABEL_7;
    }
  }
  else
  {
    float v17 = 1.0;
    if (!a7) {
      goto LABEL_7;
    }
  }
  uint64_t v18 = 0;
  float v19 = v17 / (float)((float)a7 + -1.0);
  do
  {
    sub_1B631A2E0(a3, a4, a5, a6, v19 * (float)v18);
    *(_DWORD *)(a1 + 4 * v18++) = v20;
  }
  while (a7 != v18);
LABEL_7:
  if (!a8) {
    return;
  }
  if (a8 < 8 || (unint64_t)(a9 - a1 + 4) < 0x20)
  {
    unint64_t v21 = 0;
LABEL_11:
    uint64_t v22 = 4 * v21;
    long long v23 = (_DWORD *)(4 * v21 + a9 + 4);
    unint64_t v24 = a8 - v21;
    uint64_t v25 = (int *)(a1 + v22);
    do
    {
      int v26 = *v25++;
      *v23++ = v26;
      --v24;
    }
    while (v24);
    return;
  }
  unint64_t v21 = a8 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (_OWORD *)(a9 + 20);
  uint64_t v28 = (long long *)(a1 + 16);
  unint64_t v29 = a8 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    long long v30 = *v28;
    *(v27 - 1) = *(v28 - 1);
    *uint64_t v27 = v30;
    v27 += 2;
    v28 += 2;
    v29 -= 8;
  }
  while (v29);
  if (v21 != a8) {
    goto LABEL_11;
  }
}

void sub_1B631A2E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, float a5)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = v5 - 1;
  if (v5 == 1 || !v5) {
    return;
  }
  float v8 = fminf(fmaxf(a5, 0.0), 1.0);
  if (a5 == 0.0)
  {
    uint64_t v9 = 1;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v10 = *(void *)(a2 + 16);
    do
    {
      unint64_t v11 = v10 >> 1;
      unint64_t v12 = v9 + (v10 >> 1);
      v10 += ~(v10 >> 1);
      if (v8 >= *(float *)(a2 + 32 + 4 * v12)) {
        uint64_t v9 = v12 + 1;
      }
      else {
        unint64_t v10 = v11;
      }
    }
    while ((uint64_t)v10 > 0);
    if (v9 >= v5) {
      return;
    }
  }
  uint64_t v13 = v9 - 1;
  if (a3) {
    a4 = *(unsigned char *)(a3 + 24 * v13 + 49);
  }
  LOBYTE(v5) = v5 != 2;
  float v14 = *(float *)(a2 + 32 + 4 * v13);
  if (a4 != 1) {
    LOBYTE(v5) = a4;
  }
  float v15 = *(float *)(a2 + 32 + 4 * v9) - v14;
  float v16 = 0.0;
  if (v15 == 0.0)
  {
    LODWORD(v5) = v5;
    if (!(_BYTE)v5) {
      return;
    }
  }
  else
  {
    float v16 = (float)(v8 - v14) / v15;
    LODWORD(v5) = v5;
    if (!(_BYTE)v5) {
      return;
    }
  }
  if (v5 == 1)
  {
    if (v13 <= 0) {
      uint64_t v17 = 0;
    }
    else {
      uint64_t v17 = v9 - 2;
    }
    uint64_t v27 = v9;
    if (v9 < v6) {
      uint64_t v27 = v9 + 1;
    }
    float v28 = *(float *)(a1 + 32 + 4 * v17);
    float v29 = *(float *)(a1 + 32 + 4 * v13);
    float v30 = *(float *)(a1 + 32 + 4 * v9);
    float v31 = *(float *)(a1 + 32 + 4 * v27);
    sub_1B631A524(v28, v29, v30, v31, v16);
  }
  else
  {
    v18.i32[0] = 0;
    float32x2_t v19 = 0;
    float32x2_t v20 = 0;
    if (a3)
    {
      float32x2_t v20 = *(float32x2_t *)(a3 + 32 + 24 * v13 + 8);
      float32x2_t v19 = *(float32x2_t *)(a3 + 32 + 24 * v9);
    }
    v18.i32[1] = *(_DWORD *)(a1 + 32 + 4 * v13);
    __asm { FMOV            V4.2S, #1.0 }
    _D4.i32[1] = *(_DWORD *)(a1 + 32 + 4 * v9);
    sub_1B6CE1A28(v16, 0.0, vadd_f32(v20, v18).f32[0], vadd_f32(v19, _D4).f32[0], _D4.f32[0]);
    __asm { FMOV            V2.2S, #3.0 }
  }
}

float sub_1B631A524(float a1, float a2, float a3, float a4, float a5)
{
  return (float)((float)((float)((float)(a3 * 0.5) - (float)(a1 * 0.5)) * a5)
               + (float)((float)((float)(a5 * a5)
                               * (float)((float)((float)((float)(a3 + a3) + a1) + (float)(a2 * -2.5)) - (float)(a4 * 0.5)))
                       + (float)((float)((float)(a5 * a5) * a5)
                               * (float)((float)((float)(a2 * 1.5) + (float)((float)(a4 * 0.5) - (float)(a3 * 1.5)))
                                       - (float)(a1 * 0.5)))))
       + a2;
}

uint64_t sub_1B631A58C()
{
  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v0 = sub_1B62FFCAC(4);
  *(void *)(v0 + 88) = sub_1B6311D74;
  *(void *)(v0 + 96) = 0;
  swift_release();
  return v0;
}

void sub_1B631A5EC()
{
}

void sub_1B631A628(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for ParticleDefaultRenderSystem();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1B631A674()
{
  return *(unsigned __int8 *)(v0 + 45);
}

uint64_t sub_1B631A67C()
{
  return *(unsigned __int8 *)(v0 + 44);
}

uint64_t sub_1B631A684()
{
  return *(unsigned __int8 *)(v0 + 69);
}

uint64_t sub_1B631A68C()
{
  return *(unsigned __int8 *)(v0 + 68);
}

float sub_1B631A694()
{
  return *(float *)(v0 + 72);
}

uint64_t sub_1B631A69C()
{
  return *(unsigned int *)(v0 + 64);
}

uint64_t sub_1B631A6A4()
{
  return *(void *)(v0 + 16);
}

uint64_t *sub_1B631A6B0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  sub_1B62F46E8();
  float v4 = v3;
  long long v5 = *(_OWORD *)(v1 + 32);
  v79[0] = *(_OWORD *)(v1 + 16);
  v79[1] = v5;
  uint64_t v80 = *(void *)(v1 + 48);
  sub_1B62C9DA8(v2, (uint64_t)v79, 0x200000000, v68);
  sub_1B6309B40((uint64_t)v68, (uint64_t)v69);
  float v67 = (unsigned __int16 *)v69[0];
  if (!v69[0]) {
    return (uint64_t *)swift_release();
  }
  uint64_t v57 = v73;
  if (v73 > 0)
  {
    uint64_t v56 = v70;
    if (v70)
    {
      uint64_t v6 = 0;
      uint64_t v55 = v69[5];
      uint64_t v7 = v72;
      uint64_t v8 = v72[4];
      uint64_t v54 = v71;
      int v9 = *(unsigned __int8 *)(v71 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v52 = v72 + 8;
      uint64_t v66 = v69[0] + 41;
      int v53 = v9;
      uint64_t v51 = v8;
      do
      {
        unint64_t v10 = (unsigned int *)(v55 + 48 * v6);
        uint64_t v11 = *v10;
        uint64_t v12 = v10[1];
        uint64_t v13 = v10[2];
        uint64_t v62 = v6;
        uint64_t v63 = *((void *)v10 + 2);
        uint64_t v14 = *((void *)v10 + 3);
        uint64_t v15 = *((void *)v10 + 4);
        uint64_t v16 = *((void *)v10 + 5);
        if (v9)
        {
          uint64_t v17 = *(os_unfair_lock_s **)(v16 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v17);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v8);
        uint64_t v60 = v7[7];
        uint64_t v61 = v7[6];
        uint64_t v58 = v7[9];
        uint64_t v59 = v7[8];
        uint64_t v64 = v7[10];
        uint64_t v18 = v7[4];
        uint64_t v19 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v7[6] = ecs_stack_allocator_allocate(v18, 48 * v19, 8);
        v7[7] = v19;
        v52[1] = 0;
        v52[2] = 0;
        *uint64_t v52 = 0;
        swift_release();
        v74[0] = v54;
        v74[1] = v16;
        uint64_t v65 = v16;
        v74[2] = v7;
        v74[3] = v13;
        int v74[4] = (v12 - v11 + v13);
        v74[5] = v57;
        v74[6] = v11;
        v74[7] = v12;
        v74[8] = 0;
        v74[9] = 0;
        char v75 = 1;
        uint64_t v76 = v63;
        uint64_t v77 = v14;
        uint64_t v78 = v15;
        sub_1B6B12CCC(v74, v4);
        unint64_t v20 = v7[6];
        uint64_t v21 = v7[8];
        if (!v21)
        {
          uint64_t v47 = v7[7];
          long long v48 = (void *)v7[4];
          uint64_t v49 = v62;
          uint64_t v8 = v51;
          goto LABEL_46;
        }
        for (uint64_t i = 0; i != v21; ++i)
        {
          unint64_t v24 = (uint64_t *)(v20 + 48 * i);
          uint64_t v25 = *v24;
          int v26 = (void (*)(uint64_t))v24[4];
          uint64_t v27 = v7[9];
          if (v27) {
            BOOL v28 = v25 == v27;
          }
          else {
            BOOL v28 = 0;
          }
          if (v28 || !v67[11]) {
            goto LABEL_11;
          }
          unint64_t v29 = v67[9];
          float v30 = (void *)(v66 + v67[8]);
          uint64_t v31 = v24[2];
          int v32 = v30;
          unint64_t v33 = v29 >> 4;
          uint64_t v34 = v66;
          if (v29 >= 0x10)
          {
            while (*v32 != v25)
            {
              ++v34;
              v32 += 2;
              if (!--v33) {
                goto LABEL_26;
              }
            }
            unsigned int v35 = *(unsigned __int8 *)(v34 + v67[10]);
            BOOL v36 = v35 > 5;
            int v37 = (1 << v35) & 0x23;
            if (v36 || v37 == 0)
            {
LABEL_11:
              uint64_t v23 = swift_retain();
              v26(v23);
              swift_release();
              continue;
            }
          }
LABEL_26:
          if (swift_conformsToProtocol2()) {
            uint64_t v39 = v31;
          }
          else {
            uint64_t v39 = 0;
          }
          if (v39)
          {
            if (v29 < 0x10) {
              goto LABEL_11;
            }
            float v40 = v30;
            unint64_t v41 = v29 >> 4;
            uint64_t v42 = v66;
            while (*v40 != v39)
            {
              ++v42;
              v40 += 2;
              if (!--v41) {
                goto LABEL_39;
              }
            }
            unsigned int v43 = *(unsigned __int8 *)(v42 + v67[10]);
            BOOL v36 = v43 > 5;
            int v44 = (1 << v43) & 0x23;
            if (v36 || v44 == 0) {
              goto LABEL_11;
            }
LABEL_39:
            uint64_t v46 = 16 * (v29 >> 4);
            while (*v30 != v39)
            {
              v30 += 2;
              v46 -= 16;
              if (!v46) {
                goto LABEL_11;
              }
            }
          }
        }
        uint64_t v47 = v7[7];
        unint64_t v20 = v7[6];
        long long v48 = (void *)v7[4];
        uint64_t v49 = v62;
        uint64_t v8 = v51;
        if ((uint64_t)v7[8] >= 1) {
          swift_arrayDestroy();
        }
LABEL_46:
        ecs_stack_allocator_deallocate(v48, v20, 48 * v47);
        v7[6] = v61;
        v7[7] = v60;
        v7[8] = v59;
        v7[9] = v58;
        v7[10] = v64;
        sub_1B634507C((char *)v65);
        ecs_stack_allocator_pop_snapshot(v8);
        int v9 = v53;
        if (v53)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v65 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v65 + 376));
        }
        swift_release();
        uint64_t v6 = v49 + 1;
      }
      while (v6 != v56);
    }
  }
  swift_release();
  return sub_1B632F170(v68);
}

uint64_t *sub_1B631AB50(uint64_t a1)
{
  uint64_t v286 = *MEMORY[0x1E4F143B8];
  long long v3 = *(_OWORD *)(v1 + 16);
  long long v4 = *(_OWORD *)(v1 + 32);
  uint64_t v252 = *(void *)(v1 + 48);
  v251[0] = v3;
  v251[1] = v4;
  sub_1B62C9DA8(a1, (uint64_t)v251, 0x200000000, v253);
  double result = (uint64_t *)sub_1B62E9D68((uint64_t)v253, (uint64_t)v278, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v278[0])
  {
    if (v284 >= 1)
    {
      uint64_t v182 = v281;
      if (v281)
      {
        uint64_t v6 = v283;
        uint64_t v7 = v283[4];
        int v8 = *(unsigned __int8 *)(v282 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v221[0] = v278[0];
        v221[1] = v278[1];
        uint64_t v177 = v280;
        uint64_t v178 = (uint64_t)(v283 + 6);
        uint64_t v222 = v279;
        uint64_t v185 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        int v176 = v283 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v9 = 0;
        uint64_t v180 = v7;
        int v181 = v6;
        int v179 = v8;
        uint64_t v186 = a1;
        while (1)
        {
          uint64_t v184 = v9;
          unint64_t v10 = (unsigned int *)(v177 + 48 * v9);
          uint64_t v11 = *v10;
          uint64_t v12 = v10[1];
          uint64_t v13 = *((void *)v10 + 3);
          uint64_t v187 = (uint64_t *)*((void *)v10 + 2);
          uint64_t v15 = *((void *)v10 + 4);
          uint64_t v14 = *((void *)v10 + 5);
          if (v8)
          {
            uint64_t v16 = *(os_unfair_lock_s **)(v14 + 376);
            swift_retain();
            os_unfair_lock_lock(v16);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v7);
          sub_1B62E9D68(v178, (uint64_t)v285, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v17 = v6[4];
          uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v14 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v6[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
          v6[7] = v18;
          v176[1] = 0;
          v176[2] = 0;
          *int v176 = 0;
          swift_release();
          uint64_t v19 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v187, v13, v15, (uint64_t)v6);
          uint64_t v189 = sub_1B62C9024((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, v187, v13, v15, (uint64_t)v6);
          uint64_t v188 = sub_1B62C9024((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, v187, v13, v15, (uint64_t)v6);
          if (!v187) {
            break;
          }
          uint64_t v20 = v186;
          if (v15)
          {
            uint64_t v21 = 0;
            uint64_t v22 = v19 + 43;
            uint64_t v23 = v185;
            while (1)
            {
              if (*(unsigned char *)(v22 + 88 * v21) != 1) {
                goto LABEL_14;
              }
              uint64_t v194 = v187[v21];
              if (qword_1EB97E450 != -1) {
                swift_once();
              }
              v235[0] = xmmword_1EB997968;
              v235[1] = unk_1EB997978;
              uint64_t v236 = qword_1EB997988;
              sub_1B62C9DA8(v20, (uint64_t)v235, 0x200000000, v254);
              sub_1B62E9D68((uint64_t)v254, (uint64_t)v267, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
              if (v267[0])
              {
                uint64_t v25 = v268;
                if (v268)
                {
                  int v26 = (unsigned int *)v267[5];
                  while (1)
                  {
                    if (!v26[2])
                    {
                      uint64_t v27 = *v26;
                      if (v26[1] != v27) {
                        break;
                      }
                    }
                    v26 += 12;
                    if (!--v25) {
                      goto LABEL_27;
                    }
                  }
                  BOOL v28 = (uint64_t *)*((void *)v26 + 2);
                  if (v28) {
                    uint64_t v27 = *v28;
                  }
                  int v29 = *(_DWORD *)(*((void *)v26 + 5) + 188);
                }
                else
                {
LABEL_27:
                  uint64_t v27 = -1;
                  int v29 = -1;
                }
                uint64_t v30 = *(void *)(*(void *)(v269 + 136) + 8 * v29 + 32);
                char v31 = *(unsigned char *)(v30 + 184);
                uint64_t v32 = swift_retain();
                if (v31) {
                  goto LABEL_160;
                }
                int v33 = *(_DWORD *)(*(void *)(v30 + 168) + 4 * v27);
                LODWORD(v27) = *(_DWORD *)(*(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                         + 12 * v33
                                         + 8);
                swift_release();
                sub_1B632F170(v254);
              }
              else
              {
                unint64_t v34 = sub_1B637BBB4();
                if (v35) {
                  goto LABEL_14;
                }
                uint64_t v27 = HIDWORD(v34);
                int v33 = v34;
              }
              BOOL v36 = v33 == -1 && v27 == 0;
              char v37 = v36;
              v38.columns[3] = (simd_float4)xmmword_1B6E4F370;
              v38.columns[2] = (simd_float4)xmmword_1B6E4F2E0;
              v38.columns[1] = (simd_float4)xmmword_1B6E4F320;
              v38.columns[0] = (simd_float4)xmmword_1B6E4F300;
              float32x4_t v193 = (float32x4_t)xmmword_1B6E4F2E0;
              float32x4_t v190 = (float32x4_t)xmmword_1B6E4F300;
              float32x4_t v191 = (float32x4_t)xmmword_1B6E4F320;
              if (!v36
                && (v33 & 0x80000000) == 0
                && v23[1] > v33
                && (v27 == -1 || *(_DWORD *)(*v23 + 12 * v33 + 8) == v27))
              {
                sub_1B633C4F4(*(void *)(*(void *)(v20 + 136) + 8 * *(int *)(*v23 + 12 * v33) + 32), *(_DWORD *)(*v23 + 12 * v33), *(_WORD *)(*v23 + 12 * v33 + 4), 64, v20, (uint64_t)v255);
                sub_1B62E9D68((uint64_t)v255, (uint64_t)&v265, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
                if (v266)
                {
                  v38.columns[0] = (simd_float4)xmmword_1B6E4F300;
                  v38.columns[1] = (simd_float4)xmmword_1B6E4F320;
                  v38.columns[2] = (simd_float4)xmmword_1B6E4F2E0;
                  v38.columns[3] = (simd_float4)xmmword_1B6E4F370;
                }
                else
                {
                  simd_float4x4 v38 = v265;
                }
              }
              simd_float4x4 v287 = __invert_f4(v38);
              if (v37)
              {
                float32x4_t v39 = (float32x4_t)xmmword_1B6E4F370;
              }
              else
              {
                float32x4_t v39 = (float32x4_t)xmmword_1B6E4F370;
                if ((v33 & 0x80000000) == 0
                  && v23[1] > v33
                  && (v27 == -1 || *(_DWORD *)(*v23 + 12 * v33 + 8) == v27))
                {
                  simd_float4x4 v183 = v287;
                  sub_1B633FE90(*(void *)(*(void *)(v20 + 136) + 8 * *(int *)(*v23 + 12 * v33) + 32), *(_DWORD *)(*v23 + 12 * v33), *(_WORD *)(*v23 + 12 * v33 + 4), 64, v20, (uint64_t)v256);
                  sub_1B62E9D68((uint64_t)v256, (uint64_t)v263, &qword_1EB97ECF0, (uint64_t)&type metadata for ProjectionMatrix);
                  if (v264)
                  {
                    float32x4_t v39 = (float32x4_t)xmmword_1B6E4F370;
                  }
                  else
                  {
                    float32x4_t v190 = v263[0];
                    float32x4_t v191 = v263[1];
                    float32x4_t v193 = v263[2];
                    float32x4_t v39 = v263[3];
                  }
                  simd_float4x4 v287 = v183;
                }
              }
              v40.i32[3] = v193.i32[3];
              int32x4_t v41 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v190, v287.columns[0].f32[0]), v191, *(float32x2_t *)v287.columns[0].f32, 1), v193, (float32x4_t)v287.columns[0], 2), v39, (float32x4_t)v287.columns[0], 3);
              int32x4_t v42 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v190, v287.columns[1].f32[0]), v191, *(float32x2_t *)v287.columns[1].f32, 1), v193, (float32x4_t)v287.columns[1], 2), v39, (float32x4_t)v287.columns[1], 3);
              float32x4_t v43 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v190, v287.columns[2].f32[0]), v191, *(float32x2_t *)v287.columns[2].f32, 1), v193, (float32x4_t)v287.columns[2], 2), v39, (float32x4_t)v287.columns[2], 3);
              float32x4_t v44 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v190, v287.columns[3].f32[0]), v191, *(float32x2_t *)v287.columns[3].f32, 1), v193, (float32x4_t)v287.columns[3], 2), v39, (float32x4_t)v287.columns[3], 3);
              v40.f32[0] = *(float *)&v41.i32[3] - *(float *)v41.i32;
              v40.f32[1] = *(float *)&v42.i32[3] - *(float *)v42.i32;
              v40.f32[2] = v43.f32[3] - v43.f32[0];
              int32x4_t v45 = (int32x4_t)vmulq_f32(v40, v40);
              v40.f32[3] = v44.f32[3] - v44.f32[0];
              uint64_t v46 = (float32x4_t *)(v188 + 32 * v21);
              unsigned __int32 v47 = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v45, 2), vadd_f32(*(float32x2_t *)v45.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v45.i8, 1))).u32[0];
              *(float32x2_t *)v45.i8 = vrsqrte_f32((float32x2_t)v47);
              *(float32x2_t *)v45.i8 = vmul_f32(*(float32x2_t *)v45.i8, vrsqrts_f32((float32x2_t)v47, vmul_f32(*(float32x2_t *)v45.i8, *(float32x2_t *)v45.i8)));
              float32x4_t v48 = vmulq_n_f32(v40, vmul_f32(*(float32x2_t *)v45.i8, vrsqrts_f32((float32x2_t)v47, vmul_f32(*(float32x2_t *)v45.i8, *(float32x2_t *)v45.i8))).f32[0]);
              float32x4_t v50 = *v46;
              float32x4_t v49 = v46[1];
              float32x4_t v51 = vmulq_f32(v48, *v46);
              float32x4_t v52 = vmulq_f32(v49, vabsq_f32(v48));
              if (vaddv_f32(vadd_f32(*(float32x2_t *)v51.f32, (float32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v51, (int8x16_t)v51, 8uLL))) <= (float)-vaddv_f32(vadd_f32(*(float32x2_t *)v52.f32, (float32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v52, (int8x16_t)v52, 8uLL))))break; {
              v51.f32[0] = *(float *)&v41.i32[3] + *(float *)&v41.i32[1];
              }
              v51.f32[1] = *(float *)&v42.i32[3] + *(float *)&v42.i32[1];
              v51.f32[2] = v43.f32[3] + v43.f32[1];
              int32x4_t v53 = (int32x4_t)vmulq_f32(v51, v51);
              v51.f32[3] = v44.f32[3] + v44.f32[1];
              v52.f32[0] = *(float *)&v41.i32[3] - *(float *)&v41.i32[1];
              v52.f32[1] = *(float *)&v42.i32[3] - *(float *)&v42.i32[1];
              v52.f32[2] = v43.f32[3] - v43.f32[1];
              int32x4_t v54 = (int32x4_t)vmulq_f32(v52, v52);
              v52.f32[3] = v44.f32[3] - v44.f32[1];
              float32x4_t v55 = (float32x4_t)vzip2q_s32(v41, v42);
              v55.i32[2] = v43.i32[2];
              float32x4_t v56 = v55;
              v56.i32[3] = v44.i32[2];
              int32x4_t v57 = (int32x4_t)vmulq_f32(v55, v55);
              v53.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v53, 2), vadd_f32(*(float32x2_t *)v53.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v53.i8, 1))).u32[0];
              float32x2_t v58 = vrsqrte_f32((float32x2_t)v53.u32[0]);
              float32x2_t v59 = vmul_f32(v58, vrsqrts_f32((float32x2_t)v53.u32[0], vmul_f32(v58, v58)));
              v53.i32[0] = vmul_f32(v59, vrsqrts_f32((float32x2_t)v53.u32[0], vmul_f32(v59, v59))).u32[0];
              v59.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v54, 2), vadd_f32(*(float32x2_t *)v54.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v54.i8, 1))).u32[0];
              float32x4_t v60 = vmulq_n_f32(v51, *(float *)v53.i32);
              float32x2_t v61 = vrsqrte_f32((float32x2_t)v59.u32[0]);
              float32x2_t v62 = vmul_f32(v61, vrsqrts_f32((float32x2_t)v59.u32[0], vmul_f32(v61, v61)));
              float32x4_t v63 = (float32x4_t)vdupq_laneq_s32(v57, 2);
              float32x4_t v64 = vmulq_n_f32(v52, vmul_f32(v62, vrsqrts_f32((float32x2_t)v59.u32[0], vmul_f32(v62, v62))).f32[0]);
              unsigned __int32 v65 = vadd_f32(*(float32x2_t *)v63.f32, vadd_f32(*(float32x2_t *)v57.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v57.i8, 1))).u32[0];
              *(float32x2_t *)v63.f32 = vrsqrte_f32((float32x2_t)v65);
              *(float32x2_t *)v63.f32 = vmul_f32(*(float32x2_t *)v63.f32, vrsqrts_f32((float32x2_t)v65, vmul_f32(*(float32x2_t *)v63.f32, *(float32x2_t *)v63.f32)));
              float32x4_t v66 = vmulq_n_f32(v56, vmul_f32(*(float32x2_t *)v63.f32, vrsqrts_f32((float32x2_t)v65, vmul_f32(*(float32x2_t *)v63.f32, *(float32x2_t *)v63.f32))).f32[0]);
              v63.f32[0] = *(float *)&v41.i32[3] + *(float *)v41.i32;
              v63.f32[1] = *(float *)&v42.i32[3] + *(float *)v42.i32;
              v63.f32[2] = v43.f32[3] + v43.f32[0];
              int32x4_t v67 = (int32x4_t)vmulq_f32(v63, v63);
              v63.f32[3] = v44.f32[3] + v44.f32[0];
              v57.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v67, 2), vadd_f32(*(float32x2_t *)v67.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v67.i8, 1))).u32[0];
              *(float32x2_t *)v67.i8 = vrsqrte_f32((float32x2_t)v57.u32[0]);
              *(float32x2_t *)v67.i8 = vmul_f32(*(float32x2_t *)v67.i8, vrsqrts_f32((float32x2_t)v57.u32[0], vmul_f32(*(float32x2_t *)v67.i8, *(float32x2_t *)v67.i8)));
              float32x4_t v68 = vmulq_n_f32(v63, vmul_f32(*(float32x2_t *)v67.i8, vrsqrts_f32((float32x2_t)v57.u32[0], vmul_f32(*(float32x2_t *)v67.i8, *(float32x2_t *)v67.i8))).f32[0]);
              int8x16_t v69 = (int8x16_t)vmulq_f32(v50, v68);
              int8x16_t v70 = (int8x16_t)vmulq_f32(v49, vabsq_f32(v68));
              BOOL v75 = vaddv_f32(vadd_f32(*(float32x2_t *)v69.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v69, v69, 8uLL))) <= (float)-vaddv_f32(vadd_f32(*(float32x2_t *)v70.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v70, v70, 8uLL)));
              int8x16_t v71 = (int8x16_t)vmulq_f32(v60, v50);
              float v72 = vaddv_f32(vadd_f32(*(float32x2_t *)v71.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v71, v71, 8uLL)));
              int8x16_t v73 = (int8x16_t)vmulq_f32(v49, vabsq_f32(v60));
              float v74 = -vaddv_f32(vadd_f32(*(float32x2_t *)v73.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v73, v73, 8uLL)));
              BOOL v75 = v75 || v72 <= v74;
              int8x16_t v76 = (int8x16_t)vmulq_f32(v64, v50);
              float v77 = vaddv_f32(vadd_f32(*(float32x2_t *)v76.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL)));
              int8x16_t v78 = (int8x16_t)vmulq_f32(v49, vabsq_f32(v64));
              float v79 = -vaddv_f32(vadd_f32(*(float32x2_t *)v78.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL)));
              BOOL v80 = v75 || v77 <= v79;
              int8x16_t v81 = (int8x16_t)vmulq_f32(v66, v50);
              float v82 = vaddv_f32(vadd_f32(*(float32x2_t *)v81.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)));
              int8x16_t v83 = (int8x16_t)vmulq_f32(v49, vabsq_f32(v66));
              float v84 = -vaddv_f32(vadd_f32(*(float32x2_t *)v83.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL)));
              if (v80 || v82 <= v84) {
                break;
              }
              v287.columns[0].f32[0] = *(float *)&v41.i32[3] - *(float *)&v41.i32[2];
              v287.columns[0].f32[1] = *(float *)&v42.i32[3] - *(float *)&v42.i32[2];
              v287.columns[0].f32[2] = v43.f32[3] - v43.f32[2];
              v287.columns[2] = (simd_float4)vmulq_f32((float32x4_t)v287.columns[0], (float32x4_t)v287.columns[0]);
              v287.columns[0].f32[3] = v44.f32[3] - v44.f32[2];
              v287.columns[1].i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)v287.columns[2], 2), vadd_f32(*(float32x2_t *)v287.columns[2].f32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v287.columns[2].f32, 1))).u32[0];
              *(float32x2_t *)v287.columns[2].f32 = vrsqrte_f32((float32x2_t)v287.columns[1].u32[0]);
              *(float32x2_t *)v287.columns[2].f32 = vmul_f32(*(float32x2_t *)v287.columns[2].f32, vrsqrts_f32((float32x2_t)v287.columns[1].u32[0], vmul_f32(*(float32x2_t *)v287.columns[2].f32, *(float32x2_t *)v287.columns[2].f32)));
              float32x4_t v94 = vmulq_n_f32((float32x4_t)v287.columns[0], vmul_f32(*(float32x2_t *)v287.columns[2].f32, vrsqrts_f32((float32x2_t)v287.columns[1].u32[0], vmul_f32(*(float32x2_t *)v287.columns[2].f32, *(float32x2_t *)v287.columns[2].f32))).f32[0]);
              int8x16_t v95 = (int8x16_t)vmulq_f32(v50, v94);
              int8x16_t v96 = (int8x16_t)vmulq_f32(v49, vabsq_f32(v94));
              BOOL v97 = vaddv_f32(vadd_f32(*(float32x2_t *)v95.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v95, v95, 8uLL))) > (float)-vaddv_f32(vadd_f32(*(float32x2_t *)v96.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v96, v96, 8uLL)));
              uint64_t v86 = v189 + 656 * v21;
              if (v97 != *(unsigned char *)(v86 + 129)) {
                goto LABEL_56;
              }
LABEL_13:
              uint64_t v23 = v185;
LABEL_14:
              if (++v21 == v15) {
                goto LABEL_84;
              }
            }
            uint64_t v86 = v189 + 656 * v21;
            if ((*(unsigned char *)(v86 + 129) & 1) == 0) {
              goto LABEL_14;
            }
            BOOL v97 = 0;
LABEL_56:
            uint64_t v87 = (unsigned char *)(v86 + 129);
            if (qword_1EB97DC28 != -1) {
              swift_once();
            }
            uint64_t v88 = qword_1EB997A18;
            sub_1B62F6F7C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
            uint64_t v89 = swift_allocObject();
            *(_OWORD *)(v89 + 16) = xmmword_1B6E77050;
            *(void *)(v89 + 32) = &type metadata for Particle;
            *(void *)(v89 + 40) = &off_1F0FA6CF0;
            uint64_t v229 = v88;
            int v230 = 0;
            char v231 = 2;
            uint64_t v232 = 0;
            char v233 = 2;
            uint64_t v234 = 0;
            swift_retain();
            sub_1B62F776C(v89, 1, (uint64_t)v195);
            swift_setDeallocating();
            swift_deallocClassInstance();
            swift_release();
            sub_1B62F6E08();
            uint64_t v90 = swift_allocObject();
            *(_OWORD *)(v90 + 16) = xmmword_1B6E77050;
            swift_retain();
            uint64_t v91 = sub_1B62DE2C8(v194);
            swift_release();
            *(void *)(v90 + 56) = &type metadata for EmitterReference;
            *(void *)(v90 + 64) = &off_1F0F6BD40;
            *(void *)(v90 + 32) = v91;
            sub_1B62F7044(v90, (uint64_t)&v196);
            swift_setDeallocating();
            sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
            swift_arrayDestroy();
            swift_deallocClassInstance();
            sub_1B62CA064((uint64_t)v195);
            uint64_t v223 = v196;
            int v224 = v197;
            char v225 = v198;
            uint64_t v226 = v199 | 1;
            char v227 = v200;
            uint64_t v228 = v201;
            uint64_t v20 = v186;
            sub_1B62C9DA8(v186, (uint64_t)&v223, 0x200000000, v257);
            sub_1B62E9D68((uint64_t)v257, (uint64_t)v262, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
            if (*(void *)&v262[0])
            {
              long long v211 = v262[2];
              long long v212 = v262[3];
              long long v213 = v262[4];
              long long v214 = v262[5];
              long long v209 = v262[0];
              long long v210 = v262[1];
              sub_1B68458CC(v97);
              sub_1B632F170(v257);
            }
            *uint64_t v87 = v97;
            swift_retain();
            swift_retain();
            uint64_t v24 = sub_1B62DE2C8(v194);
            swift_release();
            sub_1B6C5D1CC(v24, v97);
            sub_1B62CA064((uint64_t)&v196);
            swift_release();
            goto LABEL_13;
          }
LABEL_84:
          uint64_t v6 = v181;
          sub_1B6345178(v181, (unsigned __int16 **)v221, (uint64_t)v285);
          sub_1B634507C((char *)v14);
          uint64_t v7 = v180;
          ecs_stack_allocator_pop_snapshot(v180);
          int v8 = v179;
          if (v179)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
          }
          swift_release();
          uint64_t v9 = v184 + 1;
          if (v184 + 1 == v182)
          {
            sub_1B632F170(v253);
            return sub_1B632F170(v253);
          }
        }
        uint64_t v98 = v186;
        if (v11 == v12) {
          goto LABEL_84;
        }
        uint64_t v99 = v19 + 43;
        float v100 = v185;
        while (1)
        {
          if (*(unsigned char *)(v99 + 88 * v11) != 1) {
            goto LABEL_88;
          }
          if (qword_1EB97E450 != -1) {
            swift_once();
          }
          v249[0] = xmmword_1EB997968;
          v249[1] = unk_1EB997978;
          uint64_t v250 = qword_1EB997988;
          sub_1B62C9DA8(v98, (uint64_t)v249, 0x200000000, v258);
          sub_1B62E9D68((uint64_t)v258, (uint64_t)v275, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
          if (v275[0])
          {
            uint64_t v102 = v276;
            if (v276)
            {
              uint64_t v103 = (unsigned int *)v275[5];
              while (1)
              {
                if (!v103[2])
                {
                  uint64_t v104 = *v103;
                  if (v103[1] != v104) {
                    break;
                  }
                }
                v103 += 12;
                if (!--v102) {
                  goto LABEL_101;
                }
              }
              unint64_t v105 = (uint64_t *)*((void *)v103 + 2);
              if (v105) {
                uint64_t v104 = *v105;
              }
              int v106 = *(_DWORD *)(*((void *)v103 + 5) + 188);
            }
            else
            {
LABEL_101:
              uint64_t v104 = -1;
              int v106 = -1;
            }
            uint64_t v107 = *(void *)(*(void *)(v277 + 136) + 8 * v106 + 32);
            char v108 = *(unsigned char *)(v107 + 184);
            uint64_t v109 = swift_retain();
            if (v108)
            {
LABEL_160:
              double result = (uint64_t *)sub_1B6E32BE8();
              __break(1u);
              return result;
            }
            int v110 = *(_DWORD *)(*(void *)(v107 + 168) + 4 * v104);
            LODWORD(v104) = *(_DWORD *)(*(void *)(v109 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                      + 12 * v110
                                      + 8);
            swift_release();
            sub_1B632F170(v258);
          }
          else
          {
            unint64_t v111 = sub_1B637BBB4();
            if (v112) {
              goto LABEL_88;
            }
            uint64_t v104 = HIDWORD(v111);
            int v110 = v111;
          }
          BOOL v113 = v110 == -1 && v104 == 0;
          char v114 = v113;
          if (v113
            || v110 < 0
            || v100[1] <= v110
            || (v104 != -1 ? (BOOL v120 = *(_DWORD *)(*v100 + 12 * v110 + 8) == v104) : (BOOL v120 = 1),
                !v120
             || (sub_1B633C4F4(*(void *)(*(void *)(v186 + 136) + 8 * *(int *)(*v100 + 12 * v110) + 32), *(_DWORD *)(*v100 + 12 * v110), *(_WORD *)(*v100 + 12 * v110 + 4), 64, v186, (uint64_t)v259), sub_1B62E9D68((uint64_t)v259, (uint64_t)&v273, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform), (v274 & 1) != 0)))
          {
            v288.columns[0] = (simd_float4)xmmword_1B6E4F300;
            v288.columns[1] = (simd_float4)xmmword_1B6E4F320;
            v288.columns[2] = (simd_float4)xmmword_1B6E4F2E0;
            v288.columns[3] = (simd_float4)xmmword_1B6E4F370;
            simd_float4x4 v289 = __invert_f4(v288);
            if (v114) {
              goto LABEL_133;
            }
          }
          else
          {
            simd_float4x4 v289 = __invert_f4(v273);
            if (v114)
            {
LABEL_133:
              float32x4_t v117 = (float32x4_t)xmmword_1B6E4F300;
              float32x4_t v116 = (float32x4_t)xmmword_1B6E4F320;
              float32x4_t v118 = (float32x4_t)xmmword_1B6E4F2E0;
              float32x4_t v119 = (float32x4_t)xmmword_1B6E4F370;
              uint64_t v98 = v186;
              goto LABEL_137;
            }
          }
          if (v110 < 0) {
            goto LABEL_133;
          }
          uint64_t v98 = v186;
          if (v100[1] > v110
            && (v104 != -1 ? (BOOL v115 = *(_DWORD *)(*v100 + 12 * v110 + 8) == v104) : (BOOL v115 = 1), v115))
          {
            simd_float4x4 v192 = v289;
            sub_1B633FE90(*(void *)(*(void *)(v186 + 136) + 8 * *(int *)(*v100 + 12 * v110) + 32), *(_DWORD *)(*v100 + 12 * v110), *(_WORD *)(*v100 + 12 * v110 + 4), 64, v186, (uint64_t)v260);
            sub_1B62E9D68((uint64_t)v260, (uint64_t)v271, &qword_1EB97ECF0, (uint64_t)&type metadata for ProjectionMatrix);
            if (v272)
            {
              float32x4_t v117 = (float32x4_t)xmmword_1B6E4F300;
              float32x4_t v116 = (float32x4_t)xmmword_1B6E4F320;
              float32x4_t v118 = (float32x4_t)xmmword_1B6E4F2E0;
              float32x4_t v119 = (float32x4_t)xmmword_1B6E4F370;
            }
            else
            {
              float32x4_t v117 = v271[0];
              float32x4_t v116 = v271[1];
              float32x4_t v118 = v271[2];
              float32x4_t v119 = v271[3];
            }
            simd_float4x4 v289 = v192;
          }
          else
          {
            float32x4_t v117 = (float32x4_t)xmmword_1B6E4F300;
            float32x4_t v116 = (float32x4_t)xmmword_1B6E4F320;
            float32x4_t v118 = (float32x4_t)xmmword_1B6E4F2E0;
            float32x4_t v119 = (float32x4_t)xmmword_1B6E4F370;
          }
LABEL_137:
          int32x4_t v121 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v117, v289.columns[0].f32[0]), v116, *(float32x2_t *)v289.columns[0].f32, 1), v118, (float32x4_t)v289.columns[0], 2), v119, (float32x4_t)v289.columns[0], 3);
          int32x4_t v122 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v117, v289.columns[1].f32[0]), v116, *(float32x2_t *)v289.columns[1].f32, 1), v118, (float32x4_t)v289.columns[1], 2), v119, (float32x4_t)v289.columns[1], 3);
          float32x4_t v123 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v117, v289.columns[2].f32[0]), v116, *(float32x2_t *)v289.columns[2].f32, 1), v118, (float32x4_t)v289.columns[2], 2), v119, (float32x4_t)v289.columns[2], 3);
          float32x4_t v124 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v117, v289.columns[3].f32[0]), v116, *(float32x2_t *)v289.columns[3].f32, 1), v118, (float32x4_t)v289.columns[3], 2), v119, (float32x4_t)v289.columns[3], 3);
          v118.f32[0] = *(float *)&v121.i32[3] - *(float *)v121.i32;
          v118.f32[1] = *(float *)&v122.i32[3] - *(float *)v122.i32;
          v118.f32[2] = v123.f32[3] - v123.f32[0];
          int32x4_t v125 = (int32x4_t)vmulq_f32(v118, v118);
          v118.f32[3] = v124.f32[3] - v124.f32[0];
          int v126 = (float32x4_t *)(v188 + 32 * v11);
          unsigned __int32 v127 = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v125, 2), vadd_f32(*(float32x2_t *)v125.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v125.i8, 1))).u32[0];
          *(float32x2_t *)v125.i8 = vrsqrte_f32((float32x2_t)v127);
          *(float32x2_t *)v125.i8 = vmul_f32(*(float32x2_t *)v125.i8, vrsqrts_f32((float32x2_t)v127, vmul_f32(*(float32x2_t *)v125.i8, *(float32x2_t *)v125.i8)));
          float32x4_t v128 = vmulq_n_f32(v118, vmul_f32(*(float32x2_t *)v125.i8, vrsqrts_f32((float32x2_t)v127, vmul_f32(*(float32x2_t *)v125.i8, *(float32x2_t *)v125.i8))).f32[0]);
          float32x4_t v130 = *v126;
          float32x4_t v129 = v126[1];
          float32x4_t v131 = vmulq_f32(v128, *v126);
          float32x4_t v132 = vmulq_f32(v129, vabsq_f32(v128));
          if (vaddv_f32(vadd_f32(*(float32x2_t *)v131.f32, (float32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v131, (int8x16_t)v131, 8uLL))) <= (float)-vaddv_f32(vadd_f32(*(float32x2_t *)v132.f32, (float32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)v132, (int8x16_t)v132, 8uLL))))goto LABEL_149; {
          v131.f32[0] = *(float *)&v121.i32[3] + *(float *)&v121.i32[1];
          }
          v131.f32[1] = *(float *)&v122.i32[3] + *(float *)&v122.i32[1];
          v131.f32[2] = v123.f32[3] + v123.f32[1];
          int32x4_t v133 = (int32x4_t)vmulq_f32(v131, v131);
          v131.f32[3] = v124.f32[3] + v124.f32[1];
          v132.f32[0] = *(float *)&v121.i32[3] - *(float *)&v121.i32[1];
          v132.f32[1] = *(float *)&v122.i32[3] - *(float *)&v122.i32[1];
          v132.f32[2] = v123.f32[3] - v123.f32[1];
          int32x4_t v134 = (int32x4_t)vmulq_f32(v132, v132);
          v132.f32[3] = v124.f32[3] - v124.f32[1];
          float32x4_t v135 = (float32x4_t)vzip2q_s32(v121, v122);
          v135.i32[2] = v123.i32[2];
          float32x4_t v136 = v135;
          v136.i32[3] = v124.i32[2];
          int32x4_t v137 = (int32x4_t)vmulq_f32(v135, v135);
          v133.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v133, 2), vadd_f32(*(float32x2_t *)v133.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v133.i8, 1))).u32[0];
          float32x2_t v138 = vrsqrte_f32((float32x2_t)v133.u32[0]);
          float32x2_t v139 = vmul_f32(v138, vrsqrts_f32((float32x2_t)v133.u32[0], vmul_f32(v138, v138)));
          v133.i32[0] = vmul_f32(v139, vrsqrts_f32((float32x2_t)v133.u32[0], vmul_f32(v139, v139))).u32[0];
          v139.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v134, 2), vadd_f32(*(float32x2_t *)v134.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v134.i8, 1))).u32[0];
          float32x4_t v140 = vmulq_n_f32(v131, *(float *)v133.i32);
          float32x2_t v141 = vrsqrte_f32((float32x2_t)v139.u32[0]);
          float32x2_t v142 = vmul_f32(v141, vrsqrts_f32((float32x2_t)v139.u32[0], vmul_f32(v141, v141)));
          float32x4_t v143 = (float32x4_t)vdupq_laneq_s32(v137, 2);
          float32x4_t v144 = vmulq_n_f32(v132, vmul_f32(v142, vrsqrts_f32((float32x2_t)v139.u32[0], vmul_f32(v142, v142))).f32[0]);
          unsigned __int32 v145 = vadd_f32(*(float32x2_t *)v143.f32, vadd_f32(*(float32x2_t *)v137.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v137.i8, 1))).u32[0];
          *(float32x2_t *)v143.f32 = vrsqrte_f32((float32x2_t)v145);
          *(float32x2_t *)v143.f32 = vmul_f32(*(float32x2_t *)v143.f32, vrsqrts_f32((float32x2_t)v145, vmul_f32(*(float32x2_t *)v143.f32, *(float32x2_t *)v143.f32)));
          float32x4_t v146 = vmulq_n_f32(v136, vmul_f32(*(float32x2_t *)v143.f32, vrsqrts_f32((float32x2_t)v145, vmul_f32(*(float32x2_t *)v143.f32, *(float32x2_t *)v143.f32))).f32[0]);
          v143.f32[0] = *(float *)&v121.i32[3] + *(float *)v121.i32;
          v143.f32[1] = *(float *)&v122.i32[3] + *(float *)v122.i32;
          v143.f32[2] = v123.f32[3] + v123.f32[0];
          int32x4_t v147 = (int32x4_t)vmulq_f32(v143, v143);
          v143.f32[3] = v124.f32[3] + v124.f32[0];
          v137.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v147, 2), vadd_f32(*(float32x2_t *)v147.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v147.i8, 1))).u32[0];
          *(float32x2_t *)v147.i8 = vrsqrte_f32((float32x2_t)v137.u32[0]);
          *(float32x2_t *)v147.i8 = vmul_f32(*(float32x2_t *)v147.i8, vrsqrts_f32((float32x2_t)v137.u32[0], vmul_f32(*(float32x2_t *)v147.i8, *(float32x2_t *)v147.i8)));
          float32x4_t v148 = vmulq_n_f32(v143, vmul_f32(*(float32x2_t *)v147.i8, vrsqrts_f32((float32x2_t)v137.u32[0], vmul_f32(*(float32x2_t *)v147.i8, *(float32x2_t *)v147.i8))).f32[0]);
          int8x16_t v149 = (int8x16_t)vmulq_f32(v130, v148);
          int8x16_t v150 = (int8x16_t)vmulq_f32(v129, vabsq_f32(v148));
          BOOL v75 = vaddv_f32(vadd_f32(*(float32x2_t *)v149.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v149, v149, 8uLL))) <= (float)-vaddv_f32(vadd_f32(*(float32x2_t *)v150.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v150, v150, 8uLL)));
          int8x16_t v151 = (int8x16_t)vmulq_f32(v140, v130);
          float v152 = vaddv_f32(vadd_f32(*(float32x2_t *)v151.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v151, v151, 8uLL)));
          int8x16_t v153 = (int8x16_t)vmulq_f32(v129, vabsq_f32(v140));
          float v154 = -vaddv_f32(vadd_f32(*(float32x2_t *)v153.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v153, v153, 8uLL)));
          BOOL v155 = v75 || v152 <= v154;
          int8x16_t v156 = (int8x16_t)vmulq_f32(v144, v130);
          float v157 = vaddv_f32(vadd_f32(*(float32x2_t *)v156.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v156, v156, 8uLL)));
          int8x16_t v158 = (int8x16_t)vmulq_f32(v129, vabsq_f32(v144));
          float v159 = -vaddv_f32(vadd_f32(*(float32x2_t *)v158.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v158, v158, 8uLL)));
          BOOL v160 = v155 || v157 <= v159;
          int8x16_t v161 = (int8x16_t)vmulq_f32(v146, v130);
          float v162 = vaddv_f32(vadd_f32(*(float32x2_t *)v161.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v161, v161, 8uLL)));
          int8x16_t v163 = (int8x16_t)vmulq_f32(v129, vabsq_f32(v146));
          float v164 = -vaddv_f32(vadd_f32(*(float32x2_t *)v163.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v163, v163, 8uLL)));
          if (v160 || v162 <= v164)
          {
LABEL_149:
            uint64_t v166 = v189 + 656 * v11;
            if (*(unsigned char *)(v166 + 129))
            {
              BOOL v175 = 0;
LABEL_151:
              int32x2_t v167 = (unsigned char *)(v166 + 129);
              if (qword_1EB97DC28 != -1) {
                swift_once();
              }
              uint64_t v168 = qword_1EB997A18;
              sub_1B62F6F7C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
              uint64_t v169 = swift_allocObject();
              *(_OWORD *)(v169 + 16) = xmmword_1B6E77050;
              *(void *)(v169 + 32) = &type metadata for Particle;
              *(void *)(v169 + 40) = &off_1F0FA6CF0;
              uint64_t v243 = v168;
              int v244 = 0;
              char v245 = 2;
              uint64_t v246 = 0;
              char v247 = 2;
              uint64_t v248 = 0;
              swift_retain();
              sub_1B62F776C(v169, 1, (uint64_t)v202);
              swift_setDeallocating();
              swift_deallocClassInstance();
              swift_release();
              sub_1B62F6E08();
              uint64_t v170 = swift_allocObject();
              *(_OWORD *)(v170 + 16) = xmmword_1B6E77050;
              swift_retain();
              uint64_t v171 = sub_1B62DE2C8(v11);
              swift_release();
              *(void *)(v170 + 56) = &type metadata for EmitterReference;
              *(void *)(v170 + 64) = &off_1F0F6BD40;
              *(void *)(v170 + 32) = v171;
              sub_1B62F7044(v170, (uint64_t)&v203);
              swift_setDeallocating();
              sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
              swift_arrayDestroy();
              swift_deallocClassInstance();
              sub_1B62CA064((uint64_t)v202);
              uint64_t v237 = v203;
              int v238 = v204;
              char v239 = v205;
              uint64_t v240 = v206 | 1;
              char v241 = v207;
              uint64_t v242 = v208;
              uint64_t v98 = v186;
              sub_1B62C9DA8(v186, (uint64_t)&v237, 0x200000000, v261);
              sub_1B62E9D68((uint64_t)v261, (uint64_t)v270, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
              if (*(void *)&v270[0])
              {
                long long v217 = v270[2];
                long long v218 = v270[3];
                long long v219 = v270[4];
                long long v220 = v270[5];
                long long v215 = v270[0];
                long long v216 = v270[1];
                sub_1B68458CC(v175);
                sub_1B632F170(v261);
              }
              *int32x2_t v167 = v175;
              swift_retain();
              swift_retain();
              uint64_t v101 = sub_1B62DE2C8(v11);
              swift_release();
              sub_1B6C5D1CC(v101, v175);
              sub_1B62CA064((uint64_t)&v203);
              swift_release();
              float v100 = v185;
            }
          }
          else
          {
            v289.columns[0].f32[0] = *(float *)&v121.i32[3] - *(float *)&v121.i32[2];
            v289.columns[0].f32[1] = *(float *)&v122.i32[3] - *(float *)&v122.i32[2];
            v289.columns[0].f32[2] = v123.f32[3] - v123.f32[2];
            v289.columns[2] = (simd_float4)vmulq_f32((float32x4_t)v289.columns[0], (float32x4_t)v289.columns[0]);
            v289.columns[0].f32[3] = v124.f32[3] - v124.f32[2];
            v289.columns[1].i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)v289.columns[2], 2), vadd_f32(*(float32x2_t *)v289.columns[2].f32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v289.columns[2].f32, 1))).u32[0];
            *(float32x2_t *)v289.columns[2].f32 = vrsqrte_f32((float32x2_t)v289.columns[1].u32[0]);
            *(float32x2_t *)v289.columns[2].f32 = vmul_f32(*(float32x2_t *)v289.columns[2].f32, vrsqrts_f32((float32x2_t)v289.columns[1].u32[0], vmul_f32(*(float32x2_t *)v289.columns[2].f32, *(float32x2_t *)v289.columns[2].f32)));
            float32x4_t v172 = vmulq_n_f32((float32x4_t)v289.columns[0], vmul_f32(*(float32x2_t *)v289.columns[2].f32, vrsqrts_f32((float32x2_t)v289.columns[1].u32[0], vmul_f32(*(float32x2_t *)v289.columns[2].f32, *(float32x2_t *)v289.columns[2].f32))).f32[0]);
            int8x16_t v173 = (int8x16_t)vmulq_f32(v130, v172);
            int8x16_t v174 = (int8x16_t)vmulq_f32(v129, vabsq_f32(v172));
            BOOL v175 = vaddv_f32(vadd_f32(*(float32x2_t *)v173.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v173, v173, 8uLL))) > (float)-vaddv_f32(vadd_f32(*(float32x2_t *)v174.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v174, v174, 8uLL)));
            uint64_t v166 = v189 + 656 * v11;
            if (v175 != *(unsigned char *)(v166 + 129)) {
              goto LABEL_151;
            }
          }
LABEL_88:
          if (++v11 == v12) {
            goto LABEL_84;
          }
        }
      }
    }
    return sub_1B632F170(v253);
  }
  return result;
}

uint64_t *sub_1B631C228(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  uint64_t v325 = *(void *)(v1 + 48);
  v324[1] = v3;
  v324[0] = v2;
  sub_1B62C9DA8(a1, (uint64_t)v324, 0x200000000, v240);
  sub_1B62CA210((uint64_t)v240, (uint64_t)v289, (unint64_t *)&qword_1EB97DC50);
  char v233 = (unsigned __int16 *)v289[0];
  if (v289[0])
  {
    if (v293 >= 1)
    {
      uint64_t v182 = v290;
      if (v290)
      {
        long long v4 = v292;
        uint64_t v181 = v289[5];
        uint64_t v5 = v292[4];
        int v6 = *(unsigned __int8 *)(v291 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v180 = v292 + 8;
        uint64_t v226 = v289[0] + 41;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v7 = 0;
        uint64_t v176 = v5;
        int v179 = v6;
        while (1)
        {
          int v8 = (void *)(v181 + 48 * v7);
          uint64_t v9 = (uint64_t *)v8[2];
          uint64_t v10 = v8[3];
          uint64_t v11 = v8[4];
          uint64_t v12 = v8[5];
          if (v6)
          {
            uint64_t v13 = *(os_unfair_lock_s **)(v12 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v13);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v5);
          uint64_t v191 = v4[7];
          uint64_t v198 = v4[6];
          uint64_t v184 = v4[8];
          uint64_t v212 = v4[10];
          uint64_t v219 = v4[9];
          uint64_t v14 = v5;
          uint64_t v15 = v4[4];
          uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
          uint64_t v17 = (char *)v12;
          swift_retain();
          v4[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
          v4[7] = v16;
          v180[1] = 0;
          v180[2] = 0;
          void *v180 = 0;
          swift_release();
          uint64_t v18 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v9, v10, v11, (uint64_t)v4);
          uint64_t v19 = sub_1B62C9024((uint64_t)&type metadata for TransientOriginColor, (uint64_t)&off_1F0F842D0, v9, v10, v11, (uint64_t)v4);
          memcpy((void *)(v18 + 16 * *((void *)v17 + 29)), (const void *)(v19 + 16 * *((void *)v17 + 29)), 16 * (*((void *)v17 + 31) - *((void *)v17 + 29)));
          char v205 = v17;
          memcpy((void *)(v19 + 16 * *((void *)v17 + 31)), (const void *)(v18 + 16 * *((void *)v17 + 31)), 16 * (*((void *)v17 + 30) - *((void *)v17 + 31)));
          unint64_t v20 = v4[6];
          uint64_t v21 = v4[8];
          if (!v21)
          {
            uint64_t v47 = v4[7];
            float32x4_t v48 = (void *)v4[4];
            uint64_t v51 = v198;
            float32x4_t v52 = v205;
            uint64_t v54 = v184;
            uint64_t v53 = v191;
            uint64_t v5 = v14;
            int v50 = v179;
            goto LABEL_47;
          }
          uint64_t v183 = v7;
          for (uint64_t i = 0; i != v21; ++i)
          {
            uint64_t v24 = (uint64_t *)(v20 + 48 * i);
            uint64_t v25 = *v24;
            int v26 = (void (*)(uint64_t))v24[4];
            uint64_t v27 = v4[9];
            if (v27) {
              BOOL v28 = v25 == v27;
            }
            else {
              BOOL v28 = 0;
            }
            if (v28 || !v233[11]) {
              goto LABEL_11;
            }
            unint64_t v29 = v233[9];
            uint64_t v30 = (void *)(v226 + v233[8]);
            uint64_t v31 = v24[2];
            uint64_t v32 = v30;
            unint64_t v33 = v29 >> 4;
            uint64_t v34 = v226;
            if (v29 >= 0x10)
            {
              while (*v32 != v25)
              {
                ++v34;
                v32 += 2;
                if (!--v33) {
                  goto LABEL_26;
                }
              }
              unsigned int v35 = *(unsigned __int8 *)(v34 + v233[10]);
              BOOL v36 = v35 > 5;
              int v37 = (1 << v35) & 0x23;
              if (v36 || v37 == 0)
              {
LABEL_11:
                uint64_t v23 = swift_retain();
                v26(v23);
                swift_release();
                continue;
              }
            }
LABEL_26:
            if (swift_conformsToProtocol2()) {
              uint64_t v39 = v31;
            }
            else {
              uint64_t v39 = 0;
            }
            if (v39)
            {
              if (v29 < 0x10) {
                goto LABEL_11;
              }
              float32x4_t v40 = v30;
              unint64_t v41 = v29 >> 4;
              uint64_t v42 = v226;
              while (*v40 != v39)
              {
                ++v42;
                v40 += 2;
                if (!--v41) {
                  goto LABEL_39;
                }
              }
              unsigned int v43 = *(unsigned __int8 *)(v42 + v233[10]);
              BOOL v36 = v43 > 5;
              int v44 = (1 << v43) & 0x23;
              if (v36 || v44 == 0) {
                goto LABEL_11;
              }
LABEL_39:
              uint64_t v46 = 16 * (v29 >> 4);
              while (*v30 != v39)
              {
                v30 += 2;
                v46 -= 16;
                if (!v46) {
                  goto LABEL_11;
                }
              }
            }
          }
          uint64_t v47 = v4[7];
          unint64_t v20 = v4[6];
          float32x4_t v48 = (void *)v4[4];
          if ((uint64_t)v4[8] >= 1)
          {
            uint64_t v49 = v4[7];
            swift_arrayDestroy();
            uint64_t v47 = v49;
          }
          uint64_t v5 = v176;
          int v50 = v179;
          uint64_t v7 = v183;
          uint64_t v51 = v198;
          float32x4_t v52 = v205;
          uint64_t v54 = v184;
          uint64_t v53 = v191;
LABEL_47:
          ecs_stack_allocator_deallocate(v48, v20, 48 * v47);
          v4[6] = v51;
          v4[7] = v53;
          v4[8] = v54;
          v4[9] = v219;
          v4[10] = v212;
          sub_1B634507C(v52);
          ecs_stack_allocator_pop_snapshot(v5);
          int v6 = v50;
          if (v50)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v52 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v52 + 47));
          }
          swift_release();
          if (++v7 == v182)
          {
            sub_1B632F170(v240);
            break;
          }
        }
      }
    }
    sub_1B632F170(v240);
  }
  long long v55 = *(_OWORD *)(v177 + 112);
  v322[0] = *(_OWORD *)(v177 + 96);
  v322[1] = v55;
  uint64_t v323 = *(void *)(v177 + 128);
  sub_1B62C9DA8(a1, (uint64_t)v322, 0x200000000, v241);
  sub_1B62CA210((uint64_t)v241, (uint64_t)v282, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v282[0])
  {
    uint64_t v59 = 0;
    goto LABEL_74;
  }
  if (v288 < 1 || (uint64_t v213 = v285) == 0)
  {
    uint64_t v59 = 0;
    goto LABEL_73;
  }
  float32x4_t v56 = v287;
  uint64_t v57 = v287[4];
  int v227 = *(unsigned __int8 *)(v286 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v294[0] = v282[0];
  v294[1] = v282[1];
  uint64_t v295 = v283;
  uint64_t v192 = (uint64_t)(v287 + 6);
  uint64_t v199 = v284;
  uint64_t v185 = v287 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v58 = 0;
  uint64_t v59 = 0;
  uint64_t v206 = v57;
  do
  {
    float32x4_t v60 = (unsigned int *)(v199 + 48 * v58);
    uint64_t v61 = *v60;
    uint64_t v220 = v60[1];
    float32x4_t v63 = (uint64_t *)*((void *)v60 + 2);
    uint64_t v62 = *((void *)v60 + 3);
    uint64_t v65 = *((void *)v60 + 4);
    uint64_t v64 = *((void *)v60 + 5);
    uint64_t v234 = v59;
    if (v227)
    {
      float32x4_t v66 = *(os_unfair_lock_s **)(v64 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v66);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v64 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v57);
    sub_1B62CA210(v192, (uint64_t)v321, &qword_1EB97DE20);
    uint64_t v67 = v56[4];
    uint64_t v68 = *(void *)(*(void *)(*(void *)(*(void *)(v64 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v56[6] = ecs_stack_allocator_allocate(v67, 48 * v68, 8);
    v56[7] = v68;
    v185[1] = 0;
    v185[2] = 0;
    *uint64_t v185 = 0;
    swift_release();
    int8x16_t v69 = (unsigned int *)sub_1B62C9024((uint64_t)&type metadata for Scale1, (uint64_t)&off_1F0FA0DD0, v63, v62, v65, (uint64_t)v56);
    int8x16_t v70 = (_OWORD *)sub_1B62C9024((uint64_t)&type metadata for TransientOriginScale, (uint64_t)&off_1F0F843A8, v63, v62, v65, (uint64_t)v56);
    if (v63)
    {
      if (!v65) {
        goto LABEL_65;
      }
      uint64_t v59 = v234;
      do
      {
        unsigned int v71 = *v69++;
        *(void *)&long long v72 = __PAIR64__(1.0, v71);
        *((void *)&v72 + 1) = COERCE_UNSIGNED_INT(1.0);
        *v70++ = v72;
        --v65;
      }
      while (v65);
    }
    else
    {
      if (v61 == v220)
      {
LABEL_65:
        uint64_t v59 = v234;
        goto LABEL_68;
      }
      uint64_t v73 = v220 - v61;
      float v74 = &v70[v61];
      BOOL v75 = &v69[v61];
      uint64_t v59 = v234;
      do
      {
        unsigned int v76 = *v75++;
        *(void *)&long long v77 = __PAIR64__(1.0, v76);
        *((void *)&v77 + 1) = COERCE_UNSIGNED_INT(1.0);
        *v74++ = v77;
        --v73;
      }
      while (v73);
    }
LABEL_68:
    sub_1B6345178(v56, (unsigned __int16 **)v294, (uint64_t)v321);
    sub_1B634507C((char *)v64);
    uint64_t v57 = v206;
    ecs_stack_allocator_pop_snapshot(v206);
    if (v227)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v64 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v64 + 376));
    }
    swift_release();
    ++v58;
  }
  while (v58 != v213);
  sub_1B632F170(v241);
LABEL_73:
  sub_1B632F170(v241);
LABEL_74:
  v319[0] = *(_OWORD *)(v177 + 136);
  v319[1] = *(_OWORD *)(v177 + 152);
  uint64_t v320 = *(void *)(v177 + 168);
  sub_1B62C9DA8(a1, (uint64_t)v319, 0x200000000, v242);
  sub_1B62CA210((uint64_t)v242, (uint64_t)v275, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v275[0])
  {
    if (v281 >= 1)
    {
      uint64_t v207 = v278;
      if (v278)
      {
        int8x16_t v78 = v280;
        uint64_t v228 = v280[4];
        int v221 = *(unsigned __int8 *)(v279 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v296[0] = v275[0];
        v296[1] = v275[1];
        uint64_t v297 = v276;
        uint64_t v193 = (uint64_t)(v280 + 6);
        uint64_t v200 = v277;
        uint64_t v186 = v280 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v79 = 0;
        while (1)
        {
          BOOL v80 = (unsigned int *)(v200 + 48 * v79);
          uint64_t v81 = *v80;
          uint64_t v214 = v80[1];
          float v82 = (uint64_t *)*((void *)v80 + 2);
          uint64_t v83 = *((void *)v80 + 3);
          uint64_t v85 = *((void *)v80 + 4);
          uint64_t v84 = *((void *)v80 + 5);
          uint64_t v235 = v59;
          if (v221)
          {
            uint64_t v86 = *(os_unfair_lock_s **)(v84 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v86);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v84 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v228);
          sub_1B62CA210(v193, (uint64_t)v318, &qword_1EB97DE20);
          uint64_t v87 = v78[4];
          uint64_t v88 = *(void *)(*(void *)(*(void *)(*(void *)(v84 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v78[6] = ecs_stack_allocator_allocate(v87, 48 * v88, 8);
          v78[7] = v88;
          v186[1] = 0;
          v186[2] = 0;
          *uint64_t v186 = 0;
          swift_release();
          uint64_t v89 = (_DWORD *)sub_1B62C9024((uint64_t)&type metadata for Scale1, (uint64_t)&off_1F0FA0DD0, v82, v83, v85, (uint64_t)v78);
          uint64_t v90 = (long long *)sub_1B62C9024((uint64_t)&type metadata for TransientOriginScale, (uint64_t)&off_1F0F843A8, v82, v83, v85, (uint64_t)v78);
          if (v82)
          {
            if (v85)
            {
              uint64_t v59 = v235;
              do
              {
                long long v91 = *v90++;
                *v89++ = v91;
                --v85;
              }
              while (v85);
              goto LABEL_91;
            }
          }
          else if (v81 != v214)
          {
            uint64_t v92 = v214 - v81;
            uint64_t v93 = &v90[v81];
            float32x4_t v94 = &v89[v81];
            uint64_t v59 = v235;
            do
            {
              long long v95 = *v93++;
              *v94++ = v95;
              --v92;
            }
            while (v92);
            goto LABEL_91;
          }
          uint64_t v59 = v235;
LABEL_91:
          sub_1B6345178(v78, (unsigned __int16 **)v296, (uint64_t)v318);
          sub_1B634507C((char *)v84);
          ecs_stack_allocator_pop_snapshot(v228);
          if (v221)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 376));
          }
          swift_release();
          if (++v79 == v207)
          {
            sub_1B632F170(v242);
            break;
          }
        }
      }
    }
    sub_1B632F170(v242);
  }
  long long v96 = *(_OWORD *)(v177 + 192);
  v316[0] = *(_OWORD *)(v177 + 176);
  v316[1] = v96;
  uint64_t v317 = *(void *)(v177 + 208);
  sub_1B62C9DA8(a1, (uint64_t)v316, 0x200000000, v243);
  sub_1B62CA210((uint64_t)v243, (uint64_t)v268, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v268[0])
  {
    if (v274 >= 1)
    {
      uint64_t v208 = v271;
      if (v271)
      {
        BOOL v97 = v273;
        uint64_t v229 = v273[4];
        int v222 = *(unsigned __int8 *)(v272 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v298[0] = v268[0];
        v298[1] = v268[1];
        uint64_t v299 = v269;
        uint64_t v194 = (uint64_t)(v273 + 6);
        uint64_t v201 = v270;
        uint64_t v187 = v273 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v98 = 0;
        while (1)
        {
          uint64_t v99 = (unsigned int *)(v201 + 48 * v98);
          uint64_t v100 = *v99;
          uint64_t v215 = v99[1];
          uint64_t v101 = (uint64_t *)*((void *)v99 + 2);
          uint64_t v102 = *((void *)v99 + 3);
          uint64_t v104 = *((void *)v99 + 4);
          uint64_t v103 = *((void *)v99 + 5);
          uint64_t v236 = v59;
          if (v222)
          {
            unint64_t v105 = *(os_unfair_lock_s **)(v103 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v105);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v103 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v229);
          sub_1B62CA210(v194, (uint64_t)v315, &qword_1EB97DE20);
          uint64_t v106 = v97[4];
          uint64_t v107 = *(void *)(*(void *)(*(void *)(*(void *)(v103 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v97[6] = ecs_stack_allocator_allocate(v106, 48 * v107, 8);
          v97[7] = v107;
          v187[1] = 0;
          v187[2] = 0;
          void *v187 = 0;
          swift_release();
          char v108 = (uint64_t *)sub_1B62C9024((uint64_t)&type metadata for Scale2, (uint64_t)&off_1F0FA0F38, v101, v102, v104, (uint64_t)v97);
          uint64_t v109 = (_OWORD *)sub_1B62C9024((uint64_t)&type metadata for TransientOriginScale, (uint64_t)&off_1F0F843A8, v101, v102, v104, (uint64_t)v97);
          if (v101)
          {
            if (v104)
            {
              uint64_t v59 = v236;
              do
              {
                uint64_t v110 = *v108++;
                *(void *)&long long v111 = v110;
                *((void *)&v111 + 1) = 1065353216;
                *v109++ = v111;
                --v104;
              }
              while (v104);
              goto LABEL_112;
            }
          }
          else if (v100 != v215)
          {
            uint64_t v112 = v215 - v100;
            BOOL v113 = &v109[v100];
            char v114 = &v108[v100];
            uint64_t v59 = v236;
            do
            {
              uint64_t v115 = *v114++;
              *(void *)&long long v116 = v115;
              *((void *)&v116 + 1) = 1065353216;
              *v113++ = v116;
              --v112;
            }
            while (v112);
            goto LABEL_112;
          }
          uint64_t v59 = v236;
LABEL_112:
          sub_1B6345178(v97, (unsigned __int16 **)v298, (uint64_t)v315);
          sub_1B634507C((char *)v103);
          ecs_stack_allocator_pop_snapshot(v229);
          if (v222)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v103 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v103 + 376));
          }
          swift_release();
          if (++v98 == v208)
          {
            sub_1B632F170(v243);
            break;
          }
        }
      }
    }
    sub_1B632F170(v243);
  }
  v313[0] = *(_OWORD *)(v177 + 216);
  v313[1] = *(_OWORD *)(v177 + 232);
  uint64_t v314 = *(void *)(v177 + 248);
  sub_1B62C9DA8(a1, (uint64_t)v313, 0x200000000, v244);
  sub_1B62CA210((uint64_t)v244, (uint64_t)v261, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v261[0])
  {
    if (v267 >= 1)
    {
      uint64_t v209 = v264;
      if (v264)
      {
        float32x4_t v117 = v266;
        uint64_t v230 = v266[4];
        int v223 = *(unsigned __int8 *)(v265 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v300[0] = v261[0];
        v300[1] = v261[1];
        uint64_t v301 = v262;
        uint64_t v195 = (uint64_t)(v266 + 6);
        uint64_t v202 = v263;
        uint64_t v188 = v266 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v118 = 0;
        while (1)
        {
          float32x4_t v119 = (unsigned int *)(v202 + 48 * v118);
          uint64_t v120 = *v119;
          uint64_t v216 = v119[1];
          int32x4_t v121 = (uint64_t *)*((void *)v119 + 2);
          uint64_t v122 = *((void *)v119 + 3);
          uint64_t v124 = *((void *)v119 + 4);
          uint64_t v123 = *((void *)v119 + 5);
          uint64_t v237 = v59;
          if (v223)
          {
            int32x4_t v125 = *(os_unfair_lock_s **)(v123 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v125);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v123 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v230);
          sub_1B62CA210(v195, (uint64_t)v312, &qword_1EB97DE20);
          uint64_t v126 = v117[4];
          uint64_t v127 = *(void *)(*(void *)(*(void *)(*(void *)(v123 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v117[6] = ecs_stack_allocator_allocate(v126, 48 * v127, 8);
          v117[7] = v127;
          v188[1] = 0;
          v188[2] = 0;
          *uint64_t v188 = 0;
          swift_release();
          float32x4_t v128 = (void *)sub_1B62C9024((uint64_t)&type metadata for Scale2, (uint64_t)&off_1F0FA0F38, v121, v122, v124, (uint64_t)v117);
          float32x4_t v129 = (long long *)sub_1B62C9024((uint64_t)&type metadata for TransientOriginScale, (uint64_t)&off_1F0F843A8, v121, v122, v124, (uint64_t)v117);
          if (v121)
          {
            if (v124)
            {
              uint64_t v59 = v237;
              do
              {
                long long v130 = *v129++;
                *v128++ = v130;
                --v124;
              }
              while (v124);
              goto LABEL_133;
            }
          }
          else if (v120 != v216)
          {
            uint64_t v131 = v216 - v120;
            float32x4_t v132 = &v129[v120];
            int32x4_t v133 = &v128[v120];
            uint64_t v59 = v237;
            do
            {
              long long v134 = *v132++;
              *v133++ = v134;
              --v131;
            }
            while (v131);
            goto LABEL_133;
          }
          uint64_t v59 = v237;
LABEL_133:
          sub_1B6345178(v117, (unsigned __int16 **)v300, (uint64_t)v312);
          sub_1B634507C((char *)v123);
          ecs_stack_allocator_pop_snapshot(v230);
          if (v223)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v123 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v123 + 376));
          }
          swift_release();
          if (++v118 == v209)
          {
            sub_1B632F170(v244);
            break;
          }
        }
      }
    }
    sub_1B632F170(v244);
  }
  long long v135 = *(_OWORD *)(v177 + 272);
  v310[0] = *(_OWORD *)(v177 + 256);
  v310[1] = v135;
  uint64_t v311 = *(void *)(v177 + 288);
  sub_1B62C9DA8(a1, (uint64_t)v310, 0x200000000, v245);
  sub_1B62CA210((uint64_t)v245, (uint64_t)v254, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v254[0])
  {
    if (v260 >= 1)
    {
      uint64_t v217 = v257;
      if (v257)
      {
        float32x4_t v136 = v259;
        uint64_t v238 = v259[4];
        int v137 = *(unsigned __int8 *)(v258 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v302[0] = v254[0];
        v302[1] = v254[1];
        uint64_t v303 = v255;
        uint64_t v203 = (uint64_t)(v259 + 6);
        uint64_t v210 = v256;
        uint64_t v196 = v259 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v138 = 0;
        int v189 = v137;
        while (1)
        {
          float32x2_t v139 = (unsigned int *)(v210 + 48 * v138);
          uint64_t v231 = *v139;
          uint64_t v224 = v139[1];
          float32x4_t v140 = (uint64_t *)*((void *)v139 + 2);
          uint64_t v141 = *((void *)v139 + 3);
          uint64_t v143 = *((void *)v139 + 4);
          uint64_t v142 = *((void *)v139 + 5);
          if (v137)
          {
            uint64_t v144 = v59;
            unsigned __int32 v145 = *(os_unfair_lock_s **)(v142 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v145);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v142 + 344));
            swift_release();
          }
          else
          {
            uint64_t v144 = v59;
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v238);
          sub_1B62CA210(v203, (uint64_t)v309, &qword_1EB97DE20);
          uint64_t v146 = v136[4];
          uint64_t v147 = *(void *)(*(void *)(*(void *)(*(void *)(v142 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v136[6] = ecs_stack_allocator_allocate(v146, 48 * v147, 8);
          v136[7] = v147;
          v196[1] = 0;
          v196[2] = 0;
          *uint64_t v196 = 0;
          swift_release();
          float32x4_t v148 = (long long *)sub_1B62C9024((uint64_t)&type metadata for Scale3, (uint64_t)&off_1F0FA10A0, v140, v141, v143, (uint64_t)v136);
          int8x16_t v149 = (_OWORD *)sub_1B62C9024((uint64_t)&type metadata for TransientOriginScale, (uint64_t)&off_1F0F843A8, v140, v141, v143, (uint64_t)v136);
          if (v140)
          {
            if (v143)
            {
              uint64_t v59 = v144;
              int v137 = v189;
              do
              {
                long long v150 = *v148++;
                *v149++ = v150;
                --v143;
              }
              while (v143);
              goto LABEL_154;
            }
          }
          else if (v231 != v224)
          {
            uint64_t v151 = v224 - v231;
            float v152 = &v149[v231];
            int8x16_t v153 = &v148[v231];
            uint64_t v59 = v144;
            int v137 = v189;
            do
            {
              long long v154 = *v153++;
              *v152++ = v154;
              --v151;
            }
            while (v151);
            goto LABEL_154;
          }
          uint64_t v59 = v144;
          int v137 = v189;
LABEL_154:
          sub_1B6345178(v136, (unsigned __int16 **)v302, (uint64_t)v309);
          sub_1B634507C((char *)v142);
          ecs_stack_allocator_pop_snapshot(v238);
          if (v137)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v142 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v142 + 376));
          }
          swift_release();
          if (++v138 == v217)
          {
            sub_1B632F170(v245);
            break;
          }
        }
      }
    }
    sub_1B632F170(v245);
  }
  uint64_t v308 = *(void *)(v177 + 328);
  long long v155 = *(_OWORD *)(v177 + 312);
  v307[0] = *(_OWORD *)(v177 + 296);
  v307[1] = v155;
  sub_1B62C9DA8(a1, (uint64_t)v307, 0x200000000, v246);
  double result = (uint64_t *)sub_1B62CA210((uint64_t)v246, (uint64_t)v247, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v247[0])
  {
    if (v253 >= 1)
    {
      uint64_t v218 = v250;
      if (v250)
      {
        float v157 = v252;
        uint64_t v239 = v252[4];
        int v158 = *(unsigned __int8 *)(v251 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v304[0] = v247[0];
        v304[1] = v247[1];
        uint64_t v305 = v248;
        uint64_t v204 = (uint64_t)(v252 + 6);
        uint64_t v211 = v249;
        int v197 = v252 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v159 = 0;
        int v190 = v158;
        while (1)
        {
          BOOL v160 = (unsigned int *)(v211 + 48 * v159);
          uint64_t v232 = *v160;
          uint64_t v225 = v160[1];
          int8x16_t v161 = (uint64_t *)*((void *)v160 + 2);
          uint64_t v162 = *((void *)v160 + 3);
          uint64_t v164 = *((void *)v160 + 4);
          uint64_t v163 = *((void *)v160 + 5);
          if (v158)
          {
            uint64_t v165 = v59;
            uint64_t v166 = *(os_unfair_lock_s **)(v163 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v166);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v163 + 344));
            swift_release();
          }
          else
          {
            uint64_t v165 = v59;
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v239);
          sub_1B62CA210(v204, (uint64_t)v306, &qword_1EB97DE20);
          uint64_t v167 = v157[4];
          uint64_t v168 = *(void *)(*(void *)(*(void *)(*(void *)(v163 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v157[6] = ecs_stack_allocator_allocate(v167, 48 * v168, 8);
          v157[7] = v168;
          v197[1] = 0;
          v197[2] = 0;
          *int v197 = 0;
          swift_release();
          uint64_t v169 = (_OWORD *)sub_1B62C9024((uint64_t)&type metadata for Scale3, (uint64_t)&off_1F0FA10A0, v161, v162, v164, (uint64_t)v157);
          uint64_t v170 = (long long *)sub_1B62C9024((uint64_t)&type metadata for TransientOriginScale, (uint64_t)&off_1F0F843A8, v161, v162, v164, (uint64_t)v157);
          if (v161)
          {
            if (!v164) {
              goto LABEL_172;
            }
            uint64_t v59 = v165;
            int v158 = v190;
            do
            {
              long long v171 = *v170++;
              *v169++ = v171;
              --v164;
            }
            while (v164);
          }
          else
          {
            if (v232 == v225)
            {
LABEL_172:
              uint64_t v59 = v165;
              int v158 = v190;
              goto LABEL_175;
            }
            uint64_t v172 = v225 - v232;
            int8x16_t v173 = &v170[v232];
            int8x16_t v174 = &v169[v232];
            uint64_t v59 = v165;
            int v158 = v190;
            do
            {
              long long v175 = *v173++;
              *v174++ = v175;
              --v172;
            }
            while (v172);
          }
LABEL_175:
          sub_1B6345178(v157, (unsigned __int16 **)v304, (uint64_t)v306);
          sub_1B634507C((char *)v163);
          ecs_stack_allocator_pop_snapshot(v239);
          if (v158)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v163 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v163 + 376));
          }
          swift_release();
          if (++v159 == v218)
          {
            sub_1B632F170(v246);
            return sub_1B632F170(v246);
          }
        }
      }
    }
    return sub_1B632F170(v246);
  }
  return result;
}

uint64_t *sub_1B631D818(uint64_t a1)
{
  uint64_t v2 = v1;
  long long v3 = (uint64_t *)a1;
  long long v4 = *(_OWORD *)(v1 + 56);
  v218[0] = *(_OWORD *)(v1 + 40);
  v218[1] = v4;
  uint64_t v219 = *(void *)(v1 + 72);
  sub_1B62C9DA8(a1, (uint64_t)v218, 0x200000000, v198);
  sub_1B62D7990((uint64_t)v198, (uint64_t)v199, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v179 = (uint64_t)v3;
  if (!*(void *)&v199[0]) {
    goto LABEL_114;
  }
  if (v205 >= 1)
  {
    uint64_t v170 = v202;
    if (v202)
    {
      uint64_t v138 = v1;
      uint64_t v5 = v204;
      uint64_t v174 = v204[4];
      int v173 = *(unsigned __int8 *)(v203 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v206[0] = v199[0];
      v206[1] = v199[1];
      uint64_t v207 = v200;
      uint64_t v167 = (uint64_t)(v204 + 6);
      uint64_t v168 = v201;
      uint64_t v164 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      uint64_t v165 = v204 + 8;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v6 = 0;
      while (1)
      {
        uint64_t v172 = v6;
        uint64_t v7 = (unsigned int *)(v168 + 48 * v6);
        uint64_t v8 = *v7;
        uint64_t v9 = v7[1];
        uint64_t v11 = (uint64_t *)*((void *)v7 + 2);
        uint64_t v10 = *((void *)v7 + 3);
        uint64_t v12 = *((void *)v7 + 4);
        uint64_t v13 = *((void *)v7 + 5);
        if (v173)
        {
          uint64_t v14 = *(os_unfair_lock_s **)(v13 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v174);
        sub_1B62D7990(v167, (uint64_t)v217, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v15 = v5[4];
        uint64_t v176 = v13;
        uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v5[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
        v5[7] = v16;
        v165[1] = 0;
        v165[2] = 0;
        *uint64_t v165 = 0;
        swift_release();
        uint64_t v17 = sub_1B62C9024((uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1F0F7E6B8, v11, v10, v12, (uint64_t)v5);
        if (v11)
        {
          if (v12)
          {
            uint64_t v18 = 0;
            while (1)
            {
              uint64_t v19 = (int *)(v17 + 32 * v18);
              int v20 = v19[1];
              uint64_t v21 = *v19;
              BOOL v22 = v21 == -1 && v20 == 0;
              if (v22) {
                goto LABEL_17;
              }
              if ((v21 & 0x80000000) != 0) {
                goto LABEL_17;
              }
              uint64_t v23 = v164[1];
              if (v23 <= v21) {
                goto LABEL_17;
              }
              uint64_t v24 = *v164;
              uint64_t v25 = *v164 + 12 * (int)v21;
              if (v20 != -1 && *(_DWORD *)(v25 + 8) != v20) {
                goto LABEL_17;
              }
              uint64_t v27 = *(int *)(v24 + 12 * (int)v21);
              uint64_t v28 = *(void *)(v179 + 136) + 32;
              uint64_t v29 = *(void *)(v28 + 8 * v27);
              uint64_t v30 = *(void *)(v29 + 48);
              uint64_t v31 = *(void *)(v30 + 16);
              if (!v31) {
                goto LABEL_17;
              }
              uint64_t v32 = *(__int16 *)(v25 + 4);
              unint64_t v33 = (void *)(v30 + 56);
              while ((ValueMetadata *)*(v33 - 3) != &type metadata for MeshModel)
              {
                v33 += 5;
                if (!--v31) {
                  goto LABEL_17;
                }
              }
              uint64_t v34 = *(void *)(*(void *)(v29 + 128) + *v33 + 16 * v32 + 8);
              if (!*(void *)(v34 + 16)) {
                goto LABEL_17;
              }
              int v35 = *(_DWORD *)(v34 + 36);
              uint64_t v36 = *(int *)(v34 + 32);
              BOOL v37 = v36 == -1 && v35 == 0;
              if (v37 || (v36 & 0x80000000) != 0 || v23 <= v36) {
                goto LABEL_17;
              }
              uint64_t v38 = v24 + 12 * (int)v36;
              if (v35 != -1 && *(_DWORD *)(v38 + 8) != v35) {
                goto LABEL_17;
              }
              uint64_t v40 = *(void *)(v28 + 8 * *(int *)(v24 + 12 * (int)v36));
              uint64_t v41 = *(void *)(v40 + 48);
              uint64_t v42 = *(void *)(v41 + 16);
              if (!v42) {
                goto LABEL_17;
              }
              int v43 = *(__int16 *)(v38 + 4);
              uint64_t v44 = *(unsigned int *)(v24 + 12 * (int)v36);
              int32x4_t v45 = (void *)(v41 + 56);
              while ((ValueMetadata *)*(v45 - 3) != &type metadata for Material)
              {
                v45 += 5;
                if (!--v42) {
                  goto LABEL_17;
                }
              }
              uint64_t v46 = *(void **)(*(void *)(v40 + 128) + *v45 + 104 * v43 + 24);
              if (v46)
              {
                __int16 v144 = v43;
                uint64_t v147 = *(unsigned int *)(v24 + 12 * (int)v36);
                uint64_t v152 = v40;
                float v157 = *(unsigned int **)(*(void *)(v40 + 128) + *v45 + 104 * v43 + 24);
                Class = (__objc2_class *)object_getClass(v46);
                if (Class == _TtC3VFX13PBRParameters)
                {
                  uint64_t v49 = v157[8];
                  unint64_t v50 = v157[9];
                  goto LABEL_60;
                }
                BOOL v22 = Class == _TtC3VFX16PrelitParameters;
                uint64_t v44 = v147;
                uint64_t v40 = v152;
                LOWORD(v43) = v144;
                if (v22)
                {
                  uint64_t v49 = v157[4];
                  unint64_t v50 = v157[5];
LABEL_60:
                  swift_retain();
                  swift_bridgeObjectRetain();
LABEL_61:
                  sub_1B6914E50(v49 | (v50 << 32), 1);
                  goto LABEL_62;
                }
              }
              sub_1B6963ADC(v40, v44 | ((unint64_t)*(unsigned __int16 *)(v24 + 12 * (int)v36 + 6) << 48) | ((unint64_t)(unsigned __int16)v43 << 32), 248, v179, (uint64_t)v184);
              sub_1B62D7990((uint64_t)v184, (uint64_t)v180, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
              sub_1B62D7990((uint64_t)v180, (uint64_t)v182, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
              if (sub_1B6388C10(v182) != 1)
              {
                if (*(void *)(v183 + 16))
                {
                  uint64_t v49 = *(void *)(v183 + 32);
                  uint64_t v48 = *(void *)(v183 + 40);
                  uint64_t v158 = *(void *)(v183 + 48);
                  int v153 = *(unsigned __int8 *)(v183 + 56);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  unint64_t v148 = v49;
                  sub_1B6916440(v49, v48, v158, v153);
                  sub_1B6916460((uint64_t)v180);
                  if (v153 == 2)
                  {
                    uint64_t v49 = v49;
                    unint64_t v50 = HIDWORD(v148);
                    goto LABEL_61;
                  }
                  sub_1B6916620(v49, v48, v158, v153);
LABEL_62:
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_17;
                }
                sub_1B6916460((uint64_t)v180);
              }
LABEL_17:
              if (++v18 == v12) {
                goto LABEL_13;
              }
            }
          }
          goto LABEL_13;
        }
        if (v8 != v9) {
          break;
        }
LABEL_13:
        sub_1B6345178(v5, (unsigned __int16 **)v206, (uint64_t)v217);
        sub_1B634507C((char *)v176);
        ecs_stack_allocator_pop_snapshot(v174);
        if (v173)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v176 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v176 + 376));
        }
        swift_release();
        uint64_t v6 = v172 + 1;
        if (v172 + 1 == v170)
        {
          sub_1B632F170(v198);
          uint64_t v2 = v138;
          long long v3 = (uint64_t *)v179;
          goto LABEL_113;
        }
      }
      while (1)
      {
        uint64_t v51 = (int *)(v17 + 32 * v8);
        int v52 = v51[1];
        uint64_t v53 = *v51;
        if (v53 == -1 && v52 == 0) {
          goto LABEL_65;
        }
        if ((v53 & 0x80000000) != 0) {
          goto LABEL_65;
        }
        uint64_t v55 = v164[1];
        if (v55 <= v53) {
          goto LABEL_65;
        }
        uint64_t v56 = *v164;
        uint64_t v57 = *v164 + 12 * (int)v53;
        if (v52 != -1 && *(_DWORD *)(v57 + 8) != v52) {
          goto LABEL_65;
        }
        uint64_t v59 = *(int *)(v56 + 12 * (int)v53);
        uint64_t v60 = *(void *)(v179 + 136) + 32;
        uint64_t v61 = *(void *)(v60 + 8 * v59);
        uint64_t v62 = *(void *)(v61 + 48);
        uint64_t v63 = *(void *)(v62 + 16);
        if (!v63) {
          goto LABEL_65;
        }
        uint64_t v64 = *(__int16 *)(v57 + 4);
        uint64_t v65 = (void *)(v62 + 56);
        while ((ValueMetadata *)*(v65 - 3) != &type metadata for MeshModel)
        {
          v65 += 5;
          if (!--v63) {
            goto LABEL_65;
          }
        }
        uint64_t v66 = *(void *)(*(void *)(v61 + 128) + *v65 + 16 * v64 + 8);
        if (!*(void *)(v66 + 16)) {
          goto LABEL_65;
        }
        int v67 = *(_DWORD *)(v66 + 36);
        uint64_t v68 = *(int *)(v66 + 32);
        BOOL v69 = v68 == -1 && v67 == 0;
        if (v69 || (v68 & 0x80000000) != 0 || v55 <= v68) {
          goto LABEL_65;
        }
        uint64_t v70 = v56 + 12 * (int)v68;
        if (v67 != -1 && *(_DWORD *)(v70 + 8) != v67) {
          goto LABEL_65;
        }
        uint64_t v72 = *(void *)(v60 + 8 * *(int *)(v56 + 12 * (int)v68));
        uint64_t v73 = *(void *)(v72 + 48);
        uint64_t v74 = *(void *)(v73 + 16);
        if (!v74) {
          goto LABEL_65;
        }
        int v75 = *(__int16 *)(v70 + 4);
        uint64_t v76 = *(unsigned int *)(v56 + 12 * (int)v68);
        long long v77 = (void *)(v73 + 56);
        while ((ValueMetadata *)*(v77 - 3) != &type metadata for Material)
        {
          v77 += 5;
          if (!--v74) {
            goto LABEL_65;
          }
        }
        int8x16_t v78 = *(void **)(*(void *)(v72 + 128) + *v77 + 104 * v75 + 24);
        if (v78)
        {
          __int16 v145 = v75;
          uint64_t v149 = *(unsigned int *)(v56 + 12 * (int)v68);
          uint64_t v154 = v72;
          uint64_t v159 = *(unsigned int **)(*(void *)(v72 + 128) + *v77 + 104 * v75 + 24);
          uint64_t v79 = (__objc2_class *)object_getClass(v78);
          if (v79 == _TtC3VFX13PBRParameters)
          {
            uint64_t v81 = v159[8];
            unint64_t v82 = v159[9];
            goto LABEL_108;
          }
          BOOL v22 = v79 == _TtC3VFX16PrelitParameters;
          uint64_t v76 = v149;
          uint64_t v72 = v154;
          LOWORD(v75) = v145;
          if (v22)
          {
            uint64_t v81 = v159[4];
            unint64_t v82 = v159[5];
LABEL_108:
            swift_retain();
            swift_bridgeObjectRetain();
LABEL_109:
            sub_1B6914E50(v81 | (v82 << 32), 1);
            goto LABEL_110;
          }
        }
        sub_1B6963ADC(v72, v76 | ((unint64_t)*(unsigned __int16 *)(v56 + 12 * (int)v68 + 6) << 48) | ((unint64_t)(unsigned __int16)v75 << 32), 248, v179, (uint64_t)v184);
        sub_1B62D7990((uint64_t)v184, (uint64_t)v180, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
        sub_1B62D7990((uint64_t)v180, (uint64_t)v182, &qword_1EB97EB20, (uint64_t)&type metadata for MaterialRuntime);
        if (sub_1B6388C10(v182) != 1)
        {
          if (*(void *)(v183 + 16))
          {
            uint64_t v81 = *(void *)(v183 + 32);
            uint64_t v80 = *(void *)(v183 + 40);
            uint64_t v160 = *(void *)(v183 + 48);
            int v155 = *(unsigned __int8 *)(v183 + 56);
            swift_retain();
            swift_bridgeObjectRetain();
            unint64_t v150 = v81;
            sub_1B6916440(v81, v80, v160, v155);
            sub_1B6916460((uint64_t)v180);
            if (v155 == 2)
            {
              uint64_t v81 = v81;
              unint64_t v82 = HIDWORD(v150);
              goto LABEL_109;
            }
            sub_1B6916620(v81, v80, v160, v155);
LABEL_110:
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_65;
          }
          sub_1B6916460((uint64_t)v180);
        }
LABEL_65:
        if (++v8 == v9) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_113:
  sub_1B632F170(v198);
LABEL_114:
  long long v83 = *(_OWORD *)(v2 + 96);
  v215[0] = *(_OWORD *)(v2 + 80);
  v215[1] = v83;
  uint64_t v216 = *(void *)(v2 + 112);
  sub_1B62C9DA8((uint64_t)v3, (uint64_t)v215, 0x200000000, v182);
  sub_1B62D7990((uint64_t)v182, (uint64_t)v184, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v184[0])
  {
    LOBYTE(v86) = 0;
    LOBYTE(v87) = 0;
    goto LABEL_166;
  }
  if (v190 < 1 || (uint64_t v143 = v187) == 0)
  {
    LOBYTE(v86) = 0;
    LOBYTE(v87) = 0;
    goto LABEL_165;
  }
  uint64_t v84 = v189[4];
  int v151 = *(unsigned __int8 *)(v188 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v208[0] = v184[0];
  v208[1] = v184[1];
  uint64_t v209 = v185;
  uint64_t v141 = (uint64_t)(v189 + 6);
  uint64_t v142 = v186;
  uint64_t v169 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  int8x16_t v156 = v189;
  float32x4_t v140 = v189 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v85 = 0;
  int v86 = 0;
  int v87 = 0;
  uint64_t v139 = v84;
  while (1)
  {
    uint64_t v146 = v85;
    uint64_t v88 = (unsigned int *)(v142 + 48 * v85);
    uint64_t v89 = *v88;
    uint64_t v177 = v88[1];
    long long v91 = (uint64_t *)*((void *)v88 + 2);
    uint64_t v90 = *((void *)v88 + 3);
    uint64_t v92 = *((void *)v88 + 5);
    uint64_t v163 = *((void *)v88 + 4);
    uint64_t v161 = v92;
    if (v151)
    {
      uint64_t v93 = *(os_unfair_lock_s **)(v92 + 376);
      swift_retain();
      float32x4_t v94 = v93;
      uint64_t v92 = v161;
      os_unfair_lock_lock(v94);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v161 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v84);
    sub_1B62D7990(v141, (uint64_t)v210, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v95 = *(void *)(*(void *)(*(void *)(*(void *)(v92 + 40) + 16) + 32) + 16);
    uint64_t v96 = v156[4];
    uint64_t v97 = v95 + 1;
    uint64_t v98 = 48 * (v95 + 1);
    swift_retain();
    v156[6] = ecs_stack_allocator_allocate(v96, v98, 8);
    v156[7] = v97;
    v140[1] = 0;
    v140[2] = 0;
    *float32x4_t v140 = 0;
    swift_release();
    uint64_t v162 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v91, v90, v163, (uint64_t)v156);
    if (!v91)
    {
      if (v89 != v177)
      {
        uint64_t v132 = v177 - v89;
        uint64_t v133 = v162 + 88 * v89;
        do
        {
          int v134 = *(unsigned __int8 *)(v133 + 45);
          v86 |= v134;
          v87 |= v134 ^ 1;
          v180[2] = *(_OWORD *)(v133 + 32);
          v180[3] = *(_OWORD *)(v133 + 48);
          v180[4] = *(_OWORD *)(v133 + 64);
          int v181 = *(_DWORD *)(v133 + 80);
          v180[0] = *(_OWORD *)v133;
          v180[1] = *(_OWORD *)(v133 + 16);
          sub_1B63210F4((uint64_t)v3, (uint64_t)v180);
          long long v135 = *(_OWORD *)(v133 + 48);
          v213[2] = *(_OWORD *)(v133 + 32);
          v213[3] = v135;
          v213[4] = *(_OWORD *)(v133 + 64);
          int v214 = *(_DWORD *)(v133 + 80);
          long long v136 = *(_OWORD *)(v133 + 16);
          v213[0] = *(_OWORD *)v133;
          v213[1] = v136;
          sub_1B6916298((uint64_t)v3, (uint64_t)v213);
          v133 += 88;
          --v132;
        }
        while (v132);
      }
      goto LABEL_160;
    }
    uint64_t v99 = v169;
    if (v163) {
      break;
    }
LABEL_160:
    sub_1B6345178(v156, (unsigned __int16 **)v208, (uint64_t)v210);
    sub_1B634507C((char *)v161);
    uint64_t v84 = v139;
    ecs_stack_allocator_pop_snapshot(v139);
    if (v151)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v161 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v161 + 376));
    }
    swift_release();
    uint64_t v85 = v146 + 1;
    if (v146 + 1 == v143)
    {
      sub_1B632F170(v182);
LABEL_165:
      sub_1B632F170(v182);
LABEL_166:
      sub_1B632148C((uint64_t)v3);
      sub_1B63217D8((uint64_t)v3);
      sub_1B631EBB8((uint64_t)v3, v87 & 1, v86 & 1);
      sub_1B6324824((uint64_t)v3);
      sub_1B6323CBC(v3);
      sub_1B631F9D8((uint64_t)v3);
      return sub_1B6322618((uint64_t)v3);
    }
  }
  uint64_t v100 = 0;
  while (1)
  {
    uint64_t v178 = v100;
    uint64_t v102 = v162 + 88 * v100;
    int v175 = *(unsigned __int8 *)(v102 + 45);
    long long v103 = *(_OWORD *)(v102 + 48);
    long long v104 = *(_OWORD *)(v102 + 64);
    _OWORD v211[2] = *(_OWORD *)(v102 + 32);
    v211[3] = v103;
    v211[4] = v104;
    int v212 = *(_DWORD *)(v102 + 80);
    long long v105 = *(_OWORD *)(v102 + 16);
    v211[0] = *(_OWORD *)v102;
    v211[1] = v105;
    sub_1B63210F4((uint64_t)v3, (uint64_t)v211);
    uint64_t v106 = *(void *)(v102 + 24);
    uint64_t v197 = MEMORY[0x1E4FBC860];
    uint64_t v107 = *(void *)(v106 + 16);
    if (v107) {
      break;
    }
LABEL_126:
    v86 |= v175;
    v87 |= v175 ^ 1;
    uint64_t v101 = swift_bridgeObjectRetain();
    sub_1B631F330(v101, 0);
    swift_bridgeObjectRelease_n();
    uint64_t v100 = v178 + 1;
    if (v178 + 1 == v163) {
      goto LABEL_160;
    }
  }
  int v166 = v87;
  uint64_t v108 = v106 + 32;
  swift_bridgeObjectRetain();
  uint64_t v109 = 0;
  uint64_t v171 = v108;
  while (2)
  {
    uint64_t v110 = (int *)(v108 + 8 * v109);
    int v111 = v110[1];
    uint64_t v112 = *v110;
    BOOL v113 = v112 == -1 && v111 == 0;
    if (v113
      || (v112 & 0x80000000) != 0
      || v99[1] <= v112
      || ((uint64_t v114 = *v99, v111 != -1) ? (v115 = *(_DWORD *)(*v99 + 12 * (int)v112 + 8) == v111) : (v115 = 1),
          !v115
       || (uint64_t v116 = *(void *)(v3[17] + 8 * *(int *)(v114 + 12 * (int)v112) + 32), (*(unsigned char *)(v116 + 120) & 1) == 0)))
    {
LABEL_130:
      if (++v109 == v107)
      {
        swift_bridgeObjectRelease();
        int v87 = v166;
        goto LABEL_126;
      }
      continue;
    }
    break;
  }
  uint64_t v117 = *(void *)(*(void *)(*(void *)(v3[10] + 8 * *(__int16 *)(v114 + 12 * (int)v112 + 6) + 32) + 16)
                   + 32);
  uint64_t v118 = *(void *)(v117 + 16);
  if (!v118)
  {
    uint64_t v99 = v169;
    goto LABEL_130;
  }
  uint64_t v119 = *(__int16 *)(v114 + 12 * (int)v112 + 4);
  uint64_t v120 = v117 + 32;
  swift_retain();
  swift_retain();
  uint64_t v121 = 0;
  while (1)
  {
    uint64_t v122 = *(void *)(v116 + 48);
    uint64_t v123 = *(void *)(v122 + 16);
    if (!v123) {
      break;
    }
    long long v124 = *(_OWORD *)(v120 + 16 * v121++);
    uint64_t v125 = v124;
    uint64_t v126 = v122 + 56;
    while (*(void *)(v126 - 24) != (void)v124)
    {
      v126 += 40;
      if (!--v123) {
        goto LABEL_167;
      }
    }
    uint64_t v129 = v126 - 8;
    uint64_t v128 = *(void *)(v126 - 8);
    uint64_t v127 = *(void *)(v129 + 8);
    if (v128 <= 1) {
      uint64_t v128 = 1;
    }
    uint64_t v130 = *(void *)(v116 + 128) + v127 + v128 * v119;
    long long v196 = v124;
    uint64_t v131 = sub_1B62C12C4(v195);
    sub_1B62C5E18(v130, v125, (uint64_t)v131);
    sub_1B62C1550((uint64_t)v195, (uint64_t)v193);
    sub_1B62C5560(0, (unint64_t *)&qword_1EB97EAE0);
    sub_1B62C5560(0, (unint64_t *)&qword_1EB97FAA0);
    if (swift_dynamicCast())
    {
      sub_1B62C15C4(v191, (uint64_t)v194);
      sub_1B631E8A4(v194);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v194);
    }
    else
    {
      uint64_t v192 = 0;
      memset(v191, 0, sizeof(v191));
      sub_1B631E7CC((uint64_t)v191, &qword_1EB97FAB0, (unint64_t *)&qword_1EB97FAA0, (uint64_t)&protocol descriptor for ParticleDefaultRendererable);
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v195);
    if (v121 == v118)
    {
      swift_release();
      swift_release();
      long long v3 = (uint64_t *)v179;
      uint64_t v99 = v169;
      uint64_t v108 = v171;
      goto LABEL_130;
    }
  }
LABEL_167:
  double result = (uint64_t *)sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B631E7CC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1B631E83C(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1B631E83C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1B62C5560(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1B631E8A4(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_1B62C14BC(a1, v2);
  unint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  if (sub_1B631EA84(v4))
  {
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    sub_1B62C14BC(a1, v5);
    unint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
    sub_1B631EAEC(v7);
  }
  sub_1B62C1550((uint64_t)a1, (uint64_t)v17);
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97FAA0);
  if (swift_dynamicCast())
  {
    if (sub_1B631EA84(v14)) {
      sub_1B631EAEC(v14);
    }
    if (sub_1B631EA84(v15 | ((unint64_t)v16 << 32))) {
      sub_1B631EAEC(v15 | ((unint64_t)v16 << 32));
    }
  }
  sub_1B62C1550((uint64_t)a1, (uint64_t)v17);
  unint64_t result = swift_dynamicCast();
  if ((result & 1) != 0 && !v9)
  {
    if (v10 != -1 || v11)
    {
      unint64_t result = sub_1B631EA84(v10 | ((unint64_t)v11 << 32));
      if (result) {
        unint64_t result = sub_1B631EAEC(v10 | ((unint64_t)v11 << 32));
      }
    }
    if (v12 != -1 || v13)
    {
      unint64_t result = sub_1B631EA84(v12 | ((unint64_t)v13 << 32));
      if (result) {
        return sub_1B631EAEC(v12 | ((unint64_t)v13 << 32));
      }
    }
  }
  return result;
}

uint64_t sub_1B631EA84(unint64_t a1)
{
  unint64_t v2 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001) {
    return 0;
  }
  int v4 = a1;
  if ((int)a1 >= *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)) {
    return 0;
  }
  uint64_t result = 1;
  if (v2 != -1
    && *(_DWORD *)(*(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v4 + 8) != v2)
  {
    return 0;
  }
  return result;
}

unint64_t sub_1B631EAEC(unint64_t result)
{
  int v2 = result;
  unint64_t v3 = HIDWORD(result);
  unint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 16);
  if (v5)
  {
    uint64_t v6 = (_DWORD *)(v4 + 36);
    uint64_t v7 = *(void *)(*v1 + 16);
    while (*(v6 - 1) != result || *v6 != HIDWORD(result))
    {
      v6 += 2;
      if (!--v7) {
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (unint64_t)sub_1B633F784(0, v5 + 1, 1, (char *)v4);
      unint64_t v4 = result;
    }
    unint64_t v10 = *(void *)(v4 + 16);
    unint64_t v9 = *(void *)(v4 + 24);
    if (v10 >= v9 >> 1)
    {
      uint64_t result = (unint64_t)sub_1B633F784(v9 > 1, v10 + 1, 1, (char *)v4);
      unint64_t v4 = result;
    }
    *(void *)(v4 + 16) = v10 + 1;
    unint64_t v11 = v4 + 8 * v10;
    *(_DWORD *)(v11 + 32) = v2;
    *(_DWORD *)(v11 + 36) = v3;
    *uint64_t v1 = v4;
  }
  return result;
}

uint64_t sub_1B631EBB8(uint64_t a1, char a2, char a3)
{
  long long v7 = *(_OWORD *)(v3 + 136);
  v97[0] = *(_OWORD *)(v3 + 120);
  v97[1] = v7;
  uint64_t v98 = *(void *)(v3 + 152);
  sub_1B62C9DA8(a1, (uint64_t)v97, 0x200000000, v83);
  sub_1B62D7990((uint64_t)v83, (uint64_t)v84, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v84[0]) {
    goto LABEL_87;
  }
  long long v91 = v84[0];
  long long v92 = v84[1];
  uint64_t v93 = v85;
  if (v90 < 1 || (uint64_t v72 = v87) == 0)
  {
LABEL_86:
    sub_1B632F170(v83);
LABEL_87:
    uint64_t v62 = swift_bridgeObjectRetain();
    sub_1B631F330(v62, 0);
    swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v63 = swift_bridgeObjectRetain();
      sub_1B631F330(v63, 1);
      swift_bridgeObjectRelease();
    }
    if (a3)
    {
      uint64_t v64 = swift_bridgeObjectRetain();
      sub_1B631F330(v64, 0);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  char v66 = a2;
  char v67 = a3;
  uint64_t v71 = v86;
  int v76 = *(unsigned __int8 *)(v88 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v75 = v89[4];
  uint64_t v80 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  long long v77 = v89;
  BOOL v69 = v89 + 8;
  uint64_t v70 = (uint64_t)(v89 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    unsigned int v12 = (unsigned int *)(v71 + 48 * v8);
    uint64_t v13 = *v12;
    uint64_t v78 = v12[1];
    unint64_t v14 = (uint64_t *)*((void *)v12 + 2);
    uint64_t v15 = *((void *)v12 + 4);
    uint64_t v16 = *((void *)v12 + 5);
    uint64_t v73 = v9;
    uint64_t v74 = v8;
    uint64_t v81 = *((void *)v12 + 3);
    if (v76)
    {
      uint64_t v17 = *(os_unfair_lock_s **)(v16 + 376);
      swift_retain();
      os_unfair_lock_lock(v17);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v75);
    sub_1B62D7990(v70, (uint64_t)v96, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v18 = v77[4];
    uint64_t v19 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v77[6] = ecs_stack_allocator_allocate(v18, 48 * v19, 8);
    v77[7] = v19;
    v69[1] = 0;
    v69[2] = 0;
    *BOOL v69 = 0;
    swift_release();
    uint64_t v82 = sub_1B62C9024((uint64_t)&type metadata for SDFTextureGenerator, (uint64_t)&off_1F0F7F260, v14, v81, v15, (uint64_t)v77);
    if (!v14) {
      break;
    }
    if (v15)
    {
      uint64_t v20 = 0;
      do
      {
        uint64_t v21 = v14[v20];
        uint64_t v22 = swift_retain();
        if (*(unsigned char *)(v16 + 184)) {
          goto LABEL_92;
        }
        int v23 = *(_DWORD *)(*(void *)(v16 + 168) + 4 * v21);
        int v24 = *(_DWORD *)(*(void *)(v22 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v23 + 8);
        swift_release();
        uint64_t v25 = *((void *)v11 + 2);
        if (v25)
        {
          int v26 = v11 + 36;
          uint64_t v27 = *((void *)v11 + 2);
          while (*(v26 - 1) != v23 || *v26 != v24)
          {
            v26 += 2;
            if (!--v27) {
              goto LABEL_22;
            }
          }
        }
        else
        {
LABEL_22:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v11 = sub_1B633F784(0, v25 + 1, 1, v11);
          }
          unint64_t v30 = *((void *)v11 + 2);
          unint64_t v29 = *((void *)v11 + 3);
          if (v30 >= v29 >> 1) {
            unint64_t v11 = sub_1B633F784(v29 > 1, v30 + 1, 1, v11);
          }
          *((void *)v11 + 2) = v30 + 1;
          uint64_t v31 = &v11[8 * v30];
          *((_DWORD *)v31 + 8) = v23;
          *((_DWORD *)v31 + 9) = v24;
        }
        int32x2_t v32 = *(int32x2_t *)(v82 + 24 * v20);
        BOOL v33 = v32.i32[0] == -1 && v32.i32[1] == 0;
        if (!v33
          && (v32.i32[0] & 0x80000000) == 0
          && v80[1] > v32.i32[0]
          && (v32.i32[1] == -1 || *(_DWORD *)(*v80 + 12 * v32.i32[0] + 8) == v32.i32[1]))
        {
          uint64_t v35 = *((void *)v10 + 2);
          if (v35)
          {
            uint64_t v36 = 0;
            while (1)
            {
              int32x2_t v37 = vceq_s32(*(int32x2_t *)&v10[8 * v36 + 32], v32);
              if (v37.i32[0] & v37.i32[1]) {
                break;
              }
              if (v35 == ++v36) {
                goto LABEL_42;
              }
            }
          }
          else
          {
LABEL_42:
            uint64_t v79 = *(void *)(v82 + 24 * v20);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v10 = sub_1B633F784(0, v35 + 1, 1, v10);
            }
            unint64_t v39 = *((void *)v10 + 2);
            unint64_t v38 = *((void *)v10 + 3);
            uint64_t v40 = v79;
            if (v39 >= v38 >> 1)
            {
              uint64_t v41 = sub_1B633F784(v38 > 1, v39 + 1, 1, v10);
              uint64_t v40 = v79;
              unint64_t v10 = v41;
            }
            *((void *)v10 + 2) = v39 + 1;
            *(void *)&v10[8 * v39 + 32] = v40;
          }
        }
      }
      while (++v20 != v15);
    }
LABEL_47:
    v94[0] = v91;
    v94[1] = v92;
    uint64_t v95 = v93;
    uint64_t v9 = v73;
    sub_1B6345178(v77, (unsigned __int16 **)v94, (uint64_t)v96);
    sub_1B634507C((char *)v16);
    ecs_stack_allocator_pop_snapshot(v75);
    if (v76)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
    }
    swift_release();
    uint64_t v8 = v74 + 1;
    if (v74 + 1 == v72)
    {
      sub_1B632F170(v83);
      a2 = v66;
      a3 = v67;
      goto LABEL_86;
    }
  }
  if (v13 == v78) {
    goto LABEL_47;
  }
  while (1)
  {
    uint64_t v42 = swift_retain();
    if (*(unsigned char *)(v16 + 184)) {
      break;
    }
    int v43 = *(_DWORD *)(*(void *)(v16 + 168) + 4 * v13);
    int v44 = *(_DWORD *)(*(void *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v43 + 8);
    swift_release();
    uint64_t v45 = *((void *)v11 + 2);
    if (v45)
    {
      uint64_t v46 = v11 + 36;
      uint64_t v47 = *((void *)v11 + 2);
      while (*(v46 - 1) != v43 || *v46 != v44)
      {
        v46 += 2;
        if (!--v47) {
          goto LABEL_59;
        }
      }
    }
    else
    {
LABEL_59:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v11 = sub_1B633F784(0, v45 + 1, 1, v11);
      }
      unint64_t v50 = *((void *)v11 + 2);
      unint64_t v49 = *((void *)v11 + 3);
      if (v50 >= v49 >> 1) {
        unint64_t v11 = sub_1B633F784(v49 > 1, v50 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v50 + 1;
      uint64_t v51 = &v11[8 * v50];
      *((_DWORD *)v51 + 8) = v43;
      *((_DWORD *)v51 + 9) = v44;
    }
    int32x2_t v52 = *(int32x2_t *)(v82 + 24 * v13);
    BOOL v53 = v52.i32[0] == -1 && v52.i32[1] == 0;
    if (!v53
      && (v52.i32[0] & 0x80000000) == 0
      && v80[1] > v52.i32[0]
      && (v52.i32[1] == -1 || *(_DWORD *)(*v80 + 12 * v52.i32[0] + 8) == v52.i32[1]))
    {
      uint64_t v55 = *((void *)v10 + 2);
      if (v55)
      {
        uint64_t v56 = 0;
        while (1)
        {
          int32x2_t v57 = vceq_s32(*(int32x2_t *)&v10[8 * v56 + 32], v52);
          if (v57.i32[0] & v57.i32[1]) {
            break;
          }
          if (v55 == ++v56) {
            goto LABEL_79;
          }
        }
      }
      else
      {
LABEL_79:
        uint64_t v68 = *(void *)(v82 + 24 * v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v10 = sub_1B633F784(0, v55 + 1, 1, v10);
        }
        unint64_t v59 = *((void *)v10 + 2);
        unint64_t v58 = *((void *)v10 + 3);
        uint64_t v60 = v68;
        if (v59 >= v58 >> 1)
        {
          uint64_t v61 = sub_1B633F784(v58 > 1, v59 + 1, 1, v10);
          uint64_t v60 = v68;
          unint64_t v10 = v61;
        }
        *((void *)v10 + 2) = v59 + 1;
        *(void *)&v10[8 * v59 + 32] = v60;
      }
    }
    if (++v13 == v78) {
      goto LABEL_47;
    }
  }
LABEL_92:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B631F330(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 1;
  if ((a2 & 1) == 0) {
    uint64_t v3 = 2;
  }
  uint64_t v64 = v3;
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v61 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
    uint64_t v5 = a1 + 32;
    uint64_t v67 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    uint64_t v7 = a2;
    uint64_t v8 = v5;
    uint64_t v9 = v67;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v65 = v8;
    uint64_t v63 = v2;
    unsigned int v62 = a2;
    while (1)
    {
      unsigned int v12 = (unsigned int *)(v8 + 8 * v10);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      if (v14 != -1 || v13 != 0)
      {
        if ((v14 & 0x80000000) == 0
          && v4[1] > (int)v14
          && (v13 == -1 || *(_DWORD *)(*v4 + 12 * (int)v14 + 8) == v13))
        {
          uint64_t v68 = v11;
          uint64_t v17 = (int *)(*v4 + 12 * (int)v14);
          uint64_t v18 = *((__int16 *)v17 + 2);
          uint64_t v19 = *(void *)(*(void *)(v2 + 136) + 8 * *v17 + 32);
          if (*(void *)(v19 + 232) <= v18 && *(void *)(v19 + 240) > v18)
          {
            uint64_t v21 = **(void **)(v2 + v61);
            uint64_t v22 = *(os_unfair_lock_s **)(v19 + 344);
            swift_retain();
            os_unfair_lock_lock(v22);
            uint64_t v66 = v21;
            uint64_t v23 = *(void *)(v21 + 32);
            ecs_stack_allocator_push_snapshot(v23);
            uint64_t v24 = *(void *)(*(void *)(v19 + 40) + 16);
            uint64_t v25 = *(void *)(v24 + 128);
            if (*(void *)(v25 + 16)
              && (unint64_t v26 = sub_1B62C1A30((uint64_t)&type metadata for TextureLoadingOptions), (v27 & 1) != 0)
              && *(ValueMetadata **)(*(void *)(v24 + 24) + 16 * *(void *)(*(void *)(v25 + 56) + 8 * v26) + 32) == &type metadata for TextureLoadingOptions)
            {
              swift_retain();
            }
            else
            {
              swift_retain();
              uint64_t v28 = ecs_stack_allocator_allocate(v23, 8, 8);
              unint64_t v29 = v28;
              *uint64_t v28 = v18;
              uint64_t v30 = *(void *)(v19 + 192);
              if (v30) {
                sub_1B6BFB238(v28, 1, 1, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, 1, v30, *(void *)(v19 + 200), *(void *)(v19 + 208));
              }
              uint64_t v60 = v29;
              sub_1B6BFB510(*(void *)(v19 + 40), v19, v29, 1, 1);
              int v31 = *(_DWORD *)(v19 + 24);
              swift_retain();
              uint64_t v72 = 0;
              memset(v71, 0, sizeof(v71));
              uint64_t v70 = 0;
              memset(v69, 0, sizeof(v69));
              int v32 = sub_1B637F628(v31, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, 0, 0, (uint64_t)v71, (uint64_t)v69);
              swift_release();
              sub_1B631E7CC((uint64_t)v69, (unint64_t *)&qword_1EB97E850, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent);
              sub_1B631E7CC((uint64_t)v71, (unint64_t *)&qword_1EB97E850, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent);
              if ((uint64_t)(*(void *)(v19 + 240) - *(void *)(v19 + 232)) < 2)
              {
                if (sub_1B63B4340(v32))
                {
                  sub_1B66603E4(v32);
                }
                else
                {
                  uint64_t v35 = *(void *)(v19 + 232);
                  uint64_t v36 = *(void *)(v19 + 240);
                  char v37 = *(unsigned char *)(v19 + 120);
                  uint64_t v38 = *(unsigned int *)(v19 + 28);
                  LOBYTE(v71[0]) = *(unsigned char *)(v19 + 32);
                  sub_1B628EEF4(v35, v36, v32, v37, v38 | ((unint64_t)LOBYTE(v71[0]) << 32));
                }
              }
              else
              {
                int v33 = *(unsigned __int8 *)(v19 + 120);
                uint64_t v34 = *(unsigned int *)(v19 + 28);
                LOBYTE(v71[0]) = *(unsigned char *)(v19 + 32);
                sub_1B6BF2AEC(v60, 1, 1, v32, v33, v34 | ((unint64_t)LOBYTE(v71[0]) << 32), 0, 0);
              }
            }
            uint64_t v11 = v68;
            uint64_t v2 = v63;
            if (v4[1] <= (int)v14
              || (uint64_t v39 = *v4, v13 != -1) && *(_DWORD *)(v39 + 12 * (int)v14 + 8) != v13
              || (sub_1B6358360(*(void *)(*(void *)(v63 + 136) + 8 * *(int *)(v39 + 12 * (int)v14) + 32), *(_WORD *)(v39 + 12 * (int)v14 + 4), 64, v63, v14 | ((unint64_t)v13 << 32), v64) & 1) == 0)
            {
              *(void *)&v71[0] = 0;
              *((void *)&v71[0] + 1) = 0xE000000000000000;
              sub_1B6E328C8();
              sub_1B6E31948();
              sub_1B681F698();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              sub_1B6E31948();
              sub_1B6E31948();
              sub_1B6E31948();
              sub_1B6E32BE8();
              __break(1u);
              swift_release();
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
              __break(1u);
              return;
            }
            swift_release();
            ecs_stack_allocator_pop_snapshot(*(void *)(v66 + 32));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
            swift_release();
            uint64_t v9 = v67;
            uint64_t v8 = v65;
            uint64_t v7 = v62;
          }
        }
        BOOL v41 = (int)v14 >= 0 && v4[1] > (int)v14;
        if (v7)
        {
          if (!v41) {
            goto LABEL_6;
          }
          uint64_t v49 = *v4 + 12 * (int)v14;
          if (v13 != -1 && *(_DWORD *)(v49 + 8) != v13) {
            goto LABEL_6;
          }
          uint64_t v51 = *(void *)(*(void *)(v2 + 136) + 8 * *(int *)(*v4 + 12 * (int)v14) + 32);
          uint64_t v52 = *(void *)(v51 + 48);
          uint64_t v53 = *(void *)(v52 + 16);
          if (!v53) {
            goto LABEL_6;
          }
          uint64_t v54 = *(__int16 *)(v49 + 4);
          uint64_t v55 = (void *)(v52 + 56);
          while ((ValueMetadata *)*(v55 - 3) != &type metadata for TextureLoadPolicy)
          {
            v55 += 5;
            if (!--v53) {
              goto LABEL_6;
            }
          }
          if (*(unsigned char *)(*(void *)(v51 + 128) + *v55 + 4 * v54) != 1) {
            goto LABEL_6;
          }
          uint64_t v56 = v14 | (v13 << 32);
          int32x2_t v57 = &type metadata for TextureLoadRequestCPU;
          uint64_t v58 = v7;
          unint64_t v59 = &off_1F0F8B740;
        }
        else
        {
          if (!v41) {
            goto LABEL_6;
          }
          uint64_t v42 = *v4 + 12 * (int)v14;
          if (v13 != -1 && *(_DWORD *)(v42 + 8) != v13) {
            goto LABEL_6;
          }
          uint64_t v44 = *(void *)(*(void *)(v2 + 136) + 8 * *(int *)(*v4 + 12 * (int)v14) + 32);
          uint64_t v45 = *(void *)(v44 + 48);
          uint64_t v46 = *(void *)(v45 + 16);
          if (!v46) {
            goto LABEL_6;
          }
          uint64_t v47 = *(__int16 *)(v42 + 4);
          uint64_t v48 = (void *)(v45 + 56);
          while ((ValueMetadata *)*(v48 - 3) != &type metadata for TextureLoadPolicy)
          {
            v48 += 5;
            if (!--v46) {
              goto LABEL_6;
            }
          }
          if (*(unsigned char *)(*(void *)(v44 + 128) + *v48 + 4 * v47 + 1) != 1) {
            goto LABEL_6;
          }
          uint64_t v56 = v14 | (v13 << 32);
          int32x2_t v57 = &type metadata for TextureLoadRequestGPU;
          uint64_t v58 = v7;
          unint64_t v59 = &off_1F0F8B818;
        }
        sub_1B62E364C((uint64_t)v57, (uint64_t)v59, v56);
        uint64_t v7 = v58;
        uint64_t v8 = v65;
        uint64_t v9 = v67;
      }
LABEL_6:
      if (++v10 == v9)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t *sub_1B631F9D8(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 360);
  long long v4 = *(_OWORD *)(v1 + 376);
  uint64_t v299 = *(void *)(v1 + 392);
  v298[0] = v3;
  v298[1] = v4;
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  sub_1B62C9DA8(a1, (uint64_t)v298, 0x200000000, v249);
  uint64_t result = (uint64_t *)sub_1B62D7990((uint64_t)v249, (uint64_t)v266, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v266[0])
  {
    long long v273 = v266[0];
    long long v274 = v266[1];
    uint64_t v275 = v267;
    if (v272 >= 1)
    {
      uint64_t v215 = v269;
      if (v269)
      {
        uint64_t v233 = v5;
        uint64_t v214 = v268;
        uint64_t v226 = v270;
        int v218 = *(unsigned __int8 *)(v270 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v217 = v271[4];
        uint64_t v213 = v271 + 6;
        uint64_t v219 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
        uint64_t v220 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
        uint64_t v7 = (void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v228 = v271;
        int v212 = v271 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v8 = 0;
        while (1)
        {
          uint64_t v216 = v8;
          uint64_t v9 = (unsigned int *)(v214 + 48 * v8);
          uint64_t v10 = *v9;
          uint64_t v11 = (_UNKNOWN **)v9[1];
          uint64_t v221 = v9[2];
          int v222 = v11;
          unsigned int v12 = (uint64_t *)*((void *)v9 + 2);
          uint64_t v13 = *((void *)v9 + 3);
          uint64_t v14 = *((void *)v9 + 5);
          int v223 = (_UNKNOWN **)*((void *)v9 + 4);
          uint64_t v224 = v12;
          uint64_t v231 = v10;
          if (v218)
          {
            uint64_t v15 = *(os_unfair_lock_s **)(v14 + 376);
            swift_retain();
            os_unfair_lock_lock(v15);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v217);
          sub_1B62D7990((uint64_t)v213, (uint64_t)v282, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v14 + 40) + 16) + 32) + 16);
          uint64_t v17 = v228;
          uint64_t v18 = v228[4];
          uint64_t v229 = v14;
          uint64_t v19 = v16 + 1;
          uint64_t v20 = 48 * (v16 + 1);
          swift_retain();
          v17[6] = ecs_stack_allocator_allocate(v18, v20, 8);
          v17[7] = v19;
          uint64_t v21 = v229;
          uint64_t v22 = v212;
          v212[1] = 0;
          v22[2] = 0;
          *uint64_t v22 = 0;
          swift_release();
          uint64_t v24 = v223;
          uint64_t v23 = v224;
          sub_1B62C9024((uint64_t)&type metadata for TextureRequireAnimationRepresentation, (uint64_t)&off_1F0F9D410, v224, v13, (uint64_t)v223, (uint64_t)v17);
          uint64_t v225 = 32;
          if (!v23) {
            break;
          }
          if (v24)
          {
            uint64_t v25 = 0;
            do
            {
              uint64_t v26 = v224[v25];
              uint64_t v232 = v25;
              v284[0] = v226;
              v284[1] = v21;
              v284[2] = v228;
              v284[3] = v25 + v221;
              v284[4] = v26;
              uint64_t v27 = *(void *)(v227 + 400);
              LODWORD(v245) = *(_DWORD *)(v227 + 408);
              LODWORD(v244) = *(unsigned __int8 *)(v227 + 412);
              uint64_t v28 = *(void **)(v227 + 416);
              LODWORD(v241) = *(unsigned __int8 *)(v227 + 424);
              uint64_t v242 = *(char **)(v227 + 432);
              uint64_t v243 = v28;
              uint64_t v29 = v233;
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v233 + 40));
              uint64_t v30 = *(void *)(v29 + 48);
              if (*(void *)(v30 + 16) && (unint64_t v31 = sub_1B62C1A30(*(void *)(v27 + 32)), (v32 & 1) != 0))
              {
                int v33 = (uint64_t *)(*(void *)(v30 + 56) + 24 * v31);
                uint64_t v35 = *v33;
                uint64_t v34 = v33[1];
                uint64_t v36 = v33[2];
                swift_retain();
                swift_bridgeObjectRetain();
                uint64_t v246 = v36;
                swift_bridgeObjectRetain();
                uint64_t v37 = v233;
              }
              else
              {
                uint64_t v37 = v233;
                uint64_t v35 = sub_1B62B6A68(a1, v27);
                uint64_t v34 = v38;
                uint64_t v246 = v39;
              }
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 40));
              uint64_t v41 = *(void *)(v34 + 16);
              if (v41)
              {
                uint64_t v42 = (void *)thread_worker_index(&thread_worker_index, v40);
                int v43 = *(unsigned __int8 *)(a1 + v219);
                uint64_t v240 = v35;
                if (v43 == 4)
                {
                  uint64_t v44 = *(void *)(a1 + 216);
                  if (*(unsigned char *)(a1 + 225) == 1) {
                    BOOL v45 = v44 <= 1;
                  }
                  else {
                    BOOL v45 = v44 <= 0;
                  }
                  char v46 = !v45;
                }
                else
                {
                  char v46 = 1;
                }
                uint64_t v47 = *(void *)(*(void *)(a1 + v220) + 8 * *v42 + 8);
                if (v241 != 2) {
                  char v46 = v241;
                }
                uint64_t v285 = v27;
                int v286 = (int)v245;
                char v287 = (char)v244;
                uint64_t v288 = v243;
                char v289 = v46;
                uint64_t v290 = v242;
                swift_retain();
                swift_retain();
                sub_1B62C921C(a1, v47, (uint64_t)&v285, (int *)(v34 + 32), v41, (uint64_t)v250);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_release();
                sub_1B62D7990((uint64_t)v250, (uint64_t)v252, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
                if (*(void *)&v252[0])
                {
                  if (v258 >= 1)
                  {
                    uint64_t v238 = v255;
                    if (v255)
                    {
                      uint64_t v48 = v257;
                      uint64_t v241 = v257[4];
                      int v49 = *(unsigned __int8 *)(v256 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
                      v280[0] = v252[0];
                      v280[1] = v252[1];
                      uint64_t v281 = v253;
                      uint64_t v235 = v257 + 6;
                      uint64_t v236 = v254;
                      uint64_t v234 = v257 + 8;
                      int v222 = off_1F0F76618;
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      uint64_t v50 = 0;
                      LODWORD(v237) = v49;
                      uint64_t v243 = v48;
                      while (1)
                      {
                        uint64_t v240 = v50;
                        uint64_t v51 = (unsigned int *)(v236 + 48 * v50);
                        unint64_t v52 = *v51;
                        char v245 = (void *)v51[1];
                        uint64_t v53 = (char *)*((void *)v51 + 2);
                        uint64_t v54 = *((void *)v51 + 3);
                        uint64_t v55 = *((void *)v51 + 5);
                        uint64_t v246 = *((void *)v51 + 4);
                        uint64_t v242 = v53;
                        uint64_t v239 = v54;
                        if (v49)
                        {
                          uint64_t v56 = *(os_unfair_lock_s **)(v55 + 376);
                          swift_retain();
                          os_unfair_lock_lock(v56);
                          os_unfair_lock_lock(*(os_unfair_lock_t *)(v55 + 344));
                        }
                        else
                        {
                          swift_retain();
                        }
                        ecs_stack_allocator_push_snapshot(v241);
                        sub_1B62D7990((uint64_t)v235, (uint64_t)v283, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
                        uint64_t v57 = *(void *)(*(void *)(*(void *)(*(void *)(v55 + 40) + 16) + 32) + 16);
                        int v244 = (void *)v55;
                        uint64_t v58 = v243;
                        uint64_t v59 = v243[4];
                        uint64_t v60 = v57 + 1;
                        uint64_t v61 = 48 * (v57 + 1);
                        swift_retain();
                        v58[6] = ecs_stack_allocator_allocate(v59, v61, 8);
                        v58[7] = v60;
                        unsigned int v62 = v244;
                        uint64_t v63 = v234;
                        v234[1] = 0;
                        v63[2] = 0;
                        *uint64_t v63 = 0;
                        swift_release();
                        uint64_t v64 = v62[6];
                        uint64_t v65 = *(void *)(v64 + 16);
                        if (v242)
                        {
                          if (!v65)
                          {
                            uint64_t v68 = 0;
LABEL_56:
                            if (v246)
                            {
                              uint64_t v86 = 0;
                              char v245 = v68 + 3;
                              do
                              {
                                uint64_t v87 = *(void *)(v245[11 * v86] + 16);
                                if (v87)
                                {
                                  uint64_t v88 = swift_bridgeObjectRetain();
                                  for (uint64_t i = 0; i != v87; ++i)
                                  {
                                    double v92 = MEMORY[0x1F4188790](v88, v89);
                                    uint64_t v209 = v284;
                                    uint64_t v210 = a1;
                                    double v211 = v92;
                                    BOOL v93 = LODWORD(v92) == -1 && HIDWORD(v92) == 0;
                                    if (!v93 && (LODWORD(v92) & 0x80000000) == 0 && v7[1] > SLODWORD(v92))
                                    {
                                      uint64_t v94 = *(unsigned int *)(*v7 + SLODWORD(v92) * (uint64_t)v91 + 8);
                                      if (HIDWORD(v92) == -1 || v94 == HIDWORD(v92))
                                      {
                                        uint64_t v96 = (unsigned int *)(*v7 + SLODWORD(v92) * (uint64_t)v91);
                                        uint64_t v88 = sub_1B63210A4(*(void *)(*(void *)(a1 + 136) + 8 * (int)*v96 + 32), a1, *v96 | ((unint64_t)*((unsigned __int16 *)v96 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v96 + 2) << 32), v94, (void (*)(unsigned char *))sub_1B6916A2C, (uint64_t)v208);
                                      }
                                    }
                                  }
                                  swift_bridgeObjectRelease();
                                }
                                ++v86;
                              }
                              while (v86 != v246);
                            }
                            goto LABEL_76;
                          }
                          uint64_t v66 = v64 + 56;
                          while (*(ValueMetadata **)(v66 - 24) != &type metadata for EmitterDescription)
                          {
                            v66 += 40;
                            if (!--v65) {
                              goto LABEL_47;
                            }
                          }
                          uint64_t v71 = v66 - 8;
                          uint64_t v70 = *(void *)(v66 - 8);
                          uint64_t v69 = *(void *)(v71 + 8);
                          if (v70 <= 1) {
                            uint64_t v70 = 1;
                          }
                          uint64_t v72 = v62[16] + v69;
                          uint64_t v231 = v72 + v62[30] * v70;
                          uint64_t v73 = v72;
                          uint64_t v74 = v246;
                          uint64_t v75 = 11 * v246;
                          uint64_t v68 = ecs_stack_allocator_allocate(v243[4], 88 * v246, 8);
                          uint64_t v230 = &v68[v75];
                          sub_1B6916648(v242, v74, v73, (uint64_t)v68);
                          uint64_t v247 = 0;
                          uint64_t v248 = 0;
                          swift_unownedRetainStrong();
                          swift_unownedRetain();
                          swift_release();
                          int v76 = (void *)swift_allocObject();
                          uint64_t v77 = v239;
                          v76[2] = v242;
                          v76[3] = v77;
                          v76[4] = v74;
                          sub_1B62D7990((uint64_t)&v247, (uint64_t)(v76 + 5), (unint64_t *)&unk_1EB97E910, (uint64_t)&type metadata for PackedRewriter);
                          uint64_t v78 = v230;
                          v76[7] = v68;
                          v76[8] = v78;
                          uint64_t v79 = v231;
                          v76[9] = v73;
                          v76[10] = v79;
                          uint64_t v80 = v222;
                          v76[11] = &type metadata for EmitterDescription;
                          v76[12] = v80;
                          uint64_t v82 = v243;
                          uint64_t v81 = v244;
                          v76[13] = &type metadata for EmitterDescription;
                          v76[14] = v81;
                          uint64_t v83 = v82[8];
                          uint64_t v84 = (void *)(v82[6] + 48 * v83);
                          *uint64_t v84 = &type metadata for EmitterDescription;
                          v84[1] = v80;
                          _OWORD v84[2] = &type metadata for EmitterDescription;
                          v84[3] = v68;
                          v84[4] = sub_1B69167D8;
                          v84[5] = v76;
                          uint64_t v85 = v242;
                          v82[8] = v83 + 1;
                          if (v85) {
                            goto LABEL_56;
                          }
                        }
                        else if (v65)
                        {
                          uint64_t v67 = (void *)(v64 + 56);
                          do
                          {
                            if ((ValueMetadata *)*(v67 - 3) == &type metadata for EmitterDescription)
                            {
                              uint64_t v68 = (void *)(v62[16] + *v67);
                              goto LABEL_75;
                            }
                            v67 += 5;
                            --v65;
                          }
                          while (v65);
LABEL_47:
                          uint64_t v68 = 0;
                          if (v242) {
                            goto LABEL_56;
                          }
                        }
                        else
                        {
                          uint64_t v68 = 0;
                        }
LABEL_75:
                        if (v52 != v245)
                        {
                          uint64_t v246 = (uint64_t)(v68 + 3);
                          do
                          {
                            uint64_t v109 = *(void *)(*(void *)(v246 + 88 * v52) + 16);
                            if (v109)
                            {
                              uint64_t v110 = swift_bridgeObjectRetain();
                              for (uint64_t j = 0; j != v109; ++j)
                              {
                                double v114 = MEMORY[0x1F4188790](v110, v111);
                                uint64_t v209 = v284;
                                uint64_t v210 = a1;
                                double v211 = v114;
                                BOOL v115 = LODWORD(v114) == -1 && HIDWORD(v114) == 0;
                                if (!v115 && (LODWORD(v114) & 0x80000000) == 0 && v7[1] > SLODWORD(v114))
                                {
                                  uint64_t v116 = *(unsigned int *)(*v7 + SLODWORD(v114) * (uint64_t)v113 + 8);
                                  if (HIDWORD(v114) == -1 || v116 == HIDWORD(v114))
                                  {
                                    uint64_t v118 = (unsigned int *)(*v7 + SLODWORD(v114) * (uint64_t)v113);
                                    uint64_t v110 = sub_1B63210A4(*(void *)(*(void *)(a1 + 136) + 8 * (int)*v118 + 32), a1, *v118 | ((unint64_t)*((unsigned __int16 *)v118 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v118 + 2) << 32), v116, (void (*)(unsigned char *))sub_1B6916A2C, (uint64_t)v208);
                                  }
                                }
                              }
                              swift_bridgeObjectRelease();
                            }
                            ++v52;
                          }
                          while ((void *)v52 != v245);
                        }
LABEL_76:
                        uint64_t v97 = v243;
                        sub_1B6345178(v243, (unsigned __int16 **)v280, (uint64_t)v283);
                        uint64_t v98 = (uint64_t)v244;
                        if (*(void *)(v97[13] + 16))
                        {
                          uint64_t v99 = swift_bridgeObjectRetain();
                          sub_1B639147C(v99, v98);
                          swift_bridgeObjectRelease();
                          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                          uint64_t v101 = (void *)v97[13];
                          if (isUniquelyReferenced_nonNull_native)
                          {
                            uint64_t v102 = v101[2];
                            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                              uint64_t v101 = sub_1B68C0C6C(0, v102, 1, v101);
                            }
                            sub_1B63B29DC();
                            swift_arrayDestroy();
                            if (v102)
                            {
                              uint64_t v103 = v101[2] - v102;
                              if (v103 < 0) {
                                goto LABEL_225;
                              }
                              memmove(v101 + 4, &v101[9 * v102 + 4], 72 * v103);
                              v101[2] = v103;
                            }
                            uint64_t v97 = v243;
                            uint64_t v98 = (uint64_t)v244;
                            v243[13] = v101;
                          }
                          else
                          {
                            long long v104 = (void *)MEMORY[0x1E4FBC860];
                            if (v101[3] >= 2uLL)
                            {
                              sub_1B681C594();
                              long long v104 = (void *)swift_allocObject();
                              size_t v105 = j__malloc_size(v104);
                              v104[2] = 0;
                              v104[3] = 2 * ((uint64_t)(v105 - 32) / 72);
                            }
                            v97[13] = v104;
                            swift_bridgeObjectRelease();
                          }
                          if (*(unsigned __int8 *)(v97[2]
                                                                + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
                             - 1 >= 2)
                          {
                            uint64_t v106 = *(char **)(v98 + 232);
                            uint64_t v107 = *(char **)(v98 + 256);
                            if (v106 == v107)
                            {
                              uint64_t v108 = *(char **)(v98 + 240);
                            }
                            else
                            {
                              sub_1B666018C(v107, v106);
                              uint64_t v107 = *(char **)(v98 + 232);
                              uint64_t v108 = *(char **)(v98 + 240);
                              if (v108 == v107)
                              {
                                uint64_t v108 = 0;
                                uint64_t v107 = 0;
                                *(void *)(v98 + 232) = 0;
                                *(void *)(v98 + 240) = 0;
                              }
                            }
                            *(void *)(v98 + 248) = v108;
                            *(void *)(v98 + 256) = v107;
                          }
                        }
                        ecs_stack_allocator_pop_snapshot(v241);
                        int v49 = v237;
                        if (v237)
                        {
                          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v98 + 344));
                          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v98 + 376));
                        }
                        swift_release();
                        uint64_t v50 = v240 + 1;
                        if (v240 + 1 == v238)
                        {
                          sub_1B632F170(v250);
                          break;
                        }
                      }
                    }
                  }
                  sub_1B632F170(v250);
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
              }
              uint64_t v25 = v232 + 1;
              uint64_t v21 = v229;
            }
            while ((_UNKNOWN **)(v232 + 1) != v223);
          }
LABEL_116:
          v276[0] = v273;
          v276[1] = v274;
          uint64_t v277 = v275;
          sub_1B6345178(v228, (unsigned __int16 **)v276, (uint64_t)v282);
          sub_1B634507C((char *)v21);
          ecs_stack_allocator_pop_snapshot(v217);
          if (v218)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 376));
          }
          swift_release();
          uint64_t v8 = v216 + 1;
          if (v216 + 1 == v215)
          {
            sub_1B632F170(v249);
            return sub_1B632F170(v249);
          }
        }
        uint64_t v119 = v231;
        if (v231 == v222) {
          goto LABEL_116;
        }
        v221 -= v231;
        while (1)
        {
          v291[5] = v226;
          v291[6] = v21;
          v291[7] = v228;
          v291[8] = v221 + v119;
          uint64_t v231 = v119;
          v291[9] = v119;
          uint64_t v120 = *(void *)(v227 + 400);
          LODWORD(v245) = *(_DWORD *)(v227 + 408);
          LODWORD(v244) = *(unsigned __int8 *)(v227 + 412);
          uint64_t v121 = *(void **)(v227 + 416);
          LODWORD(v241) = *(unsigned __int8 *)(v227 + 424);
          uint64_t v242 = *(char **)(v227 + 432);
          uint64_t v243 = v121;
          uint64_t v122 = v233;
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v233 + 40));
          uint64_t v123 = *(void *)(v122 + 48);
          if (*(void *)(v123 + 16) && (unint64_t v124 = sub_1B62C1A30(*(void *)(v120 + 32)), (v125 & 1) != 0))
          {
            uint64_t v126 = (uint64_t *)(*(void *)(v123 + 56) + 24 * v124);
            uint64_t v128 = *v126;
            uint64_t v127 = v126[1];
            uint64_t v129 = v126[2];
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v246 = v129;
            swift_bridgeObjectRetain();
            uint64_t v130 = v233;
          }
          else
          {
            uint64_t v130 = v233;
            uint64_t v128 = sub_1B62B6A68(a1, v120);
            uint64_t v127 = v131;
            uint64_t v246 = v132;
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v130 + 40));
          uint64_t v134 = *(void *)(v127 + 16);
          if (v134)
          {
            long long v135 = (void *)thread_worker_index(&thread_worker_index, v133);
            int v136 = *(unsigned __int8 *)(a1 + v219);
            uint64_t v240 = v128;
            if (v136 == 4)
            {
              uint64_t v137 = *(void *)(a1 + 216);
              if (*(unsigned char *)(a1 + 225) == 1) {
                BOOL v138 = v137 <= 1;
              }
              else {
                BOOL v138 = v137 <= 0;
              }
              char v139 = !v138;
            }
            else
            {
              char v139 = 1;
            }
            uint64_t v140 = *(void *)(*(void *)(a1 + v220) + 8 * *v135 + 8);
            if (v241 != 2) {
              char v139 = v241;
            }
            uint64_t v292 = v120;
            int v293 = (int)v245;
            char v294 = (char)v244;
            uint64_t v295 = v243;
            char v296 = v139;
            uint64_t v297 = v242;
            swift_retain();
            swift_retain();
            sub_1B62C921C(a1, v140, (uint64_t)&v292, (int *)(v127 + 32), v134, (uint64_t)v251);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            sub_1B62D7990((uint64_t)v251, (uint64_t)v259, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
            if (*(void *)&v259[0])
            {
              if (v265 >= 1)
              {
                uint64_t v237 = v262;
                if (v262)
                {
                  uint64_t v141 = v264;
                  uint64_t v241 = v264[4];
                  LODWORD(v240) = *(unsigned __int8 *)(v263
                                                     + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
                  v278[0] = v259[0];
                  v278[1] = v259[1];
                  uint64_t v279 = v260;
                  uint64_t v235 = v264 + 6;
                  uint64_t v236 = v261;
                  uint64_t v234 = v264 + 8;
                  int v223 = off_1F0F76618;
                  swift_retain();
                  uint64_t v142 = v141;
                  swift_retain();
                  swift_retain();
                  uint64_t v143 = 0;
                  uint64_t v243 = v141;
                  while (1)
                  {
                    __int16 v144 = (unsigned int *)(v236 + 48 * v143);
                    unint64_t v145 = *v144;
                    char v245 = (void *)v144[1];
                    uint64_t v146 = (char *)*((void *)v144 + 2);
                    uint64_t v147 = *((void *)v144 + 3);
                    uint64_t v148 = *((void *)v144 + 5);
                    uint64_t v246 = *((void *)v144 + 4);
                    uint64_t v238 = v147;
                    uint64_t v239 = v143;
                    uint64_t v242 = v146;
                    if (v240)
                    {
                      uint64_t v149 = *(os_unfair_lock_s **)(v148 + 376);
                      swift_retain();
                      os_unfair_lock_lock(v149);
                      os_unfair_lock_lock(*(os_unfair_lock_t *)(v148 + 344));
                    }
                    else
                    {
                      swift_retain();
                    }
                    ecs_stack_allocator_push_snapshot(v241);
                    sub_1B62D7990((uint64_t)v235, (uint64_t)v291, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
                    uint64_t v150 = v142[4];
                    uint64_t v151 = *(void *)(*(void *)(*(void *)(*(void *)(v148 + 40) + 16) + 32) + 16) + 1;
                    swift_retain();
                    uint64_t v152 = v150;
                    int v153 = v243;
                    v153[6] = (uint64_t)ecs_stack_allocator_allocate(v152, 48 * v151, 8);
                    v153[7] = v151;
                    uint64_t v154 = v234;
                    v234[1] = 0;
                    v154[2] = 0;
                    void *v154 = 0;
                    swift_release();
                    int v244 = (void *)v148;
                    uint64_t v155 = *(void *)(v148 + 48);
                    uint64_t v156 = *(void *)(v155 + 16);
                    if (!v242) {
                      break;
                    }
                    if (v156)
                    {
                      uint64_t v157 = v155 + 56;
                      while (*(ValueMetadata **)(v157 - 24) != &type metadata for EmitterDescription)
                      {
                        v157 += 40;
                        if (!--v156) {
                          goto LABEL_154;
                        }
                      }
                      uint64_t v162 = v157 - 8;
                      uint64_t v161 = *(void *)(v157 - 8);
                      uint64_t v160 = *(void *)(v162 + 8);
                      if (v161 <= 1) {
                        uint64_t v161 = 1;
                      }
                      uint64_t v163 = v244;
                      uint64_t v232 = v244[16] + v160;
                      uint64_t v230 = (void *)(v232 + v244[30] * v161);
                      uint64_t v164 = v246;
                      uint64_t v165 = 11 * v246;
                      uint64_t v159 = ecs_stack_allocator_allocate(v153[4], 88 * v246, 8);
                      uint64_t v224 = &v159[v165];
                      sub_1B6916648(v242, v164, v232, (uint64_t)v159);
                      uint64_t v247 = 0;
                      uint64_t v248 = 0;
                      swift_unownedRetainStrong();
                      swift_unownedRetain();
                      swift_release();
                      int v166 = (void *)swift_allocObject();
                      uint64_t v167 = v238;
                      v166[2] = v242;
                      v166[3] = v167;
                      v166[4] = v164;
                      sub_1B62D7990((uint64_t)&v247, (uint64_t)(v166 + 5), (unint64_t *)&unk_1EB97E910, (uint64_t)&type metadata for PackedRewriter);
                      uint64_t v169 = v223;
                      uint64_t v168 = v224;
                      v166[7] = v159;
                      v166[8] = v168;
                      uint64_t v170 = v230;
                      v166[9] = v232;
                      v166[10] = v170;
                      v166[11] = &type metadata for EmitterDescription;
                      v166[12] = v169;
                      v166[13] = &type metadata for EmitterDescription;
                      v166[14] = v163;
                      uint64_t v171 = v242;
                      uint64_t v172 = v243[8];
                      int v173 = (void *)(v243[6] + 48 * v172);
                      *int v173 = &type metadata for EmitterDescription;
                      v173[1] = v169;
                      v173[2] = &type metadata for EmitterDescription;
                      v173[3] = v159;
                      v173[4] = sub_1B69167D8;
                      v173[5] = v166;
                      uint64_t v243[8] = v172 + 1;
                      if (!v171) {
                        goto LABEL_182;
                      }
                    }
                    else
                    {
                      uint64_t v159 = 0;
                    }
LABEL_163:
                    if (v246)
                    {
                      uint64_t v174 = 0;
                      char v245 = v159 + 3;
                      do
                      {
                        uint64_t v175 = *(void *)(v245[11 * v174] + 16);
                        if (v175)
                        {
                          uint64_t v176 = swift_bridgeObjectRetain();
                          for (uint64_t k = 0; k != v175; ++k)
                          {
                            double v180 = MEMORY[0x1F4188790](v176, v177);
                            uint64_t v209 = v181;
                            uint64_t v210 = a1;
                            double v211 = v180;
                            BOOL v182 = LODWORD(v180) == -1 && HIDWORD(v180) == 0;
                            if (!v182 && (LODWORD(v180) & 0x80000000) == 0 && v7[1] > SLODWORD(v180))
                            {
                              uint64_t v183 = *(unsigned int *)(*v7 + SLODWORD(v180) * (uint64_t)v179 + 8);
                              if (HIDWORD(v180) == -1 || v183 == HIDWORD(v180))
                              {
                                uint64_t v185 = (unsigned int *)(*v7 + SLODWORD(v180) * (uint64_t)v179);
                                uint64_t v176 = sub_1B63210A4(*(void *)(*(void *)(a1 + 136) + 8 * (int)*v185 + 32), a1, *v185 | ((unint64_t)*((unsigned __int16 *)v185 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v185 + 2) << 32), v183, (void (*)(unsigned char *))sub_1B6916A2C, (uint64_t)v208);
                              }
                            }
                          }
                          swift_bridgeObjectRelease();
                        }
                        ++v174;
                      }
                      while (v174 != v246);
                    }
LABEL_183:
                    uint64_t v142 = v243;
                    sub_1B6345178(v243, (unsigned __int16 **)v278, (uint64_t)v291);
                    uint64_t v186 = (uint64_t)v244;
                    if (*(void *)(v142[13] + 16))
                    {
                      uint64_t v187 = swift_bridgeObjectRetain();
                      sub_1B639147C(v187, v186);
                      swift_bridgeObjectRelease();
                      char v188 = swift_isUniquelyReferenced_nonNull_native();
                      int v189 = (void *)v142[13];
                      if (v188)
                      {
                        uint64_t v190 = v189[2];
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                          int v189 = sub_1B68C0C6C(0, v190, 1, v189);
                        }
                        sub_1B63B29DC();
                        swift_arrayDestroy();
                        if (v190)
                        {
                          uint64_t v191 = v189[2] - v190;
                          if (v191 < 0)
                          {
LABEL_225:
                            LODWORD(v211) = 0;
                            uint64_t v210 = 1046;
                            LOBYTE(v209) = 2;
                            uint64_t result = (uint64_t *)sub_1B6E32C88();
                            __break(1u);
                            return result;
                          }
                          memmove(v189 + 4, &v189[9 * v190 + 4], 72 * v191);
                          _OWORD v189[2] = v191;
                        }
                        v142[13] = v189;
                        uint64_t v186 = (uint64_t)v244;
                      }
                      else
                      {
                        uint64_t v192 = (void *)MEMORY[0x1E4FBC860];
                        if (v189[3] >= 2uLL)
                        {
                          sub_1B681C594();
                          uint64_t v192 = (void *)swift_allocObject();
                          size_t v193 = j__malloc_size(v192);
                          v192[2] = 0;
                          v192[3] = 2 * ((uint64_t)(v193 - 32) / 72);
                        }
                        v142[13] = v192;
                        swift_bridgeObjectRelease();
                      }
                      if (*(unsigned __int8 *)(v142[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
                         - 1 >= 2)
                      {
                        uint64_t v194 = *(char **)(v186 + 232);
                        uint64_t v195 = *(char **)(v186 + 256);
                        if (v194 == v195)
                        {
                          long long v196 = *(char **)(v186 + 240);
                        }
                        else
                        {
                          sub_1B666018C(v195, v194);
                          uint64_t v195 = *(char **)(v186 + 232);
                          long long v196 = *(char **)(v186 + 240);
                          if (v196 == v195)
                          {
                            long long v196 = 0;
                            uint64_t v195 = 0;
                            *(void *)(v186 + 232) = 0;
                            *(void *)(v186 + 240) = 0;
                          }
                        }
                        *(void *)(v186 + 248) = v196;
                        *(void *)(v186 + 256) = v195;
                      }
                    }
                    ecs_stack_allocator_pop_snapshot(v241);
                    if (v240)
                    {
                      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v186 + 344));
                      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v186 + 376));
                    }
                    swift_release();
                    uint64_t v143 = v239 + 1;
                    if (v239 + 1 == v237)
                    {
                      sub_1B632F170(v251);
                      goto LABEL_221;
                    }
                  }
                  if (v156)
                  {
                    uint64_t v158 = (void *)(v155 + 56);
                    do
                    {
                      if ((ValueMetadata *)*(v158 - 3) == &type metadata for EmitterDescription)
                      {
                        uint64_t v159 = (void *)(v244[16] + *v158);
                        goto LABEL_182;
                      }
                      v158 += 5;
                      --v156;
                    }
                    while (v156);
LABEL_154:
                    uint64_t v159 = 0;
                    if (v242) {
                      goto LABEL_163;
                    }
                  }
                  else
                  {
                    uint64_t v159 = 0;
                  }
LABEL_182:
                  if (v145 != v245)
                  {
                    uint64_t v246 = (uint64_t)(v159 + 3);
                    do
                    {
                      uint64_t v197 = *(void *)(*(void *)(v246 + 88 * v145) + 16);
                      if (v197)
                      {
                        uint64_t v198 = swift_bridgeObjectRetain();
                        for (uint64_t m = 0; m != v197; ++m)
                        {
                          double v202 = MEMORY[0x1F4188790](v198, v199);
                          uint64_t v209 = v203;
                          uint64_t v210 = a1;
                          double v211 = v202;
                          BOOL v204 = LODWORD(v202) == -1 && HIDWORD(v202) == 0;
                          if (!v204 && (LODWORD(v202) & 0x80000000) == 0 && v7[1] > SLODWORD(v202))
                          {
                            uint64_t v205 = *(unsigned int *)(*v7 + SLODWORD(v202) * (uint64_t)v201 + 8);
                            if (HIDWORD(v202) == -1 || v205 == HIDWORD(v202))
                            {
                              uint64_t v207 = (unsigned int *)(*v7 + SLODWORD(v202) * (uint64_t)v201);
                              uint64_t v198 = sub_1B63210A4(*(void *)(*(void *)(a1 + 136) + 8 * (int)*v207 + 32), a1, *v207 | ((unint64_t)*((unsigned __int16 *)v207 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v207 + 2) << 32), v205, (void (*)(unsigned char *))sub_1B62CF47C, (uint64_t)v208);
                            }
                          }
                        }
                        swift_bridgeObjectRelease();
                      }
                      ++v145;
                    }
                    while ((void *)v145 != v245);
                  }
                  goto LABEL_183;
                }
              }
LABEL_221:
              sub_1B632F170(v251);
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
          }
          uint64_t v119 = v231 + 1;
          uint64_t v21 = v229;
          if ((_UNKNOWN **)(v231 + 1) == v222) {
            goto LABEL_116;
          }
        }
      }
    }
    return sub_1B632F170(v249);
  }
  return result;
}

uint64_t sub_1B63210A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned char *), uint64_t a6)
{
  return sub_1B62C5BD0(a1, a2, a3, a4, a5, a6, (unint64_t *)&qword_1EB97FAA0, (uint64_t)&protocol descriptor for ParticleDefaultRendererable, (void (*)(_OWORD *, unsigned char *))sub_1B62C15C4, &qword_1EB97FAB0);
}

uint64_t sub_1B63210F4(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 45);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v47 = v4;
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_44:
    uint64_t v39 = swift_bridgeObjectRetain();
    sub_1B631F330(v39, (v3 & 1) == 0);
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v7 = v4 + 32;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  char v46 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v10 = (int *)(v7 + 8 * v8);
    int v11 = v10[1];
    uint64_t v12 = *v10;
    if (v12 == -1 && v11 == 0) {
      goto LABEL_4;
    }
    if ((v12 & 0x80000000) != 0) {
      goto LABEL_4;
    }
    uint64_t v14 = v6[1];
    if (v14 <= v12) {
      goto LABEL_4;
    }
    uint64_t v15 = *v6;
    if (v11 != -1 && *(_DWORD *)(*v6 + 12 * (int)v12 + 8) != v11) {
      goto LABEL_4;
    }
    uint64_t v17 = *(void *)(*(void *)(a1 + 136) + 8 * *(int *)(v15 + 12 * (int)v12) + 32);
    if ((*(unsigned char *)(v17 + 120) & 1) == 0) {
      goto LABEL_4;
    }
    uint64_t v18 = *(void *)(v17 + 48);
    uint64_t v19 = *(void *)(v18 + 16);
    if (!v19) {
      goto LABEL_4;
    }
    uint64_t v20 = (void *)(v18 + 56);
    while ((ValueMetadata *)*(v20 - 3) != &type metadata for EmitterShape)
    {
      v20 += 5;
      if (!--v19) {
        goto LABEL_4;
      }
    }
    int v45 = v3;
    uint64_t v21 = *(void *)(v17 + 128) + *v20 + 224 * *(__int16 *)(v15 + 12 * (int)v12 + 4);
    long long v22 = *(_OWORD *)(v21 + 176);
    long long v50 = *(_OWORD *)(v21 + 160);
    long long v51 = v22;
    long long v52 = *(_OWORD *)(v21 + 192);
    char v53 = *(unsigned char *)(v21 + 208);
    long long v23 = *(_OWORD *)(v21 + 112);
    v48[6] = *(_OWORD *)(v21 + 96);
    v48[7] = v23;
    long long v24 = *(_OWORD *)(v21 + 144);
    v48[8] = *(_OWORD *)(v21 + 128);
    long long v49 = v24;
    long long v25 = *(_OWORD *)(v21 + 48);
    _OWORD v48[2] = *(_OWORD *)(v21 + 32);
    v48[3] = v25;
    long long v26 = *(_OWORD *)(v21 + 80);
    v48[4] = *(_OWORD *)(v21 + 64);
    v48[5] = v26;
    long long v27 = *(_OWORD *)(v21 + 16);
    v48[0] = *(_OWORD *)v21;
    v48[1] = v27;
    int v28 = DWORD2(v49);
    if (*((void *)&v49 + 1) != 0xFFFFFFFFLL
      && (DWORD2(v49) & 0x80000000) == 0
      && v14 > SDWORD2(v49)
      && (HIDWORD(v49) == -1 || *(_DWORD *)(v15 + 12 * SDWORD2(v49) + 8) == HIDWORD(v49)))
    {
      if (*((void *)v46 + 2))
      {
        uint64_t v30 = v46 + 36;
        uint64_t v31 = *((void *)v46 + 2);
        while (*(v30 - 1) != DWORD2(v49) || *v30 != HIDWORD(v49))
        {
          v30 += 2;
          if (!--v31) {
            goto LABEL_38;
          }
        }
      }
      else
      {
LABEL_38:
        uint64_t v42 = *((void *)v46 + 2);
        int v44 = HIDWORD(v49);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v46 = sub_1B633F784(0, v42 + 1, 1, v46);
        }
        unint64_t v34 = *((void *)v46 + 2);
        unint64_t v33 = *((void *)v46 + 3);
        unint64_t v35 = v34 + 1;
        int v36 = v44;
        if (v34 >= v33 >> 1)
        {
          unint64_t v41 = *((void *)v46 + 2);
          unint64_t v43 = v34 + 1;
          uint64_t v38 = sub_1B633F784(v33 > 1, v34 + 1, 1, v46);
          unint64_t v34 = v41;
          unint64_t v35 = v43;
          int v36 = v44;
          char v46 = v38;
        }
        *((void *)v46 + 2) = v35;
        uint64_t v37 = &v46[8 * v34];
        *((_DWORD *)v37 + 8) = v28;
        *((_DWORD *)v37 + 9) = v36;
        uint64_t v14 = v6[1];
      }
    }
    if (v14 <= v12) {
      break;
    }
    uint64_t v29 = *v6;
    if (v11 != -1 && *(_DWORD *)(v29 + 12 * (int)v12 + 8) != v11) {
      break;
    }
    uint64_t v9 = *(__int16 *)(v29 + 12 * (int)v12 + 4);
    swift_retain();
    sub_1B632A488(v9, (uint64_t)v48);
    swift_release();
    int v3 = v45;
LABEL_4:
    if (++v8 == v5)
    {
      sub_1B62D8C3C((uint64_t)&v47);
      goto LABEL_44;
    }
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B632148C(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 176);
  v43[0] = *(_OWORD *)(v1 + 160);
  v43[1] = v2;
  uint64_t v44 = *(void *)(v1 + 192);
  sub_1B62C9DA8(a1, (uint64_t)v43, 0x200000000, v32);
  sub_1B62D7990((uint64_t)v32, (uint64_t)v33, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v33[0])
  {
    if (v39 > 0)
    {
      uint64_t v28 = v36;
      if (v36)
      {
        int v3 = v38;
        uint64_t v4 = v38[4];
        int v5 = *(unsigned __int8 *)(v37 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v40[0] = v33[0];
        v40[1] = v33[1];
        uint64_t v41 = v34;
        uint64_t v26 = (uint64_t)(v38 + 6);
        uint64_t v27 = v35;
        long long v25 = v38 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        int v24 = v5;
        while (1)
        {
          uint64_t v8 = (unsigned int *)(v27 + 48 * v6);
          uint64_t v30 = *v8;
          uint64_t v31 = v7;
          uint64_t v29 = v8[1];
          uint64_t v10 = (uint64_t *)*((void *)v8 + 2);
          uint64_t v9 = *((void *)v8 + 3);
          uint64_t v12 = *((void *)v8 + 4);
          uint64_t v11 = *((void *)v8 + 5);
          if (v5)
          {
            uint64_t v13 = *(os_unfair_lock_s **)(v11 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v13);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v4);
          sub_1B62D7990(v26, (uint64_t)v42, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v14 = v3[4];
          uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v11 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v3[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
          v3[7] = v15;
          v25[1] = 0;
          v25[2] = 0;
          *long long v25 = 0;
          swift_release();
          uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for TextureShaderAsset, (uint64_t)&off_1F0F7B198, v10, v9, v12, (uint64_t)v3);
          if (v10)
          {
            if (v12)
            {
              uint64_t v17 = v16 + 144;
              int v5 = v24;
              uint64_t v7 = v31;
              do
              {
                v17 += 168;
                uint64_t v18 = swift_bridgeObjectRetain();
                sub_1B66425E0(v18);
                --v12;
              }
              while (v12);
              goto LABEL_18;
            }
          }
          else if (v30 != v29)
          {
            uint64_t v19 = v16 + 168 * v30 + 144;
            uint64_t v20 = v29 - v30;
            int v5 = v24;
            uint64_t v7 = v31;
            do
            {
              v19 += 168;
              uint64_t v21 = swift_bridgeObjectRetain();
              sub_1B66425E0(v21);
              --v20;
            }
            while (v20);
            goto LABEL_18;
          }
          int v5 = v24;
          uint64_t v7 = v31;
LABEL_18:
          sub_1B6345178(v3, (unsigned __int16 **)v40, (uint64_t)v42);
          sub_1B634507C((char *)v11);
          ecs_stack_allocator_pop_snapshot(v4);
          if (v5)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
          }
          swift_release();
          if (++v6 == v28)
          {
            sub_1B632F170(v32);
            sub_1B632F170(v32);
            goto LABEL_22;
          }
        }
      }
    }
    sub_1B632F170(v32);
  }
LABEL_22:
  uint64_t v22 = swift_bridgeObjectRetain();
  sub_1B631F330(v22, 0);
  return swift_bridgeObjectRelease_n();
}

uint64_t *sub_1B63217D8(uint64_t a1)
{
  uint64_t v3 = 0;
  sub_1B636E13C(0, (unint64_t *)&unk_1EB97E720, (void (*)(uint64_t))type metadata accessor for GraphScript);
  uint64_t v104 = v4;
  uint64_t v96 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v95 = (char *)v91 - v6;
  sub_1B636E13C(0, &qword_1EB97E710, (void (*)(uint64_t))type metadata accessor for ParticleUpdateScript);
  uint64_t v103 = v7;
  uint64_t v94 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)v91 - v9;
  sub_1B636E13C(0, &qword_1EB97E700, (void (*)(uint64_t))type metadata accessor for ParticleInitScript);
  uint64_t v12 = v11;
  uint64_t v93 = *((void *)v11 - 1);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)v91 - v14;
  long long v16 = *(_OWORD *)(v1 + 216);
  v152[0] = *(_OWORD *)(v1 + 200);
  v152[1] = v16;
  v91[0] = v1;
  uint64_t v153 = *(void *)(v1 + 232);
  v91[1] = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  sub_1B62C9DA8(a1, (uint64_t)v152, 0x200000000, v115);
  sub_1B62D7990((uint64_t)v115, (uint64_t)v132, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v107 = a1;
  if (*(void *)&v132[0])
  {
    if (v138 >= 1)
    {
      uint64_t v102 = v135;
      if (v135)
      {
        uint64_t v17 = v137;
        uint64_t v112 = v137[4];
        LODWORD(v111) = *(unsigned __int8 *)(v136 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v139[0] = v132[0];
        v139[1] = v132[1];
        uint64_t v140 = v133;
        uint64_t v99 = v137 + 6;
        uint64_t v100 = (void *)v134;
        uint64_t v98 = v137 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v18 = 0;
        uint64_t v101 = v17;
        uint64_t v97 = v10;
        double v114 = v12;
        double v92 = v15;
        do
        {
          uint64_t v19 = (unsigned int *)&v100[6 * v18];
          uint64_t v106 = *v19;
          size_t v105 = (void *)v19[1];
          uint64_t v20 = (uint64_t *)*((void *)v19 + 2);
          uint64_t v108 = *((void *)v19 + 3);
          uint64_t v21 = *((void *)v19 + 4);
          uint64_t v22 = *((void *)v19 + 5);
          uint64_t v113 = v3;
          if (v111)
          {
            long long v23 = *(os_unfair_lock_s **)(v22 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v23);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v112);
          sub_1B62D7990((uint64_t)v99, (uint64_t)v151, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v24 = v17[4];
          uint64_t v25 = *(void *)(*(void *)(*(void *)(*(void *)(v22 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v17[6] = ecs_stack_allocator_allocate(v24, 48 * v25, 8);
          v17[7] = v25;
          uint64_t v26 = v98;
          v98[1] = 0;
          v26[2] = 0;
          *uint64_t v26 = 0;
          swift_release();
          uint64_t v27 = sub_1B62C9024((uint64_t)v12, (uint64_t)&off_1F0F61BF0, v20, v108, v21, (uint64_t)v17);
          uint64_t v28 = v27;
          uint64_t v109 = v22;
          uint64_t v110 = v18;
          if (v20)
          {
            if (v21)
            {
              uint64_t v29 = (uint64_t)v92;
              uint64_t v30 = *(void *)(v93 + 72);
              uint64_t v31 = v107;
              do
              {
                sub_1B691695C(v28, v29, &qword_1EB97E700, (void (*)(uint64_t))type metadata accessor for ParticleInitScript);
                uint64_t v32 = *(void *)(v28 + *((int *)v114 + 15));
                swift_bridgeObjectRetain();
                sub_1B6915474(v29, v32, v31);
                swift_bridgeObjectRelease();
                sub_1B6916900(v29, &qword_1EB97E700, (void (*)(uint64_t))type metadata accessor for ParticleInitScript);
                v28 += v30;
                --v21;
              }
              while (v21);
            }
          }
          else if (v106 != v105)
          {
            uint64_t v33 = (uint64_t)v92;
            uint64_t v34 = *(void *)(v93 + 72);
            uint64_t v35 = (char *)v105 - v106;
            uint64_t v36 = v27 + v34 * v106;
            uint64_t v37 = v107;
            do
            {
              sub_1B691695C(v36, v33, &qword_1EB97E700, (void (*)(uint64_t))type metadata accessor for ParticleInitScript);
              uint64_t v38 = *(void *)(v36 + *((int *)v114 + 15));
              swift_bridgeObjectRetain();
              sub_1B6915474(v33, v38, v37);
              swift_bridgeObjectRelease();
              sub_1B6916900(v33, &qword_1EB97E700, (void (*)(uint64_t))type metadata accessor for ParticleInitScript);
              v36 += v34;
              --v35;
            }
            while (v35);
          }
          uint64_t v3 = v113;
          uint64_t v12 = v114;
          uint64_t v17 = v101;
          sub_1B6345178(v101, (unsigned __int16 **)v139, (uint64_t)v151);
          uint64_t v39 = v109;
          sub_1B634507C((char *)v109);
          ecs_stack_allocator_pop_snapshot(v112);
          if (v111)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 376));
          }
          swift_release();
          uint64_t v18 = v110 + 1;
          uint64_t v10 = v97;
        }
        while ((void *)(v110 + 1) != v102);
        sub_1B632F170(v115);
        a1 = v107;
      }
    }
    uint64_t v40 = v91[0];
    sub_1B632F170(v115);
  }
  else
  {
    uint64_t v40 = v91[0];
  }
  long long v41 = *(_OWORD *)(v40 + 256);
  v149[0] = *(_OWORD *)(v40 + 240);
  v149[1] = v41;
  uint64_t v150 = *(void *)(v40 + 272);
  sub_1B62C9DA8(a1, (uint64_t)v149, 0x200000000, v116);
  sub_1B62D7990((uint64_t)v116, (uint64_t)v125, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v125[0])
  {
    if (v131 >= 1)
    {
      size_t v105 = v128;
      if (v128)
      {
        uint64_t v42 = v130;
        uint64_t v112 = v130[4];
        LODWORD(v111) = *(unsigned __int8 *)(v129 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v141[0] = v125[0];
        v141[1] = v125[1];
        uint64_t v142 = v126;
        uint64_t v100 = v130 + 6;
        uint64_t v101 = v127;
        uint64_t v99 = v130 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v43 = 0;
        uint64_t v102 = v42;
        do
        {
          uint64_t v110 = v43;
          uint64_t v44 = (unsigned int *)&v101[6 * v43];
          uint64_t v108 = *v44;
          uint64_t v106 = v44[1];
          int v45 = (uint64_t *)*((void *)v44 + 2);
          uint64_t v109 = *((void *)v44 + 3);
          uint64_t v47 = *((void *)v44 + 4);
          uint64_t v46 = *((void *)v44 + 5);
          uint64_t v113 = v3;
          if (v111)
          {
            uint64_t v48 = *(os_unfair_lock_s **)(v46 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v48);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v46 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v112);
          sub_1B62D7990((uint64_t)v100, (uint64_t)v148, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v49 = v42[4];
          uint64_t v50 = *(void *)(*(void *)(*(void *)(*(void *)(v46 + 40) + 16) + 32) + 16) + 1;
          double v114 = (char *)v46;
          swift_retain();
          v42[6] = ecs_stack_allocator_allocate(v49, 48 * v50, 8);
          v42[7] = v50;
          long long v51 = v99;
          v99[1] = 0;
          v51[2] = 0;
          *long long v51 = 0;
          swift_release();
          uint64_t v52 = v103;
          uint64_t v53 = sub_1B62C9024(v103, (uint64_t)&off_1F0F61BF0, v45, v109, v47, (uint64_t)v42);
          uint64_t v54 = v53;
          if (v45)
          {
            if (v47)
            {
              uint64_t v55 = *(void *)(v94 + 72);
              uint64_t v56 = v107;
              do
              {
                sub_1B691695C(v54, (uint64_t)v10, &qword_1EB97E710, (void (*)(uint64_t))type metadata accessor for ParticleUpdateScript);
                uint64_t v57 = *(void *)(v54 + *(int *)(v52 + 60));
                swift_bridgeObjectRetain();
                sub_1B6915A78((uint64_t)v10, v57, v56, (uint64_t (*)(void, double))type metadata accessor for ParticleUpdateScript, type metadata accessor for ParticleUpdateScript, type metadata accessor for ParticleUpdateScript);
                swift_bridgeObjectRelease();
                sub_1B6916900((uint64_t)v10, &qword_1EB97E710, (void (*)(uint64_t))type metadata accessor for ParticleUpdateScript);
                v54 += v55;
                --v47;
              }
              while (v47);
            }
          }
          else if (v108 != v106)
          {
            uint64_t v58 = *(void *)(v94 + 72);
            uint64_t v59 = v106 - v108;
            uint64_t v60 = v53 + v58 * v108;
            uint64_t v61 = v107;
            do
            {
              sub_1B691695C(v60, (uint64_t)v10, &qword_1EB97E710, (void (*)(uint64_t))type metadata accessor for ParticleUpdateScript);
              uint64_t v62 = *(void *)(v60 + *(int *)(v52 + 60));
              swift_bridgeObjectRetain();
              sub_1B6915A78((uint64_t)v10, v62, v61, (uint64_t (*)(void, double))type metadata accessor for ParticleUpdateScript, type metadata accessor for ParticleUpdateScript, type metadata accessor for ParticleUpdateScript);
              swift_bridgeObjectRelease();
              sub_1B6916900((uint64_t)v10, &qword_1EB97E710, (void (*)(uint64_t))type metadata accessor for ParticleUpdateScript);
              v60 += v58;
              --v59;
            }
            while (v59);
          }
          uint64_t v42 = v102;
          uint64_t v3 = v113;
          sub_1B6345178(v102, (unsigned __int16 **)v141, (uint64_t)v148);
          uint64_t v63 = v114;
          sub_1B634507C(v114);
          ecs_stack_allocator_pop_snapshot(v112);
          if (v111)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v63 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v63 + 47));
          }
          swift_release();
          uint64_t v43 = v110 + 1;
        }
        while ((void *)(v110 + 1) != v105);
        sub_1B632F170(v116);
        a1 = v107;
        uint64_t v40 = v91[0];
      }
    }
    sub_1B632F170(v116);
  }
  uint64_t v147 = *(void *)(v40 + 312);
  long long v64 = *(_OWORD *)(v40 + 296);
  v146[0] = *(_OWORD *)(v40 + 280);
  v146[1] = v64;
  sub_1B62C9DA8(a1, (uint64_t)v146, 0x200000000, v117);
  uint64_t result = (uint64_t *)sub_1B62D7990((uint64_t)v117, (uint64_t)v118, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v118[0])
  {
    if (v124 >= 1)
    {
      uint64_t v106 = v121;
      if (v121)
      {
        uint64_t v66 = v123;
        uint64_t v67 = v123[4];
        LODWORD(v112) = *(unsigned __int8 *)(v122 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v143[0] = v118[0];
        v143[1] = v118[1];
        uint64_t v144 = v119;
        uint64_t v101 = v123 + 6;
        uint64_t v102 = v120;
        uint64_t v100 = v123 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v68 = 0;
        size_t v105 = v66;
        uint64_t v103 = v67;
        do
        {
          uint64_t v69 = (unsigned int *)&v102[6 * v68];
          uint64_t v109 = *v69;
          uint64_t v108 = v69[1];
          uint64_t v70 = (uint64_t *)*((void *)v69 + 2);
          uint64_t v110 = *((void *)v69 + 3);
          uint64_t v72 = *((void *)v69 + 4);
          uint64_t v71 = (char *)*((void *)v69 + 5);
          uint64_t v113 = v3;
          double v114 = v71;
          if (v112)
          {
            uint64_t v73 = (os_unfair_lock_s *)*((void *)v114 + 47);
            swift_retain_n();
            uint64_t v71 = v114;
            os_unfair_lock_lock(v73);
            os_unfair_lock_lock(*((os_unfair_lock_t *)v71 + 43));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v67);
          sub_1B62D7990((uint64_t)v101, (uint64_t)v145, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v74 = v66[4];
          uint64_t v75 = *(void *)(*(void *)(*(void *)(*((void *)v71 + 5) + 16) + 32) + 16) + 1;
          swift_retain();
          v66[6] = ecs_stack_allocator_allocate(v74, 48 * v75, 8);
          v66[7] = v75;
          int v76 = v100;
          v100[1] = 0;
          v76[2] = 0;
          *int v76 = 0;
          swift_release();
          uint64_t v77 = v104;
          uint64_t v78 = sub_1B62C9024(v104, (uint64_t)&off_1F0F61BF0, v70, v110, v72, (uint64_t)v66);
          uint64_t v79 = v78;
          uint64_t v111 = v68;
          if (v70)
          {
            if (v72)
            {
              uint64_t v80 = (uint64_t)v95;
              uint64_t v81 = *(void *)(v96 + 72);
              uint64_t v82 = v107;
              do
              {
                sub_1B691695C(v79, v80, (unint64_t *)&unk_1EB97E720, (void (*)(uint64_t))type metadata accessor for GraphScript);
                uint64_t v83 = *(void *)(v79 + *(int *)(v77 + 60));
                swift_bridgeObjectRetain();
                sub_1B6915A78(v80, v83, v82, (uint64_t (*)(void, double))type metadata accessor for GraphScript, type metadata accessor for GraphScript, type metadata accessor for GraphScript);
                swift_bridgeObjectRelease();
                sub_1B6916900(v80, (unint64_t *)&unk_1EB97E720, (void (*)(uint64_t))type metadata accessor for GraphScript);
                v79 += v81;
                --v72;
              }
              while (v72);
            }
          }
          else if (v109 != v108)
          {
            uint64_t v84 = (uint64_t)v95;
            uint64_t v85 = *(void *)(v96 + 72);
            uint64_t v86 = v108 - v109;
            uint64_t v87 = v78 + v85 * v109;
            uint64_t v88 = v107;
            do
            {
              sub_1B691695C(v87, v84, (unint64_t *)&unk_1EB97E720, (void (*)(uint64_t))type metadata accessor for GraphScript);
              uint64_t v89 = *(void *)(v87 + *(int *)(v77 + 60));
              swift_bridgeObjectRetain();
              sub_1B6915A78(v84, v89, v88, (uint64_t (*)(void, double))type metadata accessor for GraphScript, type metadata accessor for GraphScript, type metadata accessor for GraphScript);
              swift_bridgeObjectRelease();
              sub_1B6916900(v84, (unint64_t *)&unk_1EB97E720, (void (*)(uint64_t))type metadata accessor for GraphScript);
              v87 += v85;
              --v86;
            }
            while (v86);
          }
          uint64_t v66 = v105;
          uint64_t v3 = v113;
          sub_1B6345178(v105, (unsigned __int16 **)v143, (uint64_t)v145);
          uint64_t v90 = v114;
          sub_1B634507C(v114);
          uint64_t v67 = v103;
          ecs_stack_allocator_pop_snapshot(v103);
          if (v112)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v90 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v90 + 47));
          }
          swift_release();
          uint64_t v68 = v111 + 1;
        }
        while (v111 + 1 != v106);
        sub_1B632F170(v117);
      }
    }
    return sub_1B632F170(v117);
  }
  return result;
}

uint64_t *sub_1B6322618(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 320);
  long long v3 = *(_OWORD *)(v1 + 336);
  uint64_t v313 = *(void *)(v1 + 352);
  v312[0] = v2;
  v312[1] = v3;
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  sub_1B62C9DA8(a1, (uint64_t)v312, 0x200000000, v258);
  uint64_t result = (uint64_t *)sub_1B62D7990((uint64_t)v258, (uint64_t)v281, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v281[0]) {
    return result;
  }
  long long v288 = v281[0];
  long long v289 = v281[1];
  uint64_t v290 = v282;
  if (v287 < 1) {
    return sub_1B632F170(v258);
  }
  uint64_t v218 = v284;
  if (!v284) {
    return sub_1B632F170(v258);
  }
  uint64_t v217 = v283;
  uint64_t v221 = v286[4];
  int v220 = *(unsigned __int8 *)(v285 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v216 = (uint64_t)(v286 + 6);
  uint64_t v224 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
  int v222 = v286;
  uint64_t v223 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
  uint64_t v215 = v286 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v6 = 0;
  uint64_t v228 = v4;
  while (1)
  {
    uint64_t v219 = v6;
    uint64_t v7 = (unsigned int *)(v217 + 48 * v6);
    uint64_t v250 = *v7;
    uint64_t v230 = v7[1];
    uint64_t v8 = *((void *)v7 + 3);
    uint64_t v226 = (uint64_t *)*((void *)v7 + 2);
    uint64_t v10 = *((void *)v7 + 4);
    uint64_t v9 = *((void *)v7 + 5);
    if (v220)
    {
      uint64_t v11 = *(os_unfair_lock_s **)(v9 + 376);
      swift_retain();
      os_unfair_lock_lock(v11);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v221);
    sub_1B62D7990(v216, (uint64_t)v297, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v12 = v222[4];
    uint64_t v256 = v9;
    uint64_t v13 = *(void *)(*(void *)(*(void *)(*(void *)(v9 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v222[6] = ecs_stack_allocator_allocate(v12, 48 * v13, 8);
    v222[7] = v13;
    uint64_t v14 = v9;
    v215[1] = 0;
    _OWORD v215[2] = 0;
    *uint64_t v215 = 0;
    swift_release();
    sub_1B62C9024((uint64_t)&type metadata for TextureFileAsset, (uint64_t)&off_1F0F6F8C8, v226, v8, v10, (uint64_t)v222);
    if (v226)
    {
      if (v10)
      {
        uint64_t v15 = 0;
        uint64_t v225 = v10;
        while (1)
        {
          uint64_t v231 = v15;
          uint64_t v251 = v226[v15];
          uint64_t v16 = *(void *)(v227 + 440);
          int v252 = *(_DWORD *)(v227 + 448);
          uint64_t v17 = *(void *)(v227 + 456);
          int v18 = *(unsigned __int8 *)(v227 + 464);
          uint64_t v19 = *(void *)(v227 + 472);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 40));
          uint64_t v20 = *(void *)(v4 + 48);
          if (!*(void *)(v20 + 16)) {
            goto LABEL_17;
          }
          unint64_t v21 = sub_1B62C1A30(*(void *)(v16 + 32));
          if (v22)
          {
            uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 24 * v21 + 8);
            uint64_t v24 = v4;
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
LABEL_17:
            sub_1B62B6A68(a1, v16);
            uint64_t v23 = v25;
            uint64_t v24 = v4;
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 40));
          uint64_t v27 = *(void *)(v23 + 16);
          if (!v27) {
            break;
          }
          uint64_t v28 = (void *)thread_worker_index(&thread_worker_index, v26);
          if (*(unsigned char *)(a1 + v223) == 4)
          {
            uint64_t v30 = *(void *)(a1 + 216);
            uint64_t v31 = v17;
            int v32 = v252;
            if (*(unsigned char *)(a1 + 225) == 1) {
              BOOL v33 = v30 <= 1;
            }
            else {
              BOOL v33 = v30 <= 0;
            }
            char v34 = !v33;
          }
          else
          {
            int v32 = v252;
            char v34 = 1;
            uint64_t v31 = v17;
          }
          uint64_t v35 = *(void *)(*(void *)(a1 + v224) + 8 * *v28 + 8);
          if (v18 != 2) {
            char v34 = v18;
          }
          uint64_t v299 = v16;
          int v300 = v32;
          char v301 = v29;
          uint64_t v302 = v31;
          char v303 = v34;
          uint64_t v304 = v19;
          swift_retain();
          swift_retain();
          sub_1B62C921C(a1, v35, (uint64_t)&v299, (int *)(v23 + 32), v27, (uint64_t)v259);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          sub_1B62D7990((uint64_t)v259, (uint64_t)v261, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
          if (!*(void *)&v261[0]) {
            goto LABEL_105;
          }
          long long v268 = v261[0];
          long long v269 = v261[1];
          uint64_t v270 = v262;
          uint64_t v4 = v228;
          uint64_t v14 = v256;
          if (v267 >= 1)
          {
            uint64_t v240 = v264;
            if (v264)
            {
              uint64_t v36 = v266;
              uint64_t v238 = v263;
              uint64_t v37 = v266[4];
              int v244 = *(unsigned __int8 *)(v265 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
              uint64_t v232 = v266 + 8;
              uint64_t v234 = (uint64_t)(v266 + 6);
              swift_retain();
              swift_retain();
              swift_retain();
              uint64_t v38 = 0;
              uint64_t v246 = v36;
              uint64_t v236 = v37;
              while (1)
              {
                uint64_t v242 = v38;
                uint64_t v39 = (unsigned int *)(v238 + 48 * v38);
                uint64_t v41 = *v39;
                uint64_t v40 = v39[1];
                uint64_t v42 = *((void *)v39 + 3);
                uint64_t v248 = (uint64_t *)*((void *)v39 + 2);
                uint64_t v44 = *((void *)v39 + 4);
                uint64_t v43 = *((void *)v39 + 5);
                if (v244)
                {
                  int v45 = *(os_unfair_lock_s **)(v43 + 376);
                  swift_retain();
                  os_unfair_lock_lock(v45);
                  os_unfair_lock_lock(*(os_unfair_lock_t *)(v43 + 344));
                }
                else
                {
                  swift_retain();
                }
                ecs_stack_allocator_push_snapshot(v37);
                sub_1B62D7990(v234, (uint64_t)v298, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
                uint64_t v46 = v246[4];
                uint64_t v47 = *(void *)(*(void *)(*(void *)(*(void *)(v43 + 40) + 16) + 32) + 16) + 1;
                swift_retain();
                v246[6] = ecs_stack_allocator_allocate(v46, 48 * v47, 8);
                v246[7] = v47;
                v232[1] = 0;
                v232[2] = 0;
                *uint64_t v232 = 0;
                swift_release();
                uint64_t v253 = sub_1B62C9024((uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, v248, v42, v44, (uint64_t)v246);
                sub_1B62C9024((uint64_t)&type metadata for MaterialRuntime, (uint64_t)&off_1F0F68E78, v248, v42, v44, (uint64_t)v246);
                if (v248)
                {
                  uint64_t v14 = v256;
                  if (v44)
                  {
                    uint64_t v48 = 0;
                    while (1)
                    {
                      uint64_t v49 = v253 + 104 * v48;
                      uint64_t v51 = *(void *)(v49 + 24);
                      uint64_t v50 = v49 + 24;
                      if (v51)
                      {
                        uint64_t v52 = v248[v48];
                        uint64_t v53 = *(void *)(v50 + 8);
                        uint64_t v54 = *(void *)(v14 + 16);
                        char v55 = *(unsigned char *)(v14 + 184);
                        swift_retain();
                        if (v55) {
                          goto LABEL_208;
                        }
                        uint64_t v56 = *(void *)(v14 + 168);
                        uint64_t ObjectType = swift_getObjectType();
                        uint64_t v58 = *(unsigned int *)(v56 + 4 * v251);
                        uint64_t v59 = *(unsigned int *)(*(void *)(v54 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                              + 12 * (int)v58
                                              + 8);
                        swift_unknownObjectRetain();
                        swift_release();
                        if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v58 | (v59 << 32), ObjectType, v53))
                        {
                          uint64_t v60 = *(void *)(v43 + 192);
                          swift_retain();
                          if (v60)
                          {
                            uint64_t v61 = *(void *)(v43 + 208);
                            uint64_t v62 = 8 * (v52 >> 6);
                            *(void *)(v60 + v62) |= 1 << v52;
                            *(void *)(v61 + v62) &= ~(1 << v52);
                          }
                          uint64_t v14 = v256;
                          if (*(unsigned char *)(*(void *)(v43 + 40) + 213) == 1)
                          {
                            uint64_t v63 = *(void *)(v43 + 48);
                            uint64_t v64 = *(void *)(v63 + 16);
                            if (v64)
                            {
                              uint64_t v65 = (uint64_t *)(v63 + 56);
                              while ((ValueMetadata *)*(v65 - 3) != &type metadata for PropagateDirtiness)
                              {
                                v65 += 5;
                                if (!--v64) {
                                  goto LABEL_53;
                                }
                              }
                              uint64_t v66 = *v65;
                            }
                            else
                            {
LABEL_53:
                              uint64_t v66 = 0;
                            }
                            uint64_t v67 = *(void *)(v43 + 128);
                            char v68 = *(unsigned char *)(v43 + 184);
                            uint64_t v69 = swift_retain();
                            if (v68) {
                              goto LABEL_208;
                            }
                            uint64_t v70 = v67 + v66;
                            unsigned int v71 = *(_DWORD *)(*(void *)(v43 + 168) + 4 * v52);
                            uint64_t v72 = (unsigned int *)(v70 + 8 * v52);
                            uint64_t v73 = *(unsigned int *)(*(void *)(v69 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                                  + 12 * (int)v71
                                                  + 8);
                            swift_release();
                            uint64_t v74 = *v72;
                            uint64_t v75 = v72[1];
                            if (v74 != -1 || v75 != 0) {
                              sub_1B6398CA0(v257, v71 | (unint64_t)(v73 << 32), v74 | (v75 << 32));
                            }
                          }
                          swift_unknownObjectRelease();
                          swift_release();
                        }
                        else
                        {
                          swift_unknownObjectRelease();
                          uint64_t v14 = v256;
                        }
                      }
                      if (++v48 == v44) {
                        goto LABEL_63;
                      }
                    }
                  }
                  goto LABEL_63;
                }
                uint64_t v77 = v40;
                uint64_t v14 = v256;
                if (v41 != v40) {
                  break;
                }
LABEL_63:
                v295[0] = v268;
                v295[1] = v269;
                uint64_t v296 = v270;
                sub_1B6345178(v246, (unsigned __int16 **)v295, (uint64_t)v298);
                if (*(void *)(v246[13] + 16))
                {
                  uint64_t v78 = swift_bridgeObjectRetain();
                  sub_1B639147C(v78, v43);
                  swift_bridgeObjectRelease();
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v80 = (void *)v246[13];
                  if (isUniquelyReferenced_nonNull_native)
                  {
                    uint64_t v81 = v80[2];
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      uint64_t v80 = sub_1B68C0C6C(0, v81, 1, v80);
                    }
                    sub_1B63B29DC();
                    swift_arrayDestroy();
                    if (v81)
                    {
                      uint64_t v82 = v80[2] - v81;
                      if (v82 < 0) {
                        goto LABEL_209;
                      }
                      memmove(v80 + 4, &v80[9 * v81 + 4], 72 * v82);
                      v80[2] = v82;
                    }
                    v246[13] = v80;
                    uint64_t v14 = v256;
                  }
                  else
                  {
                    uint64_t v111 = (void *)MEMORY[0x1E4FBC860];
                    if (v80[3] >= 2uLL)
                    {
                      sub_1B681C594();
                      uint64_t v111 = (void *)swift_allocObject();
                      size_t v112 = j__malloc_size(v111);
                      v111[2] = 0;
                      v111[3] = 2 * ((uint64_t)(v112 - 32) / 72);
                    }
                    v246[13] = v111;
                    swift_bridgeObjectRelease();
                  }
                  if (*(unsigned __int8 *)(v246[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
                     - 1 >= 2)
                  {
                    uint64_t v113 = *(char **)(v43 + 232);
                    double v114 = *(char **)(v43 + 256);
                    if (v113 == v114)
                    {
                      BOOL v115 = *(char **)(v43 + 240);
                    }
                    else
                    {
                      sub_1B666018C(v114, v113);
                      double v114 = *(char **)(v43 + 232);
                      BOOL v115 = *(char **)(v43 + 240);
                      if (v115 == v114)
                      {
                        BOOL v115 = 0;
                        double v114 = 0;
                        *(void *)(v43 + 232) = 0;
                        *(void *)(v43 + 240) = 0;
                      }
                    }
                    *(void *)(v43 + 248) = v115;
                    *(void *)(v43 + 256) = v114;
                  }
                }
                uint64_t v37 = v236;
                ecs_stack_allocator_pop_snapshot(v236);
                if (v244)
                {
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v43 + 344));
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v43 + 376));
                }
                swift_release();
                uint64_t v38 = v242 + 1;
                if (v242 + 1 == v240)
                {
                  sub_1B632F170(v259);
                  sub_1B632F170(v259);
                  uint64_t v4 = v228;
                  goto LABEL_13;
                }
              }
              while (2)
              {
                uint64_t v83 = v253 + 104 * v41;
                uint64_t v85 = *(void *)(v83 + 24);
                uint64_t v84 = v83 + 24;
                if (v85)
                {
                  uint64_t v86 = *(void *)(v84 + 8);
                  uint64_t v87 = *(void *)(v14 + 16);
                  uint64_t v88 = v14;
                  char v89 = *(unsigned char *)(v14 + 184);
                  swift_retain();
                  if (v89) {
                    goto LABEL_208;
                  }
                  uint64_t v90 = *(void *)(v88 + 168);
                  uint64_t v91 = swift_getObjectType();
                  uint64_t v92 = *(unsigned int *)(v90 + 4 * v251);
                  uint64_t v93 = *(unsigned int *)(*(void *)(v87 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                        + 12 * (int)v92
                                        + 8);
                  swift_unknownObjectRetain();
                  swift_release();
                  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v92 | (v93 << 32), v91, v86) & 1) == 0)
                  {
                    swift_unknownObjectRelease();
                    goto LABEL_93;
                  }
                  uint64_t v94 = *(void *)(v43 + 192);
                  swift_retain();
                  if (v94)
                  {
                    uint64_t v95 = *(void *)(v43 + 208);
                    uint64_t v96 = 8 * (v41 >> 6);
                    *(void *)(v94 + v96) |= 1 << v41;
                    *(void *)(v95 + v96) &= ~(1 << v41);
                  }
                  uint64_t v14 = v256;
                  if (*(unsigned char *)(*(void *)(v43 + 40) + 213) == 1)
                  {
                    uint64_t v97 = *(void *)(v43 + 48);
                    uint64_t v98 = *(void *)(v97 + 16);
                    if (v98)
                    {
                      uint64_t v99 = (uint64_t *)(v97 + 56);
                      while ((ValueMetadata *)*(v99 - 3) != &type metadata for PropagateDirtiness)
                      {
                        v99 += 5;
                        if (!--v98) {
                          goto LABEL_83;
                        }
                      }
                      uint64_t v100 = *v99;
                    }
                    else
                    {
LABEL_83:
                      uint64_t v100 = 0;
                    }
                    uint64_t v101 = *(void *)(v43 + 128);
                    char v102 = *(unsigned char *)(v43 + 184);
                    uint64_t v103 = swift_retain();
                    if (v102) {
                      goto LABEL_208;
                    }
                    uint64_t v104 = v101 + v100;
                    unsigned int v105 = *(_DWORD *)(*(void *)(v43 + 168) + 4 * v41);
                    uint64_t v106 = (unsigned int *)(v104 + 8 * v41);
                    uint64_t v107 = *(unsigned int *)(*(void *)(v103 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                           + 12 * (int)v105
                                           + 8);
                    swift_release();
                    uint64_t v108 = *v106;
                    uint64_t v109 = v106[1];
                    if (v108 != -1 || v109 != 0) {
                      sub_1B6398CA0(v257, v105 | (unint64_t)(v107 << 32), v108 | (v109 << 32));
                    }
                    swift_unknownObjectRelease();
                    swift_release();
LABEL_93:
                    uint64_t v14 = v256;
                  }
                  else
                  {
                    swift_unknownObjectRelease();
                    swift_release();
                  }
                }
                if (++v41 == v77) {
                  goto LABEL_63;
                }
                continue;
              }
            }
          }
          sub_1B632F170(v259);
LABEL_13:
          uint64_t v15 = v231 + 1;
          if (v231 + 1 == v225) {
            goto LABEL_108;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
LABEL_105:
        uint64_t v4 = v228;
        uint64_t v14 = v256;
        goto LABEL_13;
      }
      goto LABEL_108;
    }
    if (v250 != v230) {
      break;
    }
LABEL_108:
    v291[0] = v288;
    v291[1] = v289;
    uint64_t v292 = v290;
    sub_1B6345178(v222, (unsigned __int16 **)v291, (uint64_t)v297);
    sub_1B634507C((char *)v14);
    ecs_stack_allocator_pop_snapshot(v221);
    if (v220)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
    }
    swift_release();
    uint64_t v6 = v219 + 1;
    if (v219 + 1 == v218)
    {
      sub_1B632F170(v258);
      return sub_1B632F170(v258);
    }
  }
  while (1)
  {
    uint64_t v116 = *(void *)(v227 + 440);
    int v117 = *(_DWORD *)(v227 + 448);
    uint64_t v118 = *(void *)(v227 + 456);
    int v119 = *(unsigned __int8 *)(v227 + 464);
    uint64_t v254 = *(void *)(v227 + 472);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 40));
    uint64_t v120 = *(void *)(v4 + 48);
    if (!*(void *)(v120 + 16)) {
      goto LABEL_115;
    }
    unint64_t v121 = sub_1B62C1A30(*(void *)(v116 + 32));
    if (v122)
    {
      uint64_t v123 = *(void *)(*(void *)(v120 + 56) + 24 * v121 + 8);
      uint64_t v124 = v4;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
LABEL_115:
      sub_1B62B6A68(a1, v116);
      uint64_t v123 = v125;
      uint64_t v124 = v4;
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v124 + 40));
    uint64_t v127 = *(void *)(v123 + 16);
    if (v127) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_203:
    uint64_t v4 = v228;
    uint64_t v14 = v256;
LABEL_111:
    if (++v250 == v230) {
      goto LABEL_108;
    }
  }
  uint64_t v128 = (void *)thread_worker_index(&thread_worker_index, v126);
  if (*(unsigned char *)(a1 + v223) == 4)
  {
    uint64_t v130 = *(void *)(a1 + 216);
    int v131 = v117;
    if (*(unsigned char *)(a1 + 225) == 1) {
      BOOL v132 = v130 <= 1;
    }
    else {
      BOOL v132 = v130 <= 0;
    }
    char v133 = !v132;
  }
  else
  {
    int v131 = v117;
    char v133 = 1;
  }
  uint64_t v134 = *(void *)(*(void *)(a1 + v224) + 8 * *v128 + 8);
  if (v119 != 2) {
    char v133 = v119;
  }
  uint64_t v306 = v116;
  int v307 = v131;
  char v308 = v129;
  uint64_t v309 = v118;
  char v310 = v133;
  uint64_t v311 = v254;
  swift_retain();
  swift_retain();
  sub_1B62C921C(a1, v134, (uint64_t)&v306, (int *)(v123 + 32), v127, (uint64_t)v260);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1B62D7990((uint64_t)v260, (uint64_t)v271, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v271[0]) {
    goto LABEL_203;
  }
  long long v278 = v271[0];
  long long v279 = v271[1];
  uint64_t v280 = v272;
  uint64_t v4 = v228;
  uint64_t v14 = v256;
  if (v277 < 1 || (uint64_t v241 = v274) == 0)
  {
    sub_1B632F170(v260);
    goto LABEL_111;
  }
  long long v135 = v276;
  uint64_t v239 = v273;
  uint64_t v136 = v276[4];
  int v245 = *(unsigned __int8 *)(v275 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v233 = v276 + 8;
  uint64_t v235 = (uint64_t)(v276 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v137 = 0;
  uint64_t v247 = v135;
  uint64_t v237 = v136;
  while (1)
  {
    uint64_t v243 = v137;
    uint64_t v138 = (unsigned int *)(v239 + 48 * v137);
    uint64_t v140 = *v138;
    uint64_t v139 = v138[1];
    uint64_t v141 = *((void *)v138 + 3);
    uint64_t v249 = (uint64_t *)*((void *)v138 + 2);
    uint64_t v143 = *((void *)v138 + 4);
    uint64_t v142 = *((void *)v138 + 5);
    if (v245)
    {
      uint64_t v144 = *(os_unfair_lock_s **)(v142 + 376);
      swift_retain();
      os_unfair_lock_lock(v144);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v142 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v136);
    sub_1B62D7990(v235, (uint64_t)v305, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v145 = v247[4];
    uint64_t v146 = *(void *)(*(void *)(*(void *)(*(void *)(v142 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v247[6] = ecs_stack_allocator_allocate(v145, 48 * v146, 8);
    v247[7] = v146;
    v233[1] = 0;
    v233[2] = 0;
    void *v233 = 0;
    swift_release();
    uint64_t v255 = sub_1B62C9024((uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, v249, v141, v143, (uint64_t)v247);
    sub_1B62C9024((uint64_t)&type metadata for MaterialRuntime, (uint64_t)&off_1F0F68E78, v249, v141, v143, (uint64_t)v247);
    if (v249)
    {
      uint64_t v14 = v256;
      if (v143)
      {
        uint64_t v147 = 0;
        while (1)
        {
          uint64_t v148 = v255 + 104 * v147;
          uint64_t v150 = *(void *)(v148 + 24);
          uint64_t v149 = v148 + 24;
          if (v150)
          {
            uint64_t v151 = v249[v147];
            uint64_t v152 = *(void *)(v149 + 8);
            uint64_t v153 = *(void *)(v14 + 16);
            char v154 = *(unsigned char *)(v14 + 184);
            swift_retain();
            if (v154) {
              goto LABEL_208;
            }
            uint64_t v155 = *(void *)(v14 + 168);
            uint64_t v156 = swift_getObjectType();
            uint64_t v157 = *(unsigned int *)(v155 + 4 * v250);
            uint64_t v158 = *(unsigned int *)(*(void *)(v153 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                   + 12 * (int)v157
                                   + 8);
            swift_unknownObjectRetain();
            swift_release();
            if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v157 | (v158 << 32), v156, v152))
            {
              uint64_t v159 = *(void *)(v142 + 192);
              swift_retain();
              if (v159)
              {
                uint64_t v160 = *(void *)(v142 + 208);
                uint64_t v161 = 8 * (v151 >> 6);
                *(void *)(v159 + v161) |= 1 << v151;
                *(void *)(v160 + v161) &= ~(1 << v151);
              }
              uint64_t v14 = v256;
              if (*(unsigned char *)(*(void *)(v142 + 40) + 213) == 1)
              {
                uint64_t v162 = *(void *)(v142 + 48);
                uint64_t v163 = *(void *)(v162 + 16);
                if (v163)
                {
                  uint64_t v164 = (uint64_t *)(v162 + 56);
                  while ((ValueMetadata *)*(v164 - 3) != &type metadata for PropagateDirtiness)
                  {
                    v164 += 5;
                    if (!--v163) {
                      goto LABEL_151;
                    }
                  }
                  uint64_t v165 = *v164;
                }
                else
                {
LABEL_151:
                  uint64_t v165 = 0;
                }
                uint64_t v166 = *(void *)(v142 + 128);
                char v167 = *(unsigned char *)(v142 + 184);
                uint64_t v168 = swift_retain();
                if (v167) {
                  goto LABEL_208;
                }
                uint64_t v169 = v166 + v165;
                unsigned int v170 = *(_DWORD *)(*(void *)(v142 + 168) + 4 * v151);
                uint64_t v171 = (unsigned int *)(v169 + 8 * v151);
                uint64_t v172 = *(unsigned int *)(*(void *)(v168 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                       + 12 * (int)v170
                                       + 8);
                swift_release();
                uint64_t v173 = *v171;
                uint64_t v174 = v171[1];
                if (v173 != -1 || v174 != 0) {
                  sub_1B6398CA0(v257, v170 | (unint64_t)(v172 << 32), v173 | (v174 << 32));
                }
              }
              swift_unknownObjectRelease();
              swift_release();
            }
            else
            {
              swift_unknownObjectRelease();
              uint64_t v14 = v256;
            }
          }
          if (++v147 == v143) {
            goto LABEL_161;
          }
        }
      }
      goto LABEL_161;
    }
    uint64_t v176 = v139;
    uint64_t v14 = v256;
    if (v140 != v139) {
      break;
    }
LABEL_161:
    v293[0] = v278;
    v293[1] = v279;
    uint64_t v294 = v280;
    sub_1B6345178(v247, (unsigned __int16 **)v293, (uint64_t)v305);
    if (*(void *)(v247[13] + 16))
    {
      uint64_t v177 = swift_bridgeObjectRetain();
      sub_1B639147C(v177, v142);
      swift_bridgeObjectRelease();
      char v178 = swift_isUniquelyReferenced_nonNull_native();
      int v179 = (void *)v247[13];
      if (v178)
      {
        uint64_t v180 = v179[2];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v179 = sub_1B68C0C6C(0, v180, 1, v179);
        }
        sub_1B63B29DC();
        swift_arrayDestroy();
        if (v180)
        {
          uint64_t v181 = v179[2] - v180;
          if (v181 < 0) {
            goto LABEL_209;
          }
          memmove(v179 + 4, &v179[9 * v180 + 4], 72 * v181);
          v179[2] = v181;
        }
        v247[13] = v179;
        uint64_t v14 = v256;
      }
      else
      {
        uint64_t v210 = (void *)MEMORY[0x1E4FBC860];
        if (v179[3] >= 2uLL)
        {
          sub_1B681C594();
          uint64_t v210 = (void *)swift_allocObject();
          size_t v211 = j__malloc_size(v210);
          v210[2] = 0;
          v210[3] = 2 * ((uint64_t)(v211 - 32) / 72);
        }
        v247[13] = v210;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v247[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        int v212 = *(char **)(v142 + 232);
        uint64_t v213 = *(char **)(v142 + 256);
        if (v212 == v213)
        {
          uint64_t v214 = *(char **)(v142 + 240);
        }
        else
        {
          sub_1B666018C(v213, v212);
          uint64_t v213 = *(char **)(v142 + 232);
          uint64_t v214 = *(char **)(v142 + 240);
          if (v214 == v213)
          {
            uint64_t v214 = 0;
            uint64_t v213 = 0;
            *(void *)(v142 + 232) = 0;
            *(void *)(v142 + 240) = 0;
          }
        }
        *(void *)(v142 + 248) = v214;
        *(void *)(v142 + 256) = v213;
      }
    }
    uint64_t v136 = v237;
    ecs_stack_allocator_pop_snapshot(v237);
    if (v245)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v142 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v142 + 376));
    }
    swift_release();
    uint64_t v137 = v243 + 1;
    if (v243 + 1 == v241)
    {
      sub_1B632F170(v260);
      sub_1B632F170(v260);
      uint64_t v4 = v228;
      goto LABEL_111;
    }
  }
  while (2)
  {
    uint64_t v182 = v255 + 104 * v140;
    uint64_t v184 = *(void *)(v182 + 24);
    uint64_t v183 = v182 + 24;
    if (!v184) {
      goto LABEL_170;
    }
    uint64_t v185 = *(void *)(v183 + 8);
    uint64_t v186 = *(void *)(v14 + 16);
    uint64_t v187 = v14;
    char v188 = *(unsigned char *)(v14 + 184);
    swift_retain();
    if (v188) {
      break;
    }
    uint64_t v189 = *(void *)(v187 + 168);
    uint64_t v190 = swift_getObjectType();
    uint64_t v191 = *(unsigned int *)(v189 + 4 * v250);
    uint64_t v192 = *(unsigned int *)(*(void *)(v186 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v191 + 8);
    swift_unknownObjectRetain();
    swift_release();
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v185 + 48))(v191 | (v192 << 32), v190, v185) & 1) == 0)
    {
      swift_unknownObjectRelease();
      goto LABEL_191;
    }
    uint64_t v193 = *(void *)(v142 + 192);
    swift_retain();
    if (v193)
    {
      uint64_t v194 = *(void *)(v142 + 208);
      uint64_t v195 = 8 * (v140 >> 6);
      *(void *)(v193 + v195) |= 1 << v140;
      *(void *)(v194 + v195) &= ~(1 << v140);
    }
    uint64_t v14 = v256;
    if (*(unsigned char *)(*(void *)(v142 + 40) + 213) != 1)
    {
      swift_unknownObjectRelease();
      swift_release();
      goto LABEL_170;
    }
    uint64_t v196 = *(void *)(v142 + 48);
    uint64_t v197 = *(void *)(v196 + 16);
    if (v197)
    {
      uint64_t v198 = (uint64_t *)(v196 + 56);
      while ((ValueMetadata *)*(v198 - 3) != &type metadata for PropagateDirtiness)
      {
        v198 += 5;
        if (!--v197) {
          goto LABEL_181;
        }
      }
      uint64_t v199 = *v198;
    }
    else
    {
LABEL_181:
      uint64_t v199 = 0;
    }
    uint64_t v200 = *(void *)(v142 + 128);
    char v201 = *(unsigned char *)(v142 + 184);
    uint64_t v202 = swift_retain();
    if ((v201 & 1) == 0)
    {
      uint64_t v203 = v200 + v199;
      unsigned int v204 = *(_DWORD *)(*(void *)(v142 + 168) + 4 * v140);
      uint64_t v205 = (unsigned int *)(v203 + 8 * v140);
      uint64_t v206 = *(unsigned int *)(*(void *)(v202 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v204 + 8);
      swift_release();
      uint64_t v207 = *v205;
      uint64_t v208 = v205[1];
      if (v207 != -1 || v208 != 0) {
        sub_1B6398CA0(v257, v204 | (unint64_t)(v206 << 32), v207 | (v208 << 32));
      }
      swift_unknownObjectRelease();
      swift_release();
LABEL_191:
      uint64_t v14 = v256;
LABEL_170:
      if (++v140 == v176) {
        goto LABEL_161;
      }
      continue;
    }
    break;
  }
LABEL_208:
  sub_1B6E32BE8();
  __break(1u);
LABEL_209:
  uint64_t result = (uint64_t *)sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t *sub_1B6323CBC(uint64_t *result)
{
  if ((*(unsigned char *)(v1 + 520) & 1) == 0)
  {
    long long v2 = result;
    long long v3 = *(_OWORD *)(v1 + 496);
    v121[0] = *(_OWORD *)(v1 + 480);
    v121[1] = v3;
    uint64_t v122 = *(void *)(v1 + 512);
    sub_1B62C9DA8((uint64_t)result, (uint64_t)v121, 0x200000000, v110);
    uint64_t result = (uint64_t *)sub_1B62D7990((uint64_t)v110, (uint64_t)v111, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v111[0])
    {
      if (v117 >= 1)
      {
        uint64_t v103 = v114;
        if (v114)
        {
          uint64_t v97 = (unsigned char *)(v1 + 520);
          uint64_t v4 = v116[4];
          int v5 = *(unsigned __int8 *)(v115 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v118[0] = v111[0];
          v118[1] = v111[1];
          uint64_t v119 = v112;
          uint64_t v99 = (uint64_t)(v116 + 6);
          uint64_t v100 = v113;
          uint64_t v104 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v96 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
          uint64_t v108 = v116;
          uint64_t v98 = v116 + 8;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v6 = 0;
          uint64_t v106 = (uint64_t)v2;
          int v101 = v5;
          uint64_t v102 = v4;
          while (1)
          {
            uint64_t v107 = v6;
            uint64_t v7 = (unsigned int *)(v100 + 48 * v6);
            uint64_t v8 = *v7;
            uint64_t v105 = v7[1];
            uint64_t v10 = (uint64_t *)*((void *)v7 + 2);
            uint64_t v9 = *((void *)v7 + 3);
            uint64_t v11 = *((void *)v7 + 4);
            uint64_t v12 = *((void *)v7 + 5);
            if (v5)
            {
              uint64_t v13 = *(os_unfair_lock_s **)(v12 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v13);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v4);
            sub_1B62D7990(v99, (uint64_t)v120, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v109 = v12;
            uint64_t v14 = v108[4];
            uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v108[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
            v108[7] = v15;
            v98[1] = 0;
            v98[2] = 0;
            *uint64_t v98 = 0;
            swift_release();
            uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for ParticleMeshRenderer, (uint64_t)&off_1F0F818E0, v10, v9, v11, (uint64_t)v108);
            if (!v10) {
              break;
            }
            if (v11)
            {
              uint64_t v17 = 0;
              uint64_t v18 = v106;
              uint64_t v19 = v104;
              do
              {
                uint64_t v25 = (int *)(v16 + 40 * v17);
                int v26 = v25[1];
                uint64_t v27 = *v25;
                if (v27 == -1 && v26 == 0) {
                  goto LABEL_19;
                }
                if ((v27 & 0x80000000) != 0) {
                  goto LABEL_19;
                }
                uint64_t v29 = v19[1];
                if (v29 <= v27) {
                  goto LABEL_19;
                }
                uint64_t v30 = *v19;
                uint64_t v31 = *v19 + 12 * (int)v27;
                if (v26 != -1 && *(_DWORD *)(v31 + 8) != v26) {
                  goto LABEL_19;
                }
                uint64_t v33 = *(void *)(*(void *)(v18 + 136) + 8 * *(int *)(v30 + 12 * (int)v27) + 32);
                uint64_t v34 = *(void *)(v33 + 48);
                uint64_t v35 = *(void *)(v34 + 16);
                if (!v35) {
                  goto LABEL_19;
                }
                uint64_t v36 = *(__int16 *)(v31 + 4);
                uint64_t v37 = (void *)(v34 + 56);
                while ((ValueMetadata *)*(v37 - 3) != &type metadata for MeshModel)
                {
                  v37 += 5;
                  if (!--v35) {
                    goto LABEL_19;
                  }
                }
                uint64_t v38 = *(void *)(*(void *)(v33 + 128) + *v37 + 16 * v36 + 8);
                uint64_t v39 = v16 + 40 * v17;
                int v41 = *(_DWORD *)(v39 + 8);
                int v40 = *(_DWORD *)(v39 + 12);
                if (v41 == -1 && v40 == 0)
                {
                  uint64_t v43 = *(void *)(v39 + 24);
                  if (v43 < 0 || v43 >= *(void *)(v38 + 16)) {
                    goto LABEL_56;
                  }
                  uint64_t v44 = v38 + 8 * v43;
                  int v41 = *(_DWORD *)(v44 + 32);
                  int v40 = *(_DWORD *)(v44 + 36);
                }
                BOOL v45 = v41 == -1 && v40 == 0;
                if (!v45 && (v41 & 0x80000000) == 0 && v29 > v41)
                {
                  int v46 = *(_DWORD *)(v30 + 12 * v41 + 8);
                  if (v40 == -1 || v46 == v40) {
                    goto LABEL_19;
                  }
                }
LABEL_56:
                uint64_t v48 = *(void *)(v18 + 176);
                swift_bridgeObjectRetain();
                swift_retain();
                swift_retain();
                os_unfair_recursive_lock_lock_with_options();
                uint64_t v49 = sub_1B636E9A8((uint64_t)&type metadata for DefaultMaterialInstance);
                if ((v51 & 1) == 0)
                {
                  os_unfair_recursive_lock_unlock();
                  swift_release();
LABEL_58:
                  type metadata accessor for PBRParameters();
                  uint64_t v52 = swift_allocObject();
                  *(_OWORD *)(v52 + 16) = xmmword_1B6E781D0;
                  *(void *)(v52 + 32) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v52 + 40) = 16777473;
                  *(unsigned char *)(v52 + 44) = 1;
                  *(_OWORD *)(v52 + 48) = xmmword_1B6E4F490;
                  *(void *)(v52 + 64) = 0;
                  *(void *)(v52 + 72) = 0;
                  *(void *)(v52 + 80) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v52 + 88) = 16777473;
                  *(unsigned char *)(v52 + 92) = 1;
                  *(_OWORD *)(v52 + 96) = xmmword_1B6E4F490;
                  *(void *)(v52 + 112) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v52 + 120) = 16777473;
                  *(unsigned char *)(v52 + 124) = 1;
                  *(_DWORD *)(v52 + 128) = 1056964608;
                  *(_OWORD *)(v52 + 144) = xmmword_1B6E4F490;
                  *(void *)(v52 + 160) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v52 + 168) = 16777473;
                  *(unsigned char *)(v52 + 172) = 1;
                  *(_DWORD *)(v52 + 176) = 0;
                  *(_OWORD *)(v52 + 192) = xmmword_1B6E4F490;
                  *(void *)(v52 + 208) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v52 + 216) = 16777473;
                  *(unsigned char *)(v52 + 220) = 1;
                  *(_DWORD *)(v52 + 224) = 1065353216;
                  *(_OWORD *)(v52 + 240) = xmmword_1B6E4F490;
                  *(void *)(v52 + 256) = 0xFFFFFFFFLL;
                  *(_DWORD *)(v52 + 264) = 16777473;
                  *(unsigned char *)(v52 + 268) = 1;
                  *(_DWORD *)(v52 + 272) = 1065353216;
                  *(_OWORD *)(v52 + 288) = xmmword_1B6E4F490;
                  *(_WORD *)(v52 + 304) = 0;
                  type metadata accessor for RenderPipelineFactory();
                  swift_allocObject();
                  uint64_t v53 = sub_1B62FFCAC(140);
                  *(void *)(v53 + 88) = sub_1B6D2EFB4;
                  *(void *)(v53 + 96) = 0;
                  swift_release();
                  uint64_t v54 = sub_1B6D7FB60(0x100000000uLL, **(void **)(v18 + v96), 0, v53, 0x100000000uLL, 0xD000000000000018, 0x80000001B6F3DF20, -1.0);
                  swift_release();
                  swift_retain();
                  sub_1B6C0327C(v54, v106, v52);
                  uint64_t v55 = swift_release_n();
                  uint64_t v18 = v106;
                  MEMORY[0x1F4188790](v55, v56);
                  uint64_t v57 = *(void **)(v106 + 176);
                  swift_retain();
                  sub_1B636E6CC((uint64_t)&type metadata for DefaultMaterialInstance, (uint64_t)&off_1F0F8EF50, v57, (void (*)(uint64_t))sub_1B6916A34);
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  uint64_t v19 = v104;
                  goto LABEL_18;
                }
                unint64_t v21 = (int *)(*(void *)(v48 + 16) + v49);
                uint64_t v22 = 32 * v50;
                os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(v48 + 32) + 32 * v50 + 24));
                os_unfair_recursive_lock_unlock();
                int v24 = *v21;
                int v23 = v21[1];
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v48 + 32) + v22 + 24));
                swift_release();
                if (v24 == -1)
                {
                  uint64_t v18 = v106;
                  uint64_t v19 = v104;
                  if (v23)
                  {
                    swift_bridgeObjectRelease();
                    swift_release();
                    goto LABEL_18;
                  }
                  goto LABEL_58;
                }
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v18 = v106;
                uint64_t v19 = v104;
LABEL_18:
                unsigned char *v97 = 1;
LABEL_19:
                ++v17;
              }
              while (v17 != v11);
            }
LABEL_14:
            sub_1B6345178(v108, (unsigned __int16 **)v118, (uint64_t)v120);
            sub_1B634507C((char *)v109);
            uint64_t v4 = v102;
            ecs_stack_allocator_pop_snapshot(v102);
            int v5 = v101;
            if (v101)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v109 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v109 + 376));
            }
            swift_release();
            uint64_t v6 = v107 + 1;
            if (v107 + 1 == v103)
            {
              sub_1B632F170(v110);
              return sub_1B632F170(v110);
            }
          }
          uint64_t v20 = v105;
          if (v8 == v105) {
            goto LABEL_14;
          }
          uint64_t v58 = v106;
          while (1)
          {
            uint64_t v63 = (int *)(v16 + 40 * v8);
            int v64 = v63[1];
            uint64_t v65 = *v63;
            if (v65 == -1 && v64 == 0) {
              goto LABEL_65;
            }
            if ((v65 & 0x80000000) != 0) {
              goto LABEL_65;
            }
            uint64_t v67 = v104[1];
            if (v67 <= v65) {
              goto LABEL_65;
            }
            uint64_t v68 = *v104;
            uint64_t v69 = *v104 + 12 * (int)v65;
            if (v64 != -1 && *(_DWORD *)(v69 + 8) != v64) {
              goto LABEL_65;
            }
            uint64_t v71 = *(void *)(*(void *)(v58 + 136) + 8 * *(int *)(v68 + 12 * (int)v65) + 32);
            uint64_t v72 = *(void *)(v71 + 48);
            uint64_t v73 = *(void *)(v72 + 16);
            if (!v73) {
              goto LABEL_65;
            }
            uint64_t v74 = *(__int16 *)(v69 + 4);
            uint64_t v75 = (void *)(v72 + 56);
            while ((ValueMetadata *)*(v75 - 3) != &type metadata for MeshModel)
            {
              v75 += 5;
              if (!--v73) {
                goto LABEL_65;
              }
            }
            uint64_t v76 = *(void *)(*(void *)(v71 + 128) + *v75 + 16 * v74 + 8);
            uint64_t v77 = v16 + 40 * v8;
            int v79 = *(_DWORD *)(v77 + 8);
            int v78 = *(_DWORD *)(v77 + 12);
            if (v79 == -1 && v78 == 0)
            {
              uint64_t v81 = *(void *)(v77 + 24);
              if (v81 < 0 || v81 >= *(void *)(v76 + 16)) {
                goto LABEL_102;
              }
              uint64_t v82 = v76 + 8 * v81;
              int v79 = *(_DWORD *)(v82 + 32);
              int v78 = *(_DWORD *)(v82 + 36);
            }
            BOOL v83 = v79 == -1 && v78 == 0;
            if (!v83 && (v79 & 0x80000000) == 0 && v67 > v79)
            {
              int v84 = *(_DWORD *)(v68 + 12 * v79 + 8);
              if (v78 == -1 || v84 == v78) {
                goto LABEL_65;
              }
            }
LABEL_102:
            uint64_t v86 = *(void *)(v58 + 176);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            os_unfair_recursive_lock_lock_with_options();
            uint64_t v87 = sub_1B636E9A8((uint64_t)&type metadata for DefaultMaterialInstance);
            if ((v89 & 1) == 0)
            {
              os_unfair_recursive_lock_unlock();
              swift_release();
LABEL_104:
              type metadata accessor for PBRParameters();
              uint64_t v90 = swift_allocObject();
              *(_OWORD *)(v90 + 16) = xmmword_1B6E781D0;
              *(void *)(v90 + 32) = 0xFFFFFFFFLL;
              *(_DWORD *)(v90 + 40) = 16777473;
              *(unsigned char *)(v90 + 44) = 1;
              *(_OWORD *)(v90 + 48) = xmmword_1B6E4F490;
              *(void *)(v90 + 64) = 0;
              *(void *)(v90 + 72) = 0;
              *(void *)(v90 + 80) = 0xFFFFFFFFLL;
              *(_DWORD *)(v90 + 88) = 16777473;
              *(unsigned char *)(v90 + 92) = 1;
              *(_OWORD *)(v90 + 96) = xmmword_1B6E4F490;
              *(void *)(v90 + 112) = 0xFFFFFFFFLL;
              *(_DWORD *)(v90 + 120) = 16777473;
              *(unsigned char *)(v90 + 124) = 1;
              *(_DWORD *)(v90 + 128) = 1056964608;
              *(_OWORD *)(v90 + 144) = xmmword_1B6E4F490;
              *(void *)(v90 + 160) = 0xFFFFFFFFLL;
              *(_DWORD *)(v90 + 168) = 16777473;
              *(unsigned char *)(v90 + 172) = 1;
              *(_DWORD *)(v90 + 176) = 0;
              *(_OWORD *)(v90 + 192) = xmmword_1B6E4F490;
              *(void *)(v90 + 208) = 0xFFFFFFFFLL;
              *(_DWORD *)(v90 + 216) = 16777473;
              *(unsigned char *)(v90 + 220) = 1;
              *(_DWORD *)(v90 + 224) = 1065353216;
              *(_OWORD *)(v90 + 240) = xmmword_1B6E4F490;
              *(void *)(v90 + 256) = 0xFFFFFFFFLL;
              *(_DWORD *)(v90 + 264) = 16777473;
              *(unsigned char *)(v90 + 268) = 1;
              *(_DWORD *)(v90 + 272) = 1065353216;
              *(_OWORD *)(v90 + 288) = xmmword_1B6E4F490;
              *(_WORD *)(v90 + 304) = 0;
              type metadata accessor for RenderPipelineFactory();
              swift_allocObject();
              uint64_t v91 = sub_1B62FFCAC(140);
              *(void *)(v91 + 88) = sub_1B6D2EFB4;
              *(void *)(v91 + 96) = 0;
              swift_release();
              uint64_t v92 = sub_1B6D7FB60(0x100000000uLL, **(void **)(v58 + v96), 0, v91, 0x100000000uLL, 0xD000000000000018, 0x80000001B6F3DF20, -1.0);
              swift_release();
              swift_retain();
              sub_1B6C0327C(v92, v58, v90);
              uint64_t v93 = swift_release_n();
              MEMORY[0x1F4188790](v93, v94);
              uint64_t v95 = *(void **)(v106 + 176);
              swift_retain();
              sub_1B636E6CC((uint64_t)&type metadata for DefaultMaterialInstance, (uint64_t)&off_1F0F8EF50, v95, (void (*)(uint64_t))sub_1B6916820);
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              uint64_t v58 = v106;
              goto LABEL_64;
            }
            uint64_t v59 = (int *)(*(void *)(v86 + 16) + v87);
            uint64_t v60 = 32 * v88;
            os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(v86 + 32) + 32 * v88 + 24));
            os_unfair_recursive_lock_unlock();
            int v62 = *v59;
            int v61 = v59[1];
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v86 + 32) + v60 + 24));
            swift_release();
            if (v62 == -1)
            {
              uint64_t v58 = v106;
              if (v61)
              {
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_64;
              }
              goto LABEL_104;
            }
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v58 = v106;
LABEL_64:
            unsigned char *v97 = 1;
            uint64_t v20 = v105;
LABEL_65:
            if (++v8 == v20) {
              goto LABEL_14;
            }
          }
        }
      }
      return sub_1B632F170(v110);
    }
  }
  return result;
}

uint64_t *sub_1B6324824(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 96);
  v44[0] = *(_OWORD *)(v1 + 80);
  v44[1] = v3;
  uint64_t v45 = *(void *)(v1 + 112);
  sub_1B62C9DA8(a1, (uint64_t)v44, 0x200000000, v30);
  uint64_t result = (uint64_t *)sub_1B62D7990((uint64_t)v30, (uint64_t)v31, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v31[0])
  {
    long long v38 = v31[0];
    long long v39 = v31[1];
    uint64_t v40 = v32;
    if (v37 >= 1)
    {
      uint64_t v26 = v34;
      if (v34)
      {
        uint64_t v24 = v33;
        int v5 = v36;
        uint64_t v6 = v36[4];
        int i = *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        unint64_t v21 = v36 + 8;
        uint64_t v22 = (uint64_t)(v36 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v8 = 0;
        int v23 = i;
        uint64_t v29 = v5;
        uint64_t v25 = v6;
        do
        {
          uint64_t v9 = (unsigned int *)(v24 + 48 * v8);
          uint64_t v28 = *v9;
          uint64_t v27 = v9[1];
          uint64_t v11 = (uint64_t *)*((void *)v9 + 2);
          uint64_t v10 = *((void *)v9 + 3);
          uint64_t v13 = *((void *)v9 + 4);
          uint64_t v12 = *((void *)v9 + 5);
          if (i)
          {
            uint64_t v14 = *(os_unfair_lock_s **)(v12 + 376);
            swift_retain();
            os_unfair_lock_lock(v14);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v6);
          sub_1B62D7990(v22, (uint64_t)v43, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v15 = v5[4];
          uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v29[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
          v29[7] = v16;
          int v5 = v29;
          v21[1] = 0;
          v21[2] = 0;
          *unint64_t v21 = 0;
          swift_release();
          uint64_t v17 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v11, v10, v13, (uint64_t)v29);
          uint64_t v18 = (uint64_t *)v17;
          if (v11)
          {
            for (int i = v23; v13; --v13)
            {
              sub_1B6324B8C(v18, a1);
              v18 += 11;
            }
          }
          else
          {
            int i = v23;
            if (v28 != v27)
            {
              uint64_t v19 = v27 - v28;
              uint64_t v20 = (uint64_t *)(v17 + 88 * v28);
              do
              {
                sub_1B6324B8C(v20, a1);
                v20 += 11;
                --v19;
              }
              while (v19);
            }
          }
          v41[0] = v38;
          v41[1] = v39;
          uint64_t v42 = v40;
          sub_1B6345178(v29, (unsigned __int16 **)v41, (uint64_t)v43);
          sub_1B634507C((char *)v12);
          uint64_t v6 = v25;
          ecs_stack_allocator_pop_snapshot(v25);
          if (i)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
          }
          swift_release();
          ++v8;
        }
        while (v8 != v26);
        sub_1B632F170(v30);
      }
    }
    return sub_1B632F170(v30);
  }
  return result;
}

uint64_t sub_1B6324B8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  int v60 = *((unsigned __int8 *)a1 + 45);
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  long long v93 = xmmword_1B6E85730;
  v94[0] = v3;
  v94[1] = v4;
  _OWORD v94[2] = v5;
  v94[3] = v6;
  uint64_t v7 = (void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v59 = OBJC_IVAR____TtC3VFX13EntityManager_renderer;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  while (1)
  {
LABEL_2:
    while (v8 && v9 != *(void *)(v8 + 16))
    {
      uint64_t v12 = v8 + 8 * v9;
      unsigned int v13 = *(_DWORD *)(v12 + 36);
      uint64_t v14 = *(int *)(v12 + 32);
      ++v9;
      if (__PAIR64__(v13, v14) != 0xFFFFFFFF && (v14 & 0x80000000) == 0 && v7[1] > v14)
      {
        uint64_t v15 = *v7 + 12 * (int)v14;
        if (v13 == -1 || *(_DWORD *)(v15 + 8) == v13)
        {
          uint64_t v16 = *(void *)(*(void *)(v2 + 136) + 8 * *(int *)(*v7 + 12 * (int)v14) + 32);
          uint64_t v17 = *(void *)(v16 + 48);
          uint64_t v18 = *(void *)(v17 + 16);
          if (v18)
          {
            uint64_t v19 = (void *)(v17 + 56);
            while ((ValueMetadata *)*(v19 - 3) != &type metadata for ParticleNoise)
            {
              v19 += 5;
              if (!--v18) {
                goto LABEL_2;
              }
            }
            uint64_t v20 = *(void *)(v16 + 128) + *v19 + ((uint64_t)*(__int16 *)(v15 + 4) << 6);
            int v21 = *(unsigned __int8 *)(v20 + 36);
            if (v21 != 2)
            {
              uint64_t v22 = *(void *)(v2 + v59);
              if (v60)
              {
                if (v22)
                {
                  uint64_t v54 = *(void *)(v2 + v59);
                  locuint64_t k = *(os_unfair_lock_t *)(v20 + 40);
                  uint64_t v23 = *(void *)(v22 + 240);
                  uint64_t v24 = *(os_unfair_lock_s **)(v23 + 48);
                  swift_retain();
                  swift_retain();
                  os_unfair_lock_lock(v24);
                  uint64_t v52 = v23;
                  uint64_t v25 = *(void *)(v23 + 136);
                  if (*(void *)(v25 + 16) && (unint64_t v26 = sub_1B69FB0D8(v21, (uint64_t)lock), (v27 & 1) != 0))
                  {
                    uint64_t v28 = (long long *)(*(void *)(v25 + 56) + (v26 << 7));
                    long long v29 = v28[2];
                    long long v30 = v28[3];
                    long long v31 = v28[1];
                    long long v85 = *v28;
                    long long v32 = v28[4];
                    long long v33 = v28[5];
                    long long v34 = v28[7];
                    long long v91 = v28[6];
                    long long v92 = v34;
                    long long v89 = v32;
                    long long v90 = v33;
                    long long v87 = v29;
                    long long v88 = v30;
                    long long v86 = v31;
                    lockb = *(os_unfair_lock_s **)(v52 + 48);
                    sub_1B69168B8((uint64_t)&v85);
                    os_unfair_lock_unlock(lockb);
                    swift_release();
                    swift_release();
                  }
                  else
                  {
                    sub_1B69D26E8(v54, v21, (uint64_t)lock, (uint64_t)&v85);
                    sub_1B69168B8((uint64_t)&v85);
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    uint64_t v95 = *(void *)(v52 + 136);
                    *(void *)(v52 + 136) = 0x8000000000000000;
                    long long v61 = v85;
                    uint64_t v62 = v86;
                    char v63 = BYTE8(v86);
                    uint64_t v64 = v87;
                    __int16 v65 = WORD4(v87);
                    char v66 = BYTE10(v87);
                    long long v67 = v88;
                    long long v68 = v89;
                    long long v69 = v90;
                    uint64_t v70 = v91;
                    int v71 = DWORD2(v91);
                    long long v72 = v92;
                    sub_1B67E6E50((uint64_t *)&v61, v21, (uint64_t)lock, isUniquelyReferenced_nonNull_native);
                    *(void *)(v52 + 136) = v95;
                    swift_bridgeObjectRelease();
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v52 + 48));
                    swift_release();
                    swift_release();
                  }
                  swift_unknownObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_unknownObjectRelease();
                }
              }
              else if (v22)
              {
                uint64_t v53 = v2;
                uint64_t v55 = *(void *)(v2 + v59);
                os_unfair_lock_t locka = *(os_unfair_lock_t *)(v20 + 40);
                uint64_t v35 = *(void *)(v22 + 240);
                uint64_t v36 = *(os_unfair_lock_s **)(v35 + 48);
                swift_retain();
                swift_retain();
                os_unfair_lock_lock(v36);
                uint64_t v37 = v35;
                uint64_t v38 = *(void *)(v35 + 136);
                if (*(void *)(v38 + 16) && (unint64_t v39 = sub_1B69FB0D8(v21, (uint64_t)locka), (v40 & 1) != 0))
                {
                  int v41 = (long long *)(*(void *)(v38 + 56) + (v39 << 7));
                  long long v42 = v41[2];
                  long long v43 = v41[3];
                  long long v44 = v41[1];
                  long long v85 = *v41;
                  long long v45 = v41[4];
                  long long v46 = v41[5];
                  long long v47 = v41[7];
                  long long v91 = v41[6];
                  long long v92 = v47;
                  long long v89 = v45;
                  long long v90 = v46;
                  long long v87 = v42;
                  long long v88 = v43;
                  long long v86 = v44;
                  uint64_t v48 = *(os_unfair_lock_s **)(v37 + 48);
                  sub_1B69168B8((uint64_t)&v85);
                  os_unfair_lock_unlock(v48);
                  swift_release();
                  swift_release();
                }
                else
                {
                  sub_1B69D26E8(v55, v21, (uint64_t)locka, (uint64_t)&v85);
                  sub_1B69168B8((uint64_t)&v85);
                  char v50 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v95 = *(void *)(v37 + 136);
                  *(void *)(v37 + 136) = 0x8000000000000000;
                  long long v73 = v85;
                  uint64_t v74 = v86;
                  char v75 = BYTE8(v86);
                  uint64_t v76 = v87;
                  __int16 v77 = WORD4(v87);
                  char v78 = BYTE10(v87);
                  long long v79 = v88;
                  long long v80 = v89;
                  long long v81 = v90;
                  uint64_t v82 = v91;
                  int v83 = DWORD2(v91);
                  long long v84 = v92;
                  sub_1B67E6E50((uint64_t *)&v73, v21, (uint64_t)locka, v50);
                  *(void *)(v37 + 136) = v95;
                  swift_bridgeObjectRelease();
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 48));
                  swift_release();
                  swift_release();
                }
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                uint64_t v2 = v53;
              }
            }
          }
        }
      }
    }
    if (v10 == 4) {
      break;
    }
    uint64_t v11 = v94[v10++];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    uint64_t v8 = v11;
  }
  sub_1B632517C();
  swift_arrayDestroy();
  return swift_bridgeObjectRelease();
}

void sub_1B632517C()
{
  if (!qword_1EB980680)
  {
    sub_1B62D8704(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    sub_1B691683C();
    unint64_t v0 = sub_1B6E328E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980680);
    }
  }
}

uint64_t sub_1B6325204(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
  {
    MEMORY[0x1F4188790](result, a2);
    uint64_t v3 = *(void **)(v2 + 176);
    swift_retain();
    swift_retain();
    sub_1B636E6E4((uint64_t)&type metadata for FrameConstantsStorage, (uint64_t)&off_1F0F851A8, v3, (void (*)(uint64_t))sub_1B636F3A4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B63252D4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    uint64_t v2 = result;
    sub_1B62CA210(v1 + 624, (uint64_t)v14, (unint64_t *)&unk_1EB9852B0);
    sub_1B62CA210((uint64_t)v14, (uint64_t)v15, (unint64_t *)&unk_1EB9852B0);
    if (sub_1B6388C10(v15) == 1) {
      goto LABEL_6;
    }
    uint64_t v3 = v15[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 72);
    swift_unknownObjectRetain();
    swift_retain();
    v5(ObjectType, v3);
    swift_unknownObjectRelease();
    sub_1B62CA210(v1 + 624, (uint64_t)v12, (unint64_t *)&unk_1EB9852B0);
    sub_1B62CA210((uint64_t)v12, (uint64_t)v13, (unint64_t *)&unk_1EB9852B0);
    if (sub_1B6388C10(v13) == 1)
    {
LABEL_6:
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
    }
    else
    {
      uint64_t v6 = v13[1];
      uint64_t v7 = swift_getObjectType();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 160);
      swift_unknownObjectRetain();
      v8(v7, v6);
      uint64_t v9 = swift_unknownObjectRelease();
      MEMORY[0x1F4188790](v9, v10);
      uint64_t v11 = *(void **)(v2 + 176);
      swift_retain();
      sub_1B636E6E4((uint64_t)&type metadata for FrameConstantsStorage, (uint64_t)&off_1F0F851A8, v11, sub_1B636FBF4);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

void sub_1B6325548(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v616 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v4)
  {
    uint64_t v5 = v2;
    uint64_t v6 = v3;
    uint64_t v7 = *(void *)(v3 + 176);
    swift_retain();
    swift_retain();
    uint64_t v8 = sub_1B63273D0(v7);
    uint64_t v10 = v9;
    char v12 = v11;
    swift_release();
    sub_1B62CA210(v4 + 624, (uint64_t)v495, (unint64_t *)&unk_1EB9852B0);
    sub_1B62CA210((uint64_t)v495, (uint64_t)v496, (unint64_t *)&unk_1EB9852B0);
    uint64_t v113 = v6;
    if (sub_1B6388C10(v496) == 1)
    {
      sub_1B6E32BE8();
      __break(1u);
    }
    else
    {
      v13.i32[0] = 0;
      v14.i32[0] = v12 & 1;
      int8x16_t v15 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v14, v13), 0);
      v16.i64[0] = v8;
      v16.i64[1] = v10;
      int8x16_t v114 = v16;
      int8x16_t v116 = v15;
      uint64_t v17 = v496[1];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 144);
      swift_unknownObjectRetain();
      uint64_t v20 = v19(ObjectType, v17);
      swift_unknownObjectRelease();
      long long v135 = 0u;
      long long v136 = 0u;
      long long v134 = 0u;
      memset(v138, 0, sizeof(v138));
      uint64_t v137 = 0;
      uint64_t v139 = 0;
      long long v140 = 0u;
      long long v141 = 0u;
      long long v142 = 0u;
      long long v143 = 0u;
      long long v144 = 0u;
      long long v145 = 0u;
      long long v146 = 0u;
      long long v147 = 0u;
      long long v148 = 0u;
      long long v149 = 0u;
      long long v150 = 0u;
      long long v151 = 0u;
      long long v152 = 0u;
      long long v153 = 0u;
      long long v154 = 0u;
      uint64_t v155 = 0;
      uint64_t v171 = 0;
      long long v169 = 0u;
      long long v170 = 0u;
      long long v167 = 0u;
      long long v168 = 0u;
      long long v165 = 0u;
      long long v166 = 0u;
      long long v163 = 0u;
      long long v164 = 0u;
      long long v161 = 0u;
      long long v162 = 0u;
      long long v159 = 0u;
      long long v160 = 0u;
      long long v157 = 0u;
      long long v158 = 0u;
      long long v156 = 0u;
      long long v172 = 0u;
      long long v173 = 0u;
      long long v174 = 0u;
      long long v175 = 0u;
      long long v176 = 0u;
      long long v177 = 0u;
      long long v178 = 0u;
      long long v179 = 0u;
      long long v180 = 0u;
      long long v181 = 0u;
      long long v182 = 0u;
      long long v183 = 0u;
      long long v184 = 0u;
      long long v185 = 0u;
      long long v186 = 0u;
      uint64_t v187 = 0;
      uint64_t v203 = 0;
      long long v202 = 0u;
      long long v201 = 0u;
      long long v200 = 0u;
      long long v199 = 0u;
      long long v198 = 0u;
      long long v197 = 0u;
      long long v196 = 0u;
      long long v195 = 0u;
      long long v194 = 0u;
      long long v193 = 0u;
      long long v192 = 0u;
      long long v191 = 0u;
      long long v190 = 0u;
      long long v189 = 0u;
      long long v188 = 0u;
      uint64_t v219 = 0;
      long long v218 = 0u;
      long long v217 = 0u;
      long long v216 = 0u;
      long long v215 = 0u;
      long long v214 = 0u;
      long long v213 = 0u;
      long long v212 = 0u;
      long long v211 = 0u;
      long long v210 = 0u;
      long long v209 = 0u;
      long long v208 = 0u;
      long long v207 = 0u;
      long long v206 = 0u;
      long long v205 = 0u;
      long long v204 = 0u;
      uint64_t v235 = 0;
      long long v234 = 0u;
      long long v233 = 0u;
      long long v232 = 0u;
      long long v231 = 0u;
      long long v230 = 0u;
      long long v229 = 0u;
      long long v228 = 0u;
      long long v227 = 0u;
      long long v226 = 0u;
      long long v225 = 0u;
      long long v224 = 0u;
      long long v223 = 0u;
      long long v222 = 0u;
      long long v221 = 0u;
      long long v220 = 0u;
      uint64_t v251 = 0;
      long long v250 = 0u;
      long long v249 = 0u;
      long long v248 = 0u;
      long long v247 = 0u;
      long long v246 = 0u;
      long long v245 = 0u;
      long long v244 = 0u;
      long long v243 = 0u;
      long long v242 = 0u;
      long long v241 = 0u;
      long long v240 = 0u;
      long long v239 = 0u;
      long long v238 = 0u;
      long long v237 = 0u;
      long long v236 = 0u;
      uint64_t v257 = 0;
      memset(v256, 0, sizeof(v256));
      long long v255 = 0u;
      long long v254 = 0u;
      long long v253 = 0u;
      long long v252 = 0u;
      uint64_t v273 = 0;
      long long v272 = 0u;
      long long v271 = 0u;
      long long v270 = 0u;
      long long v269 = 0u;
      long long v268 = 0u;
      long long v267 = 0u;
      long long v266 = 0u;
      long long v265 = 0u;
      long long v264 = 0u;
      long long v263 = 0u;
      long long v262 = 0u;
      long long v261 = 0u;
      long long v260 = 0u;
      long long v259 = 0u;
      long long v258 = 0u;
      uint64_t v289 = 0;
      long long v288 = 0u;
      long long v287 = 0u;
      long long v286 = 0u;
      long long v285 = 0u;
      long long v284 = 0u;
      long long v283 = 0u;
      long long v282 = 0u;
      long long v281 = 0u;
      long long v280 = 0u;
      long long v279 = 0u;
      long long v278 = 0u;
      long long v277 = 0u;
      long long v276 = 0u;
      long long v275 = 0u;
      long long v274 = 0u;
      uint64_t v305 = 0;
      long long v304 = 0u;
      long long v303 = 0u;
      long long v302 = 0u;
      long long v301 = 0u;
      long long v300 = 0u;
      long long v299 = 0u;
      long long v298 = 0u;
      long long v297 = 0u;
      long long v296 = 0u;
      long long v295 = 0u;
      long long v294 = 0u;
      long long v293 = 0u;
      long long v292 = 0u;
      long long v291 = 0u;
      long long v290 = 0u;
      uint64_t v321 = 0;
      long long v320 = 0u;
      long long v319 = 0u;
      long long v318 = 0u;
      long long v317 = 0u;
      long long v316 = 0u;
      long long v315 = 0u;
      long long v314 = 0u;
      long long v313 = 0u;
      long long v312 = 0u;
      long long v311 = 0u;
      long long v310 = 0u;
      long long v309 = 0u;
      long long v308 = 0u;
      long long v307 = 0u;
      long long v306 = 0u;
      uint64_t v337 = 0;
      long long v336 = 0u;
      long long v335 = 0u;
      long long v334 = 0u;
      long long v333 = 0u;
      long long v332 = 0u;
      long long v331 = 0u;
      long long v330 = 0u;
      long long v329 = 0u;
      long long v328 = 0u;
      long long v327 = 0u;
      long long v326 = 0u;
      long long v325 = 0u;
      long long v324 = 0u;
      long long v323 = 0u;
      long long v322 = 0u;
      uint64_t v353 = 0;
      long long v352 = 0u;
      long long v351 = 0u;
      long long v350 = 0u;
      long long v349 = 0u;
      long long v348 = 0u;
      long long v347 = 0u;
      long long v346 = 0u;
      long long v345 = 0u;
      long long v344 = 0u;
      long long v343 = 0u;
      long long v342 = 0u;
      long long v341 = 0u;
      long long v340 = 0u;
      long long v339 = 0u;
      long long v338 = 0u;
      uint64_t v369 = 0;
      long long v368 = 0u;
      long long v367 = 0u;
      long long v366 = 0u;
      long long v365 = 0u;
      long long v364 = 0u;
      long long v363 = 0u;
      long long v362 = 0u;
      long long v361 = 0u;
      long long v360 = 0u;
      long long v359 = 0u;
      long long v358 = 0u;
      long long v357 = 0u;
      long long v356 = 0u;
      long long v355 = 0u;
      long long v354 = 0u;
      bzero(&v370, 0x288uLL);
      memset(&v371[592], 0, 21);
      bzero(v372, 0x248uLL);
      memset(&v372[592], 0, 21);
      bzero(v373, 0x248uLL);
      memset(&v373[592], 0, 21);
      bzero(v374, 0x248uLL);
      memset(&v374[592], 0, 21);
      bzero(v375, 0x248uLL);
      memset(&v375[592], 0, 21);
      bzero(v376, 0x248uLL);
      memset(&v376[592], 0, 21);
      bzero(v377, 0x248uLL);
      memset(&v377[592], 0, 21);
      bzero(v378, 0x248uLL);
      memset(&v378[592], 0, 21);
      bzero(v379, 0x248uLL);
      memset(&v379[592], 0, 21);
      memset(v380, 0, 277);
      memset(&v380[288], 0, 277);
      memset(&v380[576], 0, 277);
      memset(&v380[864], 0, 277);
      memset(&v380[1152], 0, 277);
      memset(&v380[1440], 0, 277);
      memset(&v380[1728], 0, 277);
      memset(&v380[2016], 0, 277);
      memset(v381, 0, 277);
      memset(&v381[288], 0, 277);
      memset(&v381[576], 0, 277);
      memset(&v381[864], 0, 277);
      memset(&v381[1152], 0, 277);
      memset(&v381[1440], 0, 277);
      long long v441 = 0u;
      long long v440 = 0u;
      long long v439 = 0u;
      long long v438 = 0u;
      long long v447 = 0u;
      long long v446 = 0u;
      long long v445 = 0u;
      long long v444 = 0u;
      long long v443 = 0u;
      long long v442 = 0u;
      long long v452 = 0u;
      long long v451 = 0u;
      long long v450 = 0u;
      long long v449 = 0u;
      long long v448 = 0u;
      memset(v458, 0, 21);
      long long v457 = 0u;
      long long v456 = 0u;
      long long v455 = 0u;
      long long v454 = 0u;
      long long v453 = 0u;
      long long v431 = 0u;
      long long v430 = 0u;
      long long v429 = 0u;
      long long v428 = 0u;
      long long v427 = 0u;
      long long v426 = 0u;
      uint64_t v437 = 0;
      long long v436 = 0u;
      long long v435 = 0u;
      long long v434 = 0u;
      long long v433 = 0u;
      long long v432 = 0u;
      long long v408 = 0u;
      long long v423 = 0u;
      long long v422 = 0u;
      long long v421 = 0u;
      long long v420 = 0u;
      long long v415 = 0u;
      long long v414 = 0u;
      char v425 = 0;
      long long v424 = 0u;
      char v419 = 0;
      long long v418 = 0u;
      long long v417 = 0u;
      long long v416 = 0u;
      long long v412 = 0u;
      long long v411 = 0u;
      long long v410 = 0u;
      long long v409 = 0u;
      long long v404 = 0u;
      long long v405 = 0u;
      long long v406 = 0u;
      char v413 = 0;
      long long v400 = 0u;
      char v407 = 0;
      long long v402 = 0u;
      long long v403 = 0u;
      char v401 = 0;
      long long v396 = 0u;
      long long v397 = 0u;
      long long v398 = 0u;
      long long v399 = 0u;
      char v395 = 0;
      long long v394 = 0u;
      long long v393 = 0u;
      long long v392 = 0u;
      long long v391 = 0u;
      long long v390 = 0u;
      long long v385 = 0u;
      long long v386 = 0u;
      long long v387 = 0u;
      long long v388 = 0u;
      memset(v382, 0, sizeof(v382));
      char v389 = 0;
      long long v384 = 0u;
      memset(v383, 0, 81);
      memset(&v381[2016], 0, 277);
      memset(&v381[1728], 0, 277);
      memset(&v458[32], 0, 277);
      memset(&v458[320], 0, 277);
      memset(&v458[608], 0, 277);
      memset(&v458[896], 0, 277);
      memset(&v458[1184], 0, 277);
      memset(&v458[1472], 0, 277);
      memset(&v458[1760], 0, 277);
      memset(&v458[2048], 0, 277);
      memset(&v458[2336], 0, 277);
      memset(&v458[2624], 0, 277);
      memset(&v458[2912], 0, 277);
      memset(&v458[3200], 0, 277);
      memset(&v458[3488], 0, 277);
      memset(&v458[3776], 0, 277);
      memset(&v458[4064], 0, 277);
      bzero(v459, 0x248uLL);
      *(void *)((char *)v460 + 5) = 0;
      v460[0] = 0;
      v459[74] = 0;
      bzero(v461, 0x248uLL);
      *(void *)((char *)v462 + 5) = 0;
      v462[0] = 0;
      v461[74] = 0;
      bzero(v463, 0x248uLL);
      *(void *)((char *)v464 + 5) = 0;
      v464[0] = 0;
      v463[74] = 0;
      bzero(v465, 0x248uLL);
      *(void *)((char *)v466 + 5) = 0;
      v466[0] = 0;
      v465[74] = 0;
      bzero(v467, 0x248uLL);
      *(void *)((char *)v468 + 5) = 0;
      v468[0] = 0;
      v467[74] = 0;
      bzero(v469, 0x248uLL);
      *(void *)((char *)v470 + 5) = 0;
      v470[0] = 0;
      v469[74] = 0;
      bzero(v471, 0x248uLL);
      *(void *)((char *)v472 + 5) = 0;
      v472[0] = 0;
      v471[74] = 0;
      bzero(v473, 0x248uLL);
      *(void *)((char *)v474 + 5) = 0;
      v474[0] = 0;
      v473[74] = 0;
      bzero(v475, 0x248uLL);
      *(void *)((char *)v476 + 5) = 0;
      v476[0] = 0;
      v475[74] = 0;
      long long v477 = 0u;
      long long v478 = 0u;
      long long v479 = 0u;
      long long v480 = 0u;
      long long v481 = 0u;
      long long v482 = 0u;
      long long v483 = 0u;
      long long v484 = 0u;
      long long v485 = 0u;
      long long v486 = 0u;
      long long v487 = 0u;
      uint64_t v488 = 0;
      long long v489 = 0u;
      long long v490 = 0u;
      long long v491 = 0u;
      long long v492 = 0u;
      long long v493 = 0u;
      long long v494 = 0u;
      long long v21 = *(_OWORD *)(v5 + 32);
      v132[0] = *(_OWORD *)(v5 + 16);
      v132[1] = v21;
      uint64_t v133 = *(void *)(v5 + 48);
      uint64_t v22 = v20 & 0xFFFFFFFFFFLL;
      sub_1B62C9DA8(v6, (uint64_t)v132, v20 & 0xFFFFFFFFFFLL, v497);
      sub_1B62CA210((uint64_t)v497, (uint64_t)&v570, (unint64_t *)&qword_1EB97DC50);
      uint64_t v23 = v570;
      if (v570)
      {
        uint64_t v24 = v574;
        uint64_t v25 = v573;
        uint64_t v26 = v575;
        uint64_t v27 = v576;
        long long v28 = v577;
        long long v29 = v578;
        uint64_t v30 = v579;
        uint64_t v31 = v580;
        unint64_t v32 = v571 | ((unint64_t)v572 << 32);
      }
      else
      {
        unint64_t v32 = 0;
        uint64_t v25 = 0;
        uint64_t v24 = 0;
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v30 = 0;
        uint64_t v31 = 0;
        long long v28 = 0uLL;
        long long v29 = 0uLL;
      }
      float32x4_t v115 = (float32x4_t)vandq_s8(v114, v116);
      v611[0] = v570;
      v611[1] = v32;
      v611[2] = v25;
      v611[3] = v24;
      v611[4] = v26;
      v611[5] = v27;
      long long v612 = v28;
      long long v613 = v29;
      uint64_t v614 = v30;
      uint64_t v615 = v31;
      long long v33 = *(_OWORD *)(v5 + 72);
      v130[0] = *(_OWORD *)(v5 + 56);
      v130[1] = v33;
      uint64_t v131 = *(void *)(v5 + 88);
      sub_1B62C9DA8(v113, (uint64_t)v130, v22, v498);
      sub_1B62CA210((uint64_t)v498, (uint64_t)&v559, (unint64_t *)&qword_1EB97DC50);
      if (v559)
      {
        uint64_t v34 = v563;
        uint64_t v35 = v562;
        uint64_t v36 = v564;
        uint64_t v37 = v565;
        long long v38 = v566;
        long long v39 = v567;
        uint64_t v40 = v568;
        uint64_t v41 = v569;
        unint64_t v42 = v560 | ((unint64_t)v561 << 32);
      }
      else
      {
        uint64_t v40 = 0;
        unint64_t v42 = 0;
        uint64_t v35 = 0;
        uint64_t v34 = 0;
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        uint64_t v41 = 0;
        long long v39 = 0uLL;
        long long v38 = 0uLL;
      }
      v606[0] = v559;
      v606[1] = v42;
      v606[2] = v35;
      v606[3] = v34;
      v606[4] = v36;
      v606[5] = v37;
      long long v607 = v38;
      long long v608 = v39;
      uint64_t v609 = v40;
      uint64_t v610 = v41;
      if ((int)v40 >= 8) {
        LODWORD(v40) = 8;
      }
      if ((int)v30 >= 8) {
        int v43 = 8;
      }
      else {
        int v43 = v30;
      }
      if (!v23) {
        int v43 = 0;
      }
      int v112 = v40;
      *(void *)&long long v134 = __PAIR64__(v40, v43);
      long long v44 = *(_OWORD *)(v5 + 112);
      v128[0] = *(_OWORD *)(v5 + 96);
      v128[1] = v44;
      uint64_t v129 = *(void *)(v5 + 128);
      sub_1B62C9DA8(v113, (uint64_t)v128, v22, v499);
      sub_1B62CA210((uint64_t)v499, (uint64_t)&v548, (unint64_t *)&qword_1EB97DC50);
      if (v548)
      {
        uint64_t v45 = v552;
        uint64_t v46 = v551;
        uint64_t v47 = v553;
        uint64_t v48 = v554;
        long long v49 = v555;
        long long v50 = v556;
        uint64_t v51 = v557;
        uint64_t v52 = v558;
        unint64_t v53 = v549 | ((unint64_t)v550 << 32);
        if ((int)v557 >= 8) {
          int v54 = 8;
        }
        else {
          int v54 = v557;
        }
      }
      else
      {
        int v54 = 0;
        unint64_t v53 = 0;
        uint64_t v46 = 0;
        uint64_t v45 = 0;
        uint64_t v47 = 0;
        uint64_t v48 = 0;
        uint64_t v51 = 0;
        uint64_t v52 = 0;
        long long v49 = 0uLL;
        long long v50 = 0uLL;
      }
      v55.i64[1] = v115.i64[1];
      *(float32x2_t *)v55.f32 = vsub_f32(0, *(float32x2_t *)v115.f32);
      float32x4_t v117 = v55;
      v601[0] = v548;
      v601[1] = v53;
      v601[2] = v46;
      v601[3] = v45;
      v601[4] = v47;
      v601[5] = v48;
      long long v602 = v49;
      long long v603 = v50;
      uint64_t v604 = v51;
      uint64_t v605 = v52;
      DWORD2(v134) = v54;
      long long v56 = *(_OWORD *)(v5 + 152);
      v126[0] = *(_OWORD *)(v5 + 136);
      v126[1] = v56;
      uint64_t v127 = *(void *)(v5 + 168);
      sub_1B62C9DA8(v113, (uint64_t)v126, v22, v500);
      sub_1B62CA210((uint64_t)v500, (uint64_t)&v537, (unint64_t *)&qword_1EB97DC50);
      if (v537)
      {
        uint64_t v57 = v541;
        uint64_t v58 = v540;
        uint64_t v59 = v542;
        uint64_t v60 = v543;
        long long v61 = v544;
        long long v62 = v545;
        uint64_t v63 = v546;
        uint64_t v64 = v547;
        unint64_t v65 = v538 | ((unint64_t)v539 << 32);
      }
      else
      {
        uint64_t v63 = 0;
        unint64_t v65 = 0;
        uint64_t v58 = 0;
        uint64_t v57 = 0;
        uint64_t v59 = 0;
        uint64_t v60 = 0;
        uint64_t v64 = 0;
        long long v62 = 0uLL;
        long long v61 = 0uLL;
      }
      v596[0] = v537;
      v596[1] = v65;
      v596[2] = v58;
      v596[3] = v57;
      v596[4] = v59;
      v596[5] = v60;
      long long v597 = v61;
      long long v598 = v62;
      uint64_t v599 = v63;
      uint64_t v600 = v64;
      if ((int)v63 >= 1) {
        int v66 = 1;
      }
      else {
        int v66 = v63;
      }
      int v67 = v66;
      HIDWORD(v134) = v66;
      long long v68 = *(_OWORD *)(v5 + 272);
      v124[0] = *(_OWORD *)(v5 + 256);
      v124[1] = v68;
      uint64_t v125 = *(void *)(v5 + 288);
      sub_1B62C9DA8(v113, (uint64_t)v124, v22, v501);
      sub_1B62CA210((uint64_t)v501, (uint64_t)&v526, (unint64_t *)&qword_1EB97DC50);
      if (v526)
      {
        uint64_t v69 = v530;
        uint64_t v70 = v529;
        uint64_t v71 = v531;
        uint64_t v72 = v532;
        long long v73 = v533;
        long long v74 = v534;
        uint64_t v75 = v535;
        uint64_t v76 = v536;
        unint64_t v77 = v527 | ((unint64_t)v528 << 32);
        if ((int)v535 >= 8) {
          int v78 = 8;
        }
        else {
          int v78 = v535;
        }
      }
      else
      {
        int v78 = 0;
        unint64_t v77 = 0;
        uint64_t v70 = 0;
        uint64_t v69 = 0;
        uint64_t v71 = 0;
        uint64_t v72 = 0;
        uint64_t v75 = 0;
        uint64_t v76 = 0;
        long long v73 = 0uLL;
        long long v74 = 0uLL;
      }
      float32x4_t v79 = v117;
      v79.f32[2] = 0.0 - v115.f32[2];
      float32x4_t v118 = v79;
      v591[0] = v526;
      v591[1] = v77;
      v591[2] = v70;
      v591[3] = v69;
      v591[4] = v71;
      v591[5] = v72;
      long long v592 = v73;
      long long v593 = v74;
      uint64_t v594 = v75;
      uint64_t v595 = v76;
      DWORD2(v135) = v78;
      long long v80 = *(_OWORD *)(v5 + 192);
      v122[0] = *(_OWORD *)(v5 + 176);
      v122[1] = v80;
      uint64_t v123 = *(void *)(v5 + 208);
      sub_1B62C9DA8(v113, (uint64_t)v122, v22, v502);
      sub_1B62CA210((uint64_t)v502, (uint64_t)&v515, (unint64_t *)&qword_1EB97DC50);
      if (v515)
      {
        uint64_t v81 = v519;
        uint64_t v82 = v518;
        uint64_t v83 = v520;
        uint64_t v84 = v521;
        long long v85 = v522;
        long long v86 = v523;
        uint64_t v87 = v524;
        uint64_t v88 = v525;
        unint64_t v89 = v516 | ((unint64_t)v517 << 32);
        if ((int)v524 >= 8) {
          int v90 = 8;
        }
        else {
          int v90 = v524;
        }
      }
      else
      {
        int v90 = 0;
        unint64_t v89 = 0;
        uint64_t v82 = 0;
        uint64_t v81 = 0;
        uint64_t v83 = 0;
        uint64_t v84 = 0;
        uint64_t v87 = 0;
        uint64_t v88 = 0;
        long long v86 = 0uLL;
        long long v85 = 0uLL;
      }
      float32x4_t v91 = v118;
      v91.i32[3] = 1.0;
      float32x4_t v119 = v91;
      v586[0] = v515;
      v586[1] = v89;
      v586[2] = v82;
      v586[3] = v81;
      v586[4] = v83;
      v586[5] = v84;
      long long v587 = v85;
      long long v588 = v86;
      uint64_t v589 = v87;
      uint64_t v590 = v88;
      LODWORD(v135) = v90;
      long long v92 = *(_OWORD *)(v5 + 232);
      v120[0] = *(_OWORD *)(v5 + 216);
      v120[1] = v92;
      uint64_t v121 = *(void *)(v5 + 248);
      sub_1B62C9DA8(v113, (uint64_t)v120, v22, v503);
      sub_1B62CA210((uint64_t)v503, (uint64_t)&v504, (unint64_t *)&qword_1EB97DC50);
      if (v504)
      {
        uint64_t v93 = v508;
        uint64_t v94 = v507;
        uint64_t v95 = v509;
        uint64_t v96 = v510;
        long long v97 = v511;
        long long v98 = v512;
        uint64_t v99 = v513;
        uint64_t v100 = v514;
        unint64_t v101 = v505 | ((unint64_t)v506 << 32);
        if ((int)v513 >= 8) {
          int v102 = 8;
        }
        else {
          int v102 = v513;
        }
      }
      else
      {
        int v102 = 0;
        unint64_t v101 = 0;
        uint64_t v94 = 0;
        uint64_t v93 = 0;
        uint64_t v95 = 0;
        uint64_t v96 = 0;
        uint64_t v99 = 0;
        uint64_t v100 = 0;
        long long v97 = 0uLL;
        long long v98 = 0uLL;
      }
      v581[0] = v504;
      v581[1] = v101;
      v581[2] = v94;
      v581[3] = v93;
      v581[4] = v95;
      v581[5] = v96;
      long long v582 = v97;
      long long v583 = v98;
      uint64_t v584 = v99;
      uint64_t v585 = v100;
      DWORD1(v135) = v102;
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = MEMORY[0x1E4FBC860];
      uint64_t v104 = swift_allocObject();
      *(void *)&long long v105 = 0;
      *((float *)&v105 + 2) = 1.0 / ceilf(sqrtf((float)(v112 + 6 * v67 + v102)));
      *((float *)&v105 + 3) = *((float *)&v105 + 2);
      *(_OWORD *)(v104 + 16) = v105;
      sub_1B6327494((uint64_t)v138, (float32x4_t)xmmword_1B6E4F300, (float32x4_t)xmmword_1B6E4F320, (float32x4_t)xmmword_1B6E4F2E0, v119, (uint64_t)v256, (uint64_t)v611);
      sub_1B6329A80((uint64_t)v256, (float32x4_t)xmmword_1B6E4F300, (float32x4_t)xmmword_1B6E4F320, (float32x4_t)xmmword_1B6E4F2E0, v119, (uint64_t)v371, (uint64_t)v606, v103, v104);
      sub_1B63295BC((uint64_t)v371, v115, (uint64_t)v379, (uint64_t)v601);
      sub_1B6328E1C((uint64_t)v379, v115, (float32x4_t)xmmword_1B6E4F300, (float32x4_t)xmmword_1B6E4F320, (float32x4_t)xmmword_1B6E4F2E0, v119, (uint64_t)v380, (uint64_t)v596, v103, (float32x4_t *)v104);
      sub_1B6328A2C((uint64_t)v382, (uint64_t)v383, (uint64_t)v591);
      sub_1B63280AC((uint64_t)v380, v115, (float32x4_t)xmmword_1B6E4F300, (float32x4_t)xmmword_1B6E4F320, (float32x4_t)xmmword_1B6E4F2E0, v119, (uint64_t)v381, (uint64_t)v586);
      uint64_t v106 = sub_1B6327C20((uint64_t)v381, v115, (float32x4_t)xmmword_1B6E4F300, (float32x4_t)xmmword_1B6E4F320, (float32x4_t)xmmword_1B6E4F2E0, v119, (uint64_t)v382, (uint64_t)v581, v103, v104);
      MEMORY[0x1F4188790](v106, v107);
      uint64_t v108 = *(void **)(v113 + 176);
      swift_retain();
      sub_1B636E6E4((uint64_t)&type metadata for LightsUniforms, (uint64_t)&off_1F0F643E8, v108, (void (*)(uint64_t))sub_1B6371268);
      uint64_t v109 = swift_release();
      MEMORY[0x1F4188790](v109, v110);
      uint64_t v111 = *(void **)(v113 + 176);
      swift_retain();
      sub_1B636E6CC((uint64_t)&type metadata for ShadowState, (uint64_t)&off_1F0F58468, v111, (void (*)(uint64_t))sub_1B6371218);
      swift_release();
      sub_1B632F170(v498);
      sub_1B632F170(v497);
      sub_1B632F170(v499);
      sub_1B632F170(v500);
      sub_1B632F170(v501);
      sub_1B632F170(v502);
      sub_1B632F170(v503);
      swift_release();
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_1B63273D0(uint64_t a1)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v2 = sub_1B636E9A8((uint64_t)&type metadata for FrameConstantsStorage);
  if (v4)
  {
    uint64_t v6 = *(void *)(a1 + 16) + v2;
    uint64_t v7 = 32 * v3;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + 32 * v3 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v5 = *(void *)(v6 + 848);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + v7 + 24));
  }
  else
  {
    os_unfair_recursive_lock_unlock();
    return 0;
  }
  return v5;
}

uint64_t *sub_1B6327494(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, uint64_t a6, uint64_t a7)
{
  sub_1B63292B4(a7, (uint64_t)v110, (uint64_t (*)(void))sub_1B63294DC);
  uint64_t v82 = (uint64_t *)a7;
  uint64_t result = (uint64_t *)sub_1B63292B4(a7, (uint64_t)v111, (uint64_t (*)(void))sub_1B63294DC);
  if (*(void *)&v111[0])
  {
    if (v117 >= 1)
    {
      uint64_t v88 = v114;
      if (v114)
      {
        uint64_t v10 = v116[4];
        int v90 = *(unsigned __int8 *)(v115 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v118[0] = v111[0];
        v118[1] = v111[1];
        uint64_t v119 = v112;
        uint64_t v86 = (uint64_t)(v116 + 6);
        uint64_t v87 = v113;
        float32x4_t v91 = v116;
        long long v85 = v116 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v11 = 0;
        uint64_t v83 = a1 + 96;
        float32x4_t v96 = (float32x4_t)vdupq_n_s32(0x3ABFE803u);
        __asm { FMOV            V0.2S, #1.0 }
        unsigned int v95 = _D0;
        uint64_t v84 = v10;
        do
        {
          uint64_t v89 = v11;
          uint64_t v17 = (unsigned int *)(v87 + 48 * v11);
          uint64_t v104 = *v17;
          uint64_t v18 = v17[2];
          uint64_t v101 = v17[1];
          uint64_t v20 = (uint64_t *)*((void *)v17 + 2);
          uint64_t v19 = *((void *)v17 + 3);
          uint64_t v22 = *((void *)v17 + 4);
          uint64_t v21 = *((void *)v17 + 5);
          if (v90)
          {
            uint64_t v23 = *(os_unfair_lock_s **)(v21 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v23);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v10);
          sub_1B62CA210(v86, (uint64_t)v120, &qword_1EB97DE20);
          uint64_t v24 = v91[4];
          uint64_t v25 = *(void *)(*(void *)(*(void *)(*(void *)(v21 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v91[6] = ecs_stack_allocator_allocate(v24, 48 * v25, 8);
          v91[7] = v25;
          v85[1] = 0;
          v85[2] = 0;
          *long long v85 = 0;
          swift_release();
          uint64_t v26 = sub_1B62C9024((uint64_t)&type metadata for DirectionalLight, (uint64_t)&off_1F0F6BBC0, v20, v19, v22, (uint64_t)v91);
          uint64_t v27 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v20, v19, v22, (uint64_t)v91);
          uint64_t v28 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v20, v19, v22, (uint64_t)v91);
          long long v29 = (float32x4_t *)v28;
          if (v20)
          {
            if (v22)
            {
              uint64_t v30 = v27 + 32;
              uint64_t v31 = (float *)(v26 + 8);
              uint64_t v32 = v83 + (v18 << 8);
              do
              {
                if (v18 <= 7)
                {
                  float32x4_t v53 = *(float32x4_t *)v30;
                  int8x16_t v54 = (int8x16_t)vabsq_f32(*(float32x4_t *)v30);
                  if (*(float *)v54.i32 <= 0.00000011921
                    && (v54.i32[0] = vextq_s8(v54, v54, 8uLL).u32[0],
                        *(int32x2_t *)v54.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v54.i8),
                        (v54.i8[4] & 1) != 0)
                    && (v54.i8[0] & 1) != 0)
                  {
                    float32x4_t v107 = 0u;
                  }
                  else
                  {
                    int32x4_t v33 = (int32x4_t)vmulq_f32(v53, v53);
                    v33.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v33, 2), vadd_f32(*(float32x2_t *)v33.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v33.i8, 1))).u32[0];
                    float32x2_t v34 = vrsqrte_f32((float32x2_t)v33.u32[0]);
                    float32x2_t v35 = vmul_f32(v34, vrsqrts_f32((float32x2_t)v33.u32[0], vmul_f32(v34, v34)));
                    float32x4_t v36 = vmulq_n_f32(v53, vmul_f32(v35, vrsqrts_f32((float32x2_t)v33.u32[0], vmul_f32(v35, v35))).f32[0]);
                    v36.i32[3] = v94;
                    float32x4_t v107 = v36;
                  }
                  float v37 = *(v31 - 1);
                  float v38 = *v31;
                  float v39 = v31[1];
                  float32x4_t v102 = *v29;
                  float v105 = *(v31 - 2);
                  v121.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v30 - 32))), a3, *(float32x2_t *)(v30 - 32), 1), a4, *(float32x4_t *)(v30 - 32), 2), a5, *(float32x4_t *)(v30 - 32), 3);
                  v121.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v30 - 16))), a3, *(float32x2_t *)(v30 - 16), 1), a4, *(float32x4_t *)(v30 - 16), 2), a5, *(float32x4_t *)(v30 - 16), 3);
                  v121.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v53.f32[0]), a3, *(float32x2_t *)v53.f32, 1), a4, v53, 2), a5, v53, 3);
                  v121.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v30 + 16))), a3, *(float32x2_t *)(v30 + 16), 1), a4, *(float32x4_t *)(v30 + 16), 2), a5, *(float32x4_t *)(v30 + 16), 3);
                  simd_float4x4 v122 = __invert_f4(v121);
                  float v41 = v38 + 0.0001;
                  if (v38 < -100000.0) {
                    float v41 = -100000.0;
                  }
                  *(float *)v40.i32 = fmaxf(v38, -100000.0);
                  if (v39 > v41) {
                    float v41 = v39;
                  }
                  *(float *)v40.i32 = v41 - *(float *)v40.i32;
                  *(float32x2_t *)v42.i8 = vdiv_f32((float32x2_t)__PAIR64__(LODWORD(v41), v95), (float32x2_t)vdup_lane_s32(v40, 0));
                  v43.i64[0] = 0;
                  v43.i32[2] = 0;
                  *(float *)&v43.i32[3] = (float)(v37 - v37) / (float)((float)-v37 - v37);
                  v44.i32[0] = 0;
                  v44.i32[2] = 0;
                  *(float *)&v44.i32[1] = 2.0 / (float)(v37 + v37);
                  v42.i64[1] = v42.i64[0];
                  int32x4_t v45 = vzip1q_s32((int32x4_t)v44.u64[0], (int32x4_t)0);
                  float32x4_t v46 = vmulq_f32(vmulq_n_f32(v102, v105), v96);
                  v46.i32[3] = v109;
                  *(float32x4_t *)(v32 - 96) = v46;
                  *(float32x4_t *)(v32 - 80) = v107;
                  *(simd_float4x4 *)(v32 - 64) = v122;
                  int v47 = 0;
                  __int32 v48 = v44.i32[1];
                  long long v49 = (float *)v32;
                  vst2_f32(v49, *(float32x2x2_t *)((char *)&v45 - 8));
                  v49 += 4;
                  v44.i32[3] = v43.i32[3];
                  float32x2x2_t v50 = (float32x2x2_t)vzip2q_s32(v43, v42);
                  *(int32x4_t *)long long v49 = vzip2q_s32((int32x4_t)0, v45);
                  int32x4_t v51 = vzip2q_s32(v44, (int32x4_t)xmmword_1B6E4F370);
                  uint64_t v52 = (float *)(v32 + 32);
                  vst2_f32(v52, v50);
                  *(int32x4_t *)(v32 + 48) = vzip2q_s32((int32x4_t)v50, v51);
                  *(void *)(v32 + 72) = 0;
                  *(void *)(v32 + 80) = 0;
                  *(void *)(v32 + 64) = 0;
                  *(_OWORD *)(v32 + 96) = 0u;
                  *(_OWORD *)(v32 + 112) = 0u;
                  *(_OWORD *)(v32 + 128) = 0u;
                  *(_OWORD *)(v32 + 144) = 0u;
                }
                v30 += 64;
                v31 += 4;
                ++v29;
                ++v18;
                v32 += 256;
                --v22;
              }
              while (v22);
            }
          }
          else if (v104 != v101)
          {
            uint64_t v55 = v27 + (v104 << 6) + 32;
            long long v56 = (float *)(v26 + 16 * v104 + 8);
            uint64_t v57 = (float32x4_t *)(v28 + 16 * v104);
            uint64_t v58 = v83 + (v18 << 8);
            uint64_t v59 = v101 - v104;
            do
            {
              if (v18 <= 7)
              {
                float32x4_t v80 = *(float32x4_t *)v55;
                int8x16_t v81 = (int8x16_t)vabsq_f32(*(float32x4_t *)v55);
                if (*(float *)v81.i32 <= 0.00000011921
                  && (v81.i32[0] = vextq_s8(v81, v81, 8uLL).u32[0],
                      *(int32x2_t *)v81.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v81.i8),
                      (v81.i8[4] & 1) != 0)
                  && (v81.i8[0] & 1) != 0)
                {
                  float32x4_t v108 = 0u;
                }
                else
                {
                  int32x4_t v60 = (int32x4_t)vmulq_f32(v80, v80);
                  v60.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v60, 2), vadd_f32(*(float32x2_t *)v60.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v60.i8, 1))).u32[0];
                  float32x2_t v61 = vrsqrte_f32((float32x2_t)v60.u32[0]);
                  float32x2_t v62 = vmul_f32(v61, vrsqrts_f32((float32x2_t)v60.u32[0], vmul_f32(v61, v61)));
                  float32x4_t v63 = vmulq_n_f32(v80, vmul_f32(v62, vrsqrts_f32((float32x2_t)v60.u32[0], vmul_f32(v62, v62))).f32[0]);
                  v63.i32[3] = v92;
                  float32x4_t v108 = v63;
                }
                float v64 = *(v56 - 1);
                float v65 = *v56;
                float v66 = v56[1];
                float32x4_t v103 = *v57;
                float v106 = *(v56 - 2);
                v123.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v55 - 32))), a3, *(float32x2_t *)(v55 - 32), 1), a4, *(float32x4_t *)(v55 - 32), 2), a5, *(float32x4_t *)(v55 - 32), 3);
                v123.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v55 - 16))), a3, *(float32x2_t *)(v55 - 16), 1), a4, *(float32x4_t *)(v55 - 16), 2), a5, *(float32x4_t *)(v55 - 16), 3);
                v123.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v80.f32[0]), a3, *(float32x2_t *)v80.f32, 1), a4, v80, 2), a5, v80, 3);
                v123.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, COERCE_FLOAT(*(_OWORD *)(v55 + 16))), a3, *(float32x2_t *)(v55 + 16), 1), a4, *(float32x4_t *)(v55 + 16), 2), a5, *(float32x4_t *)(v55 + 16), 3);
                simd_float4x4 v124 = __invert_f4(v123);
                float v68 = v65 + 0.0001;
                if (v65 < -100000.0) {
                  float v68 = -100000.0;
                }
                *(float *)v67.i32 = fmaxf(v65, -100000.0);
                if (v66 > v68) {
                  float v68 = v66;
                }
                *(float *)v67.i32 = v68 - *(float *)v67.i32;
                *(float32x2_t *)v69.i8 = vdiv_f32((float32x2_t)__PAIR64__(LODWORD(v68), v95), (float32x2_t)vdup_lane_s32(v67, 0));
                v70.i64[0] = 0;
                v70.i32[2] = 0;
                *(float *)&v70.i32[3] = (float)(v64 - v64) / (float)((float)-v64 - v64);
                v71.i32[0] = 0;
                v71.i32[2] = 0;
                *(float *)&v71.i32[1] = 2.0 / (float)(v64 + v64);
                v69.i64[1] = v69.i64[0];
                int32x4_t v72 = vzip1q_s32((int32x4_t)v71.u64[0], (int32x4_t)0);
                float32x4_t v73 = vmulq_f32(vmulq_n_f32(v103, v106), v96);
                v73.i32[3] = v93;
                *(float32x4_t *)(v58 - 96) = v73;
                *(float32x4_t *)(v58 - 80) = v108;
                *(simd_float4x4 *)(v58 - 64) = v124;
                int v74 = 0;
                __int32 v75 = v71.i32[1];
                uint64_t v76 = (float *)v58;
                vst2_f32(v76, *(float32x2x2_t *)((char *)&v72 - 8));
                v76 += 4;
                v71.i32[3] = v70.i32[3];
                float32x2x2_t v77 = (float32x2x2_t)vzip2q_s32(v70, v69);
                *(int32x4_t *)uint64_t v76 = vzip2q_s32((int32x4_t)0, v72);
                int32x4_t v78 = vzip2q_s32(v71, (int32x4_t)xmmword_1B6E4F370);
                float32x4_t v79 = (float *)(v58 + 32);
                vst2_f32(v79, v77);
                *(int32x4_t *)(v58 + 48) = vzip2q_s32((int32x4_t)v77, v78);
                *(void *)(v58 + 72) = 0;
                *(void *)(v58 + 80) = 0;
                *(void *)(v58 + 64) = 0;
                *(_OWORD *)(v58 + 96) = 0u;
                *(_OWORD *)(v58 + 112) = 0u;
                *(_OWORD *)(v58 + 128) = 0u;
                *(_OWORD *)(v58 + 144) = 0u;
              }
              v55 += 64;
              v56 += 4;
              ++v57;
              ++v18;
              v58 += 256;
              --v59;
            }
            while (v59);
          }
          uint64_t v10 = v84;
          sub_1B6345178(v91, (unsigned __int16 **)v118, (uint64_t)v120);
          sub_1B634507C((char *)v21);
          ecs_stack_allocator_pop_snapshot(v84);
          if (v90)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 376));
          }
          swift_release();
          uint64_t v11 = v89 + 1;
        }
        while (v89 + 1 != v88);
        return sub_1B632F170(v82);
      }
    }
  }
  return result;
}

uint64_t *sub_1B6327C20(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v74 = a10;
  sub_1B63292B4(a8, (uint64_t)v59, (uint64_t (*)(void))sub_1B632931C);
  uint64_t result = (uint64_t *)sub_1B63292B4(a8, (uint64_t)v60, (uint64_t (*)(void))sub_1B632931C);
  if (*(void *)&v60[0])
  {
    if (v66 >= 1)
    {
      uint64_t v44 = v63;
      if (v63)
      {
        float v38 = (uint64_t *)a8;
        int8x16_t v14 = v65;
        uint64_t v15 = v65[4];
        int v50 = *(unsigned __int8 *)(v64 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v67[0] = v60[0];
        v67[1] = v60[1];
        uint64_t v68 = v61;
        uint64_t v41 = (uint64_t)(v65 + 6);
        uint64_t v42 = v62;
        int32x2_t v40 = v65 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v16 = 0;
        uint64_t v43 = v15;
        do
        {
          uint64_t v48 = v16;
          uint64_t v49 = v11;
          uint64_t v17 = (unsigned int *)(v42 + 48 * v16);
          uint64_t v46 = *v17;
          uint64_t v18 = v17[2];
          uint64_t v45 = v17[1];
          uint64_t v20 = (uint64_t *)*((void *)v17 + 2);
          uint64_t v19 = *((void *)v17 + 3);
          uint64_t v22 = *((void *)v17 + 4);
          uint64_t v21 = *((void *)v17 + 5);
          if (v50)
          {
            uint64_t v23 = *(os_unfair_lock_s **)(v21 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v23);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v15);
          sub_1B62CA210(v41, (uint64_t)v69, &qword_1EB97DE20);
          uint64_t v24 = v14[4];
          uint64_t v25 = *(void *)(*(void *)(*(void *)(*(void *)(v21 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v14[6] = ecs_stack_allocator_allocate(v24, 48 * v25, 8);
          v14[7] = v25;
          v40[1] = 0;
          _OWORD v40[2] = 0;
          *int32x2_t v40 = 0;
          swift_release();
          uint64_t v26 = sub_1B62C9024((uint64_t)&type metadata for SpotLight, (uint64_t)&off_1F0FA9CE8, v20, v19, v22, (uint64_t)v14);
          uint64_t v47 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v20, v19, v22, (uint64_t)v14);
          uint64_t v27 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v20, v19, v22, (uint64_t)v14);
          uint64_t v28 = sub_1B62C9024((uint64_t)&type metadata for Shadow, (uint64_t)&off_1F0FA18B0, v20, v19, v22, (uint64_t)v14);
          if (v20)
          {
            if (v22)
            {
              long long v29 = (uint64_t *)(v28 + 8);
              uint64_t v30 = (char *)(a1 + 288 * v18);
              uint64_t v31 = v47 + 32;
              do
              {
                if (v18 <= 7)
                {
                  long long v70 = *(_OWORD *)v26;
                  uint64_t v71 = *(void *)(v26 + 16);
                  sub_1B69CFAD0((uint64_t)&v70, *((_DWORD *)v29 - 2), *v29, a9, v74, (uint64_t)__src, *(simd_float4 *)(v31 - 32), *(simd_float4 *)(v31 - 16), *(simd_float4 *)v31, *(float32x4_t *)(v31 + 16), *v27, a2, a3, a4, a5, a6);
                  memcpy(v30, __src, 0x120uLL);
                }
                v29 += 2;
                ++v18;
                v30 += 288;
                ++v27;
                v26 += 24;
                v31 += 64;
                --v22;
              }
              while (v22);
            }
          }
          else if (v46 != v45)
          {
            uint64_t v32 = (uint64_t *)(v28 + 16 * v46 + 8);
            int32x4_t v33 = (char *)(a1 + 288 * v18);
            uint64_t v34 = v45 - v46;
            float32x2_t v35 = &v27[v46];
            uint64_t v36 = v26 + 24 * v46;
            uint64_t v37 = v47 + (v46 << 6) + 32;
            do
            {
              if (v18 <= 7)
              {
                long long v72 = *(_OWORD *)v36;
                uint64_t v73 = *(void *)(v36 + 16);
                sub_1B69CFAD0((uint64_t)&v72, *((_DWORD *)v32 - 2), *v32, a9, v74, (uint64_t)v58, *(simd_float4 *)(v37 - 32), *(simd_float4 *)(v37 - 16), *(simd_float4 *)v37, *(float32x4_t *)(v37 + 16), *v35, a2, a3, a4, a5, a6);
                memcpy(v33, v58, 0x120uLL);
              }
              v32 += 2;
              ++v18;
              v33 += 288;
              ++v35;
              v36 += 24;
              v37 += 64;
              --v34;
            }
            while (v34);
          }
          sub_1B6345178(v14, (unsigned __int16 **)v67, (uint64_t)v69);
          uint64_t v11 = v49;
          sub_1B634507C((char *)v21);
          uint64_t v15 = v43;
          ecs_stack_allocator_pop_snapshot(v43);
          if (v50)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 376));
          }
          swift_release();
          uint64_t v16 = v48 + 1;
        }
        while (v48 + 1 != v44);
        return sub_1B632F170(v38);
      }
    }
  }
  return result;
}

uint64_t *sub_1B63280AC(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  sub_1B63292B4(a8, (uint64_t)v129, (uint64_t (*)(void))sub_1B632946C);
  uint64_t v76 = (uint64_t *)a8;
  uint64_t result = (uint64_t *)sub_1B63292B4(a8, (uint64_t)v130, (uint64_t (*)(void))sub_1B632946C);
  if (*(void *)&v130[0])
  {
    if (v136 >= 1)
    {
      uint64_t v82 = v133;
      if (v133)
      {
        uint64_t v13 = v135[4];
        int v84 = *(unsigned __int8 *)(v134 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v137[0] = v130[0];
        v137[1] = v130[1];
        uint64_t v138 = v131;
        uint64_t v80 = (uint64_t)(v135 + 6);
        uint64_t v81 = v132;
        long long v140 = v135;
        float32x4_t v79 = v135 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v14 = 0;
        uint64_t v77 = a1 + 256;
        float32x4_t v91 = (float32x4_t)vdupq_n_s32(0x40490FDAu);
        float32x4_t v92 = (float32x4_t)vdupq_n_s32(0x3ABFE803u);
        uint64_t v78 = v13;
        while (1)
        {
          uint64_t v125 = v9;
          uint64_t v83 = v14;
          uint64_t v15 = (unsigned int *)(v81 + 48 * v14);
          uint64_t v122 = *v15;
          uint64_t v16 = v15[2];
          uint64_t v119 = v15[1];
          uint64_t v18 = (uint64_t *)*((void *)v15 + 2);
          uint64_t v17 = *((void *)v15 + 3);
          uint64_t v20 = *((void *)v15 + 4);
          uint64_t v19 = *((void *)v15 + 5);
          if (v84)
          {
            uint64_t v21 = *(os_unfair_lock_s **)(v19 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v21);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v19 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v13);
          sub_1B62CA210(v80, (uint64_t)v139, &qword_1EB97DE20);
          uint64_t v22 = v140;
          uint64_t v23 = v140[4];
          uint64_t v24 = *(void *)(*(void *)(*(void *)(*(void *)(v19 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v22[6] = ecs_stack_allocator_allocate(v23, 48 * v24, 8);
          v22[7] = v24;
          v79[1] = 0;
          _OWORD v79[2] = 0;
          *float32x4_t v79 = 0;
          swift_release();
          uint64_t v25 = sub_1B62C9024((uint64_t)&type metadata for SpotLight, (uint64_t)&off_1F0FA9CE8, v18, v17, v20, (uint64_t)v22);
          uint64_t v26 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v18, v17, v20, (uint64_t)v22);
          uint64_t v27 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v18, v17, v20, (uint64_t)v22);
          uint64_t v28 = (float32x4_t *)v27;
          if (v18)
          {
            if (v20)
            {
              long long v29 = (float32x2_t *)(v26 + 32);
              uint64_t v30 = (float *)(v25 + 12);
              uint64_t v31 = (void *)(v77 + 288 * v16);
              uint64_t v9 = v125;
              do
              {
                if (v16 <= 7)
                {
                  float v42 = *(v30 - 2);
                  float v43 = *(v30 - 1);
                  float v44 = *v30;
                  float v45 = v30[1];
                  float v46 = v30[2];
                  float32x4_t v107 = *v28;
                  float v110 = *(v30 - 3);
                  v141.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v29[-4].f32)), a4, v29[-4], 1), a5, *(float32x4_t *)v29[-4].f32, 2), a6, *(float32x4_t *)v29[-4].f32, 3);
                  v141.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v29[-2].f32)), a4, v29[-2], 1), a5, *(float32x4_t *)v29[-2].f32, 2), a6, *(float32x4_t *)v29[-2].f32, 3);
                  v141.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v29->f32)), a4, *v29, 1), a5, *(float32x4_t *)v29->f32, 2), a6, *(float32x4_t *)v29->f32, 3);
                  float32x4_t v126 = *(float32x4_t *)v29[2].f32;
                  v141.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, v126.f32[0]), a4, v29[2], 1), a5, v126, 2), a6, v126, 3);
                  simd_float4x4 v142 = __invert_f4(v141);
                  float32x4_t v120 = (float32x4_t)v142.columns[1];
                  float32x4_t v123 = (float32x4_t)v142.columns[0];
                  float32x4_t v115 = (float32x4_t)v142.columns[3];
                  float32x4_t v117 = (float32x4_t)v142.columns[2];
                  float v47 = v45 + 0.0001;
                  if (v45 < 0.0001) {
                    float v47 = 0.0002;
                  }
                  float v48 = fmaxf(v45, 0.0001);
                  if (v46 > v47) {
                    float v49 = v46;
                  }
                  else {
                    float v49 = v47;
                  }
                  float v50 = v43 * 0.5;
                  float v51 = tanf(v50);
                  if ((LODWORD(v49) & 0x7FFFFFFF) == 0x7F800000)
                  {
                    float v33 = -v48;
                    float32x4_t v32 = (float32x4_t)xmmword_1B6E8E0F0;
                  }
                  else
                  {
                    v32.i64[0] = 0;
                    v32.f32[2] = v49 / (float)(v48 - v49);
                    v32.i32[3] = -1.0;
                    float v33 = (float)(v49 * v48) / (float)(v48 - v49);
                  }
                  float32x4_t v34 = vdivq_f32(vmulq_f32(vmulq_n_f32(v107, v110), v92), v91);
                  float32x4_t v35 = vsubq_f32(v126, a2);
                  v34.i32[3] = v113.i32[3];
                  float32x4_t v113 = v34;
                  v35.i32[3] = v114.i32[3];
                  float32x4_t v114 = v35;
                  float v36 = 1.0 / v51;
                  float32x4_t v98 = vaddq_f32(vmlaq_n_f32((float32x4_t)0, (float32x4_t)xmmword_1B6E4F340, v33), (float32x4_t)0);
                  float32x4_t v100 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F300, v32.f32[0]), (float32x4_t)xmmword_1B6E4F320, *(float32x2_t *)v32.f32, 1), (float32x4_t)xmmword_1B6E4F340, v32, 2), (float32x4_t)xmmword_1B6E4F360, v32, 3);
                  float32x4_t v102 = vaddq_f32(vaddq_f32(vmlaq_n_f32((float32x4_t)0, (float32x4_t)xmmword_1B6E4F320, v36), (float32x4_t)xmmword_1B6E4FE40), (float32x4_t)0);
                  float32x4_t v104 = vaddq_f32(vaddq_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F300, v36), (float32x4_t)0), (float32x4_t)xmmword_1B6E4FE40);
                  float32x4_t v106 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v104, v117.f32[0]), v102, *(float32x2_t *)v117.f32, 1), v100, v117, 2), v98, v117, 3);
                  float32x4_t v105 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v104, v115.f32[0]), v102, *(float32x2_t *)v115.f32, 1), v100, v115, 2), v98, v115, 3);
                  float v37 = cosf(v50);
                  float v38 = cosf(v44 * 0.5) - v37;
                  float v39 = 1.0 / v38;
                  *((float32x4_t *)v31 - 16) = v113;
                  *((float32x4_t *)v31 - 15) = v114;
                  *((float32x4_t *)v31 - 14) = v123;
                  *((float32x4_t *)v31 - 13) = v120;
                  *((float32x4_t *)v31 - 12) = v117;
                  *((float32x4_t *)v31 - 11) = v115;
                  *((float32x4_t *)v31 - 10) = v104;
                  *((float32x4_t *)v31 - 9) = v102;
                  BOOL v40 = v38 < 0.00000011921;
                  *((float32x4_t *)v31 - 8) = v100;
                  *((float32x4_t *)v31 - 7) = v98;
                  *((float32x4_t *)v31 - 6) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v104, v123.f32[0]), v102, *(float32x2_t *)v123.f32, 1), v100, v123, 2), v98, v123, 3);
                  *((float32x4_t *)v31 - 5) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v104, v120.f32[0]), v102, *(float32x2_t *)v120.f32, 1), v100, v120, 2), v98, v120, 3);
                  float v41 = 8388600.0;
                  if (!v40) {
                    float v41 = v39;
                  }
                  *((float32x4_t *)v31 - 4) = v106;
                  *((float32x4_t *)v31 - 3) = v105;
                  *(v31 - 4) = 0;
                  *(v31 - 3) = 0;
                  *((_DWORD *)v31 - 4) = 0;
                  *((float *)v31 - 3) = 1.0 / (float)(v42 * v42);
                  *((float *)v31 - 2) = v41;
                  *((float *)v31 - 1) = -(float)(v37 * v41);
                  void *v31 = 0;
                  v31[1] = 0;
                  *(void *)((char *)v31 + 13) = 0;
                }
                v29 += 8;
                ++v28;
                v30 += 6;
                v31 += 36;
                ++v16;
                --v20;
              }
              while (v20);
              goto LABEL_27;
            }
          }
          else if (v122 != v119)
          {
            uint64_t v52 = (float32x2_t *)(v26 + (v122 << 6) + 32);
            float32x4_t v53 = (float32x4_t *)(v27 + 16 * v122);
            int8x16_t v54 = (float *)(v25 + 24 * v122 + 12);
            uint64_t v55 = v119 - v122;
            long long v56 = (void *)(v77 + 288 * v16);
            uint64_t v9 = v125;
            do
            {
              if (v16 <= 7)
              {
                float v66 = *(v54 - 2);
                float v67 = *(v54 - 1);
                float v68 = *v54;
                float v69 = v54[1];
                float v70 = v54[2];
                float32x4_t v109 = *v53;
                float v112 = *(v54 - 3);
                v143.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v52[-4].f32)), a4, v52[-4], 1), a5, *(float32x4_t *)v52[-4].f32, 2), a6, *(float32x4_t *)v52[-4].f32, 3);
                v143.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v52[-2].f32)), a4, v52[-2], 1), a5, *(float32x4_t *)v52[-2].f32, 2), a6, *(float32x4_t *)v52[-2].f32, 3);
                v143.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)v52->f32)), a4, *v52, 1), a5, *(float32x4_t *)v52->f32, 2), a6, *(float32x4_t *)v52->f32, 3);
                float32x4_t v127 = *(float32x4_t *)v52[2].f32;
                v143.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, v127.f32[0]), a4, v52[2], 1), a5, v127, 2), a6, v127, 3);
                simd_float4x4 v144 = __invert_f4(v143);
                float32x4_t v121 = (float32x4_t)v144.columns[1];
                float32x4_t v124 = (float32x4_t)v144.columns[0];
                float32x4_t v116 = (float32x4_t)v144.columns[3];
                float32x4_t v118 = (float32x4_t)v144.columns[2];
                float v71 = v69 + 0.0001;
                if (v69 < 0.0001) {
                  float v71 = 0.0002;
                }
                float v72 = fmaxf(v69, 0.0001);
                if (v70 > v71) {
                  float v73 = v70;
                }
                else {
                  float v73 = v71;
                }
                float v74 = v67 * 0.5;
                float v75 = tanf(v74);
                if ((LODWORD(v73) & 0x7FFFFFFF) == 0x7F800000)
                {
                  float v58 = -v72;
                  float32x4_t v57 = (float32x4_t)xmmword_1B6E8E0F0;
                }
                else
                {
                  v57.i64[0] = 0;
                  v57.f32[2] = v73 / (float)(v72 - v73);
                  v57.i32[3] = -1.0;
                  float v58 = (float)(v73 * v72) / (float)(v72 - v73);
                }
                float32x4_t v59 = vdivq_f32(vmulq_f32(vmulq_n_f32(v109, v112), v92), v91);
                float32x4_t v60 = vsubq_f32(v127, a2);
                int v128 = v88;
                v59.i32[3] = v86;
                v60.i32[3] = v90;
                float32x4_t v108 = v60;
                float32x4_t v111 = v59;
                float v61 = 1.0 / v75;
                float32x4_t v85 = vaddq_f32(vmlaq_n_f32((float32x4_t)0, (float32x4_t)xmmword_1B6E4F340, v58), (float32x4_t)0);
                float32x4_t v87 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F300, v57.f32[0]), (float32x4_t)xmmword_1B6E4F320, *(float32x2_t *)v57.f32, 1), (float32x4_t)xmmword_1B6E4F340, v57, 2), (float32x4_t)xmmword_1B6E4F360, v57, 3);
                float32x4_t v99 = vaddq_f32(vaddq_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F300, v61), (float32x4_t)0), (float32x4_t)xmmword_1B6E4FE40);
                float32x4_t v89 = vaddq_f32(vaddq_f32(vmlaq_n_f32((float32x4_t)0, (float32x4_t)xmmword_1B6E4F320, v61), (float32x4_t)xmmword_1B6E4FE40), (float32x4_t)0);
                float32x4_t v103 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v99, v118.f32[0]), v89, *(float32x2_t *)v118.f32, 1), v87, v118, 2), v85, v118, 3);
                float32x4_t v101 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v99, v116.f32[0]), v89, *(float32x2_t *)v116.f32, 1), v87, v116, 2), v85, v116, 3);
                float v62 = cosf(v74);
                float v63 = cosf(v68 * 0.5) - v62;
                float v64 = 1.0 / v63;
                *((float32x4_t *)v56 - 16) = v111;
                *((float32x4_t *)v56 - 15) = v108;
                *((float32x4_t *)v56 - 14) = v124;
                *((float32x4_t *)v56 - 13) = v121;
                *((float32x4_t *)v56 - 12) = v118;
                *((float32x4_t *)v56 - 11) = v116;
                *((float32x4_t *)v56 - 10) = v99;
                *((float32x4_t *)v56 - 9) = v89;
                BOOL v40 = v63 < 0.00000011921;
                *((float32x4_t *)v56 - 8) = v87;
                *((float32x4_t *)v56 - 7) = v85;
                *((float32x4_t *)v56 - 6) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v99, v124.f32[0]), v89, *(float32x2_t *)v124.f32, 1), v87, v124, 2), v85, v124, 3);
                *((float32x4_t *)v56 - 5) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v99, v121.f32[0]), v89, *(float32x2_t *)v121.f32, 1), v87, v121, 2), v85, v121, 3);
                float v65 = 8388600.0;
                if (!v40) {
                  float v65 = v64;
                }
                *((float32x4_t *)v56 - 4) = v103;
                *((float32x4_t *)v56 - 3) = v101;
                *(v56 - 4) = 0;
                *(v56 - 3) = 0;
                *((_DWORD *)v56 - 4) = 0;
                *((float *)v56 - 3) = 1.0 / (float)(v66 * v66);
                *((float *)v56 - 2) = v65;
                *((float *)v56 - 1) = -(float)(v62 * v65);
                *long long v56 = 0;
                v56[1] = 0;
                *(void *)((char *)v56 + 13) = 0;
                int v88 = v128;
                __int32 v90 = v108.i32[3];
                __int32 v86 = v111.i32[3];
              }
              v52 += 8;
              ++v53;
              v54 += 6;
              v56 += 36;
              ++v16;
              --v55;
            }
            while (v55);
            goto LABEL_27;
          }
          uint64_t v9 = v125;
LABEL_27:
          uint64_t v13 = v78;
          sub_1B6345178(v140, (unsigned __int16 **)v137, (uint64_t)v139);
          sub_1B634507C((char *)v19);
          ecs_stack_allocator_pop_snapshot(v78);
          if (v84)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 376));
          }
          swift_release();
          uint64_t v14 = v83 + 1;
          if (v83 + 1 == v82) {
            return sub_1B632F170(v76);
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1B6328A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1B6328D88(a3, (uint64_t)v42);
  uint64_t result = (uint64_t *)sub_1B6328D88(a3, (uint64_t)v43);
  if (*(void *)&v43[0])
  {
    if (v49 >= 1)
    {
      uint64_t v37 = v46;
      if (v46)
      {
        long long v29 = (uint64_t *)a3;
        uint64_t v7 = v48[4];
        int v41 = *(unsigned __int8 *)(v47 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v50[0] = v43[0];
        v50[1] = v43[1];
        uint64_t v51 = v44;
        uint64_t v35 = (uint64_t)(v48 + 6);
        uint64_t v36 = v45;
        float32x4_t v53 = v48;
        float32x4_t v34 = v48 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v8 = 0;
        uint64_t v33 = v7;
        while (1)
        {
          uint64_t v9 = (unsigned int *)(v36 + 48 * v8);
          uint64_t v39 = *v9;
          uint64_t v40 = v4;
          uint64_t v10 = v9[2];
          uint64_t v38 = v9[1];
          uint64_t v11 = (uint64_t *)*((void *)v9 + 2);
          uint64_t v12 = *((void *)v9 + 3);
          uint64_t v14 = *((void *)v9 + 4);
          uint64_t v13 = *((void *)v9 + 5);
          if (v41)
          {
            uint64_t v15 = *(os_unfair_lock_s **)(v13 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v15);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v7);
          sub_1B62CA210(v35, (uint64_t)v52, &qword_1EB97DE20);
          uint64_t v16 = v53;
          uint64_t v17 = v53[4];
          uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v16[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
          v16[7] = v18;
          v34[1] = 0;
          v34[2] = 0;
          *float32x4_t v34 = 0;
          swift_release();
          uint64_t v19 = (float *)sub_1B62C9024((uint64_t)&type metadata for AmbientLight, (uint64_t)&off_1F0F58EE8, v11, v12, v14, (uint64_t)v16);
          uint64_t v20 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v11, v12, v14, (uint64_t)v16);
          if (v11)
          {
            if (v14)
            {
              uint64_t v7 = v33;
              float32x4_t v21 = v32;
              do
              {
                if (v10 <= 7)
                {
                  float32x4_t v22 = vmulq_n_f32(*v20, *v19);
                  v22.i32[3] = v21.i32[3];
                  *(float32x4_t *)(a1 + 16 * v10) = v22;
                  float32x4_t v21 = v22;
                }
                ++v10;
                ++v20;
                ++v19;
                --v14;
              }
              while (v14);
              float32x4_t v32 = v21;
LABEL_23:
              uint64_t v23 = v40;
              goto LABEL_24;
            }
          }
          else if (v39 != v38)
          {
            uint64_t v24 = v38 - v39;
            uint64_t v25 = &v20[v39];
            uint64_t v26 = &v19[v39];
            uint64_t v7 = v33;
            float32x4_t v27 = v30;
            do
            {
              if (v10 <= 7)
              {
                float32x4_t v28 = vmulq_n_f32(*v25, *v26);
                v28.i32[3] = v27.i32[3];
                *(float32x4_t *)(a1 + 16 * v10) = v28;
                float32x4_t v27 = v28;
              }
              ++v10;
              ++v25;
              ++v26;
              --v24;
            }
            while (v24);
            float32x4_t v30 = v27;
            goto LABEL_23;
          }
          uint64_t v23 = v40;
          uint64_t v7 = v33;
LABEL_24:
          sub_1B6345178(v53, (unsigned __int16 **)v50, (uint64_t)v52);
          uint64_t v4 = v23;
          sub_1B634507C((char *)v13);
          ecs_stack_allocator_pop_snapshot(v7);
          if (v41)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
          }
          swift_release();
          if (++v8 == v37) {
            return sub_1B632F170(v29);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B6328D88(uint64_t a1, uint64_t a2)
{
  sub_1B62F93A4(0, &qword_1EB97E0D8, (uint64_t (*)(uint64_t))sub_1B69D0BC4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1B6328E1C(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, uint64_t a7, uint64_t a8, uint64_t a9, float32x4_t *a10)
{
  uint64_t v11 = v10;
  float v72 = a10;
  sub_1B63292B4(a8, (uint64_t)v61, (uint64_t (*)(void))sub_1B63293FC);
  uint64_t result = (uint64_t *)sub_1B63292B4(a8, (uint64_t)v62, (uint64_t (*)(void))sub_1B63293FC);
  if (*(void *)&v62[0])
  {
    if (v68 >= 1)
    {
      uint64_t v47 = v65;
      if (v65)
      {
        uint64_t v40 = (uint64_t *)a8;
        uint64_t v14 = v67;
        uint64_t v15 = v67[4];
        int v16 = *(unsigned __int8 *)(v66 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v69[0] = v62[0];
        v69[1] = v62[1];
        uint64_t v70 = v63;
        uint64_t v43 = (uint64_t)(v67 + 6);
        uint64_t v44 = v64;
        float v42 = v67 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v17 = 0;
        int v45 = v16;
        uint64_t v46 = v15;
        do
        {
          uint64_t v51 = v17;
          uint64_t v52 = v11;
          uint64_t v18 = (unsigned int *)(v44 + 48 * v17);
          uint64_t v49 = *v18;
          uint64_t v19 = v18[2];
          uint64_t v48 = v18[1];
          uint64_t v20 = (uint64_t *)*((void *)v18 + 2);
          uint64_t v21 = *((void *)v18 + 3);
          uint64_t v23 = *((void *)v18 + 4);
          uint64_t v22 = *((void *)v18 + 5);
          if (v16)
          {
            uint64_t v24 = *(os_unfair_lock_s **)(v22 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v24);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v15);
          sub_1B62CA210(v43, (uint64_t)v71, &qword_1EB97DE20);
          uint64_t v25 = v14[4];
          uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v22 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v14[6] = ecs_stack_allocator_allocate(v25, 48 * v26, 8);
          v14[7] = v26;
          v42[1] = 0;
          v42[2] = 0;
          void *v42 = 0;
          swift_release();
          uint64_t v50 = sub_1B62C9024((uint64_t)&type metadata for PointLight, (uint64_t)&off_1F0F53678, v20, v21, v23, (uint64_t)v14);
          uint64_t v27 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v20, v21, v23, (uint64_t)v14);
          float32x4_t v28 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v20, v21, v23, (uint64_t)v14);
          uint64_t v29 = sub_1B62C9024((uint64_t)&type metadata for Shadow, (uint64_t)&off_1F0FA18B0, v20, v21, v23, (uint64_t)v14);
          if (v20)
          {
            if (v23)
            {
              float32x4_t v30 = (uint64_t *)(v29 + 8);
              uint64_t v31 = (float32x4_t *)(v27 + 32);
              float32x4_t v32 = (float *)(v50 + 8);
              uint64_t v33 = (char *)(a1 + 624 * v19);
              do
              {
                if (v19 <= 0)
                {
                  sub_1B69CE688(*((_DWORD *)v30 - 2), *v30, a9, v72, (uint64_t)__src, *(v32 - 2), *(v32 - 1), *v32, v32[1], v31[-2], v31[-1], *v31, v31[1], *v28, a2, a3, a4, a5, a6);
                  memcpy(v33, __src, 0x270uLL);
                }
                v30 += 2;
                v31 += 4;
                v32 += 4;
                ++v28;
                ++v19;
                v33 += 624;
                --v23;
              }
              while (v23);
            }
          }
          else if (v49 != v48)
          {
            float32x4_t v34 = (uint64_t *)(v29 + 16 * v49 + 8);
            uint64_t v35 = (float32x4_t *)(v27 + (v49 << 6) + 32);
            uint64_t v36 = (float *)(v50 + 16 * v49 + 8);
            uint64_t v37 = &v28[v49];
            uint64_t v38 = (char *)(a1 + 624 * v19);
            uint64_t v39 = v48 - v49;
            do
            {
              if (v19 <= 0)
              {
                sub_1B69CE688(*((_DWORD *)v34 - 2), *v34, a9, v72, (uint64_t)v60, *(v36 - 2), *(v36 - 1), *v36, v36[1], v35[-2], v35[-1], *v35, v35[1], *v37, a2, a3, a4, a5, a6);
                memcpy(v38, v60, 0x270uLL);
              }
              v34 += 2;
              v35 += 4;
              v36 += 4;
              ++v37;
              ++v19;
              v38 += 624;
              --v39;
            }
            while (v39);
          }
          sub_1B6345178(v14, (unsigned __int16 **)v69, (uint64_t)v71);
          uint64_t v11 = v52;
          sub_1B634507C((char *)v22);
          uint64_t v15 = v46;
          ecs_stack_allocator_pop_snapshot(v46);
          int v16 = v45;
          if (v45)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 376));
          }
          swift_release();
          uint64_t v17 = v51 + 1;
        }
        while (v51 + 1 != v47);
        return sub_1B632F170(v40);
      }
    }
  }
  return result;
}

uint64_t sub_1B63292B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1B632931C()
{
  if (!qword_1EB97E268)
  {
    sub_1B69D0D08(255, &qword_1EB97E260);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97E268);
    }
  }
}

void sub_1B632938C()
{
  if (!qword_1EB97E258)
  {
    sub_1B69D0D08(255, &qword_1EB97E250);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97E258);
    }
  }
}

void sub_1B63293FC()
{
  if (!qword_1EB97E248)
  {
    sub_1B69D0D08(255, &qword_1EB97E240);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97E248);
    }
  }
}

void sub_1B632946C()
{
  if (!qword_1EB97E1B8[0])
  {
    sub_1B69D0D98(255, &qword_1EB97E1B0);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, qword_1EB97E1B8);
    }
  }
}

void sub_1B63294DC()
{
  if (!qword_1EB97E1A8)
  {
    sub_1B69D0D98(255, &qword_1EB97E1A0);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97E1A8);
    }
  }
}

void sub_1B632954C()
{
  if (!qword_1EB97E198)
  {
    sub_1B69D0D98(255, &qword_1EB97E190);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97E198);
    }
  }
}

uint64_t *sub_1B63295BC(uint64_t a1, float32x4_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_1B63292B4(a4, (uint64_t)v73, (uint64_t (*)(void))sub_1B632954C);
  uint64_t result = (uint64_t *)sub_1B63292B4(a4, (uint64_t)v74, (uint64_t (*)(void))sub_1B632954C);
  if (*(void *)&v74[0])
  {
    if (v80 >= 1)
    {
      uint64_t v61 = v77;
      if (v77)
      {
        uint64_t v48 = (uint64_t *)a4;
        uint64_t v8 = v79[4];
        int v9 = *(unsigned __int8 *)(v78 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v81[0] = v74[0];
        v81[1] = v74[1];
        uint64_t v82 = v75;
        uint64_t v59 = (uint64_t)(v79 + 6);
        uint64_t v60 = v76;
        int v84 = v79;
        float v58 = v79 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v10 = 0;
        int v56 = v9;
        uint64_t v57 = v8;
        while (1)
        {
          uint64_t v62 = v10;
          uint64_t v63 = v5;
          uint64_t v11 = (unsigned int *)(v60 + 48 * v10);
          uint64_t v70 = *v11;
          uint64_t v12 = v11[2];
          uint64_t v67 = v11[1];
          uint64_t v14 = (uint64_t *)*((void *)v11 + 2);
          uint64_t v13 = *((void *)v11 + 3);
          uint64_t v16 = *((void *)v11 + 4);
          uint64_t v15 = *((void *)v11 + 5);
          if (v9)
          {
            uint64_t v17 = *(os_unfair_lock_s **)(v15 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v17);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v8);
          sub_1B62CA210(v59, (uint64_t)v83, &qword_1EB97DE20);
          uint64_t v18 = v84;
          uint64_t v19 = v84[4];
          uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v15 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v18[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
          v18[7] = v20;
          v58[1] = 0;
          v58[2] = 0;
          *float v58 = 0;
          swift_release();
          uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for PointLight, (uint64_t)&off_1F0F53678, v14, v13, v16, (uint64_t)v18);
          uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v14, v13, v16, (uint64_t)v18);
          uint64_t v23 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v14, v13, v16, (uint64_t)v18);
          uint64_t v24 = (float32x4_t *)v23;
          if (v14)
          {
            if (v16)
            {
              uint64_t v25 = (float32x4_t *)(v22 + 48);
              uint64_t v26 = (float *)(v21 + 4);
              uint64_t v27 = a1 + 624 * v12;
              uint64_t v8 = v57;
              float32x4_t v28 = v54;
              float32x4_t v29 = v55;
              float32x4_t v30 = v53;
              do
              {
                if (v12 <= 7)
                {
                  float32x4_t v31 = *v25;
                  v31.i32[3] = v28.i32[3];
                  float32x4_t v71 = v31;
                  float32x4_t v32 = vsubq_f32(*v25, a2);
                  v32.i32[3] = v30.i32[3];
                  float32x4_t v33 = vmulq_n_f32(*v24, *(v26 - 1) * 0.00011651);
                  v33.i32[3] = v29.i32[3];
                  float32x4_t v65 = v32;
                  float32x4_t v68 = v33;
                  float v34 = 1.0 / (float)(*v26 * *v26);
                  *(float32x4_t *)uint64_t v27 = v33;
                  *(float32x4_t *)(v27 + 16) = v32;
                  bzero((void *)(v27 + 32), 0x224uLL);
                  *(float *)(v27 + 580) = v34;
                  *(_OWORD *)(v27 + 592) = 0u;
                  *(void *)(v27 + 605) = 0;
                  float32x4_t v29 = v68;
                  float32x4_t v28 = v71;
                  float32x4_t v30 = v65;
                }
                v25 += 4;
                v26 += 4;
                ++v12;
                v27 += 624;
                ++v24;
                --v16;
              }
              while (v16);
              float32x4_t v53 = v30;
              float32x4_t v54 = v28;
              float32x4_t v55 = v29;
LABEL_23:
              uint64_t v35 = v63;
              goto LABEL_24;
            }
          }
          else if (v70 != v67)
          {
            uint64_t v36 = (float32x4_t *)(v22 + (v70 << 6) + 48);
            uint64_t v37 = (float *)(v21 + 16 * v70 + 4);
            uint64_t v38 = a1 + 624 * v12;
            uint64_t v39 = (float32x4_t *)(v23 + 16 * v70);
            uint64_t v40 = v67 - v70;
            uint64_t v8 = v57;
            float32x4_t v41 = v50;
            float32x4_t v42 = v51;
            float32x4_t v43 = v49;
            do
            {
              if (v12 <= 7)
              {
                float32x4_t v44 = *v36;
                v44.i32[3] = v43.i32[3];
                float32x4_t v45 = vsubq_f32(*v36, a2);
                v45.i32[3] = v41.i32[3];
                float32x4_t v69 = v45;
                float32x4_t v72 = v44;
                float32x4_t v46 = vmulq_n_f32(*v39, *(v37 - 1) * 0.00011651);
                v46.i32[3] = v42.i32[3];
                float32x4_t v66 = v46;
                float v47 = 1.0 / (float)(*v37 * *v37);
                *(float32x4_t *)uint64_t v38 = v46;
                *(float32x4_t *)(v38 + 16) = v45;
                bzero((void *)(v38 + 32), 0x224uLL);
                *(float *)(v38 + 580) = v47;
                *(_OWORD *)(v38 + 592) = 0u;
                *(void *)(v38 + 605) = 0;
                float32x4_t v42 = v66;
                float32x4_t v41 = v69;
                float32x4_t v43 = v72;
              }
              v36 += 4;
              v37 += 4;
              ++v12;
              v38 += 624;
              ++v39;
              --v40;
            }
            while (v40);
            float32x4_t v49 = v43;
            float32x4_t v50 = v41;
            float32x4_t v51 = v42;
            goto LABEL_23;
          }
          uint64_t v35 = v63;
          uint64_t v8 = v57;
LABEL_24:
          int v9 = v56;
          sub_1B6345178(v84, (unsigned __int16 **)v81, (uint64_t)v83);
          uint64_t v5 = v35;
          sub_1B634507C((char *)v15);
          ecs_stack_allocator_pop_snapshot(v8);
          if (v56)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 376));
          }
          swift_release();
          uint64_t v10 = v62 + 1;
          if (v62 + 1 == v61) {
            return sub_1B632F170(v48);
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1B6329A80(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  sub_1B63292B4(a7, (uint64_t)v157, (uint64_t (*)(void))sub_1B632938C);
  int v88 = (uint64_t *)a7;
  uint64_t result = (uint64_t *)sub_1B63292B4(a7, (uint64_t)v158, (uint64_t (*)(void))sub_1B632938C);
  if (*(void *)&v158[0])
  {
    if (v164 >= 1)
    {
      uint64_t v94 = v161;
      if (v161)
      {
        uint64_t v15 = v163[4];
        int v98 = *(unsigned __int8 *)(v162 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v165[0] = v158[0];
        v165[1] = v158[1];
        uint64_t v166 = v159;
        uint64_t v92 = (uint64_t)(v163 + 6);
        uint64_t v93 = v160;
        float32x4_t v99 = v163;
        float32x4_t v91 = v163 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v16 = 0;
        uint64_t v89 = a1 + 192;
        __asm { FMOV            V0.2S, #1.0 }
        unsigned int v106 = _D0;
        float32x4_t v105 = (float32x4_t)vdupq_n_s32(0x3ABFE803u);
        uint64_t v107 = a8;
        uint64_t v90 = v15;
        do
        {
          uint64_t v95 = v16;
          uint64_t v96 = v10;
          uint64_t v22 = (unsigned int *)(v93 + 48 * v16);
          uint64_t v154 = *v22;
          uint64_t v23 = v22[2];
          uint64_t v146 = v22[1];
          uint64_t v24 = (uint64_t *)*((void *)v22 + 2);
          uint64_t v25 = *((void *)v22 + 3);
          uint64_t v27 = *((void *)v22 + 4);
          uint64_t v26 = *((void *)v22 + 5);
          if (v98)
          {
            float32x4_t v28 = *(os_unfair_lock_s **)(v26 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v28);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v26 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v15);
          sub_1B62CA210(v92, (uint64_t)v167, &qword_1EB97DE20);
          uint64_t v29 = v99[4];
          uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v26 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v99[6] = ecs_stack_allocator_allocate(v29, 48 * v30, 8);
          v99[7] = v30;
          v91[1] = 0;
          void v91[2] = 0;
          *float32x4_t v91 = 0;
          swift_release();
          uint64_t v152 = sub_1B62C9024((uint64_t)&type metadata for DirectionalLight, (uint64_t)&off_1F0F6BBC0, v24, v25, v27, (uint64_t)v99);
          uint64_t v31 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v24, v25, v27, (uint64_t)v99);
          uint64_t v150 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v24, v25, v27, (uint64_t)v99);
          uint64_t v97 = v26;
          uint64_t v32 = sub_1B62C9024((uint64_t)&type metadata for Shadow, (uint64_t)&off_1F0FA18B0, v24, v25, v27, (uint64_t)v99);
          uint64_t v33 = v32;
          if (v24)
          {
            if (v27)
            {
              uint64_t v34 = v31;
              uint64_t v35 = 0;
              uint64_t v36 = (_OWORD *)(v89 + (v23 << 8));
              uint64_t v37 = (float32x4_t *)(v34 + 32);
              uint64_t v104 = v32;
              do
              {
                if (v23 <= 7)
                {
                  float32x4_t v46 = *v37;
                  int8x16_t v47 = (int8x16_t)vabsq_f32(*v37);
                  if (*(float *)v47.i32 <= 0.00000011921
                    && (v47.i32[0] = vextq_s8(v47, v47, 8uLL).u32[0],
                        *(int32x2_t *)v47.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v47.i8),
                        (v47.i8[4] & 1) != 0)
                    && (v47.i8[0] & 1) != 0)
                  {
                    float32x4_t v144 = 0u;
                  }
                  else
                  {
                    int32x4_t v48 = (int32x4_t)vmulq_f32(v46, v46);
                    v48.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v48, 2), vadd_f32(*(float32x2_t *)v48.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v48.i8, 1))).u32[0];
                    float32x2_t v49 = vrsqrte_f32((float32x2_t)v48.u32[0]);
                    float32x2_t v50 = vmul_f32(v49, vrsqrts_f32((float32x2_t)v48.u32[0], vmul_f32(v49, v49)));
                    float32x4_t v51 = vmulq_n_f32(v46, vmul_f32(v50, vrsqrts_f32((float32x2_t)v48.u32[0], vmul_f32(v50, v50))).f32[0]);
                    v51.i32[3] = v103;
                    float32x4_t v144 = v51;
                  }
                  float v52 = *(float *)(v152 + v35 + 4);
                  uint64_t v155 = *(void *)(v152 + v35 + 8);
                  float32x4_t v133 = *(float32x4_t *)(v150 + v35);
                  float v135 = *(float *)(v152 + v35);
                  int v53 = *(_DWORD *)(v33 + v35);
                  uint64_t v54 = *(void *)(v33 + v35 + 8);
                  float32x4_t v138 = v37[-1];
                  float32x4_t v140 = v37[-2];
                  v170.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v140.f32[0]), a3, *(float32x2_t *)v37[-2].f32, 1), a4, v140, 2), a5, v140, 3);
                  v170.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v138.f32[0]), a3, *(float32x2_t *)v138.f32, 1), a4, v138, 2), a5, v138, 3);
                  simd_float4 v147 = *(simd_float4 *)v37;
                  v170.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v46.f32[0]), a3, *(float32x2_t *)v46.f32, 1), a4, v46, 2), a5, v46, 3);
                  float32x4_t v142 = v37[1];
                  v170.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v142.f32[0]), a3, *(float32x2_t *)v37[1].f32, 1), a4, v142, 2), a5, v142, 3);
                  simd_float4x4 v171 = __invert_f4(v170);
                  simd_float4 v129 = v171.columns[1];
                  simd_float4 v131 = v171.columns[0];
                  simd_float4 v125 = v171.columns[3];
                  simd_float4 v127 = v171.columns[2];
                  float v55 = *(float *)&v155 + 0.0001;
                  if (*(float *)&v155 < -100000.0) {
                    float v55 = -100000.0;
                  }
                  if (*((float *)&v155 + 1) > v55) {
                    float v55 = *((float *)&v155 + 1);
                  }
                  float v120 = v55;
                  long long v123 = *(_OWORD *)(a9 + 16);
                  int v56 = *(char **)(a8 + 16);
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  *(void *)(a8 + 16) = v56;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    int v56 = sub_1B68C5AE4(0, *((void *)v56 + 2) + 1, 1, v56);
                    *(void *)(a8 + 16) = v56;
                  }
                  unint64_t v59 = *((void *)v56 + 2);
                  unint64_t v58 = *((void *)v56 + 3);
                  if (v59 >= v58 >> 1) {
                    int v56 = sub_1B68C5AE4(v58 > 1, v59 + 1, 1, v56);
                  }
                  v38.i32[1] = HIDWORD(v155);
                  *(float *)v38.i32 = v120 - fmaxf(*(float *)&v155, -100000.0);
                  v39.i64[0] = 0;
                  v39.i32[2] = 0;
                  *(float *)&v39.i32[3] = (float)(v52 - v52) / (float)((float)-v52 - v52);
                  v40.i32[0] = 0;
                  v40.i32[2] = 0;
                  *(float *)&v40.i32[1] = 2.0 / (float)(v52 + v52);
                  *(float32x2_t *)v41.i8 = vdiv_f32((float32x2_t)__PAIR64__(LODWORD(v120), v106), (float32x2_t)vdup_lane_s32(v38, 0));
                  v41.i64[1] = v41.i64[0];
                  v40.i32[3] = v39.i32[3];
                  int32x4_t v42 = vzip2q_s32(v39, v41);
                  int32x4_t v43 = vzip2q_s32(v40, (int32x4_t)xmmword_1B6E4F370);
                  int32x4_t v117 = vzip1q_s32(v42, v43);
                  int32x4_t v119 = vzip2q_s32((int32x4_t)v40.u32[1], vzip1q_s32((int32x4_t)v40.u64[0], (int32x4_t)0));
                  long long v113 = v40.u32[1];
                  int32x4_t v115 = vzip2q_s32(v42, v43);
                  float32x4_t v44 = vmulq_f32(vmulq_n_f32(v133, v135), v105);
                  v168.columns[2] = v147;
                  v44.i32[3] = v149.i32[3];
                  float32x4_t v149 = v44;
                  v168.columns[1] = (simd_float4)v138;
                  v168.columns[0] = (simd_float4)v140;
                  v168.columns[3] = (simd_float4)v142;
                  simd_float4x4 v169 = __invert_f4(v168);
                  *((void *)v56 + 2) = v59 + 1;
                  float32x4_t v45 = &v56[160 * v59];
                  *(simd_float4x4 *)(v45 + 32) = v169;
                  *((_OWORD *)v45 + 6) = v113;
                  *((int32x4_t *)v45 + 7) = v119;
                  *((int32x4_t *)v45 + 8) = v117;
                  *((int32x4_t *)v45 + 9) = v115;
                  *((void *)v45 + 20) = v155;
                  *((_OWORD *)v45 + 11) = v123;
                  a8 = v107;
                  *(void *)(v107 + 16) = v56;
                  v169.columns[0] = *(simd_float4 *)(v54 + 32);
                  *(v36 - 12) = v149;
                  *(v36 - 11) = v144;
                  *(v36 - 10) = v131;
                  *(v36 - 9) = v129;
                  *(v36 - 8) = v127;
                  *(v36 - 7) = v125;
                  *(v36 - 6) = v113;
                  *(v36 - 5) = v119;
                  *(v36 - 4) = v117;
                  *(v36 - 3) = v115;
                  *(v36 - 2) = v169.columns[0];
                  *((_DWORD *)v36 - 4) = v53;
                  *((_DWORD *)v36 - 3) = 0;
                  _OWORD v36[2] = 0u;
                  v36[3] = 0u;
                  *uint64_t v36 = 0u;
                  v36[1] = 0u;
                  uint64_t v33 = v104;
                }
                v35 += 16;
                ++v23;
                v36 += 16;
                v37 += 4;
                --v27;
              }
              while (v27);
            }
          }
          else if (v154 != v146)
          {
            uint64_t v101 = 16 * v154;
            uint64_t v60 = (_OWORD *)(v89 + (v23 << 8));
            uint64_t v61 = v31 + (v154 << 6) + 32;
            uint64_t v62 = v146 - v154;
            uint64_t v63 = v152;
            uint64_t v64 = v150;
            do
            {
              if (v23 <= 7)
              {
                float32x4_t v73 = *(float32x4_t *)v61;
                int8x16_t v74 = (int8x16_t)vabsq_f32(*(float32x4_t *)v61);
                if (*(float *)v74.i32 <= 0.00000011921
                  && (v74.i32[0] = vextq_s8(v74, v74, 8uLL).u32[0],
                      *(int32x2_t *)v74.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v74.i8),
                      (v74.i8[4] & 1) != 0)
                  && (v74.i8[0] & 1) != 0)
                {
                  float32x4_t v145 = 0u;
                }
                else
                {
                  int32x4_t v75 = (int32x4_t)vmulq_f32(v73, v73);
                  v75.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v75, 2), vadd_f32(*(float32x2_t *)v75.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v75.i8, 1))).u32[0];
                  float32x2_t v76 = vrsqrte_f32((float32x2_t)v75.u32[0]);
                  float32x2_t v77 = vmul_f32(v76, vrsqrts_f32((float32x2_t)v75.u32[0], vmul_f32(v76, v76)));
                  float32x4_t v78 = vmulq_n_f32(v73, vmul_f32(v77, vrsqrts_f32((float32x2_t)v75.u32[0], vmul_f32(v77, v77))).f32[0]);
                  v78.i32[3] = v100;
                  float32x4_t v145 = v78;
                }
                uint64_t v153 = v63;
                uint64_t v79 = v63 + v101;
                float v80 = *(float *)(v79 + 4);
                uint64_t v156 = *(void *)(v79 + 8);
                uint64_t v151 = v64;
                float32x4_t v134 = *(float32x4_t *)(v64 + v101);
                float v137 = *(float *)v79;
                int v81 = *(_DWORD *)(v33 + v101);
                uint64_t v82 = *(void *)(v33 + v101 + 8);
                float32x4_t v139 = *(float32x4_t *)(v61 - 16);
                float32x4_t v141 = *(float32x4_t *)(v61 - 32);
                v174.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v141.f32[0]), a3, *(float32x2_t *)(v61 - 32), 1), a4, v141, 2), a5, v141, 3);
                v174.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v139.f32[0]), a3, *(float32x2_t *)v139.f32, 1), a4, v139, 2), a5, v139, 3);
                simd_float4 v148 = *(simd_float4 *)v61;
                v174.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v73.f32[0]), a3, *(float32x2_t *)v73.f32, 1), a4, v73, 2), a5, v73, 3);
                float32x4_t v143 = *(float32x4_t *)(v61 + 16);
                v174.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a2, v143.f32[0]), a3, *(float32x2_t *)(v61 + 16), 1), a4, v143, 2), a5, v143, 3);
                simd_float4x4 v175 = __invert_f4(v174);
                simd_float4 v130 = v175.columns[1];
                simd_float4 v132 = v175.columns[0];
                simd_float4 v126 = v175.columns[3];
                simd_float4 v128 = v175.columns[2];
                float v83 = *(float *)&v156 + 0.0001;
                if (*(float *)&v156 < -100000.0) {
                  float v83 = -100000.0;
                }
                if (*((float *)&v156 + 1) > v83) {
                  float v83 = *((float *)&v156 + 1);
                }
                float v122 = v83;
                long long v124 = *(_OWORD *)(a9 + 16);
                int v84 = *(char **)(a8 + 16);
                char v85 = swift_isUniquelyReferenced_nonNull_native();
                *(void *)(a8 + 16) = v84;
                if ((v85 & 1) == 0)
                {
                  int v84 = sub_1B68C5AE4(0, *((void *)v84 + 2) + 1, 1, v84);
                  *(void *)(a8 + 16) = v84;
                }
                unint64_t v87 = *((void *)v84 + 2);
                unint64_t v86 = *((void *)v84 + 3);
                if (v87 >= v86 >> 1) {
                  int v84 = sub_1B68C5AE4(v86 > 1, v87 + 1, 1, v84);
                }
                v65.i32[1] = HIDWORD(v156);
                *(float *)v65.i32 = v122 - fmaxf(*(float *)&v156, -100000.0);
                v66.i64[0] = 0;
                v66.i32[2] = 0;
                *(float *)&v66.i32[3] = (float)(v80 - v80) / (float)((float)-v80 - v80);
                v67.i32[0] = 0;
                v67.i32[2] = 0;
                *(float *)&v67.i32[1] = 2.0 / (float)(v80 + v80);
                *(float32x2_t *)v68.i8 = vdiv_f32((float32x2_t)__PAIR64__(LODWORD(v122), v106), (float32x2_t)vdup_lane_s32(v65, 0));
                v68.i64[1] = v68.i64[0];
                v67.i32[3] = v66.i32[3];
                int32x4_t v69 = vzip2q_s32(v66, v68);
                int32x4_t v70 = vzip2q_s32(v67, (int32x4_t)xmmword_1B6E4F370);
                int32x4_t v118 = vzip1q_s32(v69, v70);
                int32x4_t v121 = vzip2q_s32((int32x4_t)v67.u32[1], vzip1q_s32((int32x4_t)v67.u64[0], (int32x4_t)0));
                long long v114 = v67.u32[1];
                int32x4_t v116 = vzip2q_s32(v69, v70);
                float32x4_t v71 = vmulq_f32(vmulq_n_f32(v134, v137), v105);
                v71.i32[3] = v102;
                float32x4_t v136 = v71;
                v172.columns[1] = (simd_float4)v139;
                v172.columns[0] = (simd_float4)v141;
                v172.columns[2] = v148;
                v172.columns[3] = (simd_float4)v143;
                simd_float4x4 v173 = __invert_f4(v172);
                *((void *)v84 + 2) = v87 + 1;
                float32x4_t v72 = &v84[160 * v87];
                *(simd_float4x4 *)(v72 + 32) = v173;
                *((_OWORD *)v72 + 6) = v114;
                *((int32x4_t *)v72 + 7) = v121;
                *((int32x4_t *)v72 + 8) = v118;
                *((int32x4_t *)v72 + 9) = v116;
                *((void *)v72 + 20) = v156;
                *((_OWORD *)v72 + 11) = v124;
                a8 = v107;
                *(void *)(v107 + 16) = v84;
                v173.columns[0] = *(simd_float4 *)(v82 + 32);
                *(v60 - 12) = v136;
                *(v60 - 11) = v145;
                *(v60 - 10) = v132;
                *(v60 - 9) = v130;
                *(v60 - 8) = v128;
                *(v60 - 7) = v126;
                *(v60 - 6) = v114;
                *(v60 - 5) = v121;
                *(v60 - 4) = v118;
                *(v60 - 3) = v116;
                *(v60 - 2) = v173.columns[0];
                *((_DWORD *)v60 - 4) = v81;
                *((_DWORD *)v60 - 3) = 0;
                _OWORD v60[2] = 0u;
                v60[3] = 0u;
                __int32 v102 = v136.i32[3];
                *uint64_t v60 = 0u;
                v60[1] = 0u;
                uint64_t v63 = v153;
                uint64_t v64 = v151;
              }
              v33 += 16;
              v63 += 16;
              ++v23;
              v60 += 16;
              v61 += 64;
              v64 += 16;
              --v62;
            }
            while (v62);
          }
          uint64_t v15 = v90;
          sub_1B6345178(v99, (unsigned __int16 **)v165, (uint64_t)v167);
          uint64_t v10 = v96;
          sub_1B634507C((char *)v97);
          ecs_stack_allocator_pop_snapshot(v90);
          if (v98)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v97 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v97 + 376));
          }
          swift_release();
          uint64_t v16 = v95 + 1;
        }
        while (v95 + 1 != v94);
        return sub_1B632F170(v88);
      }
    }
  }
  return result;
}

__n128 sub_1B632A488(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for EmitterShape)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v2 + 128) + v5 + 224 * a1;
  long long v8 = *(_OWORD *)(a2 + 176);
  v21[10] = *(_OWORD *)(a2 + 160);
  v21[11] = v8;
  v21[12] = *(_OWORD *)(a2 + 192);
  char v22 = *(unsigned char *)(a2 + 208);
  long long v9 = *(_OWORD *)(a2 + 112);
  v21[6] = *(_OWORD *)(a2 + 96);
  v21[7] = v9;
  long long v10 = *(_OWORD *)(a2 + 144);
  v21[8] = *(_OWORD *)(a2 + 128);
  v21[9] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  v21[2] = *(_OWORD *)(a2 + 32);
  v21[3] = v11;
  long long v12 = *(_OWORD *)(a2 + 80);
  v21[4] = *(_OWORD *)(a2 + 64);
  v21[5] = v12;
  long long v13 = *(_OWORD *)(a2 + 16);
  v21[0] = *(_OWORD *)a2;
  v21[1] = v13;
  sub_1B632A5BC(a1, v7, (uint64_t)v21);
  long long v14 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(v7 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(v7 + 176) = v14;
  *(_OWORD *)(v7 + 192) = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(v7 + 208) = *(unsigned char *)(a2 + 208);
  long long v15 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v7 + 112) = v15;
  long long v16 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v7 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v7 + 144) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v7 + 48) = v17;
  long long v18 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v7 + 80) = v18;
  __n128 result = *(__n128 *)a2;
  long long v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v20;
  return result;
}

uint64_t sub_1B632A5BC(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v4 = *(unsigned __int8 *)(a2 + 96);
  float v5 = *(float *)(a2 + 148);
  float v7 = *(float *)(a3 + 104);
  float v6 = *(float *)(a3 + 108);
  float v9 = *(float *)(a3 + 144);
  float v8 = *(float *)(a3 + 148);
  if (*(float *)(a2 + 104) == 0.0 && *(float *)(a2 + 108) == 0.0)
  {
    if ((v7 != 0.0 || v6 != 0.0) && (v9 != 0.0 || v8 != 0.0)) {
      goto LABEL_32;
    }
  }
  else if (*(float *)(a2 + 144) == 0.0)
  {
    if (v7 == 0.0 && v6 == 0.0)
    {
      if (v5 != 0.0) {
        goto LABEL_32;
      }
    }
    else if (v9 == 0.0)
    {
      if ((v5 != 0.0) == (v8 == 0.0)) {
        goto LABEL_32;
      }
    }
    else if (v5 == 0.0)
    {
      goto LABEL_32;
    }
  }
  else if (v7 == 0.0 && v6 == 0.0 || v9 == 0.0 && v8 == 0.0)
  {
    goto LABEL_32;
  }
  if (*(unsigned __int8 *)(a3 + 96) != 255)
  {
    if (v4 == 255) {
      char v10 = 1;
    }
    else {
      char v10 = *(unsigned char *)(a2 + 208) ^ *(unsigned char *)(a3 + 208);
    }
    if ((v10 & 1) == 0) {
      return result;
    }
LABEL_32:
    uint64_t v12 = v3[24];
    if (v12)
    {
      uint64_t v13 = v3[26];
      uint64_t v14 = 8 * (result >> 6);
      *(void *)(v12 + v14) |= 1 << result;
      *(void *)(v13 + v14) &= ~(1 << result);
    }
    return sub_1B635AD78(v3[5], (uint64_t)v3, result);
  }
  if (v4 == 255) {
    char v11 = *(unsigned char *)(a2 + 208) ^ *(unsigned char *)(a3 + 208);
  }
  else {
    char v11 = 1;
  }
  if (v11) {
    goto LABEL_32;
  }
  return result;
}

uint64_t *sub_1B632A728(uint64_t *result)
{
  uint64_t v2 = *(uint64_t *)((char *)result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v2)
  {
    uint64_t v3 = (uint64_t)result;
    uint64_t v4 = result[22];
    swift_retain();
    swift_retain();
    unint64_t v5 = sub_1B632BAE0(v4);
    uint64_t v7 = v6;
    char v9 = v8;
    swift_release();
    v43[0] = 0uLL;
    long long v10 = *(_OWORD *)(v1 + 32);
    v59[0] = *(_OWORD *)(v1 + 16);
    v59[1] = v10;
    uint64_t v60 = *(void *)(v1 + 48);
    sub_1B62C9DA8(v3, (uint64_t)v59, 0x200000000, v44);
    sub_1B62D7F68((uint64_t)v44, (uint64_t)&v45, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (v45.i64[0])
    {
      int8x16_t v11 = v45;
      int8x16_t v12 = v46;
      int8x16_t v53 = v45;
      int8x16_t v54 = v46;
      uint64_t v55 = v47;
      if (v52 > 0 && (uint64_t v36 = v49) != 0)
      {
        v11.i32[0] = 0;
        v12.i32[0] = v9 & 1;
        int8x16_t v13 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v12, v11), 0);
        v14.i64[0] = v5;
        v14.i64[1] = v7;
        float32x4_t v42 = (float32x4_t)vbslq_s8(v13, v14, (int8x16_t)xmmword_1B6E4F2E0);
        uint64_t v34 = v48;
        long long v15 = v51;
        uint64_t v16 = v51[4];
        int v40 = *(unsigned __int8 *)(v50 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v32 = v51 + 8;
        uint64_t v33 = (uint64_t)(v51 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v17 = 0;
        int32x4_t v41 = v15;
        uint64_t v35 = v16;
        do
        {
          long long v18 = (unsigned int *)(v34 + 48 * v17);
          uint64_t v19 = *v18;
          long long v20 = (uint64_t *)*((void *)v18 + 2);
          uint64_t v37 = v18[1];
          uint64_t v38 = *((void *)v18 + 3);
          uint64_t v21 = *((void *)v18 + 4);
          uint64_t v22 = *((void *)v18 + 5);
          uint64_t v39 = v17;
          if (v40)
          {
            uint64_t v23 = *(os_unfair_lock_s **)(v22 + 376);
            swift_retain();
            os_unfair_lock_lock(v23);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v16);
          sub_1B62D7F68(v33, (uint64_t)v58, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v24 = v15[4];
          uint64_t v25 = *(void *)(*(void *)(*(void *)(*(void *)(v22 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v41[6] = ecs_stack_allocator_allocate(v24, 48 * v25, 8);
          v41[7] = v25;
          v32[1] = 0;
          v32[2] = 0;
          *uint64_t v32 = 0;
          swift_release();
          uint64_t v26 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v20, v38, v21, (uint64_t)v41);
          long long v15 = v41;
          uint64_t v27 = sub_1B62C9024((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, v20, v38, v21, (uint64_t)v41);
          uint64_t v28 = v27;
          if (v20)
          {
            for (; v21; --v21)
            {
              uint64_t v29 = *v20++;
              sub_1B632AB98(v42, v22, v29, v26, v28, v3, v43, v2);
              v28 += 656;
              v26 += 88;
            }
          }
          else if (v19 != v37)
          {
            uint64_t v30 = v27 + 656 * v19;
            uint64_t v31 = v26 + 88 * v19;
            do
            {
              sub_1B632AB98(v42, v22, v19++, v31, v30, v3, v43, v2);
              v30 += 656;
              v31 += 88;
            }
            while (v37 != v19);
          }
          v56[0] = v53;
          v56[1] = v54;
          uint64_t v57 = v55;
          sub_1B6345178(v41, (unsigned __int16 **)v56, (uint64_t)v58);
          sub_1B634507C((char *)v22);
          uint64_t v16 = v35;
          ecs_stack_allocator_pop_snapshot(v35);
          if (v40)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 376));
          }
          swift_release();
          uint64_t v17 = v39 + 1;
        }
        while (v39 + 1 != v36);
        swift_release();
        sub_1B632F170(v44);
      }
      else
      {
        swift_release();
      }
      return sub_1B632F170(v44);
    }
    else
    {
      return (uint64_t *)swift_release();
    }
  }
  return result;
}

void sub_1B632AB98(float32x4_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __n128 *a7, uint64_t a8)
{
  uint64_t v169 = a8;
  *(void *)(a5 + 232) = 0;
  *(unsigned char *)(a5 + 240) = 1;
  char v12 = *(unsigned char *)(a4 + 41);
  if (v12)
  {
    unint64_t v13 = *(void *)(a5 + 168);
    if (!v13) {
      return;
    }
    int v14 = *(unsigned __int8 *)(a4 + 45);
    if (v13 == 1)
    {
      if (v14) {
        return;
      }
      unint64_t v13 = 1;
      goto LABEL_33;
    }
    if ((v13 & 0x18) != 0)
    {
      float32x4_t v138 = a1;
      int v141 = v14 ^ 1;
LABEL_11:
      swift_retain();
      uint64_t v15 = sub_1B62DE2C8(a3);
      swift_release();
      uint64_t v16 = *(void *)(a4 + 32);
      char v17 = *(unsigned char *)(a4 + 40);
      char v18 = *(unsigned char *)(a4 + 42);
      char v19 = *(unsigned char *)(a4 + 43);
      char v20 = *(unsigned char *)(a4 + 44);
      char v21 = *(unsigned char *)(a4 + 45);
      char v22 = *(unsigned char *)(a4 + 56);
      char v23 = *(unsigned char *)(a4 + 57);
      char v24 = *(unsigned char *)(a4 + 58);
      uint64_t v25 = *(void *)(a4 + 64);
      char v26 = *(unsigned char *)(a4 + 72);
      __int16 v27 = *(_WORD *)(a4 + 74);
      char v28 = *(unsigned char *)(a4 + 76);
      char v29 = *(unsigned char *)(a4 + 77);
      long long v30 = *(_OWORD *)(a4 + 16);
      v151[0] = *(_OWORD *)a4;
      int v31 = *(_DWORD *)(a4 + 80);
      v151[1] = v30;
      uint64_t v152 = v16;
      char v153 = v17;
      char v154 = v12;
      char v155 = v18;
      char v156 = v19;
      char v157 = v20;
      char v158 = v21;
      uint64_t v159 = *(void *)(a4 + 48);
      char v160 = v22;
      char v161 = v23;
      char v162 = v24;
      uint64_t v163 = v25;
      char v164 = v26;
      __int16 v165 = v27;
      char v166 = v28;
      char v167 = v29;
      int v168 = v31;
      *(double *)a1.i64 = sub_1B632B6B8(v15, (uint64_t)v151);
      *(float32x4_t *)a7 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v32, v138, 2), v33, *(float32x2_t *)v138.f32, 1), a1, v138.f32[0]);
      if ((v21 & 1) == 0) {
        goto LABEL_34;
      }
      goto LABEL_16;
    }
    if (!*(unsigned char *)(a4 + 45))
    {
LABEL_33:
      int v141 = 1;
      goto LABEL_34;
    }
  }
  else
  {
    unint64_t v13 = *(void *)(a5 + 168);
    if (v13 < 2) {
      return;
    }
    if ((v13 & 0x18) != 0)
    {
      float32x4_t v138 = a1;
      int v141 = 0;
      goto LABEL_11;
    }
    if ((*(unsigned char *)(a4 + 45) & 1) == 0)
    {
      int v141 = 0;
LABEL_34:
      uint64_t v60 = *(void *)(*(void *)(*(void *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                                  + 8 * *(void *)thread_worker_index(&thread_worker_index, *(double *)a1.i64)
                                  + 8)
                      + 32);
      v149[0] = *(_OWORD *)(a5 + 56);
      v149[1] = *(_OWORD *)(a5 + 72);
      uint64_t v150 = *(void *)(a5 + 88);
      sub_1B62C9DA8(a6, (uint64_t)v149, 0x200000000, v146);
      sub_1B62D7F68((uint64_t)v146, (uint64_t)v147, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
      if (!*(void *)&v147[0]) {
        return;
      }
      __dst[2] = v147[2];
      __dst[3] = v147[3];
      __dst[4] = v147[4];
      __dst[5] = v147[5];
      __dst[0] = v147[0];
      __dst[1] = v147[1];
      sub_1B632BA84();
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = v13;
      uint64_t v137 = swift_retain();
      while (1)
      {
        unsigned int v63 = __clz(__rbit64(v13));
        if (v63 > 6)
        {
LABEL_66:
          swift_release();
          swift_setDeallocating();
          swift_deallocClassInstance();
          if ((*(unsigned char *)(a5 + 184) & 1) == 0)
          {
            sub_1B632F170(v146);
            return;
          }
          uint64_t v103 = *(void *)(a5 + 176);
          if (*(void *)(v103 + 16))
          {
            unint64_t v104 = sub_1B62FFC08(5u);
            if (v105)
            {
              uint64_t v106 = *(void *)(v103 + 56) + 24 * v104;
              uint64_t v107 = *(void *)(v106 + 8);
              uint64_t v108 = *(void *)(v106 + 16);
              float32x4_t v109 = (void *)swift_unknownObjectRetain();
              float v110 = sub_1B6C6BA78(v109, v107, v108, v169, v60);
              uint64_t v112 = v111;
              uint64_t v114 = v113;
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              *(void *)(a5 + 192) = v110;
              *(void *)(a5 + 200) = v112;
              *(void *)(a5 + 208) = v114;
            }
          }
          uint64_t v115 = *(void *)(a5 + 176);
          if (*(void *)(v115 + 16))
          {
            unint64_t v116 = sub_1B62FFC08(*(unsigned char *)(a5 + 216));
            if (v117)
            {
              uint64_t v118 = *(void *)(*(void *)(v115 + 56) + 24 * v116 + 8);
              uint64_t v119 = *(void *)&__dst[5];
              float v120 = (void *)swift_unknownObjectRetain();
              sub_1B6C6E0F0(v120, v118, v119, (_DWORD *)(a5 + 220), (_DWORD *)(a5 + 224));
              sub_1B632F170(v146);
              swift_unknownObjectRelease();
              return;
            }
          }
          sub_1B632F170(v146);
          unint64_t v133 = *(void *)&__dst[5] - 1;
          if (*(void *)&__dst[5] - 1 >= 0 && !HIDWORD(v133))
          {
            *(void *)(a5 + 220) = v133;
            return;
          }
LABEL_84:
          sub_1B6E32BD8();
          __break(1u);
          return;
        }
        if (((1 << v63) & v13) != 0) {
          *(void *)(v61 + 16) = v13 & ~(1 << v63);
        }
        if (v141) {
          break;
        }
        if (!v63) {
          goto LABEL_39;
        }
        ecs_stack_allocator_push_snapshot(v60);
        uint64_t v78 = sub_1B6363AA4(v63, v60, *a7);
        uint64_t v80 = sub_1B6341014(v169, v78, v79, v60);
        uint64_t v82 = v81;
        uint64_t v84 = v83;
        swift_unknownObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v144[0] = *(void *)(a5 + 176);
        *(void *)(a5 + 176) = 0x8000000000000000;
        sub_1B632B8FC(v80, v82, v84, v63, isUniquelyReferenced_nonNull_native);
        *(void *)(a5 + 176) = v144[0];
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
LABEL_38:
        ecs_stack_allocator_pop_snapshot(v60);
LABEL_39:
        unint64_t v13 = *(void *)(v61 + 16);
        if (!v13) {
          goto LABEL_66;
        }
      }
      if (!v63)
      {
        uint64_t v86 = sub_1B6C6B6B0(v169, v60);
        uint64_t v88 = v87;
        uint64_t v90 = v89;
        swift_unknownObjectRetain();
        char v91 = swift_isUniquelyReferenced_nonNull_native();
        v144[0] = *(void *)(a5 + 176);
        uint64_t v92 = v144[0];
        *(void *)(a5 + 176) = 0x8000000000000000;
        unint64_t v94 = sub_1B62FFC08(0);
        char v95 = v93;
        uint64_t v96 = *(void *)(v92 + 16) + ((v93 & 1) == 0);
        if (*(void *)(v92 + 24) >= v96)
        {
          if (v91)
          {
            float32x4_t v99 = (void *)v144[0];
            if ((v93 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            sub_1B6AD6944();
            float32x4_t v99 = (void *)v144[0];
            if ((v95 & 1) == 0) {
              goto LABEL_64;
            }
          }
        }
        else
        {
          sub_1B6AC6CB4(v96, v91);
          unint64_t v97 = sub_1B62FFC08(0);
          if ((v95 & 1) != (v98 & 1)) {
            goto LABEL_83;
          }
          unint64_t v94 = v97;
          float32x4_t v99 = (void *)v144[0];
          if ((v95 & 1) == 0)
          {
LABEL_64:
            v99[(v94 >> 6) + 8] |= 1 << v94;
            *(unsigned char *)(v99[6] + v94) = 0;
            __int32 v102 = (uint64_t *)(v99[7] + 24 * v94);
            *__int32 v102 = v86;
            v102[1] = v88;
            v102[2] = v90;
            ++v99[2];
            goto LABEL_65;
          }
        }
        uint64_t v101 = (uint64_t *)(v99[7] + 24 * v94);
        swift_unknownObjectRelease();
        *uint64_t v101 = v86;
        v101[1] = v88;
        v101[2] = v90;
LABEL_65:
        *(void *)(a5 + 176) = v99;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(a5 + 232) = v90 / 4;
        *(unsigned char *)(a5 + 240) = 0;
        uint64_t v61 = v137;
        goto LABEL_39;
      }
      ecs_stack_allocator_push_snapshot(v60);
      sub_1B6C6D9CC(v63, v60, v144, *a7);
      unint64_t v64 = v145;
      uint64_t v65 = sub_1B6C6DE1C(v169, v144[0], v144[2], v145, v60);
      uint64_t v67 = v66;
      uint64_t v140 = v68;
      *(void *)(a5 + 232) = v64;
      *(unsigned char *)(a5 + 240) = 0;
      swift_unknownObjectRetain();
      char v69 = swift_isUniquelyReferenced_nonNull_native();
      v144[0] = *(void *)(a5 + 176);
      uint64_t v70 = v144[0];
      *(void *)(a5 + 176) = 0x8000000000000000;
      unint64_t v72 = sub_1B62FFC08(v63);
      char v73 = v71;
      uint64_t v74 = *(void *)(v70 + 16) + ((v71 & 1) == 0);
      if (*(void *)(v70 + 24) < v74)
      {
        sub_1B6AC6CB4(v74, v69);
        unint64_t v75 = sub_1B62FFC08(v63);
        if ((v73 & 1) != (v76 & 1)) {
          goto LABEL_83;
        }
        unint64_t v72 = v75;
        float32x2_t v77 = (void *)v144[0];
        if (v73) {
          goto LABEL_57;
        }
LABEL_36:
        v77[(v72 >> 6) + 8] |= 1 << v72;
        *(unsigned char *)(v77[6] + v72) = v63;
        uint64_t v62 = (uint64_t *)(v77[7] + 24 * v72);
        *uint64_t v62 = v65;
        v62[1] = v67;
        _OWORD v62[2] = v140;
        ++v77[2];
LABEL_37:
        *(void *)(a5 + 176) = v77;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v61 = v137;
        goto LABEL_38;
      }
      if (v69)
      {
        float32x2_t v77 = (void *)v144[0];
        if ((v71 & 1) == 0) {
          goto LABEL_36;
        }
      }
      else
      {
        sub_1B6AD6944();
        float32x2_t v77 = (void *)v144[0];
        if ((v73 & 1) == 0) {
          goto LABEL_36;
        }
      }
LABEL_57:
      __int32 v100 = (uint64_t *)(v77[7] + 24 * v72);
      swift_unknownObjectRelease();
      *__int32 v100 = v65;
      v100[1] = v67;
      v100[2] = v140;
      goto LABEL_37;
    }
  }
LABEL_16:
  if (*(void *)(a5 + 360))
  {
    uint64_t v34 = *(void *)(a5 + 464);
    if (v34 >= 1)
    {
      uint64_t v35 = sub_1B6C6CAC8(v169, (uint64_t *)a5, 512, v34);
      uint64_t v136 = v36;
      uint64_t v139 = v35;
      uint64_t v135 = v37;
      sub_1B632BA84();
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v13;
      uint64_t v134 = swift_retain();
      do
      {
        unsigned int v39 = __clz(__rbit64(v13));
        if (v39 > 6) {
          break;
        }
        if (((1 << v39) & v13) != 0)
        {
          v13 &= ~(1 << v39);
          *(void *)(v38 + 16) = v13;
        }
        if (v39)
        {
          memcpy(__dst, (const void *)a5, sizeof(__dst));
          uint64_t v40 = v169;
          uint64_t v41 = sub_1B6C6CF60(*a7, v169, (uint64_t)__dst, v39, v139, v136, v135, 512);
          uint64_t v43 = v42;
          uint64_t v45 = v44;
          memcpy(v147, (const void *)a5, sizeof(v147));
          uint64_t v46 = sub_1B6C6D134(v40, (uint64_t)v147, v41, v43, v45, v139, v136, v135, 512);
          uint64_t v48 = v47;
          uint64_t v142 = v49;
          char v50 = swift_isUniquelyReferenced_nonNull_native();
          v146[0] = *(void *)(a5 + 176);
          uint64_t v51 = v146[0];
          *(void *)(a5 + 176) = 0x8000000000000000;
          unint64_t v52 = sub_1B62FFC08(v39);
          char v54 = v53;
          uint64_t v55 = *(void *)(v51 + 16) + ((v53 & 1) == 0);
          if (*(void *)(v51 + 24) >= v55)
          {
            if ((v50 & 1) == 0) {
              sub_1B6AD6944();
            }
          }
          else
          {
            sub_1B6AC6CB4(v55, v50);
            unint64_t v56 = sub_1B62FFC08(v39);
            if ((v54 & 1) != (v57 & 1))
            {
LABEL_83:
              sub_1B6E33838();
              __break(1u);
              goto LABEL_84;
            }
            unint64_t v52 = v56;
          }
          uint64_t v38 = v134;
          uint64_t v58 = v146[0];
          if (v54)
          {
            unint64_t v59 = (uint64_t *)(*(void *)(v146[0] + 56) + 24 * v52);
            swift_unknownObjectRelease();
            *unint64_t v59 = v46;
            v59[1] = v48;
            _OWORD v59[2] = v142;
          }
          else
          {
            sub_1B632BA3C(v52, v39, v46, v48, v142, (void *)v146[0]);
          }
          *(void *)(a5 + 176) = v58;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v13 = *(void *)(v134 + 16);
        }
      }
      while (v13);
      swift_release();
      swift_setDeallocating();
      swift_deallocClassInstance();
      if ((*(unsigned char *)(a5 + 184) & 1) != 0
        && (uint64_t v121 = *(void *)(a5 + 176), *(void *)(v121 + 16))
        && (unint64_t v122 = sub_1B62FFC08(5u), (v123 & 1) != 0))
      {
        uint64_t v124 = *(void *)(v121 + 56) + 24 * v122;
        uint64_t v125 = *(void *)(v124 + 8);
        uint64_t v126 = *(void *)(v124 + 16);
        memcpy(v146, (const void *)a5, sizeof(v146));
        sub_1B62D7F68((uint64_t)&v146[24], (uint64_t)v149, (unint64_t *)&qword_1EB97DAB0, (uint64_t)&type metadata for BufferSlice);
        uint64_t v127 = swift_unknownObjectRetain();
        uint64_t v128 = sub_1B6C6D45C(v127, v125, v126, v169, (uint64_t)v146, v139, v136, v135, 512);
        uint64_t v130 = v129;
        uint64_t v132 = v131;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        sub_1B62D8C10((uint64_t)v149);
        *(void *)(a5 + 192) = v128;
        *(void *)(a5 + 200) = v130;
        *(void *)(a5 + 208) = v132;
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

double sub_1B632B6B8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + 56) & 1) == 0)
  {
    uint64_t v3 = swift_retain();
    sub_1B6335480(v3, &v8);
    double v4 = *(double *)v8.i64;
    char v5 = v9;
    swift_release();
    if (v5)
    {
      *(void *)&double result = 1065353216;
      return result;
    }
    return v4;
  }
  *(void *)&double result = 1065353216;
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v7 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      sub_1B632B84C(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(_WORD *)(v7 + 12 * (int)a1 + 4), 64, (uint64_t)&v8);
      *(void *)&double result = 1065353216;
      if ((v9 & 1) == 0) {
        return *(double *)v8.i64;
      }
    }
  }
  return result;
}

uint64_t sub_1B632B84C@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1B632B864(a1, a2, a3, a4);
}

uint64_t sub_1B632B864@<X0>(uint64_t result@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(result + 48);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (void *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for InverseWorldTransform)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_5;
      }
    }
    char v15 = 0;
    uint64_t v16 = (uint64_t *)(*(void *)(result + 128) + *v6 + a2 * a3);
    uint64_t v7 = *v16;
    uint64_t v8 = v16[1];
    uint64_t v9 = v16[2];
    uint64_t v10 = v16[3];
    uint64_t v11 = v16[4];
    uint64_t v12 = v16[5];
    uint64_t v13 = v16[6];
    uint64_t v14 = v16[7];
  }
  else
  {
LABEL_5:
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    char v15 = 1;
  }
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = v8;
  *(void *)(a4 + 16) = v9;
  *(void *)(a4 + 24) = v10;
  *(void *)(a4 + 32) = v11;
  *(void *)(a4 + 40) = v12;
  *(void *)(a4 + 48) = v13;
  *(void *)(a4 + 56) = v14;
  *(unsigned char *)(a4 + 64) = v15;
  return result;
}

unint64_t sub_1B632B8FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v13 = sub_1B62FFC08(a4);
  char v15 = v14;
  uint64_t v16 = v12[3];
  uint64_t v17 = v12[2] + ((v14 & 1) == 0);
  if (v16 >= v17 && (a5 & 1) != 0)
  {
LABEL_6:
    char v18 = *v6;
    if (v15)
    {
LABEL_7:
      char v19 = (uint64_t *)(v18[7] + 24 * v13);
      unint64_t result = swift_unknownObjectRelease();
      uint64_t *v19 = a1;
      v19[1] = a2;
      v19[2] = a3;
      return result;
    }
    goto LABEL_10;
  }
  if (v16 >= v17 && (a5 & 1) == 0)
  {
    sub_1B6AD6944();
    goto LABEL_6;
  }
  sub_1B6AC6CB4(v17, a5 & 1);
  unint64_t v21 = sub_1B62FFC08(a4);
  if ((v15 & 1) != (v22 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v13 = v21;
  char v18 = *v6;
  if (v15) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B632BA3C(v13, a4, a1, a2, a3, v18);
}

unint64_t sub_1B632BA3C(unint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a6[6] + result) = a2;
  uint64_t v6 = (void *)(a6[7] + 24 * result);
  *uint64_t v6 = a3;
  v6[1] = a4;
  v6[2] = a5;
  ++a6[2];
  return result;
}

void sub_1B632BA84()
{
  if (!qword_1EB94A1B0)
  {
    sub_1B6C6E260();
    unint64_t v0 = sub_1B6E32938();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB94A1B0);
    }
  }
}

unint64_t sub_1B632BAE0(uint64_t a1)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v2 = sub_1B636E9A8((uint64_t)&type metadata for FrameConstantsStorage);
  if (v4)
  {
    uint64_t v6 = (int32x4_t *)(*(void *)(a1 + 16) + v2);
    uint64_t v7 = 32 * v3;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + 32 * v3 + 24));
    os_unfair_recursive_lock_unlock();
    unint64_t v5 = vzip1q_s32(vdupq_laneq_s32(v6[3], 2), vdupq_laneq_s32(v6[4], 2)).u64[0];
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + v7 + 24));
  }
  else
  {
    os_unfair_recursive_lock_unlock();
    return 0;
  }
  return v5;
}

uint64_t sub_1B632BBBC()
{
  return type metadata accessor for ParticleInitScript.System();
}

uint64_t type metadata accessor for ParticleInitScript.System()
{
  return self;
}

const char *sub_1B632BC00()
{
  return "ParticleInitScriptRunner";
}

uint64_t sub_1B632BC14()
{
  return type metadata accessor for ParticleBurstSpawnSystem();
}

uint64_t type metadata accessor for ParticleBurstSpawnSystem()
{
  return self;
}

unint64_t sub_1B632BC5C(uint64_t a1)
{
  uint64_t v77 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = swift_retain();
  unint64_t v3 = sub_1B636E574(v2);
  char v5 = v4;
  unint64_t result = swift_release();
  if (v5) {
    return result;
  }
  unint64_t result = sub_1B633036C(v3);
  if ((result & 0xFF00000000) == 0x300000000) {
    return result;
  }
  unsigned __int8 v7 = BYTE4(result);
  float v8 = *(float *)&result;
  if (*(float *)&result <= 0.0) {
    return result;
  }
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v9) {
    return result;
  }
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_1B6330614();
  swift_release();
  char v11 = *(unsigned char *)(v9 + 600);
  unint64_t v12 = v7 + 1;
  float v13 = v8 * 0.01;
  unint64_t v63 = 0;
  unint64_t v64 = 0;
  float v61 = v13;
  uint64_t v58 = 0xD000000000000013;
  unint64_t v59 = 0x80000001B6F49600;
  uint64_t v60 = v12;
  float v14 = v13 * (float)(uint64_t)objc_msgSend(v10, sel_height);
  int v57 = 1056964608;
  if (v14 <= 128.0)
  {
    if (v14 <= 32.0)
    {
      if (v14 < 4.0)
      {
        unint64_t v12 = 1;
        uint64_t v60 = 1;
      }
      uint64_t v15 = 1056964608;
      goto LABEL_13;
    }
    uint64_t v15 = 1048576000;
    int v57 = 1048576000;
    uint64_t v16 = "compute_downsample4";
  }
  else
  {
    uint64_t v15 = 1040187392;
    int v57 = 1040187392;
    uint64_t v16 = "compute_downsample8";
  }
  uint64_t v58 = 0xD000000000000013;
  unint64_t v59 = (unint64_t)(v16 - 32) | 0x8000000000000000;
LABEL_13:
  swift_retain();
  char v18 = sub_1B6383540(&v67, 9);
  if (*(void *)(v17 + 8))
  {
    *(void *)(v17 + 32) = v15;
    *(unsigned char *)(v17 + 40) = 1;
  }
  ((void (*)(uint64_t *, void))v18)(&v67, 0);
  swift_release();
  sub_1B6383E40((uint64_t)v66);
  swift_retain();
  char v19 = (void *)sub_1B6330D9C((uint64_t)v66, 1, 1, 2);
  sub_1B62C7BF4((uint64_t)v66);
  swift_release();
  if (!v19)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_unknownObjectRelease();
  }
  uint64_t v53 = (uint64_t)v10;
  id v20 = objc_msgSend(v19, sel_height);
  if ((float)(v13 * (float)(uint64_t)v20) <= 63.0) {
    float v21 = v13 * (float)(uint64_t)v20;
  }
  else {
    float v21 = 63.0;
  }
  uint64_t v51 = vcvtps_s32_f32(v21);
  int v65 = v51;
  swift_retain();
  char v22 = (void *)sub_1B62F1868(0, v12 << 10);
  uint64_t v24 = v23;
  uint64_t v49 = v25;
  swift_unknownObjectRetain();
  swift_release();
  uint64_t v54 = (uint64_t)v22;
  uint64_t v50 = v24;
  char v26 = (int8x16_t *)sub_1B6B18CCC(v22, v24, v12, v21);
  unint64_t v62 = vextq_s8(v26[2], v26[2], 8uLL).u64[0];
  RGTextureDescriptorFromMTLTexture(v19, (uint64_t)&v67);
  __int16 v27 = v67;
  __int16 v28 = WORD1(v67);
  __int16 v29 = WORD2(v67);
  char v44 = v69;
  char v45 = v68;
  char v43 = v70;
  long long v47 = v74;
  long long v48 = v73;
  int16x8_t v46 = (int16x8_t)vmovl_u8((uint8x8_t)__PAIR64__(DWORD1(v74), v76));
  uint64_t v30 = v71;
  uint64_t v31 = v75;
  char v52 = v11;
  if (v12 < 2 || (unint64_t v63 = vextq_s8(v26[3], v26[3], 8uLL).u64[0], v12 == 2))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    int8x16_t v42 = v26[4];
    swift_bridgeObjectRelease();
    unint64_t v64 = vextq_s8(v42, v42, 8uLL).u64[0];
  }
  uint64_t v32 = *(void *)(*(void *)(*(void *)(v9 + 264) + 40) + 16);
  swift_retain();
  if (v32) {
    sub_1B62B2CE0(0xD000000000000014, 0x80000001B6F49620);
  }
  LOWORD(v67) = v27;
  WORD1(v67) = v28;
  WORD2(v67) = v29;
  HIWORD(v67) = v12;
  char v68 = v45;
  char v69 = v44;
  char v70 = v43;
  uint64_t v71 = v30;
  uint64_t v72 = 3;
  long long v73 = v48;
  long long v74 = v47;
  uint64_t v75 = v31;
  unsigned __int32 v76 = vmovn_s16(v46).u32[0];
  uint64_t v33 = sub_1B6331208(0xD000000000000014, 0x80000001B6F49620, &v67);
  swift_release();
  uint64_t v34 = *(void *)(*(void *)(*(void *)(v9 + 264) + 40) + 16);
  swift_retain();
  if (v34) {
    sub_1B62B2CE0(0xD000000000000012, 0x80000001B6F49640);
  }
  uint64_t v35 = sub_1B6331208(0xD000000000000012, 0x80000001B6F49640, &v67);
  swift_release();
  uint64_t v36 = (void *)sub_1B6802298(0x657475706D6F43, 0xE700000000000000, 0);
  uint64_t v37 = (void *)sub_1B6E31768();
  objc_msgSend(v36, sel_pushDebugGroup_, v37);

  sub_1B6B18664(v36, v9, &v58, v52, v53, v19, (uint64_t)&v57, (unsigned int *)&v60, v33, v35, (uint64_t)&v61, v54, v50, v49, 63, v51);
  objc_msgSend(v36, sel_popDebugGroup);
  swift_unknownObjectRelease();
  uint64_t v38 = (void *)sub_1B62963B0(0xD000000000000012, 0x80000001B6F49640);
  if (v38)
  {
    sub_1B628A1EC(v38);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    int v39 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v55 = 0;
    swift_retain();
    sub_1B6B33E34(v39, &v55, 0xD000000000000027, 0x80000001B6F49660);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  uint64_t v40 = (void *)sub_1B62963B0(0xD000000000000014, 0x80000001B6F49620);
  if (v40)
  {
    sub_1B628A1EC(v40);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  uint64_t v55 = 0;
  unint64_t v56 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  int v41 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v55 = 0;
  swift_retain();
  sub_1B6B33E34(v41, &v55, 0xD000000000000029, 0x80000001B6F49690);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1B632C498(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 272);
    unint64_t v3 = *(void *)(v2 + 24);
    if (v3 == 2)
    {
      unint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    }
    float v5 = *(float *)(v2 + 40);
    float v4 = *(float *)(v2 + 44);
    unint64_t v6 = *(void *)(v2 + 32);
    char v7 = v6 & 1;
    unint64_t v8 = HIDWORD(v6);
    __int16 v56 = v3 & 0x101;
    char v57 = BYTE2(v3) & 1;
    char v58 = BYTE3(v3) & 1;
    uint64x2_t v9 = (uint64x2_t)vdupq_n_s64(v3);
    int16x8_t v10 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v9, (uint64x2_t)xmmword_1B6E89CE0), (int32x4_t)vshlq_u64(v9, (uint64x2_t)xmmword_1B6E89CF0));
    *(int8x8_t *)v10.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v10), (int8x8_t)0x1000100010001);
    unsigned __int32 v59 = vmovn_s16(v10).u32[0];
    __int16 v60 = v6 & 0x101;
    char v61 = BYTE2(v6) & 1;
    int v62 = HIDWORD(v6);
    float v63 = v5;
    float v64 = v4;
    BOOL v11 = (v3 & 0x100000100 | v6 & 1) != 0;
    if ((v3 & 1) != 0 && v11)
    {
      uint64_t v45 = result;
      char v46 = v7;
      swift_retain();
      swift_retain();
      uint64_t v12 = sub_1B6E328F8();
      float v14 = *(void **)(v1 + 368);
      uint64_t v47 = v2;
      if (v14)
      {
        uint64_t v54 = v12;
        unint64_t v55 = v13;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B6E31A68();
        uint64_t v15 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_pushDebugGroup_, v15);
        swift_bridgeObjectRelease();

        uint64_t v2 = v47;
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1B6383E40((uint64_t)v50);
      uint64_t v16 = *(void *)(*(void *)(*(void *)(v2 + 16) + 264) + 40);
      uint64_t v17 = *(void *)(v16 + 16);
      swift_retain();
      if (v17)
      {
        uint64_t v19 = v50[0];
        uint64_t v18 = v50[1];
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1B62B2CE0(v19, v18);
        if (v21)
        {
          char v22 = *(void **)(*(void *)(v16 + 56) + 8 * v20);
          swift_unknownObjectRetain();
          sub_1B62C7BF4((uint64_t)v50);
          swift_release();
          sub_1B62C7BF4((uint64_t)v50);
          sub_1B6383E40((uint64_t)v51);
          uint64_t v23 = sub_1B6330D9C((uint64_t)v51, 1, 0, 2);
          sub_1B62C7BF4((uint64_t)v51);
          long long v48 = (void *)v23;
          if (v23)
          {
            float v24 = v5;
            float v25 = v4;
            if ((v3 & 0x100) != 0 && *(float *)&v8 < 1.0)
            {
              if (v5 >= *(float *)&v8) {
                float v24 = *(float *)&v8;
              }
              if ((v3 & 0x1000000) == 0) {
                float v24 = *(float *)&v8;
              }
            }
            else
            {
              if ((v3 & 0x1000000) == 0)
              {
                float v24 = 1.0;
                float v25 = fminf(v4, 1.0);
LABEL_30:
                if ((v3 & 0x10000) == 0) {
                  float v25 = v24;
                }
                uint64_t v28 = 1 - (uint64_t)log2f(v25);
                swift_getObjectType();
                id v29 = objc_msgSend(v48, sel_mipmapLevelCount);
                if ((uint64_t)v29 < v28) {
                  uint64_t v28 = (uint64_t)v29;
                }
                objc_msgSend(v48, sel_pixelFormat);
                objc_msgSend(v48, sel_textureType);
                id v49 = v22;
                if (v28)
                {
                  uint64_t v30 = v28;
                  swift_unknownObjectRetain();
                  uint64_t v31 = 0;
                  do
                  {
                    uint64_t v32 = v31 + 1;
                    uint64_t v33 = (void *)sub_1B6E32108();
                    if (v31)
                    {
                      uint64_t v54 = 0;
                      unint64_t v55 = 0xE000000000000000;
                      sub_1B6E328C8();
                      swift_bridgeObjectRelease();
                      uint64_t v54 = 0x776F446874706544;
                      unint64_t v55 = 0xEF656C706D61736ELL;
                      v53[0] = v31;
                      sub_1B6E33098();
                      sub_1B6E31948();
                      swift_bridgeObjectRelease();
                      uint64_t v34 = v54;
                      uint64_t v35 = v55;
                    }
                    else
                    {
                      uint64_t v35 = 0xE900000000000079;
                      uint64_t v34 = 0x706F436874706544;
                    }
                    uint64_t v36 = sub_1B633483C(0, 2, (uint64_t)v33, 0, 1, 0);
                    sub_1B6388754(v34, v35, v36);
                    uint64_t v37 = sub_1B6388ED8(0);
                    if (v37)
                    {
                      uint64_t v38 = (void *)v37;
                      swift_unknownObjectRetain();
                      sub_1B638963C((uint64_t)v52);
                      sub_1B6D5D6BC(v38, v52, v1, v31, &v49);
                      sub_1B6388C28();
                      swift_bridgeObjectRelease();

                      swift_unknownObjectRelease();
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                    }
                    swift_unknownObjectRelease();
                    id v49 = v33;
                    ++v31;
                  }
                  while (v30 != v32);
                }
                else
                {
                  swift_unknownObjectRetain();
                }
                sub_1B6383E40((uint64_t)v53);
                uint64_t v39 = sub_1B6330D9C((uint64_t)v53, v46, 0, 2);
                sub_1B62C7BF4((uint64_t)v53);
                if (v39)
                {
                  uint64_t v40 = swift_unknownObjectRetain();
                  int v41 = sub_1B633483C(v40, 2, 0, 2, 0, 0);
                  swift_unknownObjectRelease();
                  sub_1B6388754(0x6E694C6874706544, 0xEB00000000726165, v41);
                  uint64_t v42 = sub_1B6388ED8(0);
                  if (v42)
                  {
                    char v43 = (void *)v42;
                    swift_unknownObjectRetain();
                    sub_1B638963C((uint64_t)&v54);
                    sub_1B6D5D98C(v43, &v54, v1, (uint64_t)&v56, v48, v45);
                    sub_1B6388C28();
                    swift_unknownObjectRelease();
                  }
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                }
                else
                {
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                }
                char v44 = *(void **)(v1 + 368);
                if (v44) {
                  objc_msgSend(v44, sel_popDebugGroup);
                }
                swift_release();
                return swift_release();
              }
              float v24 = fminf(v5, 1.0);
            }
            if (v24 <= v4) {
              float v25 = v24;
            }
            goto LABEL_30;
          }
          swift_unknownObjectRelease();
          __int16 v27 = *(void **)(v1 + 368);
          if (v27) {
            objc_msgSend(v27, sel_popDebugGroup);
          }
LABEL_21:
          swift_release();
          return swift_release();
        }
        sub_1B62C7BF4((uint64_t)v50);
      }
      swift_release();
      sub_1B62C7BF4((uint64_t)v50);
      char v26 = *(void **)(v1 + 368);
      if (v26) {
        objc_msgSend(v26, sel_popDebugGroup);
      }
      goto LABEL_21;
    }
  }
  return result;
}

void sub_1B632CB70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 392);
    if (v2)
    {
      id v4 = v2;
      swift_retain();
      sub_1B638963C((uint64_t)v17);

      swift_retain();
      id v16 = (id)sub_1B63340E8(a1);
      swift_release();
      if (v16)
      {
        uint64_t v5 = sub_1B6388ED8(0);
        if (v5)
        {
          unint64_t v6 = (void *)v5;
          swift_unknownObjectRetain();
          uint64_t v7 = sub_1B6E328F8();
          sub_1B6388754(v7, v8, v16);
          swift_bridgeObjectRelease();
          sub_1B632CE70(a1, v6, v17);
          uint64_t v9 = sub_1B635824C();
          if (v9)
          {
            uint64_t v11 = v9;
            uint64_t v12 = sub_1B637ED68(v10);
            sub_1B69BF5C4(v11);
            uint64_t v13 = sub_1B62F79C8(0, *(void *)(v12 + 16));
            uint64_t v14 = MEMORY[0x1E4FBC860];
            uint64_t v15 = sub_1B62F712C(MEMORY[0x1E4FBC860]);
            sub_1B6A82404(v12, v13, v14, v15, 0x200000000uLL, 0, 0, 2, (uint64_t)v18);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B62C9DA8(a1, (uint64_t)v18, 0x200000000, v19);
            sub_1B62D7DE8((uint64_t)v19, (uint64_t)v20, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
            if (*(void *)&v20[0])
            {
              v20[8] = v20[2];
              v20[9] = v20[3];
              v20[10] = v20[4];
              v20[11] = v20[5];
              v20[6] = v20[0];
              v20[7] = v20[1];
              sub_1B6365460(0);
              sub_1B62CA064((uint64_t)v18);
              swift_release();

              swift_unknownObjectRelease();
              sub_1B632F1C4(v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            }
            else
            {
              sub_1B62CA064((uint64_t)v18);
              swift_release();

              swift_unknownObjectRelease();
            }
          }
          else
          {
            swift_release();

            swift_unknownObjectRelease();
          }
        }
        else
        {
          swift_release();
        }
      }
      else
      {
        swift_release();
      }
    }
  }
}

uint64_t sub_1B632CE70(uint64_t result, void *a2, void *a3)
{
  uint64_t v234 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v3) {
    return result;
  }
  uint64_t v5 = result;
  swift_retain();
  swift_retain();
  sub_1B636E62C();
  unsigned __int8 v7 = v6;
  int v8 = v6;
  swift_release();
  if (v8 != 2)
  {
    *(unsigned char *)(*(void *)(v3 + 288) + 136) = 1;
    if (qword_1EB97DC28 != -1) {
      swift_once();
    }
    uint64_t v157 = qword_1EB997A18;
    int v158 = 0;
    char v159 = 2;
    uint64_t v160 = 0;
    char v161 = 2;
    uint64_t v162 = 0;
    swift_retain();
    sub_1B67CFAA4((uint64_t)v145);
    swift_release();
    sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = &type metadata for DebugInfoA;
    *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
    if ((v7 & 1) == 0) {
      uint64_t v10 = &type metadata for DebugInfoB;
    }
    uint64_t v11 = &off_1F0F521C8;
    if (v7) {
      uint64_t v11 = &off_1F0F520D8;
    }
    *(void *)(v9 + 32) = v10;
    *(void *)(v9 + 40) = v11;
    sub_1B63B9C40(v9, 1, (uint64_t)v146);
    swift_setDeallocating();
    swift_deallocClassInstance();
    sub_1B62CA064((uint64_t)v145);
    v155[0] = v146[0];
    v155[1] = v146[1];
    uint64_t v156 = v147;
    uint64_t v118 = v5;
    sub_1B62C9DA8(v5, (uint64_t)v155, 0x200000000, v207);
    sub_1B62D7DE8((uint64_t)v207, (uint64_t)&v209, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if ((void)v209)
    {
      uint64_t v12 = 0;
      long long v148 = v209;
      long long v149 = v210;
      uint64_t v132 = v212;
      uint64_t v150 = v211;
      uint64_t v139 = v215;
      uint64_t v140 = v3;
      uint64_t v114 = v216;
      uint64_t v115 = a3;
      uint64_t v133 = v213;
      uint64_t v113 = v214;
      if (v216 >= 1 && v213)
      {
        uint64_t v13 = v215[4];
        int v14 = *(unsigned __int8 *)(v214 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v153[0] = v209;
        v153[1] = v210;
        uint64_t v154 = v211;
        uint64_t v126 = (uint64_t)(v215 + 6);
        uint64_t v124 = v215 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        int v122 = v14;
        uint64_t v120 = v13;
        while (1)
        {
          uint64_t v134 = v15;
          uint64_t v18 = (unsigned int *)(v132 + 48 * v15);
          uint64_t v19 = *v18;
          uint64_t v129 = v18[1];
          char v21 = (uint64_t *)*((void *)v18 + 2);
          uint64_t v20 = *((void *)v18 + 3);
          uint64_t v23 = *((void *)v18 + 4);
          uint64_t v22 = *((void *)v18 + 5);
          uint64_t v142 = v22;
          if (v14)
          {
            float v24 = *(os_unfair_lock_s **)(v22 + 376);
            swift_retain_n();
            float v25 = v24;
            uint64_t v22 = v142;
            os_unfair_lock_lock(v25);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v142 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v13);
          sub_1B62D7DE8(v126, (uint64_t)v227, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v22 + 40) + 16) + 32) + 16);
          uint64_t v27 = v139[4];
          uint64_t v28 = v26 + 1;
          uint64_t v29 = 48 * (v26 + 1);
          swift_retain();
          v139[6] = ecs_stack_allocator_allocate(v27, v29, 8);
          v139[7] = v28;
          v124[1] = 0;
          _OWORD v124[2] = 0;
          *uint64_t v124 = 0;
          swift_release();
          uint64_t v30 = sub_1B62C9024((uint64_t)&type metadata for DebugInfoWireframePrimitive, (uint64_t)&off_1F0F974E8, v21, v20, v23, (uint64_t)v139);
          if (v21)
          {
            int v14 = v122;
            if (v23)
            {
              uint64_t v31 = v30 + 48;
              uint64_t v13 = v120;
              uint64_t v32 = v134;
              uint64_t v33 = (void *)&unk_1E9DCC000;
              uint64_t v34 = &qword_1E9DD7000;
              do
              {
                uint64_t v35 = 72;
                switch(*(unsigned char *)(v31 + 48))
                {
                  case 1:
                    v17 += 3;
                    uint64_t v36 = 6;
                    break;
                  case 2:
                    v17 += 6;
                    uint64_t v36 = 6;
                    break;
                  case 3:
                    goto LABEL_24;
                  case 4:
                    uint64_t v35 = 24;
                    goto LABEL_24;
                  case 5:
                    uint64_t v35 = (uint64_t)(float)(*(float *)(v31 - 28) * 24.0);
LABEL_24:
                    v17 += v35;
                    uint64_t v36 = 2 * v35;
                    break;
                  case 6:
                  case 8:
                    if (v33[217] != -1)
                    {
                      swift_once();
                      uint64_t v34 = &qword_1E9DD7000;
                      uint64_t v33 = &unk_1E9DCC000;
                    }
                    v17 += 8;
                    uint64_t v36 = *(void *)(v34[68] + 16);
                    break;
                  case 7:
                    v17 += 48;
                    uint64_t v36 = 2 * *(void *)(v31 - 16) + 96;
                    break;
                  case 9:
                    uint64_t v40 = *(void *)(v31 - 8) + *(void *)v31;
                    v17 += 24 * v40;
                    uint64_t v36 = 48 * v40;
                    break;
                  case 0xA:
                    v17 += 4;
                    uint64_t v36 = 4;
                    break;
                  case 0xB:
                    v17 += 2;
                    uint64_t v36 = 2;
                    break;
                  case 0xC:
                    v17 += 12;
                    uint64_t v36 = 18;
                    break;
                  default:
                    int v37 = *(unsigned __int8 *)(v31 - 16);
                    uint64_t v38 = v17 + 6;
                    if (!*(unsigned char *)(v31 - 16)) {
                      uint64_t v38 = v17 + 2;
                    }
                    uint64_t v39 = 2;
                    if (*(unsigned char *)(v31 - 16)) {
                      uint64_t v39 = 10;
                    }
                    if (v37 == 1)
                    {
                      uint64_t v38 = v17 + 4;
                      uint64_t v39 = 6;
                    }
                    if (v37 == 2) {
                      v17 += 4;
                    }
                    else {
                      uint64_t v17 = v38;
                    }
                    if (v37 == 2) {
                      uint64_t v36 = 6;
                    }
                    else {
                      uint64_t v36 = v39;
                    }
                    break;
                }
                v16 += v36;
                v31 += 112;
                --v23;
              }
              while (v23);
              goto LABEL_52;
            }
          }
          else
          {
            int v14 = v122;
            if (v19 != v129)
            {
              uint64_t v41 = ~v19 + v129;
              uint64_t v42 = v30 + 112 * v19 + 48;
              uint64_t v13 = v120;
              uint64_t v32 = v134;
              char v43 = (void *)&unk_1E9DCC000;
              char v44 = &qword_1E9DD7000;
              while (1)
              {
                uint64_t v47 = (float *)v42;
                uint64_t v48 = *(unsigned __int8 *)(v42 + 48);
                v42 += 112;
                uint64_t v45 = 72;
                switch(v48)
                {
                  case 1:
                    v17 += 3;
                    goto LABEL_77;
                  case 2:
                    v17 += 6;
LABEL_77:
                    v16 += 6;
                    if (!v41) {
                      goto LABEL_52;
                    }
                    goto LABEL_58;
                  case 3:
                    goto LABEL_56;
                  case 4:
                    uint64_t v45 = 24;
                    goto LABEL_56;
                  case 5:
                    uint64_t v45 = (uint64_t)(float)(*(v47 - 7) * 24.0);
LABEL_56:
                    v17 += v45;
                    uint64_t v46 = 2 * v45;
                    goto LABEL_57;
                  case 6:
                  case 8:
                    if (v43[217] != -1)
                    {
                      swift_once();
                      char v44 = &qword_1E9DD7000;
                      char v43 = &unk_1E9DCC000;
                    }
                    v17 += 8;
                    uint64_t v46 = *(void *)(v44[68] + 16);
                    goto LABEL_57;
                  case 7:
                    v17 += 48;
                    uint64_t v46 = 2 * *((void *)v47 - 2) + 96;
                    goto LABEL_57;
                  case 9:
                    uint64_t v52 = *((void *)v47 - 1) + *(void *)v47;
                    v17 += 24 * v52;
                    uint64_t v46 = 48 * v52;
                    goto LABEL_57;
                  case 10:
                    v17 += 4;
                    v16 += 4;
                    if (!v41) {
                      goto LABEL_52;
                    }
                    goto LABEL_58;
                  case 11:
                    v17 += 2;
                    v16 += 2;
                    if (!v41) {
                      goto LABEL_52;
                    }
                    goto LABEL_58;
                  case 12:
                    v17 += 12;
                    v16 += 18;
                    if (!v41) {
                      goto LABEL_52;
                    }
                    goto LABEL_58;
                  default:
                    int v49 = *((unsigned __int8 *)v47 - 16);
                    uint64_t v50 = v17 + 6;
                    if (!v49) {
                      uint64_t v50 = v17 + 2;
                    }
                    uint64_t v51 = 2;
                    if (v49) {
                      uint64_t v51 = 10;
                    }
                    if (v49 == 1)
                    {
                      uint64_t v50 = v17 + 4;
                      uint64_t v51 = 6;
                    }
                    if (v49 == 2) {
                      v17 += 4;
                    }
                    else {
                      uint64_t v17 = v50;
                    }
                    if (v49 == 2) {
                      uint64_t v46 = 6;
                    }
                    else {
                      uint64_t v46 = v51;
                    }
LABEL_57:
                    v16 += v46;
                    if (!v41) {
                      goto LABEL_52;
                    }
LABEL_58:
                    --v41;
                    break;
                }
              }
            }
          }
          uint64_t v13 = v120;
          uint64_t v32 = v134;
LABEL_52:
          sub_1B6345178(v139, (unsigned __int16 **)v153, (uint64_t)v227);
          sub_1B634507C((char *)v142);
          ecs_stack_allocator_pop_snapshot(v13);
          if (v14)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v142 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v142 + 376));
          }
          swift_release();
          uint64_t v15 = v32 + 1;
          if (v15 == v133)
          {
            sub_1B632F1C4(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            goto LABEL_91;
          }
        }
      }
      uint64_t v16 = 0;
      uint64_t v17 = 0;
LABEL_91:
      uint64_t v53 = v118;
      uint64_t v54 = *(void *)(v118 + 176);
      swift_retain();
      swift_retain();
      sub_1B6B3AF78((uint64_t)&type metadata for FrameConstantsStorage, (uint64_t)&off_1F0F851A8, v54);
      long long v143 = v55;
      long long v135 = v57;
      long long v137 = v56;
      swift_release();
      sub_1B636051C((long long *)v208);
      float32x4_t v123 = v208[0];
      float32x4_t v125 = v208[1];
      float32x4_t v127 = v208[2];
      float32x4_t v130 = v208[3];
      float32x4_t v116 = v208[4];
      float32x4_t v117 = v208[5];
      float32x4_t v119 = v208[6];
      float32x4_t v121 = v208[7];
      swift_release();
      v191.i64[0] = v17;
      v191.i64[1] = v16;
      long long v192 = 0u;
      long long v193 = 0u;
      long long v194 = 0u;
      long long v195 = 0u;
      long long v196 = 0u;
      long long v197 = 0u;
      long long v198 = 0u;
      long long v199 = 0u;
      long long v200 = v143;
      long long v201 = v137;
      long long v202 = v135;
      float32x4_t v203 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v116, v123.f32[0]), v117, *(float32x2_t *)v123.f32, 1), v119, v123, 2), v121, v123, 3);
      float32x4_t v204 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v116, v125.f32[0]), v117, *(float32x2_t *)v125.f32, 1), v119, v125, 2), v121, v125, 3);
      float32x4_t v205 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v116, v127.f32[0]), v117, *(float32x2_t *)v127.f32, 1), v119, v127, 2), v121, v127, 3);
      float32x4_t v206 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v116, v130.f32[0]), v117, *(float32x2_t *)v130.f32, 1), v119, v130, 2), v121, v130, 3);
      if (v17)
      {
        uint64_t v58 = v140;
        *(void *)&long long v179 = 0xD000000000000015;
        *((void *)&v179 + 1) = 0x80000001B6F4D940;
        uint64_t v180 = 0;
        uint64_t v181 = 0;
        *(void *)long long v182 = MEMORY[0x1E4FBC860];
        *(_OWORD *)&uint64_t v182[8] = xmmword_1B6EB4050;
        uint64_t v183 = 0;
        *(void *)&long long v184 = 0;
        *((void *)&v184 + 1) = MEMORY[0x1E4FBC860];
        long long v185 = 0uLL;
        long long v186 = 0uLL;
        long long v187 = 0uLL;
        long long v188 = 0uLL;
        long long v189 = 0uLL;
        long long v190 = 0uLL;
        v221[4] = v184;
        memset(&v221[5], 0, 96);
        _OWORD v221[2] = *(_OWORD *)v182;
        v221[3] = 0xEA00000000006761;
        v221[0] = v179;
        v221[1] = 0u;
        v222[0] = 0;
        v222[1] = 0;
        long long v223 = xmmword_1B6E50D30;
        long long v224 = xmmword_1B6E50D30;
        __int16 v225 = 15;
        v226[0] = 0;
        v226[1] = 0;
        v226[2] = 2;
        memset(&v226[3], 0, 24);
        swift_retain();
        sub_1B62D5ED4((uint64_t *)v221, v115, 0, 0, 0, (uint64_t)v222, 2, (uint64_t)v226, (uint64_t)v208, 1, 1);
        sub_1B638A224((uint64_t *)&v179);
        unint64_t v59 = sub_1B638A310((uint64_t)v208, 0);
        unint64_t v61 = v59;
        int v62 = v60;
        if (v59 >= 3)
        {
          unint64_t v63 = swift_unknownObjectRetain();
          sub_1B630B7D8(v63, v62);
          sub_1B638CE7C((uint64_t *)v208);
          swift_release();
          uint64_t ObjectType = swift_getObjectType();
          objc_msgSend(a2, sel_setRenderPipelineState_, v61);
          objc_msgSend(a2, sel_setDepthStencilState_, *(void *)(*(void *)(v140 + 248) + 168));
          sub_1B635FB18(v53, ObjectType);
          sub_1B6CC87D8(2.0);
          if (v114 >= 1 && v133)
          {
            uint64_t v65 = v139[4];
            int v138 = *(unsigned __int8 *)(v113 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            v151[0] = v148;
            v151[1] = v149;
            uint64_t v152 = v150;
            sub_1B632F1C4(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
            uint64_t v66 = 0;
            uint64_t v128 = v65;
            do
            {
              uint64_t v136 = v12;
              uint64_t v131 = v66;
              uint64_t v67 = (unsigned int *)(v132 + 48 * v66);
              uint64_t v68 = *v67;
              uint64_t v69 = v67[1];
              char v70 = (uint64_t *)*((void *)v67 + 2);
              uint64_t v71 = *((void *)v67 + 3);
              uint64_t v73 = *((void *)v67 + 4);
              uint64_t v72 = *((void *)v67 + 5);
              uint64_t v144 = v72;
              if (v138)
              {
                long long v74 = *(os_unfair_lock_s **)(v72 + 376);
                swift_retain_n();
                uint64_t v75 = v74;
                uint64_t v72 = v144;
                os_unfair_lock_lock(v75);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v144 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v65);
              sub_1B62D7DE8((uint64_t)(v139 + 6), (uint64_t)v217, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
              uint64_t v76 = *(void *)(*(void *)(*(void *)(*(void *)(v72 + 40) + 16) + 32) + 16);
              uint64_t v77 = v139[4];
              uint64_t v78 = v76 + 1;
              uint64_t v79 = 48 * (v76 + 1);
              swift_retain();
              v139[6] = ecs_stack_allocator_allocate(v77, v79, 8);
              v139[7] = v78;
              v139[9] = 0;
              v139[10] = 0;
              v139[8] = 0;
              swift_release();
              uint64_t v80 = sub_1B62C9024((uint64_t)&type metadata for DebugInfoWireframePrimitive, (uint64_t)&off_1F0F974E8, v70, v71, v73, (uint64_t)v139);
              uint64_t v81 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v70, v71, v73, (uint64_t)v139);
              uint64_t v83 = v82;
              uint64_t v84 = sub_1B62C9024((uint64_t)&type metadata for DebugInfoColor, (uint64_t)&off_1F0F63878, v70, v71, v73, (uint64_t)v139);
              if (v68 != v69)
              {
                uint64_t v86 = v85;
                if (v85 & 1 | (v84 == 0)) {
                  uint64_t v87 = 0;
                }
                else {
                  uint64_t v87 = v84;
                }
                if (v83 & 1 | (v81 == 0)) {
                  uint64_t v88 = 0;
                }
                else {
                  uint64_t v88 = v81;
                }
                uint64_t v89 = v69 - v68;
                uint64_t v90 = (unsigned int *)(v87 + 4 * v68);
                uint64_t v91 = v80 + 112 * v68;
                uint64_t v92 = (uint64_t *)(v88 + (v68 << 6) + 32);
                while (2)
                {
                  uint64_t v101 = v86;
                  uint64_t v102 = v83;
                  sub_1B6C1E33C((long long *)v91, (uint64_t)v220);
                  uint64_t v103 = *(void *)(v91 + 16);
                  uint64_t v104 = *(void *)(v91 + 32);
                  uint64_t v105 = *(void *)(v91 + 40);
                  uint64_t v106 = *(void *)(v91 + 48);
                  float32x4_t v175 = v203;
                  float32x4_t v176 = v204;
                  float32x4_t v177 = v205;
                  float32x4_t v178 = v206;
                  long long v171 = v199;
                  long long v172 = v200;
                  long long v173 = v201;
                  long long v174 = v202;
                  long long v167 = v195;
                  long long v168 = v196;
                  long long v169 = v197;
                  long long v170 = v198;
                  float32x4_t v163 = v191;
                  long long v164 = v192;
                  long long v165 = v193;
                  long long v166 = v194;
                  sub_1B6C1E33C(v220, (uint64_t)v228);
                  v91 += 112;
                  uint64_t v107 = 72;
                  uint64_t v108 = 72;
                  switch(v233)
                  {
                    case 1:
                      uint64_t v110 = v165 + 3;
                      goto LABEL_123;
                    case 2:
                      uint64_t v110 = v165 + 6;
LABEL_123:
                      uint64_t v83 = v102;
                      uint64_t v86 = v101;
                      if ((uint64_t)v164 < v110) {
                        goto LABEL_135;
                      }
                      uint64_t v111 = *((void *)&v165 + 1) + 6;
                      goto LABEL_134;
                    case 3:
                      goto LABEL_127;
                    case 4:
                      uint64_t v107 = 24;
                      uint64_t v108 = 24;
                      goto LABEL_127;
                    case 5:
                      uint64_t v108 = (uint64_t)(float)(v229 * 24.0);
                      uint64_t v107 = (uint64_t)(float)(*((float *)&v103 + 1) * 24.0);
LABEL_127:
                      uint64_t v109 = 2 * v107;
                      goto LABEL_131;
                    case 6:
                    case 8:
                      sub_1B6C20634((uint64_t)&v163);
                      if (qword_1E9DCC6C8 != -1) {
                        swift_once();
                      }
                      uint64_t v109 = *((void *)off_1E9DD7220 + 2);
                      sub_1B6C205E8((uint64_t)&v163);
                      uint64_t v83 = v102;
                      uint64_t v86 = v101;
                      if ((uint64_t)v164 < (uint64_t)v165 + 8) {
                        goto LABEL_135;
                      }
                      goto LABEL_133;
                    case 7:
                      uint64_t v83 = v102;
                      uint64_t v86 = v101;
                      if ((uint64_t)v164 < (uint64_t)v165 + 48) {
                        goto LABEL_135;
                      }
                      uint64_t v109 = 2 * v104 + 96;
                      goto LABEL_133;
                    case 9:
                      uint64_t v108 = 24 * (v232 + v231);
                      uint64_t v109 = 48 * (v106 + v105);
LABEL_131:
                      uint64_t v83 = v102;
                      uint64_t v86 = v101;
                      goto LABEL_132;
                    case 10:
                      uint64_t v83 = v102;
                      uint64_t v86 = v101;
                      if ((uint64_t)v164 < (uint64_t)v165 + 4) {
                        goto LABEL_135;
                      }
                      uint64_t v111 = *((void *)&v165 + 1) + 4;
                      goto LABEL_134;
                    case 11:
                      uint64_t v83 = v102;
                      uint64_t v86 = v101;
                      if ((uint64_t)v164 < (uint64_t)v165 + 2) {
                        goto LABEL_135;
                      }
                      uint64_t v111 = *((void *)&v165 + 1) + 2;
                      goto LABEL_134;
                    case 12:
                      uint64_t v83 = v102;
                      uint64_t v86 = v101;
                      if ((uint64_t)v164 < (uint64_t)v165 + 12) {
                        goto LABEL_135;
                      }
                      uint64_t v111 = *((void *)&v165 + 1) + 18;
                      goto LABEL_134;
                    default:
                      if ((unint64_t)v230 > 2) {
                        uint64_t v108 = 6;
                      }
                      else {
                        uint64_t v108 = qword_1B6EB47E0[v230];
                      }
                      uint64_t v83 = v102;
                      if ((_BYTE)v104)
                      {
                        uint64_t v86 = v101;
                        if (v104 == 2 || v104 == 1) {
                          uint64_t v109 = 6;
                        }
                        else {
                          uint64_t v109 = 10;
                        }
                      }
                      else
                      {
                        uint64_t v109 = 2;
                        uint64_t v86 = v101;
                      }
LABEL_132:
                      if ((uint64_t)v164 < (uint64_t)v165 + v108) {
                        goto LABEL_135;
                      }
LABEL_133:
                      uint64_t v111 = *((void *)&v165 + 1) + v109;
LABEL_134:
                      if (*((uint64_t *)&v164 + 1) < v111) {
LABEL_135:
                      }
                        sub_1B6C1B3E4(v140, (uint64_t)a2);
                      if (v86)
                      {
                        uint64_t v112 = 0;
                        if ((v83 & 1) == 0) {
                          goto LABEL_112;
                        }
                      }
                      else
                      {
                        uint64_t v112 = *v90;
                        if ((v83 & 1) == 0)
                        {
LABEL_112:
                          uint64_t v93 = *(v92 - 4);
                          uint64_t v94 = *(v92 - 3);
                          uint64_t v95 = *(v92 - 2);
                          uint64_t v96 = *(v92 - 1);
                          uint64_t v97 = *v92;
                          uint64_t v98 = v92[1];
                          uint64_t v99 = v92[2];
                          uint64_t v100 = v92[3];
                          goto LABEL_113;
                        }
                      }
                      uint64_t v93 = 0;
                      uint64_t v94 = 0;
                      uint64_t v95 = 0;
                      uint64_t v96 = 0;
                      uint64_t v97 = 0;
                      uint64_t v98 = 0;
                      uint64_t v99 = 0;
                      uint64_t v100 = 0;
LABEL_113:
                      v218[0] = v93;
                      v218[1] = v94;
                      _OWORD v218[2] = v95;
                      v218[3] = v96;
                      v218[4] = v97;
                      v218[5] = v98;
                      v218[6] = v99;
                      v218[7] = v100;
                      char v219 = v83 & 1;
                      sub_1B6C19534(v112 | ((unint64_t)(v86 & 1) << 32), (uint64_t)v218, &v191);
                      ++v90;
                      v92 += 8;
                      if (--v89) {
                        continue;
                      }
                      goto LABEL_103;
                  }
                }
              }
LABEL_103:
              uint64_t v12 = v136;
              sub_1B6345178(v139, (unsigned __int16 **)v151, (uint64_t)v217);
              sub_1B634507C((char *)v144);
              uint64_t v65 = v128;
              ecs_stack_allocator_pop_snapshot(v128);
              if (v138)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v144 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v144 + 376));
              }
              swift_release();
              uint64_t v66 = v131 + 1;
            }
            while (v131 + 1 != v133);
            sub_1B632F1C4(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            uint64_t v58 = v140;
          }
          sub_1B6C1B3E4(v58, (uint64_t)a2);
          sub_1B62CA064((uint64_t)v146);
          sub_1B632F1C4(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
          swift_unknownObjectRelease();
          float32x4_t v175 = v203;
          float32x4_t v176 = v204;
          float32x4_t v177 = v205;
          float32x4_t v178 = v206;
          long long v171 = v199;
          long long v172 = v200;
          long long v173 = v201;
          long long v174 = v202;
          long long v167 = v195;
          long long v168 = v196;
          long long v169 = v197;
          long long v170 = v198;
          float32x4_t v163 = v191;
          long long v164 = v192;
          long long v165 = v193;
          long long v166 = v194;
          sub_1B6C205E8((uint64_t)&v163);
        }
        else
        {
          sub_1B630B7D8(v59, v60);
          sub_1B638CE7C((uint64_t *)v208);
          swift_release();
          sub_1B62CA064((uint64_t)v146);
          sub_1B632F1C4(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        }
        *(unsigned char *)(*(void *)(v58 + 288) + 136) = 0;
      }
      else
      {
        sub_1B62CA064((uint64_t)v146);
        sub_1B632F1C4(v207, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        *(unsigned char *)(*(void *)(v140 + 288) + 136) = 0;
      }
    }
    else
    {
      sub_1B62CA064((uint64_t)v146);
      *(unsigned char *)(*(void *)(v3 + 288) + 136) = 0;
    }
    return swift_release();
  }

  return swift_release();
}

uint64_t sub_1B632E098(uint64_t result)
{
  uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v2) {
    return result;
  }
  uint64_t v3 = v1;
  uint64_t v4 = result;
  uint64_t v5 = 0;
  uint64_t v113 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
  if (*(unsigned char *)(result + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare) != 1)
  {
    long long v17 = *(_OWORD *)(v1 + 32);
    v149[0] = *(_OWORD *)(v1 + 16);
    v149[1] = v17;
    uint64_t v150 = *(void *)(v1 + 48);
    swift_retain();
    sub_1B62C9DA8(v4, (uint64_t)v149, 0x200000000, v151);
    sub_1B62CA210((uint64_t)v151, (uint64_t)&v173, (unint64_t *)&qword_1EB97DC50);
    if (!v173)
    {
      LODWORD(v8) = 0;
      int v19 = 0;
      goto LABEL_37;
    }
    LODWORD(v8) = 0;
    int v18 = *(unsigned __int8 *)(v2 + 322);
    int v19 = v18 ^ 1;
    if ((v18 & 1) == 0 && v183 >= 1)
    {
      uint64_t v123 = v180;
      if (v180)
      {
        uint64_t v109 = v1;
        uint64_t v112 = v4;
        uint64_t v107 = v2;
        uint64_t v121 = v179;
        uint64_t v20 = v182;
        uint64_t v21 = v182[4];
        int v22 = *(unsigned __int8 *)(v181 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v142 = v173;
        int v143 = v174;
        char v144 = v175;
        uint64_t v145 = v176;
        char v146 = v177;
        uint64_t v147 = v178;
        uint64_t v115 = (uint64_t)(v182 + 6);
        sub_1B632F1C4(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
        sub_1B632F1C4(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
        LODWORD(v8) = 0;
        uint64_t v23 = 0;
        int v117 = v22;
        uint64_t v119 = v21;
        while (1)
        {
          float v24 = (unsigned int *)(v121 + 48 * v23);
          uint64_t v130 = *v24;
          uint64_t v133 = v5;
          uint64_t v126 = v24[1];
          uint64_t v26 = (uint64_t *)*((void *)v24 + 2);
          uint64_t v25 = *((void *)v24 + 3);
          uint64_t v27 = *((void *)v24 + 4);
          uint64_t v28 = *((void *)v24 + 5);
          if (v22)
          {
            uint64_t v29 = *(os_unfair_lock_s **)(v28 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v29);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v28 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v21);
          sub_1B62CA210(v115, (uint64_t)v148, &qword_1EB97DE20);
          uint64_t v30 = v20[4];
          uint64_t v31 = *(void *)(*(void *)(*(void *)(*(void *)(v28 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v20[6] = ecs_stack_allocator_allocate(v30, 48 * v31, 8);
          v20[7] = v31;
          v20[9] = 0;
          v20[10] = 0;
          v20[8] = 0;
          swift_release();
          uint64_t v32 = (uint64_t *)sub_1B62C9024((uint64_t)&type metadata for DrawCallComponent, (uint64_t)&off_1F0F709E8, v26, v25, v27, (uint64_t)v20);
          if (v26)
          {
            uint64_t v5 = v133;
            int v22 = v117;
            if (v27)
            {
              uint64_t v21 = v119;
              do
              {
                uint64_t v33 = *v32++;
                LODWORD(v8) = v8 | *(unsigned __int8 *)(v33 + 256);
                --v27;
              }
              while (v27);
              goto LABEL_32;
            }
          }
          else
          {
            uint64_t v5 = v133;
            int v22 = v117;
            if (v130 != v126)
            {
              uint64_t v34 = v126 - v130;
              uint64_t v35 = &v32[v130];
              uint64_t v21 = v119;
              do
              {
                uint64_t v36 = *v35++;
                LODWORD(v8) = v8 | *(unsigned __int8 *)(v36 + 256);
                --v34;
              }
              while (v34);
              goto LABEL_32;
            }
          }
          uint64_t v21 = v119;
LABEL_32:
          sub_1B6345178(v20, &v142, (uint64_t)v148);
          sub_1B634507C((char *)v28);
          ecs_stack_allocator_pop_snapshot(v21);
          if (v22)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 376));
          }
          swift_release();
          if (++v23 == v123)
          {
            sub_1B632F1C4(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            sub_1B632F1C4(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            int v19 = 1;
            uint64_t v2 = v107;
            uint64_t v3 = v109;
            uint64_t v4 = v112;
            goto LABEL_37;
          }
        }
      }
      LODWORD(v8) = 0;
      int v19 = 1;
    }
LABEL_37:
    long long v37 = *(_OWORD *)(v3 + 112);
    v140[0] = *(_OWORD *)(v3 + 96);
    v140[1] = v37;
    uint64_t v141 = *(void *)(v3 + 128);
    sub_1B62C9DA8(v4, (uint64_t)v140, 0x200000000, v159);
    sub_1B62CA210((uint64_t)v159, (uint64_t)v172, (unint64_t *)&qword_1EB97DC50);
    BOOL v14 = v172[0] != 0;
    if (v172[0]) {
      sub_1B632F1C4(v159, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    long long v193 = *(_OWORD *)(v3 + 56);
    long long v194 = *(_OWORD *)(v3 + 72);
    uint64_t v195 = *(void *)(v3 + 88);
    sub_1B62C9DA8(v4, (uint64_t)&v193, 0x200000000, v160);
    sub_1B62CA210((uint64_t)v160, (uint64_t)&v161, (unint64_t *)&qword_1EB97DC50);
    if (!v161 || (int v38 = *(unsigned __int8 *)(v2 + 323), (v38 & 1) != 0))
    {
      sub_1B632F1C4(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B632F1C4(v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      unsigned int v15 = 0;
      char v16 = 0;
      int v39 = v19;
      goto LABEL_42;
    }
    if (v171 <= 0)
    {
      sub_1B632F1C4(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B632F1C4(v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      int v39 = 0;
      unsigned int v15 = 1;
      char v16 = 0;
      if (v19)
      {
        int v129 = 1;
        char v16 = 0;
        int v132 = 1;
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v122 = v168;
      if (v168)
      {
        int v105 = *(unsigned __int8 *)(v2 + 323);
        char v106 = v19;
        BOOL v111 = v14;
        uint64_t v108 = v2;
        uint64_t v120 = v167;
        unint64_t v63 = v170;
        uint64_t v64 = v170[4];
        char v65 = *(unsigned char *)(v169 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        *(void *)&long long v188 = v161;
        DWORD2(v188) = v162;
        BYTE12(v188) = v163;
        *(void *)&long long v189 = v164;
        BYTE8(v189) = v165;
        uint64_t v190 = v166;
        uint64_t v114 = (uint64_t)(v170 + 6);
        sub_1B632F1C4(v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
        sub_1B632F1C4(v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
        char v66 = 0;
        uint64_t v67 = 0;
        char v116 = v65;
        uint64_t v118 = v64;
        while (1)
        {
          uint64_t v68 = v5;
          uint64_t v69 = (unsigned int *)(v120 + 48 * v67);
          uint64_t v71 = *v69;
          uint64_t v70 = v69[1];
          uint64_t v72 = *((void *)v69 + 4);
          float32x4_t v125 = (uint64_t *)*((void *)v69 + 2);
          uint64_t v128 = *((void *)v69 + 3);
          uint64_t v73 = *((void *)v69 + 5);
          uint64_t v131 = v67;
          uint64_t v134 = v68;
          if (v65)
          {
            long long v74 = *(os_unfair_lock_s **)(v73 + 376);
            swift_retain();
            os_unfair_lock_lock(v74);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v73 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v64);
          sub_1B62CA210(v114, (uint64_t)v191, &qword_1EB97DE20);
          uint64_t v75 = v63[4];
          uint64_t v76 = *(void *)(*(void *)(*(void *)(*(void *)(v73 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v63[6] = ecs_stack_allocator_allocate(v75, 48 * v76, 8);
          v63[7] = v76;
          v63[9] = 0;
          v63[10] = 0;
          v63[8] = 0;
          swift_release();
          uint64_t v77 = sub_1B62C9024((uint64_t)&type metadata for DrawCallComponent, (uint64_t)&off_1F0F709E8, v125, v128, v72, (uint64_t)v63);
          if (v125)
          {
            uint64_t v79 = v131;
            uint64_t v78 = v134;
            if (v72)
            {
              uint64_t v80 = 0;
              uint64_t v64 = v118;
              do
              {
                uint64_t v81 = *(void *)(v77 + 8 * v80);
                if ((*(_WORD *)(v81 + 370) & 4) != 0) {
                  char v66 = 1;
                }
                uint64_t v82 = *(void *)(v81 + 304);
                uint64_t v83 = *(void *)(v82 + 16);
                if (v83)
                {
                  uint64_t v84 = (unsigned char *)(v82 + 32);
                  while (v84[24] != 3 || *v84 != 2)
                  {
                    v84 += 40;
                    if (!--v83) {
                      goto LABEL_64;
                    }
                  }
                  char v66 = 1;
                }
LABEL_64:
                LODWORD(v8) = v8 | *(unsigned __int8 *)(v81 + 256);
                ++v80;
              }
              while (v80 != v72);
              goto LABEL_77;
            }
          }
          else
          {
            uint64_t v79 = v131;
            uint64_t v78 = v134;
            if (v71 != v70)
            {
              uint64_t v64 = v118;
              do
              {
                uint64_t v86 = *(void *)(v77 + 8 * v71);
                if ((*(_WORD *)(v86 + 370) & 4) != 0) {
                  char v66 = 1;
                }
                uint64_t v87 = *(void *)(v86 + 304);
                uint64_t v88 = *(void *)(v87 + 16);
                if (v88)
                {
                  uint64_t v89 = (unsigned char *)(v87 + 32);
                  while (v89[24] != 3 || *v89 != 2)
                  {
                    v89 += 40;
                    if (!--v88) {
                      goto LABEL_81;
                    }
                  }
                  char v66 = 1;
                }
LABEL_81:
                ++v71;
                LODWORD(v8) = v8 | *(unsigned __int8 *)(v86 + 256);
              }
              while (v71 != v70);
              goto LABEL_77;
            }
          }
          uint64_t v64 = v118;
LABEL_77:
          uint64_t v5 = v78;
          sub_1B6345178(v63, (unsigned __int16 **)&v188, (uint64_t)v191);
          sub_1B634507C((char *)v73);
          ecs_stack_allocator_pop_snapshot(v64);
          char v65 = v116;
          if (v116)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v73 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v73 + 376));
          }
          swift_release();
          uint64_t v67 = v79 + 1;
          if (v67 == v122)
          {
            sub_1B632F1C4(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            sub_1B632F1C4(v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            char v16 = v66 & 1;
            uint64_t v2 = v108;
            BOOL v14 = v111;
            int v38 = v105;
            LOBYTE(v19) = v106;
            goto LABEL_121;
          }
        }
      }
      sub_1B632F1C4(v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
      sub_1B632F1C4(v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
      sub_1B632F1C4(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B632F1C4(v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      char v16 = 0;
LABEL_121:
      sub_1B632F1C4(v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B632F1C4(v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      if (v19)
      {
        int v39 = 1;
        if (!v38)
        {
          int v132 = 1;
          unsigned int v15 = 1;
          int v129 = 1;
          goto LABEL_43;
        }
        unsigned int v15 = 0;
      }
      else
      {
        int v39 = 0;
        unsigned int v15 = v38 ^ 1;
      }
    }
LABEL_42:
    int v129 = v15;
    unsigned int v15 = v39;
    int v132 = 0;
    goto LABEL_43;
  }
  long long v193 = *(_OWORD *)(v1 + 136);
  long long v194 = *(_OWORD *)(v1 + 152);
  uint64_t v195 = *(void *)(v1 + 168);
  swift_retain();
  sub_1B62C9DA8(v4, (uint64_t)&v193, 0x200000000, v140);
  sub_1B62CA210((uint64_t)v140, (uint64_t)&v173, (unint64_t *)&qword_1EB97DC50);
  unsigned __int8 v6 = v173;
  if (v173) {
    sub_1B632F1C4(v140, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  long long v7 = *(_OWORD *)(v1 + 192);
  v191[0] = *(_OWORD *)(v1 + 176);
  v191[1] = v7;
  uint64_t v192 = *(void *)(v1 + 208);
  sub_1B62C9DA8(v4, (uint64_t)v191, 0x200000000, &v142);
  sub_1B62CA210((uint64_t)&v142, (uint64_t)v172, (unint64_t *)&qword_1EB97DC50);
  uint64_t v8 = v172[0];
  if (v172[0]) {
    sub_1B632F1C4(&v142, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  long long v188 = *(_OWORD *)(v1 + 216);
  long long v189 = *(_OWORD *)(v1 + 232);
  uint64_t v190 = *(void *)(v1 + 248);
  sub_1B62C9DA8(v4, (uint64_t)&v188, 0x200000000, v148);
  sub_1B62CA210((uint64_t)v148, (uint64_t)&v161, (unint64_t *)&qword_1EB97DC50);
  uint64_t v9 = v161;
  if (v161) {
    sub_1B632F1C4(v148, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  long long v10 = *(_OWORD *)(v1 + 272);
  v186[0] = *(_OWORD *)(v1 + 256);
  v186[1] = v10;
  uint64_t v187 = *(void *)(v1 + 288);
  sub_1B62C9DA8(v4, (uint64_t)v186, 0x200000000, v149);
  sub_1B62CA210((uint64_t)v149, (uint64_t)v160, (unint64_t *)&qword_1EB97DC50);
  uint64_t v11 = v160[0];
  if (v160[0]) {
    sub_1B632F1C4(v149, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v185 = *(void *)(v1 + 328);
  long long v12 = *(_OWORD *)(v1 + 312);
  v184[0] = *(_OWORD *)(v1 + 296);
  v184[1] = v12;
  sub_1B62C9DA8(v4, (uint64_t)v184, 0x200000000, v151);
  sub_1B62CA210((uint64_t)v151, (uint64_t)v159, (unint64_t *)&qword_1EB97DC50);
  uint64_t v13 = v159[0];
  if (v159[0]) {
    sub_1B632F1C4(v151, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  BOOL v14 = 0;
  LOBYTE(v8) = (v8 | (unint64_t)v6 | v9 | v11 | v13) != 0;
  unsigned int v15 = 1;
  int v129 = 1;
  char v16 = 1;
  int v132 = 1;
LABEL_43:
  uint64_t v40 = v2 + 624;
  sub_1B62CA210(v2 + 624, (uint64_t)v138, (unint64_t *)&unk_1EB9852B0);
  sub_1B62CA210((uint64_t)v138, (uint64_t)v139, (unint64_t *)&unk_1EB9852B0);
  if (sub_1B6388C10(v139) != 1)
  {
    unsigned int v127 = v15;
    sub_1B62CA210((uint64_t)v138, (uint64_t)v136, (unint64_t *)&unk_1EB9852B0);
    uint64_t v41 = v136[1];
    double v42 = *(double *)&v136[2];
    uint64_t v43 = v136[3];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v41 + 16))(v43, v113, ObjectType, v41, v42);
    if (v45)
    {
      uint64_t v46 = v45;
      BOOL v110 = v14;
      char v124 = v16;
      uint64_t v47 = v2;
      uint64_t v48 = *(void *)(v2 + 272);
      sub_1B6383E40((uint64_t)v152);
      uint64_t v49 = *(void *)(*(void *)(v48 + 16) + 264);
      uint64_t v50 = v152[0];
      uint64_t v51 = v152[1];
      swift_unknownObjectRetain_n();
      swift_retain();
      swift_retain();
      sub_1B62C7C20((uint64_t)v152);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v135[0] = *(void *)(v49 + 40);
      *(void *)(v49 + 40) = 0x8000000000000000;
      sub_1B6331384(v46, v50, v51, isUniquelyReferenced_nonNull_native);
      *(void *)(v49 + 40) = v135[0];
      swift_bridgeObjectRelease();
      sub_1B62C7BF4((uint64_t)v152);
      sub_1B62C7BF4((uint64_t)v152);
      uint64_t v2 = v47;
      char v16 = v124;
      BOOL v14 = v110;
      swift_release();
      swift_unknownObjectRelease_n();
      swift_release();
    }
    unsigned int v15 = v127;
  }
  sub_1B62CA210(v40, (uint64_t)v135, (unint64_t *)&unk_1EB9852B0);
  sub_1B62CA210((uint64_t)v135, (uint64_t)v136, (unint64_t *)&unk_1EB9852B0);
  if (sub_1B6388C10(v136) == 1)
  {
    unint64_t result = sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  int v53 = v137;
  uint64_t v54 = swift_retain();
  uint64_t v55 = sub_1B636E574(v54);
  char v57 = v56;
  swift_release();
  if ((v57 & 1) != 0
    || (v16 |= sub_1B62EC0CC((uint64_t)&type metadata for CameraDepthOfField, (uint64_t)&off_1F0F75998, v55),
        sub_1B635A374(v55, (uint64_t)v153),
        sub_1B62CA210((uint64_t)v153, (uint64_t)v156, (unint64_t *)&unk_1EB97E938),
        (v158 & 1) != 0))
  {
    uint64_t v58 = 0x3F80000000000000;
  }
  else
  {
    unsigned int v59 = v157;
    swift_retain();
    unint64_t v61 = sub_1B6383540(v155, 4);
    if (*(void *)(v60 + 8))
    {
      uint64_t v62 = v59;
      *(void *)(v60 + 32) = v59;
      *(unsigned char *)(v60 + 40) = 1;
      ((void (*)(void *, void))v61)(v155, 0);
      swift_release();
    }
    else
    {
      ((void (*)(void *, void))v61)(v155, 0);
      swift_release();
      uint64_t v62 = v59;
    }
    uint64_t v58 = v62 << 32;
  }
  uint64_t v91 = *(void **)(v2 + 272);
  uint64_t v92 = 0x100000000;
  if (!v132) {
    uint64_t v92 = 0;
  }
  uint64_t v93 = 0x10000000000;
  if (!v14) {
    uint64_t v93 = 0;
  }
  uint64_t v94 = 0x1000000000000;
  if (!v53) {
    uint64_t v94 = 0;
  }
  uint64_t v95 = 256;
  if (!v129) {
    uint64_t v95 = 0;
  }
  uint64_t v96 = 0x100000000000000;
  if (!v129) {
    uint64_t v96 = 0;
  }
  uint64_t v97 = v95 | v15 | v92 | v93 | v96 | v94;
  uint64_t v98 = 0x10000;
  if ((v8 & 1) == 0) {
    uint64_t v98 = 0;
  }
  v91[3] = v97;
  v91[4] = v58 | v98 | v16 & 1;
  v91[5] = 0x3F8000003F800000;
  if ((v15 & (v129 | v132)) == 1) {
    return swift_release();
  }
  sub_1B6383E40((uint64_t)v154);
  uint64_t v99 = *(void *)(*(void *)(*(void *)(v91[2] + 264) + 40) + 16);
  swift_retain();
  swift_retain();
  if (!v99)
  {
LABEL_113:
    swift_release();
    sub_1B62C7BF4((uint64_t)v154);
    swift_release();
    return swift_release();
  }
  uint64_t v100 = v154[1];
  uint64_t v101 = v154[0];
  swift_bridgeObjectRetain();
  sub_1B62B2CE0(v101, v100);
  if ((v102 & 1) == 0)
  {
    sub_1B62C7BF4((uint64_t)v154);
    goto LABEL_113;
  }
  swift_unknownObjectRetain();
  sub_1B62C7BF4((uint64_t)v154);
  swift_release();
  sub_1B62C7BF4((uint64_t)v154);
  swift_release();
  uint64_t v103 = swift_unknownObjectRetain();
  uint64_t v104 = sub_1B633483C(v103, 2, 0, 2, 0, 0);
  swift_unknownObjectRelease();
  sub_1B6388754(0x656C436874706544, 0xEA00000000007261, v104);
  if (sub_1B6388ED8(0))
  {
    swift_unknownObjectRetain();
    sub_1B638963C((uint64_t)v155);
    sub_1B6388C28();

    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {

    swift_release();
  }
  return swift_unknownObjectRelease();
}

uint64_t *sub_1B632F170(uint64_t *a1)
{
  return a1;
}

void *sub_1B632F1C4(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

void *sub_1B632F220(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1B632F27C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B632F2C8(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void sub_1B632F318(uint64_t a1)
{
  v172[6] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_1B636E574(v2);
  char v5 = v4;
  swift_release();
  if (v5) {
    return;
  }
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v6) {
    return;
  }
  uint64_t v7 = *(void *)(v6 + 272);
  uint64_t v8 = *(void *)(v7 + 24);
  if (v8 == 2) {
    return;
  }
  swift_retain();
  swift_retain();
  uint64_t v9 = sub_1B63340E8(a1);
  if (v9)
  {
    id v121 = (id)v9;
    uint64_t v10 = sub_1B6E328F8();
    sub_1B6388754(v10, v11, v121);
    uint64_t v12 = sub_1B6388ED8(0);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    if (v12)
    {
      float32x4_t v133 = 0uLL;
      uint64_t v126 = 0;
      long long v127 = 0u;
      int v128 = 0;
      float32x4_t v129 = 0u;
      float32x4_t v130 = 0u;
      float32x4_t v131 = 0u;
      memset(v132, 0, 28);
      *(_OWORD *)uint64_t v119 = 0u;
      uint64_t v105 = sub_1B6359F34(v3);
      char v110 = v13;
      sub_1B63304A4(v3, (uint64_t)&v152);
      float v101 = *(float *)&v152;
      int v108 = v158;
      unint64_t v106 = sub_1B633036C(v3);
      uint64_t v88 = sub_1B635A35C(v3);
      uint64_t v89 = v14;
      char v115 = v15;
      sub_1B635A014(v3, (uint64_t)&v152);
      float v90 = *(float *)&v153;
      uint64_t v91 = v155;
      unsigned int v95 = v156;
      uint64_t v96 = v154;
      uint64_t v92 = v158;
      float v93 = v159[0];
      uint64_t v97 = v157;
      uint64_t v98 = v160;
      uint64_t v94 = v161;
      uint64_t v99 = v162;
      uint64_t v100 = v152;
      unsigned int v16 = v163;
      int v116 = v164;
      unsigned __int8 v104 = sub_1B635A1A8(v3);
      long long v17 = *(void **)(v6 + 392);
      if (v17)
      {
        id v18 = v17;
        sub_1B638963C((uint64_t)v122);
        *(_OWORD *)int v117 = v122[1];
        *(_OWORD *)uint64_t v119 = v122[0];
        long long v112 = v122[2];
        long long v102 = v122[3];
        long long v86 = v122[4];
        uint64_t v19 = v123;

        long long v20 = v86;
        long long v21 = v102;
        long long v22 = v112;
        long long v23 = *(_OWORD *)v117;
      }
      else
      {
        uint64_t v19 = 0;
        long long v23 = 0uLL;
        long long v22 = 0uLL;
        long long v21 = 0uLL;
        long long v20 = 0uLL;
      }
      v124[0] = *(_OWORD *)v119;
      v124[1] = v23;
      _OWORD v124[2] = v22;
      v124[3] = v21;
      v124[4] = v20;
      uint64_t v125 = v19;
      uint64_t v103 = v6 + 624;
      sub_1B6388B3C(v6 + 624, (uint64_t)v150);
      sub_1B6388B3C((uint64_t)v150, (uint64_t)v151);
      if (sub_1B6388C10(v151) == 1) {
        goto LABEL_75;
      }
      uint64_t v24 = v151[1];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 104);
      swift_unknownObjectRetain();
      uint64_t v27 = v26(ObjectType, v24);
      swift_unknownObjectRelease();
      uint64_t v118 = (void *)v12;
      if (v27 == 1)
      {
        uint64_t v34 = 5;
      }
      else
      {
        sub_1B6388B3C(v103, (uint64_t)v169);
        sub_1B6388B3C((uint64_t)v169, (uint64_t)&v152);
        if (sub_1B6388C10(&v152) == 1) {
          goto LABEL_75;
        }
        uint64_t v28 = v153;
        uint64_t v29 = swift_getObjectType();
        uint64_t v30 = *(double (**)(uint64_t, uint64_t))(v28 + 112);
        swift_unknownObjectRetain();
        double v113 = v30(v29, v28);
        float64_t v85 = v32;
        float64_t v87 = v31;
        float64_t v84 = v33;
        swift_unknownObjectRelease();
        uint64_t v34 = 0;
        v35.f64[0] = v85;
        v35.f64[1] = v84;
        v36.f64[0] = v113;
        v36.f64[1] = v87;
        float32x4_t v133 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v36), v35);
      }
      uint64_t v37 = 0;
      unint64_t v114 = v8 & 0x10000000000;
      LODWORD(v38) = (v110 & 1) == 0;
      float v39 = *(float *)&v106;
      BOOL v41 = *(float *)&v106 > 0.0 && (v106 & 0xFF00000000) != 0x300000000;
      BOOL v111 = v41;
      if (*((float *)&v105 + 1) > 0.0) {
        uint64_t v38 = v38;
      }
      else {
        uint64_t v38 = 0;
      }
      uint64_t v107 = v38;
      BOOL v43 = v101 > 0.0 && v108 != 2;
      BOOL v109 = v43;
      if ((unint64_t)v119[0] - 71 <= 0x2C && ((1 << (LOBYTE(v119[0]) - 71)) & 0x100000000401) != 0
        || v119[0] == (id)553)
      {
        unsigned __int8 v44 = v104;
      }
      else
      {
        unsigned __int8 v44 = v104;
        if (v119[0] != (id)555) {
          uint64_t v37 = 1;
        }
      }
      uint64_t v45 = *(unsigned __int8 *)(v6 + 600);
      *(void *)&long long v139 = 0xD000000000000010;
      *((void *)&v139 + 1) = 0x80000001B6F396F0;
      BOOL v46 = v27 != 1;
      long long v140 = 0uLL;
      *(_OWORD *)&v141[8] = xmmword_1B6E8B4F0;
      if (v44 == 4) {
        uint64_t v47 = 0xFFFFFFFFLL;
      }
      else {
        uint64_t v47 = v44;
      }
      *(void *)uint64_t v141 = MEMORY[0x1E4FBC860];
      uint64_t v142 = 0;
      *(void *)&long long v143 = 0;
      *((void *)&v143 + 1) = MEMORY[0x1E4FBC860];
      long long v144 = 0u;
      long long v145 = 0u;
      long long v146 = 0u;
      long long v147 = 0u;
      long long v148 = 0u;
      long long v149 = 0u;
      v169[2] = *(_OWORD *)v141;
      v169[1] = v140;
      v169[0] = v139;
      memset(&v169[5], 0, 96);
      v169[4] = v143;
      v169[3] = *(unint64_t *)&v141[16];
      sub_1B62D853C(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1B6E8B500;
      *(_OWORD *)(v48 + 32) = xmmword_1B6E8B510;
      *(unsigned char *)(v48 + 48) = 0;
      *(void *)(v48 + 64) = v47;
      *(_OWORD *)(v48 + 72) = 0u;
      *(_OWORD *)(v48 + 88) = 0u;
      *(_OWORD *)(v48 + 104) = 0u;
      *(void *)(v48 + 120) = 0;
      *(unsigned char *)(v48 + 128) = 14;
      *(_OWORD *)(v48 + 144) = xmmword_1B6E8B520;
      *(unsigned char *)(v48 + 160) = 0;
      *(void *)(v48 + 176) = v107;
      *(_OWORD *)(v48 + 184) = 0u;
      *(_OWORD *)(v48 + 200) = 0u;
      *(_OWORD *)(v48 + 216) = 0u;
      *(void *)(v48 + 232) = 0;
      *(unsigned char *)(v48 + 240) = 13;
      *(_OWORD *)(v48 + 256) = xmmword_1B6E8B530;
      *(unsigned char *)(v48 + 272) = 0;
      *(void *)(v48 + 288) = v111;
      *(void *)(v48 + 344) = 0;
      *(_OWORD *)(v48 + 312) = 0u;
      *(_OWORD *)(v48 + 328) = 0u;
      *(_OWORD *)(v48 + 296) = 0u;
      *(unsigned char *)(v48 + 352) = 13;
      *(_OWORD *)(v48 + 368) = xmmword_1B6E8B540;
      *(unsigned char *)(v48 + 384) = 0;
      *(void *)(v48 + 400) = (v115 & 1) == 0;
      *(_OWORD *)(v48 + 408) = 0u;
      *(_OWORD *)(v48 + 424) = 0u;
      *(_OWORD *)(v48 + 440) = 0u;
      *(void *)(v48 + 456) = 0;
      *(unsigned char *)(v48 + 464) = 13;
      *(_OWORD *)(v48 + 480) = xmmword_1B6E8B550;
      *(unsigned char *)(v48 + 496) = 0;
      *(void *)(v48 + 512) = v116 ^ 1u;
      *(void *)(v48 + 568) = 0;
      *(_OWORD *)(v48 + 536) = 0u;
      *(_OWORD *)(v48 + 552) = 0u;
      *(_OWORD *)(v48 + 520) = 0u;
      *(unsigned char *)(v48 + 576) = 13;
      *(_OWORD *)(v48 + 592) = xmmword_1B6E8B560;
      *(unsigned char *)(v48 + 608) = 0;
      *(void *)(v48 + 624) = v109;
      *(_OWORD *)(v48 + 632) = 0u;
      *(_OWORD *)(v48 + 648) = 0u;
      *(_OWORD *)(v48 + 664) = 0u;
      *(void *)(v48 + 680) = 0;
      *(unsigned char *)(v48 + 688) = 13;
      *(_OWORD *)(v48 + 704) = xmmword_1B6E8B570;
      *(unsigned char *)(v48 + 720) = 0;
      *(void *)(v48 + 736) = v114 >> 40;
      *(_OWORD *)(v48 + 744) = 0u;
      *(_OWORD *)(v48 + 760) = 0u;
      *(_OWORD *)(v48 + 776) = 0u;
      *(void *)(v48 + 792) = 0;
      *(unsigned char *)(v48 + 800) = 13;
      *(_OWORD *)(v48 + 816) = xmmword_1B6E8B580;
      *(unsigned char *)(v48 + 832) = 0;
      *(_OWORD *)(v48 + 880) = 0u;
      *(_OWORD *)(v48 + 896) = 0u;
      *(_OWORD *)(v48 + 848) = 0u;
      *(_OWORD *)(v48 + 864) = 0u;
      *(unsigned char *)(v48 + 912) = 13;
      *(_OWORD *)(v48 + 928) = xmmword_1B6E8B590;
      *(unsigned char *)(v48 + 944) = 0;
      *(void *)(v48 + 960) = v37;
      *(void *)(v48 + 1016) = 0;
      *(_OWORD *)(v48 + 984) = 0u;
      *(_OWORD *)(v48 + 1000) = 0u;
      *(_OWORD *)(v48 + 968) = 0u;
      *(unsigned char *)(v48 + 1024) = 13;
      *(_OWORD *)(v48 + 1040) = xmmword_1B6E8B5A0;
      *(unsigned char *)(v48 + 1056) = 0;
      *(void *)(v48 + 1072) = v46;
      *(void *)(v48 + 1128) = 0;
      *(_OWORD *)(v48 + 1096) = 0u;
      *(_OWORD *)(v48 + 1112) = 0u;
      *(_OWORD *)(v48 + 1080) = 0u;
      *(unsigned char *)(v48 + 1136) = 13;
      *(_OWORD *)(v48 + 1152) = xmmword_1B6E8B5B0;
      *(unsigned char *)(v48 + 1168) = 0;
      *(void *)(v48 + 1184) = v45;
      *(void *)(v48 + 1240) = 0;
      *(_OWORD *)(v48 + 1208) = 0u;
      *(_OWORD *)(v48 + 1224) = 0u;
      *(_OWORD *)(v48 + 1192) = 0u;
      *(unsigned char *)(v48 + 1248) = 13;
      v170[0] = 0;
      v170[1] = 0;
      v170[2] = 1;
      v170[3] = v34;
      v170[4] = 1;
      v170[5] = v34;
      __int16 v171 = 15;
      v172[0] = 0;
      v172[1] = 0;
      v172[2] = 2;
      memset(&v172[3], 0, 24);
      sub_1B62D5ED4((uint64_t *)v169, v124, 0, 0, v48, (uint64_t)v170, 3, (uint64_t)v172, (uint64_t)&v152, 1, 1);
      sub_1B638A224((uint64_t *)&v139);
      swift_retain();
      unint64_t v49 = sub_1B638A310((uint64_t)&v152, 0);
      unint64_t v51 = v49;
      uint64_t v52 = v50;
      if (v49 < 3)
      {
        sub_1B630B7D8(v49, v50);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
        sub_1B638CE7C(&v152);
        return;
      }
      unint64_t v53 = swift_unknownObjectRetain();
      sub_1B630B7D8(v53, v52);
      swift_release();
      swift_getObjectType();
      objc_msgSend(v118, sel_setRenderPipelineState_, v51);
      uint64_t v120 = sub_1B6330614();
      RGTextureDescriptor.init()((uint64_t)v134);
      sub_1B6388B3C(v103, (uint64_t)v137);
      sub_1B6388B3C((uint64_t)v137, (uint64_t)v138);
      if (sub_1B6388C10(v138) != 1)
      {
        uint64_t v54 = v138[1];
        uint64_t v55 = swift_getObjectType();
        char v56 = *(double (**)(uint64_t, uint64_t))(v54 + 72);
        swift_unknownObjectRetain();
        double v57 = v56(v55, v54);
        swift_unknownObjectRelease();
        sub_1B6388B3C(v103, (uint64_t)v135);
        sub_1B6388B3C((uint64_t)v135, (uint64_t)v136);
        if (sub_1B6388C10(v136) != 1)
        {
          uint64_t v58 = v136[1];
          uint64_t v59 = swift_getObjectType();
          uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v58 + 72);
          swift_unknownObjectRetain();
          v60(v59, v58);
          double v62 = v61;
          swift_unknownObjectRelease();
          if ((v107 & 1) == 0)
          {
            uint64_t v69 = 0;
            goto LABEL_57;
          }
          sub_1B6383E40((uint64_t)v165);
          uint64_t v63 = *(void *)(*(void *)(*(void *)(v7 + 16) + 264) + 40);
          uint64_t v64 = *(void *)(v63 + 16);
          swift_retain();
          if (v64)
          {
            uint64_t v65 = v165[1];
            uint64_t v66 = v165[0];
            swift_bridgeObjectRetain();
            uint64_t v67 = sub_1B62B2CE0(v66, v65);
            if (v68)
            {
              uint64_t v69 = *(void *)(*(void *)(v63 + 56) + 8 * v67);
              swift_unknownObjectRetain();
              sub_1B62C7BF4((uint64_t)v165);
              swift_release();
              sub_1B62C7BF4((uint64_t)v165);
LABEL_56:
              uint64_t v126 = v105;
LABEL_57:
              if (v109)
              {
                sub_1B6383E40((uint64_t)v166);
                uint64_t v70 = sub_1B6330D9C((uint64_t)v166, 1, 0, 2);
                sub_1B62C7BF4((uint64_t)v166);
              }
              else
              {
                uint64_t v70 = 0;
              }
              if (v111)
              {
                sub_1B6383E40((uint64_t)v167);
                uint64_t v71 = sub_1B6330D9C((uint64_t)v167, 1, 0, 2);
                sub_1B62C7BF4((uint64_t)v167);
                *((float *)&v132[1] + 2) = (float)(v39 * 0.01) * (float)(uint64_t)objc_msgSend(v120, sel_height);
              }
              else
              {
                uint64_t v71 = 0;
              }
              if (v115)
              {
                if ((v116 & 1) == 0)
                {
LABEL_65:
                  v73.i64[0] = v96;
                  v73.i64[1] = v91;
                  v74.i32[1] = HIDWORD(v92);
                  v75.i64[0] = v97;
                  v75.i64[1] = v92;
                  v76.i64[0] = v98;
                  v76.i64[1] = v94;
                  float v77 = 0.31271 - (float)(*((float *)&v100 + 1) * 0.1);
                  float v78 = (float)(v90 * 0.1)
                      + (float)((float)((float)(v77 * 2.87) + (float)(v77 * (float)(v77 * -3.0))) + -0.275);
                  int32x2_t v79 = (int32x2_t)vmul_f32((float32x2_t)__PAIR64__(HIDWORD(v96), v91), (float32x2_t)0x3F3717593D93DD98);
                  *(float *)v79.i32 = *(float *)v79.i32
                                    + (float)((float)(*(float *)&v96 * 0.2126) + *(float *)&v79.i32[1]);
                  float32x4_t v80 = vsubq_f32(vaddq_f32((float32x4_t)vdupq_n_s32(v95), v73), (float32x4_t)vdupq_lane_s32(v79, 0));
                  float32x4_t v129 = vdivq_f32((float32x4_t)xmmword_1B6E51BB0, vmlaq_n_f32(vaddq_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E51B80, v77 / v78), (float32x4_t)xmmword_1B6E51B90), (float32x4_t)xmmword_1B6E51BA0, (float)((float)(1.0 - v77) - v78) / v78));
                  float32x4_t v130 = v80;
                  v80.f32[0] = v93 + 1.0;
                  int32x2_t v81 = (int32x2_t)vmul_f32((float32x2_t)__PAIR64__(HIDWORD(v97), v92), (float32x2_t)0x3F3717593D93DD98);
                  *(float *)v81.i32 = *(float *)v81.i32
                                    + (float)((float)(*(float *)&v97 * 0.2126) + *(float *)&v81.i32[1]);
                  *(float *)v74.i32 = *(float *)&v99 + 1.0;
                  int32x2_t v82 = (int32x2_t)vmul_f32((float32x2_t)__PAIR64__(HIDWORD(v98), v94), (float32x2_t)0x3F3717593D93DD98);
                  *(float *)v82.i32 = *(float *)v82.i32
                                    + (float)((float)(*(float *)&v98 * 0.2126) + *(float *)&v82.i32[1]);
                  float32x4_t v131 = vsubq_f32(vaddq_f32(v75, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v80.f32, 0)), (float32x4_t)vdupq_lane_s32(v81, 0));
                  v132[0] = vsubq_f32(vaddq_f32(v76, (float32x4_t)vdupq_lane_s32(v74, 0)), (float32x4_t)vdupq_lane_s32(v82, 0));
                  int v128 = v100;
                  *(void *)&v132[1] = __PAIR64__(v16, HIDWORD(v99));
                  if (v114)
                  {
LABEL_66:
                    sub_1B6383E40((uint64_t)v168);
                    uint64_t v83 = sub_1B6330D9C((uint64_t)v168, 1, 0, 2);
                    sub_1B62C7BF4((uint64_t)v168);
                    goto LABEL_70;
                  }
LABEL_69:
                  uint64_t v83 = 0;
LABEL_70:
                  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_isVFX2) == 1
                    && (uint64_t)objc_msgSend(v120, sel_sampleCount) >= 2)
                  {
                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();
                    sub_1B638CE7C(&v152);
                    swift_release();
                    swift_release();
                    swift_unknownObjectRelease();
                  }
                  else
                  {
                    objc_msgSend(v118, sel_setFragmentTexture_atIndex_, v120, 0);
                    objc_msgSend(v118, sel_setFragmentTexture_atIndex_, v69, 1);
                    objc_msgSend(v118, sel_setFragmentTexture_atIndex_, v70, 2);
                    objc_msgSend(v118, sel_setFragmentTexture_atIndex_, v71, 3);
                    objc_msgSend(v118, sel_setFragmentTexture_atIndex_, v83, 4);
                    objc_msgSend(v118, sel_setFragmentBytes_length_atIndex_, &v126, 128, 0);
                    sub_1B6389C1C(1);
                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();
                    sub_1B638CE7C(&v152);
                    swift_release();
                    swift_release();
                    swift_unknownObjectRelease();
                  }
                  swift_unknownObjectRelease();

                  return;
                }
              }
              else
              {
                float v72 = (float)(unsigned __int16)(uint64_t)v62 / (float)(unsigned __int16)(uint64_t)v57;
                *((float *)&v127 + 1) = v72 + (float)((float)(1.0 - v72) * fminf(fmaxf(*((float *)&v88 + 1), 0.0), 1.0));
                LODWORD(v127) = fminf(fmaxf(*(float *)&v88, 0.0), 1.0);
                DWORD2(v127) = fminf(fmaxf(1.0 - *(float *)&v89, 0.0), 1.0);
                *((float *)&v127 + 3) = *((float *)&v127 + 2) + *((float *)&v89 + 1);
                if ((v116 & 1) == 0) {
                  goto LABEL_65;
                }
              }
              if (v114) {
                goto LABEL_66;
              }
              goto LABEL_69;
            }
            sub_1B62C7BF4((uint64_t)v165);
          }
          swift_release();
          sub_1B62C7BF4((uint64_t)v165);
          uint64_t v69 = 0;
          goto LABEL_56;
        }
      }
LABEL_75:
      sub_1B6E32BE8();
      __break(1u);
      return;
    }
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
  }
}

__n128 RGTextureDescriptor.init()@<Q0>(uint64_t a1@<X8>)
{
  RGTextureDescriptorMakeDefault((uint64_t)&v9);
  __int16 v2 = v10;
  char v3 = v11;
  uint64_t v4 = v15;
  __n128 result = v12;
  long long v6 = v13;
  long long v7 = v14;
  int v8 = v16;
  *(void *)a1 = v9;
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 72) = v8;
  return result;
}

unint64_t sub_1B633036C(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0x300000000;
  }
  unint64_t result = 0x300000000;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B6330434(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_DWORD *)(v5 + 12 * (int)a1), *(_WORD *)(v5 + 12 * (int)a1 + 4), 16, v1);
    }
  }
  return result;
}

unint64_t sub_1B6330434(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0x300000000;
  }
  for (int i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraLensBlur; i += 5)
  {
    if (!--v6) {
      return 0x300000000;
    }
  }
  uint64_t v9 = (unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  return *v9 | ((unint64_t)*((unsigned __int8 *)v9 + 4) << 32);
}

double sub_1B63304A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    uint64_t v5 = (unsigned int *)(v3 + 12 * (int)a1);
    *(void *)&double result = sub_1B6330574(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v5 + 32), *v5 | ((unint64_t)*((unsigned __int16 *)v5 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v5 + 2) << 32), 64, v2, a2).n128_u64[0];
  }
  else
  {
    *(void *)(a2 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    *(unsigned char *)(a2 + 56) = 2;
  }
  return result;
}

__n128 sub_1B6330574@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    long long v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for CameraBloom)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v9 = (unsigned int *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                        + *v7
                        + (a2 << 16 >> 48) * a3);
    __n128 result = *((__n128 *)v9 + 2);
    uint64_t v10 = *((void *)v9 + 6);
    char v11 = *((unsigned char *)v9 + 56);
    *(void *)a5 = *v9;
    *(_OWORD *)(a5 + 8) = *(_OWORD *)(v9 + 2);
    *(void *)(a5 + 24) = 0;
    *(__n128 *)(a5 + 32) = result;
    *(void *)(a5 + 48) = v10;
    *(unsigned char *)(a5 + 56) = v11;
  }
  else
  {
LABEL_5:
    *(void *)(a5 + 48) = 0;
    result.n128_u64[0] = 0;
    *(_OWORD *)(a5 + 16) = 0u;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)a5 = 0u;
    *(unsigned char *)(a5 + 56) = 2;
  }
  return result;
}

void *sub_1B6330614()
{
  uint64_t v1 = v0;
  sub_1B6383E40((uint64_t)v24);
  uint64_t v2 = *(void *)(*(void *)(*(void *)(v0 + 16) + 264) + 40);
  uint64_t v3 = *(void *)(v2 + 16);
  swift_retain();
  if (!v3)
  {
LABEL_5:
    swift_release();
    sub_1B62C7BF4((uint64_t)v24);
    sub_1B6383E40((uint64_t)v25);
    uint64_t v9 = *(void *)(*(void *)(*(void *)(v1 + 16) + 264) + 40);
    uint64_t v10 = *(void *)(v9 + 16);
    swift_retain();
    if (v10)
    {
      uint64_t v12 = v25[0];
      uint64_t v11 = v25[1];
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1B62B2CE0(v12, v11);
      if (v14)
      {
        int v8 = *(void **)(*(void *)(v9 + 56) + 8 * v13);
        swift_unknownObjectRetain();
        sub_1B62C7BF4((uint64_t)v25);
        swift_release();
        sub_1B62C7BF4((uint64_t)v25);
        return v8;
      }
      sub_1B62C7BF4((uint64_t)v25);
    }
    swift_release();
    sub_1B62C7BF4((uint64_t)v25);
    sub_1B6383E40((uint64_t)v26);
    uint64_t v15 = *(void *)(*(void *)(*(void *)(v1 + 16) + 264) + 40);
    uint64_t v16 = *(void *)(v15 + 16);
    swift_retain();
    if (v16)
    {
      uint64_t v18 = v26[0];
      uint64_t v17 = v26[1];
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1B62B2CE0(v18, v17);
      if (v20)
      {
        int v8 = *(void **)(*(void *)(v15 + 56) + 8 * v19);
        swift_unknownObjectRetain();
        sub_1B62C7BF4((uint64_t)v26);
        swift_release();
        sub_1B62C7BF4((uint64_t)v26);
        return v8;
      }
      sub_1B62C7BF4((uint64_t)v26);
    }
    swift_release();
    sub_1B62C7BF4((uint64_t)v26);
    uint64_t v21 = *(void *)(v1 + 16);
    uint64_t v22 = *(void *)(v21 + 240);
    swift_retain_n();
    int v8 = sub_1B6BCB178(0x42746C7561666544, 0xEF7865546B63616CLL, v22, v21);
    swift_release_n();
    return v8;
  }
  uint64_t v5 = v24[0];
  uint64_t v4 = v24[1];
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B62B2CE0(v5, v4);
  if ((v7 & 1) == 0)
  {
    sub_1B62C7BF4((uint64_t)v24);
    goto LABEL_5;
  }
  int v8 = *(void **)(*(void *)(v2 + 56) + 8 * v6);
  swift_unknownObjectRetain();
  sub_1B62C7BF4((uint64_t)v24);
  swift_release();
  sub_1B62C7BF4((uint64_t)v24);
  return v8;
}

uint64_t sub_1B6330840(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_retain();
  id v4 = (id)sub_1B6388608();
  if (!v4) {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F352E0]), sel_init);
  }
  uint64_t v5 = v4;
  sub_1B6388228();
  swift_release();
  sub_1B6383E40((uint64_t)v36);
  uint64_t v6 = sub_1B6330D9C((uint64_t)v36, 1, 0, 2);
  id v7 = objc_msgSend(v5, sel_colorAttachments);
  id v8 = objc_msgSend(v7, sel_objectAtIndexedSubscript_, 0);

  double v10 = nullsub_1(v9);
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  objc_msgSend(v8, sel_setTexture_, v6);
  objc_msgSend(v8, sel_setLoadAction_, 2);
  objc_msgSend(v8, sel_setStoreAction_, 1);
  objc_msgSend(v8, sel_setClearColor_, v10, v12, v14, v16);
  objc_msgSend(v8, sel_setLevel_, 0);

  unint64_t v17 = *(void *)(v2 + 24);
  if (v17 != 2)
  {
    sub_1B62C7BF4((uint64_t)v36);
    sub_1B63311AC((uint64_t)&v37, (uint64_t)v39);
    sub_1B63311AC((uint64_t)v39, (uint64_t)&v40);
    if (v41 == 1)
    {
      uint64_t v18 = -(uint64_t)log2f(v40);
      if (v17)
      {
LABEL_6:
        sub_1B6383E40((uint64_t)v35);
        uint64_t v19 = sub_1B6330D9C((uint64_t)v35, 1, 0, 2);
        sub_1B62C7BF4((uint64_t)v35);
        id v20 = objc_msgSend(v5, sel_depthAttachment);
        objc_msgSend(v20, sel_setTexture_, v19);
        objc_msgSend(v20, (SEL)&selRef_setPhysicsBody_ + 7, 1);
        objc_msgSend(v20, sel_setStoreAction_, 0);
        objc_msgSend(v20, sel_setClearDepth_, 0.0);
        objc_msgSend(v20, sel_setLevel_, v18);
        swift_unknownObjectRelease();

LABEL_25:
        sub_1B6331D0C();
        swift_unknownObjectRelease();
        return (uint64_t)v5;
      }
    }
    else
    {
      uint64_t v18 = 0;
      if (v17) {
        goto LABEL_6;
      }
    }
    unsigned int v21 = objc_msgSend((id)swift_unknownObjectRetain(), sel_supportsMemorylessRenderTargets);
    swift_unknownObjectRelease();
    if ((v17 & 0x100000000000000) != 0 || !v21)
    {
      sub_1B6383E40((uint64_t)v38);
      uint64_t v22 = 2;
    }
    else
    {
      sub_1B6383E40((uint64_t)v38);
      uint64_t v22 = 3;
    }
    uint64_t v23 = sub_1B6330D9C((uint64_t)v38, 1, 0, v22);
    sub_1B62C7BF4((uint64_t)v38);
    uint64_t v24 = *(void *)(v2 + 16);
    swift_retain();
    sub_1B62CA210(v24 + 624, (uint64_t)v34, (unint64_t *)&unk_1EB9852B0);
    sub_1B62CA210((uint64_t)v34, (uint64_t)v35, (unint64_t *)&unk_1EB9852B0);
    if (sub_1B6388C10(v35) == 1)
    {
      swift_unknownObjectRetain();
      swift_release();
      uint64_t v25 = 0;
    }
    else
    {
      sub_1B62CA210((uint64_t)v34, (uint64_t)v33, (unint64_t *)&unk_1EB9852B0);
      uint64_t v26 = v33[1];
      double v27 = *(double *)&v33[2];
      uint64_t v28 = v33[3];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v26 + 16))(v28, a1, ObjectType, v26, v27);
      swift_unknownObjectRetain();
      swift_release();
    }
    if (v23)
    {
      swift_unknownObjectRelease();
      if (v25)
      {
        swift_unknownObjectRelease();
        if (v23 == v25) {
          uint64_t v30 = 1;
        }
        else {
          uint64_t v30 = 2;
        }
        goto LABEL_24;
      }
    }
    else
    {
      if (!v25)
      {
        uint64_t v30 = 1;
        goto LABEL_24;
      }
      swift_unknownObjectRelease();
    }
    uint64_t v30 = 2;
LABEL_24:
    id v31 = objc_msgSend(v5, sel_depthAttachment);
    objc_msgSend(v31, sel_setTexture_, v23);
    objc_msgSend(v31, sel_setLoadAction_, v30);
    objc_msgSend(v31, (SEL)&selRef_setIsJoint_, (v17 >> 40) & 1);
    objc_msgSend(v31, sel_setClearDepth_, 0.0);
    objc_msgSend(v31, sel_setLevel_, v18);

    swift_unknownObjectRelease();
    goto LABEL_25;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6330D9C(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(*(void *)(*(void *)(v4 + 16) + 264) + 40);
  uint64_t v13 = *(void *)(v12 + 16);
  swift_retain();
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B62B2CE0(v10, v11);
    if (v15)
    {
      double v16 = *(void **)(*(void *)(v12 + 56) + 8 * v14);
      swift_unknownObjectRetain();
      sub_1B62C7BF4(a1);
LABEL_27:
      swift_release();
      return (uint64_t)v16;
    }
    sub_1B62C7BF4(a1);
  }
  swift_release();
  if ((a2 & 1) == 0) {
    return 0;
  }
  uint64_t v41 = a4;
  uint64_t v42 = v10;
  uint64_t v39 = *(void *)(a1 + 32);
  uint64_t v40 = *(void *)(a1 + 16);
  int v36 = *(unsigned __int8 *)(a1 + 40);
  sub_1B633113C(a1 + 48, (uint64_t)v53);
  sub_1B633113C((uint64_t)v53, (uint64_t)&v62);
  uint64_t v17 = 32;
  if (!v62) {
    uint64_t v17 = 1;
  }
  if (v63) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = v62;
  }
  uint64_t v37 = *(void *)(a1 + 24);
  uint64_t v38 = v18;
  uint64_t v19 = *(void *)(v5 + 16);
  swift_retain();
  sub_1B62CA210(v19 + 624, (uint64_t)v43, (unint64_t *)&unk_1EB9852B0);
  sub_1B62CA210((uint64_t)v43, (uint64_t)v44, (unint64_t *)&unk_1EB9852B0);
  if (sub_1B6388C10(v44) != 1)
  {
    uint64_t v20 = v44[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v22 = *(double (**)(uint64_t, uint64_t))(v20 + 72);
    swift_unknownObjectRetain();
    double v23 = v22(ObjectType, v20);
    double v25 = v24;
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v26 = 5;
    if (a3) {
      uint64_t v26 = 7;
    }
    if (v36)
    {
      float v27 = v23;
      uint64_t v28 = (uint64_t)(float)(*(float *)&v39 * v27);
      float v29 = v25;
      uint64_t v30 = (uint64_t)(float)(*(float *)&v39 * v29);
    }
    else
    {
      uint64_t v30 = v39;
      uint64_t v28 = v39;
    }
    if (v37 < 2) {
      sub_1B6331A2C(2, v40, v28, v30, 1, v38, 0, 1, (uint64_t)&v45, 1, v41, v26);
    }
    else {
      sub_1B6331A2C(4, v40, v28, v30, 1, v38, 0, v37, (uint64_t)&v45, 1, v41, v26);
    }
    uint64_t v54 = v45;
    __int16 v55 = v46;
    char v56 = v47;
    long long v57 = v48;
    long long v58 = v49;
    long long v59 = v50;
    uint64_t v60 = v51;
    int v61 = v52;
    uint64_t v31 = *(void *)(*(void *)(*(void *)(v5 + 16) + 264) + 40);
    uint64_t v32 = *(void *)(v31 + 16);
    swift_retain();
    if (v32)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1B62B2CE0(v42, v11);
      if (v34)
      {
        double v16 = *(void **)(*(void *)(v31 + 56) + 8 * v33);
        swift_unknownObjectRetain();
        sub_1B62C7BF4(a1);
        if (sub_1B6CF1008(v16)) {
          goto LABEL_27;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        sub_1B62C7BF4(a1);
      }
    }
    double v16 = (void *)sub_1B6331208(v42, v11, &v54);
    goto LABEL_27;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B633113C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for RenderPass.Dimension(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t sub_1B63311AC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6331208(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  __int16 v7 = *((_WORD *)a3 + 4);
  uint64_t v8 = a3[8];
  char v9 = *((unsigned char *)a3 + 10) & 1;
  uint64_t v10 = *(void **)(v3 + 32);
  uint64_t v17 = *a3;
  __int16 v18 = v7;
  char v19 = v9;
  long long v11 = *((_OWORD *)a3 + 2);
  long long v20 = *((_OWORD *)a3 + 1);
  long long v21 = v11;
  long long v22 = *((_OWORD *)a3 + 3);
  uint64_t v23 = v8;
  int v24 = *((_DWORD *)a3 + 18);
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v17, v10);
  id v12 = *(id *)(v3 + 32);
  uint64_t v13 = sub_1B63314B8(v12);

  if (v13)
  {
    uint64_t v14 = (void *)sub_1B6E31768();
    objc_msgSend(v13, sel_setLabel_, v14);

    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *(void *)(v4 + 40);
    *(void *)(v4 + 40) = 0x8000000000000000;
    sub_1B6331384((uint64_t)v13, a1, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 40) = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  else
  {
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6331384(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_1B62B2CE0(a2, a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 >= v15 && (a4 & 1) != 0)
  {
LABEL_6:
    double v16 = *v5;
    if (v13)
    {
LABEL_7:
      uint64_t v17 = v16[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v17 + 8 * v11) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v14 >= v15 && (a4 & 1) == 0)
  {
    sub_1B6ACBB08();
    goto LABEL_6;
  }
  sub_1B6AB59DC(v15, a4 & 1);
  uint64_t v19 = sub_1B62B2CE0(a2, a3);
  if ((v13 & 1) != (v20 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v11 = v19;
  double v16 = *v5;
  if (v13) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B62B3490(v11, a2, a3, a1, v16);

  return swift_bridgeObjectRetain();
}

void *sub_1B63314B8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v7 = 32;
    do
    {
      uint64_t v8 = *(void **)(v4 + v7);
      swift_unknownObjectRetain();
      id v9 = objc_msgSend(a1, sel_textureType);
      if (v9 == objc_msgSend(v8, sel_textureType)
        && (id v10 = objc_msgSend(a1, sel_arrayLength), v10 == objc_msgSend(v8, sel_arrayLength))
        && (id v11 = objc_msgSend(a1, sel_pixelFormat), v11 == objc_msgSend(v8, sel_pixelFormat))
        && (id v12 = objc_msgSend(a1, sel_mipmapLevelCount), v12 == objc_msgSend(v8, sel_mipmapLevelCount))
        && (id v13 = objc_msgSend(a1, sel_sampleCount), v13 == objc_msgSend(v8, sel_sampleCount))
        && (id v14 = objc_msgSend(a1, sel_storageMode), v14 == objc_msgSend(v8, sel_storageMode))
        && (id v15 = objc_msgSend(a1, sel_width), v15 == objc_msgSend(v8, sel_width))
        && (id v16 = objc_msgSend(a1, sel_height), v16 == objc_msgSend(v8, sel_height)))
      {
        id v26 = objc_msgSend(a1, sel_depth);
        id v17 = objc_msgSend(v8, sel_depth);
        swift_unknownObjectRelease();
        if (v26 == v17)
        {
          swift_bridgeObjectRelease();
          double v25 = *(void **)(*(void *)(v1 + 40) + v7);
          swift_unknownObjectRetain();
          sub_1B6331C38(v6);
          swift_unknownObjectRelease();
          uint64_t v2 = v1;
          goto LABEL_19;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v6;
      v7 += 16;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    uint64_t v2 = v1;
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v19 = objc_msgSend(*(id *)(Strong + 16), sel_newTextureWithDescriptor_, a1);
  if (!v19)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    v27[1] = 0x80000001B6F379E0;
    id v22 = objc_msgSend(a1, sel_description);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    int v23 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v27[0] = 0;
    swift_retain();
    sub_1B6B33E34(v23, v27, 0xD000000000000023, 0x80000001B6F379E0);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  double v25 = v19;
  sub_1B6331FD0((uint64_t)v19);
  objc_msgSend(v25, sel_setLabel_, 0);
  swift_release();
LABEL_19:
  id v20 = objc_msgSend(v25, sel_hash);
  swift_unknownObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v27[0] = *(void *)(v2 + 48);
  *(void *)(v2 + 48) = 0x8000000000000000;
  sub_1B6331910((uint64_t)v25, (uint64_t)v20, isUniquelyReferenced_nonNull_native);
  *(void *)(v2 + 48) = v27[0];
  swift_bridgeObjectRelease();
  return v25;
}

unint64_t sub_1B6331910(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    id v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      unint64_t result = swift_unknownObjectRelease();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD06C8();
    goto LABEL_6;
  }
  sub_1B6ABE058(v13, a3 & 1);
  unint64_t v17 = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  id v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B636A55C(v9, a2, a1, v14);
}

int8x8_t sub_1B6331A2C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  double Default = RGTextureDescriptorMakeDefault((uint64_t)v45);
  LODWORD(Default) = v48;
  int16x8_t v21 = (int16x8_t)vmovl_u8(*(uint8x8_t *)&Default);
  uint64_t v43 = a2;
  uint64_t v44 = a1;
  if (a3 > 0)
  {
    __int16 v22 = a3;
    if (a4 > 0) {
      goto LABEL_3;
    }
LABEL_6:
    __int16 v23 = 1;
    __int16 v24 = 1;
    if (a5 < 1) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  __int16 v22 = 1;
  if (a4 < 1) {
    goto LABEL_6;
  }
LABEL_3:
  if (a5 >= 1)
  {
    __int16 v23 = a4;
LABEL_7:
    __int16 v24 = v23;
    __int16 v23 = a5;
    goto LABEL_9;
  }
  __int16 v23 = 1;
  __int16 v24 = a4;
LABEL_9:
  uint64_t v26 = a11;
  uint64_t v25 = a12;
  char v27 = v45[10];
  long long v28 = v46;
  uint64_t v29 = v47;
  if (a5 <= a4) {
    uint64_t v30 = a4;
  }
  else {
    uint64_t v30 = a5;
  }
  if (v30 <= a3) {
    uint64_t v30 = a3;
  }
  if (a7)
  {
    if (!a6)
    {
      LOBYTE(v35) = 1;
      char v37 = 1;
      char v36 = a8;
      if (a8 >= 1) {
        goto LABEL_22;
      }
      goto LABEL_25;
    }
    uint64_t v31 = v47;
    long long v40 = v46;
    int16x8_t v41 = v21;
    uint64_t v32 = a11;
    uint64_t v33 = a12;
    __int16 v34 = v22;
    uint64_t v35 = (uint64_t)(float)(floorf(log2f(fmaxf((float)v30, 1.0))) + 1.0);
  }
  else
  {
    uint64_t v31 = v47;
    long long v40 = v46;
    int16x8_t v41 = v21;
    uint64_t v32 = a11;
    uint64_t v33 = a12;
    __int16 v34 = v22;
    uint64_t v35 = (uint64_t)(float)(floorf(log2f(fmaxf((float)v30, 1.0))) + 1.0);
    if (v35 >= a6) {
      LOBYTE(v35) = a6;
    }
  }
  char v36 = a8;
  int16x8_t v21 = v41;
  __int16 v22 = v34;
  if (a8 >= 1)
  {
    uint64_t v25 = v33;
    uint64_t v26 = v32;
    long long v28 = v40;
    uint64_t v29 = v31;
LABEL_22:
    char v37 = v36;
    goto LABEL_25;
  }
  char v37 = 1;
  uint64_t v25 = v33;
  uint64_t v26 = v32;
  long long v28 = v40;
  uint64_t v29 = v31;
LABEL_25:
  *(_WORD *)a9 = v22;
  if (a10 <= 1) {
    __int16 v38 = 1;
  }
  else {
    __int16 v38 = a10;
  }
  *(_WORD *)(a9 + 2) = v24;
  *(_WORD *)(a9 + 4) = v23;
  *(_WORD *)(a9 + 6) = v38;
  *(unsigned char *)(a9 + 8) = v35;
  *(unsigned char *)(a9 + 9) = v37;
  *(unsigned char *)(a9 + 10) = v27;
  *(void *)(a9 + 16) = v43;
  *(void *)(a9 + 24) = v44;
  *(void *)(a9 + 32) = v26;
  *(void *)(a9 + 40) = v25;
  *(_OWORD *)(a9 + 48) = v28;
  *(void *)(a9 + 64) = v29;
  int8x8_t result = vmovn_s16(v21);
  *(_DWORD *)(a9 + 72) = result.i32[0];
  return result;
}

uint64_t sub_1B6331C38(uint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1B6C16850(v3);
  }
  uint64_t v4 = v3[2] - 1;
  uint64_t v5 = v4 - a1;
  if (v4 - a1 < 0)
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    uint64_t v6 = &v3[2 * a1];
    uint64_t v7 = v6[4];
    memmove(v6 + 4, v6 + 6, 16 * v5);
    v3[2] = v4;
    *uint64_t v1 = v3;
    return v7;
  }
  return result;
}

void sub_1B6331D0C()
{
  id v1 = objc_msgSend(v0, sel_depthAttachment);
  id v2 = objc_msgSend(v1, sel_texture);

  if (v2)
  {
    if (objc_msgSend(v2, sel_pixelFormat) == (id)260)
    {
      id v3 = objc_msgSend(v0, sel_stencilAttachment);
      id v4 = objc_msgSend(v0, sel_depthAttachment);
      sub_1B6331DEC(v4);
    }
    swift_unknownObjectRelease();
  }
}

id sub_1B6331DEC(void *a1)
{
  objc_msgSend(v1, sel_setTexture_, objc_msgSend(a1, sel_texture));
  swift_unknownObjectRelease();
  objc_msgSend(v1, sel_setLoadAction_, objc_msgSend(a1, sel_loadAction));
  objc_msgSend(v1, sel_setStoreAction_, objc_msgSend(a1, sel_storeAction));
  objc_msgSend(v1, sel_setStoreActionOptions_, objc_msgSend(a1, sel_storeActionOptions));
  objc_msgSend(v1, sel_setLevel_, objc_msgSend(a1, sel_level));
  objc_msgSend(v1, sel_setSlice_, objc_msgSend(a1, sel_slice));
  objc_msgSend(v1, sel_setDepthPlane_, objc_msgSend(a1, sel_depthPlane));
  objc_msgSend(v1, sel_setResolveTexture_, objc_msgSend(a1, sel_resolveTexture));
  swift_unknownObjectRelease();
  objc_msgSend(v1, sel_setResolveLevel_, objc_msgSend(a1, sel_resolveLevel));
  objc_msgSend(v1, sel_setResolveDepthPlane_, objc_msgSend(a1, sel_resolveDepthPlane));
  id v3 = objc_msgSend(a1, sel_resolveSlice);

  return objc_msgSend(v1, sel_setResolveSlice_, v3);
}

uint64_t sub_1B6331FD0(uint64_t a1)
{
  v12[4] = *MEMORY[0x1E4F143B8];
  uint64_t ObjectType = swift_getObjectType();
  Swift::Int v3 = sub_1B6367DD0();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B633216C(KeyPath, 1);
  swift_release();
  uint64_t v5 = swift_getKeyPath();
  sub_1B633216C(v5, v3);
  swift_release();
  v12[3] = ObjectType;
  v12[0] = a1;
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v3;
  uint64_t v11 = 0;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v8 = (void *)sub_1B6E33498();
  type metadata accessor for Deleter();
  unint64_t v9 = (void *)swift_allocObject();
  v9[2] = sub_1B6B497CC;
  v9[3] = v7;
  swift_retain();
  objc_setAssociatedObject(v8, &v11, v9, (void *)1);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v12);
}

void sub_1B633216C(uint64_t a1, Swift::Int a2)
{
  if (*(void *)(v2 + 40))
  {
    swift_getAtKeyPath();
    vfx_counters.add(_:_:)(v4, a2);
  }
}

uint64_t type metadata accessor for Deleter()
{
  return self;
}

void sub_1B6332204(uint64_t a1, char a2)
{
  sub_1B62E17B4();
  long long v253 = v4;
  MEMORY[0x1F4188790](v4, v5);
  long long v252 = (char *)&v232 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = sub_1B6E31098();
  MEMORY[0x1F4188790](v251, v7);
  long long v250 = (char *)&v232 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v237 = (void *)a1;
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v10) {
    return;
  }
  if (a2)
  {
    uint64_t v233 = v8;
    sub_1B62CA210(v10 + 624, (uint64_t)v266, (unint64_t *)&unk_1EB9852B0);
    sub_1B62CA210((uint64_t)v266, (uint64_t)v273, (unint64_t *)&unk_1EB9852B0);
    if (sub_1B6388C10((uint64_t *)v273) == 1)
    {
      sub_1B6E32BE8();
      __break(1u);
      return;
    }
    uint64_t v11 = *((void *)&v273[0] + 1);
    uint64_t v12 = *(void *)&v273[0];
    uint64_t ObjectType = swift_getObjectType();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 144);
    swift_unknownObjectRetain_n();
    swift_retain();
    uint64_t v263 = v11;
    uint64_t v15 = v14(ObjectType, v11);
    swift_unknownObjectRelease();
    uint64_t v16 = v15 & 0xFFFFFFFFFFLL;
  }
  else
  {
    if (!*(void *)(*(void *)(v10 + 224) + 16)) {
      return;
    }
    uint64_t v233 = v8;
    swift_retain();
    uint64_t v12 = 0;
    uint64_t v263 = 0;
    uint64_t v16 = 0x200000000;
  }
  long long v17 = *(_OWORD *)(v236 + 112);
  v290[0] = *(_OWORD *)(v236 + 96);
  v290[1] = v17;
  uint64_t v291 = *(void *)(v236 + 128);
  uint64_t v234 = *(void *)((char *)v237 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  uint64_t v235 = v16;
  sub_1B62C9DA8((uint64_t)v237, (uint64_t)v290, v16, v280);
  sub_1B62CA210((uint64_t)v280, (uint64_t)v273, (unint64_t *)&qword_1EB97DC50);
  uint64_t v259 = v10;
  uint64_t v264 = v12;
  if (!*(void *)&v273[0])
  {
    uint64_t v248 = 0;
    goto LABEL_103;
  }
  if (v279 < 1 || (long long v242 = v276) == 0)
  {
    uint64_t v248 = 0;
    goto LABEL_102;
  }
  LODWORD(v245) = *(unsigned __int8 *)(v277 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v244 = *(void *)(v278 + 32);
  v282[0] = v273[0];
  v282[1] = v273[1];
  uint64_t v283 = v274;
  uint64_t v240 = v278 + 48;
  uint64_t v241 = v275;
  *(void *)&long long v246 = v278;
  long long v239 = (void *)(v278 + 64);
  long long v254 = (char *)(v233 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v18 = 0;
  uint64_t v248 = 0;
  *((void *)&_Q0 + 1) = 2;
  long long v249 = xmmword_1B6E77050;
  unint64_t v247 = (unint64_t)"ra";
  long long v238 = (void *)0x80000001B6F43B30;
  __asm { FMOV            V0.2S, #1.0 }
  long long v265 = _Q0;
  long long v262 = xmmword_1B6E4F370;
  do
  {
    uint64_t v243 = v18;
    __int16 v23 = (unsigned int *)(v241 + 48 * v18);
    uint64_t v24 = *v23;
    uint64_t v256 = v23[1];
    uint64_t v25 = (uint64_t *)*((void *)v23 + 2);
    uint64_t v26 = *((void *)v23 + 3);
    uint64_t v27 = *((void *)v23 + 5);
    *(void *)&long long v261 = *((void *)v23 + 4);
    if (v245)
    {
      long long v28 = *(os_unfair_lock_s **)(v27 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v28);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v27 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v244);
    sub_1B62CA210(v240, (uint64_t)v289, &qword_1EB97DE20);
    uint64_t v29 = v246;
    uint64_t v30 = *(void *)(v246 + 32);
    uint64_t v31 = *(void *)(*(void *)(*(void *)(*(void *)(v27 + 40) + 16) + 32) + 16) + 1;
    long long v258 = (char *)v27;
    swift_retain();
    *(void *)(v29 + 48) = ecs_stack_allocator_allocate(v30, 48 * v31, 8);
    *(void *)(v29 + 56) = v31;
    uint64_t v32 = v239;
    v239[1] = 0;
    v32[2] = 0;
    *uint64_t v32 = 0;
    swift_release();
    uint64_t v33 = v261;
    *(void *)&long long v260 = sub_1B62C9024((uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1F0F78720, v25, v26, v261, v29);
    uint64_t v34 = sub_1B62C9024((uint64_t)&type metadata for ProjectionMatrix, (uint64_t)&off_1F0F6EED0, v25, v26, v33, v29);
    uint64_t v257 = v34;
    if (!v25)
    {
      uint64_t v83 = v24;
      if (v24 == v256) {
        goto LABEL_58;
      }
      uint64_t v86 = v260;
      while (1)
      {
        *(void *)&long long v261 = v83;
        if (v12)
        {
          swift_unknownObjectRetain();
          uint64_t v87 = v263;
        }
        else
        {
          uint64_t v112 = *(void *)(v259 + 224);
          uint64_t v113 = *(void *)(v112 + 16);
          if (!v113)
          {
LABEL_89:
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            uint64_t v255 = qword_1EB997FD0;
            swift_retain();
            char v122 = sub_1B6E32148();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v123 = qword_1EB985528;
            swift_retain();
            if (v123 != -1) {
              swift_once();
            }
            sub_1B6A4EEA4(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
            uint64_t v124 = swift_allocObject();
            *(_OWORD *)(v124 + 16) = v249;
            *(void *)(v124 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v124 + 64) = sub_1B678615C();
            uint64_t v125 = (uint64_t)v238;
            *(void *)(v124 + 32) = 0xD000000000000035;
            *(void *)(v124 + 40) = v125;
            sub_1B6E31258();
            swift_bridgeObjectRelease();
            swift_retain();
            uint64_t v126 = v250;
            sub_1B6E31088();
            uint64_t v127 = (uint64_t)v252;
            uint64_t v128 = v253[12];
            uint64_t v129 = v253[16];
            float32x4_t v130 = &v252[v253[20]];
            (*(void (**)(char *, char *, uint64_t))v254)(v252, v126, v251);
            *(unsigned char *)(v127 + v128) = v122;
            *(void *)(v127 + v129) = 0;
            *(void *)float32x4_t v130 = 0xD000000000000035;
            *((void *)v130 + 1) = v125;
            sub_1B6E31368();
            swift_release();
            sub_1B67A3738(v127);
            swift_release();
            swift_release();
            uint64_t v12 = v264;
            uint64_t v86 = v260;
            uint64_t v34 = v257;
            goto LABEL_76;
          }
          int v114 = *((_DWORD *)v258 + 7);
          int v115 = v258[32];
          swift_bridgeObjectRetain_n();
          uint64_t v255 = v112;
          int v116 = (uint64_t *)(v112 + 40);
          do
          {
            uint64_t v87 = *v116;
            if (v115)
            {
              swift_unknownObjectRetain();
LABEL_97:
              swift_bridgeObjectRelease_n();
              goto LABEL_98;
            }
            uint64_t v117 = swift_getObjectType();
            uint64_t v118 = *(uint64_t (**)(uint64_t, uint64_t))(v87 + 144);
            swift_unknownObjectRetain();
            if ((v118(v117, v87) & 0xFFFFFFFFFFLL) == 0x200000000) {
              goto LABEL_97;
            }
            uint64_t v119 = v118(v117, v87);
            if ((v119 & 0xFE00000000) == 0 && v114 == v119) {
              goto LABEL_97;
            }
            swift_unknownObjectRelease();
            v116 += 2;
            --v113;
          }
          while (v113);
          swift_bridgeObjectRelease_n();
          uint64_t v121 = *(void *)(v259 + 224);
          if (!*(void *)(v121 + 16)) {
            goto LABEL_89;
          }
          uint64_t v87 = *(void *)(v121 + 40);
          swift_unknownObjectRetain();
LABEL_98:
          uint64_t v12 = v264;
          uint64_t v86 = v260;
          uint64_t v34 = v257;
          uint64_t v83 = v261;
        }
        uint64_t v88 = v86 + 20 * v83;
        uint64_t v89 = (int32x4_t *)(v34 + (v83 << 6));
        uint64_t v90 = swift_getObjectType();
        swift_unknownObjectRetain();
        sub_1B6334048(v90, v87);
        float v92 = v91;
        char v93 = sub_1B6333E48(*(unsigned char *)(v88 + 4), v90, v87);
        if (v93) {
          float v94 = *(float *)v88;
        }
        else {
          float v94 = v92 * *(float *)v88;
        }
        if (v93) {
          float v95 = *(float *)v88 / v92;
        }
        else {
          float v95 = *(float *)v88;
        }
        float v96 = *(float *)(v88 + 8);
        float v97 = *(float *)(v88 + 12);
        int v98 = *(unsigned __int8 *)(v88 + 16);
        swift_unknownObjectRelease_n();
        *(float *)v99.i32 = fmaxf(v96, -100000.0);
        float v100 = *(float *)v99.i32 + 0.0001;
        if (v97 > (float)(*(float *)v99.i32 + 0.0001)) {
          float v100 = v97;
        }
        if (v98) {
          float v101 = v100;
        }
        else {
          float v101 = *(float *)v99.i32;
        }
        if (!v98) {
          *(float *)v99.i32 = v100;
        }
        *(float *)v99.i32 = v101 - *(float *)v99.i32;
        *(float32x2_t *)v102.i8 = vdiv_f32((float32x2_t)__PAIR64__(LODWORD(v101), v265), (float32x2_t)vdup_lane_s32(v99, 0));
        v103.i64[0] = 0;
        v103.i32[2] = 0;
        *(float *)&v103.i32[3] = (float)(v94 - v94) / (float)((float)-v94 - v94);
        v104.i32[0] = 0;
        v104.i32[2] = 0;
        *(float *)&v104.i32[1] = 2.0 / (float)(v95 + v95);
        v102.i64[1] = v102.i64[0];
        float32x2x2_t v105 = (float32x2x2_t)vzip2q_s32(v103, v102);
        int32x4_t v106 = vzip1q_s32((int32x4_t)v104.u64[0], (int32x4_t)0);
        *(float *)&v104.i32[3] = (float)(v95 - v95) / (float)((float)-v95 - v95);
        int32x4_t v107 = vzip2q_s32(v104, (int32x4_t)v262);
        int v108 = 0;
        float v109 = 2.0 / (float)(v94 + v94);
        char v110 = (float *)v89;
        vst2_f32(v110, *(float32x2x2_t *)((char *)&v106 - 8));
        v110 += 4;
        *(int32x4_t *)char v110 = vzip2q_s32((int32x4_t)0, v106);
        i32 = (float *)v89[2].i32;
        vst2_f32(i32, v105);
        v89[3] = vzip2q_s32((int32x4_t)v105, v107);
LABEL_76:
        uint64_t v83 = v261 + 1;
        if ((void)v261 + 1 == v256) {
          goto LABEL_58;
        }
      }
    }
    if (v33)
    {
      uint64_t v35 = 0;
      uint64_t v36 = v260;
      do
      {
        if (v12)
        {
          swift_unknownObjectRetain();
          uint64_t v37 = v263;
LABEL_19:
          uint64_t v38 = v36 + 20 * v35;
          uint64_t v39 = v35;
          long long v40 = (int32x4_t *)(v34 + (v35 << 6));
          uint64_t v41 = swift_getObjectType();
          swift_unknownObjectRetain();
          sub_1B6334048(v41, v37);
          float v43 = v42;
          char v44 = sub_1B6333E48(*(unsigned char *)(v38 + 4), v41, v37);
          if (v44) {
            float v45 = *(float *)v38;
          }
          else {
            float v45 = v43 * *(float *)v38;
          }
          if (v44) {
            float v46 = *(float *)v38 / v43;
          }
          else {
            float v46 = *(float *)v38;
          }
          float v47 = *(float *)(v38 + 8);
          float v48 = *(float *)(v38 + 12);
          int v49 = *(unsigned __int8 *)(v38 + 16);
          swift_unknownObjectRelease_n();
          *(float *)v50.i32 = fmaxf(v47, -100000.0);
          float v51 = *(float *)v50.i32 + 0.0001;
          if (v48 > (float)(*(float *)v50.i32 + 0.0001)) {
            float v51 = v48;
          }
          if (v49) {
            float v52 = v51;
          }
          else {
            float v52 = *(float *)v50.i32;
          }
          if (!v49) {
            *(float *)v50.i32 = v51;
          }
          *(float *)v50.i32 = v52 - *(float *)v50.i32;
          *(float32x2_t *)v53.i8 = vdiv_f32((float32x2_t)__PAIR64__(LODWORD(v52), v265), (float32x2_t)vdup_lane_s32(v50, 0));
          v54.i64[0] = 0;
          v54.i32[2] = 0;
          *(float *)&v54.i32[3] = (float)(v45 - v45) / (float)((float)-v45 - v45);
          v55.i32[0] = 0;
          v55.i32[2] = 0;
          *(float *)&v55.i32[1] = 2.0 / (float)(v46 + v46);
          v53.i64[1] = v53.i64[0];
          float32x2x2_t v56 = (float32x2x2_t)vzip2q_s32(v54, v53);
          int32x4_t v57 = vzip1q_s32((int32x4_t)v55.u64[0], (int32x4_t)0);
          *(float *)&v55.i32[3] = (float)(v46 - v46) / (float)((float)-v46 - v46);
          int32x4_t v58 = vzip2q_s32(v55, (int32x4_t)v262);
          int v59 = 0;
          float v60 = 2.0 / (float)(v45 + v45);
          int v61 = (float *)v40;
          vst2_f32(v61, *(float32x2x2_t *)((char *)&v57 - 8));
          v61 += 4;
          *(int32x4_t *)int v61 = vzip2q_s32((int32x4_t)0, v57);
          uint64_t v62 = (float *)v40[2].i32;
          vst2_f32(v62, v56);
          v40[3] = vzip2q_s32((int32x4_t)v56, v58);
        }
        else
        {
          uint64_t v63 = *(void *)(v259 + 224);
          uint64_t v64 = *(void *)(v63 + 16);
          if (v64)
          {
            uint64_t v256 = v35;
            int v65 = *((_DWORD *)v258 + 7);
            int v66 = v258[32];
            swift_bridgeObjectRetain_n();
            uint64_t v255 = v63;
            uint64_t v67 = (uint64_t *)(v63 + 40);
            do
            {
              uint64_t v37 = *v67;
              if (v66)
              {
                swift_unknownObjectRetain();
LABEL_47:
                swift_bridgeObjectRelease_n();
LABEL_48:
                uint64_t v12 = v264;
                uint64_t v36 = v260;
                uint64_t v35 = v256;
                uint64_t v34 = v257;
                goto LABEL_19;
              }
              uint64_t v68 = swift_getObjectType();
              uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 144);
              swift_unknownObjectRetain();
              if ((v69(v68, v37) & 0xFFFFFFFFFFLL) == 0x200000000) {
                goto LABEL_47;
              }
              uint64_t v70 = v69(v68, v37);
              _ZF = (v70 & 0xFE00000000) == 0 && v65 == v70;
              if (_ZF) {
                goto LABEL_47;
              }
              swift_unknownObjectRelease();
              v67 += 2;
              --v64;
            }
            while (v64);
            swift_bridgeObjectRelease_n();
            uint64_t v72 = *(void *)(v259 + 224);
            if (*(void *)(v72 + 16))
            {
              uint64_t v37 = *(void *)(v72 + 40);
              swift_unknownObjectRetain();
              goto LABEL_48;
            }
            uint64_t v35 = v256;
          }
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          uint64_t v256 = qword_1EB997FD0;
          swift_retain();
          char v73 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v39 = v35;
          uint64_t v74 = qword_1EB997FF0;
          uint64_t v75 = qword_1EB985528;
          swift_retain();
          if (v75 != -1) {
            swift_once();
          }
          sub_1B6A4EEA4(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
          uint64_t v76 = swift_allocObject();
          *(_OWORD *)(v76 + 16) = v249;
          *(void *)(v76 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v76 + 64) = sub_1B678615C();
          unint64_t v77 = v247 | 0x8000000000000000;
          *(void *)(v76 + 32) = 0xD000000000000035;
          *(void *)(v76 + 40) = v77;
          sub_1B6E31258();
          swift_bridgeObjectRelease();
          swift_retain();
          float v78 = v250;
          sub_1B6E31088();
          uint64_t v79 = (uint64_t)v252;
          uint64_t v80 = v253[12];
          uint64_t v255 = v74;
          uint64_t v81 = v253[16];
          int32x2_t v82 = &v252[v253[20]];
          (*(void (**)(char *, char *, uint64_t))v254)(v252, v78, v251);
          *(unsigned char *)(v79 + v80) = v73;
          *(void *)(v79 + v81) = 0;
          *(void *)int32x2_t v82 = 0xD000000000000035;
          *((void *)v82 + 1) = v77;
          sub_1B6E31368();
          swift_release();
          sub_1B67A3738(v79);
          swift_release();
          swift_release();
          uint64_t v12 = v264;
          uint64_t v36 = v260;
          uint64_t v34 = v257;
        }
        uint64_t v35 = v39 + 1;
      }
      while (v39 + 1 != (void)v261);
    }
LABEL_58:
    uint64_t v84 = v248;
    sub_1B6345178((void *)v246, (unsigned __int16 **)v282, (uint64_t)v289);
    uint64_t v248 = v84;
    float64_t v85 = v258;
    sub_1B634507C(v258);
    ecs_stack_allocator_pop_snapshot(v244);
    if (v245)
    {
      os_unfair_lock_unlock(*((os_unfair_lock_t *)v85 + 43));
      os_unfair_lock_unlock(*((os_unfair_lock_t *)v85 + 47));
    }
    swift_release();
    uint64_t v18 = v243 + 1;
  }
  while ((void *)(v243 + 1) != v242);
  sub_1B632F170(v280);
LABEL_102:
  sub_1B632F170(v280);
LABEL_103:
  long long v131 = *(_OWORD *)(v236 + 152);
  v287[0] = *(_OWORD *)(v236 + 136);
  v287[1] = v131;
  uint64_t v288 = *(void *)(v236 + 168);
  sub_1B62C9DA8((uint64_t)v237, (uint64_t)v287, v235, v281);
  sub_1B62CA210((uint64_t)v281, (uint64_t)v266, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v266[0])
  {
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
  if (v272 <= 0) {
    goto LABEL_170;
  }
  uint64_t v243 = v269;
  if (!v269) {
    goto LABEL_170;
  }
  int v132 = v271;
  LODWORD(v133) = *(unsigned __int8 *)(v270 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v134 = v271[4];
  v284[0] = v266[0];
  v284[1] = v266[1];
  uint64_t v285 = v267;
  long long v238 = v271 + 6;
  long long v239 = v268;
  long long v237 = v271 + 8;
  unint64_t v247 = v233 + 32;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v135 = 0;
  long long v246 = xmmword_1B6E77050;
  unint64_t v245 = (unint64_t)"ra";
  unint64_t v236 = 0x80000001B6F43B30;
  long long v242 = v132;
  LODWORD(v241) = v133;
  uint64_t v240 = v134;
  while (2)
  {
    uint64_t v244 = v135;
    uint64_t v136 = (unsigned int *)&v239[6 * v135];
    *(void *)&long long v249 = *v136;
    uint64_t v256 = v136[1];
    unsigned __int8 v137 = (uint64_t *)*((void *)v136 + 2);
    uint64_t v138 = *((void *)v136 + 3);
    uint64_t v139 = *((void *)v136 + 5);
    uint64_t v255 = *((void *)v136 + 4);
    if (v133)
    {
      long long v140 = *(os_unfair_lock_s **)(v139 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v140);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v139 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v134);
    sub_1B62CA210((uint64_t)v238, (uint64_t)v286, &qword_1EB97DE20);
    uint64_t v141 = v132[4];
    uint64_t v142 = *(void *)(*(void *)(*(void *)(*(void *)(v139 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v132[6] = ecs_stack_allocator_allocate(v141, 48 * v142, 8);
    v132[7] = v142;
    long long v143 = v237;
    v237[1] = 0;
    _OWORD v143[2] = 0;
    void *v143 = 0;
    swift_release();
    uint64_t v144 = v255;
    long long v258 = (char *)sub_1B62C9024((uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1F0F73918, v137, v138, v255, (uint64_t)v132);
    long long v254 = (char *)v139;
    uint64_t v257 = sub_1B62C9024((uint64_t)&type metadata for ProjectionMatrix, (uint64_t)&off_1F0F6EED0, v137, v138, v144, (uint64_t)v132);
    if (!v137)
    {
      uint64_t v188 = v249;
      if (v249 == v256) {
        goto LABEL_140;
      }
      while (1)
      {
        if (v12)
        {
          swift_unknownObjectRetain();
          uint64_t v190 = v263;
        }
        else
        {
          uint64_t v213 = *(void *)(v259 + 224);
          uint64_t v214 = *(void *)(v213 + 16);
          *(void *)&long long v249 = v188;
          if (!v214)
          {
LABEL_157:
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v265 = qword_1EB997FD0;
            swift_retain();
            char v223 = sub_1B6E32148();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v224 = qword_1EB985528;
            swift_retain();
            if (v224 != -1) {
              swift_once();
            }
            sub_1B6A4EEA4(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
            uint64_t v225 = swift_allocObject();
            *(_OWORD *)(v225 + 16) = v246;
            *(void *)(v225 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v225 + 64) = sub_1B678615C();
            unint64_t v226 = v236;
            *(void *)(v225 + 32) = 0xD000000000000035;
            *(void *)(v225 + 40) = v226;
            sub_1B6E31258();
            swift_bridgeObjectRelease();
            swift_retain();
            long long v227 = v250;
            sub_1B6E31088();
            uint64_t v228 = (uint64_t)v252;
            uint64_t v229 = v253[12];
            uint64_t v230 = v253[16];
            uint64_t v231 = &v252[v253[20]];
            (*(void (**)(char *, char *, uint64_t))v247)(v252, v227, v251);
            *(unsigned char *)(v228 + v229) = v223;
            *(void *)(v228 + v230) = 0;
            *(void *)uint64_t v231 = 0xD000000000000035;
            *((void *)v231 + 1) = v226;
            sub_1B6E31368();
            swift_release();
            sub_1B67A3738(v228);
            swift_release();
            swift_release();
            uint64_t v195 = v249;
            goto LABEL_144;
          }
          int v215 = *((_DWORD *)v254 + 7);
          int v216 = v254[32];
          swift_bridgeObjectRetain_n();
          *(void *)&long long v265 = v213;
          long long v217 = (uint64_t *)(v213 + 40);
          do
          {
            uint64_t v190 = *v217;
            if (v216)
            {
              swift_unknownObjectRetain();
LABEL_165:
              swift_bridgeObjectRelease_n();
              goto LABEL_166;
            }
            uint64_t v218 = swift_getObjectType();
            char v219 = *(uint64_t (**)(uint64_t, uint64_t))(v190 + 144);
            swift_unknownObjectRetain();
            if ((v219(v218, v190) & 0xFFFFFFFFFFLL) == 0x200000000) {
              goto LABEL_165;
            }
            uint64_t v220 = v219(v218, v190);
            if ((v220 & 0xFE00000000) == 0 && v215 == v220) {
              goto LABEL_165;
            }
            swift_unknownObjectRelease();
            v217 += 2;
            --v214;
          }
          while (v214);
          swift_bridgeObjectRelease_n();
          uint64_t v222 = *(void *)(v259 + 224);
          if (!*(void *)(v222 + 16)) {
            goto LABEL_157;
          }
          uint64_t v190 = *(void *)(v222 + 40);
          swift_unknownObjectRetain();
LABEL_166:
          uint64_t v188 = v249;
        }
        float32x4_t v191 = v258;
        uint64_t v192 = &v258[48 * v188];
        long long v193 = (_OWORD *)(v257 + (v188 << 6));
        uint64_t v194 = swift_getObjectType();
        uint64_t v195 = v188;
        long long v196 = (float32x2_t *)&v191[48 * v188];
        char v197 = v196[4].i8[1];
        swift_unknownObjectRetain();
        char v198 = sub_1B6333E48(v197, v194, v190) & 1;
        float v199 = *(float *)v192;
        sub_1B6334048(v194, v190);
        float v201 = v200;
        float v202 = v196[3].f32[0];
        float v203 = v196[3].f32[1];
        LOBYTE(v191) = v196[4].i8[0];
        float32x2_t v204 = v196[5];
        float32x2_t v205 = sub_1B6333FD4(v194, v190);
        sub_1B6333B58((char)v191, v198, v199, v201, v202, v203, v204, *(void *)&v205, 0);
        long long v265 = v206;
        long long v261 = v208;
        long long v262 = (__int128)v207;
        long long v260 = v209;
        swift_unknownObjectRelease_n();
        int32x4_t v210 = (int32x4_t)v262;
        _OWORD *v193 = v265;
        v193[1] = v210;
        long long v211 = v260;
        _OWORD v193[2] = v261;
        v193[3] = v211;
LABEL_144:
        uint64_t v212 = v195 + 1;
        _ZF = v212 == v256;
        uint64_t v188 = v212;
        uint64_t v12 = v264;
        if (_ZF) {
          goto LABEL_140;
        }
      }
    }
    if (v144)
    {
      uint64_t v145 = v144;
      for (uint64_t i = 0; i != v145; ++i)
      {
        if (v12)
        {
          swift_unknownObjectRetain();
          uint64_t v147 = v263;
        }
        else
        {
          uint64_t v168 = *(void *)(v259 + 224);
          uint64_t v169 = *(void *)(v168 + 16);
          if (!v169)
          {
LABEL_129:
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)&long long v265 = qword_1EB997FD0;
            swift_retain();
            char v177 = sub_1B6E32148();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            uint64_t v178 = qword_1EB997FF0;
            uint64_t v179 = qword_1EB985528;
            swift_retain();
            if (v179 != -1) {
              swift_once();
            }
            sub_1B6A4EEA4(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
            uint64_t v180 = swift_allocObject();
            *(_OWORD *)(v180 + 16) = v246;
            *(void *)(v180 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v180 + 64) = sub_1B678615C();
            unint64_t v181 = v245 | 0x8000000000000000;
            *(void *)(v180 + 32) = 0xD000000000000035;
            *(void *)(v180 + 40) = v181;
            sub_1B6E31258();
            swift_bridgeObjectRelease();
            swift_retain();
            *(void *)&long long v262 = v178;
            char v182 = v177;
            uint64_t v183 = v250;
            sub_1B6E31088();
            uint64_t v184 = (uint64_t)v252;
            uint64_t v185 = v253[12];
            uint64_t v186 = v253[16];
            uint64_t v187 = &v252[v253[20]];
            (*(void (**)(char *, char *, uint64_t))v247)(v252, v183, v251);
            *(unsigned char *)(v184 + v185) = v182;
            *(void *)(v184 + v186) = 0;
            *(void *)uint64_t v187 = 0xD000000000000035;
            *((void *)v187 + 1) = v181;
            sub_1B6E31368();
            swift_release();
            sub_1B67A3738(v184);
            swift_release();
            swift_release();
            uint64_t v145 = v255;
            goto LABEL_116;
          }
          LODWORD(v265) = *((_DWORD *)v254 + 7);
          int v170 = v254[32];
          swift_bridgeObjectRetain_n();
          *(void *)&long long v262 = v168;
          __int16 v171 = (uint64_t *)(v168 + 40);
          do
          {
            uint64_t v147 = *v171;
            if (v170)
            {
              swift_unknownObjectRetain();
LABEL_137:
              swift_bridgeObjectRelease_n();
              goto LABEL_138;
            }
            uint64_t v172 = swift_getObjectType();
            long long v173 = *(uint64_t (**)(uint64_t, uint64_t))(v147 + 144);
            swift_unknownObjectRetain();
            if ((v173(v172, v147) & 0xFFFFFFFFFFLL) == 0x200000000) {
              goto LABEL_137;
            }
            uint64_t v174 = v173(v172, v147);
            if ((v174 & 0xFE00000000) == 0 && v265 == v174) {
              goto LABEL_137;
            }
            swift_unknownObjectRelease();
            v171 += 2;
            --v169;
          }
          while (v169);
          swift_bridgeObjectRelease_n();
          uint64_t v176 = *(void *)(v259 + 224);
          if (!*(void *)(v176 + 16)) {
            goto LABEL_129;
          }
          uint64_t v147 = *(void *)(v176 + 40);
          swift_unknownObjectRetain();
LABEL_138:
          uint64_t v145 = v255;
        }
        long long v148 = v258;
        long long v149 = &v258[48 * i];
        uint64_t v150 = (_OWORD *)(v257 + (i << 6));
        uint64_t v151 = swift_getObjectType();
        uint64_t v152 = (float32x2_t *)&v148[48 * i];
        char v153 = v152[4].i8[1];
        swift_unknownObjectRetain();
        char v154 = sub_1B6333E48(v153, v151, v147) & 1;
        float v155 = *(float *)v149;
        sub_1B6334048(v151, v147);
        float v157 = v156;
        float v158 = v152[3].f32[0];
        float v159 = v152[3].f32[1];
        LOBYTE(v149) = v152[4].i8[0];
        float32x2_t v160 = v152[5];
        float32x2_t v161 = sub_1B6333FD4(v151, v147);
        sub_1B6333B58((char)v149, v154, v155, v157, v158, v159, v160, *(void *)&v161, 0);
        long long v265 = v162;
        long long v261 = v164;
        long long v262 = (__int128)v163;
        long long v260 = v165;
        swift_unknownObjectRelease_n();
        int32x4_t v166 = (int32x4_t)v262;
        *uint64_t v150 = v265;
        v150[1] = v166;
        long long v167 = v260;
        v150[2] = v261;
        v150[3] = v167;
LABEL_116:
        uint64_t v12 = v264;
      }
    }
LABEL_140:
    int v132 = v242;
    uint64_t v133 = v248;
    sub_1B6345178(v242, (unsigned __int16 **)v284, (uint64_t)v286);
    uint64_t v248 = v133;
    long long v189 = v254;
    sub_1B634507C(v254);
    uint64_t v134 = v240;
    ecs_stack_allocator_pop_snapshot(v240);
    LOBYTE(v133) = v241;
    if (v241)
    {
      os_unfair_lock_unlock(*((os_unfair_lock_t *)v189 + 43));
      os_unfair_lock_unlock(*((os_unfair_lock_t *)v189 + 47));
    }
    swift_release();
    uint64_t v135 = v244 + 1;
    if (v244 + 1 != v243) {
      continue;
    }
    break;
  }
  sub_1B632F170(v281);
LABEL_170:
  swift_release();
  swift_unknownObjectRelease();
  sub_1B632F170(v281);
}

void sub_1B6333B58(char a1, char a2, float a3, float a4, float a5, float a6, float32x2_t a7, uint64_t a8, char a9)
{
  float v12 = fmaxf(a5, 0.0001);
  if ((float)(v12 + 0.0001) < a6) {
    float v13 = a6;
  }
  else {
    float v13 = v12 + 0.0001;
  }
  float v14 = a3 * 0.5;
  int8x8_t v15 = vmvn_s8((int8x8_t)vceqz_f32(a7));
  __int32 v16 = v15.i32[1];
  if (v15.i32[1] >= v15.i32[0]) {
    __int32 v16 = v15.i32[0];
  }
  if (v16 & 0x80000000) == 0 || (a9)
  {
    *(float *)&double v17 = 1.0 / tanf(v14);
    if (a2) {
      LODWORD(v18) = LODWORD(v17);
    }
    else {
      *(float *)&double v18 = *(float *)&v17 / a4;
    }
    unsigned int v19 = LODWORD(v18);
    *(float *)&double v17 = v12;
    *(float *)&double v18 = v13;
    sub_1B6333D80(a1 & 1, v17, v18, (float32x4_t)v19);
  }
  else
  {
    tanf(v14);
  }
}

double sub_1B6333D80(char a1, double a2, double a3, float32x4_t a4)
{
  if (a1) {
    a4.i64[0] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F300, a4.f32[0]), (float32x4_t)xmmword_1B6E4F320, *(float32x2_t *)a4.f32, 1), (float32x4_t)xmmword_1B6E4F340, a4, 2), (float32x4_t)xmmword_1B6E4F360, a4, 3).u64[0];
  }
  return *(double *)a4.i64;
}

uint64_t sub_1B6333E48(char a1, uint64_t a2, uint64_t a3)
{
  int v6 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(a3 + 136))(a2, a3);
  switch(v6)
  {
    case 0:
      return a1 & 1;
    case 1:
      uint64_t v7 = *(double (**)(uint64_t, uint64_t))(a3 + 72);
      v7(a2, a3);
      if (v8 <= 0.0)
      {
        return 1;
      }
      else
      {
        double v9 = v7(a2, a3);
        v7(a2, a3);
        float v11 = v9 / v10;
        return v11 >= 1.0;
      }
    case 2:
      float v13 = *(double (**)(uint64_t, uint64_t))(a3 + 72);
      v13(a2, a3);
      if (v14 <= 0.0)
      {
        return 0;
      }
      else
      {
        double v15 = v13(a2, a3);
        v13(a2, a3);
        float v17 = v15 / v16;
        return v17 < 1.0;
      }
    default:
      uint64_t result = sub_1B6E337C8();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1B6333FCC()
{
  return *(unsigned __int8 *)(v0 + 176);
}

float32x2_t sub_1B6333FD4(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v4 = *(double (**)(void))(a2 + 72);
  double v8 = v4();
  ((void (*)(uint64_t, uint64_t))v4)(a1, a2);
  v5.f64[0] = v8;
  v5.f64[1] = v6;
  return vcvt_f32_f64(v5);
}

uint64_t sub_1B6334048(uint64_t a1, uint64_t a2)
{
  Swift::UInt32 v4 = *(uint64_t (**)(void))(a2 + 72);
  uint64_t result = v4();
  if (v6 > 0.0)
  {
    ((void (*)(uint64_t, uint64_t, float))v4)(a1, a2, 1.0);
    return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  }
  return result;
}

id sub_1B63340D8()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_drawableSize);
}

uint64_t sub_1B63340E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
  uint64_t v5 = a1 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock + 24));
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_applicationInBackground)) {
    char v6 = 1;
  }
  else {
    char v6 = *(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_sceneInBackground);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 24));
  swift_retain();
  uint64_t v7 = (void *)sub_1B6334A9C(v4, v6);
  swift_release();
  if (!v7) {
    return 0;
  }
  uint64_t v8 = *(void *)(v2 + 16);
  swift_retain();
  sub_1B62CA210(v8 + 624, (uint64_t)v42, (unint64_t *)&unk_1EB9852B0);
  sub_1B62CA210((uint64_t)v42, (uint64_t)v43, (unint64_t *)&unk_1EB9852B0);
  if (sub_1B6388C10(v43) == 1)
  {
    swift_release();
  }
  else
  {
    sub_1B62CA210((uint64_t)v42, (uint64_t)&v38, (unint64_t *)&unk_1EB9852B0);
    uint64_t v10 = v39;
    double v11 = v40;
    uint64_t v12 = v41;
    uint64_t ObjectType = swift_getObjectType();
    double v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v10 + 16))(v12, v4, ObjectType, v10, v11);
    swift_release();
    if (v14)
    {
      BOOL v15 = objc_msgSend(v14, sel_storageMode) != (id)3;
LABEL_23:
      uint64_t v17 = 2;
      goto LABEL_24;
    }
  }
  uint64_t v16 = *(void *)(v2 + 24);
  if (v16 == 2) {
    goto LABEL_28;
  }
  if ((v16 & 0x1000000000000) == 0)
  {
    BOOL v15 = 0;
    uint64_t v17 = 0;
    double v14 = 0;
    goto LABEL_24;
  }
  uint64_t v18 = *(void *)(*(void *)(*(void *)(v2 + 16) + 264) + 40);
  uint64_t v19 = *(void *)(v18 + 16);
  swift_retain();
  if (!v19 || (uint64_t v20 = sub_1B62B2CE0(0x445F45555141504FLL, 0xEC00000048545045), (v21 & 1) == 0))
  {
    swift_release();
    unsigned __int16 v22 = (unsigned __int16)objc_msgSend(v7, sel_width, RGTextureDescriptor.init()((uint64_t)v44).n128_f64[0]);
    unsigned __int16 v23 = (unsigned __int16)objc_msgSend(v7, sel_height);
    uint64_t v24 = *(void *)(*(void *)(v2 + 16) + 592);
    unsigned int v25 = objc_msgSend((id)swift_unknownObjectRetain(), sel_supportsMemorylessRenderTargets);
    swift_unknownObjectRelease();
    if (v25 && *(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_canUseImGUI) != 1) {
      uint64_t v26 = 3;
    }
    else {
      uint64_t v26 = 2;
    }
    LOWORD(v52) = v22;
    WORD1(v52) = v23;
    HIDWORD(v52) = v45;
    char v53 = 1;
    char v54 = v46;
    char v55 = v47;
    uint64_t v56 = v24;
    uint64_t v57 = v48;
    uint64_t v58 = v26;
    uint64_t v59 = 7;
    long long v60 = v49;
    uint64_t v61 = v50;
    int v62 = v51;
    swift_retain();
    double v14 = (void *)sub_1B6331208(0x445F45555141504FLL, 0xEC00000048545045, &v52);
    swift_release();
    BOOL v15 = 0;
    goto LABEL_23;
  }
  double v14 = *(void **)(*(void *)(v18 + 56) + 8 * v20);
  swift_unknownObjectRetain();
  swift_release();
  BOOL v15 = 0;
  if (objc_msgSend(v14, sel_storageMode) == (id)3) {
    uint64_t v17 = 2;
  }
  else {
    uint64_t v17 = 1;
  }
LABEL_24:
  uint64_t v27 = *(void *)(v2 + 16);
  swift_retain_n();
  sub_1B62CA210(v27 + 624, (uint64_t)v37, (unint64_t *)&unk_1EB9852B0);
  sub_1B62CA210((uint64_t)v37, (uint64_t)&v38, (unint64_t *)&unk_1EB9852B0);
  if (sub_1B6388C10(&v38) != 1)
  {
    uint64_t v28 = v39;
    swift_unknownObjectRetain();
    sub_1B6334724((uint64_t)v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B63347EC);
    swift_release();
    swift_unknownObjectRetain();
    sub_1B6334724((uint64_t)v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B6334798);
    uint64_t v29 = swift_getObjectType();
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 104))(v29, v28);
    swift_unknownObjectRelease();
    uint64_t v31 = *(void *)(v2 + 16);
    swift_retain();
    sub_1B62CA210(v31 + 624, (uint64_t)v35, (unint64_t *)&unk_1EB9852B0);
    sub_1B62CA210((uint64_t)v35, (uint64_t)v36, (unint64_t *)&unk_1EB9852B0);
    if (sub_1B6388C10(v36) != 1)
    {
      uint64_t v32 = v36[1];
      sub_1B6334724((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B63347EC);
      swift_release();
      swift_unknownObjectRetain();
      sub_1B6334724((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B6334798);
      uint64_t v33 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v32 + 112))(v33, v32);
      swift_unknownObjectRelease();
      double v9 = sub_1B633483C((uint64_t)v7, v30, (uint64_t)v14, v17, v15, 0);
      swift_release();
      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease();
      return (uint64_t)v9;
    }
  }
LABEL_28:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6334724(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 152);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    v4);
  return a1;
}

uint64_t sub_1B6334798(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B63347E4()
{
  return 0;
}

uint64_t sub_1B63347EC(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

void *sub_1B633483C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v10 = (id)sub_1B6388608();
  if (!v10) {
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F352E0]), sel_init);
  }
  double v11 = v10;
  sub_1B6388228();
  id v12 = objc_msgSend(v11, sel_colorAttachments);
  id v13 = objc_msgSend(v12, sel_objectAtIndexedSubscript_, 0);

  double v15 = nullsub_1(v14);
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  objc_msgSend(v13, sel_setTexture_, a1);
  objc_msgSend(v13, sel_setLoadAction_, a2);
  objc_msgSend(v13, sel_setStoreAction_, 1);
  objc_msgSend(v13, sel_setClearColor_, v15, v17, v19, v21);
  objc_msgSend(v13, sel_setLevel_, a6);

  if (a3)
  {
    swift_unknownObjectRetain();
    id v22 = objc_msgSend(v11, sel_depthAttachment);
    swift_unknownObjectRetain();
    objc_msgSend(v22, sel_setTexture_, a3);
    objc_msgSend(v22, sel_setLoadAction_, a4);
    objc_msgSend(v22, sel_setStoreAction_, a5);
    objc_msgSend(v22, sel_setClearDepth_, 0.0);
    objc_msgSend(v22, sel_setLevel_, a6);

    swift_unknownObjectRelease();
    sub_1B6331D0C();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  return v11;
}

uint64_t sub_1B6334A88()
{
  return *(void *)(v0 + 32);
}

double sub_1B6334A90()
{
  return *(double *)(v0 + 40);
}

uint64_t sub_1B6334A9C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  sub_1B6388B3C(v3 + 624, (uint64_t)v10);
  sub_1B6388B3C((uint64_t)v10, (uint64_t)v11);
  if (sub_1B6388C10(v11) == 1) {
    return 0;
  }
  if (*(unsigned char *)(v3 + 776) == 1)
  {
    uint64_t v6 = *(void *)(v3 + 768);
  }
  else
  {
    uint64_t v7 = *(void *)(v3 + 632);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t, double))(v7 + 8))(*(void *)(v3 + 648), a1, a2 & 1, ObjectType, v7, *(double *)(v3 + 640));
    swift_unknownObjectRelease();
    *(void *)(v3 + 768) = v6;
    *(unsigned char *)(v3 + 776) = 1;
  }
  swift_unknownObjectRetain();
  return v6;
}

id sub_1B6334B88(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0 && (objc_msgSend(*(id *)(v3 + 16), sel_isDrawableAvailable) & 1) == 0)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v15 = sub_1B6E32168();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v17[0] = 0;
    swift_retain();
    uint64_t v14 = 0xD00000000000003ELL;
    uint64_t v12 = 0x80000001B6F37AD0;
    int v13 = v15;
    goto LABEL_15;
  }
  id v6 = objc_msgSend(*(id *)(v3 + 16), sel_nextDrawable);
  if (!v6)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v11 = sub_1B6E32168();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v17[0] = 0;
    swift_retain();
    uint64_t v12 = 0x80000001B6F37A90;
    int v13 = v11;
    uint64_t v14 = 0xD000000000000019;
LABEL_15:
    sub_1B6B33E34(v13, v17, v14, v12);
    swift_release();
    swift_release();
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a2;
  v17[4] = (uint64_t)sub_1B6293FDC;
  v17[5] = v8;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = (uint64_t)sub_1B638F0B8;
  v17[3] = (uint64_t)&unk_1F0FBA018;
  double v9 = _Block_copy(v17);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(a1, sel_addScheduledHandler_, v9);
  _Block_release(v9);
  id v10 = objc_msgSend(v7, sel_texture);
  swift_unknownObjectRelease();
  return v10;
}

uint64_t *sub_1B6334E4C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  sub_1B62F46E8();
  int32x2_t v78 = v3;
  sub_1B62EBAB4();
  BOOL v4 = sub_1B62FACF8((uint64_t)&type metadata for ParticleAffectedByGravity);
  swift_release();
  sub_1B62F46E8();
  float v6 = v5;
  *(double *)v7.i64 = sub_1B6335378();
  float32x4_t v74 = v8;
  float32x4_t v76 = v7;
  float32x4_t v72 = v9;
  long long v10 = *(_OWORD *)(v1 + 32);
  v92[0] = *(_OWORD *)(v1 + 16);
  v92[1] = v10;
  uint64_t v93 = *(void *)(v1 + 48);
  sub_1B62C9DA8(v2, (uint64_t)v92, 0x200000000, v81);
  sub_1B6309B40((uint64_t)v81, (uint64_t)v82);
  uint64_t v80 = (unsigned __int16 *)v82[0];
  if (!v82[0]) {
    return (uint64_t *)swift_release();
  }
  uint64_t v66 = v86;
  if (v86 > 0)
  {
    uint64_t v65 = v83;
    if (v83)
    {
      uint64_t v11 = 0;
      float32x4_t v12 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v72, (float32x4_t)0), v74, v6 * -9.8), (float32x4_t)0, v76);
      v12.i32[3] = 0;
      float32x4_t v63 = v12;
      float32x4_t v64 = (float32x4_t)vdupq_lane_s32(v78, 0);
      uint64_t v62 = v82[5];
      int v13 = v85;
      uint64_t v14 = v85[4];
      uint64_t v61 = v84;
      int v15 = *(unsigned __int8 *)(v84 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v59 = v85 + 8;
      uint64_t v79 = v82[0] + 41;
      char v58 = v4;
      int v60 = v15;
      uint64_t v57 = v14;
      do
      {
        double v16 = (unsigned int *)(v62 + 48 * v11);
        uint64_t v17 = *v16;
        uint64_t v18 = v16[1];
        uint64_t v19 = v16[2];
        uint64_t v71 = v11;
        uint64_t v73 = *((void *)v16 + 2);
        uint64_t v20 = *((void *)v16 + 3);
        uint64_t v21 = *((void *)v16 + 4);
        uint64_t v22 = *((void *)v16 + 5);
        if (v15)
        {
          unsigned __int16 v23 = *(os_unfair_lock_s **)(v22 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v23);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v14);
        uint64_t v69 = v13[7];
        uint64_t v70 = v13[6];
        uint64_t v67 = v13[9];
        uint64_t v68 = v13[8];
        uint64_t v75 = v13[10];
        uint64_t v24 = v13[4];
        uint64_t v25 = *(void *)(*(void *)(*(void *)(*(void *)(v22 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v13[6] = ecs_stack_allocator_allocate(v24, 48 * v25, 8);
        v13[7] = v25;
        v59[1] = 0;
        _OWORD v59[2] = 0;
        *uint64_t v59 = 0;
        swift_release();
        v87[0] = v61;
        v87[1] = v22;
        uint64_t v77 = v22;
        v87[2] = v13;
        v87[3] = v19;
        v87[4] = (v18 - v17 + v19);
        v87[5] = v66;
        v87[6] = v17;
        v87[7] = v18;
        v87[8] = 0;
        v87[9] = 0;
        char v88 = 1;
        uint64_t v89 = v73;
        uint64_t v90 = v20;
        uint64_t v91 = v21;
        sub_1B6B5A888(v87, v58, v63, v64);
        unint64_t v26 = v13[6];
        uint64_t v27 = v13[8];
        if (!v27)
        {
          uint64_t v53 = v13[7];
          char v54 = (void *)v13[4];
          uint64_t v55 = v71;
          uint64_t v14 = v57;
          goto LABEL_46;
        }
        for (uint64_t i = 0; i != v27; ++i)
        {
          uint64_t v30 = (uint64_t *)(v26 + 48 * i);
          uint64_t v31 = *v30;
          uint64_t v32 = (void (*)(uint64_t))v30[4];
          uint64_t v33 = v13[9];
          if (v33) {
            BOOL v34 = v31 == v33;
          }
          else {
            BOOL v34 = 0;
          }
          if (v34 || !v80[11]) {
            goto LABEL_11;
          }
          unint64_t v35 = v80[9];
          uint64_t v36 = (void *)(v79 + v80[8]);
          uint64_t v37 = v30[2];
          uint64_t v38 = v36;
          unint64_t v39 = v35 >> 4;
          uint64_t v40 = v79;
          if (v35 >= 0x10)
          {
            while (*v38 != v31)
            {
              ++v40;
              v38 += 2;
              if (!--v39) {
                goto LABEL_26;
              }
            }
            unsigned int v41 = *(unsigned __int8 *)(v40 + v80[10]);
            BOOL v42 = v41 > 5;
            int v43 = (1 << v41) & 0x23;
            if (v42 || v43 == 0)
            {
LABEL_11:
              uint64_t v29 = swift_retain();
              v32(v29);
              swift_release();
              continue;
            }
          }
LABEL_26:
          if (swift_conformsToProtocol2()) {
            uint64_t v45 = v37;
          }
          else {
            uint64_t v45 = 0;
          }
          if (v45)
          {
            if (v35 < 0x10) {
              goto LABEL_11;
            }
            char v46 = v36;
            unint64_t v47 = v35 >> 4;
            uint64_t v48 = v79;
            while (*v46 != v45)
            {
              ++v48;
              v46 += 2;
              if (!--v47) {
                goto LABEL_39;
              }
            }
            unsigned int v49 = *(unsigned __int8 *)(v48 + v80[10]);
            BOOL v42 = v49 > 5;
            int v50 = (1 << v49) & 0x23;
            if (v42 || v50 == 0) {
              goto LABEL_11;
            }
LABEL_39:
            uint64_t v52 = 16 * (v35 >> 4);
            while (*v36 != v45)
            {
              v36 += 2;
              v52 -= 16;
              if (!v52) {
                goto LABEL_11;
              }
            }
          }
        }
        uint64_t v53 = v13[7];
        unint64_t v26 = v13[6];
        char v54 = (void *)v13[4];
        uint64_t v55 = v71;
        uint64_t v14 = v57;
        if ((uint64_t)v13[8] >= 1) {
          swift_arrayDestroy();
        }
LABEL_46:
        ecs_stack_allocator_deallocate(v54, v26, 48 * v53);
        v13[6] = v70;
        v13[7] = v69;
        v13[8] = v68;
        v13[9] = v67;
        v13[10] = v75;
        sub_1B634507C((char *)v77);
        ecs_stack_allocator_pop_snapshot(v14);
        int v15 = v60;
        if (v60)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v77 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v77 + 376));
        }
        swift_release();
        uint64_t v11 = v55 + 1;
      }
      while (v11 != v65);
    }
  }
  swift_release();
  return sub_1B632F170(v81);
}

double sub_1B6335378()
{
  if (sub_1B62E9F00((uint64_t (*)(void, void, uint64_t))sub_1B62EA0CC)) {
    return sub_1B6A81A4C();
  }
  uint64_t v2 = *(void *)(*(void *)v0 + 176);
  swift_retain();
  swift_retain();
  sub_1B6335480(v2, &v4);
  double v3 = *(double *)v4.i64;
  swift_release();
  swift_release();
  sub_1B633C598((uint64_t)&v4, (uint64_t)v5);
  if ((v5[64] & 1) == 0) {
    return v3;
  }
  *(void *)&double result = 1065353216;
  return result;
}

void sub_1B6335480(uint64_t a1@<X0>, simd_float4 *a2@<X8>)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v4 = sub_1B636E9A8((uint64_t)&type metadata for WorldFromScene);
  char v7 = v6;
  if (v6)
  {
    float32x4_t v12 = (simd_float4x4 *)(*(void *)(a1 + 16) + v4);
    uint64_t v13 = 32 * v5;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + 32 * v5 + 24));
    os_unfair_recursive_lock_unlock();
    simd_float4x4 v18 = __invert_f4(*v12);
    simd_float4 v16 = v18.columns[1];
    simd_float4 v17 = v18.columns[0];
    simd_float4 v14 = v18.columns[3];
    simd_float4 v15 = v18.columns[2];
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + v13 + 24));
    simd_float4 v11 = v14;
    simd_float4 v10 = v15;
    simd_float4 v9 = v16;
    simd_float4 v8 = v17;
  }
  else
  {
    os_unfair_recursive_lock_unlock();
    simd_float4 v8 = 0uLL;
    simd_float4 v9 = 0uLL;
    simd_float4 v10 = 0uLL;
    simd_float4 v11 = 0uLL;
  }
  *a2 = v8;
  a2[1] = v9;
  a2[2] = v10;
  a2[3] = v11;
  a2[4].i8[0] = (v7 & 1) == 0;
}

uint64_t sub_1B6335570()
{
  return type metadata accessor for ParticleColorInit.System();
}

uint64_t type metadata accessor for ParticleColorInit.System()
{
  return self;
}

const char *sub_1B63355B4()
{
  return "SetParticleColor.CPU";
}

uint64_t sub_1B63355C8()
{
  return type metadata accessor for ParticleAngleInit.System();
}

uint64_t type metadata accessor for ParticleAngleInit.System()
{
  return self;
}

const char *sub_1B633560C()
{
  return "SetAngle.CPU";
}

uint64_t sub_1B6335620(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for PropertyDescription();
  double v3 = (void *)sub_1B6E314E8();
  uint64_t v4 = sub_1B6335858(0, v2, 0, MEMORY[0x1E4FBC860]);
  if (!v2) {
    return (uint64_t)v3;
  }
  for (uint64_t i = (uint64_t *)(a1 + 48); ; i += 3)
  {
    uint64_t v8 = *(i - 2);
    uint64_t v7 = *(i - 1);
    uint64_t v9 = *i;
    unint64_t v10 = v4[2];
    unint64_t v11 = v4[3];
    swift_bridgeObjectRetain_n();
    swift_retain();
    if (v10 >= v11 >> 1) {
      uint64_t v4 = sub_1B6335858(v11 > 1, v10 + 1, 1, v4);
    }
    v4[2] = v10 + 1;
    float32x4_t v12 = &v4[2 * v10];
    v12[4] = v8;
    void v12[5] = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v15 = sub_1B62B2CE0(v8, v7);
    char v16 = v14;
    uint64_t v17 = v3[2] + ((v14 & 1) == 0);
    if (v3[3] < v17) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v14) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1B6ACD41C();
      if (v16)
      {
LABEL_13:
        uint64_t v20 = v3[7];
        swift_release();
        *(void *)(v20 + 8 * v15) = v9;
        goto LABEL_4;
      }
    }
LABEL_3:
    v3[(v15 >> 6) + 8] |= 1 << v15;
    char v6 = (uint64_t *)(v3[6] + 16 * v15);
    *char v6 = v8;
    v6[1] = v7;
    *(void *)(v3[7] + 8 * v15) = v9;
    ++v3[2];
    swift_bridgeObjectRetain();
LABEL_4:
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (!--v2) {
      return (uint64_t)v3;
    }
  }
  sub_1B62B3CB0(v17, isUniquelyReferenced_nonNull_native);
  uint64_t v18 = sub_1B62B2CE0(v8, v7);
  if ((v16 & 1) == (v19 & 1))
  {
    unint64_t v15 = v18;
    if (v16) {
      goto LABEL_13;
    }
    goto LABEL_3;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

void *sub_1B6335858(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    unint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    v11[2] = v9;
    v11[3] = 2 * (v13 >> 4);
    char v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B6335970(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  char v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
    memmove(v14, a4 + 4, 16 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B6335970(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 16 * (a2 - a1), a4 + 32 + 16 * a1 < v4) ? (v5 = a4 + 32 + 16 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t type metadata accessor for PropertyDescription()
{
  return self;
}

uint64_t *sub_1B6335A7C(uint64_t *a1)
{
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    sub_1B686F3EC((uint64_t)a1);
    *(unsigned char *)(v1 + 16) = 0;
  }
  sub_1B6337628((uint64_t)a1);
  sub_1B6335AD8((uint64_t)a1);

  return sub_1B6336990(a1);
}

void sub_1B6335AD8(uint64_t a1)
{
  uint64_t v105 = type metadata accessor for GraphScript(0);
  uint64_t v103 = *(void *)(v105 - 8);
  MEMORY[0x1F4188790](v105, v2);
  BOOL v111 = (uint64_t *)((char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v104 = v4;
  uint64_t v102 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v110 = (uint64_t)&v93 - v6;
  uint64_t v112 = a1;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 96) != 1
    || (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 99) & 1) != 0)
  {
    return;
  }
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v135 = qword_1EB997A18;
  int v136 = 0;
  char v137 = 2;
  uint64_t v138 = 0;
  char v139 = 2;
  uint64_t v140 = 0;
  swift_retain();
  sub_1B63366F8(1, 1, (uint64_t)v117);
  swift_release();
  v132[0] = v117[0];
  v132[1] = v117[1];
  uint64_t v133 = v118;
  sub_1B62C9DA8(v112, (uint64_t)v132, 0x200000000, v119);
  sub_1B62CA27C((uint64_t)v119, (uint64_t)v120, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v120[0])
  {
    sub_1B62CA064((uint64_t)v117);
    return;
  }
  long long v127 = v120[0];
  long long v128 = v120[1];
  uint64_t v129 = v121;
  if (v126 <= 0 || (uint64_t v101 = v123) == 0)
  {
    sub_1B62CA064((uint64_t)v117);
    goto LABEL_89;
  }
  uint64_t v100 = v122;
  uint64_t v7 = v125;
  uint64_t v114 = v124;
  uint64_t v8 = v125[4];
  int v9 = *(unsigned __int8 *)(v124 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v93 = (uint64_t *)(v112 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  float v94 = v125 + 13;
  float v95 = v125 + 8;
  float v96 = v125 + 6;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v98 = v8;
  int32x2_t v99 = v7;
  int v97 = v9;
  do
  {
    uint64_t v106 = v11;
    uint64_t v107 = v10;
    int64_t v12 = (unsigned int *)(v100 + 48 * v10);
    uint64_t v13 = *v12;
    uint64_t v116 = v12[1];
    uint64_t v14 = *((void *)v12 + 3);
    float v109 = (uint64_t *)*((void *)v12 + 2);
    uint64_t v16 = *((void *)v12 + 4);
    uint64_t v15 = *((void *)v12 + 5);
    if (v9)
    {
      uint64_t v17 = *(os_unfair_lock_s **)(v15 + 376);
      swift_retain();
      os_unfair_lock_lock(v17);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v8);
    sub_1B62CA27C((uint64_t)v96, (uint64_t)v134, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v18 = v7[4];
    uint64_t v19 = *(void *)(*(void *)(*(void *)(*(void *)(v15 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v7[6] = ecs_stack_allocator_allocate(v18, 48 * v19, 8);
    v7[7] = v19;
    uint64_t v20 = v95;
    v95[1] = 0;
    v20[2] = 0;
    void *v20 = 0;
    swift_release();
    uint64_t v21 = v109;
    uint64_t v22 = sub_1B62C9024(v105, (uint64_t)&off_1F0F55610, v109, v14, v16, (uint64_t)v7);
    uint64_t v113 = sub_1B62C9024(v104, (uint64_t)&off_1F0F61BF0, v21, v14, v16, (uint64_t)v7);
    if (!v21)
    {
      uint64_t v55 = v114;
      if (v13 == v116) {
        goto LABEL_44;
      }
      uint64_t v115 = *(void *)(v103 + 72);
      float v109 = *(uint64_t **)(v102 + 72);
      uint64_t v65 = v22 + 41;
      while (1)
      {
        if (*(unsigned char *)(v65 + v115 * v13) == 1)
        {
          uint64_t v66 = *(void *)(v15 + 16);
          char v67 = *(unsigned char *)(v15 + 184);
          swift_retain();
          if (v67) {
            goto LABEL_91;
          }
          int v68 = *(_DWORD *)(*(void *)(v15 + 168) + 4 * v13);
          int v69 = *(_DWORD *)(*(void *)(v66 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v68 + 8);
          swift_retain();
          swift_release();
          uint64_t v70 = *(void *)(v55 + 208);
          if (*(void *)(v70 + 16) && (unint64_t v71 = sub_1B62C1A30((uint64_t)&type metadata for IsSubEntityOf), (v72 & 1) != 0))
          {
            uint64_t v73 = *(void *)(*(void *)(v70 + 56) + 24 * v71);
            uint64_t v74 = *(void *)(v73 + 16);
            swift_bridgeObjectRetain();
            if (v74)
            {
              uint64_t v75 = (int *)(v73 + 44);
              while (*(v75 - 3) != v68 || *(v75 - 2) != v69)
              {
                v75 += 4;
                if (!--v74) {
                  goto LABEL_66;
                }
              }
              uint64_t v89 = *(v75 - 1);
              int v90 = *v75;
              swift_release();
              swift_bridgeObjectRelease();
              if ((v89 != -1 || v90 != 0) && (v89 & 0x80000000) == 0 && v93[1] > v89)
              {
                uint64_t v92 = *v93;
                if ((v90 == -1 || *(_DWORD *)(v92 + 12 * (int)v89 + 8) == v90)
                  && *(unsigned char *)(*(void *)(*(void *)(v112 + 136) + 8 * *(int *)(v92 + 12 * (int)v89) + 32) + 120) != 1)
                {
                  goto LABEL_54;
                }
              }
            }
            else
            {
LABEL_66:
              swift_release();
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            swift_release();
          }
          char v77 = *(unsigned char *)(v15 + 184);
          uint64_t v78 = swift_retain();
          if ((v77 & 1) != 0
            || (unsigned int v79 = *(_DWORD *)(*(void *)(v15 + 168) + 4 * v13),
                uint64_t v80 = *(unsigned int *)(*(void *)(v78 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                      + 12 * (int)v79
                                      + 8),
                swift_release(),
                char v81 = *(unsigned char *)(v15 + 184),
                uint64_t v82 = swift_retain(),
                (v81 & 1) != 0))
          {
LABEL_91:
            sub_1B6E32BE8();
            __break(1u);
            return;
          }
          uint64_t v83 = v113 + (void)v109 * v13;
          uint64_t v84 = *(unsigned int *)(*(void *)(v15 + 168) + 4 * v13);
          uint64_t v85 = *(unsigned int *)(*(void *)(v82 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v84 + 8);
          swift_release();
          sub_1B633908C(v83, v112, v79 | (unint64_t)(v80 << 32), v84 | (v85 << 32));
          uint64_t v86 = v110;
          sub_1B63395F4(v83, v110, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
          uint64_t v87 = v111;
          sub_1B633A164(v86, (uint64_t)v111, type metadata accessor for GraphScript);
          sub_1B633A914(v86, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
          uint64_t v88 = *v87;
          swift_bridgeObjectRetain();
          sub_1B62D4C9C((uint64_t)v87, type metadata accessor for GraphScript);
          sub_1B633B868(v88);
          swift_bridgeObjectRelease();
          uint64_t v55 = v114;
        }
LABEL_54:
        if (++v13 == v116) {
          goto LABEL_44;
        }
      }
    }
    if (v16)
    {
      uint64_t v23 = 0;
      uint64_t v24 = *(void *)(v103 + 72);
      uint64_t v108 = *(void *)(v102 + 72);
      uint64_t v115 = v22 + 41;
      uint64_t v116 = v24;
      do
      {
        if (*(unsigned char *)(v115 + v116 * v23) == 1)
        {
          uint64_t v25 = v16;
          uint64_t v26 = v109[v23];
          uint64_t v27 = *(void *)(v15 + 16);
          char v28 = *(unsigned char *)(v15 + 184);
          swift_retain();
          if (v28) {
            goto LABEL_91;
          }
          int v29 = *(_DWORD *)(*(void *)(v15 + 168) + 4 * v26);
          int v30 = *(_DWORD *)(*(void *)(v27 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v29 + 8);
          uint64_t v31 = v114;
          swift_retain();
          swift_release();
          uint64_t v32 = *(void *)(v31 + 208);
          if (*(void *)(v32 + 16) && (unint64_t v33 = sub_1B62C1A30((uint64_t)&type metadata for IsSubEntityOf), (v34 & 1) != 0))
          {
            uint64_t v35 = *(void *)(*(void *)(v32 + 56) + 24 * v33);
            uint64_t v36 = *(void *)(v35 + 16);
            swift_bridgeObjectRetain();
            if (v36)
            {
              uint64_t v37 = (int *)(v35 + 44);
              while (*(v37 - 3) != v29 || *(v37 - 2) != v30)
              {
                v37 += 4;
                if (!--v36) {
                  goto LABEL_28;
                }
              }
              uint64_t v51 = *(v37 - 1);
              int v52 = *v37;
              swift_release();
              swift_bridgeObjectRelease();
              if ((v51 != -1 || v52 != 0) && (v51 & 0x80000000) == 0 && v93[1] > v51)
              {
                uint64_t v16 = v25;
                uint64_t v54 = *v93;
                if ((v52 == -1 || *(_DWORD *)(v54 + 12 * (int)v51 + 8) == v52)
                  && *(unsigned char *)(*(void *)(*(void *)(v112 + 136) + 8 * *(int *)(v54 + 12 * (int)v51) + 32) + 120) != 1)
                {
                  goto LABEL_16;
                }
              }
            }
            else
            {
LABEL_28:
              swift_release();
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            swift_release();
          }
          char v39 = *(unsigned char *)(v15 + 184);
          uint64_t v40 = swift_retain();
          if (v39) {
            goto LABEL_91;
          }
          unsigned int v41 = *(_DWORD *)(*(void *)(v15 + 168) + 4 * v26);
          uint64_t v42 = *(unsigned int *)(*(void *)(v40 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v41 + 8);
          swift_release();
          char v43 = *(unsigned char *)(v15 + 184);
          uint64_t v44 = swift_retain();
          if (v43) {
            goto LABEL_91;
          }
          uint64_t v45 = v113 + v108 * v23;
          uint64_t v46 = *(unsigned int *)(*(void *)(v15 + 168) + 4 * v26);
          uint64_t v47 = *(unsigned int *)(*(void *)(v44 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v46 + 8);
          swift_release();
          sub_1B633908C(v45, v112, v41 | (unint64_t)(v42 << 32), v46 | (v47 << 32));
          uint64_t v48 = v110;
          sub_1B63395F4(v45, v110, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
          unsigned int v49 = v111;
          sub_1B633A164(v48, (uint64_t)v111, type metadata accessor for GraphScript);
          sub_1B633A914(v48, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
          uint64_t v50 = *v49;
          swift_bridgeObjectRetain();
          sub_1B62D4C9C((uint64_t)v49, type metadata accessor for GraphScript);
          sub_1B633B868(v50);
          swift_bridgeObjectRelease();
          uint64_t v16 = v25;
        }
LABEL_16:
        ++v23;
      }
      while (v23 != v16);
    }
LABEL_44:
    v130[0] = v127;
    v130[1] = v128;
    uint64_t v131 = v129;
    uint64_t v7 = v99;
    uint64_t v11 = v106;
    sub_1B6345178(v99, (unsigned __int16 **)v130, (uint64_t)v134);
    uint64_t v8 = v98;
    int v9 = v97;
    uint64_t v56 = v107;
    if (*(void *)(v7[13] + 16))
    {
      uint64_t v57 = swift_bridgeObjectRetain();
      sub_1B639147C(v57, v15);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v59 = v7[13];
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1B6399BB8(0, *(void *)(v59 + 16));
      }
      else
      {
        int v60 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(v59 + 24) >= 2uLL)
        {
          sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
          int v60 = (void *)swift_allocObject();
          size_t v61 = j__malloc_size(v60);
          _OWORD v60[2] = 0;
          v60[3] = 2 * ((uint64_t)(v61 - 32) / 72);
        }
        *float v94 = v60;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v7[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        uint64_t v62 = *(char **)(v15 + 232);
        float32x4_t v63 = *(char **)(v15 + 256);
        if (v62 == v63)
        {
          float32x4_t v64 = *(char **)(v15 + 240);
        }
        else
        {
          sub_1B666018C(v63, v62);
          float32x4_t v63 = *(char **)(v15 + 232);
          float32x4_t v64 = *(char **)(v15 + 240);
          if (v64 == v63)
          {
            float32x4_t v64 = 0;
            float32x4_t v63 = 0;
            *(void *)(v15 + 232) = 0;
            *(void *)(v15 + 240) = 0;
          }
        }
        *(void *)(v15 + 248) = v64;
        *(void *)(v15 + 256) = v63;
      }
    }
    ecs_stack_allocator_pop_snapshot(v8);
    if (v9)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 376));
    }
    swift_release();
    uint64_t v10 = v56 + 1;
  }
  while (v10 != v101);
  sub_1B62CA064((uint64_t)v117);
  sub_1B632F170(v119);
LABEL_89:
  sub_1B632F170(v119);
}

uint64_t sub_1B63366F8@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for GraphScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F55688;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F61C20;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  uint64_t v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  uint64_t v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t *sub_1B6336990(uint64_t *result)
{
  uint64_t v92 = (uint64_t)result;
  if (*((unsigned char *)result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 96) != 1
    || (*((unsigned char *)result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 99) & 1) != 0)
  {
    return result;
  }
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v113 = qword_1EB997A18;
  int v114 = 0;
  char v115 = 2;
  uint64_t v116 = 0;
  char v117 = 2;
  uint64_t v118 = 0;
  swift_retain();
  sub_1B6337390(1, 1, (uint64_t)v95);
  swift_release();
  v110[0] = v95[0];
  v110[1] = v95[1];
  uint64_t v111 = v96;
  sub_1B62C9DA8(v92, (uint64_t)v110, 0x200000000, v97);
  sub_1B62CA27C((uint64_t)v97, (uint64_t)v98, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v98[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v95);
  }
  long long v105 = v98[0];
  long long v106 = v98[1];
  uint64_t v107 = v99;
  if (v104 <= 0 || (uint64_t v83 = v101) == 0)
  {
    sub_1B62CA064((uint64_t)v95);
    return sub_1B632F170(v97);
  }
  uint64_t v82 = v100;
  uint64_t v1 = v103;
  uint64_t v2 = v103[4];
  uint64_t v91 = v102;
  int v86 = *(unsigned __int8 *)(v102 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v80 = (uint64_t)(v103 + 6);
  uint64_t v79 = type metadata accessor for SimpleScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  char v77 = (uint64_t *)(v92 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v87 = v1;
  uint64_t v78 = v1 + 8;
  uint64_t v94 = v3;
  uint64_t v75 = v3 - 8;
  float32x4_t v76 = v1 + 13;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v81 = v2;
  do
  {
    uint64_t v84 = v5;
    uint64_t v85 = v4;
    uint64_t v6 = (unsigned int *)(v82 + 48 * v4);
    uint64_t v7 = *v6;
    uint64_t v8 = *((void *)v6 + 3);
    uint64_t v88 = v6[1];
    int v90 = (uint64_t *)*((void *)v6 + 2);
    uint64_t v9 = *((void *)v6 + 4);
    uint64_t v10 = *((void *)v6 + 5);
    if (v86)
    {
      uint64_t v11 = *(os_unfair_lock_s **)(v10 + 376);
      swift_retain();
      os_unfair_lock_lock(v11);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v2);
    sub_1B62CA27C(v80, (uint64_t)v112, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v12 = v87[4];
    uint64_t v13 = *(void *)(*(void *)(*(void *)(*(void *)(v10 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v87[6] = ecs_stack_allocator_allocate(v12, 48 * v13, 8);
    v87[7] = v13;
    v78[1] = 0;
    v78[2] = 0;
    *uint64_t v78 = 0;
    swift_release();
    sub_1B62C9024(v79, (uint64_t)&off_1F0F5C308, v90, v8, v9, (uint64_t)v87);
    uint64_t v93 = sub_1B62C9024(v94, (uint64_t)&off_1F0F61BF0, v90, v8, v9, (uint64_t)v87);
    if (!v90)
    {
      unsigned int v41 = &unk_1EB97E000;
      if (v7 == v88) {
        goto LABEL_44;
      }
      uint64_t v50 = *(void *)(*(void *)v75 + 72);
      while (1)
      {
        uint64_t v51 = *(void *)(v10 + 16);
        swift_retain();
        if (*(unsigned char *)(v10 + 184))
        {
LABEL_91:
          uint64_t result = (uint64_t *)sub_1B6E32BE8();
          __break(1u);
          return result;
        }
        int v52 = *(_DWORD *)(*(void *)(v10 + 168) + 4 * v7);
        int v53 = *(_DWORD *)(*(void *)(v51 + v41[142]) + 12 * v52 + 8);
        swift_retain();
        swift_release();
        uint64_t v54 = *(void *)(v91 + 208);
        if (*(void *)(v54 + 16) && (unint64_t v55 = sub_1B62C1A30((uint64_t)&type metadata for IsSubEntityOf), (v56 & 1) != 0))
        {
          uint64_t v57 = *(void *)(*(void *)(v54 + 56) + 24 * v55);
          uint64_t v58 = *(void *)(v57 + 16);
          swift_bridgeObjectRetain();
          if (v58)
          {
            uint64_t v59 = (int *)(v57 + 44);
            while (*(v59 - 3) != v52 || *(v59 - 2) != v53)
            {
              v59 += 4;
              if (!--v58) {
                goto LABEL_64;
              }
            }
            uint64_t v71 = *(v59 - 1);
            int v72 = *v59;
            swift_release();
            swift_bridgeObjectRelease();
            if ((v71 != -1 || v72 != 0) && (v71 & 0x80000000) == 0 && v77[1] > v71)
            {
              uint64_t v74 = *v77;
              if ((v72 == -1 || *(_DWORD *)(v74 + 12 * (int)v71 + 8) == v72)
                && *(unsigned char *)(*(void *)(*(void *)(v92 + 136) + 8 * *(int *)(v74 + 12 * (int)v71) + 32) + 120) != 1)
              {
                goto LABEL_69;
              }
            }
          }
          else
          {
LABEL_64:
            swift_release();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_release();
        }
        char v61 = *(unsigned char *)(v10 + 184);
        uint64_t v62 = swift_retain();
        if (v61) {
          goto LABEL_91;
        }
        unsigned int v63 = *(_DWORD *)(*(void *)(v10 + 168) + 4 * v7);
        uint64_t v64 = *(unsigned int *)(*(void *)(v62 + v41[142]) + 12 * (int)v63 + 8);
        swift_release();
        char v65 = *(unsigned char *)(v10 + 184);
        uint64_t v66 = swift_retain();
        if (v65) {
          goto LABEL_91;
        }
        uint64_t v67 = *(unsigned int *)(*(void *)(v10 + 168) + 4 * v7);
        uint64_t v68 = *(unsigned int *)(*(void *)(v66 + v41[142]) + 12 * (int)v67 + 8);
        swift_release();
        uint64_t v69 = v67 | (v68 << 32);
        unsigned int v41 = (void *)&unk_1EB97E000;
        sub_1B6902C68(v93 + v50 * v7, v92, v63 | (unint64_t)(v64 << 32), v69);
        uint64_t v70 = swift_bridgeObjectRetain();
        sub_1B633B868(v70);
        swift_bridgeObjectRelease();
LABEL_69:
        if (++v7 == v88) {
          goto LABEL_44;
        }
      }
    }
    uint64_t v14 = &unk_1EB97E000;
    if (v9)
    {
      uint64_t v15 = 0;
      uint64_t v89 = *(void *)(*(void *)v75 + 72);
      do
      {
        uint64_t v16 = v90[v15];
        uint64_t v17 = *(void *)(v10 + 16);
        swift_retain();
        if (*(unsigned char *)(v10 + 184)) {
          goto LABEL_91;
        }
        int v18 = *(_DWORD *)(*(void *)(v10 + 168) + 4 * v16);
        int v19 = *(_DWORD *)(*(void *)(v17 + v14[142]) + 12 * v18 + 8);
        swift_retain();
        swift_release();
        uint64_t v20 = *(void *)(v91 + 208);
        if (*(void *)(v20 + 16) && (unint64_t v21 = sub_1B62C1A30((uint64_t)&type metadata for IsSubEntityOf), (v22 & 1) != 0))
        {
          uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 24 * v21);
          uint64_t v24 = *(void *)(v23 + 16);
          swift_bridgeObjectRetain();
          if (v24)
          {
            char v25 = (int *)(v23 + 44);
            while (*(v25 - 3) != v18 || *(v25 - 2) != v19)
            {
              v25 += 4;
              if (!--v24) {
                goto LABEL_26;
              }
            }
            uint64_t v37 = *(v25 - 1);
            int v38 = *v25;
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v14 = (void *)&unk_1EB97E000;
            if ((v37 != -1 || v38 != 0) && (v37 & 0x80000000) == 0 && v77[1] > v37)
            {
              uint64_t v40 = *v77;
              if ((v38 == -1 || *(_DWORD *)(v40 + 12 * (int)v37 + 8) == v38)
                && *(unsigned char *)(*(void *)(*(void *)(v92 + 136) + 8 * *(int *)(v40 + 12 * (int)v37) + 32) + 120) != 1)
              {
                goto LABEL_31;
              }
            }
          }
          else
          {
LABEL_26:
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v14 = (void *)&unk_1EB97E000;
          }
        }
        else
        {
          swift_release();
        }
        char v27 = *(unsigned char *)(v10 + 184);
        uint64_t v28 = swift_retain();
        if (v27) {
          goto LABEL_91;
        }
        unsigned int v29 = *(_DWORD *)(*(void *)(v10 + 168) + 4 * v16);
        uint64_t v30 = *(unsigned int *)(*(void *)(v28 + v14[142]) + 12 * (int)v29 + 8);
        swift_release();
        char v31 = *(unsigned char *)(v10 + 184);
        uint64_t v32 = swift_retain();
        if (v31) {
          goto LABEL_91;
        }
        uint64_t v33 = *(unsigned int *)(*(void *)(v10 + 168) + 4 * v16);
        uint64_t v34 = *(unsigned int *)(*(void *)(v32 + v14[142]) + 12 * (int)v33 + 8);
        swift_release();
        uint64_t v35 = v33 | (v34 << 32);
        uint64_t v14 = (void *)&unk_1EB97E000;
        sub_1B6902C68(v93 + v89 * v15, v92, v29 | (unint64_t)(v30 << 32), v35);
        uint64_t v36 = swift_bridgeObjectRetain();
        sub_1B633B868(v36);
        swift_bridgeObjectRelease();
LABEL_31:
        ++v15;
      }
      while (v15 != v9);
    }
LABEL_44:
    v108[0] = v105;
    v108[1] = v106;
    uint64_t v109 = v107;
    uint64_t v5 = v84;
    sub_1B6345178(v87, (unsigned __int16 **)v108, (uint64_t)v112);
    uint64_t v2 = v81;
    if (*(void *)(v87[13] + 16))
    {
      uint64_t v42 = swift_bridgeObjectRetain();
      sub_1B639147C(v42, v10);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v44 = v87[13];
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1B6399BB8(0, *(void *)(v44 + 16));
      }
      else
      {
        uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(v44 + 24) >= 2uLL)
        {
          sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
          uint64_t v45 = (void *)swift_allocObject();
          size_t v46 = j__malloc_size(v45);
          v45[2] = 0;
          v45[3] = 2 * ((uint64_t)(v46 - 32) / 72);
        }
        *float32x4_t v76 = v45;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v87[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        uint64_t v47 = *(char **)(v10 + 232);
        uint64_t v48 = *(char **)(v10 + 256);
        if (v47 == v48)
        {
          unsigned int v49 = *(char **)(v10 + 240);
        }
        else
        {
          sub_1B666018C(v48, v47);
          uint64_t v48 = *(char **)(v10 + 232);
          unsigned int v49 = *(char **)(v10 + 240);
          if (v49 == v48)
          {
            unsigned int v49 = 0;
            uint64_t v48 = 0;
            *(void *)(v10 + 232) = 0;
            *(void *)(v10 + 240) = 0;
          }
        }
        *(void *)(v10 + 248) = v49;
        *(void *)(v10 + 256) = v48;
      }
    }
    ecs_stack_allocator_pop_snapshot(v81);
    if (v86)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 376));
    }
    swift_release();
    uint64_t v4 = v85 + 1;
  }
  while (v85 + 1 != v83);
  sub_1B62CA064((uint64_t)v95);
  sub_1B632F170(v97);
  return sub_1B632F170(v97);
}

uint64_t sub_1B6337390@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for SimpleScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F5C338;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F61C20;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  uint64_t v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  char v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

void sub_1B6337628(uint64_t a1)
{
  sub_1B62E17B4();
  long long v227 = v3;
  MEMORY[0x1F4188790](v3, v4);
  unint64_t v226 = (char *)v200 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = sub_1B6E31098();
  uint64_t v6 = *(void *)(v225 - 8);
  MEMORY[0x1F4188790](v225, v7);
  uint64_t v224 = (char *)v200 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 96) == 1
    && (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 99) & 1) == 0)
  {
    uint64_t v230 = a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
    long long v9 = *(_OWORD *)(v1 + 120);
    v271[0] = *(_OWORD *)(v1 + 104);
    v271[1] = v9;
    uint64_t v272 = *(void *)(v1 + 136);
    sub_1B62C9DA8(a1, (uint64_t)v271, 0x200000000, v246);
    sub_1B62CA27C((uint64_t)v246, (uint64_t)v258, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    uint64_t v219 = a1;
    if (*(void *)&v258[0])
    {
      long long v265 = v258[0];
      long long v266 = v258[1];
      uint64_t v267 = v259;
      if (v264 >= 1 && (uint64_t v236 = v261) != 0)
      {
        uint64_t v232 = v6;
        uint64_t v235 = v260;
        uint64_t v240 = v263[4];
        uint64_t v241 = v263;
        LODWORD(v239) = *(unsigned __int8 *)(v262 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v233 = v263 + 8;
        uint64_t v234 = v263 + 6;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v10 = 0;
        v229.i64[0] = 0;
        long long v206 = (char *)MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v11 = (unsigned int *)(v235 + 48 * v10);
          uint64_t v13 = *v11;
          uint64_t v12 = v11[1];
          uint64_t v14 = (uint64_t *)*((void *)v11 + 2);
          uint64_t v15 = *((void *)v11 + 4);
          uint64_t v16 = *((void *)v11 + 5);
          uint64_t v237 = *((void *)v11 + 3);
          v238.i64[0] = v10;
          if (v239)
          {
            uint64_t v17 = *(os_unfair_lock_s **)(v16 + 376);
            swift_retain();
            os_unfair_lock_lock(v17);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v240);
          sub_1B62CA27C((uint64_t)v234, (uint64_t)v270, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          unint64_t v18 = v241;
          uint64_t v19 = v241[4];
          uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v18[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
          v18[7] = v20;
          unint64_t v21 = v233;
          v233[1] = 0;
          v21[2] = 0;
          *unint64_t v21 = 0;
          swift_release();
          uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for Bindings, (uint64_t)&off_1F0FA3490, v14, v237, v15, (uint64_t)v18);
          if (v14)
          {
            if (v15)
            {
              uint64_t v23 = (unsigned char *)(v22 + 8);
              do
              {
                uint64_t v27 = *v14++;
                uint64_t v26 = v27;
                if (*v23 == 1)
                {
                  *uint64_t v23 = 0;
                  char v28 = *(unsigned char *)(v16 + 184);
                  uint64_t v29 = swift_retain();
                  if (v28) {
                    goto LABEL_258;
                  }
                  int v30 = *(_DWORD *)(*(void *)(v16 + 168) + 4 * v26);
                  int v31 = *(_DWORD *)(*(void *)(v29 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v30 + 8);
                  swift_release();
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    long long v206 = sub_1B633F784(0, *((void *)v206 + 2) + 1, 1, v206);
                  }
                  unint64_t v33 = *((void *)v206 + 2);
                  unint64_t v32 = *((void *)v206 + 3);
                  if (v33 >= v32 >> 1) {
                    long long v206 = sub_1B633F784(v32 > 1, v33 + 1, 1, v206);
                  }
                  int v24 = v206;
                  *((void *)v206 + 2) = v33 + 1;
                  char v25 = &v24[8 * v33];
                  *((_DWORD *)v25 + 8) = v30;
                  *((_DWORD *)v25 + 9) = v31;
                }
                v23 += 24;
                --v15;
              }
              while (v15);
            }
          }
          else if (v13 != v12)
          {
            uint64_t v35 = (unsigned char *)(v22 + 24 * v13 + 8);
            do
            {
              if (*v35 == 1)
              {
                *uint64_t v35 = 0;
                char v38 = *(unsigned char *)(v16 + 184);
                uint64_t v39 = swift_retain();
                if (v38)
                {
LABEL_258:
                  sub_1B6E32BE8();
                  __break(1u);
                  return;
                }
                int v40 = *(_DWORD *)(*(void *)(v16 + 168) + 4 * v13);
                int v41 = *(_DWORD *)(*(void *)(v39 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v40 + 8);
                swift_release();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  long long v206 = sub_1B633F784(0, *((void *)v206 + 2) + 1, 1, v206);
                }
                unint64_t v43 = *((void *)v206 + 2);
                unint64_t v42 = *((void *)v206 + 3);
                if (v43 >= v42 >> 1) {
                  long long v206 = sub_1B633F784(v42 > 1, v43 + 1, 1, v206);
                }
                uint64_t v36 = v206;
                *((void *)v206 + 2) = v43 + 1;
                uint64_t v37 = &v36[8 * v43];
                *((_DWORD *)v37 + 8) = v40;
                *((_DWORD *)v37 + 9) = v41;
              }
              ++v13;
              v35 += 24;
            }
            while (v12 != v13);
          }
          v268[0] = v265;
          v268[1] = v266;
          uint64_t v269 = v267;
          uint64_t v34 = v229.i64[0];
          sub_1B6345178(v241, (unsigned __int16 **)v268, (uint64_t)v270);
          v229.i64[0] = v34;
          sub_1B634507C((char *)v16);
          ecs_stack_allocator_pop_snapshot(v240);
          if (v239)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
          }
          swift_release();
          uint64_t v10 = v238.i64[0] + 1;
        }
        while (v238.i64[0] + 1 != v236);
        sub_1B632F170(v246);
        a1 = v219;
        uint64_t v44 = v229.i64[0];
        uint64_t v6 = v232;
      }
      else
      {
        uint64_t v44 = 0;
        long long v206 = (char *)MEMORY[0x1E4FBC860];
      }
      v229.i64[0] = v44;
      sub_1B632F170(v246);
    }
    else
    {
      v229.i64[0] = 0;
      long long v206 = (char *)MEMORY[0x1E4FBC860];
    }
    uint64_t v240 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_mainGraphScriptGroup);
    v200[0] = *(void *)(*(void *)(v240 + 16) + 16);
    if (v200[0])
    {
      uint64_t v45 = 0;
      size_t v46 = (void *)(v219 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      char v223 = (void (**)(char *, char *, uint64_t))(v6 + 32);
      float v201 = v206 + 36;
      v220.columns[3] = (simd_float4)xmmword_1B6E4F370;
      v220.columns[2] = (simd_float4)xmmword_1B6E4F2E0;
      unint64_t v203 = 0x80000001B6F34830;
      v220.columns[1] = (simd_float4)xmmword_1B6E4F320;
      v220.columns[0] = (simd_float4)xmmword_1B6E4F300;
      long long v222 = xmmword_1B6E77050;
      unint64_t v202 = 0x80000001B6F34850;
      unint64_t v221 = 0x80000001B6F34800;
      uint64_t v204 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v231 = (void *)(v219 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      while (1)
      {
        uint64_t v205 = *(void *)(*(void *)(*(void *)(v240 + 16) + 32 * v45 + 32) + 16);
        if (v205) {
          break;
        }
LABEL_40:
        if (++v45 == v200[0]) {
          goto LABEL_256;
        }
      }
      uint64_t v47 = 0;
      uint64_t v234 = (void *)v45;
      while (1)
      {
        uint64_t v50 = *(void *)(*(void *)(v240 + 16) + 32 * v45 + 32);
        uint64_t v235 = 40 * v47;
        uint64_t v51 = v50 + 40 * v47;
        uint64_t v52 = *(unsigned int *)(v51 + 44);
        uint64_t v53 = *(int *)(v51 + 40);
        if (v53 != -1 || v52 != 0)
        {
          uint64_t v207 = v47;
          uint64_t v55 = *(unsigned int *)(v51 + 36);
          uint64_t v56 = *(int *)(v51 + 32);
          BOOL v57 = v56 == -1 && v55 == 0;
          if (!v57
            && (v56 & 0x80000000) == 0
            && v46[1] > v56
            && (v55 != -1 ? (BOOL v58 = *(_DWORD *)(*v46 + 12 * (int)v56 + 8) == v55) : (BOOL v58 = 1),
                v58
             && (uint64_t v59 = *(void *)(*(void *)(*(void *)(v219 + 80)
                                             + 8 * *(__int16 *)(*v46 + 12 * (int)v56 + 6)
                                             + 32)
                                 + 16),
                 uint64_t v60 = *(void *)(v59 + 128),
                 *(void *)(v60 + 16))
             && (v61 = sub_1B62C1A30((uint64_t)&type metadata for Tombstone), size_t v46 = v231, (v62 & 1) != 0)
             && *(ValueMetadata **)(*(void *)(v59 + 24) + 16 * *(void *)(*(void *)(v60 + 56) + 8 * v61) + 32) == &type metadata for Tombstone))
          {
LABEL_235:
            uint64_t v47 = v207;
          }
          else
          {
            uint64_t v63 = type metadata accessor for GraphScript(0);
            if (*(void *)(*(void *)(v63 - 8) + 64)) {
              uint64_t v64 = *(void *)(*(void *)(v63 - 8) + 72);
            }
            else {
              uint64_t v64 = 0;
            }
            size_t v46 = v231;
            uint64_t v47 = v207;
            if ((v53 & 0x80000000) == 0 && v231[1] > v53)
            {
              uint64_t v184 = *v231 + 12 * (int)v53;
              if (v52 == -1 || *(_DWORD *)(v184 + 8) == v52)
              {
                uint64_t v186 = *(void *)(*(void *)(v219 + 136) + 8 * *(int *)(*v231 + 12 * (int)v53) + 32);
                uint64_t v187 = *(void *)(v186 + 48);
                uint64_t v188 = *(void *)(v187 + 16);
                if (v188)
                {
                  uint64_t v189 = v56;
                  uint64_t v190 = (void *)*(__int16 *)(v184 + 4);
                  float32x4_t v191 = (void *)(v187 + 56);
                  uint64_t v192 = (uint64_t *)(v187 + 56);
                  uint64_t v193 = *(void *)(v187 + 16);
                  while (*(v192 - 3) != v63)
                  {
                    v192 += 5;
                    if (!--v193) {
                      goto LABEL_44;
                    }
                  }
                  uint64_t v241 = v190;
                  uint64_t v194 = v189;
                  uint64_t v239 = *v192;
                  uint64_t v195 = *(void *)(v186 + 128);
                  sub_1B63396FC(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
                  if (*(void *)(*(void *)(v196 - 8) + 64)) {
                    uint64_t v197 = *(void *)(*(void *)(v196 - 8) + 72);
                  }
                  else {
                    uint64_t v197 = 0;
                  }
                  size_t v46 = v231;
                  uint64_t v47 = v207;
                  while (*(v191 - 3) != v196)
                  {
                    v191 += 5;
                    if (!--v188) {
                      goto LABEL_44;
                    }
                  }
                  uint64_t v48 = v45;
                  uint64_t v49 = v229.i64[0];
                  sub_1B633A56C(v195 + *v191 + v197 * (void)v241, v195 + v239 + v64 * (void)v241, v219, v53 | (unint64_t)(v52 << 32), v194 | (v55 << 32), v240, v48, v207);
                  uint64_t v47 = v207;
                  size_t v46 = v231;
                  v229.i64[0] = v49;
                  uint64_t v45 = (uint64_t)v234;
                }
              }
            }
          }
          goto LABEL_44;
        }
        uint64_t v65 = *(void *)(v51 + 48);
        if (v65)
        {
          uint64_t v233 = *(void **)(v65 + 16);
          if (v233) {
            break;
          }
        }
LABEL_44:
        if (++v47 == v205) {
          goto LABEL_40;
        }
      }
      uint64_t v207 = v47;
      uint64_t v232 = v65 + 32;
      v200[2] = v65;
      swift_bridgeObjectRetain();
      uint64_t v66 = 0;
      uint64_t v67 = v230;
LABEL_68:
      uint64_t v68 = (unsigned int *)(v232 + 56 * v66);
      unsigned int v69 = *v68;
      unsigned int v70 = v68[1];
      uint64_t v71 = (ValueMetadata *)*((void *)v68 + 1);
      simd_float4 v238 = *((simd_float4 *)v68 + 1);
      uint64_t v73 = *((void *)v68 + 4);
      uint64_t v72 = *((void *)v68 + 5);
      uint64_t v74 = (void *)*((void *)v68 + 6);
      uint64_t v75 = *(void **)(v240 + 16);
      BOOL v76 = *(void *)(v67 + 8) == 1 && *(void *)(v67 + 16) == 0;
      uint64_t v237 = v66;
      if (!v76)
      {
        uint64_t v77 = v75[4 * v45 + 4] + v235;
        if ((*(unsigned char *)(v77 + 66) & 1) == 0 && *(unsigned char *)(v77 + 65) == 1 && v71 == &type metadata for Bindings)
        {
          uint64_t v104 = *((void *)v206 + 2);
          long long v105 = v201;
          if (!v104) {
            goto LABEL_105;
          }
          while (*((_DWORD *)v105 - 1) != v69 || *(_DWORD *)v105 != v70)
          {
            v105 += 8;
            if (!--v104) {
              goto LABEL_105;
            }
          }
        }
      }
      swift_retain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v240 + 16) = v75;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v75 = sub_1B6C167AC(v75);
        *(void *)(v240 + 16) = v75;
      }
      uint64_t v80 = &v75[4 * v45];
      uint64_t v83 = (void *)v80[4];
      uint64_t v82 = v80 + 4;
      uint64_t v81 = v83;
      char v84 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v82 = v83;
      if ((v84 & 1) == 0)
      {
        uint64_t v81 = sub_1B6C16798(v81);
        *uint64_t v82 = v81;
      }
      *((unsigned char *)v81 + v235 + 66) = 0;
      BOOL v85 = v69 == -1 && v70 == 0;
      uint64_t v239 = v72;
      uint64_t v241 = v74;
      if (v85
        || (v69 & 0x80000000) != 0
        || v231[1] <= (int)v69
        || ((uint64_t v86 = *v231 + 12 * (int)v69, v70 != -1) ? (v87 = *(_DWORD *)(v86 + 8) == v70) : (v87 = 1),
            !v87
         || (uint64_t v88 = *(void *)(*(void *)(v219 + 136) + 8 * *(int *)(*v231 + 12 * (int)v69) + 32),
             uint64_t v89 = *(void *)(v88 + 48),
             (uint64_t v90 = *(void *)(v89 + 16)) == 0)))
      {
LABEL_96:
        memset(&v244, 0, 32);
LABEL_97:
        sub_1B6786090((uint64_t)&v244, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        v244.columns[0].i64[0] = 0;
        v244.columns[0].i64[1] = 0xE000000000000000;
        uint64_t v236 = qword_1EB997FD0;
        swift_retain();
        sub_1B6E328C8();
        v245[0] = v244.columns[0];
        sub_1B6E31948();
        v244.columns[0].i64[0] = __PAIR64__(v70, v69);
        v244.columns[0].i64[1] = (uint64_t)v71;
        v244.columns[1] = v238;
        v244.columns[2].i64[0] = v73;
        v244.columns[2].i64[1] = v72;
        v244.columns[3].i64[0] = (uint64_t)v74;
        sub_1B6E32B18();
        long long v93 = v245[0];
        char v94 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        uint64_t v95 = qword_1EB997FF0;
        uint64_t v96 = qword_1EB985528;
        swift_retain();
        if (v96 != -1) {
          swift_once();
        }
        sub_1B6786100(0, (unint64_t *)&qword_1EB9855A0, (uint64_t)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1B62C5560);
        uint64_t v97 = swift_allocObject();
        *(_OWORD *)(v97 + 16) = v222;
        *(void *)(v97 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v97 + 64) = sub_1B678615C();
        *(_OWORD *)(v97 + 32) = v93;
        swift_bridgeObjectRetain();
        sub_1B6E31258();
        swift_bridgeObjectRelease();
        swift_retain();
        uint64_t v98 = v224;
        sub_1B6E31088();
        uint64_t v99 = v227[12];
        uint64_t v100 = v227[16];
        uint64_t v101 = v227[20];
        uint64_t v102 = (uint64_t)v226;
        v238.i64[0] = v95;
        uint64_t v103 = &v226[v101];
        (*v223)(v226, v98, v225);
        *(unsigned char *)(v102 + v99) = v94;
        *(void *)(v102 + v100) = 0;
        *(_OWORD *)uint64_t v103 = v93;
        swift_bridgeObjectRetain();
        sub_1B6E31368();
        swift_release();
        sub_1B62D4C9C(v102, (uint64_t (*)(void))sub_1B62E17B4);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v67 = v230;
        uint64_t v45 = (uint64_t)v234;
        goto LABEL_104;
      }
      uint64_t v91 = *(__int16 *)(v86 + 4);
      uint64_t v92 = v89 + 56;
      while (*(ValueMetadata **)(v92 - 24) != v71)
      {
        v92 += 40;
        if (!--v90) {
          goto LABEL_96;
        }
      }
      uint64_t v109 = v92 - 8;
      uint64_t v108 = *(void *)(v92 - 8);
      uint64_t v107 = *(void *)(v109 + 8);
      if (v108 <= 1) {
        uint64_t v108 = 1;
      }
      uint64_t v110 = *(void *)(v88 + 128) + v107 + v108 * v91;
      swift_retain();
      sub_1B62CD444(v110, (uint64_t)v74, (uint64_t)v71);
      swift_release();
      if (!v244.columns[1].i64[1]) {
        goto LABEL_97;
      }
      sub_1B62B57A8(&v244, v245);
      sub_1B62CAAD8((uint64_t)v245, (uint64_t)&v244);
      sub_1B62C14BC(&v244, v244.columns[1].i64[1]);
      uint64_t DynamicType = swift_getDynamicType();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v244);
      uint64_t v112 = *(void *)(*(void *)(*(void *)(v240 + 16) + 32 * v45 + 32) + v235 + 56);
      uint64_t v218 = *(void *)(v112 + 16);
      if (!v218) {
        goto LABEL_234;
      }
      uint64_t v216 = v112 + 32;
      uint64_t v217 = DynamicType;
      v200[1] = v112;
      swift_bridgeObjectRetain();
      uint64_t v113 = 0;
      uint64_t v114 = v219;
      while (1)
      {
        uint64_t v236 = v113;
        char v115 = (unsigned int *)(v216 + 56 * v113);
        uint64_t v116 = *v115;
        uint64_t v117 = v115[1];
        uint64_t v118 = (ValueMetadata *)*((void *)v115 + 1);
        v215.i64[0] = *((void *)v115 + 2);
        uint64_t v119 = *((void *)v115 + 6);
        uint64_t v228 = *((void *)v115 + 5);
        swift_bridgeObjectRetain();
        v238.i64[0] = v119;
        swift_retain();
        sub_1B6E32738();
        if (v217 != v120)
        {
          BOOL v121 = v120 == MEMORY[0x1E4FBC1C8] && v217 == MEMORY[0x1E4FBB550];
          if (!v121 && v120 != MEMORY[0x1E4FBC840] + 8)
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            v244.columns[0].i64[0] = 0;
            v244.columns[0].i64[1] = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            v243[0] = v244.columns[0];
            sub_1B6E31948();
            sub_1B62CAAD8((uint64_t)v245, (uint64_t)&v244);
            sub_1B62C14BC(&v244, v244.columns[1].i64[1]);
            swift_getDynamicType();
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v244);
            sub_1B6E33B48();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E32738();
            sub_1B6E33B48();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            long long v140 = v243[0];
            int v141 = sub_1B6E32148();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            v244.columns[0].i64[0] = 0;
            swift_retain();
            sub_1B6B33E34(v141, (uint64_t *)&v244, v140, *((uint64_t *)&v140 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_121;
          }
        }
        if (v217 == MEMORY[0x1E4FBB550] && v120 == MEMORY[0x1E4FBC1C8])
        {
          sub_1B62CAAD8((uint64_t)v245, (uint64_t)v243);
          swift_dynamicCast();
          v244.columns[1].i64[1] = MEMORY[0x1E4FBC1C8];
          v244.columns[0].i64[0] = v242;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v245);
          sub_1B62B57A8(&v244, v245);
        }
        uint64_t v124 = (int)v116;
        uint64_t v125 = v229.i64[0];
        if (v118 != &type metadata for Scale3
          || (v116 == -1 ? (BOOL v126 = v117 == 0) : (BOOL v126 = 0),
              v126
           || (v116 & 0x80000000) != 0
           || v231[1] <= (int)v116
           || (v117 != -1 ? (BOOL v127 = *(_DWORD *)(*v231 + 12 * (int)v116 + 8) == v117) : (BOOL v127 = 1),
               !v127
            || (uint64_t v128 = *(void *)(*(void *)(*(void *)(v114 + 80)
                                             + 8 * *(__int16 *)(*v231 + 12 * (int)v116 + 6)
                                             + 32)
                                 + 16),
                uint64_t v129 = *(void *)(v128 + 128),
                !*(void *)(v129 + 16))
            || (unint64_t v130 = sub_1B62C1A30((uint64_t)&type metadata for HalfSizeLegacyPatch), (v131 & 1) == 0)
            || *(ValueMetadata **)(*(void *)(v128 + 24) + 16 * *(void *)(*(void *)(v129 + 56) + 8 * v130) + 32) != &type metadata for HalfSizeLegacyPatch)))
        {
          sub_1B62CAAD8((uint64_t)v245, (uint64_t)&v244);
          BOOL v132 = v116 == -1 && v117 == 0;
          if (!v132 && (v116 & 0x80000000) == 0 && v231[1] > (int)v116)
          {
            uint64_t v133 = *v231 + 12 * (int)v116;
            if (v117 == -1 || *(_DWORD *)(v133 + 8) == v117)
            {
              uint64_t v135 = *(void *)(*(void *)(v114 + 136) + 8 * *(int *)(*v231 + 12 * (int)v116) + 32);
              uint64_t v136 = *(void *)(v135 + 48);
              uint64_t v137 = *(void *)(v136 + 16);
              if (v137)
              {
                uint64_t v138 = *(__int16 *)(v133 + 4);
                uint64_t v139 = v136 + 56;
                while (*(ValueMetadata **)(v139 - 24) != v118)
                {
                  v139 += 40;
                  if (!--v137) {
                    goto LABEL_186;
                  }
                }
                v229.i64[0] = (int)v116;
                uint64_t v144 = v139 - 8;
                uint64_t v143 = *(void *)(v139 - 8);
                uint64_t v142 = *(void *)(v144 + 8);
                if (v143 <= 1) {
                  uint64_t v143 = 1;
                }
                uint64_t v145 = v215.i64[0];
                uint64_t v146 = sub_1B633D438((uint64_t)&v244, *(void *)(v135 + 128) + v142 + v143 * v138, v238.i64[0], (uint64_t)v118);
                if ((v146 & 1) == 0)
                {
                  MEMORY[0x1F4188790](v146, v147);
                  v200[-4] = v118;
                  v200[-3] = v145;
                  char v198 = &v244;
                  uint64_t v199 = v238.i64[0];
                  sub_1B6BFB680((uint64_t)v118, v145, v116 | (v117 << 32), (void (*)(uint64_t))sub_1B67861B0);
                }
                uint64_t v124 = v229.i64[0];
              }
            }
          }
          goto LABEL_186;
        }
        sub_1B62CAAD8((uint64_t)v245, (uint64_t)&v244);
        uint64_t KeyPath = swift_getKeyPath();
        if (v231[1] <= (int)v116) {
          break;
        }
        uint64_t v149 = *v231;
        if (v117 == -1 || *(_DWORD *)(*v231 + 12 * (int)v116 + 8) == v117)
        {
          v214.i64[0] = KeyPath;
          uint64_t v150 = (unsigned int *)(v149 + 12 * (int)v116);
          uint64_t v151 = v215.i64[0];
          sub_1B62CD3E0(*(void *)(*(void *)(v114 + 136) + 8 * (int)*v150 + 32), (uint64_t)&type metadata for Scale3, *v150 | ((unint64_t)*((unsigned __int16 *)v150 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v150 + 2) << 32), v114, v243);
          if (!*(void *)&v243[0]) {
            break;
          }
          uint64_t v152 = sub_1B633D438((uint64_t)&v244, *(uint64_t *)&v243[0], v214.i64[0], (uint64_t)&type metadata for Scale3);
          if (v152) {
            break;
          }
          MEMORY[0x1F4188790](v152, v151);
          v200[-4] = &type metadata for Scale3;
          v200[-3] = v151;
          char v198 = &v244;
          uint64_t v199 = v214.i64[0];
          sub_1B6BFB680((uint64_t)&type metadata for Scale3, v183, v116 | (v117 << 32), (void (*)(uint64_t))sub_1B6787890);
          swift_release();
        }
        else
        {
          swift_release();
        }
LABEL_186:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v244);
        if (swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype())
        {
          if (v116 == -1 && !v117) {
            goto LABEL_196;
          }
          float v158 = v231;
          uint64_t v159 = v231[1];
          if ((v116 & 0x80000000) != 0
            || v159 <= v124
            || (uint64_t v160 = *v231, v117 != -1) && *(_DWORD *)(v160 + 12 * (int)v124 + 8) != v117)
          {
            if ((v116 & 0x80000000) == 0)
            {
LABEL_203:
              if (v159 > v124)
              {
                uint64_t v161 = *v158;
                if (v117 == -1 || *(_DWORD *)(v161 + 12 * (int)v124 + 8) == v117)
                {
                  sub_1B6345398(*(void *)(*(void *)(v114 + 80) + 8 * *(__int16 *)(v161 + 12 * (int)v124 + 6) + 32), (uint64_t)&type metadata for NotInHierarchy, &v244);
                  if ((v244.columns[0].i8[0] & 1) == 0)
                  {
                    float v158 = v231;
                    uint64_t v159 = v231[1];
                    goto LABEL_215;
                  }
LABEL_197:
                  simd_float4 v154 = v220.columns[0];
                  simd_float4 v155 = v220.columns[1];
                  simd_float4 v156 = v220.columns[2];
                  simd_float4 v157 = v220.columns[3];
                  goto LABEL_209;
                }
              }
            }
LABEL_215:
            if ((v116 & 0x80000000) == 0
              && v159 > v124
              && ((uint64_t v178 = *v158, v117 == -1) || *(_DWORD *)(v178 + 12 * (int)v124 + 8) == v117))
            {
              unint64_t v180 = sub_1B6964FAC(*(void *)(*(void *)(v114 + 136) + 8 * *(int *)(v178 + 12 * (int)v124) + 32), *(_DWORD *)(v178 + 12 * (int)v124), *(_WORD *)(v178 + 12 * (int)v124 + 4), 8, v114);
              if ((v182 & 1) == 0)
              {
                *(double *)v154.i64 = sub_1B6AAD94C(v180, v181);
                goto LABEL_209;
              }
              float v158 = v231;
              uint64_t v159 = v231[1];
              if ((v116 & 0x80000000) == 0)
              {
LABEL_220:
                if (v159 > v124)
                {
                  uint64_t v179 = *v158;
                  if (v117 == -1 || *(_DWORD *)(v179 + 12 * (int)v124 + 8) == v117)
                  {
                    sub_1B6345398(*(void *)(*(void *)(v114 + 80) + 8 * *(__int16 *)(v179 + 12 * (int)v124 + 6) + 32), (uint64_t)&type metadata for PointOfView, &v244);
                    simd_float4 v154 = v220.columns[0];
                    simd_float4 v155 = v220.columns[1];
                    simd_float4 v156 = v220.columns[2];
                    simd_float4 v157 = v220.columns[3];
                    if (v244.columns[0].i8[0]) {
                      goto LABEL_209;
                    }
                  }
                }
              }
            }
            else if ((v116 & 0x80000000) == 0)
            {
              goto LABEL_220;
            }
LABEL_196:
            uint64_t v153 = swift_retain();
            sub_1B6346CF0(v153, (uint64_t)v249);
            swift_release();
            sub_1B633C598((uint64_t)v249, (uint64_t)v251);
            if (v252) {
              goto LABEL_197;
            }
            simd_float4 v154 = (simd_float4)v251[0];
            simd_float4 v155 = (simd_float4)v251[1];
            simd_float4 v156 = (simd_float4)v251[2];
            simd_float4 v157 = (simd_float4)v251[3];
LABEL_209:
            float32x4_t v212 = (float32x4_t)v157;
            float32x4_t v213 = (float32x4_t)v156;
            float32x4_t v214 = (float32x4_t)v155;
            float32x4_t v215 = (float32x4_t)v154;
            v229.i64[0] = v125;
            unint64_t v162 = v124 | ((unint64_t)v117 << 32);
            sub_1B633C690(v162, 0, 0, 1, 0, 0, 1, 0, (uint64_t)v248, *(int32x2_t *)v154.f32, 0, 1);
            uint64_t v163 = v248[0];
            uint64_t v164 = v248[1];
            uint64_t v165 = v248[2];
            uint64_t v166 = v248[3];
            uint64_t v167 = v248[4];
            uint64_t v168 = v248[5];
            uint64_t v169 = v248[6];
            uint64_t v170 = v248[7];
            sub_1B633C598((uint64_t)v248, (uint64_t)v250);
            simd_float4 v171 = v220.columns[0];
            simd_float4 v172 = v220.columns[1];
            simd_float4 v173 = v220.columns[2];
            simd_float4 v174 = v220.columns[3];
            if ((v250[64] & 1) == 0)
            {
              v171.i64[0] = v163;
              v171.i64[1] = v164;
              v172.i64[0] = v165;
              v172.i64[1] = v166;
              v173.i64[0] = v167;
              v173.i64[1] = v168;
              v174.i64[0] = v169;
              v174.i64[1] = v170;
            }
            float32x4_t v208 = (float32x4_t)v174;
            float32x4_t v209 = (float32x4_t)v173;
            float32x4_t v210 = (float32x4_t)v172;
            float32x4_t v211 = (float32x4_t)v171;
            simd_float4x4 v244 = v220;
            uint64_t v175 = v162;
            uint64_t v114 = v219;
            if (sub_1B62EC0CC((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67798, v162))
            {
              uint64_t v176 = v162;
              uint64_t v177 = v229.i64[0];
              sub_1B633D010(v176, v114, (float32x4_t *)&v244, v215, v214, v213, v212, v211, v210, v209, v208);
              sub_1B6BF9BBC(v175, v114, &v244);
              swift_retain();
              sub_1B6C09578(v175, v114, v114, (float32x4_t *)&v244);
              v229.i64[0] = v177;
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
            }
            else
            {
              swift_release();
              swift_bridgeObjectRelease();
            }
            uint64_t v45 = (uint64_t)v234;
            goto LABEL_121;
          }
          sub_1B6C09CA0(*(void *)(*(void *)(v114 + 136) + 8 * *(int *)(v160 + 12 * (int)v124) + 32), *(_WORD *)(v160 + 12 * (int)v124 + 4), 40, (uint64_t)v247);
          sub_1B633C598((uint64_t)v247, (uint64_t)&v253);
          if (v257 == 1)
          {
            float v158 = v231;
            uint64_t v159 = v231[1];
            if ((v116 & 0x80000000) == 0) {
              goto LABEL_203;
            }
            goto LABEL_215;
          }
          simd_float4 v229 = (simd_float4)v253;
          float32x4_t v213 = (float32x4_t)v255;
          float32x4_t v214 = (float32x4_t)v256;
          float32x4_t v215 = (float32x4_t)v254;
          sub_1B6BF9A44(v116 | (v117 << 32), v114, v253, v254, v255, v256);
          v273.columns[0] = v229;
          v273.columns[3] = (simd_float4)v214;
          v273.columns[1] = (simd_float4)v215;
          v273.columns[2] = (simd_float4)v213;
          sub_1B6BF9B1C(v116 | (v117 << 32), v114, v273);
          v229.i64[0] = v125;
        }
        else
        {
          v229.i64[0] = v125;
        }
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v45 = (uint64_t)v234;
LABEL_121:
        uint64_t v113 = v236 + 1;
        if (v236 + 1 == v218)
        {
          swift_bridgeObjectRelease();
LABEL_234:
          swift_release();
          swift_bridgeObjectRelease();
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v245);
          uint64_t v67 = v230;
LABEL_104:
          uint64_t v66 = v237;
LABEL_105:
          if ((void *)++v66 == v233)
          {
            swift_bridgeObjectRelease();
            size_t v46 = v231;
            goto LABEL_235;
          }
          goto LABEL_68;
        }
      }
      swift_release();
      goto LABEL_186;
    }
LABEL_256:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B633908C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v45 = a4;
  unint64_t v44 = a3;
  v55[13] = *MEMORY[0x1E4F143B8];
  sub_1B6339768(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v12);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = type metadata accessor for GraphScript(0);
  uint64_t v17 = MEMORY[0x1F4188790](v15 - 8, v16);
  uint64_t v19 = (uint64_t *)((char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17, v20);
  uint64_t v22 = (char *)&v43 - v21;
  uint64_t v23 = v7[13];
  int v24 = *(unsigned __int8 *)(a1 + v23);
  sub_1B633A1CC(a1, (uint64_t)&v43 - v21, type metadata accessor for GraphScript);
  int v25 = v22[40];
  sub_1B633A09C((uint64_t)v22, type metadata accessor for GraphScript);
  if (v24 != 1) {
    goto LABEL_4;
  }
  if (v25 == 1) {
    return 0;
  }
  if (!v25) {
LABEL_4:
  }
    *(unsigned char *)(a1 + v23) = 1;
  sub_1B6339678(a1, (uint64_t)v14, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
  uint64_t v26 = *(void *)&v14[v7[10]];
  if (v26)
  {
    unint64_t v43 = *(void (**)(uint64_t *))(v26 + 32);
    sub_1B6339544((uint64_t)v14, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
    sub_1B6339678(a1, (uint64_t)v11, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
    sub_1B633A1CC((uint64_t)v11, (uint64_t)v19, type metadata accessor for GraphScript);
    sub_1B6339544((uint64_t)v11, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
    uint64_t v27 = *v19;
    swift_bridgeObjectRetain();
    sub_1B633A09C((uint64_t)v19, type metadata accessor for GraphScript);
    uint64_t v28 = v7[14];
    uint64_t v29 = *(void *)(a1 + v7[15] + 8);
    uint64_t v30 = *(void *)(a1 + v28);
    char v31 = *(unsigned char *)(a1 + v28 + 8);
    swift_bridgeObjectRetain();
    double v32 = sub_1B633A2F4(v27, v29, v30, v31, v45, 0, (uint64_t)v55);
    unint64_t v33 = (uint64_t (*)(uint64_t (**)(void, double)))thread_worker_index;
    uint64_t v34 = (void *)thread_worker_index(&thread_worker_index, v32);
    uint64_t v35 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    if (sub_1B62C6548(*(void *)(v35 + 8 * *v34 + 8)))
    {
      int v36 = v44;
      unint64_t v37 = HIDWORD(v44);
      uint64_t v38 = *(void *)(*(void *)(v35 + 8 * *(void *)v33(&thread_worker_index) + 8) + 32);
      uint64_t v39 = v55[0];
      int v40 = sub_1B633A8FC(MEMORY[0x1E4FBC860]);
      uint64_t v46 = a2;
      int v47 = v36;
      int v48 = v37;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      uint64_t v49 = v38;
      uint64_t v41 = 1;
      char v52 = 1;
      uint64_t v53 = v39;
      uint64_t v54 = v40;
      v43(&v46);
      swift_bridgeObjectRelease();
      sub_1B633A414((uint64_t)v55, a1, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v41;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6339544(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  sub_1B6339768(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t destroy for Node.Typing()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B63395F4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  sub_1B63396FC(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1B6339678(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  sub_1B6339768(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_1B63396FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B6339768(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B63397D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  *(unsigned char *)(v7 + 9) = *(unsigned char *)(v8 + 9);
  unint64_t v10 = (void *)((v7 + 17) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (v8 + 17) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void **)v11;
  v11 += 15;
  id v13 = v12;
  void *v10 = v12;
  uint64_t v14 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v14 = *(void *)(v11 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v36 = a1;
  v14[1] = *(void *)((v11 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v11 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (((((((v6 & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v16 = a1 + v15 + 7;
  uint64_t v17 = (void *)((a2 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v16 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)uint64_t v16 = *v17;
  uint64_t v18 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)((v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v19 = *v18;
  uint64_t v20 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v20 = *v21;
  unint64_t v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  int v24 = *(void **)v23;
  *(void *)unint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  unint64_t v25 = ((unint64_t)v20 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v21 + 31) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v21) = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = (_BYTE)v21;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v29 = *(unsigned __int8 *)(v28 + 80);
  __dst = (void *)((v29 + 9 + v25) & ~v29);
  uint64_t v30 = (const void *)((v29 + 9 + v26) & ~v29);
  char v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v32 = v24;
  if (v31(v30, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v28 + 84)) {
      size_t v33 = *(void *)(v28 + 64);
    }
    else {
      size_t v33 = *(void *)(v28 + 64) + 1;
    }
    memcpy(__dst, v30, v33);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(__dst, v30, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, AssociatedTypeWitness);
  }
  return v36;
}

uint64_t getEnumTagSinglePayload for JobQueue(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void *_s3VFX4NodeC6TypingVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B6339B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56) + 7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v5 = (((((a1
          + (((((((v4 & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v8 = (((v5 + 31) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v7 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = v7;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, AssociatedTypeWitness);
  if (!result)
  {
    unint64_t v10 = *(uint64_t (**)(unint64_t, uint64_t))(v11 + 8);
    return v10(v8, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_1B6339CE8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for ScriptIndex();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      uint64_t v7 = sub_1B6E31118();
      unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      return v8(v4, v7);
    }
  }
  return result;
}

uint64_t sub_1B6339DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (const void *)(a2 + v5);
  uint64_t v7 = (void *)(a1 + v5);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v8 = type metadata accessor for ScriptIndex();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v6, 1, v8))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v7, v6, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v6, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v6, *(void *)(v9 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t type metadata accessor for ScriptIndex()
{
  uint64_t result = qword_1EB97DC60;
  if (!qword_1EB97DC60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JobQueue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1B633A03C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B633A09C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B633A0FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B633A164(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B633A1CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B633A234(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B633A29C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for GraphScript(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1EB97DBE0);
}

double sub_1B633A2F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  if (!a2)
  {
    uint64_t v15 = *(void *)(a1 + 16);
    if (v15)
    {
      sub_1B6A97C0C(0, &qword_1EB97F650, (uint64_t)&type metadata for CachedLocationMapping, MEMORY[0x1E4FBB718]);
      uint64_t v16 = sub_1B6E31C98();
      a2 = v16;
      *(void *)(v16 + 16) = v15;
      *(void *)(v16 + 40) = 0;
      *(void *)(v16 + 48) = 0;
      *(void *)(v16 + 32) = 0;
      *(_OWORD *)(v16 + 56) = xmmword_1B6E8DCB0;
      uint64_t v17 = v15 - 1;
      if (v15 != 1)
      {
        uint64_t v18 = 72;
        do
        {
          uint64_t v19 = v16 + v18;
          *(void *)uint64_t v19 = 0;
          *(void *)(v19 + 8) = 0;
          *(void *)(v19 + 16) = 0;
          *(_OWORD *)(v19 + 24) = xmmword_1B6E8DCB0;
          v18 += 40;
          --v17;
        }
        while (v17);
      }
    }
    else
    {
      a2 = MEMORY[0x1E4FBC860];
    }
  }
  *(void *)a7 = 0;
  *(void *)(a7 + 8) = a1;
  *(void *)(a7 + 16) = a3;
  *(unsigned char *)(a7 + 24) = a4 & 1;
  *(void *)(a7 + 28) = a5;
  *(unsigned char *)(a7 + 36) = a6 & 1;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(a7 + 40) = a2;
  *(void *)(a7 + 48) = v13;
  *(void *)(a7 + 56) = v13;
  *(void *)(a7 + 64) = 0;
  *(void *)(a7 + 72) = 0;
  *(void *)(a7 + 80) = 0;
  *(void *)&double result = 1;
  *(_OWORD *)(a7 + 88) = xmmword_1B6E50D30;
  return result;
}

uint64_t sub_1B633A414(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v7 = *(void *)(a1 + 40);
  sub_1B6339768(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v9 = a2 + *(int *)(v8 + 60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 8) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = v11 + 40;
    do
    {
      uint64_t v14 = *(void (**)(uint64_t))(v13 - 8);
      uint64_t v15 = swift_retain();
      v14(v15);
      swift_release();
      v13 += 16;
      --v12;
    }
    while (v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B633A544()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1B633A56C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v33 = a8;
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v19 = (char *)&v30 - v18;
  if (*(unsigned char *)(a2 + 24) != 1)
  {
    uint64_t v31 = a6;
    uint64_t v32 = a2;
    unint64_t v30 = a4;
    uint64_t v20 = a7;
    uint64_t v21 = v33;
    uint64_t v22 = *(void *)(a1 + v16[10]);
    uint64_t v23 = a1;
    sub_1B63395F4(a1, (uint64_t)v19, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
    if (v22)
    {
      sub_1B633A914((uint64_t)v19, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
      uint64_t v24 = v21;
      uint64_t v25 = a5;
      unint64_t v26 = v30;
      uint64_t v27 = v32;
    }
    else
    {
      uint64_t v28 = *(void *)&v19[v16[11]];
      swift_bridgeObjectRetain();
      sub_1B633A914((uint64_t)v19, (unint64_t *)&unk_1EB97E720, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00);
      uint64_t v27 = v32;
      if (!v28) {
        return;
      }
      swift_bridgeObjectRelease();
      uint64_t v24 = v21;
      uint64_t v25 = a5;
      unint64_t v26 = v30;
    }
    if (*(unsigned char *)(a3 + 48) == 1 && (*(unsigned char *)(v23 + v16[13]) != 1 || !*(unsigned char *)(v27 + 40))) {
      sub_1B6BF9FC4(v26, a3);
    }
    sub_1B633A8FC(MEMORY[0x1E4FBC860]);
    sub_1B633908C(v23, a3, v26, v25);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(*(void *)(*(void *)(v31 + 16) + 32 * v20 + 32) + 40 * v24 + 64) == 1)
    {
      uint64_t v29 = swift_bridgeObjectRetain();
      sub_1B633B868(v29);
      swift_bridgeObjectRelease();
    }
  }
}

void *sub_1B633A7FC(uint64_t a1, void (*a2)(void))
{
  if (*(void *)(a1 + 16))
  {
    a2(0);
    uint64_t v3 = (void *)sub_1B6E32C58();
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      swift_retain();
      uint64_t v5 = (uint64_t *)(a1 + 48);
      do
      {
        uint64_t v6 = *(v5 - 2);
        uint64_t v7 = *(v5 - 1);
        uint64_t v8 = *v5;
        v5 += 3;
        swift_bridgeObjectRetain();
        unint64_t v9 = sub_1B62B2CE0(v6, v7);
        *(void *)((char *)v3 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
        unint64_t v10 = (uint64_t *)(v3[6] + 16 * v9);
        uint64_t *v10 = v6;
        v10[1] = v7;
        *(void *)(v3[7] + 8 * v9) = v8;
        ++v3[2];
        --v4;
      }
      while (v4);
      swift_release();
    }
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1B633A8FC(uint64_t a1)
{
  return sub_1B633A7FC(a1, (void (*)(void))sub_1B67F7364);
}

uint64_t sub_1B633A914(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  sub_1B63396FC(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1B633A984(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  sub_1B6DA2C04(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1B633A9F4()
{
  return sub_1B633AA08(*(unsigned __int8 *)(v0 + 16), v0 + 24, *(uint64_t **)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96));
}

uint64_t sub_1B633AA08(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = (ValueMetadata *)sub_1B6E32738();
  uint64_t result = swift_conformsToProtocol2();
  if (!result)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (v11 != &type metadata for TextureFileAsset
    || (sub_1B6E32768(),
        uint64_t KeyPath = swift_getKeyPath(),
        char v14 = MEMORY[0x1BA9B43C0](v10, KeyPath),
        swift_release(),
        (v14 & 1) == 0))
  {
    sub_1B633D260((uint64_t)a3, a6, v16);
    swift_retain();
    uint64_t v15 = sub_1B6E32738();
    uint64_t result = swift_conformsToProtocol2();
    if (result)
    {
      sub_1B633D2DC((uint64_t)v16, a5, v15, result, v10);
      swift_release();
      sub_1B633D2CC();
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v16);
    }
    goto LABEL_10;
  }
  swift_retain();
  sub_1B633ABEC(a5, a4, a3);
  swift_release();

  return swift_arrayDestroy();
}

uint64_t sub_1B633ABEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B633AC98(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(_WORD *)(v3 + 12 * (int)a1 + 4), 48, a2, a1, a3) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B633AC98(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    for (uint64_t i = (void *)(v7 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureFileAsset; i += 5)
    {
      if (!--v8) {
        return v8 & 1;
      }
    }
    uint64_t v12 = (__n128 *)(*(void *)(a1 + 128) + *i + a2 * a3);
    unint64_t v13 = v12->n128_u64[1];
    unint64_t v14 = v12[1].n128_u64[0];
    unint64_t v15 = v12[1].n128_u64[1];
    v20.n128_u64[0] = v12->n128_u64[0];
    v20.n128_u64[1] = v13;
    v21.n128_u64[0] = v14;
    v21.n128_u64[1] = v15;
    __n128 v22 = v12[2];
    id v16 = (id)v22.n128_u64[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v17 = sub_1B633AE50((uint64_t *)&v20, a6);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (v17)
    {
      uint64_t v18 = sub_1B635AB28(a5) << 16 >> 48;
      v23[0] = v20;
      v23[1] = v21;
      v23[2] = v22;
      v23[3] = v20;
      v23[4] = v21;
      __n128 v24 = v22;
      __n128 v26 = v21;
      __n128 v27 = v20;
      sub_1B674C934((uint64_t)&v24, (uint64_t)v25);
      swift_retain();
      sub_1B6BF4834(v18, v23);
      swift_release();
      sub_1B62C7BF4((uint64_t)&v27);
      sub_1B62C7BF4((uint64_t)&v26);
      sub_1B6811278(v25);
      LOBYTE(v8) = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      LOBYTE(v8) = 0;
    }
  }
  return v8 & 1;
}

uint64_t sub_1B633AE50(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  sub_1B633AF88();
  swift_bridgeObjectRetain();
  if (sub_1B6E32678())
  {
    if (v4 == v8 && v3 == v7)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else if (v5 == v8 && v6 == v7)
  {
    goto LABEL_7;
  }
  char v10 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if ((v10 & 1) == 0)
  {
    uint64_t v12 = *a2;
    uint64_t v11 = a2[1];
    swift_bridgeObjectRetain();
    sub_1B6CF5FF4(v12, v11);
    return 1;
  }
  return result;
}

unint64_t sub_1B633AF88()
{
  unint64_t result = qword_1EB97D190;
  if (!qword_1EB97D190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97D190);
  }
  return result;
}

uint64_t sub_1B633AFDC()
{
  return sub_1B633AFF0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1B633AFF0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v10 = a2;
  unint64_t v12 = HIDWORD(a2);
  swift_retain();
  if ((v10 != -1 || v12)
    && (v10 & 0x80000000) == 0
    && v10 < *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v12 == -1 || *(_DWORD *)(v13 + 12 * v10 + 8) == v12) {
      sub_1B633B0F8(*(__int16 *)(v13 + 12 * v10 + 4), a3, a4, a5, a6);
    }
  }
  swift_release();
  return sub_1B633B0E8();
}

uint64_t sub_1B633B0E8()
{
  return sub_1B6E32478();
}

uint64_t sub_1B633B0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + 88))(a2, a3, a4);
  if (result)
  {
    uint64_t v8 = v5[24];
    if (v8)
    {
      uint64_t v9 = v5[26];
      uint64_t v10 = 8 * (a1 >> 6);
      *(void *)(v8 + v10) |= 1 << a1;
      *(void *)(v9 + v10) &= ~(1 << a1);
    }
    return sub_1B635AD78(v5[5], (uint64_t)v5, a1);
  }
  return result;
}

uint64_t sub_1B633B1A8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for ScriptIndex();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      uint64_t v7 = sub_1B6E31118();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      return v8(v4, v7);
    }
  }
  return result;
}

uint64_t sub_1B633B294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (const void *)(a2 + v5);
  uint64_t v7 = (void *)(a1 + v5);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = type metadata accessor for ScriptIndex();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v6, 1, v8))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v7, v6, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v6, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v6, *(void *)(v9 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1B633B470(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for ScriptIndex();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      uint64_t v7 = sub_1B6E31118();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      return v8(v4, v7);
    }
  }
  return result;
}

uint64_t sub_1B633B55C(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 96);
  float v3 = *(float *)(a1 + 148);
  int v4 = *(unsigned __int8 *)(a1 + 208);
  float v6 = *(float *)(a2 + 104);
  float v5 = *(float *)(a2 + 108);
  float v8 = *(float *)(a2 + 144);
  float v7 = *(float *)(a2 + 148);
  if (*(float *)(a1 + 104) == 0.0 && *(float *)(a1 + 108) == 0.0)
  {
    if (v6 != 0.0 || v5 != 0.0)
    {
      uint64_t result = 1;
      if (v8 != 0.0 || v7 != 0.0) {
        return result;
      }
    }
  }
  else if (*(float *)(a1 + 144) == 0.0)
  {
    if (v6 == 0.0 && v5 == 0.0)
    {
      if (v3 != 0.0) {
        return 1;
      }
    }
    else if (v8 == 0.0)
    {
      if ((v3 != 0.0) == (v7 == 0.0)) {
        return 1;
      }
    }
    else if (v3 == 0.0)
    {
      return 1;
    }
  }
  else if (v6 == 0.0)
  {
    if (v5 == 0.0) {
      return 1;
    }
    if (v8 == 0.0 && v7 == 0.0) {
      return 1;
    }
  }
  else if (v8 == 0.0 && v7 == 0.0)
  {
    return 1;
  }
  if (*(unsigned __int8 *)(a2 + 96) == 255)
  {
    if (v2 != 255) {
      return 1;
    }
  }
  else if (v2 == 255)
  {
    return 1;
  }
  return v4 ^ *(unsigned __int8 *)(a2 + 208);
}

uint64_t sub_1B633B694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(int *)(a3 + 36);
  float v7 = (const void *)(a2 + v6);
  float v8 = (void *)(a1 + v6);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v9 = type metadata accessor for ScriptIndex();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v7, 1, v9))
  {
    sub_1B63BCED0(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
    memcpy(v8, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1B6E31118();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v7, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v7, *(void *)(v10 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1B633B868(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    float v3 = v1;
    uint64_t v4 = (void *)((char *)v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v5 = result + 32;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v135 = v4;
    uint64_t v136 = v2;
    uint64_t v134 = v5;
    while (1)
    {
      uint64_t v7 = v5 + 32 * v6;
      if ((*(unsigned char *)(v7 + 8) & 2) == 0) {
        goto LABEL_5;
      }
      unint64_t v8 = *(void *)v7;
      uint64_t v9 = *(void *)v7 >> 60;
      if ((v9 - 5) < 0xB || v9 < 3) {
        goto LABEL_5;
      }
      uint64_t v11 = *(unsigned int *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
      uint64_t v12 = *(unsigned int *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v141 = v8;
      sub_1B62C6AA8(v8);
      sub_1B6E32738();
      uint64_t result = swift_conformsToProtocol2();
      if (!result)
      {
        __break(1u);
        return result;
      }
      if (!swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype())
      {
LABEL_114:
        unint64_t v59 = v141;
        goto LABEL_4;
      }
      BOOL v14 = v12 == -1 && v11 == 0;
      char v15 = v14;
      uint64_t v137 = (int)v12;
      uint64_t v133 = v11;
      char v138 = v15;
      if (v14) {
        goto LABEL_29;
      }
      if ((v12 & 0x80000000) != 0 || v4[1] <= (int)v12) {
        goto LABEL_48;
      }
      uint64_t v22 = *v4;
      uint64_t v23 = *v4 + 12 * (int)v12;
      if (v11 != -1 && *(_DWORD *)(v23 + 8) != v11) {
        goto LABEL_48;
      }
      uint64_t v25 = *(void *)(v3[17] + 8 * *(int *)(v22 + 12 * (int)v12) + 32);
      uint64_t v26 = *(void *)(v25 + 48);
      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        int v28 = *(__int16 *)(v23 + 4);
        uint64_t v29 = (void *)(v26 + 56);
        while ((ValueMetadata *)*(v29 - 3) != &type metadata for NodeTransformController)
        {
          v29 += 5;
          if (!--v27) {
            goto LABEL_45;
          }
        }
        uint64_t v71 = (void *)MEMORY[0x1BA9B8670](*(void *)(v25 + 128) + *v29 + 40 * v28 + 32);
        v72.columns[0] = (simd_float4)xmmword_1B6E4F300;
        v72.columns[1] = (simd_float4)xmmword_1B6E4F320;
        v72.columns[2] = (simd_float4)xmmword_1B6E4F2E0;
        v72.columns[3] = (simd_float4)xmmword_1B6E4F370;
        if (v71)
        {
          uint64_t v73 = v71;
          objc_msgSend(v71, sel_worldTransform, COERCE_DOUBLE(1065353216), 0.0078125, 0.0, 0.0);
          simd_float4 v140 = v74;
          simd_float4 v130 = v76;
          simd_float4 v132 = v75;
          simd_float4 v128 = v77;

          v72.columns[3] = v128;
          v72.columns[2] = v130;
          v72.columns[1] = v132;
          v72.columns[0] = v140;
        }
        uint64_t v78 = v4[1];
        if (v78 <= (int)v12)
        {
          unint64_t v59 = v141;
        }
        else
        {
          uint64_t v79 = *v4 + 12 * (int)v12;
          uint64_t v80 = *(__int16 *)(v79 + 4);
          unint64_t v59 = v141;
          if (v11 == -1 || *(_DWORD *)(v79 + 8) == v11)
          {
            uint64_t v81 = *(void *)(v3[17] + 8 * *(int *)(*v4 + 12 * (int)v12) + 32);
            uint64_t v82 = *(void *)(v81 + 48);
            uint64_t v83 = *(void *)(v82 + 16);
            if (v83)
            {
              char v84 = (void *)(v82 + 56);
              while ((ValueMetadata *)*(v84 - 3) != &type metadata for WorldTransform)
              {
                v84 += 5;
                if (!--v83) {
                  goto LABEL_107;
                }
              }
              *(simd_float4x4 *)(*(void *)(v81 + 128) + *v84 + (v80 << 6)) = v72;
              if (v4[1] <= (int)v12) {
                goto LABEL_4;
              }
LABEL_108:
              uint64_t v98 = *v4 + 12 * (int)v12;
              uint64_t v99 = *(__int16 *)(v98 + 4);
              if (v11 == -1 || *(_DWORD *)(v98 + 8) == v11)
              {
                uint64_t v100 = *(void *)(v3[17] + 8 * *(int *)(*v4 + 12 * (int)v12) + 32);
                uint64_t v101 = *(void *)(v100 + 48);
                uint64_t v102 = *(void *)(v101 + 16);
                if (v102)
                {
                  uint64_t v103 = (void *)(v101 + 56);
                  while ((ValueMetadata *)*(v103 - 3) != &type metadata for InverseWorldTransform)
                  {
                    v103 += 5;
                    if (!--v102) {
                      goto LABEL_114;
                    }
                  }
                  uint64_t v119 = (simd_float4x4 *)(*(void *)(v100 + 128) + *v103 + (v99 << 6));
                  *uint64_t v119 = __invert_f4(v72);
                  unint64_t v59 = v141;
                }
              }
              goto LABEL_4;
            }
          }
        }
LABEL_107:
        if (v78 > (int)v12) {
          goto LABEL_108;
        }
        goto LABEL_4;
      }
LABEL_45:
      uint64_t v30 = *(void *)(*(void *)(v3[10] + 8 * *(__int16 *)(v22 + 12 * (int)v12 + 6) + 32) + 16);
      uint64_t v31 = *(void *)(v30 + 128);
      if (*(void *)(v31 + 16))
      {
        unint64_t v32 = sub_1B62C1A30((uint64_t)&type metadata for NotInHierarchy);
        if (v33) {
          break;
        }
      }
      uint64_t v11 = v133;
      if ((v12 & 0x80000000) != 0) {
        goto LABEL_29;
      }
LABEL_49:
      uint64_t v35 = v4[1];
      if (v35 <= (int)v12) {
        goto LABEL_29;
      }
      uint64_t v36 = *v4;
      uint64_t v37 = *v4 + 12 * (int)v12;
      uint64_t v38 = *(__int16 *)(v37 + 4);
      if (v11 != -1 && *(_DWORD *)(v37 + 8) != v11
        || (uint64_t v39 = v3[17] + 32,
            uint64_t v40 = *(void *)(v39 + 8 * *(int *)(v36 + 12 * (int)v12)),
            uint64_t v41 = *(void *)(v40 + 48),
            (uint64_t v42 = *(void *)(v41 + 16)) == 0))
      {
LABEL_73:
        uint64_t v65 = *v4;
        if (v11 == -1 || *(_DWORD *)(v65 + 12 * (int)v12 + 8) == v11)
        {
          uint64_t v66 = *(void *)(*(void *)(v3[10] + 8 * *(__int16 *)(v65 + 12 * (int)v12 + 6) + 32) + 16);
          uint64_t v67 = *(void *)(v66 + 128);
          if (*(void *)(v67 + 16) && (unint64_t v68 = sub_1B62C1A30((uint64_t)&type metadata for PointOfView), (v69 & 1) != 0))
          {
            unsigned int v70 = *(ValueMetadata **)(*(void *)(v66 + 24) + 16 * *(void *)(*(void *)(v67 + 56) + 8 * v68) + 32);
            float32x4_t v129 = (float32x4_t)xmmword_1B6E4F320;
            float32x4_t v131 = (float32x4_t)xmmword_1B6E4F300;
            *(void *)&long long v13 = 0;
            float32x4_t v125 = (float32x4_t)xmmword_1B6E4F370;
            float32x4_t v127 = (float32x4_t)xmmword_1B6E4F2E0;
            uint64_t v11 = v133;
            if (v70 == &type metadata for PointOfView) {
              goto LABEL_61;
            }
          }
          else
          {
            uint64_t v11 = v133;
          }
        }
LABEL_29:
        id v16 = (void *)v3[22];
        swift_retain();
        os_unfair_recursive_lock_lock_with_options();
        uint64_t v17 = v16[6];
        uint64_t v18 = *(void *)(v17 + 16);
        if (!v18) {
          goto LABEL_60;
        }
        unint64_t v19 = 0;
        __n128 v20 = (void *)(v17 + 56);
        uint64_t v21 = 24;
        while ((ValueMetadata *)*(v20 - 3) != &type metadata for WorldFromScene)
        {
          ++v19;
          v21 += 32;
          v20 += 5;
          if (v18 == v19) {
            goto LABEL_60;
          }
        }
        if (v19 < 0x40 && ((v16[15] >> v19) & 1) != 0)
        {
          uint64_t v44 = v11;
          uint64_t v45 = (float32x4_t *)(v16[2] + *v20);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v16[4] + v21));
          os_unfair_recursive_lock_unlock();
          float32x4_t v129 = v45[1];
          float32x4_t v131 = *v45;
          float32x4_t v125 = v45[3];
          float32x4_t v127 = v45[2];
          uint64_t v11 = v44;
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16[4] + v21));
          swift_release();
        }
        else
        {
LABEL_60:
          os_unfair_recursive_lock_unlock();
          swift_release();
          float32x4_t v129 = (float32x4_t)xmmword_1B6E4F320;
          float32x4_t v131 = (float32x4_t)xmmword_1B6E4F300;
          *(void *)&long long v13 = 0;
          float32x4_t v125 = (float32x4_t)xmmword_1B6E4F370;
          float32x4_t v127 = (float32x4_t)xmmword_1B6E4F2E0;
        }
        goto LABEL_61;
      }
      unint64_t v43 = (void *)(v41 + 56);
      while ((ValueMetadata *)*(v43 - 3) != &type metadata for Parent)
      {
        v43 += 5;
        if (!--v42) {
          goto LABEL_73;
        }
      }
      BOOL v85 = (int *)(*(void *)(v40 + 128) + *v43 + 8 * v38);
      uint64_t v86 = v85[1];
      uint64_t v87 = *v85;
      BOOL v88 = v87 == -1 && v86 == 0;
      if (v88
        || (v87 & 0x80000000) != 0
        || v35 <= v87
        || (v86 != -1 ? (BOOL v89 = *(_DWORD *)(v36 + 12 * (int)v87 + 8) == v86) : (BOOL v89 = 1),
            !v89
         || (sub_1B633C4F4(*(void *)(v39 + 8 * *(int *)(v36 + 12 * (int)v87)), *(_DWORD *)(v36 + 12 * (int)v87), *(_WORD *)(v36 + 12 * (int)v87 + 4), 64, (uint64_t)v3, (uint64_t)v147), sub_1B62CA27C((uint64_t)v147, (uint64_t)v151, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform), (v153 & 1) != 0)))
      {
        uint64_t v90 = v3;
        sub_1B633C690(v87 | (unint64_t)(v86 << 32), 0, 0, 1, 0, 0, 1, 0, (uint64_t)v148, *(int32x2_t *)&v13, 0, 1);
        uint64_t v91 = v148[0];
        uint64_t v92 = v148[1];
        uint64_t v93 = v148[2];
        uint64_t v94 = v148[3];
        uint64_t v95 = v148[4];
        uint64_t v96 = v148[5];
        uint64_t v97 = v148[6];
        uint64_t v126 = v148[7];
        sub_1B633C598((uint64_t)v148, (uint64_t)v150);
        if (v150[64])
        {
          float32x4_t v129 = (float32x4_t)xmmword_1B6E4F320;
          float32x4_t v131 = (float32x4_t)xmmword_1B6E4F300;
          float32x4_t v127 = (float32x4_t)xmmword_1B6E4F2E0;
          long long v13 = xmmword_1B6E4F370;
        }
        else
        {
          v104.i64[0] = v91;
          v104.i64[1] = v92;
          float32x4_t v131 = v104;
          v104.i64[0] = v93;
          v104.i64[1] = v94;
          float32x4_t v129 = v104;
          v104.i64[0] = v95;
          v104.i64[1] = v96;
          float32x4_t v127 = v104;
          *(void *)&long long v13 = v97;
          *((void *)&v13 + 1) = v126;
        }
        float32x4_t v125 = (float32x4_t)v13;
        float v3 = v90;
      }
      else
      {
        float32x4_t v129 = v151[1];
        float32x4_t v131 = v151[0];
        *(void *)&long long v13 = v152.i64[0];
        float32x4_t v125 = v152;
        float32x4_t v127 = v151[2];
      }
      uint64_t v11 = v133;
LABEL_61:
      unint64_t v124 = v12 | (v11 << 32);
      uint64_t v46 = v3;
      sub_1B633C690(v124, 0, 0, 1, 0, 0, 1, 0, (uint64_t)v146, *(int32x2_t *)&v13, 0, 1);
      uint64_t v47 = v146[0];
      uint64_t v48 = v146[1];
      uint64_t v50 = v146[2];
      uint64_t v49 = v146[3];
      uint64_t v51 = v146[4];
      uint64_t v52 = v146[5];
      uint64_t v54 = v146[6];
      uint64_t v53 = v146[7];
      sub_1B633C598((uint64_t)v146, (uint64_t)v149);
      long long v55 = xmmword_1B6E4F300;
      long long v56 = xmmword_1B6E4F320;
      long long v57 = xmmword_1B6E4F2E0;
      long long v58 = xmmword_1B6E4F370;
      if ((v149[64] & 1) == 0)
      {
        *(void *)&long long v55 = v47;
        *((void *)&v55 + 1) = v48;
        *(void *)&long long v56 = v50;
        *((void *)&v56 + 1) = v49;
        *(void *)&long long v57 = v51;
        *((void *)&v57 + 1) = v52;
        *(void *)&long long v58 = v54;
        *((void *)&v58 + 1) = v53;
      }
      simd_float4 v142 = (simd_float4)xmmword_1B6E4F300;
      simd_float4 v143 = (simd_float4)xmmword_1B6E4F320;
      simd_float4 v144 = (simd_float4)xmmword_1B6E4F2E0;
      simd_float4 v145 = (simd_float4)xmmword_1B6E4F370;
      unint64_t v59 = v141;
      if (v138)
      {
        float v3 = v46;
        uint64_t v4 = v135;
        uint64_t v2 = v136;
        uint64_t v5 = v134;
      }
      else
      {
        float v3 = v46;
        uint64_t v4 = v135;
        uint64_t v2 = v136;
        if ((v137 & 0x80000000) != 0)
        {
          uint64_t v5 = v134;
        }
        else
        {
          uint64_t v5 = v134;
          if (v135[1] > v137)
          {
            uint64_t v60 = *v135;
            if (v133 == -1 || *(_DWORD *)(v60 + 12 * (int)v137 + 8) == v133)
            {
              uint64_t v61 = *(void *)(*(void *)(v3[10] + 8 * *(__int16 *)(v60 + 12 * (int)v137 + 6) + 32) + 16);
              uint64_t v62 = *(void *)(v61 + 128);
              if (*(void *)(v62 + 16))
              {
                float32x4_t v121 = (float32x4_t)v58;
                float32x4_t v122 = (float32x4_t)v57;
                float32x4_t v123 = (float32x4_t)v56;
                float32x4_t v139 = (float32x4_t)v55;
                unint64_t v63 = sub_1B62C1A30((uint64_t)&type metadata for WorldTransform);
                if ((v64 & 1) != 0
                  && *(ValueMetadata **)(*(void *)(v61 + 24) + 16 * *(void *)(*(void *)(v62 + 56) + 8 * v63) + 32) == &type metadata for WorldTransform)
                {
                  sub_1B633D010(v124, (uint64_t)v3, (float32x4_t *)&v142, v131, v129, v127, v125, v139, v123, v122, v121);
                  uint64_t v105 = v135[1];
                  if (v105 <= v137)
                  {
                    unint64_t v59 = v141;
                    int v108 = v133;
                  }
                  else
                  {
                    uint64_t v106 = *v135 + 12 * (int)v137;
                    uint64_t v107 = *(__int16 *)(v106 + 4);
                    int v108 = v133;
                    unint64_t v59 = v141;
                    if (v133 == -1 || *(_DWORD *)(v106 + 8) == v133)
                    {
                      uint64_t v109 = *(void *)(v3[17] + 8 * *(int *)(*v135 + 12 * (int)v137) + 32);
                      uint64_t v110 = *(void *)(v109 + 48);
                      uint64_t v111 = *(void *)(v110 + 16);
                      if (v111)
                      {
                        uint64_t v112 = (void *)(v110 + 56);
                        while ((ValueMetadata *)*(v112 - 3) != &type metadata for InverseWorldTransform)
                        {
                          v112 += 5;
                          if (!--v111) {
                            goto LABEL_127;
                          }
                        }
                        uint64_t v120 = (simd_float4x4 *)(*(void *)(v109 + 128) + *v112 + (v107 << 6));
                        v154.columns[2] = v144;
                        v154.columns[3] = v145;
                        v154.columns[0] = v142;
                        v154.columns[1] = v143;
                        simd_float4x4 v155 = __invert_f4(v154);
                        unint64_t v59 = v141;
                        *uint64_t v120 = v155;
                        int v108 = v133;
                        if (v135[1] <= v137) {
                          goto LABEL_4;
                        }
LABEL_128:
                        uint64_t v113 = *v135 + 12 * (int)v137;
                        uint64_t v114 = *(__int16 *)(v113 + 4);
                        if (v108 == -1 || *(_DWORD *)(v113 + 8) == v108)
                        {
                          uint64_t v115 = *(void *)(v3[17] + 8 * *(int *)(*v135 + 12 * (int)v137) + 32);
                          uint64_t v116 = *(void *)(v115 + 48);
                          uint64_t v117 = *(void *)(v116 + 16);
                          if (v117)
                          {
                            uint64_t v118 = (void *)(v116 + 56);
                            while ((ValueMetadata *)*(v118 - 3) != &type metadata for Children)
                            {
                              v118 += 5;
                              if (!--v117) {
                                goto LABEL_4;
                              }
                            }
                            sub_1B633F89C((uint64_t *)(*(void *)(v115 + 128) + *v118 + 8 * v114), (uint64_t)v3, (float32x4_t *)&v142);
                            unint64_t v59 = v141;
                          }
                        }
                        goto LABEL_4;
                      }
                    }
                  }
LABEL_127:
                  if (v105 > v137) {
                    goto LABEL_128;
                  }
                }
                else
                {
                  unint64_t v59 = v141;
                }
              }
            }
          }
        }
      }
LABEL_4:
      sub_1B62C6A70(v59);
LABEL_5:
      if (++v6 == v2) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v34 = *(ValueMetadata **)(*(void *)(v30 + 24) + 16 * *(void *)(*(void *)(v31 + 56) + 8 * v32) + 32);
    float32x4_t v129 = (float32x4_t)xmmword_1B6E4F320;
    float32x4_t v131 = (float32x4_t)xmmword_1B6E4F300;
    *(void *)&long long v13 = 0;
    float32x4_t v125 = (float32x4_t)xmmword_1B6E4F370;
    float32x4_t v127 = (float32x4_t)xmmword_1B6E4F2E0;
    uint64_t v11 = v133;
    if (v34 == &type metadata for NotInHierarchy) {
      goto LABEL_61;
    }
LABEL_48:
    if ((v12 & 0x80000000) != 0) {
      goto LABEL_29;
    }
    goto LABEL_49;
  }
  return result;
}

void *sub_1B633C400@<X0>(void *result@<X0>, void *(*a2)(_OWORD *__return_ptr, void, __n128)@<X1>, uint64_t a3@<X8>)
{
  long long v5 = 0uLL;
  if (result != (void *)0xFFFFFFFFLL)
  {
    char v6 = 1;
    if ((void)result << 32 < (int64_t)0xFFFFFFFF00000001
      || (int)result >= *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      goto LABEL_3;
    }
    uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v10 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t result = a2(v11, *(void *)(*(void *)(v3 + 136) + 8 * *(int *)(v10 + 12 * (int)result) + 32), (__n128)0);
      long long v5 = v11[0];
      long long v7 = v11[1];
      long long v8 = v11[2];
      long long v9 = v11[3];
      char v6 = v12;
      goto LABEL_4;
    }
  }
  char v6 = 1;
LABEL_3:
  long long v7 = 0uLL;
  long long v8 = 0uLL;
  long long v9 = 0uLL;
LABEL_4:
  *(_OWORD *)a3 = v5;
  *(_OWORD *)(a3 + 16) = v7;
  *(_OWORD *)(a3 + 32) = v8;
  *(_OWORD *)(a3 + 48) = v9;
  *(unsigned char *)(a3 + 64) = v6;
  return result;
}

uint64_t sub_1B633C4F4@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    long long v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for WorldTransform)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    char v17 = 0;
    uint64_t v18 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v8 + a3 * a4);
    uint64_t v9 = *v18;
    uint64_t v10 = v18[1];
    uint64_t v11 = v18[2];
    uint64_t v12 = v18[3];
    uint64_t v13 = v18[4];
    uint64_t v14 = v18[5];
    uint64_t v15 = v18[6];
    uint64_t v16 = v18[7];
  }
  else
  {
LABEL_5:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    char v17 = 1;
  }
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = v10;
  *(void *)(a6 + 16) = v11;
  *(void *)(a6 + 24) = v12;
  *(void *)(a6 + 32) = v13;
  *(void *)(a6 + 40) = v14;
  *(void *)(a6 + 48) = v15;
  *(void *)(a6 + 56) = v16;
  *(unsigned char *)(a6 + 64) = v17;
  return result;
}

uint64_t sub_1B633C598(uint64_t a1, uint64_t a2)
{
  sub_1B633C62C(0, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B633C62C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B633C690(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int32x2_t a10@<D0>, uint64_t a11, char a12)
{
  unint64_t v17 = HIDWORD(a1);
  if ((a4 & 1) == 0)
  {
    char v20 = 0;
    char v21 = a12;
    if ((a7 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_7:
    if (a1 != -1 || v17)
    {
      a5 = 0;
      char v22 = 1;
      if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001
        || (int)a1 >= *(void *)(v12 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
      {
        a6 = 0;
        if ((v21 & 1) == 0) {
          goto LABEL_26;
        }
        goto LABEL_31;
      }
      uint64_t v24 = *(void *)(v12 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (v17 == -1 || *(_DWORD *)(v24 + 12 * (int)a1 + 8) == v17)
      {
        uint64_t v32 = a8;
        int v33 = a3;
        uint64_t v34 = sub_1B633CCAC(*(void *)(*(void *)(v12 + 136) + 8 * *(int *)(v24 + 12 * (int)a1) + 32), *(_DWORD *)(v24 + 12 * (int)a1), *(_WORD *)(v24 + 12 * (int)a1 + 4), 16, v12);
        a3 = v33;
        a8 = v32;
        a5 = v34;
        a6 = v35;
        char v22 = v36 & 1;
        if ((v21 & 1) == 0) {
          goto LABEL_26;
        }
        goto LABEL_31;
      }
      a5 = 0;
      a6 = 0;
      if (v21) {
        goto LABEL_31;
      }
    }
    else
    {
      a5 = 0;
      a6 = 0;
      char v22 = 1;
      if (v21) {
        goto LABEL_31;
      }
    }
LABEL_26:
    char v25 = 0;
    uint64_t v26 = a11;
    if (v22) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
  if (a1 == 0xFFFFFFFF)
  {
    a2 = 0;
    a3 = 0;
    char v20 = 1;
    char v21 = a12;
    if (a7) {
      goto LABEL_7;
    }
  }
  else
  {
    a2 = 0;
    char v20 = 1;
    if ((uint64_t)(a1 << 32) < (uint64_t)0xFFFFFFFF00000001
      || (int)a1 >= *(void *)(v12 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      a3 = 0;
      char v21 = a12;
      if (a7) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v23 = *(void *)(v12 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (HIDWORD(a1) == -1 || *(_DWORD *)(v23 + 12 * (int)a1 + 8) == HIDWORD(a1))
      {
        uint64_t v27 = a5;
        uint64_t v28 = a8;
        uint64_t v29 = sub_1B633CFA0(*(void *)(*(void *)(v12 + 136) + 8 * *(int *)(v23 + 12 * (int)a1) + 32), *(_DWORD *)(v23 + 12 * (int)a1), *(_WORD *)(v23 + 12 * (int)a1 + 4), 16, v12);
        a5 = v27;
        a8 = v28;
        a2 = v29;
        a3 = v30;
        char v20 = v31 & 1;
        char v21 = a12;
        if (a7) {
          goto LABEL_7;
        }
      }
      else
      {
        a2 = 0;
        a3 = 0;
        char v21 = a12;
        if (a7) {
          goto LABEL_7;
        }
      }
    }
  }
LABEL_3:
  char v22 = 0;
  if ((v21 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_31:
  uint64_t v37 = a5;
  int v38 = a3;
  sub_1B633CD1C(a1, a10);
  a3 = v38;
  a5 = v37;
  a8 = v39;
  char v25 = v40 & 1;
  if (v22)
  {
LABEL_39:
    if (v20)
    {
      if (v25)
      {
        float32x4_t v46 = 0uLL;
        char v47 = 1;
        float32x4_t v48 = 0uLL;
        float32x4_t v49 = 0uLL;
        long long v50 = 0uLL;
        goto LABEL_54;
      }
      v58.i64[0] = a8;
      v58.i64[1] = v26;
      v46.f32[0] = sub_1B688CEA8(v58);
LABEL_50:
      char v47 = 0;
      goto LABEL_54;
    }
    *(void *)&long long v50 = a2;
    DWORD2(v50) = a3;
    if (v25)
    {
      char v47 = 0;
      HIDWORD(v50) = 1.0;
      float32x4_t v49 = (float32x4_t)xmmword_1B6E4F2E0;
      float32x4_t v48 = (float32x4_t)xmmword_1B6E4F320;
      float32x4_t v46 = (float32x4_t)xmmword_1B6E4F300;
    }
    else
    {
      char v47 = 0;
      v59.i64[0] = a8;
      HIDWORD(v50) = 1.0;
      v59.i64[1] = v26;
      float32x4_t v60 = vabsq_f32(v59);
      v60.i32[3] = 0;
      v61.i64[0] = 0x8000000080000000;
      v61.i64[1] = 0x8000000080000000;
      int8x16_t v62 = vorrq_s8((int8x16_t)(*(_OWORD *)&vmaxnmq_f32(v60, (float32x4_t)xmmword_1B6E4FCD0) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)), vandq_s8((int8x16_t)v59, v61));
      float32x4_t v46 = (float32x4_t)v62.u32[0];
      v49.i64[0] = 0;
      v48.i32[0] = 0;
      v48.i64[1] = 0;
      v48.i32[1] = v62.i32[1];
      v49.i64[1] = v62.u32[2];
    }
    goto LABEL_54;
  }
LABEL_32:
  uint64_t v41 = 0;
  v42.i64[0] = a5;
  v42.i64[1] = a6;
  while (1)
  {
    float32x4_t v87 = v42;
    float v44 = *(float *)((unint64_t)&v87 & 0xFFFFFFFFFFFFFFF3 | (4 * (v41 & 3)));
    long long v88 = xmmword_1B6E4F370;
    float v45 = *(float *)((unint64_t)&v88 & 0xFFFFFFFFFFFFFFF3 | (4 * (v41 & 3)));
    BOOL v43 = v44 == v45;
    if (v41 == 3) {
      break;
    }
    while (1)
    {
      ++v41;
      if (v43) {
        break;
      }
      if (v41 == 3) {
        goto LABEL_42;
      }
      BOOL v43 = 0;
    }
  }
  if (v44 == v45) {
    goto LABEL_39;
  }
LABEL_42:
  if (v20)
  {
    if ((v25 & 1) == 0)
    {
      char v47 = 0;
      v63.i64[0] = a8;
      v63.i64[1] = v26;
      float32x4_t v64 = vabsq_f32(v63);
      v64.i32[3] = 0;
      v65.i64[0] = 0x8000000080000000;
      v65.i64[1] = 0x8000000080000000;
      float32x4_t v66 = (float32x4_t)vorrq_s8((int8x16_t)(*(_OWORD *)&vmaxnmq_f32(v64, (float32x4_t)xmmword_1B6E4FCD0) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)), vandq_s8((int8x16_t)v63, v65));
      float32x4_t v67 = vmulq_f32(v42, v42);
      float32x4_t v68 = vmulq_laneq_f32(v42, v42, 3);
      float v69 = vmuls_lane_f32(*(float *)&a5, *(float32x2_t *)v42.f32, 1);
      float32x4_t v70 = vaddq_f32(v66, v66);
      v67.f32[0] = 0.5 - v67.f32[0];
      float32x2_t v71 = vmul_laneq_f32((float32x2_t)__PAIR64__(v42.u32[1], a5), v42, 2);
      v72.i32[3] = 0;
      v73.i32[3] = 0;
      v73.f32[0] = (float)(0.5 - v67.f32[1]) - v67.f32[2];
      v73.f32[1] = v69 + v68.f32[2];
      v73.f32[2] = v71.f32[0] - v68.f32[1];
      float32x4_t v46 = vmulq_n_f32(v73, v70.f32[0]);
      v72.f32[0] = v69 - v68.f32[2];
      v72.f32[1] = v67.f32[0] - v67.f32[2];
      v72.f32[2] = v71.f32[1] + v68.f32[0];
      float32x4_t v48 = vmulq_lane_f32(v72, *(float32x2_t *)v70.f32, 1);
      *(int32x2_t *)v68.f32 = vrev64_s32(*(int32x2_t *)v68.f32);
      v74.i32[0] = vadd_f32(v71, *(float32x2_t *)v68.f32).u32[0];
      v74.i32[1] = vsub_f32(v71, *(float32x2_t *)&v68).i32[1];
      v74.f32[2] = v67.f32[0] - v67.f32[1];
      v74.i32[3] = 0;
      float32x4_t v49 = vmulq_laneq_f32(v74, v70, 2);
      long long v50 = xmmword_1B6E4F370;
      goto LABEL_54;
    }
    *(double *)v46.i64 = sub_1B69D0C3C(v42);
    goto LABEL_50;
  }
  *(void *)&long long v50 = a2;
  DWORD2(v50) = a3;
  if (v25)
  {
    char v47 = 0;
    HIDWORD(v50) = 1.0;
    float32x4_t v51 = vmulq_f32(v42, v42);
    float32x4_t v52 = vmulq_laneq_f32(v42, v42, 3);
    float v53 = vmuls_lane_f32(*(float *)&a5, *(float32x2_t *)v42.f32, 1);
    v51.f32[0] = 0.5 - v51.f32[0];
    float32x2_t v54 = vmul_laneq_f32((float32x2_t)__PAIR64__(v42.u32[1], a5), v42, 2);
    v55.i32[3] = 0;
    v55.f32[0] = (float)(0.5 - v51.f32[1]) - v51.f32[2];
    v55.f32[1] = v53 + v52.f32[2];
    v56.i32[3] = 0;
    v55.f32[2] = v54.f32[0] - v52.f32[1];
    float32x4_t v46 = vaddq_f32(v55, v55);
    v56.f32[0] = v53 - v52.f32[2];
    v56.f32[1] = v51.f32[0] - v51.f32[2];
    v56.f32[2] = v54.f32[1] + v52.f32[0];
    float32x4_t v48 = vaddq_f32(v56, v56);
    *(int32x2_t *)v52.f32 = vrev64_s32(*(int32x2_t *)v52.f32);
    v57.i32[0] = vadd_f32(v54, *(float32x2_t *)v52.f32).u32[0];
    v57.i32[1] = vsub_f32(v54, *(float32x2_t *)&v52).i32[1];
    v57.f32[2] = v51.f32[0] - v51.f32[1];
    v57.i32[3] = 0;
    float32x4_t v49 = vaddq_f32(v57, v57);
  }
  else
  {
    char v47 = 0;
    v75.i64[0] = a8;
    HIDWORD(v50) = 1.0;
    v75.i64[1] = v26;
    float32x4_t v76 = vabsq_f32(v75);
    v76.i32[3] = 0;
    v77.i64[0] = 0x8000000080000000;
    v77.i64[1] = 0x8000000080000000;
    float32x4_t v78 = (float32x4_t)vorrq_s8((int8x16_t)(*(_OWORD *)&vmaxnmq_f32(v76, (float32x4_t)xmmword_1B6E4FCD0) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)), vandq_s8((int8x16_t)v75, v77));
    float32x4_t v79 = vmulq_f32(v42, v42);
    float32x4_t v80 = vmulq_laneq_f32(v42, v42, 3);
    float v81 = vmuls_lane_f32(*(float *)&a5, *(float32x2_t *)v42.f32, 1);
    float32x4_t v82 = vaddq_f32(v78, v78);
    v79.f32[0] = 0.5 - v79.f32[0];
    float32x2_t v83 = vmul_laneq_f32((float32x2_t)__PAIR64__(v42.u32[1], a5), v42, 2);
    v84.i32[3] = 0;
    v84.f32[0] = (float)(0.5 - v79.f32[1]) - v79.f32[2];
    v84.f32[1] = v81 + v80.f32[2];
    v85.i32[3] = 0;
    v84.f32[2] = v83.f32[0] - v80.f32[1];
    float32x4_t v46 = vmulq_n_f32(v84, v82.f32[0]);
    v85.f32[0] = v81 - v80.f32[2];
    v85.f32[1] = v79.f32[0] - v79.f32[2];
    v85.f32[2] = v83.f32[1] + v80.f32[0];
    float32x4_t v48 = vmulq_lane_f32(v85, *(float32x2_t *)v82.f32, 1);
    *(int32x2_t *)v80.f32 = vrev64_s32(*(int32x2_t *)v80.f32);
    v86.i32[0] = vadd_f32(v83, *(float32x2_t *)v80.f32).u32[0];
    v86.i32[1] = vsub_f32(v83, *(float32x2_t *)&v80).i32[1];
    v86.f32[2] = v79.f32[0] - v79.f32[1];
    v86.i32[3] = 0;
    float32x4_t v49 = vmulq_laneq_f32(v86, v82, 2);
  }
LABEL_54:
  *(float32x4_t *)a9 = v46;
  *(float32x4_t *)(a9 + 16) = v48;
  *(float32x4_t *)(a9 + 32) = v49;
  *(_OWORD *)(a9 + 48) = v50;
  *(unsigned char *)(a9 + 64) = v47;
}

uint64_t sub_1B633CCAC(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Orientation; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

int32x2_t sub_1B633CD1C(unint64_t a1, int32x2_t result)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return result;
  }
  uint64_t v4 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
  int64_t v6 = a1 << 32;
  uint64_t v7 = (int)a1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001 && (int)a1 < v5)
  {
    uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v8 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      sub_1B633CF30(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v8 + 12 * (int)a1) + 32), *(_DWORD *)(v8 + 12 * (int)a1), *(_WORD *)(v8 + 12 * (int)a1 + 4), 16, v2);
      if ((v11 & 1) == 0) {
        return result;
      }
      uint64_t v4 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
      uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
      if (v6 < (uint64_t)0xFFFFFFFF00000001) {
        goto LABEL_17;
      }
      goto LABEL_8;
    }
  }
  if (v6 >= (uint64_t)0xFFFFFFFF00000001)
  {
LABEL_8:
    if (v7 < v5)
    {
      uint64_t v9 = *(void *)(v2 + v4);
      if (v3 == -1 || *(_DWORD *)(v9 + 12 * (int)v7 + 8) == v3)
      {
        unint64_t v10 = sub_1B633F6A8(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v9 + 12 * (int)v7) + 32), *(_DWORD *)(v9 + 12 * (int)v7), *(_WORD *)(v9 + 12 * (int)v7 + 4), 4, v2);
        if ((v10 & 0x100000000) == 0)
        {
          result.i32[0] = v10;
          return (int32x2_t)vdupq_lane_s32(result, 0).u64[0];
        }
        uint64_t v4 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
        uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
      }
    }
  }
LABEL_17:
  if (v6 >= (uint64_t)0xFFFFFFFF00000001 && v7 < v5)
  {
    uint64_t v12 = *(void *)(v2 + v4);
    if (v3 == -1 || *(_DWORD *)(v12 + 12 * (int)v7 + 8) == v3)
    {
      uint64_t v13 = sub_1B633F720(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v12 + 12 * (int)v7) + 32), *(_DWORD *)(v12 + 12 * (int)v7), *(_WORD *)(v12 + 12 * (int)v7 + 4), 8, v2);
      if ((v14 & 1) == 0) {
        return (int32x2_t)v13;
      }
    }
  }
  return result;
}

uint64_t sub_1B633CF30(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Scale3; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B633CFA0(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Position; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B633D010(uint64_t a1, uint64_t a2, float32x4_t *a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8, float32x4_t a9, float32x4_t a10, float32x4_t a11)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v12 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v12 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B633D1BC(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v12 + 12 * (int)a1) + 32), *(_WORD *)(v12 + 12 * (int)a1 + 4), 64, a3, a4, a5, a6, a7, a8, a9, a10, a11), !v11)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B633D1BC(uint64_t a1, __int16 a2, uint64_t a3, float32x4_t *a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8, float32x4_t a9, float32x4_t a10, float32x4_t a11, float32x4_t a12)
{
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13) {
    return 0;
  }
  for (uint64_t i = (uint64_t *)(v12 + 56); (ValueMetadata *)*(i - 3) != &type metadata for WorldTransform; i += 5)
  {
    if (!--v13) {
      return 0;
    }
  }
  uint64_t v16 = *i;
  uint64_t v17 = *(void *)(a1 + 128);
  float32x4_t v18 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a5, a9.f32[0]), a6, *(float32x2_t *)a9.f32, 1), a7, a9, 2), a8, a9, 3);
  float32x4_t v19 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a5, a10.f32[0]), a6, *(float32x2_t *)a10.f32, 1), a7, a10, 2), a8, a10, 3);
  float32x4_t v20 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a5, a11.f32[0]), a6, *(float32x2_t *)a11.f32, 1), a7, a11, 2), a8, a11, 3);
  float32x4_t v21 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a5, a12.f32[0]), a6, *(float32x2_t *)a12.f32, 1), a7, a12, 2), a8, a12, 3);
  *a4 = v18;
  a4[1] = v19;
  a4[2] = v20;
  a4[3] = v21;
  char v22 = (float32x4_t *)(v17 + v16 + a2 * a3);
  *char v22 = v18;
  v22[1] = v19;
  v22[2] = v20;
  v22[3] = v21;
  return 1;
}

uint64_t sub_1B633D260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  a3[3] = a2;
  uint64_t v5 = sub_1B62C12C4(a3);
  uint64_t v6 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16);

  return v6(v5, a1, a2);
}

uint64_t sub_1B633D2CC()
{
  return sub_1B6E32478();
}

uint64_t sub_1B633D2DC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = result;
  if (a2 != 0xFFFFFFFFLL
    && a2 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a2 < *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v11 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a2) == -1 || *(_DWORD *)(v11 + 12 * (int)a2 + 8) == HIDWORD(a2))
    {
      uint64_t v12 = (unsigned int *)(v11 + 12 * (int)a2);
      uint64_t result = sub_1B62CD3E0(*(void *)(*(void *)(v5 + 136) + 8 * (int)*v12 + 32), a3, *v12 | ((unint64_t)*((unsigned __int16 *)v12 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v12 + 2) << 32), v5, &v14);
      if (v14)
      {
        uint64_t result = sub_1B633D438(v10, v14, a5, a3);
        if ((result & 1) == 0)
        {
          MEMORY[0x1F4188790](result, v13);
          return sub_1B6BFB680(a3, a4, a2, (void (*)(uint64_t))sub_1B6A51D30);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B633D438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v171.i64[0] = a2;
  v172.i64[0] = a1;
  v170.i64[0] = *(void *)(a4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1, a2);
  v169.i64[0] = (uint64_t)&v164 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5, v7);
  v168.i64[0] = (uint64_t)&v164 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  v167.i64[0] = (uint64_t)&v164 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11, v13);
  v166.i64[0] = (uint64_t)&v164 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14, v16);
  uint64_t v165 = (char *)&v164 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17, v19);
  char v22 = (char *)&v164 - v21;
  uint64_t v24 = MEMORY[0x1F4188790](v20, v23);
  uint64_t v26 = (char *)&v164 - v25;
  uint64_t v28 = MEMORY[0x1F4188790](v24, v27);
  int v30 = (char *)&v164 - v29;
  uint64_t v32 = MEMORY[0x1F4188790](v28, v31);
  uint64_t v34 = (char *)&v164 - v33;
  uint64_t v36 = MEMORY[0x1F4188790](v32, v35);
  int v38 = (char *)&v164 - v37;
  uint64_t v40 = MEMORY[0x1F4188790](v36, v39);
  float32x4_t v42 = (char *)&v164 - v41;
  uint64_t v44 = MEMORY[0x1F4188790](v40, v43);
  float32x4_t v46 = (char *)&v164 - v45;
  MEMORY[0x1F4188790](v44, v47);
  float32x4_t v49 = (char *)&v164 - v48;
  v174.i64[0] = v50;
  sub_1B6E32B08();
  uint64_t v173 = a3;
  if (swift_dynamicCastClass())
  {
    uint64_t v51 = v170.i64[0];
    uint64_t v52 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v170.i64[0] + 16))(v49, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v52);
    float32x4_t v53 = v185;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    if (*(_OWORD *)&v53 == *(_OWORD *)&v189) {
      LOBYTE(v54) = 1;
    }
    else {
      LOBYTE(v54) = sub_1B6E334B8();
    }
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_8;
  }
  float32x4_t v55 = v42;
  uint64_t v164 = v46;
  uint64_t v56 = v170.i64[0];
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    float32x4_t v57 = v164;
    uint64_t v58 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
    __int8 v59 = v185.i8[0];
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    LOBYTE(v54) = v59 ^ v189.i8[0] ^ 1;
    return v54 & 1;
  }
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    int8x16_t v61 = v164;
    uint64_t v62 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v61, v62);
    LODWORD(v54) = v185.i32[0];
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    LOBYTE(v54) = v54 == v189.i32[0];
    return v54 & 1;
  }
  sub_1B6E32B08();
  if (swift_dynamicCastClass() || (sub_1B6E32B08(), swift_dynamicCastClass()))
  {
    float32x4_t v63 = v164;
    uint64_t v64 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v63, v64);
    uint64_t v54 = v185.i64[0];
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    LOBYTE(v54) = v54 == v189.i64[0];
    return v54 & 1;
  }
  sub_1B633F5D8(255, &qword_1EB980EA0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC280]);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v65 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v65);
    int32x2_t v66 = *(int32x2_t *)v185.f32;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    int32x2_t v67 = vceq_s32(v66, *(int32x2_t *)v189.f32);
LABEL_17:
    LOBYTE(v54) = v67.i8[0] & v67.i8[4];
    return v54 & 1;
  }
  sub_1B633F5D8(255, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v68 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v38, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v68);
    float32x4_t v174 = v185;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    float32x4_t v69 = v174;
    uint64_t v70 = 0;
    float32x4_t v71 = v189;
    goto LABEL_95;
  }
  sub_1B633F5D8(255, &qword_1EB980F08, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2F8]);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v72 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v34, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v72);
    float32x4_t v174 = v185;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    uint64_t v73 = 0;
LABEL_99:
    float32x4_t v181 = v174;
    int v160 = *(_DWORD *)((unint64_t)&v181 & 0xFFFFFFFFFFFFFFF3 | (4 * (v73 & 3)));
    float32x4_t v182 = v189;
    LOBYTE(v54) = v160 == *(_DWORD *)((unint64_t)&v182 & 0xFFFFFFFFFFFFFFF3 | (4 * (v73 & 3)));
    while (v73 != 3)
    {
      ++v73;
      if (v54) {
        goto LABEL_99;
      }
      LOBYTE(v54) = 0;
    }
    return v54 & 1;
  }
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    float32x4_t v74 = v164;
    uint64_t v75 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v74, v75);
    float v76 = v185.f32[0];
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    LOBYTE(v54) = v76 == v189.f32[0];
    return v54 & 1;
  }
  sub_1B633F5D8(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v77 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v30, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v77);
    float32x2_t v78 = *(float32x2_t *)v185.f32;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    int32x2_t v67 = vceq_f32(v78, *(float32x2_t *)v189.f32);
    goto LABEL_17;
  }
  sub_1B633F5D8(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  sub_1B6E32B08();
  uint64_t v79 = v173;
  if (swift_dynamicCastClass())
  {
    uint64_t v80 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v26, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v80);
    float32x4_t v174 = v185;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    uint64_t v81 = 0;
LABEL_103:
    float32x4_t v179 = v174;
    float v161 = *(float *)((unint64_t)&v179 & 0xFFFFFFFFFFFFFFF3 | (4 * (v81 & 3)));
    float32x4_t v180 = v189;
    LOBYTE(v54) = v161 == *(float *)((unint64_t)&v180 & 0xFFFFFFFFFFFFFFF3 | (4 * (v81 & 3)));
    while (v81 != 2)
    {
      ++v81;
      if (v54) {
        goto LABEL_103;
      }
      LOBYTE(v54) = 0;
    }
    return v54 & 1;
  }
  sub_1B633F5D8(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v82 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v22, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v22, v82);
    float32x4_t v174 = v185;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    uint64_t v83 = 0;
LABEL_107:
    float32x4_t v177 = v174;
    float v162 = *(float *)((unint64_t)&v177 & 0xFFFFFFFFFFFFFFF3 | (4 * (v83 & 3)));
    float32x4_t v178 = v189;
    LOBYTE(v54) = v162 == *(float *)((unint64_t)&v178 & 0xFFFFFFFFFFFFFFF3 | (4 * (v83 & 3)));
    while (v83 != 3)
    {
      ++v83;
      if (v54) {
        goto LABEL_107;
      }
      LOBYTE(v54) = 0;
    }
    return v54 & 1;
  }
  type metadata accessor for simd_float2x2(255);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    float32x4_t v84 = v164;
    uint64_t v85 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v84, v85);
    float32x4_t v86 = v185;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    float32x4_t v87 = v189;
    swift_release();
    uint32x2_t v88 = (uint32x2_t)vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)&v86.u32[2], *(float32x2_t *)&v87.u32[2]), (int8x8_t)vceq_f32(*(float32x2_t *)v86.f32, *(float32x2_t *)v87.f32));
LABEL_36:
    unsigned int v89 = vpmin_u32(v88, v88).u32[0];
LABEL_43:
    LODWORD(v54) = v89 >> 31;
    return v54 & 1;
  }
  type metadata accessor for simd_float2x3(255);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v90 = v164;
    uint64_t v91 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v90, v91);
    float32x4_t v174 = v191;
    float32x4_t v171 = v192;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v185);
    swift_dynamicCast();
    float32x4_t v172 = v189;
    float32x4_t v170 = v190;
    swift_release();
    uint32x4_t v92 = (uint32x4_t)vandq_s8((int8x16_t)vceqq_f32(v171, v170), (int8x16_t)vceqq_f32(v174, v172));
LABEL_39:
    v92.i32[3] = v92.i32[2];
LABEL_42:
    unsigned int v89 = vminvq_u32(v92);
    goto LABEL_43;
  }
  type metadata accessor for simd_float2x4(255);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v93 = v164;
    uint64_t v94 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v93, v94);
    float32x4_t v174 = v191;
    float32x4_t v171 = v192;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v185);
    swift_dynamicCast();
    float32x4_t v172 = v189;
    float32x4_t v170 = v190;
    swift_release();
    uint32x4_t v92 = (uint32x4_t)vandq_s8((int8x16_t)vceqq_f32(v171, v170), (int8x16_t)vceqq_f32(v174, v172));
    goto LABEL_42;
  }
  type metadata accessor for simd_float3x2(255);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v95 = v164;
    uint64_t v96 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v95, v96);
    float32x4_t v97 = v185;
    float32x2_t v98 = *(float32x2_t *)v186.f32;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
    swift_dynamicCast();
    float32x4_t v99 = v189;
    float32x2_t v100 = *(float32x2_t *)v190.f32;
    swift_release();
    int8x8_t v101 = vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)&v97.u32[2], *(float32x2_t *)&v99.u32[2]), (int8x8_t)vceq_f32(*(float32x2_t *)v97.f32, *(float32x2_t *)v99.f32));
    int8x8_t v102 = (int8x8_t)vceq_f32(v98, v100);
LABEL_46:
    uint32x2_t v88 = (uint32x2_t)vand_s8(v101, v102);
    goto LABEL_36;
  }
  type metadata accessor for simd_float3x3(255);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v103 = v164;
    uint64_t v104 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v103, v104);
    float32x4_t v170 = v192;
    float32x4_t v171 = v191;
    float32x4_t v174 = v193;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v189);
    swift_dynamicCast();
    float32x4_t v168 = v186;
    float32x4_t v169 = v185;
    float32x4_t v172 = v187;
    swift_release();
    int8x16_t v105 = vandq_s8((int8x16_t)vceqq_f32(v170, v168), (int8x16_t)vceqq_f32(v171, v169));
    int8x16_t v106 = (int8x16_t)vceqq_f32(v174, v172);
LABEL_49:
    uint32x4_t v92 = (uint32x4_t)vandq_s8(v105, v106);
    goto LABEL_39;
  }
  type metadata accessor for simd_float3x4(255);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v107 = v164;
    uint64_t v108 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v107, v108);
    float32x4_t v170 = v192;
    float32x4_t v171 = v191;
    float32x4_t v174 = v193;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v189);
    swift_dynamicCast();
    float32x4_t v168 = v186;
    float32x4_t v169 = v185;
    float32x4_t v172 = v187;
    swift_release();
    int8x16_t v109 = vandq_s8((int8x16_t)vceqq_f32(v170, v168), (int8x16_t)vceqq_f32(v171, v169));
    int8x16_t v110 = (int8x16_t)vceqq_f32(v174, v172);
LABEL_52:
    uint32x4_t v92 = (uint32x4_t)vandq_s8(v109, v110);
    goto LABEL_42;
  }
  type metadata accessor for simd_float4x2(255);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v111 = v164;
    uint64_t v112 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v111, v112);
    float32x4_t v113 = v191;
    float32x4_t v114 = v192;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v185);
    swift_dynamicCast();
    float32x4_t v115 = v189;
    float32x4_t v116 = v190;
    swift_release();
    int8x8_t v101 = vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)&v113.u32[2], *(float32x2_t *)&v115.u32[2]), (int8x8_t)vceq_f32(*(float32x2_t *)v113.f32, *(float32x2_t *)v115.f32));
    int8x8_t v102 = vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)v114.f32, *(float32x2_t *)v116.f32), (int8x8_t)vceq_f32(*(float32x2_t *)&v114.u32[2], *(float32x2_t *)&v116.u32[2]));
    goto LABEL_46;
  }
  type metadata accessor for simd_float4x3(255);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v117 = v164;
    uint64_t v118 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v117, v118);
    float32x4_t v169 = v192;
    float32x4_t v170 = v191;
    float32x4_t v174 = v193;
    float32x4_t v171 = v194;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v189);
    swift_dynamicCast();
    float32x4_t v166 = v186;
    float32x4_t v167 = v185;
    float32x4_t v172 = v187;
    float32x4_t v168 = v188;
    swift_release();
    int8x16_t v105 = vandq_s8((int8x16_t)vceqq_f32(v169, v166), (int8x16_t)vceqq_f32(v170, v167));
    int8x16_t v106 = vandq_s8((int8x16_t)vceqq_f32(v174, v172), (int8x16_t)vceqq_f32(v171, v168));
    goto LABEL_49;
  }
  type metadata accessor for simd_float4x4(255);
  sub_1B6E32B08();
  if (swift_dynamicCastClass())
  {
    uint64_t v119 = v164;
    uint64_t v120 = v174.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
    swift_retain();
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v119, v120);
    float32x4_t v169 = v192;
    float32x4_t v170 = v191;
    float32x4_t v174 = v193;
    float32x4_t v171 = v194;
    sub_1B62CAAD8(v172.i64[0], (uint64_t)&v189);
    swift_dynamicCast();
    float32x4_t v166 = v186;
    float32x4_t v167 = v185;
    float32x4_t v172 = v187;
    float32x4_t v168 = v188;
    swift_release();
    int8x16_t v109 = vandq_s8((int8x16_t)vceqq_f32(v169, v166), (int8x16_t)vceqq_f32(v170, v167));
    int8x16_t v110 = vandq_s8((int8x16_t)vceqq_f32(v174, v172), (int8x16_t)vceqq_f32(v171, v168));
    goto LABEL_52;
  }
  type metadata accessor for simd_quatf(255);
  sub_1B6E32B08();
  if (!swift_dynamicCastClass())
  {
    sub_1B6E32B08();
    if (swift_dynamicCastClass())
    {
      uint64_t v124 = v56;
      float32x4_t v125 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
      uint64_t v126 = v166.i64[0];
      uint64_t v127 = v174.i64[0];
      v125(v166.i64[0], v171.i64[0], v174.i64[0]);
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v126, v127);
      __int32 v128 = v185.i32[0];
      __int32 v129 = v185.i32[1];
      sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
      swift_dynamicCast();
      LOBYTE(v54) = v128 == v189.i32[0] && v129 == v189.i32[1];
      return v54 & 1;
    }
    sub_1B67C5BBC(255, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
    sub_1B6E32B08();
    if (swift_dynamicCastClass())
    {
      uint64_t v131 = v167.i64[0];
      uint64_t v132 = v174.i64[0];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v167.i64[0], v171.i64[0], v174.i64[0]);
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v131, v132);
      float32x4_t v133 = v185;
      sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
      swift_dynamicCast();
      LOBYTE(v54) = v133.i64[0] == v189.i64[0] && v133.i64[1] == v189.i64[1];
      return v54 & 1;
    }
    sub_1B67C5BBC(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    sub_1B6E32B08();
    if (swift_dynamicCastClass())
    {
      uint64_t v135 = v168.i64[0];
      uint64_t v136 = v174.i64[0];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v168.i64[0], v171.i64[0], v174.i64[0]);
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v135, v136);
      uint64_t v137 = v185.i64[0];
      sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
      swift_dynamicCast();
      LOBYTE(v54) = *((float *)&v137 + 1) == v189.f32[1] && *(float *)&v137 == v189.f32[0];
      return v54 & 1;
    }
    sub_1B6E32B08();
    if (swift_dynamicCastClass())
    {
      uint64_t v138 = v56;
      float32x4_t v139 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
      uint64_t v140 = v169.i64[0];
      uint64_t v141 = v174.i64[0];
      v139(v169.i64[0], v171.i64[0], v174.i64[0]);
      swift_retain();
      swift_getAtKeyPath();
      (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v140, v141);
      float32x4_t v142 = v185;
      int v143 = v186.u8[0];
      sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
      swift_dynamicCast();
      uint64_t v144 = v189.i64[1];
      int v145 = v190.u8[0];
      if (sub_1B6918BC4(v142.i64[0], v189.i64[0]))
      {
        BOOL v146 = sub_1B634027C(v142.i64[1], v144);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        LOBYTE(v54) = v146 && v143 == v145;
        return v54 & 1;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_86;
    }
    sub_1B67C5BBC(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
    sub_1B6E32B08();
    if (swift_dynamicCastClass())
    {
      uint64_t v147 = v164;
      uint64_t v148 = v174.i64[0];
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
      swift_retain();
      swift_getAtKeyPath();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v147, v148);
      float32x4_t v149 = v185;
      uint64_t v150 = (float32x2_t *)v186.i64[0];
      LOBYTE(v147) = v186.i8[8];
      sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
      swift_dynamicCast();
      LOBYTE(v54) = sub_1B6A50DAC(v149.i64[0], v149.i64[1], v150, (char)v147, v189.i64[0], v189.i64[1], (float32x2_t *)v190.i64[0], v190.i8[8]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      return v54 & 1;
    }
    sub_1B6386084(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6E32B08();
    if (swift_dynamicCastClass())
    {
      uint64_t v151 = v164;
      uint64_t v152 = v174.i64[0];
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
      swift_retain();
      swift_getAtKeyPath();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v151, v152);
      char v153 = (void *)v185.i64[0];
      sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
      swift_dynamicCast();
      char v154 = sub_1B6919430(v153, v189.i64[0]);
    }
    else
    {
      sub_1B6386084(255, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
      sub_1B6E32B08();
      if (!swift_dynamicCastClass())
      {
        uint64_t v158 = MEMORY[0x1E4FBC840] + 8;
        sub_1B6E32B08();
        if (!swift_dynamicCastClass())
        {
          sub_1B6386084(255, (unint64_t *)&qword_1EB980F60, v158, MEMORY[0x1E4FBB718]);
          sub_1B6E32B08();
          if (!swift_dynamicCastClass())
          {
            v191.i64[0] = 0;
            v191.i64[1] = 0xE000000000000000;
            sub_1B6E328C8();
            sub_1B6E31948();
            v185.i64[0] = v79;
            sub_1B6E32768();
            sub_1B6E32B18();
            sub_1B6E32BE8();
            __break(1u);
LABEL_95:
            float32x4_t v183 = v69;
            int v159 = *(_DWORD *)((unint64_t)&v183 & 0xFFFFFFFFFFFFFFF3 | (4 * (v70 & 3)));
            float32x4_t v184 = v71;
            LOBYTE(v54) = v159 == *(_DWORD *)((unint64_t)&v184 & 0xFFFFFFFFFFFFFFF3 | (4 * (v70 & 3)));
            while (v70 != 2)
            {
              ++v70;
              if (v54) {
                goto LABEL_95;
              }
              LOBYTE(v54) = 0;
            }
            return v54 & 1;
          }
        }
LABEL_86:
        LOBYTE(v54) = 0;
        return v54 & 1;
      }
      simd_float4x4 v155 = v164;
      uint64_t v156 = v174.i64[0];
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v164, v171.i64[0], v174.i64[0]);
      swift_retain();
      swift_getAtKeyPath();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v155, v156);
      uint64_t v157 = v185.i64[0];
      sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
      swift_dynamicCast();
      char v154 = sub_1B634027C(v157, v189.i64[0]);
    }
    LOBYTE(v54) = v154;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return v54 & 1;
  }
  float32x4_t v121 = v165;
  uint64_t v122 = v174.i64[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v165, v171.i64[0], v174.i64[0]);
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v121, v122);
  float32x4_t v174 = v185;
  sub_1B62CAAD8(v172.i64[0], (uint64_t)&v191);
  swift_dynamicCast();
  uint64_t v123 = 0;
LABEL_111:
  float32x4_t v175 = v174;
  float v163 = *(float *)((unint64_t)&v175 & 0xFFFFFFFFFFFFFFF3 | (4 * (v123 & 3)));
  float32x4_t v176 = v189;
  LOBYTE(v54) = v163 == *(float *)((unint64_t)&v176 & 0xFFFFFFFFFFFFFFF3 | (4 * (v123 & 3)));
  while (v123 != 3)
  {
    ++v123;
    if (v54) {
      goto LABEL_111;
    }
    LOBYTE(v54) = 0;
  }
  return v54 & 1;
}

void sub_1B633F5D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B633F640(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B633F6A8(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for Scale1)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    unsigned __int8 v9 = 0;
    uint64_t v8 = *(unsigned int *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v7 + a3 * a4);
  }
  else
  {
LABEL_5:
    uint64_t v8 = 0;
    unsigned __int8 v9 = 1;
  }
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_1B633F720(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Scale2; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

char *sub_1B633F784(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1EB980C50, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
    uint64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B636A340(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[8 * v9 + 32]) {
    memmove(v14, a4 + 32, 8 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B633F89C(uint64_t *a1, uint64_t a2, float32x4_t *a3)
{
  uint64_t result = *a1;
  uint64_t v74 = *(void *)(result + 16);
  if (v74)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v72 = result + 32;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    float32x4_t v71 = v5;
    while (1)
    {
      uint64_t v7 = (unsigned int *)(v72 + 8 * v6);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      int v10 = *v7;
      BOOL v11 = v9 == 0xFFFFFFFFLL && v8 == 0;
      char v12 = v11;
      if (v11
        || (v9 & 0x80000000) != 0
        || v5[1] <= (int)v9
        || (v8 != -1 ? (BOOL v45 = *(_DWORD *)(*v5 + 12 * v10 + 8) == v8) : (BOOL v45 = 1),
            !v45
         || (uint64_t v46 = *(void *)(*(void *)(*(void *)(v4 + 80) + 8 * *(__int16 *)(*v5 + 12 * v10 + 6) + 32) + 16),
             uint64_t v47 = *(void *)(v46 + 128),
             !*(void *)(v47 + 16))
         || (unint64_t v48 = sub_1B62C1A30((uint64_t)&type metadata for NotInHierarchy), (v49 & 1) == 0)
         || *(ValueMetadata **)(*(void *)(v46 + 24) + 16 * *(void *)(*(void *)(v47 + 56) + 8 * v48) + 32) != &type metadata for NotInHierarchy))
      {
        char v77 = v12;
        uint64_t v76 = (int)v9;
        uint64_t v82 = v6;
        float32x4_t v68 = *a3;
        float32x4_t v69 = a3[1];
        int v75 = v8;
        float32x4_t v67 = a3[2];
        float32x4_t v70 = a3[3];
        uint64_t v13 = v4;
        sub_1B633C690(v9 | (v8 << 32), 0, 0, 1, 0, 0, 1, 0, (uint64_t)v80, *(int32x2_t *)a3[3].f32, 0, 1);
        uint64_t v15 = v80[0];
        uint64_t v14 = v80[1];
        uint64_t v16 = v80[2];
        uint64_t v17 = v80[3];
        uint64_t v19 = v80[4];
        uint64_t v18 = v80[5];
        uint64_t v21 = v80[6];
        uint64_t v20 = v80[7];
        sub_1B633C598((uint64_t)v80, (uint64_t)v81);
        long long v23 = xmmword_1B6E4F300;
        long long v22 = xmmword_1B6E4F320;
        long long v25 = xmmword_1B6E4F2E0;
        long long v24 = xmmword_1B6E4F370;
        if ((v81[64] & 1) == 0)
        {
          *(void *)&long long v23 = v15;
          *((void *)&v23 + 1) = v14;
          *(void *)&long long v22 = v16;
          *((void *)&v22 + 1) = v17;
          *(void *)&long long v25 = v19;
          *((void *)&v25 + 1) = v18;
          *(void *)&long long v24 = v21;
          *((void *)&v24 + 1) = v20;
        }
        v79.columns[0] = (simd_float4)xmmword_1B6E4F300;
        v79.columns[1] = (simd_float4)xmmword_1B6E4F320;
        v79.columns[2] = (simd_float4)xmmword_1B6E4F2E0;
        v79.columns[3] = (simd_float4)xmmword_1B6E4F370;
        if (v77)
        {
          uint64_t v4 = v13;
          uint64_t v5 = v71;
          uint64_t v6 = v82;
        }
        else
        {
          uint64_t v4 = v13;
          uint64_t v6 = v82;
          if ((v76 & 0x80000000) != 0)
          {
            uint64_t v5 = v71;
          }
          else
          {
            uint64_t v5 = v71;
            if (v71[1] > v76)
            {
              uint64_t v26 = *v71;
              uint64_t v27 = *v71 + 12 * (int)v76;
              int v30 = *(_DWORD *)(v27 + 8);
              uint64_t v29 = (int *)(v27 + 8);
              int v28 = v30;
              if (v75 == -1 || v28 == v75)
              {
                uint64_t v31 = *(void *)(*(void *)(*(void *)(v4 + 80) + 8 * *(__int16 *)(v26 + 12 * (int)v76 + 6) + 32)
                                + 16);
                uint64_t v32 = *(void *)(v31 + 128);
                if (*(void *)(v32 + 16))
                {
                  float32x4_t v63 = (float32x4_t)v23;
                  float32x4_t v64 = (float32x4_t)v22;
                  float32x4_t v65 = (float32x4_t)v25;
                  float32x4_t v66 = (float32x4_t)v24;
                  float32x2_t v78 = (int *)(*v71 + 12 * (int)v76);
                  unint64_t v33 = sub_1B62C1A30((uint64_t)&type metadata for WorldTransform);
                  if ((v34 & 1) != 0
                    && *(ValueMetadata **)(*(void *)(v31 + 24)
                                         + 16 * *(void *)(*(void *)(v32 + 56) + 8 * v33)
                                         + 32) == &type metadata for WorldTransform)
                  {
                    uint64_t v35 = v78;
                    uint64_t v36 = v26 + 12 * (int)v76;
                    uint64_t v39 = *(__int16 *)(v36 + 4);
                    int v38 = (__int16 *)(v36 + 4);
                    uint64_t v37 = v39;
                    if (v75 != -1 && *v29 != v75
                      || (uint64_t v40 = *(void *)(v4 + 136) + 32,
                          uint64_t v41 = *(void *)(v40 + 8 * *v78),
                          uint64_t v42 = *(void *)(v41 + 48),
                          (uint64_t v43 = *(void *)(v42 + 16)) == 0))
                    {
LABEL_60:
                      sub_1B6E328C8();
                      sub_1B6E31948();
                      sub_1B681F698();
                      sub_1B6E31948();
                      swift_bridgeObjectRelease();
                      sub_1B6E31948();
                      sub_1B6E31948();
                      sub_1B6E31948();
                      uint64_t result = sub_1B6E32BE8();
                      __break(1u);
                      return result;
                    }
                    uint64_t v44 = (void *)(v42 + 56);
                    while ((ValueMetadata *)*(v44 - 3) != &type metadata for WorldTransform)
                    {
                      v44 += 5;
                      if (!--v43) {
                        goto LABEL_60;
                      }
                    }
                    v50.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v68, v63.f32[0]), v69, *(float32x2_t *)v63.f32, 1), v67, v63, 2), v70, v63, 3);
                    v50.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v68, v64.f32[0]), v69, *(float32x2_t *)v64.f32, 1), v67, v64, 2), v70, v64, 3);
                    v50.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v68, v65.f32[0]), v69, *(float32x2_t *)v65.f32, 1), v67, v65, 2), v70, v65, 3);
                    v50.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v68, v66.f32[0]), v69, *(float32x2_t *)v66.f32, 1), v67, v66, 2), v70, v66, 3);
                    uint64_t v51 = (simd_float4x4 *)(*(void *)(v41 + 128) + *v44 + (v37 << 6));
                    simd_float4x4 v79 = v50;
                    *uint64_t v51 = v50;
                    __int16 v52 = *v38;
                    int v53 = *v29;
                    if (v75 == -1 || v53 == v75)
                    {
                      uint64_t v54 = *(void *)(v40 + 8 * *v78);
                      uint64_t v55 = *(void *)(v54 + 48);
                      uint64_t v56 = *(void *)(v55 + 16);
                      if (v56)
                      {
                        float32x4_t v57 = (void *)(v55 + 56);
                        while ((ValueMetadata *)*(v57 - 3) != &type metadata for InverseWorldTransform)
                        {
                          v57 += 5;
                          if (!--v56) {
                            goto LABEL_50;
                          }
                        }
                        uint64_t v58 = (simd_float4x4 *)(*(void *)(v54 + 128) + *v57 + ((uint64_t)*v38 << 6));
                        simd_float4x4 v83 = __invert_f4(v50);
                        uint64_t v35 = v78;
                        *uint64_t v58 = v83;
                        __int16 v52 = *v38;
                        int v53 = *v29;
                      }
                    }
LABEL_50:
                    if (v75 == -1 || v53 == v75)
                    {
                      uint64_t v59 = *(void *)(v40 + 8 * *v35);
                      uint64_t v60 = *(void *)(v59 + 48);
                      uint64_t v61 = *(void *)(v60 + 16);
                      if (v61)
                      {
                        uint64_t v62 = (void *)(v60 + 56);
                        while ((ValueMetadata *)*(v62 - 3) != &type metadata for Children)
                        {
                          v62 += 5;
                          if (!--v61) {
                            goto LABEL_4;
                          }
                        }
                        sub_1B633F89C(*(void *)(v59 + 128) + *v62 + 8 * v52, v4, &v79);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_4:
      if (++v6 == v74) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1B633FE90@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for ProjectionMatrix)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    char v17 = 0;
    uint64_t v18 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v8 + a3 * a4);
    uint64_t v9 = *v18;
    uint64_t v10 = v18[1];
    uint64_t v11 = v18[2];
    uint64_t v12 = v18[3];
    uint64_t v13 = v18[4];
    uint64_t v14 = v18[5];
    uint64_t v15 = v18[6];
    uint64_t v16 = v18[7];
  }
  else
  {
LABEL_5:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    char v17 = 1;
  }
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = v10;
  *(void *)(a6 + 16) = v11;
  *(void *)(a6 + 24) = v12;
  *(void *)(a6 + 32) = v13;
  *(void *)(a6 + 40) = v14;
  *(void *)(a6 + 48) = v15;
  *(void *)(a6 + 56) = v16;
  *(unsigned char *)(a6 + 64) = v17;
  return result;
}

uint64_t sub_1B633FF38(unsigned char *a1, unsigned char *a2)
{
  return (*a1 != 0) ^ (*a2 != 0);
}

uint64_t sub_1B633FF5C(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 36);
  uint64_t result = 1;
  if (v3 != *(_DWORD *)(a2 + 36)
    || *(_DWORD *)(a1 + 40) != *(_DWORD *)(a2 + 40)
    || ((*(unsigned __int8 *)(a1 + 44) ^ *(unsigned __int8 *)(a2 + 44)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 45) ^ *(unsigned __int8 *)(a2 + 45)) & 1) != 0)
  {
    return result;
  }
  float v5 = *(float *)a1;
  float v6 = *(float *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  int v8 = *(unsigned __int8 *)(a1 + 24);
  int v9 = *(_DWORD *)(a1 + 28);
  int v10 = *(_DWORD *)(a1 + 32);
  int v11 = *(_DWORD *)(a1 + 64);
  int v12 = *(unsigned __int8 *)(a1 + 68);
  int v13 = *(unsigned __int8 *)(a1 + 69);
  float v14 = *(float *)(a1 + 72);
  int v15 = *(unsigned __int8 *)(a1 + 76);
  int v16 = *(unsigned __int8 *)(a1 + 96);
  float v17 = *(float *)(a1 + 100);
  int v18 = *(unsigned __int8 *)(a1 + 104);
  int v19 = *(unsigned __int8 *)(a1 + 105);
  float v20 = *(float *)a2;
  float v21 = *(float *)(a2 + 8);
  float v22 = *(float *)(a2 + 100);
  if (*(unsigned char *)(a1 + 4) == 1)
  {
    if (v5 == 0.0)
    {
      if (v20 == 0.0) {
        char v25 = *(unsigned char *)(a2 + 4);
      }
      else {
        char v25 = 0;
      }
      if ((v25 & 1) == 0) {
        return 1;
      }
    }
    else if (LODWORD(v5) == 1)
    {
      if (LODWORD(v20) == 1) {
        char v23 = *(unsigned char *)(a2 + 4);
      }
      else {
        char v23 = 0;
      }
      if ((v23 & 1) == 0) {
        return 1;
      }
    }
    else
    {
      if (LODWORD(v20) > 1) {
        int v26 = *(unsigned __int8 *)(a2 + 4);
      }
      else {
        int v26 = 0;
      }
      if (v26 != 1) {
        return 1;
      }
    }
    uint64_t result = 1;
    if (v6 != v21) {
      return result;
    }
  }
  else
  {
    if (v5 == v20) {
      char v24 = *(unsigned char *)(a2 + 4);
    }
    else {
      char v24 = 1;
    }
    uint64_t result = 1;
    if ((v24 & 1) != 0 || v6 != v21) {
      return result;
    }
  }
  if (v8 != *(unsigned __int8 *)(a2 + 24)
    || v11 != *(_DWORD *)(a2 + 64)
    || v12 != *(unsigned __int8 *)(a2 + 68)
    || ((v13 ^ *(unsigned __int8 *)(a2 + 69)) & 1) != 0
    || v14 <= 0.0 == *(float *)(a2 + 72) > 0.0
    || v16 != *(unsigned __int8 *)(a2 + 96)
    || v15 != *(unsigned __int8 *)(a2 + 76))
  {
    return result;
  }
  if (v17 == 0.0)
  {
    if (v22 == 0.0)
    {
      if (v18 != *(unsigned __int8 *)(a2 + 104)) {
        return result;
      }
    }
    else if ((v18 & 1) == 0)
    {
      return result;
    }
    goto LABEL_44;
  }
  if (v22 == 0.0) {
    char v27 = *(unsigned char *)(a2 + 104);
  }
  else {
    char v27 = 1;
  }
  if (v27)
  {
LABEL_44:
    if (v7 == *(void *)(a2 + 16) && v9 == *(_DWORD *)(a2 + 28) && v10 == *(_DWORD *)(a2 + 32)) {
      return v19 ^ *(unsigned __int8 *)(a2 + 105);
    }
    else {
      return 1;
    }
  }
  return result;
}

BOOL sub_1B634014C(uint64_t a1, uint64_t a2)
{
  return (sub_1B6340184(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16)) & 1) == 0;
}

uint64_t sub_1B6340184(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6 != *(void *)(a4 + 16)) {
    return 0;
  }
  if (v6) {
    BOOL v7 = a1 == a4;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7) {
    return sub_1B634027C(a2, a5) & (a3 == a6);
  }
  uint64_t v9 = 0;
  uint64_t v10 = a1 + 32;
  while (2)
  {
    uint64_t v11 = 0;
    long long v12 = *(_OWORD *)(v10 + 16 * v9);
    long long v13 = *(_OWORD *)(a4 + 32 + 16 * v9);
    BOOL v14 = 1;
    while (!v14)
    {
      BOOL v14 = 0;
      uint64_t result = 0;
      if (v11 == 3) {
        return result;
      }
LABEL_10:
      ++v11;
    }
    long long v17 = v12;
    float v15 = *(float *)((unint64_t)&v17 & 0xFFFFFFFFFFFFFFF3 | (4 * (v11 & 3)));
    long long v18 = v13;
    float v16 = *(float *)((unint64_t)&v18 & 0xFFFFFFFFFFFFFFF3 | (4 * (v11 & 3)));
    BOOL v14 = v15 == v16;
    if (v11 != 3) {
      goto LABEL_10;
    }
    if (v15 == v16)
    {
      if (++v9 == v6) {
        return sub_1B634027C(a2, a5) & (a3 == a6);
      }
      continue;
    }
    return 0;
  }
}

BOOL sub_1B634027C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  float v5 = (float *)(a2 + 36);
  uint64_t v6 = (float *)(a1 + 36);
  do
  {
    float v7 = *v6++;
    float v8 = v7;
    float v9 = *v5++;
    float v10 = v9;
    BOOL result = v8 == v9;
    BOOL v11 = v4-- != 0;
  }
  while (v11 && v8 == v10);
  return result;
}

uint64_t sub_1B63402F4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v1 || (*(unsigned char *)(v1 + 536) & 1) != 0) {
    return result;
  }
  uint64_t v65 = result;
  uint64_t v2 = *(void *)(v1 + 272);
  if (*(unsigned char *)(v2 + 24) == 2)
  {
    BOOL result = sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  unint64_t v63 = *(void *)(v2 + 32);
  sub_1B6340F18(0, &qword_1EB980D68, (uint64_t (*)(uint64_t))sub_1B6340F7C, MEMORY[0x1E4FBBE00]);
  int v3 = (void *)swift_allocObject();
  sub_1B6383E40((uint64_t)v80);
  uint64_t v4 = *(void *)(*(void *)(*(void *)(v2 + 16) + 264) + 40);
  uint64_t v5 = *(void *)(v4 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v5)
  {
    uint64_t v7 = v80[0];
    uint64_t v6 = v80[1];
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1B62B2CE0(v7, v6);
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(v4 + 56) + 8 * v8);
      swift_unknownObjectRetain();
      sub_1B62C7BF4((uint64_t)v80);
      swift_release();
      sub_1B62C7BF4((uint64_t)v80);
      goto LABEL_9;
    }
    sub_1B62C7BF4((uint64_t)v80);
  }
  swift_release();
  sub_1B62C7BF4((uint64_t)v80);
  uint64_t v10 = 0;
LABEL_9:
  v3[4] = v10;
  v3[5] = 0;
  sub_1B6383E40((uint64_t)v81);
  uint64_t v11 = *(void *)(*(void *)(*(void *)(v2 + 16) + 264) + 40);
  uint64_t v12 = *(void *)(v11 + 16);
  swift_retain();
  if (v12)
  {
    uint64_t v13 = v81[1];
    uint64_t v14 = v81[0];
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1B62B2CE0(v14, v13);
    if (v16)
    {
      uint64_t v17 = *(void *)(*(void *)(v11 + 56) + 8 * v15);
      swift_unknownObjectRetain();
      sub_1B62C7BF4((uint64_t)v81);
      swift_release();
      sub_1B62C7BF4((uint64_t)v81);
      goto LABEL_14;
    }
    sub_1B62C7BF4((uint64_t)v81);
  }
  swift_release();
  sub_1B62C7BF4((uint64_t)v81);
  uint64_t v17 = 0;
LABEL_14:
  v3[6] = v17;
  v3[7] = 3;
  sub_1B6383E40((uint64_t)v82);
  uint64_t v18 = *(void *)(*(void *)(*(void *)(v2 + 16) + 264) + 40);
  uint64_t v19 = *(void *)(v18 + 16);
  swift_retain();
  if (v19)
  {
    uint64_t v20 = v82[1];
    uint64_t v21 = v82[0];
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1B62B2CE0(v21, v20);
    if (v23)
    {
      uint64_t v24 = *(void *)(*(void *)(v18 + 56) + 8 * v22);
      swift_unknownObjectRetain();
      sub_1B62C7BF4((uint64_t)v82);
      swift_release();
      sub_1B62C7BF4((uint64_t)v82);
      goto LABEL_19;
    }
    sub_1B62C7BF4((uint64_t)v82);
  }
  swift_release();
  sub_1B62C7BF4((uint64_t)v82);
  uint64_t v24 = 0;
LABEL_19:
  v3[8] = v24;
  v3[9] = 1;
  sub_1B6383E40((uint64_t)v83);
  uint64_t v25 = *(void *)(*(void *)(*(void *)(v2 + 16) + 264) + 40);
  uint64_t v26 = *(void *)(v25 + 16);
  swift_retain();
  if (v26)
  {
    uint64_t v27 = v83[1];
    uint64_t v28 = v83[0];
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1B62B2CE0(v28, v27);
    if (v30)
    {
      uint64_t v31 = *(void *)(*(void *)(v25 + 56) + 8 * v29);
      swift_unknownObjectRetain();
      sub_1B62C7BF4((uint64_t)v83);
      swift_release();
      sub_1B62C7BF4((uint64_t)v83);
    }
    else
    {
      sub_1B62C7BF4((uint64_t)v83);
      swift_release();
      sub_1B62C7BF4((uint64_t)v83);
      uint64_t v31 = 0;
    }
  }
  else
  {
    swift_release();
    sub_1B62C7BF4((uint64_t)v83);
    uint64_t v31 = 0;
  }
  v3[10] = v31;
  v3[11] = 2;
  if (!v10) {
    goto LABEL_37;
  }
  if (!v17) {
    goto LABEL_37;
  }
  if (!v24) {
    goto LABEL_37;
  }
  if (!v31) {
    goto LABEL_37;
  }
  sub_1B6383E40((uint64_t)v84);
  uint64_t v32 = sub_1B6330D9C((uint64_t)v84, 1, 0, 2);
  sub_1B62C7BF4((uint64_t)v84);
  if (!v32) {
    goto LABEL_37;
  }
  sub_1B6383E40((uint64_t)v85);
  uint64_t v33 = *(void *)(*(void *)(*(void *)(v2 + 16) + 264) + 40);
  uint64_t v34 = *(void *)(v33 + 16);
  swift_retain();
  if (!v34) {
    goto LABEL_36;
  }
  uint64_t v35 = v85[1];
  uint64_t v36 = v85[0];
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1B62B2CE0(v36, v35);
  if ((v38 & 1) == 0)
  {
    sub_1B62C7BF4((uint64_t)v85);
LABEL_36:
    swift_release();
    sub_1B62C7BF4((uint64_t)v85);
    swift_unknownObjectRelease();
LABEL_37:
    swift_setDeallocating();
    sub_1B6340F7C();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_release();
    return swift_release();
  }
  uint64_t v39 = *(void *)(*(void *)(v33 + 56) + 8 * v37);
  swift_unknownObjectRetain();
  sub_1B62C7BF4((uint64_t)v85);
  swift_release();
  sub_1B62C7BF4((uint64_t)v85);
  uint64_t v40 = swift_unknownObjectRetain();
  uint64_t v41 = sub_1B633483C(v40, 2, 0, 2, 0, 0);
  swift_unknownObjectRelease();
  id v42 = objc_msgSend(v41, sel_depthAttachment);
  swift_unknownObjectRetain();
  objc_msgSend(v42, sel_setTexture_, v39);
  objc_msgSend(v42, sel_setLoadAction_, 1);
  objc_msgSend(v42, sel_setStoreAction_, 0);
  objc_msgSend(v42, sel_setClearDepth_, 0.0);
  objc_msgSend(v42, sel_setLevel_, 0);

  swift_unknownObjectRelease();
  sub_1B6331D0C();
  uint64_t v43 = sub_1B6E328F8();
  sub_1B6388754(v43, v44, v41);
  BOOL v45 = (void *)sub_1B6388ED8(0);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (!v45)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    goto LABEL_37;
  }
  uint64_t ObjectType = swift_getObjectType();
  objc_msgSend(v45, sel_setFragmentTexture_atIndex_, v3[4], v3[5]);
  objc_msgSend(v45, sel_setFragmentTexture_atIndex_, v3[6], v3[7]);
  objc_msgSend(v45, sel_setFragmentTexture_atIndex_, v3[8], v3[9]);
  objc_msgSend(v45, sel_setFragmentTexture_atIndex_, v3[10], v3[11]);
  swift_setDeallocating();
  sub_1B6340F7C();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v47 = swift_unknownObjectRetain();
  sub_1B6D0E150(v47, 9);
  swift_unknownObjectRelease();
  sub_1B635FB18(v65, ObjectType);
  swift_retain();
  sub_1B6C18374((uint64_t)&v78);
  swift_release();
  if (v78 != 1)
  {
    uint64_t v66 = v78;
    char v48 = v79;
    *(void *)&v67[0] = 0xD00000000000001BLL;
    *((void *)&v67[0] + 1) = 0x80000001B6F53000;
    *(void *)&long long v68 = MEMORY[0x1E4FBC860];
    *((void *)&v68 + 1) = 0xD000000000000017;
    v67[1] = 0uLL;
    unint64_t v69 = 0x80000001B6F53020;
    uint64_t v70 = 0;
    *(void *)&long long v71 = 0;
    *((void *)&v71 + 1) = MEMORY[0x1E4FBC860];
    long long v74 = 0u;
    long long v75 = 0u;
    long long v76 = 0u;
    long long v77 = 0u;
    long long v72 = 0u;
    long long v73 = 0u;
    v90[0] = v67[0];
    v90[1] = 0uLL;
    memset(&v90[5], 0, 96);
    v90[3] = 0x80000001B6F53020;
    v90[4] = v71;
    v90[2] = v68;
    sub_1B63129D0((uint64_t *)v67);
    sub_1B638963C((uint64_t)v86);
    sub_1B6B19094();
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_1B6E76900;
    *(_OWORD *)(v49 + 32) = xmmword_1B6EC64D0;
    *(unsigned char *)(v49 + 48) = 0;
    uint64_t v62 = v48 & 1;
    *(void *)(v49 + 64) = v62;
    *(_OWORD *)(v49 + 72) = 0u;
    *(_OWORD *)(v49 + 88) = 0u;
    *(_OWORD *)(v49 + 104) = 0u;
    *(void *)(v49 + 120) = 0;
    *(unsigned char *)(v49 + 128) = 13;
    *(_OWORD *)(v49 + 144) = xmmword_1B6EC64E0;
    *(unsigned char *)(v49 + 160) = 0;
    *(_OWORD *)(v49 + 176) = 0u;
    *(_OWORD *)(v49 + 192) = 0u;
    *(_OWORD *)(v49 + 208) = 0u;
    *(_OWORD *)(v49 + 224) = 0u;
    *(unsigned char *)(v49 + 240) = 13;
    uint64_t v50 = *(unsigned __int8 *)(v1 + 600);
    *(_OWORD *)(v49 + 256) = xmmword_1B6EC64F0;
    *(unsigned char *)(v49 + 272) = 0;
    *(void *)(v49 + 288) = v50;
    *(_OWORD *)(v49 + 296) = 0u;
    *(_OWORD *)(v49 + 312) = 0u;
    *(_OWORD *)(v49 + 328) = 0u;
    *(void *)(v49 + 344) = 0;
    *(unsigned char *)(v49 + 352) = 13;
    uint64_t v61 = (v63 >> 16) & 1;
    *(_OWORD *)(v49 + 368) = xmmword_1B6EC6500;
    *(unsigned char *)(v49 + 384) = 0;
    *(void *)(v49 + 400) = !(v63 & 0x10000);
    *(_OWORD *)(v49 + 408) = 0u;
    *(_OWORD *)(v49 + 424) = 0u;
    *(_OWORD *)(v49 + 440) = 0u;
    *(void *)(v49 + 456) = 0;
    *(unsigned char *)(v49 + 464) = 13;
    *(_OWORD *)(v49 + 480) = xmmword_1B6EC6510;
    *(unsigned char *)(v49 + 496) = 0;
    *(_OWORD *)(v49 + 544) = 0u;
    *(_OWORD *)(v49 + 560) = 0u;
    *(_OWORD *)(v49 + 512) = 0u;
    *(_OWORD *)(v49 + 528) = 0u;
    *(unsigned char *)(v49 + 576) = 14;
    memset(v91, 0, sizeof(v91));
    __int16 v92 = 256;
    v93[0] = 0;
    v93[1] = 0;
    v93[2] = 2;
    memset(&v93[3], 0, 24);
    sub_1B62D5ED4((uint64_t *)v90, v86, 0, 0, v49, (uint64_t)v91, 3, (uint64_t)v93, (uint64_t)v87, 1, 1);
    sub_1B638A224((uint64_t *)v67);
    uint64_t v64 = OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare;
    swift_retain();
    unint64_t v51 = sub_1B638A310((uint64_t)v87, 0);
    unint64_t v53 = v51;
    uint64_t v54 = v52;
    if (v51 >= 3)
    {
      unint64_t v55 = swift_unknownObjectRetain();
      sub_1B630B7D8(v55, v54);
      swift_release();
      if (*(unsigned char *)(v65 + v64) == 1)
      {
        sub_1B63129D0((uint64_t *)v67);
        sub_1B638963C((uint64_t)v88);
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = xmmword_1B6E76900;
        *(_OWORD *)(v56 + 32) = xmmword_1B6EC64D0;
        *(unsigned char *)(v56 + 48) = 0;
        *(void *)(v56 + 64) = v62;
        *(_OWORD *)(v56 + 72) = 0u;
        *(_OWORD *)(v56 + 88) = 0u;
        *(_OWORD *)(v56 + 104) = 0u;
        *(void *)(v56 + 120) = 0;
        *(unsigned char *)(v56 + 128) = 13;
        *(_OWORD *)(v56 + 144) = xmmword_1B6EC64E0;
        *(unsigned char *)(v56 + 160) = 0;
        *(_OWORD *)(v56 + 176) = 0u;
        *(_OWORD *)(v56 + 192) = 0u;
        *(_OWORD *)(v56 + 208) = 0u;
        *(_OWORD *)(v56 + 224) = 0u;
        *(unsigned char *)(v56 + 240) = 13;
        uint64_t v57 = *(unsigned __int8 *)(v1 + 600);
        *(_OWORD *)(v56 + 256) = xmmword_1B6EC64F0;
        *(unsigned char *)(v56 + 272) = 0;
        *(void *)(v56 + 288) = v57;
        *(_OWORD *)(v56 + 296) = 0u;
        *(_OWORD *)(v56 + 312) = 0u;
        *(_OWORD *)(v56 + 328) = 0u;
        *(void *)(v56 + 344) = 0;
        *(unsigned char *)(v56 + 352) = 13;
        *(_OWORD *)(v56 + 368) = xmmword_1B6EC6500;
        *(unsigned char *)(v56 + 384) = 0;
        *(void *)(v56 + 400) = v61;
        *(_OWORD *)(v56 + 408) = 0u;
        *(_OWORD *)(v56 + 424) = 0u;
        *(_OWORD *)(v56 + 440) = 0u;
        *(void *)(v56 + 456) = 0;
        *(unsigned char *)(v56 + 464) = 13;
        *(_OWORD *)(v56 + 480) = xmmword_1B6EC6510;
        *(unsigned char *)(v56 + 496) = 0;
        *(_OWORD *)(v56 + 544) = 0u;
        *(_OWORD *)(v56 + 560) = 0u;
        *(_OWORD *)(v56 + 512) = 0u;
        *(_OWORD *)(v56 + 528) = 0u;
        *(unsigned char *)(v56 + 576) = 14;
        sub_1B62D5ED4((uint64_t *)v90, v88, 0, 0, v56, (uint64_t)v91, 3, (uint64_t)v93, (uint64_t)v89, 1, 1);
        sub_1B638A224((uint64_t *)v67);
        swift_retain();
        unint64_t v58 = sub_1B638A310((uint64_t)v89, 0);
        uint64_t v60 = v59;
        if (v58 >= 3) {
          unint64_t v58 = swift_unknownObjectRetain();
        }
        sub_1B630B7D8(v58, v60);
        swift_release();
        swift_unknownObjectRelease();
        sub_1B638CE7C(v89);
      }
      else
      {
        objc_msgSend(v45, sel_setDepthStencilState_, *(void *)(*(void *)(v1 + 248) + 688));
        objc_msgSend(v45, sel_setRenderPipelineState_, v53);
        sub_1B6389C1C(1);
      }
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1B630B7D8(v51, v52);
      swift_release();
    }
    sub_1B638CE7C(v87);
    sub_1B638A224((uint64_t *)v67);
    sub_1B6D15BF8(v66);
  }
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

void sub_1B6340F18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B6340F7C()
{
  if (!qword_1EB980470)
  {
    sub_1B6340F18(255, (unint64_t *)&unk_1EB980460, (uint64_t (*)(uint64_t))sub_1B6AB24D4, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB980470);
    }
  }
}

uint64_t sub_1B6341014(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7 = 4 * a3;
  ecs_stack_allocator_push_snapshot(a4);
  ecs_stack_allocator_allocate(a4, v7, 8);
  swift_retain();
  unint64_t v8 = (void *)sub_1B62F1868(0, v7);
  uint64_t v10 = v9;
  swift_unknownObjectRetain();
  swift_release();
  id v11 = objc_msgSend(v8, sel_storageMode);
  uint64_t v12 = 0;
  if (v11 != (id)2)
  {
    id v13 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v14 = v8;
    uint64_t v12 = (uint64_t)v13 + v10;
  }
  if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3))
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    radix_sort_float(a2, v12);
    ecs_stack_allocator_pop_snapshot(a4);
    return (uint64_t)v8;
  }
  return result;
}

void radix_sort_float_with_input_indices_0(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  int v3 = v2;
  uint64_t v5 = v4;
  unsigned int v7 = v6;
  uint64_t v9 = v8;
  id v11 = v10;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  bzero(v42, 0x6000uLL);
  if (v3)
  {
    if (v7)
    {
      uint64_t v12 = v7;
      id v13 = v3;
      do
      {
        int v14 = *v13++;
        unsigned int v15 = ((v11[v14] >> 31) | 0x80000000) ^ v11[v14];
        ++v42[v15 & 0x7FF];
        ++v42[((v15 >> 11) & 0x7FF) + 2048];
        ++v42[(v15 >> 22) + 4096];
        --v12;
      }
      while (v12);
    }
  }
  else if (v7)
  {
    uint64_t v16 = v7;
    uint64_t v17 = v11;
    do
    {
      int v18 = *v17++;
      unsigned int v19 = ((v18 >> 31) | 0x80000000) ^ v18;
      ++v42[v19 & 0x7FF];
      ++v42[((v19 >> 11) & 0x7FF) + 2048];
      ++v42[(v19 >> 22) + 4096];
      --v16;
    }
    while (v16);
  }
  uint64_t v20 = 0;
  unsigned int v21 = 0;
  unsigned int v22 = 0;
  unsigned int v23 = 0;
  do
  {
    uint64_t v24 = &v42[v20];
    unsigned int v25 = v42[v20];
    *uint64_t v24 = v21;
    v21 += v25;
    unsigned int v26 = v42[v20 + 2048];
    v24[2048] = v22;
    v22 += v26;
    unsigned int v27 = v42[v20 + 4096];
    v24[4096] = v23;
    v23 += v27;
    ++v20;
  }
  while (v20 != 2048);
  *uint64_t v9 = 666;
  if (v3)
  {
    if (!v7) {
      return;
    }
    uint64_t v28 = v7;
    do
    {
      int v29 = *v3++;
      uint64_t v30 = v42[((unsigned __int16)v11[v29] ^ (unsigned __int16)(v11[v29] >> 31)) & 0x7FF];
      v42[((unsigned __int16)v11[v29] ^ (unsigned __int16)(v11[v29] >> 31)) & 0x7FF] = v30 + 1;
      v9[v30] = v29;
      --v28;
    }
    while (v28);
  }
  else
  {
    if (!v7) {
      return;
    }
    for (uint64_t i = 0; i != v7; v9[v32] = i++)
    {
      uint64_t v32 = v42[((unsigned __int16)v11[i] ^ (unsigned __int16)(v11[i] >> 31)) & 0x7FF];
      v42[((unsigned __int16)v11[i] ^ (unsigned __int16)(v11[i] >> 31)) & 0x7FF] = v32 + 1;
    }
  }
  uint64_t v33 = v7;
  uint64_t v34 = v7;
  uint64_t v35 = v9;
  do
  {
    int v36 = *v35++;
    unsigned int v37 = ((v11[v36] ^ (v11[v36] >> 31)) >> 11) & 0x7FF;
    uint64_t v38 = v42[v37 + 2048];
    v42[v37 + 2048] = v38 + 1;
    v5[v38] = v36;
    --v34;
  }
  while (v34);
  do
  {
    int v39 = *v5++;
    unsigned int v40 = (((v11[v39] >> 31) | 0x80000000) ^ v11[v39]) >> 22;
    uint64_t v41 = v42[v40 + 4096];
    v42[v40 + 4096] = v41 + 1;
    v9[v41] = v39;
    --v33;
  }
  while (v33);
}

uint64_t sub_1B6341444()
{
  return type metadata accessor for ParticleSizeInit.System();
}

uint64_t type metadata accessor for ParticleSizeInit.System()
{
  return self;
}

const char *sub_1B6341488()
{
  return "ParticleSizeInitSystem";
}

uint64_t *sub_1B63414A0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = 0;
  uint64_t v6 = *a1;
  unint64_t v5 = a1[1];
  swift_retain();
  uint64_t v7 = sub_1B635A274(v5);
  unsigned __int8 v9 = v8;
  int v10 = v8;
  swift_release();
  if (v10 == 2) {
    float v11 = 1.0;
  }
  else {
    float v11 = *(float *)&v7;
  }
  if (v10 == 2) {
    float v12 = 1.0;
  }
  else {
    float v12 = *((float *)&v7 + 1);
  }
  if (v9)
  {
    uint64_t v54 = a1[4];
    swift_retain();
    sub_1B62F6B80((uint64_t)a1);
    swift_retain();
    sub_1B6C009B4(v54, v6, (uint64_t)a1, v2);
  }
  else
  {
    if (v11 == v12)
    {
      if (v11 == 0.0)
      {
        long long v13 = *(_OWORD *)(v2 + 32);
        long long v123 = *(_OWORD *)(v2 + 16);
        long long v124 = v13;
        uint64_t v125 = *(void *)(v2 + 48);
        uint64_t v14 = swift_retain();
        sub_1B62C9DA8(v14, (uint64_t)&v123, 0x200000000, v107);
        sub_1B62CA210((uint64_t)v107, (uint64_t)&v108, (unint64_t *)&qword_1EB97DC50);
        if ((void)v108)
        {
          long long v116 = v108;
          long long v117 = v109;
          uint64_t v96 = v111;
          uint64_t v118 = v110;
          uint64_t v16 = v112;
          uint64_t v15 = v113;
          uint64_t v17 = v115;
          uint64_t v103 = v114;
          swift_release();
          if (v17 > 0 && v16)
          {
            uint64_t v18 = v103[4];
            int v101 = *(unsigned __int8 *)(v15 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            long long v119 = v116;
            long long v120 = v117;
            uint64_t v121 = v118;
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v19 = 0;
            __asm { FMOV            V0.4S, #1.0 }
            long long v89 = _Q0;
            int32x4_t v90 = vdupq_n_s32(0x4479FFFFu);
            uint64_t v93 = v16;
            uint64_t v91 = v18;
            while (1)
            {
              unsigned int v25 = (unsigned int *)(v96 + 48 * v19);
              unsigned int v27 = (uint64_t *)*((void *)v25 + 2);
              uint64_t v26 = *((void *)v25 + 3);
              unint64_t v29 = *((void *)v25 + 4);
              uint64_t v28 = *((void *)v25 + 5);
              uint64_t v105 = v4;
              uint64_t v97 = v25[1];
              uint64_t v99 = *v25;
              if (v101)
              {
                uint64_t v30 = *(os_unfair_lock_s **)(v28 + 376);
                swift_retain_n();
                os_unfair_lock_lock(v30);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v28 + 344));
                swift_release();
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v18);
              sub_1B62CA210((uint64_t)(v103 + 6), (uint64_t)v122, &qword_1EB97DE20);
              uint64_t v31 = v103[4];
              uint64_t v32 = *(void *)(*(void *)(*(void *)(*(void *)(v28 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              v103[6] = ecs_stack_allocator_allocate(v31, 48 * v32, 8);
              v103[7] = v32;
              v103[9] = 0;
              v103[10] = 0;
              v103[8] = 0;
              swift_release();
              uint64_t v33 = sub_1B62C9024((uint64_t)&type metadata for ParticleLifetime, (uint64_t)&off_1F0F6DC48, v27, v26, v29, (uint64_t)v103);
              uint64_t v34 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v27, v26, v29, (uint64_t)v103);
              if (!v27)
              {
                uint64_t v40 = v99;
                if (v99 != v97)
                {
                  uint64_t v41 = v97 - v99;
                  uint64_t v36 = v93;
                  uint64_t v18 = v91;
                  if ((unint64_t)(v97 - v99) < 0xC) {
                    goto LABEL_33;
                  }
                  uint64_t v42 = v34 + 4 * v99;
                  uint64_t v43 = v33 + 4 * v99;
                  if ((unint64_t)(v42 - v43) < 0x20) {
                    goto LABEL_33;
                  }
                  uint64_t v40 = (v41 & 0xFFFFFFFFFFFFFFF8) + v99;
                  uint64_t v44 = (int32x4_t *)(v43 + 16);
                  BOOL v45 = (_OWORD *)(v42 + 16);
                  unint64_t v46 = v41 & 0xFFFFFFFFFFFFFFF8;
                  do
                  {
                    v44[-1] = v90;
                    *uint64_t v44 = v90;
                    v44 += 2;
                    *(v45 - 1) = v89;
                    *BOOL v45 = v89;
                    v45 += 2;
                    v46 -= 8;
                  }
                  while (v46);
                  if (v41 != (v41 & 0xFFFFFFFFFFFFFFF8))
                  {
LABEL_33:
                    uint64_t v47 = v97 - v40;
                    char v48 = (_DWORD *)(v34 + 4 * v40);
                    uint64_t v49 = (_DWORD *)(v33 + 4 * v40);
                    do
                    {
                      *v49++ = 1148846079;
                      *v48++ = 1065353216;
                      --v47;
                    }
                    while (v47);
                  }
                  goto LABEL_39;
                }
LABEL_27:
                uint64_t v36 = v93;
                uint64_t v18 = v91;
                goto LABEL_39;
              }
              if (!v29) {
                goto LABEL_27;
              }
              unint64_t v35 = 0;
              if (v29 < 8) {
                break;
              }
              uint64_t v36 = v93;
              uint64_t v18 = v91;
              if ((unint64_t)(v34 - v33) < 0x20) {
                goto LABEL_37;
              }
              unint64_t v35 = v29 & 0xFFFFFFFFFFFFFFF8;
              unsigned int v37 = (int32x4_t *)(v33 + 16);
              uint64_t v38 = (_OWORD *)(v34 + 16);
              unint64_t v39 = v29 & 0xFFFFFFFFFFFFFFF8;
              do
              {
                v37[-1] = v90;
                *unsigned int v37 = v90;
                v37 += 2;
                *(v38 - 1) = v89;
                *uint64_t v38 = v89;
                v38 += 2;
                v39 -= 8;
              }
              while (v39);
              if (v29 != v35) {
                goto LABEL_37;
              }
LABEL_39:
              uint64_t v4 = v105;
              sub_1B6345178(v103, (unsigned __int16 **)&v119, (uint64_t)v122);
              sub_1B634507C((char *)v28);
              ecs_stack_allocator_pop_snapshot(v18);
              if (v101)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 376));
              }
              swift_release();
              if (++v19 == v36) {
                goto LABEL_78;
              }
            }
            uint64_t v36 = v93;
            uint64_t v18 = v91;
LABEL_37:
            unint64_t v50 = v29 - v35;
            uint64_t v51 = 4 * v35;
            __int16 v52 = (_DWORD *)(v34 + 4 * v35);
            unint64_t v53 = (_DWORD *)(v33 + v51);
            do
            {
              *v53++ = 1148846079;
              *v52++ = 1065353216;
              --v50;
            }
            while (v50);
            goto LABEL_39;
          }
          return sub_1B632F170(v107);
        }
        return (uint64_t *)swift_release();
      }
      long long v57 = *(_OWORD *)(v2 + 72);
      long long v123 = *(_OWORD *)(v2 + 56);
      long long v124 = v57;
      uint64_t v125 = *(void *)(v2 + 88);
      uint64_t v58 = swift_retain();
      sub_1B62C9DA8(v58, (uint64_t)&v123, 0x200000000, v107);
      sub_1B62CA210((uint64_t)v107, (uint64_t)&v108, (unint64_t *)&qword_1EB97DC50);
      if (!(void)v108) {
        return (uint64_t *)swift_release();
      }
      long long v116 = v108;
      long long v117 = v109;
      uint64_t v100 = v111;
      uint64_t v118 = v110;
      uint64_t v60 = v112;
      uint64_t v59 = v113;
      uint64_t v61 = v114;
      uint64_t v62 = v115;
      swift_release();
      if (v62 <= 0 || !v60) {
        return sub_1B632F170(v107);
      }
      uint64_t v104 = v61[4];
      int v63 = *(unsigned __int8 *)(v59 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v64.i32[1] = DWORD1(v116);
      long long v119 = v116;
      long long v120 = v117;
      uint64_t v121 = v118;
      *(float *)v64.i32 = 1.0 / v11;
      if (v11 <= 0.001) {
        *(float *)v64.i32 = 1000.0;
      }
      int32x2_t v94 = v64;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v65 = 0;
      int32x4_t v92 = vdupq_lane_s32(v94, 0);
      int v95 = v63;
      uint64_t v98 = v60;
      while (1)
      {
        uint64_t v66 = (unsigned int *)(v100 + 48 * v65);
        uint64_t v67 = *v66;
        uint64_t v102 = v66[1];
        unint64_t v69 = (uint64_t *)*((void *)v66 + 2);
        uint64_t v68 = *((void *)v66 + 3);
        unint64_t v70 = *((void *)v66 + 4);
        uint64_t v71 = *((void *)v66 + 5);
        uint64_t v106 = v4;
        if (v63)
        {
          long long v72 = *(os_unfair_lock_s **)(v71 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v72);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v71 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v104);
        sub_1B62CA210((uint64_t)(v61 + 6), (uint64_t)v122, &qword_1EB97DE20);
        uint64_t v73 = v61[4];
        uint64_t v74 = *(void *)(*(void *)(*(void *)(*(void *)(v71 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v61[6] = ecs_stack_allocator_allocate(v73, 48 * v74, 8);
        v61[7] = v74;
        v61[9] = 0;
        v61[10] = 0;
        void v61[8] = 0;
        swift_release();
        uint64_t v75 = sub_1B62C9024((uint64_t)&type metadata for ParticleLifetime, (uint64_t)&off_1F0F6DC48, v69, v68, v70, (uint64_t)v61);
        if (v69)
        {
          if (!v70) {
            goto LABEL_61;
          }
          if (v70 >= 8)
          {
            unint64_t v76 = v70 & 0xFFFFFFFFFFFFFFF8;
            uint64_t v78 = (int32x4_t *)(v75 + 16);
            unint64_t v79 = v70 & 0xFFFFFFFFFFFFFFF8;
            uint64_t v4 = v106;
            int v63 = v95;
            __int32 v77 = v94.i32[0];
            do
            {
              v78[-1] = v92;
              *uint64_t v78 = v92;
              v78 += 2;
              v79 -= 8;
            }
            while (v79);
            if (v70 == v76) {
              goto LABEL_75;
            }
          }
          else
          {
            unint64_t v76 = 0;
            uint64_t v4 = v106;
            int v63 = v95;
            __int32 v77 = v94.i32[0];
          }
          unint64_t v80 = v70 - v76;
          uint64_t v81 = (__int32 *)(v75 + 4 * v76);
          do
          {
            *v81++ = v77;
            --v80;
          }
          while (v80);
        }
        else
        {
          if (v67 == v102)
          {
LABEL_61:
            uint64_t v4 = v106;
            int v63 = v95;
            goto LABEL_75;
          }
          uint64_t v82 = v102 - v67;
          if ((unint64_t)(v102 - v67) >= 8)
          {
            uint64_t v83 = (v82 & 0xFFFFFFFFFFFFFFF8) + v67;
            uint64_t v85 = (int32x4_t *)(v75 + 4 * v67 + 16);
            unint64_t v86 = v82 & 0xFFFFFFFFFFFFFFF8;
            do
            {
              v85[-1] = v92;
              *uint64_t v85 = v92;
              v85 += 2;
              v86 -= 8;
            }
            while (v86);
            uint64_t v4 = v106;
            int v63 = v95;
            __int32 v84 = v94.i32[0];
            if (v82 == (v82 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_75;
            }
          }
          else
          {
            uint64_t v83 = v67;
            uint64_t v4 = v106;
            int v63 = v95;
            __int32 v84 = v94.i32[0];
          }
          uint64_t v87 = v102 - v83;
          uint32x2_t v88 = (__int32 *)(v75 + 4 * v83);
          do
          {
            *v88++ = v84;
            --v87;
          }
          while (v87);
        }
LABEL_75:
        sub_1B6345178(v61, (unsigned __int16 **)&v119, (uint64_t)v122);
        sub_1B634507C((char *)v71);
        ecs_stack_allocator_pop_snapshot(v104);
        if (v63)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v71 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v71 + 376));
        }
        swift_release();
        if (++v65 == v98)
        {
LABEL_78:
          sub_1B632F170(v107);
          return sub_1B632F170(v107);
        }
      }
    }
    uint64_t v55 = a1[4];
    swift_retain();
    sub_1B62F6B80((uint64_t)a1);
    swift_retain();
    sub_1B6358FDC(v55, v6, (uint64_t)a1, v2);
  }
  swift_release();
  sub_1B62F648C((uint64_t)a1);

  return (uint64_t *)swift_release();
}

uint64_t sub_1B6341D58(uint64_t result)
{
  if (*(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + 176);
    swift_retain();
    swift_retain();
    uint64_t v3 = 0;
    uint64_t v4 = sub_1B63422CC(v2);
    char v6 = v5;
    swift_release();
    if (v6)
    {
      return swift_release();
    }
    else
    {
      if (qword_1EB97EC70 != -1) {
        swift_once();
      }
      v59[0] = xmmword_1EB997C98;
      v59[1] = unk_1EB997CA8;
      uint64_t v60 = qword_1EB997CB8;
      sub_1B62C9DA8(v1, (uint64_t)v59, 0x200000000, v48);
      uint64_t v7 = sub_1B62D80E8((uint64_t)v48, (uint64_t)v49, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
      if (*(void *)&v49[0])
      {
        if (v55 >= 1)
        {
          uint64_t v42 = v52;
          if (v52)
          {
            uint64_t v9 = v54[4];
            int v10 = *(unsigned __int8 *)(v53 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            v56[0] = v49[0];
            v56[1] = v49[1];
            uint64_t v57 = v50;
            uint64_t v38 = (uint64_t)(v54 + 6);
            uint64_t v39 = v51;
            uint64_t v47 = v54;
            unsigned int v37 = v54 + 8;
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v11 = 0;
            uint64_t v40 = v9;
            uint64_t v41 = v1;
            int v36 = v10;
            do
            {
              uint64_t v45 = v11;
              uint64_t v12 = *(void *)(v39 + 48 * v11 + 40);
              if (v10)
              {
                uint64_t v13 = v1;
                uint64_t v14 = *(os_unfair_lock_s **)(v12 + 376);
                swift_retain();
                os_unfair_lock_lock(v14);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
              }
              else
              {
                uint64_t v13 = v1;
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v9);
              sub_1B62D80E8(v38, (uint64_t)v58, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
              uint64_t v15 = v47[4];
              uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              v47[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
              v47[7] = v16;
              v37[1] = 0;
              v37[2] = 0;
              *unsigned int v37 = 0;
              swift_release();
              int v17 = *(_DWORD *)(v12 + 24);
              uint64_t v18 = *(os_unfair_lock_s **)(v13 + 128);
              swift_retain();
              os_unfair_lock_lock(v18);
              int v44 = *(_DWORD *)(v12 + 188);
              uint64_t v19 = *(void **)(v13 + 96);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v13 + 96) = v19;
              uint64_t v46 = v3;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                uint64_t v19 = sub_1B6C16694(v19);
                *(void *)(v13 + 96) = v19;
              }
              uint64_t v43 = v19 + 4;
              uint64_t v21 = (uint64_t)&v19[5 * v17 + 4];
              uint64_t v24 = *(void *)(v21 + 16);
              uint64_t v23 = v21 + 16;
              uint64_t v22 = v24;
              if (v4 >= *(void *)(v24 + 16))
              {
                sub_1B6E32A08();
                sub_1B6E32A28();
                do
                {
                  sub_1B6E32A08();
                  sub_1B6E32A68();
                  sub_1B6E32A78();
                  sub_1B6E32A28();
                  uint64_t v22 = *(void *)v23;
                }
                while ((unint64_t)v4 >= *(void *)(*(void *)v23 + 16));
              }
              char v25 = swift_isUniquelyReferenced_nonNull_native();
              *(void *)uint64_t v23 = v22;
              int v26 = v17;
              if ((v25 & 1) == 0) {
                sub_1B6D67280();
              }
              uint64_t v27 = v22 + 8 * v4;
              uint64_t v30 = *(void *)(v27 + 32);
              uint64_t v28 = (uint64_t *)(v27 + 32);
              uint64_t v29 = v30;
              char v31 = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v28 = v30;
              if ((v31 & 1) == 0)
              {
                sub_1B6C3D6EC(0, *(void *)(v29 + 16) + 1, 1);
                uint64_t v29 = *v28;
              }
              unint64_t v33 = *(void *)(v29 + 16);
              unint64_t v32 = *(void *)(v29 + 24);
              if (v33 >= v32 >> 1)
              {
                sub_1B6C3D6EC(v32 > 1, v33 + 1, 1);
                uint64_t v29 = *v28;
              }
              *(void *)(v29 + 16) = v33 + 1;
              uint64_t v34 = v29 + 24 * v33;
              *(_DWORD *)(v34 + 32) = v44;
              *(void *)(v34 + 40) = 0;
              *(void *)(v34 + 48) = 0;
              sub_1B6E32A28();
              LOBYTE(v43[5 * v26 + 3]) = 1;
              uint64_t v1 = v41;
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v41 + 128));
              swift_release();
              uint64_t v3 = v46;
              sub_1B6345178(v47, (unsigned __int16 **)v56, (uint64_t)v58);
              sub_1B634507C((char *)v12);
              uint64_t v9 = v40;
              ecs_stack_allocator_pop_snapshot(v40);
              int v10 = v36;
              if (v36)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
              }
              swift_release();
              uint64_t v11 = v45 + 1;
            }
            while (v45 + 1 != v42);
            sub_1B632F1C4(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
          }
        }
        uint64_t v7 = (uint64_t)sub_1B632F1C4(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
      MEMORY[0x1F4188790](v7, v8);
      unint64_t v35 = *(void **)(v1 + 176);
      swift_retain();
      sub_1B636E6CC((uint64_t)&type metadata for MeshRenderSystemState, (uint64_t)&off_1F0F87F80, v35, (void (*)(uint64_t))sub_1B637169C);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B63422CC(uint64_t a1)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v2 = sub_1B636E9A8((uint64_t)&type metadata for MainCullGroup);
  if (v4)
  {
    uint64_t v6 = v2;
    uint64_t v7 = *(void *)(a1 + 16);
    uint64_t v8 = 32 * v3;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + 32 * v3 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v5 = *(void *)(v7 + v6);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + v8 + 24));
  }
  else
  {
    os_unfair_recursive_lock_unlock();
    return 0;
  }
  return v5;
}

uint64_t sub_1B6342384(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 176);
  swift_retain();
  sub_1B63423EC((uint64_t)&type metadata for InputStream, (uint64_t)&off_1F0F55798, v1);

  return swift_release();
}

void sub_1B63423EC(uint64_t a1, uint64_t a2, void *a3)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v6 = sub_1B636E9A8(a1);
  if (v7 != 2)
  {
    unint64_t v14 = v8;
    uint64_t v15 = a3[2];
    uint64_t v16 = (unint64_t *)(v15 + v6);
    if (v7)
    {
      uint64_t v22 = a3[4];
      uint64_t v19 = a3 + 4;
      uint64_t v21 = v22 + 32 * v8;
    }
    else
    {
      sub_1B636E480(v15 + v6, 1, a1);
      uint64_t v17 = 1 << v14;
      if (v14 >= 0x40) {
        uint64_t v17 = 0;
      }
      uint64_t v20 = a3[4];
      uint64_t v19 = a3 + 4;
      uint64_t v18 = v20;
      if (v14 > 0x40) {
        uint64_t v17 = 0;
      }
      v19[11] |= v17;
      uint64_t v21 = v18 + 32 * v14;
    }
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 24));
    os_unfair_recursive_lock_unlock();
    sub_1B6342688(v16);
    uint64_t v13 = *v19 + 32 * v14;
    goto LABEL_16;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v23);
  if (v26 + v25 <= 4096)
  {
    unint64_t v9 = v23;
    int v10 = (unint64_t *)(a3[2] + v26);
    sub_1B636E480((uint64_t)v10, 1, v24);
    uint64_t v11 = 1 << v9;
    if (v9 >= 0x40) {
      uint64_t v11 = 0;
    }
    if (v9 > 0x40) {
      uint64_t v11 = 0;
    }
    a3[15] |= v11;
    uint64_t v12 = 32 * v9;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a3[4] + v12 + 24));
    os_unfair_recursive_lock_unlock();
    sub_1B6342688(v10);
    uint64_t v13 = a3[4] + v12;
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 24));
    return;
  }
  unint64_t v23 = 0;
  uint64_t v24 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B6342688(unint64_t *a1)
{
  if (*(void *)(a1[4] + 16))
  {
    swift_isUniquelyReferenced_nonNull_native();
    unint64_t v7 = a1[4];
    a1[4] = 0x8000000000000000;
    sub_1B68D796C();
    sub_1B6E327E8();
    a1[4] = v7;
    swift_bridgeObjectRelease();
  }
  unint64_t v2 = *a1;
  if ((*a1 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0
    || (char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(),
        unint64_t v2 = *a1,
        (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0))
  {
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1B6E32C18();
      sub_1B6E32C18();
      sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1;
    }
    *a1 = sub_1B63577E0(0, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    return sub_1B68EA1DC(0, v4);
  }
}

uint64_t sub_1B63427E4(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return a1;
}

double sub_1B6342918(uint64_t a1)
{
  *(void *)(a1 + 240) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

void sub_1B6342948(uint64_t a1)
{
  uint64_t v2 = 0;
  uint64_t v485 = *MEMORY[0x1E4F143B8];
  long long v3 = *(_OWORD *)(v1 + 56);
  long long v4 = *(_OWORD *)(v1 + 72);
  uint64_t v409 = *(void *)(v1 + 88);
  v408[0] = v3;
  v408[1] = v4;
  sub_1B62C9DA8(a1, (uint64_t)v408, 0x200000000, v410);
  sub_1B62D7910((uint64_t)v410, (uint64_t)v449, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v449[0]) {
    goto LABEL_169;
  }
  long long v382 = v449[0];
  long long v383 = v449[1];
  uint64_t v384 = v450;
  if (v455 >= 1)
  {
    uint64_t v326 = v452;
    if (v452)
    {
      uint64_t v324 = v451;
      int v5 = *(unsigned __int8 *)(v453 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v6 = v454[4];
      long long v347 = v454;
      long long v316 = v454 + 8;
      uint64_t v318 = (uint64_t)(v454 + 6);
      long long v338 = v454 + 13;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v7 = 0;
      int v322 = v5;
      uint64_t v320 = v6;
      while (1)
      {
        unint64_t v8 = (unsigned int *)(v324 + 48 * v7);
        uint64_t v9 = *v8;
        uint64_t v370 = v8[1];
        uint64_t v10 = *((void *)v8 + 3);
        long long v334 = (uint64_t *)*((void *)v8 + 2);
        uint64_t v11 = *((void *)v8 + 5);
        uint64_t v353 = *((void *)v8 + 4);
        if (v5)
        {
          uint64_t v12 = v2;
          uint64_t v13 = *(os_unfair_lock_s **)(v11 + 376);
          swift_retain();
          os_unfair_lock_lock(v13);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 344));
        }
        else
        {
          uint64_t v12 = v2;
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v6);
        sub_1B62D7910(v318, (uint64_t)v484, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v14 = v347[4];
        uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v11 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v347[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
        v347[7] = v15;
        v316[1] = 0;
        _OWORD v316[2] = 0;
        *long long v316 = 0;
        swift_release();
        uint64_t v16 = v353;
        uint64_t v364 = sub_1B62C9024((uint64_t)&type metadata for SpaceOverride, (uint64_t)&off_1F0F61DE0, v334, v10, v353, (uint64_t)v347);
        uint64_t v329 = v7;
        if (v334)
        {
          uint64_t v2 = v12;
          uint64_t v17 = v338;
          if (v353)
          {
            uint64_t v18 = 0;
            uint64_t v19 = v334;
            while (1)
            {
              uint64_t v371 = v19[v18];
              int v20 = *(unsigned __int8 *)(v364 + v18);
              if (v20 != 2)
              {
                if (v20 == 1)
                {
                  uint64_t v32 = *(void *)(*(void *)(v11 + 40) + 16);
                  uint64_t v33 = *(void *)(v32 + 128);
                  if (!*(void *)(v33 + 16)
                    || (unint64_t v34 = sub_1B62C1A30((uint64_t)&type metadata for NotInHierarchy), (v35 & 1) == 0)
                    || *(ValueMetadata **)(*(void *)(v32 + 24)
                                         + 16 * *(void *)(*(void *)(v33 + 56) + 8 * v34)
                                         + 32) != &type metadata for NotInHierarchy)
                  {
                    v458 = &type metadata for NotInHierarchy;
                    v459 = &off_1F0F64B60;
                    LOBYTE(v463) = 0;
                    uint64_t v36 = *v17;
                    uint64_t v37 = sub_1B6355ED4(*v17);
                    if (v37)
                    {
                      uint64_t v38 = v37;
                      uint64_t v39 = v36 + 32;
                      swift_retain();
                      swift_bridgeObjectRetain();
                      uint64_t v40 = 0;
                      while (1)
                      {
                        sub_1B63B2978(v39, (uint64_t)&v472);
                        char v41 = sub_1B6B22660((uint64_t)&v472, (uint64_t)&v458);
                        sub_1B62E2EA0((uint64_t)&v472, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v41) {
                          break;
                        }
                        ++v40;
                        v39 += 72;
                        if (v38 == v40)
                        {
                          swift_bridgeObjectRelease();
                          uint64_t v17 = v338;
                          goto LABEL_63;
                        }
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v17 = v338;
                      unint64_t v86 = sub_1B6B1B930();
                      uint64_t v87 = *(void *)(v85 + 48);
                      if (v87)
                      {
                        uint64_t v88 = *(void *)(v85 + 64);
                        *(void *)(v87 + 8 * v88) = v371;
                        *(void *)(v85 + 64) = v88 + 1;
                      }
                      ((void (*)(ValueMetadata **, void))v86)(&v472, 0);
                    }
                    else
                    {
                      swift_retain();
LABEL_63:
                      uint64_t v63 = *(void *)(v11 + 240) - *(void *)(v11 + 232);
                      int32x2_t v64 = ecs_stack_allocator_allocate(v347[4], 8 * v63, 8);
                      *int32x2_t v64 = v371;
                      sub_1B639192C((uint64_t)&v458, (uint64_t)&v472);
                      unint64_t v478 = (unint64_t)v64;
                      v479.i64[0] = v63;
                      v479.i64[1] = 1;
                      sub_1B69FFBD4();
                      uint64_t v65 = *(void *)(v347[13] + 16);
                      sub_1B69FFCD8(v65);
                      sub_1B69FFDCC(v65, (uint64_t)&v472);
                      nullsub_1(v66);
                    }
                    sub_1B6391400((uint64_t)&v458);
                    swift_release();
                  }
                  unint64_t v89 = *(void *)(v11 + 40);
                  uint64_t v90 = *(void *)(v89 + 16);
                  uint64_t v91 = *(void *)(v90 + 128);
                  if (*(void *)(v91 + 16))
                  {
                    unint64_t v92 = sub_1B62C1A30((uint64_t)&type metadata for ParentedToScene);
                    if ((v93 & 1) != 0
                      && *(ValueMetadata **)(*(void *)(v90 + 24)
                                           + 16 * *(void *)(*(void *)(v91 + 56) + 8 * v92)
                                           + 32) == &type metadata for ParentedToScene)
                    {
                      unint64_t v94 = sub_1B6345398(v89, (uint64_t)&type metadata for ParentedToScene, &v472);
                      if (v472 == 1)
                      {
                        v472 = &type metadata for ParentedToScene;
                        v473 = (unsigned int *)&off_1F0F69278;
                        LOBYTE(v477) = 1;
                        MEMORY[0x1F4188790](v94, v95);
                        swift_retain();
                        sub_1B63932BC(0, v11, (uint64_t (*)(uint64_t))sub_1B6393454);
                        sub_1B6391400((uint64_t)&v472);
                        swift_release();
                      }
                    }
                  }
                }
                else
                {
                  if (*(unsigned char *)(v364 + v18)) {
                    goto LABEL_13;
                  }
                  uint64_t v21 = v2;
                  uint64_t v22 = *(void *)(*(void *)(v11 + 40) + 16);
                  uint64_t v23 = *(void *)(v22 + 128);
                  if (*(void *)(v23 + 16))
                  {
                    unint64_t v24 = sub_1B62C1A30((uint64_t)&type metadata for NotInHierarchy);
                    if (v25)
                    {
                      uint64_t v26 = *(void *)(v22 + 24) + 32;
                      if (*(ValueMetadata **)(v26 + 16 * *(void *)(*(void *)(v23 + 56) + 8 * v24)) == &type metadata for NotInHierarchy)
                      {
                        if (*(void *)(v23 + 16))
                        {
                          unint64_t v100 = sub_1B62C1A30((uint64_t)&type metadata for NotInHierarchy);
                          if ((v101 & 1) != 0
                            && *(ValueMetadata **)(v26 + 16 * *(void *)(*(void *)(v23 + 56) + 8 * v100)) == &type metadata for NotInHierarchy)
                          {
                            v472 = &type metadata for NotInHierarchy;
                            v473 = (unsigned int *)&off_1F0F64B60;
                            LOBYTE(v477) = 1;
                            MEMORY[0x1F4188790](v100, v101);
                            swift_retain();
                            sub_1B63932BC(0, v11, (uint64_t (*)(uint64_t))sub_1B6393454);
                            sub_1B6391400((uint64_t)&v472);
                            swift_release();
                          }
                        }
                      }
                    }
                  }
                  uint64_t v27 = *(void *)(*(void *)(v11 + 40) + 16);
                  uint64_t v28 = *(void *)(v27 + 128);
                  if (*(void *)(v28 + 16))
                  {
                    unint64_t v29 = sub_1B62C1A30((uint64_t)&type metadata for ParentedToScene);
                    if (v30)
                    {
                      uint64_t v31 = *(void *)(v27 + 24) + 32;
                      if (*(ValueMetadata **)(v31 + 16 * *(void *)(*(void *)(v28 + 56) + 8 * v29)) == &type metadata for ParentedToScene)
                      {
                        if (*(void *)(v28 + 16))
                        {
                          unint64_t v102 = sub_1B62C1A30((uint64_t)&type metadata for ParentedToScene);
                          if ((v103 & 1) != 0
                            && *(ValueMetadata **)(v31 + 16 * *(void *)(*(void *)(v28 + 56) + 8 * v102)) == &type metadata for ParentedToScene)
                          {
                            v472 = &type metadata for ParentedToScene;
                            v473 = (unsigned int *)&off_1F0F69278;
                            LOBYTE(v477) = 1;
                            MEMORY[0x1F4188790](v102, v103);
                            swift_retain();
                            sub_1B63932BC(0, v11, (uint64_t (*)(uint64_t))sub_1B6393454);
                            sub_1B6391400((uint64_t)&v472);
                            swift_release();
                          }
                        }
                      }
                    }
                  }
                  uint64_t v2 = v21;
                }
LABEL_12:
                uint64_t v16 = v353;
                goto LABEL_13;
              }
              uint64_t v359 = v2;
              uint64_t v42 = *(void *)(*(void *)(v11 + 40) + 16);
              uint64_t v43 = *(void *)(v42 + 128);
              if (*(void *)(v43 + 16))
              {
                unint64_t v44 = sub_1B62C1A30((uint64_t)&type metadata for ParentedToScene);
                if ((v45 & 1) != 0
                  && *(ValueMetadata **)(*(void *)(v42 + 24) + 16 * *(void *)(*(void *)(v43 + 56) + 8 * v44) + 32) == &type metadata for ParentedToScene)
                {
                  goto LABEL_67;
                }
              }
              *(void *)&v442[0] = &type metadata for ParentedToScene;
              *((void *)&v442[0] + 1) = &off_1F0F69278;
              LOBYTE(v444) = 0;
              uint64_t v46 = *v17;
              uint64_t v47 = sub_1B6355ED4(*v17);
              if (!v47)
              {
                swift_retain();
                goto LABEL_65;
              }
              uint64_t v48 = v47;
              uint64_t v49 = v46 + 32;
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v50 = 0;
              while (2)
              {
                sub_1B63B2978(v49, (uint64_t)&v458);
                sub_1B639192C((uint64_t)&v458, (uint64_t)&v472);
                sub_1B639192C((uint64_t)v442, (uint64_t)&v478);
                switch((char)v477)
                {
                  case 1:
                    sub_1B639192C((uint64_t)&v472, (uint64_t)v437);
                    if (v481 != 1) {
                      goto LABEL_38;
                    }
                    goto LABEL_51;
                  case 2:
                    sub_1B639192C((uint64_t)&v472, (uint64_t)v437);
                    if (v481 != 2) {
                      goto LABEL_37;
                    }
                    goto LABEL_48;
                  case 3:
                    sub_1B639192C((uint64_t)&v472, (uint64_t)v437);
                    if (v481 != 3)
                    {
LABEL_37:
                      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v437);
LABEL_38:
                      sub_1B62E2EA0((uint64_t)&v472, (uint64_t (*)(void))sub_1B691F560);
                      sub_1B62E2EA0((uint64_t)&v458, (uint64_t (*)(void))sub_1B63B29DC);
                      goto LABEL_39;
                    }
LABEL_48:
                    sub_1B62C15C4(v437, (uint64_t)v431);
                    sub_1B62C15C4((long long *)&v478, (uint64_t)v424);
                    uint64_t v54 = v432;
                    uint64_t v55 = v433;
                    sub_1B62C14BC(v431, v432);
                    LOBYTE(v54) = sub_1B6B3D86C(v424, v54, v55);
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v424);
                    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v431);
                    sub_1B6391400((uint64_t)&v472);
                    sub_1B62E2EA0((uint64_t)&v458, (uint64_t (*)(void))sub_1B63B29DC);
                    if ((v54 & 1) == 0)
                    {
LABEL_39:
                      ++v50;
                      v49 += 72;
                      if (v48 == v50)
                      {
                        swift_bridgeObjectRelease();
                        uint64_t v19 = v334;
                        uint64_t v17 = v338;
LABEL_65:
                        uint64_t v67 = *(void *)(v11 + 240) - *(void *)(v11 + 232);
                        uint64_t v68 = ecs_stack_allocator_allocate(v347[4], 8 * v67, 8);
                        *uint64_t v68 = v371;
                        sub_1B639192C((uint64_t)v442, (uint64_t)&v472);
                        unint64_t v478 = (unint64_t)v68;
                        v479.i64[0] = v67;
                        v479.i64[1] = 1;
                        sub_1B69FFBD4();
                        uint64_t v69 = *(void *)(v347[13] + 16);
                        sub_1B69FFCD8(v69);
                        sub_1B69FFDCC(v69, (uint64_t)&v472);
                        nullsub_1(v70);
                        goto LABEL_66;
                      }
                      continue;
                    }
LABEL_58:
                    swift_bridgeObjectRelease();
                    uint64_t v17 = v338;
                    uint64_t v60 = sub_1B6B1B930();
                    uint64_t v61 = *(void *)(v59 + 48);
                    if (v61)
                    {
                      uint64_t v62 = *(void *)(v59 + 64);
                      *(void *)(v61 + 8 * v62) = v371;
                      *(void *)(v59 + 64) = v62 + 1;
                    }
                    ((void (*)(ValueMetadata **, void))v60)(&v472, 0);
                    uint64_t v19 = v334;
LABEL_66:
                    sub_1B6391400((uint64_t)v442);
                    swift_release();
LABEL_67:
                    uint64_t v71 = *(void *)(*(void *)(v11 + 40) + 16);
                    uint64_t v72 = *(void *)(v71 + 128);
                    if (*(void *)(v72 + 16))
                    {
                      unint64_t v73 = sub_1B62C1A30((uint64_t)&type metadata for NotInHierarchy);
                      if ((v74 & 1) != 0
                        && *(ValueMetadata **)(*(void *)(v71 + 24)
                                             + 16 * *(void *)(*(void *)(v72 + 56) + 8 * v73)
                                             + 32) == &type metadata for NotInHierarchy)
                      {
                        uint64_t v2 = v359;
                        goto LABEL_12;
                      }
                    }
                    v458 = &type metadata for NotInHierarchy;
                    v459 = &off_1F0F64B60;
                    LOBYTE(v463) = 0;
                    uint64_t v75 = *v17;
                    uint64_t v76 = sub_1B6355ED4(*v17);
                    if (v76)
                    {
                      uint64_t v77 = v76;
                      uint64_t v78 = v75 + 32;
                      swift_retain();
                      swift_bridgeObjectRetain();
                      uint64_t v79 = 0;
                      uint64_t v2 = v359;
                      while (1)
                      {
                        sub_1B63B2978(v78, (uint64_t)&v472);
                        char v80 = sub_1B6B1E658((uint64_t)&v472, (uint64_t)&v458);
                        sub_1B62E2EA0((uint64_t)&v472, (uint64_t (*)(void))sub_1B63B29DC);
                        if (v80) {
                          break;
                        }
                        ++v79;
                        v78 += 72;
                        if (v77 == v79)
                        {
                          swift_bridgeObjectRelease();
                          uint64_t v17 = v338;
                          goto LABEL_76;
                        }
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v17 = v338;
                      uint64_t v97 = sub_1B6B1B930();
                      uint64_t v98 = *(void *)(v96 + 48);
                      if (v98)
                      {
                        uint64_t v99 = *(void *)(v96 + 64);
                        *(void *)(v98 + 8 * v99) = v371;
                        *(void *)(v96 + 64) = v99 + 1;
                      }
                      ((void (*)(ValueMetadata **, void))v97)(&v472, 0);
                    }
                    else
                    {
                      swift_retain();
LABEL_76:
                      uint64_t v81 = *(void *)(v11 + 240) - *(void *)(v11 + 232);
                      uint64_t v82 = ecs_stack_allocator_allocate(v347[4], 8 * v81, 8);
                      *uint64_t v82 = v371;
                      sub_1B639192C((uint64_t)&v458, (uint64_t)&v472);
                      unint64_t v478 = (unint64_t)v82;
                      v479.i64[0] = v81;
                      v479.i64[1] = 1;
                      sub_1B69FFBD4();
                      uint64_t v83 = *(void *)(v347[13] + 16);
                      sub_1B69FFCD8(v83);
                      sub_1B69FFDCC(v83, (uint64_t)&v472);
                      nullsub_1(v84);
                      uint64_t v2 = v359;
                    }
                    uint64_t v16 = v353;
                    sub_1B6391400((uint64_t)&v458);
                    swift_release();
LABEL_13:
                    if (++v18 == v16) {
                      goto LABEL_100;
                    }
                    break;
                  case 4:
                    sub_1B639192C((uint64_t)&v472, (uint64_t)v437);
                    if (v481 != 4) {
                      goto LABEL_38;
                    }
                    int v51 = LOBYTE(v437[0]);
                    int v52 = v478;
                    sub_1B6391400((uint64_t)&v472);
                    sub_1B62E2EA0((uint64_t)&v458, (uint64_t (*)(void))sub_1B63B29DC);
                    BOOL v53 = v51 == v52;
                    goto LABEL_52;
                  case 5:
                    if (v481 != 5) {
                      goto LABEL_38;
                    }
                    int8x16_t v58 = vorrq_s8(v479, v480);
                    if (*(void *)&vorr_s8(*(int8x8_t *)v58.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL)) | v478) {
                      goto LABEL_38;
                    }
                    sub_1B6391400((uint64_t)&v472);
                    sub_1B62E2EA0((uint64_t)&v458, (uint64_t (*)(void))sub_1B63B29DC);
                    goto LABEL_58;
                  default:
                    sub_1B639192C((uint64_t)&v472, (uint64_t)v437);
                    if ((_BYTE)v481) {
                      goto LABEL_38;
                    }
LABEL_51:
                    uint64_t v56 = *(void *)&v437[0];
                    unint64_t v57 = v478;
                    sub_1B6391400((uint64_t)&v472);
                    sub_1B62E2EA0((uint64_t)&v458, (uint64_t (*)(void))sub_1B63B29DC);
                    BOOL v53 = v56 == v57;
LABEL_52:
                    if (!v53) {
                      goto LABEL_39;
                    }
                    goto LABEL_58;
                }
                break;
              }
            }
          }
          goto LABEL_100;
        }
        uint64_t v104 = v370;
        uint64_t v2 = v12;
        uint64_t v105 = v338;
        if (v9 != v370) {
          break;
        }
LABEL_100:
        v385[0] = v382;
        v385[1] = v383;
        uint64_t v386 = v384;
        sub_1B6345178(v347, (unsigned __int16 **)v385, (uint64_t)v484);
        sub_1B634507C((char *)v11);
        uint64_t v6 = v320;
        ecs_stack_allocator_pop_snapshot(v320);
        int v5 = v322;
        if (v322)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 376));
        }
        swift_release();
        uint64_t v7 = v329 + 1;
        if (v329 + 1 == v326)
        {
          sub_1B632F170(v410);
          goto LABEL_168;
        }
      }
      while (1)
      {
        int v106 = *(unsigned __int8 *)(v364 + v9);
        if (v106 == 2)
        {
          uint64_t v129 = v2;
          uint64_t v130 = *(void *)(*(void *)(v11 + 40) + 16);
          uint64_t v131 = *(void *)(v130 + 128);
          if (!*(void *)(v131 + 16)
            || (unint64_t v132 = sub_1B62C1A30((uint64_t)&type metadata for ParentedToScene), (v133 & 1) == 0)
            || *(ValueMetadata **)(*(void *)(v130 + 24) + 16 * *(void *)(*(void *)(v131 + 56) + 8 * v132) + 32) != &type metadata for ParentedToScene)
          {
            v458 = &type metadata for ParentedToScene;
            v459 = &off_1F0F69278;
            LOBYTE(v463) = 0;
            uint64_t v134 = *v105;
            uint64_t v135 = sub_1B6355ED4(*v105);
            if (v135)
            {
              uint64_t v136 = v135;
              uint64_t v137 = v134 + 32;
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v138 = 0;
              while (1)
              {
                sub_1B63B2978(v137, (uint64_t)&v472);
                char v139 = sub_1B6B22660((uint64_t)&v472, (uint64_t)&v458);
                sub_1B62E2EA0((uint64_t)&v472, (uint64_t (*)(void))sub_1B63B29DC);
                if (v139) {
                  break;
                }
                ++v138;
                v137 += 72;
                if (v136 == v138)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v105 = v338;
                  goto LABEL_134;
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v105 = v338;
              uint64_t v158 = sub_1B6B1B930();
              uint64_t v159 = *(void *)(v157 + 48);
              if (v159)
              {
                uint64_t v160 = *(void *)(v157 + 64);
                *(void *)(v159 + 8 * v160) = v9;
                *(void *)(v157 + 64) = v160 + 1;
              }
              ((void (*)(ValueMetadata **, void))v158)(&v472, 0);
            }
            else
            {
              swift_retain();
LABEL_134:
              uint64_t v144 = *(void *)(v11 + 240) - *(void *)(v11 + 232);
              int v145 = ecs_stack_allocator_allocate(v347[4], 8 * v144, 8);
              *int v145 = v9;
              sub_1B639192C((uint64_t)&v458, (uint64_t)&v472);
              unint64_t v478 = (unint64_t)v145;
              v479.i64[0] = v144;
              v479.i64[1] = 1;
              sub_1B69FFBD4();
              uint64_t v146 = *(void *)(v347[13] + 16);
              sub_1B69FFCD8(v146);
              sub_1B69FFDCC(v146, (uint64_t)&v472);
              nullsub_1(v147);
            }
            sub_1B6391400((uint64_t)&v458);
            swift_release();
          }
          uint64_t v161 = *(void *)(*(void *)(v11 + 40) + 16);
          uint64_t v162 = *(void *)(v161 + 128);
          if (*(void *)(v162 + 16)
            && (unint64_t v163 = sub_1B62C1A30((uint64_t)&type metadata for NotInHierarchy), (v164 & 1) != 0)
            && *(ValueMetadata **)(*(void *)(v161 + 24) + 16 * *(void *)(*(void *)(v162 + 56) + 8 * v163) + 32) == &type metadata for NotInHierarchy)
          {
            uint64_t v2 = v129;
            uint64_t v104 = v370;
          }
          else
          {
            v458 = &type metadata for NotInHierarchy;
            v459 = &off_1F0F64B60;
            LOBYTE(v463) = 0;
            uint64_t v165 = *v105;
            uint64_t v166 = sub_1B6355ED4(*v105);
            if (v166)
            {
              uint64_t v167 = v166;
              uint64_t v168 = v165 + 32;
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v169 = 0;
              uint64_t v2 = v129;
              uint64_t v104 = v370;
              while (1)
              {
                sub_1B63B2978(v168, (uint64_t)&v472);
                char v170 = sub_1B6B1E658((uint64_t)&v472, (uint64_t)&v458);
                sub_1B62E2EA0((uint64_t)&v472, (uint64_t (*)(void))sub_1B63B29DC);
                if (v170) {
                  break;
                }
                ++v169;
                v168 += 72;
                if (v167 == v169)
                {
                  uint64_t v129 = v2;
                  swift_bridgeObjectRelease();
                  uint64_t v105 = v338;
                  goto LABEL_157;
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v105 = v338;
              float32x4_t v176 = sub_1B6B1B930();
              uint64_t v177 = *(void *)(v175 + 48);
              if (v177)
              {
                uint64_t v178 = *(void *)(v175 + 64);
                *(void *)(v177 + 8 * v178) = v9;
                *(void *)(v175 + 64) = v178 + 1;
              }
              ((void (*)(ValueMetadata **, void))v176)(&v472, 0);
            }
            else
            {
              swift_retain();
LABEL_157:
              uint64_t v171 = *(void *)(v11 + 240) - *(void *)(v11 + 232);
              float32x4_t v172 = ecs_stack_allocator_allocate(v347[4], 8 * v171, 8);
              *float32x4_t v172 = v9;
              sub_1B639192C((uint64_t)&v458, (uint64_t)&v472);
              unint64_t v478 = (unint64_t)v172;
              v479.i64[0] = v171;
              v479.i64[1] = 1;
              sub_1B69FFBD4();
              uint64_t v173 = *(void *)(v347[13] + 16);
              sub_1B69FFCD8(v173);
              sub_1B69FFDCC(v173, (uint64_t)&v472);
              nullsub_1(v174);
              uint64_t v2 = v129;
              uint64_t v104 = v370;
            }
            sub_1B6391400((uint64_t)&v458);
            swift_release();
          }
          goto LABEL_103;
        }
        if (v106 == 1)
        {
          uint64_t v119 = *(void *)(*(void *)(v11 + 40) + 16);
          uint64_t v120 = *(void *)(v119 + 128);
          if (!*(void *)(v120 + 16)
            || (unint64_t v121 = sub_1B62C1A30((uint64_t)&type metadata for NotInHierarchy), (v122 & 1) == 0)
            || *(ValueMetadata **)(*(void *)(v119 + 24) + 16 * *(void *)(*(void *)(v120 + 56) + 8 * v121) + 32) != &type metadata for NotInHierarchy)
          {
            v458 = &type metadata for NotInHierarchy;
            v459 = &off_1F0F64B60;
            LOBYTE(v463) = 0;
            uint64_t v123 = *v105;
            uint64_t v124 = sub_1B6355ED4(*v105);
            if (v124)
            {
              uint64_t v125 = v124;
              uint64_t v126 = v123 + 32;
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v127 = 0;
              while (1)
              {
                sub_1B63B2978(v126, (uint64_t)&v472);
                char v128 = sub_1B6B1E658((uint64_t)&v472, (uint64_t)&v458);
                sub_1B62E2EA0((uint64_t)&v472, (uint64_t (*)(void))sub_1B63B29DC);
                if (v128) {
                  break;
                }
                ++v127;
                v126 += 72;
                if (v125 == v127)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v105 = v338;
                  goto LABEL_132;
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v105 = v338;
              float32x4_t v149 = sub_1B6B1B930();
              uint64_t v150 = *(void *)(v148 + 48);
              if (v150)
              {
                uint64_t v151 = *(void *)(v148 + 64);
                *(void *)(v150 + 8 * v151) = v9;
                *(void *)(v148 + 64) = v151 + 1;
              }
              ((void (*)(ValueMetadata **, void))v149)(&v472, 0);
            }
            else
            {
              swift_retain();
LABEL_132:
              uint64_t v140 = *(void *)(v11 + 240) - *(void *)(v11 + 232);
              uint64_t v141 = ecs_stack_allocator_allocate(v347[4], 8 * v140, 8);
              *uint64_t v141 = v9;
              sub_1B639192C((uint64_t)&v458, (uint64_t)&v472);
              unint64_t v478 = (unint64_t)v141;
              v479.i64[0] = v140;
              v479.i64[1] = 1;
              sub_1B69FFBD4();
              uint64_t v142 = *(void *)(v347[13] + 16);
              sub_1B69FFCD8(v142);
              sub_1B69FFDCC(v142, (uint64_t)&v472);
              nullsub_1(v143);
            }
            sub_1B6391400((uint64_t)&v458);
            swift_release();
          }
          unint64_t v152 = *(void *)(v11 + 40);
          uint64_t v153 = *(void *)(v152 + 16);
          uint64_t v154 = *(void *)(v153 + 128);
          if (!*(void *)(v154 + 16)) {
            goto LABEL_103;
          }
          unint64_t v155 = sub_1B62C1A30((uint64_t)&type metadata for ParentedToScene);
          if ((v156 & 1) == 0) {
            goto LABEL_103;
          }
          if (*(ValueMetadata **)(*(void *)(v153 + 24) + 16 * *(void *)(*(void *)(v154 + 56) + 8 * v155) + 32) != &type metadata for ParentedToScene) {
            goto LABEL_103;
          }
          unint64_t v117 = sub_1B6345398(v152, (uint64_t)&type metadata for ParentedToScene, &v472);
          if (v472 != 1) {
            goto LABEL_103;
          }
        }
        else
        {
          if (*(unsigned char *)(v364 + v9)) {
            goto LABEL_103;
          }
          uint64_t v107 = *(void *)(*(void *)(v11 + 40) + 16);
          uint64_t v108 = *(void *)(v107 + 128);
          if (*(void *)(v108 + 16))
          {
            unint64_t v109 = sub_1B62C1A30((uint64_t)&type metadata for NotInHierarchy);
            if (v110)
            {
              uint64_t v111 = *(void *)(v107 + 24) + 32;
              if (*(ValueMetadata **)(v111 + 16 * *(void *)(*(void *)(v108 + 56) + 8 * v109)) == &type metadata for NotInHierarchy)
              {
                if (*(void *)(v108 + 16))
                {
                  unint64_t v179 = sub_1B62C1A30((uint64_t)&type metadata for NotInHierarchy);
                  if ((v180 & 1) != 0
                    && *(ValueMetadata **)(v111 + 16 * *(void *)(*(void *)(v108 + 56) + 8 * v179)) == &type metadata for NotInHierarchy)
                  {
                    v472 = &type metadata for NotInHierarchy;
                    v473 = (unsigned int *)&off_1F0F64B60;
                    LOBYTE(v477) = 1;
                    MEMORY[0x1F4188790](v179, v180);
                    swift_retain();
                    sub_1B63932BC(0, v11, (uint64_t (*)(uint64_t))sub_1B6393454);
                    sub_1B6391400((uint64_t)&v472);
                    swift_release();
                  }
                }
              }
            }
          }
          unint64_t v112 = *(void *)(v11 + 40);
          uint64_t v113 = *(void *)(v112 + 16);
          uint64_t v114 = *(void *)(v113 + 128);
          if (!*(void *)(v114 + 16)) {
            goto LABEL_103;
          }
          unint64_t v115 = sub_1B62C1A30((uint64_t)&type metadata for ParentedToScene);
          if ((v116 & 1) == 0) {
            goto LABEL_103;
          }
          if (*(ValueMetadata **)(*(void *)(v113 + 24) + 16 * *(void *)(*(void *)(v114 + 56) + 8 * v115) + 32) != &type metadata for ParentedToScene) {
            goto LABEL_103;
          }
          unint64_t v117 = sub_1B6345398(v112, (uint64_t)&type metadata for ParentedToScene, &v472);
          if (v472 != 1) {
            goto LABEL_103;
          }
        }
        v472 = &type metadata for ParentedToScene;
        v473 = (unsigned int *)&off_1F0F69278;
        LOBYTE(v477) = 1;
        MEMORY[0x1F4188790](v117, v118);
        swift_retain();
        sub_1B63932BC(0, v11, (uint64_t (*)(uint64_t))sub_1B6393454);
        sub_1B6391400((uint64_t)&v472);
        swift_release();
LABEL_103:
        if (++v9 == v104) {
          goto LABEL_100;
        }
      }
    }
  }
LABEL_168:
  sub_1B632F170(v410);
LABEL_169:
  long long v181 = *(_OWORD *)(v313 + 152);
  v406[0] = *(_OWORD *)(v313 + 136);
  v406[1] = v181;
  uint64_t v407 = *(void *)(v313 + 168);
  sub_1B62C9DA8(a1, (uint64_t)v406, 0x200000000, v411);
  uint64_t v182 = sub_1B62D7910((uint64_t)v411, (uint64_t)v442, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v442[0])
  {
    uint64_t v323 = v448;
    if (v448 >= 1)
    {
      uint64_t v321 = v445;
      if (v445)
      {
        uint64_t v360 = v2;
        float32x4_t v183 = v447;
        uint64_t v184 = v447[4];
        long long v319 = v446;
        int v354 = *((unsigned __int8 *)&v446->Kind + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        long long v387 = v442[0];
        long long v388 = v442[1];
        uint64_t v389 = v443;
        long long v314 = v447 + 8;
        uint64_t v315 = v444;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v185 = 0;
        v372 = v183;
        uint64_t v317 = v184;
        while (1)
        {
          uint64_t v348 = v185;
          float32x4_t v186 = (unsigned int *)(v315 + 48 * v185);
          float32x4_t v187 = (void *)*v186;
          unint64_t v188 = v186[1];
          uint64_t v189 = v186[2];
          uint64_t v190 = *((void *)v186 + 3);
          uint64_t v325 = *((void *)v186 + 2);
          uint64_t v191 = *((void *)v186 + 4);
          float32x4_t v192 = (unsigned int *)*((void *)v186 + 5);
          if (v354)
          {
            float32x4_t v193 = (os_unfair_lock_s *)*((void *)v192 + 47);
            swift_retain_n();
            os_unfair_lock_lock(v193);
            os_unfair_lock_lock(*((os_unfair_lock_t *)v192 + 43));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v184);
          uint64_t v339 = v183[7];
          uint64_t v342 = v183[6];
          long long v335 = (uint64_t *)v183[8];
          uint64_t v327 = v183[10];
          uint64_t v330 = v183[9];
          uint64_t v194 = v183[4];
          long long v365 = v192;
          uint64_t v195 = *(void *)(*(void *)(*(void *)(*((void *)v192 + 5) + 16) + 32) + 16) + 1;
          swift_retain();
          uint64_t v196 = v365;
          v372[6] = ecs_stack_allocator_allocate(v194, 48 * v195, 8);
          v372[7] = v195;
          float32x4_t v183 = v372;
          v314[1] = 0;
          v314[2] = 0;
          *long long v314 = 0;
          swift_release();
          v472 = v319;
          v473 = v365;
          v474 = v372;
          uint64_t v475 = v189;
          uint64_t v476 = (v188 - v187 + v189);
          uint64_t v477 = v323;
          unint64_t v478 = (unint64_t)v187;
          int8x16_t v479 = (int8x16_t)v188;
          v480.i64[0] = 0;
          v480.i8[8] = 1;
          uint64_t v481 = v325;
          uint64_t v482 = v190;
          uint64_t v483 = v191;
          sub_1B6345418((uint64_t)&v472);
          sub_1B6345398(*((void *)v365 + 5), (uint64_t)&type metadata for ParentedToScene, &v458);
          if ((v458 & 1) != 0
            || (sub_1B6345398(*((void *)v365 + 5), (uint64_t)&type metadata for Parent, &v458),
                (v458 & 1) == 0)
            && (sub_1B6345398(*((void *)v365 + 5), (uint64_t)&type metadata for PointOfView, &v458),
                (v458 & 1) == 0)
            && (sub_1B6345398(*((void *)v365 + 5), (uint64_t)&type metadata for NotInHierarchy, &v458),
                (v458 & 1) == 0))
          {
            sub_1B6346BE0(a1, (uint64_t)&v472);
          }
          unint64_t v197 = v372[6];
          uint64_t v198 = v372[8];
          if (!v198)
          {
            uint64_t v221 = v372[7];
            long long v222 = (void *)v372[4];
            goto LABEL_213;
          }
          for (uint64_t i = 0; i != v198; ++i)
          {
            float v201 = (uint64_t *)(v197 + 48 * i);
            uint64_t v202 = *v201;
            unint64_t v203 = (void (*)(uint64_t))v201[4];
            uint64_t v204 = v372[9];
            if (v204) {
              BOOL v205 = v202 == v204;
            }
            else {
              BOOL v205 = 0;
            }
            if (v205) {
              goto LABEL_183;
            }
            uint64_t v206 = v387;
            if (!*(_WORD *)(v387 + 22)) {
              goto LABEL_183;
            }
            uint64_t v207 = v201[2];
            uint64_t v208 = v387 + 41;
            unint64_t v209 = *(unsigned __int16 *)(v387 + 18);
            if (v209 >= 0x10)
            {
              float32x4_t v210 = (void *)(v208 + *(unsigned __int16 *)(v387 + 16));
              unint64_t v211 = v209 >> 4;
              uint64_t v212 = v387 + 41;
              while (*v210 != v202)
              {
                ++v212;
                v210 += 2;
                if (!--v211) {
                  goto LABEL_199;
                }
              }
              unsigned int v213 = *(unsigned __int8 *)(v212 + *(unsigned __int16 *)(v387 + 20));
              BOOL v214 = v213 > 5;
              int v215 = (1 << v213) & 0x23;
              if (v214 || v215 == 0)
              {
LABEL_183:
                uint64_t v200 = swift_retain();
                v203(v200);
                swift_release();
                continue;
              }
            }
LABEL_199:
            if (swift_conformsToProtocol2()) {
              uint64_t v217 = v207;
            }
            else {
              uint64_t v217 = 0;
            }
            if (v217)
            {
              if (sub_1B63462F4(v217)) {
                goto LABEL_183;
              }
              unint64_t v218 = *(unsigned __int16 *)(v206 + 18);
              if (v218 < 0x10) {
                goto LABEL_183;
              }
              uint64_t v219 = (void *)(v208 + *(unsigned __int16 *)(v206 + 16));
              uint64_t v220 = 16 * (v218 >> 4);
              while (*v219 != v217)
              {
                v219 += 2;
                v220 -= 16;
                if (!v220) {
                  goto LABEL_183;
                }
              }
            }
          }
          float32x4_t v183 = v372;
          uint64_t v221 = v372[7];
          unint64_t v197 = v372[6];
          long long v222 = (void *)v372[4];
          if ((uint64_t)v372[8] >= 1) {
            swift_arrayDestroy();
          }
          uint64_t v196 = v365;
LABEL_213:
          ecs_stack_allocator_deallocate(v222, v197, 48 * v221);
          v183[6] = v342;
          v183[7] = v339;
          v183[8] = v335;
          v183[9] = v330;
          v183[10] = v327;
          sub_1B634507C((char *)v196);
          uint64_t v184 = v317;
          ecs_stack_allocator_pop_snapshot(v317);
          if (v354)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v196 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v196 + 47));
          }
          swift_release();
          uint64_t v185 = v348 + 1;
          if (v348 + 1 == v321)
          {
            sub_1B632F170(v411);
            uint64_t v2 = v360;
            break;
          }
        }
      }
    }
    uint64_t v182 = (uint64_t)sub_1B632F170(v411);
  }
  char v223 = (*(uint64_t (**)(uint64_t))(*(void *)v313 + 160))(v182);
  if ((v223 & 1) == 0)
  {
    unint64_t v247 = (uint64_t *)(v313 + 256);
    uint64_t v248 = (int *)(v313 + 264);
    long long v249 = (char *)(v313 + 268);
    long long v250 = (uint64_t *)(v313 + 272);
    uint64_t v251 = (char *)(v313 + 280);
    char v252 = (uint64_t *)(v313 + 288);
LABEL_270:
    uint64_t v281 = *v252;
    char v282 = *v251;
    uint64_t v283 = *v250;
    char v284 = *v249;
    int v285 = *v248;
    uint64_t v396 = *v247;
    int v397 = v285;
    char v398 = v284;
    uint64_t v399 = v283;
    char v400 = v282;
    uint64_t v401 = v281;
    swift_retain();
    sub_1B62C9DA8(a1, (uint64_t)&v396, 0x200000000, v414);
    swift_release();
    sub_1B62D7910((uint64_t)v414, (uint64_t)v424, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v424[0])
    {
      long long v377 = v424[0];
      long long v379 = v424[1];
      long long v286 = v426;
      uint64_t v381 = v425;
      long long v287 = v427;
      v374 = v429;
      long long v328 = v428;
      uint64_t v331 = v430;
      if (v223)
      {
        v458 = v426;
        v459 = (_UNKNOWN **)v427;
        sub_1B6346370((uint64_t *)&v458);
      }
      if (v331 >= 1 && v287)
      {
        uint64_t v288 = v374[4];
        int v368 = *((unsigned __int8 *)&v328->Kind + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        swift_retain();
        swift_retain();
        swift_retain();
        p_Description = &v286[1].Description;
        do
        {
          long long v357 = v287;
          uint64_t v362 = v2;
          uint64_t v290 = *((unsigned int *)p_Description - 6);
          uint64_t v291 = *((unsigned int *)p_Description - 4);
          long long v292 = p_Description[2];
          long long v345 = *p_Description;
          uint64_t v351 = (uint64_t)*(p_Description - 1);
          long long v336 = (uint64_t *)*((unsigned int *)p_Description - 5);
          long long v340 = p_Description[1];
          if (v368)
          {
            long long v293 = (os_unfair_lock_s *)*((void *)v292 + 47);
            swift_retain();
            os_unfair_lock_lock(v293);
            os_unfair_lock_lock(*((os_unfair_lock_t *)v292 + 43));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v288);
          sub_1B62D7910((uint64_t)(v374 + 6), (uint64_t)v457, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v294 = v374[4];
          uint64_t v295 = *(void *)(*(void *)(*(void *)(*((void *)v292 + 5) + 16) + 32) + 16) + 1;
          swift_retain();
          v374[6] = ecs_stack_allocator_allocate(v294, 48 * v295, 8);
          v374[7] = v295;
          v374[9] = 0;
          v374[10] = 0;
          v374[8] = 0;
          swift_release();
          v458 = v328;
          v459 = (_UNKNOWN **)v292;
          v460 = v374;
          uint64_t v461 = v291;
          uint64_t v462 = (v336 - v290 + v291);
          uint64_t v463 = v331;
          uint64_t v464 = v290;
          v465 = v336;
          uint64_t v466 = 0;
          uint64_t v467 = 0;
          char v468 = 1;
          uint64_t v469 = v351;
          v470 = v345;
          v471 = v340;
          uint64_t v2 = v362;
          sub_1B6345AE0(&v458, a1);
          v390[0] = v377;
          v390[1] = v379;
          uint64_t v391 = v381;
          sub_1B6345178(v374, (unsigned __int16 **)v390, (uint64_t)v457);
          sub_1B634507C((char *)v292);
          ecs_stack_allocator_pop_snapshot(v288);
          if (v368)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v292 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v292 + 47));
          }
          swift_release();
          p_Description += 6;
          long long v287 = (unint64_t *)((char *)v357 - 1);
        }
        while (v357 != (unint64_t *)1);
        sub_1B632F170(v414);
      }
      sub_1B632F170(v414);
    }
    long long v296 = *(_OWORD *)(v313 + 192);
    v394[0] = *(_OWORD *)(v313 + 176);
    v394[1] = v296;
    uint64_t v395 = *(void *)(v313 + 208);
    sub_1B62C9DA8(a1, (uint64_t)v394, 0x200000000, v415);
    sub_1B62D7910((uint64_t)v415, (uint64_t)&v416, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if ((void)v416)
    {
      if (v423 >= 1)
      {
        uint64_t v352 = v420;
        if (v420)
        {
          long long v297 = v422;
          uint64_t v298 = v422[4];
          int v375 = *(unsigned __int8 *)(v421 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v392[0] = v416;
          v392[1] = v417;
          uint64_t v393 = v418;
          uint64_t v337 = (uint64_t)(v422 + 6);
          uint64_t v341 = v419;
          long long v333 = v422 + 8;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v299 = 0;
          uint64_t v346 = v298;
          do
          {
            long long v300 = (unsigned int *)(v341 + 48 * v299);
            uint64_t v363 = v2;
            uint64_t v369 = (unsigned int *)*v300;
            long long v358 = (unint64_t *)v300[1];
            long long v302 = (uint64_t *)*((void *)v300 + 2);
            uint64_t v301 = *((void *)v300 + 3);
            uint64_t v303 = *((void *)v300 + 4);
            uint64_t v304 = *((void *)v300 + 5);
            if (v375)
            {
              uint64_t v305 = *(os_unfair_lock_s **)(v304 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v305);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v304 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v298);
            sub_1B62D7910(v337, (uint64_t)v456, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v306 = v297[4];
            uint64_t v307 = *(void *)(*(void *)(*(void *)(*(void *)(v304 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v297[6] = ecs_stack_allocator_allocate(v306, 48 * v307, 8);
            v297[7] = v307;
            v333[1] = 0;
            v333[2] = 0;
            *long long v333 = 0;
            swift_release();
            uint64_t v308 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v302, v301, v303, (uint64_t)v297);
            uint64_t v309 = sub_1B62C9024((uint64_t)&type metadata for InverseWorldTransform, (uint64_t)&off_1F0F87E48, v302, v301, v303, (uint64_t)v297);
            if (v369 != v358)
            {
              uint64_t v310 = (char *)v358 - (char *)v369;
              uint64_t v311 = v308 + ((void)v369 << 6) + 32;
              uint64_t v312 = v309 + ((void)v369 << 6) + 32;
              do
              {
                *(simd_float4x4 *)(v312 - 32) = __invert_f4(*(simd_float4x4 *)(v311 - 32));
                v312 += 64;
                v311 += 64;
                --v310;
              }
              while (v310);
            }
            uint64_t v2 = v363;
            sub_1B6345178(v297, (unsigned __int16 **)v392, (uint64_t)v456);
            sub_1B634507C((char *)v304);
            uint64_t v298 = v346;
            ecs_stack_allocator_pop_snapshot(v346);
            if (v375)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v304 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v304 + 376));
            }
            swift_release();
            ++v299;
          }
          while (v299 != v352);
          sub_1B632F170(v415);
        }
      }
      sub_1B632F170(v415);
    }
    return;
  }
  long long v224 = *(_OWORD *)(v313 + 32);
  v404[0] = *(_OWORD *)(v313 + 16);
  v404[1] = v224;
  uint64_t v405 = *(void *)(v313 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v404, 0x200000000, v412);
  sub_1B62D7910((uint64_t)v412, (uint64_t)v437, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v361 = v2;
  if (!*(void *)&v437[0]) {
    goto LABEL_245;
  }
  uint64_t v226 = v441;
  if (v441 < 1) {
    goto LABEL_244;
  }
  uint64_t v227 = v440;
  uint64_t v228 = v439;
  simd_float4 v229 = v438;
  uint64_t v230 = *(void *)(*(void *)(*(void *)(v227 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                               + 8 * *(void *)thread_worker_index(&thread_worker_index, v225)
                               + 8)
                   + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  ecs_stack_allocator_push_snapshot(v230);
  uint64_t v231 = ecs_stack_allocator_allocate(v230, 8 * v226, 4);
  if (!v228) {
    goto LABEL_243;
  }
  uint64_t v232 = v231;
  char v343 = v223;
  uint64_t v233 = 0;
  long long v366 = &v229[12 * v228];
  long long v349 = (char *)v231 + 4;
  long long v355 = v231;
  do
  {
    uint64_t v234 = (unint64_t **)*((void *)v229 + 2);
    uint64_t v235 = *((void *)v229 + 5);
    if (v234)
    {
      uint64_t v236 = *((void *)v229 + 4);
      if (v236)
      {
        v373 = v229;
        swift_retain();
        uint64_t v237 = &v349[8 * v233];
        do
        {
          simd_float4 v238 = *v234++;
          uint64_t v232 = v238;
          uint64_t v239 = swift_retain();
          if (*(unsigned char *)(v235 + 184)) {
            goto LABEL_300;
          }
          int v240 = *(_DWORD *)(*(void *)(v235 + 168) + 4 * (void)v232);
          int v241 = *(_DWORD *)(*(void *)(v239 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v240 + 8);
          swift_release();
          *((_DWORD *)v237 - 1) = v240;
          *(_DWORD *)uint64_t v237 = v241;
          ++v233;
          v237 += 8;
          --v236;
        }
        while (v236);
LABEL_224:
        swift_release();
        uint64_t v232 = v355;
        simd_float4 v229 = v373;
      }
    }
    else
    {
      unint64_t v242 = *v229;
      uint64_t v234 = (unint64_t **)v229[1];
      if (v242 != v234)
      {
        v373 = v229;
        swift_retain();
        uint64_t v243 = &v349[8 * v233];
        do
        {
          uint64_t v244 = swift_retain();
          if (*(unsigned char *)(v235 + 184)) {
            goto LABEL_300;
          }
          uint64_t v232 = (unint64_t *)*(int *)(*(void *)(v235 + 168) + 4 * v242);
          unint64_t v245 = (unint64_t **)(v242 + 1);
          int v246 = *(_DWORD *)(*(void *)(v244 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v232 + 8);
          swift_release();
          *((_DWORD *)v243 - 1) = v232;
          *(_DWORD *)uint64_t v243 = v246;
          ++v233;
          v243 += 8;
          unint64_t v242 = (unint64_t)v245;
        }
        while (v234 != v245);
        goto LABEL_224;
      }
    }
    v229 += 12;
  }
  while (v229 != v366);
  if (v233)
  {
    __n128 v253 = &v232[v233];
    char v223 = v343;
    do
    {
      unint64_t v254 = *v232++;
      uint64_t v255 = sub_1B6359750(v254);
      swift_retain();
      sub_1B63580E8(v254, v255, a1, a1);
      swift_release();
    }
    while (v232 != v253);
  }
  else
  {
    char v223 = v343;
  }
LABEL_243:
  ecs_stack_allocator_pop_snapshot(v230);
  sub_1B632F170(v412);
LABEL_244:
  sub_1B632F170(v412);
LABEL_245:
  long long v256 = *(_OWORD *)(v313 + 112);
  v402[0] = *(_OWORD *)(v313 + 96);
  v402[1] = v256;
  uint64_t v403 = *(void *)(v313 + 128);
  sub_1B62C9DA8(a1, (uint64_t)v402, 0x200000000, v413);
  sub_1B62D7910((uint64_t)v413, (uint64_t)v431, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!v431[0]) {
    goto LABEL_269;
  }
  uint64_t v258 = v436;
  if (v436 < 1)
  {
LABEL_268:
    sub_1B632F170(v413);
LABEL_269:
    uint64_t v2 = v361;
    unint64_t v247 = (uint64_t *)(v313 + 216);
    uint64_t v248 = (int *)(v313 + 224);
    long long v249 = (char *)(v313 + 228);
    long long v250 = (uint64_t *)(v313 + 232);
    uint64_t v251 = (char *)(v313 + 240);
    char v252 = (uint64_t *)(v313 + 248);
    goto LABEL_270;
  }
  uint64_t v259 = v435;
  uint64_t v260 = v434;
  uint64_t v261 = (void *)thread_worker_index(&thread_worker_index, v257);
  uint64_t v263 = *(void *)(*(void *)(*(void *)(v262 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues) + 8 * *v261 + 8)
                   + 32);
  ecs_stack_allocator_push_snapshot(v263);
  uint64_t v264 = ecs_stack_allocator_allocate(v263, 8 * v258, 4);
  if (!v259)
  {
LABEL_267:
    ecs_stack_allocator_pop_snapshot(v263);
    goto LABEL_268;
  }
  uint64_t v232 = v264;
  char v344 = v223;
  uint64_t v265 = 0;
  long long v367 = &v260[12 * v259];
  long long v350 = (char *)v264 + 4;
  long long v356 = v264;
  while (1)
  {
    uint64_t v234 = (unint64_t **)*((void *)v260 + 2);
    uint64_t v266 = *((void *)v260 + 5);
    if (!v234) {
      break;
    }
    uint64_t v267 = *((void *)v260 + 4);
    if (v267)
    {
      v373 = v260;
      swift_retain();
      long long v268 = &v350[8 * v265];
      while (1)
      {
        uint64_t v269 = *v234++;
        uint64_t v232 = v269;
        uint64_t v270 = swift_retain();
        if (*(unsigned char *)(v266 + 184)) {
          goto LABEL_300;
        }
        int v271 = *(_DWORD *)(*(void *)(v266 + 168) + 4 * (void)v232);
        int v272 = *(_DWORD *)(*(void *)(v270 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v271 + 8);
        swift_release();
        *((_DWORD *)v268 - 1) = v271;
        *(_DWORD *)long long v268 = v272;
        ++v265;
        v268 += 8;
        if (!--v267) {
          goto LABEL_249;
        }
      }
    }
LABEL_250:
    v260 += 12;
    if (v260 == v367)
    {
      if (v265)
      {
        uint64_t v278 = &v232[v265];
        char v223 = v344;
        do
        {
          unint64_t v279 = *v232++;
          uint64_t v280 = sub_1B6359750(v279);
          swift_retain();
          sub_1B63580E8(v279, v280, a1, a1);
          swift_release();
        }
        while (v232 != v278);
      }
      else
      {
        char v223 = v344;
      }
      goto LABEL_267;
    }
  }
  unint64_t v273 = *v260;
  uint64_t v234 = (unint64_t **)v260[1];
  if (v273 == v234) {
    goto LABEL_250;
  }
  v373 = v260;
  swift_retain();
  uint64_t v274 = &v350[8 * v265];
  while (1)
  {
    uint64_t v275 = swift_retain();
    if (*(unsigned char *)(v266 + 184)) {
      break;
    }
    uint64_t v232 = (unint64_t *)*(int *)(*(void *)(v266 + 168) + 4 * v273);
    long long v276 = (unint64_t **)(v273 + 1);
    int v277 = *(_DWORD *)(*(void *)(v275 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v232 + 8);
    swift_release();
    *((_DWORD *)v274 - 1) = v232;
    *(_DWORD *)uint64_t v274 = v277;
    ++v265;
    v274 += 8;
    unint64_t v273 = (unint64_t)v276;
    if (v234 == v276)
    {
LABEL_249:
      swift_release();
      uint64_t v232 = v356;
      uint64_t v260 = v373;
      goto LABEL_250;
    }
  }
LABEL_300:
  sub_1B6E32BE8();
  __break(1u);

  long long v416 = v376;
  long long v417 = v378;
  uint64_t v418 = v380;
  sub_1B6345178(v373, (unsigned __int16 **)&v416, (uint64_t)v457);
  sub_1B634507C((char *)v232);
  ecs_stack_allocator_pop_snapshot(12);
  os_unfair_lock_unlock((os_unfair_lock_t)v232[43]);
  os_unfair_lock_unlock((os_unfair_lock_t)v232[47]);
  __break(1u);
}

char *sub_1B634507C(char *result)
{
  uint64_t v2 = (void *)(v1 + 104);
  if (*(void *)(*(void *)(v1 + 104) + 16))
  {
    uint64_t v3 = v1;
    long long v4 = result;
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_1B639147C(v5, (uint64_t)v4);
    swift_bridgeObjectRelease();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *(void *)(v1 + 104);
    if (isUniquelyReferenced_nonNull_native)
    {
      double result = (char *)sub_1B6399BB8(0, *(void *)(v7 + 16));
    }
    else
    {
      *uint64_t v2 = sub_1B6785800(0, *(void *)(v7 + 24) >> 1);
      double result = (char *)swift_bridgeObjectRelease();
    }
    if (*(unsigned __int8 *)(*(void *)(v3 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
    {
      unint64_t v8 = (char *)*((void *)v4 + 29);
      double result = (char *)*((void *)v4 + 32);
      if (v8 == result)
      {
        uint64_t v9 = (char *)*((void *)v4 + 30);
      }
      else
      {
        sub_1B666018C(result, v8);
        double result = (char *)*((void *)v4 + 29);
        uint64_t v9 = (char *)*((void *)v4 + 30);
        if (v9 == result)
        {
          uint64_t v9 = 0;
          double result = 0;
          *((void *)v4 + 29) = 0;
          *((void *)v4 + 30) = 0;
        }
      }
      *((void *)v4 + 31) = v9;
      *((void *)v4 + 32) = result;
    }
  }
  return result;
}

uint64_t sub_1B6345178(void *a1, unsigned __int16 **a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = (uint64_t)(a1 + 6);
  unint64_t v6 = a1[6];
  uint64_t v36 = a1[8];
  if (!v36)
  {
    uint64_t v30 = a1[7];
    uint64_t v31 = (void *)a1[4];
    goto LABEL_33;
  }
  uint64_t v33 = a1 + 6;
  for (uint64_t i = 0; i != v36; ++i)
  {
    unint64_t v9 = v6;
    uint64_t v10 = (uint64_t *)(v6 + 48 * i);
    uint64_t v11 = *v10;
    uint64_t v12 = (void (*)(uint64_t))v10[4];
    uint64_t v13 = a1[9];
    if (v13) {
      BOOL v14 = v11 == v13;
    }
    else {
      BOOL v14 = 0;
    }
    if (v14) {
      goto LABEL_3;
    }
    uint64_t v15 = *a2;
    if (!(*a2)[11]) {
      goto LABEL_3;
    }
    uint64_t v16 = v10[2];
    uint64_t v17 = (char *)v15 + 41;
    unint64_t v18 = v15[9];
    if (v18 >= 0x10)
    {
      uint64_t v19 = &v17[v15[8]];
      unint64_t v20 = v18 >> 4;
      uint64_t v21 = (char *)v15 + 41;
      while (*(void *)v19 != v11)
      {
        ++v21;
        v19 += 16;
        if (!--v20) {
          goto LABEL_19;
        }
      }
      unsigned int v22 = v21[v15[10]];
      BOOL v23 = v22 > 5;
      int v24 = (1 << v22) & 0x23;
      if (v23 || v24 == 0)
      {
LABEL_3:
        uint64_t v8 = swift_retain();
        v12(v8);
        swift_release();
        goto LABEL_4;
      }
    }
LABEL_19:
    if (swift_conformsToProtocol2()) {
      uint64_t v26 = v16;
    }
    else {
      uint64_t v26 = 0;
    }
    if (v26)
    {
      if (sub_1B63462F4(v26)) {
        goto LABEL_3;
      }
      unint64_t v27 = v15[9];
      if (v27 < 0x10) {
        goto LABEL_3;
      }
      uint64_t v28 = &v17[v15[8]];
      uint64_t v29 = 16 * (v27 >> 4);
      while (*(void *)v28 != v26)
      {
        v28 += 16;
        v29 -= 16;
        if (!v29) {
          goto LABEL_3;
        }
      }
    }
LABEL_4:
    unint64_t v6 = v9;
  }
  uint64_t v30 = a1[7];
  unint64_t v6 = a1[6];
  uint64_t v31 = (void *)a1[4];
  if ((uint64_t)a1[8] >= 1) {
    swift_arrayDestroy();
  }
  uint64_t v3 = a3;
  uint64_t v5 = (uint64_t)v33;
LABEL_33:
  ecs_stack_allocator_deallocate(v31, v6, 48 * v30);
  return sub_1B62CA4FC(v3, v5, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
}

unint64_t sub_1B6345398@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = *(void *)(v4 + 128);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    double result = sub_1B62C1A30(a2);
    LOBYTE(v6) = (v8 & 1) != 0
              && *(void *)(*(void *)(v4 + 24) + 16 * *(void *)(*(void *)(v5 + 56) + 8 * result) + 32) == a2;
  }
  *a3 = v6;
  return result;
}

uint64_t sub_1B6345418(uint64_t a1)
{
  uint64_t v2 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, *(uint64_t **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 16));
  uint64_t v3 = sub_1B6345984();
  char v5 = v4;
  uint64_t v6 = sub_1B6345A6C();
  char v8 = v7;
  uint64_t result = sub_1B63459F8();
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56) - v11;
  if (v5)
  {
    if (v8)
    {
      if (v10)
      {
        if (v12)
        {
          unint64_t v94 = (_OWORD *)(v2 + (v11 << 6) + 32);
          do
          {
            *(v94 - 2) = xmmword_1B6E4F300;
            *(v94 - 1) = xmmword_1B6E4F320;
            *unint64_t v94 = xmmword_1B6E4F2E0;
            v94[1] = xmmword_1B6E4F370;
            v94 += 4;
            --v12;
          }
          while (v12);
        }
      }
      else if (v12)
      {
        uint64_t v59 = (float32x4_t *)(result + 16 * v11);
        uint64_t v60 = (_OWORD *)(v2 + (v11 << 6) + 32);
        v61.i64[0] = 0x8000000080000000;
        v61.i64[1] = 0x8000000080000000;
        do
        {
          float32x4_t v62 = *v59++;
          float32x4_t v63 = vabsq_f32(v62);
          v63.i32[3] = 0;
          int8x16_t v64 = vorrq_s8((int8x16_t)(*(_OWORD *)&vmaxnmq_f32(v63, (float32x4_t)xmmword_1B6E4FCD0) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)), vandq_s8((int8x16_t)v62, v61));
          LODWORD(v65) = 0;
          HIDWORD(v65) = v64.i32[1];
          *(void *)&long long v66 = 0;
          *((void *)&v66 + 1) = v64.u32[2];
          *(v60 - 2) = v64.u32[0];
          *(v60 - 1) = v65;
          *uint64_t v60 = v66;
          v60[1] = xmmword_1B6E4F370;
          v60 += 4;
          --v12;
        }
        while (v12);
      }
    }
    else if (v10)
    {
      if (v12)
      {
        v80.i64[0] = 0x4000000040000000;
        v80.i64[1] = 0x4000000040000000;
        uint64_t v81 = (float32x4_t *)(v6 + 16 * v11);
        uint64_t v82 = v2 + (v11 << 6) + 32;
        do
        {
          float32x4_t v83 = *v81++;
          float32x4_t v84 = v83;
          float32x4_t v85 = vmulq_f32(v84, v84);
          float32x4_t v86 = vmulq_laneq_f32(v84, v84, 3);
          float v87 = vmulq_lane_f32(v84, *(float32x2_t *)v84.f32, 1).f32[0];
          v85.f32[0] = 0.5 - v85.f32[0];
          *(float32x2_t *)v84.f32 = vmul_laneq_f32(*(float32x2_t *)v84.f32, v84, 2);
          v88.i32[3] = 0;
          v88.f32[0] = (float)(0.5 - v85.f32[1]) - v85.f32[2];
          v88.f32[1] = v87 + v86.f32[2];
          v89.i32[3] = 0;
          v89.f32[0] = v87 - v86.f32[2];
          v88.f32[2] = v84.f32[0] - v86.f32[1];
          v89.f32[1] = v85.f32[0] - v85.f32[2];
          v89.f32[2] = v84.f32[1] + v86.f32[0];
          *(int32x2_t *)v86.f32 = vrev64_s32(*(int32x2_t *)v86.f32);
          v90.i32[0] = vadd_f32(*(float32x2_t *)v84.f32, *(float32x2_t *)v86.f32).u32[0];
          v90.i32[1] = vsub_f32(*(float32x2_t *)&v84, *(float32x2_t *)&v86).i32[1];
          v90.i64[1] = COERCE_UNSIGNED_INT(v85.f32[0] - v85.f32[1]);
          *(float32x4_t *)(v82 - 32) = vmulq_f32(v80, v88);
          *(float32x4_t *)(v82 - 16) = vmulq_f32(v80, v89);
          *(float32x4_t *)uint64_t v82 = vmulq_f32(v80, v90);
          *(_OWORD *)(v82 + 16) = xmmword_1B6E4F370;
          v82 += 64;
          --v12;
        }
        while (v12);
      }
    }
    else if (v12)
    {
      uint64_t v32 = (float32x4_t *)(v6 + 16 * v11);
      uint64_t v33 = (float32x4_t *)(result + 16 * v11);
      uint64_t v34 = v2 + (v11 << 6) + 32;
      v35.i64[0] = 0x8000000080000000;
      v35.i64[1] = 0x8000000080000000;
      do
      {
        float32x4_t v36 = *v32++;
        float32x4_t v37 = v36;
        float32x4_t v38 = *v33++;
        float32x4_t v39 = vabsq_f32(v38);
        v39.i32[3] = 0;
        float32x4_t v40 = vmulq_f32(v37, v37);
        float32x4_t v41 = vmulq_laneq_f32(v37, v37, 3);
        float v42 = vmulq_lane_f32(v37, *(float32x2_t *)v37.f32, 1).f32[0];
        float32x4_t v43 = (float32x4_t)vorrq_s8((int8x16_t)(*(_OWORD *)&vmaxnmq_f32(v39, (float32x4_t)xmmword_1B6E4FCD0) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)), vandq_s8((int8x16_t)v38, v35));
        v40.f32[0] = 0.5 - v40.f32[0];
        *(float32x2_t *)v37.f32 = vmul_laneq_f32(*(float32x2_t *)v37.f32, v37, 2);
        float32x4_t v44 = vaddq_f32(v43, v43);
        v45.i32[3] = 0;
        v45.f32[0] = (float)(0.5 - v40.f32[1]) - v40.f32[2];
        v45.f32[1] = v42 + v41.f32[2];
        v46.i32[3] = 0;
        v46.f32[0] = v42 - v41.f32[2];
        v45.f32[2] = v37.f32[0] - v41.f32[1];
        v46.f32[1] = v40.f32[0] - v40.f32[2];
        v46.f32[2] = v37.f32[1] + v41.f32[0];
        *(int32x2_t *)v41.f32 = vrev64_s32(*(int32x2_t *)v41.f32);
        v47.i32[0] = vadd_f32(*(float32x2_t *)v37.f32, *(float32x2_t *)v41.f32).u32[0];
        v47.i32[1] = vsub_f32(*(float32x2_t *)&v37, *(float32x2_t *)&v41).i32[1];
        v47.i64[1] = COERCE_UNSIGNED_INT(v40.f32[0] - v40.f32[1]);
        *(float32x4_t *)(v34 - 32) = vmulq_n_f32(v45, v44.f32[0]);
        *(float32x4_t *)(v34 - 16) = vmulq_lane_f32(v46, *(float32x2_t *)v44.f32, 1);
        *(float32x4_t *)uint64_t v34 = vmulq_laneq_f32(v47, v44, 2);
        *(_OWORD *)(v34 + 16) = xmmword_1B6E4F370;
        v34 += 64;
        --v12;
      }
      while (v12);
    }
  }
  else if (v8)
  {
    if (v10)
    {
      if (v12)
      {
        uint64_t v91 = (long long *)(v3 + 16 * v11);
        unint64_t v92 = (_OWORD *)(v2 + (v11 << 6) + 32);
        do
        {
          long long v93 = *v91++;
          *(v92 - 2) = xmmword_1B6E4F300;
          *(v92 - 1) = xmmword_1B6E4F320;
          *unint64_t v92 = xmmword_1B6E4F2E0;
          v92[1] = v93;
          v92 += 4;
          --v12;
        }
        while (v12);
      }
    }
    else if (v12)
    {
      uint64_t v48 = (long long *)(v3 + 16 * v11);
      uint64_t v49 = (float32x4_t *)(result + 16 * v11);
      uint64_t v50 = (_OWORD *)(v2 + (v11 << 6) + 32);
      v51.i64[0] = 0x8000000080000000;
      v51.i64[1] = 0x8000000080000000;
      do
      {
        long long v52 = *v48++;
        long long v53 = v52;
        float32x4_t v54 = *v49++;
        float32x4_t v55 = vabsq_f32(v54);
        v55.i32[3] = 0;
        int8x16_t v56 = vorrq_s8((int8x16_t)(*(_OWORD *)&vmaxnmq_f32(v55, (float32x4_t)xmmword_1B6E4FCD0) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)), vandq_s8((int8x16_t)v54, v51));
        LODWORD(v57) = 0;
        HIDWORD(v57) = v56.i32[1];
        *(void *)&long long v58 = 0;
        *((void *)&v58 + 1) = v56.u32[2];
        *(v50 - 2) = v56.u32[0];
        *(v50 - 1) = v57;
        *uint64_t v50 = v58;
        v50[1] = v53;
        v50 += 4;
        --v12;
      }
      while (v12);
    }
  }
  else if (v10)
  {
    if (v12)
    {
      v67.i64[0] = 0x4000000040000000;
      v67.i64[1] = 0x4000000040000000;
      uint64_t v68 = (float32x4_t *)(v6 + 16 * v11);
      uint64_t v69 = (long long *)(v3 + 16 * v11);
      uint64_t v70 = v2 + (v11 << 6) + 32;
      do
      {
        float32x4_t v71 = *v68++;
        float32x4_t v72 = v71;
        long long v73 = *v69++;
        float32x4_t v74 = vmulq_f32(v72, v72);
        float32x4_t v75 = vmulq_laneq_f32(v72, v72, 3);
        float v76 = vmulq_lane_f32(v72, *(float32x2_t *)v72.f32, 1).f32[0];
        v74.f32[0] = 0.5 - v74.f32[0];
        *(float32x2_t *)v72.f32 = vmul_laneq_f32(*(float32x2_t *)v72.f32, v72, 2);
        v77.i32[3] = 0;
        v77.f32[0] = (float)(0.5 - v74.f32[1]) - v74.f32[2];
        v77.f32[1] = v76 + v75.f32[2];
        v78.i32[3] = 0;
        v78.f32[0] = v76 - v75.f32[2];
        v77.f32[2] = v72.f32[0] - v75.f32[1];
        v78.f32[1] = v74.f32[0] - v74.f32[2];
        v78.f32[2] = v72.f32[1] + v75.f32[0];
        *(int32x2_t *)v75.f32 = vrev64_s32(*(int32x2_t *)v75.f32);
        v79.i32[0] = vadd_f32(*(float32x2_t *)v72.f32, *(float32x2_t *)v75.f32).u32[0];
        v79.i32[1] = vsub_f32(*(float32x2_t *)&v72, *(float32x2_t *)&v75).i32[1];
        v79.i64[1] = COERCE_UNSIGNED_INT(v74.f32[0] - v74.f32[1]);
        *(float32x4_t *)(v70 - 32) = vmulq_f32(v77, v67);
        *(float32x4_t *)(v70 - 16) = vmulq_f32(v78, v67);
        *(float32x4_t *)uint64_t v70 = vmulq_f32(v79, v67);
        *(_OWORD *)(v70 + 16) = v73;
        v70 += 64;
        --v12;
      }
      while (v12);
    }
  }
  else if (v12)
  {
    uint64_t v13 = (float32x4_t *)(v6 + 16 * v11);
    BOOL v14 = (long long *)(v3 + 16 * v11);
    uint64_t v15 = (float32x4_t *)(result + 16 * v11);
    uint64_t v16 = v2 + (v11 << 6) + 32;
    v17.i64[0] = 0x8000000080000000;
    v17.i64[1] = 0x8000000080000000;
    do
    {
      float32x4_t v18 = *v13++;
      float32x4_t v19 = v18;
      long long v20 = *v14++;
      long long v21 = v20;
      float32x4_t v22 = *v15++;
      float32x4_t v23 = vabsq_f32(v22);
      v23.i32[3] = 0;
      float32x4_t v24 = vmulq_f32(v19, v19);
      float32x4_t v25 = vmulq_laneq_f32(v19, v19, 3);
      float v26 = vmulq_lane_f32(v19, *(float32x2_t *)v19.f32, 1).f32[0];
      float32x4_t v27 = (float32x4_t)vorrq_s8((int8x16_t)(*(_OWORD *)&vmaxnmq_f32(v23, (float32x4_t)xmmword_1B6E4FCD0) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)), vandq_s8((int8x16_t)v22, v17));
      v24.f32[0] = 0.5 - v24.f32[0];
      *(float32x2_t *)v19.f32 = vmul_laneq_f32(*(float32x2_t *)v19.f32, v19, 2);
      float32x4_t v28 = vaddq_f32(v27, v27);
      v29.i32[3] = 0;
      v29.f32[0] = (float)(0.5 - v24.f32[1]) - v24.f32[2];
      v29.f32[1] = v26 + v25.f32[2];
      v30.i32[3] = 0;
      v30.f32[0] = v26 - v25.f32[2];
      v29.f32[2] = v19.f32[0] - v25.f32[1];
      v30.f32[1] = v24.f32[0] - v24.f32[2];
      v30.f32[2] = v19.f32[1] + v25.f32[0];
      *(int32x2_t *)v25.f32 = vrev64_s32(*(int32x2_t *)v25.f32);
      v31.i32[0] = vadd_f32(*(float32x2_t *)v19.f32, *(float32x2_t *)v25.f32).u32[0];
      v31.i32[1] = vsub_f32(*(float32x2_t *)&v19, *(float32x2_t *)&v25).i32[1];
      v31.i64[1] = COERCE_UNSIGNED_INT(v24.f32[0] - v24.f32[1]);
      *(float32x4_t *)(v16 - 32) = vmulq_n_f32(v29, v28.f32[0]);
      *(float32x4_t *)(v16 - 16) = vmulq_lane_f32(v30, *(float32x2_t *)v28.f32, 1);
      *(float32x4_t *)uint64_t v16 = vmulq_laneq_f32(v31, v28, 2);
      *(_OWORD *)(v16 + 16) = v21;
      v16 += 64;
      --v12;
    }
    while (v12);
  }
  return result;
}

uint64_t sub_1B6345984()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B63459F8()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B6345A6C()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B6345AE0(void *a1, uint64_t a2)
{
  char v4 = (uint64_t *)a1[11];
  uint64_t v5 = a1[12];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[2];
  uint64_t v8 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v4, v5, v6, v7);
  uint64_t result = sub_1B62C9024((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, v4, v5, v6, v7);
  uint64_t v11 = a1[6];
  uint64_t v10 = a1[7];
  if (v11 != v10)
  {
    int v12 = 0;
    uint64_t v13 = (void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    int v14 = -1;
    float32x4_t v15 = (float32x4_t)xmmword_1B6E4F300;
    float32x4_t v16 = (float32x4_t)xmmword_1B6E4F320;
    float32x4_t v17 = (float32x4_t)xmmword_1B6E4F2E0;
    float32x4_t v18 = (float32x4_t)xmmword_1B6E4F370;
    do
    {
      float32x4_t v23 = (int *)(result + 8 * v11);
      int v24 = *v23;
      int v25 = v23[1];
      if (v24 != v14 || v25 != v12)
      {
        if (v24 == -1 && v25 == 0)
        {
          int v12 = 0;
          int v14 = -1;
          float32x4_t v15 = (float32x4_t)xmmword_1B6E4F300;
          float32x4_t v16 = (float32x4_t)xmmword_1B6E4F320;
          float32x4_t v17 = (float32x4_t)xmmword_1B6E4F2E0;
          float32x4_t v18 = (float32x4_t)xmmword_1B6E4F370;
        }
        else
        {
          if ((v24 & 0x80000000) == 0
            && v13[1] > v24
            && ((uint64_t v28 = *v13 + 12 * v24, v29 = *(__int16 *)(v28 + 4), v25 == -1) || *(_DWORD *)(v28 + 8) == v25)
            && (uint64_t v30 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(*v13 + 12 * v24) + 32),
                uint64_t v31 = *(void *)(v30 + 48),
                (uint64_t v32 = *(void *)(v31 + 16)) != 0))
          {
            uint64_t v33 = (void *)(v31 + 56);
            while ((ValueMetadata *)*(v33 - 3) != &type metadata for WorldTransform)
            {
              v33 += 5;
              if (!--v32) {
                goto LABEL_22;
              }
            }
            uint64_t v34 = (float32x4_t *)(*(void *)(v30 + 128) + *v33 + (v29 << 6));
            float32x4_t v15 = *v34;
            float32x4_t v16 = v34[1];
            float32x4_t v17 = v34[2];
            float32x4_t v18 = v34[3];
          }
          else
          {
LABEL_22:
            float32x4_t v15 = (float32x4_t)xmmword_1B6E4F300;
            float32x4_t v16 = (float32x4_t)xmmword_1B6E4F320;
            float32x4_t v17 = (float32x4_t)xmmword_1B6E4F2E0;
            float32x4_t v18 = (float32x4_t)xmmword_1B6E4F370;
          }
          int v12 = v25;
          int v14 = v24;
        }
      }
      uint64_t v19 = v8 + (v11 << 6);
      float32x4_t v20 = *(float32x4_t *)(v19 + 48);
      float32x4_t v21 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v15, COERCE_FLOAT(*(_OWORD *)(v19 + 16))), v16, *(float32x2_t *)(v19 + 16), 1), v17, *(float32x4_t *)(v19 + 16), 2), v18, *(float32x4_t *)(v19 + 16), 3);
      float32x4_t v22 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v15, COERCE_FLOAT(*(_OWORD *)(v19 + 32))), v16, *(float32x2_t *)(v19 + 32), 1), v17, *(float32x4_t *)(v19 + 32), 2), v18, *(float32x4_t *)(v19 + 32), 3);
      *(float32x4_t *)uint64_t v19 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v15, COERCE_FLOAT(*(_OWORD *)v19)), v16, *(float32x2_t *)v19, 1), v17, *(float32x4_t *)v19, 2), v18, *(float32x4_t *)v19, 3);
      *(float32x4_t *)(v19 + 16) = v21;
      *(float32x4_t *)(v19 + 32) = v22;
      *(float32x4_t *)(v19 + 48) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v15, v20.f32[0]), v16, *(float32x2_t *)v20.f32, 1), v17, v20, 2), v18, v20, 3);
      ++v11;
    }
    while (v11 != v10);
  }
  return result;
}

uint64_t sub_1B6345D24()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + 40;
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(void *)(v0 + 112);
  long long v11 = *(_OWORD *)(v0 + 120);
  uint64_t v9 = *(void *)(v0 + 144);
  sub_1B6381688(v4, (uint64_t)v12, &qword_1EB97F980, (uint64_t)&type metadata for ComponentPropertyRewriter);
  return sub_1B6345DC8(v1, v2, v3, (uint64_t)v12, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v9);
}

uint64_t sub_1B6345DC8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1B6381688(a4, (uint64_t)v24, &qword_1EB97F980, (uint64_t)&type metadata for ComponentPropertyRewriter);
  if (a1)
  {
    sub_1B6381688(a4, (uint64_t)v27, &qword_1EB97F980, (uint64_t)&type metadata for ComponentPropertyRewriter);
    if (v28)
    {
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
    }
    else
    {
      return sub_1B665FDE8(a5, a6, a7, a8, a1, a2, a3, a9);
    }
  }
  else
  {
    uint64_t v20 = v25;
    uint64_t v21 = v26;
    uint64_t result = sub_1B6381688(a4, (uint64_t)v27, &qword_1EB97F980, (uint64_t)&type metadata for ComponentPropertyRewriter);
    if (v28)
    {
      swift_unownedRetainStrong();
      uint64_t v22 = *(void *)(a11 + 232);
      uint64_t v23 = *(void *)(a11 + 240);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      sub_1B6345F68(a5, a7, v22, v23, 0, v20, v21);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B6345F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1B6E32738();
  uint64_t result = swift_conformsToProtocol2();
  if (!result)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    return result;
  }
  uint64_t v42 = a2;
  uint64_t v15 = sub_1B62CD84C(v13);
  uint64_t result = sub_1B62CB508(a7, a7);
  uint64_t v17 = v16;
  if (a5)
  {
    uint64_t v18 = a4 - a3;
    if (a4 != a3)
    {
      swift_retain();
      uint64_t v19 = v42 + v15 * a3;
      while (1)
      {
        sub_1B633D260(a1, a7, v44);
        sub_1B6E32738();
        uint64_t result = swift_conformsToProtocol2();
        if (!result) {
          break;
        }
        sub_1B6A50F80((uint64_t)v44);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v44);
        a1 += v17;
        v19 += v15;
        if (!--v18) {
          return swift_release();
        }
      }
      __break(1u);
      goto LABEL_33;
    }
  }
  else
  {
    sub_1B6E32768();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v21 = swift_retain();
    uint64_t v22 = a6;
    char v23 = MEMORY[0x1BA9B43C0](v21, KeyPath);
    swift_release();
    if (v23)
    {
      uint64_t v25 = a4 - a3;
      if (a4 != a3)
      {
        uint64_t v26 = (float32x4_t *)(v42 + v15 * a3);
        float32x4_t v27 = (float32x4_t *)(a1 + v17 * a3);
        do
        {
          float32x4_t v28 = vaddq_f32(*v27, *v27);
          v28.i32[3] = v24;
          *uint64_t v26 = v28;
          uint64_t v26 = (float32x4_t *)((char *)v26 + v15);
          float32x4_t v27 = (float32x4_t *)((char *)v27 + v17);
          --v25;
        }
        while (v25);
      }
    }
    else
    {
      uint64_t v29 = swift_getKeyPath();
      char v30 = MEMORY[0x1BA9B43C0](v22, v29);
      swift_release();
      if (v30)
      {
        uint64_t v31 = a4 - a3;
        if (a4 != a3)
        {
          uint64_t v32 = (float32x2_t *)(v42 + v15 * a3);
          uint64_t v33 = (float32x2_t *)(a1 + v17 * a3);
          do
          {
            *uint64_t v32 = vadd_f32(*v33, *v33);
            uint64_t v32 = (float32x2_t *)((char *)v32 + v15);
            uint64_t v33 = (float32x2_t *)((char *)v33 + v17);
            --v31;
          }
          while (v31);
        }
      }
      else
      {
        uint64_t v34 = swift_getKeyPath();
        char v35 = MEMORY[0x1BA9B43C0](v22, v34);
        swift_release();
        if (v35)
        {
          uint64_t v36 = a4 - a3;
          if (a4 != a3)
          {
            float32x4_t v37 = (float *)(v42 + v15 * a3);
            float32x4_t v38 = (float *)(a1 + v17 * a3);
            do
            {
              *float32x4_t v37 = *v38 + *v38;
              float32x4_t v37 = (float *)((char *)v37 + v15);
              float32x4_t v38 = (float *)((char *)v38 + v17);
              --v36;
            }
            while (v36);
          }
        }
        else
        {
          uint64_t v39 = a4 - a3;
          if (a4 != a3)
          {
            uint64_t v40 = v42 + v15 * a3;
            uint64_t v41 = a1 + v17 * a3;
            while (1)
            {
              sub_1B633D260(v41, a7, v44);
              sub_1B6E32738();
              uint64_t result = swift_conformsToProtocol2();
              if (!result) {
                break;
              }
              sub_1B6A50F80((uint64_t)v44);
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v44);
              v40 += v15;
              v41 += v17;
              if (!--v39) {
                return swift_release();
              }
            }
            goto LABEL_34;
          }
        }
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B63462F4(uint64_t a1)
{
  uint64_t v2 = *v1;
  if (!(*v1)[11]) {
    return 1;
  }
  unint64_t v3 = v2[9];
  if (v3 < 0x10) {
    return 0;
  }
  uint64_t v5 = (char *)v2 + 41;
  uint64_t v6 = (void *)((char *)v2 + v2[8] + 41);
  unint64_t v7 = v3 >> 4;
  while (*v6 != a1)
  {
    ++v5;
    v6 += 2;
    if (!--v7) {
      return 0;
    }
  }
  unsigned int v8 = v5[v2[10]];
  if (v8 < 6) {
    return (0x1Cu >> v8) & 1;
  }
  else {
    return 1;
  }
}

uint64_t sub_1B6346370(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B6E33068();
  if (result >= v3)
  {
    if (v3) {
      return sub_1B6346ABC(0, v3, 1, v2);
    }
    return result;
  }
  uint64_t v105 = result;
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      long long v11 = (char *)MEMORY[0x1E4FBC860];
      goto LABEL_99;
    }
    uint64_t v103 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1B6E31C98();
    *(void *)(v7 + 16) = v6;
    uint64_t v103 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  unint64_t v102 = v2;
  uint64_t v10 = *v2;
  long long v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v104 = v3;
  while (2)
  {
    uint64_t v13 = v9 + 1;
    if (v9 + 1 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 48 * v13 + 40);
      uint64_t v15 = *(void *)(v14 + 40);
      uint64_t v16 = *(void *)(v15 + 112);
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        uint64_t v18 = *(void *)(v15 + 96);
        uint64_t v19 = (void *)(v16 + 56);
        while ((ValueMetadata *)*(v19 - 3) != &type metadata for Depth)
        {
          v19 += 5;
          if (!--v17) {
            goto LABEL_22;
          }
        }
        uint64_t v17 = *(void *)(v18 + *v19);
      }
LABEL_22:
      uint64_t v20 = *(void *)(*(void *)(v10 + 48 * v9 + 40) + 40);
      uint64_t v21 = *(void *)(v20 + 112);
      uint64_t v22 = *(void *)(v21 + 16);
      if (v22)
      {
        uint64_t v23 = *(void *)(v20 + 96);
        __int32 v24 = (void *)(v21 + 56);
        while ((ValueMetadata *)*(v24 - 3) != &type metadata for Depth)
        {
          v24 += 5;
          if (!--v22) {
            goto LABEL_28;
          }
        }
        uint64_t v22 = *(void *)(v23 + *v24);
      }
LABEL_28:
      uint64_t v13 = v9 + 2;
      if (v9 + 2 < v3)
      {
        do
        {
          uint64_t v25 = *(void *)(v10 + 48 * v13 + 40);
          uint64_t v26 = *(void *)(v25 + 40);
          uint64_t v27 = *(void *)(v26 + 112);
          uint64_t v28 = *(void *)(v27 + 16);
          if (v28)
          {
            uint64_t v29 = *(void *)(v26 + 96);
            char v30 = (void *)(v27 + 56);
            while ((ValueMetadata *)*(v30 - 3) != &type metadata for Depth)
            {
              v30 += 5;
              if (!--v28) {
                goto LABEL_38;
              }
            }
            uint64_t v28 = *(void *)(v29 + *v30);
          }
LABEL_38:
          uint64_t v31 = *(void *)(v14 + 40);
          uint64_t v32 = *(void *)(v31 + 112);
          uint64_t v33 = *(void *)(v32 + 16);
          if (v33)
          {
            uint64_t v34 = *(void *)(v31 + 96);
            char v35 = (void *)(v32 + 56);
            while ((ValueMetadata *)*(v35 - 3) != &type metadata for Depth)
            {
              v35 += 5;
              if (!--v33) {
                goto LABEL_30;
              }
            }
            if (v17 < v22 == v28 >= *(void *)(v34 + *v35)) {
              goto LABEL_46;
            }
          }
          else
          {
LABEL_30:
            if (v17 < v22 == v28 >= 0) {
              goto LABEL_46;
            }
          }
          ++v13;
          uint64_t v14 = v25;
        }
        while (v13 != v3);
        uint64_t v13 = v3;
      }
LABEL_46:
      if (v17 < v22 && v9 < v13)
      {
        uint64_t v36 = 48 * v13;
        uint64_t v37 = 48 * v9;
        uint64_t v38 = v13;
        uint64_t v39 = v9;
        do
        {
          if (v39 != --v38)
          {
            uint64_t v40 = (_OWORD *)(v10 + v37);
            int v41 = *(_DWORD *)(v10 + v37 + 8);
            uint64_t v42 = v10 + v36;
            uint64_t v43 = *(void *)(v10 + v37 + 32);
            uint64_t v44 = *(void *)(v10 + v37 + 40);
            long long v45 = *(_OWORD *)(v10 + v37 + 16);
            uint64_t v46 = *(void *)(v10 + v37);
            long long v48 = *(_OWORD *)(v10 + v36 - 32);
            long long v47 = *(_OWORD *)(v10 + v36 - 16);
            *uint64_t v40 = *(_OWORD *)(v10 + v36 - 48);
            v40[1] = v48;
            _OWORD v40[2] = v47;
            *(void *)(v42 - 48) = v46;
            *(_DWORD *)(v42 - 40) = v41;
            *(_OWORD *)(v42 - 32) = v45;
            *(void *)(v42 - 16) = v43;
            *(void *)(v42 - 8) = v44;
          }
          ++v39;
          v36 -= 48;
          v37 += 48;
        }
        while (v39 < v38);
      }
    }
    if (v13 >= v3 || v13 - v9 >= v105) {
      goto LABEL_76;
    }
    uint64_t v49 = v9 + v105;
    if (v9 + v105 >= v3) {
      uint64_t v49 = v3;
    }
    if (v13 == v49) {
      goto LABEL_76;
    }
    while (2)
    {
      uint64_t v50 = *(void *)(v10 + 48 * v13 + 40);
      for (uint64_t i = v13; i != v9; --i)
      {
        uint64_t v59 = *(void *)(v50 + 40);
        uint64_t v60 = *(void *)(v59 + 112);
        uint64_t v61 = *(void *)(v60 + 16);
        if (v61)
        {
          uint64_t v62 = *(void *)(v59 + 96);
          float32x4_t v63 = (void *)(v60 + 56);
          while ((ValueMetadata *)*(v63 - 3) != &type metadata for Depth)
          {
            v63 += 5;
            if (!--v61) {
              goto LABEL_66;
            }
          }
          uint64_t v64 = *(void *)(v62 + *v63);
        }
        else
        {
LABEL_66:
          uint64_t v64 = 0;
        }
        uint64_t v65 = v10 + 48 * i;
        uint64_t v66 = *(void *)(*(void *)(v65 - 8) + 40);
        uint64_t v67 = *(void *)(v66 + 112);
        uint64_t v68 = *(void *)(v67 + 16);
        if (!v68)
        {
LABEL_60:
          if ((v64 & 0x8000000000000000) == 0) {
            break;
          }
          goto LABEL_61;
        }
        uint64_t v69 = *(void *)(v66 + 96);
        uint64_t v70 = (void *)(v67 + 56);
        while ((ValueMetadata *)*(v70 - 3) != &type metadata for Depth)
        {
          v70 += 5;
          if (!--v68) {
            goto LABEL_60;
          }
        }
        if (v64 >= *(void *)(v69 + *v70)) {
          break;
        }
LABEL_61:
        uint64_t v52 = v10 + 48 * i;
        int v53 = *(_DWORD *)(v52 + 8);
        uint64_t v54 = *(void *)(v52 + 32);
        long long v55 = *(_OWORD *)(v52 + 16);
        uint64_t v56 = *(void *)v65;
        uint64_t v57 = v10 + 48 * (i - 1);
        long long v58 = *(_OWORD *)(v65 - 32);
        *(_OWORD *)uint64_t v65 = *(_OWORD *)(v65 - 48);
        *(_OWORD *)(v65 + 16) = v58;
        *(_OWORD *)(v65 + 32) = *(_OWORD *)(v65 - 16);
        *(void *)(v65 - 48) = v56;
        *(_DWORD *)(v57 + 8) = v53;
        *(_OWORD *)(v57 + 16) = v55;
        *(void *)(v57 + 32) = v54;
        *(void *)(v65 - 8) = v50;
      }
      if (++v13 != v49) {
        continue;
      }
      break;
    }
    uint64_t v13 = v49;
LABEL_76:
    uint64_t v106 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v11 = sub_1B62BD890(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v72 = *((void *)v11 + 2);
    unint64_t v71 = *((void *)v11 + 3);
    unint64_t v12 = v72 + 1;
    if (v72 >= v71 >> 1) {
      long long v11 = sub_1B62BD890(v71 > 1, v72 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    long long v73 = v11 + 32;
    float32x4_t v74 = &v11[16 * v72 + 32];
    *(void *)float32x4_t v74 = v9;
    *((void *)v74 + 1) = v13;
    if (v72)
    {
      while (2)
      {
        uint64_t v75 = v12 - 1;
        if (v12 >= 4)
        {
          float32x4_t v80 = &v73[16 * v12];
          uint64_t v81 = *((void *)v80 - 7) - *((void *)v80 - 8);
          uint64_t v78 = *((void *)v80 - 5) - *((void *)v80 - 6);
          uint64_t v79 = v12 - 2;
          uint64_t v82 = &v73[16 * v12 - 32];
          uint64_t v76 = *(void *)v82;
          uint64_t v77 = *((void *)v82 + 1);
          if (v78 - v76 + v77 < v81)
          {
LABEL_86:
            uint64_t v83 = v77 - v76;
            uint64_t v84 = *(void *)&v73[16 * v75 + 8] - *(void *)&v73[16 * v75];
            if (v83 + v84 < v78) {
              goto LABEL_89;
            }
            BOOL v85 = v78 < v84;
          }
          else
          {
            BOOL v85 = v78 < *(void *)&v73[16 * v75 + 8] - *(void *)&v73[16 * v75];
          }
          if (v85) {
            uint64_t v75 = v79;
          }
        }
        else
        {
          if (v12 == 3)
          {
            uint64_t v76 = *((void *)v11 + 6);
            uint64_t v77 = *((void *)v11 + 7);
            uint64_t v78 = *((void *)v11 + 5) - *((void *)v11 + 4);
            uint64_t v79 = 1;
            goto LABEL_86;
          }
          uint64_t v83 = *(void *)&v73[16 * v12 - 24] - *(void *)&v73[16 * v12 - 32];
          uint64_t v84 = *(void *)&v73[16 * v75 + 8] - *(void *)&v73[16 * v75];
LABEL_89:
          if (v84 < v83) {
            goto LABEL_14;
          }
        }
        float32x4_t v86 = v11;
        float v87 = &v73[16 * v75 - 16];
        uint64_t v88 = *(void *)v87;
        float32x4_t v89 = v73;
        float32x4_t v90 = &v73[16 * v75];
        uint64_t v91 = *((void *)v90 + 1);
        sub_1B6CD585C((char *)(v10 + 48 * *(void *)v87), (char *)(v10 + 48 * *(void *)v90), (char *)(v10 + 48 * v91), __dst);
        if (v1) {
          goto LABEL_105;
        }
        *(void *)float v87 = v88;
        *((void *)v87 + 1) = v91;
        long long v11 = v86;
        unint64_t v92 = *((void *)v86 + 2);
        unint64_t v12 = v92 - 1;
        memmove(v90, v90 + 16, 16 * (v92 - 1 - v75));
        *((void *)v86 + 2) = v92 - 1;
        long long v73 = v89;
        if (v92 <= 2) {
          goto LABEL_14;
        }
        continue;
      }
    }
    unint64_t v12 = 1;
LABEL_14:
    uint64_t v3 = v104;
    uint64_t v9 = v106;
    if (v106 < v104) {
      continue;
    }
    break;
  }
  uint64_t v2 = v102;
  uint64_t v8 = v103;
LABEL_99:
  uint64_t v103 = v8;
  if (v12 >= 2)
  {
    uint64_t v93 = *v2;
    do
    {
      unint64_t v94 = v11 + 32;
      uint64_t v95 = (uint64_t)v11;
      uint64_t v96 = *(void *)&v11[16 * v12];
      uint64_t v97 = &v94[16 * v12 - 16];
      uint64_t v98 = *((void *)v97 + 1);
      sub_1B6CD585C((char *)(v93 + 48 * v96), (char *)(v93 + 48 * *(void *)v97), (char *)(v93 + 48 * v98), __dst);
      if (v1) {
        break;
      }
      uint64_t v99 = (char *)v95;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v99 = sub_1B6D671B8(v95);
      }
      unint64_t v100 = &v99[16 * v12];
      *(void *)unint64_t v100 = v96;
      *((void *)v100 + 1) = v98;
      long long v11 = v99;
      unint64_t v101 = *((void *)v99 + 2);
      memmove(&v99[16 * v12 + 16], &v99[16 * v12 + 32], 16 * (v101 - v12));
      *((void *)v99 + 2) = v101 - 1;
      unint64_t v12 = v101 - 1;
    }
    while (v101 > 2);
  }
LABEL_105:
  swift_bridgeObjectRelease();
  *(void *)(v103 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6346ABC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    do
    {
      uint64_t v5 = *(void *)(v4 + 48 * a3 + 40);
      for (uint64_t i = a3; i != result; --i)
      {
        uint64_t v14 = *(void *)(v5 + 40);
        uint64_t v15 = *(void *)(v14 + 112);
        uint64_t v16 = *(void *)(v15 + 16);
        if (v16)
        {
          uint64_t v17 = *(void *)(v14 + 96);
          uint64_t v18 = (void *)(v15 + 56);
          while ((ValueMetadata *)*(v18 - 3) != &type metadata for Depth)
          {
            v18 += 5;
            if (!--v16) {
              goto LABEL_12;
            }
          }
          uint64_t v19 = *(void *)(v17 + *v18);
        }
        else
        {
LABEL_12:
          uint64_t v19 = 0;
        }
        uint64_t v20 = (uint64_t *)(v4 + 48 * i);
        uint64_t v21 = *(void *)(*(v20 - 1) + 40);
        uint64_t v22 = *(void *)(v21 + 112);
        uint64_t v23 = *(void *)(v22 + 16);
        if (!v23)
        {
LABEL_6:
          if ((v19 & 0x8000000000000000) == 0) {
            break;
          }
          goto LABEL_7;
        }
        uint64_t v24 = *(void *)(v21 + 96);
        uint64_t v25 = (void *)(v22 + 56);
        while ((ValueMetadata *)*(v25 - 3) != &type metadata for Depth)
        {
          v25 += 5;
          if (!--v23) {
            goto LABEL_6;
          }
        }
        if (v19 >= *(void *)(v24 + *v25)) {
          break;
        }
LABEL_7:
        uint64_t v7 = v4 + 48 * i;
        int v8 = *(_DWORD *)(v7 + 8);
        uint64_t v9 = *(void *)(v7 + 32);
        long long v10 = *(_OWORD *)(v7 + 16);
        uint64_t v11 = *v20;
        uint64_t v12 = v4 + 48 * (i - 1);
        long long v13 = *((_OWORD *)v20 - 2);
        *(_OWORD *)uint64_t v20 = *((_OWORD *)v20 - 3);
        *((_OWORD *)v20 + 1) = v13;
        *((_OWORD *)v20 + 2) = *((_OWORD *)v20 - 1);
        *(v20 - 6) = v11;
        *(_DWORD *)(v12 + 8) = v8;
        *(_OWORD *)(v12 + 16) = v10;
        *(void *)(v12 + 32) = v9;
        *(v20 - 1) = v5;
      }
      ++a3;
    }
    while (a3 != a2);
  }
  return result;
}

float32x4_t sub_1B6346BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_retain();
  sub_1B6346CF0(v3, (uint64_t)v15);
  swift_release();
  sub_1B633C598((uint64_t)v15, (uint64_t)v16);
  if ((v17 & 1) == 0)
  {
    float32x4_t v13 = (float32x4_t)v16[1];
    float32x4_t v14 = (float32x4_t)v16[0];
    float32x4_t v11 = (float32x4_t)v16[3];
    float32x4_t v12 = (float32x4_t)v16[2];
    uint64_t v5 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, *(uint64_t **)(a2 + 88), *(void *)(a2 + 96), *(void *)(a2 + 104), *(void *)(a2 + 16));
    uint64_t v6 = *(void *)(a2 + 48);
    uint64_t v7 = *(void *)(a2 + 56) - v6;
    if (v7)
    {
      int v8 = (float32x4_t *)(v5 + (v6 << 6) + 32);
      do
      {
        float32x4_t v9 = v8[1];
        float32x4_t result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v14, COERCE_FLOAT(*(_OWORD *)&v8[-1])), v13, *(float32x2_t *)v8[-1].f32, 1), v12, v8[-1], 2), v11, v8[-1], 3);
        float32x4_t v10 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v14, COERCE_FLOAT(*v8)), v13, *(float32x2_t *)v8->f32, 1), v12, *v8, 2), v11, *v8, 3);
        v8[-2] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v14, COERCE_FLOAT(*(_OWORD *)&v8[-2])), v13, *(float32x2_t *)v8[-2].f32, 1), v12, v8[-2], 2), v11, v8[-2], 3);
        v8[-1] = result;
        float32x4_t *v8 = v10;
        v8[1] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v14, v9.f32[0]), v13, *(float32x2_t *)v9.f32, 1), v12, v9, 2), v11, v9, 3);
        v8 += 4;
        --v7;
      }
      while (v7);
    }
  }
  return result;
}

void sub_1B6346CF0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v4 = sub_1B636E9A8((uint64_t)&type metadata for WorldFromScene);
  char v7 = v6;
  if (v6)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 16) + v4);
    uint64_t v17 = 32 * v5;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + 32 * v5 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v19 = v16[1];
    uint64_t v20 = *v16;
    uint64_t v11 = v16[3];
    uint64_t v18 = v16[2];
    uint64_t v12 = v16[4];
    uint64_t v13 = v16[5];
    uint64_t v14 = v16[6];
    uint64_t v15 = v16[7];
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + v17 + 24));
    uint64_t v10 = v18;
    uint64_t v9 = v19;
    uint64_t v8 = v20;
  }
  else
  {
    os_unfair_recursive_lock_unlock();
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v14;
  *(void *)(a2 + 56) = v15;
  *(unsigned char *)(a2 + 64) = (v7 & 1) == 0;
}

void *sub_1B6346E1C(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v3 = v2;
  swift_retain();
  sub_1B636E62C();
  unsigned __int8 v5 = v4;
  int v6 = v4;
  float32x4_t result = (void *)swift_release();
  if (v6 == 2) {
    return result;
  }
  uint64_t v9 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                 + 8 * *(void *)thread_worker_index(&thread_worker_index, v8)
                 + 8);
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980BA0, (unint64_t *)&qword_1EB97EB00, (unint64_t *)&qword_1EB97EAE0);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = sub_1B68D6DD0(v10, 1);
  uint64_t v13 = &type metadata for DebugInfoA;
  if ((v5 & 1) == 0) {
    uint64_t v13 = &type metadata for DebugInfoB;
  }
  uint64_t v14 = (ValueMetadata *)&off_1F0F52198;
  if (v5) {
    uint64_t v14 = (ValueMetadata *)&off_1F0F520A8;
  }
  *uint64_t v12 = v13;
  v12[1] = v14;
  nullsub_1(v11);
  uint64_t v743 = v15;
  uint64_t v16 = *(void **)(v3 + 176);
  swift_retain();
  unint64_t k = 0;
  sub_1B6B3B4A0((uint64_t)&type metadata for DebugDrawingState, (uint64_t)&off_1F0F70680, v16, v815);
  swift_release();
  int v18 = v815[0].u8[0];
  int v19 = v815[0].u8[1];
  int v20 = v815[0].u8[5];
  int v696 = v815[0].u8[6];
  if (v815[0].u8[2] == 1) {
    sub_1B6C1B914(v3);
  }
  uint64_t v744 = v9;
  uint64_t v702 = v3;
  int v695 = v20;
  if (v18)
  {
    LODWORD(v714) = v19;
    v738.n128_u32[0] = sub_1B67ADC80(255, 0, 0);
    if (qword_1EB97DC28 != -1) {
      swift_once();
    }
    uint64_t v904 = qword_1EB997A18;
    int v905 = 0;
    char v906 = 2;
    char v908 = 2;
    uint64_t v907 = 0;
    uint64_t v909 = 0;
    swift_retain();
    sub_1B6782354(1, 1, (uint64_t)v746);
    swift_release();
    v808[0] = v746[0];
    v808[1] = v746[1];
    uint64_t v809 = v747;
    sub_1B62C9DA8(v3, (uint64_t)v808, 0x200000000, v748);
    sub_1B62D7DE8((uint64_t)v748, (uint64_t)v786, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v786[0])
    {
      long long v793 = v786[0];
      long long v794 = v786[1];
      uint64_t v795 = v787;
      if (v792 > 0)
      {
        *(void *)&long long v718 = v789;
        if (v789)
        {
          *(void *)&long long v717 = v788;
          LODWORD(v723) = *(unsigned __int8 *)(v790 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v716.i64[0] = v791 + 48;
          *(void *)&long long v715 = v791 + 64;
          *(void *)&long long v735 = v743 + 32;
          v731 = v895;
          v732.n128_u64[0] = (unint64_t)v897;
          v724.n128_u64[0] = v791;
          uint64_t v722 = *(void *)(v791 + 32);
          *(void *)&long long v730 = v893;
          v728 = v903;
          v727.n128_u64[0] = (unint64_t)v901;
          v726.n128_u64[0] = (unint64_t)v899;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v21 = 0;
          v719 = (long long *)(v743 + 64);
          long long v736 = xmmword_1B6E4F370;
          int64x2_t v725 = vdupq_n_s64(0x3F000000uLL);
          long long v734 = xmmword_1B6E87B90;
          long long v733 = xmmword_1B6E8B620;
          unint64_t k = 0;
          while (1)
          {
            v721 = v21;
            uint64_t v22 = (unsigned int *)(v717 + 48 * (void)v21);
            *(void *)&long long v742 = *v22;
            v737.n128_u64[0] = v22[1];
            uint64_t v23 = (uint64_t *)*((void *)v22 + 2);
            uint64_t v24 = *((void *)v22 + 3);
            uint64_t v26 = *((void *)v22 + 4);
            uint64_t v25 = *((void *)v22 + 5);
            unint64_t v27 = k;
            if (v723)
            {
              uint64_t v28 = *(os_unfair_lock_s **)(v25 + 376);
              swift_retain();
              os_unfair_lock_lock(v28);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v25 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v722);
            sub_1B62D7DE8(v716.i64[0], (uint64_t)v891, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v29 = v724.n128_u64[0];
            uint64_t v30 = *(void *)(v724.n128_u64[0] + 32);
            uint64_t v31 = *(void *)(*(void *)(*(void *)(*(void *)(v25 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            *(void *)(v29 + 48) = ecs_stack_allocator_allocate(v30, 48 * v31, 8);
            *(void *)(v29 + 56) = v31;
            uint64_t v32 = (void *)v715;
            *(void *)(v715 + 8) = 0;
            v32[2] = 0;
            *uint64_t v32 = 0;
            swift_release();
            *(void *)&long long v740 = sub_1B62C9024((uint64_t)&type metadata for KillShape, (uint64_t)&off_1F0FA8978, v23, v24, v26, v29);
            v720 = (char *)v25;
            uint64_t v33 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v23, v24, v26, v29);
            v739.n128_u64[0] = v33;
            if (v23)
            {
              uint64_t v35 = v744;
              unint64_t k = v27;
              if (v26)
              {
                uint64_t v36 = 0;
                v737.n128_u64[0] = v26;
                while (1)
                {
                  int v37 = *(unsigned __int8 *)(v740 + 2 * v36);
                  *(void *)&long long v742 = v36;
                  v745.n128_u64[0] = k;
                  if (!v37)
                  {
                    v894[0] = v736;
                    v894[1] = vdupq_n_s64(0x3F000000uLL);
                    long long v55 = v731;
                    *(_OWORD *)v731 = 0u;
                    *((_OWORD *)v55 + 1) = 0u;
                    *((_OWORD *)v55 + 2) = 0u;
                    *((_OWORD *)v55 + 3) = 0u;
                    v895[64] = 6;
                    *(double *)&long long v56 = MEMORY[0x1F4188790](v33, v34);
                    *(&v694 - 10) = (uint64_t)v894;
                    *((_DWORD *)&v694 - 18) = v738.n128_u32[0];
                    *((_OWORD *)&v694 - 4) = v56;
                    *((_OWORD *)&v694 - 3) = v57;
                    *((_OWORD *)&v694 - 2) = v58;
                    *((_OWORD *)&v694 - 1) = v59;
                    uint64_t v60 = *(void *)(v35 + 32);
                    ecs_stack_allocator_push_snapshot(v60);
                    uint64_t v61 = v743;
                    uint64_t v62 = sub_1B6355ED4(v743);
                    float32x4_t v63 = ecs_stack_allocator_allocate(v60, 16 * v62 + 64, 8);
                    *float32x4_t v63 = &type metadata for DebugInfoWireframePrimitive;
                    v63[1] = &off_1F0F974E8;
                    v63[2] = &type metadata for DebugInfoColor;
                    v63[3] = &off_1F0F63878;
                    v63[4] = &type metadata for WorldTransform;
                    v63[5] = &off_1F0F67720;
                    v63[6] = &type metadata for Beamed;
                    v63[7] = &off_1F0F9FB50;
                    unint64_t v64 = sub_1B6355ED4(v61);
                    v741.i64[0] = (uint64_t)&v694;
                    if (!v64)
                    {
                      long long v48 = &v694 - 12;
                      uint64_t v66 = 4;
                      goto LABEL_51;
                    }
                    if (v64 < 0x12)
                    {
                      long long v48 = &v694 - 12;
                      unint64_t v65 = 0;
                      goto LABEL_34;
                    }
                    unint64_t v65 = 0;
                    uint64_t v118 = 2 * (v64 - 1);
                    if (&v63[v118 + 8] < v63 + 8)
                    {
                      long long v48 = &v694 - 12;
LABEL_34:
                      uint64_t v66 = 4;
                      uint64_t v67 = v735;
                    }
                    else
                    {
                      uint64_t v67 = v735;
                      if (&v63[v118 + 9] < v63 + 9 || (v64 - 1) >> 60)
                      {
                        long long v48 = &v694 - 12;
                        uint64_t v66 = 4;
                        goto LABEL_35;
                      }
                      if ((unint64_t)(v63 + 8) < (unint64_t)v735 + 16 * v64
                        && (unint64_t)v735 < (unint64_t)&v63[2 * v64 + 8])
                      {
                        long long v48 = &v694 - 12;
                        unint64_t v65 = 0;
                        uint64_t v66 = 4;
                        goto LABEL_35;
                      }
                      unint64_t v65 = v64 & 0xFFFFFFFFFFFFFFFCLL;
                      uint64_t v66 = (v64 & 0xFFFFFFFFFFFFFFFCLL) + 4;
                      char v133 = v63 + 12;
                      unint64_t v134 = v64 & 0xFFFFFFFFFFFFFFFCLL;
                      uint64_t v135 = v719;
                      do
                      {
                        long long v137 = *(v135 - 2);
                        long long v136 = *(v135 - 1);
                        long long v139 = *v135;
                        long long v138 = v135[1];
                        v135 += 4;
                        *(v133 - 2) = v137;
                        *(v133 - 1) = v136;
                        *char v133 = v139;
                        v133[1] = v138;
                        v133 += 4;
                        v134 -= 4;
                      }
                      while (v134);
                      long long v48 = &v694 - 12;
                      if (v64 == v65)
                      {
LABEL_51:
                        uint64_t v99 = sub_1B6964AB4(0);
                        uint64_t v88 = *(void *)(v35 + 16);
                        uint64_t v89 = v88 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
                        unint64_t v100 = *(os_unfair_lock_s **)(v88 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
                        swift_retain();
                        os_unfair_lock_lock(v100);
                        swift_bridgeObjectRetain();
                        uint64_t v101 = sub_1B69E2E04((uint64_t)v63, v66, v99);
                        uint64_t v103 = v102;
                        swift_bridgeObjectRelease();
                        uint64_t v104 = sub_1B637FE60(v101);
                        if ((v105 & 1) != 0
                          || (unint64_t v106 = sub_1B63581E4(v103, v104), v97 = v106, (v106 & 0x100000000) != 0))
                        {
                          uint64_t v107 = sub_1B6A00108(v63, v66);
                          swift_bridgeObjectRetain();
                          int v97 = sub_1B637C7BC(v101, v103, v107, v99);
                          swift_release();
                          swift_bridgeObjectRelease();
                        }
                        goto LABEL_81;
                      }
                    }
LABEL_35:
                    unint64_t v68 = v64 - v65;
                    uint64_t v69 = (long long *)(v67 + 16 * v65);
                    do
                    {
                      long long v70 = *v69++;
                      *(_OWORD *)&v63[2 * v66++] = v70;
                      --v68;
                    }
                    while (v68);
                    goto LABEL_51;
                  }
                  if (v37 == 1)
                  {
                    v892[0] = v736;
                    v892[1] = v734;
                    uint64_t v38 = (_OWORD *)v730;
                    *(_OWORD *)long long v730 = 0u;
                    v38[1] = 0u;
                    _OWORD v38[2] = 0u;
                    v38[3] = 0u;
                    v893[64] = 6;
                    *(double *)&long long v39 = MEMORY[0x1F4188790](v33, v34);
                    *(&v694 - 10) = (uint64_t)v892;
                    *((_DWORD *)&v694 - 18) = v738.n128_u32[0];
                    *((_OWORD *)&v694 - 4) = v39;
                    *((_OWORD *)&v694 - 3) = v40;
                    *((_OWORD *)&v694 - 2) = v41;
                    *((_OWORD *)&v694 - 1) = v42;
                    uint64_t v43 = *(void *)(v35 + 32);
                    ecs_stack_allocator_push_snapshot(v43);
                    uint64_t v44 = v743;
                    uint64_t v45 = sub_1B6355ED4(v743);
                    uint64_t v46 = ecs_stack_allocator_allocate(v43, 16 * v45 + 64, 8);
                    *uint64_t v46 = &type metadata for DebugInfoWireframePrimitive;
                    v46[1] = &off_1F0F974E8;
                    _OWORD v46[2] = &type metadata for DebugInfoColor;
                    v46[3] = &off_1F0F63878;
                    v46[4] = &type metadata for WorldTransform;
                    v46[5] = &off_1F0F67720;
                    v46[6] = &type metadata for Beamed;
                    v46[7] = &off_1F0F9FB50;
                    unint64_t v47 = sub_1B6355ED4(v44);
                    v741.i64[0] = (uint64_t)&v694;
                    if (!v47)
                    {
                      long long v48 = &v694 - 12;
                      uint64_t v50 = 4;
                      goto LABEL_46;
                    }
                    if (v47 < 0x12)
                    {
                      long long v48 = &v694 - 12;
                      unint64_t v49 = 0;
                      goto LABEL_27;
                    }
                    unint64_t v49 = 0;
                    uint64_t v117 = 2 * (v47 - 1);
                    if (&v46[v117 + 8] < v46 + 8)
                    {
                      long long v48 = &v694 - 12;
LABEL_27:
                      uint64_t v50 = 4;
                      uint64_t v51 = v735;
                    }
                    else
                    {
                      uint64_t v51 = v735;
                      if (&v46[v117 + 9] < v46 + 9 || (v47 - 1) >> 60)
                      {
                        long long v48 = &v694 - 12;
                        uint64_t v50 = 4;
                        goto LABEL_28;
                      }
                      if ((unint64_t)(v46 + 8) < (unint64_t)v735 + 16 * v47
                        && (unint64_t)v735 < (unint64_t)&v46[2 * v47 + 8])
                      {
                        long long v48 = &v694 - 12;
                        unint64_t v49 = 0;
                        uint64_t v50 = 4;
                        goto LABEL_28;
                      }
                      unint64_t v49 = v47 & 0xFFFFFFFFFFFFFFFCLL;
                      uint64_t v50 = (v47 & 0xFFFFFFFFFFFFFFFCLL) + 4;
                      uint64_t v126 = v46 + 12;
                      unint64_t v127 = v47 & 0xFFFFFFFFFFFFFFFCLL;
                      char v128 = v719;
                      do
                      {
                        long long v130 = *(v128 - 2);
                        long long v129 = *(v128 - 1);
                        long long v132 = *v128;
                        long long v131 = v128[1];
                        v128 += 4;
                        *(v126 - 2) = v130;
                        *(v126 - 1) = v129;
                        *uint64_t v126 = v132;
                        v126[1] = v131;
                        v126 += 4;
                        v127 -= 4;
                      }
                      while (v127);
                      long long v48 = &v694 - 12;
                      if (v47 == v49)
                      {
LABEL_46:
                        uint64_t v87 = sub_1B6964AB4(0);
                        uint64_t v88 = *(void *)(v35 + 16);
                        uint64_t v89 = v88 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
                        float32x4_t v90 = *(os_unfair_lock_s **)(v88 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
                        swift_retain();
                        os_unfair_lock_lock(v90);
                        swift_bridgeObjectRetain();
                        uint64_t v91 = sub_1B69E2E04((uint64_t)v46, v50, v87);
                        uint64_t v93 = v92;
                        swift_bridgeObjectRelease();
                        uint64_t v94 = sub_1B637FE60(v91);
                        if ((v95 & 1) != 0 || (unint64_t v96 = sub_1B63581E4(v93, v94), v97 = v96, (v96 & 0x100000000) != 0))
                        {
                          uint64_t v98 = sub_1B6A00108(v46, v50);
                          swift_bridgeObjectRetain();
                          int v97 = sub_1B637C7BC(v91, v93, v98, v87);
                          swift_release();
                          swift_bridgeObjectRelease();
                        }
                        goto LABEL_81;
                      }
                    }
LABEL_28:
                    unint64_t v52 = v47 - v49;
                    int v53 = (long long *)(v51 + 16 * v49);
                    do
                    {
                      long long v54 = *v53++;
                      *(_OWORD *)&v46[2 * v50++] = v54;
                      --v52;
                    }
                    while (v52);
                    goto LABEL_46;
                  }
                  long long v896 = v733;
                  unint64_t v71 = (_OWORD *)v732.n128_u64[0];
                  *(_OWORD *)v732.n128_u64[0] = 0u;
                  v71[1] = 0u;
                  _OWORD v71[2] = 0u;
                  v71[3] = 0u;
                  int v71[4] = 0u;
                  v897[80] = 3;
                  *(double *)&long long v72 = MEMORY[0x1F4188790](v33, v34);
                  *(&v694 - 10) = (uint64_t)&v896;
                  *((_DWORD *)&v694 - 18) = v738.n128_u32[0];
                  *((_OWORD *)&v694 - 4) = v72;
                  *((_OWORD *)&v694 - 3) = v73;
                  *((_OWORD *)&v694 - 2) = v74;
                  *((_OWORD *)&v694 - 1) = v75;
                  uint64_t v76 = *(void *)(v35 + 32);
                  ecs_stack_allocator_push_snapshot(v76);
                  uint64_t v77 = v743;
                  uint64_t v78 = sub_1B6355ED4(v743);
                  uint64_t v79 = ecs_stack_allocator_allocate(v76, 16 * v78 + 64, 8);
                  *uint64_t v79 = &type metadata for DebugInfoWireframePrimitive;
                  v79[1] = &off_1F0F974E8;
                  _OWORD v79[2] = &type metadata for DebugInfoColor;
                  v79[3] = &off_1F0F63878;
                  v79[4] = &type metadata for WorldTransform;
                  v79[5] = &off_1F0F67720;
                  v79[6] = &type metadata for Beamed;
                  v79[7] = &off_1F0F9FB50;
                  unint64_t v80 = sub_1B6355ED4(v77);
                  v741.i64[0] = (uint64_t)&v694;
                  if (v80) {
                    break;
                  }
                  long long v48 = &v694 - 12;
                  uint64_t v82 = 4;
LABEL_56:
                  uint64_t v108 = sub_1B6964AB4(0);
                  uint64_t v88 = *(void *)(v35 + 16);
                  uint64_t v89 = v88 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
                  unint64_t v109 = *(os_unfair_lock_s **)(v88 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
                  swift_retain();
                  os_unfair_lock_lock(v109);
                  swift_bridgeObjectRetain();
                  uint64_t v110 = sub_1B69E2E04((uint64_t)v79, v82, v108);
                  uint64_t v112 = v111;
                  swift_bridgeObjectRelease();
                  uint64_t v113 = *(void **)(v88 + 72);
                  uint64_t v114 = v113[2];
                  if (v114)
                  {
                    if (*(void *)(v113[4] + 144) == v110)
                    {
                      uint64_t v115 = 0;
                      goto LABEL_59;
                    }
                    if (v114 != 1)
                    {
                      if (*(void *)(v113[5] + 144) == v110)
                      {
                        uint64_t v115 = 1;
                        goto LABEL_59;
                      }
                      uint64_t v147 = v114 - 2;
                      if (v147)
                      {
                        uint64_t v148 = 0;
                        float32x4_t v149 = v113 + 6;
                        while (*(void *)(v149[v148] + 144) != v110)
                        {
                          if (v147 == ++v148) {
                            goto LABEL_80;
                          }
                        }
                        uint64_t v115 = v148 + 2;
LABEL_59:
                        unint64_t v116 = sub_1B63581E4(v112, v115);
                        int v97 = v116;
                        if ((v116 & 0x100000000) == 0) {
                          goto LABEL_81;
                        }
                      }
                    }
                  }
LABEL_80:
                  uint64_t v120 = sub_1B6A00108(v79, v82);
                  swift_bridgeObjectRetain();
                  int v97 = sub_1B637C7BC(v110, v112, v120, v108);
                  swift_release();
                  swift_bridgeObjectRelease();
LABEL_81:
                  uint64_t v121 = *(void *)(*(void *)(v88 + 80) + 8 * v97 + 32);
                  uint64_t v122 = *(void *)(v89 + 24);
                  swift_retain();
                  os_unfair_lock_unlock((os_unfair_lock_t)v122);
                  swift_release();
                  v815[0].i8[0] = 1;
                  uint64_t v35 = v744;
                  uint64_t v123 = (uint64_t)v48;
                  unint64_t k = v745.n128_u64[0];
                  sub_1B6B2866C(v121, 1, 1, 0x100000000uLL, v744, (uint64_t)sub_1B6C1F994, v123);
                  if (k) {
                    goto LABEL_465;
                  }
                  unint64_t v124 = v737.n128_u64[0];
                  uint64_t v125 = v742;
                  swift_bridgeObjectRelease();
                  swift_release();
                  uint64_t v33 = ecs_stack_allocator_pop_snapshot(*(void *)(v35 + 32));
                  uint64_t v36 = v125 + 1;
                  if (v36 == v124) {
                    goto LABEL_111;
                  }
                }
                if (v80 >= 0x12)
                {
                  unint64_t v81 = 0;
                  uint64_t v119 = 2 * (v80 - 1);
                  if (&v79[v119 + 8] >= v79 + 8)
                  {
                    uint64_t v83 = v735;
                    if (&v79[v119 + 9] < v79 + 9 || (v80 - 1) >> 60)
                    {
                      long long v48 = &v694 - 12;
                      uint64_t v82 = 4;
                    }
                    else if ((unint64_t)(v79 + 8) >= (unint64_t)v735 + 16 * v80 {
                           || (unint64_t)v735 >= (unint64_t)&v79[2 * v80 + 8])
                    }
                    {
                      unint64_t v81 = v80 & 0xFFFFFFFFFFFFFFFCLL;
                      uint64_t v82 = (v80 & 0xFFFFFFFFFFFFFFFCLL) + 4;
                      uint64_t v140 = v79 + 12;
                      unint64_t v141 = v80 & 0xFFFFFFFFFFFFFFFCLL;
                      uint64_t v142 = v719;
                      do
                      {
                        long long v144 = *(v142 - 2);
                        long long v143 = *(v142 - 1);
                        long long v146 = *v142;
                        long long v145 = v142[1];
                        v142 += 4;
                        *(v140 - 2) = v144;
                        *(v140 - 1) = v143;
                        *uint64_t v140 = v146;
                        v140[1] = v145;
                        v140 += 4;
                        v141 -= 4;
                      }
                      while (v141);
                      long long v48 = &v694 - 12;
                      if (v80 == v81) {
                        goto LABEL_56;
                      }
                    }
                    else
                    {
                      long long v48 = &v694 - 12;
                      unint64_t v81 = 0;
                      uint64_t v82 = 4;
                    }
                    goto LABEL_42;
                  }
                  long long v48 = &v694 - 12;
                }
                else
                {
                  long long v48 = &v694 - 12;
                  unint64_t v81 = 0;
                }
                uint64_t v82 = 4;
                uint64_t v83 = v735;
LABEL_42:
                unint64_t v84 = v80 - v81;
                BOOL v85 = (long long *)(v83 + 16 * v81);
                do
                {
                  long long v86 = *v85++;
                  *(_OWORD *)&v79[2 * v82++] = v86;
                  --v84;
                }
                while (v84);
                goto LABEL_56;
              }
              goto LABEL_111;
            }
            uint64_t v150 = v742;
            uint64_t v35 = v744;
            unint64_t k = v27;
            if (v742 != v737.n128_u32[0]) {
              break;
            }
LABEL_111:
            v796[0] = v793;
            v796[1] = v794;
            uint64_t v797 = v795;
            sub_1B6345178(v724.n128_u64[0], (unsigned __int16 **)v796, (uint64_t)v891);
            uint64_t v151 = v720;
            sub_1B634507C(v720);
            ecs_stack_allocator_pop_snapshot(v722);
            if (v723)
            {
              os_unfair_lock_unlock(*((os_unfair_lock_t *)v151 + 43));
              os_unfair_lock_unlock(*((os_unfair_lock_t *)v151 + 47));
            }
            swift_release();
            uint64_t v21 = (void *)((char *)v721 + 1);
            if ((void *)((char *)v721 + 1) == (void *)v718)
            {
              sub_1B62CA064((uint64_t)v746);
              sub_1B632F1C4(v748, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
              sub_1B632F1C4(v748, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
              goto LABEL_192;
            }
          }
          while (1)
          {
            int v156 = *(unsigned __int8 *)(v740 + 2 * v150);
            *(void *)&long long v742 = v150;
            unint64_t v157 = k;
            if (!v156)
            {
              v900[0] = v736;
              v900[1] = v725;
              uint64_t v175 = (_OWORD *)v727.n128_u64[0];
              *(_OWORD *)v727.n128_u64[0] = 0u;
              v175[1] = 0u;
              v175[2] = 0u;
              v175[3] = 0u;
              v901[64] = 6;
              *(double *)&long long v176 = MEMORY[0x1F4188790](v33, v34);
              *(&v694 - 10) = (uint64_t)v900;
              *((_DWORD *)&v694 - 18) = v738.n128_u32[0];
              *((_OWORD *)&v694 - 4) = v176;
              *((_OWORD *)&v694 - 3) = v177;
              *((_OWORD *)&v694 - 2) = v178;
              *((_OWORD *)&v694 - 1) = v179;
              uint64_t v180 = *(void *)(v35 + 32);
              ecs_stack_allocator_push_snapshot(v180);
              uint64_t v181 = v743;
              uint64_t v182 = sub_1B6355ED4(v743);
              float32x4_t v183 = ecs_stack_allocator_allocate(v180, 16 * v182 + 64, 8);
              *float32x4_t v183 = &type metadata for DebugInfoWireframePrimitive;
              v183[1] = &off_1F0F974E8;
              v183[2] = &type metadata for DebugInfoColor;
              v183[3] = &off_1F0F63878;
              v183[4] = &type metadata for WorldTransform;
              v183[5] = &off_1F0F67720;
              v183[6] = &type metadata for Beamed;
              v183[7] = &off_1F0F9FB50;
              unint64_t v184 = sub_1B6355ED4(v181);
              v741.i64[0] = (uint64_t)&v694;
              v745.n128_u64[0] = v157;
              if (!v184)
              {
                uint64_t v168 = &v694 - 12;
                uint64_t v186 = 4;
                goto LABEL_144;
              }
              if (v184 < 0x12)
              {
                uint64_t v168 = &v694 - 12;
                unint64_t v185 = 0;
                goto LABEL_128;
              }
              unint64_t v185 = 0;
              uint64_t v241 = 2 * (v184 - 1);
              if (&v183[v241 + 8] < v183 + 8)
              {
                uint64_t v168 = &v694 - 12;
LABEL_128:
                uint64_t v186 = 4;
                uint64_t v187 = v735;
              }
              else
              {
                uint64_t v187 = v735;
                if (&v183[v241 + 9] < v183 + 9 || (v184 - 1) >> 60)
                {
                  uint64_t v168 = &v694 - 12;
                  uint64_t v186 = 4;
                  goto LABEL_129;
                }
                if ((unint64_t)(v183 + 8) < (unint64_t)v735 + 16 * v184
                  && (unint64_t)v735 < (unint64_t)&v183[2 * v184 + 8])
                {
                  uint64_t v168 = &v694 - 12;
                  unint64_t v185 = 0;
                  uint64_t v186 = 4;
                  goto LABEL_129;
                }
                unint64_t v185 = v184 & 0xFFFFFFFFFFFFFFFCLL;
                uint64_t v186 = (v184 & 0xFFFFFFFFFFFFFFFCLL) + 4;
                long long v250 = v183 + 12;
                unint64_t v251 = v184 & 0xFFFFFFFFFFFFFFFCLL;
                char v252 = v719;
                do
                {
                  long long v254 = *(v252 - 2);
                  long long v253 = *(v252 - 1);
                  long long v256 = *v252;
                  long long v255 = v252[1];
                  v252 += 4;
                  *(v250 - 2) = v254;
                  *(v250 - 1) = v253;
                  *long long v250 = v256;
                  v250[1] = v255;
                  v250 += 4;
                  v251 -= 4;
                }
                while (v251);
                uint64_t v168 = &v694 - 12;
                if (v184 == v185)
                {
LABEL_144:
                  uint64_t v217 = sub_1B6964AB4(0);
                  uint64_t v208 = *(void *)(v35 + 16);
                  uint64_t v209 = v208 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
                  unint64_t v218 = *(os_unfair_lock_s **)(v208 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
                  swift_retain();
                  os_unfair_lock_lock(v218);
                  swift_bridgeObjectRetain();
                  uint64_t v219 = sub_1B69E2E04((uint64_t)v183, v186, v217);
                  uint64_t v221 = v220;
                  swift_bridgeObjectRelease();
                  uint64_t v222 = sub_1B637FE60(v219);
                  if ((v223 & 1) != 0 || (v224 = sub_1B63581E4(v221, v222), int v153 = v224, (v224 & 0x100000000) != 0))
                  {
                    uint64_t v225 = sub_1B6A00108(v183, v186);
                    swift_bridgeObjectRetain();
                    int v153 = sub_1B637C7BC(v219, v221, v225, v217);
                    swift_release();
                    swift_bridgeObjectRelease();
                  }
LABEL_114:
                  uint64_t v154 = *(void *)(*(void *)(v208 + 80) + 8 * v153 + 32);
                  uint64_t v122 = *(void *)(v209 + 24);
                  swift_retain();
                  os_unfair_lock_unlock((os_unfair_lock_t)v122);
                  swift_release();
                  v815[0].i8[0] = 1;
                  uint64_t v35 = v744;
                  uint64_t v155 = (uint64_t)v168;
                  unint64_t k = v745.n128_u64[0];
                  sub_1B6B2866C(v154, 1, 1, 0x100000000uLL, v744, (uint64_t)sub_1B6C1F994, v155);
                  if (k)
                  {
LABEL_465:
                    swift_bridgeObjectRelease();
                    swift_release();
                    ecs_stack_allocator_pop_snapshot(*(void *)(v35 + 32));
                    __break(1u);
                    while (1)
                    {
LABEL_466:
                      swift_bridgeObjectRelease();
                      swift_release();
                      ecs_stack_allocator_pop_snapshot(*(void *)(v122 + 32));
                      __break(1u);
                    }
                  }
                  goto LABEL_115;
                }
              }
LABEL_129:
              unint64_t v188 = v184 - v185;
              uint64_t v189 = (long long *)(v187 + 16 * v185);
              do
              {
                long long v190 = *v189++;
                *(_OWORD *)&v183[2 * v186++] = v190;
                --v188;
              }
              while (v188);
              goto LABEL_144;
            }
            if (v156 == 1)
            {
              v898[0] = v736;
              v898[1] = v734;
              uint64_t v158 = (_OWORD *)v726.n128_u64[0];
              *(_OWORD *)v726.n128_u64[0] = 0u;
              v158[1] = 0u;
              _OWORD v158[2] = 0u;
              v158[3] = 0u;
              v899[64] = 6;
              *(double *)&long long v159 = MEMORY[0x1F4188790](v33, v34);
              *(&v694 - 10) = (uint64_t)v898;
              *((_DWORD *)&v694 - 18) = v738.n128_u32[0];
              *((_OWORD *)&v694 - 4) = v159;
              *((_OWORD *)&v694 - 3) = v160;
              *((_OWORD *)&v694 - 2) = v161;
              *((_OWORD *)&v694 - 1) = v162;
              uint64_t v163 = *(void *)(v35 + 32);
              ecs_stack_allocator_push_snapshot(v163);
              uint64_t v164 = v743;
              uint64_t v165 = sub_1B6355ED4(v743);
              uint64_t v166 = ecs_stack_allocator_allocate(v163, 16 * v165 + 64, 8);
              *uint64_t v166 = &type metadata for DebugInfoWireframePrimitive;
              v166[1] = &off_1F0F974E8;
              v166[2] = &type metadata for DebugInfoColor;
              v166[3] = &off_1F0F63878;
              v166[4] = &type metadata for WorldTransform;
              v166[5] = &off_1F0F67720;
              v166[6] = &type metadata for Beamed;
              v166[7] = &off_1F0F9FB50;
              unint64_t v167 = sub_1B6355ED4(v164);
              v741.i64[0] = (uint64_t)&v694;
              v745.n128_u64[0] = v157;
              if (!v167)
              {
                uint64_t v168 = &v694 - 12;
                uint64_t v170 = 4;
                goto LABEL_140;
              }
              if (v167 < 0x12)
              {
                uint64_t v168 = &v694 - 12;
                unint64_t v169 = 0;
                goto LABEL_121;
              }
              unint64_t v169 = 0;
              uint64_t v240 = 2 * (v167 - 1);
              if (&v166[v240 + 8] < v166 + 8)
              {
                uint64_t v168 = &v694 - 12;
LABEL_121:
                uint64_t v170 = 4;
                uint64_t v171 = v735;
              }
              else
              {
                uint64_t v171 = v735;
                if (&v166[v240 + 9] < v166 + 9 || (v167 - 1) >> 60)
                {
                  uint64_t v168 = &v694 - 12;
                  uint64_t v170 = 4;
                  goto LABEL_122;
                }
                if ((unint64_t)(v166 + 8) < (unint64_t)v735 + 16 * v167
                  && (unint64_t)v735 < (unint64_t)&v166[2 * v167 + 8])
                {
                  uint64_t v168 = &v694 - 12;
                  unint64_t v169 = 0;
                  uint64_t v170 = 4;
                  goto LABEL_122;
                }
                unint64_t v169 = v167 & 0xFFFFFFFFFFFFFFFCLL;
                uint64_t v170 = (v167 & 0xFFFFFFFFFFFFFFFCLL) + 4;
                uint64_t v243 = v166 + 12;
                unint64_t v244 = v167 & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v245 = v719;
                do
                {
                  long long v247 = *(v245 - 2);
                  long long v246 = *(v245 - 1);
                  long long v249 = *v245;
                  long long v248 = v245[1];
                  v245 += 4;
                  *(v243 - 2) = v247;
                  *(v243 - 1) = v246;
                  *uint64_t v243 = v249;
                  v243[1] = v248;
                  v243 += 4;
                  v244 -= 4;
                }
                while (v244);
                uint64_t v168 = &v694 - 12;
                if (v167 == v169)
                {
LABEL_140:
                  uint64_t v207 = sub_1B6964AB4(0);
                  uint64_t v208 = *(void *)(v35 + 16);
                  uint64_t v209 = v208 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
                  float32x4_t v210 = *(os_unfair_lock_s **)(v208 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
                  swift_retain();
                  os_unfair_lock_lock(v210);
                  swift_bridgeObjectRetain();
                  uint64_t v211 = sub_1B69E2E04((uint64_t)v166, v170, v207);
                  uint64_t v213 = v212;
                  swift_bridgeObjectRelease();
                  uint64_t v214 = sub_1B637FE60(v211);
                  if ((v215 & 1) != 0 || (v216 = sub_1B63581E4(v213, v214), int v153 = v216, (v216 & 0x100000000) != 0))
                  {
                    uint64_t v152 = sub_1B6A00108(v166, v170);
                    swift_bridgeObjectRetain();
                    int v153 = sub_1B637C7BC(v211, v213, v152, v207);
                    swift_release();
                    swift_bridgeObjectRelease();
                  }
                  goto LABEL_114;
                }
              }
LABEL_122:
              unint64_t v172 = v167 - v169;
              uint64_t v173 = (long long *)(v171 + 16 * v169);
              do
              {
                long long v174 = *v173++;
                *(_OWORD *)&v166[2 * v170++] = v174;
                --v172;
              }
              while (v172);
              goto LABEL_140;
            }
            long long v902 = v733;
            uint64_t v191 = v728;
            *(_OWORD *)v728 = 0u;
            v191[1] = 0u;
            _OWORD v191[2] = 0u;
            v191[3] = 0u;
            v191[4] = 0u;
            v903[80] = 3;
            *(double *)&long long v192 = MEMORY[0x1F4188790](v33, v34);
            *(&v694 - 10) = (uint64_t)&v902;
            *((_DWORD *)&v694 - 18) = v738.n128_u32[0];
            *((_OWORD *)&v694 - 4) = v192;
            *((_OWORD *)&v694 - 3) = v193;
            *((_OWORD *)&v694 - 2) = v194;
            *((_OWORD *)&v694 - 1) = v195;
            uint64_t v196 = *(void *)(v35 + 32);
            ecs_stack_allocator_push_snapshot(v196);
            uint64_t v197 = v743;
            uint64_t v198 = sub_1B6355ED4(v743);
            uint64_t v199 = ecs_stack_allocator_allocate(v196, 16 * v198 + 64, 8);
            *uint64_t v199 = &type metadata for DebugInfoWireframePrimitive;
            v199[1] = &off_1F0F974E8;
            _OWORD v199[2] = &type metadata for DebugInfoColor;
            v199[3] = &off_1F0F63878;
            v199[4] = &type metadata for WorldTransform;
            v199[5] = &off_1F0F67720;
            v199[6] = &type metadata for Beamed;
            v199[7] = &off_1F0F9FB50;
            unint64_t v200 = sub_1B6355ED4(v197);
            v741.i64[0] = (uint64_t)&v694;
            *(void *)&long long v729 = &v694 - 12;
            if (v200) {
              break;
            }
            uint64_t v202 = 4;
            unint64_t k = v157;
LABEL_149:
            uint64_t v226 = sub_1B6964AB4(0);
            uint64_t v227 = *(void *)(v35 + 16);
            uint64_t v228 = v227 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
            simd_float4 v229 = *(os_unfair_lock_s **)(v227 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
            swift_retain();
            os_unfair_lock_lock(v229);
            swift_bridgeObjectRetain();
            uint64_t v230 = sub_1B69E2E04((uint64_t)v199, v202, v226);
            uint64_t v232 = v231;
            swift_bridgeObjectRelease();
            uint64_t v233 = sub_1B637FE60(v230);
            if ((v234 & 1) != 0 || (unint64_t v235 = sub_1B63581E4(v232, v233), v236 = v235, (v235 & 0x100000000) != 0))
            {
              uint64_t v237 = sub_1B6A00108(v199, v202);
              swift_bridgeObjectRetain();
              int v236 = sub_1B637C7BC(v230, v232, v237, v226);
              swift_release();
              swift_bridgeObjectRelease();
            }
            uint64_t v238 = *(void *)(*(void *)(v227 + 80) + 8 * v236 + 32);
            uint64_t v239 = *(os_unfair_lock_s **)(v228 + 24);
            swift_retain();
            os_unfair_lock_unlock(v239);
            swift_release();
            v815[0].i8[0] = 1;
            uint64_t v35 = v744;
            sub_1B6B2866C(v238, 1, 1, 0x100000000uLL, v744, (uint64_t)sub_1B6C1F994, v729);
LABEL_115:
            uint64_t v150 = v742 + 1;
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v33 = ecs_stack_allocator_pop_snapshot(*(void *)(v35 + 32));
            if (v150 == v737.n128_u64[0]) {
              goto LABEL_111;
            }
          }
          if (v200 >= 0x12)
          {
            unint64_t v201 = 0;
            uint64_t v242 = 2 * (v200 - 1);
            if (&v199[v242 + 8] >= v199 + 8)
            {
              uint64_t v203 = v735;
              if (&v199[v242 + 9] < v199 + 9 || (v200 - 1) >> 60)
              {
                unint64_t k = v157;
                uint64_t v202 = 4;
              }
              else if ((unint64_t)(v199 + 8) >= (unint64_t)v735 + 16 * v200 {
                     || (unint64_t)v735 >= (unint64_t)&v199[2 * v200 + 8])
              }
              {
                unint64_t v201 = v200 & 0xFFFFFFFFFFFFFFFCLL;
                uint64_t v202 = (v200 & 0xFFFFFFFFFFFFFFFCLL) + 4;
                double v257 = v199 + 12;
                unint64_t v258 = v200 & 0xFFFFFFFFFFFFFFFCLL;
                uint64_t v259 = v719;
                do
                {
                  long long v261 = *(v259 - 2);
                  long long v260 = *(v259 - 1);
                  long long v263 = *v259;
                  long long v262 = v259[1];
                  v259 += 4;
                  *(v257 - 2) = v261;
                  *(v257 - 1) = v260;
                  *double v257 = v263;
                  v257[1] = v262;
                  v257 += 4;
                  v258 -= 4;
                }
                while (v258);
                unint64_t k = v157;
                if (v200 == v201) {
                  goto LABEL_149;
                }
              }
              else
              {
                unint64_t k = v157;
                unint64_t v201 = 0;
                uint64_t v202 = 4;
              }
              goto LABEL_136;
            }
            unint64_t k = v157;
          }
          else
          {
            unint64_t k = v157;
            unint64_t v201 = 0;
          }
          uint64_t v202 = 4;
          uint64_t v203 = v735;
LABEL_136:
          unint64_t v204 = v200 - v201;
          BOOL v205 = (long long *)(v203 + 16 * v201);
          do
          {
            long long v206 = *v205++;
            *(_OWORD *)&v199[2 * v202++] = v206;
            --v204;
          }
          while (v204);
          goto LABEL_149;
        }
      }
      sub_1B62CA064((uint64_t)v746);
      sub_1B632F1C4(v748, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      sub_1B62CA064((uint64_t)v746);
    }
LABEL_192:
    uint64_t v3 = v702;
    int v20 = v695;
    int v19 = v714;
  }
  if (!v19) {
    goto LABEL_388;
  }
  unint64_t v264 = k;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v885 = qword_1EB997A18;
  int v886 = 0;
  char v887 = 2;
  char v889 = 2;
  uint64_t v888 = 0;
  uint64_t v890 = 0;
  swift_retain();
  sub_1B67825A8(1, 1, (uint64_t)v749);
  swift_release();
  v806[0] = v749[0];
  v806[1] = v749[1];
  uint64_t v807 = v750;
  sub_1B62C9DA8(v3, (uint64_t)v806, 0x200000000, v751);
  sub_1B62D7DE8((uint64_t)v751, (uint64_t)v776, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v776[0])
  {
    long long v783 = v776[0];
    long long v784 = v776[1];
    uint64_t v785 = v777;
    if (v782 > 0)
    {
      v707 = v779;
      if (v779)
      {
        uint64_t v706 = v778;
        LODWORD(v722) = *(unsigned __int8 *)(v780 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v704 = v781 + 8;
        v705 = v781 + 6;
        *(void *)&long long v733 = v863;
        uint64_t v265 = v743;
        *(void *)&long long v736 = v743 + 32;
        v711 = v858;
        v712 = v866;
        v720 = (char *)v781[4];
        v721 = v781;
        v709 = v851;
        v710 = v856;
        v708 = v853;
        v728 = v881;
        v700 = v876;
        v701 = v884;
        v698 = v869;
        v699 = v874;
        v697 = v871;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v266 = 0;
        v713 = (long long *)(v265 + 64);
        long long v718 = xmmword_1B6E8B620;
        long long v730 = xmmword_1B6E4F370;
        long long v717 = xmmword_1B6E87B90;
        long long v729 = xmmword_1B6EB4110;
        int64x2_t v716 = vdupq_n_s64(0x3F00000000000000uLL);
        long long v715 = xmmword_1B6EB4130;
        long long v714 = xmmword_1B6EB4120;
        long long v735 = xmmword_1B6E4F2E0;
        long long v734 = xmmword_1B6EB4100;
        unint64_t k = v264;
        while (1)
        {
          uint64_t v267 = (unsigned int *)(v706 + 48 * (void)v266);
          uint64_t v268 = *v267;
          v739.n128_u64[0] = v267[1];
          uint64_t v269 = (uint64_t *)*((void *)v267 + 2);
          uint64_t v270 = *((void *)v267 + 3);
          int v271 = (char *)*((void *)v267 + 5);
          v737.n128_u64[0] = *((void *)v267 + 4);
          v731 = v271;
          v719 = v266;
          unint64_t v272 = k;
          if (v722)
          {
            unint64_t v273 = (os_unfair_lock_s *)*((void *)v731 + 47);
            swift_retain();
            int v271 = v731;
            os_unfair_lock_lock(v273);
            os_unfair_lock_lock(*((os_unfair_lock_t *)v271 + 43));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot((uint64_t)v720);
          sub_1B62D7DE8((uint64_t)v705, (uint64_t)v848, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v274 = v721;
          uint64_t v275 = v721[4];
          uint64_t v276 = *(void *)(*(void *)(*(void *)(*((void *)v271 + 5) + 16) + 32) + 16) + 1;
          swift_retain();
          v274[6] = ecs_stack_allocator_allocate(v275, 48 * v276, 8);
          v274[7] = v276;
          int v277 = v704;
          v704[1] = 0;
          v277[2] = 0;
          *int v277 = 0;
          swift_release();
          uint64_t v278 = v737.n128_u64[0];
          *(void *)&long long v742 = sub_1B62C9024((uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, v269, v270, v737.n128_i64[0], (uint64_t)v274);
          uint64_t v279 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v269, v270, v278, (uint64_t)v274);
          v741.i64[0] = v279;
          if (v269)
          {
            uint64_t v281 = v744;
            unint64_t k = v272;
            if (v278)
            {
              unint64_t v282 = 0;
              while (1)
              {
                long long v287 = (unsigned int *)(v742 + 224 * v282);
                unint64_t v288 = v741.i64[0] + (v282 << 6);
                uint64_t v289 = *v287;
                if (*((unsigned char *)v287 + 4) == 1)
                {
                  switch(*v287)
                  {
                    case 1u:
                      unint64_t v367 = k;
                      __n128 v368 = *(__n128 *)v288;
                      int64x2_t v725 = *(int64x2_t *)(v288 + 16);
                      __n128 v726 = v368;
                      __n128 v369 = *(__n128 *)(v288 + 32);
                      long long v723 = *(_OWORD *)(v288 + 48);
                      __n128 v724 = v369;
                      uint64_t v370 = sub_1B67ADC80(255, 255, 255);
                      long long v852 = v718;
                      uint64_t v371 = v708;
                      _OWORD *v708 = 0u;
                      v371[1] = 0u;
                      v371[2] = 0u;
                      v371[3] = 0u;
                      v371[4] = 0u;
                      v853[80] = 3;
                      MEMORY[0x1F4188790](v370, v372);
                      *(&v694 - 10) = (uint64_t)&v852;
                      *((_DWORD *)&v694 - 18) = v373;
                      __n128 v374 = (__n128)v725;
                      *((__n128 *)&v694 - 4) = v726;
                      *((__n128 *)&v694 - 3) = v374;
                      long long v375 = v723;
                      *((__n128 *)&v694 - 2) = v724;
                      *((_OWORD *)&v694 - 1) = v375;
                      uint64_t v376 = *(void *)(v281 + 32);
                      ecs_stack_allocator_push_snapshot(v376);
                      uint64_t v377 = v743;
                      uint64_t v378 = sub_1B6355ED4(v743);
                      long long v379 = ecs_stack_allocator_allocate(v376, 16 * v378 + 64, 8);
                      *long long v379 = &type metadata for DebugInfoWireframePrimitive;
                      v379[1] = &off_1F0F974E8;
                      v379[2] = &type metadata for DebugInfoColor;
                      v379[3] = &off_1F0F63878;
                      v379[4] = &type metadata for WorldTransform;
                      v379[5] = &off_1F0F67720;
                      v379[6] = &type metadata for Beamed;
                      v379[7] = &off_1F0F9FB50;
                      unint64_t v380 = sub_1B6355ED4(v377);
                      v745.n128_u64[0] = v282;
                      v739.n128_u64[0] = (unint64_t)&v694;
                      v738.n128_u64[0] = (unint64_t)(&v694 - 12);
                      if (!v380)
                      {
                        uint64_t v385 = 4;
                        unint64_t k = v367;
                        goto LABEL_296;
                      }
                      if (v380 < 0x12) {
                        goto LABEL_244;
                      }
                      unint64_t v381 = 0;
                      uint64_t v402 = 2 * (v380 - 1);
                      if (&v379[v402 + 8] < v379 + 8 || &v379[v402 + 9] < v379 + 9 || (v380 - 1) >> 60)
                      {
                        unint64_t k = v367;
                      }
                      else
                      {
                        if ((unint64_t)(v379 + 8) >= (unint64_t)v736 + 16 * v380
                          || (unint64_t)v736 >= (unint64_t)&v379[2 * v380 + 8])
                        {
                          unint64_t v381 = v380 & 0xFFFFFFFFFFFFFFFCLL;
                          uint64_t v385 = (v380 & 0xFFFFFFFFFFFFFFFCLL) + 4;
                          uint64_t v403 = v379 + 12;
                          unint64_t v404 = v380 & 0xFFFFFFFFFFFFFFFCLL;
                          uint64_t v405 = v713;
                          do
                          {
                            long long v407 = *(v405 - 2);
                            long long v406 = *(v405 - 1);
                            long long v409 = *v405;
                            long long v408 = v405[1];
                            v405 += 4;
                            *(v403 - 2) = v407;
                            *(v403 - 1) = v406;
                            *uint64_t v403 = v409;
                            v403[1] = v408;
                            v403 += 4;
                            v404 -= 4;
                          }
                          while (v404);
                          unint64_t k = v367;
                          if (v380 == v381)
                          {
LABEL_296:
                            uint64_t v438 = sub_1B6964AB4(0);
                            uint64_t v414 = *(void *)(v281 + 16);
                            uint64_t v415 = v414 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
                            uint64_t v439 = *(os_unfair_lock_s **)(v414 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
                            swift_retain();
                            os_unfair_lock_lock(v439);
                            swift_bridgeObjectRetain();
                            uint64_t v440 = sub_1B69E2E04((uint64_t)v379, v385, v438);
                            uint64_t v442 = v441;
                            swift_bridgeObjectRelease();
                            uint64_t v443 = sub_1B637FE60(v440);
                            if ((v444 & 1) != 0
                              || (v445 = sub_1B63581E4(v442, v443), int v284 = v445, (v445 & 0x100000000) != 0))
                            {
                              uint64_t v446 = sub_1B6A00108(v379, v385);
                              swift_bridgeObjectRetain();
                              int v284 = sub_1B637C7BC(v440, v442, v446, v438);
                              swift_release();
                              swift_bridgeObjectRelease();
                            }
                            goto LABEL_208;
                          }
LABEL_294:
                          unint64_t v435 = v380 - v381;
                          uint64_t v436 = (long long *)(v736 + 16 * v381);
                          do
                          {
                            long long v437 = *v436++;
                            *(_OWORD *)&v379[2 * v385++] = v437;
                            --v435;
                          }
                          while (v435);
                          goto LABEL_296;
                        }
LABEL_244:
                        unint64_t k = v367;
                        unint64_t v381 = 0;
                      }
                      uint64_t v385 = 4;
                      goto LABEL_294;
                    case 2u:
                      unint64_t v346 = k;
                      __n128 v347 = *(__n128 *)v288;
                      int64x2_t v725 = *(int64x2_t *)(v288 + 16);
                      __n128 v726 = v347;
                      __n128 v348 = *(__n128 *)(v288 + 32);
                      long long v723 = *(_OWORD *)(v288 + 48);
                      __n128 v724 = v348;
                      uint64_t v349 = sub_1B67ADC80(255, 255, 255);
                      v850[0] = v730;
                      v850[1] = v717;
                      long long v350 = v709;
                      _OWORD *v709 = 0u;
                      v350[1] = 0u;
                      v350[2] = 0u;
                      v350[3] = 0u;
                      v851[64] = 6;
                      MEMORY[0x1F4188790](v349, v351);
                      *(&v694 - 10) = (uint64_t)v850;
                      *((_DWORD *)&v694 - 18) = v352;
                      __n128 v353 = (__n128)v725;
                      *((__n128 *)&v694 - 4) = v726;
                      *((__n128 *)&v694 - 3) = v353;
                      long long v354 = v723;
                      *((__n128 *)&v694 - 2) = v724;
                      *((_OWORD *)&v694 - 1) = v354;
                      uint64_t v355 = *(void *)(v281 + 32);
                      ecs_stack_allocator_push_snapshot(v355);
                      uint64_t v356 = v743;
                      uint64_t v357 = sub_1B6355ED4(v743);
                      long long v358 = ecs_stack_allocator_allocate(v355, 16 * v357 + 64, 8);
                      *long long v358 = &type metadata for DebugInfoWireframePrimitive;
                      v358[1] = &off_1F0F974E8;
                      v358[2] = &type metadata for DebugInfoColor;
                      v358[3] = &off_1F0F63878;
                      v358[4] = &type metadata for WorldTransform;
                      v358[5] = &off_1F0F67720;
                      v358[6] = &type metadata for Beamed;
                      v358[7] = &off_1F0F9FB50;
                      unint64_t v359 = sub_1B6355ED4(v356);
                      v745.n128_u64[0] = v282;
                      v739.n128_u64[0] = (unint64_t)&v694;
                      v738.n128_u64[0] = (unint64_t)(&v694 - 12);
                      if (!v359)
                      {
                        uint64_t v383 = 4;
                        unint64_t k = v346;
                        goto LABEL_281;
                      }
                      if (v359 < 0x12) {
                        goto LABEL_240;
                      }
                      unint64_t v360 = 0;
                      uint64_t v386 = 2 * (v359 - 1);
                      if (&v358[v386 + 8] < v358 + 8 || &v358[v386 + 9] < v358 + 9 || (v359 - 1) >> 60)
                      {
                        unint64_t k = v346;
                        goto LABEL_278;
                      }
                      if ((unint64_t)(v358 + 8) < (unint64_t)v736 + 16 * v359
                        && (unint64_t)v736 < (unint64_t)&v358[2 * v359 + 8])
                      {
LABEL_240:
                        unint64_t k = v346;
                        unint64_t v360 = 0;
LABEL_278:
                        uint64_t v383 = 4;
LABEL_279:
                        unint64_t v410 = v359 - v360;
                        long long v411 = (long long *)(v736 + 16 * v360);
                        do
                        {
                          long long v412 = *v411++;
                          *(_OWORD *)&v358[2 * v383++] = v412;
                          --v410;
                        }
                        while (v410);
                        goto LABEL_281;
                      }
                      unint64_t v360 = v359 & 0xFFFFFFFFFFFFFFFCLL;
                      uint64_t v383 = (v359 & 0xFFFFFFFFFFFFFFFCLL) + 4;
                      long long v387 = v358 + 12;
                      unint64_t v388 = v359 & 0xFFFFFFFFFFFFFFFCLL;
                      uint64_t v389 = v713;
                      do
                      {
                        long long v391 = *(v389 - 2);
                        long long v390 = *(v389 - 1);
                        long long v393 = *v389;
                        long long v392 = v389[1];
                        v389 += 4;
                        *(v387 - 2) = v391;
                        *(v387 - 1) = v390;
                        *long long v387 = v393;
                        v387[1] = v392;
                        v387 += 4;
                        v388 -= 4;
                      }
                      while (v388);
                      unint64_t k = v346;
                      if (v359 != v360) {
                        goto LABEL_279;
                      }
LABEL_281:
                      uint64_t v413 = sub_1B6964AB4(0);
                      uint64_t v414 = *(void *)(v281 + 16);
                      uint64_t v415 = v414 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
                      long long v416 = *(os_unfair_lock_s **)(v414 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
                      swift_retain();
                      os_unfair_lock_lock(v416);
                      swift_bridgeObjectRetain();
                      uint64_t v417 = sub_1B69E2E04((uint64_t)v358, v383, v413);
                      uint64_t v419 = v418;
                      swift_bridgeObjectRelease();
                      uint64_t v420 = sub_1B637FE60(v417);
                      if ((v421 & 1) != 0
                        || (v422 = sub_1B63581E4(v419, v420), int v284 = v422, (v422 & 0x100000000) != 0))
                      {
                        uint64_t v283 = sub_1B6A00108(v358, v383);
                        swift_bridgeObjectRetain();
                        int v284 = sub_1B637C7BC(v417, v419, v283, v413);
                        swift_release();
                        swift_bridgeObjectRelease();
                      }
LABEL_208:
                      uint64_t v285 = *(void *)(*(void *)(v414 + 80) + 8 * v284 + 32);
                      long long v286 = *(os_unfair_lock_s **)(v415 + 24);
                      swift_retain();
                      os_unfair_lock_unlock(v286);
                      swift_release();
                      v815[0].i8[0] = 1;
                      uint64_t v281 = v744;
                      sub_1B6B2866C(v285, 1, 1, 0x100000000uLL, v744, (uint64_t)sub_1B6C1F994, v738.n128_i64[0]);
                      goto LABEL_209;
                    case 3u:
                      __n128 v361 = *(__n128 *)v288;
                      __n128 v362 = *(__n128 *)(v288 + 16);
                      __n128 v363 = *(__n128 *)(v288 + 32);
                      __n128 v364 = *(__n128 *)(v288 + 48);
                      v854[0] = v729;
                      v854[1] = v716;
                      uint64_t v855 = 4;
                      long long v365 = v710;
                      _OWORD *v710 = 0u;
                      v365[1] = 0u;
                      v365[2] = 0u;
                      *((void *)v365 + 6) = 0;
                      v815[0].i8[0] = 1;
                      v856[56] = 7;
                      long long v366 = v854;
                      goto LABEL_246;
                    case 4u:
                      __n128 v340 = (__n128)v715;
                      v340.n128_u32[3] = v727.n128_u32[3];
                      __n128 v739 = v340;
                      v340.n128_u32[3] = 0;
                      __n128 v738 = *(__n128 *)v288;
                      __n128 v341 = *(__n128 *)(v288 + 16);
                      __n128 v726 = *(__n128 *)(v288 + 32);
                      __n128 v727 = v341;
                      __n128 v342 = *(__n128 *)(v288 + 48);
                      __n128 v724 = v340;
                      int64x2_t v725 = (int64x2_t)v342;
                      int v343 = sub_1B67ADC80(255, 255, 255);
                      v857[0] = v730;
                      __n128 v344 = (__n128)v725;
                      v857[1] = (__int128)v724;
                      long long v345 = v711;
                      _OWORD *v711 = 0u;
                      v345[1] = 0u;
                      v345[2] = 0u;
                      v345[3] = 0u;
                      v858[64] = 6;
                      v815[0].i8[0] = 1;
                      uint64_t v279 = sub_1B6D7E238(v743, 0x100000000uLL, v281, v857, v343, v738, v727, v726, v344);
                      __n128 v727 = v739;
                      goto LABEL_210;
                    case 5u:
                      __n128 v361 = *(__n128 *)v288;
                      __n128 v362 = *(__n128 *)(v288 + 16);
                      __n128 v363 = *(__n128 *)(v288 + 32);
                      __n128 v364 = *(__n128 *)(v288 + 48);
                      v864[0] = v729;
                      v864[1] = v714;
                      uint64_t v865 = 4;
                      long long v382 = v712;
                      _OWORD *v712 = 0u;
                      v382[1] = 0u;
                      v382[2] = 0u;
                      *((void *)v382 + 6) = 0;
                      v815[0].i8[0] = 1;
                      v866[56] = 7;
                      long long v366 = v864;
LABEL_246:
                      uint64_t v279 = sub_1B6D7DFAC(v743, 0x100000000uLL, v281, v366, v361, v362, v363, v364);
                      goto LABEL_210;
                    default:
                      unint64_t v290 = k;
                      memset(v849, 0, 96);
                      v849[96] = 12;
                      *(double *)&long long v291 = MEMORY[0x1F4188790](v279, v280);
                      *(&v694 - 10) = (uint64_t)v849;
                      *((_OWORD *)&v694 - 4) = v291;
                      *((_OWORD *)&v694 - 3) = v292;
                      *((_OWORD *)&v694 - 2) = v293;
                      *((_OWORD *)&v694 - 1) = v294;
                      uint64_t v295 = *(void *)(v281 + 32);
                      ecs_stack_allocator_push_snapshot(v295);
                      uint64_t v296 = v743;
                      uint64_t v297 = sub_1B6355ED4(v743);
                      uint64_t v298 = ecs_stack_allocator_allocate(v295, 16 * v297 + 48, 8);
                      *uint64_t v298 = &type metadata for DebugInfoWireframePrimitive;
                      v298[1] = &off_1F0F974E8;
                      _OWORD v298[2] = &type metadata for WorldTransform;
                      v298[3] = &off_1F0F67720;
                      v298[4] = &type metadata for Beamed;
                      v298[5] = &off_1F0F9FB50;
                      unint64_t v299 = sub_1B6355ED4(v296);
                      v745.n128_u64[0] = v282;
                      v739.n128_u64[0] = (unint64_t)&v694;
                      v738.n128_u64[0] = (unint64_t)(&v694 - 12);
                      if (!v299)
                      {
                        uint64_t v384 = 3;
                        unint64_t k = v290;
                        goto LABEL_288;
                      }
                      if (v299 < 0x12) {
                        goto LABEL_215;
                      }
                      unint64_t v300 = 0;
                      uint64_t v394 = 2 * (v299 - 1);
                      if (&v298[v394 + 6] < v298 + 6 || &v298[v394 + 7] < v298 + 7 || (v299 - 1) >> 60)
                      {
                        unint64_t k = v290;
                        goto LABEL_285;
                      }
                      if ((unint64_t)(v298 + 6) < (unint64_t)v736 + 16 * v299
                        && (unint64_t)v736 < (unint64_t)&v298[2 * v299 + 6])
                      {
LABEL_215:
                        unint64_t k = v290;
                        unint64_t v300 = 0;
LABEL_285:
                        uint64_t v384 = 3;
LABEL_286:
                        unint64_t v423 = v299 - v300;
                        long long v424 = (long long *)(v736 + 16 * v300);
                        do
                        {
                          long long v425 = *v424++;
                          *(_OWORD *)&v298[2 * v384++] = v425;
                          --v423;
                        }
                        while (v423);
                        goto LABEL_288;
                      }
                      unint64_t v300 = v299 & 0xFFFFFFFFFFFFFFFCLL;
                      uint64_t v384 = v299 | 3;
                      uint64_t v395 = v298 + 10;
                      unint64_t v396 = v299 & 0xFFFFFFFFFFFFFFFCLL;
                      int v397 = v713;
                      do
                      {
                        long long v399 = *(v397 - 2);
                        long long v398 = *(v397 - 1);
                        long long v401 = *v397;
                        long long v400 = v397[1];
                        v397 += 4;
                        *(v395 - 2) = v399;
                        *(v395 - 1) = v398;
                        *uint64_t v395 = v401;
                        v395[1] = v400;
                        v395 += 4;
                        v396 -= 4;
                      }
                      while (v396);
                      unint64_t k = v290;
                      if (v299 != v300) {
                        goto LABEL_286;
                      }
LABEL_288:
                      uint64_t v426 = sub_1B6964AB4(0);
                      uint64_t v319 = *(void *)(v281 + 16);
                      uint64_t v320 = v319 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
                      long long v427 = *(os_unfair_lock_s **)(v319 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
                      swift_retain();
                      os_unfair_lock_lock(v427);
                      swift_bridgeObjectRetain();
                      uint64_t v428 = sub_1B69E2E04((uint64_t)v298, v384, v426);
                      uint64_t v430 = v429;
                      swift_bridgeObjectRelease();
                      uint64_t v431 = sub_1B637FE60(v428);
                      if ((v432 & 1) != 0
                        || (v433 = sub_1B63581E4(v430, v431), int v328 = v433, (v433 & 0x100000000) != 0))
                      {
                        uint64_t v434 = sub_1B6A00108(v298, v384);
                        swift_bridgeObjectRetain();
                        int v328 = sub_1B637C7BC(v428, v430, v434, v426);
                        swift_release();
                        swift_bridgeObjectRelease();
                      }
                      goto LABEL_227;
                  }
                }
                unint64_t v301 = k;
                long long v302 = v735;
                HIDWORD(v302) = HIDWORD(v740);
                v859[1] = 0;
                v859[0] = 0;
                long long v740 = v302;
                long long v860 = v302;
                uint64_t v861 = v289 | 0x3F00000000000000;
                long long v862 = v734;
                uint64_t v303 = v733;
                *(_OWORD *)long long v733 = 0u;
                *(_OWORD *)(v303 + 16) = 0u;
                *(void *)(v303 + 32) = 0;
                v863[40] = 9;
                *(double *)&long long v304 = MEMORY[0x1F4188790](v279, v280);
                *(&v694 - 10) = (uint64_t)v859;
                *((_OWORD *)&v694 - 4) = v304;
                *((_OWORD *)&v694 - 3) = v305;
                *((_OWORD *)&v694 - 2) = v306;
                *((_OWORD *)&v694 - 1) = v307;
                uint64_t v308 = *(void *)(v281 + 32);
                ecs_stack_allocator_push_snapshot(v308);
                uint64_t v309 = v743;
                uint64_t v310 = sub_1B6355ED4(v743);
                uint64_t v311 = ecs_stack_allocator_allocate(v308, 16 * v310 + 48, 8);
                *uint64_t v311 = &type metadata for DebugInfoWireframePrimitive;
                v311[1] = &off_1F0F974E8;
                v311[2] = &type metadata for WorldTransform;
                v311[3] = &off_1F0F67720;
                v311[4] = &type metadata for Beamed;
                v311[5] = &off_1F0F9FB50;
                unint64_t v312 = sub_1B6355ED4(v309);
                v745.n128_u64[0] = v282;
                v739.n128_u64[0] = (unint64_t)&v694;
                v738.n128_u64[0] = (unint64_t)(&v694 - 12);
                if (v312) {
                  break;
                }
                uint64_t v314 = 3;
                unint64_t k = v301;
LABEL_224:
                uint64_t v318 = sub_1B6964AB4(0);
                uint64_t v319 = *(void *)(v281 + 16);
                uint64_t v320 = v319 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
                uint64_t v321 = *(os_unfair_lock_s **)(v319 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
                swift_retain();
                os_unfair_lock_lock(v321);
                swift_bridgeObjectRetain();
                uint64_t v322 = sub_1B69E2E04((uint64_t)v311, v314, v318);
                uint64_t v324 = v323;
                swift_bridgeObjectRelease();
                uint64_t v325 = sub_1B637FE60(v322);
                if ((v326 & 1) != 0 || (unint64_t v327 = sub_1B63581E4(v324, v325), v328 = v327, (v327 & 0x100000000) != 0))
                {
                  uint64_t v329 = sub_1B6A00108(v311, v314);
                  swift_bridgeObjectRetain();
                  int v328 = sub_1B637C7BC(v322, v324, v329, v318);
                  swift_release();
                  swift_bridgeObjectRelease();
                }
LABEL_227:
                uint64_t v330 = *(void *)(*(void *)(v319 + 80) + 8 * v328 + 32);
                uint64_t v331 = *(os_unfair_lock_s **)(v320 + 24);
                swift_retain();
                os_unfair_lock_unlock(v331);
                swift_release();
                v815[0].i8[0] = 1;
                uint64_t v281 = v744;
                sub_1B6B2792C(v330, 1, 1, 0x100000000uLL, v744, (uint64_t)sub_1B6C1F97C, v738.n128_i64[0]);
LABEL_209:
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v279 = ecs_stack_allocator_pop_snapshot(*(void *)(v281 + 32));
                uint64_t v278 = v737.n128_u64[0];
                unint64_t v282 = v745.n128_u64[0];
LABEL_210:
                if (++v282 == v278) {
                  goto LABEL_301;
                }
              }
              unint64_t k = v301;
              if (v312 >= 0x12)
              {
                unint64_t v313 = 0;
                uint64_t v332 = 2 * (v312 - 1);
                if (&v311[v332 + 6] < v311 + 6 || &v311[v332 + 7] < v311 + 7 || (v312 - 1) >> 60) {
                  goto LABEL_219;
                }
                if ((unint64_t)(v311 + 6) >= (unint64_t)v736 + 16 * v312
                  || (unint64_t)v736 >= (unint64_t)&v311[2 * v312 + 6])
                {
                  unint64_t v313 = v312 & 0xFFFFFFFFFFFFFFFCLL;
                  uint64_t v314 = v312 | 3;
                  long long v333 = v311 + 10;
                  unint64_t v334 = v312 & 0xFFFFFFFFFFFFFFFCLL;
                  long long v335 = v713;
                  do
                  {
                    long long v337 = *(v335 - 2);
                    long long v336 = *(v335 - 1);
                    long long v339 = *v335;
                    long long v338 = v335[1];
                    v335 += 4;
                    *(v333 - 2) = v337;
                    *(v333 - 1) = v336;
                    *long long v333 = v339;
                    v333[1] = v338;
                    v333 += 4;
                    v334 -= 4;
                  }
                  while (v334);
                  if (v312 == v313) {
                    goto LABEL_224;
                  }
                  goto LABEL_220;
                }
              }
              unint64_t v313 = 0;
LABEL_219:
              uint64_t v314 = 3;
LABEL_220:
              unint64_t v315 = v312 - v313;
              long long v316 = (long long *)(v736 + 16 * v313);
              do
              {
                long long v317 = *v316++;
                *(_OWORD *)&v311[2 * v314++] = v317;
                --v315;
              }
              while (v315);
              goto LABEL_224;
            }
            goto LABEL_301;
          }
          uint64_t v122 = v744;
          unint64_t k = v272;
          if (v268 != v739.n128_u32[0]) {
            break;
          }
LABEL_301:
          v798[0] = v783;
          v798[1] = v784;
          uint64_t v799 = v785;
          sub_1B6345178(v721, (unsigned __int16 **)v798, (uint64_t)v848);
          long long v447 = v731;
          sub_1B634507C(v731);
          ecs_stack_allocator_pop_snapshot((uint64_t)v720);
          if (v722)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v447 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v447 + 47));
          }
          swift_release();
          uint64_t v266 = (long long *)((char *)v719 + 1);
          if ((long long *)((char *)v719 + 1) == v707)
          {
            sub_1B62CA064((uint64_t)v749);
            sub_1B632F1C4(v751, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            sub_1B632F1C4(v751, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            goto LABEL_387;
          }
        }
        while (1)
        {
          uint64_t v453 = (unsigned int *)(v742 + 224 * v268);
          long long v454 = (__n128 *)(v741.i64[0] + (v268 << 6));
          uint64_t v455 = *v453;
          if (*((unsigned char *)v453 + 4) != 1) {
            break;
          }
          switch(*v453)
          {
            case 1u:
              unint64_t v523 = k;
              __n128 v524 = *v454;
              __n128 v737 = v454[1];
              __n128 v738 = v524;
              __n128 v525 = v454[2];
              int64x2_t v725 = (int64x2_t)v454[3];
              __n128 v726 = v525;
              uint64_t v526 = sub_1B67ADC80(255, 255, 255);
              long long v870 = v718;
              unsigned int v527 = v697;
              _OWORD *v697 = 0u;
              v527[1] = 0u;
              v527[2] = 0u;
              v527[3] = 0u;
              v527[4] = 0u;
              v871[80] = 3;
              MEMORY[0x1F4188790](v526, v528);
              v503 = &v694 - 12;
              *(&v694 - 10) = (uint64_t)&v870;
              *((_DWORD *)&v694 - 18) = v529;
              __n128 v530 = v737;
              *((__n128 *)&v694 - 4) = v738;
              *((__n128 *)&v694 - 3) = v530;
              __n128 v531 = (__n128)v725;
              *((__n128 *)&v694 - 2) = v726;
              *((__n128 *)&v694 - 1) = v531;
              uint64_t v532 = *(void *)(v122 + 32);
              ecs_stack_allocator_push_snapshot(v532);
              uint64_t v533 = v743;
              uint64_t v509 = sub_1B6355ED4(v743) + 4;
              uint64_t v510 = ecs_stack_allocator_allocate(v532, 16 * v509, 8);
              *uint64_t v510 = &type metadata for DebugInfoWireframePrimitive;
              v510[1] = &off_1F0F974E8;
              v510[2] = &type metadata for DebugInfoColor;
              v510[3] = &off_1F0F63878;
              v510[4] = &type metadata for WorldTransform;
              v510[5] = &off_1F0F67720;
              v510[6] = &type metadata for Beamed;
              v510[7] = &off_1F0F9FB50;
              unint64_t v534 = sub_1B6355ED4(v533);
              if (!v534)
              {
                uint64_t v513 = 4;
                unint64_t k = v523;
                goto LABEL_348;
              }
              unint64_t k = v523;
              if (v534 < 0x12) {
                goto LABEL_338;
              }
              unint64_t v535 = 0;
              uint64_t v551 = 2 * (v534 - 1);
              if (&v510[v551 + 8] < v510 + 8 || &v510[v551 + 9] < v510 + 9 || (v534 - 1) >> 60) {
                goto LABEL_339;
              }
              if ((unint64_t)(v510 + 8) < (unint64_t)v736 + 16 * v534
                && (unint64_t)v736 < (unint64_t)&v510[2 * v534 + 8])
              {
LABEL_338:
                unint64_t v535 = 0;
LABEL_339:
                uint64_t v513 = 4;
LABEL_340:
                unint64_t v536 = v534 - v535;
                uint64_t v537 = (long long *)(v736 + 16 * v535);
                do
                {
                  long long v538 = *v537++;
                  *(_OWORD *)&v510[2 * v513++] = v538;
                  --v536;
                }
                while (v536);
                goto LABEL_348;
              }
              unint64_t v535 = v534 & 0xFFFFFFFFFFFFFFFCLL;
              uint64_t v513 = (v534 & 0xFFFFFFFFFFFFFFFCLL) + 4;
              unsigned __int8 v552 = v510 + 12;
              unint64_t v553 = v534 & 0xFFFFFFFFFFFFFFFCLL;
              uint64_t v554 = v713;
              do
              {
                long long v556 = *(v554 - 2);
                long long v555 = *(v554 - 1);
                long long v558 = *v554;
                long long v557 = v554[1];
                v554 += 4;
                *(v552 - 2) = v556;
                *(v552 - 1) = v555;
                *unsigned __int8 v552 = v558;
                v552[1] = v557;
                v552 += 4;
                v553 -= 4;
              }
              while (v553);
              if (v534 != v535) {
                goto LABEL_340;
              }
              goto LABEL_348;
            case 2u:
              unint64_t v497 = k;
              __n128 v498 = *v454;
              __n128 v737 = v454[1];
              __n128 v738 = v498;
              __n128 v499 = v454[2];
              int64x2_t v725 = (int64x2_t)v454[3];
              __n128 v726 = v499;
              uint64_t v500 = sub_1B67ADC80(255, 255, 255);
              v868[0] = v730;
              v868[1] = v717;
              v501 = v698;
              _OWORD *v698 = 0u;
              v501[1] = 0u;
              v501[2] = 0u;
              v501[3] = 0u;
              v869[64] = 6;
              MEMORY[0x1F4188790](v500, v502);
              v503 = &v694 - 12;
              *(&v694 - 10) = (uint64_t)v868;
              *((_DWORD *)&v694 - 18) = v504;
              __n128 v505 = v737;
              *((__n128 *)&v694 - 4) = v738;
              *((__n128 *)&v694 - 3) = v505;
              __n128 v506 = (__n128)v725;
              *((__n128 *)&v694 - 2) = v726;
              *((__n128 *)&v694 - 1) = v506;
              uint64_t v507 = *(void *)(v122 + 32);
              ecs_stack_allocator_push_snapshot(v507);
              uint64_t v508 = v743;
              uint64_t v509 = sub_1B6355ED4(v743) + 4;
              uint64_t v510 = ecs_stack_allocator_allocate(v507, 16 * v509, 8);
              *uint64_t v510 = &type metadata for DebugInfoWireframePrimitive;
              v510[1] = &off_1F0F974E8;
              v510[2] = &type metadata for DebugInfoColor;
              v510[3] = &off_1F0F63878;
              v510[4] = &type metadata for WorldTransform;
              v510[5] = &off_1F0F67720;
              v510[6] = &type metadata for Beamed;
              v510[7] = &off_1F0F9FB50;
              unint64_t v511 = sub_1B6355ED4(v508);
              if (!v511)
              {
                uint64_t v513 = 4;
                unint64_t k = v497;
                goto LABEL_348;
              }
              unint64_t k = v497;
              if (v511 < 0x12) {
                goto LABEL_330;
              }
              unint64_t v512 = 0;
              uint64_t v542 = 2 * (v511 - 1);
              if (&v510[v542 + 8] < v510 + 8 || &v510[v542 + 9] < v510 + 9 || (v511 - 1) >> 60) {
                goto LABEL_331;
              }
              if ((unint64_t)(v510 + 8) < (unint64_t)v736 + 16 * v511
                && (unint64_t)v736 < (unint64_t)&v510[2 * v511 + 8])
              {
LABEL_330:
                unint64_t v512 = 0;
LABEL_331:
                uint64_t v513 = 4;
LABEL_332:
                unint64_t v514 = v511 - v512;
                uint64_t v515 = (long long *)(v736 + 16 * v512);
                do
                {
                  long long v516 = *v515++;
                  *(_OWORD *)&v510[2 * v513++] = v516;
                  --v514;
                }
                while (v514);
                goto LABEL_348;
              }
              unint64_t v512 = v511 & 0xFFFFFFFFFFFFFFFCLL;
              uint64_t v513 = (v511 & 0xFFFFFFFFFFFFFFFCLL) + 4;
              uint64_t v543 = v510 + 12;
              unint64_t v544 = v511 & 0xFFFFFFFFFFFFFFFCLL;
              long long v545 = v713;
              do
              {
                long long v547 = *(v545 - 2);
                long long v546 = *(v545 - 1);
                long long v549 = *v545;
                long long v548 = v545[1];
                v545 += 4;
                *(v543 - 2) = v547;
                *(v543 - 1) = v546;
                *uint64_t v543 = v549;
                v543[1] = v548;
                v543 += 4;
                v544 -= 4;
              }
              while (v544);
              if (v511 != v512) {
                goto LABEL_332;
              }
LABEL_348:
              uint64_t v540 = sub_1B6964AB4(0);
              swift_retain();
              uint64_t v541 = sub_1B6D7DCB0(v510, v509, v513, v540);
              uint64_t v122 = v744;
              swift_release();
              v815[0].i8[0] = 1;
              sub_1B6B2866C(v541, 1, 1, 0x100000000uLL, v122, (uint64_t)sub_1B6C1F994, (uint64_t)v503);
              swift_bridgeObjectRelease();
              swift_release();
              uint64_t v279 = ecs_stack_allocator_pop_snapshot(*(void *)(v122 + 32));
              break;
            case 3u:
              __n128 v517 = *v454;
              __n128 v518 = v454[1];
              __n128 v519 = v454[2];
              __n128 v520 = v454[3];
              v872[0] = v729;
              v872[1] = v716;
              uint64_t v873 = 4;
              uint64_t v521 = v699;
              _OWORD *v699 = 0u;
              v521[1] = 0u;
              v521[2] = 0u;
              *((void *)v521 + 6) = 0;
              v815[0].i8[0] = 1;
              v874[56] = 7;
              long long v522 = v872;
              goto LABEL_344;
            case 4u:
              __n128 v448 = (__n128)v715;
              v448.n128_u32[3] = v703.n128_u32[3];
              __n128 v738 = v448;
              v448.n128_u32[3] = 0;
              __n128 v737 = *v454;
              __n128 v449 = v454[1];
              int64x2_t v725 = (int64x2_t)v454[2];
              __n128 v726 = v449;
              __n128 v450 = v454[3];
              long long v723 = (__int128)v448;
              __n128 v724 = v450;
              int v451 = sub_1B67ADC80(255, 255, 255);
              v875[0] = v730;
              v875[1] = v723;
              uint64_t v452 = v700;
              _OWORD *v700 = 0u;
              v452[1] = 0u;
              v452[2] = 0u;
              v452[3] = 0u;
              v876[64] = 6;
              v815[0].i8[0] = 1;
              uint64_t v279 = sub_1B6D7E238(v743, 0x100000000uLL, v122, v875, v451, v737, v726, (__n128)v725, v724);
              __n128 v703 = v738;
              break;
            case 5u:
              __n128 v517 = *v454;
              __n128 v518 = v454[1];
              __n128 v519 = v454[2];
              __n128 v520 = v454[3];
              v882[0] = v729;
              v882[1] = v714;
              uint64_t v883 = 4;
              unsigned __int8 v539 = v701;
              _OWORD *v701 = 0u;
              v539[1] = 0u;
              v539[2] = 0u;
              *((void *)v539 + 6) = 0;
              v815[0].i8[0] = 1;
              v884[56] = 7;
              long long v522 = v882;
LABEL_344:
              uint64_t v279 = sub_1B6D7DFAC(v743, 0x100000000uLL, v122, v522, v517, v518, v519, v520);
              break;
            default:
              unint64_t v456 = k;
              memset(v867, 0, 96);
              v867[96] = 12;
              *(double *)&long long v457 = MEMORY[0x1F4188790](v279, v280);
              *(&v694 - 10) = (uint64_t)v867;
              *((_OWORD *)&v694 - 4) = v457;
              *((_OWORD *)&v694 - 3) = v458;
              *((_OWORD *)&v694 - 2) = v459;
              *((_OWORD *)&v694 - 1) = v460;
              uint64_t v461 = *(void *)(v122 + 32);
              ecs_stack_allocator_push_snapshot(v461);
              uint64_t v462 = v743;
              uint64_t v463 = sub_1B6355ED4(v743);
              uint64_t v464 = ecs_stack_allocator_allocate(v461, 16 * v463 + 48, 8);
              *uint64_t v464 = &type metadata for DebugInfoWireframePrimitive;
              v464[1] = &off_1F0F974E8;
              v464[2] = &type metadata for WorldTransform;
              void v464[3] = &off_1F0F67720;
              v464[4] = &type metadata for Beamed;
              v464[5] = &off_1F0F9FB50;
              unint64_t v465 = sub_1B6355ED4(v462);
              v737.n128_u64[0] = (unint64_t)&v694;
              v745.n128_u64[0] = v456;
              if (!v465)
              {
                uint64_t v466 = &v694 - 12;
                uint64_t v468 = 3;
                goto LABEL_379;
              }
              if (v465 < 0x12)
              {
                uint64_t v466 = &v694 - 12;
                unint64_t v467 = 0;
                uint64_t v468 = 3;
                uint64_t v469 = v736;
                goto LABEL_377;
              }
              unint64_t v467 = 0;
              uint64_t v550 = 2 * (v465 - 1);
              uint64_t v469 = v736;
              if (&v464[v550 + 6] < v464 + 6 || &v464[v550 + 7] < v464 + 7 || (v465 - 1) >> 60)
              {
                uint64_t v466 = &v694 - 12;
                uint64_t v468 = 3;
LABEL_377:
                unint64_t v566 = v465 - v467;
                long long v567 = (long long *)(v469 + 16 * v467);
                do
                {
                  long long v568 = *v567++;
                  *(_OWORD *)&v464[2 * v468++] = v568;
                  --v566;
                }
                while (v566);
                goto LABEL_379;
              }
              if ((unint64_t)(v464 + 6) < (unint64_t)v736 + 16 * v465
                && (unint64_t)v736 < (unint64_t)&v464[2 * v465 + 6])
              {
                uint64_t v466 = &v694 - 12;
                unint64_t v467 = 0;
                uint64_t v468 = 3;
                goto LABEL_377;
              }
              unint64_t v467 = v465 & 0xFFFFFFFFFFFFFFFCLL;
              uint64_t v468 = v465 | 3;
              uint64_t v559 = v464 + 10;
              unint64_t v560 = v465 & 0xFFFFFFFFFFFFFFFCLL;
              unsigned __int8 v561 = v713;
              do
              {
                long long v563 = *(v561 - 2);
                long long v562 = *(v561 - 1);
                long long v565 = *v561;
                long long v564 = v561[1];
                v561 += 4;
                *(v559 - 2) = v563;
                *(v559 - 1) = v562;
                *uint64_t v559 = v565;
                v559[1] = v564;
                v559 += 4;
                v560 -= 4;
              }
              while (v560);
              uint64_t v466 = &v694 - 12;
              if (v465 != v467) {
                goto LABEL_377;
              }
LABEL_379:
              uint64_t v569 = sub_1B6964AB4(0);
              uint64_t v570 = *(void *)(v122 + 16);
              uint64_t v571 = v570 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
              unsigned __int8 v572 = *(os_unfair_lock_s **)(v570 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
              swift_retain();
              os_unfair_lock_lock(v572);
              swift_bridgeObjectRetain();
              uint64_t v573 = sub_1B69E2E04((uint64_t)v464, v468, v569);
              v738.n128_u64[0] = v574;
              swift_bridgeObjectRelease();
              uint64_t v575 = sub_1B637FE60(v573);
              if ((v576 & 1) != 0
                || (unint64_t v577 = sub_1B63581E4(v738.n128_i64[0], v575), v578 = v577, (v577 & 0x100000000) != 0))
              {
                uint64_t v579 = sub_1B6A00108(v464, v468);
                swift_bridgeObjectRetain();
                int v578 = sub_1B637C7BC(v573, v738.n128_i64[0], v579, v569);
                swift_release();
                swift_bridgeObjectRelease();
              }
              uint64_t v580 = *(void *)(*(void *)(v570 + 80) + 8 * v578 + 32);
              v581 = *(os_unfair_lock_s **)(v571 + 24);
              swift_retain();
              os_unfair_lock_unlock(v581);
              swift_release();
              v815[0].i8[0] = 1;
              uint64_t v122 = v744;
              uint64_t v582 = (uint64_t)v466;
              unint64_t k = v745.n128_u64[0];
              sub_1B6B2792C(v580, 1, 1, 0x100000000uLL, v744, (uint64_t)sub_1B6C1F97C, v582);
              if (k) {
                goto LABEL_466;
              }
              swift_bridgeObjectRelease();
              swift_release();
              uint64_t v279 = ecs_stack_allocator_pop_snapshot(*(void *)(v122 + 32));
              break;
          }
LABEL_304:
          if (++v268 == v739.n128_u64[0]) {
            goto LABEL_301;
          }
        }
        unint64_t v470 = k;
        __n128 v471 = (__n128)v735;
        v471.n128_u32[3] = v732.n128_u32[3];
        v877[1] = 0;
        v877[0] = 0;
        __n128 v738 = v471;
        __n128 v878 = v471;
        uint64_t v879 = v455 | 0x3F00000000000000;
        long long v880 = v734;
        v472 = v728;
        *(_OWORD *)v728 = 0u;
        *((_OWORD *)v472 + 1) = 0u;
        *((void *)v472 + 4) = 0;
        v881[40] = 9;
        *(double *)&long long v473 = MEMORY[0x1F4188790](v279, v280);
        *(&v694 - 10) = (uint64_t)v877;
        *((_OWORD *)&v694 - 4) = v473;
        *((_OWORD *)&v694 - 3) = v474;
        *((_OWORD *)&v694 - 2) = v475;
        *((_OWORD *)&v694 - 1) = v476;
        uint64_t v477 = *(void *)(v122 + 32);
        ecs_stack_allocator_push_snapshot(v477);
        uint64_t v478 = v743;
        uint64_t v479 = sub_1B6355ED4(v743) + 3;
        int8x16_t v480 = ecs_stack_allocator_allocate(v477, 16 * v479, 8);
        *int8x16_t v480 = &type metadata for DebugInfoWireframePrimitive;
        v480[1] = &off_1F0F974E8;
        v480[2] = &type metadata for WorldTransform;
        v480[3] = &off_1F0F67720;
        v480[4] = &type metadata for Beamed;
        v480[5] = &off_1F0F9FB50;
        unint64_t v481 = sub_1B6355ED4(v478);
        if (!v481)
        {
          uint64_t v483 = 3;
          unint64_t k = v470;
LABEL_318:
          uint64_t v487 = sub_1B6964AB4(0);
          swift_retain();
          uint64_t v488 = sub_1B6D7DCB0(v480, v479, v483, v487);
          uint64_t v122 = v744;
          swift_release();
          v815[0].i8[0] = 1;
          sub_1B6B2792C(v488, 1, 1, 0x100000000uLL, v122, (uint64_t)sub_1B6C1F97C, (uint64_t)(&v694 - 12));
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v279 = ecs_stack_allocator_pop_snapshot(*(void *)(v122 + 32));
          __n128 v732 = v738;
          goto LABEL_304;
        }
        unint64_t k = v470;
        if (v481 >= 0x12)
        {
          unint64_t v482 = 0;
          uint64_t v489 = 2 * (v481 - 1);
          if (&v480[v489 + 6] < v480 + 6 || &v480[v489 + 7] < v480 + 7 || (v481 - 1) >> 60) {
            goto LABEL_313;
          }
          if ((unint64_t)(v480 + 6) >= (unint64_t)v736 + 16 * v481
            || (unint64_t)v736 >= (unint64_t)&v480[2 * v481 + 6])
          {
            unint64_t v482 = v481 & 0xFFFFFFFFFFFFFFFCLL;
            uint64_t v483 = v481 | 3;
            long long v490 = v480 + 10;
            unint64_t v491 = v481 & 0xFFFFFFFFFFFFFFFCLL;
            long long v492 = v713;
            do
            {
              long long v494 = *(v492 - 2);
              long long v493 = *(v492 - 1);
              long long v496 = *v492;
              long long v495 = v492[1];
              v492 += 4;
              *(v490 - 2) = v494;
              *(v490 - 1) = v493;
              *long long v490 = v496;
              v490[1] = v495;
              v490 += 4;
              v491 -= 4;
            }
            while (v491);
            if (v481 == v482) {
              goto LABEL_318;
            }
            goto LABEL_314;
          }
        }
        unint64_t v482 = 0;
LABEL_313:
        uint64_t v483 = 3;
LABEL_314:
        unint64_t v484 = v481 - v482;
        uint64_t v485 = (long long *)(v736 + 16 * v482);
        do
        {
          long long v486 = *v485++;
          *(_OWORD *)&v480[2 * v483++] = v486;
          --v484;
        }
        while (v484);
        goto LABEL_318;
      }
    }
    sub_1B62CA064((uint64_t)v749);
    sub_1B632F1C4(v751, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    sub_1B62CA064((uint64_t)v749);
  }
LABEL_387:
  uint64_t v3 = v702;
  int v20 = v695;
LABEL_388:
  if (v20)
  {
    if (qword_1EB97DC28 != -1) {
      swift_once();
    }
    uint64_t v842 = qword_1EB997A18;
    int v843 = 0;
    char v844 = 2;
    uint64_t v845 = 0;
    char v846 = 2;
    uint64_t v847 = 0;
    swift_retain();
    sub_1B67827FC(1, 1, (uint64_t)v752);
    swift_release();
    v804[0] = v752[0];
    v804[1] = v752[1];
    uint64_t v805 = v753;
    sub_1B62C9DA8(v3, (uint64_t)v804, 0x200000000, v754);
    sub_1B62D7DE8((uint64_t)v754, (uint64_t)v769, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v769[0])
    {
      if (v775 > 0 && (v726.n128_u64[0] = v772) != 0)
      {
        *(void *)&long long v730 = *((void *)v774 + 4);
        LODWORD(v729) = *(unsigned __int8 *)(v773 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v800[0] = v769[0];
        v800[1] = v769[1];
        v725.i64[0] = v771;
        uint64_t v801 = v770;
        v724.n128_u64[0] = (unint64_t)(v774 + 48);
        v731 = v774;
        *(void *)&long long v723 = v774 + 64;
        v739.n128_u64[0] = (unint64_t)&v834;
        *(void *)&long long v736 = &v839;
        swift_retain();
        swift_retain();
        swift_retain();
        long long v583 = 0;
        do
        {
          uint64_t v584 = (unsigned int *)(v725.i64[0] + 48 * (void)v583);
          uint64_t v585 = *v584;
          v732.n128_u64[0] = v584[1];
          v586 = (uint64_t *)*((void *)v584 + 2);
          uint64_t v587 = *((void *)v584 + 3);
          unint64_t v588 = *((void *)v584 + 5);
          *(void *)&long long v733 = *((void *)v584 + 4);
          v728 = v583;
          *(void *)&long long v735 = v585;
          unint64_t v589 = k;
          if (v729)
          {
            uint64_t v590 = *(os_unfair_lock_s **)(v588 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v590);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v588 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v730);
          sub_1B62D7DE8(v724.n128_i64[0], (uint64_t)v831, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          v591 = v731;
          uint64_t v592 = *((void *)v731 + 4);
          uint64_t v593 = *(void *)(*(void *)(*(void *)(*(void *)(v588 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          *((void *)v591 + 6) = ecs_stack_allocator_allocate(v592, 48 * v593, 8);
          *((void *)v591 + 7) = v593;
          uint64_t v594 = (void *)v723;
          *(void *)(v723 + 8) = 0;
          v594[2] = 0;
          *uint64_t v594 = 0;
          swift_release();
          uint64_t v595 = v733;
          uint64_t v596 = sub_1B62C9024((uint64_t)&type metadata for Skeleton, (uint64_t)&off_1F0FA7750, v586, v587, v733, (uint64_t)v591);
          uint64_t v597 = v587;
          uint64_t v598 = v596;
          v727.n128_u64[0] = v588;
          sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v586, v597, v595, (uint64_t)v591);
          *(void *)&long long v734 = v598;
          if (v586)
          {
            unint64_t k = v589;
            if (v595)
            {
              for (uint64_t i = 0; i != v595; ++i)
              {
                uint64_t v600 = *(void *)(v598 + 40 * i);
                if (v600)
                {
                  uint64_t v601 = sub_1B6355ED4(*(void *)(v600 + 16));
                  if (v601)
                  {
                    uint64_t v602 = v601;
                    *(void *)&long long v735 = i;
                    long long v603 = (void *)(v598 + 40 * i + 16);
                    memset(v835, 0, sizeof(v835));
                    char v836 = 12;
                    swift_retain();
                    uint64_t v604 = 0;
                    for (uint64_t j = 0; j != v602; ++j)
                    {
                      v606 = (__n128 *)(*v603 + v604);
                      __n128 v607 = v606[2];
                      __n128 v608 = v606[3];
                      __n128 v609 = v606[4];
                      __n128 v610 = v606[5];
                      v815[0].i8[0] = 1;
                      uint64_t v611 = v743;
                      uint64_t v612 = v744;
                      __n128 v745 = v610;
                      sub_1B6D7DFAC(v743, 0x100000000uLL, v744, v835, v607, v608, v609, v610);
                      uint64_t v613 = *(void *)(*(void *)(v600 + 40) + 8 * j + 32);
                      if (v613 != -1)
                      {
                        long long v614 = *(_OWORD *)(*v603 + (v613 << 6) + 80);
                        float32x4_t v615 = (float32x4_t)v614;
                        v615.i32[3] = v741.i32[3];
                        float32x4_t v616 = (float32x4_t)v745;
                        v616.i32[3] = HIDWORD(v742);
                        __n128 v745 = (__n128)v616;
                        HIDWORD(v614) = 1.0;
                        float32x4_t v741 = v615;
                        long long v742 = v614;
                        float32x4_t v617 = vsubq_f32(v616, v615);
                        v617.i32[3] = 0;
                        long long v740 = (__int128)v617;
                        int v618 = sub_1B67ADC80(0, 255, 0);
                        v832[0] = v742;
                        v832[1] = v740;
                        uint64_t v833 = 4;
                        v619 = (_OWORD *)v739.n128_u64[0];
                        *(_OWORD *)v739.n128_u64[0] = 0u;
                        v619[1] = 0u;
                        v619[2] = 0u;
                        *(_OWORD *)((char *)v619 + 41) = 0u;
                        v815[0].i8[0] = 1;
                        sub_1B6D7E4E0(v611, 0x100000000uLL, v612, v832, v618);
                        long long v742 = (__int128)v745;
                      }
                      v604 += 64;
                    }
                    swift_release();
                    uint64_t v598 = v734;
                    uint64_t v595 = v733;
                    uint64_t i = v735;
                  }
                }
              }
            }
          }
          else
          {
            uint64_t v620 = v735;
            unint64_t v621 = v732.n128_u64[0];
            for (unint64_t k = v589; v620 != v621; ++v620)
            {
              uint64_t v623 = *(void *)(v598 + 40 * v620);
              if (v623)
              {
                uint64_t v624 = sub_1B6355ED4(*(void *)(v623 + 16));
                if (v624)
                {
                  uint64_t v625 = v624;
                  *(void *)&long long v735 = v620;
                  v626 = (void *)(v598 + 40 * v620 + 16);
                  memset(v840, 0, sizeof(v840));
                  char v841 = 12;
                  swift_retain();
                  uint64_t v627 = 0;
                  for (uint64_t m = 0; m != v625; ++m)
                  {
                    v629 = (__n128 *)(*v626 + v627);
                    __n128 v630 = v629[2];
                    __n128 v631 = v629[3];
                    __n128 v632 = v629[4];
                    __n128 v633 = v629[5];
                    v815[0].i8[0] = 1;
                    uint64_t v634 = v743;
                    uint64_t v635 = v744;
                    __n128 v745 = v633;
                    sub_1B6D7DFAC(v743, 0x100000000uLL, v744, v840, v630, v631, v632, v633);
                    uint64_t v636 = *(void *)(*(void *)(v623 + 40) + 8 * m + 32);
                    if (v636 != -1)
                    {
                      __n128 v637 = *(__n128 *)(*v626 + (v636 << 6) + 80);
                      float32x4_t v638 = (float32x4_t)v637;
                      v638.i32[3] = v737.n128_i32[3];
                      long long v740 = (__int128)v638;
                      float32x4_t v639 = (float32x4_t)v745;
                      v639.i32[3] = v738.n128_i32[3];
                      __n128 v745 = (__n128)v639;
                      v637.n128_u32[3] = 1.0;
                      float32x4_t v640 = vsubq_f32(v639, v638);
                      v640.i32[3] = 0;
                      __n128 v737 = (__n128)v640;
                      __n128 v738 = v637;
                      int v641 = sub_1B67ADC80(0, 255, 0);
                      v837[0] = (__int128)v738;
                      v837[1] = (__int128)v737;
                      uint64_t v838 = 4;
                      v642 = (_OWORD *)v736;
                      *(_OWORD *)long long v736 = 0u;
                      v642[1] = 0u;
                      v642[2] = 0u;
                      *(_OWORD *)((char *)v642 + 41) = 0u;
                      v815[0].i8[0] = 1;
                      sub_1B6D7E4E0(v634, 0x100000000uLL, v635, v837, v641);
                      __n128 v737 = (__n128)v740;
                      __n128 v738 = v745;
                    }
                    v627 += 64;
                  }
                  swift_release();
                  uint64_t v598 = v734;
                  uint64_t v620 = v735;
                  unint64_t v621 = v732.n128_u64[0];
                }
              }
            }
          }
          sub_1B6345178(v731, (unsigned __int16 **)v800, (uint64_t)v831);
          unint64_t v622 = v727.n128_u64[0];
          sub_1B634507C((char *)v727.n128_u64[0]);
          ecs_stack_allocator_pop_snapshot(v730);
          if (v729)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v622 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v622 + 376));
          }
          swift_release();
          long long v583 = v728 + 1;
        }
        while (v728 + 1 != (unsigned char *)v726.n128_u64[0]);
        sub_1B62CA064((uint64_t)v752);
        sub_1B632F1C4(v754, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
      else
      {
        sub_1B62CA064((uint64_t)v752);
      }
      sub_1B632F1C4(v754, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    else
    {
      sub_1B62CA064((uint64_t)v752);
    }
    uint64_t v3 = v702;
    if (!v696) {
      return (void *)swift_bridgeObjectRelease();
    }
  }
  else if (!v696)
  {
    return (void *)swift_bridgeObjectRelease();
  }
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v825 = qword_1EB997A18;
  int v826 = 0;
  char v827 = 2;
  uint64_t v828 = 0;
  char v829 = 2;
  uint64_t v830 = 0;
  swift_retain();
  sub_1B6782A50(1, 1, (uint64_t)&v755);
  swift_release();
  uint64_t v819 = v755;
  int v820 = v756;
  char v821 = v757;
  uint64_t v822 = v758 | 1;
  char v823 = v759;
  uint64_t v824 = v760;
  sub_1B62C9DA8(v3, (uint64_t)&v819, 0x200000000, v761);
  sub_1B62D7DE8((uint64_t)v761, (uint64_t)v762, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v762[0])
  {
    sub_1B62CA064((uint64_t)&v755);
    return (void *)swift_bridgeObjectRelease();
  }
  if (v768 > 0 && (*(void *)&long long v736 = v765) != 0)
  {
    v643 = (void *)v767;
    uint64_t v644 = *(void *)(v767 + 32);
    int v645 = *(unsigned __int8 *)(v766 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v802[0] = v762[0];
    v802[1] = v762[1];
    uint64_t v803 = v763;
    v731 = (char *)(v767 + 48);
    v732.n128_u64[0] = v764;
    *(void *)&long long v730 = v767 + 64;
    swift_retain();
    swift_retain();
    swift_retain();
    unint64_t v646 = 0;
    *(void *)&long long v735 = v643;
    *(void *)&long long v734 = v644;
    LODWORD(v733) = v645;
    do
    {
      v647 = (unsigned int *)(v732.n128_u64[0] + 48 * v646);
      *(void *)&long long v742 = *v647;
      *(void *)&long long v740 = v647[1];
      v648 = (uint64_t *)*((void *)v647 + 2);
      uint64_t v649 = *((void *)v647 + 3);
      uint64_t v650 = *((void *)v647 + 4);
      uint64_t v651 = *((void *)v647 + 5);
      v745.n128_u64[0] = k;
      v737.n128_u64[0] = v646;
      if (v645)
      {
        v652 = *(os_unfair_lock_s **)(v651 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v652);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v651 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v644);
      sub_1B62D7DE8((uint64_t)v731, (uint64_t)v810, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v653 = v643[4];
      uint64_t v654 = *(void *)(*(void *)(*(void *)(*(void *)(v651 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v643[6] = ecs_stack_allocator_allocate(v653, 48 * v654, 8);
      v643[7] = v654;
      v655 = (void *)v730;
      *(void *)(v730 + 8) = 0;
      v655[2] = 0;
      void *v655 = 0;
      swift_release();
      uint64_t v656 = v650;
      uint64_t v657 = sub_1B62C9024((uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, v648, v649, v650, (uint64_t)v643);
      uint64_t v658 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v648, v649, v656, (uint64_t)v643);
      v741.i64[0] = v651;
      if (v648)
      {
        if (v656)
        {
          v659 = (uint64_t *)(v658 + 32);
          do
          {
            *(void *)&long long v742 = v656;
            float32x4_t v661 = *(float32x4_t *)(v657 + 64);
            v811[5] = *(float32x4_t *)(v657 + 80);
            long long v662 = *(_OWORD *)(v657 + 112);
            v811[6] = *(float32x4_t *)(v657 + 96);
            v812[0] = v662;
            *(_OWORD *)((char *)v812 + 12) = *(_OWORD *)(v657 + 124);
            float32x4_t v663 = *(float32x4_t *)(v657 + 48);
            v811[2] = *(float32x4_t *)(v657 + 32);
            v811[3] = v663;
            v811[4] = v661;
            float32x4_t v664 = *(float32x4_t *)(v657 + 16);
            v811[0] = *(float32x4_t *)v657;
            v811[1] = v664;
            uint64_t v665 = *(v659 - 4);
            uint64_t v666 = *(v659 - 3);
            uint64_t v667 = *(v659 - 2);
            uint64_t v668 = *(v659 - 1);
            uint64_t v670 = *v659;
            unint64_t v669 = v659[1];
            unint64_t v672 = v659[2];
            uint64_t v671 = v659[3];
            uint64_t v673 = *(void *)(*(void *)(v741.i64[0] + 40) + 16);
            uint64_t v674 = *(void *)(v673 + 128);
            if (*(void *)(v674 + 16))
            {
              v738.n128_u64[0] = v659[2];
              v739.n128_u64[0] = v669;
              *(void *)&long long v740 = v671;
              unint64_t v675 = sub_1B62C1A30((uint64_t)&type metadata for Selected);
              char v660 = (v676 & 1) != 0
                  && *(void *)(*(void *)(v673 + 24) + 16 * *(void *)(*(void *)(v674 + 56) + 8 * v675) + 32) == (void)&type metadata for Selected;
              uint64_t v671 = v740;
              unint64_t v669 = v739.n128_u64[0];
              unint64_t v672 = v738.n128_u64[0];
            }
            else
            {
              char v660 = 0;
            }
            v813[0] = v665;
            v813[1] = v666;
            v813[2] = v667;
            v813[3] = v668;
            v813[4] = v670;
            v813[5] = v669;
            v813[6] = v672;
            v813[7] = v671;
            char v814 = 0;
            sub_1B67A50FC(v811, (uint64_t)v813, v660, v744, v743);
            v659 += 8;
            v657 += 144;
            uint64_t v656 = v742 - 1;
          }
          while ((void)v742 != 1);
        }
      }
      else if (v742 != v740)
      {
        uint64_t v678 = v740 - v742;
        v679 = (uint64_t *)(v658 + ((void)v742 << 6) + 32);
        uint64_t v680 = v657 + 144 * v742;
        do
        {
          v815[5] = *(float32x4_t *)(v680 + 80);
          v815[6] = *(float32x4_t *)(v680 + 96);
          v816[0] = *(_OWORD *)(v680 + 112);
          *(_OWORD *)((char *)v816 + 12) = *(_OWORD *)(v680 + 124);
          v815[1] = *(float32x4_t *)(v680 + 16);
          v815[2] = *(float32x4_t *)(v680 + 32);
          v815[3] = *(float32x4_t *)(v680 + 48);
          v815[4] = *(float32x4_t *)(v680 + 64);
          v815[0] = *(float32x4_t *)v680;
          uint64_t v683 = *(v679 - 4);
          uint64_t v682 = *(v679 - 3);
          uint64_t v685 = *(v679 - 2);
          uint64_t v684 = *(v679 - 1);
          uint64_t v687 = *v679;
          unint64_t v686 = v679[1];
          uint64_t v689 = v679[2];
          unint64_t v688 = v679[3];
          uint64_t v690 = *(void *)(*(void *)(v741.i64[0] + 40) + 16);
          uint64_t v691 = *(void *)(v690 + 128);
          if (*(void *)(v691 + 16))
          {
            v738.n128_u64[0] = v679[3];
            v739.n128_u64[0] = v686;
            *(void *)&long long v740 = v684;
            *(void *)&long long v742 = v682;
            unint64_t v692 = sub_1B62C1A30((uint64_t)&type metadata for Selected);
            char v681 = (v693 & 1) != 0
                && *(void *)(*(void *)(v690 + 24) + 16 * *(void *)(*(void *)(v691 + 56) + 8 * v692) + 32) == (void)&type metadata for Selected;
            uint64_t v682 = v742;
            uint64_t v684 = v740;
            unint64_t v686 = v739.n128_u64[0];
            unint64_t v688 = v738.n128_u64[0];
          }
          else
          {
            char v681 = 0;
          }
          v817[0] = v683;
          v817[1] = v682;
          v817[2] = v685;
          v817[3] = v684;
          v817[4] = v687;
          v817[5] = v686;
          v817[6] = v689;
          v817[7] = v688;
          char v818 = 0;
          sub_1B67A50FC(v815, (uint64_t)v817, v681, v744, v743);
          v679 += 8;
          v680 += 144;
          --v678;
        }
        while (v678);
      }
      v643 = (void *)v735;
      unint64_t k = v745.n128_u64[0];
      sub_1B6345178((void *)v735, (unsigned __int16 **)v802, (uint64_t)v810);
      uint64_t v677 = v741.i64[0];
      sub_1B634507C((char *)v741.i64[0]);
      uint64_t v644 = v734;
      ecs_stack_allocator_pop_snapshot(v734);
      LOBYTE(v645) = v733;
      if (v733)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v677 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v677 + 376));
      }
      swift_release();
      unint64_t v646 = v737.n128_u64[0] + 1;
    }
    while (v737.n128_u64[0] + 1 != (void)v736);
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_bridgeObjectRelease();
  sub_1B62CA064((uint64_t)&v755);
  sub_1B632F1C4(v761, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B632F1C4(v761, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

uint64_t *sub_1B634B4E4(uint64_t *result)
{
  uint64_t v1 = *(uint64_t *)((char *)result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 272);
    uint64_t v3 = *(void *)(v2 + 24);
    if (v3 == 2) {
      goto LABEL_47;
    }
    if ((v3 & 0x100000000) == 0) {
      return result;
    }
    float v5 = *(float *)(v2 + 40);
    float v4 = *(float *)(v2 + 44);
    sub_1B6383E40((uint64_t)v65);
    swift_retain_n();
    swift_retain();
    uint64_t v6 = sub_1B6330D9C((uint64_t)v65, 1, 0, 2);
    sub_1B62C7BF4((uint64_t)v65);
    swift_release();
    char v7 = sub_1B633483C(v6, 2, 0, 2, 0, 0);
    uint64_t v8 = sub_1B6E328F8();
    sub_1B6388754(v8, v9, v7);
    uint64_t v10 = sub_1B6388ED8(0);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    if (!v10)
    {
      swift_release();
      swift_release();

      return (uint64_t *)swift_unknownObjectRelease();
    }
    unint64_t v49 = (void *)v10;
    uint64_t v50 = v7;
    uint64_t v11 = *(void *)(v1 + 272);
    sub_1B6383E40((uint64_t)v66);
    uint64_t v12 = *(void *)(*(void *)(*(void *)(v11 + 16) + 264) + 40);
    uint64_t v13 = *(void *)(v12 + 16);
    swift_retain();
    swift_retain();
    if (v13)
    {
      uint64_t v14 = v66[1];
      uint64_t v15 = v66[0];
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1B62B2CE0(v15, v14);
      if (v17)
      {
        uint64_t v52 = *(void *)(*(void *)(v12 + 56) + 8 * v16);
        swift_unknownObjectRetain();
      }
      else
      {
        uint64_t v52 = 0;
      }
      sub_1B62C7BF4((uint64_t)v66);
    }
    else
    {
      uint64_t v52 = 0;
    }
    swift_release();
    sub_1B62C7BF4((uint64_t)v66);
    swift_release();
    uint64_t v18 = *(void *)(v1 + 272);
    sub_1B6383E40((uint64_t)v67);
    uint64_t v19 = *(void *)(*(void *)(*(void *)(v18 + 16) + 264) + 40);
    uint64_t v20 = *(void *)(v19 + 16);
    swift_retain();
    swift_retain();
    if (v20)
    {
      uint64_t v21 = v67[1];
      uint64_t v22 = v67[0];
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1B62B2CE0(v22, v21);
      if (v24)
      {
        uint64_t v51 = *(void *)(*(void *)(v19 + 56) + 8 * v23);
        swift_unknownObjectRetain();
      }
      else
      {
        uint64_t v51 = 0;
      }
      sub_1B62C7BF4((uint64_t)v67);
    }
    else
    {
      uint64_t v51 = 0;
    }
    swift_release();
    sub_1B62C7BF4((uint64_t)v67);
    swift_release();
    float v25 = log2f(v5);
    float v26 = log2f(v4);
    int v48 = *(unsigned __int8 *)(v1 + 536);
    sub_1B6388B3C(v1 + 624, (uint64_t)v63);
    sub_1B6388B3C((uint64_t)v63, (uint64_t)v64);
    if (sub_1B6388C10(v64) == 1)
    {
LABEL_47:
      float32x4_t result = (uint64_t *)sub_1B6E32BE8();
      __break(1u);
      return result;
    }
    unint64_t v27 = v3 & 0x10000;
    unint64_t v28 = v3 & 0x1000000;
    uint64_t v29 = v64[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 104);
    swift_unknownObjectRetain();
    uint64_t v32 = v31(ObjectType, v29);
    swift_unknownObjectRelease();
    if (v32 == 1) {
      uint64_t v33 = 0;
    }
    else {
      uint64_t v33 = 5;
    }
    sub_1B638963C((uint64_t)v68);
    sub_1B62D853C(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
    uint64_t v34 = swift_allocObject();
    LODWORD(v35) = v48 ^ 1;
    *(_OWORD *)(v34 + 16) = xmmword_1B6E76900;
    *(_OWORD *)(v34 + 32) = xmmword_1B6EB9A20;
    *(unsigned char *)(v34 + 48) = 0;
    *(void *)(v34 + 64) = v28 >> 24;
    *(_OWORD *)(v34 + 72) = 0u;
    *(_OWORD *)(v34 + 88) = 0u;
    *(_OWORD *)(v34 + 104) = 0u;
    *(void *)(v34 + 120) = 0;
    *(unsigned char *)(v34 + 128) = 13;
    *(_OWORD *)(v34 + 144) = xmmword_1B6EB9A30;
    *(unsigned char *)(v34 + 160) = 0;
    *(void *)(v34 + 176) = COERCE_UNSIGNED_INT((float)(1 - (uint64_t)v25));
    *(_OWORD *)(v34 + 184) = 0u;
    *(_OWORD *)(v34 + 200) = 0u;
    *(_OWORD *)(v34 + 216) = 0u;
    *(_OWORD *)(v34 + 225) = 0u;
    *(_OWORD *)(v34 + 256) = xmmword_1B6EB9A40;
    *(unsigned char *)(v34 + 272) = 0;
    *(void *)(v34 + 288) = v27 >> 16;
    *(void *)(v34 + 344) = 0;
    *(_OWORD *)(v34 + 312) = 0u;
    *(_OWORD *)(v34 + 328) = 0u;
    *(_OWORD *)(v34 + 296) = 0u;
    *(unsigned char *)(v34 + 352) = 13;
    *(_OWORD *)(v34 + 368) = xmmword_1B6EB9A50;
    *(unsigned char *)(v34 + 384) = 0;
    *(void *)(v34 + 400) = COERCE_UNSIGNED_INT((float)(1 - (uint64_t)v26));
    if (v28) {
      uint64_t v35 = v35;
    }
    else {
      uint64_t v35 = 0;
    }
    *(_OWORD *)(v34 + 408) = 0uLL;
    *(_OWORD *)(v34 + 424) = 0uLL;
    *(_OWORD *)(v34 + 440) = 0uLL;
    *(_OWORD *)(v34 + 449) = 0uLL;
    *(void *)&v53[0] = 0xD000000000000010;
    *((void *)&v53[0] + 1) = 0x80000001B6F396F0;
    v53[1] = 0uLL;
    *(void *)long long v54 = MEMORY[0x1E4FBC860];
    *(_OWORD *)&v54[8] = xmmword_1B6EB9A60;
    uint64_t v55 = 0;
    *(void *)&long long v56 = 0;
    *((void *)&v56 + 1) = MEMORY[0x1E4FBC860];
    long long v57 = 0uLL;
    long long v58 = 0uLL;
    long long v59 = 0uLL;
    long long v60 = 0uLL;
    long long v61 = 0uLL;
    long long v62 = 0uLL;
    v74[1] = 0uLL;
    v74[0] = v53[0];
    memset(&v74[5], 0, 96);
    int v74[4] = v56;
    _OWORD v74[2] = *(_OWORD *)v54;
    v74[3] = 0xE900000000000065;
    *(_OWORD *)(v34 + 480) = xmmword_1B6EB9A70;
    *(unsigned char *)(v34 + 496) = 0;
    *(void *)(v34 + 512) = v35;
    *(_OWORD *)(v34 + 520) = 0uLL;
    *(_OWORD *)(v34 + 536) = 0uLL;
    *(_OWORD *)(v34 + 552) = 0uLL;
    *(void *)(v34 + 568) = 0;
    *(unsigned char *)(v34 + 576) = 13;
    v75[0] = 0;
    v75[1] = 0;
    v75[2] = 1;
    v75[3] = v33;
    v75[4] = 1;
    v75[5] = v33;
    __int16 v76 = 15;
    v77[0] = 0;
    v77[1] = 0;
    v77[2] = 2;
    memset(&v77[3], 0, 24);
    sub_1B62D5ED4((uint64_t *)v74, v68, 0, 0, v34, (uint64_t)v75, 3, (uint64_t)v77, (uint64_t)v69, 1, 1);
    sub_1B638A224((uint64_t *)v53);
    swift_retain();
    unint64_t v36 = sub_1B638A310((uint64_t)v69, 0);
    unint64_t v38 = v36;
    long long v39 = v37;
    if (v36 >= 3)
    {
      unint64_t v40 = swift_unknownObjectRetain();
      sub_1B630B7D8(v40, v39);
      swift_release();
      swift_getObjectType();
      objc_msgSend(v49, sel_setRenderPipelineState_, v38);
      objc_msgSend(v49, sel_setFragmentTexture_atIndex_, v52, 0);
      objc_msgSend(v49, sel_setFragmentTexture_atIndex_, v51, 1);
      if (v28)
      {
        sub_1B6383E40((uint64_t)v70);
        uint64_t v41 = sub_1B6330D9C((uint64_t)v70, 1, 0, 2);
        sub_1B62C7BF4((uint64_t)v70);
        objc_msgSend(v49, (SEL)&selRef_setFalloff_ + 3, v41, 2);
        if ((v48 & 1) == 0)
        {
          sub_1B6383E40((uint64_t)v71);
          uint64_t v42 = sub_1B6330D9C((uint64_t)v71, 1, 0, 2);
          sub_1B62C7BF4((uint64_t)v71);
          objc_msgSend(v49, (SEL)&selRef_setFalloff_ + 3, v42, 5);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
      }
      if (v27)
      {
        sub_1B6383E40((uint64_t)v72);
        uint64_t v43 = sub_1B6330D9C((uint64_t)v72, 1, 0, 2);
        sub_1B62C7BF4((uint64_t)v72);
        objc_msgSend(v49, (SEL)&selRef_setFalloff_ + 3, v43, 3);
        swift_unknownObjectRelease();
        BOOL v44 = (uint64_t)v26 == 1;
      }
      else
      {
        BOOL v44 = 1;
      }
      char v45 = v44;
      BOOL v46 = (uint64_t)v25 == 1 || v28 == 0;
      if (!v46 || (v45 & 1) == 0)
      {
        sub_1B6383E40((uint64_t)v73);
        uint64_t v47 = sub_1B6330D9C((uint64_t)v73, 1, 0, 2);
        sub_1B62C7BF4((uint64_t)v73);
        objc_msgSend(v49, (SEL)&selRef_setFalloff_ + 3, v47, 4);
        swift_unknownObjectRelease();
      }
      sub_1B6389C1C(1);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1B630B7D8(v36, v37);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
    }
    swift_unknownObjectRelease();
    return sub_1B638CE7C(v69);
  }
  return result;
}

uint64_t sub_1B634BDAC(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
  {
    MEMORY[0x1F4188790](result, a2);
    uint64_t v3 = *(void **)(v2 + 176);
    swift_retain();
    swift_retain();
    sub_1B636E6CC((uint64_t)&type metadata for ColorRampsState, (uint64_t)&off_1F0F681D8, v3, (void (*)(uint64_t))sub_1B63716C8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B634BE7C(uint64_t result)
{
  uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v2)
  {
    uint64_t v3 = result;
    long long v4 = *(_OWORD *)(v1 + 32);
    v28[0] = *(_OWORD *)(v1 + 16);
    v28[1] = v4;
    uint64_t v29 = *(void *)(v1 + 48);
    swift_retain();
    sub_1B62C9DA8(v3, (uint64_t)v28, 0x200000000, v5);
    sub_1B62D7CF8((uint64_t)v5, (uint64_t)&v6, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (v6)
    {
      uint64_t v17 = v6;
      int v18 = v7;
      char v19 = v8;
      uint64_t v20 = v9;
      char v21 = v10;
      uint64_t v22 = v11;
      uint64_t v23 = v12;
      long long v24 = v13;
      long long v25 = v14;
      uint64_t v26 = v15;
      uint64_t v27 = v16;
      swift_retain();
      swift_retain();
      sub_1B6D9A7E4((uint64_t)&v17, v3, v2);
      swift_release();
      swift_release();
      sub_1B632F1C4(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    sub_1B634BFD0(v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B634BFD0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  long long v4 = *(_OWORD *)(v1 + 176);
  long long v5 = *(_OWORD *)(v1 + 192);
  uint64_t v356 = *(void *)(v1 + 208);
  v355[0] = v4;
  v355[1] = v5;
  sub_1B62C9DA8(a1, (uint64_t)v355, 0x200000000, v296);
  sub_1B62D7CF8((uint64_t)v296, (uint64_t)v335, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v251 = v1;
  if (v335[0])
  {
    if (v337 >= 1)
    {
      uint64_t v6 = v336;
      if (v336)
      {
        uint64_t v7 = v335[5];
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v8 = 48 * v6;
        uint64_t v9 = (uint64_t *)(v7 + 40);
        do
        {
          uint64_t v14 = *v9;
          uint64_t v15 = *(os_unfair_lock_s **)(*v9 + 376);
          swift_retain();
          os_unfair_lock_lock(v15);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 344));
          int v16 = *(_DWORD *)(v14 + 24);
          swift_retain();
          uint64_t v331 = 0;
          memset(v330, 0, sizeof(v330));
          uint64_t v324 = 0;
          long long v323 = 0u;
          long long v322 = 0u;
          int v17 = sub_1B637F628(v16, (uint64_t)&type metadata for VertexLayoutCollection, (uint64_t)&off_1F0F8E6D8, 0, 0, (uint64_t)v330, (uint64_t)&v322);
          swift_release();
          sub_1B6386458((uint64_t)&v322);
          sub_1B6386458((uint64_t)v330);
          if (sub_1B63B4340(v17))
          {
            sub_1B66603E4(v17);
          }
          else
          {
            uint64_t v10 = *(void *)(v14 + 232);
            uint64_t v11 = *(void *)(v14 + 240);
            char v12 = *(unsigned char *)(v14 + 120);
            uint64_t v13 = *(unsigned int *)(v14 + 28);
            LOBYTE(v330[0]) = *(unsigned char *)(v14 + 32);
            sub_1B628EEF4(v10, v11, v17, v12, v13 | ((unint64_t)LOBYTE(v330[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 376));
          swift_release();
          v9 += 6;
          v8 -= 48;
        }
        while (v8);
        sub_1B632F1C4(v296, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        uint64_t v2 = v251;
      }
    }
    sub_1B632F1C4(v296, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  long long v18 = *(_OWORD *)(v2 + 152);
  v353[0] = *(_OWORD *)(v2 + 136);
  v353[1] = v18;
  uint64_t v354 = *(void *)(v2 + 168);
  sub_1B62C9DA8(v3, (uint64_t)v353, 0x200000000, v297);
  sub_1B62D7CF8((uint64_t)v297, (uint64_t)v330, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v330[0])
  {
    if (v334 >= 1)
    {
      uint64_t v19 = v333;
      if (v333)
      {
        uint64_t v20 = v332;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v21 = 48 * v19;
        uint64_t v22 = (uint64_t *)(v20 + 40);
        do
        {
          uint64_t v27 = *v22;
          unint64_t v28 = *(os_unfair_lock_s **)(*v22 + 376);
          swift_retain();
          os_unfair_lock_lock(v28);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v27 + 344));
          int v29 = *(_DWORD *)(v27 + 24);
          swift_retain();
          uint64_t v324 = 0;
          long long v323 = 0u;
          long long v322 = 0u;
          uint64_t v313 = 0;
          long long v311 = 0u;
          long long v312 = 0u;
          int v30 = sub_1B637F628(v29, (uint64_t)&type metadata for VertexLayoutCollection, (uint64_t)&off_1F0F8E6D8, 0, 0, (uint64_t)&v322, (uint64_t)&v311);
          swift_release();
          sub_1B6386458((uint64_t)&v311);
          sub_1B6386458((uint64_t)&v322);
          if (sub_1B63B4340(v30))
          {
            sub_1B66603E4(v30);
          }
          else
          {
            uint64_t v23 = *(void *)(v27 + 232);
            uint64_t v24 = *(void *)(v27 + 240);
            char v25 = *(unsigned char *)(v27 + 120);
            uint64_t v26 = *(unsigned int *)(v27 + 28);
            LOBYTE(v322) = *(unsigned char *)(v27 + 32);
            sub_1B628EEF4(v23, v24, v30, v25, v26 | ((unint64_t)v322 << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 376));
          swift_release();
          v22 += 6;
          v21 -= 48;
        }
        while (v21);
        sub_1B632F1C4(v297, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        uint64_t v2 = v251;
      }
    }
    sub_1B632F1C4(v297, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  long long v31 = *(_OWORD *)(v2 + 72);
  v351[0] = *(_OWORD *)(v2 + 56);
  v351[1] = v31;
  uint64_t v352 = *(void *)(v2 + 88);
  sub_1B62C9DA8(v3, (uint64_t)v351, 0x200000000, v298);
  sub_1B62D7CF8((uint64_t)v298, (uint64_t)&v322, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v269 = v3;
  if (!(void)v322 || v329 < 1 || (uint64_t v271 = v326) == 0)
  {
    uint64_t v34 = 0;
    goto LABEL_89;
  }
  uint64_t v32 = v328;
  int v284 = *(unsigned __int8 *)(v327 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v280 = v328[4];
  v338[0] = v322;
  v338[1] = v323;
  uint64_t v339 = v324;
  uint64_t v263 = (uint64_t)(v328 + 6);
  uint64_t v266 = v325;
  uint64_t v274 = (void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  sub_1B632F1C4(v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  do
  {
    uint64_t v277 = v33;
    uint64_t v35 = (unsigned int *)(v266 + 48 * v33);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    uint64_t v38 = *((void *)v35 + 3);
    uint64_t v289 = (uint64_t *)*((void *)v35 + 2);
    uint64_t v40 = *((void *)v35 + 4);
    uint64_t v39 = *((void *)v35 + 5);
    if (v284)
    {
      uint64_t v41 = *(os_unfair_lock_s **)(v39 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v41);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v39 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v280);
    sub_1B62D7CF8(v263, (uint64_t)v350, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v42 = v32[4];
    uint64_t v43 = *(void *)(*(void *)(*(void *)(*(void *)(v39 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v32[6] = ecs_stack_allocator_allocate(v42, 48 * v43, 8);
    v32[7] = v43;
    v32[9] = 0;
    v32[10] = 0;
    uint64_t v32[8] = 0;
    swift_release();
    uint64_t v44 = sub_1B62C9024((uint64_t)&type metadata for ParticleMeshRenderer, (uint64_t)&off_1F0F818E0, v289, v38, v40, (uint64_t)v32);
    if (v289)
    {
      char v45 = v274;
      if (!v40) {
        goto LABEL_33;
      }
      uint64_t v46 = 0;
      uint64_t v3 = v269;
      do
      {
        uint64_t v51 = (int *)(v44 + 40 * v46);
        int v52 = *v51;
        int v53 = v51[1];
        BOOL v54 = v52 == -1 && v53 == 0;
        if (!v54 && (v52 & 0x80000000) == 0 && v45[1] > v52)
        {
          uint64_t v55 = *v45 + 12 * v52;
          if (v53 == -1 || *(_DWORD *)(v55 + 8) == v53)
          {
            uint64_t v57 = *(void *)(*(void *)(v3 + 136) + 8 * *(int *)(*v45 + 12 * v52) + 32);
            uint64_t v58 = *(void *)(v57 + 48);
            uint64_t v59 = *(void *)(v58 + 16);
            if (v59)
            {
              uint64_t v60 = *(__int16 *)(v55 + 4);
              long long v61 = (void *)(v58 + 56);
              while ((ValueMetadata *)*(v61 - 3) != &type metadata for MeshModel)
              {
                v61 += 5;
                if (!--v59) {
                  goto LABEL_38;
                }
              }
              uint64_t v62 = *(void *)(*(void *)(v57 + 128) + *v61 + 16 * v60);
              if (v62)
              {
                uint64_t v63 = *(void *)(v62 + 24);
                if (v63)
                {
                  uint64_t v64 = *(void *)(v39 + 48);
                  uint64_t v65 = *(void *)(v64 + 16);
                  if (v65)
                  {
                    uint64_t v66 = (void *)(v64 + 56);
                    while ((ValueMetadata *)*(v66 - 3) != &type metadata for VertexLayoutCollection)
                    {
                      v66 += 5;
                      if (!--v65) {
                        goto LABEL_38;
                      }
                    }
                    uint64_t v292 = v34;
                    uint64_t v48 = *(void *)(v39 + 128) + *v66;
                    uint64_t v49 = 8 * v289[v46];
                    uint64_t v257 = *(void *)(v62 + 16);
                    sub_1B62D8880(0, &qword_1E9DD6C98, (uint64_t)&type metadata for VertexLayout, MEMORY[0x1E4FBBE00]);
                    uint64_t v50 = swift_allocObject();
                    *(_OWORD *)(v50 + 16) = xmmword_1B6E77050;
                    *(void *)(v50 + 32) = v257;
                    *(void *)(v50 + 40) = v63;
                    uint64_t v259 = v50;
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_bridgeObjectRelease();
                    *(void *)(v48 + v49) = v259;
                    uint64_t v3 = v269;
                    uint64_t v34 = v292;
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_release();
                    char v45 = v274;
                  }
                }
              }
            }
          }
        }
LABEL_38:
        ++v46;
      }
      while (v46 != v40);
    }
    else
    {
      uint64_t v47 = v274;
      if (v36 == v37)
      {
LABEL_33:
        uint64_t v3 = v269;
        goto LABEL_34;
      }
      uint64_t v3 = v269;
      do
      {
        uint64_t v69 = (int *)(v44 + 40 * v36);
        int v70 = *v69;
        int v71 = v69[1];
        BOOL v72 = v70 == -1 && v71 == 0;
        if (!v72 && (v70 & 0x80000000) == 0 && v47[1] > v70)
        {
          uint64_t v73 = *v47 + 12 * v70;
          if (v71 == -1 || *(_DWORD *)(v73 + 8) == v71)
          {
            uint64_t v75 = *(void *)(*(void *)(v3 + 136) + 8 * *(int *)(*v47 + 12 * v70) + 32);
            uint64_t v76 = *(void *)(v75 + 48);
            uint64_t v77 = *(void *)(v76 + 16);
            if (v77)
            {
              uint64_t v78 = *(__int16 *)(v73 + 4);
              uint64_t v79 = (void *)(v76 + 56);
              while ((ValueMetadata *)*(v79 - 3) != &type metadata for MeshModel)
              {
                v79 += 5;
                if (!--v77) {
                  goto LABEL_63;
                }
              }
              uint64_t v80 = *(void *)(*(void *)(v75 + 128) + *v79 + 16 * v78);
              if (v80)
              {
                uint64_t v81 = *(void *)(v80 + 24);
                if (v81)
                {
                  uint64_t v82 = *(void *)(v39 + 48);
                  uint64_t v83 = *(void *)(v82 + 16);
                  if (v83)
                  {
                    unint64_t v84 = (void *)(v82 + 56);
                    while ((ValueMetadata *)*(v84 - 3) != &type metadata for VertexLayoutCollection)
                    {
                      v84 += 5;
                      if (!--v83) {
                        goto LABEL_63;
                      }
                    }
                    uint64_t v260 = *(void *)(v39 + 128) + *v84;
                    uint64_t v67 = *(void *)(v80 + 16);
                    sub_1B62D8880(0, &qword_1E9DD6C98, (uint64_t)&type metadata for VertexLayout, MEMORY[0x1E4FBBE00]);
                    uint64_t v68 = swift_allocObject();
                    *(_OWORD *)(v68 + 16) = xmmword_1B6E77050;
                    *(void *)(v68 + 32) = v67;
                    *(void *)(v68 + 40) = v81;
                    swift_retain_n();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_bridgeObjectRelease();
                    *(void *)(v260 + 8 * v36) = v68;
                    uint64_t v3 = v269;
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_release();
                    uint64_t v47 = v274;
                  }
                }
              }
            }
          }
        }
LABEL_63:
        ++v36;
      }
      while (v36 != v37);
    }
LABEL_34:
    sub_1B6345178(v32, (unsigned __int16 **)v338, (uint64_t)v350);
    sub_1B634507C((char *)v39);
    ecs_stack_allocator_pop_snapshot(v280);
    if (v284)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 376));
    }
    swift_release();
    uint64_t v33 = v277 + 1;
  }
  while (v277 + 1 != v271);
  sub_1B632F1C4(v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B632F1C4(v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  uint64_t v2 = v251;
LABEL_89:
  unint64_t v288 = sub_1B634DE14(MEMORY[0x1E4FBC860]);
  long long v85 = *(_OWORD *)(v2 + 112);
  v348[0] = *(_OWORD *)(v2 + 96);
  v348[1] = v85;
  uint64_t v349 = *(void *)(v2 + 128);
  sub_1B62C9DA8(v3, (uint64_t)v348, 0x200000000, v299);
  sub_1B62D7CF8((uint64_t)v299, (uint64_t)&v311, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if ((void)v311)
  {
    long long v319 = v311;
    long long v320 = v312;
    uint64_t v321 = v313;
    if (v318 >= 1)
    {
      uint64_t v267 = v315;
      if (v315)
      {
        uint64_t v293 = v34;
        uint64_t v264 = v314;
        int v86 = *(unsigned __int8 *)(v316 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v275 = v317[4];
        uint64_t v278 = v317;
        long long v256 = (void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        unint64_t v258 = v317 + 8;
        uint64_t v261 = (uint64_t)(v317 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v87 = 0;
        int v262 = v86;
        do
        {
          uint64_t v272 = v87;
          uint64_t v88 = (unsigned int *)(v264 + 48 * v87);
          uint64_t v89 = *v88;
          uint64_t v90 = v88[1];
          uint64_t v91 = (uint64_t *)*((void *)v88 + 2);
          uint64_t v92 = *((void *)v88 + 3);
          uint64_t v94 = *((void *)v88 + 4);
          uint64_t v93 = *((void *)v88 + 5);
          if (v86)
          {
            uint64_t v95 = v3;
            unint64_t v96 = *(os_unfair_lock_s **)(v93 + 376);
            swift_retain();
            os_unfair_lock_lock(v96);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v93 + 344));
          }
          else
          {
            uint64_t v95 = v3;
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v275);
          sub_1B62D7CF8(v261, (uint64_t)v347, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v290 = v93;
          uint64_t v97 = v278[4];
          uint64_t v98 = *(void *)(*(void *)(*(void *)(*(void *)(v93 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          uint64_t v99 = v97;
          uint64_t v100 = v290;
          v278[6] = ecs_stack_allocator_allocate(v99, 48 * v98, 8);
          v278[7] = v98;
          v258[1] = 0;
          _OWORD v258[2] = 0;
          *unint64_t v258 = 0;
          swift_release();
          uint64_t v101 = sub_1B62C9024((uint64_t)&type metadata for ModelRenderer, (uint64_t)&off_1F0F60288, v91, v92, v94, (uint64_t)v278);
          if (v91)
          {
            if (v94)
            {
              uint64_t v102 = 0;
              uint64_t v3 = v95;
              uint64_t v103 = v256;
              do
              {
                char v105 = (int *)(v101 + 16 * v102);
                int v106 = *v105;
                int v107 = v105[1];
                BOOL v108 = v106 == -1 && v107 == 0;
                if (!v108 && (v106 & 0x80000000) == 0 && v103[1] > v106)
                {
                  uint64_t v109 = *v103 + 12 * v106;
                  if (v107 == -1 || *(_DWORD *)(v109 + 8) == v107)
                  {
                    uint64_t v111 = *(void *)(*(void *)(v3 + 136) + 8 * *(int *)(*v103 + 12 * v106) + 32);
                    uint64_t v112 = *(void *)(v111 + 48);
                    uint64_t v113 = *(void *)(v112 + 16);
                    if (v113)
                    {
                      uint64_t v114 = *(__int16 *)(v109 + 4);
                      uint64_t v115 = (void *)(v112 + 56);
                      while ((ValueMetadata *)*(v115 - 3) != &type metadata for MeshModel)
                      {
                        v115 += 5;
                        if (!--v113) {
                          goto LABEL_106;
                        }
                      }
                      unint64_t v116 = (uint64_t *)(*(void *)(v111 + 128) + *v115 + 16 * v114);
                      uint64_t v117 = *v116;
                      if (*v116)
                      {
                        uint64_t v285 = *(void *)(v117 + 24);
                        if (v285)
                        {
                          uint64_t v118 = v116[1];
                          uint64_t v281 = *(void *)(v117 + 16);
                          uint64_t v119 = *(void *)(v118 + 16);
                          uint64_t v252 = v118;
                          uint64_t v254 = v101;
                          if (v119)
                          {
                            swift_bridgeObjectRetain_n();
                            swift_retain_n();
                            swift_retain();
                            uint64_t v120 = *(void *)(v118 + 32);
                            swift_retain();
                            sub_1B62C6A50(0);
                            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                            v300[0] = v288;
                            unint64_t v122 = sub_1B62BE38C(v120);
                            char v124 = v123;
                            uint64_t v125 = v288[2] + ((v123 & 1) == 0);
                            if (v288[3] >= v125)
                            {
                              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                                sub_1B6AD678C();
                              }
                            }
                            else
                            {
                              sub_1B6AC69C0(v125, isUniquelyReferenced_nonNull_native);
                              uint64_t v126 = sub_1B62BE38C(v120);
                              if ((v124 & 1) != (v127 & 1)) {
                                goto LABEL_248;
                              }
                              unint64_t v122 = v126;
                            }
                            long long v129 = (void *)v300[0];
                            swift_bridgeObjectRelease();
                            if ((v124 & 1) == 0)
                            {
                              v129[(v122 >> 6) + 8] |= 1 << v122;
                              uint64_t v130 = 8 * v122;
                              *(void *)(v129[6] + v130) = v120;
                              *(void *)(v129[7] + v130) = MEMORY[0x1E4FBC870];
                              ++v129[2];
                            }
                            swift_bridgeObjectRetain();
                            long long v131 = v129;
                            swift_bridgeObjectRelease();
                            sub_1B67EAFEC((uint64_t *)v301, v281, v285);
                            swift_release();
                            uint64_t v132 = v119 - 1;
                            if (v119 != 1)
                            {
                              long long v144 = (uint64_t *)(v252 + 40);
                              do
                              {
                                uint64_t v145 = *v144;
                                uint64_t v146 = *v144;
                                swift_retain();
                                sub_1B62C6A50((uint64_t)sub_1B67C9BF4);
                                char v147 = swift_isUniquelyReferenced_nonNull_native();
                                v300[0] = v131;
                                unint64_t v148 = sub_1B62BE38C(v146);
                                char v150 = v149;
                                uint64_t v151 = v131[2] + ((v149 & 1) == 0);
                                if (v131[3] >= v151)
                                {
                                  if ((v147 & 1) == 0) {
                                    sub_1B6AD678C();
                                  }
                                }
                                else
                                {
                                  sub_1B6AC69C0(v151, v147);
                                  uint64_t v152 = sub_1B62BE38C(v146);
                                  if ((v150 & 1) != (v153 & 1)) {
                                    goto LABEL_248;
                                  }
                                  unint64_t v148 = v152;
                                }
                                long long v131 = (void *)v300[0];
                                swift_bridgeObjectRelease();
                                if ((v150 & 1) == 0)
                                {
                                  v131[(v148 >> 6) + 8] |= 1 << v148;
                                  uint64_t v154 = 8 * v148;
                                  *(void *)(v131[6] + v154) = v145;
                                  *(void *)(v131[7] + v154) = MEMORY[0x1E4FBC870];
                                  ++v131[2];
                                }
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                sub_1B67EAFEC((uint64_t *)v301, v281, v285);
                                swift_release();
                                ++v144;
                                --v132;
                              }
                              while (v132);
                            }
                            unint64_t v288 = v131;
                            swift_bridgeObjectRelease();
                            char v128 = sub_1B67C9BF4;
                            uint64_t v3 = v269;
                            uint64_t v103 = v256;
                            uint64_t v100 = v290;
                          }
                          else
                          {
                            swift_retain_n();
                            swift_bridgeObjectRetain();
                            swift_retain();
                            char v128 = 0;
                          }
                          uint64_t v133 = v101 + 16 * v102;
                          uint64_t v134 = *(unsigned int *)(v133 + 8);
                          uint64_t v135 = *(unsigned int *)(v133 + 12);
                          if (__PAIR64__(v135, v134) == 0xFFFFFFFF)
                          {
                            swift_bridgeObjectRelease();
                            swift_release_n();
                            swift_release();
                            sub_1B62C6A50((uint64_t)v128);
                          }
                          else
                          {
                            uint64_t v250 = (uint64_t)v128;
                            swift_retain();
                            char v136 = swift_isUniquelyReferenced_nonNull_native();
                            *(void *)&v301[0] = v288;
                            uint64_t v137 = v134 | (v135 << 32);
                            unint64_t v138 = sub_1B62BE38C(v137);
                            char v140 = v139;
                            uint64_t v141 = v288[2] + ((v139 & 1) == 0);
                            if (v288[3] >= v141)
                            {
                              if ((v136 & 1) == 0) {
                                sub_1B6AD678C();
                              }
                            }
                            else
                            {
                              sub_1B6AC69C0(v141, v136);
                              uint64_t v142 = sub_1B62BE38C(v137);
                              if ((v140 & 1) != (v143 & 1)) {
                                goto LABEL_248;
                              }
                              unint64_t v138 = v142;
                            }
                            uint64_t v155 = *(void **)&v301[0];
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRetain();
                            if ((v140 & 1) == 0) {
                              sub_1B636A55C(v138, v137, MEMORY[0x1E4FBC870], v155);
                            }
                            unint64_t v288 = v155;
                            swift_bridgeObjectRelease();
                            sub_1B67EAFEC((uint64_t *)v301, v281, v285);
                            swift_bridgeObjectRelease();
                            swift_release_n();
                            swift_release();
                            swift_release();
                            sub_1B62C6A50(v250);
                            uint64_t v100 = v290;
                          }
                          uint64_t v101 = v254;
                        }
                      }
                    }
                  }
                }
LABEL_106:
                ++v102;
              }
              while (v102 != v94);
            }
            else
            {
              uint64_t v3 = v95;
            }
          }
          else
          {
            uint64_t v3 = v95;
            if (v89 != v90)
            {
              uint64_t v104 = v256;
              do
              {
                int v156 = (int *)(v101 + 16 * v89);
                int v157 = *v156;
                int v158 = v156[1];
                BOOL v159 = v157 == -1 && v158 == 0;
                if (!v159 && (v157 & 0x80000000) == 0 && v104[1] > v157)
                {
                  uint64_t v160 = *v104 + 12 * v157;
                  if (v158 == -1 || *(_DWORD *)(v160 + 8) == v158)
                  {
                    uint64_t v162 = *(void *)(*(void *)(v3 + 136) + 8 * *(int *)(*v104 + 12 * v157) + 32);
                    uint64_t v163 = *(void *)(v162 + 48);
                    uint64_t v164 = *(void *)(v163 + 16);
                    if (v164)
                    {
                      uint64_t v165 = *(__int16 *)(v160 + 4);
                      uint64_t v166 = (void *)(v163 + 56);
                      while ((ValueMetadata *)*(v166 - 3) != &type metadata for MeshModel)
                      {
                        v166 += 5;
                        if (!--v164) {
                          goto LABEL_156;
                        }
                      }
                      unint64_t v167 = (uint64_t *)(*(void *)(v162 + 128) + *v166 + 16 * v165);
                      uint64_t v168 = *v167;
                      if (*v167 && *(void *)(v168 + 24))
                      {
                        uint64_t v169 = v167[1];
                        uint64_t v282 = *(void *)(v168 + 16);
                        uint64_t v286 = *(void *)(v168 + 24);
                        uint64_t v170 = *(void *)(v169 + 16);
                        uint64_t v253 = v169;
                        uint64_t v255 = v101;
                        if (v170)
                        {
                          uint64_t v171 = v169;
                          swift_bridgeObjectRetain_n();
                          swift_retain_n();
                          swift_retain();
                          uint64_t v172 = *(void *)(v171 + 32);
                          swift_retain();
                          sub_1B62C6A50(0);
                          char v173 = swift_isUniquelyReferenced_nonNull_native();
                          v300[0] = v288;
                          unint64_t v174 = sub_1B62BE38C(v172);
                          char v176 = v175;
                          uint64_t v177 = v288[2] + ((v175 & 1) == 0);
                          if (v288[3] >= v177)
                          {
                            if ((v173 & 1) == 0) {
                              sub_1B6AD678C();
                            }
                          }
                          else
                          {
                            sub_1B6AC69C0(v177, v173);
                            uint64_t v178 = sub_1B62BE38C(v172);
                            if ((v176 & 1) != (v179 & 1)) {
                              goto LABEL_248;
                            }
                            unint64_t v174 = v178;
                          }
                          uint64_t v181 = (void *)v300[0];
                          swift_bridgeObjectRelease();
                          if ((v176 & 1) == 0)
                          {
                            v181[(v174 >> 6) + 8] |= 1 << v174;
                            uint64_t v182 = 8 * v174;
                            *(void *)(v181[6] + v182) = v172;
                            *(void *)(v181[7] + v182) = MEMORY[0x1E4FBC870];
                            ++v181[2];
                          }
                          swift_bridgeObjectRetain();
                          float32x4_t v183 = v181;
                          swift_bridgeObjectRelease();
                          sub_1B67EAFEC((uint64_t *)v301, v282, v286);
                          swift_release();
                          uint64_t v184 = v170 - 1;
                          if (v170 != 1)
                          {
                            long long v194 = (uint64_t *)(v253 + 40);
                            do
                            {
                              uint64_t v195 = *v194;
                              uint64_t v196 = *v194;
                              swift_retain();
                              sub_1B62C6A50((uint64_t)sub_1B67C9BF4);
                              char v197 = swift_isUniquelyReferenced_nonNull_native();
                              v300[0] = v183;
                              unint64_t v198 = sub_1B62BE38C(v196);
                              char v200 = v199;
                              uint64_t v201 = v183[2] + ((v199 & 1) == 0);
                              if (v183[3] >= v201)
                              {
                                if ((v197 & 1) == 0) {
                                  sub_1B6AD678C();
                                }
                              }
                              else
                              {
                                sub_1B6AC69C0(v201, v197);
                                uint64_t v202 = sub_1B62BE38C(v196);
                                if ((v200 & 1) != (v203 & 1)) {
                                  goto LABEL_248;
                                }
                                unint64_t v198 = v202;
                              }
                              float32x4_t v183 = (void *)v300[0];
                              swift_bridgeObjectRelease();
                              if ((v200 & 1) == 0)
                              {
                                v183[(v198 >> 6) + 8] |= 1 << v198;
                                uint64_t v204 = 8 * v198;
                                *(void *)(v183[6] + v204) = v195;
                                *(void *)(v183[7] + v204) = MEMORY[0x1E4FBC870];
                                ++v183[2];
                              }
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              sub_1B67EAFEC((uint64_t *)v301, v282, v286);
                              swift_release();
                              ++v194;
                              --v184;
                            }
                            while (v184);
                          }
                          unint64_t v288 = v183;
                          swift_bridgeObjectRelease();
                          uint64_t v180 = sub_1B67C9BF4;
                          uint64_t v3 = v269;
                          uint64_t v104 = v256;
                          uint64_t v100 = v290;
                        }
                        else
                        {
                          swift_retain_n();
                          swift_bridgeObjectRetain();
                          swift_retain();
                          uint64_t v180 = 0;
                        }
                        uint64_t v185 = *(void *)(v101 + 16 * v89 + 8);
                        uint64_t v186 = v185;
                        uint64_t v187 = HIDWORD(v185);
                        if (v185 == 0xFFFFFFFFLL)
                        {
                          swift_bridgeObjectRelease();
                          swift_release_n();
                          swift_release();
                          sub_1B62C6A50((uint64_t)v180);
                        }
                        else
                        {
                          uint64_t v248 = v185;
                          swift_retain();
                          char v249 = swift_isUniquelyReferenced_nonNull_native();
                          *(void *)&v301[0] = v288;
                          unint64_t v188 = sub_1B62BE38C(v186 | (v187 << 32));
                          char v190 = v189;
                          uint64_t v191 = v288[2] + ((v189 & 1) == 0);
                          if (v288[3] >= v191)
                          {
                            if ((v249 & 1) == 0) {
                              sub_1B6AD678C();
                            }
                          }
                          else
                          {
                            sub_1B6AC69C0(v191, v249);
                            uint64_t v192 = sub_1B62BE38C(v186 | (v187 << 32));
                            if ((v190 & 1) != (v193 & 1)) {
                              goto LABEL_248;
                            }
                            unint64_t v188 = v192;
                          }
                          BOOL v205 = *(void **)&v301[0];
                          swift_bridgeObjectRelease();
                          if ((v190 & 1) == 0)
                          {
                            v205[(v188 >> 6) + 8] |= 1 << v188;
                            uint64_t v206 = 8 * v188;
                            *(void *)(v205[6] + v206) = v248;
                            *(void *)(v205[7] + v206) = MEMORY[0x1E4FBC870];
                            ++v205[2];
                          }
                          swift_bridgeObjectRetain();
                          unint64_t v288 = v205;
                          swift_bridgeObjectRelease();
                          sub_1B67EAFEC((uint64_t *)v301, v282, v286);
                          swift_bridgeObjectRelease();
                          swift_release_n();
                          swift_release();
                          swift_release();
                          sub_1B62C6A50((uint64_t)v180);
                          uint64_t v100 = v290;
                        }
                        uint64_t v101 = v255;
                      }
                    }
                  }
                }
LABEL_156:
                ++v89;
              }
              while (v89 != v90);
            }
          }
          v340[0] = v319;
          v340[1] = v320;
          uint64_t v341 = v321;
          sub_1B6345178(v278, (unsigned __int16 **)v340, (uint64_t)v347);
          sub_1B634507C((char *)v100);
          ecs_stack_allocator_pop_snapshot(v275);
          int v86 = v262;
          if (v262)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v100 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v100 + 376));
          }
          swift_release();
          uint64_t v87 = v272 + 1;
        }
        while (v272 + 1 != v267);
        sub_1B632F1C4(v299, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        uint64_t v2 = v251;
        uint64_t v34 = v293;
      }
    }
    sub_1B632F1C4(v299, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  long long v207 = *(_OWORD *)(v2 + 232);
  v345[0] = *(_OWORD *)(v2 + 216);
  v345[1] = v207;
  uint64_t v346 = *(void *)(v2 + 248);
  sub_1B62C9DA8(v3, (uint64_t)v345, 0x200000000, v300);
  sub_1B62D7CF8((uint64_t)v300, (uint64_t)v301, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v301[0])
  {
    unint64_t v245 = v298;
LABEL_246:
    sub_1B632F1C4(v245, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    return swift_bridgeObjectRelease();
  }
  long long v308 = v301[0];
  long long v309 = v301[1];
  uint64_t v310 = v302;
  if (v307 < 1)
  {
    long long v246 = v298;
LABEL_245:
    sub_1B632F1C4(v246, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    unint64_t v245 = v300;
    goto LABEL_246;
  }
  uint64_t v273 = v304;
  if (!v304)
  {
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_244:
    sub_1B632F1C4(v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    long long v246 = v300;
    goto LABEL_245;
  }
  uint64_t v270 = v303;
  uint64_t v283 = v306[4];
  long long v287 = v306;
  char v279 = *(unsigned char *)(v305 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v265 = v306 + 8;
  uint64_t v268 = (uint64_t)(v306 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v208 = 0;
  uint64_t v209 = v288;
  while (1)
  {
    uint64_t v276 = v208;
    float32x4_t v210 = (unsigned int *)(v270 + 48 * v208);
    uint64_t v211 = *v210;
    uint64_t v291 = v210[1];
    uint64_t v294 = v34;
    uint64_t v213 = (uint64_t *)*((void *)v210 + 2);
    uint64_t v212 = *((void *)v210 + 3);
    uint64_t v214 = *((void *)v210 + 4);
    uint64_t v215 = *((void *)v210 + 5);
    if (v279)
    {
      unint64_t v216 = *(os_unfair_lock_s **)(v215 + 376);
      swift_retain();
      os_unfair_lock_lock(v216);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v215 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v283);
    sub_1B62D7CF8(v268, (uint64_t)v344, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v217 = v287[4];
    uint64_t v218 = *(void *)(*(void *)(*(void *)(*(void *)(v215 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v287[6] = ecs_stack_allocator_allocate(v217, 48 * v218, 8);
    v287[7] = v218;
    v265[1] = 0;
    v265[2] = 0;
    *uint64_t v265 = 0;
    swift_release();
    sub_1B62C9024((uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, v213, v212, v214, (uint64_t)v287);
    uint64_t v219 = (void *)sub_1B62C9024((uint64_t)&type metadata for VertexLayoutCollection, (uint64_t)&off_1F0F8E6D8, v213, v212, v214, (uint64_t)v287);
    if (!v213) {
      break;
    }
    uint64_t v220 = (void *)&unk_1EB97E000;
    if (v214)
    {
      do
      {
        uint64_t v225 = *v213++;
        uint64_t v224 = v225;
        uint64_t v226 = swift_retain();
        if (*(unsigned char *)(v215 + 184)) {
          goto LABEL_247;
        }
        unsigned int v227 = *(_DWORD *)(*(void *)(v215 + 168) + 4 * v224);
        uint64_t v228 = *(unsigned int *)(*(void *)(v226 + v220[142]) + 12 * (int)v227 + 8);
        swift_release();
        if (v209[2])
        {
          uint64_t v229 = sub_1B62BE38C(v227 | (unint64_t)(v228 << 32));
          if (v230)
          {
            uint64_t v231 = *(void *)(v209[7] + 8 * v229);
            uint64_t v232 = *(void *)(v231 + 16);
            if (v232)
            {
              sub_1B62D8880(0, &qword_1E9DD6C98, (uint64_t)&type metadata for VertexLayout, MEMORY[0x1E4FBBE00]);
              uint64_t v221 = (void *)swift_allocObject();
              int64_t v222 = j__malloc_size(v221);
              uint64_t v223 = v222 - 32;
              if (v222 < 32) {
                uint64_t v223 = v222 - 17;
              }
              _OWORD v221[2] = v232;
              v221[3] = 2 * (v223 >> 4);
              sub_1B66440FC(&v295, v221 + 4, v232, v231);
              swift_bridgeObjectRetain_n();
              uint64_t v220 = &unk_1EB97E000;
              uint64_t v209 = v288;
              sub_1B62BB588();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v221 = (void *)MEMORY[0x1E4FBC860];
            }
            *uint64_t v219 = v221;
            swift_bridgeObjectRelease();
          }
        }
        ++v219;
      }
      while (--v214);
    }
LABEL_229:
    v342[0] = v308;
    v342[1] = v309;
    uint64_t v343 = v310;
    uint64_t v34 = v294;
    sub_1B6345178(v287, (unsigned __int16 **)v342, (uint64_t)v344);
    sub_1B634507C((char *)v215);
    ecs_stack_allocator_pop_snapshot(v283);
    if (v279)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v215 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v215 + 376));
    }
    swift_release();
    uint64_t v208 = v276 + 1;
    if (v276 + 1 == v273) {
      goto LABEL_244;
    }
  }
  uint64_t v233 = v291;
  char v234 = &unk_1EB97E000;
  if (v211 == v291) {
    goto LABEL_229;
  }
  while (1)
  {
    uint64_t v236 = swift_retain();
    if (*(unsigned char *)(v215 + 184)) {
      break;
    }
    unsigned int v237 = *(_DWORD *)(*(void *)(v215 + 168) + 4 * v211);
    uint64_t v238 = *(unsigned int *)(*(void *)(v236 + v234[142]) + 12 * (int)v237 + 8);
    swift_release();
    if (v209[2])
    {
      uint64_t v239 = sub_1B62BE38C(v237 | (unint64_t)(v238 << 32));
      if (v240)
      {
        uint64_t v241 = *(void *)(v209[7] + 8 * v239);
        uint64_t v242 = *(void *)(v241 + 16);
        if (v242)
        {
          sub_1B62D8880(0, &qword_1E9DD6C98, (uint64_t)&type metadata for VertexLayout, MEMORY[0x1E4FBBE00]);
          unint64_t v235 = (void *)swift_allocObject();
          int64_t v243 = j__malloc_size(v235);
          uint64_t v244 = v243 - 32;
          if (v243 < 32) {
            uint64_t v244 = v243 - 17;
          }
          _OWORD v235[2] = v242;
          v235[3] = 2 * (v244 >> 4);
          sub_1B66440FC(&v295, v235 + 4, v242, v241);
          swift_bridgeObjectRetain_n();
          char v234 = (void *)&unk_1EB97E000;
          uint64_t v209 = v288;
          sub_1B62BB588();
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v235 = (void *)MEMORY[0x1E4FBC860];
        }
        v219[v211] = v235;
        swift_bridgeObjectRelease();
        uint64_t v233 = v291;
      }
    }
    if (v233 == ++v211) {
      goto LABEL_229;
    }
  }
LABEL_247:
  sub_1B6E32BE8();
  __break(1u);
LABEL_248:
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

void *sub_1B634DE14(uint64_t a1)
{
  return sub_1B634DE2C(a1, (void (*)(void))sub_1B67F8DD8);
}

void *sub_1B634DE2C(uint64_t a1, void (*a2)(void))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  a2(0);
  long long v4 = (void *)sub_1B6E32C58();
  long long v5 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v6 = *v5;
    uint64_t v7 = *(v5 - 1);
    unint64_t v8 = sub_1B62BE38C(v7);
    *(void *)((char *)v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
    uint64_t v9 = 8 * v8;
    *(void *)(v4[6] + v9) = v7;
    *(void *)(v4[7] + v9) = v6;
    ++v4[2];
    swift_bridgeObjectRetain();
    v5 += 2;
    --v2;
  }
  while (v2);
  return v4;
}

uint64_t *sub_1B634DF00(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t result = *(uint64_t **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (result)
  {
    long long v4 = *(_OWORD *)(v1 + 32);
    v182[0] = *(_OWORD *)(v1 + 16);
    v182[1] = v4;
    uint64_t v183 = *(void *)(v1 + 48);
    long long v129 = result;
    swift_retain();
    sub_1B62C9DA8(v2, (uint64_t)v182, 0x200000000, v144);
    sub_1B62D7A90((uint64_t)v144, (uint64_t)v156, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    uint64_t v134 = v2;
    if (v156[0])
    {
      if (v158 >= 1)
      {
        uint64_t v5 = v157;
        if (v157)
        {
          uint64_t v6 = v156[5];
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v7 = 48 * v5;
          unint64_t v8 = (uint64_t *)(v6 + 40);
          do
          {
            uint64_t v13 = *v8;
            uint64_t v14 = *(os_unfair_lock_s **)(*v8 + 376);
            swift_retain();
            os_unfair_lock_lock(v14);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
            int v15 = *(_DWORD *)(v13 + 24);
            swift_retain();
            *(void *)&long long v175 = 0;
            long long v174 = 0u;
            long long v173 = 0u;
            *(void *)&long long v168 = 0;
            long long v166 = 0u;
            long long v167 = 0u;
            int v16 = sub_1B637F628(v15, (uint64_t)&type metadata for MaterialRuntime, (uint64_t)&off_1F0F68E78, 0, 0, (uint64_t)&v173, (uint64_t)&v166);
            swift_release();
            sub_1B6386458((uint64_t)&v166);
            sub_1B6386458((uint64_t)&v173);
            if (sub_1B63B4340(v16))
            {
              sub_1B66603E4(v16);
            }
            else
            {
              uint64_t v9 = *(void *)(v13 + 232);
              uint64_t v10 = *(void *)(v13 + 240);
              char v11 = *(unsigned char *)(v13 + 120);
              uint64_t v12 = *(unsigned int *)(v13 + 28);
              LOBYTE(v173) = *(unsigned char *)(v13 + 32);
              sub_1B628EEF4(v9, v10, v16, v11, v12 | ((unint64_t)v173 << 32));
            }
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
            swift_release();
            v8 += 6;
            v7 -= 48;
          }
          while (v7);
          sub_1B632F170(v144);
          uint64_t v2 = v134;
        }
      }
      sub_1B632F170(v144);
    }
    long long v17 = *(_OWORD *)(v128 + 72);
    v180[0] = *(_OWORD *)(v128 + 56);
    v180[1] = v17;
    uint64_t v181 = *(void *)(v128 + 88);
    sub_1B62C9DA8(v2, (uint64_t)v180, 0x200000000, v145);
    sub_1B62D7A90((uint64_t)v145, (uint64_t)v146, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (!*(void *)&v146[0]) {
      return (uint64_t *)swift_release();
    }
    long long v153 = v146[0];
    long long v154 = v146[1];
    uint64_t v155 = v147;
    if (v152 <= 0)
    {
      swift_release();
    }
    else
    {
      uint64_t v125 = v149;
      if (v149)
      {
        uint64_t v124 = v148;
        uint64_t v18 = v151[4];
        char v19 = *(unsigned char *)(v150 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v130 = v151;
        unint64_t v122 = v151 + 8;
        uint64_t v123 = (uint64_t)(v151 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v20 = 0;
        uint64_t v21 = 0;
        char v120 = v19;
        uint64_t v121 = v18;
        while (1)
        {
          uint64_t v22 = (unsigned int *)(v124 + 48 * v20);
          uint64_t v23 = *v22;
          uint64_t v137 = v22[1];
          char v25 = (uint64_t *)*((void *)v22 + 2);
          uint64_t v24 = *((void *)v22 + 3);
          uint64_t v27 = *((void *)v22 + 4);
          uint64_t v26 = *((void *)v22 + 5);
          uint64_t v126 = v21;
          uint64_t v127 = v20;
          if (v19)
          {
            unint64_t v28 = *(os_unfair_lock_s **)(v26 + 376);
            swift_retain();
            os_unfair_lock_lock(v28);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v26 + 344));
          }
          else
          {
            swift_retain();
          }
          uint64_t v143 = v26;
          ecs_stack_allocator_push_snapshot(v18);
          sub_1B62D7A90(v123, (uint64_t)v161, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v29 = v130[4];
          uint64_t v30 = *(void *)(*(void *)(*(void *)(*(void *)(v26 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v130[6] = ecs_stack_allocator_allocate(v29, 48 * v30, 8);
          v130[7] = v30;
          v122[1] = 0;
          _OWORD v122[2] = 0;
          *unint64_t v122 = 0;
          swift_release();
          uint64_t v31 = sub_1B62C9024((uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, v25, v24, v27, (uint64_t)v130);
          uint64_t v32 = v26;
          uint64_t v33 = sub_1B62C9024((uint64_t)&type metadata for MaterialRuntime, (uint64_t)&off_1F0F68E78, v25, v24, v27, (uint64_t)v130);
          uint64_t v34 = v33;
          if (!v25) {
            break;
          }
          if (v27)
          {
            uint64_t v35 = (unsigned int *)(v31 + 40);
            while (1)
            {
              uint64_t v37 = *v25++;
              uint64_t v36 = v37;
              swift_retain();
              if (*(unsigned char *)(v32 + 184)) {
                goto LABEL_105;
              }
              swift_release();
              uint64_t v38 = *(void *)(v32 + 16);
              int v39 = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
              swift_retain();
              BOOL v40 = v39 != 4 || *(void *)(v38 + 216) > (uint64_t)*(unsigned __int8 *)(v38 + 225);
              uint64_t v41 = v35 - 10;
              swift_retain();
              swift_release();
              uint64_t v42 = *(void *)(v32 + 192);
              if (!v42 || (*(void *)(v42 + 8 * (v36 >> 6)) & (1 << v36)) == 0)
              {
                swift_release();
                char v68 = 0;
                goto LABEL_54;
              }
              uint64_t v139 = v27;
              uint64_t v141 = (unsigned __int8 *)(v35 - 10);
              if (v40) {
                *(void *)(*(void *)(v32 + 208) + 8 * (v36 >> 6)) |= 1 << v36;
              }
              swift_release();
              *(void *)(v34 + 216) = *((void *)v35 + 5);
              *(void *)(v34 + 208) = *((void *)v35 + 4);
              uint64_t v135 = *((unsigned __int8 *)v35 - 40);
              uint64_t v138 = *(void *)(v34 + 232);
              uint64_t v43 = *v35;
              int v44 = *((unsigned __int8 *)v35 + 4);
              float v45 = *((float *)v35 + 2);
              int v46 = *((unsigned __int8 *)v35 + 13);
              uint64_t v131 = *((void *)v35 + 2);
              int v132 = *((unsigned __int8 *)v35 + 24);
              sub_1B6E33918();
              sub_1B6E33958();
              sub_1B6E33958();
              unint64_t v47 = sub_1B6E33988() - 0x61C8864680B583EBLL;
              unint64_t v48 = v43 - 0x61C8864680B583EBLL;
              if (!v44) {
                unint64_t v48 = 0x9E3779B97F4A7C18;
              }
              unint64_t v49 = ((v47 >> 2) + (v47 << 6) + v48) ^ v47;
              if (v45 < 0.0) {
                unint64_t v50 = 0x9E3779B97F4A7C15;
              }
              else {
                unint64_t v50 = 0x9E3779B97F4A7C16;
              }
              unint64_t v51 = (v50 + (v49 << 6) + (v49 >> 2)) ^ v49;
              unint64_t v52 = (v135 - 0x61C8864680B583EBLL + (v51 << 6) + (v51 >> 2)) ^ v51;
              if (v46) {
                unint64_t v53 = 0x9E3779B97F4A7C16;
              }
              else {
                unint64_t v53 = 0x9E3779B97F4A7C15;
              }
              unint64_t v54 = (v53 + (v52 << 6) + (v52 >> 2)) ^ v52;
              if (v46 == 1)
              {
                unint64_t v55 = (v131 - 0x61C8864680B583EBLL + (v54 << 6) + (v54 >> 2)) ^ v54;
                if (v132) {
                  unint64_t v56 = 0x9E3779B97F4A7C16;
                }
                else {
                  unint64_t v56 = 0x9E3779B97F4A7C15;
                }
                unint64_t v54 = (v56 + (v55 << 6) + (v55 >> 2)) ^ v55;
              }
              uint64_t v27 = v139;
              uint64_t v2 = v134;
              uint64_t v32 = v143;
              if (v138 != v54) {
                goto LABEL_50;
              }
              uint64_t v41 = v35 - 10;
              if ((*(_WORD *)(*((void *)v35 - 4) + 80) & 0x40) != 0)
              {
                if (*((void *)v35 - 2))
                {
                  uint64_t v57 = *((void *)v35 - 1);
                  uint64_t ObjectType = swift_getObjectType();
                  long long v59 = *(_OWORD *)(v35 + 10);
                  v164[4] = *(_OWORD *)(v35 + 6);
                  v164[5] = v59;
                  uint64_t v165 = *((void *)v35 + 7);
                  long long v60 = *(_OWORD *)(v35 - 6);
                  v164[0] = *(_OWORD *)v141;
                  v164[1] = v60;
                  long long v61 = *(_OWORD *)(v35 + 2);
                  v164[2] = *(_OWORD *)(v35 - 2);
                  v164[3] = v61;
                  (*(void (**)(_OWORD *, uint64_t, uint64_t))(v57 + 32))(v164, ObjectType, v57);
                  sub_1B6971B8C();
                  uint64_t v62 = sub_1B6E31D38();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v34 + 240) != v62) {
                    break;
                  }
                }
              }
LABEL_52:
              char v68 = 1;
LABEL_54:
              if (*(unsigned char *)(*((void *)v35 - 4) + 209) == 1
                && ((v68 & 1) != 0 || *(unsigned char *)(v34 + 225) == 1)
                && *((void *)v35 - 2))
              {
                uint64_t v69 = *((void *)v35 - 1);
                uint64_t v70 = swift_getObjectType();
                long long v72 = *((_OWORD *)v41 + 1);
                long long v71 = *((_OWORD *)v41 + 2);
                v162[0] = *(_OWORD *)v41;
                v162[1] = v72;
                v162[2] = v71;
                long long v74 = *((_OWORD *)v41 + 4);
                long long v73 = *((_OWORD *)v41 + 5);
                long long v75 = *((_OWORD *)v41 + 3);
                uint64_t v163 = *((void *)v41 + 12);
                v162[4] = v74;
                v162[5] = v73;
                v162[3] = v75;
                uint64_t v76 = *(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 40);
                swift_unknownObjectRetain();
                sub_1B634EC48((uint64_t)v162);
                uint64_t v77 = v70;
                uint64_t v32 = v143;
                v76(v162, v34, v2, v77, v69);
                swift_unknownObjectRelease();
                sub_1B634EBF4((uint64_t)v162);
              }
              v35 += 26;
              v34 += 248;
              if (!--v27) {
                goto LABEL_60;
              }
            }
            *(void *)(v34 + 240) = v62;
LABEL_50:
            char v63 = *(unsigned char *)(v143 + 184);
            uint64_t v64 = swift_retain();
            if (v63) {
              goto LABEL_105;
            }
            uint64_t v65 = *(unsigned int *)(*(void *)(v143 + 168) + 4 * v36);
            uint64_t v66 = *(unsigned int *)(*(void *)(v64 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v65 + 8);
            swift_release();
            unint64_t v67 = v65 | (v66 << 32);
            uint64_t v41 = v35 - 10;
            sub_1B696F9FC(v67, v141, v34, v129, v134, (uint64_t)v130);
            goto LABEL_52;
          }
LABEL_60:
          v159[0] = v153;
          v159[1] = v154;
          uint64_t v160 = v155;
          uint64_t v21 = v126;
          sub_1B6345178(v130, (unsigned __int16 **)v159, (uint64_t)v161);
          sub_1B634507C((char *)v32);
          uint64_t v18 = v121;
          ecs_stack_allocator_pop_snapshot(v121);
          uint64_t v79 = v32;
          char v19 = v120;
          if (v120)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v79 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v79 + 376));
          }
          swift_release();
          uint64_t v20 = v127 + 1;
          if (v127 + 1 == v125) {
            goto LABEL_102;
          }
        }
        uint64_t v78 = v137;
        if (v23 == v137) {
          goto LABEL_60;
        }
        uint64_t v80 = (unsigned int *)(v31 + 104 * v23 + 40);
        uint64_t v81 = v33 + 248 * v23;
        while (1)
        {
          swift_retain();
          if (*(unsigned char *)(v32 + 184))
          {
LABEL_105:
            uint64_t result = (uint64_t *)sub_1B6E32BE8();
            __break(1u);
            return result;
          }
          swift_release();
          uint64_t v82 = *(void *)(v32 + 16);
          int v83 = *(unsigned __int8 *)(v82 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
          swift_retain();
          BOOL v84 = v83 != 4 || *(void *)(v82 + 216) > (uint64_t)*(unsigned __int8 *)(v82 + 225);
          long long v85 = v80 - 10;
          swift_retain();
          swift_release();
          uint64_t v86 = *(void *)(v32 + 192);
          if (!v86 || (*(void *)(v86 + 8 * (v23 >> 6)) & (1 << v23)) == 0)
          {
            swift_release();
            char v110 = 0;
            goto LABEL_94;
          }
          uint64_t v142 = (unsigned __int8 *)(v80 - 10);
          if (v84) {
            *(void *)(*(void *)(v32 + 208) + 8 * (v23 >> 6)) |= 1 << v23;
          }
          swift_release();
          *(void *)(v81 + 216) = *((void *)v80 + 5);
          *(void *)(v81 + 208) = *((void *)v80 + 4);
          uint64_t v140 = *(void *)(v81 + 232);
          uint64_t v87 = *((unsigned __int8 *)v80 - 40);
          uint64_t v88 = *v80;
          int v89 = *((unsigned __int8 *)v80 + 4);
          float v90 = *((float *)v80 + 2);
          int v91 = *((unsigned __int8 *)v80 + 13);
          uint64_t v133 = *((void *)v80 + 2);
          int v136 = *((unsigned __int8 *)v80 + 24);
          sub_1B6E33918();
          sub_1B6E33958();
          sub_1B6E33958();
          unint64_t v92 = sub_1B6E33988() - 0x61C8864680B583EBLL;
          unint64_t v93 = v88 - 0x61C8864680B583EBLL;
          if (!v89) {
            unint64_t v93 = 0x9E3779B97F4A7C18;
          }
          unint64_t v94 = ((v92 >> 2) + (v92 << 6) + v93) ^ v92;
          if (v90 < 0.0) {
            unint64_t v95 = 0x9E3779B97F4A7C15;
          }
          else {
            unint64_t v95 = 0x9E3779B97F4A7C16;
          }
          unint64_t v96 = (v95 + (v94 << 6) + (v94 >> 2)) ^ v94;
          unint64_t v97 = (v87 - 0x61C8864680B583EBLL + (v96 << 6) + (v96 >> 2)) ^ v96;
          if (v91) {
            unint64_t v98 = 0x9E3779B97F4A7C16;
          }
          else {
            unint64_t v98 = 0x9E3779B97F4A7C15;
          }
          unint64_t v99 = (v98 + (v97 << 6) + (v97 >> 2)) ^ v97;
          if (v91 == 1)
          {
            unint64_t v100 = (v133 - 0x61C8864680B583EBLL + (v99 << 6) + (v99 >> 2)) ^ v99;
            if (v136) {
              unint64_t v101 = 0x9E3779B97F4A7C16;
            }
            else {
              unint64_t v101 = 0x9E3779B97F4A7C15;
            }
            unint64_t v99 = (v101 + (v100 << 6) + (v100 >> 2)) ^ v100;
          }
          uint64_t v78 = v137;
          uint64_t v2 = v134;
          uint64_t v32 = v143;
          if (v140 != v99) {
            goto LABEL_90;
          }
          long long v85 = v80 - 10;
          if ((*(_WORD *)(*((void *)v80 - 4) + 80) & 0x40) != 0)
          {
            if (*((void *)v80 - 2))
            {
              uint64_t v102 = *((void *)v80 - 1);
              uint64_t v103 = swift_getObjectType();
              long long v176 = *(_OWORD *)(v80 + 2);
              long long v177 = *(_OWORD *)(v80 + 6);
              long long v178 = *(_OWORD *)(v80 + 10);
              uint64_t v179 = *((void *)v80 + 7);
              long long v173 = *(_OWORD *)v142;
              long long v174 = *(_OWORD *)(v80 - 6);
              long long v175 = *(_OWORD *)(v80 - 2);
              (*(void (**)(long long *, uint64_t, uint64_t))(v102 + 32))(&v173, v103, v102);
              sub_1B6971B8C();
              uint64_t v104 = sub_1B6E31D38();
              swift_bridgeObjectRelease();
              if (*(void *)(v81 + 240) != v104) {
                break;
              }
            }
          }
LABEL_92:
          char v110 = 1;
LABEL_94:
          if (*(unsigned char *)(*((void *)v80 - 4) + 209) == 1
            && ((v110 & 1) != 0 || *(unsigned char *)(v81 + 225) == 1)
            && *((void *)v80 - 2))
          {
            uint64_t v111 = *((void *)v80 - 1);
            uint64_t v112 = swift_getObjectType();
            long long v114 = *((_OWORD *)v85 + 1);
            long long v113 = *((_OWORD *)v85 + 2);
            long long v166 = *(_OWORD *)v85;
            long long v167 = v114;
            long long v168 = v113;
            long long v116 = *((_OWORD *)v85 + 4);
            long long v115 = *((_OWORD *)v85 + 5);
            long long v117 = *((_OWORD *)v85 + 3);
            uint64_t v172 = *((void *)v85 + 12);
            long long v171 = v115;
            long long v169 = v117;
            long long v170 = v116;
            uint64_t v118 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 40);
            swift_unknownObjectRetain();
            sub_1B634EC48((uint64_t)&v166);
            uint64_t v119 = v112;
            uint64_t v32 = v143;
            v118(&v166, v81, v2, v119, v111);
            swift_unknownObjectRelease();
            sub_1B634EBF4((uint64_t)&v166);
          }
          ++v23;
          v80 += 26;
          v81 += 248;
          if (v78 == v23) {
            goto LABEL_60;
          }
        }
        *(void *)(v81 + 240) = v104;
LABEL_90:
        char v105 = *(unsigned char *)(v143 + 184);
        uint64_t v106 = swift_retain();
        if (v105) {
          goto LABEL_105;
        }
        uint64_t v107 = *(unsigned int *)(*(void *)(v143 + 168) + 4 * v23);
        uint64_t v108 = *(unsigned int *)(*(void *)(v106 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v107 + 8);
        swift_release();
        unint64_t v109 = v107 | (v108 << 32);
        long long v85 = v80 - 10;
        sub_1B696F9FC(v109, v142, v81, v129, v134, (uint64_t)v130);
        goto LABEL_92;
      }
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_102:
      swift_release();
      sub_1B632F170(v145);
    }
    return sub_1B632F170(v145);
  }
  return result;
}

uint64_t sub_1B634EBF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B634EC48(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B634ECA0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v4)
  {
    uint64_t v5 = v3;
    uint64_t v8 = *(void *)(result + 8);
    uint64_t v9 = *(void *)(v8 + 176);
    uint64_t v10 = *(void *)(*(void *)(v4 + 288) + 128);
    if (*(unsigned char *)(v8 + 208) == 1)
    {
      uint64_t v11 = (v10 + v9 - 1) & -v10;
      if (v11 < 1) {
        return result;
      }
    }
    else
    {
      uint64_t v11 = ((*(void *)(v8 + 200) + v10 - 1) & -v10) + ((v10 - 1 + v9) & -v10);
      if (v11 < 1) {
        return result;
      }
    }
    swift_retain();
    uint64_t v23 = (_OWORD *)(a2 + 144);
    sub_1B634F0F0(v11, v4);
    BOOL v24 = 0;
    uint64_t v12 = *(void **)(v8 + 168);
    uint64_t v13 = *(void *)(v8 + 176);
    uint64_t v14 = *(void **)(v8 + 192);
    if (*(unsigned char *)(v8 + 208) == 1)
    {
      if (v13 > 0)
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B634F1D4(v12, v13, 3, a2, v5, a3, &v24);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v8 + 200);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      if (v13 > 0) {
        sub_1B634F1D4(v12, v13, 1, a2, v5, a3, &v24);
      }
      if (v15 >= 1) {
        sub_1B634F1D4(v14, v15, 2, a2, v5, a3, &v24);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    *(unsigned char *)(a2 + 225) = v24;
    uint64_t v16 = *(void *)(a2 + 152);
    if (v16 && (uint64_t v17 = *(void *)(a2 + 168), v17 > 0))
    {
      uint64_t v18 = *(void *)(a2 + 160);
      char v19 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, 0);
      uint64_t v20 = (void *)sub_1B6E31768();
      objc_msgSend(v19, sel_pushDebugGroup_, v20);

      uint64_t v21 = *(void *)(a2 + 176);
      if (v21)
      {
        uint64_t v22 = *(void *)(a2 + 184);
        swift_unknownObjectRetain();
        objc_msgSend(v19, sel_copyFromBuffer_sourceOffset_toBuffer_destinationOffset_size_, v16, v18, v21, v22, v17);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        *uint64_t v23 = 0u;
        v23[1] = 0u;
      }
      objc_msgSend(v19, sel_popDebugGroup, v23);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B634EF94(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    uint64_t v5 = a3;
  }
  else
  {
    if (*(void *)(v3 + 376))
    {
      uint64_t v6 = swift_dynamicCastObjCProtocolConditional();
      if (v6)
      {
        uint64_t v7 = (void *)v6;
        swift_unknownObjectRetain();
        return (uint64_t)v7;
      }
    }
    sub_1B6388C28();
    uint64_t v5 = (void *)sub_1B6388D70();
  }
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v5, sel_blitCommandEncoder);
  if (v8)
  {
    uint64_t v7 = v8;
    uint64_t v9 = (void *)sub_1B6E31768();
    objc_msgSend(v7, sel_setLabel_, v9);

    if (!a3)
    {
      *(void *)(v3 + 376) = v7;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    return (uint64_t)v7;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B634F0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v7 = v2[4];
  uint64_t v6 = v2 + 4;
  uint64_t v5 = v7;
  if (a1 < 1)
  {
    uint64_t result = swift_unknownObjectRelease();
    *uint64_t v6 = 0;
    v6[1] = 0;
    v6[2] = 0;
  }
  else
  {
    if (!v5 || v3[6] != a1)
    {
      uint64_t v9 = sub_1B68007AC(a1, 32);
      uint64_t v11 = v10;
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      v3[4] = v9;
      v3[5] = v11;
      v3[6] = v13;
    }
    swift_retain();
    uint64_t v14 = sub_1B62F1868(0, a1);
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    swift_unknownObjectRetain();
    swift_release();
    uint64_t result = swift_unknownObjectRelease();
    v3[1] = v14;
    v3[2] = v16;
    v3[3] = v18;
    v3[7] = *(void *)(*(void *)(a2 + 288) + 128);
  }
  return result;
}

uint64_t sub_1B634F1D4(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, BOOL *a7)
{
  sub_1B634FF44(a2, v48);
  sub_1B634FED8((uint64_t)v48, (uint64_t)v49, (unint64_t *)&unk_1EB981030, (void (*)(uint64_t))sub_1B6BA3040);
  id v13 = v49[0];
  if (v49[0])
  {
    id v14 = v49[1];
    id v15 = v49[3];
    id v46 = v49[5];
    id v47 = v49[4];
    if (a1)
    {
      char v45 = a3;
      id v16 = v49[2];
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1B62EC494((uint64_t)v13, (uint64_t)v14, (uint64_t)v16, 0);
      uint64_t v18 = (unint64_t *)(a4 + 136);
      unint64_t v17 = *(void *)(a4 + 136);
      if ((v17 & 0x8000000000000000) != 0
        || (v17 & 0x4000000000000000) != 0
        || (char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(),
            unint64_t v17 = *v18,
            (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0))
      {
        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v43 = sub_1B6E32C18();
          sub_1B6E32C18();
          sub_1B6E32C18();
          swift_bridgeObjectRelease();
          uint64_t v23 = v43;
        }
        else
        {
          uint64_t v23 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1;
        }
        unint64_t *v18 = sub_1B63577E0(0, v23);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v44 = sub_1B6E32C18();
          swift_bridgeObjectRelease();
          uint64_t v20 = v44;
        }
        else
        {
          uint64_t v20 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        sub_1B62FB620(0, v20);
      }
      uint64_t v24 = *(void *)(a5 + 16);
      if (*(void *)(v24 + 16))
      {
        swift_retain();
        uint64_t v25 = 0;
        uint64_t v26 = 32;
        uint64_t v27 = 32;
        do
        {
          long long v28 = *(_OWORD *)(v24 + v27);
          long long v29 = *(_OWORD *)(v24 + v27 + 16);
          long long v30 = *(_OWORD *)(v24 + v27 + 32);
          *(_OWORD *)&v59[9] = *(_OWORD *)(v24 + v27 + 41);
          v58[1] = v29;
          *(_OWORD *)long long v59 = v30;
          v58[0] = v28;
          sub_1B634F71C(*(void *)(a5 + 24) + v26, (uint64_t)v60);
          ++v25;
          sub_1B62C7C20((uint64_t)v58);
          sub_1B634F79C((uint64_t)v60, (uint64_t)v58, a1, v18, a6, a7);
          sub_1B62C7BF4((uint64_t)v58);
          uint64_t v24 = *(void *)(a5 + 16);
          v27 += 64;
          v26 += 80;
        }
        while (v25 != *(void *)(v24 + 16));
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      if (objc_msgSend(v49[0], sel_storageMode) == (id)2)
      {
LABEL_37:
        swift_unknownObjectRelease();
        return swift_unknownObjectRelease();
      }
      char v45 = a3;
      id v31 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v32 = v13;
      uint64_t v33 = *(void *)(a5 + 16);
      if (*(void *)(v33 + 16))
      {
        uint64_t v34 = (uint64_t)v14 + (void)v31;
        swift_retain();
        uint64_t v35 = 0;
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        do
        {
          if ((*(unsigned char *)(v33 + v36 + 88) & 1) == 0)
          {
            uint64_t v38 = *(void *)(a5 + 24);
            int v39 = *(char *)(v38 + v35 + 96);
            if ((v39 & 0x80000000) == 0)
            {
              uint64_t v40 = *(void *)(v33 + v36 + 72);
              long long v41 = *(_OWORD *)(v38 + v35 + 32);
              v60[0] = v41;
              v60[1] = *(_OWORD *)(v38 + v35 + 48);
              _OWORD v60[2] = *(_OWORD *)(v38 + v35 + 64);
              v60[3] = *(_OWORD *)(v38 + v35 + 80);
              char v61 = v39;
              if (v39 != 14 || v41 != 0xFFFFFFFFLL)
              {
                sub_1B6791430((uint64_t)v60, v34, v40);
                uint64_t v33 = *(void *)(a5 + 16);
              }
            }
          }
          ++v37;
          v36 += 64;
          v35 += 80;
        }
        while (v37 != *(void *)(v33 + 16));
        swift_release();
      }
    }
    if (v45)
    {
      v56[0] = v15;
      v56[1] = v47;
      _OWORD v56[2] = v46;
      v56[3] = 0;
      char v57 = 0;
      swift_unknownObjectRetain();
      sub_1B62E9144((uint64_t)v56, 2, 0);
      swift_unknownObjectRelease();
      if ((v45 & 8) == 0)
      {
LABEL_35:
        if ((v45 & 0x10) == 0) {
          goto LABEL_36;
        }
        goto LABEL_40;
      }
    }
    else if ((v45 & 8) == 0)
    {
      goto LABEL_35;
    }
    v54[0] = v15;
    v54[1] = v47;
    v54[2] = v46;
    v54[3] = 0;
    char v55 = 0;
    swift_unknownObjectRetain();
    sub_1B62E9144((uint64_t)v54, 2, 0);
    swift_unknownObjectRelease();
    if ((v45 & 0x10) == 0)
    {
LABEL_36:
      if ((v45 & 2) == 0) {
        goto LABEL_37;
      }
      goto LABEL_41;
    }
LABEL_40:
    v52[0] = v15;
    v52[1] = v47;
    v52[2] = v46;
    v52[3] = 0;
    char v53 = 0;
    swift_unknownObjectRetain();
    sub_1B62E9144((uint64_t)v52, 2, 0);
    swift_unknownObjectRelease();
    if ((v45 & 2) == 0) {
      goto LABEL_37;
    }
LABEL_41:
    v50[0] = v15;
    v50[1] = v47;
    _OWORD v50[2] = v46;
    v50[3] = 0;
    char v51 = 0;
    swift_unknownObjectRetain();
    sub_1B62E9144((uint64_t)v50, 2, 0);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease_n();
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  int v21 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  *(void *)&v60[0] = 0;
  swift_retain();
  sub_1B6B33E34(v21, (uint64_t *)v60, 0xD00000000000002FLL, 0x80000001B6F4B9F0);
  swift_release();
  return swift_release();
}

uint64_t sub_1B634F71C(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 initializeWithCopy for DataValue(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

void *sub_1B634F79C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, BOOL *a6)
{
  sub_1B634F71C(a1, (uint64_t)v24);
  if (v25 < 0)
  {
    v25 &= ~0x80u;
    unint64_t v13 = v24[0];
    sub_1B634FDFC(a2 + 24, (uint64_t)v31);
    sub_1B634FDFC((uint64_t)v31, (uint64_t)v28);
    if (v29) {
      id v14 = (id)v28[0];
    }
    else {
      id v14 = 0;
    }
    __n128 result = (void *)sub_1B62EBE70(v13, &v26);
    if (result)
    {
      id v15 = result;
      if (objc_msgSend(result, sel_textureType) == v14)
      {
        swift_unknownObjectRetain();
        id v16 = v15;
      }
      else
      {
        uint64_t v21 = (uint64_t)v14;
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        id v26 = 0;
        unint64_t v27 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        uint64_t v22 = (uint64_t)v26;
        unint64_t v23 = v27;
        sub_1B6E31948();
        id v26 = *(id *)(a2 + 16);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        id v26 = objc_msgSend(v15, sel_textureType);
        type metadata accessor for MTLTextureType(0);
        sub_1B6E32B18();
        sub_1B6E31948();
        sub_1B634FDFC((uint64_t)v31, (uint64_t)&v26);
        sub_1B6E32B18();
        sub_1B6E31948();
        uint64_t v17 = v22;
        int v18 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        uint64_t v22 = 0;
        swift_retain();
        sub_1B6B33E34(v18, &v22, v17, v23);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        if (!*(void *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_renderer)) {
          return (void *)swift_unknownObjectRelease();
        }
        swift_retain();
        id v16 = sub_1B6CF0CB4(v21);
        swift_release();
      }
      BOOL v19 = sub_1B62EC0CC((uint64_t)&type metadata for MovieFileAsset, (uint64_t)&off_1F0F64908, v13);
      swift_unknownObjectRelease();
      *a6 = v19;
    }
    else
    {
      if (!*(void *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_renderer)) {
        return result;
      }
      swift_retain();
      id v16 = sub_1B6CF0CB4((uint64_t)v14);
      swift_release();
    }
    uint64_t v20 = *(void *)(a2 + 16);
    swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](objc_msgSend(a3, sel_setTexture_atIndex_, v16, v20));
    if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
    return (void *)swift_unknownObjectRelease();
  }
  sub_1B62D6998((uint64_t)v24, (uint64_t)&v26);
  __n128 result = (void *)sub_1B62D6998((uint64_t)&v26, (uint64_t)v28);
  if (v30 != 14 || LODWORD(v28[0]) != -1)
  {
    sub_1B62C7C20(a2);
    swift_unknownObjectRetain();
    sub_1B634FBCC((uint64_t)&v26, a2, a3);
    swift_unknownObjectRelease();
    return (void *)sub_1B62C7BF4(a2);
  }
  return result;
}

_OWORD *sub_1B634FBCC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  sub_1B62D6998(a1, (uint64_t)&v23);
  switch(v27)
  {
    case 1:
      uint64_t v8 = v23;
      __n128 result = objc_msgSend(a3, sel_constantDataAtIndex_, *(void *)(a2 + 16));
      *(void *)__n128 result = v8;
      break;
    case 2:
    case 3:
      long long v10 = v23;
      __n128 result = objc_msgSend(a3, sel_constantDataAtIndex_, *(void *)(a2 + 16));
      *__n128 result = v10;
      break;
    case 4:
      long long v14 = v23;
      __n128 result = objc_msgSend(a3, sel_constantDataAtIndex_, *(void *)(a2 + 16));
      *__n128 result = v14;
      break;
    case 5:
    case 6:
    case 10:
      long long v11 = v23;
      long long v16 = v24;
      __n128 result = objc_msgSend(a3, sel_constantDataAtIndex_, *(void *)(a2 + 16));
      *__n128 result = v11;
      result[1] = v16;
      break;
    case 7:
      long long v15 = v23;
      uint64_t v19 = v24;
      __n128 result = objc_msgSend(a3, sel_constantDataAtIndex_, *(void *)(a2 + 16));
      *__n128 result = v15;
      *((void *)result + 2) = v19;
      break;
    case 8:
    case 9:
      long long v13 = v23;
      long long v18 = v24;
      long long v21 = v25;
      __n128 result = objc_msgSend(a3, sel_constantDataAtIndex_, *(void *)(a2 + 16));
      *__n128 result = v13;
      result[1] = v18;
      result[2] = v21;
      break;
    case 11:
    case 12:
      long long v12 = v23;
      long long v17 = v24;
      long long v20 = v25;
      long long v22 = v26;
      __n128 result = objc_msgSend(a3, sel_constantDataAtIndex_, *(void *)(a2 + 16));
      *__n128 result = v12;
      result[1] = v17;
      result[2] = v20;
      result[3] = v22;
      break;
    case 13:
      char v9 = v23;
      __n128 result = objc_msgSend(a3, sel_constantDataAtIndex_, *(void *)(a2 + 16));
      *(unsigned char *)__n128 result = v9;
      break;
    case 14:
    case 15:
      int v6 = v23;
      __n128 result = objc_msgSend(a3, sel_constantDataAtIndex_, *(void *)(a2 + 16));
      *(_DWORD *)__n128 result = v6;
      break;
    default:
      int v7 = v23;
      __n128 result = objc_msgSend(a3, sel_constantDataAtIndex_, *(void *)(a2 + 16));
      *(_DWORD *)__n128 result = v7;
      break;
  }
  return result;
}

uint64_t sub_1B634FDFC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B634FE58(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1B62CAC44(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B634FED8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1B6365C18(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B634FF44@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v4 = v2[1];
  if (!v4)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v5 = 0;
LABEL_6:
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    goto LABEL_7;
  }
  uint64_t v5 = v2[4];
  if (!v5)
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    goto LABEL_6;
  }
  uint64_t v6 = *v2 + v2[2];
  uint64_t v7 = v2[3] - *v2;
  uint64_t v8 = *v2 + v2[5];
  uint64_t v9 = v2[6] - *v2;
  *v2 += (result + v2[7] - 1) & -v2[7];
  swift_unknownObjectRetain();
  __n128 result = swift_unknownObjectRetain();
LABEL_7:
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v5;
  a2[4] = v8;
  a2[5] = v9;
  return result;
}

unint64_t sub_1B6350008(unint64_t a1, uint64_t a2)
{
  int v3 = a1;
  unint64_t v4 = HIDWORD(a1);
  swift_retain();
  if ((v3 != -1 || v4)
    && (v3 & 0x80000000) == 0
    && v3 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v4 == -1)
     || *(_DWORD *)(v5 + 12 * v3 + 8) == v4))
  {
    uint64_t v9 = *(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * v3) + 32);
    uint64_t v6 = *(unsigned int *)(v9 + 28);
    unsigned __int8 v7 = *(unsigned char *)(v9 + 32);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v6 = 0;
    unsigned __int8 v7 = 1;
  }
  return v6 | ((unint64_t)v7 << 32);
}

void *sub_1B63500E0(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 32);
  v60[0] = *(_OWORD *)(v1 + 16);
  v60[1] = v3;
  uint64_t v61 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v60, 0x200000000, v42);
  __n128 result = (void *)sub_1B62D7DE8((uint64_t)v42, (uint64_t)v43, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v43[0]) {
    return result;
  }
  long long v50 = v43[0];
  long long v51 = v43[1];
  uint64_t v52 = v44;
  if (v49 < 1) {
    return sub_1B632F1C4(v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v35 = v46;
  if (!v46) {
    return sub_1B632F1C4(v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v34 = v45;
  uint64_t v5 = v48[4];
  int v40 = *(unsigned __int8 *)(v47 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  long long v41 = v48;
  id v31 = v48 + 8;
  uint64_t v32 = (uint64_t)(v48 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v33 = v5;
  while (1)
  {
    uint64_t v38 = v7;
    uint64_t v39 = v6;
    uint64_t v8 = (unsigned int *)(v34 + 48 * v6);
    uint64_t v9 = *v8;
    long long v10 = (uint64_t *)*((void *)v8 + 2);
    uint64_t v11 = *((void *)v8 + 4);
    uint64_t v12 = *((void *)v8 + 5);
    uint64_t v36 = v8[1];
    uint64_t v37 = *((void *)v8 + 3);
    if (v40)
    {
      long long v13 = *(os_unfair_lock_s **)(v12 + 376);
      swift_retain();
      os_unfair_lock_lock(v13);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v5);
    sub_1B62D7DE8(v32, (uint64_t)v55, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v14 = v41[4];
    uint64_t v15 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v41[6] = ecs_stack_allocator_allocate(v14, 48 * v15, 8);
    v41[7] = v15;
    v31[1] = 0;
    _OWORD v31[2] = 0;
    void *v31 = 0;
    swift_release();
    uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v10, v37, v11, (uint64_t)v41);
    sub_1B62C9024((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, v10, v37, v11, (uint64_t)v41);
    if (!v10) {
      break;
    }
    if (v11)
    {
      do
      {
        uint64_t v18 = *v10++;
        uint64_t v17 = v18;
        long long v19 = *(_OWORD *)(v16 + 48);
        _OWORD v56[2] = *(_OWORD *)(v16 + 32);
        v56[3] = v19;
        void v56[4] = *(_OWORD *)(v16 + 64);
        int v57 = *(_DWORD *)(v16 + 80);
        long long v20 = *(_OWORD *)(v16 + 16);
        v56[0] = *(_OWORD *)v16;
        v56[1] = v20;
        uint64_t v21 = swift_retain();
        if (*(unsigned char *)(v12 + 184)) {
          goto LABEL_23;
        }
        uint64_t v22 = *(unsigned int *)(*(void *)(v12 + 168) + 4 * v17);
        uint64_t v23 = *(unsigned int *)(*(void *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v22 + 8);
        swift_release();
        sub_1B6350530((uint64_t)v56, v22 | (v23 << 32), a1);
        v16 += 88;
      }
      while (--v11);
    }
LABEL_18:
    v53[0] = v50;
    v53[1] = v51;
    uint64_t v54 = v52;
    uint64_t v7 = v38;
    sub_1B6345178(v41, (unsigned __int16 **)v53, (uint64_t)v55);
    sub_1B634507C((char *)v12);
    uint64_t v5 = v33;
    ecs_stack_allocator_pop_snapshot(v33);
    if (v40)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 376));
    }
    swift_release();
    uint64_t v6 = v39 + 1;
    if (v39 + 1 == v35)
    {
      sub_1B632F1C4(v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      return sub_1B632F1C4(v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
  }
  if (v9 == v36) {
    goto LABEL_18;
  }
  uint64_t v24 = v16 + 88 * v9;
  while (1)
  {
    long long v25 = *(_OWORD *)(v24 + 48);
    _OWORD v58[2] = *(_OWORD *)(v24 + 32);
    v58[3] = v25;
    v58[4] = *(_OWORD *)(v24 + 64);
    int v59 = *(_DWORD *)(v24 + 80);
    long long v26 = *(_OWORD *)(v24 + 16);
    v58[0] = *(_OWORD *)v24;
    v58[1] = v26;
    uint64_t v27 = swift_retain();
    if (*(unsigned char *)(v12 + 184)) {
      break;
    }
    uint64_t v28 = *(unsigned int *)(*(void *)(v12 + 168) + 4 * v9);
    uint64_t v29 = v9 + 1;
    uint64_t v30 = *(unsigned int *)(*(void *)(v27 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v28 + 8);
    swift_release();
    sub_1B6350530((uint64_t)v58, v28 | (v30 << 32), a1);
    v24 += 88;
    uint64_t v9 = v29;
    if (v36 == v29) {
      goto LABEL_18;
    }
  }
LABEL_23:
  __n128 result = (void *)sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6350530(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v506 = *MEMORY[0x1E4F143B8];
  swift_retain();
  sub_1B636E62C();
  unsigned __int8 v7 = v6;
  int v8 = v6;
  uint64_t result = swift_release();
  if (v8 == 2) {
    return result;
  }
  uint64_t v11 = 0;
  unint64_t v313 = HIDWORD(a2);
  uint64_t v12 = a2;
  uint64_t v13 = *(void *)(*(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                  + 8 * *(void *)thread_worker_index(&thread_worker_index, v10)
                  + 8);
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980BA0, (unint64_t *)&qword_1EB97EB00, (unint64_t *)&qword_1EB97EAE0);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v14;
  uint64_t v16 = &type metadata for DebugInfoA;
  if ((v7 & 1) == 0) {
    uint64_t v16 = &type metadata for DebugInfoB;
  }
  *(void *)(v14 + 32) = v16;
  unint64_t v332 = v14 + 32;
  uint64_t v17 = &off_1F0F520A8;
  long long v312 = xmmword_1B6E77050;
  *(_OWORD *)(v14 + 16) = xmmword_1B6E77050;
  if ((v7 & 1) == 0) {
    uint64_t v17 = &off_1F0F52198;
  }
  *(void *)(v14 + 40) = v17;
  uint64_t v311 = a1;
  int v18 = *(unsigned __int16 *)(a1 + 74);
  uint64_t v314 = v12;
  uint64_t v315 = a3;
  int v316 = v18;
  if (v18)
  {
    sub_1B62F0E60(v12, (uint64_t)v418);
    sub_1B62D7DE8((uint64_t)v418, (uint64_t)&v459, &qword_1EB980080, (uint64_t)&type metadata for WorldAABB);
    if ((v462 & 1) == 0)
    {
      float32x4_t v344 = v459;
      uint64_t v19 = v461;
      uint64_t v20 = v460;
      int v21 = sub_1B67ADC80(255, 255, 255);
      float32x4_t v498 = v344;
      uint64_t v499 = v20;
      uint64_t v500 = v19;
      long long v501 = 0u;
      long long v502 = 0u;
      long long v503 = 0u;
      long long v504 = 0u;
      char v505 = 6;
      LOBYTE(v496) = 1;
      sub_1B6D7E4E0(v15, 0x100000000uLL, v13, (long long *)&v498, v21);
    }
    LOBYTE(v18) = v316;
  }
  v343.i64[0] = v13;
  uint64_t v328 = v15;
  if ((v18 & 4) == 0)
  {
    if ((v18 & 8) != 0) {
      goto LABEL_111;
    }
LABEL_12:
    if ((v18 & 0x10) != 0) {
      goto LABEL_136;
    }
LABEL_13:
    if ((v18 & 0x20) != 0) {
      goto LABEL_161;
    }
    goto LABEL_14;
  }
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v412 = qword_1EB997A18;
  int v413 = 0;
  char v414 = 2;
  uint64_t v415 = 0;
  char v416 = 2;
  uint64_t v417 = 0;
  swift_retain();
  sub_1B663CAB8((uint64_t)v349);
  swift_release();
  sub_1B62C6034(0, (unint64_t *)&qword_1EB980B60, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent, MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v312;
  *(void *)(v22 + 56) = &type metadata for EmitterReference;
  *(void *)(v22 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v22 + 32) = v314;
  *(_DWORD *)(v22 + 36) = v313;
  sub_1B62A1250(v22, (uint64_t)v350);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v349);
  v386[0] = v350[0];
  v386[1] = v350[1];
  uint64_t v387 = v351;
  sub_1B62C9DA8(v315, (uint64_t)v386, 0x200000000, v419);
  sub_1B62D7DE8((uint64_t)v419, (uint64_t)v452, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v452[0])
  {
    sub_1B62CA064((uint64_t)v350);
    uint64_t v13 = v343.i64[0];
    goto LABEL_110;
  }
  long long v364 = v452[0];
  long long v365 = v452[1];
  uint64_t v366 = v453;
  uint64_t v13 = v343.i64[0];
  if (v458 <= 0 || (uint64_t v321 = v455) == 0)
  {
    sub_1B62CA064((uint64_t)v350);
    sub_1B632F1C4(v419, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    goto LABEL_110;
  }
  uint64_t v320 = v454;
  uint64_t v324 = v457[4];
  int v23 = *(unsigned __int8 *)(v456 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v325 = v457;
  long long v317 = v457 + 8;
  uint64_t v318 = v457 + 6;
  long long v335 = v495;
  uint64_t v333 = v497;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v24 = 0;
  uint64_t v334 = v15 + 32;
  uint64_t v327 = (long long *)(v15 + 64);
  int v319 = v23;
  do
  {
    long long v25 = (unsigned int *)(v320 + 48 * v24);
    uint64_t v26 = *v25;
    uint64_t v27 = (uint64_t *)*((void *)v25 + 2);
    uint64_t v28 = *((void *)v25 + 3);
    uint64_t v29 = (char *)*((void *)v25 + 4);
    uint64_t v30 = *((void *)v25 + 5);
    unint64_t v338 = v25[1];
    uint64_t v339 = v29;
    uint64_t v323 = v24;
    if (v23)
    {
      uint64_t v31 = v11;
      uint64_t v32 = *(os_unfair_lock_s **)(v30 + 376);
      swift_retain();
      os_unfair_lock_lock(v32);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v30 + 344));
    }
    else
    {
      uint64_t v31 = v11;
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v324);
    sub_1B62D7DE8((uint64_t)v318, (uint64_t)v493, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v33 = v325;
    uint64_t v34 = v325[4];
    uint64_t v35 = *(void *)(*(void *)(*(void *)(*(void *)(v30 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v33[6] = ecs_stack_allocator_allocate(v34, 48 * v35, 8);
    v33[7] = v35;
    uint64_t v36 = v317;
    v317[1] = 0;
    _OWORD v36[2] = 0;
    *uint64_t v36 = 0;
    swift_release();
    uint64_t v37 = v339;
    v341.n128_u64[0] = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v27, v28, (uint64_t)v339, (uint64_t)v33);
    uint64_t v38 = v28;
    uint64_t v39 = v37;
    long long v322 = (char *)v30;
    __n128 v340 = (void *)sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v27, v38, (uint64_t)v37, (uint64_t)v33);
    if (!v27)
    {
      uint64_t v13 = v343.i64[0];
      uint64_t v11 = v31;
      if (v26 == v338) {
        goto LABEL_67;
      }
      BOOL v84 = *(char **)(v328 + 16);
      uint64_t v337 = 16 * (void)v84 + 32;
      uint64_t v85 = sub_1B67ADC80(255, 128, 0);
      LODWORD(v336) = v85;
      uint64_t v331 = (unsigned char *)(v334 + 16 * (void)v84);
      uint64_t v329 = 16 * (void)v84;
      uint64_t v330 = (unint64_t)v84 & 0x7FFFFFFFFFFFFFFCLL;
      uint64_t v326 = (unint64_t)v84 & 0x7FFFFFFFFFFFFFFCLL | 2;
      uint64_t v339 = v84;
      while (1)
      {
        long long v91 = *(_OWORD *)(v341.n128_u64[0] + 16 * v26);
        long long v92 = *(_OWORD *)&v340[2 * v26];
        LODWORD(v93) = HIDWORD(v340[2 * v26]);
        if (v93 >= *(float *)&v92)
        {
          if ((LODWORD(v93) & 0x7FFFFF) != 0) {
            LODWORD(v94) = *(_OWORD *)&v340[2 * v26];
          }
          else {
            LODWORD(v94) = HIDWORD(v340[2 * v26]);
          }
          if ((~LODWORD(v93) & 0x7F800000) == 0) {
            float v93 = v94;
          }
        }
        else
        {
          LODWORD(v93) = *(_OWORD *)&v340[2 * v26];
        }
        if (*((float *)&v92 + 2) >= v93)
        {
          if ((DWORD2(v92) & 0x7FFFFF) == 0) {
            LODWORD(v93) = v340[2 * v26 + 1];
          }
          if ((~DWORD2(v92) & 0x7F800000) != 0) {
            LODWORD(v93) = v340[2 * v26 + 1];
          }
        }
        *((float *)&v91 + 3) = v93;
        long long v496 = v91;
        unint64_t v95 = v333;
        *(_OWORD *)uint64_t v333 = 0u;
        v95[1] = 0u;
        _OWORD v95[2] = 0u;
        v95[3] = 0u;
        v95[4] = 0u;
        v497[80] = 3;
        MEMORY[0x1F4188790](v85, v86);
        *(&v310 - 2) = (uint64_t)&v496;
        *((_DWORD *)&v310 - 2) = v336;
        uint64_t v96 = *(void *)(v13 + 32);
        ecs_stack_allocator_push_snapshot(v96);
        unint64_t v97 = ecs_stack_allocator_allocate(v96, v337, 8);
        unint64_t v98 = v97;
        void *v97 = &type metadata for DebugInfoWireframePrimitive;
        v97[1] = &off_1F0F974E8;
        _OWORD v97[2] = &type metadata for DebugInfoColor;
        v97[3] = &off_1F0F63878;
        v344.i64[0] = (uint64_t)&v310;
        v342.n128_u64[0] = (unint64_t)(&v310 - 4);
        if (!v84)
        {
          uint64_t v100 = 2;
          goto LABEL_93;
        }
        if ((unint64_t)v84 < 4 || v97 + 4 < (void *)v331 && v332 < (unint64_t)v97 + v329 + 32) {
          break;
        }
        uint64_t v119 = v97 + 8;
        uint64_t v120 = v330;
        uint64_t v121 = v327;
        do
        {
          long long v123 = *(v121 - 2);
          long long v122 = *(v121 - 1);
          long long v125 = *v121;
          long long v124 = v121[1];
          v121 += 4;
          *(v119 - 2) = v123;
          *(v119 - 1) = v122;
          *uint64_t v119 = v125;
          v119[1] = v124;
          v119 += 4;
          v120 -= 4;
        }
        while (v120);
        uint64_t v99 = v330;
        uint64_t v100 = v326;
        if (v84 != (char *)v330) {
          goto LABEL_89;
        }
LABEL_93:
        uint64_t v104 = *(void *)(v343.i64[0] + 16);
        uint64_t v105 = v104 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
        uint64_t v106 = *(os_unfair_lock_s **)(v104 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
        swift_retain();
        os_unfair_lock_lock(v106);
        uint64_t v107 = sub_1B69E2E04((uint64_t)v98, v100, MEMORY[0x1E4FBC860]);
        uint64_t v109 = v107;
        uint64_t v110 = v108;
        uint64_t v111 = *(void **)(v104 + 72);
        uint64_t v112 = v111[2];
        if (v112)
        {
          uint64_t v113 = v111[4];
          if (*(void *)(v113 + 144) != v107)
          {
            uint64_t v117 = v112 - 1;
            if (!v117) {
              goto LABEL_70;
            }
            uint64_t v118 = v111 + 5;
            while (1)
            {
              uint64_t v113 = *v118;
              if (*(void *)(*v118 + 144) == v107) {
                break;
              }
              ++v118;
              if (!--v117) {
                goto LABEL_70;
              }
            }
          }
          uint64_t v114 = *(void *)(v113 + 16);
          if (*(void *)(v114 + 16))
          {
            unint64_t v115 = sub_1B62C1A30(v108);
            if (v116)
            {
              int v88 = *(_DWORD *)(*(void *)(v114 + 56) + 4 * v115);
              goto LABEL_71;
            }
          }
        }
LABEL_70:
        uint64_t v87 = sub_1B6A00108(v98, v100);
        int v88 = sub_1B637C7BC(v109, v110, v87, MEMORY[0x1E4FBC860]);
        swift_release();
LABEL_71:
        ++v26;
        uint64_t v89 = *(void *)(*(void *)(v104 + 80) + 8 * v88 + 32);
        float v90 = *(os_unfair_lock_s **)(v105 + 24);
        swift_retain();
        os_unfair_lock_unlock(v90);
        swift_release();
        LOBYTE(v490[0]) = 1;
        uint64_t v13 = v343.i64[0];
        sub_1B6B27900(v89, 1, 1, 0x100000000uLL, v343.i64[0], (uint64_t)sub_1B69C29B4, v342.n128_i64[0]);
        swift_release();
        uint64_t v85 = ecs_stack_allocator_pop_snapshot(*(void *)(v13 + 32));
        BOOL v84 = v339;
        if (v26 == v338) {
          goto LABEL_67;
        }
      }
      uint64_t v99 = 0;
      uint64_t v100 = 2;
LABEL_89:
      unint64_t v101 = &v84[-v99];
      uint64_t v102 = (long long *)(v334 + 16 * v99);
      do
      {
        long long v103 = *v102++;
        *(_OWORD *)&v97[2 * v100++] = v103;
        --v101;
      }
      while (v101);
      goto LABEL_93;
    }
    uint64_t v13 = v343.i64[0];
    uint64_t v11 = v31;
    if (v39)
    {
      unint64_t v40 = *(void *)(v328 + 16);
      uint64_t v337 = 16 * v40 + 32;
      uint64_t v41 = sub_1B67ADC80(255, 128, 0);
      LODWORD(v336) = v41;
      uint64_t v43 = 0;
      uint64_t v331 = (unsigned char *)(v334 + 16 * v40);
      uint64_t v329 = 16 * v40;
      uint64_t v330 = v40 & 0x7FFFFFFFFFFFFFFCLL;
      uint64_t v326 = v40 & 0x7FFFFFFFFFFFFFFCLL | 2;
      unint64_t v338 = v40;
      while (1)
      {
        long long v48 = *(_OWORD *)(v341.n128_u64[0] + 16 * (void)v43);
        long long v49 = *(_OWORD *)&v340[2 * (void)v43];
        LODWORD(v50) = HIDWORD(v340[2 * (void)v43]);
        if (v50 >= *(float *)&v49)
        {
          if ((LODWORD(v50) & 0x7FFFFF) != 0) {
            LODWORD(v51) = *(_OWORD *)&v340[2 * (void)v43];
          }
          else {
            LODWORD(v51) = HIDWORD(v340[2 * (void)v43]);
          }
          if ((~LODWORD(v50) & 0x7F800000) == 0) {
            float v50 = v51;
          }
        }
        else
        {
          LODWORD(v50) = *(_OWORD *)&v340[2 * (void)v43];
        }
        v344.i64[0] = v11;
        if (*((float *)&v49 + 2) >= v50)
        {
          if ((DWORD2(v49) & 0x7FFFFF) == 0) {
            float v50 = *((float *)&v49 + 2);
          }
          if ((~DWORD2(v49) & 0x7F800000) != 0) {
            float v50 = *((float *)&v49 + 2);
          }
        }
        *((float *)&v48 + 3) = v50;
        long long v494 = v48;
        uint64_t v52 = v335;
        *long long v335 = 0u;
        v52[1] = 0u;
        v52[2] = 0u;
        v52[3] = 0u;
        void v52[4] = 0u;
        v495[80] = 3;
        MEMORY[0x1F4188790](v41, v42);
        *(&v310 - 2) = (uint64_t)&v494;
        *((_DWORD *)&v310 - 2) = v336;
        uint64_t v53 = *(void *)(v13 + 32);
        ecs_stack_allocator_push_snapshot(v53);
        uint64_t v54 = ecs_stack_allocator_allocate(v53, v337, 8);
        char v55 = v54;
        *uint64_t v54 = &type metadata for DebugInfoWireframePrimitive;
        v54[1] = &off_1F0F974E8;
        v54[2] = &type metadata for DebugInfoColor;
        v54[3] = &off_1F0F63878;
        v342.n128_u64[0] = (unint64_t)&v310;
        if (!v40)
        {
          uint64_t v57 = 2;
          goto LABEL_52;
        }
        if (v40 < 4 || v54 + 4 < (void *)v331 && v332 < (unint64_t)v54 + v329 + 32) {
          break;
        }
        uint64_t v76 = v54 + 8;
        uint64_t v77 = v330;
        uint64_t v78 = v327;
        do
        {
          long long v80 = *(v78 - 2);
          long long v79 = *(v78 - 1);
          long long v82 = *v78;
          long long v81 = v78[1];
          v78 += 4;
          *(v76 - 2) = v80;
          *(v76 - 1) = v79;
          *uint64_t v76 = v82;
          v76[1] = v81;
          v76 += 4;
          v77 -= 4;
        }
        while (v77);
        uint64_t v56 = v330;
        uint64_t v57 = v326;
        if (v40 != v330) {
          goto LABEL_48;
        }
LABEL_52:
        uint64_t v61 = *(void *)(v13 + 16);
        uint64_t v62 = v61 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
        char v63 = *(os_unfair_lock_s **)(v61 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
        swift_retain();
        os_unfair_lock_lock(v63);
        uint64_t v64 = sub_1B69E2E04((uint64_t)v55, v57, MEMORY[0x1E4FBC860]);
        uint64_t v66 = v64;
        uint64_t v67 = v65;
        char v68 = *(void **)(v61 + 72);
        uint64_t v69 = v68[2];
        if (v69)
        {
          uint64_t v70 = v68[4];
          if (*(void *)(v70 + 144) != v64)
          {
            uint64_t v74 = v69 - 1;
            if (!v74) {
              goto LABEL_29;
            }
            long long v75 = v68 + 5;
            while (1)
            {
              uint64_t v70 = *v75;
              if (*(void *)(*v75 + 144) == v64) {
                break;
              }
              ++v75;
              if (!--v74) {
                goto LABEL_29;
              }
            }
          }
          uint64_t v71 = *(void *)(v70 + 16);
          if (*(void *)(v71 + 16))
          {
            unint64_t v72 = sub_1B62C1A30(v65);
            if (v73)
            {
              int v45 = *(_DWORD *)(*(void *)(v71 + 56) + 4 * v72);
              goto LABEL_30;
            }
          }
        }
LABEL_29:
        uint64_t v44 = sub_1B6A00108(v55, v57);
        int v45 = sub_1B637C7BC(v66, v67, v44, MEMORY[0x1E4FBC860]);
        swift_release();
LABEL_30:
        uint64_t v46 = *(void *)(*(void *)(v61 + 80) + 8 * v45 + 32);
        uint64_t v47 = *(os_unfair_lock_s **)(v62 + 24);
        swift_retain();
        os_unfair_lock_unlock(v47);
        swift_release();
        LOBYTE(v490[0]) = 1;
        uint64_t v13 = v343.i64[0];
        uint64_t v11 = v344.i64[0];
        sub_1B6B27900(v46, 1, 1, 0x100000000uLL, v343.i64[0], (uint64_t)sub_1B6C20CA0, (uint64_t)(&v310 - 4));
        swift_release();
        uint64_t v41 = ecs_stack_allocator_pop_snapshot(*(void *)(v13 + 32));
        ++v43;
        unint64_t v40 = v338;
        if (v43 == v339) {
          goto LABEL_67;
        }
      }
      uint64_t v56 = 0;
      uint64_t v57 = 2;
LABEL_48:
      unint64_t v58 = v40 - v56;
      int v59 = (long long *)(v334 + 16 * v56);
      do
      {
        long long v60 = *v59++;
        *(_OWORD *)&v54[2 * v57++] = v60;
        --v58;
      }
      while (v58);
      goto LABEL_52;
    }
LABEL_67:
    v367[0] = v364;
    v367[1] = v365;
    uint64_t v368 = v366;
    sub_1B6345178(v325, (unsigned __int16 **)v367, (uint64_t)v493);
    int v83 = v322;
    sub_1B634507C(v322);
    ecs_stack_allocator_pop_snapshot(v324);
    int v23 = v319;
    if (v319)
    {
      os_unfair_lock_unlock(*((os_unfair_lock_t *)v83 + 43));
      os_unfair_lock_unlock(*((os_unfair_lock_t *)v83 + 47));
    }
    swift_release();
    uint64_t v24 = v323 + 1;
  }
  while (v323 + 1 != v321);
  sub_1B62CA064((uint64_t)v350);
  sub_1B632F1C4(v419, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B632F1C4(v419, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  uint64_t v15 = v328;
LABEL_110:
  LOBYTE(v18) = v316;
  if ((v316 & 8) == 0) {
    goto LABEL_12;
  }
LABEL_111:
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v406 = qword_1EB997A18;
  int v407 = 0;
  char v408 = 2;
  uint64_t v409 = 0;
  char v410 = 2;
  uint64_t v411 = 0;
  swift_retain();
  sub_1B663C898((uint64_t)v352);
  swift_release();
  sub_1B62C6034(0, (unint64_t *)&qword_1EB980B60, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent, MEMORY[0x1E4FBBE00]);
  uint64_t v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = v312;
  *(void *)(v126 + 56) = &type metadata for EmitterReference;
  *(void *)(v126 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v126 + 32) = v314;
  *(_DWORD *)(v126 + 36) = v313;
  sub_1B62A1250(v126, (uint64_t)v353);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v352);
  v384[0] = v353[0];
  v384[1] = v353[1];
  uint64_t v385 = v354;
  sub_1B62C9DA8(v315, (uint64_t)v384, 0x200000000, v420);
  sub_1B62D7DE8((uint64_t)v420, (uint64_t)v445, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v445[0])
  {
    sub_1B62CA064((uint64_t)v353);
    goto LABEL_133;
  }
  if (v451 <= 0 || (uint64_t v336 = v448) == 0)
  {
    sub_1B62CA064((uint64_t)v353);
    sub_1B632F1C4(v420, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_133:
    uint64_t v13 = v343.i64[0];
    goto LABEL_135;
  }
  uint64_t v127 = *(void *)(v450 + 32);
  int v128 = *(unsigned __int8 *)(v449 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v369[0] = v445[0];
  v369[1] = v445[1];
  uint64_t v370 = v446;
  unint64_t v332 = v450 + 48;
  uint64_t v333 = v447;
  v341.n128_u64[0] = v450;
  uint64_t v331 = (unsigned char *)(v450 + 64);
  v342.n128_u64[0] = (unint64_t)&v492;
  swift_retain();
  swift_retain();
  swift_retain();
  long long v129 = 0;
  LODWORD(v334) = v128;
  long long v335 = (_OWORD *)v127;
  do
  {
    uint64_t v130 = (unsigned int *)&v333[48 * (void)v129];
    unint64_t v338 = *v130;
    uint64_t v337 = v130[1];
    int v132 = (uint64_t *)*((void *)v130 + 2);
    uint64_t v131 = *((void *)v130 + 3);
    uint64_t v134 = *((void *)v130 + 4);
    uint64_t v133 = *((void *)v130 + 5);
    v344.i64[0] = v11;
    __n128 v340 = v129;
    if (v128)
    {
      uint64_t v135 = *(os_unfair_lock_s **)(v133 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v135);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v133 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v127);
    sub_1B62D7DE8(v332, (uint64_t)v484, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v136 = v341.n128_u64[0];
    uint64_t v137 = *(void *)(v341.n128_u64[0] + 32);
    uint64_t v138 = *(void *)(*(void *)(*(void *)(*(void *)(v133 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    *(void *)(v136 + 48) = ecs_stack_allocator_allocate(v137, 48 * v138, 8);
    *(void *)(v136 + 56) = v138;
    uint64_t v139 = v331;
    *((void *)v331 + 1) = 0;
    _OWORD v139[2] = 0;
    *uint64_t v139 = 0;
    swift_release();
    uint64_t v140 = (long long *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v132, v131, v134, v136);
    uint64_t v141 = (long long *)sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v132, v131, v134, v136);
    uint64_t v339 = (char *)v133;
    if (v132)
    {
      uint64_t v11 = v344.i64[0];
      if (v134)
      {
        int v142 = sub_1B67ADC80(255, 0, 255);
        uint64_t v143 = v343.i64[0];
        uint64_t v144 = v328;
        do
        {
          long long v145 = *v140++;
          long long v146 = v145;
          long long v147 = *v141++;
          long long v148 = v147;
          HIDWORD(v146) = 1.0;
          HIDWORD(v148) = 0;
          v485[0] = v146;
          v485[1] = v148;
          uint64_t v486 = 2;
          long long v487 = 0u;
          long long v488 = 0u;
          memset(v489, 0, sizeof(v489));
          LOBYTE(v482[0]) = 1;
          sub_1B6D7E4E0(v144, 0x100000000uLL, v143, v485, v142);
          --v134;
        }
        while (v134);
      }
    }
    else
    {
      uint64_t v150 = v337;
      unint64_t v149 = v338;
      uint64_t v11 = v344.i64[0];
      if (v338 != v337)
      {
        int v151 = sub_1B67ADC80(255, 0, 255);
        unint64_t v152 = v150 - v149;
        long long v153 = &v141[v149];
        long long v154 = &v140[v149];
        uint64_t v155 = v343.i64[0];
        uint64_t v156 = v328;
        do
        {
          long long v157 = *v154++;
          long long v158 = v157;
          long long v159 = *v153++;
          long long v160 = v159;
          HIDWORD(v158) = 1.0;
          HIDWORD(v160) = 0;
          v490[0] = v158;
          v490[1] = v160;
          uint64_t v491 = 2;
          long long v161 = (_OWORD *)v342.n128_u64[0];
          *(_OWORD *)v342.n128_u64[0] = 0u;
          v161[1] = 0u;
          v161[2] = 0u;
          *(_OWORD *)((char *)v161 + 41) = 0u;
          LOBYTE(v482[0]) = 1;
          sub_1B6D7E4E0(v156, 0x100000000uLL, v155, v490, v151);
          --v152;
        }
        while (v152);
      }
    }
    sub_1B6345178(v341.n128_u64[0], (unsigned __int16 **)v369, (uint64_t)v484);
    uint64_t v162 = v339;
    sub_1B634507C(v339);
    uint64_t v127 = (uint64_t)v335;
    ecs_stack_allocator_pop_snapshot((uint64_t)v335);
    int v128 = v334;
    if (v334)
    {
      os_unfair_lock_unlock(*((os_unfair_lock_t *)v162 + 43));
      os_unfair_lock_unlock(*((os_unfair_lock_t *)v162 + 47));
    }
    swift_release();
    long long v129 = (void *)((char *)v340 + 1);
  }
  while ((char *)v340 + 1 != v336);
  sub_1B62CA064((uint64_t)v353);
  sub_1B632F1C4(v420, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B632F1C4(v420, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  uint64_t v13 = v343.i64[0];
  uint64_t v15 = v328;
LABEL_135:
  LOBYTE(v18) = v316;
  if ((v316 & 0x10) == 0) {
    goto LABEL_13;
  }
LABEL_136:
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v400 = qword_1EB997A18;
  int v401 = 0;
  char v402 = 2;
  uint64_t v403 = 0;
  char v404 = 2;
  uint64_t v405 = 0;
  swift_retain();
  sub_1B663FB98((uint64_t)v355);
  swift_release();
  sub_1B62C6034(0, (unint64_t *)&qword_1EB980B60, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent, MEMORY[0x1E4FBBE00]);
  uint64_t v163 = swift_allocObject();
  *(_OWORD *)(v163 + 16) = v312;
  *(void *)(v163 + 56) = &type metadata for EmitterReference;
  *(void *)(v163 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v163 + 32) = v314;
  *(_DWORD *)(v163 + 36) = v313;
  sub_1B62A1250(v163, (uint64_t)v356);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v355);
  v382[0] = v356[0];
  v382[1] = v356[1];
  uint64_t v383 = v357;
  sub_1B62C9DA8(v315, (uint64_t)v382, 0x200000000, v421);
  sub_1B62D7DE8((uint64_t)v421, (uint64_t)v438, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v438[0])
  {
    sub_1B62CA064((uint64_t)v356);
    goto LABEL_158;
  }
  if (v444 <= 0 || (uint64_t v336 = v441) == 0)
  {
    sub_1B62CA064((uint64_t)v356);
    sub_1B632F1C4(v421, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_158:
    uint64_t v13 = v343.i64[0];
    goto LABEL_160;
  }
  uint64_t v164 = v443[4];
  int v165 = *(unsigned __int8 *)(v442 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v371[0] = v438[0];
  v371[1] = v438[1];
  uint64_t v372 = v439;
  uint64_t v334 = (uint64_t)(v443 + 6);
  long long v335 = (_OWORD *)v440;
  __n128 v340 = v443;
  uint64_t v333 = v443 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  long long v166 = 0;
  LODWORD(v332) = v165;
  do
  {
    long long v167 = (unsigned int *)&v335[3 * (void)v166];
    unint64_t v338 = *v167;
    uint64_t v339 = v166;
    uint64_t v337 = v167[1];
    long long v169 = (uint64_t *)*((void *)v167 + 2);
    uint64_t v168 = *((void *)v167 + 3);
    uint64_t v170 = *((void *)v167 + 4);
    uint64_t v171 = *((void *)v167 + 5);
    v344.i64[0] = v11;
    if (v165)
    {
      uint64_t v172 = *(os_unfair_lock_s **)(v171 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v172);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v171 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    uint64_t v173 = v164;
    ecs_stack_allocator_push_snapshot(v164);
    sub_1B62D7DE8(v334, (uint64_t)v479, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    long long v174 = v340;
    uint64_t v175 = v340[4];
    uint64_t v176 = *(void *)(*(void *)(*(void *)(*(void *)(v171 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v174[6] = ecs_stack_allocator_allocate(v175, 48 * v176, 8);
    v174[7] = v176;
    long long v177 = v333;
    *((void *)v333 + 1) = 0;
    v177[2] = 0;
    *long long v177 = 0;
    swift_release();
    long long v178 = (__n128 *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v169, v168, v170, (uint64_t)v174);
    uint64_t v179 = sub_1B62C9024((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, v169, v168, v170, (uint64_t)v174);
    uint64_t v180 = (float32x4_t *)v179;
    if (v169)
    {
      uint64_t v181 = v343.i64[0];
      uint64_t v11 = v344.i64[0];
      uint64_t v164 = v173;
      if (v170)
      {
        memset(v480, 0, sizeof(v480));
        char v481 = 12;
        uint64_t v182 = v328;
        unsigned __int32 v183 = v342.n128_u32[3];
        do
        {
          __n128 v184 = *v178++;
          __n128 v185 = v184;
          v185.n128_u32[3] = v183;
          __n128 v342 = v185;
          float32x4_t v186 = *v180++;
          float32x4_t v187 = v186;
          float32x4_t v188 = vmulq_f32(v187, v187);
          float32x4_t v189 = vmulq_laneq_f32(v187, v187, 3);
          float v190 = vmulq_lane_f32(v187, *(float32x2_t *)v187.f32, 1).f32[0];
          float v191 = v188.f32[1];
          v185.n128_u32[3] = 1.0;
          float v192 = 0.5 - v188.f32[0];
          *(float32x2_t *)v187.f32 = vmul_laneq_f32(*(float32x2_t *)v187.f32, v187, 2);
          v193.i32[3] = 0;
          v193.f32[0] = (float)(0.5 - v188.f32[1]) - v188.f32[2];
          v194.i32[3] = 0;
          v193.f32[1] = v190 + v189.f32[2];
          v194.f32[0] = v190 - v189.f32[2];
          v194.f32[1] = (float)(0.5 - v188.f32[0]) - v188.f32[2];
          v193.f32[2] = v187.f32[0] - v189.f32[1];
          v194.f32[2] = v187.f32[1] + v189.f32[0];
          *(int32x2_t *)v188.f32 = vrev64_s32(*(int32x2_t *)v189.f32);
          v189.i32[0] = vadd_f32(*(float32x2_t *)v187.f32, *(float32x2_t *)v188.f32).u32[0];
          v195.i64[0] = 0x4000000040000000;
          v195.i64[1] = 0x4000000040000000;
          v189.i32[1] = vsub_f32(*(float32x2_t *)&v187, *(float32x2_t *)&v188).i32[1];
          v189.f32[2] = v192 - v191;
          v189.i32[3] = 0;
          LOBYTE(v477[0]) = 1;
          sub_1B6D7DFAC(v182, 0x100000000uLL, v181, v480, (__n128)vmulq_f32(v195, v193), (__n128)vmulq_f32(v195, v194), (__n128)vmulq_f32(v195, v189), v185);
          unsigned __int32 v183 = v342.n128_u32[3];
          --v170;
        }
        while (v170);
      }
    }
    else
    {
      uint64_t v11 = v344.i64[0];
      uint64_t v164 = v173;
      if (v338 != v337)
      {
        uint64_t v196 = v337 - v338;
        memset(v482, 0, sizeof(v482));
        char v197 = (float32x4_t *)(v179 + 16 * v338);
        unint64_t v198 = &v178[v338];
        char v483 = 12;
        uint64_t v199 = v343.i64[0];
        uint64_t v200 = v328;
        unsigned __int32 v201 = v341.n128_u32[3];
        do
        {
          __n128 v202 = *v198++;
          __n128 v203 = v202;
          v203.n128_u32[3] = v201;
          __n128 v341 = v203;
          float32x4_t v204 = *v197++;
          float32x4_t v205 = v204;
          float32x4_t v206 = vmulq_f32(v205, v205);
          float32x4_t v207 = vmulq_laneq_f32(v205, v205, 3);
          float v208 = vmulq_lane_f32(v205, *(float32x2_t *)v205.f32, 1).f32[0];
          float v209 = v206.f32[1];
          v203.n128_u32[3] = 1.0;
          float v210 = 0.5 - v206.f32[0];
          *(float32x2_t *)v205.f32 = vmul_laneq_f32(*(float32x2_t *)v205.f32, v205, 2);
          v211.i32[3] = 0;
          v211.f32[0] = (float)(0.5 - v206.f32[1]) - v206.f32[2];
          v212.i32[3] = 0;
          v211.f32[1] = v208 + v207.f32[2];
          v212.f32[0] = v208 - v207.f32[2];
          v212.f32[1] = (float)(0.5 - v206.f32[0]) - v206.f32[2];
          v211.f32[2] = v205.f32[0] - v207.f32[1];
          v212.f32[2] = v205.f32[1] + v207.f32[0];
          *(int32x2_t *)v206.f32 = vrev64_s32(*(int32x2_t *)v207.f32);
          v207.i32[0] = vadd_f32(*(float32x2_t *)v205.f32, *(float32x2_t *)v206.f32).u32[0];
          v213.i64[0] = 0x4000000040000000;
          v213.i64[1] = 0x4000000040000000;
          v207.i32[1] = vsub_f32(*(float32x2_t *)&v205, *(float32x2_t *)&v206).i32[1];
          v207.f32[2] = v210 - v209;
          v207.i32[3] = 0;
          LOBYTE(v477[0]) = 1;
          sub_1B6D7DFAC(v200, 0x100000000uLL, v199, v482, (__n128)vmulq_f32(v213, v211), (__n128)vmulq_f32(v213, v212), (__n128)vmulq_f32(v213, v207), v203);
          unsigned __int32 v201 = v341.n128_u32[3];
          --v196;
        }
        while (v196);
      }
    }
    int v165 = v332;
    sub_1B6345178(v340, (unsigned __int16 **)v371, (uint64_t)v479);
    sub_1B634507C((char *)v171);
    ecs_stack_allocator_pop_snapshot(v164);
    if (v165)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v171 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v171 + 376));
    }
    swift_release();
    long long v166 = v339 + 1;
  }
  while (v339 + 1 != v336);
  sub_1B62CA064((uint64_t)v356);
  sub_1B632F1C4(v421, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B632F1C4(v421, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  uint64_t v13 = v343.i64[0];
  uint64_t v15 = v328;
LABEL_160:
  LOBYTE(v18) = v316;
  if ((v316 & 0x20) == 0)
  {
LABEL_14:
    if ((v18 & 2) == 0) {
      goto LABEL_235;
    }
    goto LABEL_186;
  }
LABEL_161:
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v394 = qword_1EB997A18;
  int v395 = 0;
  char v396 = 2;
  uint64_t v397 = 0;
  char v398 = 2;
  uint64_t v399 = 0;
  swift_retain();
  sub_1B663FB98((uint64_t)v358);
  swift_release();
  sub_1B62C6034(0, (unint64_t *)&qword_1EB980B60, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent, MEMORY[0x1E4FBBE00]);
  uint64_t v214 = swift_allocObject();
  *(_OWORD *)(v214 + 16) = v312;
  *(void *)(v214 + 56) = &type metadata for EmitterReference;
  *(void *)(v214 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v214 + 32) = v314;
  *(_DWORD *)(v214 + 36) = v313;
  sub_1B62A1250(v214, (uint64_t)v359);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v358);
  v380[0] = v359[0];
  v380[1] = v359[1];
  uint64_t v381 = v360;
  sub_1B62C9DA8(v315, (uint64_t)v380, 0x200000000, v422);
  sub_1B62D7DE8((uint64_t)v422, (uint64_t)v431, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v431[0])
  {
    if (v437 > 0)
    {
      uint64_t v336 = v434;
      if (v434)
      {
        uint64_t v215 = *(void *)(v436 + 32);
        int v216 = *(unsigned __int8 *)(v435 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v373[0] = v431[0];
        v373[1] = v431[1];
        uint64_t v374 = v432;
        unint64_t v332 = v436 + 48;
        uint64_t v333 = v433;
        v341.n128_u64[0] = v436;
        uint64_t v331 = (unsigned char *)(v436 + 64);
        v342.n128_u64[0] = (unint64_t)&v478;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v217 = 0;
        LODWORD(v334) = v216;
        long long v335 = (_OWORD *)v215;
        do
        {
          uint64_t v218 = (unsigned int *)&v333[48 * (void)v217];
          unint64_t v338 = *v218;
          uint64_t v337 = v218[1];
          uint64_t v220 = (uint64_t *)*((void *)v218 + 2);
          uint64_t v219 = *((void *)v218 + 3);
          uint64_t v222 = *((void *)v218 + 4);
          uint64_t v221 = *((void *)v218 + 5);
          v344.i64[0] = v11;
          __n128 v340 = v217;
          if (v216)
          {
            uint64_t v223 = *(os_unfair_lock_s **)(v221 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v223);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v221 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v215);
          sub_1B62D7DE8(v332, (uint64_t)v474, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v224 = v341.n128_u64[0];
          uint64_t v225 = *(void *)(v341.n128_u64[0] + 32);
          uint64_t v226 = *(void *)(*(void *)(*(void *)(*(void *)(v221 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          *(void *)(v224 + 48) = ecs_stack_allocator_allocate(v225, 48 * v226, 8);
          *(void *)(v224 + 56) = v226;
          unsigned int v227 = v331;
          *((void *)v331 + 1) = 0;
          v227[2] = 0;
          *unsigned int v227 = 0;
          swift_release();
          uint64_t v228 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v220, v219, v222, v224);
          uint64_t v229 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, v220, v219, v222, v224);
          uint64_t v339 = (char *)v221;
          if (v220)
          {
            uint64_t v11 = v344.i64[0];
            if (v222)
            {
              int v230 = sub_1B67ADC80(0, 0, 255);
              uint64_t v231 = v343.i64[0];
              uint64_t v232 = v328;
              do
              {
                float32x4_t v233 = *v228++;
                float32x4_t v344 = v233;
                float32x4_t v234 = *v229++;
                sub_1B6C1F89C(v234);
                long long v235 = (__int128)v344;
                HIDWORD(v235) = 1.0;
                HIDWORD(v236) = 0;
                v475[0] = v235;
                v475[1] = v236;
                memset(&v475[2], 0, 64);
                char v476 = 0;
                v470.i8[0] = 1;
                sub_1B6D7E4E0(v232, 0x100000000uLL, v231, v475, v230);
                --v222;
              }
              while (v222);
            }
          }
          else
          {
            uint64_t v238 = v337;
            unint64_t v237 = v338;
            uint64_t v11 = v344.i64[0];
            if (v338 != v337)
            {
              int v239 = sub_1B67ADC80(0, 0, 255);
              unint64_t v240 = v238 - v237;
              uint64_t v241 = &v229[v237];
              uint64_t v242 = &v228[v237];
              uint64_t v243 = v343.i64[0];
              uint64_t v244 = v328;
              do
              {
                float32x4_t v245 = *v242++;
                float32x4_t v344 = v245;
                float32x4_t v246 = *v241++;
                sub_1B6C1F89C(v246);
                long long v247 = (__int128)v344;
                HIDWORD(v247) = 1.0;
                HIDWORD(v248) = 0;
                v477[0] = v247;
                v477[1] = v248;
                unint64_t v249 = v342.n128_u64[0];
                *(_OWORD *)v342.n128_u64[0] = 0u;
                *(_OWORD *)(v249 + 16) = 0u;
                *(_OWORD *)(v249 + 32) = 0u;
                *(_OWORD *)(v249 + 48) = 0u;
                *(unsigned char *)(v249 + 64) = 0;
                v470.i8[0] = 1;
                sub_1B6D7E4E0(v244, 0x100000000uLL, v243, v477, v239);
                --v240;
              }
              while (v240);
            }
          }
          sub_1B6345178(v341.n128_u64[0], (unsigned __int16 **)v373, (uint64_t)v474);
          uint64_t v250 = v339;
          sub_1B634507C(v339);
          uint64_t v215 = (uint64_t)v335;
          ecs_stack_allocator_pop_snapshot((uint64_t)v335);
          int v216 = v334;
          if (v334)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v250 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v250 + 47));
          }
          swift_release();
          uint64_t v217 = (void *)((char *)v340 + 1);
        }
        while ((char *)v340 + 1 != v336);
        sub_1B62CA064((uint64_t)v359);
        sub_1B632F1C4(v422, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        sub_1B632F1C4(v422, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        uint64_t v13 = v343.i64[0];
        uint64_t v15 = v328;
        goto LABEL_185;
      }
    }
    sub_1B62CA064((uint64_t)v359);
    sub_1B632F1C4(v422, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  else
  {
    sub_1B62CA064((uint64_t)v359);
  }
  uint64_t v13 = v343.i64[0];
LABEL_185:
  LOBYTE(v18) = v316;
  if ((v316 & 2) == 0) {
    goto LABEL_235;
  }
LABEL_186:
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v388 = qword_1EB997A18;
  int v389 = 0;
  char v390 = 2;
  uint64_t v391 = 0;
  char v392 = 2;
  uint64_t v393 = 0;
  swift_retain();
  sub_1B6A6ED00(1, (uint64_t)v361);
  swift_release();
  sub_1B62C6034(0, (unint64_t *)&qword_1EB980B60, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent, MEMORY[0x1E4FBBE00]);
  uint64_t v251 = swift_allocObject();
  *(_OWORD *)(v251 + 16) = v312;
  *(void *)(v251 + 56) = &type metadata for EmitterReference;
  *(void *)(v251 + 64) = &off_1F0F6BD40;
  *(_DWORD *)(v251 + 32) = v314;
  *(_DWORD *)(v251 + 36) = v313;
  sub_1B62A1250(v251, (uint64_t)v362);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v361);
  v378[0] = v362[0];
  v378[1] = v362[1];
  uint64_t v379 = v363;
  sub_1B62C9DA8(v315, (uint64_t)v378, 0x200000000, v423);
  sub_1B62D7DE8((uint64_t)v423, (uint64_t)v424, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v424[0])
  {
    sub_1B62CA064((uint64_t)v362);
    uint64_t v13 = v343.i64[0];
    goto LABEL_234;
  }
  uint64_t v13 = v343.i64[0];
  if (v430 <= 0 || (uint64_t v334 = v427) == 0)
  {
    sub_1B62CA064((uint64_t)v362);
    goto LABEL_233;
  }
  uint64_t v252 = v429;
  uint64_t v253 = v429[4];
  int v254 = *(unsigned __int8 *)(v428 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  long long v375 = v424[0];
  long long v376 = v424[1];
  uint64_t v377 = v425;
  unint64_t v332 = (unint64_t)(v429 + 8);
  uint64_t v333 = v426;
  uint64_t v331 = v473;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v255 = 0;
  LODWORD(v330) = v254;
  uint64_t v329 = v253;
  while (2)
  {
    uint64_t v256 = *(void *)&v333[48 * (void)v255 + 40];
    uint64_t v336 = v255;
    if (v254)
    {
      uint64_t v257 = *(os_unfair_lock_s **)(v256 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v257);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v256 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v253);
    unint64_t v258 = v252[6];
    __n128 v340 = (void *)v252[7];
    v341.n128_u64[0] = v258;
    uint64_t v259 = (char *)v252[8];
    unint64_t v338 = v252[9];
    uint64_t v339 = v259;
    uint64_t v337 = v252[10];
    uint64_t v260 = v252[4];
    uint64_t v261 = *(void *)(*(void *)(*(void *)(*(void *)(v256 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v252[6] = ecs_stack_allocator_allocate(v260, 48 * v261, 8);
    v252[7] = v261;
    int v262 = (void *)v332;
    *(void *)(v332 + 8) = 0;
    v262[2] = 0;
    *int v262 = 0;
    swift_release();
    float32x4_t v344 = *(float32x4_t *)(v256 + 272);
    uint64_t v263 = *(void *)(v256 + 288);
    uint64_t v264 = *(void *)(v256 + 296);
    sub_1B6E33918();
    long long v335 = (_OWORD *)v256;
    sub_1B6E33928();
    v463.i64[0] = sub_1B6E33988();
    sub_1B6E33098();
    sub_1B6E33998();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    v347[4] = v465;
    v347[5] = v466;
    uint64_t v348 = v467;
    v347[2] = v463;
    v347[3] = v464;
    uint64_t v265 = sub_1B6E33978();
    float32x4_t v470 = v344;
    uint64_t v471 = v263;
    uint64_t v472 = v264;
    uint64_t v266 = v331;
    *(_OWORD *)uint64_t v331 = 0u;
    v266[1] = 0u;
    _OWORD v266[2] = 0u;
    v266[3] = 0u;
    v473[64] = 6;
    v463.i8[0] = 1;
    sub_1B6D7E4E0(v15, 0x100000000uLL, v13, (long long *)&v470, v265 | 0xFF000000);
    v344.i64[0] = v11;
    unint64_t v267 = v252[6];
    v342.n128_u64[0] = v252[8];
    if (!v342.n128_u64[0])
    {
      uint64_t v292 = v252[7];
      uint64_t v293 = (void *)v252[4];
      int v254 = v330;
      goto LABEL_228;
    }
    uint64_t v268 = 0;
    while (2)
    {
      unint64_t v270 = v267;
      uint64_t v271 = (uint64_t *)(v267 + 48 * v268);
      uint64_t v272 = *v271;
      uint64_t v273 = (void (*)(uint64_t))v271[4];
      uint64_t v274 = v252;
      uint64_t v275 = v252[9];
      if (v275) {
        BOOL v276 = v272 == v275;
      }
      else {
        BOOL v276 = 0;
      }
      if (v276) {
        goto LABEL_198;
      }
      uint64_t v277 = v375;
      if (!*(_WORD *)(v375 + 22)) {
        goto LABEL_198;
      }
      uint64_t v278 = v271[2];
      uint64_t v279 = v375 + 41;
      unint64_t v280 = *(unsigned __int16 *)(v375 + 18);
      if (v280 >= 0x10)
      {
        uint64_t v281 = (void *)(v279 + *(unsigned __int16 *)(v375 + 16));
        unint64_t v282 = v280 >> 4;
        uint64_t v283 = v375 + 41;
        while (*v281 != v272)
        {
          ++v283;
          v281 += 2;
          if (!--v282) {
            goto LABEL_214;
          }
        }
        unsigned int v284 = *(unsigned __int8 *)(v283 + *(unsigned __int16 *)(v375 + 20));
        BOOL v285 = v284 > 5;
        int v286 = (1 << v284) & 0x23;
        if (v285 || v286 == 0)
        {
LABEL_198:
          uint64_t v269 = swift_retain();
          v273(v269);
          swift_release();
          goto LABEL_199;
        }
      }
LABEL_214:
      if (swift_conformsToProtocol2()) {
        uint64_t v288 = v278;
      }
      else {
        uint64_t v288 = 0;
      }
      if (!v288) {
        goto LABEL_199;
      }
      if (sub_1B63462F4(v288)) {
        goto LABEL_198;
      }
      unint64_t v289 = *(unsigned __int16 *)(v277 + 18);
      if (v289 < 0x10) {
        goto LABEL_198;
      }
      uint64_t v290 = (void *)(v279 + *(unsigned __int16 *)(v277 + 16));
      uint64_t v291 = 16 * (v289 >> 4);
      while (*v290 != v288)
      {
        v290 += 2;
        v291 -= 16;
        if (!v291) {
          goto LABEL_198;
        }
      }
LABEL_199:
      ++v268;
      uint64_t v252 = v274;
      unint64_t v267 = v270;
      if (v268 != v342.n128_u64[0]) {
        continue;
      }
      break;
    }
    uint64_t v292 = v274[7];
    unint64_t v267 = v274[6];
    uint64_t v293 = (void *)v274[4];
    int v254 = v330;
    if ((uint64_t)v274[8] >= 1)
    {
      unint64_t v294 = v274[6];
      swift_arrayDestroy();
      unint64_t v267 = v294;
    }
    uint64_t v13 = v343.i64[0];
    uint64_t v15 = v328;
    uint64_t v253 = v329;
LABEL_228:
    uint64_t v296 = (uint64_t)v335;
    uint64_t v295 = v336;
    ecs_stack_allocator_deallocate(v293, v267, 48 * v292);
    uint64_t v297 = v340;
    v252[6] = v341.n128_u64[0];
    v252[7] = v297;
    unint64_t v298 = v338;
    v252[8] = v339;
    v252[9] = v298;
    v252[10] = v337;
    sub_1B634507C((char *)v296);
    ecs_stack_allocator_pop_snapshot(v253);
    if (v254)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v296 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v296 + 376));
    }
    swift_release();
    uint64_t v255 = v295 + 1;
    uint64_t v11 = v344.i64[0];
    if (v255 != (char *)v334) {
      continue;
    }
    break;
  }
  sub_1B62CA064((uint64_t)v362);
  sub_1B632F1C4(v423, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_233:
  sub_1B632F1C4(v423, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_234:
  LOBYTE(v18) = v316;
LABEL_235:
  if ((*(unsigned char *)(v311 + 77) & 1) == 0 || (v18 & 0x40) == 0) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v299 = sub_1B6BFA5EC(v314, v315);
  float32x4_t v346 = 0u;
  v347[0] = 0u;
  unint64_t v300 = *(float32x4_t **)(v299 + 16);
  vfx_uniform_grid_get_aabb((uint64_t)v300, v347, (__n128 *)&v346);
  float32x4_t v302 = v346;
  float32x4_t v301 = (float32x4_t)v347[0];
  v301.i32[3] = 1.0;
  v302.i32[3] = 1.0;
  v303.i64[0] = 0x3F0000003F000000;
  v303.i64[1] = 0x3F0000003F000000;
  float32x4_t v343 = vmulq_f32(vsubq_f32(v302, v301), v303);
  float32x4_t v344 = vmulq_f32(vaddq_f32(v301, v302), v303);
  int v304 = sub_1B67ADC80(255, 128, 0);
  float32x4_t v463 = v344;
  float32x4_t v464 = v343;
  long long v465 = 0u;
  long long v466 = 0u;
  long long v467 = 0u;
  long long v468 = 0u;
  char v469 = 6;
  LOBYTE(v345[0]) = 1;
  sub_1B6D7E4E0(v15, 0x100000000uLL, v13, (long long *)&v463, v304);
  uint64_t v305 = swift_allocObject();
  *(void *)(v305 + 16) = v13;
  *(void *)(v305 + 24) = v15;
  uint64_t v306 = swift_allocObject();
  *(void *)(v306 + 16) = sub_1B6C1F85C;
  *(void *)(v306 + 24) = v305;
  v345[4] = sub_1B6C1F874;
  v345[5] = v306;
  v345[0] = MEMORY[0x1E4F143A8];
  v345[1] = 1107296256;
  _OWORD v345[2] = sub_1B6C18ED4;
  v345[3] = &unk_1F0FBA2C0;
  uint64_t v307 = _Block_copy(v345);
  swift_release();
  vfx_uniform_grid_for_each_cell(v300, (uint64_t)v307, v308, v309);
  swift_release();
  _Block_release(v307);
  return swift_release();
}

uint64_t sub_1B6352CA8(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v4 = v3;
  sub_1B62E17B4();
  unint64_t v294 = v5;
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v293 = (char *)&v288 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v292 = sub_1B6E31098();
  uint64_t v8 = *(void *)(v292 - 8);
  MEMORY[0x1F4188790](v292, v9);
  uint64_t v291 = (char *)&v288 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!result) {
    return result;
  }
  uint64_t v312 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  swift_retain();
  CACurrentMediaTime();
  v561[0] = *(_OWORD *)(v2 + 104);
  v561[1] = *(_OWORD *)(v2 + 120);
  uint64_t v303 = v2;
  uint64_t v562 = *(void *)(v2 + 136);
  uint64_t v302 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  sub_1B62C9DA8(v4, (uint64_t)v561, 0x200000000, v314);
  sub_1B6355BE8((uint64_t)v314, (uint64_t)v414, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v310 = v4;
  if (!*(void *)&v414[0]) {
    goto LABEL_51;
  }
  if (v420 <= 0 || (unint64_t v305 = v417) == 0)
  {
    sub_1B6355CB4(v314, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_51:
    uint64_t j = 0;
    goto LABEL_53;
  }
  uint64_t v296 = v8;
  uint64_t v12 = v419[4];
  unint64_t v309 = (unint64_t)v418;
  int v13 = *((unsigned __int8 *)v418 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v421[0] = v414[0];
  v421[1] = v414[1];
  uint64_t v422 = v415;
  uint64_t v299 = (uint64_t)(v419 + 6);
  unint64_t v300 = (void *)v416;
  uint64_t v311 = v419;
  uint64_t v297 = (uint64_t)(v419 + 13);
  uint64_t v298 = (uint64_t)(v419 + 8);
  swift_retain_n();
  uint64_t v14 = 0;
  uint64_t j = 0;
  LODWORD(v301) = v13;
  uint64_t v304 = v12;
  do
  {
    double v308 = v14;
    uint64_t v16 = (unsigned int *)&v300[6 * (void)v14];
    uint64_t v18 = *v16;
    uint64_t v17 = (void *)v16[1];
    uint64_t v19 = v16[2];
    uint64_t v20 = (uint64_t *)*((void *)v16 + 2);
    uint64_t v21 = *((void *)v16 + 4);
    uint64_t v22 = *((void *)v16 + 5);
    uint64_t v306 = j;
    uint64_t v307 = v17;
    if (v13)
    {
      int v23 = *(os_unfair_lock_s **)(v22 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v23);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v12);
    sub_1B6355BE8(v299, (uint64_t)v559, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v24 = v311;
    uint64_t v25 = v311[4];
    uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v22 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v24[6] = (uint64_t)ecs_stack_allocator_allocate(v25, 48 * v26, 8);
    v24[7] = v26;
    uint64_t v27 = (void *)v298;
    *(void *)(v298 + 8) = 0;
    uint64_t v27[2] = 0;
    *uint64_t v27 = 0;
    swift_release();
    if (v20)
    {
      uint64_t j = v306;
      if (!v21) {
        goto LABEL_36;
      }
      while (1)
      {
        uint64_t v29 = *v20++;
        uint64_t v28 = v29;
        v559[5] = v309;
        v559[6] = v22;
        v559[7] = v311;
        v559[8] = v19;
        v559[9] = v29;
        uint64_t v30 = sub_1B62C91B8((uint64_t)&type metadata for TextureLoadPolicy);
        if ((v31 & 1) != 0 || !*(unsigned char *)(v30 + 4 * v28))
        {
          uint64_t v32 = sub_1B62C91B8((uint64_t)&type metadata for TextureLoadingOptions);
          if ((v33 & 1) == 0)
          {
            uint64_t v34 = *(void *)(v32 + (v28 << 6));
            if ((v34 & 1) == 0) {
              *(void *)(v32 + (v28 << 6)) = v34 | 1;
            }
          }
        }
        else
        {
          if (*(unsigned char *)(v30 + 4 * v28) != 1)
          {
            sub_1B6CF0A8C(0);
            goto LABEL_24;
          }
          sub_1B6345398(*(void *)(v22 + 40), (uint64_t)&type metadata for TextureLoadRequestCPU, &v524);
          if ((v524 & 1) == 0) {
            goto LABEL_24;
          }
        }
        sub_1B6CF0394(0);
LABEL_24:
        uint64_t v35 = sub_1B62C91B8((uint64_t)&type metadata for TextureLoadPolicy);
        if ((v36 & 1) != 0 || !*(unsigned char *)(v35 + 4 * v28 + 1))
        {
          uint64_t v37 = sub_1B62C91B8((uint64_t)&type metadata for TextureLoadingOptions);
          if ((v38 & 1) == 0)
          {
            uint64_t v39 = *(void *)(v37 + (v28 << 6));
            if ((v39 & 2) == 0) {
              *(void *)(v37 + (v28 << 6)) = v39 | 2;
            }
          }
        }
        else
        {
          if (*(unsigned char *)(v35 + 4 * v28 + 1) != 1)
          {
            sub_1B6CF0B98(0);
            goto LABEL_14;
          }
          sub_1B6345398(*(void *)(v22 + 40), (uint64_t)&type metadata for TextureLoadRequestGPU, &v524);
          if ((v524 & 1) == 0) {
            goto LABEL_14;
          }
        }
        sub_1B6365A30(0);
LABEL_14:
        ++v19;
        if (!--v21) {
          goto LABEL_36;
        }
      }
    }
    uint64_t j = v306;
    unint64_t v40 = v307;
    if (v18 != v307)
    {
      do
      {
        v560[0] = v309;
        v560[1] = v22;
        v560[2] = v311;
        v560[3] = v19;
        v560[4] = v18;
        sub_1B63560B0((uint64_t)v560);
        ++v19;
        ++v18;
      }
      while (v40 != (void *)v18);
    }
LABEL_36:
    uint64_t v41 = v311;
    sub_1B6345178(v311, (unsigned __int16 **)v421, (uint64_t)v559);
    uint64_t v4 = v310;
    if (*(void *)(v41[13] + 16))
    {
      uint64_t v42 = swift_bridgeObjectRetain();
      uint64_t v43 = v311;
      sub_1B639147C(v42, v22);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v45 = v43[13];
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1B6399BB8(0, *(void *)(v45 + 16));
      }
      else
      {
        uint64_t v46 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(v45 + 24) >= 2uLL)
        {
          sub_1B638C1B8(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
          uint64_t v46 = (void *)swift_allocObject();
          size_t v47 = j__malloc_size(v46);
          _OWORD v46[2] = 0;
          v46[3] = 2 * ((uint64_t)(v47 - 32) / 72);
        }
        *(void *)uint64_t v297 = v46;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v311[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        long long v48 = *(char **)(v22 + 232);
        long long v49 = *(char **)(v22 + 256);
        if (v48 == v49)
        {
          float v50 = *(char **)(v22 + 240);
        }
        else
        {
          sub_1B666018C(v49, v48);
          long long v49 = *(char **)(v22 + 232);
          float v50 = *(char **)(v22 + 240);
          if (v50 == v49)
          {
            float v50 = 0;
            long long v49 = 0;
            *(void *)(v22 + 232) = 0;
            *(void *)(v22 + 240) = 0;
          }
        }
        *(void *)(v22 + 248) = v50;
        *(void *)(v22 + 256) = v49;
      }
    }
    uint64_t v12 = v304;
    ecs_stack_allocator_pop_snapshot(v304);
    int v13 = v301;
    if (v301)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 376));
    }
    swift_release();
    uint64_t v14 = (uint64_t *)((char *)v308 + 1);
  }
  while ((uint64_t *)((char *)v308 + 1) != (uint64_t *)v305);
  swift_release();
  sub_1B6355CB4(v314, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  swift_release();
  uint64_t v8 = v296;
LABEL_53:
  v557[0] = *(_OWORD *)(v303 + 184);
  v557[1] = *(_OWORD *)(v303 + 200);
  uint64_t v558 = *(void *)(v303 + 216);
  sub_1B62C9DA8(v4, (uint64_t)v557, 0x200000000, v315);
  sub_1B6355BE8((uint64_t)v315, (uint64_t)v407, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v407[0])
  {
    if (v413 > 0 && (double v308 = v410) != 0)
    {
      uint64_t v296 = v8;
      uint64_t v307 = v411;
      float v51 = v412;
      uint64_t v52 = v412[4];
      int v53 = *((unsigned __int8 *)v411 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      v423[0] = v407[0];
      v423[1] = v407[1];
      uint64_t v424 = v408;
      unint64_t v300 = v412 + 6;
      uint64_t v301 = v409;
      uint64_t v298 = (uint64_t)(v412 + 13);
      uint64_t v299 = (uint64_t)(v412 + 8);
      swift_retain_n();
      uint64_t v54 = 0;
      LODWORD(v304) = v53;
      unint64_t v305 = v52;
      do
      {
        uint64_t v311 = v54;
        char v55 = (unsigned int *)(v301 + 48 * (void)v54);
        uint64_t v56 = *v55;
        unint64_t v309 = v55[1];
        uint64_t v57 = v55[2];
        unint64_t v58 = (uint64_t *)*((void *)v55 + 2);
        uint64_t v59 = *((void *)v55 + 4);
        uint64_t v60 = *((void *)v55 + 5);
        uint64_t v306 = j;
        if (v53)
        {
          uint64_t v61 = *(os_unfair_lock_s **)(v60 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v61);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v60 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v52);
        sub_1B6355BE8((uint64_t)v300, (uint64_t)v554, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v62 = v51[4];
        uint64_t v63 = *(void *)(*(void *)(*(void *)(*(void *)(v60 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v51[6] = ecs_stack_allocator_allocate(v62, 48 * v63, 8);
        v51[7] = v63;
        uint64_t v64 = (void *)v299;
        *(void *)(v299 + 8) = 0;
        v64[2] = 0;
        *uint64_t v64 = 0;
        swift_release();
        if (v58)
        {
          uint64_t j = v306;
          for (uint64_t i = v307; v59; --v59)
          {
            uint64_t v66 = *v58++;
            v555[0] = i;
            v555[1] = v60;
            v555[2] = v51;
            v555[3] = v57;
            v555[4] = v66;
            sub_1B63560B0((uint64_t)v555);
            ++v57;
          }
        }
        else
        {
          unint64_t v67 = v309;
          uint64_t j = v306;
          char v68 = v307;
          if (v56 != v309)
          {
            do
            {
              v556[0] = v68;
              v556[1] = v60;
              v556[2] = v51;
              v556[3] = v57;
              v556[4] = v56;
              sub_1B63560B0((uint64_t)v556);
              ++v57;
              ++v56;
            }
            while (v67 != v56);
          }
        }
        sub_1B6345178(v51, (unsigned __int16 **)v423, (uint64_t)v554);
        uint64_t v4 = v310;
        if (*(void *)(v51[13] + 16))
        {
          uint64_t v69 = swift_bridgeObjectRetain();
          sub_1B639147C(v69, v60);
          swift_bridgeObjectRelease();
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            uint64_t v70 = sub_1B6355ED4(v51[13]);
            sub_1B6399BB8(0, v70);
          }
          else
          {
            uint64_t v71 = sub_1B6785688(v51[13]);
            unint64_t v72 = sub_1B6785800(0, v71);
            *(void *)uint64_t v298 = v72;
            swift_bridgeObjectRelease();
          }
          if (*(unsigned __int8 *)(v51[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
          {
            char v73 = *(char **)(v60 + 232);
            uint64_t v74 = *(char **)(v60 + 256);
            if (v73 == v74)
            {
              long long v75 = *(char **)(v60 + 240);
            }
            else
            {
              sub_1B666018C(v74, v73);
              uint64_t v74 = *(char **)(v60 + 232);
              long long v75 = *(char **)(v60 + 240);
              if (v75 == v74)
              {
                long long v75 = 0;
                uint64_t v74 = 0;
                *(void *)(v60 + 232) = 0;
                *(void *)(v60 + 240) = 0;
              }
            }
            *(void *)(v60 + 248) = v75;
            *(void *)(v60 + 256) = v74;
          }
        }
        uint64_t v52 = v305;
        ecs_stack_allocator_pop_snapshot(v305);
        int v53 = v304;
        if (v304)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v60 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v60 + 376));
        }
        swift_release();
        uint64_t v54 = (uint64_t *)((char *)v311 + 1);
      }
      while ((uint64_t *)((char *)v311 + 1) != v308);
      swift_release();
      sub_1B6355CB4(v315, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      swift_release();
      uint64_t v8 = v296;
    }
    else
    {
      sub_1B6355CB4(v315, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
  }
  v552[0] = *(_OWORD *)(v303 + 24);
  v552[1] = *(_OWORD *)(v303 + 40);
  uint64_t v553 = *(void *)(v303 + 56);
  sub_1B62C9DA8(v4, (uint64_t)v552, 0x200000000, v316);
  sub_1B6355BE8((uint64_t)v316, (uint64_t)v406, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v76 = MEMORY[0x1E4FBC860];
  if (*(void *)&v406[0])
  {
    v406[8] = v406[2];
    v406[9] = v406[3];
    v406[10] = v406[4];
    v406[11] = v406[5];
    v406[6] = v406[0];
    v406[7] = v406[1];
    uint64_t v76 = sub_1B6363800();
    sub_1B6355CB4(v316, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v77 = *(void *)(v76 + 16);
  if (v77)
  {
    uint64_t v78 = v4;
    uint64_t v79 = 0;
    long long v80 = (uint64_t *)(v78 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v311 = (uint64_t *)(v76 + 32);
    uint64_t v290 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v288 = v76;
    uint64_t v289 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
    unint64_t v300 = (void *)0x80000001B6F52610;
    uint64_t v301 = 0xD000000000000016;
    uint64_t v295 = v77;
    uint64_t v307 = (void *)(v78 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    do
    {
      long long v81 = &v311[v79];
      uint64_t v82 = *((unsigned int *)v81 + 1);
      uint64_t v83 = *(int *)v81;
      BOOL v84 = v83 == -1 && v82 == 0;
      if (!v84 && (v83 & 0x80000000) == 0 && v80[1] > v83)
      {
        uint64_t v85 = *v80 + 12 * (int)v83;
        if (v82 == -1 || *(_DWORD *)(v85 + 8) == v82)
        {
          uint64_t v87 = *(void *)(*(void *)(v310 + 136) + 8 * *(int *)(*v80 + 12 * (int)v83) + 32);
          uint64_t v88 = *(void *)(v87 + 48);
          uint64_t v89 = *(void *)(v88 + 16);
          if (v89)
          {
            uint64_t v304 = v82;
            uint64_t v90 = *(__int16 *)(v85 + 4);
            long long v91 = (void *)(v88 + 56);
            while ((ValueMetadata *)*(v91 - 3) != &type metadata for TextureLoadingOptions)
            {
              v91 += 5;
              if (!--v89) {
                goto LABEL_87;
              }
            }
            unint64_t v309 = *(void *)(*(void *)(v87 + 128) + *v91 + (v90 << 6));
            double v308 = (uint64_t *)sub_1B6355ED4((uint64_t)qword_1F0F66E18);
            if (v308)
            {
              long long v92 = 0;
              unint64_t v305 = v83 | (unint64_t)(v304 << 32);
              long long v80 = v307;
              do
              {
                uint64_t v93 = qword_1F0F66E18[(void)v92 + 4];
                float v94 = &type metadata for TextureRequireCPURepresentation;
                unint64_t v95 = &off_1F0F9AEA8;
                switch(v93)
                {
                  case 1:
                    break;
                  case 2:
                    float v94 = &type metadata for TextureRequireGPURepresentation;
                    unint64_t v95 = &off_1F0F9AF80;
                    break;
                  case 3:
                  case 5:
                  case 6:
                  case 7:
                  case 9:
                  case 10:
                  case 11:
                  case 12:
                  case 13:
                  case 14:
                  case 15:
                  case 17:
                  case 18:
                  case 19:
                  case 20:
                  case 21:
                  case 22:
                  case 23:
                  case 24:
                  case 25:
                  case 26:
                  case 27:
                  case 28:
                  case 29:
                  case 30:
                  case 31:
                  case 33:
                  case 34:
                  case 35:
                  case 36:
                  case 37:
                  case 38:
                  case 39:
                  case 40:
                  case 41:
                  case 42:
                  case 43:
                  case 44:
                  case 45:
                  case 46:
                  case 47:
                  case 48:
                  case 49:
                  case 50:
                  case 51:
                  case 52:
                  case 53:
                  case 54:
                  case 55:
                  case 56:
                  case 57:
                  case 58:
                  case 59:
                  case 60:
                  case 61:
                  case 62:
                  case 63:
                    goto LABEL_113;
                  case 4:
                    float v94 = &type metadata for TextureRequireNonSRGB;
                    unint64_t v95 = &off_1F0F8BC28;
                    break;
                  case 8:
                    float v94 = &type metadata for TextureRequireUnpremultiply;
                    unint64_t v95 = &off_1F0F985A8;
                    break;
                  case 16:
                    float v94 = &type metadata for TextureRequireCubemap;
                    unint64_t v95 = &off_1F0F8BB50;
                    break;
                  case 32:
                    float v94 = &type metadata for TextureRequireMipmap;
                    unint64_t v95 = &off_1F0F84158;
                    break;
                  case 64:
                    float v94 = &type metadata for TextureRequireMipmapGeneration;
                    unint64_t v95 = &off_1F0F9AA80;
                    break;
                  default:
                    if (v93 == 128)
                    {
                      float v94 = &type metadata for TextureRequirePremultiplyWithLinearAlpha;
                      unint64_t v95 = &off_1F0F9DE18;
                    }
                    else if (v93 == 256)
                    {
                      float v94 = &type metadata for TextureRequireIOSurface;
                      unint64_t v95 = &off_1F0F91838;
                    }
                    else
                    {
LABEL_113:
                      if (qword_1EB9852D0 != -1) {
                        swift_once();
                      }
                      uint64_t v299 = qword_1EB997FD0;
                      swift_retain();
                      char v96 = sub_1B6E32148();
                      if (qword_1EB9854F8 != -1) {
                        swift_once();
                      }
                      uint64_t v306 = j;
                      uint64_t v97 = qword_1EB997FF0;
                      uint64_t v98 = qword_1EB985528;
                      swift_retain();
                      if (v98 != -1) {
                        swift_once();
                      }
                      sub_1B62C6100(0, (unint64_t *)&qword_1EB9855A0, (unint64_t *)&qword_1EB9852E0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
                      uint64_t v99 = swift_allocObject();
                      uint64_t v100 = sub_1B68D6DD0(v99, 1);
                      uint64_t v102 = v101;
                      v101[3] = MEMORY[0x1E4FBB1A0];
                      v101[4] = sub_1B678615C();
                      uint64_t v103 = (uint64_t)v300;
                      *uint64_t v102 = v301;
                      v102[1] = v103;
                      nullsub_1(v100);
                      sub_1B6E31258();
                      swift_bridgeObjectRelease();
                      swift_retain();
                      uint64_t v104 = v291;
                      sub_1B6E31088();
                      uint64_t v297 = v294[12];
                      uint64_t v298 = v97;
                      uint64_t v296 = v294[16];
                      char v105 = v96;
                      uint64_t v106 = (uint64_t)v293;
                      uint64_t v107 = &v293[v294[20]];
                      (*v290)(v293, v104, v292);
                      *(unsigned char *)(v106 + v297) = v105;
                      *(void *)(v106 + v296) = 0;
                      uint64_t v108 = (uint64_t)v300;
                      *(void *)uint64_t v107 = v301;
                      *((void *)v107 + 1) = v108;
                      sub_1B6E31368();
                      swift_release();
                      sub_1B62C0094(v106, (uint64_t (*)(void))sub_1B62E17B4);
                      swift_release();
                      swift_release();
                      float v94 = &type metadata for NullEntityComponent;
                      unint64_t v95 = &off_1F0F7CFF8;
                      uint64_t j = v306;
                      long long v80 = v307;
                      uint64_t v77 = v295;
                    }
                    break;
                }
                if ((v93 & ~v309) != 0)
                {
                  if (v80[1] > v83)
                  {
                    uint64_t v109 = *v80;
                    if (v304 == -1 || *(_DWORD *)(v109 + 12 * (int)v83 + 8) == v304)
                    {
                      uint64_t v110 = (int *)(v109 + 12 * (int)v83);
                      uint64_t v111 = *((__int16 *)v110 + 2);
                      uint64_t v112 = *(void **)(*(void *)(v310 + 136) + 8 * *v110 + 32);
                      if (v112[29] <= v111 && v112[30] > v111)
                      {
                        uint64_t v306 = j;
                        uint64_t v114 = **(void **)(v310 + v289);
                        uint64_t v115 = (uint64_t)v112;
                        char v116 = (os_unfair_lock_s *)v112[43];
                        swift_retain();
                        os_unfair_lock_lock(v116);
                        uint64_t v299 = v114;
                        ecs_stack_allocator_push_snapshot(*(void *)(v114 + 32));
                        uint64_t v298 = v115;
                        uint64_t v117 = *(void *)(*(void *)(v115 + 40) + 16);
                        uint64_t v118 = *(void *)(v117 + 128);
                        if (*(void *)(v118 + 16)
                          && (unint64_t v119 = sub_1B62C1A30((uint64_t)v94), (v120 & 1) != 0)
                          && *(ValueMetadata **)(*(void *)(v117 + 24)
                                               + 16 * *(void *)(*(void *)(v118 + 56) + 8 * v119)
                                               + 32) == v94)
                        {
                          *(void *)&long long v513 = v94;
                          *((void *)&v513 + 1) = v95;
                          LOBYTE(v516) = 1;
                          uint64_t v123 = v299 + 104;
                          uint64_t v124 = *(void *)(v299 + 104);
                          uint64_t v125 = sub_1B6355ED4(v124);
                          if (v125)
                          {
                            uint64_t v126 = v125;
                            uint64_t v297 = v123;
                            uint64_t v127 = v124 + 32;
                            swift_retain();
                            uint64_t v296 = v124;
                            swift_bridgeObjectRetain();
                            uint64_t v128 = 0;
                            long long v129 = v306;
                            while (1)
                            {
                              sub_1B6D0B130(v127, (uint64_t)&v524, (uint64_t (*)(void))sub_1B63B29DC);
                              char v130 = sub_1B6B1E658((uint64_t)&v524, (uint64_t)&v513);
                              sub_1B62C0094((uint64_t)&v524, (uint64_t (*)(void))sub_1B63B29DC);
                              if (v130) {
                                break;
                              }
                              ++v128;
                              v127 += 72;
                              if (v126 == v128)
                              {
                                uint64_t v306 = v129;
                                swift_bridgeObjectRelease();
                                uint64_t v131 = v298;
                                goto LABEL_145;
                              }
                            }
                            uint64_t v306 = v129;
                            swift_bridgeObjectRelease();
                            uint64_t v138 = sub_1B6B1B930();
                            uint64_t v139 = *(void *)(v137 + 48);
                            if (v139)
                            {
                              uint64_t v140 = *(void *)(v137 + 64);
                              *(void *)(v139 + 8 * v140) = v111;
                              *(void *)(v137 + 64) = v140 + 1;
                            }
                            ((void (*)(long long *, void))v138)(&v524, 0);
                          }
                          else
                          {
                            uint64_t v131 = swift_retain();
LABEL_145:
                            uint64_t v132 = *(void *)(v131 + 240) - *(void *)(v131 + 232);
                            uint64_t v133 = v299;
                            uint64_t v134 = ecs_stack_allocator_allocate(*(void *)(v299 + 32), 8 * v132, 8);
                            *uint64_t v134 = v111;
                            sub_1B639192C((uint64_t)&v513, (uint64_t)&v524);
                            uint64_t v528 = (uint64_t)v134;
                            uint64_t v529 = v132;
                            uint64_t v530 = 1;
                            sub_1B69FFBD4();
                            uint64_t v135 = *(void *)(*(void *)(v133 + 104) + 16);
                            sub_1B69FFCD8(v135);
                            sub_1B69FFDCC(v135, (uint64_t)&v524);
                            nullsub_1(v136);
                          }
                          uint64_t v121 = v298;
                          sub_1B6391400((uint64_t)&v513);
                        }
                        else
                        {
                          uint64_t v121 = v298;
                          swift_retain();
                        }
                        uint64_t v122 = v299;
                        sub_1B634507C((char *)v121);
                        swift_release();
                        ecs_stack_allocator_pop_snapshot(*(void *)(v122 + 32));
                        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v121 + 344));
                        swift_release();
                        uint64_t j = v306;
                        long long v80 = v307;
                        uint64_t v77 = v295;
                      }
                    }
                  }
                }
                else
                {
                  sub_1B62E364C((uint64_t)v94, (uint64_t)v95, v305);
                  long long v80 = v307;
                }
                long long v92 = (uint64_t *)((char *)v92 + 1);
              }
              while (v92 != v308);
            }
            else
            {
              long long v80 = v307;
            }
          }
        }
      }
LABEL_87:
      ++v79;
    }
    while (v79 != v77);
    swift_bridgeObjectRelease();
    uint64_t v4 = v310;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v141 = v303;
  if (*(unsigned char *)(v4 + 48) == 1)
  {
    long long v142 = *(_OWORD *)(v303 + 80);
    v550[0] = *(_OWORD *)(v303 + 64);
    v550[1] = v142;
    uint64_t v551 = *(void *)(v303 + 96);
    sub_1B62C9DA8(v4, (uint64_t)v550, 0x200000000, v317);
    sub_1B6355BE8((uint64_t)v317, (uint64_t)&v395, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (v395)
    {
      uint64_t v539 = v395;
      int v540 = v396;
      char v541 = v397;
      char v543 = v399;
      uint64_t v542 = v398;
      uint64_t v544 = v400;
      long long v546 = v402;
      long long v547 = v403;
      uint64_t v545 = v401;
      uint64_t v548 = v404;
      uint64_t v549 = v405;
      swift_retain();
      sub_1B6D9C034((uint64_t)&v539, v4);
      swift_release();
      sub_1B6355CB4(v317, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
    uint64_t v141 = v303;
  }
  long long v143 = *(_OWORD *)(v141 + 160);
  v537[0] = *(_OWORD *)(v141 + 144);
  v537[1] = v143;
  uint64_t v538 = *(void *)(v141 + 176);
  sub_1B62C9DA8(v4, (uint64_t)v537, 0x200000000, v318);
  sub_1B6355BE8((uint64_t)v318, (uint64_t)v392, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v392[0])
  {
    uint64_t v306 = j;
    if (v394 >= 1 && v393)
    {
      uint64_t v144 = 48 * v393;
      uint64_t v145 = v392[5] + 40;
      do
      {
        uint64_t v150 = *(void *)v145;
        int v151 = *(os_unfair_lock_s **)(*(void *)v145 + 376);
        swift_retain();
        os_unfair_lock_lock(v151);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v150 + 344));
        int v152 = *(_DWORD *)(v150 + 24);
        swift_retain();
        uint64_t v526 = 0;
        long long v525 = 0u;
        long long v524 = 0u;
        uint64_t v515 = 0;
        long long v513 = 0u;
        long long v514 = 0u;
        int v153 = sub_1B637F628(v152, (uint64_t)&type metadata for TextureGPURepresentationDoNotUpload, (uint64_t)&off_1F0F9C838, 0, 0, (uint64_t)&v524, (uint64_t)&v513);
        swift_release();
        sub_1B6386458((uint64_t)&v513);
        sub_1B6386458((uint64_t)&v524);
        if (sub_1B63B4340(v153))
        {
          sub_1B66603E4(v153);
        }
        else
        {
          uint64_t v146 = *(void *)(v150 + 232);
          uint64_t v147 = *(void *)(v150 + 240);
          char v148 = *(unsigned char *)(v150 + 120);
          uint64_t v149 = *(unsigned int *)(v150 + 28);
          LOBYTE(v524) = *(unsigned char *)(v150 + 32);
          sub_1B628EEF4(v146, v147, v153, v148, v149 | ((unint64_t)v524 << 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v150 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v150 + 376));
        swift_release();
        v145 += 48;
        v144 -= 48;
      }
      while (v144);
    }
    sub_1B6355CB4(v318, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    uint64_t v4 = v310;
    uint64_t j = v306;
  }
  long long v154 = *(_OWORD *)(v303 + 240);
  v535[0] = *(_OWORD *)(v303 + 224);
  v535[1] = v154;
  uint64_t v536 = *(void *)(v303 + 256);
  sub_1B62C9DA8(v4, (uint64_t)v535, 0x200000000, v319);
  sub_1B6355BE8((uint64_t)v319, (uint64_t)v383, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v155 = *(void *)&v383[0];
  if (!*(void *)&v383[0]) {
    goto LABEL_191;
  }
  long long v388 = v383[2];
  long long v389 = v383[3];
  long long v390 = v384;
  long long v391 = v385;
  long long v386 = v383[0];
  long long v387 = v383[1];
  uint64_t v156 = (char *)v384;
  long long v157 = (int *)*((void *)&v385 + 1);
  swift_retain();
  uint64_t v301 = sub_1B63BB408();
  swift_release();
  uint64_t v311 = (uint64_t *)v391;
  uint64_t v306 = j;
  if ((uint64_t)v391 >= 1)
  {
    long long v158 = (void *)*((void *)&v389 + 1);
    if (*((void *)&v389 + 1))
    {
      uint64_t v293 = v156;
      unint64_t v294 = v157;
      uint64_t v295 = v155;
      uint64_t v159 = *((void *)&v390 + 1);
      uint64_t v160 = *(void *)(*((void *)&v390 + 1) + 32);
      uint64_t v161 = *((void *)&v388 + 1);
      unint64_t v300 = (void *)v390;
      int v162 = *(unsigned __int8 *)(v390 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v298 = *((void *)&v390 + 1) + 48;
      swift_retain();
      sub_1B6355CB4(v319, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
      uint64_t v296 = (uint64_t)&v530;
      uint64_t v297 = v159 + 64;
      uint64_t v163 = (void *)(v161 + 24);
      LODWORD(v299) = v162;
      do
      {
        uint64_t v164 = *((unsigned int *)v163 - 6);
        uint64_t v165 = *((unsigned int *)v163 - 5);
        uint64_t v166 = *((unsigned int *)v163 - 4);
        long long v167 = (void *)*v163;
        unint64_t v168 = v163[1];
        long long v169 = (_OWORD *)v163[2];
        double v308 = (uint64_t *)*(v163 - 1);
        unint64_t v309 = (unint64_t)v158;
        uint64_t v307 = v167;
        uint64_t v304 = v164;
        unint64_t v305 = v168;
        if (v162)
        {
          uint64_t v170 = (os_unfair_lock_s *)*((void *)v169 + 47);
          swift_retain();
          os_unfair_lock_lock(v170);
          os_unfair_lock_lock(*((os_unfair_lock_t *)v169 + 43));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v160);
        sub_1B6355BE8(v298, (uint64_t)v523, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v171 = *(void *)(v159 + 32);
        uint64_t v172 = v160;
        uint64_t v173 = *(void *)(*(void *)(*(void *)(*((void *)v169 + 5) + 16) + 32) + 16) + 1;
        swift_retain();
        *(void *)(v159 + 48) = ecs_stack_allocator_allocate(v171, 48 * v173, 8);
        *(void *)(v159 + 56) = v173;
        long long v174 = (void *)v297;
        *(void *)(v297 + 8) = 0;
        v174[2] = 0;
        *long long v174 = 0;
        swift_release();
        *(void *)&long long v524 = v300;
        *((void *)&v524 + 1) = v169;
        *(void *)&long long v525 = v159;
        *((void *)&v525 + 1) = v166;
        uint64_t v526 = (v165 - v304 + v166);
        unsigned int v527 = v311;
        uint64_t v528 = v304;
        uint64_t v529 = v165;
        uint64_t v175 = v296;
        *(void *)uint64_t v296 = 0;
        *(void *)(v175 + 8) = 0;
        char v531 = 1;
        uint64_t v532 = v308;
        uint64_t v533 = v307;
        unint64_t v534 = v305;
        uint64_t v4 = v310;
        swift_retain();
        uint64_t j = v306;
        sub_1B636291C((uint64_t *)&v524, v4, v301, 0);
        if (j) {
          goto LABEL_264;
        }
        swift_release();
        v425[0] = v386;
        v425[1] = v387;
        uint64_t v426 = v388;
        sub_1B6345178((void *)v159, (unsigned __int16 **)v425, (uint64_t)v523);
        sub_1B634507C((char *)v169);
        ecs_stack_allocator_pop_snapshot(v172);
        uint64_t v160 = v172;
        int v162 = v299;
        if (v299)
        {
          os_unfair_lock_unlock(*((os_unfair_lock_t *)v169 + 43));
          os_unfair_lock_unlock(*((os_unfair_lock_t *)v169 + 47));
        }
        uint64_t v306 = 0;
        swift_release();
        v163 += 6;
        long long v158 = (void *)(v309 - 1);
      }
      while (v309 != 1);
      sub_1B6355CB4(v319, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      swift_release();
    }
  }
  uint64_t v176 = v312;
  swift_retain();
  sub_1B628FEFC(v301);
  swift_release();
  sub_1B6388C28();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v177 = sub_1B6363800();
  sub_1B6355CB4(v319, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B6355F58(v4, v177);
  swift_bridgeObjectRelease();
  long long v178 = *(void **)(v176 + 368);
  if (v178)
  {
    objc_msgSend(v178, sel_commit);
    *(void *)(v176 + 368) = 0;
    swift_unknownObjectRelease();
    if ((uint64_t)v311 <= 0) {
      goto LABEL_190;
    }
LABEL_180:
    uint64_t v179 = (void *)*((void *)&v389 + 1);
    if (*((void *)&v389 + 1))
    {
      uint64_t v172 = *((void *)&v390 + 1);
      uint64_t v180 = *(void *)(*((void *)&v390 + 1) + 32);
      uint64_t v181 = *((void *)&v388 + 1);
      unint64_t v300 = (void *)v390;
      int v182 = *(unsigned __int8 *)(v390 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v298 = *((void *)&v390 + 1) + 48;
      swift_retain();
      sub_1B6355CB4(v319, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
      uint64_t v296 = (uint64_t)v519;
      uint64_t v297 = v172 + 64;
      unsigned __int32 v183 = (void *)(v181 + 24);
      LODWORD(v299) = v182;
      do
      {
        uint64_t v184 = *((unsigned int *)v183 - 6);
        uint64_t v185 = *((unsigned int *)v183 - 5);
        uint64_t v159 = *((unsigned int *)v183 - 4);
        float32x4_t v186 = (void *)*v183;
        unint64_t v187 = v183[1];
        long long v169 = (_OWORD *)v183[2];
        double v308 = (uint64_t *)*(v183 - 1);
        unint64_t v309 = (unint64_t)v179;
        uint64_t v307 = v186;
        uint64_t v304 = v184;
        unint64_t v305 = v187;
        if (v182)
        {
          float32x4_t v188 = (os_unfair_lock_s *)*((void *)v169 + 47);
          swift_retain();
          os_unfair_lock_lock(v188);
          os_unfair_lock_lock(*((os_unfair_lock_t *)v169 + 43));
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v180);
        sub_1B6355BE8(v298, (uint64_t)v512, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
        uint64_t v189 = *(void *)(v172 + 32);
        uint64_t v190 = v180;
        uint64_t v191 = *(void *)(*(void *)(*(void *)(*((void *)v169 + 5) + 16) + 32) + 16) + 1;
        swift_retain();
        *(void *)(v172 + 48) = ecs_stack_allocator_allocate(v189, 48 * v191, 8);
        *(void *)(v172 + 56) = v191;
        float v192 = (void *)v297;
        *(void *)(v297 + 8) = 0;
        v192[2] = 0;
        *float v192 = 0;
        swift_release();
        *(void *)&long long v513 = v300;
        *((void *)&v513 + 1) = v169;
        *(void *)&long long v514 = v172;
        *((void *)&v514 + 1) = v159;
        uint64_t v515 = (v185 - v304 + v159);
        long long v516 = v311;
        uint64_t v517 = v304;
        uint64_t v518 = v185;
        uint64_t v193 = v296;
        *(void *)uint64_t v296 = 0;
        *(void *)(v193 + 8) = 0;
        v519[16] = 1;
        __n128 v520 = v308;
        uint64_t v521 = v307;
        unint64_t v522 = v305;
        uint64_t v4 = v310;
        swift_retain();
        float32x4_t v194 = v306;
        sub_1B6360A44((uint64_t *)&v513, v4);
        if (v194)
        {
          swift_release_n();

          long long v447 = v386;
          long long v448 = v387;
          uint64_t v449 = v388;
          uint64_t j = 0;
          sub_1B6345178((void *)v172, (unsigned __int16 **)&v447, (uint64_t)v512);
          sub_1B634507C((char *)v169);
          uint64_t v286 = v190;
          goto LABEL_266;
        }
        swift_release();
        v427[0] = v386;
        v427[1] = v387;
        uint64_t v428 = v388;
        sub_1B6345178((void *)v172, (unsigned __int16 **)v427, (uint64_t)v512);
        sub_1B634507C((char *)v169);
        ecs_stack_allocator_pop_snapshot(v190);
        uint64_t v180 = v190;
        unint64_t v195 = v309;
        int v182 = v299;
        if (v299)
        {
          os_unfair_lock_unlock(*((os_unfair_lock_t *)v169 + 43));
          os_unfair_lock_unlock(*((os_unfair_lock_t *)v169 + 47));
        }
        uint64_t v306 = 0;
        swift_release();
        v183 += 6;
        uint64_t v179 = (void *)(v195 - 1);
      }
      while (v179);
      sub_1B6355CB4(v319, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      swift_release();
    }
    goto LABEL_190;
  }
  if ((uint64_t)v311 >= 1) {
    goto LABEL_180;
  }
LABEL_190:
  uint64_t j = v306;
  swift_retain();
  sub_1B62903E8(v301);
  sub_1B6355CB4(v319, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  swift_release();
LABEL_191:
  unint64_t v313 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v511 = *(void *)(v303 + 296);
  long long v196 = *(_OWORD *)(v303 + 280);
  v510[0] = *(_OWORD *)(v303 + 264);
  v510[1] = v196;
  sub_1B62C9DA8(v4, (uint64_t)v510, 0x200000000, v320);
  sub_1B6355BE8((uint64_t)v320, (uint64_t)v373, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v373[0])
  {
    long long v380 = v373[0];
    long long v381 = v373[1];
    uint64_t v382 = v374;
    if (v379 >= 1)
    {
      uint64_t v301 = v376;
      if (v376)
      {
        unint64_t v300 = (void *)v375;
        uint64_t v197 = v378[4];
        uint64_t v307 = v377;
        int v198 = *((unsigned __int8 *)v377 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        unint64_t v309 = (unint64_t)v378;
        uint64_t v296 = (uint64_t)(v378 + 8);
        uint64_t v297 = (uint64_t)(v378 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v199 = 0;
        uint64_t v299 = v197;
        LODWORD(v298) = v198;
        while (1)
        {
          uint64_t v304 = v199;
          uint64_t v200 = (unsigned int *)&v300[6 * v199];
          uint64_t v172 = *v200;
          unint64_t v305 = v200[1];
          uint64_t v306 = j;
          uint64_t v159 = v200[2];
          uint64_t v311 = (uint64_t *)*((void *)v200 + 2);
          long long v169 = (_OWORD *)*((void *)v200 + 4);
          double v308 = (uint64_t *)*((void *)v200 + 3);
          unsigned __int32 v201 = (uint64_t *)*((void *)v200 + 5);
          if (v198)
          {
            __n128 v202 = (os_unfair_lock_s *)v201[47];
            swift_retain();
            os_unfair_lock_lock(v202);
            os_unfair_lock_lock((os_unfair_lock_t)v201[43]);
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v197);
          sub_1B6355BE8(v297, (uint64_t)v507, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          __n128 v203 = (void *)v309;
          uint64_t v204 = *(void *)(v309 + 32);
          uint64_t v205 = *(void *)(*(void *)(*(void *)(v201[5] + 16) + 32) + 16) + 1;
          swift_retain();
          v203[6] = ecs_stack_allocator_allocate(v204, 48 * v205, 8);
          v203[7] = v205;
          float32x4_t v206 = (void *)v296;
          *(void *)(v296 + 8) = 0;
          _OWORD v206[2] = 0;
          *float32x4_t v206 = 0;
          swift_release();
          float32x4_t v207 = v311;
          uint64_t v208 = sub_1B62C9024((uint64_t)&type metadata for TextureArrayFileAsset, (uint64_t)&off_1F0F8B4E8, v311, (uint64_t)v308, (uint64_t)v169, (uint64_t)v203);
          uint64_t v209 = v208;
          float v210 = v201;
          double v308 = v201;
          if (v207)
          {
            for (j = v306; v169; long long v169 = (_OWORD *)((char *)v169 - 1))
            {
              float32x4_t v211 = j;
              uint64_t v172 = *v311++;
              v508[0] = v307;
              v508[1] = v210;
              v508[2] = v309;
              v508[3] = v159;
              v508[4] = v172;
              sub_1B6362CBC((uint64_t)v321);
              char v212 = *((unsigned char *)v210 + 184);
              uint64_t v213 = swift_retain();
              if (v212) {
                goto LABEL_261;
              }
              uint64_t v214 = *(unsigned int *)(v210[21] + 4 * v172);
              uint64_t v215 = *(unsigned int *)(*(void *)(v213 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                     + 12 * (int)v214
                                     + 8);
              swift_release();
              sub_1B69FFC04();
              uint64_t v216 = *((void *)v313 + 2);
              sub_1B69FFD08(v216);
              uint64_t v217 = v214 | (v215 << 32);
              float v210 = v308;
              uint64_t v218 = sub_1B69FFE1C(v216, v217);
              nullsub_1(v218);
              swift_retain();
              uint64_t v219 = sub_1B62DE2C8(v172);
              swift_release();
              uint64_t v220 = v312;
              swift_retain();
              uint64_t v4 = v310;
              swift_retain();
              uint64_t j = v211;
              sub_1B6C096A0(v219, v4, v209, (uint64_t)v321, (uint64_t)v508, v4, v220);
              swift_release();
              swift_release();
              ++v159;
              v209 += 8;
            }
          }
          else
          {
            uint64_t j = v306;
            if (v172 != v305)
            {
              uint64_t v221 = v208 + 8 * v172;
              while (1)
              {
                uint64_t v222 = j;
                v509[0] = v307;
                v509[1] = v210;
                v509[2] = v309;
                v509[3] = v159;
                v509[4] = v172;
                sub_1B6362CBC((uint64_t)v322);
                char v223 = *((unsigned char *)v210 + 184);
                uint64_t v224 = swift_retain();
                if (v223) {
                  break;
                }
                uint64_t v225 = *(unsigned int *)(v210[21] + 4 * v172);
                long long v169 = (_OWORD *)(v172 + 1);
                uint64_t v226 = *(unsigned int *)(*(void *)(v224 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                       + 12 * (int)v225
                                       + 8);
                swift_release();
                sub_1B69FFC04();
                uint64_t v227 = *((void *)v313 + 2);
                sub_1B69FFD08(v227);
                uint64_t v228 = v225 | (v226 << 32);
                float v210 = v308;
                uint64_t v229 = sub_1B69FFE1C(v227, v228);
                nullsub_1(v229);
                swift_retain();
                uint64_t v230 = sub_1B62DE2C8(v172);
                swift_release();
                uint64_t v231 = v312;
                swift_retain();
                uint64_t v4 = v310;
                swift_retain();
                uint64_t j = v222;
                sub_1B6C096A0(v230, v4, v221, (uint64_t)v322, (uint64_t)v509, v4, v231);
                swift_release();
                swift_release();
                ++v159;
                v221 += 8;
                uint64_t v172 = (uint64_t)v169;
                if ((_OWORD *)v305 == v169) {
                  goto LABEL_208;
                }
              }
LABEL_261:
              sub_1B6E32BE8();
              __break(1u);
              goto LABEL_262;
            }
          }
LABEL_208:
          v429[0] = v380;
          v429[1] = v381;
          uint64_t v430 = v382;
          sub_1B6345178((void *)v309, (unsigned __int16 **)v429, (uint64_t)v507);
          sub_1B634507C((char *)v210);
          uint64_t v232 = v210;
          uint64_t v197 = v299;
          ecs_stack_allocator_pop_snapshot(v299);
          int v198 = v298;
          if (v298)
          {
            os_unfair_lock_unlock((os_unfair_lock_t)v232[43]);
            os_unfair_lock_unlock((os_unfair_lock_t)v232[47]);
          }
          swift_release();
          uint64_t v199 = v304 + 1;
          if (v304 + 1 == v301)
          {
            sub_1B6355CB4(v320, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            break;
          }
        }
      }
    }
    sub_1B6355CB4(v320, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  long long v233 = *(_OWORD *)(v303 + 400);
  v505[0] = *(_OWORD *)(v303 + 384);
  v505[1] = v233;
  uint64_t v506 = *(void *)(v303 + 416);
  sub_1B62C9DA8(v4, (uint64_t)v505, 0x200000000, v323);
  sub_1B6355BE8((uint64_t)v323, (uint64_t)&v362, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v362)
  {
    uint64_t v494 = v362;
    int v495 = v363;
    char v496 = v364;
    char v498 = v366;
    uint64_t v497 = v365;
    uint64_t v499 = v367;
    long long v501 = v369;
    long long v502 = v370;
    uint64_t v500 = v368;
    uint64_t v503 = v371;
    uint64_t v504 = v372;
    uint64_t v234 = v312;
    swift_retain();
    sub_1B6D9CBAC((uint64_t)&v494, v234);
    swift_release();
    sub_1B6355CB4(v323, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v493 = *(void *)(v303 + 376);
  long long v235 = *(_OWORD *)(v303 + 360);
  v492[0] = *(_OWORD *)(v303 + 344);
  v492[1] = v235;
  sub_1B62C9DA8(v4, (uint64_t)v492, 0x200000000, v324);
  sub_1B6355BE8((uint64_t)v324, (uint64_t)&v351, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v351)
  {
    uint64_t v481 = v351;
    int v482 = v352;
    char v483 = v353;
    char v485 = v355;
    uint64_t v484 = v354;
    uint64_t v486 = v356;
    long long v488 = v358;
    long long v489 = v359;
    uint64_t v487 = v357;
    uint64_t v490 = v360;
    uint64_t v491 = v361;
    uint64_t v236 = v312;
    swift_retain();
    sub_1B6D9D530((uint64_t)&v481, v236);
    swift_release();
    sub_1B6355CB4(v324, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  long long v237 = *(_OWORD *)(v303 + 640);
  v479[0] = *(_OWORD *)(v303 + 624);
  v479[1] = v237;
  uint64_t v480 = *(void *)(v303 + 656);
  sub_1B62C9DA8(v4, (uint64_t)v479, 0x200000000, v325);
  sub_1B6355BE8((uint64_t)v325, (uint64_t)&v340, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v340)
  {
    uint64_t v468 = v340;
    int v469 = v341;
    char v470 = v342;
    char v472 = v344;
    uint64_t v471 = v343;
    uint64_t v473 = v345;
    long long v475 = v347;
    long long v476 = v348;
    uint64_t v474 = v346;
    uint64_t v477 = v349;
    uint64_t v478 = v350;
    uint64_t v238 = v312;
    swift_retain();
    sub_1B6DA15B8((uint64_t)&v468, &v313, v238);
    swift_release();
    sub_1B6355CB4(v325, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v467 = *(void *)(v303 + 536);
  long long v239 = *(_OWORD *)(v303 + 520);
  v466[0] = *(_OWORD *)(v303 + 504);
  v466[1] = v239;
  sub_1B62C9DA8(v4, (uint64_t)v466, 0x200000000, v326);
  sub_1B6355BE8((uint64_t)v326, (uint64_t)v337, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v337[0])
  {
    if (v339 >= 1 && v338)
    {
      uint64_t v240 = 48 * v338;
      uint64_t v241 = v337[5] + 40;
      do
      {
        uint64_t v246 = *(void *)v241;
        long long v247 = *(os_unfair_lock_s **)(*(void *)v241 + 376);
        swift_retain();
        os_unfair_lock_lock(v247);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v246 + 344));
        int v248 = *(_DWORD *)(v246 + 24);
        swift_retain();
        uint64_t v449 = 0;
        long long v448 = 0u;
        long long v447 = 0u;
        *(void *)&long long v438 = 0;
        long long v437 = 0u;
        long long v436 = 0u;
        int v249 = sub_1B637F628(v248, (uint64_t)&type metadata for TextureGPURuntime, (uint64_t)&off_1F0F74BA8, 0, 0, (uint64_t)&v447, (uint64_t)&v436);
        swift_release();
        sub_1B6386458((uint64_t)&v436);
        sub_1B6386458((uint64_t)&v447);
        if (sub_1B63B4340(v249))
        {
          sub_1B66603E4(v249);
        }
        else
        {
          uint64_t v242 = *(void *)(v246 + 232);
          uint64_t v243 = *(void *)(v246 + 240);
          char v244 = *(unsigned char *)(v246 + 120);
          uint64_t v245 = *(unsigned int *)(v246 + 28);
          LOBYTE(v447) = *(unsigned char *)(v246 + 32);
          sub_1B628EEF4(v242, v243, v249, v244, v245 | ((unint64_t)v447 << 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v246 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v246 + 376));
        swift_release();
        v241 += 48;
        v240 -= 48;
      }
      while (v240);
    }
    sub_1B6355CB4(v326, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    uint64_t v4 = v310;
  }
  long long v250 = *(_OWORD *)(v303 + 560);
  v464[0] = *(_OWORD *)(v303 + 544);
  v464[1] = v250;
  uint64_t v465 = *(void *)(v303 + 576);
  sub_1B6359878((uint64_t)v464, 0x200000000, (uint64_t)v327);
  sub_1B6355ED8((uint64_t)v327, (uint64_t)v335, &qword_1EB981048, (uint64_t (*)(uint64_t))sub_1B6D0A254);
  if (*(void *)&v335[0])
  {
    long long v435 = v336;
    long long v432 = v335[2];
    long long v433 = v335[3];
    long long v434 = v335[4];
    v431[0] = v335[0];
    v431[1] = v335[1];
    if ((uint64_t)v336 >= 1)
    {
      unint64_t v309 = *((void *)&v433 + 1);
      if (*((void *)&v433 + 1))
      {
        uint64_t v251 = *(uint64_t **)(*((void *)&v434 + 1) + 32);
        uint64_t v304 = *((void *)&v432 + 1);
        unint64_t v305 = *((void *)&v434 + 1);
        int v252 = *(unsigned __int8 *)(v434 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v301 = *((void *)&v434 + 1) + 64;
        uint64_t v302 = *((void *)&v434 + 1) + 48;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v253 = 0;
        LODWORD(v307) = v252;
        double v308 = v251;
        do
        {
          uint64_t v306 = j;
          int v254 = (long long *)(v304 + 48 * (void)v253);
          long long v255 = *v254;
          long long v256 = v254[2];
          long long v461 = v254[1];
          long long v462 = v256;
          long long v460 = v255;
          uint64_t v311 = v253;
          if (v252)
          {
            uint64_t v257 = *((void *)&v462 + 1);
            unint64_t v258 = *(os_unfair_lock_s **)(*((void *)&v462 + 1) + 376);
            sub_1B6CC73A0((uint64_t)&v460);
            os_unfair_lock_lock(v258);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v257 + 344));
          }
          else
          {
            sub_1B6CC73A0((uint64_t)&v460);
          }
          ecs_stack_allocator_push_snapshot((uint64_t)v251);
          uint64_t v259 = *((void *)&v462 + 1);
          sub_1B6355BE8(v302, (uint64_t)v463, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v260 = v305;
          uint64_t v261 = *(void *)(v305 + 32);
          uint64_t v262 = *(void *)(*(void *)(*(void *)(*(void *)(v259 + 40) + 16) + 32) + 16) + 1;
          sub_1B6CC73A0((uint64_t)&v460);
          *(void *)(v260 + 48) = ecs_stack_allocator_allocate(v261, 48 * v262, 8);
          *(void *)(v260 + 56) = v262;
          uint64_t v263 = (void *)v301;
          *(void *)(v301 + 8) = 0;
          v263[2] = 0;
          *uint64_t v263 = 0;
          sub_1B68D6414((uint64_t)&v460);
          uint64_t v264 = v460;
          uint64_t v265 = DWORD1(v460);
          uint64_t v266 = *((void *)&v461 + 1);
          unint64_t v267 = (uint64_t *)v461;
          uint64_t v159 = v462;
          long long v169 = (_OWORD *)sub_1B62C9024((uint64_t)&type metadata for TextureShaderAsset, (uint64_t)&off_1F0F7B198, (uint64_t *)v461, *((uint64_t *)&v461 + 1), v462, v260);
          uint64_t v268 = sub_1B62C9024((uint64_t)&type metadata for TextureGPURuntime, (uint64_t)&off_1F0F74BA8, v267, v266, v159, v260);
          uint64_t v172 = v268;
          if (v267)
          {
            uint64_t v4 = v310;
            uint64_t j = v306;
            if (v159)
            {
              do
              {
                uint64_t v269 = *v267++;
                uint64_t v268 = sub_1B6D0932C(v259, v269, (uint64_t *)v169, (void *)v172, v4, &v313, v312);
                if (j) {
                  goto LABEL_262;
                }
                v172 += 8;
                long long v169 = (_OWORD *)((char *)v169 + 168);
              }
              while (--v159);
            }
          }
          else
          {
            uint64_t v4 = v310;
            uint64_t j = v306;
            if (v264 != v265)
            {
              unint64_t v270 = (void *)(v268 + 8 * v264);
              uint64_t v159 = (uint64_t)v169 + 168 * v264;
              while (1)
              {
                uint64_t v268 = sub_1B6D0932C(v259, v264, (uint64_t *)v159, v270, v4, &v313, v312);
                if (j) {
                  break;
                }
                ++v264;
                ++v270;
                v159 += 168;
                if (v265 == v264) {
                  goto LABEL_231;
                }
              }
LABEL_262:

              nullsub_1(v283);
              sub_1B684575C((uint64_t)v431, (uint64_t)v463, (uint64_t)&v460);
              j__ecs_stack_allocator_pop_snapshot((uint64_t)v308);
              sub_1B6845714((char)v307, (uint64_t)&v460);
              sub_1B6355CB4(v327, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
              unsigned int v284 = &v460;
              goto LABEL_263;
            }
          }
LABEL_231:
          uint64_t v253 = (uint64_t *)((char *)v311 + 1);
          nullsub_1(v268);
          sub_1B684575C((uint64_t)v431, (uint64_t)v463, (uint64_t)&v460);
          uint64_t v251 = v308;
          j__ecs_stack_allocator_pop_snapshot((uint64_t)v308);
          int v252 = (int)v307;
          sub_1B6845714((char)v307, (uint64_t)&v460);
          sub_1B68D6414((uint64_t)&v460);
        }
        while (v253 != (uint64_t *)v309);
        sub_1B6355CB4(v327, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      }
    }
    sub_1B6355CB4(v327, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v459 = *(void *)(v303 + 616);
  long long v271 = *(_OWORD *)(v303 + 600);
  v458[0] = *(_OWORD *)(v303 + 584);
  v458[1] = v271;
  sub_1B6355DF8(v328, v458, 0x200000000);
  sub_1B6355DFC((uint64_t)v328, (uint64_t)v333, &qword_1EB97E018, &qword_1EB97E010);
  if (*(void *)&v333[0])
  {
    long long v441 = v334;
    long long v438 = v333[2];
    long long v439 = v333[3];
    long long v440 = v333[4];
    long long v436 = v333[0];
    long long v437 = v333[1];
    uint64_t v311 = (uint64_t *)v334;
    if ((uint64_t)v334 > 0 && (uint64_t v272 = *((void *)&v439 + 1)) != 0)
    {
      uint64_t v273 = *((void *)&v440 + 1);
      uint64_t v172 = *(void *)(*((void *)&v440 + 1) + 32);
      uint64_t v274 = (long long *)*((void *)&v438 + 1);
      unint64_t v309 = v440;
      uint64_t v159 = *(unsigned __int8 *)(v440 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      swift_retain();
      sub_1B6355CB4(v328, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
      do
      {
        long long v275 = *v274;
        long long v276 = v274[1];
        long long v446 = v274[2];
        long long v445 = v276;
        long long v169 = v331;
        long long v444 = v275;
        sub_1B6CC73A0((uint64_t)&v444);
        if (v159) {
          sub_1B66603B4();
        }
        j__ecs_stack_allocator_push_snapshot(v172);
        uint64_t v277 = *((void *)&v446 + 1);
        sub_1B6CC73A0((uint64_t)&v444);
        sub_1B62CD8E4(v277, v273, (uint64_t)v329);
        sub_1B68D6414((uint64_t)&v444);
        *(void *)&long long v447 = v309;
        *((void *)&v447 + 1) = v277;
        *(void *)&long long v448 = v273;
        *((void *)&v448 + 1) = DWORD2(v444);
        uint64_t v449 = (DWORD1(v444) - v444 + DWORD2(v444));
        uint64_t v278 = v312;
        unint64_t v450 = v311;
        uint64_t v451 = v444;
        uint64_t v452 = DWORD1(v444);
        uint64_t v453 = 0;
        uint64_t v454 = 0;
        char v455 = 1;
        long long v456 = v445;
        uint64_t v457 = v446;
        swift_retain();
        uint64_t v279 = sub_1B6DA2A44(&v447, v278, &v313);
        if (j)
        {
          while (1)
          {
            swift_release();

            nullsub_1(v287);
            sub_1B684575C((uint64_t)&v436, (uint64_t)v329, (uint64_t)&v444);
            j__ecs_stack_allocator_pop_snapshot(v172);
            sub_1B6845714(v159, (uint64_t)&v444);
            sub_1B6355CB4(v328, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            unsigned int v284 = &v444;
LABEL_263:
            uint64_t v285 = sub_1B68D6414((uint64_t)v284);
            nullsub_1(v285);
            __break(1u);
LABEL_264:
            swift_release_n();

            long long v513 = v386;
            long long v514 = v387;
            uint64_t v515 = v388;
            uint64_t j = 0;
            sub_1B6345178((void *)v159, (unsigned __int16 **)&v513, (uint64_t)v523);
            sub_1B634507C((char *)v169);
            uint64_t v286 = v172;
LABEL_266:
            ecs_stack_allocator_pop_snapshot(v286);
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v169 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v169 + 47));
            __break(1u);
          }
        }
        nullsub_1(v279);
        sub_1B684575C((uint64_t)&v436, (uint64_t)v329, (uint64_t)&v444);
        j__ecs_stack_allocator_pop_snapshot(v172);
        sub_1B6845714(v159, (uint64_t)&v444);
        sub_1B68D6414((uint64_t)&v444);
        v274 += 3;
        --v272;
      }
      while (v272);
      sub_1B6355CB4(v328, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B6355CB4(v328, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      swift_release();
      uint64_t v4 = v310;
    }
    else
    {
      sub_1B6355CB4(v328, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    }
  }
  long long v280 = *(_OWORD *)(v303 + 480);
  v442[0] = *(_OWORD *)(v303 + 464);
  v442[1] = v280;
  uint64_t v443 = *(void *)(v303 + 496);
  sub_1B6355DF8(v330, v442, 0x200000000);
  sub_1B6355DFC((uint64_t)v330, (uint64_t)v331, &qword_1EB97E028, &qword_1EB97E020);
  uint64_t v281 = v312;
  if (*(void *)&v331[0])
  {
    v332[2] = v331[2];
    v332[3] = v331[3];
    v332[4] = v331[4];
    v332[5] = v331[5];
    v332[0] = v331[0];
    v332[1] = v331[1];
    swift_retain();
    sub_1B6D9D834((uint64_t)v332, v281);
    swift_release();
    sub_1B6355CB4(v330, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  unint64_t v282 = v313;
  swift_bridgeObjectRetain();
  sub_1B6355F58(v4, (uint64_t)v282);
  swift_release();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B6355BE8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6355C68(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B6355C68(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void *sub_1B6355CB4(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1B6355D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = *(_OWORD *)(a1 + 16);
  v28[0] = *(_OWORD *)a1;
  v28[1] = v5;
  uint64_t v29 = *(void *)(a1 + 32);
  sub_1B62C9DA8(v3, (uint64_t)v28, a2 & 0xFFFFFFFFFFLL, v16);
  uint64_t result = sub_1B62CA210((uint64_t)v16, (uint64_t)&v17, (unint64_t *)&qword_1EB97DC50);
  if (v17)
  {
    uint64_t v7 = v20;
    uint64_t v8 = v21;
    uint64_t v9 = v22;
    uint64_t v10 = v23;
    long long v11 = v24;
    long long v12 = v25;
    uint64_t v13 = v26;
    uint64_t v14 = v27;
    unint64_t v15 = v18 | ((unint64_t)v19 << 32);
  }
  else
  {
    unint64_t v15 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    long long v11 = 0uLL;
    long long v12 = 0uLL;
  }
  *(void *)a3 = v17;
  *(void *)(a3 + 8) = v15;
  *(void *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v8;
  *(void *)(a3 + 32) = v9;
  *(void *)(a3 + 40) = v10;
  *(_OWORD *)(a3 + 48) = v11;
  *(_OWORD *)(a3 + 64) = v12;
  *(void *)(a3 + 80) = v13;
  *(void *)(a3 + 88) = v14;
  return result;
}

uint64_t sub_1B6355DFC(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_1B6355E70(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B6355E70(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1B6D0A2CC(255, a3);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B6355ECC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_1B6355ED8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1B638C1B8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1B6355F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v2)
  {
    uint64_t v3 = *(void **)(v2 + 368);
    if (v3)
    {
      char v5 = *(unsigned char *)(v2 + 32);
      uint64_t v6 = swift_allocObject();
      swift_weakInit();
      uint64_t v7 = swift_allocObject();
      *(unsigned char *)(v7 + 16) = v5;
      *(void *)(v7 + 24) = v6;
      *(void *)(v7 + 32) = a2;
      *(void *)(v7 + 40) = v2;
      v9[4] = sub_1B63B9700;
      void v9[5] = v7;
      v9[0] = MEMORY[0x1E4F143A8];
      v9[1] = 1107296256;
      v9[2] = sub_1B638F0B8;
      v9[3] = &unk_1F0FBA360;
      uint64_t v8 = _Block_copy(v9);
      swift_retain_n();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      objc_msgSend(v3, sel_addCompletedHandler_, v8);
      swift_unknownObjectRelease();
      swift_release();
      _Block_release(v8);
    }
  }
}

unint64_t sub_1B63560B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = sub_1B62C91B8((uint64_t)&type metadata for TextureLoadPolicy);
  if ((v4 & 1) != 0 || !*(unsigned char *)(v3 + 4 * v2))
  {
    uint64_t v5 = sub_1B62C91B8((uint64_t)&type metadata for TextureLoadingOptions);
    if ((v6 & 1) == 0)
    {
      uint64_t v7 = *(void *)(v5 + (v2 << 6));
      if ((v7 & 1) == 0) {
        *(void *)(v5 + (v2 << 6)) = v7 | 1;
      }
    }
  }
  else
  {
    if (*(unsigned char *)(v3 + 4 * v2) != 1)
    {
      sub_1B6CF0A8C(0);
      goto LABEL_10;
    }
    sub_1B6345398(*(void *)(v1 + 40), (uint64_t)&type metadata for TextureLoadRequestCPU, v14);
    if (v14[0] != 1) {
      goto LABEL_10;
    }
  }
  sub_1B6CF0394(0);
LABEL_10:
  uint64_t v8 = sub_1B62C91B8((uint64_t)&type metadata for TextureLoadPolicy);
  if ((v9 & 1) != 0 || !*(unsigned char *)(v8 + 4 * v2 + 1))
  {
    uint64_t v11 = sub_1B62C91B8((uint64_t)&type metadata for TextureLoadingOptions);
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = *(void *)(v11 + (v2 << 6));
      if ((v13 & 2) == 0) {
        *(void *)(v11 + (v2 << 6)) = v13 | 2;
      }
    }
    return sub_1B6365A30(0);
  }
  if (*(unsigned char *)(v8 + 4 * v2 + 1) != 1) {
    return sub_1B6CF0B98(0);
  }
  unint64_t result = sub_1B6345398(*(void *)(v1 + 40), (uint64_t)&type metadata for TextureLoadRequestGPU, &v15);
  if (v15 == 1) {
    return sub_1B6365A30(0);
  }
  return result;
}

uint64_t type metadata accessor for ParticleSetID.System()
{
  return self;
}

const char *sub_1B6356268()
{
  return "ParticleSetID.CPU";
}

uint64_t sub_1B635627C(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
  {
    MEMORY[0x1F4188790](result, a2);
    uint64_t v3 = *(void **)(v2 + 176);
    swift_retain();
    swift_retain();
    sub_1B636E6E4((uint64_t)&type metadata for FrameConstantsStorage, (uint64_t)&off_1F0F851A8, v3, (void (*)(uint64_t))sub_1B63726C4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6356348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  v115[2] = *MEMORY[0x1E4F143B8];
  char v6 = (unsigned char *)(a2 + 537);
  if (((*(unsigned char *)(a2 + 537) & 1) != 0 || (*(unsigned char *)(a2 + 539) & 1) != 0 || *(unsigned char *)(a2 + 540) == 1)
    && !*(void *)(a1 + 1592))
  {
    uint64_t v7 = sub_1B68C5FD0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v9 = v7[2];
    unint64_t v8 = v7[3];
    unint64_t v10 = v8 >> 1;
    unint64_t v11 = v9 + 1;
    uint64_t v112 = v6;
    if (v8 >> 1 <= v9)
    {
      uint64_t v7 = sub_1B68C5FD0(v8 > 1, v9 + 1, 1, v7);
      unint64_t v8 = v7[3];
      unint64_t v10 = v8 >> 1;
    }
    v7[2] = v11;
    char v12 = &v7[6 * v9];
    *((unsigned char *)v12 + 32) = 8;
    strcpy((char *)v12 + 40, "viewportCount");
    *((_WORD *)v12 + 27) = -4864;
    *(_OWORD *)(v12 + 7) = xmmword_1B6EA5130;
    *((unsigned char *)v12 + 72) = 1;
    if (v10 <= v11) {
      uint64_t v7 = sub_1B68C5FD0(v8 > 1, v9 + 2, 1, v7);
    }
    v7[2] = v9 + 2;
    uint64_t v13 = &v7[6 * v11];
    *((unsigned char *)v13 + 32) = 8;
    v13[5] = 0xD000000000000012;
    v13[6] = 0x80000001B6F469F0;
    *(_OWORD *)(v13 + 7) = xmmword_1B6EA5140;
    *((unsigned char *)v13 + 72) = 1;
    unint64_t v15 = v7[2];
    unint64_t v14 = v7[3];
    unint64_t v16 = v14 >> 1;
    unint64_t v17 = v15 + 1;
    if (v14 >> 1 <= v15)
    {
      uint64_t v7 = sub_1B68C5FD0(v14 > 1, v15 + 1, 1, v7);
      unint64_t v14 = v7[3];
      unint64_t v16 = v14 >> 1;
    }
    v7[2] = v17;
    unsigned int v18 = &v7[6 * v15];
    *((unsigned char *)v18 + 32) = 8;
    v18[5] = 0xD000000000000012;
    v18[6] = 0x80000001B6F46A10;
    *(int64x2_t *)(v18 + 7) = vdupq_n_s64(0x80uLL);
    *((unsigned char *)v18 + 72) = 1;
    if (v16 <= v17) {
      uint64_t v7 = sub_1B68C5FD0(v14 > 1, v15 + 2, 1, v7);
    }
    v7[2] = v15 + 2;
    unsigned __int8 v19 = &v7[6 * v17];
    *((unsigned char *)v19 + 32) = 8;
    v19[5] = 0x72506F5477656976;
    v19[6] = 0xEF79617272416A6FLL;
    *(_OWORD *)(v19 + 7) = xmmword_1B6EA5150;
    *((unsigned char *)v19 + 72) = 1;
    unint64_t v21 = v7[2];
    unint64_t v20 = v7[3];
    unint64_t v22 = v20 >> 1;
    unint64_t v23 = v21 + 1;
    if (v20 >> 1 <= v21)
    {
      uint64_t v7 = sub_1B68C5FD0(v20 > 1, v21 + 1, 1, v7);
      unint64_t v20 = v7[3];
      unint64_t v22 = v20 >> 1;
    }
    v7[2] = v23;
    long long v24 = &v7[6 * v21];
    *((unsigned char *)v24 + 32) = 8;
    v24[5] = 0x69566F546A6F7270;
    v24[6] = 0xEF79617272417765;
    *(_OWORD *)(v24 + 7) = xmmword_1B6EA5160;
    *((unsigned char *)v24 + 72) = 1;
    if (v22 <= v23) {
      uint64_t v7 = sub_1B68C5FD0(v20 > 1, v21 + 2, 1, v7);
    }
    v7[2] = v21 + 2;
    long long v25 = &v7[6 * v23];
    *((unsigned char *)v25 + 32) = 8;
    v25[5] = 0xD000000000000017;
    v25[6] = 0x80000001B6F46A30;
    *(_OWORD *)(v25 + 7) = xmmword_1B6EA5170;
    *((unsigned char *)v25 + 72) = 1;
    unint64_t v27 = v7[2];
    unint64_t v26 = v7[3];
    unint64_t v28 = v26 >> 1;
    unint64_t v29 = v27 + 1;
    if (v26 >> 1 <= v27)
    {
      uint64_t v7 = sub_1B68C5FD0(v26 > 1, v27 + 1, 1, v7);
      unint64_t v26 = v7[3];
      unint64_t v28 = v26 >> 1;
    }
    v7[2] = v29;
    uint64_t v30 = &v7[6 * v27];
    *((unsigned char *)v30 + 32) = 8;
    v30[5] = 0xD000000000000016;
    v30[6] = 0x80000001B6F46840;
    *(_OWORD *)(v30 + 7) = xmmword_1B6EA5180;
    *((unsigned char *)v30 + 72) = 1;
    if (v28 <= v29) {
      uint64_t v7 = sub_1B68C5FD0(v26 > 1, v27 + 2, 1, v7);
    }
    v7[2] = v27 + 2;
    char v31 = &v7[6 * v29];
    *((unsigned char *)v31 + 32) = 8;
    v31[5] = 0xD000000000000010;
    v31[6] = 0x80000001B6F46820;
    *(_OWORD *)(v31 + 7) = xmmword_1B6EA5190;
    *((unsigned char *)v31 + 72) = 1;
    unint64_t v33 = v7[2];
    unint64_t v32 = v7[3];
    unint64_t v34 = v32 >> 1;
    unint64_t v35 = v33 + 1;
    if (v32 >> 1 <= v33)
    {
      uint64_t v7 = sub_1B68C5FD0(v32 > 1, v33 + 1, 1, v7);
      unint64_t v32 = v7[3];
      unint64_t v34 = v32 >> 1;
    }
    v7[2] = v35;
    char v36 = &v7[6 * v33];
    *((unsigned char *)v36 + 32) = 8;
    v36[5] = 0xD000000000000015;
    v36[6] = 0x80000001B6F46A50;
    *(_OWORD *)(v36 + 7) = xmmword_1B6EA51A0;
    *((unsigned char *)v36 + 72) = 1;
    if (v34 <= v35) {
      uint64_t v7 = sub_1B68C5FD0(v32 > 1, v33 + 2, 1, v7);
    }
    v7[2] = v33 + 2;
    uint64_t v37 = &v7[6 * v35];
    *((unsigned char *)v37 + 32) = 8;
    v37[5] = 0xD000000000000029;
    v37[6] = 0x80000001B6F46880;
    *(_OWORD *)(v37 + 7) = xmmword_1B6EA51B0;
    *((unsigned char *)v37 + 72) = 1;
    unint64_t v39 = v7[2];
    unint64_t v38 = v7[3];
    unint64_t v40 = v38 >> 1;
    unint64_t v41 = v39 + 1;
    if (v38 >> 1 <= v39)
    {
      uint64_t v7 = sub_1B68C5FD0(v38 > 1, v39 + 1, 1, v7);
      unint64_t v38 = v7[3];
      unint64_t v40 = v38 >> 1;
    }
    v7[2] = v41;
    uint64_t v42 = &v7[6 * v39];
    *((unsigned char *)v42 + 32) = 8;
    v42[5] = 0xD000000000000017;
    v42[6] = 0x80000001B6F468B0;
    *(_OWORD *)(v42 + 7) = xmmword_1B6EA51C0;
    *((unsigned char *)v42 + 72) = 1;
    if (v40 <= v41) {
      uint64_t v7 = sub_1B68C5FD0(v38 > 1, v39 + 2, 1, v7);
    }
    v7[2] = v39 + 2;
    uint64_t v43 = &v7[6 * v41];
    *((unsigned char *)v43 + 32) = 8;
    v43[5] = 0xD000000000000010;
    v43[6] = 0x80000001B6F468F0;
    *(_OWORD *)(v43 + 7) = xmmword_1B6EA51D0;
    *((unsigned char *)v43 + 72) = 1;
    unint64_t v45 = v7[2];
    unint64_t v44 = v7[3];
    unint64_t v46 = v44 >> 1;
    unint64_t v47 = v45 + 1;
    if (v44 >> 1 <= v45)
    {
      uint64_t v7 = sub_1B68C5FD0(v44 > 1, v45 + 1, 1, v7);
      unint64_t v44 = v7[3];
      unint64_t v46 = v44 >> 1;
    }
    v7[2] = v47;
    long long v48 = &v7[6 * v45];
    *((unsigned char *)v48 + 32) = 8;
    v48[5] = 0x6C436C6174726F70;
    void v48[6] = 0xEF656E616C507069;
    *(_OWORD *)(v48 + 7) = xmmword_1B6EA51E0;
    *((unsigned char *)v48 + 72) = 1;
    if (v46 <= v47) {
      uint64_t v7 = sub_1B68C5FD0(v44 > 1, v45 + 2, 1, v7);
    }
    v7[2] = v45 + 2;
    long long v49 = &v7[6 * v47];
    *((unsigned char *)v49 + 32) = 9;
    v49[5] = 0x6361704F65646166;
    id v49[6] = 0xEB00000000797469;
    *(_OWORD *)(v49 + 7) = xmmword_1B6EA51F0;
    *((unsigned char *)v49 + 72) = 1;
    unint64_t v51 = v7[2];
    unint64_t v50 = v7[3];
    unint64_t v52 = v50 >> 1;
    unint64_t v53 = v51 + 1;
    if (v50 >> 1 <= v51)
    {
      uint64_t v7 = sub_1B68C5FD0(v50 > 1, v51 + 1, 1, v7);
      unint64_t v50 = v7[3];
      unint64_t v52 = v50 >> 1;
    }
    v7[2] = v53;
    uint64_t v54 = &v7[6 * v51];
    *((unsigned char *)v54 + 32) = 1;
    v54[5] = 0xD000000000000015;
    v54[6] = 0x80000001B6F46A70;
    *(_OWORD *)(v54 + 7) = xmmword_1B6EA5200;
    *((unsigned char *)v54 + 72) = 1;
    if (v52 <= v53) {
      uint64_t v7 = sub_1B68C5FD0(v50 > 1, v51 + 2, 1, v7);
    }
    v7[2] = v51 + 2;
    char v55 = &v7[6 * v53];
    *((unsigned char *)v55 + 32) = 1;
    v55[5] = 0xD000000000000015;
    v55[6] = 0x80000001B6F46A70;
    *(_OWORD *)(v55 + 7) = xmmword_1B6EA5210;
    *((unsigned char *)v55 + 72) = 3;
    unint64_t v57 = v7[2];
    unint64_t v56 = v7[3];
    unint64_t v58 = v56 >> 1;
    unint64_t v59 = v57 + 1;
    if (v56 >> 1 <= v57)
    {
      uint64_t v7 = sub_1B68C5FD0(v56 > 1, v57 + 1, 1, v7);
      unint64_t v56 = v7[3];
      unint64_t v58 = v56 >> 1;
    }
    v7[2] = v59;
    uint64_t v60 = &v7[6 * v57];
    *((unsigned char *)v60 + 32) = 9;
    v60[5] = 0xD000000000000012;
    v60[6] = 0x80000001B6F46A90;
    *(_OWORD *)(v60 + 7) = xmmword_1B6EA5220;
    *((unsigned char *)v60 + 72) = 2;
    uint64_t v61 = v57 + 2;
    if (v58 <= v59) {
      uint64_t v7 = sub_1B68C5FD0(v56 > 1, v61, 1, v7);
    }
    v7[2] = v61;
    uint64_t v62 = &v7[6 * v59];
    *((unsigned char *)v62 + 32) = 9;
    v62[5] = 0x6361704F65646166;
    v62[6] = 0xEB00000000797469;
    *(int64x2_t *)(v62 + 7) = vdupq_n_s64(4uLL);
    *((unsigned char *)v62 + 72) = 2;
    unint64_t v64 = v7[2];
    unint64_t v63 = v7[3];
    unint64_t v65 = v63 >> 1;
    unint64_t v66 = v64 + 1;
    if (v63 >> 1 <= v64)
    {
      uint64_t v7 = sub_1B68C5FD0(v63 > 1, v64 + 1, 1, v7);
      unint64_t v63 = v7[3];
      unint64_t v65 = v63 >> 1;
    }
    v7[2] = v66;
    unint64_t v67 = &v7[6 * v64];
    *((unsigned char *)v67 + 32) = 9;
    v67[5] = 0xD000000000000012;
    v67[6] = 0x80000001B6F46AB0;
    *(_OWORD *)(v67 + 7) = xmmword_1B6EA0BC0;
    *((unsigned char *)v67 + 72) = 2;
    uint64_t v68 = v64 + 2;
    if (v65 <= v66) {
      uint64_t v7 = sub_1B68C5FD0(v63 > 1, v68, 1, v7);
    }
    v7[2] = v68;
    uint64_t v69 = &v7[6 * v66];
    *((unsigned char *)v69 + 32) = 9;
    v69[5] = 0xD000000000000013;
    v69[6] = 0x80000001B6F46AD0;
    *(int64x2_t *)(v69 + 7) = vdupq_n_s64(0x10uLL);
    *((unsigned char *)v69 + 72) = 2;
    unint64_t v71 = v7[2];
    unint64_t v70 = v7[3];
    if (v71 >= v70 >> 1) {
      uint64_t v7 = sub_1B68C5FD0(v70 > 1, v71 + 1, 1, v7);
    }
    v7[2] = v71 + 1;
    unint64_t v72 = &v7[6 * v71];
    *((unsigned char *)v72 + 32) = 9;
    v72[5] = 0xD000000000000019;
    v72[6] = 0x80000001B6F46AF0;
    *(_OWORD *)(v72 + 7) = xmmword_1B6EA5230;
    *((unsigned char *)v72 + 72) = 2;
    *(void *)(a1 + 1592) = v7;
    char v6 = v112;
    uint64_t v3 = a3;
  }
  sub_1B6357840((unsigned char *)a2);
  int v73 = *(_DWORD *)(a1 + 8);
  int v74 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a1 + 1296) = v73;
  *(_DWORD *)(a1 + 1300) = v74;
  sub_1B6357368();
  if (qword_1EB97D6E8 != -1) {
    swift_once();
  }
  if (byte_1EB99799C != 1)
  {
    swift_retain();
    uint64_t v85 = (void *)sub_1B62F1868(0, 8);
    uint64_t v87 = v86;
    uint64_t v89 = v88;
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) != (id)2)
    {
      long long v91 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v92 = v85;
      uint64_t v93 = &v91[v87];
      *(_DWORD *)uint64_t v93 = v73;
      *((_DWORD *)v93 + 1) = v74;
      swift_release();
      swift_unknownObjectRelease();
      *(void *)(a1 + 1272) = v92;
      *(void *)(a1 + 1280) = v87;
      *(void *)(a1 + 1288) = v89;
      swift_unknownObjectRelease();
      *(void *)(a1 + 1264) = 0;
      *(_OWORD *)(a1 + 1248) = 0u;
      unint64_t v94 = *(void *)(a1 + 1240);
      if ((v94 & 0x8000000000000000) != 0)
      {
        BOOL v84 = v6;
        goto LABEL_73;
      }
      BOOL v84 = v6;
      if ((v94 & 0x4000000000000000) != 0)
      {
LABEL_73:
        if (v94 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v110 = sub_1B6E32C18();
          sub_1B6E32C18();
          sub_1B6E32C18();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v110 = *(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1;
        }
        *(void *)(a1 + 1240) = sub_1B63577E0(0, v110);
        swift_bridgeObjectRelease();
        if ((*v84 & 1) == 0) {
          goto LABEL_77;
        }
LABEL_76:
        *(_DWORD *)(a1 + 1364) = 0;
        *(_OWORD *)(a1 + 1376) = 0u;
        *(_OWORD *)(a1 + 1392) = 0u;
        *(_DWORD *)(a1 + 1360) = *(_DWORD *)(a1 + 1604);
        sub_1B6AECCE0(a1 + 1328);
        sub_1B6AED034(a1 + 1432);
LABEL_77:
        swift_unknownObjectRelease();
        return swift_unknownObjectRelease();
      }
LABEL_67:
      char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      unint64_t v94 = *(void *)(a1 + 1240);
      if (isUniquelyReferenced_nonNull_bridgeObject)
      {
        if (v94 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v109 = sub_1B6E32C18();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v109 = *(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        sub_1B62FB620(0, v109);
        if ((*v84 & 1) == 0) {
          goto LABEL_77;
        }
        goto LABEL_76;
      }
      goto LABEL_73;
    }
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    v115[0] = 0;
    v115[1] = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    int v90 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v115[0] = 0;
    swift_retain();
    sub_1B6B33E34(v90, v115, 0xD000000000000036, 0x80000001B6F469B0);
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    *(void *)(a1 + 1272) = v85;
    *(void *)(a1 + 1280) = v87;
    *(void *)(a1 + 1288) = v89;
    BOOL v84 = v6;
LABEL_65:
    swift_unknownObjectRelease();
    *(void *)(a1 + 1264) = 0;
    *(_OWORD *)(a1 + 1248) = 0u;
    unint64_t v94 = *(void *)(a1 + 1240);
    if ((v94 & 0x8000000000000000) != 0 || (v94 & 0x4000000000000000) != 0) {
      goto LABEL_73;
    }
    goto LABEL_67;
  }
  long long v75 = *(void **)(a1 + 1312);
  if (v75)
  {
    uint64_t v114 = v3;
    swift_getObjectType();
    id v76 = objc_msgSend((id)swift_unknownObjectRetain(), sel_encodedLength);
    swift_retain();
    uint64_t v77 = sub_1B62F1868(0, (uint64_t)v76);
    uint64_t v79 = v78;
    uint64_t v81 = v80;
    swift_unknownObjectRetain();
    swift_release();
    swift_unknownObjectRelease();
    *(void *)(a1 + 1272) = v77;
    *(void *)(a1 + 1280) = v79;
    *(void *)(a1 + 1288) = v81;
    uint64_t v82 = swift_unknownObjectRetain();
    uint64_t v83 = v79;
    BOOL v84 = v6;
    sub_1B62EC494(v82, v83, v81, 0);
    swift_unknownObjectRelease();
    *objc_msgSend(v75, sel_constantDataAtIndex_, 0) = *(void *)(a1 + 1296);
    if (*v6)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v95 = sub_1B6357368();
      uint64_t v97 = v96;
      uint64_t v98 = swift_unknownObjectRetain();
      sub_1B6357350(v98, 20);
      swift_unknownObjectRelease();
      uint64_t v99 = swift_unknownObjectRetain();
      sub_1B6357350(v99, 21);
      swift_unknownObjectRelease();
      uint64_t v100 = *(void *)(a2 + 240);
      swift_retain();
      uint64_t v101 = sub_1B635C9FC(0x46445242584656, 0xE700000000000000, v100);
      swift_release();
      sub_1B6357350(v101, 22);
      sub_1B63577E4();
      uint64_t v102 = swift_allocObject();
      *(_OWORD *)(v102 + 16) = xmmword_1B6E78160;
      *(void *)(v102 + 32) = v95;
      *(void *)(v102 + 40) = v97;
      *(void *)(v102 + 48) = v101;
      v115[0] = v102;
      sub_1B6E31C48();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v103 = swift_bridgeObjectRelease();
      *(void *)(a1 + 1304) = v115[0];
      MEMORY[0x1F4188790](v103, v104);
      char v105 = *(void **)(v114 + 176);
      MEMORY[0x1F4188790](v106, v107);
      swift_retain();
      sub_1B636E6E4((uint64_t)&type metadata for LightsUniforms, (uint64_t)&off_1F0F643E8, v105, (void (*)(uint64_t))sub_1B636EA28);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      BOOL v84 = v6;
      swift_unknownObjectRelease();
      swift_release();
    }
    goto LABEL_65;
  }
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

id sub_1B6357350(uint64_t a1, int a2)
{
  return objc_msgSend(v2, sel_setTexture_atIndex_, a1, a2);
}

uint64_t sub_1B6357368()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v0;
  uint64_t v3 = qword_1EB97E430;
  swift_retain();
  if (v3 != -1) {
    swift_once();
  }
  v17[0] = xmmword_1EB997B08;
  v17[1] = unk_1EB997B18;
  uint64_t v18 = qword_1EB997B28;
  sub_1B62C9DA8(v2, (uint64_t)v17, 0x200000000, v15);
  sub_1B62CA210((uint64_t)v15, (uint64_t)v16, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v16[0])
  {
    v16[8] = v16[2];
    v16[9] = v16[3];
    v16[10] = v16[4];
    v16[11] = v16[5];
    v16[6] = v16[0];
    v16[7] = v16[1];
    sub_1B637BED0(0);
    uint64_t v5 = (unint64_t *)(sub_1B62C91B8((uint64_t)&type metadata for IBLRuntime) + 16 * v4);
    unint64_t v6 = v5[1];
    if (!sub_1B62EBE70(*v5, &v14))
    {
      uint64_t v10 = *(void *)(v1 + 240);
      swift_retain();
      sub_1B6BCB514(0xD000000000000012, 0x80000001B6F37CA0, v10, v1);
      swift_release();
    }
    uint64_t v11 = sub_1B62EBE70(v6, &v14);
    if (v11)
    {
      uint64_t v7 = v11;
    }
    else
    {
      uint64_t v12 = *(void *)(v1 + 240);
      swift_retain();
      uint64_t v7 = (uint64_t)sub_1B6BCB52C(0xD000000000000014, 0x80000001B6F37B30, v12, v1);
      swift_release();
    }
    sub_1B632F170(v15);
    swift_release();
  }
  else
  {
    uint64_t v8 = *(void *)(v1 + 240);
    swift_retain();
    uint64_t v7 = (uint64_t)sub_1B63575F4(0xD000000000000017, 0x80000001B6F466B0, v8, v1);
    swift_release();
    uint64_t v9 = *(void *)(v1 + 240);
    swift_retain();
    sub_1B63575F4(0xD000000000000017, 0x80000001B6F466B0, v9, v1);
    swift_release_n();
  }
  return v7;
}

void *sub_1B63575F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B635760C(a1, a2, a3, a4, sub_1B67FFAB4);
}

void *sub_1B635760C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a3 + 48));
  uint64_t v10 = *(void *)(a3 + 128);
  if (!*(void *)(v10 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B62B2CE0(a1, a2);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v13 = (void *)a5(a4);
    char v14 = (void *)sub_1B6E31768();
    objc_msgSend(v13, sel_setLabel_, v14);

    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *(void *)(a3 + 128);
    *(void *)(a3 + 128) = 0x8000000000000000;
    sub_1B6331384((uint64_t)v13, a1, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(a3 + 128) = v17;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v13 = *(void **)(*(void *)(v10 + 56) + 8 * v11);
  swift_unknownObjectRetain();
LABEL_6:
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3 + 48));
  return v13;
}

void *sub_1B6357740(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D8374(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = j__malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 25;
  }
  v4[2] = a1;
  v4[3] = (2 * (v6 >> 3)) | 1;
  return v4;
}

void sub_1B63577E4()
{
  if (!qword_1EB980DF0)
  {
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980DF0);
    }
  }
}

unsigned char *sub_1B6357840(unsigned char *result)
{
  uint64_t v2 = v1;
  uint64_t v3 = result + 537;
  if ((result[537] & 1) != 0 || (result[539] & 1) != 0 || result[540] == 1)
  {
    if (!*(void *)(v1 + 1568))
    {
      *(_OWORD *)(v1 + 1552) = 0u;
      *(_OWORD *)(v1 + 1536) = 0u;
      *(_OWORD *)(v1 + 1520) = 0u;
      *(_OWORD *)(v1 + 1504) = 0u;
      *(_OWORD *)(v1 + 1488) = 0u;
      *(void *)(v1 + 1568) = MEMORY[0x1E4FBC860];
      *(void *)(v1 + 1584) = 0;
      *(void *)(v1 + 1576) = 0;
      *(_DWORD *)(v1 + 1588) = 550;
      if (qword_1EB97D6E8 != -1) {
        unint64_t result = (unsigned char *)swift_once();
      }
      if (byte_1EB99799C == 1)
      {
        id v4 = objc_msgSend(sub_1B679506C(0xD000000000000021, 0x80000001B6F46C80, 0, MEMORY[0x1E4FBC860], 0), sel_newArgumentEncoderWithBufferIndex_, 0);
        swift_unknownObjectRelease();
        unint64_t result = (unsigned char *)swift_unknownObjectRelease();
        *(void *)(v1 + 1576) = v4;
      }
    }
    if (*v3 == 1 && !*(void *)(v1 + 1408) && !*(void *)(v1 + 1456))
    {
      *(_OWORD *)(v1 + 1376) = 0u;
      *(_OWORD *)(v1 + 1392) = 0u;
      *(_OWORD *)(v1 + 1344) = 0u;
      *(_OWORD *)(v1 + 1360) = 0u;
      *(_OWORD *)(v1 + 1328) = 0u;
      uint64_t v5 = MEMORY[0x1E4FBC860];
      *(void *)(v2 + 1408) = MEMORY[0x1E4FBC860];
      *(void *)(v2 + 1416) = 0;
      *(void *)(v2 + 1424) = 0;
      *(_DWORD *)(v2 + 1428) = 530;
      if (qword_1EB97D6E8 != -1) {
        unint64_t result = (unsigned char *)swift_once();
      }
      uint64_t v6 = (void *)(v2 + 1432);
      uint64_t v7 = (void *)(v2 + 1464);
      if (byte_1EB99799C == 1)
      {
        uint64_t v8 = MEMORY[0x1E4FBC860];
        id v9 = objc_msgSend(sub_1B679506C(0xD000000000000020, 0x80000001B6F46C00, 0, MEMORY[0x1E4FBC860], 0), sel_newArgumentEncoderWithBufferIndex_, 0);
        swift_unknownObjectRelease();
        unint64_t result = (unsigned char *)swift_unknownObjectRelease();
        *(void *)(v2 + 1416) = v9;
        char v10 = byte_1EB99799C;
        *(void *)(v2 + 1440) = 0;
        *(void *)(v2 + 1448) = 0;
        *uint64_t v6 = 0;
        *(void *)(v2 + 1456) = v8;
        *uint64_t v7 = 0;
        *(void *)(v2 + 1472) = 0;
        if (v10)
        {
          id v11 = objc_msgSend(sub_1B679506C(0xD00000000000001ELL, 0x80000001B6F46B90, 0, MEMORY[0x1E4FBC860], 0), sel_newArgumentEncoderWithBufferIndex_, 0);
          swift_unknownObjectRelease();
          unint64_t result = (unsigned char *)swift_unknownObjectRelease();
          *uint64_t v7 = v11;
        }
      }
      else
      {
        *uint64_t v6 = 0;
        *(void *)(v2 + 1440) = 0;
        *(void *)(v2 + 1448) = 0;
        *(void *)(v2 + 1456) = v5;
        *uint64_t v7 = 0;
        *(void *)(v2 + 1472) = 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B6357D30(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24));
  uint64_t v6 = sub_1B637F1F8(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1B6357E48((uint64_t)v6, a2);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1B637FE60(v7);
  if ((v11 & 1) != 0 || (unint64_t v12 = sub_1B63581E4(v9, v10), (v12 & 0x100000000) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v13 = sub_1B637C7BC(v7, v9, (uint64_t)v6, a2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    int v13 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(*(void *)(v2 + 80) + 8 * v13 + 32);
  unint64_t v15 = *(os_unfair_lock_s **)(v5 + 24);
  swift_retain();
  os_unfair_lock_unlock(v15);
  return v14;
}

uint64_t sub_1B6357E48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    uint64_t v4 = 0;
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      return v4;
    }
    goto LABEL_5;
  }
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 32;
  do
  {
    v5 += 16;
    v4 ^= sub_1B6E31F28();
    --v3;
  }
  while (v3);
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
LABEL_5:
    uint64_t v7 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v8 = a2 + 32;
    uint64_t v9 = v6;
    do
    {
      sub_1B62C1550(v8, (uint64_t)v14);
      sub_1B62C14BC(v14, v15);
      swift_getDynamicType();
      v4 ^= sub_1B6E31F28();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
      v8 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    do
    {
      sub_1B62C1550(v7, (uint64_t)v14);
      uint64_t v11 = v15;
      uint64_t v12 = v16;
      sub_1B62C14BC(v14, v15);
      v10 ^= (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1B6357F98()
{
  return sub_1B6E33988();
}

double sub_1B6357FD4@<D0>(uint64_t a1@<X8>)
{
  swift_getAtKeyPath();
  double result = v3;
  *(double *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 9) = v5;
  return result;
}

void sub_1B6358028(signed int a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 40));
  if (*(void *)(*(void *)(v3 + 56) + 16) && (sub_1B62C5AB0(a1), (v4 & 1) != 0))
  {
    char v5 = *(os_unfair_lock_s **)(v3 + 40);
    os_unfair_lock_unlock(v5);
  }
  else
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 40));
    uint64_t v6 = *(void *)(*(void *)(v1 + 80) + 8 * a1 + 32);
    swift_retain();
    sub_1B62B750C(v1, v6);
    swift_release();
  }
}

uint64_t sub_1B63580E8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain();
  if ((sub_1B635A910(a1, a2, a4) & 1) != 0 || (uint64_t v8 = sub_1B695DD0C(a1)) == 0)
  {
    return swift_release();
  }
  else
  {
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = a2 + 1;
      uint64_t v11 = v8 + 36;
      do
      {
        uint64_t v12 = *(void *)(v11 - 4);
        swift_retain();
        sub_1B63580E8(v12, v10, a3, a4);
        swift_release();
        v11 += 8;
        --v9;
      }
      while (v9);
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1B63581E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(v2 + 72) + 8 * a2 + 32) + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    goto LABEL_5;
  }
  unint64_t v5 = sub_1B62C1A30(a1);
  if ((v6 & 1) == 0)
  {
    uint64_t v4 = 0;
LABEL_5:
    unsigned __int8 v7 = 1;
    return v4 | ((unint64_t)v7 << 32);
  }
  unsigned __int8 v7 = 0;
  uint64_t v4 = *(unsigned int *)(*(void *)(v3 + 56) + 4 * v5);
  return v4 | ((unint64_t)v7 << 32);
}

uint64_t sub_1B635824C()
{
  swift_retain();
  sub_1B636E62C();
  unsigned __int8 v2 = v1;
  int v3 = v1;
  swift_release();
  if (v3 == 2) {
    return 0;
  }
  uint64_t v5 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                 + 8 * *(void *)thread_worker_index(&thread_worker_index, v4)
                 + 8);
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980BA0, (unint64_t *)&qword_1EB97EB00, (unint64_t *)&qword_1EB97EAE0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E76B30;
  *(void *)(v6 + 32) = &type metadata for DebugInfoViewDependant;
  *(void *)(v6 + 40) = &off_1F0F8C380;
  unsigned __int8 v7 = &type metadata for DebugInfoB;
  uint64_t v8 = &off_1F0F520A8;
  if (v2) {
    unsigned __int8 v7 = &type metadata for DebugInfoA;
  }
  else {
    uint64_t v8 = &off_1F0F52198;
  }
  *(void *)(v6 + 48) = v7;
  *(void *)(v6 + 56) = v8;
  return v5;
}

uint64_t sub_1B6358360(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = (void *)(v6 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureLoadingOptions; i += 5)
  {
    if (!--v7) {
      return 0;
    }
  }
  uint64_t v10 = (uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = v10[2];
  char v14 = *((unsigned char *)v10 + 24);
  long long v20 = *((_OWORD *)v10 + 2);
  uint64_t v15 = v10[6];
  __int16 v16 = *((_WORD *)v10 + 28);
  if ((a6 & ~*v10) != 0) {
    uint64_t v17 = a6;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t v18 = v17 | v11;
  uint64_t v19 = sub_1B635AB28(a5) << 16 >> 48;
  v21[0] = v18;
  v21[1] = v12;
  v21[2] = v13;
  char v22 = v14;
  long long v23 = v20;
  uint64_t v24 = v15;
  __int16 v25 = v16;
  swift_retain();
  sub_1B6358498(v19, (uint64_t)v21);
  swift_release();
  return 1;
}

__n128 sub_1B6358498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[6];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 56);
    while ((ValueMetadata *)*(v6 - 3) != &type metadata for TextureLoadingOptions)
    {
      v6 += 5;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    uint64_t v5 = *v6;
  }
LABEL_7:
  uint64_t v7 = v2[16] + v5 + (a1 << 6);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)unint64_t v21 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)&v21[10] = *(_OWORD *)(a2 + 42);
  if (*(void *)v7 != *(void *)a2
    || *(void *)(v7 + 8) != *(void *)(a2 + 8)
    || *(void *)(v7 + 16) != (void)v8
    || *(void *)(v7 + 24) != *((void *)&v8 + 1)
    || *(void *)(v7 + 32) != *(void *)v21
    || *(void *)(v7 + 40) != *(void *)&v21[8]
    || *(void *)(v7 + 48) != *(void *)&v21[16]
    || *(unsigned __int16 *)(v7 + 56) != (unint64_t)*(unsigned __int16 *)&v21[24])
  {
    uint64_t v16 = v2[24];
    if (v16)
    {
      uint64_t v17 = v2[26];
      uint64_t v18 = 8 * (a1 >> 6);
      *(void *)(v16 + v18) |= 1 << a1;
      *(void *)(v17 + v18) &= ~(1 << a1);
    }
    sub_1B635AD78(v2[5], (uint64_t)v2, a1);
  }
  long long v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v19;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a2 + 32);
  __n128 result = *(__n128 *)(a2 + 42);
  *(__n128 *)(v7 + 42) = result;
  return result;
}

uint64_t sub_1B6358600(unint64_t a1, uint64_t a2)
{
  return sub_1B6358618(a1, a2);
}

uint64_t sub_1B6358618(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3) {
      return sub_1B63586C8(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32));
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B63586C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = v1 + 56; *(ValueMetadata **)(i - 24) != &type metadata for VertexLayoutCollection; i += 40)
  {
    if (!--v2) {
      return 0;
    }
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6358730(uint64_t a1, uint64_t a2)
{
  return sub_1B635875C(a1, a2, (uint64_t (*)(void, void, uint64_t))sub_1B6358800);
}

uint64_t sub_1B635875C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, uint64_t))
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v3 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return a3(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v3 + 12 * (int)a1) + 32), *(unsigned __int16 *)(v3 + 12 * (int)a1 + 4), 656);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6358800(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = v1 + 56; *(ValueMetadata **)(i - 24) != &type metadata for EmitterRuntime; i += 40)
  {
    if (!--v2) {
      return 0;
    }
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B635886C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, Swift::Int a6, float a7, float a8, float a9)
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v11 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B6358A38(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v11 + 12 * (int)a1) + 32), *(_WORD *)(v11 + 12 * (int)a1 + 4), 128, a3, a4, a5, a6, a7, a8, a9), !v9)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    sub_1B62F648C(a4);
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6358A38(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, Swift::Int a7, float a8, float a9, float a10)
{
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return 0;
  }
  for (uint64_t i = (void *)(v10 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleSpawnState; i += 5)
  {
    if (!--v11) {
      return 0;
    }
  }
  sub_1B6358AB4((void *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6, a7, a8, a9, a10);
  return 1;
}

uint64_t sub_1B6358AB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int a5, float a6, float a7, float a8)
{
  int v8 = *(_DWORD *)(a3 + 36);
  uint64_t v9 = *(int *)(a3 + 32);
  BOOL v10 = v9 == -1 && v8 == 0;
  if (v10 || (v9 & 0x80000000) != 0 || *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v9) {
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  BOOL v12 = v8 == -1 || *(_DWORD *)(v11 + 12 * (int)v9 + 8) == v8;
  if (!v12
    || (long long v20 = (int *)(v11 + 12 * (int)v9),
        uint64_t v21 = *(void *)(*(void *)(a2 + 136) + 8 * *v20 + 32),
        __int16 v22 = *((_WORD *)v20 + 2),
        sub_1B62F6B80(a3),
        LOBYTE(a5) = sub_1B6358CE0(v21, v22, 656, a4, a5, a1, (uint64_t *)a3, a6, a7, a8),
        uint64_t result = sub_1B62F648C(a3),
        (a5 & 1) == 0))
  {
LABEL_13:
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6358CE0(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, Swift::Int a5, void *a6, uint64_t *a7, float a8, float a9, float a10)
{
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return 0;
  }
  for (uint64_t i = (void *)(v10 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v11) {
      return 0;
    }
  }
  uint64_t v17 = 1;
  if (sub_1B6358DE0(0, 1, 0, 1, (uint64_t)a6, a8, a9, a10, *(void *)(a1 + 128) + *i + a2 * a3 + 8, a7))
  {
    a6[10] = 0;
    a6[11] = 0;
    a6[12] = 0;
    if (a5 != a4) {
      a5 = sub_1B68E0DD8(a5 - a4) + a4;
    }
    if (a5 >= 1) {
      sub_1B6919F58(a5, a6, (uint64_t)a7);
    }
  }
  return v17;
}

uint64_t sub_1B6358DE0(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, float a6, float a7, float a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v18 = *a10;
  int v19 = *((_DWORD *)a10 + 3);
  uint64_t v20 = *((int *)a10 + 2);
  swift_retain();
  BOOL v21 = v20 == -1 && v19 == 0;
  if (!v21
    && (v20 & 0x80000000) == 0
    && *(void *)(v18 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v20
    && ((uint64_t v22 = *(void *)(v18 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v19 == -1)
     || *(_DWORD *)(v22 + 12 * (int)v20 + 8) == v19))
  {
    uint64_t v28 = sub_1B62F4E94(*(void *)(*(void *)(v18 + 136) + 8 * *(int *)(v22 + 12 * (int)v20) + 32), *(_WORD *)(v22 + 12 * (int)v20 + 4), 8);
    char v30 = v29;
    swift_release();
    if ((v30 & 1) == 0 && *(void *)(a5 + 104) != v28)
    {
      *(void *)(a5 + 104) = v28;
      if (v28)
      {
        *(void *)(a5 + 72) = 0;
        *(_DWORD *)a5 = *(_DWORD *)(a5 + 4);
      }
    }
  }
  else
  {
    swift_release();
  }
  float v23 = *(float *)a5;
  float v24 = *(float *)(a5 + 4);
  float v25 = *(float *)a5 + a6;
  *(float *)a5 = v25;
  *(void *)(a5 + 88) = 0;
  *(void *)(a5 + 96) = 0;
  *(void *)(a5 + 80) = 0;
  if (v24 > v25 || v25 > *(float *)(a5 + 8)) {
    return 0;
  }
  if (v23 <= v24)
  {
    if ((a2 & 1) == 0)
    {
      float v27 = *(float *)&a1;
      if (*(float *)&a1 != *((float *)&a1 + 1)) {
        sub_1B68AA078(*(float *)&a1, *((float *)&a1 + 1));
      }
      float v24 = v24 + v27;
    }
    *(float *)(a5 + 12) = v24;
    if ((a4 & 1) == 0)
    {
      if (*(float *)&a3 == *((float *)&a3 + 1))
      {
        *(_DWORD *)(a5 + 16) = a3;
      }
      else
      {
        sub_1B68AA078(*(float *)&a3, *((float *)&a3 + 1));
        *(_DWORD *)(a5 + 16) = v31;
      }
    }
  }
  if (*(float *)(a5 + 12) <= v25)
  {
    if (a7 != a8)
    {
      sub_1B68AA078(a7, a8);
      a7 = v32;
    }
    *(float *)(a5 + 4) = v25 + a7;
  }
  return 1;
}

uint64_t sub_1B6358FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6359008(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B6359254);
}

uint64_t sub_1B6359008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v7 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B63591DC(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(_WORD *)(v7 + 12 * (int)a1 + 4), 656, a3, a4, a5), !v5)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B62F648C(a3);
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B63591DC(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = (void *)(v6 + 56); (ValueMetadata *)*(i - 3) != &type metadata for EmitterRuntime; i += 5)
  {
    if (!--v7) {
      return 0;
    }
  }
  a6(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5);
  return 1;
}

uint64_t *sub_1B6359254(void *a1, float a2, float a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  long long v9 = *(_OWORD *)(a5 + 72);
  v71[0] = *(_OWORD *)(a5 + 56);
  v71[1] = v9;
  uint64_t v72 = *(void *)(a5 + 88);
  uint64_t v10 = swift_retain();
  sub_1B62C9DA8(v10, (uint64_t)v71, 0x200000000, v57);
  sub_1B62CA210((uint64_t)v57, (uint64_t)v58, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v58[0]) {
    return (uint64_t *)swift_release();
  }
  long long v65 = v58[0];
  long long v66 = v58[1];
  uint64_t v49 = v60;
  uint64_t v67 = v59;
  uint64_t v12 = v61;
  uint64_t v11 = v62;
  uint64_t v13 = v64;
  unint64_t v56 = v63;
  swift_release();
  if (v13 > 0 && v12)
  {
    uint64_t v55 = v56[4];
    int v14 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v68[0] = v65;
    v68[1] = v66;
    uint64_t v69 = v67;
    float v15 = a3 - a2;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v16 = 0;
    int v48 = v14;
    uint64_t v47 = v12;
    while (1)
    {
      uint64_t v17 = (unsigned int *)(v49 + 48 * v16);
      uint64_t v52 = *v17;
      uint64_t v53 = v16;
      uint64_t v51 = v17[1];
      uint64_t v18 = (uint64_t *)*((void *)v17 + 2);
      uint64_t v54 = *((void *)v17 + 3);
      uint64_t v20 = *((void *)v17 + 4);
      uint64_t v19 = *((void *)v17 + 5);
      if (v14)
      {
        BOOL v21 = *(os_unfair_lock_s **)(v19 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v21);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v19 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v55);
      sub_1B62CA210((uint64_t)(v56 + 6), (uint64_t)v70, &qword_1EB97DE20);
      uint64_t v22 = v56[4];
      uint64_t v23 = *(void *)(*(void *)(*(void *)(*(void *)(v19 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v56[6] = ecs_stack_allocator_allocate(v22, 48 * v23, 8);
      v56[7] = v23;
      v56[9] = 0;
      v56[10] = 0;
      v56[8] = 0;
      swift_release();
      float v24 = (float *)sub_1B62C9024((uint64_t)&type metadata for ParticleLifetime, (uint64_t)&off_1F0F6DC48, v18, v54, v20, (uint64_t)v56);
      if (v18)
      {
        int v14 = v48;
        if (v20)
        {
          uint64_t v25 = a1[3];
          uint64_t v26 = a1[4];
          uint64_t v27 = a1[1];
          uint64_t v28 = a1[2];
          uint64_t v30 = v53;
          uint64_t v29 = v6;
          do
          {
            float v31 = (float)(v15
                        * (float)((float)((9 * ((((unint64_t)(5 * v28) >> 32) >> 25) | (640 * v28))) & 0xFFFFFF)
                                * 0.000000059605))
                + a2;
            float v32 = 1.0 / v31;
            uint64_t v33 = v27 ^ v25;
            uint64_t v34 = v28 ^ v26;
            uint64_t v35 = v33 ^ v28;
            v27 ^= v34;
            uint64_t v25 = v33 ^ (v28 << 17);
            BOOL v36 = v31 > 0.001;
            uint64_t v26 = __ROR8__(v34, 19);
            float v37 = 1000.0;
            if (v36) {
              float v37 = v32;
            }
            *v24++ = v37;
            uint64_t v28 = v35;
            --v20;
          }
          while (v20);
LABEL_24:
          a1[1] = v27;
          a1[2] = v35;
          a1[3] = v25;
          a1[4] = v26;
          goto LABEL_25;
        }
      }
      else
      {
        int v14 = v48;
        if (v52 != v51)
        {
          uint64_t v25 = a1[3];
          uint64_t v26 = a1[4];
          uint64_t v38 = v51 - v52;
          unint64_t v39 = &v24[v52];
          uint64_t v27 = a1[1];
          uint64_t v40 = a1[2];
          uint64_t v30 = v53;
          uint64_t v29 = v6;
          do
          {
            float v41 = (float)(v15
                        * (float)((float)((9 * ((((unint64_t)(5 * v40) >> 32) >> 25) | (640 * v40))) & 0xFFFFFF)
                                * 0.000000059605))
                + a2;
            float v42 = 1.0 / v41;
            uint64_t v43 = v27 ^ v25;
            uint64_t v44 = v40 ^ v26;
            uint64_t v35 = v43 ^ v40;
            v27 ^= v44;
            uint64_t v25 = v43 ^ (v40 << 17);
            BOOL v36 = v41 > 0.001;
            uint64_t v26 = __ROR8__(v44, 19);
            float v45 = 1000.0;
            if (v36) {
              float v45 = v42;
            }
            *v39++ = v45;
            uint64_t v40 = v35;
            --v38;
          }
          while (v38);
          goto LABEL_24;
        }
      }
      uint64_t v30 = v53;
      uint64_t v29 = v6;
LABEL_25:
      sub_1B6345178(v56, (unsigned __int16 **)v68, (uint64_t)v70);
      uint64_t v6 = v29;
      sub_1B634507C((char *)v19);
      ecs_stack_allocator_pop_snapshot(v55);
      if (v14)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 376));
      }
      swift_release();
      uint64_t v16 = v30 + 1;
      if (v16 == v47)
      {
        sub_1B632F170(v57);
        return sub_1B632F170(v57);
      }
    }
  }
  return sub_1B632F170(v57);
}

id sub_1B6359678(unint64_t a1)
{
  uint64_t v2 = (void *)sub_1B62EBE70(a1, &v7);
  uint64_t v3 = v2;
  if (!v2) {
    return 0;
  }
  uint64_t v4 = (char *)objc_msgSend(v2, sel_pixelFormat);
  if ((unint64_t)(v4 - 160) >= 0x3B || ((0x7FDF1FF7CFD54FFuLL >> (v4 + 96)) & 1) == 0) {
    sub_1B62EC0CC((uint64_t)&type metadata for TextureRequireUnpremultiply, (uint64_t)&off_1F0F985D8, a1);
  }
  id v5 = objc_msgSend(v3, sel_textureType);
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1B6359750(unint64_t a1)
{
  int v2 = a1;
  uint64_t v3 = (_DWORD *)HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((v2 & 0x80000000) == 0)
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
    uint64_t v6 = v2;
    if (v5 > v2)
    {
      uint64_t v7 = 0;
      uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      while (1)
      {
        uint64_t v9 = v8 + 12 * v6;
        uint64_t v10 = *(__int16 *)(v9 + 4);
        if (v3 != -1 && *(_DWORD *)(v9 + 8) != v3) {
          return v7;
        }
        uint64_t v11 = *(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v8 + 12 * v6) + 32);
        uint64_t v12 = *(void *)(v11 + 48);
        uint64_t v13 = *(void *)(v12 + 16);
        if (!v13) {
          return v7;
        }
        for (uint64_t i = (void *)(v12 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Parent; i += 5)
        {
          if (!--v13) {
            return v7;
          }
        }
        uint64_t v3 = (_DWORD *)(*(void *)(v11 + 128) + *i + 8 * v10);
        LODWORD(v6) = *v3;
        LODWORD(v3) = v3[1];
        uint64_t v6 = (int)v6;
        uint64_t result = 0;
        BOOL v15 = v6 == -1 && v3 == 0;
        if (v15 || (v6 & 0x80000000) != 0 || v5 <= (int)v6) {
          return result;
        }
        if (v3 != -1 && *(_DWORD *)(v8 + 12 * (int)v6 + 8) != v3) {
          return 0;
        }
        if (v7 == 1000) {
          break;
        }
        ++v7;
        if ((v6 & 0x80000000) != 0) {
          return v7;
        }
        uint64_t result = v7;
        if (v5 <= (int)v6) {
          return result;
        }
      }
      return -1;
    }
  }
  return result;
}

uint64_t sub_1B6359878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = *(_OWORD *)(a1 + 16);
  v28[0] = *(_OWORD *)a1;
  v28[1] = v5;
  uint64_t v29 = *(void *)(a1 + 32);
  sub_1B62C9DA8(v3, (uint64_t)v28, a2 & 0xFFFFFFFFFFLL, v16);
  uint64_t result = sub_1B6355BE8((uint64_t)v16, (uint64_t)&v17, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v17)
  {
    uint64_t v7 = v20;
    uint64_t v8 = v21;
    uint64_t v9 = v22;
    uint64_t v10 = v23;
    long long v11 = v24;
    long long v12 = v25;
    uint64_t v13 = v26;
    uint64_t v14 = v27;
    unint64_t v15 = v18 | ((unint64_t)v19 << 32);
  }
  else
  {
    unint64_t v15 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    long long v11 = 0uLL;
    long long v12 = 0uLL;
  }
  *(void *)a3 = v17;
  *(void *)(a3 + 8) = v15;
  *(void *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v8;
  *(void *)(a3 + 32) = v9;
  *(void *)(a3 + 40) = v10;
  *(_OWORD *)(a3 + 48) = v11;
  *(_OWORD *)(a3 + 64) = v12;
  *(void *)(a3 + 80) = v13;
  *(void *)(a3 + 88) = v14;
  return result;
}

uint64_t sub_1B6359960(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleOpacityOverLife; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_1B6359A1C@<X0>(uint64_t result@<X0>, int a2@<W1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(result + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (void *)(v6 + 56);
    while ((ValueMetadata *)*(v8 - 3) != &type metadata for LastFrameWorldTransform)
    {
      v8 += 5;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    char v17 = 0;
    unsigned int v18 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *v8 + a3 * a4);
    uint64_t v9 = *v18;
    uint64_t v10 = v18[1];
    uint64_t v11 = v18[2];
    uint64_t v12 = v18[3];
    uint64_t v13 = v18[4];
    uint64_t v14 = v18[5];
    uint64_t v15 = v18[6];
    uint64_t v16 = v18[7];
  }
  else
  {
LABEL_5:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    char v17 = 1;
  }
  *(void *)a6 = v9;
  *(void *)(a6 + 8) = v10;
  *(void *)(a6 + 16) = v11;
  *(void *)(a6 + 24) = v12;
  *(void *)(a6 + 32) = v13;
  *(void *)(a6 + 40) = v14;
  *(void *)(a6 + 48) = v15;
  *(void *)(a6 + 56) = v16;
  *(unsigned char *)(a6 + 64) = v17;
  return result;
}

uint64_t sub_1B6359AC0(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraVignetting; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6359B30(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for IBLRuntime; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6359BA0(unint64_t a1)
{
  return sub_1B6359BB8(a1, (uint64_t (*)(void))sub_1B6359CB8);
}

uint64_t sub_1B6359BB8(unint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v4 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v4 == -1 || *(_DWORD *)(v6 + 12 * (int)a1 + 8) == v4) {
      return a2(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32));
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B6359CB8(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticlePeriodicBurstSpawn; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  return *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
}

uint64_t sub_1B6359D30@<X0>(uint64_t result@<X0>, _OWORD *a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    unint64_t v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B6359DFC(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 112, v2, (uint64_t)a2);
  }
  else
  {
    *(_OWORD *)((char *)a2 + 89) = 0u;
    a2[4] = 0u;
    a2[5] = 0u;
    a2[2] = 0u;
    a2[3] = 0u;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1B6359DFC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for ParticleSizeOverLife)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = (unsigned __int8 *)(*(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128)
                           + *v7
                           + (a2 << 16 >> 48) * a3);
    uint64_t v9 = v8[8];
    uint64_t v10 = *((void *)v8 + 2);
    uint64_t v11 = *((void *)v8 + 3);
    uint64_t v12 = *((void *)v8 + 4);
    uint64_t v13 = v8[40];
    uint64_t v14 = *((void *)v8 + 6);
    uint64_t v15 = *((void *)v8 + 7);
    uint64_t v16 = *((void *)v8 + 8);
    uint64_t v17 = v8[72];
    uint64_t v18 = *((void *)v8 + 10);
    uint64_t v19 = *((void *)v8 + 11);
    uint64_t v20 = *((void *)v8 + 12);
    unsigned __int8 v21 = v8[104];
    *(void *)a5 = *v8 | ((unint64_t)*((unsigned int *)v8 + 1) << 32);
    *(void *)(a5 + 8) = v9;
    *(void *)(a5 + 16) = v10;
    *(void *)(a5 + 24) = v11;
    *(void *)(a5 + 32) = v12;
    *(void *)(a5 + 40) = v13;
    *(void *)(a5 + 48) = v14;
    *(void *)(a5 + 56) = v15;
    *(void *)(a5 + 64) = v16;
    *(void *)(a5 + 72) = v17;
    *(void *)(a5 + 80) = v18;
    *(void *)(a5 + 88) = v19;
    *(void *)(a5 + 96) = v20;
    *(unsigned char *)(a5 + 104) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    *(_OWORD *)(a5 + 89) = 0u;
    *(_OWORD *)(a5 + 64) = 0u;
    *(_OWORD *)(a5 + 80) = 0u;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B6359F34(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
      && (uint64_t v6 = (int *)(v5 + 12 * (int)a1),
          uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32),
          uint64_t v8 = *(void *)(v7 + 48),
          (uint64_t v9 = *(void *)(v8 + 16)) != 0))
    {
      uint64_t v10 = *((__int16 *)v6 + 2);
      for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraDepthOfField; i += 5)
      {
        if (!--v9) {
          return 0;
        }
      }
      return *(void *)(*(void *)(v7 + 128) + *i + 8 * v10);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B635A014@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) == -1)
     || *(_DWORD *)(v3 + 12 * (int)result + 8) == HIDWORD(result)))
  {
    unint64_t v4 = (unsigned int *)(v3 + 12 * (int)result);
    return sub_1B635A0E8(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v4 + 32), *v4 | ((unint64_t)*((unsigned __int16 *)v4 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v4+ 2) << 32), 112, v2, a2);
  }
  else
  {
    *(_OWORD *)(a2 + 92) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(unsigned char *)(a2 + 108) = 1;
  }
  return result;
}

uint64_t sub_1B635A0E8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(result + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for CameraColorGrading)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(unsigned int *)(v8 + 8);
    uint64_t v12 = *(void *)(v8 + 16);
    uint64_t v11 = *(void *)(v8 + 24);
    uint64_t v13 = *(unsigned int *)(v8 + 32);
    uint64_t v15 = *(void *)(v8 + 48);
    uint64_t v14 = *(void *)(v8 + 56);
    uint64_t v16 = *(unsigned int *)(v8 + 64);
    long long v17 = *(_OWORD *)(v8 + 80);
    uint64_t result = *(void *)(v8 + 96);
    LODWORD(v8) = *(_DWORD *)(v8 + 104);
    *(void *)a5 = v9;
    *(void *)(a5 + 8) = v10;
    *(void *)(a5 + 16) = v12;
    *(void *)(a5 + 24) = v11;
    *(void *)(a5 + 32) = v13;
    *(void *)(a5 + 40) = 0;
    *(void *)(a5 + 48) = v15;
    *(void *)(a5 + 56) = v14;
    *(void *)(a5 + 64) = v16;
    *(void *)(a5 + 72) = 0;
    *(_OWORD *)(a5 + 80) = v17;
    *(void *)(a5 + 96) = result;
    *(_DWORD *)(a5 + 104) = v8;
    *(unsigned char *)(a5 + 108) = 0;
  }
  else
  {
LABEL_5:
    *(_OWORD *)(a5 + 92) = 0u;
    *(_OWORD *)(a5 + 64) = 0u;
    *(_OWORD *)(a5 + 80) = 0u;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(unsigned char *)(a5 + 108) = 1;
  }
  return result;
}

uint64_t sub_1B635A1A8(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 4;
  }
  uint64_t result = 4;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
    {
      uint64_t v6 = (int *)(v5 + 12 * (int)a1);
      uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32);
      uint64_t v8 = *(void *)(v7 + 48);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v10 = *((__int16 *)v6 + 2);
        for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for CameraToneMapping; i += 5)
        {
          if (!--v9) {
            return 4;
          }
        }
        return *(unsigned __int8 *)(*(void *)(v7 + 128) + *i + v10);
      }
    }
  }
  return result;
}

uint64_t sub_1B635A274(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
      && (uint64_t v6 = (int *)(v5 + 12 * (int)a1),
          uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32),
          uint64_t v8 = *(void *)(v7 + 48),
          (uint64_t v9 = *(void *)(v8 + 16)) != 0))
    {
      int v10 = *((__int16 *)v6 + 2);
      for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for ParticleLifeInit; i += 5)
      {
        if (!--v9) {
          return 0;
        }
      }
      return *(void *)(*(void *)(v7 + 128) + *i + 12 * v10);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B635A35C(unint64_t a1)
{
  return sub_1B62F45F8(a1, (uint64_t (*)(void))sub_1B6359AC0);
}

uint64_t sub_1B635A374@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  long long v3 = 0uLL;
  if (result == 0xFFFFFFFFLL) {
    goto LABEL_2;
  }
  char v4 = 1;
  if (result << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)result >= *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    goto LABEL_3;
  }
  if ((uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(result) != -1)
    && *(_DWORD *)(v6 + 12 * (int)result + 8) != HIDWORD(result)
    || (uint64_t v7 = (int *)(v6 + 12 * (int)result),
        uint64_t v8 = *(void *)(*(void *)(v2 + 136) + 8 * *v7 + 32),
        uint64_t v9 = *(void *)(v8 + 48),
        (uint64_t v10 = *(void *)(v9 + 16)) == 0))
  {
LABEL_2:
    char v4 = 1;
LABEL_3:
    long long v5 = 0uLL;
    goto LABEL_4;
  }
  uint64_t v11 = *((__int16 *)v7 + 2);
  uint64_t v12 = (void *)(v9 + 56);
  while ((ValueMetadata *)*(v12 - 3) != &type metadata for RenderSettings)
  {
    v12 += 5;
    if (!--v10) {
      goto LABEL_2;
    }
  }
  char v4 = 0;
  uint64_t v13 = (long long *)(*(void *)(v8 + 128) + *v12 + 32 * v11);
  long long v3 = *v13;
  long long v5 = v13[1];
LABEL_4:
  *(_OWORD *)a2 = v3;
  *(_OWORD *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 32) = v4;
  return result;
}

uint64_t sub_1B635A454(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
      && (uint64_t v6 = (int *)(v5 + 12 * (int)a1),
          uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32),
          uint64_t v8 = *(void *)(v7 + 48),
          (uint64_t v9 = *(void *)(v8 + 16)) != 0))
    {
      uint64_t v10 = *((__int16 *)v6 + 2);
      for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Scheduling; i += 5)
      {
        if (!--v9) {
          return 0;
        }
      }
      return *(void *)(*(void *)(v7 + 128) + *i + 8 * v10);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B635A534(uint64_t result, void (*a2)(uint64_t))
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  if (result != 0xFFFFFFFFLL
    && result << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)result < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(result) == -1 || *(_DWORD *)(v7 + 12 * (int)result + 8) == HIDWORD(result))
    {
      uint64_t v8 = (int *)(v7 + 12 * (int)result);
      uint64_t v9 = *((__int16 *)v8 + 2);
      uint64_t v10 = *(void *)(*(void *)(v2 + 136) + 8 * *v8 + 32);
      if (*(void *)(v10 + 232) <= v9 && *(void *)(v10 + 240) > v9)
      {
        uint64_t v12 = **(void **)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        uint64_t v13 = *(os_unfair_lock_s **)(v10 + 344);
        swift_retain();
        os_unfair_lock_lock(v13);
        ecs_stack_allocator_push_snapshot(*(void *)(v12 + 32));
        swift_retain();
        sub_1B635A684(v12, v10, v9, v2, v6, a2);
        swift_release();
        if (!v4) {
          ecs_stack_allocator_pop_snapshot(*(void *)(v12 + 32));
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 344));
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1B635A684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  if (!sub_1B62FACF8((uint64_t)&type metadata for MaterialRuntime))
  {
    uint64_t v10 = ecs_stack_allocator_allocate(*(void *)(a1 + 32), 8, 8);
    uint64_t *v10 = a3;
    sub_1B63861B4((uint64_t)&type metadata for MaterialRuntime, (uint64_t)&off_1F0F68E78, v10, 1, 1);
  }
  return sub_1B635A760(a5, a6);
}

uint64_t sub_1B635A760(uint64_t a1, void (*a2)(uint64_t))
{
  if (a1 == 0xFFFFFFFFLL
    || a1 << 32 < (uint64_t)0xFFFFFFFF00000001
    || (int)a1 >= *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    || (uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) != -1)
    && *(_DWORD *)(v4 + 12 * (int)a1 + 8) != HIDWORD(a1)
    || (uint64_t result = sub_1B62EE3D0(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v4 + 12 * (int)a1) + 32), *(_WORD *)(v4 + 12 * (int)a1 + 4), 248, a2), !v3)&& (result & 1) == 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B635A910(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = a1;
  if (a1 != 0xFFFFFFFF
    && (uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1))
    {
      a1 = sub_1B635AA94(*(void *)(*(void *)(a3 + 80) + 8 * *(__int16 *)(v5 + 12 * (int)a1 + 6) + 32), a2);
      if (a1) {
        return 1;
      }
    }
  }
  if (a2 < 1)
  {
    uint64_t v7 = sub_1B6CD54C4(v4);
    if ((v8 & 1) == 0)
    {
      MEMORY[0x1F4188790](v7, v8);
      sub_1B69DEB88(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B6CD5C1C);
    }
  }
  else
  {
    MEMORY[0x1F4188790](a1, a2);
    sub_1B69DEB88(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B6CD5C48);
  }
  return 0;
}

BOOL sub_1B635AA94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  for (uint64_t i = (void *)(v2 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Depth; i += 5)
  {
    if (!--v3) {
      return 0;
    }
  }
  return *(void *)(*(void *)(a1 + 96) + *i) == a2;
}

uint64_t sub_1B635AB28(uint64_t a1)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (HIDWORD(a1) == -1 || *(_DWORD *)(v2 + 12 * (int)a1 + 8) == HIDWORD(a1)) {
      return *(void *)(v2 + 12 * (int)a1);
    }
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B635ABF4()
{
  return sub_1B635ABFC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1B635ABFC(uint64_t a1, unint64_t a2)
{
  int v2 = a2;
  unint64_t v4 = HIDWORD(a2);
  swift_retain();
  if ((v2 != -1 || v4)
    && (v2 & 0x80000000) == 0
    && v2 < *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v4 == -1 || *(_DWORD *)(v5 + 12 * v2 + 8) == v4) {
      sub_1B635ACD8(*(uint64_t **)(*(void *)(a1 + 136) + 8 * *(int *)(v5 + 12 * v2) + 32));
    }
  }

  return swift_release();
}

uint64_t sub_1B635ACD8(uint64_t *a1)
{
  thread_worker_index();
  uint64_t v6 = v2 << 16 >> 48;
  if (a1[24]) {
    sub_1B635AEBC(v2 << 16 >> 48, v3, v4, v5, a1[24], a1[25], a1[26]);
  }
  return sub_1B635AD78(a1[5], (uint64_t)a1, v6);
}

uint64_t sub_1B635AD78(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(result + 213) == 1)
  {
    uint64_t v5 = *(void *)(a2 + 48);
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      uint64_t v7 = (uint64_t *)(v5 + 56);
      while ((ValueMetadata *)*(v7 - 3) != &type metadata for PropagateDirtiness)
      {
        v7 += 5;
        if (!--v6) {
          goto LABEL_6;
        }
      }
      uint64_t v8 = *v7;
    }
    else
    {
LABEL_6:
      uint64_t v8 = 0;
    }
    uint64_t v9 = *(void *)(a2 + 128);
    char v10 = *(unsigned char *)(a2 + 184);
    uint64_t v11 = swift_retain();
    if (v10)
    {
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
    }
    else
    {
      uint64_t v12 = (unsigned int *)(v9 + v8 + 8 * a3);
      unsigned int v13 = *(_DWORD *)(*(void *)(a2 + 168) + 4 * a3);
      uint64_t v14 = *(unsigned int *)(*(void *)(v11 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v13 + 8);
      uint64_t result = swift_release();
      uint64_t v15 = *v12;
      uint64_t v16 = v12[1];
      if (v15 != -1 || v16 != 0) {
        return sub_1B6398CA0(v18, v13 | (unint64_t)(v14 << 32), v15 | (v16 << 32));
      }
    }
  }
  return result;
}

uint64_t sub_1B635AEBC(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = 1 << result;
  uint64_t v8 = 8 * (result >> 6);
  *(void *)(a5 + v8) |= 1 << result;
  if (a4 == 3 && a2 == 2 && !a3) {
    *(void *)(a7 + v8) |= v7;
  }
  else {
    *(void *)(a7 + v8) &= ~v7;
  }
  return result;
}

uint64_t sub_1B635AF10()
{
  return sub_1B633B0E8();
}

uint64_t sub_1B635AF44()
{
  return sub_1B633D2CC();
}

uint64_t sub_1B635AF78(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = 0;
  uint64_t v159 = *MEMORY[0x1E4F143B8];
  long long v5 = *(_OWORD *)(v1 + 32);
  v148[0] = *(_OWORD *)(v1 + 16);
  v148[1] = v5;
  uint64_t v149 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v148, 0x200000000, v150);
  sub_1B63175D8((uint64_t)v150, (uint64_t)v151, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v151[0])
  {
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v42 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v42) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_39;
  }
  long long v129 = v151[0];
  long long v130 = v151[1];
  uint64_t v131 = v152;
  if (v157 >= 1 && (uint64_t v111 = v154) != 0)
  {
    uint64_t v104 = v1;
    uint64_t v120 = v3;
    uint64_t v109 = v153;
    uint64_t v122 = v156[4];
    int v118 = *(unsigned __int8 *)(v155 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v123 = v156;
    uint64_t v106 = v156 + 8;
    uint64_t v108 = (uint64_t)(v156 + 6);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v7 = 0;
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v96 = v4;
      uint64_t v9 = (unsigned int *)(v109 + 48 * v7);
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      uint64_t v12 = (uint64_t *)*((void *)v9 + 2);
      uint64_t v14 = *((void *)v9 + 4);
      uint64_t v13 = *((void *)v9 + 5);
      uint64_t v113 = *((void *)v9 + 3);
      uint64_t v116 = v7;
      if (v118)
      {
        uint64_t v15 = *(os_unfair_lock_s **)(v13 + 376);
        swift_retain();
        os_unfair_lock_lock(v15);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v122);
      sub_1B63175D8(v108, (uint64_t)v158, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v16 = v123[4];
      uint64_t v17 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v123[6] = ecs_stack_allocator_allocate(v16, 48 * v17, 8);
      v123[7] = v17;
      v106[1] = 0;
      v106[2] = 0;
      *uint64_t v106 = 0;
      swift_release();
      uint64_t v18 = sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v12, v113, v14, (uint64_t)v123);
      uint64_t v19 = sub_1B62C9024((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, v12, v113, v14, (uint64_t)v123);
      if (v12)
      {
        if (v14)
        {
          uint64_t v20 = (float *)(v18 + 48);
          unsigned __int8 v21 = (unsigned char *)(v19 + 130);
          do
          {
            uint64_t v24 = *v12++;
            uint64_t v23 = v24;
            if ((*v21 & 1) == 0)
            {
              *unsigned __int8 v21 = 1;
              if (*v20 > 0.0)
              {
                char v25 = *(unsigned char *)(v13 + 184);
                uint64_t v26 = swift_retain();
                if (v25) {
                  goto LABEL_95;
                }
                int v27 = *(_DWORD *)(*(void *)(v13 + 168) + 4 * v23);
                int v28 = *(_DWORD *)(*(void *)(v26 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v27 + 8);
                swift_release();
                float v29 = *v20;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v8 = sub_1B68C4A84(0, *((void *)v8 + 2) + 1, 1, v8);
                }
                unint64_t v31 = *((void *)v8 + 2);
                unint64_t v30 = *((void *)v8 + 3);
                if (v31 >= v30 >> 1) {
                  uint64_t v8 = sub_1B68C4A84(v30 > 1, v31 + 1, 1, v8);
                }
                *((void *)v8 + 2) = v31 + 1;
                uint64_t v22 = (float *)&v8[12 * v31];
                *((_DWORD *)v22 + 8) = v27;
                *((_DWORD *)v22 + 9) = v28;
                v22[10] = v29;
              }
            }
            v21 += 656;
            v20 += 22;
            --v14;
          }
          while (v14);
        }
      }
      else if (v11 != v10)
      {
        float v32 = (unsigned char *)(v19 + 656 * v11 + 130);
        uint64_t v33 = (float *)(v18 + 88 * v11 + 48);
        do
        {
          if ((*v32 & 1) == 0)
          {
            *float v32 = 1;
            if (*v33 > 0.0)
            {
              char v35 = *(unsigned char *)(v13 + 184);
              uint64_t v36 = swift_retain();
              if (v35) {
                goto LABEL_95;
              }
              int v37 = *(_DWORD *)(*(void *)(v13 + 168) + 4 * v11);
              int v38 = *(_DWORD *)(*(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v37 + 8);
              swift_release();
              float v39 = *v33;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v8 = sub_1B68C4A84(0, *((void *)v8 + 2) + 1, 1, v8);
              }
              unint64_t v41 = *((void *)v8 + 2);
              unint64_t v40 = *((void *)v8 + 3);
              if (v41 >= v40 >> 1) {
                uint64_t v8 = sub_1B68C4A84(v40 > 1, v41 + 1, 1, v8);
              }
              *((void *)v8 + 2) = v41 + 1;
              uint64_t v34 = (float *)&v8[12 * v41];
              *((_DWORD *)v34 + 8) = v37;
              *((_DWORD *)v34 + 9) = v38;
              v34[10] = v39;
            }
          }
          ++v11;
          v32 += 656;
          v33 += 22;
        }
        while (v10 != v11);
      }
      v132[0] = v129;
      v132[1] = v130;
      uint64_t v133 = v131;
      uint64_t v4 = v96;
      sub_1B6345178(v123, (unsigned __int16 **)v132, (uint64_t)v158);
      sub_1B634507C((char *)v13);
      ecs_stack_allocator_pop_snapshot(v122);
      if (v118)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
      }
      swift_release();
      uint64_t v7 = v116 + 1;
    }
    while (v116 + 1 != v111);
    sub_1B632F170(v150);
    uint64_t v3 = v120;
    uint64_t v2 = v104;
  }
  else
  {
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  }
  sub_1B632F170(v150);
  uint64_t v42 = *((void *)v8 + 2);
  if (v42)
  {
LABEL_39:
    uint64_t v99 = v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
    uint64_t v93 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
    uint64_t v94 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock);
    uint64_t v91 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 24);
    uint64_t v92 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 16);
    uint64_t v43 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 32);
    uint64_t v44 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 40);
    uint64_t v45 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 48);
    uint64_t v46 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 56);
    uint64_t v47 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 64);
    uint64_t v90 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 72);
    char v89 = *(unsigned char *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 80);
    uint64_t v88 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 88);
    char v86 = *(unsigned char *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 97);
    char v87 = *(unsigned char *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 96);
    char v84 = *(unsigned char *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 99);
    char v85 = *(unsigned char *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 98);
    char v83 = *(unsigned char *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 100);
    *(_DWORD *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 64) = 1040187392;
    uint64_t v95 = (uint64_t (*)(uint64_t (**)(void, double)))thread_worker_index;
    uint64_t v48 = *(void *)(*(void *)(*(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                                + 8 * *(void *)thread_worker_index(&thread_worker_index, v6)
                                + 8)
                    + 40);
    uint64_t v102 = type metadata accessor for EventDisposeSystem();
    uint64_t v107 = OBJC_IVAR____TtC3VFX13EntityManager_scheduler;
    uint64_t v117 = (void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v97 = v2 + 56;
    uint64_t v124 = v8 + 32;
    uint64_t v49 = *(void *)(v48 + 16);
    swift_retain();
    char v105 = v8 + 40;
    uint64_t v50 = -v42;
    float v51 = 0.0;
    uint64_t v119 = v42;
    uint64_t v121 = v3;
    uint64_t v100 = -v42;
    uint64_t v98 = v48;
    while (1)
    {
      uint64_t v103 = v49;
      uint64_t v101 = *(void *)(v48 + 32);
      swift_retain();
      sub_1B6C5CF1C();
      swift_release();
      swift_bridgeObjectRetain();
      char v52 = 0;
      uint64_t v53 = 0;
      while (1)
      {
LABEL_43:
        uint64_t v54 = (float *)&v105[12 * v53++];
        while (v51 >= *v54)
        {
          v54 += 3;
          ++v53;
          if (v50 + v53 == 1) {
            goto LABEL_69;
          }
        }
        int v114 = *((_DWORD *)v54 - 2);
        int v112 = *((_DWORD *)v54 - 1);
        uint64_t v55 = *(void *)(v3 + v107);
        uint64_t v110 = swift_retain();
        if (!v110) {
          goto LABEL_68;
        }
        unint64_t v56 = (void *)v95(&thread_worker_index);
        uint64_t v57 = *(void *)(v55 + 120);
        if (v57 > 0) {
          break;
        }
        swift_release();
LABEL_68:
        char v52 = 1;
        if (v42 == v53) {
          goto LABEL_69;
        }
      }
      uint64_t v58 = *(void *)(*(void *)(*(void *)(v110 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                                  + 8 * *v56
                                  + 8)
                      + 32);
      uint64_t v59 = *(void *)(v55 + 112);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v60 = qword_1E9DD2FE8;
      unint64_t v61 = v57 + 1;
      uint64_t v62 = (uint64_t *)(v59 + 96 * v57 - 8);
      while (*v62 < v60)
      {
        unint64_t v63 = (void (*)(uint64_t, uint64_t))v62[3];
        BOOL v64 = *((_DWORD *)v62 - 12) == v114 && *((_DWORD *)v62 - 11) == v112;
        if (v64
          || *(v62 - 2)
          && ((uint64_t ObjCClassFromObject = swift_getObjCClassFromObject(),
               ObjCClassFromObject == type metadata accessor for ParticleSubSpawnAddStateSystem())
           || ObjCClassFromObject == type metadata accessor for ParticleSubSpawnSystem()
           || ObjCClassFromObject == v102
           || ObjCClassFromObject == type metadata accessor for TransientPushSystem()
           || ObjCClassFromObject == type metadata accessor for RendererPostUpdateSystem()))
        {
          swift_unknownObjectRetain();
          swift_retain();
          ecs_stack_allocator_push_snapshot(v58);
          v63(v110, 3);
          ecs_stack_allocator_pop_snapshot(v58);
          swift_release();
          swift_unknownObjectRelease();
          uint64_t v60 = qword_1E9DD2FE8;
        }
        --v61;
        v62 -= 12;
        if (v61 <= 1)
        {
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v42 = v119;
          uint64_t v3 = v121;
          uint64_t v50 = v100;
          goto LABEL_68;
        }
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      char v52 = 1;
      uint64_t v42 = v119;
      uint64_t v3 = v121;
      uint64_t v50 = v100;
      if (v119 != v53) {
        goto LABEL_43;
      }
LABEL_69:
      char v115 = v52;
      for (uint64_t i = 0; i != v42; ++i)
      {
        uint64_t v67 = &v124[12 * i];
        if (v51 < *((float *)v67 + 2))
        {
          int v68 = *(_DWORD *)v67;
          int v69 = *((_DWORD *)v67 + 1);
          if (qword_1EB97DC28 != -1) {
            swift_once();
          }
          uint64_t v70 = qword_1EB997A18;
          sub_1B62E0A98(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
          *(void *)(inited + 32) = &type metadata for Particle;
          *(void *)(inited + 40) = &off_1F0FA6CF0;
          uint64_t v142 = v70;
          int v143 = 0;
          char v144 = 2;
          uint64_t v145 = 0;
          char v146 = 2;
          uint64_t v147 = 0;
          swift_retain();
          sub_1B62F776C(inited, 1, (uint64_t)v125);
          swift_setDeallocating();
          swift_release();
          sub_1B62C5F6C(0, (unint64_t *)&qword_1EB980B60, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent, MEMORY[0x1E4FBBE00]);
          uint64_t v72 = swift_initStackObject();
          *(_OWORD *)(v72 + 16) = xmmword_1B6E77050;
          *(void *)(v72 + 56) = &type metadata for EmitterReference;
          *(void *)(v72 + 64) = &off_1F0F6BD40;
          *(_DWORD *)(v72 + 32) = v68;
          *(_DWORD *)(v72 + 36) = v69;
          sub_1B62F7044(v72, (uint64_t)v126);
          swift_setDeallocating();
          sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
          swift_arrayDestroy();
          sub_1B62CA064((uint64_t)v125);
          uint64_t v136 = v126[0];
          int v137 = 0;
          char v138 = 2;
          uint64_t v139 = v126[2];
          char v140 = v127;
          uint64_t v141 = v128;
          uint64_t v3 = v121;
          sub_1B68E78D4(&v136);
          sub_1B62CA064((uint64_t)v126);
          if (v68 == -1 && !v69
            || v68 < 0
            || v117[1] <= v68
            || (v73 = *v117 + 12 * v68, int v74 = *(__int16 *)(v73 + 4), v69 != -1) && *(_DWORD *)(v73 + 8) != v69
            || (uint64_t v75 = *(void *)(*(void *)(v121 + 136) + 8 * *(int *)(*v117 + 12 * v68) + 32),
                uint64_t v76 = *(void *)(v75 + 48),
                (uint64_t v77 = *(void *)(v76 + 16)) == 0))
          {
LABEL_94:
            sub_1B6E328C8();
            sub_1B6E31948();
            sub_1B681F698();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            sub_1B6E31948();
            while (1)
            {
LABEL_95:
              sub_1B6E32BE8();
              __break(1u);
            }
          }
          uint64_t v78 = (void *)(v76 + 56);
          while ((ValueMetadata *)*(v78 - 3) != &type metadata for EmitterRuntime)
          {
            v78 += 5;
            if (!--v77) {
              goto LABEL_94;
            }
          }
          *(void *)(*(void *)(v75 + 128) + *v78 + 656 * v74 + 112) = 0;
          uint64_t v42 = v119;
        }
      }
      swift_bridgeObjectRelease();
      long long v79 = *(_OWORD *)(v97 + 16);
      v134[0] = *(_OWORD *)v97;
      v134[1] = v79;
      uint64_t v135 = *(void *)(v97 + 32);
      sub_1B68E78D4((uint64_t *)v134);
      uint64_t v48 = v98;
      ++*(void *)(v99 + 8);
      float v80 = *(float *)(v99 + 64);
      uint64_t v49 = *(void *)(v98 + 16);
      if (!v103)
      {
        uint64_t v50 = v100;
        char v81 = v115;
        if (v49) {
          goto LABEL_41;
        }
LABEL_40:
        *(void *)(v98 + 32) = v101;
        goto LABEL_41;
      }
      uint64_t v50 = v100;
      char v81 = v115;
      if (v49 && v103 == v49) {
        goto LABEL_40;
      }
LABEL_41:
      float v51 = v51 + v80;
      if ((v81 & 1) == 0)
      {
        swift_release();
        *(void *)uint64_t v99 = v94;
        *(void *)(v99 + 8) = v93;
        *(void *)(v99 + 16) = v92;
        *(void *)(v99 + 24) = v91;
        *(void *)(v99 + 32) = v43;
        *(void *)(v99 + 40) = v44;
        *(void *)(v99 + 48) = v45;
        *(void *)(v99 + 56) = v46;
        *(void *)(v99 + 64) = v47;
        *(void *)(v99 + 72) = v90;
        *(unsigned char *)(v99 + 80) = v89;
        *(void *)(v99 + 88) = v88;
        *(unsigned char *)(v99 + 96) = v87;
        *(unsigned char *)(v99 + 97) = v86;
        *(unsigned char *)(v99 + 98) = v85;
        *(unsigned char *)(v99 + 99) = v84;
        *(unsigned char *)(v99 + 100) = v83;
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B635BD50(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    uint64_t v2 = (void *)result;
    sub_1B62CA210(v1 + 624, (uint64_t)v7, (unint64_t *)&unk_1EB9852B0);
    sub_1B62CA210((uint64_t)v7, (uint64_t)v8, (unint64_t *)&unk_1EB9852B0);
    uint64_t v3 = sub_1B6388C10(v8);
    if (v3 == 1)
    {
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
    }
    else
    {
      v15[0] = v9;
      v15[1] = v10;
      v15[2] = v11;
      v15[3] = v12;
      v15[4] = v13;
      v15[5] = v14;
      unint64_t v5 = v2[23];
      v2[23] = v5 + 1;
      MEMORY[0x1F4188790](v3, v4);
      double v6 = (void *)v2[22];
      swift_retain();
      swift_retain();
      sub_1B636E6CC((uint64_t)&type metadata for MainCullGroup, (uint64_t)&off_1F0F5FDB0, v6, (void (*)(uint64_t))sub_1B6372CF0);
      swift_release();
      sub_1B635BF08(v2, v15, v5);
      return swift_release();
    }
  }
  return result;
}

void *sub_1B635BF08(void *result, float32x4_t *a2, unint64_t a3)
{
  uint64_t v59 = (uint64_t)result;
  uint64_t v3 = *(void *)((char *)result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v3) {
    return result;
  }
  sub_1B62CA210(v3 + 624, (uint64_t)v69, (unint64_t *)&unk_1EB9852B0);
  sub_1B62CA210((uint64_t)v69, (uint64_t)v70, (unint64_t *)&unk_1EB9852B0);
  if (sub_1B6388C10(v70) == 1)
  {
    uint64_t result = (void *)sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  uint64_t v4 = v70[1];
  uint64_t ObjectType = swift_getObjectType();
  double v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 144);
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v7 = v6(ObjectType, v4);
  swift_unknownObjectRelease();
  if (qword_1EB97E3B8 != -1) {
    swift_once();
  }
  v82[0] = xmmword_1EB997938;
  v82[1] = unk_1EB997948;
  uint64_t v83 = qword_1EB997958;
  sub_1B62C9DA8(v59, (uint64_t)v82, v7 & 0xFFFFFFFFFFLL, v71);
  sub_1B62CA210((uint64_t)v71, (uint64_t)v72, (unint64_t *)&qword_1EB97DC50);
  int v68 = (unsigned __int16 *)v72[0];
  if (!v72[0]) {
    return (void *)swift_release();
  }
  uint64_t v56 = v76;
  if (v76 <= 0 || (uint64_t v55 = v73) == 0)
  {
    swift_release();
    return sub_1B632F1C4(v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v54 = v72[5];
  uint64_t v8 = v75;
  uint64_t v9 = v75[4];
  uint64_t v53 = v74;
  char v66 = *(unsigned char *)(v74 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  sub_1B632F1C4(v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v10 = 0;
  uint64_t v52 = v9;
  while (2)
  {
    uint64_t v65 = v10;
    float32x4_t v11 = (unsigned int *)(v54 + 48 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = v11[2];
    uint64_t v15 = *((void *)v11 + 2);
    uint64_t v16 = *((void *)v11 + 3);
    uint64_t v17 = *((void *)v11 + 4);
    uint64_t v18 = *((void *)v11 + 5);
    if (v66)
    {
      uint64_t v19 = *(os_unfair_lock_s **)(v18 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v19);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v9);
    uint64_t v63 = v8[7];
    uint64_t v64 = v8[6];
    uint64_t v61 = v8[9];
    uint64_t v62 = v8[8];
    uint64_t v60 = v8[10];
    uint64_t v20 = v8[4];
    uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v18 + 40) + 16) + 32) + 16) + 1;
    uint64_t v67 = v18;
    swift_retain();
    uint64_t v8[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
    v8[7] = v21;
    v8[9] = 0;
    v8[10] = 0;
    v8[8] = 0;
    swift_release();
    v77[0] = v53;
    v77[1] = v18;
    v77[2] = v8;
    v77[3] = v14;
    v77[4] = (v13 - v12 + v14);
    v77[5] = v56;
    v77[6] = v12;
    void v77[7] = v13;
    v77[8] = 0;
    v77[9] = 0;
    char v78 = 1;
    uint64_t v79 = v15;
    uint64_t v80 = v16;
    uint64_t v81 = v17;
    sub_1B635C554((uint64_t)v77, a2, v59, a3);
    unint64_t v22 = v8[6];
    uint64_t v23 = v8[8];
    if (!v23)
    {
      uint64_t v49 = v8[7];
      uint64_t v50 = (void *)v8[4];
      uint64_t v51 = v65;
      goto LABEL_51;
    }
    for (uint64_t i = 0; i != v23; ++i)
    {
      uint64_t v26 = (uint64_t *)(v22 + 48 * i);
      uint64_t v27 = *v26;
      int v28 = (void (*)(uint64_t))v26[4];
      uint64_t v29 = v8[9];
      if (v29) {
        BOOL v30 = v27 == v29;
      }
      else {
        BOOL v30 = 0;
      }
      if (v30 || !v68[11]) {
        goto LABEL_15;
      }
      unint64_t v31 = v68[9];
      float v32 = (void *)((char *)v68 + v68[8] + 41);
      uint64_t v33 = v26[2];
      uint64_t v34 = v32;
      unint64_t v35 = v31 >> 4;
      uint64_t v36 = (char *)v68 + 41;
      if (v31 >= 0x10)
      {
        while (*v34 != v27)
        {
          ++v36;
          v34 += 2;
          if (!--v35) {
            goto LABEL_30;
          }
        }
        unsigned int v37 = v36[v68[10]];
        BOOL v38 = v37 > 5;
        int v39 = (1 << v37) & 0x23;
        if (v38 || v39 == 0)
        {
LABEL_15:
          uint64_t v25 = swift_retain();
          v28(v25);
          swift_release();
          continue;
        }
      }
LABEL_30:
      if (swift_conformsToProtocol2()) {
        uint64_t v41 = v33;
      }
      else {
        uint64_t v41 = 0;
      }
      if (v41)
      {
        if (v31 < 0x10) {
          goto LABEL_15;
        }
        uint64_t v42 = v32;
        unint64_t v43 = v31 >> 4;
        uint64_t v44 = (char *)v68 + 41;
        while (*v42 != v41)
        {
          ++v44;
          v42 += 2;
          if (!--v43) {
            goto LABEL_43;
          }
        }
        unsigned int v45 = v44[v68[10]];
        BOOL v38 = v45 > 5;
        int v46 = (1 << v45) & 0x23;
        if (v38 || v46 == 0) {
          goto LABEL_15;
        }
LABEL_43:
        uint64_t v48 = 16 * (v31 >> 4);
        while (*v32 != v41)
        {
          v32 += 2;
          v48 -= 16;
          if (!v48) {
            goto LABEL_15;
          }
        }
      }
    }
    uint64_t v49 = v8[7];
    unint64_t v22 = v8[6];
    uint64_t v50 = (void *)v8[4];
    if ((uint64_t)v8[8] >= 1) {
      swift_arrayDestroy();
    }
    uint64_t v51 = v65;
    uint64_t v18 = v67;
LABEL_51:
    ecs_stack_allocator_deallocate(v50, v22, 48 * v49);
    uint64_t v8[6] = v64;
    v8[7] = v63;
    v8[8] = v62;
    v8[9] = v61;
    v8[10] = v60;
    sub_1B634507C((char *)v18);
    uint64_t v9 = v52;
    ecs_stack_allocator_pop_snapshot(v52);
    if (v66)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
    }
    swift_release();
    uint64_t v10 = v51 + 1;
    if (v10 != v55) {
      continue;
    }
    break;
  }
  sub_1B632F1C4(v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  swift_release();
  sub_1B632F1C4(v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B632F1C4(v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

uint64_t sub_1B635C554(uint64_t a1, float32x4_t *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = *(float32x4_t **)(a1 + 8);
  if (v8[19].i32[0] == v8[7].i32[1])
  {
    uint64_t result = sub_1B635C88C(v8[17], v8[18]);
    if (!(_BYTE)result)
    {
      uint64_t v61 = *(os_unfair_lock_s **)(a3 + 128);
      swift_retain();
      os_unfair_lock_lock(v61);
      int v62 = v8[11].i32[3];
      uint64_t v63 = *(void **)(a3 + 96);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(a3 + 96) = v63;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        *(void *)(a3 + 96) = sub_1B6C16694(v63);
      }
      sub_1B68E6B68(v62, 0, 0, a4);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3 + 128));
      goto LABEL_32;
    }
    if (result == 1) {
      return result;
    }
  }
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  unint64_t v12 = a4;
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = (v11 + 63) >> 6;
  if (v14 <= 1) {
    uint64_t v14 = 1;
  }
  uint64_t v15 = 8 * v14;
  swift_retain();
  swift_retain();
  uint64_t v16 = (int8x16_t *)sub_1B62FC4C8(v15, 8);
  bzero(v16, v15);
  swift_release();
  uint64_t v17 = sub_1B62C9024((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, *(uint64_t **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), v13);
  if (v10 != v11)
  {
    float32x4_t v18 = *a2;
    float32x4_t v19 = a2[1];
    float32x4_t v20 = a2[2];
    float32x4_t v21 = a2[3];
    float32x4_t v22 = a2[4];
    float32x4_t v23 = a2[5];
    float32x4_t v24 = vabsq_f32(*a2);
    float32x4_t v25 = vabsq_f32(v19);
    float32x4_t v26 = vabsq_f32(v20);
    float32x4_t v27 = vabsq_f32(v21);
    float32x4_t v28 = vabsq_f32(v22);
    float32x4_t v29 = vabsq_f32(v23);
    BOOL v30 = (float32x4_t *)(v17 + 32 * v10 + 16);
    do
    {
      float32x4_t v32 = v30[-1];
      float32x4_t v31 = *v30;
      int8x16_t v33 = (int8x16_t)vmulq_f32(v18, v32);
      int8x16_t v34 = (int8x16_t)vmulq_f32(*v30, v24);
      BOOL v39 = vaddv_f32(vadd_f32(*(float32x2_t *)v33.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v33, v33, 8uLL))) <= (float)-vaddv_f32(vadd_f32(*(float32x2_t *)v34.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v34, v34, 8uLL)));
      int8x16_t v35 = (int8x16_t)vmulq_f32(v19, v32);
      float v36 = vaddv_f32(vadd_f32(*(float32x2_t *)v35.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v35, v35, 8uLL)));
      int8x16_t v37 = (int8x16_t)vmulq_f32(*v30, v25);
      float v38 = -vaddv_f32(vadd_f32(*(float32x2_t *)v37.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v37, v37, 8uLL)));
      BOOL v39 = v39 || v36 <= v38;
      int8x16_t v40 = (int8x16_t)vmulq_f32(v20, v32);
      float v41 = vaddv_f32(vadd_f32(*(float32x2_t *)v40.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v40, v40, 8uLL)));
      int8x16_t v42 = (int8x16_t)vmulq_f32(v31, v26);
      float v43 = -vaddv_f32(vadd_f32(*(float32x2_t *)v42.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v42, v42, 8uLL)));
      BOOL v44 = v39 || v41 <= v43;
      int8x16_t v45 = (int8x16_t)vmulq_f32(v21, v32);
      float v46 = vaddv_f32(vadd_f32(*(float32x2_t *)v45.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL)));
      int8x16_t v47 = (int8x16_t)vmulq_f32(v31, v27);
      float v48 = -vaddv_f32(vadd_f32(*(float32x2_t *)v47.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)));
      BOOL v49 = v44 || v46 <= v48;
      int8x16_t v50 = (int8x16_t)vmulq_f32(v22, v32);
      float v51 = vaddv_f32(vadd_f32(*(float32x2_t *)v50.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL)));
      int8x16_t v52 = (int8x16_t)vmulq_f32(v31, v28);
      float v53 = -vaddv_f32(vadd_f32(*(float32x2_t *)v52.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL)));
      BOOL v54 = v49 || v51 <= v53;
      uint64_t v55 = v10 >> 6;
      if (v54)
      {
        uint64_t v56 = 1 << v10;
      }
      else
      {
        int8x16_t v59 = (int8x16_t)vmulq_f32(v23, v32);
        int8x16_t v60 = (int8x16_t)vmulq_f32(v31, v29);
        uint64_t v56 = 1 << v10;
        if (vaddv_f32(vadd_f32(*(float32x2_t *)v59.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL))) > (float)-vaddv_f32(vadd_f32(*(float32x2_t *)v60.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL))))
        {
          uint64_t v57 = v55;
          uint64_t v58 = v16->i64[v57] | v56;
          goto LABEL_25;
        }
      }
      uint64_t v57 = v55;
      uint64_t v58 = v16->i64[v57] & ~v56;
LABEL_25:
      v16->i64[v57] = v58;
      ++v10;
      v30 += 2;
    }
    while (v11 != v10);
  }
  sub_1B69E1FA8((uint64_t)v8, v16, v11, v12);
LABEL_32:

  return swift_release();
}

uint64_t sub_1B635C88C(float32x4_t a1, float32x4_t a2)
{
  float32x4_t v3 = v2[1];
  float32x4_t v4 = v2[2];
  float32x4_t v5 = v2[3];
  int32x4_t v6 = (int32x4_t)vmulq_f32(*v2, a1);
  int32x4_t v7 = (int32x4_t)vmulq_f32(v3, a1);
  int32x4_t v8 = (int32x4_t)vmulq_f32(v4, a1);
  int32x4_t v9 = (int32x4_t)vmulq_f32(v5, a1);
  int32x4_t v10 = vzip1q_s32(v6, v8);
  int32x4_t v11 = vzip2q_s32(v6, v8);
  int32x4_t v12 = vzip1q_s32(v7, v9);
  int32x4_t v13 = vzip2q_s32(v7, v9);
  float32x4_t v14 = vaddq_f32((float32x4_t)vzip2q_s32(v11, v13), vaddq_f32((float32x4_t)vzip1q_s32(v11, v13), vaddq_f32((float32x4_t)vzip1q_s32(v10, v12), (float32x4_t)vzip2q_s32(v10, v12))));
  int32x4_t v15 = (int32x4_t)vmulq_f32(vabsq_f32(*v2), a2);
  int32x4_t v16 = (int32x4_t)vmulq_f32(vabsq_f32(v3), a2);
  int32x4_t v17 = (int32x4_t)vmulq_f32(vabsq_f32(v4), a2);
  int32x4_t v18 = (int32x4_t)vmulq_f32(vabsq_f32(v5), a2);
  int32x4_t v19 = vzip1q_s32(v15, v17);
  int32x4_t v20 = vzip2q_s32(v15, v17);
  int32x4_t v21 = vzip1q_s32(v16, v18);
  int32x4_t v22 = vzip2q_s32(v16, v18);
  int8x16_t v23 = (int8x16_t)vmaxnmq_f32(vsubq_f32(vabsq_f32(v14), vaddq_f32((float32x4_t)vzip2q_s32(v20, v22), vaddq_f32((float32x4_t)vzip1q_s32(v20, v22), vaddq_f32((float32x4_t)vzip1q_s32(v19, v21), (float32x4_t)vzip2q_s32(v19, v21))))), (float32x4_t)0);
  v22.i64[0] = 0x8000000080000000;
  v22.i64[1] = 0x8000000080000000;
  float32x4_t v24 = (float32x4_t)vbslq_s8((int8x16_t)v22, (int8x16_t)v14, v23);
  if (vmaxv_u16((uint16x4_t)vmovn_s32(vcltzq_f32(v24)))) {
    return 1;
  }
  float32x4_t v27 = v2[4];
  float32x4_t v26 = v2[5];
  int32x4_t v28 = (int32x4_t)vmulq_f32(v27, a1);
  int32x4_t v29 = (int32x4_t)vmulq_f32(v26, a1);
  int8x16_t v30 = (int8x16_t)vzip1q_s32(v28, v29);
  int8x16_t v31 = (int8x16_t)vzip2q_s32(v28, v29);
  *(float32x2_t *)v31.i8 = vadd_f32((float32x2_t)*(_OWORD *)&vextq_s8(v31, v31, 8uLL), vadd_f32(*(float32x2_t *)v31.i8, vadd_f32(*(float32x2_t *)v30.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v30, v30, 8uLL))));
  int32x4_t v32 = (int32x4_t)vmulq_f32(vabsq_f32(v27), a2);
  int32x4_t v33 = (int32x4_t)vmulq_f32(vabsq_f32(v26), a2);
  int8x16_t v34 = (int8x16_t)vzip1q_s32(v32, v33);
  int8x16_t v35 = (int8x16_t)vzip2q_s32(v32, v33);
  float32x2_t v36 = (float32x2_t)vbsl_s8((int8x8_t)0x8000000080000000, *(int8x8_t *)v31.i8, (int8x8_t)vmaxnm_f32(vsub_f32(vabs_f32(*(float32x2_t *)v31.i8), vadd_f32((float32x2_t)*(_OWORD *)&vextq_s8(v35, v35, 8uLL), vadd_f32(*(float32x2_t *)v35.i8, vadd_f32(*(float32x2_t *)v34.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v34, v34, 8uLL))))), 0));
  int32x2_t v37 = vcltz_f32(v36);
  __int32 v38 = v37.i32[1];
  if (v37.i32[1] >= v37.i32[0]) {
    __int32 v38 = v37.i32[0];
  }
  if (v38 < 0) {
    return 1;
  }
  *(float32x2_t *)v39.f32 = vmul_f32(*(float32x2_t *)v24.f32, v36);
  v39.i64[1] = vextq_s8((int8x16_t)v24, (int8x16_t)v24, 8uLL).u64[0];
  return 2 * (vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_f32(v39))) & 1u);
}

uint64_t sub_1B635C9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a3 + 48));
  uint64_t v6 = *(void *)(a3 + 128);
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B62B2CE0(a1, a2);
    if (v8)
    {
      int32x4_t v9 = *(void **)(*(void *)(v6 + 56) + 8 * v7);
      swift_unknownObjectRetain();
LABEL_7:
      swift_bridgeObjectRelease();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3 + 48));
      return (uint64_t)v9;
    }
    swift_bridgeObjectRelease();
  }
  v15[1] = 0;
  v15[2] = 0;
  v15[0] = 2;
  char v16 = -2;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v17 = 0;
  __int16 v20 = 768;
  uint64_t v10 = sub_1B6802978(0x46445242584656, 0xE700000000000000, (uint64_t)v15);
  if (v10)
  {
    int32x4_t v9 = (void *)v10;
    int32x4_t v11 = (void *)sub_1B6E31768();
    objc_msgSend(v9, sel_setLabel_, v11);

    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *(void *)(a3 + 128);
    *(void *)(a3 + 128) = 0x8000000000000000;
    sub_1B6331384((uint64_t)v9, a1, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(a3 + 128) = v14;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B635CBD4(uint64_t result)
{
  uint64_t v251 = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)(result + OBJC_IVAR____TtC3VFX13EntityManager_isVFX2)) {
    return result;
  }
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v2) {
    return result;
  }
  sub_1B62EAD94(v2 + 624, (uint64_t)v235, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
  sub_1B62EAD94((uint64_t)v235, (uint64_t)v236, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
  if (sub_1B6388C10(v236) == 1) {
    goto LABEL_134;
  }
  uint64_t v3 = v236[1];
  uint64_t ObjectType = swift_getObjectType();
  float32x4_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 144);
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v6 = v5(ObjectType, v3);
  swift_unknownObjectRelease();
  if (qword_1EB97E2F0 != -1) {
    swift_once();
  }
  v215[0] = xmmword_1EB997A68;
  v215[1] = unk_1EB997A78;
  uint64_t v216 = qword_1EB997A88;
  sub_1B62C9DA8(v1, (uint64_t)v215, v6 & 0xFFFFFFFFFFLL, v237);
  sub_1B62EAD94((uint64_t)v237, (uint64_t)v239, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v239[0]) {
    return swift_release();
  }
  uint64_t v166 = v2 + 624;
  long long v210 = v239[0];
  long long v211 = v239[1];
  uint64_t v173 = v241;
  uint64_t v212 = v240;
  uint64_t v174 = v242;
  uint64_t v7 = v243;
  int v182 = v244;
  uint64_t v8 = v245;
  sub_1B635FCE8(v1);
  int32x4_t v9 = *(void **)(v2 + 392);
  if (v9)
  {
    id v10 = v9;
    sub_1B638963C((uint64_t)&v191);
    float32x4_t v183 = v192;
    *(float32x4_t *)float32x4_t v186 = v191;
    float32x4_t v178 = v194;
    float32x4_t v180 = v193;
    long long v176 = v195;
    uint64_t v11 = v196;

    long long v13 = v176;
    float32x4_t v12 = v178;
    float32x4_t v14 = v180;
    float32x4_t v16 = v183;
    float32x4_t v15 = *(float32x4_t *)v186;
  }
  else
  {
    sub_1B6383B70(&v191);
    float32x4_t v15 = v191;
    float32x4_t v16 = v192;
    float32x4_t v14 = v193;
    float32x4_t v12 = v194;
    long long v13 = v195;
    uint64_t v11 = v196;
  }
  float32x4_t v204 = v15;
  float32x4_t v205 = v16;
  float32x4_t v206 = v14;
  float32x4_t v207 = v12;
  long long v208 = v13;
  uint64_t v209 = v11;
  char v167 = *(unsigned char *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare);
  long long v169 = (void *)sub_1B6388ED8(0);
  uint64_t v17 = *(void *)(**(void **)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues) + 32);
  swift_unknownObjectRetain();
  ecs_stack_allocator_push_snapshot(v17);
  unint64_t v187 = (unsigned int *)ecs_stack_allocator_allocate(v17, 12 * v8, 4);
  long long v233 = v187;
  uint64_t v234 = 12 * v8 / 12;
  uint64_t v170 = v2;
  uint64_t v171 = v1;
  uint64_t v168 = v17;
  if (v8 >= 1 && v174)
  {
    uint64_t v18 = v182[4];
    int v181 = *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v172 = v18;
    while (1)
    {
      uint64_t v179 = v20;
      uint64_t v177 = v19;
      int32x4_t v21 = (unsigned int *)(v173 + 48 * v19);
      uint64_t v22 = *v21;
      uint64_t v23 = v21[1];
      uint64_t v184 = v21[2];
      float32x4_t v24 = (uint64_t *)*((void *)v21 + 2);
      uint64_t v175 = *((void *)v21 + 3);
      uint64_t v25 = *((void *)v21 + 4);
      uint64_t v26 = *((void *)v21 + 5);
      if (v181)
      {
        float32x4_t v27 = *(os_unfair_lock_s **)(v26 + 376);
        swift_retain();
        os_unfair_lock_lock(v27);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v26 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v18);
      sub_1B62EAD94((uint64_t)(v182 + 6), (uint64_t)v250, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v28 = v182[4];
      uint64_t v29 = *(void *)(*(void *)(*(void *)(*(void *)(v26 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v182[6] = ecs_stack_allocator_allocate(v28, 48 * v29, 8);
      v182[7] = v29;
      v182[9] = 0;
      v182[10] = 0;
      uint64_t v182[8] = 0;
      swift_release();
      sub_1B62C9024((uint64_t)&type metadata for Skybox, (uint64_t)&off_1F0FA1BB0, v24, v175, v25, (uint64_t)v182);
      if (v24)
      {
        if (v25)
        {
          uint64_t v30 = 0;
          do
          {
            uint64_t v31 = v24[v30];
            uint64_t v32 = *(void *)(v26 + 48);
            uint64_t v33 = *(void *)(v32 + 16);
            if (v33)
            {
              int8x16_t v34 = (void *)(v32 + 56);
              while ((ValueMetadata *)*(v34 - 3) != &type metadata for RenderingOrder)
              {
                v34 += 5;
                if (!--v33) {
                  goto LABEL_25;
                }
              }
              unsigned int v35 = *(_DWORD *)(*(void *)(v26 + 128) + *v34 + 4 * v31);
            }
            else
            {
LABEL_25:
              unsigned int v35 = 0;
            }
            uint64_t v36 = swift_retain();
            if (*(unsigned char *)(v26 + 184)) {
              goto LABEL_134;
            }
            unsigned int v37 = *(_DWORD *)(*(void *)(v26 + 168) + 4 * v31);
            unsigned int v38 = *(_DWORD *)(*(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v37 + 8);
            swift_release();
            float32x4_t v39 = &v187[3 * v30 + 3 * v184];
            *float32x4_t v39 = v37;
            v39[1] = v38;
            v39[2] = v35;
          }
          while (++v30 != v25);
        }
      }
      else if (v22 != v23)
      {
        uint64_t v40 = v184 - v22;
        while (1)
        {
          uint64_t v41 = *(void *)(v26 + 48);
          uint64_t v42 = *(void *)(v41 + 16);
          if (v42)
          {
            float v43 = (void *)(v41 + 56);
            while ((ValueMetadata *)*(v43 - 3) != &type metadata for RenderingOrder)
            {
              v43 += 5;
              if (!--v42) {
                goto LABEL_36;
              }
            }
            unsigned int v44 = *(_DWORD *)(*(void *)(v26 + 128) + *v43 + 4 * v22);
          }
          else
          {
LABEL_36:
            unsigned int v44 = 0;
          }
          uint64_t v45 = swift_retain();
          if (*(unsigned char *)(v26 + 184)) {
            break;
          }
          unsigned int v46 = *(_DWORD *)(*(void *)(v26 + 168) + 4 * v22);
          unsigned int v47 = *(_DWORD *)(*(void *)(v45 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v46 + 8);
          swift_release();
          float v48 = &v187[3 * v22 + 3 * v40];
          *float v48 = v46;
          v48[1] = v47;
          _OWORD v48[2] = v44;
          if (++v22 == v23) {
            goto LABEL_40;
          }
        }
        while (1)
        {
LABEL_134:
          sub_1B6E32BE8();
          __break(1u);
        }
      }
LABEL_40:
      v213[0] = v210;
      v213[1] = v211;
      uint64_t v214 = v212;
      uint64_t v20 = v179;
      sub_1B6345178(v182, (unsigned __int16 **)v213, (uint64_t)v250);
      sub_1B634507C((char *)v26);
      uint64_t v18 = v172;
      ecs_stack_allocator_pop_snapshot(v172);
      if (v181)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 376));
      }
      swift_release();
      uint64_t v19 = v177 + 1;
      if (v177 + 1 == v174)
      {
        sub_1B632F170(v237);
        break;
      }
    }
  }
  sub_1B635E2D0(&v233);
  BOOL v49 = v233;
  if (!v233 || !v234) {
    goto LABEL_131;
  }
  int8x16_t v50 = (int *)&v233[3 * v234];
  float v51 = (void *)(v171 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  __asm
  {
    FMOV            V10.2S, #1.0
    FMOV            V0.4S, #1.0
  }
  float32x4_t v160 = _Q0;
  _Q0.i32[1] = 0;
  while (1)
  {
    uint64_t v57 = v49[1];
    uint64_t v58 = (int)*v49;
    _ZF = v58 == -1 && v57 == 0;
    if (_ZF || (v58 & 0x80000000) != 0 || v51[1] <= v58) {
      goto LABEL_49;
    }
    uint64_t v60 = *v51 + 12 * (int)v58;
    if (v57 != -1 && *(_DWORD *)(v60 + 8) != v57) {
      goto LABEL_49;
    }
    uint64_t v62 = *(void *)(*(void *)(v171 + 136) + 8 * *(int *)(*v51 + 12 * (int)v58) + 32);
    uint64_t v63 = *(void *)(v62 + 48);
    uint64_t v64 = *(void *)(v63 + 16);
    if (!v64) {
      goto LABEL_49;
    }
    uint64_t v65 = *v49;
    uint64_t v66 = *(__int16 *)(v60 + 4);
    uint64_t v67 = (void *)(v63 + 56);
    while ((ValueMetadata *)*(v67 - 3) != &type metadata for Skybox)
    {
      v67 += 5;
      if (!--v64) {
        goto LABEL_49;
      }
    }
    int v68 = (float *)(*(void *)(v62 + 128) + *v67 + 32 * v66);
    uint64_t v69 = *(unsigned int *)v68;
    uint64_t v70 = *((unsigned int *)v68 + 1);
    if (v69 == -1 && v70 == 0) {
      goto LABEL_49;
    }
    float v72 = v68[2];
    _Q0.f32[0] = v68[3];
    double v164 = *(double *)_Q0.i64;
    uint64_t v73 = *((int *)v68 + 4);
    int v74 = *((unsigned __int8 *)v68 + 20);
    uint64_t v157 = *((unsigned __int8 *)v68 + 28);
    float32x4_t v188 = (void *)sub_1B62EBE70(v69 | (v70 << 32), v223);
    if (!v188)
    {
      uint64_t v75 = *(void *)(v170 + 240);
      swift_retain();
      float32x4_t v188 = sub_1B6BCB178(0x42746C7561666544, 0xEF7865546B63616CLL, v75, v170);
      swift_release();
    }
    if (v72 < 0.0) {
      float v76 = 0.0;
    }
    else {
      float v76 = v72;
    }
    long long v159 = LODWORD(v76);
    long long v190 = LODWORD(v76);
    unint64_t v77 = v65 | (v57 << 32);
    uint64_t v78 = sub_1B6360938(v77);
    if ((v79 & 1) == 0
      && *(float *)&v164 > 0.0
      && (unint64_t v80 = v78, objc_msgSend(v188, sel_textureType, v164) == (id)5)
      && (uint64_t v185 = (void *)sub_1B62EBE70(v80, v223)) != 0)
    {
      long long v81 = v159;
      DWORD1(v81) = LODWORD(v164);
      long long v159 = v81;
      long long v190 = v81;
    }
    else
    {
      uint64_t v185 = (void *)swift_unknownObjectRetain();
    }
    uint64_t v82 = sub_1B6360920(v77);
    uint64_t v155 = v83;
    float32x2_t v156 = (float32x2_t)v82;
    char v162 = v84;
    v154.i64[0] = sub_1B635FE78(v77, v171);
    uint64_t v86 = v85;
    char v158 = v87;
    if (v74) {
      uint64_t v88 = qword_1B6E8AFE0[v73];
    }
    else {
      uint64_t v88 = 0;
    }
    uint64_t v89 = *(unsigned __int8 *)(v170 + 600);
    if (*(unsigned char *)(v170 + 585)) {
      BOOL v90 = sub_1B6368160(*(void *)(v170 + 408)) == 4;
    }
    else {
      BOOL v90 = 1;
    }
    BOOL v165 = v90;
    v154.i64[1] = v86;
    uint64_t v163 = v88;
    if (objc_msgSend(v185, sel_textureType) == (id)5)
    {
      if (v162) {
        unint64_t v92 = 0xD000000000000012;
      }
      else {
        unint64_t v92 = 0xD00000000000001ELL;
      }
      unint64_t v93 = 0x80000001B6F39340;
      if ((v162 & 1) == 0) {
        unint64_t v93 = 0x80000001B6F39380;
      }
      unint64_t v94 = 0xD000000000000014;
      unint64_t v95 = v93;
      unint64_t v96 = 0x80000001B6F39360;
      *(float32x2_t *)&long long v91 = _D10;
      long long v161 = v91;
      goto LABEL_111;
    }
    if (objc_msgSend(v185, sel_textureType) == (id)2)
    {
      sub_1B62EAD94(v166, (uint64_t)&v217, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
      sub_1B62EAD94((uint64_t)&v217, (uint64_t)v223, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
      if (sub_1B6388C10((uint64_t *)v223) == 1) {
        goto LABEL_134;
      }
      uint64_t v97 = *((void *)&v223[0] + 1);
      uint64_t v98 = swift_getObjectType();
      swift_unknownObjectRetain();
      float32x2_t v99 = sub_1B6333FD4(v98, v97);
      swift_unknownObjectRelease();
      __asm { FMOV            V0.2S, #1.0 }
      long long v161 = _Q0;
      int32x2_t v153 = (int32x2_t)vmaxnm_f32(v99, *(float32x2_t *)&_Q0);
      *(float *)&long long v101 = (float)(uint64_t)objc_msgSend(v185, sel_width);
      long long v152 = v101;
      id v102 = objc_msgSend(v185, sel_height);
      long long v105 = v152;
      *((float *)&v105 + 1) = (float)(uint64_t)v102;
      *((void *)&v104 + 1) = *((void *)&v161 + 1);
      int32x2_t v103 = (int32x2_t)vmaxnm_f32(*(float32x2_t *)&v105, *(float32x2_t *)&v161);
      *(float32x2_t *)&long long v104 = vdiv_f32((float32x2_t)v153, (float32x2_t)vdup_lane_s32(v153, 1));
      *(float32x2_t *)&long long v105 = vdiv_f32((float32x2_t)v103, (float32x2_t)vdup_lane_s32(v103, 1));
      unint64_t v92 = 0xD000000000000010;
      switch(v157)
      {
        case 1:
          break;
        case 2:
          if (vcgt_f32(*(float32x2_t *)&v104, *(float32x2_t *)&v105).u8[0])
          {
            *(float32x2_t *)&long long v104 = vdiv_f32(*(float32x2_t *)&v104, *(float32x2_t *)&v105);
            __asm { FMOV            V1.2S, #1.0 }
            *(int32x2_t *)&long long v104 = vzip1_s32(_D1, *(int32x2_t *)&v104);
            long long v161 = v104;
          }
          else
          {
            LODWORD(v105) = vdiv_f32(*(float32x2_t *)&v105, *(float32x2_t *)&v104).u32[0];
            DWORD1(v105) = 1.0;
            long long v161 = v105;
          }
          break;
        case 3:
          unsigned __int8 v110 = vcgt_f32(*(float32x2_t *)&v104, *(float32x2_t *)&v105).u8[0];
          int32x2_t v111 = (int32x2_t)vdiv_f32(*(float32x2_t *)&v104, *(float32x2_t *)&v105);
          __asm { FMOV            V3.2S, #1.0 }
          LODWORD(v104) = vdiv_f32(*(float32x2_t *)&v105, *(float32x2_t *)&v104).u32[0];
          DWORD1(v104) = 1.0;
          double v113 = COERCE_DOUBLE(vzip1_s32(_D3, v111));
          if ((v110 & 1) == 0) {
            *(double *)&long long v104 = v113;
          }
          long long v161 = v104;
          long long v114 = v159;
          DWORD2(v114) = 1.0;
          long long v190 = v114;
          break;
        default:
          *(float32x2_t *)&long long v104 = vdiv_f32((float32x2_t)v103, (float32x2_t)v153);
          long long v161 = v104;
          long long v106 = v159;
          DWORD2(v106) = 1.0;
          long long v190 = v106;
          break;
      }
      unint64_t v94 = 0xD000000000000019;
      unint64_t v95 = 0x80000001B6F39250;
      unint64_t v96 = 0x80000001B6F39320;
      goto LABEL_111;
    }
    if (objc_msgSend(v185, sel_textureType) == (id)3)
    {
      unint64_t v94 = 0xD00000000000001FLL;
      unint64_t v96 = 0x80000001B6F39300;
      *(float32x2_t *)&long long v107 = _D10;
      long long v161 = v107;
      unint64_t v92 = 0xD000000000000010;
      unint64_t v95 = 0x80000001B6F39250;
      goto LABEL_111;
    }
    if (objc_msgSend(v185, sel_textureType) == (id)7)
    {
      unint64_t v96 = 0x80000001B6F392E0;
      *(float32x2_t *)&long long v108 = _D10;
      long long v161 = v108;
      unint64_t v92 = 0xD000000000000010;
      unint64_t v95 = 0x80000001B6F39250;
      unint64_t v94 = 0xD000000000000019;
      goto LABEL_111;
    }
    if (objc_msgSend(v185, sel_textureType)) {
      break;
    }
    unint64_t v95 = 0x80000001B6F39250;
    unint64_t v96 = 0x80000001B6F39270;
    *(float32x2_t *)&long long v115 = _D10;
    long long v161 = v115;
    unint64_t v92 = 0xD000000000000010;
    unint64_t v94 = 0xD000000000000019;
LABEL_111:
    sub_1B62EAE94(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
    uint64_t v116 = swift_allocObject();
    *(_OWORD *)(v116 + 16) = xmmword_1B6E76B30;
    *(_OWORD *)(v116 + 32) = xmmword_1B6E8A870;
    *(unsigned char *)(v116 + 48) = 0;
    *(void *)(v116 + 64) = v89;
    *(_OWORD *)(v116 + 72) = 0u;
    *(_OWORD *)(v116 + 88) = 0u;
    *(_OWORD *)(v116 + 104) = 0u;
    *(void *)(v116 + 120) = 0;
    *(unsigned char *)(v116 + 128) = 13;
    *(_OWORD *)(v116 + 144) = xmmword_1B6E8A880;
    *(unsigned char *)(v116 + 160) = 0;
    *(void *)(v116 + 176) = v165;
    *(_OWORD *)(v116 + 184) = 0u;
    *(_OWORD *)(v116 + 200) = 0u;
    *(_OWORD *)(v116 + 216) = 0u;
    *(void *)(v116 + 232) = 0;
    *(unsigned char *)(v116 + 240) = 13;
    *(void *)&v223[0] = v92;
    *((void *)&v223[0] + 1) = v95;
    v223[1] = 0uLL;
    *(void *)&long long v224 = MEMORY[0x1E4FBC860];
    *((void *)&v224 + 1) = v94;
    *(void *)&long long v226 = 0;
    long long v225 = v96;
    *((void *)&v226 + 1) = MEMORY[0x1E4FBC860];
    long long v229 = 0u;
    long long v230 = 0u;
    long long v227 = 0u;
    long long v228 = 0u;
    long long v231 = 0u;
    long long v232 = 0u;
    v246[1] = 0uLL;
    v246[0] = v223[0];
    memset(&v246[5], 0, 96);
    v246[4] = v226;
    v246[2] = v224;
    v246[3] = v96;
    uint64_t v198 = 0;
    uint64_t v197 = 0;
    uint64_t v199 = 1;
    uint64_t v200 = v163;
    uint64_t v201 = 1;
    uint64_t v202 = v163;
    char v203 = 15;
    v247[1] = 0;
    v247[0] = 0;
    _OWORD v247[2] = 1;
    v247[3] = v163;
    v247[4] = 1;
    v247[5] = v163;
    __int16 v248 = 15;
    v249[0] = 0;
    v249[1] = 0;
    _OWORD v249[2] = 2;
    memset(&v249[3], 0, 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B62D5ED4((uint64_t *)v246, &v204, 0, 0, v116, (uint64_t)v247, 3, (uint64_t)v249, (uint64_t)v238, 1, 1);
    sub_1B638A224((uint64_t *)v223);
    swift_retain();
    unint64_t v117 = sub_1B638A310((uint64_t)v238, 0);
    uint64_t v119 = v118;
    if (v117 >= 3)
    {
      unint64_t v121 = v117;
      unint64_t v122 = swift_unknownObjectRetain();
      sub_1B630B7D8(v122, v119);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (v169)
      {
        uint64_t v123 = swift_getObjectType();
        objc_msgSend((id)swift_unknownObjectRetain(), sel_setRenderPipelineState_, v121);
        objc_msgSend(v169, sel_setDepthStencilState_, *(void *)(*(void *)(v170 + 248) + 168));
        sub_1B635FB18(v171, v123);
        float32x4_t v124 = (float32x4_t)xmmword_1B6E4F300;
        float32x4_t v125 = (float32x4_t)xmmword_1B6E4F320;
        float32x4_t v126 = (float32x4_t)xmmword_1B6E4F2E0;
        if ((v158 & 1) == 0)
        {
          float32x4_t v127 = vdivq_f32(v160, v154);
          float32x4_t v128 = vabsq_f32(v127);
          v128.i32[3] = 0;
          v129.i64[0] = 0x8000000080000000;
          v129.i64[1] = 0x8000000080000000;
          float32x4_t v130 = (float32x4_t)vorrq_s8((int8x16_t)(*(_OWORD *)&vmaxnmq_f32(v128, (float32x4_t)xmmword_1B6E4FCD0) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)), vandq_s8((int8x16_t)v127, v129));
          float32x4_t v124 = vaddq_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F300, v130.f32[0]), (float32x4_t)0);
          float32x4_t v125 = vaddq_f32(vmlaq_lane_f32((float32x4_t)0, (float32x4_t)xmmword_1B6E4F320, *(float32x2_t *)v130.f32, 1), (float32x4_t)0);
          float32x4_t v126 = vaddq_f32(vmlaq_laneq_f32((float32x4_t)0, (float32x4_t)xmmword_1B6E4F2E0, v130, 2), (float32x4_t)0);
        }
        *(float32x2_t *)v131.f32 = vdiv_f32(_D10, *(float32x2_t *)&v161);
        v131.i64[1] = __PAIR64__(HIDWORD(v161), 1.0);
        float32x4_t v132 = vabsq_f32(v131);
        v132.i32[3] = 0;
        v133.i64[0] = 0x8000000080000000;
        v133.i64[1] = 0x8000000080000000;
        float32x4_t v134 = (float32x4_t)vorrq_s8((int8x16_t)(*(_OWORD *)&vmaxnmq_f32(v132, (float32x4_t)xmmword_1B6E4FCD0) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)), vandq_s8((int8x16_t)v131, v133));
        float32x4_t v135 = vaddq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v124, v134.f32[0]), (float32x4_t)0, v125), (float32x4_t)0, v126), (float32x4_t)0);
        float32x4_t v136 = vmulq_f32(v124, (float32x4_t)0);
        float32x4_t v137 = vaddq_f32(vmlaq_f32(vmlaq_lane_f32(v136, v125, *(float32x2_t *)v134.f32, 1), (float32x4_t)0, v126), (float32x4_t)0);
        float32x4_t v138 = vmlaq_f32(v136, (float32x4_t)0, v125);
        float32x4_t v139 = vaddq_f32(vmlaq_laneq_f32(v138, v126, v134, 2), (float32x4_t)0);
        float32x4_t v217 = v135;
        float32x4_t v218 = v137;
        float32x4_t v140 = vaddq_f32(vmlaq_f32(v138, (float32x4_t)0, v126), (float32x4_t)xmmword_1B6E4F370);
        float32x4_t v219 = v139;
        float32x4_t v220 = v140;
        if ((v162 & 1) == 0)
        {
          *(float32x2_t *)v141.f32 = v156;
          v141.i64[1] = v155;
          float32x4_t v142 = vmulq_f32(v141, v141);
          float32x4_t v143 = vmulq_laneq_f32(v141, v141, 3);
          v141.f32[0] = vmuls_lane_f32(v156.f32[0], v156, 1);
          v142.f32[0] = 0.5 - v142.f32[0];
          float32x2_t v144 = vmul_n_f32(v156, *(float *)&v155);
          v145.i32[3] = 0;
          v145.f32[0] = (float)(0.5 - v142.f32[1]) - v142.f32[2];
          v145.f32[1] = v141.f32[0] + v143.f32[2];
          v145.f32[2] = v144.f32[0] - v143.f32[1];
          float32x4_t v146 = vaddq_f32(v145, v145);
          v147.i32[3] = 0;
          v147.f32[0] = v141.f32[0] - v143.f32[2];
          v147.f32[1] = v142.f32[0] - v142.f32[2];
          v147.f32[2] = v144.f32[1] + v143.f32[0];
          *(int32x2_t *)v141.f32 = vrev64_s32(*(int32x2_t *)v143.f32);
          v143.i32[0] = vadd_f32(v144, *(float32x2_t *)v141.f32).u32[0];
          v143.i32[1] = vsub_f32(v144, *(float32x2_t *)&v141).i32[1];
          v143.f32[2] = v142.f32[0] - v142.f32[1];
          float32x4_t v148 = vaddq_f32(v147, v147);
          v143.i32[3] = 0;
          float32x4_t v149 = vaddq_f32(v143, v143);
          float32x4_t v217 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v135, v146.f32[0]), v137, *(float32x2_t *)v146.f32, 1), v139, v146, 2), v140, v146, 3);
          float32x4_t v218 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v135, v148.f32[0]), v137, *(float32x2_t *)v148.f32, 1), v139, v148, 2), v140, v148, 3);
          float32x4_t v219 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v135, v149.f32[0]), v137, *(float32x2_t *)v149.f32, 1), v139, v149, 2), v140, v149, 3);
          float32x4_t v220 = vaddq_f32(v140, vmlaq_f32(vmlaq_f32(vmulq_f32(v135, (float32x4_t)0), (float32x4_t)0, v137), (float32x4_t)0, v139));
        }
        objc_msgSend(v169, sel_setVertexBytes_length_atIndex_, &v217, 64, 6);
        objc_msgSend(v169, sel_setFragmentTexture_atIndex_, v185, 0);
        objc_msgSend(v169, sel_setFragmentBytes_length_atIndex_, &v190, 16, 0);
        sub_1B6389C1C(1);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        sub_1B638CE7C(v238);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        sub_1B638CE7C(v238);
      }
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1B630B7D8(v117, v118);
      swift_release();
      if (v167)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        sub_1B638CE7C(v238);
      }
      else
      {
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        v217.i64[0] = 0;
        v217.i64[1] = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        float32x4_t v189 = v217;
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        float32x4_t v219 = v206;
        float32x4_t v220 = v207;
        long long v221 = v208;
        uint64_t v222 = v209;
        float32x4_t v217 = v204;
        float32x4_t v218 = v205;
        sub_1B6E32B18();
        sub_1B6E31948();
        MEMORY[0x1BA9B38A0](v116, &type metadata for FunctionConstant);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6D53520();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        int v120 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        v217.i64[0] = 0;
        swift_retain();
        sub_1B6B33E34(v120, (uint64_t *)&v217, v189.i64[0], v189.i64[1]);
        swift_unknownObjectRelease();
        swift_release();
        sub_1B638CE7C(v238);
        swift_unknownObjectRelease();
        swift_release();
      }
      swift_bridgeObjectRelease();
    }
LABEL_49:
    v49 += 3;
    if (v49 == (unsigned int *)v50) {
      goto LABEL_131;
    }
  }
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  *(void *)&v223[0] = 0;
  *((void *)&v223[0] + 1) = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  v217.i64[0] = (uint64_t)objc_msgSend(v185, sel_textureType);
  type metadata accessor for MTLTextureType(0);
  sub_1B6E32B18();
  long long v150 = v223[0];
  int v151 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  *(void *)&v223[0] = 0;
  swift_retain();
  sub_1B6B33E34(v151, (uint64_t *)v223, v150, *((uint64_t *)&v150 + 1));
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
LABEL_131:
  ecs_stack_allocator_pop_snapshot(v168);
  swift_unknownObjectRelease();
  sub_1B632F170(v237);
  return swift_release();
}

uint64_t sub_1B635E2D0(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B6E33068();
  if (result >= v3)
  {
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *v2 + 8;
      uint64_t v11 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        int v13 = *(_DWORD *)(v9 + 12 * i + 8);
        uint64_t v14 = v11;
        uint64_t v15 = v10;
        do
        {
          if (v13 >= *(_DWORD *)v15) {
            break;
          }
          uint64_t v16 = *(void *)(v15 + 4);
          *(void *)(v15 + 4) = *(void *)(v15 - 8);
          *(_DWORD *)(v15 + 12) = *(_DWORD *)v15;
          *(void *)(v15 - 8) = v16;
          *(_DWORD *)uint64_t v15 = v13;
          v15 -= 12;
        }
        while (!__CFADD__(v14++, 1));
        v10 += 12;
        --v11;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  if (v3 >= 2)
  {
    uint64_t v7 = v5 >> 1;
    sub_1B683552C();
    uint64_t v8 = sub_1B6E31C98();
    *(void *)(v8 + 16) = v7;
    uint64_t v74 = v8;
    __dst = (char *)(v8 + 32);
    goto LABEL_19;
  }
  uint64_t v18 = MEMORY[0x1E4FBC860];
  __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
  if (v3 == 1)
  {
    uint64_t v74 = MEMORY[0x1E4FBC860];
LABEL_19:
    uint64_t v19 = 0;
    uint64_t v73 = v2;
    uint64_t v20 = *v2;
    int32x4_t v21 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v75 = v6;
    uint64_t v76 = v3;
    do
    {
      uint64_t v23 = v19++;
      if (v19 < v3)
      {
        int v24 = *(_DWORD *)(v20 + 12 * v19 + 8);
        int v25 = *(_DWORD *)(v20 + 12 * v23 + 8);
        uint64_t v19 = v23 + 2;
        if (v23 + 2 < v3)
        {
          uint64_t v26 = (int *)(v20 + 32 + 12 * v23);
          int v27 = v24;
          while (1)
          {
            int v29 = *v26;
            v26 += 3;
            int v28 = v29;
            if (v24 < v25 == v29 >= v27) {
              break;
            }
            ++v19;
            int v27 = v28;
            if (v3 == v19)
            {
              uint64_t v19 = v3;
              break;
            }
          }
        }
        if (v24 < v25 && v23 < v19)
        {
          uint64_t v30 = 12 * v19;
          uint64_t v31 = 12 * v23;
          uint64_t v32 = v19;
          uint64_t v33 = v23;
          do
          {
            if (v33 != --v32)
            {
              uint64_t v34 = v20 + v31;
              uint64_t v35 = v20 + v30;
              int v36 = *(_DWORD *)(v20 + v31 + 8);
              uint64_t v37 = *(void *)(v20 + v31);
              int v38 = *(_DWORD *)(v20 + v30 - 4);
              *(void *)uint64_t v34 = *(void *)(v20 + v30 - 12);
              *(_DWORD *)(v34 + 8) = v38;
              *(void *)(v35 - 12) = v37;
              *(_DWORD *)(v35 - 4) = v36;
            }
            ++v33;
            v30 -= 12;
            v31 += 12;
          }
          while (v33 < v32);
        }
      }
      if (v19 < v3 && v19 - v23 < v6)
      {
        uint64_t v39 = v23 + v6;
        if (v23 + v6 >= v3) {
          uint64_t v39 = v3;
        }
        if (v19 != v39)
        {
          uint64_t v40 = (uint64_t *)(v20 + 12 * v19);
          do
          {
            int v41 = *(_DWORD *)(v20 + 12 * v19 + 8);
            uint64_t v42 = v23;
            float v43 = v40;
            do
            {
              if (v41 >= *((_DWORD *)v43 - 1)) {
                break;
              }
              uint64_t v44 = *v43;
              *float v43 = *(uint64_t *)((char *)v43 - 12);
              *((_DWORD *)v43 + 2) = *((_DWORD *)v43 - 1);
              *(uint64_t *)((char *)v43 - 12) = v44;
              *((_DWORD *)v43 - 1) = v41;
              ++v42;
              float v43 = (uint64_t *)((char *)v43 - 12);
            }
            while (v19 != v42);
            ++v19;
            uint64_t v40 = (uint64_t *)((char *)v40 + 12);
          }
          while (v19 != v39);
          uint64_t v19 = v39;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int32x4_t v21 = sub_1B62BD890(0, *((void *)v21 + 2) + 1, 1, v21);
      }
      unint64_t v46 = *((void *)v21 + 2);
      unint64_t v45 = *((void *)v21 + 3);
      unint64_t v22 = v46 + 1;
      if (v46 >= v45 >> 1) {
        int32x4_t v21 = sub_1B62BD890(v45 > 1, v46 + 1, 1, v21);
      }
      *((void *)v21 + 2) = v22;
      unsigned int v47 = v21 + 32;
      float v48 = &v21[16 * v46 + 32];
      *(void *)float v48 = v23;
      *((void *)v48 + 1) = v19;
      if (v46)
      {
        while (1)
        {
          uint64_t v49 = v22 - 1;
          if (v22 >= 4)
          {
            BOOL v54 = &v47[16 * v22];
            uint64_t v55 = *((void *)v54 - 7) - *((void *)v54 - 8);
            uint64_t v52 = *((void *)v54 - 5) - *((void *)v54 - 6);
            uint64_t v53 = v22 - 2;
            uint64_t v56 = &v47[16 * v22 - 32];
            uint64_t v50 = *(void *)v56;
            uint64_t v51 = *((void *)v56 + 1);
            if (v52 - v50 + v51 >= v55)
            {
              BOOL v59 = v52 < *(void *)&v47[16 * v49 + 8] - *(void *)&v47[16 * v49];
              goto LABEL_61;
            }
          }
          else
          {
            if (v22 != 3)
            {
              uint64_t v57 = *(void *)&v47[16 * v22 - 24] - *(void *)&v21[16 * v22];
              uint64_t v58 = *(void *)&v47[16 * v49 + 8] - *(void *)&v47[16 * v49];
LABEL_58:
              if (v58 < v57) {
                goto LABEL_21;
              }
              goto LABEL_63;
            }
            uint64_t v50 = *((void *)v21 + 6);
            uint64_t v51 = *((void *)v21 + 7);
            uint64_t v52 = *((void *)v21 + 5) - *((void *)v21 + 4);
            uint64_t v53 = 1;
          }
          uint64_t v57 = v51 - v50;
          uint64_t v58 = *(void *)&v47[16 * v49 + 8] - *(void *)&v47[16 * v49];
          if (v57 + v58 < v52) {
            goto LABEL_58;
          }
          BOOL v59 = v52 < v58;
LABEL_61:
          if (v59) {
            uint64_t v49 = v53;
          }
LABEL_63:
          uint64_t v60 = &v47[16 * v49 - 16];
          uint64_t v61 = *(void *)v60;
          uint64_t v62 = &v47[16 * v49];
          uint64_t v63 = *((void *)v62 + 1);
          sub_1B68345F4((char *)(v20 + 12 * *(void *)v60), (char *)(v20 + 12 * *(void *)v62), v20 + 12 * v63, __dst);
          if (v1) {
            goto LABEL_74;
          }
          *(void *)uint64_t v60 = v61;
          *((void *)v60 + 1) = v63;
          unint64_t v64 = *((void *)v21 + 2);
          unint64_t v22 = v64 - 1;
          memmove(&v47[16 * v49], v62 + 16, 16 * (v64 - 1 - v49));
          *((void *)v21 + 2) = v64 - 1;
          if (v64 <= 2) {
            goto LABEL_21;
          }
        }
      }
      unint64_t v22 = 1;
LABEL_21:
      uint64_t v6 = v75;
      uint64_t v3 = v76;
    }
    while (v19 < v76);
    uint64_t v18 = v74;
    uint64_t v2 = v73;
    goto LABEL_68;
  }
  unint64_t v22 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  int32x4_t v21 = (char *)MEMORY[0x1E4FBC860];
LABEL_68:
  uint64_t v74 = v18;
  if (v22 >= 2)
  {
    uint64_t v65 = *v2;
    do
    {
      uint64_t v66 = *(void *)&v21[16 * v22];
      uint64_t v67 = &v21[16 * v22 + 16];
      uint64_t v68 = *((void *)v67 + 1);
      sub_1B68345F4((char *)(v65 + 12 * v66), (char *)(v65 + 12 * *(void *)v67), v65 + 12 * v68, __dst);
      if (v1) {
        break;
      }
      uint64_t v69 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v69 = sub_1B6D671B8((uint64_t)v21);
      }
      uint64_t v70 = v69 + 32;
      unint64_t v71 = &v69[16 * v22];
      *(void *)unint64_t v71 = v66;
      *((void *)v71 + 1) = v68;
      int32x4_t v21 = v69;
      unint64_t v72 = *((void *)v69 + 2);
      memmove(&v70[16 * v22 - 16], &v70[16 * v22], 16 * (v72 - v22));
      *((void *)v21 + 2) = v72 - 1;
      unint64_t v22 = v72 - 1;
    }
    while (v72 > 2);
  }
LABEL_74:
  swift_bridgeObjectRelease();
  *(void *)(v74 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void *sub_1B635E878(uint64_t **a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (qword_1EB97EC68 != -1) {
    swift_once();
  }
  uint64_t v8 = 1 << a3;
  if (a3 >= 0x40) {
    uint64_t v8 = 0;
  }
  if (a3 > 0x40) {
    uint64_t v8 = 0;
  }
  uint64_t v113 = xmmword_1EB997C70;
  int v114 = DWORD2(xmmword_1EB997C70);
  char v115 = BYTE12(xmmword_1EB997C70);
  uint64_t v116 = qword_1EB997C80;
  char v117 = byte_1EB997C88;
  uint64_t v118 = v8;
  swift_retain();
  sub_1B62C9DA8(a2, (uint64_t)&v113, 0x200000000, v99);
  sub_1B62D80E8((uint64_t)v99, (uint64_t)v100, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v89 = (unsigned __int16 *)v100[0];
  if (v100[0])
  {
    uint64_t v78 = v100[7];
    uint64_t v76 = v100[5];
    uint64_t v77 = v100[8];
    uint64_t v119 = (void *)v100[9];
    uint64_t v79 = v100[10];
  }
  else
  {
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    uint64_t v78 = 0;
    uint64_t v119 = 0;
    uint64_t v79 = 0;
  }
  swift_release();
  uint64_t v73 = a2;
  uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (a1[2])
  {
    uint64_t v10 = *a1;
    uint64_t v11 = *(void **)(*(void *)(v9 + 8) + 32);
    swift_retain();
    sub_1B636006C(v11);
    swift_release();
  }
  else
  {
    type metadata accessor for RenderBuckets();
    uint64_t v12 = swift_allocObject();
    int v13 = aligned_alloc(8uLL, 0xA00uLL);
    uint64_t v14 = aligned_alloc(8uLL, 0x100uLL);
    uint64_t v15 = aligned_alloc(8uLL, 0x40uLL);
    *(_OWORD *)(v12 + 16) = 0u;
    *(_OWORD *)(v12 + 32) = 0u;
    *(_OWORD *)(v12 + 48) = 0u;
    *(_OWORD *)(v12 + 64) = 0u;
    *(_OWORD *)(v12 + 80) = 0u;
    *(_OWORD *)(v12 + 96) = 0u;
    *(_OWORD *)(v12 + 112) = 0u;
    *(_OWORD *)(v12 + 128) = 0u;
    *(_OWORD *)(v12 + 144) = 0u;
    *uint64_t v15 = 0u;
    v15[1] = 0u;
    v15[2] = 0u;
    void v15[3] = 0u;
    *(unsigned char *)(v12 + 160) = 0;
    *(_OWORD *)(v12 + 168) = xmmword_1B6EC0980;
    *(void *)(v12 + 184) = v13;
    *(void *)(v12 + 192) = v14;
    *(void *)(v12 + 200) = v15;
    if (a1[1])
    {
      uint64_t v16 = 0;
    }
    else
    {
      sub_1B6CDCD58(0);
      uint64_t v16 = a1[2];
    }
    uint64_t v10 = *a1;
    (*a1)[(void)v16] = v12;
    a1[2] = (uint64_t *)((char *)v16 + 1);
  }
  uint64_t v17 = *v10;
  uint64_t v18 = *(void *)(v9 + 8);
  uint64_t v103 = 0;
  long long v101 = 0u;
  long long v102 = 0u;
  memset(&v93[8], 0, 40);
  long long v94 = xmmword_1B6E50D30;
  long long v95 = 1uLL;
  *(void *)&long long v96 = 0;
  *((void *)&v96 + 1) = 1;
  long long v97 = 0uLL;
  v93[0] = 3;
  uint64_t v19 = v73;
  *(void *)&long long v91 = a4;
  *((void *)&v91 + 1) = v73;
  *(void *)&long long v92 = v18;
  *((void *)&v92 + 1) = 1;
  swift_retain();
  sub_1B635FA4C((uint64_t)&v101, (uint64_t)&v93[8]);
  v98[6] = v95;
  v98[7] = v96;
  v98[8] = v97;
  _OWORD v98[2] = *(_OWORD *)v93;
  v98[3] = *(_OWORD *)&v93[16];
  v98[4] = *(_OWORD *)&v93[32];
  v98[5] = v94;
  v98[0] = v91;
  v98[1] = v92;
  sub_1B635FFE4((uint64_t)v98, v17 + 16);
  swift_release();
  if (v89 && v79 > 0 && v78)
  {
    uint64_t v72 = a4;
    uint64_t v20 = v119;
    uint64_t v21 = v119[4];
    int v87 = *(unsigned __int8 *)(v77 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    sub_1B632F1C4(v99, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
    sub_1B632F1C4(v99, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
    uint64_t v22 = 0;
    uint64_t v74 = v20 + 8;
    unint64_t v80 = a1;
    uint64_t v75 = v21;
    while (1)
    {
      uint64_t v86 = v22;
      uint64_t v23 = (unsigned int *)(v76 + 48 * v22);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v26 = v23[2];
      uint64_t v28 = *((void *)v23 + 2);
      uint64_t v27 = *((void *)v23 + 3);
      uint64_t v30 = *((void *)v23 + 4);
      uint64_t v29 = *((void *)v23 + 5);
      if (v87)
      {
        uint64_t v31 = *(os_unfair_lock_s **)(v29 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v31);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v29 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v21);
      uint64_t v84 = v20[7];
      uint64_t v85 = v20[6];
      uint64_t v82 = v20[9];
      uint64_t v83 = v20[8];
      uint64_t v81 = v20[10];
      uint64_t v32 = v20[4];
      uint64_t v33 = *(void *)(*(void *)(*(void *)(*(void *)(v29 + 40) + 16) + 32) + 16) + 1;
      uint64_t v88 = v29;
      swift_retain();
      uint64_t v34 = ecs_stack_allocator_allocate(v32, 48 * v33, 8);
      v119[6] = v34;
      v119[7] = v33;
      uint64_t v20 = v119;
      v74[1] = 0;
      _OWORD v74[2] = 0;
      *uint64_t v74 = 0;
      swift_release();
      *(void *)&long long v101 = v77;
      *((void *)&v101 + 1) = v29;
      *(void *)&long long v102 = v20;
      *((void *)&v102 + 1) = v26;
      uint64_t v103 = (v25 - v24 + v26);
      uint64_t v104 = v79;
      uint64_t v105 = v24;
      uint64_t v106 = v25;
      uint64_t v107 = 0;
      uint64_t v108 = 0;
      char v109 = 1;
      uint64_t v110 = v28;
      uint64_t v111 = v27;
      uint64_t v112 = v30;
      a1 = v80;
      sub_1B6CDE4C8(&v101);
      unint64_t v35 = v20[6];
      uint64_t v90 = v20[8];
      if (!v90)
      {
        uint64_t v62 = v20[7];
        uint64_t v63 = (void *)v20[4];
        goto LABEL_62;
      }
      for (uint64_t i = 0; i != v90; ++i)
      {
        unint64_t v38 = v35;
        uint64_t v39 = (uint64_t *)(v35 + 48 * i);
        uint64_t v40 = *v39;
        int v41 = (void (*)(uint64_t))v39[4];
        uint64_t v42 = v20[9];
        if (v42) {
          BOOL v43 = v40 == v42;
        }
        else {
          BOOL v43 = 0;
        }
        if (v43 || !v89[11]) {
          goto LABEL_26;
        }
        unint64_t v44 = v89[9];
        unint64_t v45 = (void *)((char *)v89 + v89[8] + 41);
        uint64_t v46 = v39[2];
        unsigned int v47 = v45;
        unint64_t v48 = v44 >> 4;
        uint64_t v49 = (char *)v89 + 41;
        if (v44 >= 0x10)
        {
          while (*v47 != v40)
          {
            ++v49;
            v47 += 2;
            if (!--v48) {
              goto LABEL_41;
            }
          }
          unsigned int v50 = v49[v89[10]];
          BOOL v51 = v50 > 5;
          int v52 = (1 << v50) & 0x23;
          if (v51 || v52 == 0)
          {
LABEL_26:
            uint64_t v37 = swift_retain();
            v41(v37);
            swift_release();
            goto LABEL_27;
          }
        }
LABEL_41:
        if (swift_conformsToProtocol2()) {
          uint64_t v54 = v46;
        }
        else {
          uint64_t v54 = 0;
        }
        if (v54)
        {
          if (v44 < 0x10) {
            goto LABEL_26;
          }
          uint64_t v55 = v45;
          unint64_t v56 = v44 >> 4;
          uint64_t v57 = (char *)v89 + 41;
          while (*v55 != v54)
          {
            ++v57;
            v55 += 2;
            if (!--v56) {
              goto LABEL_54;
            }
          }
          unsigned int v58 = v57[v89[10]];
          BOOL v51 = v58 > 5;
          int v59 = (1 << v58) & 0x23;
          if (v51 || v59 == 0) {
            goto LABEL_26;
          }
LABEL_54:
          uint64_t v61 = 16 * (v44 >> 4);
          while (*v45 != v54)
          {
            v45 += 2;
            v61 -= 16;
            if (!v61) {
              goto LABEL_26;
            }
          }
        }
LABEL_27:
        uint64_t v20 = v119;
        unint64_t v35 = v38;
      }
      uint64_t v62 = v119[7];
      unint64_t v35 = v119[6];
      uint64_t v63 = (void *)v119[4];
      if ((uint64_t)v119[8] >= 1)
      {
        unint64_t v64 = v119[6];
        swift_arrayDestroy();
        unint64_t v35 = v64;
      }
      a1 = v80;
LABEL_62:
      uint64_t v21 = v75;
      ecs_stack_allocator_deallocate(v63, v35, 48 * v62);
      v20[6] = v85;
      v20[7] = v84;
      v20[8] = v83;
      v20[9] = v82;
      v20[10] = v81;
      sub_1B634507C((char *)v88);
      ecs_stack_allocator_pop_snapshot(v75);
      if (v87)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v88 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v88 + 376));
      }
      swift_release();
      uint64_t v22 = v86 + 1;
      if (v86 + 1 == v78)
      {
        sub_1B632F1C4(v99, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        sub_1B632F1C4(v99, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        uint64_t v19 = v73;
        a4 = v72;
        break;
      }
    }
  }
  sub_1B62D80E8(*(void *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager_renderer) + 624, (uint64_t)&v91, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
  sub_1B62D80E8((uint64_t)&v91, (uint64_t)v98, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
  if (sub_1B6388C10((uint64_t *)v98) == 1) {
    goto LABEL_73;
  }
  uint64_t v65 = *((void *)&v98[0] + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t))(v65 + 144);
  swift_unknownObjectRetain();
  uint64_t v68 = v67(ObjectType, v65);
  swift_unknownObjectRelease();
  if (BYTE4(v68))
  {
    if (BYTE4(v68) == 2)
    {
      uint64_t v69 = 0;
      BOOL v70 = 1;
      goto LABEL_70;
    }
LABEL_73:
    uint64_t result = (void *)sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  uint64_t v69 = v68;
  BOOL v70 = v68 == 0;
LABEL_70:
  if ((*(unsigned char *)(v73 + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare) & 1) == 0) {
    sub_1B635F194(0, a4, v73, (uint64_t)a1, v69 | ((unint64_t)v70 << 32));
  }
  return sub_1B632F1C4(v99, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

uint64_t sub_1B635F194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = *(void *)(8 * a1 + *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues) + 8);
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  memset(&v10[8], 0, 40);
  long long v11 = xmmword_1B6E50D30;
  long long v12 = 1uLL;
  *(void *)&long long v13 = 0;
  *((void *)&v13 + 1) = 1;
  long long v14 = 0uLL;
  v10[0] = 3;
  *(void *)&long long v8 = a2;
  *((void *)&v8 + 1) = a3;
  *(void *)&long long v9 = v6;
  *((void *)&v9 + 1) = 1;
  sub_1B635FA4C((uint64_t)v15, (uint64_t)&v10[8]);
  uint64_t v17[6] = v12;
  v17[7] = v13;
  v17[8] = v14;
  _OWORD v17[2] = *(_OWORD *)v10;
  v17[3] = *(_OWORD *)&v10[16];
  v17[4] = *(_OWORD *)&v10[32];
  v17[5] = v11;
  v17[0] = v8;
  v17[1] = v9;
  swift_retain();
  sub_1B636029C(a5 | ((HIDWORD(a5) & 1) << 32), (uint64_t *)v17);
  swift_release();
  return sub_1B635FC14((uint64_t)v17);
}

void sub_1B635F2A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare)) {
    return;
  }
  uint64_t v3 = OBJC_IVAR____TtC3VFX13EntityManager_renderer;
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v4) {
    return;
  }
  uint64_t v5 = v1;
  uint64_t v6 = *(void *)(*(void *)(v4 + 272) + 24);
  if (v6 == 2) {
    goto LABEL_40;
  }
  if ((v6 & 0x100) == 0) {
    return;
  }
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
  swift_retain();
  swift_retain();
  id v52 = (id)sub_1B6330840(v7);
  swift_release();
  uint64_t v8 = sub_1B6E328F8();
  sub_1B6388754(v8, v9, v52);
  uint64_t v10 = sub_1B6388ED8(0);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if (!v10)
  {
    swift_release();

    return;
  }
  BOOL v51 = (void *)v10;
  sub_1B6383E40((uint64_t)v75);
  sub_1B6383E40((uint64_t)v78);
  uint64_t v11 = v77;
  uint64_t v12 = v76;
  sub_1B6383E40((uint64_t)v80);
  swift_retain();
  sub_1B62C7BF4((uint64_t)v80);
  uint64_t v13 = v81;
  uint64_t v14 = v79;
  if (v79 == 260) {
    uint64_t v15 = 260;
  }
  else {
    uint64_t v15 = 0;
  }
  sub_1B62C7BF4((uint64_t)v78);
  sub_1B62C7BF4((uint64_t)v75);
  swift_release();
  int v90 = 0;
  uint64_t v91 = v12;
  uint64_t v92 = 0;
  uint64_t v93 = 0;
  uint64_t v94 = 0;
  uint64_t v95 = v13;
  uint64_t v96 = 0;
  uint64_t v97 = 0;
  uint64_t v98 = 0;
  uint64_t v99 = v14;
  uint64_t v100 = v15;
  uint64_t v101 = v11;
  uint64_t v16 = *(void *)(a1 + v3);
  if (v16)
  {
    uint64_t v17 = **(void **)(v16 + 496);
    swift_retain();
    if (!v17)
    {
      if (*(void *)(v16 + 376))
      {
        uint64_t v45 = swift_dynamicCastObjCProtocolConditional();
        if (v45)
        {
          uint64_t v46 = (void *)v45;
          swift_unknownObjectRetain();
          id v47 = objc_msgSend(v46, sel_renderCommandEncoder);
          uint64_t v73 = 0x646F636E45627573;
          unint64_t v74 = 0xEB000000005B7265;
          v72[0] = 0;
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          unint64_t v48 = (void *)sub_1B6E31768();
          swift_bridgeObjectRelease();
          objc_msgSend(v47, sel_setLabel_, v48);

          uint64_t v49 = *(void **)(v16 + 496);
          *uint64_t v49 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RenderCommandEncoder()), sel_initWithEncoder_, v47);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
        }
      }
    }
    if (**(void **)(v16 + 496))
    {
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1B635FB18(a1, ObjectType);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
  sub_1B62D80E8(v4 + 624, (uint64_t)v72, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
  sub_1B62D80E8((uint64_t)v72, (uint64_t)&v73, (unint64_t *)&unk_1EB9852B0, (uint64_t)&type metadata for Renderer.CurrentRenderContext);
  if (sub_1B6388C10(&v73) == 1)
  {
LABEL_40:
    sub_1B6E32BE8();
    __break(1u);
    return;
  }
  unint64_t v19 = v74;
  uint64_t v20 = swift_getObjectType();
  uint64_t v21 = *(uint64_t (**)(uint64_t, unint64_t))(v19 + 144);
  swift_unknownObjectRetain();
  uint64_t v22 = v21(v20, v19);
  swift_unknownObjectRelease();
  long long v23 = *(_OWORD *)(v5 + 32);
  v102[0] = *(_OWORD *)(v5 + 16);
  v102[1] = v23;
  uint64_t v103 = *(void *)(v5 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v102, v22 & 0xFFFFFFFFFFLL, v82);
  sub_1B62D80E8((uint64_t)v82, (uint64_t)v83, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v83[0])
  {
    long long v89 = v84;
    long long v86 = v83[2];
    long long v87 = v83[3];
    long long v88 = v83[4];
    v85[0] = v83[0];
    v85[1] = v83[1];
    uint64_t v24 = v84;
    sub_1B636051C((long long *)&v62);
    unint64_t v71 = (char *)MEMORY[0x1E4FBC860];
    sub_1B63643D4((unsigned __int16 **)v85, v24, &v71, v62, v63, v64, v65);
    uint64_t v25 = *((void *)v71 + 2);
    uint64_t v27 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                    + 8 * *(void *)thread_worker_index(&thread_worker_index, v26)
                    + 8);
    uint64_t v61 = 0;
    memset(v60, 0, sizeof(v60));
    memset((char *)v55 + 8, 0, 40);
    long long v56 = xmmword_1B6E50D30;
    long long v57 = 1uLL;
    *(void *)&long long v58 = 0;
    *((void *)&v58 + 1) = 1;
    long long v59 = 0uLL;
    LOBYTE(v55[0]) = 1;
    v53.i64[0] = v4;
    v53.i64[1] = a1;
    v54.i64[0] = v27;
    v54.i64[1] = 1;
    uint64_t v50 = v28;
    swift_bridgeObjectRetain();
    sub_1B635FA4C((uint64_t)v60, (uint64_t)v55 + 8);
    long long v68 = v57;
    long long v69 = v58;
    long long v70 = v59;
    float32x4_t v64 = (float32x4_t)v55[0];
    float32x4_t v65 = (float32x4_t)v55[1];
    long long v66 = v55[2];
    long long v67 = v56;
    float32x4_t v62 = v53;
    float32x4_t v63 = v54;
    if (v25)
    {
      uint64_t v29 = *((void *)&v86 + 1);
      uint64_t v30 = *((void *)&v87 + 1);
      uint64_t v31 = v88;
      float32x4_t v53 = 0u;
      float32x4_t v54 = 0u;
      memset(v55, 0, sizeof(v55));
      long long v56 = 0u;
      long long v57 = 0u;
      swift_bridgeObjectRetain();
      uint64_t v32 = 0;
      do
      {
        if (v30)
        {
          uint64_t v34 = *(void *)(v50 + 32 + 16 * v32);
          uint64_t v35 = v30;
          uint64_t v36 = v29;
          while (1)
          {
            uint64_t v37 = *(unsigned int *)(v36 + 8);
            if (v34 >= v37 && v34 < (v37 - *(_DWORD *)v36 + *(_DWORD *)(v36 + 4))) {
              break;
            }
            v36 += 48;
            if (!--v35) {
              goto LABEL_25;
            }
          }
          int v38 = *(_DWORD *)(*(void *)(v36 + 40) + 188);
        }
        else
        {
LABEL_25:
          int v38 = -1;
        }
        uint64_t v39 = *(void *)(*(void *)(*(void *)(v31 + 136) + 8 * v38 + 32) + 48);
        if (*(ValueMetadata **)(v39 + 32) != &type metadata for DrawCallComponent)
        {
          uint64_t v40 = 0;
          uint64_t v41 = *(void *)(v39 + 16);
          uint64_t v42 = v39 + 72;
          uint64_t v43 = v41 - 1;
          do
          {
            unint64_t v44 = *(ValueMetadata **)(v42 + v40);
            v40 += 40;
            --v43;
          }
          while (v44 != &type metadata for DrawCallComponent);
        }
        ++v32;
        uint64_t v33 = swift_retain();
        sub_1B631083C(v33, &v90, (uint64_t *)&v53, v51, (uint64_t)&v62, 0);
        swift_release();
      }
      while (v32 != v25);
    }
    else
    {
      swift_bridgeObjectRetain();
    }

    swift_unknownObjectRelease();
    sub_1B632F1C4(v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    swift_release();
    swift_bridgeObjectRelease_n();
    sub_1B635FC14((uint64_t)&v62);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();

    swift_unknownObjectRelease();
  }
}

uint64_t sub_1B635FA4C(uint64_t a1, uint64_t a2)
{
  sub_1B635FAB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1B635FAB0()
{
  if (!qword_1EB97D6E0)
  {
    sub_1B62C5560(255, (unint64_t *)&unk_1EB97D6D0);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D6E0);
    }
  }
}

uint64_t sub_1B635FB18(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
  {
    MEMORY[0x1F4188790](result, a2);
    uint64_t v3 = *(void **)(v2 + 176);
    MEMORY[0x1F4188790](v2, v4);
    swift_retain();
    swift_retain();
    sub_1B636E6E4((uint64_t)&type metadata for FrameConstantsStorage, (uint64_t)&off_1F0F851A8, v3, (void (*)(uint64_t))sub_1B636EA44);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B635FC14(uint64_t a1)
{
  return a1;
}

uint64_t destroy for RenderContext(void *a1)
{
  if (a1[8]) {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)(a1 + 5));
  }
  if (a1[10] >= 2uLL)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  if (a1[12] != 1) {
    swift_unknownObjectRelease();
  }
  uint64_t result = a1[15];
  if (result != 1)
  {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B635FCE8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
    uint64_t v3 = *(void *)(v1 + 272);
    sub_1B6383E40((uint64_t)v12);
    uint64_t v4 = *(void *)(*(void *)(*(void *)(*(void *)(v3 + 16) + 264) + 40) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v4)
    {
      uint64_t v6 = v12[0];
      uint64_t v5 = v12[1];
      swift_bridgeObjectRetain();
      sub_1B62B2CE0(v6, v5);
      if (v7)
      {
        swift_unknownObjectRetain();
        sub_1B62C7BF4((uint64_t)v12);
        swift_release();
        sub_1B62C7BF4((uint64_t)v12);
        swift_release();
        swift_unknownObjectRelease();
        return swift_release();
      }
      sub_1B62C7BF4((uint64_t)v12);
    }
    swift_release();
    sub_1B62C7BF4((uint64_t)v12);
    swift_release();
    uint64_t v8 = *(unsigned char **)(v1 + 272);
    if (v8[24] != 2)
    {
      v8[33] = 1;
      v8[31] = 1;
    }
    swift_retain();
    uint64_t v9 = (void *)sub_1B6330840(v2);
    swift_release();
    uint64_t v10 = sub_1B6E328F8();
    sub_1B6388754(v10, v11, v9);

    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_1B635FE78(unint64_t a1, uint64_t a2)
{
  unint64_t v4 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  swift_retain();
  if ((a1 & 0x80000000) == 0
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v4 == -1)
     || *(_DWORD *)(v6 + 12 * (int)a1 + 8) == v4))
  {
    uint64_t v5 = sub_1B633CF30(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32), *(_DWORD *)(v6 + 12 * (int)a1), *(_WORD *)(v6 + 12 * (int)a1 + 4), 16, a2);
    char v15 = v14;
    swift_release();
    if ((v15 & 1) == 0) {
      return v5;
    }
  }
  else
  {
    swift_release();
  }
  swift_retain();
  uint64_t v7 = sub_1B6360828(a1);
  char v9 = v8;
  swift_release();
  if ((v9 & 1) == 0) {
    return v7;
  }
  swift_retain();
  unint64_t v11 = sub_1B6360908(a1);
  swift_release();
  if ((v11 & 0x100000000) == 0)
  {
    v12.i32[0] = v11;
    return vdupq_lane_s32(v12, 0).u64[0];
  }
  return 0;
}

uint64_t sub_1B635FFE4(uint64_t a1, uint64_t a2)
{
  sub_1B63176F0(0, &qword_1EB97E6D8, (uint64_t)&type metadata for RenderContext, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *sub_1B636006C(void *a1)
{
  uint64_t v2 = v1[22];
  uint64_t v3 = ecs_stack_allocator_allocate((uint64_t)a1, 8 * v2, 8);
  uint64_t v4 = v1[21];
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = v1[25];
    uint64_t v8 = 72;
    do
    {
      if (*(_WORD *)(v7 + 2 * v6))
      {
        uint64_t v10 = v1[23];
        uint64_t v11 = *(void *)(v1[24] + 8 * v6);
        uint64_t v12 = *(void *)(v10 + v8);
        if ((*(unsigned char *)(v10 + v8 - 8) & 1) == 0) {
          *(void *)(v10 + v8) = ++v12;
        }
        if (v12 < 61)
        {
          *(unsigned char *)(v10 + v8 - 8) = 0;
          uint64_t v9 = v10 + v8;
          *(void *)(v9 - 40) = 0;
          *(void *)(v9 - 16) = 0;
        }
        else
        {
          uint64_t v13 = v10 + v8;
          char v14 = *(void **)(v13 - 32);
          free(*(void **)(v13 - 56));
          free(v14);
          if (v5 == v2)
          {
            if (2 * v2 <= 1) {
              uint64_t v15 = 1;
            }
            else {
              uint64_t v15 = 2 * v2;
            }
            uint64_t v3 = sub_1B6CDCCCC(v3, (uint64_t)&v3[v2], 8 * v15, 8, a1);
            uint64_t v2 = v15;
          }
          v3[v5++] = v11;
        }
      }
      ++v6;
      v8 += 80;
    }
    while (v4 != v6);
    if (v5)
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        uint64_t v17 = v3[i];
        sub_1B6CE010C((uint64_t)(v1 + 2), (uint64_t)v29);
        uint64_t v18 = v30;
        swift_retain();
        sub_1B635FC14((uint64_t)v29);
        if (*(void *)(v18 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
          vfx_counters.add(_:_:)(*(_DWORD *)(v18 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 92), -v1[22]);
        }
        swift_release();
        uint64_t v19 = v1[21] - 1;
        uint64_t v20 = v19 & v17;
        uint64_t v21 = v1[25];
        unsigned int v22 = *(unsigned __int16 *)(v21 + 2 * (v19 & v17));
        if (v22 >= 2)
        {
          uint64_t v23 = 0;
          unsigned __int16 v24 = *(_WORD *)(v21 + 2 * (v19 & v17));
          while (1)
          {
            if ((v24 & 2) != 0)
            {
              uint64_t v26 = (v20 + v23) & v19;
              if (*(void *)(v1[24] + 8 * v26) == v17) {
                break;
              }
            }
            unsigned int v25 = v24;
            v24 >>= 1;
            ++v23;
            if (v25 < 4) {
              goto LABEL_17;
            }
          }
          *(_WORD *)(v21 + 2 * v20) = (1 << ((v23 + 1) & 0xF)) ^ v22;
          *(_WORD *)(v21 + 2 * v26) ^= 1u;
          --v1[22];
        }
LABEL_17:
        ;
      }
    }
  }
  return ecs_stack_allocator_deallocate(a1, (unint64_t)v3, 8 * v2);
}

uint64_t sub_1B636029C(uint64_t result, uint64_t *a2)
{
  unint64_t v35 = result;
  uint64_t v3 = *(void *)(v2 + 168);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = *(void *)(v44 + 200);
    uint64_t v41 = *(void *)(v2 + 168);
    uint64_t v42 = v5;
    do
    {
      if ((*(_WORD *)(v5 + 2 * v4) & 1) == 0) {
        goto LABEL_6;
      }
      uint64_t v6 = *(void *)(v44 + 184);
      if (*(uint64_t *)(v6 + 80 * v4 + 32) < 1) {
        goto LABEL_6;
      }
      uint64_t v40 = *(void *)(v6 + 80 * v4 + 32);
      uint64_t v7 = *a2;
      uint64_t v8 = (int *)(v6 + 80 * v4);
      uint64_t v9 = a2[2];
      uint64_t v11 = v8[2];
      uint64_t v10 = v8[3];
      int v12 = v8[1];
      uint64_t v13 = *v8;
      char v14 = (const void *)*((void *)v8 + 2);
      uint64_t v15 = (const void *)*((void *)v8 + 5);
      uint64_t v16 = *((void *)v8 + 7);
      uint64_t v17 = swift_retain();
      if (v13 != -1 || v12 != 0)
      {
        uint64_t v36 = v10;
        uint64_t v37 = v15;
        uint64_t v38 = v9;
        uint64_t v39 = v7;
        if ((v13 & 0x80000000) == 0)
        {
          uint64_t v19 = v17;
          if (*(void *)(v17 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v13)
          {
            uint64_t v20 = *(void *)(v17 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
            if (v12 == -1 || *(_DWORD *)(v20 + 12 * (int)v13 + 8) == v12)
            {
              uint64_t v22 = *(void *)(*(void *)(*(void *)(v17 + 80) + 8 * *(__int16 *)(v20 + 12 * (int)v13 + 6) + 32)
                              + 16);
              uint64_t v23 = *(void *)(v22 + 128);
              if (*(void *)(v23 + 16))
              {
                unint64_t v24 = sub_1B62C1A30((uint64_t)&type metadata for MeshModel);
                if (v25)
                {
                  uint64_t v26 = *(ValueMetadata **)(*(void *)(v22 + 24)
                                          + 16 * *(void *)(*(void *)(v23 + 56) + 8 * v24)
                                          + 32);
                  uint64_t result = swift_release();
                  if (v26 != &type metadata for MeshModel) {
                    goto LABEL_5;
                  }
                  uint64_t v27 = (void *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
                  uint64_t v28 = *(void *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
                  swift_retain();
                  if (v28 > v13)
                  {
                    uint64_t v29 = *v27 + 12 * (int)v13;
                    uint64_t v30 = *(__int16 *)(v29 + 4);
                    if (v12 == -1 || *(_DWORD *)(v29 + 8) == v12)
                    {
                      uint64_t v31 = *(void *)(*(void *)(v19 + 136) + 8 * *(int *)(*v27 + 12 * (int)v13) + 32);
                      uint64_t v32 = *(void *)(v31 + 48);
                      uint64_t v33 = *(void *)(v32 + 16);
                      if (v33)
                      {
                        uint64_t v34 = (void *)(v32 + 56);
                        while ((ValueMetadata *)*(v34 - 3) != &type metadata for MeshModel)
                        {
                          v34 += 5;
                          if (!--v33) {
                            goto LABEL_4;
                          }
                        }
                        sub_1B699F28C((uint64_t *)(*(void *)(v31 + 128) + *v34 + 16 * v30), v39, v19, v38, v11 | (v36 << 32), v14, v40, v37, v16, 0, v40, v35 | ((HIDWORD(v35) & 1) << 32));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_4:
      uint64_t result = swift_release();
LABEL_5:
      uint64_t v3 = v41;
      uint64_t v5 = v42;
LABEL_6:
      ++v4;
    }
    while (v4 != v3);
  }
  return result;
}

uint64_t sub_1B636051C@<X0>(long long *a1@<X8>)
{
  uint64_t v2 = swift_retain();
  sub_1B63606A4(v2, v13);
  swift_release();
  sub_1B63605F4((uint64_t)v13, (uint64_t)v14);
  sub_1B63605F4((uint64_t)v14, (uint64_t)v12);
  sub_1B63605F4((uint64_t)v14, (uint64_t)v15);
  uint64_t result = sub_1B6360688((uint64_t)v15);
  if (result == 1)
  {
    long long v4 = xmmword_1B6E4F370;
    long long v5 = xmmword_1B6E4F2E0;
    long long v6 = xmmword_1B6E4F320;
    long long v7 = xmmword_1B6E4F300;
    long long v8 = xmmword_1B6E4F300;
    long long v9 = xmmword_1B6E4F320;
    long long v10 = xmmword_1B6E4F2E0;
    long long v11 = xmmword_1B6E4F370;
  }
  else
  {
    long long v8 = v12[0];
    long long v9 = v12[1];
    long long v10 = v12[2];
    long long v11 = v12[3];
    long long v7 = v12[4];
    long long v6 = v12[5];
    long long v5 = v12[6];
    long long v4 = v12[7];
  }
  *a1 = v8;
  a1[1] = v9;
  a1[2] = v10;
  a1[3] = v11;
  a1[4] = v7;
  a1[5] = v6;
  a1[6] = v5;
  a1[7] = v4;
  return result;
}

uint64_t sub_1B63605F4(uint64_t a1, uint64_t a2)
{
  sub_1B62F9408(0, (unint64_t *)&unk_1EB980550, (uint64_t (*)(uint64_t))sub_1B6398940, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6360688(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

void sub_1B63606A4(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v4 = sub_1B636E9A8((uint64_t)&type metadata for FrameConstantsStorage);
  if (v6)
  {
    long long v7 = (const void *)(*(void *)(a1 + 16) + v4);
    uint64_t v8 = 32 * v5;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + 32 * v5 + 24));
    os_unfair_recursive_lock_unlock();
    memcpy(__dst, v7, 0x64BuLL);
    long long v15 = __dst[20];
    long long v16 = __dst[19];
    long long v13 = __dst[22];
    long long v14 = __dst[21];
    *(double *)&long long v9 = sub_1B63607C4();
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = v16;
    a2[5] = v15;
    a2[6] = v14;
    a2[7] = v13;
    sub_1B63607BC((uint64_t)a2);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + v8 + 24));
  }
  else
  {
    os_unfair_recursive_lock_unlock();
    sub_1B6B3BAA4((uint64_t)__dst);
    sub_1B63605F4((uint64_t)__dst, (uint64_t)a2);
  }
}

uint64_t sub_1B63607BC(uint64_t result)
{
  *(unsigned char *)(result + 128) = 0;
  return result;
}

double sub_1B63607C4()
{
  *(void *)&double result = vmlaq_f32(vmlaq_f32(vmlaq_f32(v0[3], (float32x4_t)0, v0[4]), (float32x4_t)0, v0[5]), (float32x4_t)0, v0[6]).u64[0];
  return result;
}

uint64_t sub_1B6360828(unint64_t a1)
{
  unint64_t v3 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t result = 0;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((v3 == -1 || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == v3)
      && (char v6 = (int *)(v5 + 12 * (int)a1),
          uint64_t v7 = *(void *)(*(void *)(v1 + 136) + 8 * *v6 + 32),
          uint64_t v8 = *(void *)(v7 + 48),
          (uint64_t v9 = *(void *)(v8 + 16)) != 0))
    {
      uint64_t v10 = *((__int16 *)v6 + 2);
      for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Scale2; i += 5)
      {
        if (!--v9) {
          return 0;
        }
      }
      return *(void *)(*(void *)(v7 + 128) + *i + 8 * v10);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1B6360908(uint64_t a1)
{
  return sub_1B62E9908(a1, (uint64_t (*)(void))sub_1B633F6A8);
}

uint64_t sub_1B6360920(unint64_t a1)
{
  return sub_1B62F45F8(a1, (uint64_t (*)(void))sub_1B633CCAC);
}

uint64_t sub_1B6360938(unint64_t a1)
{
  return sub_1B62F45F8(a1, (uint64_t (*)(void))sub_1B6359B30);
}

uint64_t sub_1B6360954(uint64_t result, uint64_t a2)
{
  if ((*(unsigned char *)(result + OBJC_IVAR____TtC3VFX13EntityManager_isInPrepare) & 1) == 0)
  {
    if (*(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
    {
      MEMORY[0x1F4188790](result, a2);
      unint64_t v3 = *(void **)(v2 + 176);
      swift_retain();
      swift_retain();
      sub_1B636E6CC((uint64_t)&type metadata for ShadowState, (uint64_t)&off_1F0F58468, v3, sub_1B6372CFC);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B6360A44(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  char v6 = (uint64_t *)a1[11];
  uint64_t v5 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v42 = a1[2];
  uint64_t v49 = a1[1];
  uint64_t result = sub_1B62C9024((uint64_t)&type metadata for TextureFileAsset, (uint64_t)&off_1F0F6F8C8, v6, v5, v7, v42);
  uint64_t v9 = (void *)result;
  if (v6)
  {
    if (v7)
    {
      uint64_t v10 = a1[3];
      uint64_t v39 = *a1;
      uint64_t v11 = v49;
      while (1)
      {
        uint64_t v12 = v3;
        uint64_t v14 = *v6++;
        uint64_t v13 = v14;
        uint64_t v44 = v39;
        uint64_t v45 = v11;
        uint64_t v46 = v42;
        uint64_t v47 = v10;
        uint64_t v48 = v14;
        sub_1B6362CBC((uint64_t)v43);
        char v15 = *(unsigned char *)(v11 + 184);
        uint64_t v16 = swift_retain();
        if (v15) {
          break;
        }
        uint64_t v17 = *(unsigned int *)(*(void *)(v11 + 168) + 4 * v13);
        uint64_t v18 = *(unsigned int *)(*(void *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v17 + 8);
        swift_release();
        uint64_t v11 = v49;
        swift_retain();
        sub_1B63627F8(v17 | (v18 << 32), a2, v9, (uint64_t)v43, a2);
        swift_release();
        char v19 = *(unsigned char *)(v11 + 184);
        uint64_t v20 = swift_retain();
        if (v19) {
          break;
        }
        uint64_t v21 = *(unsigned int *)(*(void *)(v11 + 168) + 4 * v13);
        uint64_t v22 = *(unsigned int *)(*(void *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v21 + 8);
        swift_release();
        swift_retain();
        sub_1B6360D88(v21 | (v22 << 32), a2, v9, (uint64_t)v43, a2);
        uint64_t v3 = v12;
        uint64_t result = swift_release();
        ++v10;
        v9 += 6;
        if (!--v7) {
          return result;
        }
      }
LABEL_14:
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
    }
  }
  else
  {
    uint64_t v23 = a1[6];
    uint64_t v38 = a1[7];
    if (v23 != v38)
    {
      uint64_t v24 = a1[3];
      uint64_t v37 = *a1;
      char v25 = (void *)(result + 48 * v23);
      uint64_t v26 = v49;
      while (1)
      {
        uint64_t v27 = v3;
        uint64_t v44 = v37;
        uint64_t v45 = v26;
        uint64_t v46 = v42;
        uint64_t v47 = v24;
        uint64_t v40 = v24;
        uint64_t v48 = v23;
        sub_1B6362CBC((uint64_t)v43);
        char v28 = *(unsigned char *)(v26 + 184);
        uint64_t v29 = swift_retain();
        if (v28) {
          break;
        }
        uint64_t v30 = *(unsigned int *)(*(void *)(v26 + 168) + 4 * v23);
        uint64_t v31 = *(unsigned int *)(*(void *)(v29 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v30 + 8);
        swift_release();
        uint64_t v26 = v49;
        swift_retain();
        sub_1B63627F8(v30 | (v31 << 32), a2, v25, (uint64_t)v43, a2);
        swift_release();
        char v32 = *(unsigned char *)(v26 + 184);
        uint64_t v33 = swift_retain();
        if (v32) {
          break;
        }
        uint64_t v34 = *(unsigned int *)(*(void *)(v26 + 168) + 4 * v23);
        uint64_t v35 = v23 + 1;
        uint64_t v36 = *(unsigned int *)(*(void *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v34 + 8);
        swift_release();
        swift_retain();
        sub_1B6360D88(v34 | (v36 << 32), a2, v25, (uint64_t)v43, a2);
        uint64_t v3 = v27;
        uint64_t result = swift_release();
        uint64_t v24 = v40 + 1;
        v25 += 6;
        uint64_t v23 = v35;
        if (v38 == v35) {
          return result;
        }
      }
      goto LABEL_14;
    }
  }
  return result;
}

uint64_t sub_1B6360D88(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6360E34(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_WORD *)(v5 + 12 * (int)a1 + 4), 8, a3, a4, a5) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6360E34(uint64_t a1, __int16 a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = (void *)(v6 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureGPURuntime; i += 5)
  {
    if (!--v7) {
      return 0;
    }
  }
  sub_1B6360EAC((uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6);
  return 1;
}

uint64_t sub_1B6360EAC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v27 = a3;
  uint64_t v6 = sub_1B6E30F48();
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v12 = (void *)a2[4];
  if (v12)
  {
    uint64_t v13 = a2[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v22 = v6;
    char v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8);
    swift_bridgeObjectRetain();
    id v16 = v12;
    v15(v10, v11, ObjectType, v13);
    uint64_t v6 = v22;
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v22 = v10;
    uint64_t v17 = v25;
    uint64_t v18 = v26;
    int v19 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v25 = 0;
    swift_retain();
    sub_1B6B33E34(v19, &v25, v17, v18);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1B6E30E48();
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1B636146C((uint64_t)v9, v27, 1, 1, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
  uint64_t result = swift_unknownObjectRelease();
  *a1 = v20;
  return result;
}

uint64_t sub_1B6361178(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v30 = a1;
  int v32 = a5;
  uint64_t v36 = a4;
  uint64_t v33 = a3;
  uint64_t v8 = sub_1B6E30F48();
  uint64_t v31 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a2[2];
  uint64_t v12 = a2[3];
  uint64_t v14 = (void *)a2[4];
  if (v14)
  {
    uint64_t v29 = (char *)a6;
    uint64_t v15 = a2[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = v8;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8);
    swift_bridgeObjectRetain();
    id v18 = v14;
    uint64_t v19 = v15;
    a6 = (uint64_t)v29;
    v17(v13, v12, ObjectType, v19);
    uint64_t v8 = v28;

    uint64_t v20 = (uint64_t)v11;
  }
  else
  {
    uint64_t v29 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v21 = v34;
    uint64_t v22 = v35;
    int v23 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v34 = 0;
    swift_retain();
    sub_1B6B33E34(v23, &v34, v21, v22);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v20 = (uint64_t)v29;
    sub_1B6E30E48();
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1B636146C(v20, v33, v36, v32 & 1, a6);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v20, v8);
  uint64_t v25 = v30;
  uint64_t result = swift_unknownObjectRelease();
  *uint64_t v25 = v24;
  return result;
}

uint64_t sub_1B636146C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v46 = a3;
  uint64_t v9 = sub_1B6E30F48();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9, v12);
  uint64_t v13 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = MEMORY[0x1F4188790](v14, v15);
  uint64_t v19 = (char *)&v41 - v16;
  uint64_t v20 = *(void *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (!v20) {
    return 0;
  }
  int v43 = a4;
  uint64_t v47 = v20;
  uint64_t v21 = a5;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  uint64_t v23 = a1;
  uint64_t v24 = v17;
  v22((char *)&v41 - v16, v23, v17, v18);
  uint64_t v42 = *(void *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
  uint64_t v44 = *(void *)(v47 + 240);
  uint64_t v48 = v19;
  ((void (*)(char *, char *, uint64_t))v22)(v13, v19, v24);
  unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v26 = (v11 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 65) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  unint64_t v29 = v28 + v25;
  uint64_t v30 = v10;
  uint64_t v31 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  uint64_t v45 = v24;
  v31(v29, v13, v24);
  int v32 = (_OWORD *)(v28 + v26);
  uint64_t v33 = v47;
  long long v34 = *(_OWORD *)(a2 + 16);
  *int v32 = *(_OWORD *)a2;
  v32[1] = v34;
  v32[2] = *(_OWORD *)(a2 + 32);
  *(_OWORD *)((char *)v32 + 42) = *(_OWORD *)(a2 + 42);
  *(void *)(v28 + v27) = v33;
  *(void *)(v28 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8)) = v42;
  if (v43)
  {
    if (v46)
    {
      int v35 = 2;
      swift_retain_n();
      swift_retain();
      swift_release();
      uint64_t v36 = 0;
      uint64_t v28 = 0;
      uint64_t v37 = 0;
    }
    else
    {
      swift_retain_n();
      swift_retain();
      uint64_t v37 = 0;
      int v35 = 0;
      uint64_t v36 = sub_1B63B7E14;
    }
  }
  else
  {
    swift_retain_n();
    swift_retain();
    int v35 = 1;
    uint64_t v36 = sub_1B63B7E14;
    uint64_t v37 = v46;
  }
  sub_1B63619EC(1, (uint64_t *)a2, (uint64_t)v36, v28, v37, v35, v49);
  sub_1B63619A4((uint64_t)v36, v28, v37, v35);
  swift_release();
  sub_1B6355BE8((uint64_t)v49, (uint64_t)&v50, &qword_1EB97D5C0, (uint64_t)&type metadata for TextureCache.Texture);
  if (v51 >> 1 == 0xFFFFFFFF && !(v52 >> 17) && !HIDWORD(v53))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v48, v45);
    swift_release();
    return 0;
  }
  sub_1B63619BC(&v50, (uint64_t)v54);
  sub_1B63619BC(v54, (uint64_t)v55);
  uint64_t v40 = v48;
  if ((v56 & 0x8000000000000000) == 0)
  {
    uint64_t v38 = v55[0];
    swift_release();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v45);
    return v38;
  }
  v56 &= ~0x8000000000000000;
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B63619A4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 1u) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B63619BC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  *(_OWORD *)(a2 + 32) = a1[2];
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  long long v5 = a1[4];
  long long v6 = a1[5];
  long long v7 = a1[6];
  *(void *)(a2 + 112) = *((void *)a1 + 14);
  *(_OWORD *)(a2 + 80) = v6;
  *(_OWORD *)(a2 + 96) = v7;
  *(_OWORD *)(a2 + 64) = v5;
  return a2;
}

uint64_t sub_1B63619EC@<X0>(char a1@<W0>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, void *a7@<X8>)
{
  void (*v71)(long long *__return_ptr, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  unsigned __int8 *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  long long v93;
  long long v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unsigned __int8 v118;
  long long v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;

  long long v102 = a6;
  uint64_t v100 = a4;
  uint64_t v101 = a5;
  uint64_t v99 = a3;
  uint64_t v92 = a7;
  LODWORD(v95) = a1 & 1;
  uint64_t v96 = sub_1B6E30F48();
  uint64_t v10 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96, v11);
  uint64_t v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TextureCache.TextureKey();
  long long v89 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v15);
  long long v87 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v91 = (uint64_t)&v83 - v19;
  MEMORY[0x1F4188790](v20, v21);
  long long v88 = (uint64_t)&v83 - v22;
  int v90 = v23;
  MEMORY[0x1F4188790](v24, v25);
  unint64_t v27 = (unsigned __int8 *)&v83 - v26;
  sub_1B6E30DB8();
  uint64_t v28 = *a2;
  uint64_t v98 = v7;
  if ((a1 & 1) == 0)
  {
    uint64_t v29 = v28 & 0x9C;
LABEL_5:
    long long v30 = *(_OWORD *)(a2 + 1);
    char v31 = *((unsigned char *)a2 + 24);
    uint64_t v93 = *((_OWORD *)a2 + 2);
    uint64_t v94 = v30;
    uint64_t v32 = a2[6];
    __int16 v33 = *((_WORD *)a2 + 28);
    goto LABEL_7;
  }
  if ((v28 & 0x100) == 0)
  {
    uint64_t v29 = v28 & 0x1FC;
    goto LABEL_5;
  }
  uint64_t v32 = 0;
  uint64_t v29 = v28 & 0x104;
  uint64_t v93 = 0u;
  uint64_t v94 = 0u;
  __int16 v33 = 768;
  char v31 = -2;
LABEL_7:
  uint64_t v34 = v96;
  *unint64_t v27 = v95;
  (*(void (**)(unsigned __int8 *, char *, uint64_t))(v10 + 32))(&v27[*(int *)(v14 + 20)], v13, v34);
  int v35 = &v27[*(int *)(v14 + 24)];
  *(void *)int v35 = v29;
  *(_OWORD *)(v35 + 8) = v94;
  v35[24] = v31;
  *((_OWORD *)v35 + 2) = v93;
  *((void *)v35 + 6) = v32;
  *((_WORD *)v35 + 28) = v33;
  BOOL v37 = v102 != 2 || (v100 | v99 | v101) != 0;
  uint64_t v39 = v97;
  uint64_t v38 = v98;
  sub_1B63623A8((uint64_t)v27, v37, v102 != 1, (uint64_t)&v103);
  if (v39) {
    return sub_1B63677B8((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  }
  uint64_t v41 = v106;
  unint64_t v42 = v108;
  uint64_t v43 = v115;
  unint64_t v44 = v116;
  uint64_t v45 = v117;
  if (v106 >> 1 != 0xFFFFFFFF || v108 >> 17 || HIDWORD(v116))
  {
    long long v87 = v114;
    long long v88 = v113;
    long long v89 = v112;
    int v90 = v111;
    *(void *)&uint64_t v93 = v110;
    *(void *)&uint64_t v94 = v109;
    uint64_t v95 = v107;
    uint64_t v96 = v105;
    uint64_t v97 = v104;
    long long v58 = v103;
LABEL_45:
    uint64_t result = sub_1B63677B8((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    goto LABEL_46;
  }
  unsigned __int8 v46 = v102;
  if (v102 != 1)
  {
    uint64_t v47 = v38;
    if (v118)
    {
      if (!(_BYTE)v102)
      {
        sub_1B637FF3C(v27);
        sub_1B63623A8((uint64_t)v27, 0, 1, (uint64_t)&v103);
        long long v58 = v103;
        uint64_t v41 = v106;
        uint64_t v96 = v105;
        uint64_t v97 = v104;
        unint64_t v42 = v108;
        uint64_t v95 = v107;
        *(void *)&uint64_t v94 = v109;
        *(void *)&uint64_t v93 = v110;
        long long v89 = v112;
        int v90 = v111;
        uint64_t v43 = v115;
        long long v87 = v114;
        long long v88 = v113;
        unint64_t v44 = v116;
        uint64_t v45 = v117;
        uint64_t result = sub_1B63677B8((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
LABEL_46:
        uint64_t v78 = v92;
        uint64_t v79 = v97;
        *uint64_t v92 = v58;
        v78[1] = v79;
        v78[2] = v96;
        v78[3] = v41;
        v78[4] = v95;
        v78[5] = v42;
        unint64_t v80 = v93;
        v78[6] = v94;
        v78[7] = v80;
        uint64_t v81 = v89;
        v78[8] = v90;
        v78[9] = v81;
        uint64_t v82 = v87;
        v78[10] = v88;
        v78[11] = v82;
        v78[12] = v43;
        v78[13] = v44;
        v78[14] = v45;
        return result;
      }
    }
    else if (!(_BYTE)v102)
    {
LABEL_41:
      LODWORD(v97) = v46;
      swift_unownedRetainStrong();
      uint64_t v61 = v99;
      uint64_t v62 = v100;
      uint64_t v63 = v101;
      sub_1B6362390(v99, v100, v101, v46);
      swift_unownedRetain();
      swift_unownedRetain();
      sub_1B6362390(v61, v62, v63, v46);
      swift_unownedRelease();
      swift_unownedRetain();
      swift_release();
      long long v86 = v27;
      uint64_t v64 = v88;
      sub_1B63675F4((uint64_t)v27, v88, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      sub_1B63675F4(v64, v91, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      unint64_t v65 = (*(unsigned __int8 *)(v89 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
      long long v66 = (void *)swift_allocObject();
      v66[2] = v61;
      v66[3] = v62;
      v66[4] = v47;
      sub_1B6365FC8(v64, (uint64_t)v66 + v65, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      if (v97 == 1)
      {
        long long v67 = *(void **)(v47 + 56);
        uint64_t v68 = swift_allocObject();
        *(void *)(v68 + 16) = sub_1B63BB7EC;
        *(void *)(v68 + 24) = v66;
        uint64_t v69 = v101;
        sub_1B6362390(v99, v100, v101, v102);
        swift_unownedRetain();
        id v70 = v67;
        swift_retain();
        sub_1B6397D80((uint64_t)sub_1B63BB378, v68);
        swift_release();

        long long v84 = 0;
        uint64_t v85 = 0;
        uint64_t v96 = 0;
        uint64_t v97 = 0;
        uint64_t v95 = 0;
        unint64_t v42 = 0;
        *(void *)&uint64_t v94 = 0;
        *(void *)&uint64_t v93 = 0;
        long long v89 = 0;
        int v90 = 0;
        long long v87 = 0;
        long long v88 = 0;
        unint64_t v44 = 0;
        uint64_t v83 = 0;
        uint64_t v41 = 0x1FFFFFFFELL;
      }
      else
      {
        unint64_t v71 = (void (*)(long long *__return_ptr, uint64_t))v99;
        uint64_t v72 = v101;
        sub_1B6362390(v99, v100, v101, v102);
        uint64_t v73 = swift_unownedRetain();
        v71(&v119, v73);
        uint64_t v85 = (void *)v119;
        uint64_t v41 = v121;
        uint64_t v96 = v120;
        uint64_t v97 = *((void *)&v119 + 1);
        unint64_t v42 = v123;
        uint64_t v95 = v122;
        *(void *)&uint64_t v94 = v124;
        *(void *)&uint64_t v93 = v125;
        long long v89 = v127;
        int v90 = v126;
        long long v87 = v129;
        long long v88 = v128;
        uint64_t v69 = v72;
        unint64_t v44 = v131;
        uint64_t v83 = v132;
        long long v84 = v130;
        swift_unownedRetainStrong();
        sub_1B6BCAB5C(&v119, v91);
        swift_release();
      }
      swift_release();
      unint64_t v74 = v99;
      uint64_t v75 = v69;
      uint64_t v76 = v69;
      uint64_t v77 = v102;
      sub_1B63619A4(v99, v100, v76, v102);
      swift_unownedRelease();
      sub_1B63677B8(v91, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      swift_unownedRelease();
      sub_1B63619A4(v74, v100, v75, v77);
      long long v58 = v85;
      unint64_t v27 = v86;
      uint64_t v45 = v83;
      uint64_t v43 = v84;
      goto LABEL_45;
    }
    goto LABEL_31;
  }
  LODWORD(v97) = v118;
  uint64_t v47 = v38;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v38 + 48));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v49 = *(void **)(v38 + 64);
  uint64_t v103 = v49;
  *(void *)(v47 + 64) = 0x8000000000000000;
  uint64_t v50 = v101;
  unint64_t v52 = sub_1B62C1A30(v101);
  char v53 = v51;
  uint64_t v54 = v49[2] + ((v51 & 1) == 0);
  if (v49[3] >= v54)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      char v57 = v97;
      if (v51) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_1B6AD634C();
      char v57 = v97;
      if (v53) {
        goto LABEL_29;
      }
    }
LABEL_33:
    uint64_t v59 = 0;
LABEL_34:
    int8x16_t v133 = v59;
    sub_1B6292C1C((uint64_t)v27);
    if (v133)
    {
      uint64_t v60 = v103;
      if (v53) {
        *(void *)(v103[7] + 8 * v52) = v133;
      }
      else {
        sub_1B636A55C(v52, v101, v133, v103);
      }
    }
    else
    {
      uint64_t v60 = v103;
      if (v53) {
        sub_1B628A428(v52, (uint64_t)v103);
      }
    }
    *(void *)(v47 + 64) = v60;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v47 + 48));
    unsigned __int8 v46 = v102;
    if ((v57 & 1) == 0) {
      goto LABEL_41;
    }
LABEL_31:
    long long v58 = 0;
    uint64_t v96 = 0;
    uint64_t v97 = 0;
    uint64_t v95 = 0;
    unint64_t v42 = 0;
    *(void *)&uint64_t v94 = 0;
    *(void *)&uint64_t v93 = 0;
    long long v89 = 0;
    int v90 = 0;
    long long v87 = 0;
    long long v88 = 0;
    uint64_t v43 = 0;
    unint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v41 = 0x1FFFFFFFELL;
    goto LABEL_45;
  }
  sub_1B6AC670C(v54, isUniquelyReferenced_nonNull_native);
  unint64_t v55 = sub_1B62C1A30(v50);
  if ((v53 & 1) == (v56 & 1))
  {
    unint64_t v52 = v55;
    char v57 = v97;
    if ((v53 & 1) == 0) {
      goto LABEL_33;
    }
LABEL_29:
    uint64_t v59 = *(void *)(v103[7] + 8 * v52);
    goto LABEL_34;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6362390(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 1u) {
    return swift_retain();
  }
  return result;
}

void sub_1B63623A8(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6 = v4;
  uint64_t v11 = type metadata accessor for TextureCache.TextureKey();
  MEMORY[0x1F4188790](v11 - 8, v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6366E24(v6, a2, a3, a1, (uint64_t)v35);
  if (!v5)
  {
    if (v36 == 255)
    {
      sub_1B6380D80((uint64_t)v35, (unint64_t *)&unk_1EB97E330, (uint64_t)&type metadata for TextureCache.CacheEntry);
      uint64_t v19 = 0;
      char v20 = 0;
      long long v21 = xmmword_1B6EB0F50;
      long long v22 = 0uLL;
    }
    else
    {
      sub_1B6366650((uint64_t)v35, (uint64_t)v37);
      sub_1B6380BC4(v37, (uint64_t)v35);
      int v15 = v36;
      sub_1B6367968((uint64_t)v35);
      if (v15)
      {
LABEL_8:
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 48));
        sub_1B63675F4(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
        uint64_t v17 = sub_1B6366A74(v35, (uint64_t)v14);
        if (*(unsigned __int8 *)(v18 + 152) == 255)
        {
          ((void (*)(id *, void))v17)(v35, 0);
          uint64_t v19 = 0;
          long long v33 = 0u;
          long long v34 = xmmword_1B6EB0F50;
          long long v31 = 0u;
          long long v32 = 0u;
          long long v29 = 0u;
          long long v30 = 0u;
          long long v28 = 0u;
        }
        else
        {
          sub_1B6380380(v38);
          long long v33 = v38[0];
          long long v34 = v38[1];
          long long v31 = v38[3];
          long long v32 = v38[2];
          long long v29 = v38[5];
          long long v30 = v38[4];
          long long v28 = v38[6];
          uint64_t v19 = v39;
          ((void (*)(id *, void))v17)(v35, 0);
        }
        sub_1B63677B8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 48));
        sub_1B63800F4((uint64_t)v37);
        char v20 = 0;
        long long v22 = v33;
        long long v21 = v34;
        long long v24 = v31;
        long long v23 = v32;
        long long v26 = v29;
        long long v25 = v30;
        long long v27 = v28;
        goto LABEL_15;
      }
      if (a2 & 1) != 0 && (a3)
      {
        sub_1B6380BC4(v37, (uint64_t)v35);
        if (v36)
        {
          sub_1B6367968((uint64_t)v35);
          sub_1B6E32BE8();
          __break(1u);
          return;
        }
        id v16 = v35[0];
        sub_1B6E321D8();

        goto LABEL_8;
      }
      sub_1B63800F4((uint64_t)v37);
      uint64_t v19 = 0;
      long long v21 = xmmword_1B6EB0F50;
      long long v22 = 0uLL;
      char v20 = 1;
    }
    long long v23 = 0uLL;
    long long v24 = 0uLL;
    long long v25 = 0uLL;
    long long v26 = 0uLL;
    long long v27 = 0uLL;
LABEL_15:
    *(_OWORD *)a4 = v22;
    *(_OWORD *)(a4 + 16) = v21;
    *(_OWORD *)(a4 + 32) = v23;
    *(_OWORD *)(a4 + 48) = v24;
    *(_OWORD *)(a4 + 64) = v25;
    *(_OWORD *)(a4 + 80) = v26;
    *(_OWORD *)(a4 + 96) = v27;
    *(void *)(a4 + 112) = v19;
    *(unsigned char *)(a4 + 120) = v20;
  }
}

uint64_t sub_1B63626C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E30DE8();
  uint64_t v5 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x1F4188790](v4, v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = a1;
  v11[1] = a2;
  (*(void (**)(char *, void, uint64_t, double))(v5 + 104))(v9, *MEMORY[0x1E4F276B8], v4, v7);
  sub_1B633AF88();
  sub_1B6E30F38();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
}

uint64_t sub_1B63627F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v5 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B63628A4(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v5 + 12 * (int)a1) + 32), *(_WORD *)(v5 + 12 * (int)a1 + 4), 120, a3, a4, a5) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B63628A4(uint64_t a1, __int16 a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return 0;
  }
  for (uint64_t i = (void *)(v6 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureCPURuntime; i += 5)
  {
    if (!--v7) {
      return 0;
    }
  }
  sub_1B6D04438((char *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6);
  return 1;
}

uint64_t sub_1B636291C(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  char v39 = a4 & 1;
  uint64_t v5 = (uint64_t *)a1[11];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[1];
  uint64_t v38 = a1[2];
  uint64_t result = sub_1B62C9024((uint64_t)&type metadata for TextureFileAsset, (uint64_t)&off_1F0F6F8C8, v5, a1[12], v6, v38);
  uint64_t v9 = (void *)result;
  if (v5)
  {
    if (v6)
    {
      uint64_t v10 = (uint64_t *)a1[3];
      uint64_t v35 = *a1;
      while (1)
      {
        uint64_t v41 = v6;
        uint64_t v11 = *v5;
        uint64_t v49 = v5 + 1;
        uint64_t v44 = v35;
        uint64_t v45 = v7;
        uint64_t v46 = v38;
        uint64_t v47 = v10;
        uint64_t v48 = v11;
        sub_1B6362CBC((uint64_t)v43);
        char v12 = *(unsigned char *)(v7 + 184);
        uint64_t v13 = swift_retain();
        if (v12) {
          break;
        }
        uint64_t v14 = *(unsigned int *)(*(void *)(v7 + 168) + 4 * v11);
        uint64_t v15 = v7;
        uint64_t v16 = *(unsigned int *)(*(void *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v14 + 8);
        swift_release();
        swift_retain();
        sub_1B63631AC(v14 | (v16 << 32), a2, v9, (uint64_t)v43, a3, v39, a2);
        swift_release();
        char v17 = *(unsigned char *)(v15 + 184);
        uint64_t v18 = swift_retain();
        if (v17) {
          break;
        }
        uint64_t v19 = *(unsigned int *)(*(void *)(v15 + 168) + 4 * v11);
        uint64_t v20 = *(unsigned int *)(*(void *)(v18 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v19 + 8);
        swift_release();
        swift_retain();
        sub_1B6363070(v19 | (v20 << 32), a2, v9, (uint64_t)v43, a3, v39, a2);
        uint64_t result = swift_release();
        uint64_t v10 = (uint64_t *)((char *)v10 + 1);
        v9 += 6;
        --v6;
        uint64_t v7 = v15;
        uint64_t v5 = v49;
        if (v41 == 1) {
          return result;
        }
      }
LABEL_14:
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
    }
  }
  else
  {
    uint64_t v21 = a1[6];
    uint64_t v42 = a1[7];
    if (v21 != v42)
    {
      long long v22 = (uint64_t *)a1[3];
      uint64_t v36 = *a1;
      for (uint64_t i = (void *)(result + 48 * v21); ; i += 6)
      {
        uint64_t v44 = v36;
        uint64_t v45 = v7;
        uint64_t v46 = v38;
        uint64_t v47 = v22;
        uint64_t v49 = v22;
        uint64_t v48 = v21;
        sub_1B6362CBC((uint64_t)v43);
        char v24 = *(unsigned char *)(v7 + 184);
        uint64_t v25 = swift_retain();
        if (v24) {
          break;
        }
        uint64_t v26 = v7;
        uint64_t v27 = *(unsigned int *)(*(void *)(v7 + 168) + 4 * v21);
        uint64_t v28 = *(unsigned int *)(*(void *)(v25 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v27 + 8);
        swift_release();
        swift_retain();
        sub_1B63631AC(v27 | (v28 << 32), a2, i, (uint64_t)v43, a3, v39, a2);
        swift_release();
        char v29 = *(unsigned char *)(v26 + 184);
        uint64_t v30 = swift_retain();
        if (v29) {
          break;
        }
        uint64_t v31 = *(unsigned int *)(*(void *)(v26 + 168) + 4 * v21);
        uint64_t v32 = v21 + 1;
        uint64_t v33 = *(unsigned int *)(*(void *)(v30 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v31 + 8);
        swift_release();
        uint64_t v34 = v31 | (v33 << 32);
        uint64_t v7 = v26;
        swift_retain();
        sub_1B6363070(v34, a2, i, (uint64_t)v43, a3, v39, a2);
        uint64_t result = swift_release();
        long long v22 = (uint64_t *)((char *)v49 + 1);
        uint64_t v21 = v32;
        if (v42 == v32) {
          return result;
        }
      }
      goto LABEL_14;
    }
  }
  return result;
}

uint64_t sub_1B6362CBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 8);
  sub_1B6345398(*(void *)(v4 + 40), (uint64_t)&type metadata for TextureRequireCPURepresentation, &v24);
  uint64_t v5 = v24;
  sub_1B6345398(*(void *)(v4 + 40), (uint64_t)&type metadata for TextureRequireGPURepresentation, &v24);
  if ((_BYTE)v24) {
    v5 |= 2uLL;
  }
  sub_1B6345398(*(void *)(v4 + 40), (uint64_t)&type metadata for TextureRequireNonSRGB, &v24);
  if ((_BYTE)v24) {
    v5 |= 4uLL;
  }
  sub_1B6345398(*(void *)(v4 + 40), (uint64_t)&type metadata for TextureRequireUnpremultiply, &v24);
  if ((_BYTE)v24) {
    v5 |= 8uLL;
  }
  sub_1B6345398(*(void *)(v4 + 40), (uint64_t)&type metadata for TextureRequireCubemap, &v24);
  if ((_BYTE)v24) {
    v5 |= 0x10uLL;
  }
  sub_1B6345398(*(void *)(v4 + 40), (uint64_t)&type metadata for TextureRequireMipmap, &v24);
  if ((_BYTE)v24) {
    v5 |= 0x20uLL;
  }
  sub_1B6345398(*(void *)(v4 + 40), (uint64_t)&type metadata for TextureRequireMipmapGeneration, &v24);
  if ((_BYTE)v24) {
    v5 |= 0x40uLL;
  }
  sub_1B6345398(*(void *)(v4 + 40), (uint64_t)&type metadata for TextureRequirePremultiplyWithLinearAlpha, &v24);
  if ((_BYTE)v24) {
    uint64_t v6 = v5 | 0x80;
  }
  else {
    uint64_t v6 = v5;
  }
  sub_1B6345398(*(void *)(v4 + 40), (uint64_t)&type metadata for TextureRequireIOSurface, &v24);
  if (v24 == 1)
  {
    v6 |= 0x100uLL;
    uint64_t v7 = v6 & 0x106;
    if (v7 != v6)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v24 = 0;
      unint64_t v25 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      uint64_t v24 = 0x20666F20656D6F53;
      unint64_t v25 = 0xE800000000000000;
      sub_1B6CF2464(v6);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v8 = v24;
      uint64_t v9 = v25;
      int v10 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v24 = 0;
      swift_retain();
      sub_1B6B33E34(v10, &v24, v8, v9);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v6 = v7;
    }
  }
  uint64_t v11 = *(void *)(v2 + 32);
  uint64_t v12 = sub_1B62C91B8((uint64_t)&type metadata for TextureRequireSizeLimit);
  if (v13)
  {
    uint64_t v16 = 0;
    uint64_t v15 = 0;
    char v17 = -2;
  }
  else
  {
    uint64_t v14 = v12 + 24 * v11;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    char v17 = *(unsigned char *)(v14 + 16);
  }
  uint64_t result = sub_1B62C91B8((uint64_t)&type metadata for TextureRequireAnimationRepresentation);
  if (v19)
  {
    uint64_t v22 = 0;
    long long v21 = 0uLL;
    __int16 v23 = 768;
  }
  else
  {
    uint64_t v20 = result + 32 * v11;
    long long v21 = *(_OWORD *)v20;
    uint64_t v22 = *(void *)(v20 + 16);
    __int16 v23 = *(unsigned __int8 *)(v20 + 24) | (*(unsigned __int8 *)(v20 + 25) << 8);
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v15;
  *(void *)(a1 + 16) = v16;
  *(unsigned char *)(a1 + 24) = v17;
  *(_OWORD *)(a1 + 32) = v21;
  *(void *)(a1 + 48) = v22;
  *(_WORD *)(a1 + 56) = v23;
  return result;
}

uint64_t sub_1B6363070(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v7 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6363128(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(_WORD *)(v7 + 12 * (int)a1 + 4), 8, a3, a4, a5, a6 & 1, a7) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6363128(uint64_t a1, __int16 a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureGPURuntime; i += 5)
  {
    if (!--v9) {
      return 0;
    }
  }
  sub_1B6361178((uint64_t *)(*(void *)(a1 + 128) + *i + a2 * a3), a4, a5, a6, a7 & 1, a8);
  return 1;
}

uint64_t sub_1B63631AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a1 != 0xFFFFFFFFLL
    && a1 << 32 >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8)
    && ((uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a1) == -1)
     || *(_DWORD *)(v7 + 12 * (int)a1 + 8) == HIDWORD(a1)))
  {
    return sub_1B6363264(*(void *)(*(void *)(a2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32), *(_WORD *)(v7 + 12 * (int)a1 + 4), 120, a3, a4, a5, a6 & 1, a7) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1B6363264(uint64_t a1, __int16 a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  for (uint64_t i = (void *)(v8 + 56); (ValueMetadata *)*(i - 3) != &type metadata for TextureCPURuntime; i += 5)
  {
    if (!--v9) {
      return 0;
    }
  }
  sub_1B6D040B8(*(void *)(a1 + 128) + *i + a2 * a3, a4, a5, a6, a7 & 1, a8);
  return 1;
}

uint64_t *sub_1B63632EC(uint64_t a1)
{
  uint64_t v2 = v1;
  long long v4 = *(_OWORD *)(v1 + 32);
  v63[0] = *(_OWORD *)(v1 + 16);
  v63[1] = v4;
  uint64_t v64 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v63, 0x200000000, v36);
  sub_1B62CA210((uint64_t)v36, (uint64_t)v56, (unint64_t *)&qword_1EB97DC50);
  if (v56[0])
  {
    if (v58 >= 1)
    {
      uint64_t v5 = v57;
      if (v57)
      {
        uint64_t v6 = v56[5];
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v7 = 48 * v5;
        uint64_t v8 = (uint64_t *)(v6 + 40);
        do
        {
          uint64_t v13 = *v8;
          uint64_t v14 = *(os_unfair_lock_s **)(*v8 + 376);
          swift_retain();
          os_unfair_lock_lock(v14);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
          int v15 = *(_DWORD *)(v13 + 24);
          swift_retain();
          *(void *)&long long v52 = 0;
          long long v50 = 0u;
          long long v51 = 0u;
          *(void *)&long long v46 = 0;
          long long v44 = 0u;
          long long v45 = 0u;
          int v16 = sub_1B637F628(v15, (uint64_t)&type metadata for EffectiveHiddenState, (uint64_t)&off_1F0F7FE50, 0, 0, (uint64_t)&v50, (uint64_t)&v44);
          swift_release();
          sub_1B6386458((uint64_t)&v44);
          sub_1B6386458((uint64_t)&v50);
          if (sub_1B63B4340(v16))
          {
            sub_1B66603E4(v16);
          }
          else
          {
            uint64_t v9 = *(void *)(v13 + 232);
            uint64_t v10 = *(void *)(v13 + 240);
            char v11 = *(unsigned char *)(v13 + 120);
            uint64_t v12 = *(unsigned int *)(v13 + 28);
            LOBYTE(v50) = *(unsigned char *)(v13 + 32);
            sub_1B628EEF4(v9, v10, v16, v11, v12 | ((unint64_t)v50 << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 376));
          swift_release();
          v8 += 6;
          v7 -= 48;
        }
        while (v7);
        sub_1B632F170(v36);
      }
    }
    sub_1B632F170(v36);
  }
  long long v17 = *(_OWORD *)(v2 + 72);
  v61[0] = *(_OWORD *)(v2 + 56);
  v61[1] = v17;
  uint64_t v62 = *(void *)(v2 + 88);
  sub_1B62C9DA8(a1, (uint64_t)v61, 0x200000000, v37);
  sub_1B62CA210((uint64_t)v37, (uint64_t)&v44, (unint64_t *)&qword_1EB97DC50);
  if ((void)v44)
  {
    long long v52 = v46;
    long long v53 = v47;
    long long v54 = v48;
    long long v55 = v49;
    long long v50 = v44;
    long long v51 = v45;
    sub_1B68458CC(0);
    sub_1B632F170(v37);
  }
  long long v18 = *(_OWORD *)(v2 + 112);
  v59[0] = *(_OWORD *)(v2 + 96);
  v59[1] = v18;
  uint64_t v60 = *(void *)(v2 + 128);
  sub_1B62C9DA8(a1, (uint64_t)v59, 0x200000000, v38);
  sub_1B62CA210((uint64_t)v38, (uint64_t)v43, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v43[0])
  {
    v43[8] = v43[2];
    v43[9] = v43[3];
    v43[10] = v43[4];
    v43[11] = v43[5];
    v43[6] = v43[0];
    void v43[7] = v43[1];
    sub_1B68458CC(1);
    sub_1B632F170(v38);
  }
  sub_1B62C9DA8(a1, (uint64_t)v59, 0x200000000, v39);
  uint64_t result = (uint64_t *)sub_1B62CA210((uint64_t)v39, (uint64_t)v40, (unint64_t *)&qword_1EB97DC50);
  if (v40[0])
  {
    if (v42 >= 1)
    {
      uint64_t v20 = v41;
      if (v41)
      {
        uint64_t v21 = v40[5];
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v22 = 48 * v20;
        __int16 v23 = (uint64_t *)(v21 + 40);
        do
        {
          uint64_t v28 = *v23;
          char v29 = *(os_unfair_lock_s **)(*v23 + 376);
          swift_retain();
          os_unfair_lock_lock(v29);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v28 + 344));
          int v30 = *(_DWORD *)(v28 + 24);
          swift_retain();
          uint64_t v35 = 0;
          memset(v34, 0, sizeof(v34));
          uint64_t v33 = 0;
          memset(v32, 0, sizeof(v32));
          int v31 = sub_1B637F628(v30, 0, 0, (uint64_t)&type metadata for EffectiveHiddenState, (uint64_t)&off_1F0F7FE50, (uint64_t)v34, (uint64_t)v32);
          swift_release();
          sub_1B6386458((uint64_t)v32);
          sub_1B6386458((uint64_t)v34);
          if (sub_1B63B4340(v31))
          {
            sub_1B66603E4(v31);
          }
          else
          {
            uint64_t v24 = *(void *)(v28 + 232);
            uint64_t v25 = *(void *)(v28 + 240);
            char v26 = *(unsigned char *)(v28 + 120);
            uint64_t v27 = *(unsigned int *)(v28 + 28);
            LOBYTE(v34[0]) = *(unsigned char *)(v28 + 32);
            sub_1B628EEF4(v24, v25, v31, v26, v27 | ((unint64_t)LOBYTE(v34[0]) << 32));
          }
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 376));
          swift_release();
          v23 += 6;
          v22 -= 48;
        }
        while (v22);
        sub_1B632F170(v39);
      }
    }
    return sub_1B632F170(v39);
  }
  return result;
}

uint64_t sub_1B63637A8()
{
  return type metadata accessor for EmitterShape.CPUSystem();
}

uint64_t type metadata accessor for EmitterShape.CPUSystem()
{
  return self;
}

const char *sub_1B63637EC()
{
  return "EmitterShape.CPU";
}

uint64_t sub_1B6363800()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = sub_1B633F784(0, v1 & ~(v1 >> 63), 0, MEMORY[0x1E4FBC860]);
  if (v1 >= 1)
  {
    long long v4 = (void *)thread_worker_index(&thread_worker_index, v3);
    uint64_t v6 = *(void *)(*(void *)(*(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues) + 8 * *v4 + 8)
                   + 32);
    ecs_stack_allocator_push_snapshot(v6);
    uint64_t v7 = ecs_stack_allocator_allocate(v6, 8 * v1, 4);
    uint64_t v8 = v0[7];
    if (v8)
    {
      uint64_t v34 = v6;
      uint64_t v35 = v2;
      uint64_t v9 = 0;
      uint64_t v10 = (unsigned int *)v0[5];
      uint64_t v33 = v7;
      uint64_t v36 = (char *)v7 + 4;
      BOOL v37 = &v10[12 * v8];
      do
      {
        char v11 = (uint64_t *)*((void *)v10 + 2);
        uint64_t v12 = *((void *)v10 + 5);
        if (v11)
        {
          uint64_t v13 = *((void *)v10 + 4);
          if (v13)
          {
            swift_retain();
            uint64_t v14 = &v36[8 * v9];
            while (1)
            {
              uint64_t v16 = *v11++;
              uint64_t v15 = v16;
              uint64_t v17 = swift_retain();
              if (*(unsigned char *)(v12 + 184)) {
                break;
              }
              int v18 = *(_DWORD *)(*(void *)(v12 + 168) + 4 * v15);
              int v19 = *(_DWORD *)(*(void *)(v17 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v18 + 8);
              swift_release();
              *((_DWORD *)v14 - 1) = v18;
              *(_DWORD *)uint64_t v14 = v19;
              ++v9;
              v14 += 8;
              if (!--v13) {
                goto LABEL_4;
              }
            }
LABEL_26:
            uint64_t result = sub_1B6E32BE8();
            __break(1u);
            return result;
          }
        }
        else
        {
          uint64_t v21 = *v10;
          uint64_t v20 = v10[1];
          if (v21 != v20)
          {
            swift_retain();
            uint64_t v22 = &v36[8 * v9];
            while (1)
            {
              uint64_t v23 = swift_retain();
              if (*(unsigned char *)(v12 + 184)) {
                goto LABEL_26;
              }
              int v24 = *(_DWORD *)(*(void *)(v12 + 168) + 4 * v21);
              uint64_t v25 = v21 + 1;
              int v26 = *(_DWORD *)(*(void *)(v23 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v24 + 8);
              swift_release();
              *((_DWORD *)v22 - 1) = v24;
              *(_DWORD *)uint64_t v22 = v26;
              ++v9;
              v22 += 8;
              uint64_t v21 = v25;
              if (v20 == v25)
              {
LABEL_4:
                swift_release();
                break;
              }
            }
          }
        }
        v10 += 12;
      }
      while (v10 != v37);
      if (v9)
      {
        uint64_t v2 = v35;
        unint64_t v27 = *((void *)v35 + 2);
        uint64_t v28 = 8 * v9;
        char v29 = v33;
        uint64_t v6 = v34;
        do
        {
          uint64_t v30 = *v29;
          unint64_t v31 = *((void *)v2 + 3);
          if (v27 >= v31 >> 1) {
            uint64_t v2 = sub_1B633F784(v31 > 1, v27 + 1, 1, v2);
          }
          ++v29;
          *((void *)v2 + 2) = v27 + 1;
          *(void *)&v2[8 * v27++ + 32] = v30;
          v28 -= 8;
        }
        while (v28);
      }
      else
      {
        uint64_t v6 = v34;
        uint64_t v2 = v35;
      }
    }
    ecs_stack_allocator_pop_snapshot(v6);
  }
  return (uint64_t)v2;
}

uint64_t sub_1B6363AA4(unsigned __int8 a1, uint64_t a2, __n128 a3)
{
  char v109 = (float *)ecs_stack_allocator_allocate(a2, 4 * *(void *)(v3 + 80), 4);
  if (a1 <= 6u && ((1 << a1) & 0x4C) != 0)
  {
    float v108 = -1.0;
    if (v114 < 1) {
      return (uint64_t)v109;
    }
  }
  else
  {
    float v108 = 1.0;
    if (v114 <= 0) {
      return (uint64_t)v109;
    }
  }
  uint64_t v113 = *(void *)(v115 + 56);
  if (v113)
  {
    uint64_t v5 = 0;
    __n128 v6 = a3;
    v6.n128_u32[3] = 0;
    float32x4_t v107 = (float32x4_t)v6;
    uint64_t v7 = *(void **)(v115 + 72);
    uint64_t v118 = v7[4];
    int v117 = *(unsigned __int8 *)(*(void *)(v115 + 64) + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v111 = *(void *)(v115 + 40);
    uint64_t v112 = *(void *)(v115 + 64);
    uint64_t v105 = v109 + 4;
    uint64_t v110 = a1;
    __asm { FMOV            V0.4S, #1.0 }
    float32x4_t v104 = _Q0;
    while (2)
    {
      uint64_t v116 = v5;
      uint64_t v13 = (unsigned int *)(v111 + 48 * v5);
      uint64_t v14 = *v13;
      uint64_t v119 = v13[1];
      uint64_t v15 = v13[2];
      uint64_t v16 = (uint64_t *)*((void *)v13 + 2);
      uint64_t v17 = *((void *)v13 + 3);
      uint64_t v19 = *((void *)v13 + 4);
      uint64_t v18 = *((void *)v13 + 5);
      if (v117)
      {
        uint64_t v20 = *(os_unfair_lock_s **)(v18 + 376);
        swift_retain();
        os_unfair_lock_lock(v20);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v118);
      sub_1B62D7F68((uint64_t)(v7 + 6), (uint64_t)v122, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v21 = v7[4];
      uint64_t v22 = *(void *)(*(void *)(*(void *)(*(void *)(v18 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v7[6] = ecs_stack_allocator_allocate(v21, 48 * v22, 8);
      v7[7] = v22;
      v7[9] = 0;
      v7[10] = 0;
      v7[8] = 0;
      swift_release();
      v123[0] = v112;
      v123[1] = v18;
      v123[2] = v7;
      v123[3] = v15;
      v123[4] = (v119 - v14 + v15);
      v123[5] = v114;
      v123[6] = v14;
      v123[7] = v119;
      v123[8] = 0;
      v123[9] = 0;
      char v124 = 1;
      float32x4_t v125 = v16;
      uint64_t v126 = v17;
      uint64_t v127 = v19;
      switch(v110)
      {
        case 1:
        case 2:
          uint64_t v23 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v16, v17, v19, (uint64_t)v7);
          if ((v26 & 1) != 0
            || (unint64_t v27 = v16,
                uint64_t v28 = v23,
                uint64_t v29 = sub_1B62C9024((uint64_t)&type metadata for ParticleLifetime, (uint64_t)&off_1F0F6DC48, v27, v17, v19, (uint64_t)v7), (v30 & 1) != 0))
          {
            if (v14 == v119)
            {
LABEL_34:
              uint64_t v33 = (uint64_t)v109;
              uint64_t v34 = v116;
              goto LABEL_62;
            }
            uint64_t v62 = v119 - v14;
            uint64_t v33 = (uint64_t)v109;
            uint64_t v34 = v116;
            if ((unint64_t)(v119 - v14) < 8)
            {
              uint64_t v63 = v14;
LABEL_46:
              uint64_t v71 = v63 + v15 - v14;
              uint64_t v72 = v119 - v63;
              do
              {
                v109[v71] = v108 * (float)v71;
                ++v71;
                --v72;
              }
              while (v72);
              goto LABEL_62;
            }
            uint64_t v63 = (v62 & 0xFFFFFFFFFFFFFFF8) + v14;
            uint64_t v64 = (int64x2_t *)((char *)v105 + 4 * v15);
            uint64_t v65 = v14;
            unint64_t v66 = v62 & 0xFFFFFFFFFFFFFFF8;
            uint64_t v67 = v15;
            do
            {
              v25.i64[0] = v65;
              v24.i64[0] = v15 - v14;
              int64x2_t v68 = vdupq_lane_s64(vaddq_s64(v24, v25).i64[0], 0);
              int64x2_t v69 = vaddq_s64(v68, (int64x2_t)xmmword_1B6E9D130);
              v70.i64[0] = v67;
              v70.i64[1] = v67 + 1;
              int64x2_t v25 = (int64x2_t)vmulq_n_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(vaddq_s64(v68, (int64x2_t)xmmword_1B6EBB480))), vcvtq_f64_s64(vaddq_s64(v68, (int64x2_t)xmmword_1B6EBB470))), v108);
              v64[-1] = (int64x2_t)vmulq_n_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v70)), vcvtq_f64_s64(v69)), v108);
              *uint64_t v64 = v25;
              v64 += 2;
              v67 += 8;
              v65 += 8;
              v66 -= 8;
            }
            while (v66);
            if (v62 != (v62 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_46;
            }
          }
          else
          {
            if (v14 == v119) {
              goto LABEL_34;
            }
            uint64_t v31 = v28;
            uint64_t v32 = v119 - v14;
            uint64_t v33 = (uint64_t)v109;
            uint64_t v34 = v116;
            if ((unint64_t)(v119 - v14) < 8
              || (uint64_t v35 = &v109[v15], v36 = 4 * v14, (unint64_t)v35 - v31 + -4 * v14 < 0x20)
              || (unint64_t)v35 - v29 - v36 < 0x20)
            {
              uint64_t v37 = v14;
LABEL_56:
              uint64_t v82 = &v109[v37 + v15 - v14];
              uint64_t v83 = v119 - v37;
              uint64_t v84 = 4 * v37;
              uint64_t v85 = (float *)(v29 + 4 * v37);
              long long v86 = (float *)(v31 + v84);
              do
              {
                float v87 = *v86++;
                float v88 = v87;
                float v89 = *v85++;
                *v82++ = (float)(v108 * v88) * (float)(1.0 / v89);
                --v83;
              }
              while (v83);
              goto LABEL_62;
            }
            uint64_t v37 = (v32 & 0xFFFFFFFFFFFFFFF8) + v14;
            uint64_t v38 = (float32x4_t *)(v29 + v36 + 16);
            char v39 = (float32x4_t *)((char *)v105 + 4 * v15);
            uint64_t v40 = (float32x4_t *)(v31 + v36 + 16);
            unint64_t v41 = v32 & 0xFFFFFFFFFFFFFFF8;
            do
            {
              float32x4_t v42 = vmulq_f32(vmulq_n_f32(*v40, v108), vdivq_f32(v104, *v38));
              v39[-1] = vmulq_f32(vmulq_n_f32(v40[-1], v108), vdivq_f32(v104, v38[-1]));
              *char v39 = v42;
              v38 += 2;
              v39 += 2;
              v40 += 2;
              v41 -= 8;
            }
            while (v41);
            if (v32 != (v32 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_56;
            }
          }
          goto LABEL_62;
        case 3:
        case 4:
          uint64_t v43 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v16, v17, v19, (uint64_t)v7);
          if (v14 == v119)
          {
            uint64_t v34 = v116;
          }
          else
          {
            long long v55 = &v109[v15];
            uint64_t v56 = v119 - v14;
            uint64_t v57 = (float32x4_t *)(v43 + 16 * v14);
            uint64_t v34 = v116;
            do
            {
              float32x4_t v58 = *v57++;
              int8x16_t v59 = (int8x16_t)vmulq_f32(v107, v58);
              *v55++ = v108
                     * vaddv_f32(vadd_f32(*(float32x2_t *)v59.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL)));
              --v56;
            }
            while (v56);
          }
          goto LABEL_63;
        case 5:
        case 6:
          uint64_t v44 = sub_1B62C9024((uint64_t)&type metadata for ParticleID, (uint64_t)&off_1F0F532A8, v16, v17, v19, (uint64_t)v7);
          if (v47)
          {
            uint64_t v33 = (uint64_t)v109;
            uint64_t v34 = v116;
            if (v14 == v119) {
              goto LABEL_62;
            }
            uint64_t v60 = v119 - v14;
            if ((unint64_t)(v119 - v14) < 8)
            {
              uint64_t v61 = v14;
LABEL_52:
              uint64_t v80 = v61 + v15 - v14;
              uint64_t v81 = v119 - v61;
              do
              {
                v109[v80] = v108 * (float)v80;
                ++v80;
                --v81;
              }
              while (v81);
              goto LABEL_62;
            }
            uint64_t v61 = (v60 & 0xFFFFFFFFFFFFFFF8) + v14;
            uint64_t v73 = (int64x2_t *)((char *)v105 + 4 * v15);
            uint64_t v74 = v14;
            unint64_t v75 = v60 & 0xFFFFFFFFFFFFFFF8;
            uint64_t v76 = v15;
            do
            {
              v46.i64[0] = v74;
              v45.i64[0] = v15 - v14;
              int64x2_t v77 = vdupq_lane_s64(vaddq_s64(v45, v46).i64[0], 0);
              int64x2_t v78 = vaddq_s64(v77, (int64x2_t)xmmword_1B6E9D130);
              v79.i64[0] = v76;
              v79.i64[1] = v76 + 1;
              int64x2_t v46 = (int64x2_t)vmulq_n_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(vaddq_s64(v77, (int64x2_t)xmmword_1B6EBB480))), vcvtq_f64_s64(vaddq_s64(v77, (int64x2_t)xmmword_1B6EBB470))), v108);
              v73[-1] = (int64x2_t)vmulq_n_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v79)), vcvtq_f64_s64(v78)), v108);
              int64x2_t *v73 = v46;
              v73 += 2;
              v76 += 8;
              v74 += 8;
              v75 -= 8;
            }
            while (v75);
            if (v60 != (v60 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_52;
            }
          }
          else
          {
            uint64_t v33 = (uint64_t)v109;
            uint64_t v34 = v116;
            if (v14 == v119) {
              goto LABEL_62;
            }
            uint64_t v48 = v119 - v14;
            if ((unint64_t)(v119 - v14) < 8
              || (long long v49 = (uint32x4_t *)(v44 + 4 * v14), (unint64_t)((char *)&v109[v15] - (char *)v49) < 0x20))
            {
              uint64_t v50 = v14;
LABEL_30:
              long long v51 = &v109[v50 + v15 - v14];
              uint64_t v52 = v119 - v50;
              long long v53 = (unsigned int *)(v44 + 4 * v50);
              do
              {
                unsigned int v54 = *v53++;
                *v51++ = v108 * (float)v54;
                --v52;
              }
              while (v52);
              goto LABEL_62;
            }
            uint64_t v50 = (v48 & 0xFFFFFFFFFFFFFFF8) + v14;
            int v90 = (float32x4_t *)((char *)v105 + 4 * v15);
            uint64_t v91 = v49 + 1;
            unint64_t v92 = v48 & 0xFFFFFFFFFFFFFFF8;
            do
            {
              float32x4_t v93 = vmulq_n_f32(vcvtq_f32_u32(*v91), v108);
              v90[-1] = vmulq_n_f32(vcvtq_f32_u32(v91[-1]), v108);
              *int v90 = v93;
              v90 += 2;
              v91 += 2;
              v92 -= 8;
            }
            while (v92);
            if (v48 != (v48 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_30;
            }
          }
LABEL_62:
          sub_1B6C6DFC0((uint64_t)v123, v33, v15 - v14);
LABEL_63:
          long long v94 = *(_OWORD *)(v115 + 16);
          v120[0] = *(_OWORD *)v115;
          v120[1] = v94;
          uint64_t v121 = *(void *)(v115 + 32);
          sub_1B6345178(v7, (unsigned __int16 **)v120, (uint64_t)v122);
          if (*(void *)(v7[13] + 16))
          {
            uint64_t v95 = swift_bridgeObjectRetain();
            sub_1B639147C(v95, v18);
            swift_bridgeObjectRelease();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v97 = v7[13];
            if (isUniquelyReferenced_nonNull_native)
            {
              sub_1B6399BB8(0, *(void *)(v97 + 16));
            }
            else
            {
              uint64_t v98 = (void *)MEMORY[0x1E4FBC860];
              if (*(void *)(v97 + 24) >= 2uLL)
              {
                sub_1B681C594();
                uint64_t v98 = (void *)swift_allocObject();
                size_t v99 = j__malloc_size(v98);
                _OWORD v98[2] = 0;
                v98[3] = 2 * ((uint64_t)(v99 - 32) / 72);
              }
              v7[13] = v98;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v7[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              uint64_t v100 = *(char **)(v18 + 232);
              uint64_t v101 = *(char **)(v18 + 256);
              if (v100 == v101)
              {
                long long v102 = *(char **)(v18 + 240);
              }
              else
              {
                sub_1B666018C(v101, v100);
                uint64_t v101 = *(char **)(v18 + 232);
                long long v102 = *(char **)(v18 + 240);
                if (v102 == v101)
                {
                  long long v102 = 0;
                  uint64_t v101 = 0;
                  *(void *)(v18 + 232) = 0;
                  *(void *)(v18 + 240) = 0;
                }
              }
              *(void *)(v18 + 248) = v102;
              *(void *)(v18 + 256) = v101;
            }
          }
          ecs_stack_allocator_pop_snapshot(v118);
          if (v117)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
          }
          swift_release();
          uint64_t v5 = v34 + 1;
          if (v5 != v113) {
            continue;
          }
          return (uint64_t)v109;
        default:
          uint64_t result = sub_1B6E32BE8();
          __break(1u);
          return result;
      }
    }
  }
  return (uint64_t)v109;
}

uint64_t sub_1B63643D4(unsigned __int16 **a1, uint64_t a2, char **a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7)
{
  uint64_t v8 = a1[9];
  uint64_t v9 = *((void *)v8 + 4);
  uint64_t v10 = a1[5];
  char v11 = a1[7];
  if (v11 == (unsigned __int16 *)1)
  {
    uint64_t v14 = *(unsigned int *)v10;
    swift_retain();
    uint64_t v15 = sub_1B62C9024((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, 0, 0, 0, (uint64_t)v8);
    if (v16)
    {
      ecs_stack_allocator_push_snapshot(v9);
      uint64_t v72 = a1[10];
      uint64_t v73 = (float32x4_t *)ecs_stack_allocator_allocate(v9, 32 * (void)v72, 16);
      if (32 * (void)v72)
      {
        uint64_t v74 = (32 * (uint64_t)v72) >> 5;
        f32 = (_OWORD *)v73[1].f32;
        do
        {
          *(f32 - 1) = xmmword_1B6E4F370;
          _OWORD *f32 = xmmword_1B6E87B90;
          f32 += 2;
          --v74;
        }
        while (v74);
      }
      sub_1B6364AAC(v73, a2, a3, a4, a5, a6, a7);
      ecs_stack_allocator_pop_snapshot(v9);
    }
    else
    {
      sub_1B6364AAC((float32x4_t *)(v15 + 32 * v14), a2, a3, a4, a5, a6, a7);
    }
    return swift_release();
  }
  ecs_stack_allocator_push_snapshot(v9);
  uint64_t v17 = (uint64_t)a1[10];
  uint64_t v84 = (float32x4_t *)ecs_stack_allocator_allocate(v9, 32 * v17, 16);
  if (v17 > 0 && v11)
  {
    uint64_t v18 = 0;
    int v92 = *((unsigned __int8 *)a1[8] + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v95 = *a1;
    uint64_t v94 = (uint64_t)*a1 + 41;
    uint64_t v85 = v11;
    uint64_t v82 = v10;
    uint64_t v83 = v9;
    do
    {
      uint64_t v19 = (unsigned int *)&v10[24 * (void)v18];
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      uint64_t v23 = *((void *)v19 + 5);
      if (v92)
      {
        int64x2_t v24 = *(os_unfair_lock_s **)(v23 + 376);
        swift_retain();
        os_unfair_lock_lock(v24);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v9);
      uint64_t v90 = *((void *)v8 + 7);
      uint64_t v91 = *((void *)v8 + 6);
      uint64_t v88 = *((void *)v8 + 9);
      uint64_t v89 = *((void *)v8 + 8);
      uint64_t v87 = *((void *)v8 + 10);
      uint64_t v25 = *((void *)v8 + 4);
      uint64_t v93 = v23;
      uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      *((void *)v8 + 6) = ecs_stack_allocator_allocate(v25, 48 * v26, 8);
      *((void *)v8 + 7) = v26;
      uint64_t v27 = v23;
      *((void *)v8 + 9) = 0;
      *((void *)v8 + 10) = 0;
      *((void *)v8 + 8) = 0;
      swift_release();
      uint64_t v28 = v21 - v20;
      swift_retain();
      uint64_t v29 = sub_1B62C9024((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, 0, 0, 0, (uint64_t)v8);
      long long v86 = v18;
      if (v30)
      {
        if (v21 != v20)
        {
          uint64_t v31 = (_OWORD *)v84[2 * v22 + 1].f32;
          do
          {
            *(v31 - 1) = xmmword_1B6E4F370;
            _OWORD *v31 = xmmword_1B6E87B90;
            v31 += 2;
            --v28;
          }
          while (v28);
        }
      }
      else
      {
        memcpy(&v84[2 * v22], (const void *)(v29 + 32 * v20), 32 * v28);
      }
      swift_release();
      unint64_t v32 = *((void *)v8 + 6);
      uint64_t v33 = *((void *)v8 + 8);
      if (!v33)
      {
        uint64_t v59 = *((void *)v8 + 7);
        uint64_t v60 = (void *)*((void *)v8 + 4);
        uint64_t v61 = v85;
        uint64_t v62 = v86;
        goto LABEL_53;
      }
      for (uint64_t i = 0; i != v33; ++i)
      {
        uint64_t v36 = (uint64_t *)(v32 + 48 * i);
        uint64_t v37 = *v36;
        uint64_t v38 = (void (*)(uint64_t))v36[4];
        uint64_t v39 = *((void *)v8 + 9);
        if (v39) {
          BOOL v40 = v37 == v39;
        }
        else {
          BOOL v40 = 0;
        }
        if (v40 || !v95[11]) {
          goto LABEL_18;
        }
        unint64_t v41 = v95[9];
        float32x4_t v42 = (void *)(v94 + v95[8]);
        uint64_t v43 = v36[2];
        uint64_t v44 = v42;
        unint64_t v45 = v41 >> 4;
        uint64_t v46 = v94;
        if (v41 >= 0x10)
        {
          while (*v44 != v37)
          {
            ++v46;
            v44 += 2;
            if (!--v45) {
              goto LABEL_33;
            }
          }
          unsigned int v47 = *(unsigned __int8 *)(v46 + v95[10]);
          BOOL v48 = v47 > 5;
          int v49 = (1 << v47) & 0x23;
          if (v48 || v49 == 0)
          {
LABEL_18:
            uint64_t v35 = swift_retain();
            v38(v35);
            swift_release();
            continue;
          }
        }
LABEL_33:
        if (swift_conformsToProtocol2()) {
          uint64_t v51 = v43;
        }
        else {
          uint64_t v51 = 0;
        }
        if (v51)
        {
          uint64_t v52 = v42;
          unint64_t v53 = v41 >> 4;
          uint64_t v54 = v94;
          if (v41 < 0x10) {
            goto LABEL_18;
          }
          while (*v52 != v51)
          {
            ++v54;
            v52 += 2;
            if (!--v53) {
              goto LABEL_45;
            }
          }
          unsigned int v55 = *(unsigned __int8 *)(v54 + v95[10]);
          BOOL v48 = v55 > 5;
          int v56 = (1 << v55) & 0x23;
          if (v48 || v56 == 0) {
            goto LABEL_18;
          }
LABEL_45:
          uint64_t v58 = 16 * (v41 >> 4);
          while (*v42 != v51)
          {
            v42 += 2;
            v58 -= 16;
            if (!v58) {
              goto LABEL_18;
            }
          }
        }
      }
      uint64_t v59 = *((void *)v8 + 7);
      unint64_t v32 = *((void *)v8 + 6);
      uint64_t v60 = (void *)*((void *)v8 + 4);
      uint64_t v61 = v85;
      uint64_t v62 = v86;
      if (*((uint64_t *)v8 + 8) >= 1) {
        swift_arrayDestroy();
      }
      uint64_t v10 = v82;
      uint64_t v9 = v83;
      uint64_t v27 = v93;
LABEL_53:
      ecs_stack_allocator_deallocate(v60, v32, 48 * v59);
      *((void *)v8 + 6) = v91;
      *((void *)v8 + 7) = v90;
      *((void *)v8 + 8) = v89;
      *((void *)v8 + 9) = v88;
      *((void *)v8 + 10) = v87;
      if (*(void *)(*((void *)v8 + 13) + 16))
      {
        uint64_t v63 = swift_bridgeObjectRetain();
        sub_1B639147C(v63, v27);
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v65 = *((void *)v8 + 13);
        if (isUniquelyReferenced_nonNull_native)
        {
          sub_1B6399BB8(0, *(void *)(v65 + 16));
        }
        else
        {
          unint64_t v66 = (void *)MEMORY[0x1E4FBC860];
          if (*(void *)(v65 + 24) >= 2uLL)
          {
            sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
            unint64_t v66 = (void *)swift_allocObject();
            size_t v67 = j__malloc_size(v66);
            v66[2] = 0;
            v66[3] = 2 * ((uint64_t)(v67 - 32) / 72);
          }
          *((void *)v8 + 13) = v66;
          swift_bridgeObjectRelease();
        }
        if (*(unsigned __int8 *)(*((void *)v8 + 2) + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
           - 1 >= 2)
        {
          int64x2_t v68 = *(char **)(v27 + 232);
          int64x2_t v69 = *(char **)(v27 + 256);
          if (v68 == v69)
          {
            int64x2_t v70 = *(char **)(v27 + 240);
          }
          else
          {
            sub_1B666018C(v69, v68);
            int64x2_t v69 = *(char **)(v27 + 232);
            int64x2_t v70 = *(char **)(v27 + 240);
            if (v70 == v69)
            {
              int64x2_t v70 = 0;
              int64x2_t v69 = 0;
              *(void *)(v27 + 232) = 0;
              *(void *)(v27 + 240) = 0;
            }
          }
          *(void *)(v27 + 248) = v70;
          *(void *)(v27 + 256) = v69;
        }
      }
      ecs_stack_allocator_pop_snapshot(v9);
      if (v92)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 376));
      }
      swift_release();
      uint64_t v18 = (unsigned __int16 *)((char *)v62 + 1);
    }
    while (v18 != v61);
  }
  sub_1B6364AAC(v84, a2, a3, a4, a5, a6, a7);

  return ecs_stack_allocator_pop_snapshot(v9);
}

uint64_t sub_1B6364AAC(float32x4_t *a1, uint64_t a2, char **a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7)
{
  if (a2)
  {
    uint64_t v10 = *a3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v10 = sub_1B6364C2C(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    uint64_t v12 = 0;
    float32x4_t v14 = a4;
    float32x4_t v13 = a5;
    float32x4_t v15 = vabsq_f32(a4);
    float32x4_t v16 = vabsq_f32(a5);
    float32x4_t v17 = a6;
    float32x4_t v18 = vabsq_f32(a6);
    uint64_t v19 = a1 + 1;
    float32x4_t v20 = a7;
    do
    {
      float32x4_t v21 = v19[-1];
      int32x4_t v22 = *(int32x4_t *)v19;
      *a3 = v10;
      unint64_t v24 = *((void *)v10 + 2);
      unint64_t v23 = *((void *)v10 + 3);
      if (v24 >= v23 >> 1)
      {
        float32x4_t v32 = v16;
        float32x4_t v33 = v15;
        int32x4_t v30 = v22;
        float32x4_t v31 = v18;
        float32x4_t v29 = v21;
        uint64_t v27 = sub_1B6364C2C(v23 > 1, v24 + 1, 1, v10);
        float32x4_t v21 = v29;
        int32x4_t v22 = v30;
        float32x4_t v18 = v31;
        float32x4_t v16 = v32;
        float32x4_t v15 = v33;
        float32x4_t v14 = a4;
        float32x4_t v13 = a5;
        float32x4_t v17 = a6;
        float32x4_t v20 = a7;
        uint64_t v10 = v27;
      }
      uint64_t v25 = &v10[16 * v24];
      *((void *)v25 + 4) = v12;
      float32x4_t v26 = (float32x4_t)v22;
      v26.i32[1] = v22.i32[0];
      v26.i32[2] = v22.i32[0];
      *((void *)v10 + 2) = v24 + 1;
      *((float *)v25 + 10) = -COERCE_FLOAT(vaddq_f32(vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v20, v17, v21, 2), v13, *(float32x2_t *)&v21, 1), v14, *(float *)&v21), vmlaq_f32(vmlaq_f32(vmulq_f32((float32x4_t)vuzp2q_s32(vdupq_lane_s32(*(int32x2_t *)&v22, 1), v22), v16), v26, v15), (float32x4_t)vzip2q_s32(vtrn1q_s32(v22, v22), v22), v18)).i32[2]);
      *a3 = v10;
      v19 += 2;
      ++v12;
    }
    while (a2 != v12);
  }
  return sub_1B6364E78(a3);
}

char *sub_1B6364C2C(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B6364D20();
    char v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    float32x4_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B6364D98(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  char v11 = (char *)MEMORY[0x1E4FBC860];
  float32x4_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1B6364D20()
{
  if (!qword_1EB980D40)
  {
    sub_1B62E98B4(255, (unint64_t *)&qword_1EB9803D0);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980D40);
    }
  }
}

char *sub_1B6364D98(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((unint64_t v6 = (char *)(a4 + 16 * a1 + 32),
         size_t v7 = 16 * v4,
         int64_t v8 = &__dst[16 * v4],
         unint64_t v9 = (unint64_t)&v6[16 * v4],
         v6 < v8)
      ? (BOOL v10 = v9 > (unint64_t)__dst)
      : (BOOL v10 = 0),
        v10))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, v7);
    return v8;
  }
  return result;
}

uint64_t sub_1B6364E78(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B6C16A84((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1B6364EE8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1B6364EE8(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B6E33068();
  if (result >= v3)
  {
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v9 = *v2 + 16;
      uint64_t v10 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v12 = v10;
        uint64_t v13 = v9;
        do
        {
          float v14 = *(float *)(v13 + 8);
          if (*(float *)(v13 - 8) >= v14) {
            break;
          }
          uint64_t v15 = *(void *)v13;
          *(_OWORD *)uint64_t v13 = *(_OWORD *)(v13 - 16);
          *(float *)(v13 - 8) = v14;
          *(void *)(v13 - 16) = v15;
          v13 -= 16;
        }
        while (!__CFADD__(v12++, 1));
        v9 += 16;
        --v10;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 >= -1)
    {
      uint64_t v6 = result;
      if (v3 < 2)
      {
        uint64_t v17 = MEMORY[0x1E4FBC860];
        __dst = (float *)(MEMORY[0x1E4FBC860] + 32);
        if (v3 != 1)
        {
          unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
          float32x4_t v20 = (char *)MEMORY[0x1E4FBC860];
          if (v21 < 2)
          {
LABEL_69:
            swift_bridgeObjectRelease();
            *(void *)(v17 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
LABEL_73:
          uint64_t v60 = *v2;
          do
          {
            uint64_t v61 = *(void *)&v20[16 * v21];
            uint64_t v62 = &v20[16 * v21 + 16];
            uint64_t v63 = *((void *)v62 + 1);
            sub_1B6CDF53C((float *)(v60 + 16 * v61), (float *)(v60 + 16 * *(void *)v62), v60 + 16 * v63, __dst);
            if (v1) {
              break;
            }
            uint64_t v64 = v20;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v64 = sub_1B6D671B8((uint64_t)v20);
            }
            uint64_t v65 = &v64[16 * v21];
            *(void *)uint64_t v65 = v61;
            *((void *)v65 + 1) = v63;
            float32x4_t v20 = v64;
            unint64_t v66 = *((void *)v64 + 2);
            memmove(&v64[16 * v21 + 16], &v64[16 * v21 + 32], 16 * (v66 - v21));
            *((void *)v64 + 2) = v66 - 1;
            unint64_t v21 = v66 - 1;
          }
          while (v66 > 2);
          goto LABEL_69;
        }
        uint64_t v68 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v7 = v5 >> 1;
        sub_1B6CE00A0();
        uint64_t v8 = sub_1B6E31C98();
        *(void *)(v8 + 16) = v7;
        uint64_t v68 = v8;
        __dst = (float *)(v8 + 32);
      }
      uint64_t v18 = 0;
      size_t v67 = v2;
      uint64_t v19 = *v2;
      uint64_t v69 = v19 + 8;
      float32x4_t v20 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v70 = v6;
      uint64_t v71 = v3;
      do
      {
        uint64_t v22 = v18++;
        if (v18 < v3)
        {
          float v23 = *(float *)(v69 + 16 * v18);
          uint64_t v24 = 16 * v22;
          float v25 = *(float *)(v69 + 16 * v22);
          uint64_t v18 = v22 + 2;
          if (v22 + 2 < v3)
          {
            float32x4_t v26 = (float *)(v19 + 40 + 16 * v22);
            while (v25 < v23 != *(v26 - 4) >= *v26)
            {
              ++v18;
              v26 += 4;
              if (v3 == v18)
              {
                uint64_t v18 = v3;
                break;
              }
            }
          }
          if (v25 < v23 && v22 < v18)
          {
            uint64_t v34 = 16 * v18;
            uint64_t v35 = v18;
            uint64_t v36 = v22;
            do
            {
              if (v36 != --v35)
              {
                uint64_t v37 = v19 + v34;
                uint64_t v38 = *(void *)(v19 + v24);
                int v39 = *(_DWORD *)(v19 + v24 + 8);
                *(_OWORD *)(v19 + v24) = *(_OWORD *)(v19 + v34 - 16);
                *(void *)(v37 - 16) = v38;
                *(_DWORD *)(v37 - 8) = v39;
              }
              ++v36;
              v34 -= 16;
              v24 += 16;
            }
            while (v36 < v35);
          }
        }
        if (v18 < v3 && v18 - v22 < v6)
        {
          uint64_t v28 = v22 + v6;
          if (v22 + v6 >= v3) {
            uint64_t v28 = v3;
          }
          if (v18 != v28)
          {
            float32x4_t v29 = (float *)(v19 + 16 * v18);
            do
            {
              int32x4_t v30 = v29;
              uint64_t v31 = v22;
              do
              {
                float v32 = v30[2];
                if (*(v30 - 2) >= v32) {
                  break;
                }
                uint64_t v33 = *(void *)v30;
                *(_OWORD *)int32x4_t v30 = *((_OWORD *)v30 - 1);
                *(v30 - 2) = v32;
                *((void *)v30 - 2) = v33;
                v30 -= 4;
                ++v31;
              }
              while (v18 != v31);
              ++v18;
              v29 += 4;
            }
            while (v18 != v28);
            uint64_t v18 = v28;
          }
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          float32x4_t v20 = sub_1B62BD890(0, *((void *)v20 + 2) + 1, 1, v20);
        }
        unint64_t v41 = *((void *)v20 + 2);
        unint64_t v40 = *((void *)v20 + 3);
        unint64_t v21 = v41 + 1;
        if (v41 >= v40 >> 1) {
          float32x4_t v20 = sub_1B62BD890(v40 > 1, v41 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v21;
        float32x4_t v42 = v20 + 32;
        uint64_t v43 = &v20[16 * v41 + 32];
        *(void *)uint64_t v43 = v22;
        *((void *)v43 + 1) = v18;
        if (v41)
        {
          while (1)
          {
            uint64_t v44 = v21 - 1;
            if (v21 >= 4)
            {
              int v49 = &v42[16 * v21];
              uint64_t v50 = *((void *)v49 - 7) - *((void *)v49 - 8);
              uint64_t v47 = *((void *)v49 - 5) - *((void *)v49 - 6);
              uint64_t v48 = v21 - 2;
              uint64_t v51 = &v42[16 * v21 - 32];
              uint64_t v45 = *(void *)v51;
              uint64_t v46 = *((void *)v51 + 1);
              if (v47 - v45 + v46 >= v50)
              {
                BOOL v54 = v47 < *(void *)&v42[16 * v44 + 8] - *(void *)&v42[16 * v44];
LABEL_63:
                if (v54) {
                  uint64_t v44 = v48;
                }
                goto LABEL_65;
              }
            }
            else
            {
              if (v21 != 3)
              {
                uint64_t v52 = *(void *)&v42[16 * v21 - 24] - *(void *)&v20[16 * v21];
                uint64_t v53 = *(void *)&v42[16 * v44 + 8] - *(void *)&v42[16 * v44];
                goto LABEL_60;
              }
              uint64_t v45 = *((void *)v20 + 6);
              uint64_t v46 = *((void *)v20 + 7);
              uint64_t v47 = *((void *)v20 + 5) - *((void *)v20 + 4);
              uint64_t v48 = 1;
            }
            uint64_t v52 = v46 - v45;
            uint64_t v53 = *(void *)&v42[16 * v44 + 8] - *(void *)&v42[16 * v44];
            if (v52 + v53 >= v47)
            {
              BOOL v54 = v47 < v53;
              goto LABEL_63;
            }
LABEL_60:
            if (v53 < v52) {
              goto LABEL_21;
            }
LABEL_65:
            unsigned int v55 = &v42[16 * v44 - 16];
            uint64_t v56 = *(void *)v55;
            uint64_t v57 = &v42[16 * v44];
            uint64_t v58 = *((void *)v57 + 1);
            sub_1B6CDF53C((float *)(v19 + 16 * *(void *)v55), (float *)(v19 + 16 * *(void *)v57), v19 + 16 * v58, __dst);
            if (v1)
            {
              uint64_t v17 = v68;
              goto LABEL_69;
            }
            *(void *)unsigned int v55 = v56;
            *((void *)v55 + 1) = v58;
            unint64_t v59 = *((void *)v20 + 2);
            unint64_t v21 = v59 - 1;
            memmove(&v42[16 * v44], v57 + 16, 16 * (v59 - 1 - v44));
            *((void *)v20 + 2) = v59 - 1;
            if (v59 <= 2) {
              goto LABEL_21;
            }
          }
        }
        unint64_t v21 = 1;
LABEL_21:
        uint64_t v6 = v70;
        uint64_t v3 = v71;
      }
      while (v18 < v71);
      uint64_t v17 = v68;
      uint64_t v2 = v67;
      if (v21 < 2) {
        goto LABEL_69;
      }
      goto LABEL_73;
    }
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6365460(uint64_t result)
{
  char v45 = result;
  if ((uint64_t)v1[10] >= 1)
  {
    uint64_t v2 = v1[7];
    if (v2)
    {
      uint64_t v44 = v1;
      uint64_t v3 = 48 * v2;
      for (uint64_t i = (uint64_t *)(v1[5] + 40); ; i += 6)
      {
        uint64_t v5 = *i;
        if ((v45 & 1) == 0) {
          break;
        }
        uint64_t v13 = v3;
        uint64_t v14 = v1[9];
        uint64_t v50 = 0;
        memset(v49, 0, sizeof(v49));
        char v51 = 5;
        swift_retain_n();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v46[0] = *(void *)(v14 + 96);
        uint64_t v16 = *(void *)&v46[0];
        *(void *)(v14 + 96) = 0x8000000000000000;
        unint64_t v17 = sub_1B69FA754(v5);
        char v19 = v18;
        uint64_t v20 = *(void *)(v16 + 16) + ((v18 & 1) == 0);
        if (*(void *)(v16 + 24) >= v20)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1B6ACB73C();
            uint64_t v16 = *(void *)&v46[0];
          }
        }
        else
        {
          sub_1B6AB53C4(v20, isUniquelyReferenced_nonNull_native);
          type metadata accessor for ComponentsDataChunk();
          uint64_t v16 = *(void *)&v46[0];
          unint64_t v21 = sub_1B69FA754(v5);
          if ((v19 & 1) != (v22 & 1))
          {
            uint64_t result = sub_1B6E33838();
            __break(1u);
            return result;
          }
          unint64_t v17 = v21;
        }
        *(void *)(v14 + 96) = v16;
        swift_bridgeObjectRelease();
        uint64_t v27 = *(void **)(v14 + 96);
        swift_bridgeObjectRetain();
        if ((v19 & 1) == 0)
        {
          sub_1B636EDF4(v46);
          uint64_t v28 = *(void *)&v46[0];
          v27[(v17 >> 6) + 8] |= 1 << v17;
          *(void *)(v27[6] + 8 * v17) = v5;
          *(void *)(v27[7] + 8 * v17) = v28;
          ++v27[2];
          swift_retain();
        }
        uint64_t v29 = v27[7];
        swift_bridgeObjectRelease();
        sub_1B639192C((uint64_t)v49, (uint64_t)v46);
        uint64_t v48 = 0;
        long long v47 = 0uLL;
        int32x4_t v30 = *(void **)(v29 + 8 * v17);
        char v31 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v29 + 8 * v17) = v30;
        if ((v31 & 1) == 0)
        {
          int32x4_t v30 = sub_1B68C0C6C(0, v30[2] + 1, 1, v30);
          *(void *)(v29 + 8 * v17) = v30;
        }
        uint64_t v3 = v13;
        unint64_t v33 = v30[2];
        unint64_t v32 = v30[3];
        if (v33 >= v32 >> 1)
        {
          int32x4_t v30 = sub_1B68C0C6C(v32 > 1, v33 + 1, 1, v30);
          *(void *)(v29 + 8 * v17) = v30;
        }
        uint64_t v1 = v44;
        v30[2] = v33 + 1;
        uint64_t v34 = &v30[9 * v33];
        *((_OWORD *)v34 + 2) = v46[0];
        long long v35 = v46[1];
        long long v36 = v46[2];
        long long v37 = v47;
        v34[12] = v48;
        *((_OWORD *)v34 + 4) = v36;
        *((_OWORD *)v34 + 5) = v37;
        *((_OWORD *)v34 + 3) = v35;
        swift_release();
        sub_1B6391400((uint64_t)v49);
LABEL_5:
        uint64_t result = swift_release();
        v3 -= 48;
        if (!v3) {
          return result;
        }
      }
      uint64_t v6 = *(os_unfair_lock_s **)(v5 + 376);
      swift_retain();
      os_unfair_lock_lock(v6);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 344));
      uint64_t v8 = *(void *)(v5 + 232);
      uint64_t v7 = *(void *)(v5 + 240);
      uint64_t v9 = *(void *)(v5 + 40);
      if (*(unsigned char *)(v9 + 200) == 1)
      {
        *(unsigned char *)(*(void *)(v5 + 16) + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 1;
        uint64_t v9 = *(void *)(v5 + 40);
      }
      sub_1B63658B4(v9, v5, v8, v7);
      uint64_t v10 = *(void *)(v5 + 232);
      if (v10 < v8 || v10 >= v7)
      {
        sub_1B63B3344(*(void *)(v5 + 40), v8, v7, 1, v5);
        Swift::Int v12 = v7 - v8;
LABEL_38:
        uint64_t v43 = *(void *)(v5 + 16);
        if (*(void *)(v43 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
          vfx_counters.add(_:_:)(*(_DWORD *)(v43 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 44), v12);
        }
        if (*(void *)(v43 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
          vfx_counters.add(_:_:)(*(_DWORD *)(v43 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 48), -v12);
        }
        ++*(_DWORD *)(v5 + 116);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 376));
        goto LABEL_5;
      }
      Swift::Int v12 = v7 - v8;
      uint64_t v23 = v10 + v7 - v8;
      uint64_t v24 = *(void *)(v5 + 240) - v10;
      uint64_t v25 = v23;
      if (v12 < 1)
      {
        if (v24 <= 0)
        {
          BOOL v26 = v12 < v24;
LABEL_31:
          if (v26) {
            uint64_t v25 = *(void *)(v5 + 240);
          }
          else {
            uint64_t v25 = v23;
          }
        }
      }
      else if ((v24 & 0x8000000000000000) == 0)
      {
        BOOL v26 = v24 < (unint64_t)v12;
        goto LABEL_31;
      }
      *(void *)(v5 + 232) = v25;
      uint64_t v38 = *(void *)(v5 + 248);
      if (v25 > v38) {
        uint64_t v38 = v25;
      }
      *(void *)(v5 + 248) = v38;
      uint64_t v39 = *(void *)(v5 + 192);
      if (v39)
      {
        uint64_t v40 = v3;
        uint64_t v41 = *(void *)(v5 + 208);
        sub_1B62C9D00(v10, v23, v39);
        uint64_t v42 = v41;
        uint64_t v3 = v40;
        sub_1B62C9D00(v10, v23, v42);
      }
      goto LABEL_38;
    }
  }
  return result;
}

uint64_t sub_1B63658B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(result + 213) != 1) {
    return result;
  }
  uint64_t v5 = a3;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
LABEL_6:
    if (a3 == a4) {
      return result;
    }
    goto LABEL_10;
  }
  uint64_t v9 = (uint64_t *)(v7 + 56);
  while ((ValueMetadata *)*(v9 - 3) != &type metadata for PropagateDirtiness)
  {
    v9 += 5;
    if (!--v8) {
      goto LABEL_6;
    }
  }
  uint64_t v8 = *v9;
  if (a3 != a4)
  {
LABEL_10:
    uint64_t v10 = *(void *)(a2 + 16);
    for (uint64_t i = (unsigned int *)(v8 + 8 * a3 + *(void *)(a2 + 128) + 4); ; i += 2)
    {
      swift_retain();
      if (*(unsigned char *)(a2 + 184)) {
        break;
      }
      unsigned int v12 = *(_DWORD *)(*(void *)(a2 + 168) + 4 * v5);
      uint64_t v13 = *(unsigned int *)(*(void *)(v10 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v12 + 8);
      uint64_t result = swift_release();
      uint64_t v14 = *(i - 1);
      uint64_t v15 = *i;
      if (v14 != -1 || v15 != 0) {
        uint64_t result = sub_1B6398CA0(v17, v12 | (unint64_t)(v13 << 32), v14 | (v15 << 32));
      }
      if (a4 == ++v5) {
        return result;
      }
    }
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B6365A30(char a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t result = sub_1B6345398(*(void *)(v3 + 40), (uint64_t)&type metadata for TextureGPURuntime, v6);
  if ((v6[0] & 1) == 0)
  {
    v6[0] = &type metadata for TextureGPURuntime;
    v6[1] = &off_1F0F74BA8;
    char v7 = 0;
    MEMORY[0x1F4188790](result, v5);
    swift_retain();
    sub_1B63932BC(a1 & 1, v3, (uint64_t (*)(uint64_t))sub_1B6393454);
    sub_1B6391400((uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6365B3C(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer))
  {
    MEMORY[0x1F4188790](result, a2);
    uint64_t v3 = *(void **)(v2 + 176);
    swift_retain();
    swift_retain();
    sub_1B636E6CC((uint64_t)&type metadata for CurvesState, (uint64_t)&off_1F0F54AF0, v3, (void (*)(uint64_t))sub_1B6374A08);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1B6365C18(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

BOOL sub_1B6365C6C(void *a1, void *a2)
{
  return *a1 != *a2;
}

uint64_t sub_1B6365C80(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TextureCache.TextureKey();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1B63968D0();
  char v11 = (void *)sub_1B6E32C38();
  if (!*(void *)(v10 + 16)) {
    goto LABEL_27;
  }
  BOOL v26 = v3;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = (void *)(v10 + 64);
  uint64_t v14 = -1;
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  unint64_t v15 = v14 & *(void *)(v10 + 64);
  int64_t v16 = (unint64_t)(v12 + 63) >> 6;
  swift_retain();
  uint64_t v17 = 0;
  int64_t v28 = v16 - 4;
  uint64_t v27 = v10 + 96;
  while (1)
  {
    if (v15)
    {
      unint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_19;
    }
    uint64_t v20 = v17 + 1;
    if (v17 + 1 >= v16) {
      goto LABEL_21;
    }
    unint64_t v21 = v13[v20];
    if (!v21)
    {
      uint64_t v20 = v17 + 2;
      if (v17 + 2 >= v16) {
        goto LABEL_21;
      }
      unint64_t v21 = v13[v20];
      if (!v21)
      {
        uint64_t v20 = v17 + 3;
        if (v17 + 3 >= v16) {
          goto LABEL_21;
        }
        unint64_t v21 = v13[v20];
        if (!v21) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v17 = v20;
LABEL_19:
    uint64_t v22 = *(void *)(v10 + 48) + *(void *)(v6 + 72) * v19;
    uint64_t v23 = 160 * v19;
    if (a2)
    {
      sub_1B6365F60(v22, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      sub_1B6366650(*(void *)(v10 + 56) + v23, (uint64_t)v29);
    }
    else
    {
      sub_1B6366C70(v22, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      sub_1B6367A74(*(void *)(v10 + 56) + v23, (uint64_t)v29);
    }
    sub_1B6366030((uint64_t)v9, (uint64_t)v29, v11);
  }
  while (v28 != v17)
  {
    unint64_t v21 = *(void *)(v27 + 8 * v17++);
    if (v21)
    {
      uint64_t v20 = v17 + 3;
      goto LABEL_18;
    }
  }
LABEL_21:
  swift_release();
  if (a2)
  {
    uint64_t v24 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v3 = v26;
    if (v24 >= 64) {
      bzero((void *)(v10 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v13 = -1 << v24;
    }
    *(void *)(v10 + 16) = 0;
LABEL_27:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v26;
  }
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1B6365F60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B6365FC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B6366030(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B6E33918();
  sub_1B6E33928();
  uint64_t v5 = type metadata accessor for TextureCache.TextureKey();
  sub_1B6E30F48();
  sub_1B6366304((unint64_t *)&unk_1EB97D970, MEMORY[0x1E4F276F0]);
  sub_1B6E315B8();
  uint64_t v6 = a1 + *(int *)(v5 + 24);
  unsigned int v7 = *(unsigned __int8 *)(v6 + 24);
  __int16 v8 = *(_WORD *)(v6 + 56);
  sub_1B6E33928();
  if (v7 >= 0xFE || (sub_1B6E33938(), sub_1B6E33928(), sub_1B6E33928(), sub_1B6E33928(), (v7 & 0x80) == 0)) {
    sub_1B6E33938();
  }
  if ((v8 & 0xFF00) != 0x300)
  {
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    if ((v8 & 1) == 0) {
      sub_1B6E33928();
    }
  }
  sub_1B6E33938();
  sub_1B6E33988();
  unint64_t v9 = sub_1B6E327D8();
  *(void *)((char *)a3 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
  sub_1B6365F60(a1, a3[6] + *(void *)(*(void *)(v5 - 8) + 72) * v9, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  uint64_t result = sub_1B6366650(a2, a3[7] + 160 * v9);
  ++a3[2];
  return result;
}

uint64_t sub_1B63662BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6366304(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B636634C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 80))();
  sub_1B6366A18((uint64_t)v3);
  v2(v1, 0);
  free(v3);

  free(v1);
}

void sub_1B63663C8(uint64_t *a1)
{
  uint64_t v1 = (void *)*a1;
  sub_1B6366450(*a1, *(unsigned char *)(*a1 + 153), *(uint64_t **)(*a1 + 168), *(void *)(*a1 + 176), *(void *)(*a1 + 160));
  sub_1B63667D0((uint64_t)v1, (uint64_t)&unk_1EB97E330, (uint64_t)&type metadata for TextureCache.CacheEntry, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63668FC);

  free(v1);
}

void sub_1B6366450(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for TextureCache.TextureKey();
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B6366948(a1, (uint64_t)v15, (uint64_t)&unk_1EB97E330, (uint64_t)&type metadata for TextureCache.CacheEntry, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62D85D4);
  if (v15[152] == 255)
  {
    sub_1B68736D8((uint64_t)v15, (uint64_t)&unk_1EB97E330, (uint64_t)&type metadata for TextureCache.CacheEntry, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D85D4);
    if (a2)
    {
      swift_arrayDestroy();
      sub_1B6ACAFB0(a4, *a3);
    }
  }
  else
  {
    sub_1B6366650((uint64_t)v15, (uint64_t)v16);
    uint64_t v14 = (void *)*a3;
    if (a2)
    {
      sub_1B6366650((uint64_t)v16, v14[7] + 160 * a4);
    }
    else
    {
      sub_1B6366C08(a5, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      sub_1B6366650((uint64_t)v16, (uint64_t)v15);
      sub_1B6367C44(a4, (uint64_t)v13, (uint64_t)v15, v14);
    }
  }
}

uint64_t sub_1B6366650(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithTake for TextureCache.CacheEntry(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 152) == 1)
  {
    if (*(void *)(a2 + 120))
    {
      swift_unknownObjectWeakTakeInit();
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v8;
      long long v9 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v9;
      long long v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      long long v11 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v11;
    }
    if (*(void *)(a2 + 136) == 1)
    {
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
    }
    else
    {
      swift_unknownObjectWeakTakeInit();
      uint64_t v12 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v12;
    }
    *(unsigned char *)(a1 + 152) = 1;
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v4;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
    long long v5 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v5;
    long long v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v6;
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  return a1;
}

uint64_t sub_1B63667D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void destroy for TextureCache.CacheEntry(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 152);
  if (v2 == 2)
  {
    uint64_t v3 = *(void **)a1;
    goto LABEL_6;
  }
  if (v2 == 1)
  {
    if (*(void *)(a1 + 120))
    {
      swift_unknownObjectWeakDestroy();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(a1 + 136) != 1)
    {
      swift_unknownObjectWeakDestroy();
      swift_unknownObjectRelease();
    }
  }
  else if (!*(unsigned char *)(a1 + 152))
  {
    uint64_t v3 = *(void **)a1;
LABEL_6:
  }
}

void sub_1B63668FC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B6366948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

void sub_1B63669BC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  int v2 = *(void **)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  sub_1B6366A18((uint64_t)v2);
  free(v2);

  free(v1);
}

uint64_t sub_1B6366A18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TextureCache.TextureKey();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*sub_1B6366A74(void *a1, uint64_t a2))(void *a1)
{
  long long v4 = malloc(0x30uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for TextureCache.TextureKey();
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_1B6366C70(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  v4[5] = sub_1B6366B28(v4, (uint64_t)v6);
  return sub_1B63669BC;
}

void (*sub_1B6366B28(void *a1, uint64_t a2))(uint64_t a1)
{
  long long v4 = malloc(0x58uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for TextureCache.TextureKey();
  uint64_t v6 = (unsigned __int8 *)malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[8] = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1B6366C70(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  v4[9] = sub_1B63821E0(v4);
  v4[10] = sub_1B6366CD8(v4 + 4, v6, isUniquelyReferenced_nonNull_native);
  return sub_1B636634C;
}

uint64_t sub_1B6366C08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B6366C70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void (*sub_1B6366CD8(void *a1, unsigned __int8 *a2, char a3))(uint64_t *a1)
{
  long long v4 = v3;
  uint64_t v8 = malloc(0xB8uLL);
  *a1 = v8;
  v8[20] = a2;
  v8[21] = v3;
  uint64_t v9 = *v3;
  unint64_t v10 = sub_1B6367070(a2);
  char v12 = v11;
  *((unsigned char *)v8 + 153) = v11 & 1;
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = *(void *)(v9 + 16) + ((v11 & 1) == 0);
  if (v13 >= v14 && (a3 & 1) != 0)
  {
LABEL_6:
    v8[22] = v10;
    if (v12)
    {
LABEL_7:
      sub_1B6366650(*(void *)(*v4 + 56) + 160 * v10, (uint64_t)v8);
      return sub_1B63663C8;
    }
LABEL_10:
    v8[18] = 0;
    *((_OWORD *)v8 + 7) = 0u;
    *((_OWORD *)v8 + 8) = 0u;
    *((_OWORD *)v8 + 5) = 0u;
    *((_OWORD *)v8 + 6) = 0u;
    *((_OWORD *)v8 + 3) = 0u;
    *((_OWORD *)v8 + 4) = 0u;
    *((_OWORD *)v8 + 1) = 0u;
    *((_OWORD *)v8 + 2) = 0u;
    *(_OWORD *)uint64_t v8 = 0u;
    *((unsigned char *)v8 + 152) = -1;
    return sub_1B63663C8;
  }
  if (v13 >= v14 && (a3 & 1) == 0)
  {
    sub_1B6AD6504();
    goto LABEL_6;
  }
  sub_1B6365C80(v14, a3 & 1);
  unint64_t v15 = sub_1B6367070(a2);
  if ((v12 & 1) == (v16 & 1))
  {
    unint64_t v10 = v15;
    v8[22] = v15;
    if (v12) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  type metadata accessor for TextureCache.TextureKey();
  uint64_t result = (void (*)(uint64_t *))sub_1B6E33838();
  __break(1u);
  return result;
}

void sub_1B6366E24(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v31 = a2;
  int v32 = a3;
  uint64_t v27 = a5;
  uint64_t v7 = type metadata accessor for TextureCache.TextureKey();
  MEMORY[0x1F4188790](v7, v8);
  unint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (unsigned __int8 *)&v26 - v13;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 48));
  sub_1B63675F4(a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v28[0] = *(void *)(a1 + 72);
  uint64_t v16 = *(void *)&v28[0];
  *(void *)(a1 + 72) = 0x8000000000000000;
  unint64_t v17 = sub_1B6367070(v14);
  char v19 = v18;
  uint64_t v20 = *(void *)(v16 + 16) + ((v18 & 1) == 0);
  if (*(void *)(v16 + 24) >= v20)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B6AD6504();
      uint64_t v16 = *(void *)&v28[0];
    }
  }
  else
  {
    sub_1B6365C80(v20, isUniquelyReferenced_nonNull_native);
    uint64_t v16 = *(void *)&v28[0];
    unint64_t v21 = sub_1B6367070(v14);
    if ((v19 & 1) != (v22 & 1))
    {
      sub_1B6E33838();
      __break(1u);
      return;
    }
    unint64_t v17 = v21;
  }
  char v23 = v32;
  uint64_t v24 = v27;
  *(void *)(a1 + 72) = v16;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void **)(a1 + 72);
  if ((v19 & 1) == 0)
  {
    uint64_t v29 = 0;
    memset(v28, 0, sizeof(v28));
    char v30 = 3;
    sub_1B63675F4((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
    sub_1B6367C44(v17, (uint64_t)v10, (uint64_t)v28, v25);
  }
  sub_1B6367880(v25[7] + 160 * v17, v31 & 1, v23 & 1, v24);
  sub_1B63677B8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 48));
}

unint64_t sub_1B6367070(unsigned __int8 *a1)
{
  sub_1B6E33918();
  sub_1B6E33928();
  uint64_t v2 = type metadata accessor for TextureCache.TextureKey();
  sub_1B6E30F48();
  sub_1B63672D0();
  sub_1B6E315B8();
  uint64_t v3 = &a1[*(int *)(v2 + 24)];
  unsigned int v4 = v3[24];
  __int16 v5 = *((_WORD *)v3 + 28);
  sub_1B6E33928();
  if (v4 >= 0xFE || (sub_1B6E33938(), sub_1B6E33928(), sub_1B6E33928(), sub_1B6E33928(), (v4 & 0x80) == 0)) {
    sub_1B6E33938();
  }
  if ((v5 & 0xFF00) != 0x300)
  {
    sub_1B6E33938();
    sub_1B6E33928();
    sub_1B6E33928();
    sub_1B6E33938();
    if ((v5 & 1) == 0) {
      sub_1B6E33928();
    }
  }
  sub_1B6E33938();
  uint64_t v6 = sub_1B6E33988();

  return sub_1B6367304(a1, v6);
}

uint64_t sub_1B6367240(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6367288(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B63672D0()
{
  return sub_1B6367240((unint64_t *)&unk_1EB97D970, MEMORY[0x1E4F276F0]);
}

unint64_t sub_1B6367304(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TextureCache.TextureKey();
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v9 = (unsigned __int8 *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v11 = a2 & ~v10;
  if ((*(void *)(v2 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v10;
    uint64_t v13 = *(void *)(v7 + 72);
    do
    {
      sub_1B636758C(*(void *)(v2 + 48) + v13 * v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      if (*v9 != *a1) {
        goto LABEL_4;
      }
      if ((MEMORY[0x1BA9B2B40](&v9[*(int *)(v5 + 20)], &a1[*(int *)(v5 + 20)]) & 1) == 0) {
        goto LABEL_4;
      }
      uint64_t v14 = *(int *)(v5 + 24);
      unint64_t v15 = &v9[v14];
      uint64_t v16 = &a1[v14];
      if (*(void *)&v9[v14] != *(void *)&a1[v14]) {
        goto LABEL_4;
      }
      unsigned int v17 = v15[24];
      uint64_t v18 = *((void *)v15 + 4);
      uint64_t v19 = *((void *)v15 + 5);
      uint64_t v20 = *((void *)v15 + 6);
      unsigned int v21 = *((unsigned __int16 *)v15 + 28);
      unsigned int v22 = v16[24];
      uint64_t v23 = *((void *)v16 + 4);
      uint64_t v24 = *((void *)v16 + 5);
      uint64_t v25 = *((void *)v16 + 6);
      unsigned int v26 = *((unsigned __int16 *)v16 + 28);
      if (v17 <= 0xFD)
      {
        if (v22 > 0xFD) {
          goto LABEL_4;
        }
        uint64_t v31 = *((void *)v15 + 1);
        uint64_t v30 = *((void *)v15 + 2);
        uint64_t v33 = *((void *)v16 + 1);
        uint64_t v32 = *((void *)v16 + 2);
        if ((v17 & 0x80) != 0)
        {
          if ((v22 & 0x80) == 0 || v31 != v33 || v30 != v32) {
            goto LABEL_4;
          }
        }
        else
        {
          if ((v22 & 0x80) != 0) {
            goto LABEL_4;
          }
          BOOL v34 = (v17 & 1) == 0;
          if (v31 != v33 || v30 != v32 || ((v34 ^ v22) & 1) == 0) {
            goto LABEL_4;
          }
        }
      }
      else if (v22 <= 0xFD)
      {
        goto LABEL_4;
      }
      int v27 = v26 & 0xFF00;
      if ((v21 & 0xFF00) == 0x300)
      {
        if (v27 == 768) {
          goto LABEL_36;
        }
      }
      else
      {
        if (v27 == 768 || v18 != v23 || v19 != v24) {
          goto LABEL_4;
        }
        if (v21)
        {
          if ((v26 & 1) == 0) {
            goto LABEL_4;
          }
        }
        else if ((v26 & 1) != 0 || v20 != v25)
        {
          goto LABEL_4;
        }
        if (v21 >> 8 == v26 >> 8)
        {
LABEL_36:
          sub_1B6367758((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
          return v11;
        }
      }
LABEL_4:
      sub_1B6367758((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
      unint64_t v11 = (v11 + 1) & v12;
    }
    while (((*(void *)(v2 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

uint64_t sub_1B636758C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B63675F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for TextureCache.TextureKey()
{
  uint64_t result = qword_1EB985400;
  if (!qword_1EB985400) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *sub_1B63676A8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1B6E30F48();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  unint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = v12[1];
  _OWORD *v11 = *v12;
  v11[1] = v13;
  void v11[2] = v12[2];
  *(_OWORD *)((char *)v11 + 42) = *(_OWORD *)((char *)v12 + 42);
  return a1;
}

uint64_t sub_1B6367758(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B63677B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B6367818(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1B6E30F48();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_1B6367880@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (sub_1B63807A8(a2)) {
    return sub_1B6367A74(a1, a4);
  }
  if (a2)
  {
    uint64_t v9 = dispatch_group_create();
    dispatch_group_enter(v9);
    uint64_t result = sub_1B6367968(a1);
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = (a3 & 1) == 0;
    *(unsigned char *)(a1 + 152) = 0;
  }
  else
  {
    sub_1B6380BC4((uint64_t *)a1, (uint64_t)v10);
    if (v11 == 2) {
      return swift_willThrow();
    }
    uint64_t result = sub_1B6367968((uint64_t)v10);
  }
  *(void *)(a4 + 144) = 0;
  *(_OWORD *)(a4 + 112) = 0u;
  *(_OWORD *)(a4 + 128) = 0u;
  *(_OWORD *)(a4 + 80) = 0u;
  *(_OWORD *)(a4 + 96) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)a4 = 0u;
  *(unsigned char *)(a4 + 152) = -1;
  return result;
}

uint64_t sub_1B6367968(uint64_t a1)
{
  return a1;
}

void destroy for TextureCache.CacheEntry.State(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 152);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)a1 + 3;
  }
  switch(v2)
  {
    case 2u:
      uint64_t v3 = *(void **)a1;
      goto LABEL_8;
    case 1u:
      if (*(void *)(a1 + 120))
      {
        swift_unknownObjectWeakDestroy();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 136) != 1)
      {
        swift_unknownObjectWeakDestroy();
        swift_unknownObjectRelease();
      }
      break;
    case 0u:
      uint64_t v3 = *(void **)a1;
LABEL_8:

      break;
  }
}

uint64_t sub_1B6367A74(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for TextureCache.CacheEntry(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 152);
  if (v4 == 2)
  {
    id v8 = *(id *)a2;
    id v9 = *(id *)a2;
    *(void *)a1 = v8;
    char v10 = 2;
LABEL_14:
    *(unsigned char *)(a1 + 152) = v10;
    return a1;
  }
  if (v4 == 1)
  {
    if (*(void *)(a2 + 120))
    {
      swift_unknownObjectWeakCopyInit();
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v15;
      long long v16 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v16;
      long long v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
      long long v18 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 136) == 1)
    {
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
    }
    else
    {
      swift_unknownObjectWeakCopyInit();
      uint64_t v19 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v19;
      swift_unknownObjectRetain();
    }
    char v10 = 1;
    goto LABEL_14;
  }
  if (*(unsigned char *)(a2 + 152))
  {
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    long long v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    long long v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
  }
  else
  {
    id v5 = *(id *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 152) = 0;
    id v7 = v5;
  }
  return a1;
}

uint64_t sub_1B6367C44(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for TextureCache.TextureKey();
  sub_1B6365F60(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
  uint64_t result = sub_1B6366650(a3, a4[7] + 160 * a1);
  ++a4[2];
  return result;
}

uint64_t sub_1B6367CFC()
{
  uint64_t v1 = *((unsigned __int8 *)v0 + 8);
  if (*((unsigned char *)v0 + 8))
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    uint64_t v4 = *((void *)v0 + 2);
    uint64_t v5 = *v0;
    uint64_t v6 = v0[1];
    uint64_t v7 = v0[2];
    do
    {
      uint64_t v8 = v3 + 1;
      v2 += sub_1B6367EB4(v5, v6, v7, v3, v4);
      uint64_t v3 = v8;
    }
    while (v1 != v8);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v9 = 6;
  switch(*((void *)v0 + 3))
  {
    case 1:
    case 3:
    case 8:
      uint64_t v9 = v0[3];
      break;
    case 5:
      return v9 * v2;
    case 6:
      uint64_t v9 = 6 * v0[3];
      break;
    default:
      uint64_t v9 = 1;
      break;
  }
  return v9 * v2;
}

uint64_t sub_1B6367DD0()
{
  id v1 = objc_msgSend(v0, sel_mipmapLevelCount);
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = 0;
    for (uint64_t i = 0; (id)i != v2; ++i)
      v3 += sub_1B6367EB4((uint64_t)objc_msgSend(v0, sel_width), (uint64_t)objc_msgSend(v0, sel_height), (uint64_t)objc_msgSend(v0, sel_depth), i, (uint64_t)objc_msgSend(v0, sel_pixelFormat));
  }
  else
  {
    uint64_t v3 = 0;
  }
  return sub_1B63684E0() * v3;
}

uint64_t sub_1B6367EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4 < -64)
  {
LABEL_2:
    if ((unint64_t)(a5 - 160) >= 0x3B)
    {
      uint64_t v9 = 1;
    }
    else
    {
      uint64_t v9 = 1;
      if ((0x7FDF1FF7CFD54FFuLL >> (a5 + 96))) {
        goto LABEL_18;
      }
    }
    goto LABEL_8;
  }
  if (a4 <= 64)
  {
    if (a4 < 0)
    {
      if ((unint64_t)a4 <= 0xFFFFFFFFFFFFFFC0) {
        goto LABEL_2;
      }
      uint64_t v10 = a1 << -(char)a4;
    }
    else
    {
      uint64_t v10 = a1 >> a4;
      if ((unint64_t)a4 >= 0x40) {
        uint64_t v10 = a1 >> 63;
      }
    }
  }
  else
  {
    uint64_t v10 = a1 >> 63;
  }
  if (v10 <= 1) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = v10;
  }
  if ((unint64_t)(a5 - 160) <= 0x3A && ((1 << (a5 + 96)) & 0x7FDF1FF7CFD54FFLL) != 0)
  {
LABEL_18:
    if ((unint64_t)(a5 - 186) > 0x20) {
      uint64_t v12 = 1;
    }
    else {
      uint64_t v12 = qword_1B6EB0900[a5 - 186];
    }
    uint64_t v11 = 16 * ((v9 + v12 - 1) / v12);
    if (a4 < -64) {
      goto LABEL_22;
    }
    goto LABEL_25;
  }
LABEL_8:
  uint64_t v11 = sub_1B6368160(a5) * v9;
  if (a4 < -64) {
    goto LABEL_22;
  }
LABEL_25:
  if (a4 > 64) {
    goto LABEL_37;
  }
  if (a4 < 0)
  {
    if ((unint64_t)a4 > 0xFFFFFFFFFFFFFFC0)
    {
      uint64_t v13 = a2 << -(char)a4;
      if (v13 > 0) {
        goto LABEL_29;
      }
      goto LABEL_37;
    }
LABEL_22:
    if ((unint64_t)(a5 - 160) >= 0x3B)
    {
      uint64_t v14 = 1;
      uint64_t v13 = 1;
      return v14 * v11 * v13;
    }
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    if (((0x7FDF1FF7CFD54FFuLL >> (a5 + 96)) & 1) == 0) {
      return v14 * v11 * v13;
    }
    goto LABEL_45;
  }
  if ((unint64_t)a4 < 0x40)
  {
    uint64_t v13 = a2 >> a4;
    if (a2 >> a4 > 0)
    {
LABEL_29:
      if ((unint64_t)(a5 - 160) > 0x3A || ((1 << (a5 + 96)) & 0x7FDF1FF7CFD54FFLL) == 0)
      {
LABEL_52:
        if ((a4 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)a4 < 0x40)
          {
LABEL_54:
            uint64_t v14 = a3 >> a4;
            goto LABEL_55;
          }
LABEL_51:
          uint64_t v14 = a3 >> 63;
          goto LABEL_55;
        }
        if ((unint64_t)a4 <= 0xFFFFFFFFFFFFFFC0)
        {
LABEL_49:
          uint64_t v14 = 1;
          return v14 * v11 * v13;
        }
        goto LABEL_60;
      }
LABEL_45:
      if ((unint64_t)(a5 - 186) > 0x20) {
        uint64_t v15 = 1;
      }
      else {
        uint64_t v15 = qword_1B6EB0A08[a5 - 186];
      }
      uint64_t v13 = (v13 + v15 - 1) / v15;
      if (a4 < -64) {
        goto LABEL_49;
      }
      if (a4 > 64) {
        goto LABEL_51;
      }
      goto LABEL_52;
    }
  }
LABEL_37:
  if (unint64_t)(a5 - 160) < 0x3B && ((0x7FDF1FF7CFD54FFuLL >> (a5 + 96)))
  {
    uint64_t v13 = 1;
    goto LABEL_45;
  }
  if (a4 > 64)
  {
    uint64_t v13 = 1;
    goto LABEL_51;
  }
  if ((a4 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = 1;
    uint64_t v13 = 1;
    if ((unint64_t)a4 >= 0x40) {
      return v14 * v11 * v13;
    }
    goto LABEL_54;
  }
  uint64_t v13 = 1;
LABEL_60:
  uint64_t v14 = a3 << -(char)a4;
LABEL_55:
  if (v14 <= 1) {
    uint64_t v14 = 1;
  }
  return v14 * v11 * v13;
}

uint64_t sub_1B6368160(uint64_t a1)
{
  uint64_t v1 = 1;
  switch(a1)
  {
    case 1:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 253:
      return v1;
    case 20:
    case 22:
    case 23:
    case 24:
    case 25:
    case 30:
    case 32:
    case 33:
    case 34:
    case 250:
      return 2;
    case 53:
    case 54:
    case 55:
    case 60:
    case 62:
    case 63:
    case 64:
    case 65:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 80:
    case 81:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 252:
      return 4;
    case 103:
    case 104:
    case 105:
    case 110:
    case 112:
    case 113:
    case 114:
    case 115:
      return 8;
    case 123:
    case 124:
    case 125:
      return 16;
    case 260:
      return 5;
    default:
      if (qword_1E9DCC678 != -1)
      {
        uint64_t v3 = a1;
        swift_once();
        a1 = v3;
      }
      if (qword_1E9E49710 == a1) {
        return 2;
      }
      if (qword_1E9DCC680 != -1)
      {
        uint64_t v4 = a1;
        swift_once();
        a1 = v4;
      }
      if (qword_1E9E49718 == a1) {
        return 2;
      }
      if (qword_1E9DCC698 != -1)
      {
        uint64_t v5 = a1;
        swift_once();
        a1 = v5;
      }
      if (qword_1E9E49730 == a1) {
        return 3;
      }
      if (qword_1E9DCC6A0 != -1)
      {
        uint64_t v6 = a1;
        swift_once();
        a1 = v6;
      }
      if (qword_1E9E49738 == a1) {
        return 3;
      }
      if (qword_1E9DCC688 != -1)
      {
        uint64_t v7 = a1;
        swift_once();
        a1 = v7;
      }
      if (qword_1E9E49720 == a1) {
        return 3;
      }
      if (qword_1E9DCC690 != -1)
      {
        uint64_t v8 = a1;
        swift_once();
        a1 = v8;
      }
      if (qword_1E9E49728 == a1) {
        return 3;
      }
      if (qword_1E9DCC6A8 != -1)
      {
        uint64_t v9 = a1;
        swift_once();
        a1 = v9;
      }
      if (qword_1E9E49740 == a1) {
        return 4;
      }
      if (qword_1E9DCC6B0 != -1)
      {
        uint64_t v10 = a1;
        swift_once();
        a1 = v10;
      }
      if (qword_1E9E49748 == a1) {
        return 4;
      }
      uint64_t v11 = a1;
      if (!a1) {
        return 0;
      }
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0(v11);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
  }
}

uint64_t sub_1B63684E0()
{
  id v1 = objc_msgSend(v0, sel_textureType);
  uint64_t result = 1;
  switch((unint64_t)v1)
  {
    case 1uLL:
    case 3uLL:
    case 8uLL:
      uint64_t result = (uint64_t)objc_msgSend(v0, sel_arrayLength);
      break;
    case 5uLL:
      uint64_t result = 6;
      break;
    case 6uLL:
      uint64_t result = 6 * (void)objc_msgSend(v0, sel_arrayLength);
      break;
    default:
      return result;
  }
  return result;
}

void sub_1B6368580(uint64_t a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    uint64_t v2 = type metadata accessor for EventDisposeSystem();
    sub_1B6369700(v2, (uint64_t)&off_1F0F76980, 1, 0);
    uint64_t v3 = type metadata accessor for InputClearSystem();
    sub_1B6369700(v3, (uint64_t)&off_1F0F6C848, 1, 0);
    uint64_t v4 = type metadata accessor for HiddenSystem();
    sub_1B6369700(v4, (uint64_t)&off_1F0F5A450, 1, 0);
    uint64_t updated = type metadata accessor for PrepareUpdateSystem();
    sub_1B6369700(updated, (uint64_t)&off_1F0F7E8E0, 1, 0);
    uint64_t v6 = type metadata accessor for RotateActionSystem();
    sub_1B6369700(v6, (uint64_t)&off_1F0F7A788, 1, 1);
    uint64_t v7 = type metadata accessor for SineMoveSystem();
    sub_1B6369700(v7, (uint64_t)&off_1F0F66748, 1, 1);
    uint64_t v8 = type metadata accessor for RenderGraphSystem();
    sub_1B6369700(v8, (uint64_t)&off_1F0F74548, 1, 0);
    uint64_t v9 = type metadata accessor for RenderGraphSystemCleanup();
    sub_1B6369700(v9, (uint64_t)&off_1F0F93E28, 1, 0);
    if ((v1 & 0xC0000000) == 0)
    {
      uint64_t v10 = type metadata accessor for PreUpdateCameraSystem();
      sub_1B6369700(v10, (uint64_t)&off_1F0F59410, 1, 0);
      uint64_t v11 = type metadata accessor for PreRenderCameraSystem();
      sub_1B6369700(v11, (uint64_t)&off_1F0F59410, 1, 0);
    }
    uint64_t v12 = type metadata accessor for AnimationComputeLocalTimeSystem();
    sub_1B6369700(v12, (uint64_t)&off_1F0F9AB50, 1, 1);
    uint64_t v13 = type metadata accessor for BasicAnimationSystem();
    sub_1B6369700(v13, (uint64_t)&off_1F0F7FD40, 1, 1);
    uint64_t v14 = type metadata accessor for KeyframeAnimationSystem();
    sub_1B6369700(v14, (uint64_t)&off_1F0F8F400, 1, 1);
    uint64_t v15 = type metadata accessor for HierarchySystem();
    if ((v1 & 0x80000000) != 0) {
      uint64_t v15 = type metadata accessor for SimplifiedHierarchySystem();
    }
    uint64_t v16 = v15;
    sub_1B6369700(v15, (uint64_t)&off_1F0F687F8, 1, 0);
    uint64_t v17 = type metadata accessor for SmoothMotionSystem();
    sub_1B6369700(v17, (uint64_t)&off_1F0F7A9E8, 1, 1);
    sub_1B6369D5C(v17, (uint64_t)&off_1F0F7A9E8, v16, (uint64_t)&off_1F0F687F8);
    uint64_t v18 = type metadata accessor for StaticToFixedSystem();
    sub_1B6369700(v18, (uint64_t)&off_1F0F7F4C0, 1, 0);
    if ((v1 & 0x80000000) == 0)
    {
      uint64_t FrameWorldTransformSystem_vfx1 = type metadata accessor for LastFrameWorldTransformSystem_vfx1();
      sub_1B6369700(FrameWorldTransformSystem_vfx1, (uint64_t)&off_1F0F99830, 1, 1);
      sub_1B6369D5C(v16, (uint64_t)&off_1F0F687F8, FrameWorldTransformSystem_vfx1, (uint64_t)&off_1F0F99830);
    }
    uint64_t v20 = type metadata accessor for SkeletonAnimationSystem();
    sub_1B6369700(v20, (uint64_t)&off_1F0F91788, 1, 0);
    uint64_t v21 = type metadata accessor for SkeletonSystem();
    sub_1B6369700(v21, (uint64_t)&off_1F0F66798, 1, 0);
    sub_1B6369D5C(v21, (uint64_t)&off_1F0F66798, v16, (uint64_t)&off_1F0F687F8);
    uint64_t v22 = type metadata accessor for SkinningSystem();
    sub_1B6369700(v22, (uint64_t)&off_1F0F66958, 1, 0);
    uint64_t v23 = type metadata accessor for UpdateWorldAABBSystem();
    sub_1B6369700(v23, (uint64_t)&off_1F0F8BE28, 1, 1);
    uint64_t v24 = type metadata accessor for LODSystem();
    sub_1B6369D5C(v23, (uint64_t)&off_1F0F8BE28, v24, (uint64_t)&off_1F0FA8BE0);
    sub_1B6369D5C(v23, (uint64_t)&off_1F0F8BE28, v16, (uint64_t)&off_1F0F687F8);
    if ((v1 & 0x10000000000) == 0)
    {
LABEL_3:
      if ((v1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a1 & 0x10000000000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v25 = type metadata accessor for GraphAuthoringSystem();
  sub_1B6369700(v25, (uint64_t)&off_1F0F80110, 1, 0);
  uint64_t v26 = type metadata accessor for ReplicationStreamSystem();
  sub_1B6369700(v26, (uint64_t)&off_1F0F915D0, 1, 0);
  if ((v1 & 4) == 0)
  {
LABEL_4:
    if ((v1 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t started = type metadata accessor for StartCaptureSystem();
  sub_1B6369700(started, (uint64_t)&off_1F0F7AA38, 1, 0);
  uint64_t v28 = type metadata accessor for StopCaptureSystem();
  sub_1B6369700(v28, (uint64_t)&off_1F0F748B0, 1, 0);
  if ((v1 & 8) == 0)
  {
LABEL_5:
    if ((v1 & 0x400) == 0) {
      goto LABEL_29;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v29 = type metadata accessor for ResourceUsageSystem();
  sub_1B6369700(v29, (uint64_t)&off_1F0F7F100, 1, 0);
  uint64_t v105 = type metadata accessor for MeshReferenceSystem();
  sub_1B6369700(v105, (uint64_t)&off_1F0F7CAA0, 1, 0);
  uint64_t v30 = type metadata accessor for ColorRampSystem();
  sub_1B6369700(v30, (uint64_t)&off_1F0F68180, 1, 0);
  uint64_t v31 = type metadata accessor for GraphScriptRunner();
  sub_1B6369D5C(v30, (uint64_t)&off_1F0F68180, v31, (uint64_t)&off_1F0F71320);
  uint64_t v32 = type metadata accessor for CurveSystem();
  sub_1B6369700(v32, (uint64_t)&off_1F0F54A98, 1, 0);
  sub_1B6369D5C(v32, (uint64_t)&off_1F0F54A98, v31, (uint64_t)&off_1F0F71320);
  uint64_t v33 = type metadata accessor for AssetCatalogSystem();
  sub_1B6369700(v33, (uint64_t)&off_1F0F753E8, 1, 0);
  uint64_t v34 = type metadata accessor for TextureSystem();
  sub_1B6369700(v34, (uint64_t)&off_1F0F622A8, 1, 0);
  uint64_t v35 = type metadata accessor for TextureClientPlaceholderSystem();
  sub_1B6369700(v35, (uint64_t)&off_1F0F9AA28, 1, 0);
  sub_1B6369D5C(v34, (uint64_t)&off_1F0F622A8, v31, (uint64_t)&off_1F0F71320);
  uint64_t v36 = type metadata accessor for MovieSystem();
  sub_1B6369700(v36, (uint64_t)&off_1F0F55F00, 1, 0);
  uint64_t v37 = type metadata accessor for AudioSystem();
  sub_1B6369700(v37, (uint64_t)&off_1F0F54340, 1, 0);
  uint64_t v38 = type metadata accessor for ShaderFileSystem();
  sub_1B6369700(v38, (uint64_t)&off_1F0F6F748, 1, 0);
  uint64_t v39 = type metadata accessor for MaterialSystem();
  sub_1B6369700(v39, (uint64_t)&off_1F0F64660, 1, 0);
  uint64_t v40 = type metadata accessor for ScriptCompilerSystem();
  sub_1B6369D5C(v39, (uint64_t)&off_1F0F64660, v40, (uint64_t)&off_1F0F83E00);
  sub_1B6369D5C(v39, (uint64_t)&off_1F0F64660, v31, (uint64_t)&off_1F0F71320);
  sub_1B6369D5C(v39, (uint64_t)&off_1F0F64660, v34, (uint64_t)&off_1F0F622A8);
  uint64_t v41 = type metadata accessor for SceneKitAssetSystem();
  sub_1B6369700(v41, (uint64_t)&off_1F0F7F3F0, 1, 0);
  uint64_t v42 = type metadata accessor for TextureDownloadSystem();
  sub_1B6369700(v42, (uint64_t)&off_1F0F8B6E8, 1, 0);
  sub_1B6369D5C(v42, (uint64_t)&off_1F0F8B6E8, v34, (uint64_t)&off_1F0F622A8);
  uint64_t v43 = type metadata accessor for TextureDiscardSystem();
  sub_1B6369700(v43, (uint64_t)&off_1F0F83E80, 1, 0);
  uint64_t v104 = type metadata accessor for PointCacheGeneratorSystem();
  sub_1B6369700(v104, (uint64_t)&off_1F0F95C88, 1, 0);
  int v44 = v1;
  uint64_t v1 = type metadata accessor for PrimitiveGeneratorSystem();
  sub_1B6369700(v1, (uint64_t)&off_1F0F93D70, 1, 0);
  uint64_t v45 = type metadata accessor for SceneFileSystem();
  sub_1B6369700(v45, (uint64_t)&off_1F0F6A058, 1, 0);
  uint64_t v46 = type metadata accessor for MeshFileSystem();
  sub_1B6369700(v46, (uint64_t)&off_1F0F646B0, 1, 0);
  sub_1B6369D5C(v46, (uint64_t)&off_1F0F646B0, v105, (uint64_t)&off_1F0F7CAA0);
  sub_1B6369D5C(v46, (uint64_t)&off_1F0F646B0, v1, (uint64_t)&off_1F0F93D70);
  if ((v44 & 0x40000000) == 0)
  {
    uint64_t v47 = type metadata accessor for IBLGeneratorSystem();
    sub_1B6369700(v47, (uint64_t)&off_1F0F76C38, 1, 0);
    sub_1B6369D5C(v47, (uint64_t)&off_1F0F76C38, v34, (uint64_t)&off_1F0F622A8);
  }
  uint64_t v48 = type metadata accessor for SDFFileSystem();
  sub_1B6369700(v48, (uint64_t)&off_1F0F61978, 1, 0);
  uint64_t v49 = type metadata accessor for SDFGeneratorSystem();
  sub_1B6369700(v49, (uint64_t)&off_1F0F7A7D8, 1, 0);
  sub_1B6369D5C(v49, (uint64_t)&off_1F0F7A7D8, v34, (uint64_t)&off_1F0F622A8);
  uint64_t v50 = type metadata accessor for VideoCaptureSystem();
  sub_1B6369700(v50, (uint64_t)&off_1F0F7B848, 1, 0);
  sub_1B6369D5C(v42, (uint64_t)&off_1F0F8B6E8, v49, (uint64_t)&off_1F0F7A7D8);
  sub_1B6369D5C(v105, (uint64_t)&off_1F0F7CAA0, v45, (uint64_t)&off_1F0F6A058);
  sub_1B6369D5C(v39, (uint64_t)&off_1F0F64660, v105, (uint64_t)&off_1F0F7CAA0);
  sub_1B6369D5C(v39, (uint64_t)&off_1F0F64660, v46, (uint64_t)&off_1F0F646B0);
  sub_1B6369D5C(v39, (uint64_t)&off_1F0F64660, v1, (uint64_t)&off_1F0F93D70);
  sub_1B6369D5C(v34, (uint64_t)&off_1F0F622A8, v105, (uint64_t)&off_1F0F7CAA0);
  sub_1B6369D5C(v34, (uint64_t)&off_1F0F622A8, v46, (uint64_t)&off_1F0F646B0);
  sub_1B6369D5C(v104, (uint64_t)&off_1F0F95C88, v42, (uint64_t)&off_1F0F8B6E8);
  sub_1B6369D5C(v104, (uint64_t)&off_1F0F95C88, v46, (uint64_t)&off_1F0F646B0);
  sub_1B6369D5C(v104, (uint64_t)&off_1F0F95C88, v105, (uint64_t)&off_1F0F7CAA0);
  LODWORD(v1) = v44;
  if ((v44 & 0x400) == 0)
  {
LABEL_29:
    if ((v1 & 0x8000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_35;
  }
LABEL_19:
  uint64_t v51 = type metadata accessor for EmitterPrepareRuntime();
  sub_1B6369700(v51, (uint64_t)&off_1F0F84CE8, 1, 0);
  uint64_t active = type metadata accessor for SetActiveSystem();
  sub_1B6369D5C(v51, (uint64_t)&off_1F0F84CE8, active, (uint64_t)&off_1F0F6A1C0);
  uint64_t v53 = type metadata accessor for ParticleSubSpawnAddStateSystem();
  sub_1B6369700(v53, (uint64_t)&off_1F0F9A5E8, 1, 1);
  uint64_t v54 = type metadata accessor for EmitterWarmup();
  sub_1B6369700(v54, (uint64_t)&off_1F0F5ED48, 1, 1);
  if ((v1 & 0x80000000) != 0)
  {
    uint64_t v56 = type metadata accessor for ParticleSubSpawnSystemPostInit();
    sub_1B6369700(v56, (uint64_t)&off_1F0F8DE00, 1, 1);
    uint64_t v55 = type metadata accessor for ParticleSubSpawnSystemPostUpdate();
  }
  else
  {
    uint64_t v55 = type metadata accessor for ParticleSubSpawnSystem();
  }
  sub_1B6369700(v55, (uint64_t)&off_1F0F8DE00, 1, 1);
  uint64_t v57 = type metadata accessor for TransientPushSystem();
  sub_1B6369700(v57, (uint64_t)&off_1F0F7F7A8, 1, 1);
  uint64_t v58 = type metadata accessor for ForceFieldSystem();
  sub_1B6369700(v58, (uint64_t)&off_1F0F6C070, 1, 1);
  uint64_t v59 = type metadata accessor for ParticleEmitterTransport();
  sub_1B6369700(v59, (uint64_t)&off_1F0F92D58, 1, 0);
  uint64_t v60 = type metadata accessor for ParticleFluidSolver2DSolverSystem();
  sub_1B6369700(v60, (uint64_t)&off_1F0F9BE38, 1, 1);
  uint64_t v61 = type metadata accessor for EmitterCullingSystem();
  sub_1B6369700(v61, (uint64_t)&off_1F0F7FF20, 1, 1);
  uint64_t v62 = type metadata accessor for UpdateWorldAABBSystem();
  sub_1B6369D5C(v61, (uint64_t)&off_1F0F7FF20, v62, (uint64_t)&off_1F0F8BE28);
  uint64_t v63 = type metadata accessor for ScriptCompilerSystem();
  sub_1B6369700(v63, (uint64_t)&off_1F0F83E00, 1, 0);
  if ((v1 & 8) != 0)
  {
    uint64_t v64 = type metadata accessor for ShaderFileSystem();
    sub_1B6369D5C(v63, (uint64_t)&off_1F0F83E00, v64, (uint64_t)&off_1F0F6F748);
  }
  uint64_t v65 = type metadata accessor for GraphScriptRunner();
  sub_1B6369700(v65, (uint64_t)&off_1F0F71320, 1, 1);
  sub_1B6369D5C(v65, (uint64_t)&off_1F0F71320, v63, (uint64_t)&off_1F0F83E00);
  uint64_t v66 = type metadata accessor for TriggerScriptRunnerSystem();
  sub_1B6369700(v66, (uint64_t)&off_1F0F95D60, 1, 1);
  sub_1B6369D5C(v66, (uint64_t)&off_1F0F95D60, v63, (uint64_t)&off_1F0F83E00);
  uint64_t v67 = type metadata accessor for KernelScriptReflectionSystem();
  sub_1B6369700(v67, (uint64_t)&off_1F0F98A18, 1, 0);
  sub_1B6369D5C(v67, (uint64_t)&off_1F0F98A18, v63, (uint64_t)&off_1F0F83E00);
  sub_1B6369700(active, (uint64_t)&off_1F0F6A1C0, 1, 0);
  sub_1B6369D5C(active, (uint64_t)&off_1F0F6A1C0, v65, (uint64_t)&off_1F0F71320);
  if ((v1 & 0xC0000000) == 0)
  {
    uint64_t v68 = type metadata accessor for ParticleGPUDownload();
    sub_1B6369700(v68, (uint64_t)&off_1F0F7D830, 1, 0);
  }
  uint64_t v69 = type metadata accessor for RendererPostUpdateSystem();
  sub_1B6369700(v69, (uint64_t)&off_1F0F94178, 1, 0);
  if ((v1 & 0xC0000000) == 0)
  {
    uint64_t v70 = type metadata accessor for ParticleGPUDownload();
    sub_1B6369D5C(v69, (uint64_t)&off_1F0F94178, v70, (uint64_t)&off_1F0F7D830);
  }
  uint64_t v71 = type metadata accessor for LookAtSystem();
  sub_1B6369700(v71, (uint64_t)&off_1F0F5A940, 1, 1);
  uint64_t v72 = type metadata accessor for ParticleSortSystem();
  sub_1B6369700(v72, (uint64_t)&off_1F0F79800, 1, 0);
  if ((v1 & 0xC0000000) != 0) {
    goto LABEL_29;
  }
  uint64_t v73 = type metadata accessor for PreRenderCameraSystem();
  sub_1B6369D5C(v72, (uint64_t)&off_1F0F79800, v73, (uint64_t)&off_1F0F59410);
  if ((v1 & 0x8000) == 0)
  {
LABEL_30:
    if ((v1 & 0x100000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_35:
  uint64_t v74 = type metadata accessor for DrawCallDisposeSystem();
  sub_1B6369700(v74, (uint64_t)&off_1F0F84C98, 1, 0);
  uint64_t v75 = type metadata accessor for LODSystem();
  sub_1B6369700(v75, (uint64_t)&off_1F0FA8BE0, 1, 0);
  uint64_t v76 = type metadata accessor for CullingSystem();
  sub_1B6369700(v76, (uint64_t)&off_1F0F5E4C0, 1, 0);
  if ((v1 & 0xC0000000) == 0)
  {
    uint64_t v77 = type metadata accessor for PreRenderCameraSystem();
    sub_1B6369D5C(v76, (uint64_t)&off_1F0F5E4C0, v77, (uint64_t)&off_1F0F59410);
  }
  uint64_t v78 = type metadata accessor for UpdateWorldAABBSystem();
  sub_1B6369D5C(v76, (uint64_t)&off_1F0F5E4C0, v78, (uint64_t)&off_1F0F8BE28);
  uint64_t v79 = type metadata accessor for PrepareRenderSystem();
  sub_1B6369700(v79, (uint64_t)&off_1F0F7E890, 1, 0);
  uint64_t v80 = type metadata accessor for GlobalsSystem();
  sub_1B6369700(v80, (uint64_t)&off_1F0F5FB68, 1, 0);
  uint64_t v81 = type metadata accessor for PrepareLightsSystem();
  sub_1B6369D5C(v80, (uint64_t)&off_1F0F5FB68, v81, (uint64_t)&off_1F0F7E840);
  if ((v1 & 0x40000000) == 0)
  {
    sub_1B6369700(v81, (uint64_t)&off_1F0F7E840, 1, 0);
    sub_1B6369D5C(v81, (uint64_t)&off_1F0F7E840, v79, (uint64_t)&off_1F0F7E890);
  }
  if ((v1 & 0xC0000000) == 0)
  {
    uint64_t v82 = type metadata accessor for ParticleSortSystem();
    sub_1B6369D5C(v82, (uint64_t)&off_1F0F79800, v81, (uint64_t)&off_1F0F7E840);
  }
  uint64_t v83 = type metadata accessor for MeshRenderSystem();
  sub_1B6369700(v83, (uint64_t)&off_1F0F6CA78, 1, 0);
  sub_1B6369D5C(v83, (uint64_t)&off_1F0F6CA78, v76, (uint64_t)&off_1F0F5E4C0);
  uint64_t v84 = type metadata accessor for DebugVFXSystem();
  sub_1B6369700(v84, (uint64_t)&off_1F0F63AB0, 1, 0);
  uint64_t v85 = type metadata accessor for DebugInfoSystem();
  sub_1B6369700(v85, (uint64_t)&off_1F0F68438, 1, 0);
  if ((v1 & 0x100000) == 0)
  {
LABEL_31:
    if ((v1 & 0x200000) == 0) {
      goto LABEL_32;
    }
LABEL_43:
    uint64_t v99 = type metadata accessor for CompositeSystem();
    sub_1B6369700(v99, (uint64_t)&off_1F0F68380, 1, 0);
    uint64_t v100 = type metadata accessor for BloomPassSystem();
    sub_1B6369700(v100, (uint64_t)&off_1F0F68130, 1, 0);
    uint64_t v101 = type metadata accessor for LensBlurPassSystem();
    sub_1B6369700(v101, (uint64_t)&off_1F0F76C88, 1, 0);
    uint64_t v102 = type metadata accessor for PostProcessSystem();
    sub_1B6369700(v102, (uint64_t)&off_1F0F74400, 1, 0);
    sub_1B6369D5C(v101, (uint64_t)&off_1F0F76C88, v99, (uint64_t)&off_1F0F68380);
    sub_1B6369D5C(v100, (uint64_t)&off_1F0F68130, v101, (uint64_t)&off_1F0F76C88);
    sub_1B6369D5C(v102, (uint64_t)&off_1F0F74400, v100, (uint64_t)&off_1F0F68130);
    if ((v1 & 0x80000000) == 0) {
      return;
    }
    goto LABEL_44;
  }
LABEL_42:
  uint64_t v86 = type metadata accessor for SceneKitSystem();
  sub_1B6369700(v86, (uint64_t)&off_1F0F65AA0, 1, 0);
  uint64_t v87 = type metadata accessor for ShadowSystem();
  sub_1B6369700(v87, (uint64_t)&off_1F0F5C148, 1, 0);
  uint64_t v88 = type metadata accessor for MeshRenderSystem();
  sub_1B6369D5C(v87, (uint64_t)&off_1F0F5C148, v88, (uint64_t)&off_1F0F6CA78);
  uint64_t v89 = type metadata accessor for OpaqueRenderPass();
  sub_1B6369700(v89, (uint64_t)&off_1F0F6CC98, 1, 0);
  uint64_t v90 = type metadata accessor for TransparentRenderPass();
  sub_1B6369700(v90, (uint64_t)&off_1F0F8BDD8, 1, 0);
  uint64_t v91 = type metadata accessor for DebugCullingSystem();
  sub_1B6369700(v91, (uint64_t)&off_1F0F75D78, 0, 0);
  uint64_t v92 = type metadata accessor for SkyboxSystem();
  sub_1B6369700(v92, (uint64_t)&off_1F0F5C3E8, 1, 0);
  uint64_t v93 = type metadata accessor for DeferredRendering();
  sub_1B6369700(v93, (uint64_t)&off_1F0F70868, 1, 0);
  int v94 = v1;
  uint64_t v1 = type metadata accessor for DepthPrepareSystem();
  sub_1B6369700(v1, (uint64_t)&off_1F0F75F08, 1, 0);
  sub_1B6369D5C(v86, (uint64_t)&off_1F0F65AA0, v92, (uint64_t)&off_1F0F5C3E8);
  sub_1B6369D5C(v1, (uint64_t)&off_1F0F75F08, v93, (uint64_t)&off_1F0F70868);
  sub_1B6369D5C(v92, (uint64_t)&off_1F0F5C3E8, v93, (uint64_t)&off_1F0F70868);
  uint64_t v95 = type metadata accessor for DebugDrawingSystem();
  sub_1B6369700(v95, (uint64_t)&off_1F0F75DC8, 1, 0);
  uint64_t v96 = type metadata accessor for WireframeLayerSystem();
  sub_1B6369700(v96, (uint64_t)&off_1F0F846B0, 0, 0);
  uint64_t v97 = type metadata accessor for DebugVFXSystem();
  uint64_t v98 = type metadata accessor for PostProcessSystem();
  sub_1B6369D5C(v97, (uint64_t)&off_1F0F63AB0, v98, (uint64_t)&off_1F0F74400);
  sub_1B6369D5C(v91, (uint64_t)&off_1F0F75D78, v98, (uint64_t)&off_1F0F74400);
  sub_1B6369D5C(v95, (uint64_t)&off_1F0F75DC8, v98, (uint64_t)&off_1F0F74400);
  LODWORD(v1) = v94;
  sub_1B6369D5C(v96, (uint64_t)&off_1F0F846B0, v98, (uint64_t)&off_1F0F74400);
  if ((v94 & 0x200000) != 0) {
    goto LABEL_43;
  }
LABEL_32:
  if ((v1 & 0x80000000) == 0) {
    return;
  }
LABEL_44:
  FrameWorldTransformSysteuint64_t m = type metadata accessor for LastFrameWorldTransformSystem();

  sub_1B6369700(FrameWorldTransformSystem, (uint64_t)&off_1F0F99830, 1, 1);
}

uint64_t sub_1B6369700(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(v4 + 96);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t result = swift_getObjCClassFromMetadata();
    uint64_t v13 = (void *)(v10 + 32);
    while (*v13 != result)
    {
      v13 += 12;
      if (!--v11) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    uint64_t v14 = *(void *)(a2 + 8);
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a1, v14);
    char v27 = a4;
    char v28 = a3;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
    uint64_t v17 = swift_retain();
    v16(v17, a1, v14);
    swift_release();
    swift_getObjectType();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(a1, v14);
    uint64_t v19 = v18;
    LOBYTE(v16) = v20;
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 24);
    swift_unknownObjectRetain();
    uint64_t v22 = v21(a1, v14);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v15;
    *(void *)(v23 + 24) = a2;
    uint64_t v24 = *(void *)(v5 + 24);
    swift_unknownObjectRetain();
    swift_retain();
    sub_1B6369AC4(ObjCClassFromMetadata, 0xFFFFFFFFuLL, v25, v19, (char)v16, v15, v14, v22, (uint64_t)v29, 1000, 0, v28 & 1, v27 & 1, (uint64_t)sub_1B62F4260, v23, v24);
    v38[0] = v29[0];
    v38[1] = v29[1];
    char v39 = v30;
    long long v40 = v31;
    long long v41 = v32;
    char v42 = v33;
    char v43 = v34;
    char v44 = v35;
    int v45 = v36;
    long long v46 = v37;
    sub_1B6369960(0, 0, v38);
    uint64_t result = swift_unknownObjectRelease();
    *(unsigned char *)(v5 + 160) = 1;
  }
  return result;
}

void *sub_1B6369960(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v7 = a2 - a1;
  uint64_t v8 = 1 - (a2 - a1);
  uint64_t v9 = *(void **)v3;
  uint64_t v10 = *(void *)(*(void *)v3 + 16);
  uint64_t v11 = v10 + v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v9[3] >> 1)
  {
    if (v10 <= v11) {
      uint64_t v13 = v10 + v8;
    }
    else {
      uint64_t v13 = v10;
    }
    uint64_t v9 = sub_1B636A9C8(isUniquelyReferenced_nonNull_native, v13, 1, v9);
  }
  uint64_t v14 = v9 + 4;
  uint64_t v15 = &v9[12 * a1 + 4];
  uint64_t result = (void *)swift_arrayDestroy();
  if (v7 == 1) {
    goto LABEL_16;
  }
  uint64_t v17 = v9[2];
  uint64_t v18 = v17 - a2;
  if (v17 - a2 >= 0)
  {
    uint64_t result = v15 + 6;
    uint64_t v19 = &v14[12 * a2];
    unint64_t v20 = (unint64_t)&v14[12 * v17];
    if (v15 + 6 != v19 || (unint64_t)result >= v20) {
      uint64_t result = memmove(result, v19, 96 * v18);
    }
    v9[2] += v8;
LABEL_16:
    long long v22 = a3[3];
    v15[2] = a3[2];
    void v15[3] = v22;
    long long v23 = a3[5];
    v15[4] = a3[4];
    v15[5] = v23;
    long long v24 = a3[1];
    *uint64_t v15 = *a3;
    v15[1] = v24;
    *(void *)uint64_t v3 = v9;
    return result;
  }
  uint64_t result = (void *)sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6369AC4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  unint64_t v34 = HIDWORD(a2);
  int v36 = a2;
  if (a2 == 0xFFFFFFFF)
  {
    swift_unknownObjectRetain();
    swift_retain();
LABEL_6:
    uint64_t v24 = *(void *)(a16 + OBJC_IVAR____TtC3VFX13EntityManager_counters);
    if (v24)
    {
      uint64_t v27 = a3;
      uint64_t v28 = sub_1B6E328F8();
      LODWORD(v24) = vfx_counters.addCounter(name:scope:kind:)(v28, v29, 0, 0, v24);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t result = swift_unknownObjectRelease();
      goto LABEL_8;
    }
    swift_release();
    swift_release();
    uint64_t result = swift_unknownObjectRelease();
LABEL_11:
    uint64_t v31 = a14;
    uint64_t v30 = a7;
    char v32 = a13;
    uint64_t v27 = a3;
    goto LABEL_12;
  }
  swift_retain();
  uint64_t v22 = sub_1B636A9A0(a2);
  uint64_t v24 = v23;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  if (!v24) {
    goto LABEL_6;
  }
  uint64_t v33 = a8;
  uint64_t v25 = *(void *)(a16 + OBJC_IVAR____TtC3VFX13EntityManager_counters);
  if (!v25)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    uint64_t result = swift_release();
    LODWORD(v24) = 0;
    a8 = v33;
    goto LABEL_11;
  }
  sub_1B6E31948();
  sub_1B6E328F8();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  LODWORD(v24) = vfx_counters.addCounter(name:scope:kind:)(v22, v24, 0, 0, v25);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t result = swift_release();
  uint64_t v27 = a3;
  a8 = v33;
LABEL_8:
  uint64_t v31 = a14;
  uint64_t v30 = a7;
  char v32 = a13;
LABEL_12:
  *(void *)a9 = a1;
  *(_DWORD *)(a9 + 8) = v36;
  *(_DWORD *)(a9 + 12) = v34;
  *(void *)(a9 + 16) = v27;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = v30;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11 & 1;
  *(unsigned char *)(a9 + 73) = a12 & 1;
  *(unsigned char *)(a9 + 74) = v32 & 1;
  *(_DWORD *)(a9 + 76) = v24;
  *(void *)(a9 + 80) = v31;
  *(void *)(a9 + 88) = a15;
  return result;
}

void sub_1B6369D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 56));
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v9 = ObjCClassFromMetadata;
  uint64_t v10 = *(void *)(v4 + 168);
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_1B62C19C8(ObjCClassFromMetadata), (v12 & 1) != 0))
  {
    uint64_t v13 = *(char **)(*(void *)(v10 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    uint64_t v14 = *((void *)v13 + 2);
    if (!v14) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v14)
    {
LABEL_9:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_1B636A6C0(0, v14 + 1, 1, v13);
      }
      unint64_t v19 = *((void *)v13 + 2);
      unint64_t v18 = *((void *)v13 + 3);
      if (v19 >= v18 >> 1) {
        uint64_t v13 = sub_1B636A6C0(v18 > 1, v19 + 1, 1, v13);
      }
      *((void *)v13 + 2) = v19 + 1;
      unint64_t v20 = &v13[16 * v19];
      *((void *)v20 + 4) = a3;
      *((void *)v20 + 5) = a4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = *(void *)(v5 + 168);
      *(void *)(v5 + 168) = 0x8000000000000000;
      sub_1B636A5A0((uint64_t)v13, v9, isUniquelyReferenced_nonNull_native);
      *(void *)(v5 + 168) = v23;
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 160) = 257;
      goto LABEL_15;
    }
  }
  uint64_t v15 = swift_getObjCClassFromMetadata();
  uint64_t v16 = 32;
  uint64_t v17 = v14;
  while (swift_getObjCClassFromMetadata() != v15)
  {
    v16 += 16;
    if (!--v17) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v22 = *(os_unfair_lock_s **)(v5 + 56);

  os_unfair_lock_unlock(v22);
}

uint64_t sub_1B6369F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 32);
  sub_1B62C9FE4(v5, *(void *)(v3 + 48));
  uint64_t v7 = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *(void **)(v3 + 48);
  *(void *)(v3 + 48) = 0x8000000000000000;
  unint64_t v10 = sub_1B62C1A30(v5);
  char v11 = v9;
  uint64_t v12 = v21[2] + ((v9 & 1) == 0);
  if (v21[3] >= v12)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v9) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_1B62B8194();
      if (v11) {
        goto LABEL_7;
      }
    }
LABEL_11:
    sub_1B636A138(a2);
    uint64_t v15 = v21;
    goto LABEL_12;
  }
  sub_1B62B7180(v12, isUniquelyReferenced_nonNull_native);
  unint64_t v13 = sub_1B62C1A30(v5);
  if ((v11 & 1) != (v14 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v10 = v13;
  if ((v11 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v15 = v21;
  uint64_t v16 = v21[7] + 24 * v10;
  *(_OWORD *)unint64_t v20 = *(_OWORD *)v16;
  *(void *)&v20[16] = *(void *)(v16 + 16);
  sub_1B636A138(a2);
  if (*(void *)v20)
  {
    uint64_t v17 = v21[7] + 24 * v10;
    *(void *)uint64_t v17 = *(void *)v20;
    *(_OWORD *)(v17 + 8) = *(_OWORD *)&v20[8];
  }
  else
  {
    sub_1B6AC8184(v10, (uint64_t)v21);
  }
LABEL_12:
  *(void *)(v3 + 48) = v15;
  BOOL v18 = *(void *)(v7 + 16) != 0;
  swift_retain();
  sub_1B636A424(a2, v18);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1B636A138(uint64_t result)
{
  uint64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (v4)
  {
    if (*(void *)(v3 + 32) == result) {
      return result;
    }
    if (v4 != 1)
    {
      if (*(void *)(v3 + 40) == result) {
        return result;
      }
      uint64_t v7 = v4 - 2;
      uint64_t v8 = (uint64_t *)(v3 + 48);
      while (v7)
      {
        uint64_t v9 = *v8++;
        --v7;
        if (v9 == result) {
          return result;
        }
      }
    }
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B636A21C(0, v4 + 1, 1, (char *)v3);
    uint64_t v3 = result;
  }
  unint64_t v6 = *(void *)(v3 + 16);
  unint64_t v5 = *(void *)(v3 + 24);
  if (v6 >= v5 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B636A21C(v5 > 1, v6 + 1, 1, (char *)v3);
    uint64_t v3 = result;
  }
  *(void *)(v3 + 16) = v6 + 1;
  *(void *)(v3 + 8 * v6 + 32) = v2;
  *uint64_t v1 = v3;
  return result;
}

char *sub_1B636A21C(char a1, uint64_t a2, char a3, char *a4)
{
  return sub_1B636A230(a1, a2, a3, a4, &qword_1EB980D78, MEMORY[0x1E4FBBAB8]);
}

char *sub_1B636A230(char a1, uint64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    uint64_t v9 = v8 >> 1;
    int64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (v10 <= a2) {
      int64_t v10 = a2;
    }
    if (v9 < a2) {
      a2 = v10;
    }
    else {
      a2 = v9;
    }
  }
  uint64_t v11 = *((void *)a4 + 2);
  if (a2 <= v11) {
    uint64_t v12 = *((void *)a4 + 2);
  }
  else {
    uint64_t v12 = a2;
  }
  if (v12)
  {
    sub_1B62CB1E8(0, a5, a6, MEMORY[0x1E4FBBE00]);
    unint64_t v13 = (char *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    *((void *)v13 + 2) = v11;
    *((void *)v13 + 3) = 2 * (v15 >> 3);
    uint64_t v16 = v13 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B636A340(0, v11, v16, (uint64_t)a4);
    goto LABEL_23;
  }
  unint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v16 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v13 != a4 || v16 >= &a4[8 * v11 + 32]) {
    memmove(v16, a4 + 32, 8 * v11);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v13;
}

char *sub_1B636A340(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (a2 - a1 < 0
    || ((unint64_t v6 = (char *)(a4 + 32 + 8 * a1), v7 = &__dst[8 * v4], v8 = a4 + 32 + 8 * a2, v6 < v7)
      ? (BOOL v9 = v8 > (unint64_t)__dst)
      : (BOOL v9 = 0),
        v9))
  {
    uint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    memcpy(__dst, v6, 8 * v4);
    return v7;
  }
  return result;
}

void sub_1B636A424(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 56));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *(void *)(v2 + 152);
  *(void *)(v3 + 152) = 0x8000000000000000;
  unint64_t v8 = sub_1B62C19C8(a1);
  char v10 = v9;
  uint64_t v11 = *(void *)(v7 + 16) + ((v9 & 1) == 0);
  if (*(void *)(v7 + 24) >= v11)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1B6ACB3F4();
    }
  }
  else
  {
    sub_1B62BBDC4(v11, isUniquelyReferenced_nonNull_native);
    unint64_t v12 = sub_1B62C19C8(a1);
    if ((v10 & 1) != (v13 & 1))
    {
      sub_1B6E33838();
      __break(1u);
      return;
    }
    unint64_t v8 = v12;
  }
  *(void *)(v3 + 152) = v7;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v3 + 152);
  if ((v10 & 1) == 0) {
    sub_1B636A6BC(v8, a1, 0, *(void *)(v3 + 152));
  }
  *(void *)(*(void *)(v14 + 56) + 8 * v8) += a2;
  uint64_t v15 = *(os_unfair_lock_s **)(v3 + 56);

  os_unfair_lock_unlock(v15);
}

unint64_t sub_1B636A55C(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  ++a4[2];
  return result;
}

unint64_t sub_1B636A5A0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C19C8(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD1640();
    goto LABEL_6;
  }
  sub_1B636AB18(v13, a3 & 1);
  unint64_t v17 = sub_1B62C19C8(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B636A59C(v9, a2, a1, v14);
}

char *sub_1B636A6C0(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B636A7B4();
    char v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
    uint64_t v14 = v11 + 32;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B62CCD9C(0, v9, v14, (uint64_t)a4);
    goto LABEL_23;
  }
  char v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[16 * v9 + 32]) {
    memmove(v14, a4 + 32, 16 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1B636A7B4()
{
  if (!qword_1EB980B90)
  {
    sub_1B637EC90(255, (unint64_t *)&qword_1EB97EAD8, &qword_1EB97EAD0);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980B90);
    }
  }
}

uint64_t sub_1B636A828()
{
  return qword_1E9DD2FC8;
}

uint64_t sub_1B636A834(unint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v4 = HIDWORD(a1);
  if (a1 != -1 || (uint64_t result = 0, v4))
  {
    uint64_t result = 0;
    if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (v4 == -1 || *(_DWORD *)(v6 + 12 * (int)a1 + 8) == v4) {
        return a2(*(void *)(*(void *)(v2 + 136) + 8 * *(int *)(v6 + 12 * (int)a1) + 32));
      }
      else {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B636A914(uint64_t a1, int a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 0;
  }
  for (uint64_t i = (void *)(v5 + 56); (ValueMetadata *)*(i - 3) != &type metadata for Name; i += 5)
  {
    if (!--v6) {
      return 0;
    }
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(*(void *)(a5 + 136) + 8 * a2 + 32) + 128) + *i + a3 * a4);
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_1B636A9A0(unint64_t a1)
{
  return sub_1B636A834(a1, (uint64_t (*)(void))sub_1B636A914);
}

uint64_t sub_1B636A9B8()
{
  return swift_allocObject();
}

void *sub_1B636A9C8(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    char v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B636AE78(0, v9, (unint64_t)v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, (unint64_t *)&unk_1EB980C80, (uint64_t)&type metadata for Scheduler.Job, MEMORY[0x1E4FBBE00]);
  char v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  void v11[2] = v9;
  v11[3] = 2 * ((uint64_t)(v12 - 32) / 96);
  uint64_t v13 = v11 + 4;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[12 * v9 + 4]) {
    memmove(v13, a4 + 4, 96 * v9);
  }
  a4[2] = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B636AAF8()
{
  return qword_1E9DD2FD8;
}

uint64_t sub_1B636AB08()
{
  return qword_1E9DD2FE0;
}

uint64_t sub_1B636AB18(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B636ADE0();
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_35;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v12 = v6 + 64;
  uint64_t v29 = (void *)(v5 + 64);
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v8 << 6);
      goto LABEL_21;
    }
    uint64_t v21 = v8 + 1;
    if (v8 + 1 >= v30) {
      goto LABEL_29;
    }
    unint64_t v22 = v29[v21];
    if (!v22)
    {
      uint64_t v21 = v8 + 2;
      if (v8 + 2 >= v30) {
        goto LABEL_29;
      }
      unint64_t v22 = v29[v21];
      if (!v22)
      {
        uint64_t v21 = v8 + 3;
        if (v8 + 3 >= v30) {
          goto LABEL_29;
        }
        unint64_t v22 = v29[v21];
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v8 = v21;
LABEL_21:
    uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v13 = sub_1B6E33988();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (v16 + 1 == v25) {
          unint64_t v16 = 0;
        }
        else {
          ++v16;
        }
        uint64_t v26 = *(void *)(v12 + 8 * v16);
      }
      while (v26 == -1);
      unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
    }
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v23;
    *(void *)(*(void *)(v7 + 56) + v18) = v24;
    ++*(void *)(v7 + 16);
  }
  while (v30 - 4 != v8)
  {
    unint64_t v22 = *(void *)(v5 + 96 + 8 * v8++);
    if (v22)
    {
      uint64_t v21 = v8 + 3;
      goto LABEL_20;
    }
  }
LABEL_29:
  if (a2)
  {
    uint64_t v27 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v27 >= 64) {
      bzero(v29, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v29 = -1 << v27;
    }
    *(void *)(v5 + 16) = 0;
LABEL_35:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

void sub_1B636ADE0()
{
  if (!qword_1EB980808)
  {
    sub_1B63999E0(255, (unint64_t *)&qword_1EB980230, (uint64_t (*)(uint64_t))sub_1B6ADA358, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980808);
    }
  }
}

uint64_t sub_1B636AE78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 96 * (a2 - a1), a4 + 32 + 96 * a1 < v4) ? (v5 = a4 + 32 + 96 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

uint64_t sub_1B636AF64()
{
  return qword_1E9DD2FF0;
}

uint64_t sub_1B636AF70()
{
  return qword_1E9DD2FC0;
}

uint64_t sub_1B636AF7C()
{
  return qword_1E9DD2FF0 - 1;
}

uint64_t sub_1B636AF8C()
{
  return qword_1E9DD3018;
}

uint64_t sub_1B636AF98()
{
  return qword_1E9DD3008;
}

uint64_t type metadata accessor for LODSystem()
{
  return self;
}

uint64_t sub_1B636AFC8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *__return_ptr, uint64_t))
{
  uint64_t v6 = swift_allocObject();
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1EB997A18;
  int v12 = 0;
  char v13 = 2;
  uint64_t v14 = 0;
  char v15 = 2;
  uint64_t v16 = 0;
  swift_retain();
  a4(v9, a3);
  swift_release();
  long long v7 = v9[1];
  *(_OWORD *)(v6 + 16) = v9[0];
  *(_OWORD *)(v6 + 32) = v7;
  *(void *)(v6 + 48) = v10;
  return v6;
}

uint64_t type metadata accessor for UpdateWorldAABBSystem()
{
  return self;
}

uint64_t sub_1B636B0C8()
{
  return qword_1E9DD2FD8 + 50;
}

uint64_t type metadata accessor for PreRenderCameraSystem()
{
  return self;
}

uint64_t sub_1B636B0FC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void (*a5)(void))
{
  a3();
  uint64_t v6 = swift_allocObject();
  a5();
  return v6;
}

uint64_t type metadata accessor for ScriptCompilerSystem()
{
  return self;
}

uint64_t sub_1B636B168()
{
  return *(void *)(v0 + 16);
}

uint64_t type metadata accessor for ParticleGPUDownload()
{
  return self;
}

uint64_t type metadata accessor for ParticleSortSystem()
{
  return self;
}

uint64_t sub_1B636B1BC()
{
  uint64_t result = swift_allocObject();
  *(_WORD *)(result + 16) = 256;
  return result;
}

uint64_t type metadata accessor for PostProcessSystem()
{
  return self;
}

uint64_t type metadata accessor for GraphScriptRunner()
{
  return self;
}

uint64_t type metadata accessor for ShaderFileSystem()
{
  return self;
}

uint64_t type metadata accessor for MeshRenderSystem()
{
  return self;
}

uint64_t sub_1B636B278(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v4 = swift_allocObject();
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1EB997A18;
  int v16 = 0;
  char v17 = 2;
  uint64_t v18 = 0;
  char v19 = 2;
  uint64_t v20 = 0;
  swift_retain();
  a3(&v10, 1);
  swift_release();
  int v5 = v11;
  char v6 = v12;
  uint64_t v7 = v14;
  uint64_t v8 = v13 | 4;
  *(void *)(v4 + 16) = v10;
  *(_DWORD *)(v4 + 24) = v5;
  *(unsigned char *)(v4 + 28) = v6;
  *(void *)(v4 + 32) = v8;
  *(unsigned char *)(v4 + 40) = 2;
  *(void *)(v4 + 48) = v7;
  return v4;
}

uint64_t type metadata accessor for DebugVFXSystem()
{
  return self;
}

uint64_t sub_1B636B394()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1B636B3A8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_1B636B3CC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1B636B3F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  swift_getObjectType();
  uint64_t v6 = sub_1B62B6A60();
  uint64_t v7 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v7);
  sub_1B62B6A68(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v6, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v8 = v2[7];
  swift_getObjectType();
  uint64_t v9 = sub_1B62B6A60();
  uint64_t v10 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_1B62B6A68(a1, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v9, v8);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v11 = v2[12];
  swift_getObjectType();
  uint64_t v12 = sub_1B62B6A60();
  uint64_t v13 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v13);
  sub_1B62B6A68(a1, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v12, v11);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  swift_release_n();
  uint64_t v14 = v2[17];
  swift_getObjectType();
  uint64_t v15 = sub_1B62B6A60();
  int v16 = *(os_unfair_lock_s **)(v5 + 40);
  swift_retain_n();
  os_unfair_lock_lock(v16);
  sub_1B62B6A68(a1, v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6369F00(a1, v15, v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 40));
  return swift_release_n();
}

uint64_t sub_1B636B668@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  sub_1B636BBA0(0, (unint64_t *)&unk_1EB97E7F0, (uint64_t (*)(void, void, _UNKNOWN **))type metadata accessor for BasicAnimation);
  uint64_t v9 = v8;
  sub_1B636BBA0(0, &qword_1EB97F598, (uint64_t (*)(void, void, _UNKNOWN **))type metadata accessor for BasicAnimationRuntime);
  uint64_t v11 = v10;
  uint64_t v12 = *v5;
  uint64_t v13 = *v5 + 41;
  uint64_t v14 = *(unsigned __int16 *)(*v5 + 16);
  unint64_t v15 = *(unsigned __int16 *)(*v5 + 18);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = &off_1F0F62CB8;
  *(void *)(inited + 48) = v11;
  *(void *)(inited + 56) = &off_1F0F84790;
  *(void *)(inited + 64) = &type metadata for AnimationTimeSource;
  *(void *)(inited + 72) = &off_1F0F7C308;
  if (v15 > 0xF)
  {
    uint64_t v35 = sub_1B62F79D4((char *)(v13 + v14), v15 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v35;
  }
  uint64_t v17 = *(unsigned __int16 *)(v12 + 20);
  int64_t v18 = *(unsigned __int16 *)(v12 + 22);
  sub_1B62D8328(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_initStackObject();
  *(_OWORD *)(v19 + 16) = xmmword_1B6E77D10;
  *(unsigned char *)(v19 + 32) = a1;
  *(unsigned char *)(v19 + 33) = a2;
  *(unsigned char *)(v19 + 34) = a3;
  if (v18)
  {
    uint64_t v35 = sub_1B62F7C94((char *)(v13 + v17), v18);
    sub_1B62F81D8(v19);
    uint64_t v19 = v35;
    unint64_t v20 = *(void *)(v35 + 16);
  }
  else
  {
    unint64_t v20 = 3;
  }
  uint64_t v21 = *v5 + 41;
  unint64_t v22 = (char *)(v21 + *(unsigned __int16 *)(*v5 + 24));
  unint64_t v23 = (unint64_t)*(unsigned __int16 *)(*v5 + 26) >> 4;
  uint64_t v24 = (char *)(v21 + *(unsigned __int16 *)(*v5 + 28));
  uint64_t v25 = *(unsigned __int16 *)(*v5 + 30) / 0x18u;
  int v26 = *((_DWORD *)v5 + 2);
  char v27 = *((unsigned char *)v5 + 12);
  uint64_t v28 = v5[4];
  uint64_t v29 = v5[2];
  char v30 = *((unsigned char *)v5 + 24);
  uint64_t v31 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v19 + 32), v20, v22, v23, v24, v25);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v31;
  *(_DWORD *)(a4 + 8) = v26;
  *(unsigned char *)(a4 + 12) = v27;
  *(_WORD *)(a4 + 13) = v36;
  *(unsigned char *)(a4 + 15) = v37;
  *(void *)(a4 + 16) = v29;
  *(unsigned char *)(a4 + 24) = v30;
  *(_DWORD *)(a4 + 25) = v35;
  *(_DWORD *)(a4 + 28) = *(_DWORD *)((char *)&v35 + 3);
  *(void *)(a4 + 32) = v28;
  return result;
}

void *sub_1B636B8EC(void *a1, uint64_t a2)
{
  sub_1B636BBA0(0, &qword_1EB97EEF8, (uint64_t (*)(void, void, _UNKNOWN **))type metadata accessor for KeyframeAnimation);
  uint64_t v3 = (uint64_t *)a1[11];
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  uint64_t v6 = a1[2];
  uint64_t v8 = sub_1B62C9024(v7, (uint64_t)&off_1F0F719D8, v3, v4, v5, v6);
  sub_1B636BBA0(0, &qword_1EB97F920, (uint64_t (*)(void, void, _UNKNOWN **))type metadata accessor for KeyframeAnimationRuntime);
  uint64_t v10 = sub_1B62C9024(v9, (uint64_t)&off_1F0F920F8, v3, v4, v5, v6);
  uint64_t v11 = sub_1B62C9024((uint64_t)&type metadata for AnimationTimeSource, (uint64_t)&off_1F0F7C290, v3, v4, v5, v6);
  uint64_t v13 = a1[6];
  uint64_t v12 = a1[7];
  uint64_t result = ecs_stack_allocator_allocate(*(void *)(v6 + 32), 8 * (v12 - v13), 8);
  if (v12 != v13)
  {
    uint64_t v15 = v12;
    uint64_t v16 = 0;
    uint64_t v17 = (unsigned char *)(v11 + 60 * v13 + 57);
    uint64_t v18 = v10 + 48 * v13 + 24;
    uint64_t v19 = v8 + 152 * v13;
    uint64_t v33 = result;
    uint64_t v34 = v15;
    do
    {
      if (*(v17 - 1) == 1)
      {
        long long v20 = *(_OWORD *)(v19 + 16);
        v40[0] = *(_OWORD *)v19;
        v40[1] = v20;
        long long v21 = *(_OWORD *)(v19 + 32);
        long long v22 = *(_OWORD *)(v19 + 48);
        long long v23 = *(_OWORD *)(v19 + 80);
        v40[4] = *(_OWORD *)(v19 + 64);
        v40[5] = v23;
        _OWORD v40[2] = v21;
        v40[3] = v22;
        long long v24 = *(_OWORD *)(v19 + 96);
        long long v25 = *(_OWORD *)(v19 + 112);
        long long v26 = *(_OWORD *)(v19 + 128);
        char v41 = *(unsigned char *)(v19 + 144);
        void v40[7] = v25;
        v40[8] = v26;
        v40[6] = v24;
        if (*(void *)(v18 - 24))
        {
          float v27 = *(float *)(v17 - 5);
          uint64_t v28 = *(unsigned int *)(v18 + 16);
          uint64_t v29 = *(unsigned int *)(v18 + 20);
          if (__PAIR64__(v29, v28) != 0xFFFFFFFF)
          {
            swift_retain();
            sub_1B636BFA4((uint64_t)v40);
            sub_1B636BC58((uint64_t *)(v18 - 16), (void *)(v18 - 8), v27);
            if (*(void *)v18)
            {
              uint64_t v37 = v16;
              uint64_t v30 = *(void *)(v18 + 8);
              uint64_t ObjectType = swift_getObjectType();
              uint64_t v39 = MEMORY[0x1E4FBB470];
              v38[0] = *(_DWORD *)(v18 - 8);
              uint64_t v35 = *(void (**)(uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t))(v30 + 16);
              swift_unknownObjectRetain();
              uint64_t v31 = v30;
              uint64_t v16 = v37;
              v35(v28 | (v29 << 32), a2, v38, ObjectType, v31);
              swift_release();
              swift_unknownObjectRelease();
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v38);
            }
            else
            {
              swift_release();
            }
            sub_1B636BEC8((uint64_t)v40);
            uint64_t result = v33;
            uint64_t v15 = v34;
          }
        }
      }
      if (*v17 == 1) {
        result[v16++] = v13;
      }
      ++v13;
      v17 += 60;
      v18 += 48;
      v19 += 152;
    }
    while (v15 != v13);
  }
  return result;
}

void sub_1B636BBA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, _UNKNOWN **))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB470], &off_1F0FAB230);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B636BBFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, _UNKNOWN **))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB470], &off_1F0FAB230);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B636BC58(uint64_t *a1, void *a2, float a3)
{
  uint64_t v7 = *(void *)(v3 + 40);
  uint64_t v8 = sub_1B636BE60(v7, *a1, a3);
  if (v10)
  {
    size_t v18 = *(void *)(v3 + 32);
    if ((v18 & 0x8000000000000000) == 0)
    {
      uint64_t result = (uint64_t)memmove(a2, (const void *)(*(void *)(v3 + 16) + (*(void *)(v7 + 16) - 1) * v18), v18);
      uint64_t v11 = *(void *)(v7 + 16) - 1;
LABEL_16:
      *a1 = v11;
      return result;
    }
  }
  else
  {
    uint64_t v11 = v8;
    if (v8)
    {
      uint64_t v12 = v8 - 1;
      float v13 = *(float *)(v7 + 32 + 4 * (v8 - 1));
      v9.n128_f32[0] = (float)(a3 - v13) / (float)(*(float *)(v7 + 32 + 4 * v8) - v13);
      uint64_t v14 = *(void *)(v3 + 16);
      if (*(unsigned char *)(v3 + 80) == 1)
      {
        if (v12 <= 0) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = v8 - 2;
        }
        if (v8 + 1 >= *(void *)(v7 + 16)) {
          uint64_t v16 = v8;
        }
        else {
          uint64_t v16 = v8 + 1;
        }
        uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v3 + 64))(a2, v14 + *(void *)(v3 + 32) * v15, v14 + *(void *)(v3 + 32) * v12, v14 + *(void *)(v3 + 32) * v8, v14 + *(void *)(v3 + 32) * v16, v9);
      }
      else
      {
        uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t, float))(v3 + 48))(a2, v14 + *(void *)(v3 + 32) * v12, v14 + *(void *)(v3 + 32) * v8, v9.n128_f32[0]);
      }
      goto LABEL_16;
    }
    size_t v19 = *(void *)(v3 + 32);
    if ((v19 & 0x8000000000000000) == 0)
    {
      uint64_t result = (uint64_t)memmove(a2, *(const void **)(v3 + 16), v19);
      uint64_t v11 = 0;
      goto LABEL_16;
    }
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

float sub_1B636BDE4(float *a1, float *a2, float *a3, float *a4, float *a5, float a6)
{
  float result = *a3
         + (float)((float)((float)((float)(*a4 * 0.5) - (float)(*a2 * 0.5)) * a6)
                 + (float)((float)((float)(a6 * a6)
                                 * (float)((float)((float)(*a2 + (float)(*a4 + *a4)) + (float)(*a3 * -2.5))
                                         - (float)(*a5 * 0.5)))
                         + (float)((float)((float)(a6 * a6) * a6)
                                 * (float)((float)((float)(*a3 * 1.5) + (float)((float)(*a5 * 0.5) - (float)(*a4 * 1.5)))
                                         - (float)(*a2 * 0.5)))));
  *a1 = result;
  return result;
}

uint64_t sub_1B636BE60(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 - 1 >= a2) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = v3 - 1;
  }
  uint64_t v5 = a1 + 32;
  do
  {
    while (1)
    {
      uint64_t v6 = v4;
      if (*(float *)(v5 + 4 * v4) >= a3) {
        break;
      }
      ++v4;
      if (v6 + 1 >= v3) {
        return 0;
      }
    }
    --v4;
    float v7 = *(float *)(v5 + 4 * ((v6 - 1) & ~((v6 - 1) >> 63)));
  }
  while (v6 - 1 >= 0 && v7 > a3);
  if (v7 > a3) {
    return 0;
  }
  else {
    return v6;
  }
}

uint64_t sub_1B636BEC8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B636BFA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B636C084(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v8 = &v12[-v7];
  __n128 v9 = (void (*)(uint64_t, uint64_t, unsigned char *))v2[2];
  sub_1B62CAAD8(v10, (uint64_t)v12);
  swift_dynamicCast();
  v9(a1, a2, v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1B636C1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B636C1AC(a1, a2, a3, v3[5], v3[2], v3[3]);
}

uint64_t sub_1B636C1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v13[3] = a6;
  uint64_t v11 = sub_1B62C12C4(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(v11, a3, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t *))(a4 + 16))(a1, a2, v13);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v13);
}

uint64_t sub_1B636C250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 0xFFFFFFFFLL)
  {
    uint64_t v3 = swift_retain();
    MEMORY[0x1F4188790](v3, v4);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B636C580);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B636C318(char a1, void (*a2)(unsigned char *))
{
  if (a1)
  {
    char v6 = 0;
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
    if (v5) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
    if ((a1 & 2) != 0)
    {
      char v6 = v5 != 0;
      if (!v5) {
        goto LABEL_10;
      }
      goto LABEL_8;
    }
    if (v5)
    {
      char v6 = *(unsigned char *)(v5 + 80);
LABEL_8:
      MEMORY[0x1BA9B8670](v5 + 48);
      uint64_t v5 = *(void *)(v5 + 56);
      goto LABEL_10;
    }
    char v6 = 0;
  }
LABEL_10:
  swift_unknownObjectUnownedInit();
  v8[0] = v2;
  v8[2] = v5;
  swift_unknownObjectUnownedAssign();
  swift_unownedRetain();
  swift_unknownObjectRelease();
  char v9 = v6;
  sub_1B636C4E0((uint64_t)v8, (uint64_t)v10);
  a2(v10);
  uint64_t result = sub_1B636C450((uint64_t)v10);
  if (v6) {
    return sub_1B6A667F0((a1 & 4) == 0);
  }
  return result;
}

uint64_t sub_1B636C450(uint64_t a1)
{
  return a1;
}

uint64_t destroy for ReplicationStreamBuilder()
{
  swift_unownedRelease();

  return swift_unknownObjectUnownedDestroy();
}

uint64_t sub_1B636C4E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithTake for ReplicationStreamBuilder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectUnownedTakeInit();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t sub_1B636C580()
{
  return sub_1B636C5B8(*(void *)(v0 + 24), *(uint64_t **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 16));
}

uint64_t sub_1B636C5B8(uint64_t result, uint64_t *a2, unint64_t a3, uint64_t a4)
{
  if (a3 != 0xFFFFFFFF)
  {
    uint64_t v8 = result;
    swift_unownedRetainStrong();
    swift_release();
    if (swift_unknownObjectUnownedLoadStrong()) {
      swift_unknownObjectRelease();
    }
    swift_unownedRetainStrong();
    sub_1B636C6B4(v8, a3, a2, a4);
    swift_release();
    uint64_t result = swift_unknownObjectUnownedLoadStrong();
    if (result) {
      uint64_t result = swift_unknownObjectRelease();
    }
    if (*(unsigned char *)(v4 + 24) == 1)
    {
      swift_unownedRetainStrong();
      sub_1B6A624AC(v8, a2, (uint64_t)v9);
      sub_1B6A62610((uint64_t)v9);
      swift_release();
      return sub_1B67421B0((uint64_t)v9);
    }
  }
  return result;
}

uint64_t sub_1B636C6B4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(*a3 + *MEMORY[0x1E4FBBC10]);
  v6[2] = a4;
  v6[3] = a3;
  v6[4] = a1;
  return sub_1B636C73C(v4, a2, (void (*)(char *))sub_1B636CA9C, (uint64_t)v6, v4, a4);
}

uint64_t sub_1B636C73C(uint64_t a1, unint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v6;
  unint64_t v14 = HIDWORD(a2);
  uint64_t v15 = sub_1B62CD84C(a5);
  if (a2 == -1 && !v14) {
    goto LABEL_3;
  }
  char v16 = 0;
  if ((uint64_t)(a2 << 32) >= (uint64_t)0xFFFFFFFF00000001)
  {
    size_t v18 = (void *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if ((int)a2 < *(void *)(v8 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      uint64_t v19 = *(unsigned int *)(*v18 + 12 * (int)a2 + 8);
      if (v14 != -1 && v19 != v14)
      {
LABEL_3:
        char v16 = 0;
        return v16 & 1;
      }
      long long v20 = (unsigned int *)(*v18 + 12 * (int)a2);
      sub_1B636C868(*(void *)(*(void *)(v8 + 136) + 8 * (int)*v20 + 32), *v20 | ((unint64_t)*((unsigned __int16 *)v20 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v20+ 2) << 32), v19, v15, a3, a4, v8, a2, a5, a6);
      if (!v7) {
        char v16 = v21;
      }
    }
  }
  return v16 & 1;
}

uint64_t sub_1B636C868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = MEMORY[0x1F4188790](a1, a2);
  char v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(result + 48);
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v24 = *(void *)(a10 + 8);
    long long v25 = (void *)(v22 + 56);
    while (*(v25 - 3) != a9)
    {
      v25 += 5;
      if (!--v23) {
        goto LABEL_13;
      }
    }
    uint64_t v31 = v17;
    uint64_t v32 = v16;
    uint64_t v34 = v19;
    uint64_t v33 = v18;
    uint64_t v26 = *v25 + (v14 << 16 >> 48) * v15;
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v24 + 48))(a9, v24))
    {
      sub_1B6E325B8();
      a5(v21);
      if (v10) {
        return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v21, a9);
      }
      uint64_t v27 = v32;
      uint64_t v28 = sub_1B635AB28(v31) << 16 >> 48;
      uint64_t v29 = **(void **)(v27 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      swift_retain();
      sub_1B6660EAC(v28, (uint64_t)v21, v29, a9, a10);
      swift_release();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v21, a9);
    }
    else
    {
      uint64_t result = ((uint64_t (*)(uint64_t))a5)(*(void *)(a1 + 128) + v26);
      if (v10) {
        return result;
      }
    }
    LOBYTE(v23) = 1;
    size_t v18 = v33;
  }
LABEL_13:
  unsigned char *v18 = v23;
  return result;
}

uint64_t sub_1B636CA9C(uint64_t a1)
{
  return sub_1B636CABC(a1, *(void *)(v1 + 24));
}

uint64_t sub_1B636CABC(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  (*(void (**)(char *, uint64_t))(v2 + 16))((char *)&v6 - v3, v4);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B636CBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B636C250(a3, *(void *)(v3 + 32), a1);
}

uint64_t sub_1B636CBD8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v7 = a1(0);
  uint64_t v8 = *v5;
  uint64_t v9 = *v5 + 41;
  uint64_t v10 = *(unsigned __int16 *)(*v5 + 16);
  unint64_t v11 = *(unsigned __int16 *)(*v5 + 18);
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = a2;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = *(unsigned __int16 *)(v8 + 20);
  int64_t v14 = *(unsigned __int16 *)(v8 + 22);
  unint64_t v15 = 1;
  uint64_t v16 = sub_1B6E31C98();
  *(void *)(v16 + 16) = 1;
  *(unsigned char *)(v16 + 32) = 3;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v16);
    uint64_t v16 = v29;
    unint64_t v15 = *(void *)(v29 + 16);
  }
  uint64_t v17 = *v5 + 41;
  size_t v18 = (char *)(v17 + *(unsigned __int16 *)(*v5 + 24));
  unint64_t v19 = (unint64_t)*(unsigned __int16 *)(*v5 + 26) >> 4;
  uint64_t v20 = (char *)(v17 + *(unsigned __int16 *)(*v5 + 28));
  uint64_t v21 = *(unsigned __int16 *)(*v5 + 30) / 0x18u;
  int v22 = *((_DWORD *)v5 + 2);
  char v23 = *((unsigned char *)v5 + 12);
  uint64_t v24 = v5[4];
  uint64_t v25 = v5[2];
  char v26 = *((unsigned char *)v5 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v16 + 32), v15, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B636CDEC()
{
  uint64_t v0 = swift_allocObject();
  sub_1B636CE24();
  return v0;
}

uint64_t sub_1B636CE24()
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v35 = qword_1EB997A18;
  int v36 = 0;
  char v37 = 2;
  uint64_t v38 = 0;
  char v39 = 2;
  uint64_t v40 = 0;
  swift_retain();
  sub_1B636D580((uint64_t)v7);
  swift_release();
  sub_1B62F9408(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for ProjectionMatrix;
  *(void *)(inited + 40) = &off_1F0F6EF58;
  sub_1B62AD184(v8);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v7);
  long long v2 = v8[1];
  *(_OWORD *)(v0 + 16) = v8[0];
  *(_OWORD *)(v0 + 32) = v2;
  *(void *)(v0 + 48) = v9;
  uint64_t v29 = qword_1EB997A18;
  int v30 = 0;
  char v31 = 2;
  uint64_t v32 = 0;
  char v33 = 2;
  uint64_t v34 = 0;
  swift_retain();
  sub_1B636D78C((uint64_t)v10);
  swift_release();
  uint64_t v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77050;
  *(void *)(v3 + 32) = &type metadata for ProjectionMatrix;
  *(void *)(v3 + 40) = &off_1F0F6EF58;
  sub_1B62AD184(v11);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v10);
  *(_OWORD *)(v0 + 56) = v11[0];
  *(_OWORD *)(v0 + 72) = v11[1];
  *(void *)(v0 + 88) = v12;
  uint64_t v23 = qword_1EB997A18;
  int v24 = 0;
  char v25 = 2;
  uint64_t v26 = 0;
  char v27 = 2;
  uint64_t v28 = 0;
  swift_retain();
  sub_1B636D0D8(1, 2, (uint64_t)v13);
  swift_release();
  long long v4 = v13[1];
  *(_OWORD *)(v0 + 96) = v13[0];
  *(_OWORD *)(v0 + 112) = v4;
  *(void *)(v0 + 128) = v14;
  uint64_t v17 = qword_1EB997A18;
  int v18 = 0;
  char v19 = 2;
  uint64_t v20 = 0;
  char v21 = 2;
  uint64_t v22 = 0;
  swift_retain();
  sub_1B636D32C(1, 2, (uint64_t)v15);
  swift_release();
  long long v5 = v15[1];
  *(_OWORD *)(v0 + 136) = v15[0];
  *(_OWORD *)(v0 + 152) = v5;
  *(void *)(v0 + 168) = v16;
  return v0;
}

uint64_t sub_1B636D0D8@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  long long v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for OrthographicCamera;
  *(void *)(inited + 40) = &off_1F0F78798;
  *(void *)(inited + 48) = &type metadata for ProjectionMatrix;
  *(void *)(inited + 56) = &off_1F0F6EF58;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  int v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  uint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  int v24 = v4[4];
  char v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B636D32C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  long long v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for PerspectiveCamera;
  *(void *)(inited + 40) = &off_1F0F73990;
  *(void *)(inited + 48) = &type metadata for ProjectionMatrix;
  *(void *)(inited + 56) = &off_1F0F6EF58;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  int v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  uint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  int v24 = v4[4];
  char v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B636D580@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1;
  long long v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for OrthographicCamera;
  *(void *)(inited + 40) = &off_1F0F78798;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  int64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  unint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  uint64_t v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B636D78C@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1;
  long long v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for PerspectiveCamera;
  *(void *)(inited + 40) = &off_1F0F73990;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  int64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  unint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  uint64_t v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

void sub_1B636D998(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B636D9FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B636DA60@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = (uint64_t)*v2 + 41;
  uint64_t v8 = (*v2)[8];
  unint64_t v9 = v6[9];
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for TextureShaderAsset;
  *(void *)(inited + 40) = &off_1F0F7B240;
  if (v9 > 0xF)
  {
    uint64_t v27 = sub_1B62F79D4((char *)(v7 + v8), v9 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v27;
  }
  uint64_t v11 = v6[10];
  int64_t v12 = v6[11];
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v13 + 32) = a1;
  if (v12)
  {
    uint64_t v27 = sub_1B62F7C94((char *)(v7 + v11), v12);
    sub_1B62F81D8(v13);
    uint64_t v13 = v27;
    unint64_t v14 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v14 = 1;
  }
  uint64_t v15 = (uint64_t)*v3 + 41;
  unint64_t v16 = (char *)(v15 + (*v3)[12]);
  unint64_t v17 = (unint64_t)(*v3)[13] >> 4;
  int v18 = (char *)(v15 + (*v3)[14]);
  uint64_t v19 = (*v3)[15] / 0x18u;
  int v20 = *((_DWORD *)v3 + 2);
  char v21 = *((unsigned char *)v3 + 12);
  char v22 = v3[4];
  uint64_t v23 = v3[2];
  char v24 = *((unsigned char *)v3 + 24);
  uint64_t v25 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v13 + 32), v14, v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v25;
  *(_DWORD *)(a2 + 8) = v20;
  *(unsigned char *)(a2 + 12) = v21;
  *(_WORD *)(a2 + 13) = v28;
  *(unsigned char *)(a2 + 15) = v29;
  *(void *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 25) = v27;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)((char *)&v27 + 3);
  *(void *)(a2 + 32) = v22;
  return result;
}

uint64_t sub_1B636DC68@<X0>(char a1@<W0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = v4;
  uint64_t v9 = a2(0);
  uint64_t v10 = *v6;
  uint64_t v11 = *v6 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v6 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v6 + 18);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = a3;
  if (v13 > 0xF)
  {
    uint64_t v31 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v31;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v17 + 32) = a1;
  if (v16)
  {
    uint64_t v31 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v31;
    unint64_t v18 = *(void *)(v31 + 16);
  }
  else
  {
    unint64_t v18 = 1;
  }
  uint64_t v19 = *v6 + 41;
  int v20 = (char *)(v19 + *(unsigned __int16 *)(*v6 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v6 + 26) >> 4;
  char v22 = (char *)(v19 + *(unsigned __int16 *)(*v6 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v6 + 30) / 0x18u;
  int v24 = *((_DWORD *)v6 + 2);
  char v25 = *((unsigned char *)v6 + 12);
  uint64_t v26 = v6[4];
  uint64_t v27 = v6[2];
  char v28 = *((unsigned char *)v6 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v29;
  *(_DWORD *)(a4 + 8) = v24;
  *(unsigned char *)(a4 + 12) = v25;
  *(_WORD *)(a4 + 13) = v32;
  *(unsigned char *)(a4 + 15) = v33;
  *(void *)(a4 + 16) = v27;
  *(unsigned char *)(a4 + 24) = v28;
  *(_DWORD *)(a4 + 25) = v31;
  *(_DWORD *)(a4 + 28) = *(_DWORD *)((char *)&v31 + 3);
  *(void *)(a4 + 32) = v26;
  return result;
}

uint64_t sub_1B636DE74@<X0>(char a1@<W0>, unint64_t *a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  sub_1B636E1A0(0, a2, a3);
  uint64_t v9 = v8;
  uint64_t v10 = *v5;
  uint64_t v11 = *v5 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v5 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v5 + 18);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = &off_1F0F61C20;
  if (v13 > 0xF)
  {
    uint64_t v31 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v31;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D87E8(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E77050;
  *(unsigned char *)(v17 + 32) = a1;
  if (v16)
  {
    uint64_t v31 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v31;
    unint64_t v18 = *(void *)(v31 + 16);
  }
  else
  {
    unint64_t v18 = 1;
  }
  uint64_t v19 = *v5 + 41;
  int v20 = (char *)(v19 + *(unsigned __int16 *)(*v5 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v5 + 26) >> 4;
  char v22 = (char *)(v19 + *(unsigned __int16 *)(*v5 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v5 + 30) / 0x18u;
  int v24 = *((_DWORD *)v5 + 2);
  char v25 = *((unsigned char *)v5 + 12);
  uint64_t v26 = v5[4];
  uint64_t v27 = v5[2];
  char v28 = *((unsigned char *)v5 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v29;
  *(_DWORD *)(a4 + 8) = v24;
  *(unsigned char *)(a4 + 12) = v25;
  *(_WORD *)(a4 + 13) = v32;
  *(unsigned char *)(a4 + 15) = v33;
  *(void *)(a4 + 16) = v27;
  *(unsigned char *)(a4 + 24) = v28;
  *(_DWORD *)(a4 + 25) = v31;
  *(_DWORD *)(a4 + 28) = *(_DWORD *)((char *)&v31 + 3);
  *(void *)(a4 + 32) = v26;
  return result;
}

void sub_1B636E080()
{
  if (!qword_1EB980C70)
  {
    sub_1B6642FC0();
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980C70);
    }
  }
}

void sub_1B636E0D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for ScriptRuntime();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B636E13C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for ScriptRuntime();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B636E1A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for ScriptRuntime();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B636E204(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B636E270(uint64_t a1, uint64_t a2, void *a3)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v6 = sub_1B636E9A8(a1);
  if (v7 != 2)
  {
    unint64_t v10 = v8;
    if (v7)
    {
LABEL_11:
      os_unfair_lock_lock(*(os_unfair_lock_t *)(a3[4] + 32 * v10 + 24));
      os_unfair_recursive_lock_unlock();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3[4] + 32 * v10 + 24));
      return;
    }
    uint64_t v11 = a3[2] + v6;
    uint64_t v9 = a1;
LABEL_6:
    sub_1B636E480(v11, 1, v9);
    uint64_t v12 = 1 << v10;
    if (v10 >= 0x40) {
      uint64_t v12 = 0;
    }
    if (v10 > 0x40) {
      uint64_t v12 = 0;
    }
    a3[15] |= v12;
    goto LABEL_11;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v13);
  if (v16 + v15 <= 4096)
  {
    unint64_t v10 = v13;
    uint64_t v9 = v14;
    uint64_t v11 = a3[2] + v16;
    goto LABEL_6;
  }
  unint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B636E480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(*(void *)(v7 + 8) + 8))(v8);
  sub_1B6E32458();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a3);
}

uint64_t sub_1B636E574(uint64_t a1)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v2 = sub_1B636E9A8((uint64_t)&type metadata for FrameConstantsStorage);
  if (v4)
  {
    uint64_t v6 = v2;
    uint64_t v7 = *(void *)(a1 + 16);
    uint64_t v8 = 32 * v3;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + 32 * v3 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v5 = *(void *)(v7 + v6);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + v8 + 24));
  }
  else
  {
    os_unfair_recursive_lock_unlock();
    return 0;
  }
  return v5;
}

uint64_t sub_1B636E62C()
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v1 = sub_1B636E9A8((uint64_t)&type metadata for DebugInfoState);
  if (v3)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(v0 + 16) + v1);
    uint64_t v6 = 32 * v2;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(v0 + 32) + 32 * v2 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v4 = *v5;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v0 + 32) + v6 + 24));
  }
  else
  {
    os_unfair_recursive_lock_unlock();
    return 0;
  }
  return v4;
}

void sub_1B636E6CC(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t))
{
}

void sub_1B636E6E4(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t))
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v8 = sub_1B636E9A8(a1);
  if (v9 != 2)
  {
    unint64_t v16 = v10;
    char v25 = a4;
    uint64_t v17 = a3[2];
    uint64_t v18 = v17 + v8;
    if (v9)
    {
      uint64_t v24 = a3[4];
      unint64_t v21 = a3 + 4;
      uint64_t v23 = v24 + 32 * v10;
    }
    else
    {
      sub_1B636E480(v17 + v8, 1, a1);
      uint64_t v19 = 1 << v16;
      if (v16 >= 0x40) {
        uint64_t v19 = 0;
      }
      uint64_t v22 = a3[4];
      unint64_t v21 = a3 + 4;
      uint64_t v20 = v22;
      if (v16 > 0x40) {
        uint64_t v19 = 0;
      }
      v21[11] |= v19;
      uint64_t v23 = v20 + 32 * v16;
    }
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 24));
    os_unfair_recursive_lock_unlock();
    v25(v18);
    uint64_t v15 = *v21 + 32 * v16;
    goto LABEL_16;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v26);
  if (v29 + v28 <= 4096)
  {
    unint64_t v11 = v26;
    uint64_t v12 = a3[2] + v29;
    sub_1B636E480(v12, 1, v27);
    uint64_t v13 = 1 << v11;
    if (v11 >= 0x40) {
      uint64_t v13 = 0;
    }
    if (v11 > 0x40) {
      uint64_t v13 = 0;
    }
    a3[15] |= v13;
    uint64_t v14 = 32 * v11;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a3[4] + v14 + 24));
    os_unfair_recursive_lock_unlock();
    a4(v12);
    uint64_t v15 = a3[4] + v14;
LABEL_16:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 24));
    return;
  }
  unint64_t v26 = 0;
  uint64_t v27 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v30 = 4096;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B636E9A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = 0;
  for (uint64_t i = v2 + 56; *(void *)(i - 24) != a1; i += 40)
  {
    if (v3 == ++v4) {
      return 0;
    }
  }
  return *(void *)i;
}

uint64_t sub_1B636EA28(uint64_t a1)
{
  return sub_1B63726E0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1B636EA44()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B636EA6C(void *a1)
{
  return sub_1B62E703C(a1, v1[3], v1[4], v1[2]);
}

uint64_t sub_1B636EA8C(uint64_t *a1)
{
  return sub_1B636EAB0(a1, *(unsigned char *)(v1 + 16), *(uint64_t **)(v1 + 24), *(void *)(v1 + 32), *(unsigned char **)(v1 + 40));
}

uint64_t sub_1B636EAB0(uint64_t *a1, char a2, uint64_t *a3, uint64_t a4, unsigned char *a5)
{
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_1B636EB40(a2, a1, a4, a2, a5);
  swift_release();
  swift_release();
  *a3 = v10;
  return swift_release();
}

uint64_t sub_1B636EB40(char a1, uint64_t *a2, uint64_t a3, char a4, unsigned char *a5)
{
  uint64_t v9 = *a2;
  if (*(void *)(*a2 + 16) && (unint64_t v10 = sub_1B636EC2C(a1), (v11 & 1) != 0))
  {
    uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
    swift_retain();
  }
  else
  {
    if ((a5[537] & 1) != 0 || a5[539] == 1) {
      char v13 = 1;
    }
    else {
      char v13 = a5[540];
    }
    uint64_t v12 = sub_1B63BA9C0(a4, v13);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *a2;
    *a2 = 0x8000000000000000;
    sub_1B6290BF0(v12, a1, isUniquelyReferenced_nonNull_native);
    *a2 = v16;
    swift_bridgeObjectRelease();
  }
  return v12;
}

unint64_t sub_1B636EC2C(unsigned __int8 a1)
{
  sub_1B6E33918();
  sub_1B6E33938();
  uint64_t v2 = sub_1B6E33988();

  return sub_1B6383F9C(a1, v2);
}

uint64_t destroy for EmitterRuntime()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B636EDC4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1B636EDEC(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_1B636EDF4(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1B636EE04(void *a1)
{
  return sub_1B636EE20(a1, *(void *)(v1 + 16));
}

uint64_t sub_1B636EE20(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  long long v34 = *(_OWORD *)a2;
  long long v35 = *(_OWORD *)(a2 + 16);
  uint64_t v30 = *(void *)(a2 + 40);
  uint64_t v36 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v9 = *(void **)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  sub_1B636F2E0(v8, 0);
  uint64_t result = sub_1B6E31C48();
  if (v8 >= 1 && v7)
  {
    uint64_t v11 = v9[4];
    int v40 = *(unsigned __int8 *)(v6 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v37[0] = v34;
    v37[1] = v35;
    uint64_t v38 = v36;
    uint64_t v27 = a2;
    sub_1B62F1F58(a2);
    uint64_t v12 = 0;
    uint64_t v28 = v11;
    uint64_t v29 = v7;
    do
    {
      char v13 = (unsigned int *)(v30 + 48 * v12);
      uint64_t v32 = *v13;
      uint64_t v31 = v13[1];
      uint64_t v15 = (uint64_t *)*((void *)v13 + 2);
      uint64_t v14 = *((void *)v13 + 3);
      uint64_t v17 = *((void *)v13 + 4);
      uint64_t v16 = *((void *)v13 + 5);
      uint64_t v33 = v3;
      if (v40)
      {
        uint64_t v18 = *(os_unfair_lock_s **)(v16 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v18);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v11);
      sub_1B6311058((uint64_t)(v9 + 6), (uint64_t)v39, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v19 = v9[4];
      uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      void v9[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
      v9[7] = v20;
      v9[9] = 0;
      v9[10] = 0;
      unsigned char v9[8] = 0;
      swift_release();
      uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for DrawCallComponent, (uint64_t)&off_1F0F709E8, v15, v14, v17, (uint64_t)v9);
      uint64_t v22 = v21;
      if (v15)
      {
        for (; v17; --v17)
        {
          sub_1B636F16C();
          uint64_t v26 = swift_retain();
          MEMORY[0x1BA9B3870](v26);
          if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B6E31C78();
          }
          sub_1B6E31CC8();
          sub_1B6E31C48();
          v22 += 8;
        }
      }
      else if (v32 != v31)
      {
        uint64_t v23 = v31 - v32;
        uint64_t v24 = v21 + 8 * v32;
        do
        {
          sub_1B636F16C();
          uint64_t v25 = swift_retain();
          MEMORY[0x1BA9B3870](v25);
          if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B6E31C78();
          }
          sub_1B6E31CC8();
          sub_1B6E31C48();
          v24 += 8;
          --v23;
        }
        while (v23);
      }
      sub_1B6345178(v9, (unsigned __int16 **)v37, (uint64_t)v39);
      uint64_t v3 = v33;
      sub_1B634507C((char *)v16);
      uint64_t v11 = v28;
      ecs_stack_allocator_pop_snapshot(v28);
      if (v40)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
      }
      swift_release();
      ++v12;
    }
    while (v12 != v29);
    return sub_1B62F073C(v27);
  }
  return result;
}

uint64_t sub_1B636F16C()
{
  *(void *)(v0 + 16) = 3;
  *(_DWORD *)(v0 + 24) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 32) = 0;
  swift_unknownObjectRelease();
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 96) = 0;
  swift_unknownObjectRelease();
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 1;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  *(unsigned char *)(v0 + 176) = 0;
  *(void *)(v0 + 192) = 0;
  *(void *)(v0 + 200) = 0;
  *(void *)(v0 + 184) = 0;
  swift_unknownObjectRelease();
  *(unsigned char *)(v0 + 256) = 0;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 208) = 0u;
  if (*(void *)(*(void *)(v0 + 264) + 16))
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v2 = *(void *)(v0 + 264);
    *(void *)(v0 + 264) = 0x8000000000000000;
    sub_1B636F27C();
    sub_1B6E32B78();
    *(void *)(v0 + 264) = v2;
    swift_bridgeObjectRelease();
  }
  sub_1B62FB0B0(1);
  *(void *)(v0 + 392) = 0;
  *(void *)(v0 + 400) = 0;
  *(void *)(v0 + 384) = 0;

  return swift_unknownObjectRelease();
}

void sub_1B636F27C()
{
  if (!qword_1EB97D880)
  {
    sub_1B63AE588();
    unint64_t v0 = sub_1B6E32B88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D880);
    }
  }
}

uint64_t sub_1B636F2E4(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x1BA9B4590](v7, v9, a2 & 1, v5);
  *uint64_t v2 = result;
  return result;
}

uint64_t sub_1B636F3A4(uint64_t a1)
{
  return sub_1B636F3BC(a1);
}

uint64_t sub_1B636F3BC(uint64_t a1)
{
  return sub_1B636F3D8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B636F3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v25[2] = *MEMORY[0x1E4F143B8];
  sub_1B636F9B4();
  if (!*(void *)(a1 + 1312))
  {
    if (qword_1EB97D6E8 != -1) {
      swift_once();
    }
    if (byte_1EB99799C == 1)
    {
      id v6 = sub_1B679506C(0xD000000000000018, 0x80000001B6F43A70, 0, MEMORY[0x1E4FBC860], 0);
      if (v3)
      {

        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        swift_retain();
        int v7 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        v25[0] = 0;
        swift_retain();
        uint64_t v8 = 0xD000000000000045;
        uint64_t v9 = "PrepareUpdateSystem failed: missing global_constants_encoder function";
LABEL_22:
        sub_1B6B33E34(v7, v25, v8, (unint64_t)(v9 - 32) | 0x8000000000000000);
        swift_release();
        return swift_release();
      }
      id v10 = objc_msgSend(v6, sel_newArgumentEncoderWithBufferIndex_, 0);
      swift_unknownObjectRelease();
      *(void *)(a1 + 1312) = v10;
    }
  }
  if (!*(void *)(a1 + 1232))
  {
    if (qword_1EB97D6E8 != -1) {
      swift_once();
    }
    if (byte_1EB99799C == 1)
    {
      id v11 = sub_1B679506C(0xD000000000000016, 0x80000001B6F43A00, 0, MEMORY[0x1E4FBC860], 0);
      if (v3)
      {

        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        swift_retain();
        int v7 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        v25[0] = 0;
        swift_retain();
        uint64_t v8 = 0xD000000000000043;
        uint64_t v9 = "PrepareUpdateSystem failed: missing pass_constants_encoder function";
        goto LABEL_22;
      }
      id v13 = objc_msgSend(v11, sel_newArgumentEncoderWithBufferIndex_, 0);
      swift_unknownObjectRelease();
      *(void *)(a1 + 1232) = v13;
    }
  }
  sub_1B636F8CC(a3);
  uint64_t v14 = *(void *)(a1 + 8);
  char v15 = *(unsigned char *)(a1 + 16);
  int v16 = *(_DWORD *)(a1 + 20);
  swift_retain();
  id v17 = (id)sub_1B62F1868(0, 16);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    int v22 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v25[0] = 0;
    swift_retain();
    sub_1B6B33E34(v22, v25, 0xD000000000000035, 0x80000001B6F439C0);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v23 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v17 = v17;
    uint64_t v24 = &v23[v19];
    *(void *)uint64_t v24 = v14;
    void v24[8] = v15;
    *((_DWORD *)v24 + 3) = v16;
  }
  swift_release();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(a1 + 24) = v17;
  *(void *)(a1 + 32) = v19;
  *(void *)(a1 + 40) = v21;
  return result;
}

uint64_t sub_1B636F8CC(uint64_t result)
{
  uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
  uint64_t v3 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 16);
  unint64_t v4 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 24);
  float v5 = *(double *)(result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 48);
  *(_DWORD *)uint64_t v1 = *(_DWORD *)(result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 64);
  *(float *)(v1 + 4) = v5;
  if ((v4 & 0x8000000000000000) != 0 || HIDWORD(v4))
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 12) = v4;
    BOOL v7 = v2 == 1 && v3 == 0;
    *(unsigned char *)(v1 + 8) = v7;
  }
  return result;
}

uint64_t sub_1B636F9B4()
{
  swift_unknownObjectRelease();
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  if (*(void *)(*(void *)(v0 + 1224) + 16))
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v2 = *(void *)(v0 + 1224);
    *(void *)(v0 + 1224) = 0x8000000000000000;
    sub_1B6A4EE3C();
    sub_1B6E32B78();
    *(void *)(v0 + 1224) = v2;
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  bzero((void *)(v0 + 48), 0x348uLL);
  *(void *)(v0 + 1184) = 0;
  *(_OWORD *)(v0 + 1168) = 0u;
  *(_OWORD *)(v0 + 1152) = 0u;
  *(_OWORD *)(v0 + 1136) = 0u;
  *(_OWORD *)(v0 + 1120) = 0u;
  *(_OWORD *)(v0 + 1104) = 0u;
  *(_OWORD *)(v0 + 1088) = 0u;
  *(_OWORD *)(v0 + 1072) = 0u;
  *(_OWORD *)(v0 + 1056) = 0u;
  *(_OWORD *)(v0 + 1040) = 0u;
  *(_OWORD *)(v0 + 1008) = 0u;
  *(_OWORD *)(v0 + 1024) = 0u;
  *(_OWORD *)(v0 + 976) = 0u;
  *(_OWORD *)(v0 + 992) = 0u;
  *(_OWORD *)(v0 + 944) = 0u;
  *(_OWORD *)(v0 + 960) = 0u;
  *(_OWORD *)(v0 + 912) = 0u;
  *(_OWORD *)(v0 + 928) = 0u;
  *(_OWORD *)(v0 + 896) = 0u;
  *(void *)(v0 + 1216) = 0;
  *(_OWORD *)(v0 + 1200) = 0u;
  uint64_t result = sub_1B636FAD8();
  if (*(void *)(v0 + 1408)) {
    uint64_t result = sub_1B6A4E08C();
  }
  if (*(void *)(v0 + 1456)) {
    uint64_t result = sub_1B6A4E1B0();
  }
  if (*(void *)(v0 + 1568)) {
    uint64_t result = sub_1B6A4E2C8();
  }
  *(unsigned char *)(v0 + 1610) = 0;
  return result;
}

uint64_t sub_1B636FAD8()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectRelease();
  unint64_t v4 = *(void *)(v0 + 32);
  uint64_t v2 = (unint64_t *)(v0 + 32);
  unint64_t v3 = v4;
  *(void *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 0;
  *(void *)(v1 + 16) = 0;
  if ((v4 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || (char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(),
        unint64_t v3 = *v2,
        (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0))
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1B6E32C18();
      sub_1B6E32C18();
      sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1;
    }
    *uint64_t v2 = sub_1B63577E0(0, v8);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t result = sub_1B62FB620(0, v6);
  }
  *(unsigned char *)(v1 + 48) = 0;
  return result;
}

void sub_1B636FBF4(uint64_t a1)
{
  sub_1B636FC1C(a1, *(float64_t *)(v1 + 40), *(float64_t *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 56));
}

void sub_1B636FC1C(uint64_t a1, float64_t a2, float64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int32 a7)
{
  uint64_t v185 = *MEMORY[0x1E4F143B8];
  id v11 = (void *)sub_1B6370C3C(a5, a6);
  *(void *)a1 = v11;
  float v158 = sub_1B6370FB8(a5, (unint64_t)v11);
  unsigned int v156 = v12;
  sub_1B62E9D50(v11, (uint64_t)v176);
  sub_1B62CA210((uint64_t)v176, (uint64_t)v183, qword_1EB97EA20);
  long long v13 = xmmword_1B6E4F370;
  long long v14 = xmmword_1B6E4F2E0;
  long long v15 = xmmword_1B6E4F320;
  long long v16 = xmmword_1B6E4F300;
  float32x4_t v166 = (float32x4_t)xmmword_1B6E4F300;
  long long v168 = xmmword_1B6E4F320;
  float32x4_t v170 = (float32x4_t)xmmword_1B6E4F2E0;
  long long v172 = xmmword_1B6E4F370;
  if ((v184 & 1) == 0)
  {
    long long v16 = v183[0];
    long long v15 = v183[1];
    long long v14 = v183[2];
    long long v13 = v183[3];
  }
  simd_float4 v147 = (simd_float4)v14;
  simd_float4 v150 = (simd_float4)v15;
  simd_float4 v153 = (simd_float4)v16;
  simd_float4 v164 = (simd_float4)v13;
  sub_1B6372CD8(v11, (uint64_t)v177);
  sub_1B62CA210((uint64_t)v177, (uint64_t)v181, &qword_1EB97F810);
  long long v17 = xmmword_1B6E4F300;
  long long v18 = xmmword_1B6E4F320;
  long long v19 = xmmword_1B6E4F2E0;
  long long v20 = xmmword_1B6E4F370;
  if ((v182 & 1) == 0)
  {
    long long v17 = v181[0];
    long long v18 = v181[1];
    long long v19 = v181[2];
    long long v20 = v181[3];
  }
  simd_float4 v139 = (simd_float4)v20;
  simd_float4 v141 = (simd_float4)v19;
  simd_float4 v143 = (simd_float4)v18;
  simd_float4 v145 = (simd_float4)v17;
  sub_1B637BA50(v11, (uint64_t)v178);
  sub_1B62CA210((uint64_t)v178, (uint64_t)v179, &qword_1EB97ECF0);
  if ((v180 & 1) == 0)
  {
    float32x4_t v166 = (float32x4_t)v179[0];
    long long v168 = v179[1];
    float32x4_t v170 = (float32x4_t)v179[2];
    long long v172 = v179[3];
  }
  v186.columns[0] = v153;
  v186.columns[1] = v150;
  v186.columns[2] = v147;
  v186.columns[3] = v164;
  simd_float4x4 v187 = __invert_f4(v186);
  float32x4_t v154 = (float32x4_t)v187.columns[0];
  float32x4_t v151 = (float32x4_t)v187.columns[1];
  float32x4_t v148 = (float32x4_t)v187.columns[2];
  float32x4_t v137 = (float32x4_t)v187.columns[3];
  v187.columns[0] = v145;
  v187.columns[2] = v141;
  v187.columns[1] = v143;
  v187.columns[3] = v139;
  simd_float4x4 v188 = __invert_f4(v187);
  v21.f64[0] = a2;
  v21.f64[1] = a3;
  sub_1B6370624(a7, *(_DWORD *)(a6 + 24) & 1, 0, 0, 1, v22, v23, v24, v154, v151, v148, v137, v166, (float32x4_t)v168, v170, (float32x4_t)v172, *(_OWORD *)v188.columns, *(_OWORD *)&v188.columns[1], *(_OWORD *)&v188.columns[2],
    *(_OWORD *)&v188.columns[3],
    *(_OWORD *)&v166,
    v168,
    *(_OWORD *)&v170,
    v172,
    __SPAIR64__(v156, LODWORD(v158)),
    *(void *)&vcvt_f32_f64(v21),
    *(_OWORD *)&v164);
  uint64_t v25 = OBJC_IVAR____TtC3VFX13EntityManager_world;
  uint64_t v26 = *(void **)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_world);
  id v27 = v26;
  if (v26)
  {
    id v28 = v27;
    float v36 = sub_1B64B2B74((uint64_t)v28, v29, v30, v31, v32, v33, v34, v35);

    id v37 = *(id *)(a5 + v25);
    float v45 = sub_1B64B2AD0((uint64_t)v37, v38, v39, v40, v41, v42, v43, v44);

    id v46 = *(id *)(a5 + v25);
    sub_1B64B2A2C((uint64_t)v46, v47, v48, v49, v50, v51, v52, v53);

    id v54 = *(id *)(a5 + v25);
    uint64_t v62 = (__n128 *)sub_1B64B2C6C((uint64_t)v54, v55, v56, v57, v58, v59, v60, v61);

    __n128 v173 = *v62;
  }
  else
  {
    float v45 = 0.0;
    __asm { FMOV            V0.4S, #1.0 }
    __n128 v173 = _Q0;
    float v36 = 0.0;
  }
  *(__n64 *)&long long v68 = sub_1B63705E4(v36, v45);
  long long v171 = v68;
  *(_OWORD *)(a1 + 1168) = v68;
  v69.n64_u64[0] = sub_1B637049C(v173).n64_u64[0];
  *(__n64 *)(a1 + 1184) = v69;
  if ((*(unsigned char *)(a6 + 537) & 1) == 0)
  {
    unint64_t v70 = v69.n64_u64[0];
    long long v174 = *(_OWORD *)(a1 + 48);
    long long v169 = *(_OWORD *)(a1 + 64);
    long long v167 = *(_OWORD *)(a1 + 80);
    long long v165 = *(_OWORD *)(a1 + 96);
    long long v163 = *(_OWORD *)(a1 + 112);
    long long v161 = *(_OWORD *)(a1 + 128);
    long long v159 = *(_OWORD *)(a1 + 144);
    long long v157 = *(_OWORD *)(a1 + 160);
    long long v155 = *(_OWORD *)(a1 + 176);
    long long v152 = *(_OWORD *)(a1 + 192);
    long long v149 = *(_OWORD *)(a1 + 208);
    long long v146 = *(_OWORD *)(a1 + 224);
    long long v142 = *(_OWORD *)(a1 + 256);
    long long v144 = *(_OWORD *)(a1 + 240);
    long long v138 = *(_OWORD *)(a1 + 288);
    long long v140 = *(_OWORD *)(a1 + 272);
    long long v135 = *(_OWORD *)(a1 + 320);
    long long v136 = *(_OWORD *)(a1 + 304);
    long long v133 = *(_OWORD *)(a1 + 352);
    long long v134 = *(_OWORD *)(a1 + 336);
    long long v131 = *(_OWORD *)(a1 + 384);
    long long v132 = *(_OWORD *)(a1 + 368);
    long long v129 = *(_OWORD *)(a1 + 416);
    long long v130 = *(_OWORD *)(a1 + 400);
    long long v127 = *(_OWORD *)(a1 + 448);
    long long v128 = *(_OWORD *)(a1 + 432);
    long long v125 = *(_OWORD *)(a1 + 480);
    long long v126 = *(_OWORD *)(a1 + 464);
    long long v123 = *(_OWORD *)(a1 + 512);
    long long v124 = *(_OWORD *)(a1 + 496);
    long long v121 = *(_OWORD *)(a1 + 544);
    long long v122 = *(_OWORD *)(a1 + 528);
    int v71 = *(_DWORD *)(a1 + 928);
    long long v86 = *(_OWORD *)(a1 + 560);
    long long v87 = *(_OWORD *)(a1 + 576);
    long long v88 = *(_OWORD *)(a1 + 592);
    long long v89 = *(_OWORD *)(a1 + 608);
    long long v90 = *(_OWORD *)(a1 + 624);
    long long v91 = *(_OWORD *)(a1 + 640);
    long long v92 = *(_OWORD *)(a1 + 656);
    long long v93 = *(_OWORD *)(a1 + 672);
    long long v94 = *(_OWORD *)(a1 + 688);
    long long v95 = *(_OWORD *)(a1 + 704);
    long long v96 = *(_OWORD *)(a1 + 720);
    long long v97 = *(_OWORD *)(a1 + 736);
    long long v98 = *(_OWORD *)(a1 + 752);
    long long v99 = *(_OWORD *)(a1 + 768);
    long long v100 = *(_OWORD *)(a1 + 784);
    long long v101 = *(_OWORD *)(a1 + 800);
    long long v102 = *(_OWORD *)(a1 + 816);
    long long v103 = *(_OWORD *)(a1 + 832);
    long long v104 = *(_OWORD *)(a1 + 848);
    long long v105 = *(_OWORD *)(a1 + 864);
    uint64_t v72 = *(void *)(a1 + 880);
    uint64_t v73 = *(void *)(a1 + 912);
    uint64_t v74 = *(void *)(a1 + 920);
    int v75 = *(_DWORD *)(a1 + 932);
    uint64_t v76 = *(void *)(a1 + 936);
    long long v106 = *(_OWORD *)(a1 + 896);
    long long v107 = *(_OWORD *)(a1 + 944);
    long long v108 = *(_OWORD *)(a1 + 960);
    long long v109 = *(_OWORD *)(a1 + 976);
    long long v110 = *(_OWORD *)(a1 + 992);
    long long v111 = *(_OWORD *)(a1 + 1008);
    long long v112 = *(_OWORD *)(a1 + 1024);
    long long v113 = *(_OWORD *)(a1 + 1040);
    long long v114 = *(_OWORD *)(a1 + 1056);
    long long v115 = *(_OWORD *)(a1 + 1072);
    long long v116 = *(_OWORD *)(a1 + 1088);
    long long v117 = *(_OWORD *)(a1 + 1104);
    long long v118 = *(_OWORD *)(a1 + 1120);
    long long v119 = *(_OWORD *)(a1 + 1136);
    long long v120 = *(_OWORD *)(a1 + 1152);
    swift_retain();
    uint64_t v77 = (void *)sub_1B62F1868(0, 1152);
    uint64_t v79 = v78;
    uint64_t v81 = v80;
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      v175[0] = 0;
      v175[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      int v82 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v175[0] = 0;
      swift_retain();
      sub_1B6B33E34(v82, v175, 0xD000000000000034, 0x80000001B6F405F0);
      swift_release();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      *(void *)(a1 + 1200) = v77;
    }
    else
    {
      uint64_t v83 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v84 = v77;
      uint64_t v85 = &v83[v79];
      *(_OWORD *)uint64_t v85 = v174;
      *((_OWORD *)v85 + 1) = v169;
      *((_OWORD *)v85 + 2) = v167;
      *((_OWORD *)v85 + 3) = v165;
      *((_OWORD *)v85 + 4) = v163;
      *((_OWORD *)v85 + 5) = v161;
      *((_OWORD *)v85 + 6) = v159;
      *((_OWORD *)v85 + 7) = v157;
      *((_OWORD *)v85 + 8) = v155;
      *((_OWORD *)v85 + 9) = v152;
      *((_OWORD *)v85 + 10) = v149;
      *((_OWORD *)v85 + 11) = v146;
      *((_OWORD *)v85 + 12) = v144;
      *((_OWORD *)v85 + 13) = v142;
      *((_OWORD *)v85 + 14) = v140;
      *((_OWORD *)v85 + 15) = v138;
      *((_OWORD *)v85 + 16) = v136;
      *((_OWORD *)v85 + 17) = v135;
      *((_OWORD *)v85 + 18) = v134;
      *((_OWORD *)v85 + 19) = v133;
      *((_OWORD *)v85 + 20) = v132;
      *((_OWORD *)v85 + 21) = v131;
      *((_OWORD *)v85 + 22) = v130;
      *((_OWORD *)v85 + 23) = v129;
      *((_OWORD *)v85 + 24) = v128;
      *((_OWORD *)v85 + 25) = v127;
      *((_OWORD *)v85 + 26) = v126;
      *((_OWORD *)v85 + 27) = v125;
      *((_OWORD *)v85 + 28) = v124;
      *((_OWORD *)v85 + 29) = v123;
      *((_OWORD *)v85 + 30) = v122;
      *((_OWORD *)v85 + 31) = v121;
      *((_OWORD *)v85 + 32) = v86;
      *((_OWORD *)v85 + 33) = v87;
      *((_OWORD *)v85 + 34) = v88;
      *((_OWORD *)v85 + 35) = v89;
      *((_OWORD *)v85 + 36) = v90;
      *((_OWORD *)v85 + 37) = v91;
      *((_OWORD *)v85 + 38) = v92;
      *((_OWORD *)v85 + 39) = v93;
      *((_OWORD *)v85 + 40) = v94;
      *((_OWORD *)v85 + 41) = v95;
      *((_OWORD *)v85 + 42) = v96;
      *((_OWORD *)v85 + 43) = v97;
      *((_OWORD *)v85 + 44) = v98;
      *((_OWORD *)v85 + 45) = v99;
      *((_OWORD *)v85 + 46) = v100;
      *((_OWORD *)v85 + 47) = v101;
      *((_OWORD *)v85 + 48) = v102;
      *((_OWORD *)v85 + 49) = v103;
      *((_OWORD *)v85 + 50) = v104;
      *((_OWORD *)v85 + 51) = v105;
      *((void *)v85 + 104) = v72;
      *((_OWORD *)v85 + 53) = v106;
      *((void *)v85 + 108) = v73;
      *((void *)v85 + 109) = v74;
      *((_DWORD *)v85 + 220) = v71;
      *((_DWORD *)v85 + 221) = v75;
      *((void *)v85 + 111) = v76;
      *((_OWORD *)v85 + 56) = v107;
      *((_OWORD *)v85 + 57) = v108;
      *((_OWORD *)v85 + 58) = v109;
      *((_OWORD *)v85 + 59) = v110;
      *((_OWORD *)v85 + 60) = v111;
      *((_OWORD *)v85 + 61) = v112;
      *((_OWORD *)v85 + 62) = v113;
      *((_OWORD *)v85 + 63) = v114;
      *((_OWORD *)v85 + 64) = v115;
      *((_OWORD *)v85 + 65) = v116;
      *((_OWORD *)v85 + 66) = v117;
      *((_OWORD *)v85 + 67) = v118;
      *((_OWORD *)v85 + 68) = v119;
      *((_OWORD *)v85 + 69) = v120;
      *((_OWORD *)v85 + 70) = v171;
      *((void *)v85 + 142) = v70;
      swift_release();
      swift_unknownObjectRelease();
      *(void *)(a1 + 1200) = v84;
    }
    *(void *)(a1 + 1208) = v79;
    *(void *)(a1 + 1216) = v81;
  }
}

__n64 sub_1B637049C(__n128 a1)
{
  unsigned __int32 v1 = HIWORD(a1.n128_u32[0]) & 0x8000;
  unsigned int v2 = (a1.n128_u32[0] >> 23);
  unsigned int v3 = v2 - 112;
  __int16 v4 = v1 | 0x7BFF;
  if (v2 == 255) {
    __int16 v4 = v1 | ((a1.n128_u32[0] & 0x7FFFFF) != 0) | 0x7C00;
  }
  unsigned int v5 = v2 - 113;
  if (v2 >= 0x71) {
    __int16 v6 = v4;
  }
  else {
    __int16 v6 = a1.n128_u16[1] & 0x8000;
  }
  unsigned __int32 v7 = HIWORD(a1.n128_u32[0]) & 0x8000 | (a1.n128_u32[0] >> 13) & 0x3FF | (v3 << 10);
  if (v5 > 0x1D) {
    LOWORD(v7) = v6;
  }
  unsigned __int32 v8 = HIWORD(a1.n128_u32[1]) & 0x8000;
  unsigned int v9 = (a1.n128_u32[1] >> 23);
  unsigned int v10 = v9 - 112;
  __int16 v11 = v8 | 0x7BFF;
  if (v9 == 255) {
    __int16 v11 = v8 | ((a1.n128_u32[1] & 0x7FFFFF) != 0) | 0x7C00;
  }
  unsigned int v12 = v9 - 113;
  if (v9 >= 0x71) {
    __int16 v13 = v11;
  }
  else {
    __int16 v13 = a1.n128_u16[3] & 0x8000;
  }
  unsigned __int32 v14 = HIWORD(a1.n128_u32[1]) & 0x8000 | (a1.n128_u32[1] >> 13) & 0x3FF | (v10 << 10);
  if (v12 > 0x1D) {
    LOWORD(v14) = v13;
  }
  unsigned __int32 v15 = HIWORD(a1.n128_u32[2]) & 0x8000;
  unsigned int v16 = (a1.n128_u32[2] >> 23);
  unsigned int v17 = v16 - 112;
  __int16 v18 = v15 | 0x7BFF;
  if (v16 == 255) {
    __int16 v18 = v15 | ((a1.n128_u32[2] & 0x7FFFFF) != 0) | 0x7C00;
  }
  unsigned int v19 = v16 - 113;
  if (v16 >= 0x71) {
    __int16 v20 = v18;
  }
  else {
    __int16 v20 = a1.n128_u16[5] & 0x8000;
  }
  unsigned __int32 v21 = HIWORD(a1.n128_u32[2]) & 0x8000 | (a1.n128_u32[2] >> 13) & 0x3FF | (v17 << 10);
  if (v19 > 0x1D) {
    LOWORD(v21) = v20;
  }
  unsigned __int32 v22 = HIWORD(a1.n128_u32[3]) & 0x8000;
  unsigned int v23 = (a1.n128_u32[3] >> 23);
  __int16 v24 = v23 - 112;
  unsigned int v25 = v23 - 113;
  unsigned __int16 v26 = v22 | 0x7BFF;
  if (v23 == 255) {
    unsigned __int16 v26 = v22 | ((a1.n128_u32[3] & 0x7FFFFF) != 0) | 0x7C00;
  }
  if (v23 >= 0x71) {
    unsigned __int16 v27 = v26;
  }
  else {
    unsigned __int16 v27 = a1.n128_u16[7] & 0x8000;
  }
  result.n64_u16[0] = v7;
  result.n64_u16[1] = v14;
  if (v25 <= 0x1D) {
    unsigned __int16 v29 = a1.n128_u16[7] & 0x8000 | (a1.n128_u32[3] >> 13) & 0x3FF | (v24 << 10);
  }
  else {
    unsigned __int16 v29 = v27;
  }
  result.n64_u16[2] = v21;
  result.n64_u16[3] = v29;
  return result;
}

__n64 sub_1B63705E4(float a1, float a2)
{
  float v2 = fmaxf(a1, 0.0);
  float v3 = fmaxf(a2, 0.0);
  result.n64_u64[0] = 0;
  if (v2 != v3)
  {
    result.n64_f32[0] = 1.0 / (float)(v3 - v2);
    result.n64_f32[1] = -(float)(v2 * result.n64_f32[0]);
  }
  return result;
}

void sub_1B6370624(__int32 a1, char a2, uint64_t a3, uint64_t a4, char a5, int a6, int a7, int a8, float32x4_t a9, float32x4_t a10, float32x4_t a11, float32x4_t a12, float32x4_t a13, float32x4_t a14, float32x4_t a15, float32x4_t a16, long long a17, long long a18, long long a19, long long a20,long long a21,long long a22,long long a23,long long a24,uint64_t a25,uint64_t a26,long long a27)
{
  float32x4_t v80 = vmlaq_f32(vmlaq_f32(vmlaq_f32(a9, (float32x4_t)0, a10), (float32x4_t)0, a11), (float32x4_t)0, a12);
  float32x4_t v34 = vmulq_f32(a9, (float32x4_t)0);
  float32x4_t v79 = vmlaq_f32(vmlaq_f32(vaddq_f32(v34, a10), (float32x4_t)0, a11), (float32x4_t)0, a12);
  *(float32x4_t *)uint64_t v27 = v80;
  *(float32x4_t *)(v27 + 16) = v79;
  float32x4_t v75 = vaddq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a9, *(float *)&a27), a10, *(float32x2_t *)&a27, 1), a11, (float32x4_t)a27, 2), a12);
  float32x4_t v76 = vmlaq_f32(vaddq_f32(vmlaq_f32(v34, (float32x4_t)0, a10), a11), (float32x4_t)0, a12);
  *(float32x4_t *)(v27 + 32) = v76;
  *(float32x4_t *)(v27 + 48) = v75;
  v87.columns[0] = (simd_float4)a13;
  *(float32x4_t *)(v27 + 256) = a13;
  *(float32x4_t *)(v27 + 272) = a14;
  v87.columns[1] = (simd_float4)a14;
  v87.columns[2] = (simd_float4)a15;
  *(float32x4_t *)(v27 + 288) = a15;
  *(float32x4_t *)(v27 + 304) = a16;
  v87.columns[3] = (simd_float4)a16;
  simd_float4x4 v88 = __invert_f4(v87);
  simd_float4 v61 = v88.columns[1];
  simd_float4 v62 = v88.columns[0];
  *(simd_float4x4 *)(v27 + 384) = v88;
  simd_float4 v59 = v88.columns[3];
  simd_float4 v60 = v88.columns[2];
  float32x4_t v65 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a13, v79.f32[0]), a14, *(float32x2_t *)v79.f32, 1), a15, v79, 2), a16, v79, 3);
  float32x4_t v66 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a13, v80.f32[0]), a14, *(float32x2_t *)v80.f32, 1), a15, v80, 2), a16, v80, 3);
  *(float32x4_t *)(v27 + 128) = v66;
  *(float32x4_t *)(v27 + 144) = v65;
  float32x4_t v63 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a13, v75.f32[0]), a14, *(float32x2_t *)v75.f32, 1), a15, v75, 2), a16, v75, 3);
  float32x4_t v64 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a13, v76.f32[0]), a14, *(float32x2_t *)v76.f32, 1), a15, v76, 2), a16, v76, 3);
  *(float32x4_t *)(v27 + 160) = v64;
  *(float32x4_t *)(v27 + 176) = v63;
  v88.columns[0] = (simd_float4)vmlaq_f32(vmlaq_f32(vmlaq_f32((float32x4_t)a17, (float32x4_t)0, (float32x4_t)a18), (float32x4_t)0, (float32x4_t)a19), (float32x4_t)0, (float32x4_t)a20);
  v88.columns[1] = (simd_float4)vmulq_f32((float32x4_t)a17, (float32x4_t)0);
  v88.columns[2] = (simd_float4)vmlaq_f32(vmlaq_f32(vaddq_f32((float32x4_t)v88.columns[1], (float32x4_t)a18), (float32x4_t)0, (float32x4_t)a19), (float32x4_t)0, (float32x4_t)a20);
  v88.columns[1] = (simd_float4)vmlaq_f32(vaddq_f32(vmlaq_f32((float32x4_t)v88.columns[1], (float32x4_t)0, (float32x4_t)a18), (float32x4_t)a19), (float32x4_t)0, (float32x4_t)a20);
  v88.columns[3] = (simd_float4)vaddq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)a17, *(float *)&a27), (float32x4_t)a18, *(float32x2_t *)&a27, 1), (float32x4_t)a19, (float32x4_t)a27, 2), (float32x4_t)a20);
  float32x4_t v35 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)a21, v88.columns[0].f32[0]), (float32x4_t)a22, *(float32x2_t *)v88.columns[0].f32, 1), (float32x4_t)a23, (float32x4_t)v88.columns[0], 2), (float32x4_t)a24, (float32x4_t)v88.columns[0], 3);
  v88.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)a21, v88.columns[2].f32[0]), (float32x4_t)a22, *(float32x2_t *)v88.columns[2].f32, 1), (float32x4_t)a23, (float32x4_t)v88.columns[2], 2), (float32x4_t)a24, (float32x4_t)v88.columns[2], 3);
  float32x4_t v70 = v35;
  *(float32x4_t *)(v27 + 992) = v35;
  *(simd_float4 *)(v27 + 1008) = v88.columns[0];
  float32x4_t v72 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)a21, v88.columns[1].f32[0]), (float32x4_t)a22, *(float32x2_t *)v88.columns[1].f32, 1), (float32x4_t)a23, (float32x4_t)v88.columns[1], 2), (float32x4_t)a24, (float32x4_t)v88.columns[1], 3);
  *(float32x4_t *)(v27 + 1024) = v72;
  float32x4_t v67 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)a21, v88.columns[3].f32[0]), (float32x4_t)a22, *(float32x2_t *)v88.columns[3].f32, 1), (float32x4_t)a23, (float32x4_t)v88.columns[3], 2), (float32x4_t)a24, (float32x4_t)v88.columns[3], 3);
  simd_float4 v68 = v88.columns[0];
  *(float32x4_t *)(v27 + 1040) = v67;
  v88.columns[0] = (simd_float4)a9;
  v88.columns[1] = (simd_float4)a10;
  v88.columns[2] = (simd_float4)a11;
  v88.columns[3] = (simd_float4)a12;
  _Q0 = __invert_f4(v88);
  _Q0.columns[0] = (simd_float4)vsubq_f32((float32x4_t)_Q0.columns[3], (float32x4_t)a27);
  *(simd_float4 *)(v27 + 512) = _Q0.columns[0];
  if (a5)
  {
    _Q0.columns[1].i32[0] = 1;
    _Q0.columns[2].i32[0] = a1;
    _Q0.columns[2] = (simd_float4)vbslq_s8(vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8((int8x16_t)_Q0.columns[2], (int8x16_t)_Q0.columns[1]), 0), (int8x16_t)xmmword_1B6E87200, (int8x16_t)xmmword_1B6E4F360);
  }
  else
  {
    _Q0.columns[2].i64[0] = a3;
    _Q0.columns[2].i64[1] = a4;
  }
  _Q0.columns[1] = (simd_float4)v65;
  _Q0.columns[3] = (simd_float4)v63;
  int8x16_t v74 = (int8x16_t)_Q0.columns[2];
  *(simd_float4 *)(v27 + 928) = _Q0.columns[2];
  __asm { FMOV            V2.2S, #1.0 }
  v41.i64[0] = a26;
  v41.u64[1] = (unint64_t)vdiv_f32(*(float32x2_t *)_Q0.columns[2].f32, (float32x2_t)a26);
  *(_OWORD *)(v27 + 800) = a27;
  *(int8x16_t *)(v27 + 816) = v41;
  int8x16_t v78 = v41;
  if ((_BYTE)a1)
  {
    *(float32x4_t *)(v27 + 64) = v80;
    *(float32x4_t *)(v27 + 80) = v79;
    *(float32x4_t *)(v27 + 96) = v76;
    *(float32x4_t *)(v27 + 112) = v75;
    *(float32x4_t *)(v27 + 320) = a13;
    *(float32x4_t *)(v27 + 336) = a14;
    *(float32x4_t *)(v27 + 352) = a15;
    *(float32x4_t *)(v27 + 368) = a16;
    *(simd_float4 *)(v27 + 448) = v62;
    *(simd_float4 *)(v27 + 464) = v61;
    *(simd_float4 *)(v27 + 480) = v60;
    *(simd_float4 *)(v27 + 496) = v59;
    *(float32x4_t *)(v27 + 192) = v66;
    *(float32x4_t *)(v27 + 208) = v65;
    *(float32x4_t *)(v27 + 224) = v64;
    *(float32x4_t *)(v27 + 240) = v63;
    *(float32x4_t *)(v27 + 1056) = v70;
    *(simd_float4 *)(v27 + 1072) = v68;
    *(float32x4_t *)(v27 + 1088) = v72;
    _Q0.columns[2] = (simd_float4)v67;
    *(float32x4_t *)(v27 + 1104) = v67;
    *(simd_float4 *)(v27 + 528) = _Q0.columns[0];
    _Q0.columns[0].i32[0] = 1;
    _Q0.columns[2].i32[0] = a1;
    *(int8x16_t *)(v27 + 944) = vbslq_s8(vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8((int8x16_t)_Q0.columns[2], (int8x16_t)_Q0.columns[0]), 0), (int8x16_t)xmmword_1B6E87210, (int8x16_t)xmmword_1B6E4F360);
    int v42 = a2 & 1;
    int v43 = 2;
  }
  else
  {
    int v42 = 0;
    int v43 = 1;
  }
  *(_DWORD *)(v27 + 836) = v42;
  *(_DWORD *)(v27 + 832) = v43;
  *(void *)(v27 + 864) = a25;
  *(float *)&uint64_t v44 = *(float *)&a25 / *((float *)&a25 + 1);
  *((float *)&v44 + 1) = (float)(*((float *)&a25 + 1) - *(float *)&a25)
                       / vmuls_lane_f32(*(float *)&a25, (float32x2_t)a25, 1);
  *(void *)(v27 + 872) = v44;
  *(float32x2_t *)_Q0.columns[0].f32 = vdiv_f32((float32x2_t)0xC000000040000000, (float32x2_t)vdup_lane_s32((int32x2_t)a26, 1));
  _Q0.columns[0].i64[1] = 0x3F800000BF800000;
  *(simd_float4 *)(v27 + 848) = _Q0.columns[0];
  *(_OWORD *)(v27 + 960) = 0u;
  _Q0.columns[0] = (simd_float4)v66;
  _Q0.columns[2] = (simd_float4)v64;
  simd_float4x4 v89 = __invert_f4(_Q0);
  float32x2_t v45 = (float32x2_t)vextq_s8(v78, v78, 8uLL).u64[0];
  float32x2_t v46 = vdiv_f32(v45, (float32x2_t)*(_OWORD *)&vextq_s8(v74, v74, 8uLL));
  float32x2_t v47 = vmul_f32(*(float32x2_t *)v78.i8, *(float32x2_t *)v74.i8);
  float32x2_t v48 = vadd_f32(v46, v46);
  float32x2_t v49 = vadd_f32(v47, v47);
  __asm { FMOV            V8.2S, #-1.0 }
  float32x2_t v51 = vsub_f32(_D8, vmul_f32(v46, v49));
  v49.i32[0] = v48.i32[1];
  v52.i32[0] = v51.i32[1];
  float32x4_t v53 = vmulq_f32((float32x4_t)v89.columns[0], (float32x4_t)0);
  *(float32x4_t *)(v27 + 672) = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32((float32x4_t)v89.columns[0], v48.f32[0]), (float32x4_t)0, (float32x4_t)v89.columns[1]), (float32x4_t)0, (float32x4_t)v89.columns[2]), (float32x4_t)0, (float32x4_t)v89.columns[3]);
  *(float32x4_t *)(v27 + 688) = vmlaq_f32(vmlaq_f32(vmlsq_lane_f32(v53, (float32x4_t)v89.columns[1], v49, 0), (float32x4_t)0, (float32x4_t)v89.columns[2]), (float32x4_t)0, (float32x4_t)v89.columns[3]);
  *(float32x4_t *)(v27 + 704) = vmlaq_f32(vaddq_f32((float32x4_t)v89.columns[2], vmlaq_f32(v53, (float32x4_t)0, (float32x4_t)v89.columns[1])), (float32x4_t)0, (float32x4_t)v89.columns[3]);
  *(float32x4_t *)(v27 + 720) = vaddq_f32((float32x4_t)v89.columns[3], vmlaq_f32(vmlsq_lane_f32(vmulq_n_f32((float32x4_t)v89.columns[0], v51.f32[0]), (float32x4_t)v89.columns[1], v52, 0), (float32x4_t)0, (float32x4_t)v89.columns[2]));
  if ((_BYTE)a1)
  {
    float32x2_t v85 = v45;
    simd_float4x4 v90 = __invert_f4(*(simd_float4x4 *)(v27 + 192));
    int8x16_t v54 = *(int8x16_t *)(v27 + 944);
    float32x2_t v55 = vdiv_f32(v85, (float32x2_t)*(_OWORD *)&vextq_s8(v54, v54, 8uLL));
    *(float32x2_t *)v54.i8 = vmul_f32(*(float32x2_t *)v78.i8, *(float32x2_t *)v54.i8);
    float32x2_t v56 = vadd_f32(v55, v55);
    *(float32x2_t *)v54.i8 = vsub_f32(_D8, vmul_f32(v55, vadd_f32(*(float32x2_t *)v54.i8, *(float32x2_t *)v54.i8)));
    v55.i32[0] = v56.i32[1];
    v57.i32[0] = v54.i32[1];
    float32x4_t v58 = vmulq_f32((float32x4_t)v90.columns[0], (float32x4_t)0);
    *(float32x4_t *)(v27 + 736) = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32((float32x4_t)v90.columns[0], v56.f32[0]), (float32x4_t)0, (float32x4_t)v90.columns[1]), (float32x4_t)0, (float32x4_t)v90.columns[2]), (float32x4_t)0, (float32x4_t)v90.columns[3]);
    *(float32x4_t *)(v27 + 752) = vmlaq_f32(vmlaq_f32(vmlsq_lane_f32(v58, (float32x4_t)v90.columns[1], v55, 0), (float32x4_t)0, (float32x4_t)v90.columns[2]), (float32x4_t)0, (float32x4_t)v90.columns[3]);
    *(float32x4_t *)(v27 + 768) = vmlaq_f32(vaddq_f32((float32x4_t)v90.columns[2], vmlaq_f32(v58, (float32x4_t)0, (float32x4_t)v90.columns[1])), (float32x4_t)0, (float32x4_t)v90.columns[3]);
    *(float32x4_t *)(v27 + 784) = vaddq_f32((float32x4_t)v90.columns[3], vmlaq_f32(vmlsq_lane_f32(vmulq_n_f32((float32x4_t)v90.columns[0], *(float *)v54.i32), (float32x4_t)v90.columns[1], v57, 0), (float32x4_t)0, (float32x4_t)v90.columns[2]));
  }

  sub_1B6370B5C();
}

void sub_1B6370B5C()
{
  float32x4_t v1 = *(float32x4_t *)(v0 + 256);
  float32x4_t v2 = *(float32x4_t *)(v0 + 272);
  float32x4_t v4 = *(float32x4_t *)(v0 + 288);
  float32x4_t v3 = *(float32x4_t *)(v0 + 304);
  float32x4_t v5 = *(float32x4_t *)(v0 + 16);
  float32x4_t v6 = *(float32x4_t *)(v0 + 32);
  float32x4_t v7 = *(float32x4_t *)(v0 + 48);
  float32x4_t v8 = vmulq_f32(*(float32x4_t *)v0, (float32x4_t)0);
  float32x4_t v9 = vmlaq_f32(vmlaq_f32(vmlaq_f32(*(float32x4_t *)v0, (float32x4_t)0, v5), (float32x4_t)0, v6), (float32x4_t)0, v7);
  float32x4_t v10 = vmlaq_f32(vmlaq_f32(vaddq_f32(v5, v8), (float32x4_t)0, v6), (float32x4_t)0, v7);
  float32x4_t v11 = vmlaq_f32(vaddq_f32(v6, vmlaq_f32(v8, (float32x4_t)0, v5)), (float32x4_t)0, v7);
  float32x4_t v12 = vaddq_f32(v7, vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(*(float32x4_t *)v0, 0.0 - *(float *)(v0 + 800)), v5, 0.0 - *(float *)(v0 + 804)), v6, 0.0 - *(float *)(v0 + 808)));
  v13.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v1, v9.f32[0]), v2, *(float32x2_t *)v9.f32, 1), v4, v9, 2), v3, v9, 3);
  v13.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v1, v10.f32[0]), v2, *(float32x2_t *)v10.f32, 1), v4, v10, 2), v3, v10, 3);
  v13.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v1, v11.f32[0]), v2, *(float32x2_t *)v11.f32, 1), v4, v11, 2), v3, v11, 3);
  v13.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v1, v12.f32[0]), v2, *(float32x2_t *)v12.f32, 1), v4, v12, 2), v3, v12, 3);
  *(simd_float4x4 *)(v0 + 544) = __invert_f4(v13);
  *(simd_float4x4 *)(v0 + 608) = __invert_f4(*(simd_float4x4 *)(v0 + 128));
}

uint64_t sub_1B6370C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a2 + 624;
  sub_1B62CA210(a2 + 624, (uint64_t)v47, (unint64_t *)&unk_1EB9852B0);
  sub_1B62CA210((uint64_t)v47, (uint64_t)v48, (unint64_t *)&unk_1EB9852B0);
  if (sub_1B6388C10(v48) != 1)
  {
    uint64_t v6 = v48[1];
    uint64_t ObjectType = swift_getObjectType();
    float32x4_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 64);
    swift_unknownObjectRetain();
    uint64_t v9 = v8(ObjectType, v6);
    swift_unknownObjectRelease();
    if (v9 != 0xFFFFFFFFLL)
    {
      unint64_t v18 = v9 & 0xFFFFFFFF00000000;
      return v18 | v9;
    }
    sub_1B62CA210(v5, (uint64_t)v23, (unint64_t *)&unk_1EB9852B0);
    sub_1B62CA210((uint64_t)v23, (uint64_t)v24, (unint64_t *)&unk_1EB9852B0);
    if (sub_1B6388C10(v24) != 1)
    {
      uint64_t v10 = v24[1];
      uint64_t v11 = swift_getObjectType();
      float32x4_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 144);
      swift_unknownObjectRetain();
      uint64_t v13 = v12(v11, v10);
      swift_unknownObjectRelease();
      long long v14 = *(_OWORD *)(v3 + 32);
      v45[0] = *(_OWORD *)(v3 + 16);
      v45[1] = v14;
      uint64_t v46 = *(void *)(v3 + 48);
      uint64_t v15 = v13 & 0xFFFFFFFFFFLL;
      sub_1B62C9DA8(a1, (uint64_t)v45, v15, v25);
      sub_1B62CA210((uint64_t)v25, (uint64_t)v35, (unint64_t *)&qword_1EB97DC50);
      if (*(void *)&v35[0])
      {
        long long v39 = v35[2];
        long long v40 = v35[3];
        long long v41 = v35[4];
        long long v42 = v36;
        long long v37 = v35[0];
        long long v38 = v35[1];
        if ((void)v36)
        {
          sub_1B637BED0(0);
          uint64_t v17 = v16;
          swift_retain();
          uint64_t v9 = sub_1B62DE2C8(v17);
          swift_release();
          unint64_t v18 = v9 & 0xFFFFFFFF00000000;
          sub_1B632F170(v25);
          return v18 | v9;
        }
        sub_1B632F170(v25);
      }
      long long v19 = *(_OWORD *)(v3 + 72);
      v43[0] = *(_OWORD *)(v3 + 56);
      v43[1] = v19;
      uint64_t v44 = *(void *)(v3 + 88);
      sub_1B62C9DA8(a1, (uint64_t)v43, v15, v26);
      sub_1B62CA210((uint64_t)v26, (uint64_t)v27, (unint64_t *)&qword_1EB97DC50);
      if (*(void *)&v27[0])
      {
        long long v31 = v27[2];
        long long v32 = v27[3];
        long long v33 = v27[4];
        long long v34 = v28;
        long long v29 = v27[0];
        long long v30 = v27[1];
        if ((void)v28)
        {
          sub_1B637BED0(0);
          uint64_t v21 = v20;
          swift_retain();
          uint64_t v9 = sub_1B62DE2C8(v21);
          swift_release();
          unint64_t v18 = v9 & 0xFFFFFFFF00000000;
          sub_1B632F170(v26);
          return v18 | v9;
        }
        sub_1B632F170(v26);
      }
      unint64_t v18 = 0;
      LODWORD(v9) = -1;
      return v18 | v9;
    }
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6370FB0()
{
  return *(void *)(v0 + 24);
}

float sub_1B6370FB8(uint64_t a1, unint64_t a2)
{
  unint64_t v4 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    int64_t v12 = a2 << 32;
    int v13 = a2;
    if ((uint64_t)(a2 << 32) >= (uint64_t)0xFFFFFFFF00000001
      && (int)a2 < *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (HIDWORD(a2) == -1 || *(_DWORD *)(v14 + 12 * (int)a2 + 8) == HIDWORD(a2))
      {
        uint64_t v15 = (unsigned int *)(v14 + 12 * (int)a2);
        sub_1B6372C44(*(void *)(*(void *)(a1 + 136) + 8 * (int)*v15 + 32), *v15 | ((unint64_t)*((unsigned __int16 *)v15 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v15+ 2) << 32), 48, a1, (uint64_t)v19);
        if (v21.u8[0] != 2) {
          return v20;
        }
      }
    }
    if (v12 >= (uint64_t)0xFFFFFFFF00000001
      && (int)a2 < *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
    {
      uint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if ((v4 == -1 || *(_DWORD *)(v16 + 12 * v13 + 8) == v4)
        && (sub_1B6965084(*(void *)(*(void *)(a1 + 136) + 8 * *(int *)(v16 + 12 * v13) + 32), *(_DWORD *)(v16 + 12 * v13), *(_WORD *)(v16 + 12 * v13 + 4), 20, a1) & 0xFF00000000) != 0x200000000)
      {
        return v17;
      }
    }
  }
  sub_1B637BA50((void *)a2, (uint64_t)v18);
  sub_1B62CA210((uint64_t)v18, (uint64_t)v19, &qword_1EB97ECF0);
  float result = 0.0;
  if ((v23 & 1) == 0)
  {
    float v7 = v21.f32[3];
    float32x4_t v6 = v22;
    float v8 = v21.f32[2];
    if (v21.f32[2] > 0.0)
    {
      uint64_t v9 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F300, *(float *)&v21), (float32x4_t)xmmword_1B6E4F320, *(float32x2_t *)&v21, 1), (float32x4_t)xmmword_1B6E4F340, v21, 2), (float32x4_t)xmmword_1B6E4F360, v21, 3).i64[1];
      float v7 = *((float *)&v9 + 1);
      float v8 = *(float *)&v9;
      float32x4_t v6 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F300, v22.f32[0]), (float32x4_t)xmmword_1B6E4F320, *(float32x2_t *)v22.f32, 1), (float32x4_t)xmmword_1B6E4F340, v22, 2), (float32x4_t)xmmword_1B6E4F360, v22, 3);
    }
    v6.f32[0] = v6.f32[2] / v8;
    double v10 = v6.f32[2] / (v8 + 1.0);
    double v11 = (v6.f32[2] + -1.0) / v8;
    if (v7 == 0.0) {
      double v10 = v11;
    }
    *(float *)&double v10 = v10;
    LODWORD(result) = vbsl_s8((int8x8_t)vdup_lane_s32(vcgt_f32(*(float32x2_t *)v6.f32, *(float32x2_t *)&v10), 0), (int8x8_t)vrev64_s32((int32x2_t)__PAIR64__(LODWORD(v10), v6.u32[0])), (int8x8_t)__PAIR64__(LODWORD(v10), v6.u32[0])).u32[0];
  }
  return result;
}

uint64_t sub_1B6371218(void *a1)
{
  uint64_t v3 = **(void **)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1B6371268(uint64_t a1)
{
  return sub_1B6371290(a1, *(void *)(v1 + 16));
}

uint64_t sub_1B6371290(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  int v33 = v2;
  int v34 = v3;
  int v32 = v4;
  uint64_t v6 = v5;
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  memcpy(__dst, v7, sizeof(__dst));
  swift_retain();
  float v8 = (void *)sub_1B62F1868(0, 26048);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    int v13 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v35 = 0;
    swift_retain();
    sub_1B6B33E34(v13, &v35, 0xD000000000000040, 0x80000001B6F41590);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v14 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v15 = v8;
    memcpy(&v14[v10], __dst, 0x65C0uLL);
    swift_release();
  }
  swift_unknownObjectRelease();
  *(void *)uint64_t v6 = v8;
  *(void *)(v6 + 8) = v10;
  *(void *)(v6 + 16) = v12;
  *(unsigned char *)(v6 + 50) = v32 > 0;
  *(unsigned char *)(v6 + 49) = v33 > 0;
  *(unsigned char *)(v6 + 48) = v34 > 0;
  sub_1B6372A20((uint64_t)__dst);
  swift_retain();
  uint64_t v16 = (void *)sub_1B62F1868(0, 208);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    int v21 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v35 = 0;
    swift_retain();
    sub_1B6B33E34(v21, &v35, 0xD000000000000039, 0x80000001B6F41550);
    swift_release();
    swift_release();
  }
  else
  {
    float32x4_t v22 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v23 = v16;
    __int16 v24 = &v22[v18];
    long long v25 = __dst[11];
    *((_OWORD *)v24 + 10) = __dst[10];
    *((_OWORD *)v24 + 11) = v25;
    *((_OWORD *)v24 + 12) = __dst[12];
    long long v26 = __dst[7];
    *((_OWORD *)v24 + 6) = __dst[6];
    *((_OWORD *)v24 + 7) = v26;
    long long v27 = __dst[9];
    *((_OWORD *)v24 + 8) = __dst[8];
    *((_OWORD *)v24 + 9) = v27;
    long long v28 = __dst[3];
    *((_OWORD *)v24 + 2) = __dst[2];
    *((_OWORD *)v24 + 3) = v28;
    long long v29 = __dst[5];
    *((_OWORD *)v24 + 4) = __dst[4];
    *((_OWORD *)v24 + 5) = v29;
    long long v30 = __dst[1];
    *(_OWORD *)__int16 v24 = __dst[0];
    *((_OWORD *)v24 + 1) = v30;
  }
  swift_release();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(v6 + 24) = v16;
  *(void *)(v6 + 32) = v18;
  *(void *)(v6 + 40) = v20;
  return result;
}

void *sub_1B637169C(uint64_t **a1)
{
  return sub_1B635E878(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

double sub_1B63716BC@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t *sub_1B63716C8(uint64_t *a1)
{
  return sub_1B63716E0(a1);
}

uint64_t *sub_1B63716E0(uint64_t *a1)
{
  return sub_1B6371700(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t *sub_1B6371700(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v7 = *(_OWORD *)(a3 + 56);
  long long v8 = *(_OWORD *)(a3 + 72);
  uint64_t v252 = *(void *)(a3 + 88);
  v251[0] = v7;
  v251[1] = v8;
  sub_1B62C9DA8(a2, (uint64_t)v251, 0x200000000, v128);
  sub_1B62CA210((uint64_t)v128, (uint64_t)&v177, (unint64_t *)&qword_1EB97DC50);
  long long v118 = a1;
  if (v177)
  {
    uint64_t v9 = v186;
    uint64_t v240 = v177;
    int v241 = v178;
    char v242 = v179;
    uint64_t v243 = v180;
    char v244 = v181;
    uint64_t v245 = v182;
    uint64_t v246 = v183;
    long long v247 = v184;
    long long v248 = v185;
    uint64_t v249 = v186;
    uint64_t v250 = v187;
    uint64_t v10 = (void *)a1[3];
    long long v119 = a1 + 3;
    uint64_t v253 = a2;
    swift_retain();
    swift_retain();
    swift_retain();
    if (v10) {
      uint64_t v11 = (unsigned __int16 *)objc_msgSend(v10, sel_arrayLength);
    }
    else {
      uint64_t v11 = 0;
    }
    simd_float4x4 v188 = v11;
    sub_1B6D86A20((uint64_t)&v240, (uint64_t)&v188);
    uint64_t v114 = v4;
    uint64_t v27 = (uint64_t)v11 + v9;
    long long v28 = sub_1B68007AC(v27 << 11, 0);
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    swift_unknownObjectRelease();
    *a1 = (uint64_t)v28;
    a1[1] = v30;
    a1[2] = v32;
    RGTextureDescriptorMakeDefault((uint64_t)&v223);
    char v33 = BYTE10(v223);
    uint64_t v34 = v226;
    uint64_t v116 = v227;
    char v35 = BYTE8(v227);
    char v36 = BYTE9(v227);
    char v37 = BYTE10(v227);
    char v112 = BYTE11(v227);
    if (v27 <= 1) {
      LOWORD(v27) = 1;
    }
    int v230 = 65792;
    __int16 v231 = 1;
    __int16 v232 = v27;
    __int16 v233 = 257;
    char v234 = BYTE10(v223);
    long long v235 = xmmword_1B6EA0BB0;
    long long v236 = xmmword_1B6EA0BC0;
    long long v237 = v226;
    uint64_t v38 = *((void *)&v226 + 1);
    uint64_t v238 = v227;
    int v239 = DWORD2(v227);
    id v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
    LODWORD(v223) = 65792;
    WORD2(v223) = 1;
    WORD3(v223) = v27;
    WORD4(v223) = 257;
    BYTE10(v223) = v33;
    long long v224 = xmmword_1B6EA0BB0;
    long long v225 = xmmword_1B6EA0BC0;
    *(void *)&long long v226 = v34;
    *((void *)&v226 + 1) = v38;
    a1 = v118;
    *(void *)&long long v227 = v116;
    BYTE8(v227) = v35;
    BYTE9(v227) = v36;
    BYTE10(v227) = v37;
    BYTE11(v227) = v112;
    RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v223, v39);
    long long v40 = sub_1B639E4E4(v39, 0x6D6152726F6C6F43, 0xEA00000000007370);
    swift_unknownObjectRelease();

    v118[3] = (uint64_t)v40;
    long long v41 = *(_OWORD *)(a3 + 32);
    v221[0] = *(_OWORD *)(a3 + 16);
    v221[1] = v41;
    uint64_t v222 = *(void *)(a3 + 48);
    uint64_t v42 = v253;
    sub_1B62C9DA8(v253, (uint64_t)v221, 0x200000000, v129);
    sub_1B62CA210((uint64_t)v129, (uint64_t)&v167, (unint64_t *)&qword_1EB97DC50);
    if (v167)
    {
      *(void *)&long long v223 = v167;
      DWORD2(v223) = v168;
      BYTE12(v223) = v169;
      *(void *)&long long v224 = v170;
      BYTE8(v224) = v171;
      long long v225 = v172;
      long long v226 = v173;
      long long v227 = v174;
      uint64_t v228 = v175;
      uint64_t v229 = v176;
      sub_1B6D86A4C((uint64_t)&v223, (uint64_t)v118, (uint64_t)&v230);
      uint64_t v4 = v114;
      sub_1B632F170(v129);
      if (v40) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v4 = v114;
      if (v40)
      {
LABEL_12:
        swift_unknownObjectRetain();
        sub_1B62C9DA8(v42, (uint64_t)v221, 0x200000000, v130);
        sub_1B62CA210((uint64_t)v130, (uint64_t)&v156, (unint64_t *)&qword_1EB97DC50);
        if (v156)
        {
          uint64_t v210 = v156;
          int v211 = v157;
          char v212 = v158;
          uint64_t v213 = v159;
          char v214 = v160;
          uint64_t v215 = v161;
          uint64_t v216 = v162;
          long long v217 = v163;
          long long v218 = v164;
          uint64_t v219 = v165;
          uint64_t v220 = v166;
          swift_unknownObjectRetain();
          sub_1B6D9A178((uint64_t)&v210, (uint64_t)v40);
          swift_unknownObjectRelease();
          sub_1B632F170(v128);
          swift_unknownObjectRelease();
          sub_1B632F170(v130);
        }
        else
        {
          sub_1B632F170(v128);
          swift_unknownObjectRelease();
        }
        uint64_t v12 = *v119;
        if (*v119)
        {
          long long v43 = *(_OWORD *)(a3 + 112);
          v208[0] = *(_OWORD *)(a3 + 96);
          v208[1] = v43;
          uint64_t v209 = *(void *)(a3 + 128);
          swift_unknownObjectRetain();
          sub_1B62C9DA8(v42, (uint64_t)v208, 0x200000000, v131);
          sub_1B62CA210((uint64_t)v131, (uint64_t)&v132, (unint64_t *)&qword_1EB97DC50);
          uint64_t v14 = v132;
          if (v132)
          {
            id v15 = &v143;
            uint64_t v16 = &v142;
            uint64_t v17 = &v141;
            uint64_t v18 = &v140;
            uint64_t v19 = &v139;
            uint64_t v20 = &v137;
            int v21 = &v138;
            float32x4_t v22 = &v136;
            id v23 = &v135;
            __int16 v24 = &v134;
            long long v25 = (char *)&v133 + 4;
            long long v26 = &v133;
LABEL_20:
            int v44 = *(_DWORD *)v26;
            char v45 = *v25;
            uint64_t v46 = *v24;
            char v47 = *(unsigned char *)v23;
            uint64_t v48 = *v22;
            uint64_t v49 = *v20;
            uint64_t v50 = *v21;
            uint64_t v51 = *v19;
            uint64_t v52 = *v18;
            float32x4_t v53 = (void *)*v17;
            uint64_t v54 = *v16;
            uint64_t v55 = *v15;
            simd_float4x4 v188 = v14;
            int v189 = v44;
            char v190 = v45;
            uint64_t v191 = v46;
            char v192 = v47;
            uint64_t v193 = v48;
            uint64_t v109 = v49;
            uint64_t v194 = v49;
            uint64_t v195 = v50;
            uint64_t v196 = v51;
            uint64_t v197 = v52;
            long long v113 = v53;
            uint64_t v198 = v53;
            uint64_t v199 = v54;
            uint64_t v200 = v55;
            if (v54 >= 1 && v51)
            {
              uint64_t v103 = v12;
              uint64_t v56 = v53[4];
              int v57 = *(unsigned __int8 *)(v52 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
              uint64_t v201 = v14;
              int v202 = v44;
              char v203 = v45;
              uint64_t v204 = v46;
              char v205 = v47;
              uint64_t v206 = v48;
              long long v104 = v53 + 8;
              uint64_t v105 = (uint64_t)(v53 + 6);
              swift_retain();
              swift_retain();
              swift_retain();
              uint64_t v58 = 0;
              uint64_t v107 = v56;
              uint64_t v108 = v51;
              int v106 = v57;
              while (1)
              {
                uint64_t v111 = v58;
                simd_float4 v59 = (unsigned int *)(v109 + 48 * v58);
                uint64_t v60 = *v59;
                uint64_t v115 = v4;
                uint64_t v117 = v59[1];
                simd_float4 v61 = (uint64_t *)*((void *)v59 + 2);
                uint64_t v62 = *((void *)v59 + 3);
                uint64_t v63 = *((void *)v59 + 4);
                uint64_t v64 = *((void *)v59 + 5);
                if (v57)
                {
                  float32x4_t v65 = *(os_unfair_lock_s **)(v64 + 376);
                  swift_retain();
                  os_unfair_lock_lock(v65);
                  os_unfair_lock_lock(*(os_unfair_lock_t *)(v64 + 344));
                }
                else
                {
                  swift_retain();
                }
                ecs_stack_allocator_push_snapshot(v56);
                sub_1B62CA210(v105, (uint64_t)v207, &qword_1EB97DE20);
                uint64_t v66 = v113[4];
                uint64_t v67 = *(void *)(*(void *)(*(void *)(*(void *)(v64 + 40) + 16) + 32) + 16) + 1;
                swift_retain();
                v113[6] = ecs_stack_allocator_allocate(v66, 48 * v67, 8);
                v113[7] = v67;
                v104[1] = 0;
                v104[2] = 0;
                *long long v104 = 0;
                swift_release();
                uint64_t v253 = sub_1B62C9024((uint64_t)&type metadata for ColorRampComponent, (uint64_t)&off_1F0F75B28, v61, v62, v63, (uint64_t)v113);
                uint64_t v110 = v64;
                uint64_t v120 = sub_1B62C9024((uint64_t)&type metadata for ColorRampRuntime, (uint64_t)&off_1F0F6B7A8, v61, v62, v63, (uint64_t)v113);
                if (v61)
                {
                  if (v63)
                  {
                    uint64_t v68 = 0;
                    a1 = v118;
                    do
                    {
                      uint64_t v69 = v253 + 24 * v68;
                      uint64_t v126 = MEMORY[0x1E4FBC860];
                      sub_1B6C3D70C(0, 256, 0);
                      for (uint64_t i = 0; i != 256; ++i)
                      {
                        LODWORD(v70) = 1132396544;
                        sub_1B6CD5D6C(*(void *)v69, *(void *)(v69 + 8), *(unsigned char *)(v69 + 16), (float)i / 255.0, v70, v71, v72);
                        unint64_t v76 = *(void *)(v126 + 16);
                        unint64_t v75 = *(void *)(v126 + 24);
                        if (v76 >= v75 >> 1)
                        {
                          long long v122 = v74;
                          sub_1B6C3D70C(v75 > 1, v76 + 1, 1);
                          long long v74 = v122;
                        }
                        *(void *)(v126 + 16) = v76 + 1;
                        *(_OWORD *)(v126 + 16 * v76 + 32) = v74;
                      }
                      uint64_t v77 = (void *)*a1;
                      if (*a1)
                      {
                        uint64_t v78 = a1[1];
                        uint64_t v79 = *(int *)(v120 + 4 * v68);
                        swift_unknownObjectRetain();
                        if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
                        {
                          swift_release();
                          swift_unknownObjectRelease();
                          swift_unknownObjectRelease();
                        }
                        else
                        {
                          float32x4_t v80 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
                          id v81 = v77;
                          swift_unknownObjectRelease();
                          swift_unknownObjectRelease();
                          int v82 = &v80[2048 * v79 + 4 + v78];
                          for (uint64_t j = 2; j != 258; ++j)
                          {
                            long long v123 = *(_OWORD *)(v126 + 16 * j);
                            *((_WORD *)v82 - 2) = sub_1B64D9130(*(float *)&v123);
                            *((_WORD *)v82 - 1) = sub_1B64D9130(*((float *)&v123 + 1));
                            *(_WORD *)int v82 = sub_1B64D9130(*((float *)&v123 + 2));
                            *((_WORD *)v82 + 1) = sub_1B64D9130(*((float *)&v123 + 3));
                            v82 += 8;
                          }
                          swift_release();
                        }
                        a1 = v118;
                      }
                      else
                      {
                        swift_release();
                      }
                      ++v68;
                    }
                    while (v68 != v63);
                    goto LABEL_45;
                  }
                }
                else
                {
                  uint64_t v84 = v117;
                  if (v60 != v117)
                  {
                    a1 = v118;
                    do
                    {
                      uint64_t v85 = v253 + 24 * v60;
                      uint64_t v127 = MEMORY[0x1E4FBC860];
                      sub_1B6C3D70C(0, 256, 0);
                      for (uint64_t k = 0; k != 256; ++k)
                      {
                        LODWORD(v86) = 1132396544;
                        sub_1B6CD5D6C(*(void *)v85, *(void *)(v85 + 8), *(unsigned char *)(v85 + 16), (float)k / 255.0, v86, v87, v88);
                        unint64_t v92 = *(void *)(v127 + 16);
                        unint64_t v91 = *(void *)(v127 + 24);
                        if (v92 >= v91 >> 1)
                        {
                          long long v124 = v90;
                          sub_1B6C3D70C(v91 > 1, v92 + 1, 1);
                          long long v90 = v124;
                        }
                        *(void *)(v127 + 16) = v92 + 1;
                        *(_OWORD *)(v127 + 16 * v92 + 32) = v90;
                      }
                      long long v93 = (void *)*v118;
                      if (*v118)
                      {
                        uint64_t v94 = v118[1];
                        uint64_t v95 = *(int *)(v120 + 4 * v60);
                        swift_unknownObjectRetain();
                        if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
                        {
                          swift_release();
                          swift_unknownObjectRelease();
                          swift_unknownObjectRelease();
                        }
                        else
                        {
                          long long v96 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
                          id v97 = v93;
                          swift_unknownObjectRelease();
                          swift_unknownObjectRelease();
                          long long v98 = &v96[2048 * v95 + 4 + v94];
                          for (uint64_t m = 2; m != 258; ++m)
                          {
                            long long v125 = *(_OWORD *)(v127 + 16 * m);
                            *((_WORD *)v98 - 2) = sub_1B64D9130(*(float *)&v125);
                            *((_WORD *)v98 - 1) = sub_1B64D9130(*((float *)&v125 + 1));
                            *(_WORD *)long long v98 = sub_1B64D9130(*((float *)&v125 + 2));
                            *((_WORD *)v98 + 1) = sub_1B64D9130(*((float *)&v125 + 3));
                            v98 += 8;
                          }
                          swift_release();
                          uint64_t v84 = v117;
                        }
                      }
                      else
                      {
                        swift_release();
                      }
                      ++v60;
                    }
                    while (v60 != v84);
                    goto LABEL_45;
                  }
                }
                a1 = v118;
LABEL_45:
                sub_1B6345178(v113, &v201, (uint64_t)v207);
                uint64_t v4 = v115;
                sub_1B634507C((char *)v110);
                uint64_t v56 = v107;
                ecs_stack_allocator_pop_snapshot(v107);
                int v57 = v106;
                if (v106)
                {
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v110 + 344));
                  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v110 + 376));
                }
                swift_release();
                uint64_t v58 = v111 + 1;
                if (v111 + 1 == v108)
                {
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v12 = v103;
                  break;
                }
              }
            }
            long long v100 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, 0);
            long long v101 = (void *)sub_1B6E31768();
            objc_msgSend(v100, sel_pushDebugGroup_, v101);

            swift_unknownObjectRetain();
            sub_1B6A7D60C(v100, (uint64_t)&v188, v12, a1);
            swift_unknownObjectRelease();
            objc_msgSend(v100, sel_popDebugGroup);
            swift_unknownObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            goto LABEL_63;
          }
          goto LABEL_63;
        }
        return sub_1B632F170(v128);
      }
    }
    sub_1B632F170(v128);
    return sub_1B632F170(v128);
  }
  uint64_t v12 = a1[3];
  if (v12)
  {
    long long v13 = *(_OWORD *)(a3 + 152);
    long long v223 = *(_OWORD *)(a3 + 136);
    long long v224 = v13;
    *(void *)&long long v225 = *(void *)(a3 + 168);
    swift_unknownObjectRetain();
    sub_1B62C9DA8(a2, (uint64_t)&v223, 0x200000000, &v240);
    sub_1B62CA210((uint64_t)&v240, (uint64_t)&v144, (unint64_t *)&qword_1EB97DC50);
    uint64_t v14 = v144;
    if (v144)
    {
      id v15 = &v155;
      uint64_t v16 = &v154;
      uint64_t v17 = &v153;
      uint64_t v18 = &v152;
      uint64_t v19 = &v151;
      uint64_t v20 = &v149;
      int v21 = &v150;
      float32x4_t v22 = &v148;
      id v23 = &v147;
      __int16 v24 = &v146;
      long long v25 = (char *)&v145 + 4;
      long long v26 = &v145;
      goto LABEL_20;
    }
LABEL_63:
    swift_unknownObjectRelease();
  }
  return sub_1B632F170(v128);
}

uint64_t destroy for LightsUniforms()
{
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

void sub_1B6372450()
{
}

void sub_1B6372490()
{
  if (qword_1EB97DBA0 != -1) {
    swift_once();
  }
  uint64_t v0 = 0;
  MEMORY[0x1BA9B84E0](&v0, 8);
  uint64_t v0 = 0;
  MEMORY[0x1BA9B84E0](&v0, 8);
  uint64_t v0 = 0;
  MEMORY[0x1BA9B84E0](&v0, 8);
  uint64_t v0 = 0;
  MEMORY[0x1BA9B84E0](&v0, 8);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  type metadata accessor for EmitterRuntime.Storage();
  swift_allocObject();
  swift_retain();
  vfx_uniform_grid_create();
}

uint64_t type metadata accessor for EmitterRuntime.Storage()
{
  return self;
}

uint64_t sub_1B63726C4(uint64_t a1)
{
  return sub_1B6356348(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B63726E0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id sub_1B6372708(uint64_t a1)
{
  return sub_1B6372728(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_1B6372728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  sub_1B637289C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), 0, 10, (unint64_t *)(a3 + 1304));
  sub_1B637289C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), 0, 11, (unint64_t *)(a3 + 1304));
  if (*(unsigned char *)(a1 + 50) != 1) {
    return sub_1B6357350(0, 23);
  }
  sub_1B6383E40((uint64_t)v9);
  uint64_t v5 = sub_1B6330D9C((uint64_t)v9, 1, 0, 2);
  sub_1B62C7BF4((uint64_t)v9);
  if (!v5) {
    return sub_1B6357350(0, 23);
  }
  uint64_t v6 = swift_unknownObjectRetain();
  sub_1B6357350(v6, 23);
  swift_unknownObjectRelease();
  uint64_t v7 = swift_unknownObjectRetain();
  MEMORY[0x1BA9B3870](v7);
  if (*(void *)((*(void *)(a3 + 1304) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a3 + 1304) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    sub_1B6E31C78();
  sub_1B6E31CC8();
  sub_1B6E31C48();
  return (id)swift_unknownObjectRelease();
}

id sub_1B637289C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unint64_t *a6)
{
  uint64_t v7 = v6;
  if (a1)
  {
    uint64_t v10 = a4 + a2;
    uint64_t v11 = a5;
    swift_unknownObjectRetain();
    id v12 = objc_msgSend(v7, sel_setBuffer_offset_atIndex_, a1, v10, v11);
    unint64_t v13 = *a6;
    MEMORY[0x1F4188790](v12, v14);
    v18[2] = a1;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    char v15 = sub_1B62EC350((uint64_t (*)(uint64_t *))sub_1B62EC480, (uint64_t)v18, v13);
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = swift_unknownObjectRetain();
      MEMORY[0x1BA9B3870](v16);
      if (*(void *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B6E31C78();
      }
      sub_1B6E31CC8();
      sub_1B6E31C48();
    }
    return (id)swift_unknownObjectRelease_n();
  }
  else
  {
    return objc_msgSend(v6, sel_setBuffer_offset_atIndex_, 0, 0);
  }
}

__n128 sub_1B6372A10(_OWORD *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  __n128 result = *(__n128 *)v2;
  long long v4 = *(_OWORD *)(v2 + 16);
  *a1 = *(_OWORD *)v2;
  a1[1] = v4;
  return result;
}

double sub_1B6372A20@<D0>(uint64_t a1@<X8>)
{
  if (qword_1EB97E478 != -1) {
    swift_once();
  }
  v29[0] = xmmword_1EB997B78;
  v29[1] = unk_1EB997B88;
  uint64_t v30 = qword_1EB997B98;
  sub_1B62C9DA8(v1, (uint64_t)v29, 0x200000000, v16);
  sub_1B62CA210((uint64_t)v16, (uint64_t)v21, (unint64_t *)&qword_1EB97DC50);
  float32x4_t v3 = (float32x4_t)xmmword_1B6E4F300;
  float32x4_t v4 = (float32x4_t)xmmword_1B6E4F320;
  float32x4_t v5 = (float32x4_t)xmmword_1B6E4F2E0;
  float v6 = 1.0;
  if (*(void *)&v21[0])
  {
    long long v25 = v21[2];
    long long v26 = v21[3];
    long long v27 = v21[4];
    long long v28 = v22;
    long long v23 = v21[0];
    long long v24 = v21[1];
    if ((void)v22)
    {
      sub_1B637BED0(0);
      uint64_t v8 = v7;
      swift_retain();
      uint64_t v9 = (void *)sub_1B62DE2C8(v8);
      swift_release();
      sub_1B632F170(v16);
      unint64_t v10 = sub_1B695FBBC((uint64_t)v9);
      if ((v10 & 0x100000000) != 0) {
        float v6 = 1.0;
      }
      else {
        float v6 = *(float *)&v10;
      }
      sub_1B62E9D50(v9, (uint64_t)v17);
      sub_1B62CA210((uint64_t)v17, (uint64_t)v19, qword_1EB97EA20);
      if ((v20 & 1) == 0)
      {
        sub_1B688AC0C(v18, v19[0], v19[1], v19[2]);
        float32x4_t v3 = v18[0];
        float32x4_t v4 = v18[1];
        float32x4_t v5 = v18[2];
        goto LABEL_14;
      }
      uint64_t v11 = sub_1B6360920((unint64_t)v9);
      if ((v13 & 1) == 0)
      {
        v14.i64[0] = v11;
        v14.i64[1] = v12;
        *(__n64 *)v3.f32 = sub_1B6C1F89C(v14);
        goto LABEL_14;
      }
    }
    else
    {
      sub_1B632F170(v16);
    }
    float32x4_t v4 = (float32x4_t)xmmword_1B6E4F320;
    float32x4_t v3 = (float32x4_t)xmmword_1B6E4F300;
    float32x4_t v5 = (float32x4_t)xmmword_1B6E4F2E0;
  }
LABEL_14:
  *(float32x4_t *)a1 = v3;
  *(float32x4_t *)(a1 + 16) = v4;
  *(float32x4_t *)(a1 + 32) = v5;
  *(float *)(a1 + 48) = v6;
  *(_DWORD *)(a1 + 52) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_DWORD *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(void *)(a1 + 192) = 0;
  return result;
}

__n128 sub_1B6372C44@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 56);
    while ((ValueMetadata *)*(v7 - 3) != &type metadata for PerspectiveCamera)
    {
      v7 += 5;
      if (!--v6) {
        goto LABEL_5;
      }
    }
    uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 136) + 8 * (int)a2 + 32) + 128) + *v7 + (a2 << 16 >> 48) * a3;
    uint64_t v10 = *(void *)(v9 + 40);
    uint64_t v11 = 256;
    if (!*(unsigned char *)(v9 + 33)) {
      uint64_t v11 = 0;
    }
    uint64_t v12 = v11 | *(unsigned __int8 *)(v9 + 32);
    __n128 result = *(__n128 *)v9;
    long long v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)a5 = *(_OWORD *)v9;
    *(_OWORD *)(a5 + 16) = v13;
    *(void *)(a5 + 32) = v12;
    *(void *)(a5 + 40) = v10;
  }
  else
  {
LABEL_5:
    result.n128_u64[0] = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(void *)(a5 + 32) = 2;
    *(void *)(a5 + 40) = 0;
  }
  return result;
}

void *sub_1B6372CD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B633C400(a1, (void *(*)(_OWORD *__return_ptr, void, __n128))sub_1B6359A1C, a2);
}

void *sub_1B6372CF0(void *result)
{
  *__n128 result = *(void *)(v1 + 16);
  return result;
}

void sub_1B6372CFC(uint64_t a1)
{
  sub_1B6372D1C(a1, *(void *)(v1 + 16));
}

void sub_1B6372D1C(uint64_t a1, uint64_t a2)
{
  double v6 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v7 = v2;
  v282[15] = *MEMORY[0x1E4F143B8];
  if (*(void *)(*(void *)v3 + 16))
  {
    uint64_t v8 = v5;
    uint64_t v9 = v4;
    uint64_t v10 = v3;
    uint64_t v11 = (void *)thread_worker_index(&thread_worker_index, v6);
    uint64_t v13 = *(void *)(*(void *)(v12 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues) + 8 * *v11 + 8);
    uint64_t v254 = 0;
    *(_OWORD *)(v14 + 1984) = 0u;
    *(_OWORD *)(v14 + 1968) = 0u;
    memset(&v257[8], 0, 40);
    long long v258 = xmmword_1B6E50D30;
    long long v259 = 1uLL;
    *(void *)&long long v260 = 0;
    v257[0] = 0;
    *((void *)&v260 + 1) = 1;
    long long v261 = 0uLL;
    *(void *)&long long v255 = v9;
    *((void *)&v255 + 1) = v12;
    *((void *)&v256 + 1) = 1;
    *(void *)&long long v256 = v13;
    sub_1B635FA4C((uint64_t)v253, (uint64_t)&v257[8]);
    v267[5] = v258;
    v267[6] = v259;
    void v267[7] = v260;
    v267[8] = v261;
    v267[1] = v256;
    v267[2] = *(_OWORD *)v257;
    v267[3] = *(_OWORD *)&v257[16];
    v267[4] = *(_OWORD *)&v257[32];
    v267[0] = v255;
    sub_1B6383E40((uint64_t)v268);
    uint64_t v15 = sub_1B6330D9C((uint64_t)v268, 1, 0, 2);
    sub_1B62C7BF4((uint64_t)v268);
    if (!v15)
    {
LABEL_138:
      sub_1B635FC14((uint64_t)v267);
      return;
    }
    swift_unknownObjectRetain();
    uint64_t v16 = sub_1B633483C(0, 2, v15, 2, 1, 0);
    swift_unknownObjectRelease();
    uint64_t v17 = sub_1B6E328F8();
    sub_1B6388754(v17, v18, v16);
    swift_bridgeObjectRelease();
    uint64_t v172 = *(void *)(*(void *)v10 + 16);
    if (!v172)
    {
      swift_unknownObjectRelease();

      goto LABEL_138;
    }
    uint64_t v170 = *(void *)v10 + 32;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    char v169 = v8;
    uint64_t v206 = v9;
    char v171 = v16;
    while (1)
    {
      long long v24 = (_OWORD *)(v170 + 160 * v22);
      float32x4_t v25 = *((float32x4_t *)v24 + 3);
      float32x4_t v26 = *((float32x4_t *)v24 + 4);
      float32x4_t v27 = *((float32x4_t *)v24 + 5);
      float32x4_t v28 = *((float32x4_t *)v24 + 6);
      float32x4_t v29 = *((float32x4_t *)v24 + 7);
      uint64_t v30 = *((void *)v24 + 16);
      float32x4_t v200 = *(float32x4_t *)v24;
      int8x16_t v203 = *((int8x16_t *)v24 + 9);
      unint64_t v31 = v8[23];
      int32x4_t v32 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, COERCE_FLOAT(*v24)), v27, *(float32x2_t *)v24, 1), v28, *(float32x4_t *)v24, 2), v29, *(float32x4_t *)v24, 3);
      float32x4_t v193 = *((float32x4_t *)v24 + 2);
      *(_OWORD *)uint64_t v196 = v24[1];
      int32x4_t v33 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, *(float *)v196), v27, (float32x2_t)v24[1], 1), v28, *(float32x4_t *)v196, 2), v29, *(float32x4_t *)v196, 3);
      float32x4_t v34 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, v193.f32[0]), v27, *(float32x2_t *)v193.f32, 1), v28, v193, 2), v29, v193, 3);
      float32x4_t v188 = v27;
      float32x4_t v189 = v26;
      float32x4_t v184 = v29;
      float32x4_t v186 = v28;
      float32x4_t v190 = v25;
      float32x4_t v35 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v26, v25.f32[0]), v27, *(float32x2_t *)v25.f32, 1), v28, v25, 2), v29, v25, 3);
      v29.f32[0] = *(float *)&v32.i32[3] - *(float *)v32.i32;
      v29.f32[1] = *(float *)&v33.i32[3] - *(float *)v33.i32;
      v29.f32[2] = v34.f32[3] - v34.f32[0];
      int32x4_t v36 = (int32x4_t)vmulq_f32(v29, v29);
      v29.f32[3] = v35.f32[3] - v35.f32[0];
      v19.f32[0] = *(float *)&v32.i32[3] + *(float *)v32.i32;
      v19.f32[1] = *(float *)&v33.i32[3] + *(float *)v33.i32;
      v19.f32[2] = v34.f32[3] + v34.f32[0];
      int32x4_t v37 = (int32x4_t)vmulq_f32(v19, v19);
      v19.f32[3] = v35.f32[3] + v35.f32[0];
      v20.f32[0] = *(float *)&v32.i32[3] + *(float *)&v32.i32[1];
      v20.f32[1] = *(float *)&v33.i32[3] + *(float *)&v33.i32[1];
      v20.f32[2] = v34.f32[3] + v34.f32[1];
      int32x4_t v38 = (int32x4_t)vmulq_f32(v20, v20);
      v20.f32[3] = v35.f32[3] + v35.f32[1];
      v21.f32[0] = *(float *)&v32.i32[3] - *(float *)&v32.i32[1];
      v21.f32[1] = *(float *)&v33.i32[3] - *(float *)&v33.i32[1];
      v21.f32[2] = v34.f32[3] - v34.f32[1];
      int32x4_t v39 = (int32x4_t)vmulq_f32(v21, v21);
      v21.f32[3] = v35.f32[3] - v35.f32[1];
      v8[23] = v31 + 1;
      v25.f32[0] = *(float *)&v32.i32[3] - *(float *)&v32.i32[2];
      v25.f32[1] = *(float *)&v33.i32[3] - *(float *)&v33.i32[2];
      v25.f32[2] = v34.f32[3] - v34.f32[2];
      int32x4_t v40 = (int32x4_t)vmulq_f32(v25, v25);
      v25.f32[3] = v35.f32[3] - v35.f32[2];
      float32x4_t v41 = (float32x4_t)vzip2q_s32(v32, v33);
      v41.i32[2] = v34.i32[2];
      int32x4_t v42 = (int32x4_t)vmulq_f32(v41, v41);
      v41.i32[3] = v35.i32[2];
      v34.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v36, 2), vadd_f32(*(float32x2_t *)v36.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v36.i8, 1))).u32[0];
      *(float32x2_t *)v35.f32 = vrsqrte_f32((float32x2_t)v34.u32[0]);
      *(float32x2_t *)v35.f32 = vmul_f32(*(float32x2_t *)v35.f32, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(*(float32x2_t *)v35.f32, *(float32x2_t *)v35.f32)));
      float32x4_t v43 = vmulq_n_f32(v29, vmul_f32(*(float32x2_t *)v35.f32, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(*(float32x2_t *)v35.f32, *(float32x2_t *)v35.f32))).f32[0]);
      v35.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v37, 2), vadd_f32(*(float32x2_t *)v37.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v37.i8, 1))).u32[0];
      *(float32x2_t *)v26.f32 = vrsqrte_f32((float32x2_t)v35.u32[0]);
      *(float32x2_t *)v26.f32 = vmul_f32(*(float32x2_t *)v26.f32, vrsqrts_f32((float32x2_t)v35.u32[0], vmul_f32(*(float32x2_t *)v26.f32, *(float32x2_t *)v26.f32)));
      float32x4_t v44 = vmulq_n_f32(v19, vmul_f32(*(float32x2_t *)v26.f32, vrsqrts_f32((float32x2_t)v35.u32[0], vmul_f32(*(float32x2_t *)v26.f32, *(float32x2_t *)v26.f32))).f32[0]);
      v26.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v38, 2), vadd_f32(*(float32x2_t *)v38.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v38.i8, 1))).u32[0];
      *(float32x2_t *)v28.f32 = vrsqrte_f32((float32x2_t)v26.u32[0]);
      *(float32x2_t *)v28.f32 = vmul_f32(*(float32x2_t *)v28.f32, vrsqrts_f32((float32x2_t)v26.u32[0], vmul_f32(*(float32x2_t *)v28.f32, *(float32x2_t *)v28.f32)));
      float32x4_t v45 = vmulq_n_f32(v20, vmul_f32(*(float32x2_t *)v28.f32, vrsqrts_f32((float32x2_t)v26.u32[0], vmul_f32(*(float32x2_t *)v28.f32, *(float32x2_t *)v28.f32))).f32[0]);
      v28.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v39, 2), vadd_f32(*(float32x2_t *)v39.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v39.i8, 1))).u32[0];
      *(float32x2_t *)v29.f32 = vrsqrte_f32((float32x2_t)v28.u32[0]);
      *(float32x2_t *)v29.f32 = vmul_f32(*(float32x2_t *)v29.f32, vrsqrts_f32((float32x2_t)v28.u32[0], vmul_f32(*(float32x2_t *)v29.f32, *(float32x2_t *)v29.f32)));
      float32x4_t v46 = vmulq_n_f32(v21, vmul_f32(*(float32x2_t *)v29.f32, vrsqrts_f32((float32x2_t)v28.u32[0], vmul_f32(*(float32x2_t *)v29.f32, *(float32x2_t *)v29.f32))).f32[0]);
      v42.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v42, 2), vadd_f32(*(float32x2_t *)v42.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v42.i8, 1))).u32[0];
      *(float32x2_t *)v29.f32 = vrsqrte_f32((float32x2_t)v42.u32[0]);
      *(float32x2_t *)v29.f32 = vmul_f32(*(float32x2_t *)v29.f32, vrsqrts_f32((float32x2_t)v42.u32[0], vmul_f32(*(float32x2_t *)v29.f32, *(float32x2_t *)v29.f32)));
      float32x4_t v47 = vmulq_n_f32(v41, vmul_f32(*(float32x2_t *)v29.f32, vrsqrts_f32((float32x2_t)v42.u32[0], vmul_f32(*(float32x2_t *)v29.f32, *(float32x2_t *)v29.f32))).f32[0]);
      v42.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v40, 2), vadd_f32(*(float32x2_t *)v40.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v40.i8, 1))).u32[0];
      *(float32x2_t *)v40.i8 = vrsqrte_f32((float32x2_t)v42.u32[0]);
      *(float32x2_t *)v40.i8 = vmul_f32(*(float32x2_t *)v40.i8, vrsqrts_f32((float32x2_t)v42.u32[0], vmul_f32(*(float32x2_t *)v40.i8, *(float32x2_t *)v40.i8)));
      v212[0] = v43;
      v212[1] = v44;
      v212[2] = v45;
      v212[3] = v46;
      v212[4] = v47;
      v212[5] = vmulq_n_f32(v25, vmul_f32(*(float32x2_t *)v40.i8, vrsqrts_f32((float32x2_t)v42.u32[0], vmul_f32(*(float32x2_t *)v40.i8, *(float32x2_t *)v40.i8))).f32[0]);
      sub_1B635BF08(v8, v212, v31);
      if (qword_1EB97DC28 != -1) {
        swift_once();
      }
      uint64_t v241 = qword_1EB997A18;
      int v242 = 0;
      char v243 = 2;
      uint64_t v244 = 0;
      char v245 = 2;
      uint64_t v246 = 0;
      swift_retain();
      sub_1B62A0EB4(1, (uint64_t)v213);
      swift_release();
      sub_1B62C6034(0, (unint64_t *)&qword_1EB980B60, (unint64_t *)&qword_1EB97E840, (uint64_t)&protocol descriptor for ClassComponent, MEMORY[0x1E4FBBE00]);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1B6E77050;
      *(void *)(v48 + 56) = &type metadata for DrawCallLayer;
      *(void *)(v48 + 64) = &off_1F0F5E758;
      *(unsigned char *)(v48 + 32) = 0;
      sub_1B62A1250(v48, (uint64_t)v214);
      swift_setDeallocating();
      sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_1B62CA064((uint64_t)v213);
      sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C70, (void (*)(uint64_t))sub_1B6642FC0);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1B6E76B30;
      *(void *)(v49 + 32) = &type metadata for FrustumCulled;
      *(void *)(v49 + 40) = &off_1F0F5FA08;
      *(void *)(v49 + 48) = &type metadata for LODCulled;
      *(void *)(v49 + 56) = &off_1F0FA8B40;
      sub_1B62AD184(&v215);
      swift_setDeallocating();
      swift_deallocClassInstance();
      sub_1B62CA064((uint64_t)v214);
      uint64_t v50 = 1 << v31;
      if (v31 >= 0x40) {
        uint64_t v50 = 0;
      }
      if (v31 > 0x40) {
        uint64_t v50 = 0;
      }
      uint64_t v235 = v215;
      int v236 = v216;
      char v237 = v217;
      uint64_t v238 = v218;
      char v239 = v219;
      uint64_t v240 = v50;
      sub_1B62C9DA8((uint64_t)v8, (uint64_t)&v235, 0x200000000, v269);
      sub_1B62D7EE8((uint64_t)v269, (uint64_t)v272, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
      if (*(void *)&v272[0]) {
        break;
      }
      sub_1B62CA064((uint64_t)&v215);
      long long v23 = v171;
LABEL_6:
      if (++v22 == v172)
      {
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        goto LABEL_138;
      }
    }
    long long v220 = v272[0];
    long long v221 = v272[1];
    uint64_t v207 = v274;
    uint64_t v222 = v273;
    uint64_t v208 = v275;
    uint64_t v173 = v276;
    uint64_t v51 = v277;
    uint64_t v177 = v278;
    sub_1B62CA064((uint64_t)&v215);
    uint64_t v52 = swift_retain();
    uint64_t v53 = sub_1B63273D0(v52);
    uint64_t v55 = v54;
    char v57 = v56;
    uint64_t v209 = v7;
    swift_release();
    v58.i32[0] = 0;
    v59.i32[0] = v57 & 1;
    int8x16_t v60 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v59, v58), 0);
    v59.i64[0] = v53;
    v59.i64[1] = v55;
    int8x16_t v183 = vandq_s8(v59, v60);
    bzero(v266, 0x348uLL);
    memset(&v266[848], 0, 296);
    swift_getObjectType();
    *(double *)&uint64_t v61 = sub_1B6BBC0D0();
    sub_1B6370624(0, 0, v203.i64[0], v203.i64[1], 0, v62, v63, v64, v200, *(float32x4_t *)v196, v193, v190, v189, v188, v186, v184, xmmword_1B6E4F300, xmmword_1B6E4F320, xmmword_1B6E4F2E0,
      xmmword_1B6E4F370,
      xmmword_1B6E4F300,
      xmmword_1B6E4F320,
      xmmword_1B6E4F2E0,
      xmmword_1B6E4F370,
      v30,
      v61,
      *(_OWORD *)&v183);
    memcpy(v265, v266, sizeof(v265));
    swift_retain();
    float32x4_t v65 = (void *)sub_1B62F1868(0, 1152);
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      *(void *)&long long v255 = 0;
      *((void *)&v255 + 1) = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      int v70 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      *(void *)&long long v255 = 0;
      swift_retain();
      sub_1B6B33E34(v70, (uint64_t *)&v255, 0xD000000000000034, 0x80000001B6F405F0);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      double v71 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v72 = v65;
      memcpy(&v71[v67], v265, 0x480uLL);
      swift_release();
    }
    swift_retain();
    sub_1B6C1826C((uint64_t)&v251);
    swift_release();
    sub_1B62D7EE8((uint64_t)&v251, (uint64_t)v253, &qword_1E9DD77F0, (uint64_t)&type metadata for FrameConstantsStorage);
    sub_1B62D7EE8((uint64_t)v253, (uint64_t)&v255, &qword_1E9DD77F0, (uint64_t)&type metadata for FrameConstantsStorage);
    if (sub_1B6C47E20((uint64_t)&v255) == 1 || (uint64_t v182 = (uint64_t)v65, v180 = v22, !v262))
    {
      sub_1B6E32BE8();
      __break(1u);
      return;
    }
    uint64_t v73 = v263;
    uint64_t v74 = v264;
    uint64_t v75 = **(void **)(v206 + 496);
    uint64_t v181 = v262;
    swift_unknownObjectRetain();
    if (!v75)
    {
      if (*(void *)(v206 + 376))
      {
        long long v247 = &unk_1F108FFD8;
        uint64_t v165 = swift_dynamicCastObjCProtocolConditional();
        if (v165)
        {
          uint64_t v166 = (void *)v165;
          swift_unknownObjectRetain();
          id v199 = objc_msgSend(v166, sel_renderCommandEncoder);
          uint64_t v251 = 0x646F636E45627573;
          unint64_t v252 = 0xEB000000005B7265;
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          uint64_t v167 = (void *)sub_1B6E31768();
          swift_bridgeObjectRelease();
          objc_msgSend(v199, sel_setLabel_, v167);

          int v168 = *(void **)(v206 + 496);
          void *v168 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RenderCommandEncoder()), sel_initWithEncoder_, v199);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
        }
      }
    }
    if (**(void **)(v206 + 496))
    {
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1B62E738C(v182, v67, v69, 0, 1, ObjectType);
      sub_1B62E7380(v182, v67, v69, 0, 1, ObjectType);
      sub_1B62E738C(v181, v73, v74, 0, 0, ObjectType);
      sub_1B62E7380(v181, v73, v74, 0, 0, ObjectType);
      double v77 = sub_1B6BBC0D0();
      sub_1B6CC8898(v203, *(float32x2_t *)&v77);
      swift_unknownObjectRelease();
    }
    sub_1B6383E40((uint64_t)v270);
    uint64_t v78 = v271;
    if (v271 == 260) {
      uint64_t v79 = 260;
    }
    else {
      uint64_t v79 = 0;
    }
    sub_1B62C7BF4((uint64_t)v270);
    int v227 = 2048;
    long long v228 = 0u;
    long long v229 = 0u;
    long long v230 = 0u;
    long long v231 = 0u;
    uint64_t v232 = v78;
    uint64_t v233 = v79;
    uint64_t v234 = 1;
    uint64_t v80 = v206;
    if (*(void *)(v206 + 376))
    {
      uint64_t v249 = &unk_1F108FFD8;
      if (swift_dynamicCastObjCProtocolConditional())
      {
        uint64_t v7 = v209;
        if (v177 >= 1 && v208)
        {
          uint64_t v81 = v51[4];
          int v82 = *(unsigned __int8 *)(v173 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v225[0] = v220;
          v225[1] = v221;
          uint64_t v226 = v222;
          swift_retain_n();
          sub_1B6657794(v269, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
          uint64_t v83 = 0;
          uint64_t v185 = v81;
          int v191 = v82;
          while (1)
          {
            uint64_t v84 = (unsigned int *)(v207 + 48 * v83);
            uint64_t v204 = *v84;
            uint64_t v201 = v84[1];
            uint64_t v85 = (uint64_t *)*((void *)v84 + 2);
            uint64_t v197 = *((void *)v84 + 3);
            uint64_t v86 = *((void *)v84 + 5);
            uint64_t v194 = *((void *)v84 + 4);
            uint64_t v210 = v7;
            if (v82)
            {
              double v87 = *(os_unfair_lock_s **)(v86 + 376);
              swift_retain();
              os_unfair_lock_lock(v87);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v86 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v81);
            sub_1B62D7EE8((uint64_t)(v51 + 6), (uint64_t)v279, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v88 = v51[4];
            uint64_t v89 = *(void *)(*(void *)(*(void *)(*(void *)(v86 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v51[6] = ecs_stack_allocator_allocate(v88, 48 * v89, 8);
            v51[7] = v89;
            v51[9] = 0;
            v51[10] = 0;
            v51[8] = 0;
            swift_release();
            uint64_t v90 = v51[3];
            if (!*(void *)(*(void *)(v80 + 496) + 8 * v90))
            {
              if (*(void *)(v80 + 376))
              {
                long long v248 = &unk_1F108FFD8;
                uint64_t v96 = swift_dynamicCastObjCProtocolConditional();
                if (v96)
                {
                  id v97 = (void *)v96;
                  swift_unknownObjectRetain();
                  id v174 = objc_msgSend(v97, sel_renderCommandEncoder);
                  uint64_t v251 = 0x646F636E45627573;
                  unint64_t v252 = 0xEB000000005B7265;
                  sub_1B6E33098();
                  sub_1B6E31948();
                  swift_bridgeObjectRelease();
                  sub_1B6E31948();
                  long long v98 = (void *)sub_1B6E31768();
                  swift_bridgeObjectRelease();
                  objc_msgSend(v174, sel_setLabel_, v98);

                  uint64_t v99 = *(void *)(v80 + 496);
                  *(void *)(v99 + 8 * v90) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RenderCommandEncoder()), sel_initWithEncoder_, v174);
                  uint64_t v81 = v185;
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                }
              }
            }
            unint64_t v91 = *(void **)(*(void *)(v80 + 496) + 8 * v90);
            if (v91) {
              break;
            }
            uint64_t v7 = v210;
LABEL_67:
            sub_1B6345178(v51, (unsigned __int16 **)v225, (uint64_t)v279);
            if (*(void *)(v51[13] + 16))
            {
              uint64_t v114 = swift_bridgeObjectRetain();
              sub_1B639147C(v114, v86);
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v116 = v51[13];
              if (isUniquelyReferenced_nonNull_native)
              {
                sub_1B6399BB8(0, *(void *)(v116 + 16));
              }
              else
              {
                uint64_t v117 = (void *)MEMORY[0x1E4FBC860];
                if (*(void *)(v116 + 24) >= 2uLL)
                {
                  sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
                  uint64_t v117 = (void *)swift_allocObject();
                  size_t v118 = j__malloc_size(v117);
                  _OWORD v117[2] = 0;
                  v117[3] = 2 * ((uint64_t)(v118 - 32) / 72);
                }
                v51[13] = v117;
                swift_bridgeObjectRelease();
              }
              if (*(unsigned __int8 *)(v51[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
              {
                long long v119 = *(char **)(v86 + 232);
                uint64_t v120 = *(char **)(v86 + 256);
                if (v119 == v120)
                {
                  long long v121 = *(char **)(v86 + 240);
                }
                else
                {
                  sub_1B666018C(v120, v119);
                  uint64_t v120 = *(char **)(v86 + 232);
                  long long v121 = *(char **)(v86 + 240);
                  if (v121 == v120)
                  {
                    long long v121 = 0;
                    uint64_t v120 = 0;
                    *(void *)(v86 + 232) = 0;
                    *(void *)(v86 + 240) = 0;
                  }
                }
                *(void *)(v86 + 248) = v121;
                *(void *)(v86 + 256) = v120;
              }
            }
            ecs_stack_allocator_pop_snapshot(v81);
            int v82 = v191;
            if (v191)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v86 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v86 + 376));
            }
            swift_release();
            if (++v83 == v208) {
              goto LABEL_132;
            }
          }
          uint64_t v92 = *(void *)(v86 + 48);
          uint64_t v93 = *(void *)(v92 + 16);
          if (v85)
          {
            if (v93)
            {
              uint64_t v94 = v92 + 56;
              while (*(ValueMetadata **)(v94 - 24) != &type metadata for DrawCallComponent)
              {
                v94 += 40;
                if (!--v93) {
                  goto LABEL_45;
                }
              }
              uint64_t v105 = v94 - 8;
              uint64_t v104 = *(void *)(v94 - 8);
              uint64_t v103 = *(void *)(v105 + 8);
              if (v104 <= 1) {
                uint64_t v104 = 1;
              }
              uint64_t v106 = *(void *)(v86 + 128) + v103;
              uint64_t v175 = off_1F0F709F0;
              uint64_t v178 = v106 + *(void *)(v86 + 240) * v104;
              uint64_t v107 = v51[4];
              swift_unknownObjectRetain();
              uint64_t v95 = ecs_stack_allocator_allocate(v107, 8 * v194, 8);
              sub_1B6916144(v85, v194, v106, (uint64_t)v95);
              unint64_t v252 = 0;
              uint64_t v251 = 0;
              swift_unownedRetainStrong();
              swift_unownedRetain();
              swift_release();
              uint64_t v108 = (void *)swift_allocObject();
              _OWORD v108[2] = v85;
              v108[3] = v197;
              v108[4] = v194;
              sub_1B62D7EE8((uint64_t)&v251, (uint64_t)(v108 + 5), (unint64_t *)&unk_1EB97E910, (uint64_t)&type metadata for PackedRewriter);
              v108[7] = v95;
              v108[8] = &v95[v194];
              v108[9] = v106;
              v108[10] = v178;
              v108[11] = &type metadata for DrawCallComponent;
              v108[12] = v175;
              v108[13] = &type metadata for DrawCallComponent;
              v108[14] = v86;
              uint64_t v109 = v51[8];
              uint64_t v110 = (void *)(v51[6] + 48 * v109);
              *uint64_t v110 = &type metadata for DrawCallComponent;
              v110[1] = v175;
              _OWORD v110[2] = &type metadata for DrawCallComponent;
              v110[3] = v95;
              v110[4] = sub_1B6C485BC;
              v110[5] = v108;
              uint64_t v81 = v185;
              v51[8] = v109 + 1;
            }
            else
            {
LABEL_45:
              swift_unknownObjectRetain();
              uint64_t v95 = 0;
            }
            uint64_t v7 = v210;
            uint64_t v101 = v204;
            uint64_t v102 = v201;
            if (v204 == v201) {
              goto LABEL_66;
            }
          }
          else
          {
            uint64_t v7 = v210;
            if (v93)
            {
              long long v100 = (void *)(v92 + 56);
              uint64_t v101 = v204;
              uint64_t v102 = v201;
              while ((ValueMetadata *)*(v100 - 3) != &type metadata for DrawCallComponent)
              {
                v100 += 5;
                if (!--v93) {
                  goto LABEL_61;
                }
              }
              uint64_t v95 = (void *)(*(void *)(v86 + 128) + *v100);
              swift_unknownObjectRetain();
              if (v204 == v201) {
                goto LABEL_66;
              }
            }
            else
            {
              uint64_t v101 = v204;
              uint64_t v102 = v201;
LABEL_61:
              swift_unknownObjectRetain();
              uint64_t v95 = 0;
              if (v101 == v102) {
                goto LABEL_66;
              }
            }
          }
          uint64_t v111 = v102 - v101;
          char v112 = &v95[v101];
          memset(v280, 0, 112);
          do
          {
            ++v112;
            uint64_t v113 = swift_retain();
            sub_1B631083C(v113, &v227, v280, v91, (uint64_t)v267, 0);
            swift_release();
            --v111;
          }
          while (v111);
LABEL_66:
          swift_unknownObjectRelease();
          uint64_t v80 = v206;
          goto LABEL_67;
        }
        goto LABEL_131;
      }
    }
    uint64_t v7 = v209;
    if (v177 < 1 || !v208)
    {
LABEL_131:
      swift_retain_n();
      sub_1B6657794(v269, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
LABEL_132:
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_1B6657794(v269, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B6657794(v269, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B6C47E38((uint64_t)v253);
      swift_release_n();
      uint64_t v8 = v169;
      long long v23 = v171;
      uint64_t v22 = v180;
      goto LABEL_6;
    }
    uint64_t v122 = v51[4];
    int v123 = *(unsigned __int8 *)(v173 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v223[0] = v220;
    v223[1] = v221;
    uint64_t v224 = v222;
    swift_retain_n();
    sub_1B6657794(v269, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
    uint64_t v124 = 0;
    uint64_t v187 = v122;
    int v192 = v123;
    while (1)
    {
      long long v125 = (unsigned int *)(v207 + 48 * v124);
      uint64_t v205 = *v125;
      uint64_t v202 = v125[1];
      uint64_t v126 = (uint64_t *)*((void *)v125 + 2);
      uint64_t v127 = *((void *)v125 + 5);
      uint64_t v211 = v7;
      uint64_t v198 = *((void *)v125 + 3);
      uint64_t v195 = *((void *)v125 + 4);
      if (v123)
      {
        long long v128 = *(os_unfair_lock_s **)(v127 + 376);
        swift_retain();
        os_unfair_lock_lock(v128);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v127 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v122);
      sub_1B62D7EE8((uint64_t)(v51 + 6), (uint64_t)v281, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v129 = v51[4];
      uint64_t v130 = *(void *)(*(void *)(*(void *)(*(void *)(v127 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v51[6] = ecs_stack_allocator_allocate(v129, 48 * v130, 8);
      v51[7] = v130;
      v51[9] = 0;
      v51[10] = 0;
      v51[8] = 0;
      swift_release();
      uint64_t v131 = v51[3];
      if (!*(void *)(*(void *)(v80 + 496) + 8 * v131))
      {
        if (*(void *)(v80 + 376))
        {
          uint64_t v250 = &unk_1F108FFD8;
          uint64_t v137 = swift_dynamicCastObjCProtocolConditional();
          if (v137)
          {
            uint64_t v138 = (void *)v137;
            swift_unknownObjectRetain();
            id v139 = objc_msgSend(v138, sel_renderCommandEncoder);
            uint64_t v251 = 0x646F636E45627573;
            unint64_t v252 = 0xEB000000005B7265;
            sub_1B6E33098();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            uint64_t v140 = (void *)sub_1B6E31768();
            swift_bridgeObjectRelease();
            objc_msgSend(v139, sel_setLabel_, v140);

            uint64_t v141 = *(void *)(v206 + 496);
            *(void *)(v141 + 8 * v131) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RenderCommandEncoder()), sel_initWithEncoder_, v139);
            uint64_t v122 = v187;
            swift_unknownObjectRelease();
            uint64_t v80 = v206;
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
          }
        }
      }
      long long v132 = *(void **)(*(void *)(v80 + 496) + 8 * v131);
      if (v132) {
        break;
      }
      uint64_t v142 = v211;
LABEL_117:
      sub_1B6345178(v51, (unsigned __int16 **)v223, (uint64_t)v281);
      uint64_t v7 = v142;
      if (*(void *)(v51[13] + 16))
      {
        uint64_t v157 = swift_bridgeObjectRetain();
        sub_1B639147C(v157, v127);
        swift_bridgeObjectRelease();
        char v158 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v159 = v51[13];
        if (v158)
        {
          sub_1B6399BB8(0, *(void *)(v159 + 16));
        }
        else
        {
          char v160 = (void *)MEMORY[0x1E4FBC860];
          if (*(void *)(v159 + 24) >= 2uLL)
          {
            sub_1B62D2CD0(0, (unint64_t *)&qword_1EB980C00, (void (*)(uint64_t))sub_1B63B29DC);
            char v160 = (void *)swift_allocObject();
            size_t v161 = j__malloc_size(v160);
            v160[2] = 0;
            v160[3] = 2 * ((uint64_t)(v161 - 32) / 72);
          }
          v51[13] = v160;
          swift_bridgeObjectRelease();
        }
        if (*(unsigned __int8 *)(v51[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
        {
          uint64_t v162 = *(char **)(v127 + 232);
          long long v163 = *(char **)(v127 + 256);
          if (v162 == v163)
          {
            long long v164 = *(char **)(v127 + 240);
          }
          else
          {
            sub_1B666018C(v163, v162);
            long long v163 = *(char **)(v127 + 232);
            long long v164 = *(char **)(v127 + 240);
            if (v164 == v163)
            {
              long long v164 = 0;
              long long v163 = 0;
              *(void *)(v127 + 232) = 0;
              *(void *)(v127 + 240) = 0;
            }
          }
          *(void *)(v127 + 248) = v164;
          *(void *)(v127 + 256) = v163;
        }
      }
      ecs_stack_allocator_pop_snapshot(v122);
      int v123 = v192;
      if (v192)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v127 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v127 + 376));
      }
      swift_release();
      if (++v124 == v208) {
        goto LABEL_132;
      }
    }
    uint64_t v133 = *(void *)(v127 + 48);
    uint64_t v134 = *(void *)(v133 + 16);
    if (v126)
    {
      if (v134)
      {
        uint64_t v135 = v133 + 56;
        while (*(ValueMetadata **)(v135 - 24) != &type metadata for DrawCallComponent)
        {
          v135 += 40;
          if (!--v134) {
            goto LABEL_95;
          }
        }
        uint64_t v148 = v135 - 8;
        uint64_t v147 = *(void *)(v135 - 8);
        uint64_t v146 = *(void *)(v148 + 8);
        if (v147 <= 1) {
          uint64_t v147 = 1;
        }
        uint64_t v149 = *(void *)(v127 + 128) + v146;
        uint64_t v176 = off_1F0F709F0;
        uint64_t v179 = v149 + *(void *)(v127 + 240) * v147;
        uint64_t v150 = v51[4];
        swift_unknownObjectRetain();
        uint64_t v136 = ecs_stack_allocator_allocate(v150, 8 * v195, 8);
        sub_1B6916144(v126, v195, v149, (uint64_t)v136);
        unint64_t v252 = 0;
        uint64_t v251 = 0;
        swift_unownedRetainStrong();
        swift_unownedRetain();
        swift_release();
        uint64_t v151 = (void *)swift_allocObject();
        _OWORD v151[2] = v126;
        float32x4_t v151[3] = v198;
        v151[4] = v195;
        sub_1B62D7EE8((uint64_t)&v251, (uint64_t)(v151 + 5), (unint64_t *)&unk_1EB97E910, (uint64_t)&type metadata for PackedRewriter);
        v151[7] = v136;
        v151[8] = &v136[v195];
        v151[9] = v149;
        v151[10] = v179;
        v151[11] = &type metadata for DrawCallComponent;
        void v151[12] = v176;
        v151[13] = &type metadata for DrawCallComponent;
        v151[14] = v127;
        uint64_t v152 = v51[8];
        uint64_t v153 = (void *)(v51[6] + 48 * v152);
        *uint64_t v153 = &type metadata for DrawCallComponent;
        v153[1] = v176;
        _OWORD v153[2] = &type metadata for DrawCallComponent;
        v153[3] = v136;
        v153[4] = sub_1B6C485BC;
        v153[5] = v151;
        v51[8] = v152 + 1;
      }
      else
      {
LABEL_95:
        swift_unknownObjectRetain();
        uint64_t v136 = 0;
      }
      uint64_t v142 = v211;
      uint64_t v144 = v205;
      uint64_t v145 = v202;
      if (v205 == v202) {
        goto LABEL_116;
      }
    }
    else
    {
      uint64_t v142 = v211;
      if (v134)
      {
        uint64_t v143 = (void *)(v133 + 56);
        uint64_t v144 = v205;
        uint64_t v145 = v202;
        while ((ValueMetadata *)*(v143 - 3) != &type metadata for DrawCallComponent)
        {
          v143 += 5;
          if (!--v134) {
            goto LABEL_111;
          }
        }
        uint64_t v136 = (void *)(*(void *)(v127 + 128) + *v143);
        swift_unknownObjectRetain();
        if (v205 == v202) {
          goto LABEL_116;
        }
      }
      else
      {
        uint64_t v144 = v205;
        uint64_t v145 = v202;
LABEL_111:
        swift_unknownObjectRetain();
        uint64_t v136 = 0;
        if (v144 == v145) {
          goto LABEL_116;
        }
      }
    }
    uint64_t v154 = v145 - v144;
    uint64_t v155 = &v136[v144];
    memset(v282, 0, 112);
    do
    {
      ++v155;
      uint64_t v156 = swift_retain();
      sub_1B631083C(v156, &v227, v282, v132, (uint64_t)v267, 0);
      swift_release();
      --v154;
    }
    while (v154);
LABEL_116:
    swift_unknownObjectRelease();
    uint64_t v80 = v206;
    uint64_t v122 = v187;
    goto LABEL_117;
  }
}

uint64_t *sub_1B6374A08(uint64_t *a1)
{
  return sub_1B6374A20(a1);
}

uint64_t *sub_1B6374A20(uint64_t *a1)
{
  return sub_1B6374A40(a1, v1[2], v1[3], v1[4]);
}

uint64_t *sub_1B6374A40(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v195 = a4;
  uint64_t v316 = *MEMORY[0x1E4F143B8];
  long long v8 = *(_OWORD *)(a3 + 16);
  long long v9 = *(_OWORD *)(a3 + 32);
  uint64_t v209 = a3;
  uint64_t v265 = *(void *)(a3 + 48);
  v264[0] = v8;
  v264[1] = v9;
  uint64_t v212 = *(void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  sub_1B62C9DA8(a2, (uint64_t)v264, 0x200000000, v266);
  sub_1B62CA210((uint64_t)v266, (uint64_t)&v293, (unint64_t *)&qword_1EB97DC50);
  uint64_t v210 = a1;
  if (v293)
  {
    uint64_t v10 = v302;
    uint64_t v305 = v293;
    int v306 = v294;
    char v307 = v295;
    uint64_t v308 = v296;
    char v309 = v297;
    uint64_t v310 = v298;
    uint64_t v311 = v299;
    long long v312 = v300;
    long long v313 = v301;
    uint64_t v314 = v302;
    uint64_t v315 = v303;
    uint64_t v11 = (void *)a1[3];
    uint64_t v211 = a1 + 3;
    uint64_t v208 = a2;
    swift_retain();
    swift_retain();
    swift_retain();
    if (v11)
    {
      *(void *)&long long v207 = v11;
      uint64_t v12 = (unsigned __int16 *)objc_msgSend(v11, sel_arrayLength);
    }
    else
    {
      *(void *)&long long v207 = 0;
      uint64_t v12 = 0;
    }
    uint64_t v213 = v12;
    sub_1B6D87074((uint64_t)&v305, (uint64_t)&v213);
    uint64_t v205 = v5;
    uint64_t v17 = (uint64_t)v12 + v10;
    uint64_t v18 = sub_1B68007AC(v17 << 9, 0);
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    swift_unknownObjectRelease();
    *a1 = (uint64_t)v18;
    a1[1] = v20;
    a1[2] = v22;
    RGTextureDescriptorMakeDefault((uint64_t)&v247);
    char v23 = BYTE10(v247);
    long long v24 = v250;
    uint64_t v25 = v251;
    char v26 = BYTE8(v251);
    char v27 = BYTE9(v251);
    LODWORD(v206) = BYTE10(v251);
    LODWORD(v204) = BYTE11(v251);
    if (v17 <= 1) {
      LOWORD(v17) = 1;
    }
    int v254 = 65664;
    __int16 v255 = 1;
    __int16 v256 = v17;
    __int16 v257 = 257;
    char v258 = BYTE10(v247);
    long long v202 = xmmword_1B6EC0ED0;
    long long v203 = xmmword_1B6EA0BC0;
    long long v259 = xmmword_1B6EC0ED0;
    long long v260 = xmmword_1B6EA0BC0;
    long long v261 = v250;
    uint64_t v262 = v251;
    int v263 = DWORD2(v251);
    id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
    LODWORD(v247) = 65664;
    WORD2(v247) = 1;
    WORD3(v247) = v17;
    WORD4(v247) = 257;
    BYTE10(v247) = v23;
    long long v248 = xmmword_1B6EC0ED0;
    long long v249 = xmmword_1B6EA0BC0;
    long long v250 = v24;
    *(void *)&long long v251 = v25;
    BYTE8(v251) = v26;
    BYTE9(v251) = v27;
    a1 = v210;
    BYTE10(v251) = v206;
    BYTE11(v251) = (_BYTE)v204;
    RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v247, v28);
    float32x4_t v29 = sub_1B639E4E4(v28, 0x736576727543, 0xE600000000000000);
    swift_unknownObjectRelease();

    v210[3] = (uint64_t)v29;
    long long v30 = *(_OWORD *)(v209 + 72);
    v245[0] = *(_OWORD *)(v209 + 56);
    v245[1] = v30;
    uint64_t v246 = *(void *)(v209 + 88);
    sub_1B62C9DA8(v208, (uint64_t)v245, 0x200000000, v267);
    sub_1B62CA210((uint64_t)v267, (uint64_t)&v283, (unint64_t *)&qword_1EB97DC50);
    if (v283)
    {
      *(void *)&long long v247 = v283;
      DWORD2(v247) = v284;
      BYTE12(v247) = v285;
      *(void *)&long long v248 = v286;
      BYTE8(v248) = v287;
      long long v249 = v288;
      long long v250 = v289;
      long long v251 = v290;
      uint64_t v252 = v291;
      uint64_t v253 = v292;
      sub_1B6D870A0((uint64_t)&v247, (uint64_t)a1, (uint64_t)&v254);
      uint64_t v5 = v205;
      sub_1B632F170(v267);
      if (v29) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v5 = v205;
      if (v29)
      {
LABEL_12:
        swift_unknownObjectRetain();
        sub_1B62C9DA8(v208, (uint64_t)v245, 0x200000000, v268);
        sub_1B62CA210((uint64_t)v268, (uint64_t)&v272, (unint64_t *)&qword_1EB97DC50);
        if (v272)
        {
          uint64_t v234 = v272;
          int v235 = v273;
          char v236 = v274;
          uint64_t v237 = v275;
          char v238 = v276;
          uint64_t v239 = v277;
          uint64_t v240 = v278;
          long long v241 = v279;
          long long v242 = v280;
          uint64_t v243 = v281;
          uint64_t v244 = v282;
          swift_unknownObjectRetain();
          sub_1B6D9F684((uint64_t)&v234, (uint64_t)v29);
          swift_unknownObjectRelease();
          sub_1B632F170(v266);
          swift_unknownObjectRelease();
          sub_1B632F170(v268);
        }
        else
        {
          sub_1B632F170(v266);
          swift_unknownObjectRelease();
        }
        uint64_t v13 = *v211;
        if (*v211)
        {
          long long v31 = *(_OWORD *)(v209 + 112);
          v232[0] = *(_OWORD *)(v209 + 96);
          v232[1] = v31;
          uint64_t v233 = *(void *)(v209 + 128);
          swift_unknownObjectRetain();
          sub_1B62C9DA8(v208, (uint64_t)v232, 0x200000000, v269);
          sub_1B62CA210((uint64_t)v269, (uint64_t)v270, (unint64_t *)&qword_1EB97DC50);
          uint64_t v15 = (unsigned __int16 *)v270[0];
          if (!v270[0]) {
            goto LABEL_135;
          }
          uint64_t v16 = v270;
LABEL_20:
          int32x4_t v32 = v16 + 11;
          int32x4_t v33 = v16 + 10;
          float32x4_t v34 = (void **)(v16 + 9);
          float32x4_t v35 = v16 + 8;
          int32x4_t v36 = v16 + 7;
          int32x4_t v37 = v16 + 5;
          int32x4_t v38 = v16 + 6;
          int32x4_t v39 = v16 + 4;
          int32x4_t v40 = (char *)(v16 + 3);
          float32x4_t v41 = v16 + 2;
          int32x4_t v42 = (char *)v16 + 12;
          int v43 = *((_DWORD *)v16 + 2);
          char v44 = *v42;
          uint64_t v45 = *v41;
          char v46 = *v40;
          uint64_t v47 = *v39;
          uint64_t v48 = *v37;
          uint64_t v49 = *v38;
          uint64_t v50 = *v36;
          uint64_t v51 = *v35;
          uint64_t v52 = *v34;
          uint64_t v53 = *v33;
          uint64_t v54 = *v32;
          uint64_t v213 = v15;
          int v214 = v43;
          char v215 = v44;
          uint64_t v216 = v45;
          char v217 = v46;
          uint64_t v218 = v47;
          uint64_t v219 = v48;
          uint64_t v199 = v48;
          uint64_t v220 = v49;
          uint64_t v221 = v50;
          uint64_t v222 = v51;
          long long v223 = v52;
          uint64_t v204 = v52;
          uint64_t v224 = v53;
          uint64_t v225 = v54;
          uint64_t v194 = v54;
          if (v53 < 1 || !v50) {
            goto LABEL_134;
          }
          uint64_t v193 = v13;
          *(void *)&long long v203 = v204[4];
          LODWORD(v202) = *(unsigned __int8 *)(v51 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v226 = v15;
          int v227 = v43;
          char v228 = v44;
          uint64_t v229 = v45;
          char v230 = v46;
          uint64_t v231 = v47;
          uint64_t v196 = v204 + 8;
          uint64_t v197 = v204 + 6;
          int v192 = v15;
          swift_retain();
          uint64_t v191 = v51;
          swift_retain();
          swift_retain();
          uint64_t v55 = 0;
          __asm { FMOV            V0.2S, #1.0 }
          long long v207 = _Q0;
          uint64_t v198 = v50;
          while (1)
          {
            uint64_t v61 = (unsigned int *)(v199 + 48 * v55);
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            uint64_t v205 = v5;
            uint64_t v206 = v62;
            int v64 = (uint64_t *)*((void *)v61 + 2);
            uint64_t v65 = *((void *)v61 + 3);
            uint64_t v66 = *((void *)v61 + 5);
            uint64_t v208 = *((void *)v61 + 4);
            uint64_t v201 = v55;
            if (v202)
            {
              uint64_t v67 = *(os_unfair_lock_s **)(v66 + 376);
              swift_retain();
              os_unfair_lock_lock(v67);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v66 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v203);
            sub_1B62CA210((uint64_t)v197, (uint64_t)v304, &qword_1EB97DE20);
            uint64_t v68 = v204;
            uint64_t v69 = v204[4];
            uint64_t v70 = *(void *)(*(void *)(*(void *)(*(void *)(v66 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v68[6] = ecs_stack_allocator_allocate(v69, 48 * v70, 8);
            v68[7] = v70;
            double v71 = v196;
            v196[1] = 0;
            _OWORD v71[2] = 0;
            void *v71 = 0;
            swift_release();
            uint64_t v72 = v208;
            uint64_t v209 = sub_1B62C9024((uint64_t)&type metadata for CurveComponent, (uint64_t)&off_1F0F63678, v64, v65, v208, (uint64_t)v68);
            uint64_t v73 = v65;
            uint64_t v74 = v72;
            float32x4_t v200 = (char *)v66;
            uint64_t v212 = sub_1B62C9024((uint64_t)&type metadata for CurveRuntime, (uint64_t)&off_1F0F596A8, v64, v73, v72, (uint64_t)v68);
            if (v64)
            {
              a1 = v210;
              if (v72)
              {
                uint64_t v75 = 0;
                while (1)
                {
                  unint64_t v76 = (void *)*a1;
                  if (*a1) {
                    break;
                  }
LABEL_31:
                  if (++v75 == v74) {
                    goto LABEL_80;
                  }
                }
                uint64_t v77 = a1[1];
                uint64_t v78 = *(int *)(v212 + 4 * v75);
                swift_unknownObjectRetain();
                if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
                {
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  goto LABEL_31;
                }
                uint64_t v79 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
                id v80 = v76;
                swift_unknownObjectRelease();
                uint64_t v81 = swift_unknownObjectRelease();
                MEMORY[0x1F4188790](v81, v82);
                int64_t v87 = *(void *)(v86 + 16);
                if (v87)
                {
                  uint64_t v88 = v87 - 1;
                  float v89 = *(float *)(v86 + 4 * (v87 - 1) + 32);
                }
                else
                {
                  float v89 = 1.0;
                  uint64_t v88 = -1;
                }
                unsigned int v90 = v207;
                uint64_t v91 = 0;
                uint64_t v92 = v86 + 32;
                uint64_t v93 = (float *)(v83 + 32);
                uint64_t v94 = &v79[512 * v78 + v77];
                float v95 = v89 / 127.0;
                a1 = v210;
                uint64_t v74 = v208;
                while (1)
                {
                  float v96 = 0.0;
                  if (v87)
                  {
                    if (v87 == 1)
                    {
                      float v96 = *v93;
                    }
                    else
                    {
                      float v97 = v95 * (float)v91;
                      float v98 = fminf(fmaxf(v97, 0.0), 1.0);
                      if (v97 == 0.0)
                      {
                        uint64_t v99 = 1;
                      }
                      else
                      {
                        uint64_t v99 = 0;
                        unint64_t v100 = v87;
                        do
                        {
                          unint64_t v101 = v100 >> 1;
                          unint64_t v102 = v99 + (v100 >> 1);
                          v100 += ~(v100 >> 1);
                          if (v98 >= *(float *)(v92 + 4 * v102)) {
                            uint64_t v99 = v102 + 1;
                          }
                          else {
                            unint64_t v100 = v101;
                          }
                        }
                        while ((uint64_t)v100 > 0);
                        if (v99 >= v87)
                        {
                          uint64_t v111 = *(void *)(v83 + 16);
                          if (v111) {
                            float v96 = v93[v111 - 1];
                          }
                          goto LABEL_40;
                        }
                      }
                      uint64_t v103 = v99 - 1;
                      int v104 = v85;
                      if (v84) {
                        int v104 = *(unsigned __int8 *)(v84 + 49 + 24 * v103);
                      }
                      float v105 = *(float *)(v92 + 4 * v103);
                      if (v104 == 1) {
                        int v104 = v87 != 2;
                      }
                      float v106 = *(float *)(v92 + 4 * v99) - v105;
                      float v107 = 0.0;
                      if (v106 == 0.0)
                      {
                        if (v104) {
                          goto LABEL_57;
                        }
                      }
                      else
                      {
                        float v107 = (float)(v98 - v105) / v106;
                        if (v104)
                        {
LABEL_57:
                          if (v104 == 1)
                          {
                            if (v103 <= 0) {
                              uint64_t v108 = 0;
                            }
                            else {
                              uint64_t v108 = v99 - 2;
                            }
                            uint64_t v112 = v99;
                            if (v99 < v88) {
                              uint64_t v112 = v99 + 1;
                            }
                            float v113 = v93[v108];
                            float v114 = v93[v99];
                            float v96 = v93[v103]
                                + (float)((float)(v107 * (float)((float)(v114 * 0.5) - (float)(v113 * 0.5)))
                                        + (float)((float)((float)(v107 * v107)
                                                        * (float)((float)((float)(v113 + (float)(v114 + v114))
                                                                        + (float)(v93[v103] * -2.5))
                                                                - (float)(v93[v112] * 0.5)))
                                                + (float)((float)(v107 * (float)(v107 * v107))
                                                        * (float)((float)((float)(v93[v103] * 1.5)
                                                                        + (float)((float)(v93[v112] * 0.5)
                                                                                - (float)(v114 * 1.5)))
                                                                - (float)(v113 * 0.5)))));
                          }
                          else
                          {
                            if (v84)
                            {
                              float32x2_t v109 = *(float32x2_t *)(v84 + 40 + 24 * v103);
                              float32x2_t v110 = *(float32x2_t *)(v84 + 32 + 24 * v99);
                            }
                            else
                            {
                              float32x2_t v110 = 0;
                              float32x2_t v109 = 0;
                            }
                            v115.i32[0] = 0;
                            v115.f32[1] = v93[v103];
                            float v116 = v93[v99];
                            float32x2_t v117 = vadd_f32(v109, v115);
                            float32x2_t v118 = vadd_f32(v110, (float32x2_t)__PAIR64__(LODWORD(v116), v90));
                            float v119 = 0.5;
                            float v120 = 0.0;
                            float v121 = 1.0;
                            uint64_t v122 = 20;
                            while (1)
                            {
                              float v123 = 1.0 - v119;
                              float v124 = v123 * (float)(v123 * v123);
                              float v125 = v119 * (float)((float)(v123 * v123) * 3.0);
                              float v126 = (float)(v119 * v119) * (float)((float)(1.0 - v119) * 3.0);
                              float v127 = v119 * (float)(v119 * v119);
                              float v128 = v127
                                   + (float)((float)(v118.f32[0] * v126)
                                           + (float)((float)(v124 * 0.0) + (float)(v117.f32[0] * v125)));
                              if (vabds_f32(v128, v107) < 0.00001) {
                                break;
                              }
                              if (v128 < v107) {
                                float v120 = v119;
                              }
                              else {
                                float v121 = v119;
                              }
                              float v119 = (float)(v120 + v121) * 0.5;
                              if (!--v122)
                              {
                                float v129 = 1.0 - v119;
                                float v124 = v129 * (float)(v129 * v129);
                                float v125 = v119 * (float)((float)(v129 * v129) * 3.0);
                                float v126 = (float)(v119 * v119) * (float)((float)(1.0 - v119) * 3.0);
                                float v127 = v119 * (float)(v119 * v119);
                                break;
                              }
                            }
                            float v96 = (float)(v116 * v127)
                                + (float)(vmuls_lane_f32(v126, v118, 1)
                                        + (float)((float)(v93[v103] * v124) + vmuls_lane_f32(v125, v117, 1)));
                          }
                          goto LABEL_40;
                        }
                      }
                      float v96 = v93[v103] + (float)(v107 * (float)(v93[v99] - v93[v103]));
                    }
                  }
LABEL_40:
                  *(float *)&v190[v91++] = v96;
                  if (v91 == 128)
                  {
                    memcpy(v94, v190, 0x200uLL);
                    goto LABEL_31;
                  }
                }
              }
              goto LABEL_80;
            }
            uint64_t v130 = v206;
            a1 = v210;
            if (v63 != v206) {
              break;
            }
LABEL_80:
            uint64_t v131 = v205;
            sub_1B6345178(v204, &v226, (uint64_t)v304);
            uint64_t v5 = v131;
            long long v132 = v200;
            sub_1B634507C(v200);
            ecs_stack_allocator_pop_snapshot(v203);
            if (v202)
            {
              os_unfair_lock_unlock(*((os_unfair_lock_t *)v132 + 43));
              os_unfair_lock_unlock(*((os_unfair_lock_t *)v132 + 47));
            }
            swift_release();
            uint64_t v55 = v201 + 1;
            if (v201 + 1 == v198)
            {
              swift_release();
              swift_release();
              swift_release();
              uint64_t v13 = v193;
LABEL_134:
              uint64_t v187 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, 0);
              float32x4_t v188 = (void *)sub_1B6E31768();
              objc_msgSend(v187, sel_pushDebugGroup_, v188);

              swift_unknownObjectRetain();
              sub_1B6CE239C(v187, (uint64_t)&v213, v13, a1);
              swift_unknownObjectRelease();
              objc_msgSend(v187, sel_popDebugGroup);
              swift_unknownObjectRelease();
              swift_release();
              swift_release();
              swift_release();
LABEL_135:
              swift_unknownObjectRelease();
              return sub_1B632F170(v266);
            }
          }
          while (1)
          {
            uint64_t v133 = (void *)*a1;
            if (*a1) {
              break;
            }
LABEL_83:
            if (++v63 == v130) {
              goto LABEL_80;
            }
          }
          uint64_t v134 = a1[1];
          uint64_t v135 = *(int *)(v212 + 4 * v63);
          swift_unknownObjectRetain();
          if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
          {
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            goto LABEL_83;
          }
          uint64_t v136 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
          id v137 = v133;
          swift_unknownObjectRelease();
          uint64_t v138 = swift_unknownObjectRelease();
          MEMORY[0x1F4188790](v138, v139);
          int64_t v144 = *(void *)(v143 + 16);
          if (v144)
          {
            uint64_t v145 = v144 - 1;
            float v146 = *(float *)(v143 + 4 * (v144 - 1) + 32);
          }
          else
          {
            float v146 = 1.0;
            uint64_t v145 = -1;
          }
          unsigned int v147 = v207;
          uint64_t v148 = 0;
          uint64_t v149 = v143 + 32;
          uint64_t v150 = (float *)(v140 + 32);
          uint64_t v151 = &v136[512 * v135 + v134];
          float v152 = v146 / 127.0;
          a1 = v210;
          while (1)
          {
            float v153 = 0.0;
            if (v144)
            {
              if (v144 == 1)
              {
                float v153 = *v150;
              }
              else
              {
                float v154 = v152 * (float)v148;
                float v155 = fminf(fmaxf(v154, 0.0), 1.0);
                if (v154 == 0.0)
                {
                  uint64_t v156 = 1;
                }
                else
                {
                  uint64_t v156 = 0;
                  unint64_t v157 = v144;
                  do
                  {
                    unint64_t v158 = v157 >> 1;
                    unint64_t v159 = v156 + (v157 >> 1);
                    v157 += ~(v157 >> 1);
                    if (v155 >= *(float *)(v149 + 4 * v159)) {
                      uint64_t v156 = v159 + 1;
                    }
                    else {
                      unint64_t v157 = v158;
                    }
                  }
                  while ((uint64_t)v157 > 0);
                  if (v156 >= v144)
                  {
                    uint64_t v168 = *(void *)(v140 + 16);
                    if (v168) {
                      float v153 = v150[v168 - 1];
                    }
                    goto LABEL_92;
                  }
                }
                uint64_t v160 = v156 - 1;
                int v161 = v142;
                if (v141) {
                  int v161 = *(unsigned __int8 *)(v141 + 49 + 24 * v160);
                }
                float v162 = *(float *)(v149 + 4 * v160);
                if (v161 == 1) {
                  int v161 = v144 != 2;
                }
                float v163 = *(float *)(v149 + 4 * v156) - v162;
                float v164 = 0.0;
                if (v163 == 0.0)
                {
                  if (v161) {
                    goto LABEL_109;
                  }
                }
                else
                {
                  float v164 = (float)(v155 - v162) / v163;
                  if (v161)
                  {
LABEL_109:
                    if (v161 == 1)
                    {
                      if (v160 <= 0) {
                        uint64_t v165 = 0;
                      }
                      else {
                        uint64_t v165 = v156 - 2;
                      }
                      uint64_t v169 = v156;
                      if (v156 < v145) {
                        uint64_t v169 = v156 + 1;
                      }
                      float v170 = v150[v165];
                      float v171 = v150[v156];
                      float v153 = v150[v160]
                           + (float)((float)(v164 * (float)((float)(v171 * 0.5) - (float)(v170 * 0.5)))
                                   + (float)((float)((float)(v164 * v164)
                                                   * (float)((float)((float)(v170 + (float)(v171 + v171))
                                                                   + (float)(v150[v160] * -2.5))
                                                           - (float)(v150[v169] * 0.5)))
                                           + (float)((float)(v164 * (float)(v164 * v164))
                                                   * (float)((float)((float)(v150[v160] * 1.5)
                                                                   + (float)((float)(v150[v169] * 0.5)
                                                                           - (float)(v171 * 1.5)))
                                                           - (float)(v170 * 0.5)))));
                    }
                    else
                    {
                      if (v141)
                      {
                        float32x2_t v166 = *(float32x2_t *)(v141 + 40 + 24 * v160);
                        float32x2_t v167 = *(float32x2_t *)(v141 + 32 + 24 * v156);
                      }
                      else
                      {
                        float32x2_t v167 = 0;
                        float32x2_t v166 = 0;
                      }
                      v172.i32[0] = 0;
                      v172.f32[1] = v150[v160];
                      float v173 = v150[v156];
                      float32x2_t v174 = vadd_f32(v166, v172);
                      float32x2_t v175 = vadd_f32(v167, (float32x2_t)__PAIR64__(LODWORD(v173), v147));
                      float v176 = 0.5;
                      float v177 = 0.0;
                      float v178 = 1.0;
                      uint64_t v179 = 20;
                      while (1)
                      {
                        float v180 = 1.0 - v176;
                        float v181 = v180 * (float)(v180 * v180);
                        float v182 = v176 * (float)((float)(v180 * v180) * 3.0);
                        float v183 = (float)(v176 * v176) * (float)((float)(1.0 - v176) * 3.0);
                        float v184 = v176 * (float)(v176 * v176);
                        float v185 = v184
                             + (float)((float)(v175.f32[0] * v183)
                                     + (float)((float)(v181 * 0.0) + (float)(v174.f32[0] * v182)));
                        if (vabds_f32(v185, v164) < 0.00001) {
                          break;
                        }
                        if (v185 < v164) {
                          float v177 = v176;
                        }
                        else {
                          float v178 = v176;
                        }
                        float v176 = (float)(v177 + v178) * 0.5;
                        if (!--v179)
                        {
                          float v186 = 1.0 - v176;
                          float v181 = v186 * (float)(v186 * v186);
                          float v182 = v176 * (float)((float)(v186 * v186) * 3.0);
                          float v183 = (float)(v176 * v176) * (float)((float)(1.0 - v176) * 3.0);
                          float v184 = v176 * (float)(v176 * v176);
                          break;
                        }
                      }
                      float v153 = (float)(v173 * v184)
                           + (float)(vmuls_lane_f32(v183, v175, 1)
                                   + (float)((float)(v150[v160] * v181) + vmuls_lane_f32(v182, v174, 1)));
                    }
                    goto LABEL_92;
                  }
                }
                float v153 = v150[v160] + (float)(v164 * (float)(v150[v156] - v150[v160]));
              }
            }
LABEL_92:
            *(float *)&v190[v148++] = v153;
            if (v148 == 128)
            {
              memcpy(v151, v190, 0x200uLL);
              uint64_t v130 = v206;
              goto LABEL_83;
            }
          }
        }
        return sub_1B632F170(v266);
      }
    }
    sub_1B632F170(v266);
    return sub_1B632F170(v266);
  }
  uint64_t v13 = a1[3];
  uint64_t v211 = a1 + 3;
  if (v13)
  {
    long long v14 = *(_OWORD *)(v209 + 152);
    long long v247 = *(_OWORD *)(v209 + 136);
    long long v248 = v14;
    *(void *)&long long v249 = *(void *)(v209 + 168);
    swift_unknownObjectRetain();
    sub_1B62C9DA8(a2, (uint64_t)&v247, 0x200000000, &v305);
    sub_1B62CA210((uint64_t)&v305, (uint64_t)v271, (unint64_t *)&qword_1EB97DC50);
    uint64_t v15 = (unsigned __int16 *)v271[0];
    if (!v271[0]) {
      goto LABEL_135;
    }
    uint64_t v16 = v271;
    goto LABEL_20;
  }
  return sub_1B632F170(v266);
}

uint64_t sub_1B6375BA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v158 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = type metadata accessor for SimpleScript(0);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v152 = qword_1EB997A18;
  int v153 = 0;
  char v154 = 2;
  uint64_t v155 = 0;
  char v156 = 2;
  uint64_t v157 = 0;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v50 = v3;
  swift_retain();
  sub_1B637632C(1, 3, (uint64_t)v58);
  swift_release();
  sub_1B638C038(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  sub_1B62AC710(0, (unint64_t *)&unk_1EB97E740, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = &off_1F0F61C20;
  sub_1B62AD184(&v59);
  uint64_t v56 = v59;
  int v55 = v60;
  char v54 = v61;
  uint64_t v53 = v62;
  char v52 = v63;
  uint64_t v51 = v64;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v58);
  uint64_t v146 = qword_1EB997A18;
  int v147 = 0;
  char v148 = 2;
  uint64_t v149 = 0;
  char v150 = 2;
  uint64_t v151 = 0;
  swift_retain();
  sub_1B63AAFF8(1, (uint64_t)v65);
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = &off_1F0F5C338;
  sub_1B62AD184(&v66);
  uint64_t v49 = v66;
  char v47 = v68;
  int v48 = v67;
  uint64_t v46 = v69;
  char v45 = v70;
  uint64_t v44 = v71;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v65);
  uint64_t v140 = qword_1EB997A18;
  int v141 = 0;
  char v142 = 2;
  uint64_t v143 = 0;
  char v144 = 2;
  uint64_t v145 = 0;
  swift_retain();
  sub_1B63A4358((uint64_t)v72);
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = &off_1F0F5C338;
  sub_1B62AD184(&v73);
  uint64_t v43 = v73;
  char v41 = v75;
  int v42 = v74;
  uint64_t v40 = v76;
  char v39 = v77;
  uint64_t v38 = v78;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v72);
  uint64_t v134 = qword_1EB997A18;
  int v135 = 0;
  char v136 = 2;
  uint64_t v137 = 0;
  char v138 = 2;
  uint64_t v139 = 0;
  swift_retain();
  sub_1B63A5598((uint64_t)v79);
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = v2;
  *(void *)(v8 + 40) = &off_1F0F5C338;
  sub_1B62AD184(&v80);
  uint64_t v37 = v80;
  char v35 = v82;
  int v36 = v81;
  uint64_t v34 = v83;
  char v33 = v84;
  uint64_t v32 = v85;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v79);
  uint64_t v128 = qword_1EB997A18;
  int v129 = 0;
  char v130 = 2;
  uint64_t v131 = 0;
  char v132 = 2;
  uint64_t v133 = 0;
  swift_retain();
  sub_1B63ABB74(1, (uint64_t)v86);
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  *(void *)(v9 + 32) = v50;
  *(void *)(v9 + 40) = &off_1F0F836E8;
  sub_1B62AD184(&v87);
  uint64_t v57 = v87;
  LODWORD(v50) = v88;
  char v31 = v89;
  uint64_t v30 = v90;
  char v29 = v91;
  uint64_t v28 = v92;
  swift_setDeallocating();
  swift_deallocClassInstance();
  sub_1B62CA064((uint64_t)v86);
  uint64_t v122 = qword_1EB997A18;
  int v123 = 0;
  char v124 = 2;
  uint64_t v125 = 0;
  char v126 = 2;
  uint64_t v127 = 0;
  swift_retain();
  sub_1B637632C(1, 3, (uint64_t)&v93);
  swift_release();
  char v24 = v95;
  int v25 = v94;
  uint64_t v26 = v93;
  uint64_t v27 = v97;
  uint64_t v23 = v96 | 6;
  uint64_t v116 = qword_1EB997A18;
  int v117 = 0;
  char v118 = 2;
  uint64_t v119 = 0;
  char v120 = 2;
  uint64_t v121 = 0;
  swift_retain();
  sub_1B62D3230(1, 2, (uint64_t)&v98);
  uint64_t v22 = v98;
  char v20 = v100;
  int v21 = v99;
  uint64_t v19 = v101;
  char v18 = v102;
  uint64_t v10 = v103;
  swift_release();
  uint64_t v110 = qword_1EB997A18;
  int v111 = 0;
  char v112 = 2;
  uint64_t v113 = 0;
  char v114 = 2;
  uint64_t v115 = 0;
  swift_retain();
  sub_1B636DA60(3, (uint64_t)&v104);
  uint64_t v11 = v104;
  int v12 = v105;
  char v13 = v106;
  uint64_t v14 = v107;
  char v15 = v108;
  uint64_t v16 = v109;
  uint64_t result = swift_release();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v56;
  *(_DWORD *)(a1 + 16) = v55;
  *(unsigned char *)(a1 + 20) = v54;
  *(void *)(a1 + 24) = v53;
  *(unsigned char *)(a1 + 32) = v52;
  *(void *)(a1 + 40) = v51;
  *(void *)(a1 + 48) = v49;
  *(_DWORD *)(a1 + 56) = v48;
  *(unsigned char *)(a1 + 60) = v47;
  *(void *)(a1 + 64) = v46;
  *(unsigned char *)(a1 + 72) = v45;
  *(void *)(a1 + 80) = v44;
  *(void *)(a1 + 88) = v43;
  *(_DWORD *)(a1 + 96) = v42;
  *(unsigned char *)(a1 + 100) = v41;
  *(void *)(a1 + 104) = v40;
  *(unsigned char *)(a1 + 112) = v39;
  *(void *)(a1 + 120) = v38;
  *(void *)(a1 + 128) = v37;
  *(_DWORD *)(a1 + 136) = v36;
  *(unsigned char *)(a1 + 140) = v35;
  *(void *)(a1 + 144) = v34;
  *(unsigned char *)(a1 + 152) = v33;
  *(void *)(a1 + 160) = v32;
  *(void *)(a1 + 168) = v57;
  *(_DWORD *)(a1 + 176) = v50;
  *(unsigned char *)(a1 + 180) = v31;
  *(void *)(a1 + 184) = v30;
  *(unsigned char *)(a1 + 192) = v29;
  *(void *)(a1 + 200) = v28;
  *(void *)(a1 + 208) = v26;
  *(_DWORD *)(a1 + 216) = v25;
  *(unsigned char *)(a1 + 220) = v24;
  *(void *)(a1 + 224) = v23;
  *(unsigned char *)(a1 + 232) = 2;
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v22;
  *(_DWORD *)(a1 + 256) = v21;
  *(unsigned char *)(a1 + 260) = v20;
  *(void *)(a1 + 264) = v19;
  *(unsigned char *)(a1 + 272) = v18;
  *(void *)(a1 + 280) = v10;
  *(void *)(a1 + 288) = v11;
  *(_DWORD *)(a1 + 296) = v12;
  *(unsigned char *)(a1 + 300) = v13;
  *(void *)(a1 + 304) = v14;
  *(unsigned char *)(a1 + 312) = v15;
  *(void *)(a1 + 320) = v16;
  return result;
}

uint64_t sub_1B637632C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for SimpleScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97F4D0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptCompileAttempt);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F5C338;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F836E8;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  char v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  uint64_t v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t type metadata accessor for SimpleScript(uint64_t a1)
{
  return sub_1B633A29C(a1, qword_1EB97E2D8);
}

uint64_t sub_1B63765E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void **)(v2 + 16);
  swift_retain();
  uint64_t v4 = &selRef_lightBufferBindings;
  objc_msgSend(v3, sel_lock);
  *(unsigned char *)(v2 + 24) = 1;
  objc_msgSend(*(id *)(v2 + 16), sel_signal);
  objc_msgSend(*(id *)(v2 + 16), sel_unlock);
  swift_release();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
  objc_msgSend(*(id *)(result + OBJC_IVAR____TtC3VFX13EntityManager_syncLock), sel_lock);
  objc_msgSend(*(id *)(v6 + v7), sel_unlock);
  swift_release();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong && (char v9 = *(unsigned char *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager_isVFX2), swift_release(), (v9 & 1) != 0))
  {
    uint64_t v10 = 0;
    char v68 = *(pthread_mutex_t **)(a1 + 64);
  }
  else
  {
    char v68 = 0;
    uint64_t v10 = *(pthread_mutex_t **)(a1 + 64);
  }
  uint64_t v11 = MEMORY[0x1E4FBC868];
  uint64_t v12 = &selRef_initWithTextGeometryRef_;
  int v67 = v10;
LABEL_7:
  if (*(unsigned char *)(a1 + 120) == 1)
  {
    os_unfair_recursive_lock_lock_with_options();
    uint64_t v13 = *(void *)(*(void *)(a1 + 72) + 16);
    os_unfair_recursive_lock_unlock();
    if (!v13) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v14 = *(void *)(a1 + 16);
  [*(id *)(v14 + 16) v4[38]];
  while ((*(unsigned char *)(v14 + 24) & 1) == 0)
    [*(id *)(v14 + 16) v12[281]];
  *(unsigned char *)(v14 + 24) = 0;
  objc_msgSend(*(id *)(v14 + 16), sel_unlock);
  os_unfair_recursive_lock_lock_with_options();
  *(int8x16_t *)(a1 + 72) = vextq_s8(*(int8x16_t *)(a1 + 72), *(int8x16_t *)(a1 + 72), 8uLL);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = v11;
  os_unfair_recursive_lock_unlock();
  if (v10) {
    pthread_mutex_lock(v10);
  }
  uint64_t v16 = *(void *)(a1 + 24);
  [*(id *)(v16 + 16) v4[38]];
  *(unsigned char *)(v16 + 24) = 1;
  objc_msgSend(*(id *)(v16 + 16), sel_signal);
  objc_msgSend(*(id *)(v16 + 16), sel_unlock);
  uint64_t v17 = swift_weakLoadStrong();
  if (!v17)
  {
    swift_bridgeObjectRelease();
    uint64_t result = (uint64_t)v67;
    if (v67) {
      return pthread_mutex_unlock(v67);
    }
    return result;
  }
  uint64_t v18 = v17;
  uint64_t v69 = OBJC_IVAR____TtC3VFX13EntityManager_syncLock;
  [*(id *)(v17 + OBJC_IVAR____TtC3VFX13EntityManager_syncLock) v4[38]];
  uint64_t v74 = v15;
  if (!*(void *)(*(void *)(a1 + 80) + 16)) {
    goto LABEL_55;
  }
  if (v68) {
    pthread_mutex_lock(v68);
  }
  uint64_t v19 = *(uint64_t **)(v18 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  uint64_t v72 = v18 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
  if (v19)
  {
    uint64_t v20 = *(void *)(v18 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
    if (v20)
    {
      uint64_t v21 = 8 * v20;
      do
      {
        uint64_t v22 = *v19++;
        ecs_stack_allocator_push_snapshot(*(void *)(v22 + 32));
        v21 -= 8;
      }
      while (v21);
    }
  }
  uint64_t v23 = *(void *)(v18 + 216);
  *(void *)(v18 + 216) = v23 + 1;
  if (!v23) {
    sub_1B6376EB8();
  }
  int v24 = *(void **)(a1 + 80);
  uint64_t v25 = v24[2];
  if (!v25)
  {
    char v26 = 0;
LABEL_46:
    if (*(void *)(v18 + 216) == 1) {
      sub_1B6313670(1);
    }
    uint64_t v40 = *(uint64_t **)v72;
    uint64_t v4 = &selRef_lightBufferBindings;
    if (*(void *)v72)
    {
      uint64_t v41 = *(void *)(v72 + 8);
      if (v41)
      {
        uint64_t v42 = 8 * v41;
        do
        {
          uint64_t v43 = *v40++;
          ecs_stack_allocator_pop_snapshot(*(void *)(v43 + 32));
          v42 -= 8;
        }
        while (v42);
      }
    }
    --*(void *)(v18 + 216);
    if (v68) {
      pthread_mutex_unlock(v68);
    }
    uint64_t v15 = v74;
    if (v26) {
      goto LABEL_95;
    }
LABEL_55:
    uint64_t v71 = v15 + 64;
    uint64_t v44 = 1 << *(unsigned char *)(v15 + 32);
    if (v44 < 64) {
      uint64_t v45 = ~(-1 << v44);
    }
    else {
      uint64_t v45 = -1;
    }
    unint64_t v46 = v45 & *(void *)(v15 + 64);
    uint64_t v47 = OBJC_IVAR____TtC3VFX13EntityManager_isVFX2;
    uint64_t v70 = v18 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
    unint64_t v48 = (unint64_t)(v44 + 63) >> 6;
    swift_bridgeObjectRetain();
    uint64_t v49 = 0;
    int64_t v73 = v48;
    unint64_t v66 = v48 - 5;
    while (1)
    {
      if (v46)
      {
        unint64_t v50 = __clz(__rbit64(v46));
        v46 &= v46 - 1;
        unint64_t v51 = v50 | (v49 << 6);
        uint64_t v15 = v74;
      }
      else
      {
        uint64_t v52 = v49 + 1;
        uint64_t v15 = v74;
        if (v49 + 1 >= v73) {
          goto LABEL_93;
        }
        unint64_t v53 = *(void *)(v71 + 8 * v52);
        if (!v53)
        {
          uint64_t v52 = v49 + 2;
          if (v49 + 2 >= v73) {
            goto LABEL_93;
          }
          unint64_t v53 = *(void *)(v71 + 8 * v52);
          if (!v53)
          {
            uint64_t v52 = v49 + 3;
            if (v49 + 3 >= v73) {
              goto LABEL_93;
            }
            unint64_t v53 = *(void *)(v71 + 8 * v52);
            if (!v53)
            {
              uint64_t v52 = v49 + 4;
              if (v49 + 4 >= v73) {
                goto LABEL_93;
              }
              unint64_t v53 = *(void *)(v71 + 8 * v52);
              if (!v53)
              {
                while (v66 != v49)
                {
                  unint64_t v53 = *(void *)(v74 + 8 * v49++ + 104);
                  if (v53)
                  {
                    uint64_t v52 = v49 + 4;
                    goto LABEL_73;
                  }
                }
LABEL_93:
                swift_release();
                uint64_t v4 = &selRef_lightBufferBindings;
                if (*(void *)(v74 + 16))
                {
                  swift_isUniquelyReferenced_nonNull_native();
                  sub_1B6376E50();
                  sub_1B6E32B78();
                  swift_bridgeObjectRelease();
                }
LABEL_95:
                objc_msgSend(*(id *)(v18 + v69), sel_unlock);
                swift_release();
                uint64_t v11 = v74;
                uint64_t v10 = v67;
                uint64_t v12 = &selRef_initWithTextGeometryRef_;
                if (v67)
                {
                  pthread_mutex_unlock(v67);
                  uint64_t v11 = v15;
                }
                goto LABEL_7;
              }
            }
          }
        }
LABEL_73:
        unint64_t v46 = (v53 - 1) & v53;
        unint64_t v51 = __clz(__rbit64(v53)) + (v52 << 6);
        uint64_t v49 = v52;
      }
      char v54 = *(void (**)(uint64_t))(*(void *)(v15 + 56) + 16 * v51);
      if (*(unsigned char *)(v18 + v47))
      {
        uint64_t v55 = swift_retain();
        uint64_t v56 = 0;
      }
      else
      {
        uint64_t v57 = *(uint64_t **)v70;
        if (*(void *)v70)
        {
          uint64_t v58 = *(void *)(v70 + 8);
          swift_retain_n();
          swift_retain();
          if (v58)
          {
            uint64_t v59 = 8 * v58;
            do
            {
              uint64_t v60 = *v57++;
              ecs_stack_allocator_push_snapshot(*(void *)(v60 + 32));
              v59 -= 8;
            }
            while (v59);
          }
        }
        else
        {
          swift_retain_n();
          swift_retain();
        }
        uint64_t v61 = *(void *)(v18 + 216);
        *(void *)(v18 + 216) = v61 + 1;
        if (!v61) {
          sub_1B6376EB8();
        }
        uint64_t v55 = swift_release();
        uint64_t v56 = v18;
      }
      v54(v55);
      swift_release();
      if (v56)
      {
        if (*(void *)(v56 + 216) == 1) {
          sub_1B6313670(1);
        }
        uint64_t v62 = *(uint64_t **)(v56 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        if (v62)
        {
          uint64_t v63 = *(void *)(v56 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
          if (v63)
          {
            uint64_t v64 = 8 * v63;
            do
            {
              uint64_t v65 = *v62++;
              ecs_stack_allocator_pop_snapshot(*(void *)(v65 + 32));
              v64 -= 8;
            }
            while (v64);
          }
        }
        --*(void *)(v56 + 216);
        swift_release();
      }
    }
  }
  char v26 = 0;
  while (1)
  {
    uint64_t v27 = (void (*)(void))v24[4];
    swift_retain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a1 + 80) = v24;
    if (!isUniquelyReferenced_nonNull_native || (unint64_t)(v25 - 1) > v24[3] >> 1)
    {
      int v24 = sub_1B62CACA8(isUniquelyReferenced_nonNull_native, v25, 1, v24);
      *(void *)(a1 + 80) = v24;
    }
    sub_1B62CB664();
    swift_arrayDestroy();
    uint64_t v29 = v24[2];
    if (!v29) {
      break;
    }
    uint64_t v30 = memmove(v24 + 4, v24 + 6, 16 * v29 - 16);
    v24[2] = v29 - 1;
    *(void *)(a1 + 80) = v24;
    char v31 = (void *)MEMORY[0x1BA9B6EE0](v30);
    v27();
    os_unfair_recursive_lock_lock_with_options();
    if (*(unsigned char *)(a1 + 152))
    {
      uint64_t v32 = *(void *)(a1 + 80);
      swift_bridgeObjectRetain();
      sub_1B68EABE8(0, 0, v32);
      swift_bridgeObjectRelease();
      int v33 = swift_isUniquelyReferenced_nonNull_native();
      char v34 = *(void **)(a1 + 80);
      if (v33)
      {
        uint64_t v35 = v34[2];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v34 = sub_1B62CACA8(0, v35, 1, v34);
        }
        swift_arrayDestroy();
        if (v35)
        {
          uint64_t v36 = v34[2] - v35;
          if (v36 < 0) {
            break;
          }
          memmove(v34 + 4, &v34[2 * v35 + 4], 16 * v36);
          _OWORD v34[2] = v36;
        }
        *(void *)(a1 + 80) = v34;
      }
      else
      {
        uint64_t v37 = (void *)MEMORY[0x1E4FBC860];
        if (v34[3] >= 2uLL)
        {
          sub_1B6A944EC();
          uint64_t v37 = (void *)swift_allocObject();
          int64_t v38 = j__malloc_size(v37);
          uint64_t v39 = v38 - 32;
          if (v38 < 32) {
            uint64_t v39 = v38 - 17;
          }
          _OWORD v37[2] = 0;
          v37[3] = 2 * (v39 >> 4);
        }
        *(void *)(a1 + 80) = v37;
        swift_bridgeObjectRelease();
      }
      char v26 = 1;
    }
    os_unfair_recursive_lock_unlock();
    sub_1B62C6A50((uint64_t)v27);
    int v24 = *(void **)(a1 + 80);
    uint64_t v25 = v24[2];
    if (!v25) {
      goto LABEL_46;
    }
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

void sub_1B6376E50()
{
  if (!qword_1EB981268)
  {
    sub_1B62CB664();
    unint64_t v0 = sub_1B6E32B88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB981268);
    }
  }
}

void sub_1B6376EB8()
{
  uint64_t v1 = v0;
  sub_1B6313670(0);
  uint64_t v2 = *(void *)((char *)v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (v2)
  {
    uint64_t v3 = *(void *)((char *)v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
    if (v3)
    {
      uint64_t v4 = v2 + 8 * v3;
      uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v6 = MEMORY[0x1E4FBB880];
      do
      {
        uint64_t v7 = *(void *)(*(void *)v2 + 40);
        uint64_t v8 = *(void *)(v7 + 40);
        uint64_t v9 = *(void *)(v8 + 16);
        if (v9)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = 32;
          do
          {
            uint64_t v11 = *(void *)(v8 + v10);
            if (v11) {
              MEMORY[0x1BA9B84C0](v11, -1, -1);
            }
            v10 += 16;
            --v9;
          }
          while (v9);
          swift_bridgeObjectRelease();
        }
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v13 = *(char **)(v7 + 40);
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v14 = *((void *)v13 + 2);
          char v15 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v7 + 40) = v13;
          if ((v15 & 1) == 0)
          {
            uint64_t v13 = sub_1B68C0770(0, v14, 1, v13);
            *(void *)(v7 + 40) = v13;
          }
          if (v14)
          {
            uint64_t v16 = *((void *)v13 + 2) - v14;
            if (v16 < 0)
            {
LABEL_69:
              sub_1B6E32C88();
              __break(1u);
              return;
            }
            memmove(v13 + 32, &v13[16 * v14 + 32], 16 * v16);
            *((void *)v13 + 2) = v16;
          }
          *(void *)(v7 + 40) = v13;
        }
        else
        {
          uint64_t v17 = v5;
          if (*((void *)v13 + 3) >= 2uLL)
          {
            sub_1B631424C(0, &qword_1EB94A1C0, v6, MEMORY[0x1E4FBBE00]);
            uint64_t v17 = (void *)swift_allocObject();
            int64_t v18 = j__malloc_size(v17);
            uint64_t v19 = v18 - 32;
            if (v18 < 32) {
              uint64_t v19 = v18 - 17;
            }
            _OWORD v17[2] = 0;
            v17[3] = 2 * (v19 >> 4);
          }
          *(void *)(v7 + 40) = v17;
          swift_bridgeObjectRelease();
        }
        v2 += 8;
        *(void *)(v7 + 32) = 0;
      }
      while (v2 != v4);
    }
  }
  sub_1B63773A4();
  uint64_t v20 = (os_unfair_lock_s *)v1[16];
  os_unfair_lock_lock(v20);
  uint64_t v21 = v1[10];
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v61 = v20;
    uint64_t v23 = v21 + 32;
    swift_retain();
    swift_retain();
    for (uint64_t i = 0; i != v22; ++i)
    {
      if (*(void *)(v23 + 8 * i))
      {
        uint64_t v25 = (void *)v1[12];
        uint64_t v26 = v25[5 * (int)i + 4];
        uint64_t v27 = *(void *)(v26 + 16);
        if (v27)
        {
          uint64_t v28 = 0;
          uint64_t v29 = v26 + 32;
          uint64_t v30 = v1[17] + 32;
          while (1)
          {
            int v33 = *(void **)(v30 + 8 * *(int *)(v29 + 4 * v28));
            unint64_t v34 = v33[24];
            if (v34) {
              break;
            }
LABEL_34:
            if (++v28 == v27) {
              goto LABEL_52;
            }
          }
          uint64_t v35 = (int8x16_t *)v33[26];
          uint64_t v36 = v33[27];
          uint64_t v37 = v33[25] + 63;
          if (v37 <= 127) {
            unint64_t v38 = 1;
          }
          else {
            unint64_t v38 = v37 >> 6;
          }
          if (v38 >= 4 && ((unint64_t)v35 + 8 * v38 <= v34 || v34 + 8 * v38 <= (unint64_t)v35))
          {
            unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFFCLL;
            uint64_t v41 = (int8x16_t *)(v34 + 16);
            uint64_t v42 = v35 + 1;
            unint64_t v43 = v38 & 0xFFFFFFFFFFFFFFFCLL;
            do
            {
              int8x16_t v44 = vbicq_s8(*v41, *v42);
              v41[-1] = vbicq_s8(v41[-1], v42[-1]);
              *uint64_t v41 = v44;
              v41 += 2;
              v42 += 2;
              v43 -= 4;
            }
            while (v43);
            if (v38 != v40)
            {
LABEL_49:
              unint64_t v45 = v38 - v40;
              uint64_t v46 = 8 * v40;
              uint64_t v47 = &v35->i64[v40];
              unint64_t v48 = (void *)(v34 + v46);
              do
              {
                uint64_t v49 = *v47++;
                *v48++ &= ~v49;
                --v45;
              }
              while (v45);
            }
            uint64_t v31 = v36 + 63;
            if (v31 <= 127) {
              size_t v32 = 8;
            }
            else {
              size_t v32 = (v31 >> 3) & 0xFFFFFFFFFFFFFFF8;
            }
            bzero(v35, v32);
            goto LABEL_34;
          }
          unint64_t v40 = 0;
          goto LABEL_49;
        }
LABEL_52:
        char v50 = swift_isUniquelyReferenced_nonNull_native();
        v1[12] = v25;
        if ((v50 & 1) == 0)
        {
          uint64_t v25 = sub_1B6C16694(v25);
          v1[12] = v25;
        }
        uint64_t v51 = (uint64_t)&v25[5 * (int)i + 6];
        int v52 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v53 = *(uint64_t **)v51;
        if (v52)
        {
          uint64_t v54 = v53[2];
          char v55 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v51 = v53;
          if ((v55 & 1) == 0)
          {
            MEMORY[0x1BA9B46C0](0, v54 & ~(v54 >> 63), 1);
            unint64_t v53 = *(uint64_t **)v51;
          }
          uint64_t v56 = (char *)(v53 + 4);
          sub_1B631424C(0, &qword_1EB97D878, (uint64_t)&type metadata for ChunksStorage.FilteredChunk, MEMORY[0x1E4FBBB30]);
          swift_arrayDestroy();
          if (v54)
          {
            uint64_t v57 = *(void *)(*(void *)v51 + 16) - v54;
            if (v57 < 0) {
              goto LABEL_69;
            }
            memmove(v56, &v56[8 * v54], 8 * v57);
            *(void *)(*(void *)v51 + 16) -= v54;
          }
          sub_1B6E32A28();
        }
        else
        {
          uint64_t v58 = (void *)MEMORY[0x1E4FBC860];
          if ((unint64_t)v53[3] >= 2)
          {
            sub_1B69E8C44();
            uint64_t v58 = (void *)swift_allocObject();
            int64_t v59 = j__malloc_size(v58);
            uint64_t v60 = v59 - 32;
            if (v59 < 32) {
              uint64_t v60 = v59 - 25;
            }
            _OWORD v58[2] = 0;
            v58[3] = 2 * (v60 >> 3);
          }
          *(void *)uint64_t v51 = v58;
          swift_release();
        }
      }
    }
    swift_release();
    swift_release();
    uint64_t v20 = v61;
  }

  os_unfair_lock_unlock(v20);
}

void sub_1B63773A4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues + 8);
  unint64_t v48 = *(uint64_t **)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  if (v48) {
    BOOL v2 = v1 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2)
  {
    char v3 = 0;
    uint64_t v46 = (void *)(v56 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v55 = OBJC_IVAR____TtC3VFX13EntityManager_logger;
    uint64_t v4 = *(uint64_t **)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    uint64_t v47 = &v48[v1];
    while (1)
    {
      char v52 = v3;
      uint64_t v50 = *v4;
      uint64_t v51 = v4;
      uint64_t v5 = *(void *)(*v4 + 88);
      uint64_t v53 = v5 + 56;
      uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
      uint64_t v7 = v6 < 64 ? ~(-1 << v6) : -1;
      unint64_t v8 = v7 & *(void *)(v5 + 56);
      unint64_t v9 = (unint64_t)(v6 + 63) >> 6;
      swift_bridgeObjectRetain();
      uint64_t v10 = 0;
      int64_t v54 = v9;
      unint64_t v49 = v9 - 4;
      while (v8)
      {
        unint64_t v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v12 = v11 | (v10 << 6);
LABEL_15:
        uint64_t v13 = (int *)(*(void *)(v5 + 48) + 16 * v12);
        int v15 = *v13;
        int v14 = v13[1];
        int v16 = v13[2];
        int v17 = v13[3];
        if (v15 == v16 && v14 == v17)
        {
          uint64_t v19 = *(void *)(v56 + v55);
          uint64_t v57 = 0;
          unint64_t v58 = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          sub_1B6E31948();
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          uint64_t v20 = v57;
          unint64_t v21 = v58;
          uint64_t v22 = sub_1B6E32148();
          uint64_t v57 = 0;
          (*(void (**)(uint64_t, uint64_t *, uint64_t, unint64_t))(*(void *)v19 + 88))(v22, &v57, v20, v21);
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v52 = 1;
          if (v16 != -1 || v17 != 0)
          {
            char v52 = 1;
            if ((v16 & 0x80000000) == 0 && v46[1] > v16)
            {
              char v52 = 1;
              if (v17 == -1 || *(_DWORD *)(*v46 + 12 * v16 + 8) == v17)
              {
                uint64_t v27 = (int *)(*v46 + 12 * v16);
                uint64_t v28 = *((__int16 *)v27 + 2);
                uint64_t v29 = *(void *)(*(void *)(v56 + 136) + 8 * *v27 + 32);
                thread_worker_index();
                uint64_t v30 = *(void *)(v29 + 192);
                if (v30)
                {
                  uint64_t v31 = *(void *)(v29 + 208);
                  uint64_t v32 = 8 * (v28 >> 6);
                  *(void *)(v30 + v32) |= 1 << v28;
                  *(void *)(v31 + v32) &= ~(1 << v28);
                }
                char v52 = 1;
                if (*(unsigned char *)(*(void *)(v29 + 40) + 213) == 1)
                {
                  uint64_t v33 = *(void *)(v29 + 48);
                  uint64_t v34 = *(void *)(v33 + 16);
                  if (v34)
                  {
                    uint64_t v35 = (uint64_t *)(v33 + 56);
                    while ((ValueMetadata *)*(v35 - 3) != &type metadata for PropagateDirtiness)
                    {
                      v35 += 5;
                      if (!--v34) {
                        goto LABEL_50;
                      }
                    }
                    uint64_t v36 = *v35;
                  }
                  else
                  {
LABEL_50:
                    uint64_t v36 = 0;
                  }
                  uint64_t v37 = *(void *)(v29 + 128);
                  char v38 = *(unsigned char *)(v29 + 184);
                  uint64_t v39 = swift_retain();
                  if (v38)
                  {
                    sub_1B6E32BE8();
                    __break(1u);
                    return;
                  }
                  unsigned int v40 = *(_DWORD *)(*(void *)(v29 + 168) + 4 * v28);
                  uint64_t v41 = (unsigned int *)(v37 + v36 + 8 * v28);
                  uint64_t v42 = *(unsigned int *)(*(void *)(v39 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                        + 12 * (int)v40
                                        + 8);
                  swift_release();
                  uint64_t v43 = *v41;
                  uint64_t v44 = v41[1];
                  char v52 = 1;
                  if (v43 != -1 || v44 != 0)
                  {
                    sub_1B6398CA0(&v57, v40 | (unint64_t)(v42 << 32), v43 | (v44 << 32));
                    char v52 = 1;
                  }
                }
              }
            }
          }
        }
      }
      uint64_t v23 = v10 + 1;
      if (v10 + 1 >= v54) {
        goto LABEL_58;
      }
      unint64_t v24 = *(void *)(v53 + 8 * v23);
      if (v24) {
        break;
      }
      uint64_t v23 = v10 + 2;
      if (v10 + 2 >= v54) {
        goto LABEL_58;
      }
      unint64_t v24 = *(void *)(v53 + 8 * v23);
      if (v24) {
        break;
      }
      uint64_t v23 = v10 + 3;
      if (v10 + 3 >= v54) {
        goto LABEL_58;
      }
      unint64_t v24 = *(void *)(v53 + 8 * v23);
      if (v24) {
        break;
      }
      while (v49 != v10)
      {
        unint64_t v24 = *(void *)(v5 + 8 * v10++ + 88);
        if (v24)
        {
          uint64_t v23 = v10 + 3;
          goto LABEL_31;
        }
      }
LABEL_58:
      swift_release();
      if (*(void *)(*(void *)(v50 + 88) + 16))
      {
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v57 = *(void *)(v50 + 88);
        *(void *)(v50 + 88) = 0x8000000000000000;
        sub_1B6377948();
        sub_1B6E327E8();
        *(void *)(v50 + 88) = v57;
        swift_bridgeObjectRelease();
      }
      uint64_t v4 = v48;
      if (v51 + 1 != v47) {
        uint64_t v4 = v51 + 1;
      }
      char v3 = (v51 + 1 != v47) & v52;
      if (!((v51 + 1 != v47) | v52 & 1)) {
        return;
      }
    }
LABEL_31:
    unint64_t v8 = (v24 - 1) & v24;
    unint64_t v12 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v10 = v23;
    goto LABEL_15;
  }
}

void sub_1B6377948()
{
  if (!qword_1EB980630)
  {
    sub_1B67F72A8();
    unint64_t v0 = sub_1B6E327F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980630);
    }
  }
}

void sub_1B63779A4(uint64_t a1)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 40));
  *(void *)(a1 + 56) = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 40));
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 40;
    do
    {
      uint64_t v5 = *(void (**)(uint64_t))(v4 - 8);
      if (v5)
      {
        uint64_t v6 = swift_retain();
        v5(v6);
        sub_1B62C6A50((uint64_t)v5);
      }
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6377A5C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1B6377A84()
{
  return sub_1B6377A5C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1B6377A8C()
{
  return sub_1B6377A94();
}

uint64_t sub_1B6377A94()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = (void *)MEMORY[0x1BA9B6EE0]();
    sub_1B6377B14(v1);
    return swift_release();
  }
  return result;
}

void sub_1B6377B14(uint64_t a1)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_backgroundingSignalLock + 24));
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_applicationInBackground))
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 24));
  }
  else
  {
    char v3 = *(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_sceneInBackground);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 24));
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
      if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 97) & 1) == 0)
      {
        uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
        if (v5)
        {
          swift_retain();
          sub_1B6377C4C(a1);
          if (*(void *)(*(void *)(v5 + 224) + 16))
          {
            double v6 = CACurrentMediaTime();
            sub_1B637831C(*(float *)(*(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler) + 208));
            sub_1B6378CA8(*(void *)(v4 + 8));
            uint64_t v7 = a1 + OBJC_IVAR____TtC3VFX13EntityManager_counters;
            unsigned int v8 = *(_DWORD *)(v7 + 8);
            double v9 = CACurrentMediaTime();
            if (*(void *)v7) {
              vfx_counters_update(*(void *)v7, v8, v9 - v6);
            }
          }
          swift_release();
        }
      }
    }
  }
}

void sub_1B6377C4C(uint64_t a1)
{
  uint64_t v2 = v1;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 176));
  uint64_t v4 = *(void **)(a1 + 176);
  swift_retain();
  uint64_t v5 = sub_1B6304AB4((uint64_t)&type metadata for EffectsRegistry, (uint64_t)&off_1F0F685A0, v4);
  swift_release();
  uint64_t v6 = sub_1B63785D4(v2);
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
  uint64_t v19 = 0;
  uint64_t v8 = *(void *)(*(void *)(v2 + 216) + 16);
  uint64_t v9 = swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v10 = (long long *)(v9 + 32);
    uint64_t v11 = MEMORY[0x1E4FBC860];
    do
    {
      long long v16 = *v10;
      long long v17 = *v10;
      swift_unknownObjectRetain();
      if (sub_1B6377FC4((uint64_t)&v17, &v19, v5, v6, v7))
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v18 = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1B6377E08(0, *(void *)(v11 + 16) + 1, 1);
          uint64_t v11 = v18;
        }
        unint64_t v14 = *(void *)(v11 + 16);
        unint64_t v13 = *(void *)(v11 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_1B6377E08(v13 > 1, v14 + 1, 1);
          uint64_t v11 = v18;
        }
        *(void *)(v11 + 16) = v14 + 1;
        *(_OWORD *)(v11 + 16 * v14 + 32) = v16;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v10;
      --v8;
    }
    while (v8);
  }
  else
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 224) = v11;
  swift_bridgeObjectRelease();
  int v15 = *(os_unfair_lock_s **)(v2 + 176);

  os_unfair_lock_unlock(v15);
}

uint64_t sub_1B6377E08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B6377E28(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_1B6377E28(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  int64_t v9 = a4[2];
  if (a2 <= v9) {
    int64_t v10 = a4[2];
  }
  else {
    int64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62C5838(0, (unint64_t *)&unk_1EB97D8C0, (unint64_t *)&qword_1EB97E288);
    uint64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    _OWORD v11[2] = v9;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = (unint64_t)(v11 + 4);
  unint64_t v15 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v9) {
      memmove(v11 + 4, a4 + 4, 16 * v9);
    }
    a4[2] = 0;
  }
  else
  {
    if (v15 < v14 + 16 * v9 && v14 < v15 + 16 * v9)
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB97E288);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (uint64_t)v11;
}

uint64_t sub_1B6377FC4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(ObjectType, v9) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v25 = a5;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 40);
  uint64_t result = v11(ObjectType, v9);
  if (!result)
  {
LABEL_10:
    uint64_t v15 = *a2;
    goto LABEL_11;
  }
  if (v11(ObjectType, v9) >= 1)
  {
    uint64_t v13 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v9 + 56))(v24, ObjectType, v9);
    --*v14;
    v13(v24, 0);
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 168))(ObjectType, v9)) {
    goto LABEL_6;
  }
  if ((*(double (**)(uint64_t, uint64_t))(v9 + 72))(ObjectType, v9) == 0.0 && v16 == 0.0) {
    goto LABEL_9;
  }
  long long v17 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 144);
  if ((v17(ObjectType, v9) & 0xFFFFFFFFFFLL) != 0x200000000)
  {
    uint64_t v18 = v17(ObjectType, v9);
    if (v18) {
      BOOL v19 = (v18 & 0xFE00000000) == 0;
    }
    else {
      BOOL v19 = 0;
    }
    if (!v19) {
      LODWORD(v18) = dword_1E9E49870;
    }
    if (!sub_1B637822C(v18, a3))
    {
LABEL_9:
      uint64_t result = 0;
      goto LABEL_10;
    }
  }
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 152))(ObjectType, v9);
  if (v21)
  {
LABEL_6:
    uint64_t v15 = *a2;
    uint64_t result = 1;
    goto LABEL_11;
  }
  if (v20 > 119)
  {
    uint64_t v20 = 120;
    uint64_t v22 = v25;
  }
  else
  {
    uint64_t v22 = v25;
    if (v20 < 1) {
      goto LABEL_25;
    }
  }
  a4 /= v20;
LABEL_25:
  if (a4 <= 1) {
    uint64_t v23 = 1;
  }
  else {
    uint64_t v23 = a4;
  }
  uint64_t v15 = *a2;
  uint64_t result = (*a2 + v22) % v23 == 0;
LABEL_11:
  *a2 = v15 + 1;
  return result;
}

uint64_t sub_1B6378224()
{
  return *(void *)(v0 + 152);
}

BOOL sub_1B637822C(int a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1B6E33918();
  sub_1B6E33958();
  uint64_t v4 = sub_1B6E33988();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(_DWORD *)(v8 + 4 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

void sub_1B637831C(float a1)
{
  double v3 = CACurrentMediaTime() - *(double *)(v1 + 32);
  if (*(unsigned char *)(v1 + 99) == 1)
  {
    *(unsigned char *)(v1 + 96) = 1;
    uint64_t v4 = (unsigned __int8 *)(v1 + 96);
    *(unsigned char *)(v1 + 100) = 1;
    *(_WORD *)(v1 + 98) = 0;
    uint64_t v5 = (unsigned char *)(v1 + 98);
    uint64_t v6 = *(void *)(v1 + 88);
    if (v6 >= 240) {
      uint64_t v6 = 240;
    }
    if (v6 <= 15) {
      uint64_t v6 = 15;
    }
    float v7 = 1.0 / (double)v6;
    *(float *)(v1 + 68) = v7;
LABEL_10:
    if (*v5 == 1) {
      float v8 = (v3 - *(double *)(v1 + 40)) * a1;
    }
    else {
      float v8 = *(float *)(v1 + 68);
    }
    goto LABEL_13;
  }
  if (*(unsigned char *)(v1 + 100) == 1)
  {
    *(unsigned char *)(v1 + 96) = 0;
    uint64_t v4 = (unsigned __int8 *)(v1 + 96);
    *(unsigned char *)(v1 + 100) = 0;
    uint64_t v5 = (unsigned char *)(v1 + 98);
    float v8 = 0.0;
    goto LABEL_13;
  }
  uint64_t v4 = (unsigned __int8 *)(v1 + 96);
  uint64_t v5 = (unsigned char *)(v1 + 98);
  float v8 = 0.0;
  if (*(unsigned char *)(v1 + 96) == 1) {
    goto LABEL_10;
  }
LABEL_13:
  sub_1B6378470(v8);
  uint64_t v9 = *(void *)(v1 + 72);
  if (v9 >= 2) {
    uint64_t v9 = 2;
  }
  *(void *)(v1 + 72) = v9;
  if (*(unsigned char *)(v1 + 80) == 1) {
    *(float *)(v1 + 64) = *(float *)(v1 + 64) * a1;
  }
  else {
    *(double *)(v1 + 40) = v3;
  }
  int v10 = *v4;
  if (v10 == 1) {
    *(float *)(v1 + 68) = v8;
  }
  else {
    LOBYTE(v10) = 0;
  }
  *uint64_t v5 = v10;
}

void sub_1B6378470(double a1)
{
  if (*(unsigned char *)(v1 + 80) == 1)
  {
    uint64_t v2 = *(void *)(v1 + 88);
    if (v2 >= 240) {
      uint64_t v2 = 240;
    }
    if (v2 <= 15) {
      uint64_t v2 = 15;
    }
    double v3 = 1.0 / (double)v2;
    double v4 = *(double *)(v1 + 56) + a1;
    uint64_t v5 = (uint64_t)(v4 / v3);
    *(void *)(v1 + 72) = v5;
    double v6 = v3 * (double)v5;
    *(double *)(v1 + 56) = v4 - v6;
    if (v5 <= 0)
    {
      *(void *)(v1 + 72) = 1;
      *(_DWORD *)(v1 + 64) = 0;
    }
    else
    {
      float v7 = v3;
      *(float *)(v1 + 64) = v7;
      double v8 = v3 + *(double *)(v1 + 48);
      *(double *)(v1 + 40) = v6 + *(double *)(v1 + 40);
      *(double *)(v1 + 48) = v8;
    }
  }
  else
  {
    double v9 = 0.0666666667;
    if (a1 <= 0.0666666667) {
      double v9 = a1;
    }
    float v10 = v9;
    *(float *)(v1 + 64) = v10;
    *(double *)(v1 + 48) = *(double *)(v1 + 48) + a1;
    *(void *)(v1 + 72) = 1;
  }
  uint64_t v11 = *(void *)(v1 + 8) + 1;
  uint64_t v12 = *(void *)(v1 + 24) + 1;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = v12;
  *(void *)(v1 + 8) = v11;
}

uint64_t sub_1B637854C()
{
  return *(unsigned __int8 *)(v0 + 144);
}

uint64_t sub_1B6378554()
{
  return *(unsigned __int8 *)(v0 + 90);
}

id sub_1B637855C()
{
  double v1 = *(double *)(v0 + 160);
  double v2 = *(double *)(v0 + 168);
  double v3 = *(void **)(v0 + 16);
  id result = objc_msgSend(v3, sel_drawableSize);
  if (v1 != v6 || v2 != v5)
  {
    double v8 = *(double *)(v0 + 160);
    double v9 = *(double *)(v0 + 168);
    return objc_msgSend(v3, sel_setDrawableSize_, v8, v9);
  }
  return result;
}

uint64_t sub_1B63785D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 224);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v22 = v2;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = v4 - 1;
    for (uint64_t i = (uint64_t *)(v3 + 40); ; i += 2)
    {
      uint64_t v8 = *i;
      uint64_t ObjectType = swift_getObjectType();
      float v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 152);
      swift_unknownObjectRetain();
      uint64_t v11 = v10(ObjectType, v8);
      LOBYTE(v8) = v12;
      swift_unknownObjectRelease();
      if (v8)
      {
        if (v5 <= 60) {
          uint64_t v5 = 60;
        }
      }
      else if (v11 > v5)
      {
        uint64_t v5 = v11;
      }
      if (!v6) {
        break;
      }
      --v6;
    }
    swift_bridgeObjectRelease();
    uint64_t v2 = v22;
  }
  else
  {
    uint64_t v5 = 0;
  }
  if (*(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
  {
    swift_retain();
    os_unfair_recursive_lock_lock_with_options();
    sub_1B636E9A8((uint64_t)&type metadata for RERendererConfiguration);
    if (v13 == 2)
    {
      os_unfair_recursive_lock_unlock();
      swift_release();
    }
    else
    {
      char v14 = v13;
      os_unfair_recursive_lock_unlock();
      swift_release();
      if (v14) {
        return v5;
      }
    }
    uint64_t v15 = *(unsigned char **)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
    if (!v15 || (v15[537] & 1) == 0 && (v15[539] & 1) == 0 && (v15[540] & 1) == 0)
    {
      if (qword_1EB97D4A0 != -1) {
        swift_once();
      }
      uint64_t v16 = qword_1EB997A38;
      long long v17 = *(void **)(qword_1EB997A38 + 64);
      if (v17)
      {
        swift_retain();
        objc_msgSend(v17, sel_preferredFrameRateRange);
        uint64_t v18 = sub_1B6E32198();
        if ((v18 & 0x100000000) == 0)
        {
          if (v5 == (uint64_t)*(float *)&v18) {
            goto LABEL_31;
          }
LABEL_29:
          BOOL v19 = *(void **)(v16 + 64);
          if (v19)
          {
            id v20 = v19;
            sub_1B6E32188();
            objc_msgSend(v20, sel_setPreferredFrameRateRange_);
            swift_release();

            return v5;
          }
LABEL_31:
          swift_release();
          return v5;
        }
      }
      else
      {
        swift_retain();
      }
      if (!v5) {
        goto LABEL_31;
      }
      goto LABEL_29;
    }
  }
  return v5;
}

uint64_t sub_1B6378860()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_1B637886C()
{
  return sub_1B6378874(v0);
}

uint64_t sub_1B6378874(uint64_t a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  if (*(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_runtimeThread))
  {
    swift_retain_n();
    swift_retain();
    sub_1B6378A14((uint64_t)sub_1B6377A8C, a1, 0);
LABEL_7:
    swift_release();
    swift_release_n();
    goto LABEL_8;
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = swift_retain_n();
    uint64_t v6 = (void *)MEMORY[0x1BA9B6EE0](v5);
    sub_1B6377B14(v4);
    goto LABEL_7;
  }
LABEL_8:

  return swift_release();
}

id sub_1B6378988()
{
  os_unfair_recursive_lock_lock_with_options();
  char v1 = *(unsigned char *)(v0 + 152);
  id result = (id)os_unfair_recursive_lock_unlock();
  if ((v1 & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + 16);
    objc_msgSend(*(id *)(v3 + 16), sel_lock);
    *(unsigned char *)(v3 + 24) = 1;
    objc_msgSend(*(id *)(v3 + 16), sel_signal);
    uint64_t v4 = *(void **)(v3 + 16);
    return objc_msgSend(v4, sel_unlock);
  }
  return result;
}

id sub_1B6378A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_recursive_lock_lock_with_options();
  if (*(unsigned char *)(v3 + 120) == 1 || *(void *)(*(void *)(v3 + 40) + 16) && (sub_1B6378C64(a3), (v7 & 1) != 0))
  {
    return (id)os_unfair_recursive_lock_unlock();
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *(void *)(v3 + 40);
    *(void *)(v3 + 40) = 0x8000000000000000;
    sub_1B6378B40((uint64_t)sub_1B6377A84, v9, a3, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 40) = v11;
    swift_bridgeObjectRelease();
    os_unfair_recursive_lock_unlock();
    return sub_1B6378988();
  }
}

unint64_t sub_1B6378B40(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  float v10 = (void *)*v4;
  unint64_t v11 = sub_1B6378C64(a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 >= v15 && (a4 & 1) != 0)
  {
LABEL_6:
    uint64_t v16 = *v5;
    if (v13)
    {
LABEL_7:
      long long v17 = (uint64_t *)(v16[7] + 16 * v11);
      unint64_t result = swift_release();
      uint64_t *v17 = a1;
      v17[1] = a2;
      return result;
    }
    goto LABEL_10;
  }
  if (v14 >= v15 && (a4 & 1) == 0)
  {
    sub_1B6AD3ED4();
    goto LABEL_6;
  }
  sub_1B6396DCC(v15, a4 & 1);
  unint64_t v19 = sub_1B6378C64(a3);
  if ((v13 & 1) != (v20 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v11 = v19;
  uint64_t v16 = *v5;
  if (v13) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B6378C68(v11, a3, a1, a2, v16);
}

unint64_t sub_1B6378C68(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  *uint64_t v5 = a3;
  v5[1] = a4;
  ++a5[2];
  return result;
}

uint64_t sub_1B6378CA8(uint64_t result)
{
  uint64_t v48 = result;
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v2)
  {
    uint64_t v3 = v1;
    swift_retain();
    double v4 = CACurrentMediaTime();
    uint64_t v5 = OBJC_IVAR____TtC3VFX13EntityManager_scheduler;
    swift_retain();
    sub_1B6379270();
    swift_release();
    sub_1B6379334();
    sub_1B637984C();
    uint64_t v6 = v1 + OBJC_IVAR____TtC3VFX13EntityManager_counters;
    unsigned int v7 = *(_DWORD *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 12);
    double v8 = CACurrentMediaTime();
    if (*(void *)v6) {
      vfx_counters_update(*(void *)v6, v7, v8 - v4);
    }
    double v9 = CACurrentMediaTime();
    uint64_t v10 = *(void *)(v2 + 224);
    uint64_t v47 = *(void *)(v10 + 16);
    if (v47)
    {
      uint64_t v43 = v5;
      uint64_t v46 = v10 + 32;
      uint64_t v44 = OBJC_IVAR____TtC3VFX13EntityManager_isVFX2;
      swift_bridgeObjectRetain();
      uint64_t v11 = 0;
      uint64_t v45 = v2;
      uint64_t v50 = v3;
      while (1)
      {
        char v12 = (uint64_t *)(v46 + 16 * v11);
        uint64_t v13 = *v12;
        uint64_t v14 = v12[1];
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 120);
        swift_unknownObjectRetain();
        long long v17 = (void *)v16(ObjectType, v14);
        unint64_t v49 = v16;
        if (!v17)
        {
          id v18 = objc_msgSend(*(id *)(v2 + 312), sel_commandBuffer);
          if (!v18)
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v41 = *(void *)(v50 + v43);
            if ((*(unsigned char *)(v41 + 16) & 1) == 0) {
              return swift_release();
            }
LABEL_40:
            long long v42 = *(_OWORD *)(v41 + 176);
            *(_OWORD *)(v41 + 176) = *(_OWORD *)(v41 + 192);
            *(_OWORD *)(v41 + 192) = v42;
            return swift_release();
          }
          long long v17 = v18;
          sub_1B6E328F8();
          unint64_t v19 = (void *)sub_1B6E31768();
          swift_bridgeObjectRelease();
          objc_msgSend(v17, sel_setLabel_, v19);

          uint64_t v16 = v49;
        }
        uint64_t v20 = v16(ObjectType, v14);
        if (v20)
        {
          char v21 = (void *)v20;
          uint64_t v55 = j__prof_commit;
          uint64_t v56 = 0;
          aBlocuint64_t k = MEMORY[0x1E4F143A8];
          uint64_t v52 = 1107296256;
          uint64_t v53 = sub_1B638F0B8;
          int64_t v54 = &unk_1F0FB81B0;
          uint64_t v22 = _Block_copy(&aBlock);
          swift_release();
          objc_msgSend(v21, sel_addScheduledHandler_, v22);
          _Block_release(v22);
          uint64_t v23 = swift_allocObject();
          swift_weakInit();
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v23;
          *(void *)(v24 + 24) = v48;
          uint64_t v55 = sub_1B6AA0000;
          uint64_t v56 = v24;
          aBlocuint64_t k = MEMORY[0x1E4F143A8];
          uint64_t v52 = 1107296256;
          uint64_t v53 = sub_1B638F0B8;
          int64_t v54 = &unk_1F0FB8250;
          uint64_t v25 = _Block_copy(&aBlock);
          swift_release();
          objc_msgSend(v21, sel_addCompletedHandler_, v25);
          _Block_release(v25);
          swift_unknownObjectRelease();
        }
        uint64_t v26 = *(void *)(v2 + 224);
        uint64_t v27 = *(void *)(v26 + 16);
        BOOL v28 = v27 && v13 == *(void *)(v26 + 16 * v27 + 16);
        uint64_t v29 = *(void *)(v50 + 176);
        swift_retain();
        os_unfair_recursive_lock_lock_with_options();
        uint64_t v30 = *(void *)(v29 + 48);
        uint64_t v31 = *(void *)(v30 + 16);
        if (!v31) {
          break;
        }
        unint64_t v32 = 0;
        uint64_t v33 = (ValueMetadata **)(v30 + 32);
        while (*v33 != &type metadata for RERendererConfiguration)
        {
          ++v32;
          v33 += 5;
          if (v31 == v32) {
            goto LABEL_20;
          }
        }
        unint64_t v34 = v32 - 65;
        if (v32 >= 0x40) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = 1 << v32;
        }
        if (v34 < 0xFFFFFFFFFFFFFF7FLL) {
          uint64_t v35 = 0;
        }
        uint64_t v36 = *(void *)(v29 + 120) & v35;
        os_unfair_recursive_lock_unlock();
        swift_release();
        uint64_t v3 = v50;
        if (!v36) {
          goto LABEL_21;
        }
LABEL_29:
        BOOL v28 = 0;
LABEL_30:
        sub_1B6379D4C(v13, v17, v28, v48, v3, ObjectType, v14);
        uint64_t v37 = v49(ObjectType, v14);
        swift_unknownObjectRelease();
        if (!v37) {
          objc_msgSend(v17, sel_commit);
        }
        uint64_t v2 = v45;
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 128))(ObjectType, v14))
        {
          swift_getObjectType();
          sub_1B6BBB94C();
        }
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (++v11 == v47)
        {
          swift_bridgeObjectRelease();
          uint64_t v5 = v43;
          goto LABEL_35;
        }
      }
LABEL_20:
      os_unfair_recursive_lock_unlock();
      swift_release();
      uint64_t v3 = v50;
LABEL_21:
      if (*(unsigned char *)(v3 + v44) != 1) {
        goto LABEL_30;
      }
      goto LABEL_29;
    }
LABEL_35:
    unsigned int v38 = *(_DWORD *)(v6 + 16);
    double v39 = CACurrentMediaTime();
    if (*(void *)v6) {
      vfx_counters_update(*(void *)v6, v38, v39 - v9);
    }
    sub_1B637BF40();
    if (*(unsigned char *)(v2 + 304) == 1)
    {
      *(unsigned char *)(v2 + 304) = 0;
      id v40 = objc_msgSend(self, sel_sharedCaptureManager);
      objc_msgSend(v40, sel_stopCapture);
    }
    uint64_t v41 = *(void *)(v3 + v5);
    if (*(unsigned char *)(v41 + 16) == 1) {
      goto LABEL_40;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6379268()
{
  return swift_unknownObjectRetain();
}

void sub_1B6379270()
{
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v1 = v0;
    uint64_t v2 = (uint64_t *)(v0 + 192);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v4 = *v2;
    if (isUniquelyReferenced_nonNull_native)
    {
      sub_1B69E33FC(0, *(void *)(v4 + 16));
    }
    else
    {
      *uint64_t v2 = (uint64_t)sub_1B6785C24(0, *(void *)(v4 + 24) >> 1);
      swift_release();
    }
    if (*(void *)(*(void *)(v1 + 200) + 16))
    {
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v5 = *(void *)(v1 + 200);
      *(void *)(v1 + 200) = 0x8000000000000000;
      sub_1B6C5E164();
      sub_1B6E32B78();
      *(void *)(v1 + 200) = v5;
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1B6379334()
{
  uint64_t v1 = v0;
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  sub_1B62F946C(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v5 = (char *)v30 - v4;
  uint64_t v6 = sub_1B6E30F48();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (byte_1E9E492D0 == 1)
  {
    byte_1E9E492D0 = 0;
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F351D8]), sel_init);
    objc_msgSend(v11, sel_setCaptureObject_, *(void *)(v1 + 16));
    sub_1B6E30E48();
    char v12 = (void *)sub_1B6E30E78();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
    v13(v10, v6);
    objc_msgSend(v11, sel_setOutputURL_, v12);

    id v14 = objc_msgSend(self, sel_defaultManager);
    id v15 = objc_msgSend(v11, sel_outputURL);
    if (v15)
    {
      uint64_t v16 = v15;
      sub_1B6E30EE8();

      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v5, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
      long long v17 = (void *)sub_1B6E30E78();
      v13(v5, v6);
      id v31 = 0;
      unsigned __int8 v18 = objc_msgSend(v14, sel_removeItemAtURL_error_, v17, &v31);

      id v19 = v31;
      if ((v18 & 1) == 0)
      {
        uint64_t v20 = v19;
        char v21 = (void *)sub_1B6E30D78();

        swift_willThrow();
      }
      objc_msgSend(v11, sel_setDestination_, 2);
      id v22 = objc_msgSend(self, sel_sharedCaptureManager);
      id v31 = 0;
      unsigned int v23 = objc_msgSend(v22, sel_startCaptureWithDescriptor_error_, v11, &v31);

      if (v23)
      {
        id v24 = v31;

        *(unsigned char *)(v1 + 304) = 1;
      }
      else
      {
        id v25 = v31;
        uint64_t v26 = (void *)sub_1B6E30D78();

        swift_willThrow();
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        id v31 = 0;
        unint64_t v32 = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        v30[1] = v26;
        sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
        sub_1B6E32B18();
        uint64_t v27 = (uint64_t)v31;
        uint64_t v28 = v32;
        int v29 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        id v31 = 0;
        swift_retain();
        sub_1B6B33E34(v29, (uint64_t *)&v31, v27, v28);
        swift_release();
        swift_bridgeObjectRelease();

        swift_release();
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
      __break(1u);
    }
  }
}

uint64_t sub_1B637984C()
{
  uint64_t v1 = sub_1B6E312C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
  LODWORD(v4) = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_currentState) = 1;
  if (v4 != 1)
  {
    uint64_t v7 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v7)
    {
      swift_retain();
      v7(v0);
      sub_1B62C6A50((uint64_t)v7);
    }
  }
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1B6385660(v1, (uint64_t)qword_1EB997E68);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v8, v1);
  uint64_t v9 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v9 = 0;
  uint64_t v10 = sub_1B6E312A8();
  uint64_t v20 = v1;
  id v11 = v10;
  os_signpost_type_t v12 = sub_1B6E322B8();
  os_signpost_id_t v13 = sub_1B6E31278();
  _os_signpost_emit_with_name_impl(&dword_1B6287000, v11, v12, v13, "update", "", v9, 2u);
  swift_retain();
  sub_1B6379B0C(3);
  swift_release();
  os_signpost_type_t v14 = sub_1B6E322A8();
  os_signpost_id_t v15 = sub_1B6E31278();
  _os_signpost_emit_with_name_impl(&dword_1B6287000, v11, v14, v15, "update", "", v9, 2u);

  MEMORY[0x1BA9B84C0](v9, -1, -1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v20);
  int v17 = *(unsigned __int8 *)(v0 + v6);
  *(unsigned char *)(v0 + v6) = 4;
  if (v17 != 4)
  {
    unsigned __int8 v18 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v18)
    {
      swift_retain();
      v18(v0);
      return sub_1B62C6A50((uint64_t)v18);
    }
  }
  return result;
}

uint64_t sub_1B6379B0C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t result = swift_retain();
  if (v4)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t (**)(void, double)))thread_worker_index;
    uint64_t v8 = (uint64_t *)thread_worker_index(&thread_worker_index, v6);
    uint64_t v9 = *v8;
    uint64_t *v8 = 0;
    switch((char)a1)
    {
      case 1:
      case 2:
      case 4:
        goto LABEL_11;
      case 3:
        if (*(uint64_t *)(v4 + 216) < 1)
        {
          if (!*(unsigned char *)(v4 + 225)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v10 = v4;
          if ((*(unsigned char *)(v4 + 225) & 1) == 0) {
            goto LABEL_18;
          }
        }
        sub_1B69E090C();
LABEL_17:
        *(unsigned char *)(v4 + 225) = 1;
        sub_1B63BADF0();
        uint64_t v10 = *(void *)(v2 + 24);
LABEL_18:
        if (*(unsigned char *)(v10 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) == 1)
        {
          sub_1B62F38EC(2);
          *(unsigned char *)(*(void *)(v2 + 24) + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 0;
        }
        uint64_t v11 = v4 + OBJC_IVAR____TtC3VFX13EntityManager_clock;
        uint64_t v12 = *(void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 72);
        if (v12)
        {
          sub_1B62F38EC(3);
          uint64_t v13 = v12 - 1;
          if (v13)
          {
            int64x2_t v15 = vdupq_n_s64(1uLL);
            do
            {
              *(int64x2_t *)(v11 + 16) = vaddq_s64(*(int64x2_t *)(v11 + 16), v15);
              uint64_t v14 = *(void *)(v11 + 88);
              if (v14 >= 240) {
                uint64_t v14 = 240;
              }
              if (v14 <= 15) {
                uint64_t v14 = 15;
              }
              *(double *)(v11 + 48) = *(double *)(v11 + 48) + 1.0 / (double)v14;
              sub_1B6376EB8();
              sub_1B62F38EC(3);
              --v13;
            }
            while (v13);
          }
        }
LABEL_12:
        *(void *)v7(&thread_worker_index) = v9;
        uint64_t result = swift_release();
        break;
      case 5:
        a1 = 5;
        goto LABEL_11;
      default:
        if (*(unsigned char *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) == 1)
        {
          sub_1B62F38EC(2);
          a1 = 0;
          *(unsigned char *)(*(void *)(v2 + 24) + OBJC_IVAR____TtC3VFX13EntityManager_shouldNotifyEntityEvent) = 0;
        }
        else
        {
          a1 = 0;
        }
LABEL_11:
        sub_1B62F38EC(a1);
        goto LABEL_12;
    }
  }
  return result;
}

uint64_t sub_1B6379D4C(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v78 = a6;
  uint64_t v79 = a7;
  uint64_t v77 = a1;
  uint64_t v11 = sub_1B6E312D8();
  uint64_t v74 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v12);
  int64_t v73 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1B6E31288();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v20 = (char *)&v64 - v19;
  MEMORY[0x1F4188790](v21, v22);
  id v25 = (char *)&v64 - v24;
  uint64_t result = *(void *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (result)
  {
    uint64_t v66 = v11;
    uint64_t v67 = a4;
    int v68 = a3;
    uint64_t v71 = a2;
    uint64_t v72 = v23;
    uint64_t v27 = qword_1EB97FF40;
    uint64_t v80 = result;
    swift_retain();
    if (v27 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1B6E312C8();
    uint64_t v29 = sub_1B6385660(v28, (uint64_t)qword_1EB997E68);
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v30(v25, a5 + OBJC_IVAR____TtC3VFX13EntityManager_signpostID, v14);
    uint64_t v69 = v29;
    id v31 = sub_1B6E312A8();
    os_signpost_type_t v32 = sub_1B6E322B8();
    char v33 = sub_1B6E323F8();
    uint64_t v76 = v14;
    if (v33)
    {
      v30(v20, (uint64_t)v25, v14);
      unint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v34 = 0;
      os_signpost_id_t v35 = sub_1B6E31278();
      _os_signpost_emit_with_name_impl(&dword_1B6287000, v31, v32, v35, "render", "", v34, 2u);
      uint64_t v36 = v34;
      uint64_t v14 = v76;
      MEMORY[0x1BA9B84C0](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }
    else
    {
    }
    uint64_t v65 = v30;
    v30(v20, (uint64_t)v25, v14);
    sub_1B6E31308();
    swift_allocObject();
    uint64_t v75 = sub_1B6E312F8();
    uint64_t v70 = *(void (**)(char *, uint64_t))(v15 + 8);
    v70(v25, v14);
    uint64_t v37 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
    int v38 = *(unsigned __int8 *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
    *(unsigned char *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_currentState) = 2;
    if (v38 != 2)
    {
      double v39 = *(void (**)(uint64_t))(a5 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
      if (v39)
      {
        swift_retain();
        v39(a5);
        sub_1B62C6A50((uint64_t)v39);
      }
    }
    id v40 = v71;
    sub_1B637AA6C(a5, v77, v71, v80, v78, v79);
    uint64_t v41 = *(void *)(*(void *)(a5 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler) + 24);
    swift_retain();
    if (v41)
    {
      uint64_t v43 = (uint64_t *)thread_worker_index(&thread_worker_index, v42);
      uint64_t v44 = *v43;
      *uint64_t v43 = 0;
      swift_retain();
      sub_1B62F38EC(4);
      *uint64_t v43 = v44;
      swift_release();
      swift_release();
    }
    sub_1B637B33C(v67);
    if (v68) {
      sub_1B637A478(v40);
    }
    uint64_t v45 = (*(uint64_t (**)(uint64_t))(v79 + 176))(v78);
    if (v45)
    {
      uint64_t v47 = v45;
      uint64_t v48 = v46;
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = v47;
      *(void *)(v49 + 24) = v48;
      aBlock[4] = sub_1B6AA0008;
      aBlock[5] = v49;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1B638F0B8;
      aBlock[3] = &unk_1F0FB82C8;
      uint64_t v50 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v40, sel_addCompletedHandler_, v50);
      _Block_release(v50);
      sub_1B62C6A50(v47);
    }
    int v51 = *(unsigned __int8 *)(a5 + v37);
    *(unsigned char *)(a5 + v37) = 4;
    if (v51 != 4)
    {
      uint64_t v52 = *(void (**)(uint64_t))(a5 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
      if (v52)
      {
        swift_retain();
        v52(a5);
        sub_1B62C6A50((uint64_t)v52);
      }
    }
    uint64_t v53 = sub_1B6E312A8();
    int64_t v54 = v72;
    sub_1B6E312E8();
    os_signpost_type_t v55 = sub_1B6E322A8();
    if (sub_1B6E323F8())
    {
      swift_retain();
      uint64_t v56 = v73;
      sub_1B6E31318();
      swift_release();
      uint64_t v57 = v74;
      uint64_t v58 = v66;
      if ((*(unsigned int (**)(char *, uint64_t))(v74 + 88))(v56, v66) == *MEMORY[0x1E4FBD340])
      {
        int64_t v59 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
        int64_t v59 = "";
      }
      uint64_t v60 = v76;
      v65(v20, (uint64_t)v54, v76);
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      os_signpost_id_t v62 = sub_1B6E31278();
      _os_signpost_emit_with_name_impl(&dword_1B6287000, v53, v55, v62, "render", v59, v61, 2u);
      MEMORY[0x1BA9B84C0](v61, -1, -1);

      uint64_t v63 = v70;
      v70(v54, v60);
      v63(v20, v60);
    }
    else
    {

      v70(v54, v76);
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B637A478(void *a1)
{
  swift_retain();
  uint64_t v2 = sub_1B637A5C0();
  uint64_t v4 = v3;
  swift_release();
  swift_retain();
  uint64_t v5 = sub_1B637A5C0();
  uint64_t v7 = v6;
  swift_release();
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = v2;
  void v8[3] = v4;
  v8[4] = v5;
  void v8[5] = v7;
  _OWORD v11[4] = sub_1B6293F38;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_1B638F0B8;
  v11[3] = &unk_1F0FB8098;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_addCompletedHandler_, v9);
  _Block_release(v9);
  swift_release();
  return swift_release();
}

uint64_t (*sub_1B637A5C0())()
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 56));
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(char **)(v0 + 120);
  uint64_t v3 = *((void *)v1 + 2);
  uint64_t v4 = *(void *)(v0 + 104);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 120) = v1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v1 = sub_1B6C166A8((uint64_t)v1);
  }
  *(void *)&v1[8 * (v2 % v3) + 32] = v4;
  uint64_t v6 = *(void *)(v0 + 112) + 1;
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = v6;
  *(void *)(v0 + 120) = v1;
  unint64_t v7 = *(void *)(v0 + 64);
  unint64_t v8 = *((void *)v1 + 2);
  if (!v8)
  {
    int64_t v9 = 0;
    goto LABEL_15;
  }
  int64_t v9 = *((void *)v1 + 4);
  unint64_t v10 = v8 - 1;
  if (v8 != 1)
  {
    if (v8 >= 5)
    {
      unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL | 1;
      int8x16_t v12 = (int8x16_t)vdupq_n_s64(v9);
      uint64_t v13 = (int64x2_t *)(v1 + 56);
      unint64_t v14 = v10 & 0xFFFFFFFFFFFFFFFCLL;
      int8x16_t v15 = v12;
      do
      {
        int8x16_t v12 = vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v12, v13[-1]), v12, (int8x16_t)v13[-1]);
        int8x16_t v15 = vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v15, *v13), v15, *(int8x16_t *)v13);
        v13 += 2;
        v14 -= 4;
      }
      while (v14);
      int8x16_t v16 = vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v12, (int64x2_t)v15), v12, v15);
      uint64_t v17 = vextq_s8(v16, v16, 8uLL).u64[0];
      int64_t v9 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v16.i64[0], v17), *(int8x8_t *)v16.i8, (int8x8_t)v17);
      if (v10 == (v10 & 0xFFFFFFFFFFFFFFFCLL)) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v11 = 1;
    }
    unint64_t v18 = v8 - v11;
    uint64_t v19 = (int64_t *)&v1[8 * v11 + 32];
    do
    {
      int64_t v21 = *v19++;
      int64_t v20 = v21;
      if (v9 <= v21) {
        int64_t v9 = v20;
      }
      --v18;
    }
    while (v18);
  }
LABEL_15:
  swift_bridgeObjectRetain_n();
  sub_1B637A7A4(v0, v7);
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  unsigned int v23 = (void *)swift_allocObject();
  v23[2] = v22;
  v23[3] = v7;
  v23[4] = v9;
  *(void *)(v0 + 64) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v0 + 144);
  *(void *)(v24 + 8) = 0;
  *(void *)(v24 + 16) = 0;
  *(void *)uint64_t v24 = 0;
  *(_OWORD *)(v24 + 32) = 0u;
  *(_OWORD *)(v24 + 48) = 0u;
  *(_OWORD *)(v24 + 64) = 0u;
  *(_OWORD *)(v24 + 80) = 0u;
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 56));
  return sub_1B6293F7C;
}

uint64_t sub_1B637A7A4(uint64_t result, unint64_t a2)
{
  if (*(unsigned char *)(result + 24) == 1)
  {
    uint64_t v3 = result;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(v3 + 96);
    uint64_t v7 = *(void *)(v3 + 88);
    uint64_t v8 = v4;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6E316E8();
    sub_1B638491C();
    sub_1B6E31A38();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E328C8();
    sub_1B6E31948();
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
    int v6 = sub_1B6E32168();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v7 = 0;
    swift_retain();
    sub_1B6B33E34(v6, &v7, v5, v8);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t *sub_1B637AA6C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v34 = a1;
  uint64_t v33 = sub_1B6E31468();
  uint64_t v11 = *(void *)(v33 - 8);
  double v13 = MEMORY[0x1F4188790](v33, v12);
  int8x16_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(a3, sel_label, v13);
  if (v16)
  {
  }
  else
  {
    v48[0] = 0;
    v48[1] = 0xE000000000000000;
    sub_1B6E31948();
    uint64_t v35 = a2;
    uint64_t v36 = a6;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB97E288);
    sub_1B6E32B18();
    uint64_t v17 = (void *)sub_1B6E31768();
    swift_bridgeObjectRelease();
    objc_msgSend(a3, sel_setLabel_, v17);
  }
  unint64_t v18 = (unsigned char *)(a4 + 537);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 120))(a5, a6);
  if (!v19
    || (int64_t v20 = (void *)v19, swift_unknownObjectRelease(), v20 != a3)
    || (*v18 & 1) == 0 && *(unsigned char *)(a4 + 539) != 1 && (*(unsigned char *)(a4 + 540) & 1) == 0)
  {
    sub_1B637AE10(a3);
  }
  *(void *)(a4 + 368) = a3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if ((*v18 & 1) == 0 && *(unsigned char *)(a4 + 539) != 1 && (*(unsigned char *)(a4 + 540) & 1) == 0)
  {
    sub_1B6E31458();
    sub_1B6E322E8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v33);
  }
  *(void *)(a4 + 408) = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 88))(a5, a6);
  *(void *)(a4 + 472) = *(void *)(a4 + 592);
  *(unsigned char *)(*(void *)(a4 + 288) + 136) = 1;
  uint64_t v21 = v34;
  uint64_t v22 = sub_1B637BA68();
  char v24 = v23;
  swift_unknownObjectRetain();
  CFTimeInterval v25 = CACurrentMediaTime();
  uint64_t v26 = *(void *)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler);
  type metadata accessor for WireframeLayerSystem();
  uint64_t v27 = *(os_unfair_lock_s **)(v26 + 56);
  swift_unknownObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v27);
  uint64_t v28 = sub_1B637B2D4();
  if (v29) {
    char v30 = 0;
  }
  else {
    char v30 = *(unsigned char *)(*(void *)(v26 + 96) + 96 * v28 + 105);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 56));
  swift_release();
  if (v24) {
    uint64_t v31 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v31 = v22;
  }
  sub_1B637B6F0((void *)v31, (uint64_t)v49);
  uint64_t v35 = a2;
  uint64_t v36 = a6;
  CFTimeInterval v37 = v25;
  int v38 = a3;
  char v39 = v30;
  long long v40 = v49[0];
  long long v41 = v49[1];
  long long v42 = v49[2];
  long long v43 = v49[3];
  long long v44 = v49[4];
  long long v45 = v49[5];
  uint64_t v46 = 0;
  char v47 = 0;
  nullsub_1(&v35);
  sub_1B6388B3C(a4 + 624, (uint64_t)v48);
  sub_1B6388B3C((uint64_t)&v35, a4 + 624);
  return sub_1B637B268(v48);
}

void sub_1B637AE10(void *a1)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 352));
  if (sub_1B637AF40((uint64_t)a1, *(void *)(v1 + 360)))
  {
    uint64_t v3 = *(os_unfair_lock_s **)(v1 + 352);
    os_unfair_lock_unlock(v3);
  }
  else
  {
    swift_unknownObjectRetain();
    sub_1B637B000(v5, (uint64_t)a1);
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 352));
    v5[4] = sub_1B6293C0C;
    v5[5] = v1;
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 1107296256;
    void v5[2] = sub_1B638F0B8;
    v5[3] = &unk_1F0FB8020;
    uint64_t v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
    objc_msgSend(a1, sel_addScheduledHandler_, v4);
    _Block_release(v4);
  }
}

BOOL sub_1B637AF40(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1B6E33918();
  sub_1B6E33928();
  uint64_t v4 = sub_1B6E33988();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = ~v5;
  do
  {
    uint64_t v8 = *(void *)(*(void *)(a2 + 48) + 8 * v6);
    BOOL result = v8 == a1;
    if (v8 == a1) {
      break;
    }
    unint64_t v6 = (v6 + 1) & v7;
  }
  while (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  return result;
}

uint64_t sub_1B637B000(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1B6E33918();
  sub_1B6E33928();
  uint64_t v6 = sub_1B6E33988();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    while (*(void *)(*(void *)(v5 + 48) + 8 * v8) != a2)
    {
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_unknownObjectRelease();
    *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
    swift_unknownObjectRetain();
    return 0;
  }
  else
  {
LABEL_5:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v11 = swift_unknownObjectRetain();
    sub_1B637B12C(v11, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
}

uint64_t sub_1B637B12C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1B67ED670();
  }
  else
  {
    if (v7 > v6)
    {
      BOOL result = sub_1B67F10B4();
LABEL_12:
      uint64_t v11 = *v3;
      *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v11 + 48) + 8 * a2) = v5;
      ++*(void *)(v11 + 16);
      return result;
    }
    sub_1B67F39B8();
  }
  uint64_t v8 = *v3;
  sub_1B6E33918();
  sub_1B6E33928();
  BOOL result = sub_1B6E33988();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v10 = ~v9;
  while (*(void *)(*(void *)(v8 + 48) + 8 * a2) != v5)
  {
    a2 = (a2 + 1) & v10;
    if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
      goto LABEL_12;
    }
  }
  BOOL result = sub_1B6E33828();
  __break(1u);
  return result;
}

uint64_t *sub_1B637B268(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1B637B2D4()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t result = 0;
  for (uint64_t i = (void *)(v1 + 32); *i != ObjCClassFromMetadata; i += 12)
  {
    if (v2 == ++result) {
      return 0;
    }
  }
  return result;
}

void sub_1B637B33C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1B6388C28();
  uint64_t v4 = *(void **)(v1 + 368);
  if (!v4) {
    return;
  }
  sub_1B6388B3C(v1 + 624, (uint64_t)v17);
  sub_1B6388B3C((uint64_t)v17, (uint64_t)v18);
  if (sub_1B6388C10(v18) == 1) {
    goto LABEL_15;
  }
  uint64_t v5 = v18[1];
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 184);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v8 = (void (*)(void *, uint64_t))v7(ObjectType, v5);
  swift_unknownObjectRelease();
  if (v8)
  {
    sub_1B6388B3C(v1 + 624, (uint64_t)v14);
    sub_1B6388B3C((uint64_t)v14, (uint64_t)aBlock);
    if (sub_1B6388C10(aBlock) != 1)
    {
      uint64_t v9 = v16;
      if (v16)
      {
        swift_unknownObjectRetain();
        v8(v4, v9);
        swift_unknownObjectRelease();
      }
      sub_1B62C6A50((uint64_t)v8);
      goto LABEL_8;
    }
LABEL_15:
    sub_1B6E32BE8();
    __break(1u);
    return;
  }
LABEL_8:
  sub_1B637C08C();
  if (*(unsigned char *)(v1 + 537) == 1 || *(unsigned char *)(v1 + 539) == 1 || (*(unsigned char *)(v1 + 540) & 1) != 0)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void **)(v1 + 528);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = v10;
    aBlock[4] = (uint64_t)sub_1B6293F88;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1B638F0B8;
    aBlock[3] = (uint64_t)&unk_1F0FB80E8;
    uint64_t v12 = _Block_copy(aBlock);
    id v13 = v10;
    swift_release();
    objc_msgSend(v4, sel_addCompletedHandler_, v12);
    swift_unknownObjectRelease();
    _Block_release(v12);
  }
  sub_1B637B628(v14);
  sub_1B6388B3C(v2 + 624, (uint64_t)aBlock);
  sub_1B6388B3C((uint64_t)v14, v2 + 624);
  sub_1B637B268(aBlock);
  *(void *)(v2 + 368) = 0;
  swift_unknownObjectRelease();
  *(unsigned char *)(*(void *)(v2 + 288) + 136) = 0;
}

uint64_t sub_1B637B5EC(uint64_t a1, uint64_t a2)
{
  return sub_1B637B60C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1B637B5F4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1B637B60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a3, a1, a2);
}

double sub_1B637B628(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 137) = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1B637B654()
{
  uint64_t v1 = *(void *)(v0 + 96);
  sub_1B62C6A60(v1);
  return v1;
}

id sub_1B637B688()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_pixelFormat);
}

uint64_t sub_1B637B698()
{
  uint64_t v1 = *(void *)(v0 + 112);
  sub_1B62C6A60(v1);
  return v1;
}

uint64_t type metadata accessor for WireframeLayerSystem()
{
  return self;
}

float32x4_t sub_1B637B6F0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62E9D50(a1, (uint64_t)v36);
  sub_1B62CA210((uint64_t)v36, (uint64_t)v40, qword_1EB97EA20);
  long long v4 = xmmword_1B6E4F370;
  long long v5 = xmmword_1B6E4F2E0;
  long long v6 = xmmword_1B6E4F320;
  long long v7 = xmmword_1B6E4F300;
  float32x4_t v32 = (float32x4_t)xmmword_1B6E4F300;
  float32x4_t v33 = (float32x4_t)xmmword_1B6E4F320;
  float32x4_t v34 = (float32x4_t)xmmword_1B6E4F2E0;
  float32x4_t v35 = (float32x4_t)xmmword_1B6E4F370;
  if ((v41 & 1) == 0)
  {
    long long v7 = v40[0];
    long long v6 = v40[1];
    long long v5 = v40[2];
    long long v4 = v40[3];
  }
  simd_float4 v28 = (simd_float4)v4;
  simd_float4 v29 = (simd_float4)v5;
  simd_float4 v30 = (simd_float4)v6;
  simd_float4 v31 = (simd_float4)v7;
  sub_1B637BA50(a1, (uint64_t)v37);
  sub_1B62CA210((uint64_t)v37, (uint64_t)v38, &qword_1EB97ECF0);
  if ((v39 & 1) == 0)
  {
    float32x4_t v32 = (float32x4_t)v38[0];
    float32x4_t v33 = (float32x4_t)v38[1];
    float32x4_t v34 = (float32x4_t)v38[2];
    float32x4_t v35 = (float32x4_t)v38[3];
  }
  v42.columns[1] = v30;
  v42.columns[0] = v31;
  v42.columns[3] = v28;
  v42.columns[2] = v29;
  simd_float4x4 v43 = __invert_f4(v42);
  v8.i32[3] = v32.i32[3];
  int32x4_t v9 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v32, v43.columns[0].f32[0]), v33, *(float32x2_t *)v43.columns[0].f32, 1), v34, (float32x4_t)v43.columns[0], 2), v35, (float32x4_t)v43.columns[0], 3);
  v43.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v32, v43.columns[1].f32[0]), v33, *(float32x2_t *)v43.columns[1].f32, 1), v34, (float32x4_t)v43.columns[1], 2), v35, (float32x4_t)v43.columns[1], 3);
  v43.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v32, v43.columns[2].f32[0]), v33, *(float32x2_t *)v43.columns[2].f32, 1), v34, (float32x4_t)v43.columns[2], 2), v35, (float32x4_t)v43.columns[2], 3);
  v43.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v32, v43.columns[3].f32[0]), v33, *(float32x2_t *)v43.columns[3].f32, 1), v34, (float32x4_t)v43.columns[3], 2), v35, (float32x4_t)v43.columns[3], 3);
  v8.f32[0] = *(float *)&v9.i32[3] - *(float *)v9.i32;
  v8.f32[1] = v43.columns[0].f32[3] - v43.columns[0].f32[0];
  v8.f32[2] = v43.columns[1].f32[3] - v43.columns[1].f32[0];
  int32x4_t v10 = (int32x4_t)vmulq_f32(v8, v8);
  v8.f32[3] = v43.columns[2].f32[3] - v43.columns[2].f32[0];
  v11.f32[0] = *(float *)&v9.i32[3] + *(float *)v9.i32;
  v11.f32[1] = v43.columns[0].f32[3] + v43.columns[0].f32[0];
  v11.f32[2] = v43.columns[1].f32[3] + v43.columns[1].f32[0];
  int32x4_t v12 = (int32x4_t)vmulq_f32(v11, v11);
  v11.f32[3] = v43.columns[2].f32[3] + v43.columns[2].f32[0];
  v13.f32[0] = *(float *)&v9.i32[3] + *(float *)&v9.i32[1];
  v13.f32[1] = v43.columns[0].f32[3] + v43.columns[0].f32[1];
  v13.f32[2] = v43.columns[1].f32[3] + v43.columns[1].f32[1];
  float32x4_t v14 = v13;
  v14.f32[3] = v43.columns[2].f32[3] + v43.columns[2].f32[1];
  int32x4_t v15 = (int32x4_t)vmulq_f32(v13, v13);
  v16.f32[0] = *(float *)&v9.i32[3] - *(float *)&v9.i32[1];
  v16.f32[1] = v43.columns[0].f32[3] - v43.columns[0].f32[1];
  v16.f32[2] = v43.columns[1].f32[3] - v43.columns[1].f32[1];
  float32x4_t v17 = v16;
  v17.f32[3] = v43.columns[2].f32[3] - v43.columns[2].f32[1];
  int32x4_t v18 = (int32x4_t)vmulq_f32(v16, v16);
  v43.columns[3].f32[0] = *(float *)&v9.i32[3] - *(float *)&v9.i32[2];
  v43.columns[3].f32[1] = v43.columns[0].f32[3] - v43.columns[0].f32[2];
  v43.columns[3].f32[2] = v43.columns[1].f32[3] - v43.columns[1].f32[2];
  int32x4_t v19 = (int32x4_t)vmulq_f32((float32x4_t)v43.columns[3], (float32x4_t)v43.columns[3]);
  v43.columns[3].f32[3] = v43.columns[2].f32[3] - v43.columns[2].f32[2];
  v43.columns[0] = (simd_float4)vzip2q_s32(v9, (int32x4_t)v43.columns[0]);
  v43.columns[0].i32[2] = v43.columns[1].i32[2];
  v43.columns[1] = (simd_float4)vmulq_f32((float32x4_t)v43.columns[0], (float32x4_t)v43.columns[0]);
  v43.columns[0].i32[3] = v43.columns[2].i32[2];
  v43.columns[2].i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v10, 2), vadd_f32(*(float32x2_t *)v10.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v10.i8, 1))).u32[0];
  *(float32x2_t *)v9.i8 = vrsqrte_f32((float32x2_t)v43.columns[2].u32[0]);
  *(float32x2_t *)v9.i8 = vmul_f32(*(float32x2_t *)v9.i8, vrsqrts_f32((float32x2_t)v43.columns[2].u32[0], vmul_f32(*(float32x2_t *)v9.i8, *(float32x2_t *)v9.i8)));
  v43.columns[2] = (simd_float4)vmulq_n_f32(v8, vmul_f32(*(float32x2_t *)v9.i8, vrsqrts_f32((float32x2_t)v43.columns[2].u32[0], vmul_f32(*(float32x2_t *)v9.i8, *(float32x2_t *)v9.i8))).f32[0]);
  v9.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v12, 2), vadd_f32(*(float32x2_t *)v12.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v12.i8, 1))).u32[0];
  float32x2_t v20 = vrsqrte_f32((float32x2_t)v9.u32[0]);
  float32x2_t v21 = vmul_f32(v20, vrsqrts_f32((float32x2_t)v9.u32[0], vmul_f32(v20, v20)));
  float32x4_t v22 = vmulq_n_f32(v11, vmul_f32(v21, vrsqrts_f32((float32x2_t)v9.u32[0], vmul_f32(v21, v21))).f32[0]);
  v21.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v15, 2), vadd_f32(*(float32x2_t *)v15.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v15.i8, 1))).u32[0];
  float32x2_t v23 = vrsqrte_f32((float32x2_t)v21.u32[0]);
  float32x2_t v24 = vmul_f32(v23, vrsqrts_f32((float32x2_t)v21.u32[0], vmul_f32(v23, v23)));
  float32x4_t v25 = vmulq_n_f32(v14, vmul_f32(v24, vrsqrts_f32((float32x2_t)v21.u32[0], vmul_f32(v24, v24))).f32[0]);
  v24.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v18, 2), vadd_f32(*(float32x2_t *)v18.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v18.i8, 1))).u32[0];
  *(float32x2_t *)v8.f32 = vrsqrte_f32((float32x2_t)v24.u32[0]);
  *(float32x2_t *)v8.f32 = vmul_f32(*(float32x2_t *)v8.f32, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(*(float32x2_t *)v8.f32, *(float32x2_t *)v8.f32)));
  float32x4_t v26 = vmulq_n_f32(v17, vmul_f32(*(float32x2_t *)v8.f32, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(*(float32x2_t *)v8.f32, *(float32x2_t *)v8.f32))).f32[0]);
  v43.columns[1].i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)v43.columns[1], 2), vadd_f32(*(float32x2_t *)v43.columns[1].f32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v43.columns[1].f32, 1))).u32[0];
  *(float32x2_t *)v8.f32 = vrsqrte_f32((float32x2_t)v43.columns[1].u32[0]);
  *(float32x2_t *)v8.f32 = vmul_f32(*(float32x2_t *)v8.f32, vrsqrts_f32((float32x2_t)v43.columns[1].u32[0], vmul_f32(*(float32x2_t *)v8.f32, *(float32x2_t *)v8.f32)));
  float32x4_t result = vmulq_n_f32((float32x4_t)v43.columns[0], vmul_f32(*(float32x2_t *)v8.f32, vrsqrts_f32((float32x2_t)v43.columns[1].u32[0], vmul_f32(*(float32x2_t *)v8.f32, *(float32x2_t *)v8.f32))).f32[0]);
  v43.columns[1].i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v19, 2), vadd_f32(*(float32x2_t *)v19.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v19.i8, 1))).u32[0];
  *(float32x2_t *)v19.i8 = vrsqrte_f32((float32x2_t)v43.columns[1].u32[0]);
  *(float32x2_t *)v19.i8 = vmul_f32(*(float32x2_t *)v19.i8, vrsqrts_f32((float32x2_t)v43.columns[1].u32[0], vmul_f32(*(float32x2_t *)v19.i8, *(float32x2_t *)v19.i8)));
  *(simd_float4 *)a2 = v43.columns[2];
  *(float32x4_t *)(a2 + 16) = v22;
  *(float32x4_t *)(a2 + 32) = v25;
  *(float32x4_t *)(a2 + 48) = v26;
  *(float32x4_t *)(a2 + 64) = result;
  *(float32x4_t *)(a2 + 80) = vmulq_n_f32((float32x4_t)v43.columns[3], vmul_f32(*(float32x2_t *)v19.i8, vrsqrts_f32((float32x2_t)v43.columns[1].u32[0], vmul_f32(*(float32x2_t *)v19.i8, *(float32x2_t *)v19.i8))).f32[0]);
  return result;
}

void *sub_1B637BA50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B633C400(a1, (void *(*)(_OWORD *__return_ptr, void, __n128))sub_1B633FE90, a2);
}

uint64_t sub_1B637BA68()
{
  if (qword_1EB97E450 != -1) {
    swift_once();
  }
  v7[0] = xmmword_1EB997968;
  v7[1] = unk_1EB997978;
  uint64_t v8 = qword_1EB997988;
  sub_1B62C9DA8(v0, (uint64_t)v7, 0x200000000, v5);
  sub_1B62CA210((uint64_t)v5, (uint64_t)v6, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v6[0]) {
    return sub_1B637BBB4();
  }
  v6[8] = v6[2];
  v6[9] = v6[3];
  void v6[10] = v6[4];
  v6[11] = v6[5];
  void v6[6] = v6[0];
  v6[7] = v6[1];
  sub_1B637BED0(0);
  uint64_t v2 = v1;
  swift_retain();
  uint64_t v3 = sub_1B62DE2C8(v2);
  swift_release();
  sub_1B632F1C4(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return v3;
}

uint64_t sub_1B637BBB4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1
    && (sub_1B62CA210(v1 + 624, (uint64_t)v15, (unint64_t *)&unk_1EB9852B0),
        sub_1B62CA210((uint64_t)v15, (uint64_t)v17, (unint64_t *)&unk_1EB9852B0),
        sub_1B6388C10((uint64_t *)v17) != 1))
  {
    uint64_t v4 = *(void *)(v1 + 632);
    uint64_t ObjectType = swift_getObjectType();
    long long v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 144);
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v2 = v6(ObjectType, v4);
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v3 = v2 & 0xFF00000000;
    uint64_t v2 = v2;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0x200000000;
  }
  if (qword_1EB97E480 != -1) {
    swift_once();
  }
  v30[0] = xmmword_1EB997BA0;
  v30[1] = *(_OWORD *)algn_1EB997BB0;
  uint64_t v31 = qword_1EB997BC0;
  uint64_t v7 = v3 | v2;
  sub_1B62C9DA8(v0, (uint64_t)v30, v7, v18);
  sub_1B62CA210((uint64_t)v18, (uint64_t)v15, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v15[0]
    && (_OWORD v17[2] = v15[2], v17[3] = v15[3], v17[4] = v15[4], v17[5] = v16, v17[0] = v15[0], v17[1] = v15[1], (void)v16))
  {
    sub_1B637BED0(0);
    uint64_t v9 = v8;
    swift_retain();
    uint64_t v10 = sub_1B62DE2C8(v9);
    swift_release();
    float32x4_t v11 = v18;
  }
  else
  {
    if (qword_1E9DCC558 != -1) {
      swift_once();
    }
    v28[0] = xmmword_1E9E49588;
    v28[1] = unk_1E9E49598;
    uint64_t v29 = qword_1E9E495A8;
    sub_1B62C9DA8(v0, (uint64_t)v28, v7, v19);
    sub_1B62CA210((uint64_t)v19, (uint64_t)v20, (unint64_t *)&qword_1EB97DC50);
    if (*(void *)&v20[0])
    {
      long long v24 = v20[2];
      long long v25 = v20[3];
      long long v26 = v20[4];
      long long v27 = v21;
      long long v22 = v20[0];
      long long v23 = v20[1];
      if ((void)v21)
      {
        sub_1B637BED0(0);
        uint64_t v13 = v12;
        swift_retain();
        uint64_t v10 = sub_1B62DE2C8(v13);
        swift_release();
        sub_1B632F170(v18);
      }
      else
      {
        sub_1B632F170(v18);
        uint64_t v10 = 0;
      }
      float32x4_t v11 = v19;
    }
    else
    {
      uint64_t v10 = 0;
      float32x4_t v11 = v18;
    }
  }
  sub_1B632F170(v11);
  return v10;
}

uint64_t sub_1B637BED0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 56);
  if (!v2) {
    return 0xFFFFFFFFLL;
  }
  for (uint64_t i = *(void *)(v1 + 40); ; i += 48)
  {
    uint64_t v4 = *(unsigned int *)(i + 8);
    if (a1 >= v4 && (v4 - *(_DWORD *)i + *(_DWORD *)(i + 4)) > a1) {
      break;
    }
    if (!--v2) {
      return 0xFFFFFFFFLL;
    }
  }
  return *(unsigned int *)(*(void *)(i + 40) + 188);
}

uint64_t sub_1B637BF40()
{
  uint64_t v1 = OBJC_IVAR____TtC3VFX13EntityManager_currentState;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_currentState);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_currentState) = 3;
  if (v2 != 3)
  {
    uint64_t v3 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v3)
    {
      swift_retain();
      v3(v0);
      sub_1B62C6A50((uint64_t)v3);
    }
  }
  uint64_t v4 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC3VFX13EntityManager_scheduler) + 24);
  uint64_t result = swift_retain();
  if (v4)
  {
    uint64_t v7 = (uint64_t *)thread_worker_index(&thread_worker_index, v6);
    uint64_t v8 = *v7;
    *uint64_t v7 = 0;
    swift_retain();
    sub_1B62F38EC(5);
    *uint64_t v7 = v8;
    swift_release();
    uint64_t result = swift_release();
  }
  int v9 = *(unsigned __int8 *)(v0 + v1);
  *(unsigned char *)(v0 + v1) = 4;
  if (v9 != 4)
  {
    uint64_t v10 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC3VFX13EntityManager_stateDidChangeFn);
    if (v10)
    {
      swift_retain();
      v10(v0);
      return sub_1B62C6A50((uint64_t)v10);
    }
  }
  return result;
}

uint64_t sub_1B637C08C()
{
  if (*(void *)(*(void *)(v0 + 40) + 16))
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v2 = *(void *)(v0 + 40);
    *(void *)(v0 + 40) = 0x8000000000000000;
    sub_1B637C114();
    sub_1B6E32B78();
    *(void *)(v0 + 40) = v2;
    swift_bridgeObjectRelease();
  }
  return sub_1B637C18C(1);
}

void sub_1B637C114()
{
  if (!qword_1EB97D890)
  {
    sub_1B62F3064(255, (unint64_t *)&qword_1EB97D7F0);
    unint64_t v0 = sub_1B6E32B88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D890);
    }
  }
}

uint64_t sub_1B637C18C(char a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    uint64_t v3 = *(void *)(v1 + 48);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v7 = *(void *)(v4 + 64);
    uint64_t v6 = v4 + 64;
    uint64_t v5 = v7;
    uint64_t v8 = 1 << *(unsigned char *)(v3 + 32);
    uint64_t v9 = -1;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    unint64_t v10 = v9 & v5;
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    if (!v10) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v12 << 6);
    while (1)
    {
      uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v14);
      int32x4_t v18 = *(void **)(v2 + 40);
      swift_unknownObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v2 + 40) = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        int32x4_t v18 = sub_1B637C5BC(0, v18[2] + 1, 1, v18);
        *(void *)(v2 + 40) = v18;
      }
      unint64_t v21 = v18[2];
      unint64_t v20 = v18[3];
      if (v21 >= v20 >> 1) {
        int32x4_t v18 = sub_1B637C5BC(v20 > 1, v21 + 1, 1, v18);
      }
      v18[2] = v21 + 1;
      long long v22 = &v18[2 * v21];
      v22[4] = v17;
      v22[5] = 0;
      *(void *)(v2 + 40) = v18;
      swift_unknownObjectRelease();
      if (v10) {
        goto LABEL_5;
      }
LABEL_6:
      uint64_t v15 = v12 + 1;
      if (v12 + 1 >= v11) {
        goto LABEL_25;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v12 + 2;
        if (v12 + 2 >= v11) {
          goto LABEL_25;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v12 + 3;
          if (v12 + 3 >= v11) {
            goto LABEL_25;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v15);
          if (!v16)
          {
            uint64_t v15 = v12 + 4;
            if (v12 + 4 >= v11) {
              goto LABEL_25;
            }
            unint64_t v16 = *(void *)(v6 + 8 * v15);
            if (!v16) {
              break;
            }
          }
        }
      }
LABEL_17:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
      uint64_t v12 = v15;
    }
    while (v11 - 5 != v12)
    {
      unint64_t v16 = *(void *)(v3 + 104 + 8 * v12++);
      if (v16)
      {
        uint64_t v15 = v12 + 4;
        goto LABEL_17;
      }
    }
LABEL_25:
    swift_release();
    if (*(void *)(*(void *)(v2 + 48) + 16))
    {
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v26 = *(void *)(v2 + 48);
      *(void *)(v2 + 48) = 0x8000000000000000;
      sub_1B637C448();
      sub_1B6E32B78();
      *(void *)(v2 + 48) = v26;
      swift_bridgeObjectRelease();
    }
    swift_retain();
    uint64_t v24 = swift_bridgeObjectRetain();
    long long v25 = sub_1B637C4B0(v24);
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v2 + 40) = v25;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(v1 + 40) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v1 + 48) = MEMORY[0x1E4FBC868];
  }
  return result;
}

void sub_1B637C448()
{
  if (!qword_1EB97D898)
  {
    sub_1B6AB24D4();
    unint64_t v0 = sub_1B6E32B88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D898);
    }
  }
}

void *sub_1B637C4B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v5 = *v2;
    if (*v2 <= 99)
    {
      uint64_t v6 = *(v2 - 1);
      swift_unknownObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1B637C5BC(0, v3[2] + 1, 1, v3);
      }
      unint64_t v8 = v3[2];
      unint64_t v7 = v3[3];
      if (v8 >= v7 >> 1) {
        uint64_t v3 = sub_1B637C5BC(v7 > 1, v8 + 1, 1, v3);
      }
      v3[2] = v8 + 1;
      uint64_t v4 = &v3[2 * v8];
      v4[4] = v6;
      v4[5] = v5 + 1;
    }
    v2 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1B637C5BC(char a1, uint64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = a4[2];
  if (a2 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62CB1E8(0, &qword_1EB97D8D0, (uint64_t)&type metadata for NoHeapTextureAllocator.UnusedTexture, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (void *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    _OWORD v11[2] = v9;
    v11[3] = 2 * (v13 >> 4);
    unint64_t v14 = v11 + 4;
    if (a1) {
      goto LABEL_14;
    }
LABEL_22:
    sub_1B637C6D4(0, v9, (unint64_t)v14, (uint64_t)a4);
    goto LABEL_23;
  }
  int64_t v11 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if ((a1 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_14:
  if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
    memmove(v14, a4 + 4, 16 * v9);
  }
  a4[2] = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B637C6D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a2 - a1 < 0
    || ((unint64_t v4 = a3 + 16 * (a2 - a1), a4 + 32 + 16 * a1 < v4) ? (v5 = a4 + 32 + 16 * a2 > a3) : (v5 = 0), v5))
  {
    uint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    swift_arrayInitWithCopy();
    return v4;
  }
  return result;
}

unint64_t sub_1B637C7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = a1;
  uint64_t v10 = sub_1B637FE60(a1);
  if (v11)
  {
    uint64_t v28 = a3;
    uint64_t v13 = *(void *)(v4 + 72);
    uint64_t v12 = *(void *)(v13 + 16);
    int64_t v14 = *(void *)(a4 + 16);
    uint64_t v15 = MEMORY[0x1E4FBC860];
    if (v14)
    {
      uint64_t v25 = *(void *)(v13 + 16);
      uint64_t v26 = v9;
      uint64_t v27 = a2;
      uint64_t v30 = MEMORY[0x1E4FBC860];
      sub_1B639780C(0, v14, 0);
      uint64_t v16 = a4 + 32;
      uint64_t v15 = v30;
      do
      {
        sub_1B62C1550(v16, (uint64_t)v29);
        sub_1B62C14BC(v29, v29[3]);
        uint64_t DynamicType = swift_getDynamicType();
        uint64_t v18 = v29[4];
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B639780C(0, *(void *)(v15 + 16) + 1, 1);
          uint64_t v15 = v30;
        }
        unint64_t v20 = *(void *)(v15 + 16);
        unint64_t v19 = *(void *)(v15 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1B639780C(v19 > 1, v20 + 1, 1);
          uint64_t v15 = v30;
        }
        *(void *)(v15 + 16) = v20 + 1;
        uint64_t v21 = v15 + 16 * v20;
        *(void *)(v21 + 32) = DynamicType;
        *(void *)(v21 + 40) = v18;
        v16 += 40;
        --v14;
      }
      while (v14);
      uint64_t v9 = v26;
      a2 = v27;
      uint64_t v12 = v25;
    }
    type metadata accessor for EntityFamily();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1B637E560(v12, v28, v15);
    swift_retain();
    sub_1B6E32A08();
    sub_1B6E32A68();
    sub_1B6E32A78();
    sub_1B6E32A28();
    swift_release();
  }
  else
  {
    uint64_t v12 = v10;
  }
  uint64_t v22 = *(void *)(*(void *)(v5 + 72) + 8 * v12 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v23 = sub_1B637CA18((uint64_t *)(v5 + 80), v22, v9, a2, a4, v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v23;
}

uint64_t type metadata accessor for EntityFamily()
{
  return self;
}

unint64_t sub_1B637CA18(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v11 = sub_1B637CB68();
  if ((v11 & 0x100000000) != 0)
  {
    uint64_t v14 = *a1;
    unint64_t v12 = *(unsigned int *)(*a1 + 16);
    int v20 = *(_DWORD *)(*a1 + 16);
    sub_1B637CBEC(&v20, a2, a4, a5, a6, &v19);
    uint64_t v13 = v19;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B6C3C414(0, *(void *)(v14 + 16) + 1, 1);
      uint64_t v14 = *a1;
    }
    unint64_t v15 = *(void *)(v14 + 16);
    unint64_t v17 = *(void *)(v14 + 24);
    if (v15 >= v17 >> 1)
    {
      sub_1B6C3C414(v17 > 1, v15 + 1, 1);
      uint64_t v14 = *a1;
    }
    *(void *)(v14 + 16) = v15 + 1;
  }
  else
  {
    unint64_t v12 = v11;
    int v20 = v11;
    sub_1B637CBEC(&v20, a2, a4, a5, a6, &v19);
    uint64_t v13 = v19;
    uint64_t v14 = *a1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_1B6D671E0(v14);
    }
    unint64_t v15 = (int)v12;
  }
  *(void *)(v14 + 8 * v15 + 32) = v13;
  *a1 = v14;
  return v12;
}

unint64_t sub_1B637CB68()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_1B6D671F4(v1);
    }
    uint64_t v3 = *(void *)(v1 + 16) - 1;
    uint64_t v4 = *(unsigned int *)(v1 + 4 * v3 + 32);
    *(void *)(v1 + 16) = v3;
    uint64_t *v0 = v1;
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4 | ((unint64_t)(v2 == 0) << 32);
}

uint64_t sub_1B637CBEC@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  int v11 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = 0x8000000000000000;
  sub_1B637CD94(v11, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(a2 + 16) = v21;
  swift_bridgeObjectRelease();
  type metadata accessor for EntityClass();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1B637D194(a2, v11, a4);
  uint64_t result = swift_release();
  unint64_t v15 = v11;
  uint64_t v16 = *(void **)(a5 + 96);
  if (v16[2] <= (int64_t)v15)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(a5 + 96) = v16;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B68C0888(0, v16[2] + 1, 1, v16);
        uint64_t v16 = (void *)result;
        *(void *)(a5 + 96) = result;
      }
      unint64_t v19 = v16[2];
      unint64_t v18 = v16[3];
      if (v19 >= v18 >> 1)
      {
        uint64_t result = (uint64_t)sub_1B68C0888(v18 > 1, v19 + 1, 1, v16);
        uint64_t v16 = (void *)result;
        *(void *)(a5 + 96) = result;
      }
      void v16[2] = v19 + 1;
      int v20 = &v16[5 * v19];
      v20[4] = v17;
      _OWORD v20[5] = 0;
      v20[6] = v17;
      *((unsigned char *)v20 + 56) = 0;
      *(void *)((char *)v20 + 60) = 0xFFFFFFFF00000000;
      *((_DWORD *)v20 + 17) = -1;
      uint64_t v16 = *(void **)(a5 + 96);
    }
    while (v16[2] <= v15);
  }
  *a6 = v13;
  return result;
}

uint64_t sub_1B637CD94(int a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  int64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t result = v8[2] + ((v10 & 1) == 0);
  if (v12 >= result && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      *(_DWORD *)(v14[7] + 4 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= result && (a3 & 1) == 0)
  {
    uint64_t result = sub_1B6AD49D8();
    goto LABEL_6;
  }
  sub_1B637CEE0(result, a3 & 1);
  uint64_t result = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v15 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = result;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B637CEA4(v9, a2, a1, v14);
}

unint64_t sub_1B637CEA4(unint64_t result, uint64_t a2, int a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(_DWORD *)(a4[7] + 4 * result) = a3;
  ++a4[2];
  return result;
}

uint64_t sub_1B637CEE0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1B62BC098(0, (unint64_t *)&qword_1EB9807F8);
  uint64_t v6 = sub_1B6E32C38();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_33;
  }
  char v32 = a2;
  uint64_t v8 = 0;
  unint64_t v9 = (uint64_t *)(v5 + 64);
  uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v29 = -1 << v10;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v5 + 64);
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v31 = v3;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v6 + 64;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_20;
    }
    uint64_t v18 = v8 + 1;
    if (v8 + 1 >= v13) {
      goto LABEL_27;
    }
    unint64_t v19 = v9[v18];
    if (!v19)
    {
      uint64_t v18 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_27;
      }
      unint64_t v19 = v9[v18];
      if (!v19)
      {
        uint64_t v18 = v8 + 3;
        if (v8 + 3 >= v13) {
          goto LABEL_27;
        }
        unint64_t v19 = v9[v18];
        if (!v19) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v8 = v18;
LABEL_20:
    uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    int v21 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v17);
    uint64_t v22 = sub_1B6E33908();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v14 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v15 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v20;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v15) = v21;
    ++*(void *)(v7 + 16);
  }
  while (v13 - 4 != v8)
  {
    unint64_t v19 = *(void *)(v5 + 96 + 8 * v8++);
    if (v19)
    {
      uint64_t v18 = v8 + 3;
      goto LABEL_19;
    }
  }
LABEL_27:
  if (v32)
  {
    uint64_t v3 = v31;
    if (v30 >= 64) {
      bzero((void *)(v5 + 64), 8 * v13);
    }
    else {
      *unint64_t v9 = v29;
    }
    *(void *)(v5 + 16) = 0;
LABEL_33:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v31;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t type metadata accessor for EntityClass()
{
  return self;
}

uint64_t sub_1B637D194(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  *(void *)(v3 + 16) = a1;
  char v8 = sub_1B637D6B4((uint64_t)&type metadata for AnonymousEntity);
  *(unsigned char *)(v3 + 208) = v8 & 1;
  swift_retain();
  uint64_t v9 = sub_1B637DFB4(a3);
  if (v10)
  {
    uint64_t v19 = *(void *)(a1 + 64);
    uint64_t v20 = *(void *)(a1 + 72);
    long long v47 = *(_OWORD *)(a1 + 96);
    long long v48 = *(_OWORD *)(a1 + 80);
    uint64_t v17 = *(void *)(a1 + 112);
    char v18 = *(unsigned char *)(a1 + 120);
    *(void *)(v4 + 24) = *(void *)(a1 + 56);
    *(void *)(v4 + 32) = v19;
    *(void *)(v4 + 40) = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    long long v16 = v47;
    long long v15 = v48;
  }
  else
  {
    uint64_t v11 = v9;
    uint64_t v12 = swift_retain();
    uint64_t v13 = sub_1B637ED68(v12);
    swift_release();
    char v8 = *(unsigned char *)(v4 + 208);
    sub_1B62CEB80(v13, v11, 0, v8 ^ 1, (uint64_t)&v49);
    uint64_t v14 = *(void *)v50;
    long long v15 = *(_OWORD *)&v50[8];
    long long v16 = v51;
    uint64_t v17 = v52;
    char v18 = BYTE8(v52);
    *(__n128 *)(v4 + 24) = v49;
    *(void *)(v4 + 40) = v14;
  }
  *(_OWORD *)(v4 + 48) = v15;
  *(_OWORD *)(v4 + 64) = v16;
  *(void *)(v4 + 80) = v17;
  *(unsigned char *)(v4 + 88) = v18;
  *(_DWORD *)(v4 + 204) = a2;
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v46 = a3;
    swift_retain();
    int v23 = 0;
    char v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = v21 + 40;
    while (2)
    {
      uint64_t v27 = v26 + 16 * v25;
      uint64_t v28 = v25;
      while (1)
      {
        uint64_t v29 = *(void *)(v27 - 8);
        uint64_t v25 = v28 + 1;
        uint64_t v30 = *(void *)(*(void *)v27 + 8);
        v23 |= (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 48))(v29, v30);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v30 + 64))(v29, v30)) {
          break;
        }
        v27 += 16;
        ++v28;
        if (v22 == v25)
        {
          swift_release();
          char v31 = v24;
          if (*(unsigned char *)(v4 + 208)) {
            goto LABEL_14;
          }
LABEL_12:
          a3 = v46;
          goto LABEL_23;
        }
      }
      char v24 = 1;
      uint64_t v26 = v21 + 40;
      if (v22 - 1 != v28) {
        continue;
      }
      break;
    }
    swift_release();
    char v31 = 1;
    if (*(unsigned char *)(v4 + 208) != 1) {
      goto LABEL_12;
    }
LABEL_14:
    *(_WORD *)(v4 + 212) = 0;
    a3 = v46;
    if (v23)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      v49.n128_u64[0] = 0;
      v49.n128_u64[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      type metadata accessor for EntityFamily();
      sub_1B6E32B18();
      __n128 v32 = v49;
      int v33 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v49.n128_u64[0] = 0;
      swift_retain();
      sub_1B6B33E34(v33, (uint64_t *)&v49, v32.n128_i64[0], v32.n128_i64[1]);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else if (v8)
  {
    char v31 = 0;
    *(_WORD *)(v4 + 212) = 0;
  }
  else
  {
    LOBYTE(v23) = 0;
    char v31 = 0;
LABEL_23:
    *(unsigned char *)(v4 + 212) = v23 & 1;
    *(unsigned char *)(v4 + 213) = sub_1B637D6B4((uint64_t)&type metadata for PropagateDirtiness);
  }
  *(unsigned char *)(v4 + 200) = v31 & 1;
  *(unsigned char *)(v4 + 209) = sub_1B637D6B4((uint64_t)&type metadata for Tombstone);
  *(unsigned char *)(v4 + 210) = sub_1B637D6B4((uint64_t)&type metadata for UnstableOrdering);
  *(unsigned char *)(v4 + 211) = sub_1B637D6B4((uint64_t)&type metadata for MonoChunk);
  uint64_t v34 = swift_bridgeObjectRetain();
  sub_1B637D72C(v34, &v49);
  uint64_t v35 = *(void *)&v50[16];
  uint64_t v36 = v53;
  char v37 = v54;
  uint64_t v38 = v55;
  long long v39 = *(_OWORD *)v50;
  *(__n128 *)(v4 + 96) = v49;
  *(_OWORD *)(v4 + 112) = v39;
  *(void *)(v4 + 128) = v35;
  *(_OWORD *)(v4 + 136) = v51;
  *(_OWORD *)(v4 + 152) = v52;
  *(void *)(v4 + 168) = v36;
  *(unsigned char *)(v4 + 176) = v37;
  *(void *)(v4 + 184) = v38;
  uint64_t v40 = *(void *)(a3 + 16);
  if (v40)
  {
    uint64_t v41 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v42 = 0;
    do
    {
      sub_1B62C1550(v41, (uint64_t)&v49);
      uint64_t v43 = *(void *)&v50[8];
      uint64_t v44 = *(void *)&v50[16];
      sub_1B62C14BC(&v49, *(uint64_t *)&v50[8]);
      v42 ^= (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v49);
      v41 += 40;
      --v40;
    }
    while (v40);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v42 = 0;
  }
  *(void *)(v4 + 192) = v42;
  sub_1B637E0C8();
  if (qword_1EB97EAB8 != -1) {
    swift_once();
  }
  vfx_counters.add(_:_:)(dword_1EB997998, 1);
  return v4;
}

BOOL sub_1B637D6B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 + 128);
  if (*(void *)(v3 + 16) && (unint64_t v5 = sub_1B62C1A30(a1), (v6 & 1) != 0)) {
    return *(void *)(*(void *)(v2 + 24) + 16 * *(void *)(*(void *)(v3 + 56) + 8 * v5) + 32) == a1;
  }
  else {
    return 0;
  }
}

Swift::Void __swiftcall vfx_counters.add(_:_:)(Swift::UInt32 a1, Swift::Int a2)
{
  vfx_counters_update(v2, a1, (double)a2);
}

__n128 sub_1B637D72C@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2 = a1;
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v58 = MEMORY[0x1E4FBC860];
    sub_1B637ED84(0, v3, 0);
    uint64_t v5 = v2 + 32;
    uint64_t v6 = v58;
    int64_t v7 = v3;
    do
    {
      sub_1B62C1550(v5, (uint64_t)&v60);
      sub_1B62C14BC(&v60, v62);
      uint64_t DynamicType = swift_getDynamicType();
      unint64_t v9 = v63;
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B637ED84(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v58;
      }
      unint64_t v11 = *(void *)(v6 + 16);
      unint64_t v10 = *(void *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1B637ED84(v10 > 1, v11 + 1, 1);
        uint64_t v6 = v58;
      }
      uint64_t v12 = *(void *)(v9 + 8);
      *(void *)(v6 + 16) = v11 + 1;
      uint64_t v13 = v6 + 16 * v11;
      *(void *)(v13 + 32) = DynamicType;
      *(void *)(v13 + 40) = v12;
      v5 += 40;
      --v7;
    }
    while (v7);
    uint64_t v2 = a1;
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  sub_1B62CEB80(v6, 0, 256, 0, (uint64_t)&v60);
  uint64_t v14 = v62;
  unint64_t v51 = v63;
  unint64_t v52 = v61;
  unint64_t v49 = v65;
  unint64_t v50 = v64;
  unint64_t v48 = v66;
  unsigned __int8 v68 = v67;
  __n128 v53 = v60;
  unint64_t v15 = v60.n128_u64[0];
  swift_retain();
  uint64_t v16 = swift_slowAlloc();
  uint64_t v17 = v16;
  uint64_t v55 = v14;
  if (v3)
  {
    uint64_t v57 = v16;
    uint64_t v59 = v4;
    sub_1B63977B8(0, v3, 0);
    uint64_t v18 = v2 + 32;
    do
    {
      sub_1B62C1550(v18, (uint64_t)&v60);
      sub_1B62C14BC(&v60, v62);
      uint64_t v19 = swift_getDynamicType();
      uint64_t v20 = v62;
      unint64_t v21 = v63;
      sub_1B62C14BC(&v60, v62);
      uint64_t v22 = (*(uint64_t (**)(uint64_t, unint64_t))(v21 + 16))(v20, v21);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B63977B8(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v59;
      }
      unint64_t v24 = *(void *)(v4 + 16);
      unint64_t v23 = *(void *)(v4 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1B63977B8(v23 > 1, v24 + 1, 1);
        uint64_t v4 = v59;
      }
      *(void *)(v4 + 16) = v24 + 1;
      uint64_t v25 = v4 + 16 * v24;
      *(void *)(v25 + 32) = v19;
      *(void *)(v25 + 40) = v22;
      v18 += 40;
      --v3;
    }
    while (v3);
    uint64_t v14 = v55;
    uint64_t v17 = v57;
    goto LABEL_19;
  }
  if (*(void *)(v4 + 16))
  {
LABEL_19:
    sub_1B639665C();
    uint64_t v26 = sub_1B6E32C58();
    goto LABEL_20;
  }
  uint64_t v26 = MEMORY[0x1E4FBC868];
LABEL_20:
  v60.n128_u64[0] = v26;
  uint64_t v27 = (void *)swift_bridgeObjectRetain();
  sub_1B637DB84(v27, 1, &v60);
  uint64_t v28 = v17 + v14;
  swift_bridgeObjectRelease();
  unint64_t v29 = v60.n128_u64[0];
  uint64_t v30 = *(void *)(v15 + 16);
  if (v30)
  {
    unint64_t v47 = v60.n128_u64[0];
    uint64_t v31 = 0;
    do
    {
      uint64_t v32 = *(void *)(v15 + v31 + 32);
      uint64_t v33 = *(void *)(v15 + v31 + 56);
      uint64_t v34 = (void *)(v2 + v31 + 32);
      uint64_t v35 = v28;
      unint64_t v36 = v15;
      uint64_t v37 = v17;
      uint64_t v38 = *(void *)(v2 + v31 + 56);
      uint64_t v39 = *(void *)(v2 + v31 + 64);
      uint64_t v40 = sub_1B62C14BC(v34, v38);
      uint64_t v62 = v38;
      unint64_t v41 = *(void *)(v39 + 8);
      uint64_t v2 = a1;
      unint64_t v63 = v41;
      uint64_t v42 = sub_1B62C12C4((uint64_t *)&v60);
      uint64_t v43 = *(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v38 - 8) + 16);
      uint64_t v44 = v38;
      uint64_t v17 = v37;
      unint64_t v15 = v36;
      uint64_t v28 = v35;
      v43(v42, v40, v44);
      sub_1B637DEA8((uint64_t)&v60, v17, v35, v33, v32);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v60);
      v31 += 40;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    uint64_t v14 = v55;
    unint64_t v29 = v47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_release();
  unsigned __int8 v45 = v68;
  a2->n128_u64[0] = v17;
  a2->n128_u64[1] = v28;
  __n128 result = v53;
  a2[1] = v53;
  a2[2].n128_u64[0] = v52;
  a2[2].n128_u64[1] = v14;
  a2[3].n128_u64[0] = v51;
  a2[3].n128_u64[1] = v50;
  a2[4].n128_u64[0] = v49;
  a2[4].n128_u64[1] = v48;
  a2[5].n128_u8[0] = v45;
  a2[5].n128_u64[1] = v29;
  return result;
}

void sub_1B637DB84(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = a1[4];
  uint64_t v30 = a1[5];
  swift_bridgeObjectRetain();
  char v8 = (void *)*a3;
  unint64_t v10 = sub_1B62C1A30(v7);
  char v11 = v9;
  uint64_t v12 = v8[2] + ((v9 & 1) == 0);
  if (v8[3] >= v12)
  {
    if (a2)
    {
      if (v9) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1B6ACB3D8();
      if (v11) {
        goto LABEL_9;
      }
    }
LABEL_12:
    uint64_t v17 = (void *)*a3;
    *(void *)(*a3 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    uint64_t v18 = 8 * v10;
    *(void *)(v17[6] + v18) = v7;
    *(void *)(v17[7] + v18) = v30;
    ++v17[2];
    uint64_t v19 = v4 - 1;
    if (v4 == 1)
    {
LABEL_18:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v20 = a1 + 7;
    while (1)
    {
      uint64_t v21 = *(v20 - 1);
      uint64_t v22 = *v20;
      unint64_t v23 = (void *)*a3;
      unint64_t v24 = sub_1B62C1A30(v21);
      char v26 = v25;
      if (v23[3] < (int64_t)(v23[2] + ((v25 & 1) == 0)))
      {
        sub_1B6AB4EA0(v23[2] + ((v25 & 1) == 0), 1);
        unint64_t v24 = sub_1B62C1A30(v21);
        if ((v26 & 1) != (v27 & 1)) {
          goto LABEL_19;
        }
      }
      if (v26) {
        goto LABEL_9;
      }
      v20 += 2;
      uint64_t v28 = (void *)*a3;
      *(void *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
      uint64_t v29 = 8 * v24;
      *(void *)(v28[6] + v29) = v21;
      *(void *)(v28[7] + v29) = v22;
      ++v28[2];
      if (!--v19) {
        goto LABEL_18;
      }
    }
  }
  sub_1B6AB4EA0(v12, a2 & 1);
  unint64_t v13 = sub_1B62C1A30(v7);
  if ((v11 & 1) == (v14 & 1))
  {
    unint64_t v10 = v13;
    if ((v11 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_9:
    unint64_t v15 = (void *)swift_allocError();
    swift_willThrow();
    id v16 = v15;
    sub_1B666BD6C();
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_20;
  }
LABEL_19:
  sub_1B6E33838();
  __break(1u);
LABEL_20:
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E32B18();
  sub_1B6E31948();
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B637DEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a5 - 8);
  size_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](a1, a2);
  sub_1B62C1550(v10, (uint64_t)v13);
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97FFF0);
  swift_dynamicCast();
  memcpy((void *)(a2 + a4), &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v9);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(&v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a5);
}

uint64_t sub_1B637DFB4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 + 128);
  if (!*(void *)(v3 + 16)) {
    return 0;
  }
  unint64_t v5 = sub_1B62C1A30((uint64_t)&type metadata for ClassSettings);
  if ((v6 & 1) == 0) {
    return 0;
  }
  if (*(ValueMetadata **)(*(void *)(v2 + 24) + 16 * *(void *)(*(void *)(v3 + 56) + 8 * v5) + 32) != &type metadata for ClassSettings) {
    return 0;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1B62C1550(v9, (uint64_t)v11);
    sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
    if (swift_dynamicCast()) {
      break;
    }
    v9 += 40;
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B637E0C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2 + 40;
    while (sub_1B62CA808(*(void *)(v4 - 8)))
    {
      v4 += 16;
      if (!--v3) {
        goto LABEL_5;
      }
    }
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v5 = *(void *)(v1 + 32);
  _OWORD v13[2] = sub_1B6E31EF8();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_retain();
    uint64_t v7 = v5 + 40;
    while (1)
    {
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(void *)(*(void *)v7 + 8);
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
      uint64_t v11 = v10(v8, v9);
      if ((sub_1B637E330(v13, v11) & 1) == 0) {
        break;
      }
      v7 += 16;
      if (!--v6)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_1B6E328C8();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    v10(v8, v9);
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B663C11C();
    swift_retain();
    sub_1B6E32A18();
    sub_1B6E31948();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
    return result;
  }
LABEL_10:

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B637E330(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1B6E33908();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1B637E42C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1B637E42C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1B67EB144();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = sub_1B67EFF10(&qword_1EB980678, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB560]);
        goto LABEL_14;
      }
      sub_1B67F1704();
    }
    uint64_t v8 = *v3;
    uint64_t result = sub_1B6E33908();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = *(void *)(v8 + 48);
      if (*(void *)(v10 + 8 * a2) == v5)
      {
LABEL_13:
        uint64_t result = sub_1B6E33828();
        __break(1u);
      }
      else
      {
        uint64_t v11 = ~v9;
        while (1)
        {
          a2 = (a2 + 1) & v11;
          if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
            break;
          }
          if (*(void *)(v10 + 8 * a2) == v5) {
            goto LABEL_13;
          }
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  ++*(void *)(v12 + 16);
  return result;
}

uint64_t sub_1B637E560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = MEMORY[0x1E4FBC860];
  v3[2] = sub_1B637F0F8(MEMORY[0x1E4FBC860]);
  v3[16] = sub_1B637F1B8(v7);
  v3[17] = a1;
  uint64_t v8 = v3 + 16;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = v10 + v9;
  if (v10 + v9 < 0)
  {
LABEL_50:
    sub_1B6E32BD8();
    __break(1u);
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    if (v11)
    {
      sub_1B637ECDC(0, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1B6E31C98();
      *(void *)(v12 + 16) = v11;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
    uint64_t v73 = 0;
    *(void *)&long long v67 = v12 + 32;
    *((void *)&v67 + 1) = v10 + v9;
    sub_1B637F5B8(&v67, &v73, a2, a3, v9, v10);
    *(void *)(v12 + 16) = v73;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3[3] = v12;
    v3[4] = a2;
    v3[5] = a3;
    uint64_t v65 = a2;
    unint64_t v66 = v3;
    if (v9)
    {
      uint64_t v64 = v12;
      *(void *)&long long v67 = v7;
      swift_bridgeObjectRetain();
      sub_1B637EF00(0, v9, 0);
      uint64_t v13 = a2;
      uint64_t v14 = v67;
      uint64_t v15 = v13 + 40;
      do
      {
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v17 = *(void *)(*(void *)v15 + 8);
        uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
        uint64_t v20 = v19;
        *(void *)&long long v67 = v14;
        unint64_t v22 = *(void *)(v14 + 16);
        unint64_t v21 = *(void *)(v14 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1B637EF00(v21 > 1, v22 + 1, 1);
          uint64_t v14 = v67;
        }
        *(void *)(v14 + 16) = v22 + 1;
        unint64_t v23 = (void *)(v14 + 32 * v22);
        v23[4] = v16;
        __n128 v23[5] = v17;
        v23[6] = v18;
        v23[7] = v20;
        v15 += 16;
        --v9;
      }
      while (v9);
      uint64_t v12 = v64;
      uint64_t v8 = v3 + 16;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = MEMORY[0x1E4FBC860];
    }
    v3[6] = v14;
    uint64_t v24 = *(void *)(v12 + 16);
    if (v24)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = 0;
      uint64_t v26 = 32;
      do
      {
        v25 ^= sub_1B6E31F28();
        v26 += 16;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = 0;
    }
    v3[18] = v25;
    uint64_t v27 = v3[3];
    uint64_t v28 = *(void *)(v27 + 16);
    sub_1B637F094();
    sub_1B6E314F8();
    if (v28)
    {
      swift_retain();
      uint64_t v29 = 0;
      uint64_t v30 = (uint64_t *)(v27 + 40);
      while (1)
      {
        uint64_t v32 = *(v30 - 1);
        uint64_t v33 = *v30;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v67 = *v8;
        uint64_t v35 = v67;
        unint64_t v36 = v8;
        void *v8 = 0x8000000000000000;
        unint64_t v38 = sub_1B62C1A30(v32);
        char v39 = v37;
        uint64_t v40 = *(void *)(v35 + 16) + ((v37 & 1) == 0);
        if (*(void *)(v35 + 24) >= v40)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v43 = (void *)v67;
            if (v37) {
              goto LABEL_28;
            }
          }
          else
          {
            sub_1B6ACB3D8();
            uint64_t v43 = (void *)v67;
            if (v39) {
              goto LABEL_28;
            }
          }
        }
        else
        {
          sub_1B6AB4EA0(v40, isUniquelyReferenced_nonNull_native);
          unint64_t v41 = sub_1B62C1A30(v32);
          if ((v39 & 1) != (v42 & 1)) {
            goto LABEL_49;
          }
          unint64_t v38 = v41;
          uint64_t v43 = (void *)v67;
          if (v39)
          {
LABEL_28:
            *(void *)(v43[7] + 8 * v38) = v29;
            goto LABEL_31;
          }
        }
        v43[(v38 >> 6) + 8] |= 1 << v38;
        uint64_t v44 = 8 * v38;
        *(void *)(v43[6] + v44) = v32;
        *(void *)(v43[7] + v44) = v29;
        ++v43[2];
LABEL_31:
        uint64_t v8 = v36;
        *unint64_t v36 = v43;
        swift_bridgeObjectRelease();
        if (!sub_1B637F464(v32, v33)) {
          goto LABEL_21;
        }
        uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
        char v46 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v67 = *v36;
        uint64_t v47 = v67;
        *unint64_t v36 = 0x8000000000000000;
        unint64_t v49 = sub_1B62C1A30(v45);
        char v50 = v48;
        uint64_t v51 = *(void *)(v47 + 16) + ((v48 & 1) == 0);
        if (*(void *)(v47 + 24) >= v51)
        {
          if (v46)
          {
            char v54 = (void *)v67;
            if (v48) {
              goto LABEL_38;
            }
          }
          else
          {
            sub_1B6ACB3D8();
            char v54 = (void *)v67;
            if (v50) {
              goto LABEL_38;
            }
          }
        }
        else
        {
          sub_1B6AB4EA0(v51, v46);
          unint64_t v52 = sub_1B62C1A30(v45);
          if ((v50 & 1) != (v53 & 1))
          {
LABEL_49:
            sub_1B6E33838();
            __break(1u);
            goto LABEL_50;
          }
          unint64_t v49 = v52;
          char v54 = (void *)v67;
          if (v50)
          {
LABEL_38:
            *(void *)(v54[7] + 8 * v49) = v29;
            goto LABEL_20;
          }
        }
        v54[(v49 >> 6) + 8] |= 1 << v49;
        uint64_t v31 = 8 * v49;
        *(void *)(v54[6] + v31) = v45;
        *(void *)(v54[7] + v31) = v29;
        ++v54[2];
LABEL_20:
        *unint64_t v36 = v54;
        swift_bridgeObjectRelease();
LABEL_21:
        ++v29;
        v30 += 2;
        if (v28 == v29)
        {
          swift_release();
          break;
        }
      }
    }
    if (*(void *)(*v8 + 16))
    {
      sub_1B62C1A30((uint64_t)&type metadata for AnonymousEntity);
      if (v55) {
        uint64_t v56 = 0x10000;
      }
      else {
        uint64_t v56 = 0x4000;
      }
      char v57 = v55 ^ 1;
    }
    else
    {
      char v57 = 1;
      uint64_t v56 = 0x4000;
    }
    uint64_t v58 = sub_1B637ED68(v65);
    swift_bridgeObjectRelease();
    sub_1B62CEB80(v58, v56, 0, v57 & 1, (uint64_t)&v67);
    uint64_t v59 = v68;
    uint64_t v60 = v71;
    char v61 = v72;
    *(_OWORD *)(v66 + 7) = v67;
    v66[9] = v59;
    long long v62 = v70;
    *((_OWORD *)v66 + 5) = v69;
    *((_OWORD *)v66 + 6) = v62;
    v66[14] = v60;
    *((unsigned char *)v66 + 120) = v61;
    return (uint64_t)v66;
  }
  return result;
}

uint64_t sub_1B637EB2C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1B637ED84(0, v3, 0);
    uint64_t v8 = a1 + 32;
    sub_1B637EC90(0, a2, a3);
    sub_1B637EC90(0, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
    do
    {
      swift_dynamicCast();
      uint64_t v4 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B637ED84(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v4 = v13;
      }
      unint64_t v10 = *(void *)(v4 + 16);
      unint64_t v9 = *(void *)(v4 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1B637ED84(v9 > 1, v10 + 1, 1);
        uint64_t v4 = v13;
      }
      *(void *)(v4 + 16) = v10 + 1;
      *(_OWORD *)(v4 + 16 * v10 + 32) = v12;
      v8 += 16;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1B637EC90(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    sub_1B62C55B0(255, a3);
    uint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1B637ECDC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    sub_1B62C5560(255, a3);
    uint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1B637ED20(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    sub_1B62C55B0(255, a3);
    uint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1B637ED68(uint64_t a1)
{
  return sub_1B637EB2C(a1, (unint64_t *)&qword_1EB97EB00, (unint64_t *)&qword_1EB97EAE0);
}

uint64_t sub_1B637ED84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B637EDB8(a1, a2, a3, *v3, (void (*)(void))sub_1B636E080);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1B637EDB8(char a1, int64_t a2, char a3, char *a4, void (*a5)(void))
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    int64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if (v9 <= a2) {
      int64_t v9 = a2;
    }
    if (v8 < a2) {
      a2 = v9;
    }
    else {
      a2 = v8;
    }
  }
  int64_t v10 = *((void *)a4 + 2);
  if (a2 <= v10) {
    int64_t v11 = *((void *)a4 + 2);
  }
  else {
    int64_t v11 = a2;
  }
  if (v11)
  {
    a5(0);
    long long v12 = (char *)swift_allocObject();
    int64_t v13 = j__malloc_size(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 - 17;
    }
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * (v14 >> 4);
  }
  else
  {
    long long v12 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v15 = v12 + 32;
  uint64_t v16 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v15 >= &v16[16 * v10]) {
      memmove(v15, v16, 16 * v10);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    if (v16 < &v15[16 * v10] && v15 < &v16[16 * v10])
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    memcpy(v15, v16, 16 * v10);
  }
  swift_release();
  return (uint64_t)v12;
}

uint64_t sub_1B637EF00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B637EF20(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1B637EF20(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  int64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B62F7434(0, (unint64_t *)&unk_1EB980C60, (uint64_t (*)(uint64_t))sub_1B6C43C98, MEMORY[0x1E4FBBE00]);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9]) {
      memmove(v14, v15, 32 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    if (v15 < &v14[32 * v9] && v14 < &v15[32 * v9])
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    memcpy(v14, v15, 32 * v9);
  }
  swift_release();
  return (uint64_t)v11;
}

void sub_1B637F094()
{
  if (!qword_1EB9800D0)
  {
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9800D0);
    }
  }
}

void *sub_1B637F0F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F72FC();
  int64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (_DWORD *)(a1 + 40);
  do
  {
    uint64_t v5 = *((void *)v4 - 1);
    int v6 = *v4;
    v4 += 4;
    unint64_t v7 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    *(void *)(v3[6] + 8 * v7) = v5;
    *(_DWORD *)(v3[7] + 4 * v7) = v6;
    ++v3[2];
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B637F1B8(uint64_t a1)
{
  return sub_1B62BC3B4(a1, (void (*)(void))sub_1B639665C, (uint64_t (*)(uint64_t))sub_1B62C1A30);
}

ValueMetadata *sub_1B637F1E4()
{
  return &type metadata for VirtualFileAsset;
}

char *sub_1B637F1F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int64_t v3 = sub_1B62D1B88(0, v2, 0, MEMORY[0x1E4FBC860]);
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v25 = a1 + 40;
    uint64_t v23 = a1 + 32;
    uint64_t v24 = v2;
    while (1)
    {
      uint64_t v8 = *(void *)(*(void *)(v4 + 16 * v5 + 8) + 8);
      long long v28 = *(_OWORD *)(v4 + 16 * v5);
      uint64_t v9 = *(void *)(v4 + 16 * v5);
      if (sub_1B637F464(v9, v8))
      {
        uint64_t v26 = v5;
        uint64_t v27 = v3;
        int64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 24);
        swift_bridgeObjectRetain();
        uint64_t v11 = v25;
        uint64_t v12 = v2;
        do
        {
          uint64_t v13 = *(void *)(v11 - 8);
          uint64_t v14 = (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)v11 + 8) + 24))(v13, *(void *)(*(void *)v11 + 8));
          if (v14 == v10(v9, v8))
          {
            uint64_t v15 = sub_1B62CD034(v13);
            if (sub_1B62CD034(v9) < v15)
            {
              swift_bridgeObjectRelease();
              uint64_t v4 = v23;
              uint64_t v2 = v24;
              uint64_t v5 = v26;
              int64_t v3 = v27;
              goto LABEL_6;
            }
          }
          v11 += 16;
          --v12;
        }
        while (v12);
        swift_bridgeObjectRelease();
        uint64_t v5 = v26;
        int64_t v3 = v27;
        unint64_t v16 = *((void *)v27 + 2);
        if (v16)
        {
          uint64_t v19 = 32;
          uint64_t v20 = *((void *)v27 + 2);
          while (*(void *)&v27[v19] != v9)
          {
            v19 += 16;
            if (!--v20) {
              goto LABEL_22;
            }
          }
          uint64_t v4 = v23;
          uint64_t v2 = v24;
          goto LABEL_6;
        }
LABEL_22:
        unint64_t v21 = *((void *)v27 + 3);
        unint64_t v7 = v16 + 1;
        if (v16 >= v21 >> 1) {
          int64_t v3 = sub_1B62D1B88(v21 > 1, v16 + 1, 1, v27);
        }
        uint64_t v4 = v23;
        uint64_t v2 = v24;
      }
      else
      {
        unint64_t v16 = *((void *)v3 + 2);
        if (v16)
        {
          uint64_t v17 = 32;
          uint64_t v18 = *((void *)v3 + 2);
          while (*(void *)&v3[v17] != v9)
          {
            v17 += 16;
            if (!--v18) {
              goto LABEL_3;
            }
          }
          goto LABEL_6;
        }
LABEL_3:
        unint64_t v6 = *((void *)v3 + 3);
        unint64_t v7 = v16 + 1;
        if (v16 >= v6 >> 1) {
          int64_t v3 = sub_1B62D1B88(v6 > 1, v16 + 1, 1, v3);
        }
      }
      *((void *)v3 + 2) = v7;
      *(_OWORD *)&v3[16 * v16 + 32] = v28;
LABEL_6:
      if (++v5 == v2)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
  }
  return v3;
}

BOOL sub_1B637F464(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))() != a1;
}

ValueMetadata *sub_1B637F4A0()
{
  return &type metadata for Scale;
}

uint64_t sub_1B637F4B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v15 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v14 = *a4;
    uint64_t v6 = *a4 + 16 * a3 - 16;
    do
    {
      long long v7 = *(_OWORD *)(v14 + 16 * v4);
      uint64_t v8 = v15;
      uint64_t v9 = v6;
      do
      {
        uint64_t v10 = *(void *)v9;
        uint64_t v11 = *(void *)(v9 + 8);
        uint64_t v12 = (*(uint64_t (**)(void))(*((void *)&v7 + 1) + 72))();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 72))(v10, v11);
        if (v12 >= result) {
          break;
        }
        long long v13 = *(_OWORD *)v9;
        long long v7 = *(_OWORD *)(v9 + 16);
        *(_OWORD *)uint64_t v9 = v7;
        *(_OWORD *)(v9 + 16) = v13;
        v9 -= 16;
        ++v8;
      }
      while (v4 != v8);
      ++v4;
      v6 += 16;
    }
    while (v4 != a2);
  }
  return result;
}

uint64_t sub_1B637F5B0()
{
  return v0;
}

void *sub_1B637F5B8(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    long long v7 = (void *)(*result + 8);
    uint64_t v8 = a3 + 40;
    do
    {
      uint64_t v9 = *(void *)(*(void *)v8 + 8);
      *(v7 - 1) = *(void *)(v8 - 8);
      *long long v7 = v9;
      v7 += 2;
      v8 += 16;
      --v6;
    }
    while (v6);
  }
  uint64_t v10 = *(void *)(a4 + 16);
  if (v10)
  {
    uint64_t v11 = (void *)(*result + 16 * a5 + 8);
    uint64_t v12 = a4 + 40;
    do
    {
      uint64_t v13 = *(void *)(*(void *)v12 + 8);
      *(v11 - 1) = *(void *)(v12 - 8);
      void *v11 = v13;
      v11 += 2;
      v12 += 16;
      --v10;
    }
    while (v10);
  }
  *a2 = a6 + a5;
  return result;
}

unint64_t sub_1B637F628(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v83 = a6;
  uint64_t v99 = *MEMORY[0x1E4F143B8];
  uint64_t v85 = v7 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24));
  uint64_t v14 = *(void *)(*(void *)(*(void *)(v7 + 80) + 8 * a1 + 32) + 16);
  uint64_t v15 = *(void *)(v14 + 32);
  uint64_t v16 = *(void *)(v14 + 144);
  *(void *)&long long v84 = *(void *)(*(void *)(v7 + 80) + 8 * a1 + 32);
  swift_retain();
  swift_retain();
  uint64_t v81 = a3;
  uint64_t v17 = a5;
  uint64_t v18 = v83;
  uint64_t v82 = a7;
  uint64_t v19 = sub_1B63862D4(a2, a3, a4, v17, v83, a7, v16);
  uint64_t v21 = v20;
  uint64_t v22 = sub_1B637FE60(v19);
  if ((v23 & 1) == 0)
  {
    unint64_t v24 = sub_1B63581E4(v21, v22);
    if ((v24 & 0x100000000) == 0)
    {
      unint64_t v25 = v24;
      swift_release();
      goto LABEL_41;
    }
  }
  uint64_t v87 = v15;
  if (a2)
  {
    uint64_t v87 = v15;
    uint64_t v26 = v84;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B63977D8(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = v87;
    }
    unint64_t v28 = *(void *)(v15 + 16);
    unint64_t v27 = *(void *)(v15 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_1B63977D8(v27 > 1, v28 + 1, 1);
      uint64_t v15 = v87;
    }
    *(void *)(v15 + 16) = v28 + 1;
    uint64_t v29 = v15 + 16 * v28;
    uint64_t v30 = v81;
    *(void *)(v29 + 32) = a2;
    *(void *)(v29 + 40) = v30;
    if (!a4) {
      goto LABEL_20;
    }
LABEL_12:
    uint64_t v31 = *(void *)(v15 + 16);
    if (v31)
    {
      uint64_t v32 = 0;
      uint64_t v33 = 32;
      while (1)
      {
        uint64_t v34 = v32 + 1;
        if (*(void *)(v15 + v33) == a4) {
          break;
        }
        v33 += 16;
        ++v32;
        if (v31 == v34)
        {
          uint64_t v32 = *(void *)(v15 + 16);
          goto LABEL_19;
        }
      }
      if (v31 - 1 != v32)
      {
        uint64_t v69 = v33 - 32;
        uint64_t v31 = v32 + 1;
        do
        {
          uint64_t v71 = *(void *)(v15 + v69 + 48);
          if (v71 != a4)
          {
            if (v31 != v32)
            {
              long long v84 = *(_OWORD *)(v15 + 32 + 16 * v32);
              uint64_t v72 = *(void *)(v15 + v69 + 56);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v15 = sub_1B6D67208(v15);
              }
              uint64_t v70 = v15 + 16 * v32;
              *(void *)(v70 + 32) = v71;
              *(void *)(v70 + 40) = v72;
              *(_OWORD *)(v15 + v69 + 48) = v84;
              uint64_t v87 = v15;
            }
            ++v32;
          }
          ++v31;
          v69 += 16;
        }
        while (v31 != *(void *)(v15 + 16));
      }
    }
    else
    {
      uint64_t v32 = 0;
    }
LABEL_19:
    sub_1B69E25C4(v32, v31);
    goto LABEL_20;
  }
  uint64_t v26 = v84;
  if (a4) {
    goto LABEL_12;
  }
LABEL_20:
  uint64_t v35 = *(void *)(v26 + 128);
  uint64_t v36 = *(void *)(v26 + 168);
  char v37 = *(unsigned char *)(v26 + 176);
  uint64_t v38 = *(void *)(v26 + 184);
  long long v39 = *(_OWORD *)(v26 + 112);
  v92[0] = *(_OWORD *)(v26 + 96);
  v92[1] = v39;
  long long v94 = *(_OWORD *)(v26 + 136);
  long long v95 = *(_OWORD *)(v26 + 152);
  uint64_t v93 = v35;
  uint64_t v96 = v36;
  char v97 = v37;
  uint64_t v98 = v38;
  uint64_t v40 = sub_1B63B10B0();
  uint64_t v86 = v40;
  sub_1B637FED4(v18, (uint64_t)&v89, (uint64_t (*)(void))sub_1B63864B4);
  if (v90)
  {
    uint64_t v41 = sub_1B62C15C4(&v89, (uint64_t)v92);
    MEMORY[0x1F4188790](v41, v42);
    _OWORD v79[2] = v92;
    swift_bridgeObjectRetain();
    uint64_t v43 = (void *)sub_1B69DE2CC((uint64_t (*)(long long *))sub_1B69E8C24, (uint64_t)v79, (uint64_t)v40);
    swift_bridgeObjectRelease();
    sub_1B62C1550((uint64_t)v92, (uint64_t)&v89);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v86 = v43;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v43 = sub_1B6397958(0, v43[2] + 1, 1, v43);
      uint64_t v86 = v43;
    }
    unint64_t v46 = v43[2];
    unint64_t v45 = v43[3];
    if (v46 >= v45 >> 1) {
      uint64_t v86 = sub_1B6397958(v45 > 1, v46 + 1, 1, v43);
    }
    uint64_t v47 = v90;
    uint64_t v48 = v91;
    uint64_t v49 = sub_1B62C550C((uint64_t)&v89, v90);
    MEMORY[0x1F4188790](v49, v49);
    uint64_t v51 = (char *)&v80 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v52 + 16))(v51);
    sub_1B62C5608(v46, (uint64_t)v51, (uint64_t *)&v86, v47, v48);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v89);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
  }
  else
  {
    sub_1B62E2DE0((uint64_t)&v89, (uint64_t (*)(void))sub_1B63864B4);
  }
  sub_1B637FED4(v82, (uint64_t)&v89, (uint64_t (*)(void))sub_1B63864B4);
  if (v90)
  {
    sub_1B62C15C4(&v89, (uint64_t)v92);
    char v53 = v86;
    uint64_t v54 = v86[2];
    if (v54)
    {
      swift_bridgeObjectRetain();
      uint64_t v55 = 0;
      uint64_t v56 = 0;
      while (1)
      {
        uint64_t v57 = v53[v55 + 7];
        uint64_t v58 = v53[v55 + 8];
        sub_1B62C14BC(&v53[v55 + 4], v57);
        if (sub_1B6B3D86C(v92, v57, v58)) {
          break;
        }
        ++v56;
        v55 += 5;
        if (v54 == v56)
        {
          swift_bridgeObjectRelease();
          uint64_t v59 = v53[2];
          uint64_t v56 = v59;
          goto LABEL_36;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v59 = v56 + 1;
      if (v53[2] - 1 != v56)
      {
        uint64_t v73 = v55 * 8 + 72;
        do
        {
          sub_1B62C1550((uint64_t)v53 + v73, (uint64_t)&v89);
          uint64_t v76 = v90;
          uint64_t v77 = v91;
          sub_1B62C14BC(&v89, v90);
          LOBYTE(v76) = sub_1B6B3D86C(v92, v76, v77);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v89);
          if ((v76 & 1) == 0)
          {
            if (v59 != v56)
            {
              uint64_t v78 = v86;
              sub_1B62C1550((uint64_t)&v86[5 * v56 + 4], (uint64_t)&v89);
              sub_1B62C1550((uint64_t)v78 + v73, (uint64_t)v88);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                uint64_t v78 = sub_1B6C166D0(v78);
                uint64_t v86 = v78;
              }
              uint64_t v74 = (uint64_t)&v78[5 * v56 + 4];
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v74);
              sub_1B62C15C4(v88, v74);
              uint64_t v75 = (uint64_t)v86 + v73;
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v86 + v73);
              sub_1B62C15C4(&v89, v75);
            }
            ++v56;
          }
          ++v59;
          char v53 = v86;
          v73 += 40;
        }
        while (v59 != v86[2]);
      }
    }
    else
    {
      uint64_t v59 = 0;
      uint64_t v56 = 0;
    }
LABEL_36:
    sub_1B68E9148(v56, v59);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v92);
  }
  else
  {
    sub_1B62E2DE0((uint64_t)&v89, (uint64_t (*)(void))sub_1B63864B4);
  }
  uint64_t v60 = v87;
  uint64_t v61 = (uint64_t)v86;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_1B6357E48(v60, v61);
  uint64_t v64 = v63;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v65 = sub_1B637FE60(v62);
  if ((v66 & 1) != 0 || (unint64_t v67 = sub_1B63581E4(v64, v65), (v67 & 0x100000000) != 0))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_1B637C7BC(v62, v64, v60, v61);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v25 = v67;
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_41:
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v85 + 24));
  return v25;
}

uint64_t sub_1B637FE60(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  if (*(void *)(*(void *)(v2 + 32) + 144) == a1) {
    return 0;
  }
  uint64_t v5 = v3 - 1;
  if (!v5) {
    return 0;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 40;
  while (*(void *)(*(void *)(v7 + 8 * v6) + 144) != a1)
  {
    if (v5 == ++v6) {
      return 0;
    }
  }
  return v6 + 1;
}

uint64_t sub_1B637FED4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B637FF3C(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 48));
  uint64_t v4 = *(void *)(v1 + 72);
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1B6367070(a1), (v6 & 1) != 0))
  {
    sub_1B6367A74(*(void *)(v4 + 56) + 160 * v5, (uint64_t)v14);
  }
  else
  {
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    char v16 = -1;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 48));
  sub_1B6380DF0((uint64_t)v14, (uint64_t)v11, (unint64_t *)&unk_1EB97E330, (uint64_t)&type metadata for TextureCache.CacheEntry);
  if (v12 == 255)
  {
    sub_1B6380D80((uint64_t)v14, (unint64_t *)&unk_1EB97E330, (uint64_t)&type metadata for TextureCache.CacheEntry);
    uint64_t v9 = v11;
    return sub_1B6380D80((uint64_t)v9, (unint64_t *)&unk_1EB97E330, (uint64_t)&type metadata for TextureCache.CacheEntry);
  }
  sub_1B6366650((uint64_t)v11, (uint64_t)v13);
  sub_1B6380BC4(v13, (uint64_t)v11);
  int v7 = v12;
  sub_1B6367968((uint64_t)v11);
  if (v7)
  {
LABEL_9:
    sub_1B63800F4((uint64_t)v13);
    uint64_t v9 = (id *)v14;
    return sub_1B6380D80((uint64_t)v9, (unint64_t *)&unk_1EB97E330, (uint64_t)&type metadata for TextureCache.CacheEntry);
  }
  sub_1B6380BC4(v13, (uint64_t)v11);
  if (!v12)
  {
    id v8 = v11[0];
    sub_1B6E321D8();

    goto LABEL_9;
  }
  sub_1B6367968((uint64_t)v11);
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B63800F4(uint64_t a1)
{
  return a1;
}

void sub_1B6380124(uint64_t a1)
{
  sub_1B6380BC4(v1, (uint64_t)v22);
  if (v23 == 2)
  {
  }
  else if (v23 == 1)
  {
    sub_1B6380AB0((uint64_t)v22, (uint64_t)v20);
    sub_1B6380DF0((uint64_t)v20, (uint64_t)v16, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
    if (v18)
    {
      sub_1B6BCB728((uint64_t)v16, (uint64_t)&v3);
      *(void *)&long long v4 = v4 - a1;
      if (!(void)v4)
      {
        swift_unknownObjectRelease();
        *((void *)&v3 + 1) = 0;
      }
      sub_1B6BCB760((uint64_t)&v3, (uint64_t)v15);
      sub_1B6BCB7DC((uint64_t)v16);
    }
    else
    {
      sub_1B6380D80((uint64_t)v16, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
      memset(v15, 0, sizeof(v15));
    }
    sub_1B6380DF0((uint64_t)&v21, (uint64_t)v16, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
    if (v17 == 1)
    {
      sub_1B6380D80((uint64_t)v16, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
      long long v13 = xmmword_1B6E4F270;
      uint64_t v14 = 0;
    }
    else
    {
      sub_1B63810BC((uint64_t)v16, (uint64_t)&v3);
      *(void *)&long long v4 = v4 - a1;
      if (!(void)v4)
      {
        swift_unknownObjectRelease();
        *((void *)&v3 + 1) = 0;
      }
      sub_1B63810FC((uint64_t)&v3, (uint64_t)&v13);
      sub_1B6380F60((uint64_t)v16);
    }
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    long long v7 = 0u;
    long long v8 = 0u;
    long long v5 = 0u;
    long long v6 = 0u;
    long long v3 = 0u;
    long long v4 = 0u;
    long long v12 = xmmword_1B6E50D30;
    sub_1B6380A30((uint64_t)v15, (uint64_t)&v3, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
    sub_1B6380A30((uint64_t)&v13, (uint64_t)&v11, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
    sub_1B6380AB0((uint64_t)&v3, (uint64_t)v16);
    sub_1B6380EBC((uint64_t)v20);
    char v19 = 1;
    sub_1B63817FC((uint64_t)v16, (uint64_t)v1);
  }
  else
  {
    sub_1B6E32BE8();
    __break(1u);
  }
}

void sub_1B6380380(void *a1@<X8>)
{
  sub_1B6380BC4(v1, (uint64_t)v47);
  if (v48 == 2)
  {
    long long v3 = (void *)v47[0];
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    unint64_t v42 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    v45[0] = v3;
    sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
    sub_1B6E32B18();
    uint64_t v4 = sub_1B6E32148();
    uint64_t v41 = 1;
    sub_1B6B33B70(v4, 0, 0xE000000000000000, &v41);
    swift_release();
    swift_bridgeObjectRelease();

    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0x1FFFFFFFELL;
LABEL_17:
    *a1 = v5;
    a1[1] = v6;
    a1[2] = v7;
    a1[3] = v19;
    a1[4] = v8;
    a1[5] = v9;
    a1[6] = v10;
    a1[7] = v11;
    a1[8] = v12;
    a1[9] = v13;
    a1[10] = v14;
    a1[11] = v15;
    a1[12] = v16;
    a1[13] = v17;
    a1[14] = v18;
    return;
  }
  if (v48 == 1)
  {
    sub_1B6380AB0((uint64_t)v47, (uint64_t)v45);
    sub_1B6381264((uint64_t)v49);
    uint64_t v26 = v49[1];
    uint64_t v27 = v49[0];
    uint64_t v19 = v49[3];
    uint64_t v24 = v49[4];
    uint64_t v25 = v49[2];
    uint64_t v22 = v49[6];
    uint64_t v23 = v49[5];
    uint64_t v13 = v49[9];
    uint64_t v20 = v49[8];
    uint64_t v21 = v49[7];
    uint64_t v14 = v49[10];
    uint64_t v15 = v49[11];
    uint64_t v16 = v49[12];
    uint64_t v17 = v49[13];
    uint64_t v18 = v49[14];
    sub_1B6380DF0((uint64_t)v45, (uint64_t)&v41, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
    if (v43)
    {
      sub_1B6BCB728((uint64_t)&v41, (uint64_t)&v28);
      *(void *)&long long v29 = v29 - 1;
      if (!(void)v29)
      {
        swift_unknownObjectRelease();
        *((void *)&v28 + 1) = 0;
      }
      sub_1B6BCB760((uint64_t)&v28, (uint64_t)v40);
      sub_1B6BCB7DC((uint64_t)&v41);
    }
    else
    {
      sub_1B6380D80((uint64_t)&v41, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
      memset(v40, 0, sizeof(v40));
    }
    sub_1B6380DF0((uint64_t)&v46, (uint64_t)&v41, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
    if (v42 == 1)
    {
      sub_1B6380D80((uint64_t)&v41, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
      long long v38 = xmmword_1B6E4F270;
      uint64_t v39 = 0;
    }
    else
    {
      sub_1B63810BC((uint64_t)&v41, (uint64_t)&v28);
      *(void *)&long long v29 = v29 - 1;
      if (!(void)v29)
      {
        swift_unknownObjectRelease();
        *((void *)&v28 + 1) = 0;
      }
      sub_1B63810FC((uint64_t)&v28, (uint64_t)&v38);
      sub_1B6380F60((uint64_t)&v41);
    }
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v37 = xmmword_1B6E50D30;
    sub_1B6380A30((uint64_t)v40, (uint64_t)&v28, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
    sub_1B6380A30((uint64_t)&v38, (uint64_t)&v36, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
    sub_1B6380AB0((uint64_t)&v28, (uint64_t)&v41);
    sub_1B6380EBC((uint64_t)v45);
    char v44 = 1;
    sub_1B63817FC((uint64_t)&v41, (uint64_t)v1);
    uint64_t v6 = v26;
    uint64_t v5 = v27;
    uint64_t v8 = v24;
    uint64_t v7 = v25;
    uint64_t v10 = v22;
    uint64_t v9 = v23;
    uint64_t v12 = v20;
    uint64_t v11 = v21;
    goto LABEL_17;
  }
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B63807A8(char a1)
{
  sub_1B6380BC4((uint64_t *)v1, (uint64_t)v30);
  char v3 = 0;
  switch(v31)
  {
    case 1:
      sub_1B6380AB0((uint64_t)v30, (uint64_t)v28);
      sub_1B6380DF0((uint64_t)v28, (uint64_t)v25, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
      if (v27)
      {
        sub_1B6BCB728((uint64_t)v25, (uint64_t)&v12);
        uint64_t v6 = MEMORY[0x1BA9B8670](&v12);
        swift_unknownObjectRelease();
        if (v6) {
          uint64_t v7 = v13 + 1;
        }
        else {
          uint64_t v7 = 0;
        }
        *((void *)&v12 + 1) = v6;
        *(void *)&long long v13 = v7;
        sub_1B6BCB760((uint64_t)&v12, (uint64_t)v24);
        sub_1B6BCB7DC((uint64_t)v25);
      }
      else
      {
        sub_1B6380D80((uint64_t)v25, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
        memset(v24, 0, sizeof(v24));
      }
      sub_1B6380DF0((uint64_t)&v29, (uint64_t)v25, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
      if (v26 == 1)
      {
        sub_1B6380D80((uint64_t)v25, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
        long long v22 = xmmword_1B6E4F270;
        uint64_t v23 = 0;
      }
      else
      {
        sub_1B63810BC((uint64_t)v25, (uint64_t)&v12);
        uint64_t v8 = MEMORY[0x1BA9B8670](&v12);
        swift_unknownObjectRelease();
        if (v8) {
          uint64_t v9 = v13 + 1;
        }
        else {
          uint64_t v9 = 0;
        }
        *((void *)&v12 + 1) = v8;
        *(void *)&long long v13 = v9;
        sub_1B63810FC((uint64_t)&v12, (uint64_t)&v22);
        sub_1B6380F60((uint64_t)v25);
      }
      uint64_t v20 = 0;
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      long long v14 = 0u;
      long long v15 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      long long v21 = xmmword_1B6E50D30;
      sub_1B6380A30((uint64_t)v24, (uint64_t)&v12, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
      sub_1B6380A30((uint64_t)&v22, (uint64_t)&v20, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
      sub_1B6380AB0((uint64_t)&v12, (uint64_t)v25);
      sub_1B6367968(v1);
      sub_1B6380F90((uint64_t)v25, v1);
      *(unsigned char *)(v1 + 152) = 1;
      char v10 = sub_1B6381138();
      sub_1B6380EBC((uint64_t)v25);
      sub_1B6380EBC((uint64_t)v28);
      char v3 = v10 ^ 1;
      break;
    case 2:

      char v3 = 0;
      break;
    case 3:
      return v3 & 1;
    default:
      id v4 = v30[0];
      uint64_t v5 = (char *)v30[1] + (a1 & 1);
      sub_1B6367968(v1);
      *(void *)uint64_t v1 = v4;
      *(void *)(v1 + 8) = v5;
      char v3 = 1;
      *(unsigned char *)(v1 + 152) = 0;
      break;
  }
  return v3 & 1;
}

uint64_t sub_1B6380A30(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6380E70(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B6380AB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithTake for TextureCache.WeakStorage(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 120))
  {
    swift_unknownObjectWeakTakeInit();
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    long long v5 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v5;
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  if (*(void *)(a2 + 136) == 1)
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
  }
  else
  {
    swift_unknownObjectWeakTakeInit();
    uint64_t v8 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v8;
  }
  return a1;
}

uint64_t sub_1B6380BC4(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for TextureCache.CacheEntry.State(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 152);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    uint64_t v8 = *a2;
    id v9 = (id)*a2;
    *(void *)a1 = v8;
    char v10 = 2;
LABEL_16:
    *(unsigned char *)(a1 + 152) = v10;
    return a1;
  }
  if (v4 == 1)
  {
    if (a2[15])
    {
      swift_unknownObjectWeakCopyInit();
      *(void *)(a1 + 8) = a2[1];
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(void *)(a1 + 32) = a2[4];
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      *(void *)(a1 + 120) = a2[15];
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v15;
      long long v16 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v16;
      long long v17 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
      long long v18 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v18;
    }
    if (a2[17] == 1)
    {
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(void *)(a1 + 144) = a2[18];
    }
    else
    {
      swift_unknownObjectWeakCopyInit();
      uint64_t v19 = a2[18];
      *(void *)(a1 + 136) = a2[17];
      *(void *)(a1 + 144) = v19;
      swift_unknownObjectRetain();
    }
    char v10 = 1;
    goto LABEL_16;
  }
  if (v4)
  {
    long long v11 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v11;
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)((char *)a2 + 137);
    long long v12 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v12;
    long long v13 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v13;
    long long v14 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
  }
  else
  {
    id v5 = (id)*a2;
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 152) = 0;
    id v7 = v5;
  }
  return a1;
}

uint64_t sub_1B6380D80(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1B6380E70(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B6380DF0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6380E70(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1B6380E70(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B6380EBC(uint64_t a1)
{
  return a1;
}

uint64_t destroy for TextureCache.WeakStorage(uint64_t result)
{
  uint64_t v1 = result;
  if (*(void *)(result + 120))
  {
    swift_unknownObjectWeakDestroy();
    swift_unknownObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (*(void *)(v1 + 136) != 1)
  {
    swift_unknownObjectWeakDestroy();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B6380F60(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6380F90(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for TextureCache.WeakStorage(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 120))
  {
    swift_unknownObjectWeakCopyInit();
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    long long v5 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v5;
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  if (*(void *)(a2 + 136) == 1)
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
  }
  else
  {
    swift_unknownObjectWeakCopyInit();
    uint64_t v8 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v8;
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_1B63810BC(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit();
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  *(void *)(a2 + 16) = v4;
  swift_unknownObjectRetain();
  return a2;
}

uint64_t sub_1B63810FC(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeInit();
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  *(void *)(a2 + 16) = v4;
  return a2;
}

uint64_t sub_1B6381138()
{
  sub_1B6380DF0(v0, (uint64_t)v5, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
  if (v6)
  {
    uint64_t v1 = MEMORY[0x1BA9B8670](v5);
    sub_1B6BCB7DC((uint64_t)v5);
    if (v1)
    {
      swift_unknownObjectRelease();
      sub_1B6380F90(v0, (uint64_t)v5);
      sub_1B6380EBC((uint64_t)v5);
      return 0;
    }
  }
  else
  {
    sub_1B6380D80((uint64_t)v5, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
  }
  sub_1B6380F90(v0, (uint64_t)v5);
  sub_1B6380DF0((uint64_t)&v7, (uint64_t)v4, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
  if (v4[1] == 1)
  {
    sub_1B6380EBC((uint64_t)v5);
    sub_1B6380D80((uint64_t)v4, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
  }
  else
  {
    uint64_t v3 = MEMORY[0x1BA9B8670](v4);
    sub_1B6380EBC((uint64_t)v5);
    sub_1B6380F60((uint64_t)v4);
    if (v3)
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1B6381264@<X0>(uint64_t a1@<X8>)
{
  sub_1B63813C8((uint64_t)v18);
  uint64_t result = sub_1B6381708((uint64_t)v18, (uint64_t)&v19, (unint64_t *)&unk_1EB97EFD0, (uint64_t)&type metadata for TextureCPURuntime);
  uint64_t v4 = v30;
  if (v30)
  {
    long long v5 = v19;
    uint64_t v6 = v20;
    uint64_t v7 = v21;
    uint64_t v8 = v22;
    long long v9 = v25;
    long long v10 = v26;
    long long v11 = v27;
    uint64_t v12 = v28;
    uint64_t v13 = 0x10000;
    if (!v24) {
      uint64_t v13 = 0;
    }
    unint64_t v14 = v23 | (unint64_t)v13;
    unint64_t v15 = v29 | 0x8000000000000000;
  }
  else
  {
    sub_1B6380DF0(v1 + 128, (uint64_t)v17, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
    if (v17[1] == 1)
    {
      uint64_t result = sub_1B6380D80((uint64_t)v17, &qword_1EB97D5C8, (uint64_t)&type metadata for TextureCache.WeakStorage.GPU);
      uint64_t v6 = 0;
      uint64_t v8 = 0;
      unint64_t v14 = 0;
      uint64_t v12 = 0;
      unint64_t v15 = 0;
      long long v5 = 0uLL;
      long long v9 = 0uLL;
      uint64_t v7 = 0x1FFFFFFFELL;
    }
    else
    {
      uint64_t v16 = MEMORY[0x1BA9B8670](v17);
      uint64_t result = sub_1B6380F60((uint64_t)v17);
      uint64_t v6 = 0;
      uint64_t v8 = 0;
      unint64_t v14 = 0;
      uint64_t v12 = 0;
      unint64_t v15 = 0;
      uint64_t v7 = 0x1FFFFFFFELL;
      if (v16) {
        uint64_t v7 = 0;
      }
      long long v9 = 0uLL;
      long long v5 = (unint64_t)v16;
    }
    long long v10 = 0uLL;
    long long v11 = 0uLL;
  }
  *(_OWORD *)a1 = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v14;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v11;
  *(void *)(a1 + 96) = v12;
  *(void *)(a1 + 104) = v15;
  *(void *)(a1 + 112) = v4;
  return result;
}

uint64_t sub_1B63813C8@<X0>(uint64_t a1@<X8>)
{
  sub_1B6380DF0(v1, (uint64_t)v22, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
  if (!v23)
  {
    uint64_t result = sub_1B6380D80((uint64_t)v22, &qword_1EB97E340, (uint64_t)&type metadata for TextureCache.WeakStorage.CPU);
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v17 = 0;
    uint64_t v4 = 0;
    uint64_t v16 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    long long v13 = 0uLL;
    long long v14 = 0uLL;
    long long v11 = 0uLL;
    long long v12 = 0uLL;
    goto LABEL_9;
  }
  sub_1B6BCB760((uint64_t)v22, (uint64_t)v24);
  uint64_t v3 = MEMORY[0x1BA9B8670](v24);
  if (!v3)
  {
    uint64_t result = sub_1B6BCB7DC((uint64_t)v24);
    goto LABEL_8;
  }
  RGTextureDescriptor.init()((uint64_t)v22);
  uint64_t v4 = v26;
  int v5 = v28;
  long long v20 = v29;
  long long v21 = v25;
  long long v18 = v31;
  long long v19 = v30;
  uint64_t v6 = v32;
  uint64_t v7 = v33;
  uint64_t v8 = v34;
  uint64_t v9 = v27;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6BCB7DC((uint64_t)v24);
  swift_unknownObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  long long v12 = v18;
  long long v11 = v19;
  long long v14 = v20;
  long long v13 = v21;
  uint64_t v15 = 0x10000;
  if (!v5) {
    uint64_t v15 = 0;
  }
  uint64_t v16 = v9 | v15;
  uint64_t v17 = 1;
LABEL_9:
  *(void *)a1 = v3;
  *(_OWORD *)(a1 + 8) = v13;
  *(void *)(a1 + 24) = v17;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 48) = v14;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v12;
  *(void *)(a1 + 96) = v6;
  *(void *)(a1 + 104) = v7;
  *(void *)(a1 + 112) = v8;
  return result;
}

uint64_t sub_1B6381548@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_unknownObjectWeakInit();
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  sub_1B6381708((uint64_t)a1, (uint64_t)v16, (unint64_t *)&qword_1EB97DAB0, (uint64_t)&type metadata for BufferSlice);
  sub_1B6381708((uint64_t)v16, (uint64_t)v17, (unint64_t *)&qword_1EB97DAB0, (uint64_t)&type metadata for BufferSlice);
  if (v17[0])
  {
    uint64_t v6 = v17[1];
    uint64_t v7 = v17[2];
    swift_unknownObjectWeakAssign();
    *(void *)(a3 + 24) = v6;
    *(void *)(a3 + 32) = v7;
    long long v8 = a1[2];
    *(_OWORD *)(a3 + 56) = a1[3];
    long long v9 = a1[5];
    *(_OWORD *)(a3 + 72) = a1[4];
    *(_OWORD *)(a3 + 88) = v9;
    *(_OWORD *)(a3 + 104) = a1[6];
    *(_OWORD *)(a3 + 40) = v8;
    uint64_t v10 = swift_bridgeObjectRetain();
  }
  else
  {
    swift_unknownObjectWeakAssign();
    *(void *)(a3 + 24) = 0;
    *(void *)(a3 + 32) = 0;
    RGTextureDescriptor.init()((uint64_t)v15);
    long long v11 = v15[0];
    *(_OWORD *)(a3 + 56) = v15[1];
    long long v12 = v15[3];
    *(_OWORD *)(a3 + 72) = v15[2];
    *(_OWORD *)(a3 + 88) = v12;
    *(_OWORD *)(a3 + 104) = v15[4];
    *(_OWORD *)(a3 + 40) = v11;
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  *(void *)(a3 + 120) = v10;
  if (a2 < 1) {
    return sub_1B628D3FC((uint64_t)a1);
  }
  uint64_t v13 = MEMORY[0x1BA9B8670](a3);
  swift_unknownObjectRelease();
  uint64_t result = sub_1B628D3FC((uint64_t)a1);
  *(void *)(a3 + 8) = v13;
  *(void *)(a3 + 16) = a2;
  return result;
}

uint64_t sub_1B6381688(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6A97C0C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B6381708(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6380E70(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B6381788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1B63817FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t assignWithTake for TextureCache.CacheEntry.State(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 152);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 != 2)
    {
      if (v4 == 1)
      {
        if (*(void *)(a1 + 120))
        {
          swift_unknownObjectWeakDestroy();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 136) != 1)
        {
          swift_unknownObjectWeakDestroy();
          swift_unknownObjectRelease();
        }
LABEL_13:
        unsigned int v5 = *(unsigned __int8 *)(a2 + 152);
        if (v5 >= 3) {
          unsigned int v5 = *(_DWORD *)a2 + 3;
        }
        if (v5 == 2)
        {
          *(void *)a1 = *(void *)a2;
          char v6 = 2;
        }
        else
        {
          if (v5 != 1)
          {
            if (v5)
            {
              long long v7 = *(_OWORD *)(a2 + 112);
              *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
              *(_OWORD *)(a1 + 112) = v7;
              *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
              *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
              long long v8 = *(_OWORD *)(a2 + 48);
              *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
              *(_OWORD *)(a1 + 48) = v8;
              long long v9 = *(_OWORD *)(a2 + 80);
              *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
              *(_OWORD *)(a1 + 80) = v9;
              long long v10 = *(_OWORD *)(a2 + 16);
              *(_OWORD *)a1 = *(_OWORD *)a2;
              *(_OWORD *)(a1 + 16) = v10;
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
              *(unsigned char *)(a1 + 152) = 0;
            }
            return a1;
          }
          if (*(void *)(a2 + 120))
          {
            swift_unknownObjectWeakTakeInit();
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(void *)(a1 + 120) = *(void *)(a2 + 120);
          }
          else
          {
            long long v11 = *(_OWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
            *(_OWORD *)(a1 + 80) = v11;
            long long v12 = *(_OWORD *)(a2 + 112);
            *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
            *(_OWORD *)(a1 + 112) = v12;
            long long v13 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v13;
            long long v14 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v14;
          }
          if (*(void *)(a2 + 136) == 1)
          {
            *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
            *(void *)(a1 + 144) = *(void *)(a2 + 144);
          }
          else
          {
            swift_unknownObjectWeakTakeInit();
            uint64_t v15 = *(void *)(a2 + 144);
            *(void *)(a1 + 136) = *(void *)(a2 + 136);
            *(void *)(a1 + 144) = v15;
          }
          char v6 = 1;
        }
        *(unsigned char *)(a1 + 152) = v6;
        return a1;
      }
      if (v4) {
        goto LABEL_13;
      }
    }

    goto LABEL_13;
  }
  return a1;
}

uint64_t sub_1B6381A18@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 128) = 0;
  uint64_t v6 = a3 + 128;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 136) = xmmword_1B6E50D30;
  sub_1B63619BC(a1, (uint64_t)v14);
  if ((*((void *)&v15 + 1) & 0x8000000000000000) != 0)
  {
    *((void *)&v15 + 1) &= ~0x8000000000000000;
    long long v21 = v14[4];
    long long v22 = v14[5];
    uint64_t v24 = v16;
    long long v17 = v14[0];
    long long v18 = v14[1];
    long long v19 = v14[2];
    long long v20 = v14[3];
    long long v23 = v15;
    sub_1B6381548(&v17, a2, (uint64_t)v13);
    long long v9 = &qword_1EB97E340;
    long long v10 = &type metadata for TextureCache.WeakStorage.CPU;
    uint64_t v11 = a3;
  }
  else
  {
    swift_unknownObjectWeakInit();
    *((void *)&v17 + 1) = 0;
    *(void *)&long long v18 = 0;
    uint64_t v7 = swift_unknownObjectWeakAssign();
    if (a2 >= 1)
    {
      uint64_t v8 = MEMORY[0x1BA9B8670](v7);
      swift_unknownObjectRelease();
      *((void *)&v17 + 1) = v8;
      *(void *)&long long v18 = a2;
    }
    sub_1B63810FC((uint64_t)&v17, (uint64_t)v13);
    sub_1B6381B78(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1B6381C38);
    long long v9 = &qword_1EB97D5C8;
    long long v10 = &type metadata for TextureCache.WeakStorage.GPU;
    uint64_t v11 = v6;
  }
  return sub_1B6380A30((uint64_t)v13, v11, v9, (uint64_t)v10);
}

void *sub_1B6381B78(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1B6381BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14 < 0)
  {
    swift_unknownObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1B6381C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14 < 0) {
    swift_bridgeObjectRelease();
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_1B6381C7C(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = v2;
  unsigned int v4 = a2;
  uint64_t result = sub_1B62C5AB0(a2);
  if ((v6 & 1) == 0) {
    return result;
  }
  unint64_t v7 = result;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *(void *)(v2 + 56);
  v54[0] = v9;
  *(void *)(v2 + 56) = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B6ACB5A0();
    uint64_t v9 = v54[0];
  }
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v7);
  sub_1B6396C38(v7, v9);
  *(void *)(v3 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    return swift_release();
  }
  uint64_t v12 = 0;
  long long v13 = (uint64_t *)(v3 + 48);
  uint64_t v14 = v10 + 32;
  uint64_t v51 = v13;
  uint64_t v52 = OBJC_IVAR____TtC3VFX13EntityManager_scheduler;
  unsigned int v50 = v4;
  uint64_t v48 = v10 + 32;
  uint64_t v49 = *(void *)(v10 + 16);
  while (1)
  {
    uint64_t v15 = *(void *)(v14 + 8 * v12);
    long long v17 = sub_1B63820F0(v54, v15);
    if (!*v16) {
      goto LABEL_15;
    }
    long long v18 = v16;
    long long v19 = (char *)v16[1];
    uint64_t v20 = *((void *)v19 + 2);
    if (!v20) {
      goto LABEL_15;
    }
    if (*((_DWORD *)v19 + 8) == v4)
    {
      char v21 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v22 = 0;
      v18[1] = v19;
      if (v21)
      {
LABEL_12:
        uint64_t v23 = *((void *)v19 + 2) - 1;
        if (v23 - v22 < 0) {
          goto LABEL_42;
        }
        memmove(&v19[4 * v22 + 32], &v19[4 * v22 + 36], 4 * (v23 - v22));
        *((void *)v19 + 2) = v23;
        v18[1] = v19;
        goto LABEL_15;
      }
      goto LABEL_35;
    }
    if (v20 == 1) {
      goto LABEL_15;
    }
    if (*((_DWORD *)v19 + 9) == v4)
    {
      char v43 = swift_isUniquelyReferenced_nonNull_native();
      v18[1] = v19;
      uint64_t v22 = 1;
      if (v43)
      {
        uint64_t v22 = 1;
        goto LABEL_12;
      }
LABEL_35:
      long long v19 = sub_1B6315450((uint64_t)v19);
      v18[1] = v19;
      goto LABEL_12;
    }
    uint64_t v44 = 0;
    uint64_t v45 = v20 - 2;
    while (v45 != v44)
    {
      int v46 = *(_DWORD *)&v19[4 * v44++ + 40];
      if (v46 == v4)
      {
        char v47 = swift_isUniquelyReferenced_nonNull_native();
        v18[1] = v19;
        uint64_t v22 = v44 + 1;
        if (v47) {
          goto LABEL_12;
        }
        goto LABEL_35;
      }
    }
LABEL_15:
    ((void (*)(void *, void))v17)(v54, 0);
    uint64_t v24 = *v51;
    if (*(void *)(*v51 + 16))
    {
      unint64_t v25 = sub_1B62C1A30(v15);
      if (v26)
      {
        uint64_t v27 = *(void *)(v24 + 56) + 24 * v25;
        if (!*(void *)(*(void *)(v27 + 8) + 16))
        {
          uint64_t v28 = *(void *)(v27 + 16);
          uint64_t v29 = *(void *)(v28 + 16);
          if (v29) {
            break;
          }
        }
      }
    }
LABEL_7:
    if (++v12 == v11) {
      return swift_release();
    }
  }
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v30 = 0;
  while (1)
  {
    uint64_t v31 = *(void *)(v28 + 8 * v30 + 32);
    uint64_t v32 = *(void *)(a1 + v52);
    unsigned int v33 = *(os_unfair_lock_s **)(v32 + 56);
    swift_retain();
    os_unfair_lock_lock(v33);
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    v54[0] = *(void *)(v32 + 152);
    uint64_t v35 = v54[0];
    *(void *)(v32 + 152) = 0x8000000000000000;
    unint64_t v36 = sub_1B62C19C8(v31);
    char v38 = v37;
    uint64_t v39 = *(void *)(v35 + 16) + ((v37 & 1) == 0);
    if (*(void *)(v35 + 24) >= v39)
    {
      if ((v34 & 1) == 0)
      {
        sub_1B6ACB410((unint64_t *)&qword_1EB980810);
        uint64_t v35 = v54[0];
      }
      goto LABEL_26;
    }
    sub_1B62BBDC4(v39, v34);
    uint64_t v35 = v54[0];
    unint64_t v40 = sub_1B62C19C8(v31);
    if ((v38 & 1) != (v41 & 1)) {
      break;
    }
    unint64_t v36 = v40;
LABEL_26:
    *(void *)(v32 + 152) = v35;
    swift_bridgeObjectRelease();
    unint64_t v42 = *(void **)(v32 + 152);
    if ((v38 & 1) == 0)
    {
      v42[(v36 >> 6) + 8] |= 1 << v36;
      *(void *)(v42[6] + 8 * v36) = v31;
      *(void *)(v42[7] + 8 * v36) = 0;
      ++v42[2];
    }
    ++v30;
    --*(void *)(v42[7] + 8 * v36);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 56));
    swift_release();
    if (v29 == v30)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      unsigned int v4 = v50;
      uint64_t v14 = v48;
      uint64_t v11 = v49;
      goto LABEL_7;
    }
  }
  sub_1B6E33838();
  __break(1u);
LABEL_42:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t (*sub_1B63820F0(void *a1, uint64_t a2))()
{
  unsigned int v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1B6382150(v4, a2);
  return sub_1B6383298;
}

uint64_t (*sub_1B6382150(void *a1, uint64_t a2))()
{
  unsigned int v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1B63821E0(v4);
  v4[9] = sub_1B6382210(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_1B6383354;
}

uint64_t (*sub_1B63821E0(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1B6383660;
}

void (*sub_1B6382210(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  unsigned int v4 = v3;
  uint64_t v8 = malloc(0x38uLL);
  *a1 = v8;
  void v8[3] = a2;
  v8[4] = v3;
  uint64_t v9 = *v3;
  unint64_t v10 = sub_1B62C1A30(a2);
  char v12 = v11;
  *((unsigned char *)v8 + 48) = v11 & 1;
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = *(void *)(v9 + 16) + ((v11 & 1) == 0);
  if (v13 >= v14 && (a3 & 1) != 0)
  {
LABEL_6:
    void v8[5] = v10;
    if (v12)
    {
LABEL_7:
      uint64_t v15 = *(void *)(*v4 + 56) + 24 * v10;
      long long v16 = *(_OWORD *)v15;
      uint64_t v17 = *(void *)(v15 + 16);
LABEL_11:
      *(_OWORD *)uint64_t v8 = v16;
      _OWORD v8[2] = v17;
      return sub_1B6383664;
    }
LABEL_10:
    uint64_t v17 = 0;
    long long v16 = 0uLL;
    goto LABEL_11;
  }
  if (v13 >= v14 && (a3 & 1) == 0)
  {
    sub_1B62B8194();
    goto LABEL_6;
  }
  sub_1B62B7180(v14, a3 & 1);
  unint64_t v18 = sub_1B62C1A30(a2);
  if ((v12 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    void v8[5] = v18;
    if (v12) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  uint64_t result = (void (*)(uint64_t **))sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6382348()
{
  uint64_t v1 = v0;
  sub_1B63823F4();
  sub_1B6382D68();
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t result = sub_1B63830F8(*(void *)(v1 + 592));
  if (!*(void *)(v1 + 608))
  {
    int v4 = *(unsigned __int8 *)(v1 + 585);
    int v5 = *(unsigned __int8 *)(v1 + 600);
    if (v4 == 2)
    {
      BOOL v7 = v5 == 0;
      uint64_t v8 = 552;
    }
    else
    {
      if (v4 == 1)
      {
        uint64_t v6 = 115;
LABEL_11:
        *(void *)(v2 + 48) = v6;
        return sub_1B63831C8(v6);
      }
      if (*(unsigned char *)(v1 + 585))
      {
        uint64_t result = sub_1B6E337C8();
        __break(1u);
        return result;
      }
      BOOL v7 = v5 == 0;
      uint64_t v8 = 70;
    }
    if (v7) {
      uint64_t v6 = v8 + 1;
    }
    else {
      uint64_t v6 = v8;
    }
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1B63823F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (char **)(v0 + 784);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = *(void *)(v1 + 784);
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t result = sub_1B6383800(0, *(void *)(v4 + 16));
  }
  else
  {
    *uint64_t v2 = (char *)sub_1B63965E0(0, *(void *)(v4 + 24) >> 1);
    uint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v87 = v2;
  uint64_t v6 = *(void *)(v1 + 608);
  if (v6)
  {
    uint64_t v88 = *(void *)(v6 + 16);
    if (v88)
    {
      uint64_t v7 = qword_1EB985418;
      swift_bridgeObjectRetain();
      if (v7 != -1) {
        swift_once();
      }
      uint64_t v8 = 0;
      uint64_t v9 = v6 + 32;
      int v10 = dword_1EB985420;
      char v11 = v87;
      do
      {
        uint64_t v13 = v9 + 96 * v8;
        int64x2_t v14 = *(int64x2_t *)(v13 + 24);
        int64x2_t v15 = *(int64x2_t *)(v13 + 8);
        uint64_t v16 = *(void *)(v13 + 40);
        int64x2_t v17 = *(int64x2_t *)(v13 + 48);
        int64x2_t v18 = *(int64x2_t *)(v13 + 64);
        int64x2_t v19 = *(int64x2_t *)(v13 + 80);
        int v20 = *(_DWORD *)v13 & v10;
        char v21 = *v11;
        uint64_t v22 = *((void *)*v11 + 2);
        if (v22)
        {
          uint64_t v23 = v21 + 72;
          uint64_t v24 = *((void *)*v11 + 2);
          while (1)
          {
            if (*((_DWORD *)v23 - 10) == v20
              && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*((int64x2_t *)v23 - 2), v15), (int32x4_t)vceqq_s64(*((int64x2_t *)v23 - 1), v14)), (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(v23 + 8), v17), (int32x4_t)vceqq_s64(*(int64x2_t *)(v23 + 24), v18)))), 0xFuLL))) & 1) != 0&& *(void *)v23 == v16)
            {
              int32x2_t v25 = vmovn_s64(vceqq_s64(*(int64x2_t *)(v23 + 40), v19));
              if (v25.i32[0] & v25.i32[1]) {
                break;
              }
            }
            v23 += 96;
            if (!--v24) {
              goto LABEL_19;
            }
          }
        }
        else
        {
LABEL_19:
          int64x2_t v89 = v15;
          int64x2_t v91 = v19;
          int64x2_t v93 = v18;
          int64x2_t v95 = v17;
          int64x2_t v97 = v14;
          char v26 = swift_isUniquelyReferenced_nonNull_native();
          void *v11 = v21;
          if ((v26 & 1) == 0)
          {
            char v21 = sub_1B6383918(0, v22 + 1, 1, v21);
            void *v11 = v21;
          }
          unint64_t v28 = *((void *)v21 + 2);
          unint64_t v27 = *((void *)v21 + 3);
          int64x2_t v30 = v95;
          int64x2_t v29 = v97;
          int64x2_t v32 = v91;
          int64x2_t v31 = v93;
          int64x2_t v33 = v89;
          if (v28 >= v27 >> 1)
          {
            char v34 = sub_1B6383918(v27 > 1, v28 + 1, 1, v21);
            int64x2_t v33 = v89;
            int64x2_t v32 = v91;
            int64x2_t v31 = v93;
            int64x2_t v30 = v95;
            int64x2_t v29 = v97;
            char v21 = v34;
          }
          *((void *)v21 + 2) = v28 + 1;
          char v12 = &v21[96 * v28];
          *((_DWORD *)v12 + 8) = v20;
          *(int64x2_t *)(v12 + 40) = v33;
          *(int64x2_t *)(v12 + 56) = v29;
          *((void *)v12 + 9) = v16;
          *((int64x2_t *)v12 + 5) = v30;
          *((int64x2_t *)v12 + 6) = v31;
          *((int64x2_t *)v12 + 7) = v32;
          *(void *)(v1 + 784) = v21;
          sub_1B6382BCC();
          char v11 = v87;
        }
        ++v8;
      }
      while (v8 != v88);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (*(unsigned char *)(v1 + 536)) {
      int v35 = 0;
    }
    else {
      int v35 = 0x4000;
    }
    sub_1B6383B70(&v99);
    long long v36 = v99;
    long long v37 = v100;
    long long v38 = v101;
    long long v39 = v102;
    long long v40 = v103;
    uint64_t v41 = v104;
    if (qword_1EB985418 != -1)
    {
      long long v96 = v100;
      long long v98 = v99;
      long long v92 = v102;
      long long v94 = v101;
      long long v90 = v103;
      swift_once();
      long long v40 = v90;
      long long v39 = v92;
      long long v38 = v94;
      long long v37 = v96;
      long long v36 = v98;
    }
    unint64_t v42 = v87;
    char v43 = *v87;
    *(_DWORD *)uint64_t v125 = dword_1EB985420 & v35;
    *(_OWORD *)&v125[8] = v36;
    *(_OWORD *)&v125[24] = v37;
    *(_OWORD *)&unsigned char v125[40] = v38;
    *(_OWORD *)&v125[56] = v39;
    *(_OWORD *)&v125[72] = v40;
    *(void *)&v125[88] = v41;
    if ((sub_1B6382B10((int64x2_t *)v125, (uint64_t)v43) & 1) == 0)
    {
      char v44 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v87 = v43;
      if ((v44 & 1) == 0)
      {
        char v43 = sub_1B6383918(0, *((void *)v43 + 2) + 1, 1, v43);
        *uint64_t v87 = v43;
      }
      unint64_t v46 = *((void *)v43 + 2);
      unint64_t v45 = *((void *)v43 + 3);
      if (v46 >= v45 >> 1) {
        char v43 = sub_1B6383918(v45 > 1, v46 + 1, 1, v43);
      }
      *((void *)v43 + 2) = v46 + 1;
      char v47 = &v43[96 * v46];
      long long v48 = *(_OWORD *)&v125[16];
      *((_OWORD *)v47 + 2) = *(_OWORD *)v125;
      *((_OWORD *)v47 + 3) = v48;
      long long v49 = *(_OWORD *)&v125[32];
      long long v50 = *(_OWORD *)&v125[48];
      long long v51 = *(_OWORD *)&v125[80];
      *((_OWORD *)v47 + 6) = *(_OWORD *)&v125[64];
      *((_OWORD *)v47 + 7) = v51;
      *((_OWORD *)v47 + 4) = v49;
      *((_OWORD *)v47 + 5) = v50;
      *(void *)(v1 + 784) = v43;
      sub_1B6382BCC();
      unint64_t v42 = v87;
    }
    sub_1B6383E40((uint64_t)v105);
    sub_1B6383E40((uint64_t)v108);
    uint64_t v53 = v106;
    uint64_t v52 = v107;
    sub_1B6383E40((uint64_t)v110);
    sub_1B62C7BF4((uint64_t)v110);
    uint64_t v54 = v111;
    uint64_t v55 = v109;
    if (v109 == 260) {
      uint64_t v56 = 260;
    }
    else {
      uint64_t v56 = 0;
    }
    sub_1B62C7BF4((uint64_t)v108);
    sub_1B62C7BF4((uint64_t)v105);
    uint64_t v57 = *v42;
    v119.i32[0] = 0;
    v119.i64[1] = v53;
    long long v120 = 0uLL;
    *(void *)&long long v121 = 0;
    *((void *)&v121 + 1) = v54;
    long long v122 = 0uLL;
    *(void *)&long long v123 = 0;
    *((void *)&v123 + 1) = v55;
    *(void *)&long long v124 = v56;
    *((void *)&v124 + 1) = v52;
    if ((sub_1B6382B10(&v119, (uint64_t)v57) & 1) == 0)
    {
      char v58 = swift_isUniquelyReferenced_nonNull_native();
      void *v42 = v57;
      if ((v58 & 1) == 0)
      {
        uint64_t v57 = sub_1B6383918(0, *((void *)v57 + 2) + 1, 1, v57);
        void *v42 = v57;
      }
      unint64_t v60 = *((void *)v57 + 2);
      unint64_t v59 = *((void *)v57 + 3);
      if (v60 >= v59 >> 1) {
        uint64_t v57 = sub_1B6383918(v59 > 1, v60 + 1, 1, v57);
      }
      *((void *)v57 + 2) = v60 + 1;
      uint64_t v61 = &v57[96 * v60];
      long long v62 = v120;
      *((int64x2_t *)v61 + 2) = v119;
      *((_OWORD *)v61 + 3) = v62;
      long long v63 = v121;
      long long v64 = v122;
      long long v65 = v124;
      *((_OWORD *)v61 + 6) = v123;
      *((_OWORD *)v61 + 7) = v65;
      *((_OWORD *)v61 + 4) = v63;
      *((_OWORD *)v61 + 5) = v64;
      *(void *)(v1 + 784) = v57;
      sub_1B6382BCC();
    }
    sub_1B6383B70(v112);
    char v66 = *v42;
    *(_DWORD *)char v118 = 0;
    *(_OWORD *)&v118[8] = v112[0];
    *(_OWORD *)&v118[24] = v112[1];
    *(_OWORD *)&v118[40] = v112[2];
    *(_OWORD *)&v118[56] = v112[3];
    *(_OWORD *)&v118[72] = v112[4];
    *(void *)&v118[88] = v113;
    if ((sub_1B6382B10((int64x2_t *)v118, (uint64_t)v66) & 1) == 0)
    {
      char v67 = swift_isUniquelyReferenced_nonNull_native();
      void *v42 = v66;
      if ((v67 & 1) == 0)
      {
        char v66 = sub_1B6383918(0, *((void *)v66 + 2) + 1, 1, v66);
        void *v42 = v66;
      }
      unint64_t v69 = *((void *)v66 + 2);
      unint64_t v68 = *((void *)v66 + 3);
      if (v69 >= v68 >> 1) {
        char v66 = sub_1B6383918(v68 > 1, v69 + 1, 1, v66);
      }
      *((void *)v66 + 2) = v69 + 1;
      uint64_t v70 = &v66[96 * v69];
      long long v71 = *(_OWORD *)&v118[16];
      *((_OWORD *)v70 + 2) = *(_OWORD *)v118;
      *((_OWORD *)v70 + 3) = v71;
      long long v72 = *(_OWORD *)&v118[32];
      long long v73 = *(_OWORD *)&v118[48];
      long long v74 = *(_OWORD *)&v118[80];
      *((_OWORD *)v70 + 6) = *(_OWORD *)&v118[64];
      *((_OWORD *)v70 + 7) = v74;
      *((_OWORD *)v70 + 4) = v72;
      *((_OWORD *)v70 + 5) = v73;
      *(void *)(v1 + 784) = v66;
      sub_1B6382BCC();
    }
    sub_1B6383E40((uint64_t)v114);
    uint64_t v75 = v115;
    uint64_t v76 = v42;
    if (v115 == 260) {
      uint64_t v77 = 260;
    }
    else {
      uint64_t v77 = 0;
    }
    sub_1B62C7BF4((uint64_t)v114);
    uint64_t v78 = *v76;
    *(_DWORD *)uint64_t v116 = dword_1EB985420 & 0x800;
    memset(&v116[8], 0, 64);
    *(void *)&v116[72] = v75;
    *(void *)&long long v117 = v77;
    *((void *)&v117 + 1) = 1;
    uint64_t result = sub_1B6382B10((int64x2_t *)v116, (uint64_t)v78);
    if ((result & 1) == 0)
    {
      char v79 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v87 = v78;
      if ((v79 & 1) == 0)
      {
        uint64_t v78 = sub_1B6383918(0, *((void *)v78 + 2) + 1, 1, v78);
        *uint64_t v87 = v78;
      }
      unint64_t v81 = *((void *)v78 + 2);
      unint64_t v80 = *((void *)v78 + 3);
      if (v81 >= v80 >> 1) {
        uint64_t v78 = sub_1B6383918(v80 > 1, v81 + 1, 1, v78);
      }
      *((void *)v78 + 2) = v81 + 1;
      uint64_t v82 = &v78[96 * v81];
      long long v83 = *(_OWORD *)&v116[16];
      *((_OWORD *)v82 + 2) = *(_OWORD *)v116;
      *((_OWORD *)v82 + 3) = v83;
      long long v84 = *(_OWORD *)&v116[32];
      long long v85 = *(_OWORD *)&v116[48];
      long long v86 = v117;
      *((_OWORD *)v82 + 6) = *(_OWORD *)&v116[64];
      *((_OWORD *)v82 + 7) = v86;
      *((_OWORD *)v82 + 4) = v84;
      *((_OWORD *)v82 + 5) = v85;
      *(void *)(v1 + 784) = v78;
      return sub_1B6382BCC();
    }
  }
  return result;
}

uint64_t sub_1B6382B10(int64x2_t *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  for (uint64_t i = (void *)(a2 + 120);
        *((_DWORD *)i - 22) != a1->i32[0]
     || *(i - 10) != a1->i64[1]
     || (vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(i - 9), a1[1]), (int32x4_t)vceqq_s64(*(int64x2_t *)(i - 7), a1[2])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(i - 5), a1[3]), (int32x4_t)vceqq_s64(*(int64x2_t *)(i - 3), a1[4])))), 7uLL))) & 1) == 0|| *(i - 1) != a1[5].i64[0]|| *i != a1[5].i64[1];
        i += 12)
  {
    if (!--v2) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1B6382BCC()
{
  uint64_t v1 = byte_1F0FA7380;
  uint64_t v2 = *(void *)(v0 + 784);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v2 + 32;
    do
    {
      if (byte_1F0FA7380 != 1 || (*(unsigned char *)(v5 + 1) & 0x50) == 0) {
        ++v4;
      }
      v5 += 96;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *(char **)(v0 + 792);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 792) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v6 = sub_1B6C166A8((uint64_t)v6);
  }
  *(void *)&v6[8 * v1 + 32] = v4;
  *(void *)(v0 + 792) = v6;
  uint64_t v8 = byte_1F0FA7381;
  uint64_t v9 = *(void *)(v0 + 784);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = 0;
    uint64_t v12 = v9 + 32;
    do
    {
      if (byte_1F0FA7381 != 1 || (*(unsigned char *)(v12 + 1) & 0x50) == 0) {
        ++v11;
      }
      v12 += 96;
      --v10;
    }
    while (v10);
  }
  else
  {
    uint64_t v11 = 0;
  }
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 792) = v6;
  if ((v13 & 1) == 0) {
    uint64_t v6 = sub_1B6C166A8((uint64_t)v6);
  }
  *(void *)&v6[8 * v8 + 32] = v11;
  *(void *)(v0 + 792) = v6;
  uint64_t v14 = byte_1F0FA7382;
  uint64_t v15 = *(void *)(v0 + 784);
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = 0;
    uint64_t v18 = v15 + 32;
    do
    {
      if (byte_1F0FA7382 != 1 || (*(unsigned char *)(v18 + 1) & 0x50) == 0) {
        ++v17;
      }
      v18 += 96;
      --v16;
    }
    while (v16);
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 792) = v6;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B6C166A8((uint64_t)v6);
    uint64_t v6 = (char *)result;
  }
  *(void *)&v6[8 * v14 + 32] = v17;
  *(void *)(v0 + 792) = v6;
  return result;
}

double sub_1B6382D68()
{
  sub_1B6388BC4(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 537);
  *(_OWORD *)(v1 + 16) = xmmword_1B6E77D10;
  *(_OWORD *)(v1 + 32) = xmmword_1B6E87140;
  *(unsigned char *)(v1 + 48) = 0;
  *(void *)(v1 + 64) = v2;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(void *)(v1 + 120) = 0;
  *(unsigned char *)(v1 + 128) = 13;
  uint64_t v3 = *(unsigned __int8 *)(v0 + 600);
  *(_OWORD *)(v1 + 144) = xmmword_1B6E87150;
  *(unsigned char *)(v1 + 160) = 0;
  *(void *)(v1 + 176) = v3;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  *(void *)(v1 + 232) = 0;
  *(unsigned char *)(v1 + 240) = 13;
  uint64_t v4 = *(unsigned __int8 *)(v0 + 538);
  *(_OWORD *)(v1 + 256) = xmmword_1B6E87160;
  *(unsigned char *)(v1 + 272) = 0;
  *(void *)(v1 + 288) = v4;
  *(_OWORD *)(v1 + 296) = 0u;
  *(_OWORD *)(v1 + 312) = 0u;
  *(_OWORD *)(v1 + 328) = 0u;
  *(void *)(v1 + 344) = 0;
  *(unsigned char *)(v1 + 352) = 13;
  *(void *)(v0 + 512) = v1;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 537) == 1)
  {
    uint64_t v6 = *(void **)(v0 + 512);
    int64_t v7 = v6[2];
    int64_t v8 = v7 + 5;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v0 + 512) = v6;
    if (!isUniquelyReferenced_nonNull_native || v8 > v6[3] >> 1)
    {
      if (v7 <= v8) {
        int64_t v10 = v7 + 5;
      }
      else {
        int64_t v10 = v7;
      }
      uint64_t v6 = sub_1B62D96F4(isUniquelyReferenced_nonNull_native, v10, 1, v6);
    }
    *(void *)(v0 + 512) = v6;
    unint64_t v12 = v6[2];
    unint64_t v11 = v6[3];
    if (v12 >= v11 >> 1)
    {
      uint64_t v6 = sub_1B62D96F4(v11 > 1, v12 + 1, 1, v6);
      *(void *)(v0 + 512) = v6;
    }
    v6[2] = v12 + 1;
    char v13 = &v6[14 * v12];
    *((_OWORD *)v13 + 2) = xmmword_1B6E87170;
    *((unsigned char *)v13 + 48) = 0;
    v13[8] = 1;
    long long v14 = 0uLL;
    *(_OWORD *)(v13 + 9) = 0u;
    *(_OWORD *)(v13 + 11) = 0u;
    *(_OWORD *)(v13 + 13) = 0u;
    v13[15] = 0;
    *((unsigned char *)v13 + 128) = 13;
    uint64_t v15 = *(void **)(v0 + 512);
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1)
    {
      int64x2_t v32 = sub_1B62D96F4(v16 > 1, v17 + 1, 1, v15);
      long long v14 = 0uLL;
      uint64_t v15 = v32;
      *(void *)(v0 + 512) = v32;
    }
    _OWORD v15[2] = v17 + 1;
    uint64_t v18 = &v15[14 * v17];
    *((_OWORD *)v18 + 2) = xmmword_1B6E87180;
    *((unsigned char *)v18 + 48) = 0;
    v18[8] = 1;
    *(_OWORD *)(v18 + 9) = v14;
    *(_OWORD *)(v18 + 11) = v14;
    *(_OWORD *)(v18 + 13) = v14;
    v18[15] = 0;
    *((unsigned char *)v18 + 128) = 13;
    int64x2_t v19 = *(void **)(v0 + 512);
    unint64_t v21 = v19[2];
    unint64_t v20 = v19[3];
    if (v21 >= v20 >> 1)
    {
      int64x2_t v19 = sub_1B62D96F4(v20 > 1, v21 + 1, 1, v19);
      *(void *)(v0 + 512) = v19;
    }
    v19[2] = v21 + 1;
    uint64_t v22 = &v19[14 * v21];
    *((_OWORD *)v22 + 2) = xmmword_1B6E87190;
    *((unsigned char *)v22 + 48) = 0;
    v22[8] = 1;
    long long v23 = 0uLL;
    *(_OWORD *)(v22 + 9) = 0u;
    *(_OWORD *)(v22 + 11) = 0u;
    *(_OWORD *)(v22 + 13) = 0u;
    v22[15] = 0;
    *((unsigned char *)v22 + 128) = 13;
    uint64_t v24 = *(void **)(v0 + 512);
    unint64_t v26 = v24[2];
    unint64_t v25 = v24[3];
    if (v26 >= v25 >> 1)
    {
      int64x2_t v33 = sub_1B62D96F4(v25 > 1, v26 + 1, 1, v24);
      long long v23 = 0uLL;
      uint64_t v24 = v33;
      *(void *)(v0 + 512) = v33;
    }
    v24[2] = v26 + 1;
    unint64_t v27 = &v24[14 * v26];
    *((_OWORD *)v27 + 2) = xmmword_1B6E871A0;
    *((unsigned char *)v27 + 48) = 0;
    unsigned char v27[8] = 1;
    *(_OWORD *)(v27 + 9) = v23;
    *(_OWORD *)(v27 + 11) = v23;
    *(_OWORD *)(v27 + 13) = v23;
    v27[15] = 0;
    *((unsigned char *)v27 + 128) = 13;
    unint64_t v28 = *(void **)(v0 + 512);
    unint64_t v30 = v28[2];
    unint64_t v29 = v28[3];
    if (v30 >= v29 >> 1)
    {
      unint64_t v28 = sub_1B62D96F4(v29 > 1, v30 + 1, 1, v28);
      *(void *)(v0 + 512) = v28;
    }
    _OWORD v28[2] = v30 + 1;
    int64x2_t v31 = &v28[14 * v30];
    *((_OWORD *)v31 + 2) = xmmword_1B6E871B0;
    *((unsigned char *)v31 + 48) = 0;
    v31[8] = 1;
    double result = 0.0;
    *(_OWORD *)(v31 + 9) = 0u;
    *(_OWORD *)(v31 + 11) = 0u;
    *(_OWORD *)(v31 + 13) = 0u;
    v31[15] = 0;
    *((unsigned char *)v31 + 128) = 14;
  }
  return result;
}

uint64_t sub_1B63830F8(uint64_t a1)
{
  uint64_t v3 = sub_1B6383540(v9, 1);
  if (*(void *)(v2 + 8)) {
    *(void *)(v2 + 16) = a1;
  }
  ((void (*)(void *, void))v3)(v9, 0);
  uint64_t v5 = sub_1B6383540(v9, 13);
  if (*(void *)(v4 + 8)) {
    *(void *)(v4 + 16) = a1;
  }
  ((void (*)(void *, void))v5)(v9, 0);
  int64_t v7 = sub_1B6383540(v9, 5);
  if (*(void *)(v6 + 8)) {
    *(void *)(v6 + 16) = a1;
  }
  return ((uint64_t (*)(void *, void))v7)(v9, 0);
}

uint64_t sub_1B63831C8(uint64_t a1)
{
  uint64_t v3 = sub_1B6383540(v9, 0);
  if (*(void *)(v2 + 8)) {
    *(void *)(v2 + 16) = a1;
  }
  ((void (*)(void *, void))v3)(v9, 0);
  uint64_t v5 = sub_1B6383540(v9, 4);
  if (*(void *)(v4 + 8)) {
    *(void *)(v4 + 16) = a1;
  }
  ((void (*)(void *, void))v5)(v9, 0);
  int64_t v7 = sub_1B6383540(v9, 6);
  if (*(void *)(v6 + 8)) {
    *(void *)(v6 + 16) = a1;
  }
  return ((uint64_t (*)(void *, void))v7)(v9, 0);
}

void sub_1B638329C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

void sub_1B63832E8(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

uint64_t sub_1B6383348(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

void sub_1B6383358(char **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((void *)*a1 + 1);
  char v4 = (*a1)[98];
  if (a2)
  {
    if (v3)
    {
      char v5 = *((_DWORD *)v2 + 14);
      uint64_t v6 = *((void *)v2 + 6);
      uint64_t v8 = *((void *)v2 + 3);
      uint64_t v7 = *((void *)v2 + 4);
      uint64_t v9 = *((void *)v2 + 2);
      uint64_t v10 = *(void *)v2;
      uint64_t v11 = *((void *)v2 + 8);
      uint64_t v12 = *((void *)v2 + 9);
      v2[96] = *((_DWORD *)v2 + 10) & 1;
      v2[104] = v5 & 1;
      unint64_t v13 = *((void *)v2 + 11);
      long long v14 = (void *)**((void **)v2 + 10);
      if (v4)
      {
        uint64_t v15 = v2 + 96;
        unint64_t v16 = v2 + 104;
LABEL_8:
        uint64_t v18 = v14[7] + 80 * v13;
        *(void *)uint64_t v18 = v10;
        *(void *)(v18 + 8) = v3;
        *(void *)(v18 + 16) = v9;
        *(void *)(v18 + 24) = v8;
        *(void *)(v18 + 32) = v7;
        *(unsigned char *)(v18 + 40) = *v15;
        *(void *)(v18 + 48) = v6;
        *(unsigned char *)(v18 + 56) = *v16;
        *(void *)(v18 + 64) = v11;
        *(void *)(v18 + 72) = v12;
        goto LABEL_14;
      }
      char v19 = v2[97];
      v14[(v13 >> 6) + 8] |= 1 << v13;
      *(unsigned char *)(v14[6] + v13) = v19;
      uint64_t v20 = v14[7] + 80 * v13;
      *(void *)uint64_t v20 = v10;
      *(void *)(v20 + 8) = v3;
      *(void *)(v20 + 16) = v9;
      *(void *)(v20 + 24) = v8;
      *(void *)(v20 + 32) = v7;
      *(unsigned char *)(v20 + 40) = v2[96];
      *(void *)(v20 + 48) = v6;
      char v21 = v2[104];
LABEL_13:
      *(unsigned char *)(v20 + 56) = v21;
      *(void *)(v20 + 64) = v11;
      *(void *)(v20 + 72) = v12;
      ++v14[2];
      goto LABEL_14;
    }
  }
  else if (v3)
  {
    char v17 = *((_DWORD *)v2 + 14);
    uint64_t v6 = *((void *)v2 + 6);
    uint64_t v8 = *((void *)v2 + 3);
    uint64_t v7 = *((void *)v2 + 4);
    uint64_t v9 = *((void *)v2 + 2);
    uint64_t v10 = *(void *)v2;
    uint64_t v11 = *((void *)v2 + 8);
    uint64_t v12 = *((void *)v2 + 9);
    v2[112] = *((_DWORD *)v2 + 10) & 1;
    v2[120] = v17 & 1;
    unint64_t v13 = *((void *)v2 + 11);
    long long v14 = (void *)**((void **)v2 + 10);
    if (v4)
    {
      uint64_t v15 = v2 + 112;
      unint64_t v16 = v2 + 120;
      goto LABEL_8;
    }
    char v22 = v2[97];
    v14[(v13 >> 6) + 8] |= 1 << v13;
    *(unsigned char *)(v14[6] + v13) = v22;
    uint64_t v20 = v14[7] + 80 * v13;
    *(void *)uint64_t v20 = v10;
    *(void *)(v20 + 8) = v3;
    *(void *)(v20 + 16) = v9;
    *(void *)(v20 + 24) = v8;
    *(void *)(v20 + 32) = v7;
    *(unsigned char *)(v20 + 40) = v2[112];
    *(void *)(v20 + 48) = v6;
    char v21 = v2[120];
    goto LABEL_13;
  }
  if ((*a1)[98]) {
    sub_1B6AC986C(*((void *)v2 + 11), **((void **)v2 + 10));
  }
LABEL_14:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  free(v2);
}

uint64_t (*sub_1B6383540(void *a1, char a2))()
{
  char v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1B63835A0(v4, a2);
  return sub_1B6383298;
}

uint64_t (*sub_1B63835A0(void *a1, char a2))()
{
  char v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1B6383630(v4);
  v4[9] = sub_1B6383CC8(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_1B6383354;
}

uint64_t (*sub_1B6383630(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1B6383348;
}

void sub_1B6383664(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v4 = (*a1)[2];
  if (v2)
  {
    unint64_t v5 = v1[5];
    uint64_t v6 = *(void **)v1[4];
    if ((*a1)[6])
    {
      uint64_t v7 = (uint64_t *)(v6[7] + 24 * v5);
      *uint64_t v7 = v2;
      v7[1] = v3;
      _OWORD v7[2] = v4;
    }
    else
    {
      uint64_t v8 = v1[3];
      v6[(v5 >> 6) + 8] |= 1 << v5;
      *(void *)(v6[6] + 8 * v5) = v8;
      uint64_t v9 = (uint64_t *)(v6[7] + 24 * v5);
      *uint64_t v9 = v2;
      v9[1] = v3;
      _OWORD v9[2] = v4;
      ++v6[2];
    }
  }
  else if ((*a1)[6])
  {
    sub_1B6AC8184(v1[5], *(void *)v1[4]);
  }
  uint64_t v10 = *v1;
  sub_1B6383768(v2);
  sub_1B63837B4(v10);

  free(v1);
}

uint64_t sub_1B6383768(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B63837B4(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6383800(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 - a2;
  uint64_t v6 = *v2;
  uint64_t v7 = *(void *)(*v2 + 16);
  uint64_t v8 = v7 + a1 - a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v8 <= *(void *)(v6 + 24) >> 1)
  {
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  else
  {
    if (v7 <= v8) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v7;
    }
    uint64_t result = (uint64_t)sub_1B6383918(result, v10, 1, (char *)v6);
    uint64_t v6 = result;
    if (a1 == a2) {
      goto LABEL_11;
    }
  }
  uint64_t v11 = *(void *)(v6 + 16) - a2;
  if (v11 >= 0)
  {
    uint64_t result = (uint64_t)memmove((void *)(v6 + 32 + 96 * a1), (const void *)(v6 + 32 + 96 * a2), 96 * v11);
    *(void *)(v6 + 16) += v5;
LABEL_11:
    *uint64_t v2 = v6;
    return result;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

char *sub_1B6383918(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    uint64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = a2;
  }
  if (!v10)
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (a1) {
      goto LABEL_12;
    }
LABEL_20:
    sub_1B6397974(0, v9, v13, (uint64_t)a4);
    goto LABEL_21;
  }
  sub_1B62CB1E8(0, (unint64_t *)&unk_1EB985590, (uint64_t)&type metadata for RenderVariantDescriptor, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = (char *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  *((void *)v11 + 2) = v9;
  *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 96);
  unint64_t v13 = v11 + 32;
  if ((a1 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_12:
  if (v11 != a4 || v13 >= &a4[96 * v9 + 32]) {
    memmove(v13, a4 + 32, 96 * v9);
  }
  *((void *)a4 + 2) = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1B6383A48(__n128 *a1)
{
  uint64_t v1 = a1[1].n128_i64[0];
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B639696C();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = a1 + 7;
  do
  {
    unint64_t v6 = v4[-4].n128_u64[0];
    unint64_t v5 = v4[-4].n128_u64[1];
    unint64_t v7 = v4[-2].n128_u64[0];
    unsigned __int8 v8 = v4[-2].n128_u8[8];
    unint64_t v9 = v4[-1].n128_u64[0];
    unsigned __int8 v10 = v4[-1].n128_u8[8];
    __n128 v15 = v4[-3];
    __n128 v16 = *v4;
    unsigned __int8 v11 = v4[-5].n128_u8[0];
    unint64_t v12 = sub_1B638403C(v15);
    *(void *)((char *)v3 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
    *(unsigned char *)(v3[6] + v12) = v11;
    uint64_t v13 = v3[7] + 80 * v12;
    *(void *)uint64_t v13 = v6;
    *(void *)(v13 + 8) = v5;
    *(__n128 *)(v13 + 16) = v15;
    *(void *)(v13 + 32) = v7;
    *(unsigned char *)(v13 + 40) = v8;
    *(void *)(v13 + 48) = v9;
    *(unsigned char *)(v13 + 56) = v10;
    *(__n128 *)(v13 + 64) = v16;
    ++v3[2];
    swift_bridgeObjectRetain();
    v4 += 6;
    --v1;
  }
  while (v1);
  return v3;
}

uint64_t sub_1B6383B70@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  if (*(unsigned char *)(v3 + 536))
  {
    sub_1B6383E40((uint64_t)v13);
    sub_1B62C7BF4((uint64_t)v13);
    uint64_t v4 = v14;
    sub_1B6383E40((uint64_t)v15);
    sub_1B62C7BF4((uint64_t)v15);
    uint64_t v5 = v16;
    sub_1B6383E40((uint64_t)v17);
    sub_1B62C7BF4((uint64_t)v17);
    uint64_t v6 = v18;
    sub_1B6383E40((uint64_t)v19);
    uint64_t result = sub_1B62C7BF4((uint64_t)v19);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = v21;
    if (v6 == 260) {
      uint64_t v12 = 260;
    }
    else {
      uint64_t v12 = 0;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(v3 + 592);
    if (v6 == 260) {
      uint64_t v12 = 260;
    }
    else {
      uint64_t v12 = 0;
    }
    sub_1B6383E40((uint64_t)v13);
    sub_1B62C7BF4((uint64_t)v13);
    uint64_t v10 = v14;
    sub_1B6383E40((uint64_t)v15);
    sub_1B62C7BF4((uint64_t)v15);
    uint64_t v8 = v16;
    sub_1B6383E40((uint64_t)v17);
    sub_1B62C7BF4((uint64_t)v17);
    uint64_t v9 = v18;
    sub_1B6383E40((uint64_t)v19);
    uint64_t result = sub_1B62C7BF4((uint64_t)v19);
    uint64_t v5 = 0;
    uint64_t v11 = 1;
    uint64_t v4 = v20;
  }
  *a1 = v4;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v5;
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  a1[8] = v6;
  a1[9] = v12;
  a1[10] = v11;
  return result;
}

void (*sub_1B6383CC8(void *a1, char a2, char a3))(char **a1, char a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x80uLL);
  *a1 = v8;
  v8[10] = v3;
  *((unsigned char *)v8 + 97) = a2;
  uint64_t v9 = *v3;
  uint64_t v11 = sub_1B638403C(v10);
  char v13 = v12;
  *((unsigned char *)v8 + 98) = v12 & 1;
  uint64_t v14 = *(void *)(v9 + 24);
  uint64_t v15 = *(void *)(v9 + 16) + ((v12 & 1) == 0);
  if (v14 >= v15 && (a3 & 1) != 0)
  {
LABEL_6:
    v8[11] = v11;
    if (v13)
    {
LABEL_7:
      uint64_t v16 = *(void *)(*v4 + 56) + 80 * v11;
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      long long v19 = *(_OWORD *)(v16 + 16);
      uint64_t v20 = *(void *)(v16 + 32);
      uint64_t v21 = *(unsigned __int8 *)(v16 + 40);
      uint64_t v22 = *(void *)(v16 + 48);
      uint64_t v23 = *(unsigned __int8 *)(v16 + 56);
      uint64_t v24 = *(void *)(v16 + 64);
      uint64_t v25 = *(void *)(v16 + 72);
LABEL_11:
      void *v8 = v17;
      v8[1] = v18;
      *((_OWORD *)v8 + 1) = v19;
      v8[4] = v20;
      void v8[5] = v21;
      uint64_t v8[6] = v22;
      v8[7] = v23;
      v8[8] = v24;
      v8[9] = v25;
      return sub_1B6383358;
    }
LABEL_10:
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    long long v19 = 0uLL;
    goto LABEL_11;
  }
  if (v14 >= v15 && (a3 & 1) == 0)
  {
    sub_1B6ACFEC8();
    goto LABEL_6;
  }
  sub_1B6ABD314(v15, a3 & 1);
  uint64_t v27 = sub_1B638403C(v26);
  if ((v13 & 1) == (v28 & 1))
  {
    uint64_t v11 = v27;
    v8[11] = v27;
    if (v13) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  uint64_t result = (void (*)(char **, char))sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6383E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 56);
  long long v4 = 0uLL;
  if (*(void *)(v3 + 16))
  {
    uint64_t v5 = sub_1B638403C((__n128)0);
    if (v6)
    {
      uint64_t v7 = *(void *)(v3 + 56) + 80 * v5;
      uint64_t v8 = *(void *)v7;
      long long v16 = *(_OWORD *)(v7 + 16);
      uint64_t v9 = *(void *)(v7 + 32);
      char v10 = *(unsigned char *)(v7 + 40);
      uint64_t v11 = *(void *)(v7 + 48);
      char v12 = *(unsigned char *)(v7 + 56);
      uint64_t v13 = *(void *)(v7 + 64);
      uint64_t v14 = *(void *)(v7 + 72);
      uint64_t result = swift_bridgeObjectRetain();
      long long v4 = v16;
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t result = 0;
      uint64_t v9 = 0;
      char v10 = 0;
      uint64_t v11 = 0;
      char v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      long long v4 = 0uLL;
    }
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t result = 0;
    uint64_t v9 = 0;
    char v10 = 0;
    uint64_t v11 = 0;
    char v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  return result;
}

unint64_t sub_1B6383F34(unsigned __int8 a1)
{
  sub_1B6E33918();
  sub_1B6E33928();
  uint64_t v2 = sub_1B6E33988();
  return sub_1B6383F9C(a1, v2);
}

unint64_t sub_1B6383F9C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B6384040()
{
  char v1 = *(unsigned char *)(v0 + 328);
  id v9 = *(id *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v10 = sub_1B6384424();
  unint64_t v11 = v4;
  sub_1B6E31948();
  *(void *)(v0 + 144) = v2;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6384D58("asyncMakeFunction", 17, 2u, v10, v11, v2, v0 + 80);
  uint64_t v5 = *(void *)(v3 + 32);
  *(void *)(v0 + 224) = v5;
  *(_OWORD *)(v0 + 184) = *(_OWORD *)v3;
  id v6 = sub_1B62D4D5C(*(void *)(v0 + 184), *(void *)(v0 + 192), v5, v1);
  *(void *)(v0 + 312) = v6;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 216;
  *(void *)(v0 + 24) = sub_1B6796380;
  uint64_t v7 = swift_continuation_init();
  *(void *)(v0 + 144) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 152) = 0x40000000;
  *(void *)(v0 + 160) = sub_1B6398B48;
  *(void *)(v0 + 168) = &unk_1E6145CB8;
  *(void *)(v0 + 176) = v7;
  objc_msgSend(v9, sel_newFunctionWithDescriptor_completionHandler_, v6, v0 + 144);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1B638420C()
{
  uint64_t v14 = *(void *)(v0 + 568);
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v2 = v1 + *(void *)(v0 + 576);
  uint64_t v3 = *(void **)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 208);
  uint64_t v6 = *(void *)(v0 + 216);
  swift_unknownObjectRetain();
  sub_1B6384424();
  uint64_t v8 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setLabel_, v8);

  swift_unknownObjectRelease();
  id v9 = *(os_unfair_lock_s **)(v2 + 24);
  os_unfair_lock_lock(v9);
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = v13;
  *(void *)(v0 + 88) = v5;
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v7;
  *(void *)(v0 + 112) = v6;
  *(unsigned char *)(v0 + 120) = 1;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(v1 + 56);
  *(void *)(v1 + 56) = 0x8000000000000000;
  sub_1B6384C30(v0 + 72, v14, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 56) = v15;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v9);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62D8C10(v0 + 432);
  swift_unknownObjectRelease();
  sub_1B62D8C3C(v0 + 448);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v11 = *(uint64_t (**)(void *))(v0 + 8);
  return v11(v3);
}

uint64_t sub_1B6384424()
{
  uint64_t v1 = v0;
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_1B6E328C8();
  uint64_t v3 = *v0;
  uint64_t v2 = v0[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v3;
  unint64_t v12 = v2;
  sub_1B6E31948();
  uint64_t v4 = v0[4];
  sub_1B62D5798(v4);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v5 = v0[3];
  if (v5)
  {
    id v6 = objc_msgSend((id)swift_unknownObjectRetain(), sel_label);
    if (v6)
    {
      uint64_t v7 = v6;
      sub_1B6E31798();
      swift_unknownObjectRelease();
    }
    else
    {
      v9[0] = 0;
      v9[1] = 0xE000000000000000;
      uint64_t v10 = v5;
      sub_1B6E32B18();
      swift_unknownObjectRelease();
    }
  }
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6384640((uint64_t)(v1 + 2), (uint64_t)v9);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1B63846D0((uint64_t)v9);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B62D5DBC(v3, v2, v5, v4);
  sub_1B638491C();
  sub_1B6E31A38();
  swift_bridgeObjectRelease();
  sub_1B62D8C10((uint64_t)v9);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B6384640(uint64_t a1, uint64_t a2)
{
  sub_1B62D8B50(0, (unint64_t *)&unk_1EB9804D0, (unint64_t *)&unk_1EB9804C0, (uint64_t)&protocolRef_MTLFunction, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B63846D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B63846FC(uint64_t a1)
{
  uint64_t v2 = 1;
  uint64_t v3 = 1 << -(char)__clz(a1 - 1);
  if (a1) {
    uint64_t v2 = v3;
  }
  uint64_t v4 = (a1 + 0x7FFFF) & 0x7FFFF;
  if (a1 + 0x7FFFF <= 0) {
    uint64_t v4 = -(-(a1 + 0x7FFFF) & 0x7FFFF);
  }
  if (a1 + 0x7FFFF - v4 >= v2) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = a1 + 0x7FFFF - v4;
  }
  id v6 = objc_msgSend(*(id *)(v1 + 16), sel_newBufferWithLength_options_, v5, 0);
  if (v6)
  {
    uint64_t v7 = v6;
    swift_bridgeObjectRetain();
    sub_1B6E316E8();
    sub_1B638491C();
    sub_1B6E31A38();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v8 = (void *)sub_1B6E31768();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setLabel_, v8);

    swift_unknownObjectRetain();
    sub_1B6384970(v1, v7);
    swift_unknownObjectRelease();
    ++*(void *)(v1 + 80);
    return (uint64_t)v7;
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B638491C()
{
  unint64_t result = qword_1EB97D8F0;
  if (!qword_1EB97D8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97D8F0);
  }
  return result;
}

uint64_t sub_1B6384970(uint64_t result, void *a2)
{
  if (*(unsigned char *)(result + 24) == 1)
  {
    uint64_t v3 = result;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(v3 + 96);
    uint64_t v8 = *(void *)(v3 + 88);
    uint64_t v9 = v4;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6E316E8();
    sub_1B638491C();
    sub_1B6E31A38();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E328C8();
    sub_1B6E31948();
    id v5 = objc_msgSend(a2, sel_label);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    objc_msgSend(a2, sel_length);
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v6 = v8;
    int v7 = sub_1B6E32168();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v8 = 0;
    swift_retain();
    sub_1B6B33E34(v7, &v8, v6, v9);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6384C30(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 < v13 || (a3 & 1) == 0)
  {
    if (v12 < v13 || (a3 & 1) != 0)
    {
      sub_1B6ABA6A0(v13, a3 & 1);
      unint64_t v17 = sub_1B62C1A30(a2);
      if ((v11 & 1) != (v18 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v9 = v17;
      uint64_t v14 = *v4;
      if (v11) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    sub_1B6ACE350();
  }
  uint64_t v14 = *v4;
  if (v11)
  {
LABEL_7:
    uint64_t v15 = v14[7] + 56 * v9;
    return sub_1B638575C(a1, v15);
  }
LABEL_12:

  return sub_1B6396AEC(v9, a2, a1, v14);
}

uint64_t sub_1B6384D58@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v43 = a4;
  uint64_t v44 = a6;
  uint64_t v41 = a2;
  LODWORD(v10) = a3;
  uint64_t v42 = sub_1B6E31288();
  uint64_t v11 = *(void *)(v42 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v42, v12);
  uint64_t v15 = &v34[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13, v16);
  char v18 = &v34[-v17];
  CFTimeInterval v19 = CACurrentMediaTime();
  uint64_t v20 = qword_1EB97FF40;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1B6E312C8();
  sub_1B6385660(v21, (uint64_t)qword_1EB997E68);
  sub_1B6E312A8();
  sub_1B6E31268();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1B6E312A8();
  int v23 = sub_1B6E322B8();
  char v24 = sub_1B6E323F8();
  long long v40 = a1;
  if (v24)
  {
    int v37 = v10;
    uint64_t v25 = &v47;
    if ((v10 & 1) == 0) {
      uint64_t v25 = a1;
    }
    long long v36 = v25;
    uint64_t v38 = v11;
    long long v39 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16);
    v39(v15, v18, v42);
    uint64_t v26 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 134218242;
    uint64_t v45 = v44;
    uint64_t v46 = v10;
    sub_1B6E325A8();
    *(_WORD *)(v26 + 12) = 2080;
    int v35 = v23;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1B6385A2C(v43, a5, &v46);
    sub_1B6E325A8();
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v27 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v22, (os_signpost_type_t)v35, v27, v36, "%ld %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    uint64_t v28 = v10;
    LOBYTE(v10) = v37;
    MEMORY[0x1BA9B84C0](v28, -1, -1);
    uint64_t v29 = v26;
    uint64_t v11 = v38;
    MEMORY[0x1BA9B84C0](v29, -1, -1);

    uint64_t v30 = v42;
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v15, v42);
    v39(v15, v18, v30);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v30 = v42;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v15, v18, v42);
  }
  sub_1B6E31308();
  swift_allocObject();
  uint64_t v31 = sub_1B6E312F8();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 8))(v18, v30);
  *(void *)a7 = v31;
  *(CFTimeInterval *)(a7 + 8) = v19;
  uint64_t v33 = v41;
  *(void *)(a7 + 16) = v40;
  *(void *)(a7 + 24) = v33;
  *(unsigned char *)(a7 + 32) = v10;
  *(void *)(a7 + 40) = v43;
  *(void *)(a7 + 48) = a5;
  *(void *)(a7 + 56) = v44;
  return result;
}

uint64_t sub_1B63850F8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[627];
  uint64_t v3 = (void *)v0[3];
  sub_1B6385698(v0[635], (SEL *)&selRef_addRenderPipelineFunctionsWithDescriptor_error_);
  v0[638] = v2;
  uint64_t v4 = (void *)v0[635];
  if (v2)
  {
    uint64_t v5 = v0[605];
    swift_unknownObjectRelease();

    uint64_t v6 = *(os_unfair_lock_s **)(v5 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
    os_unfair_lock_lock(v6);
    sub_1B6385318(v5 + 96);
    os_unfair_lock_unlock(v6);

    sub_1B63852E0((uint64_t)(v0 + 573));
    int v7 = sub_1B679B538;
    uint64_t v8 = v0 + 162;
    unint64_t v9 = v0 + 603;
  }
  else
  {

    uint64_t v10 = v0[607];
    uint64_t v11 = (void *)v0[606];
    uint64_t v12 = v0[605];
    uint64_t v13 = v12 + OBJC_IVAR____TtC3VFX11ShaderCache_lock;
    uint64_t v14 = *(os_unfair_lock_s **)(v12 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
    os_unfair_lock_lock(v14);
    sub_1B6312D54(v3, v12, v10, v1, v11);
    os_unfair_lock_unlock(v14);
    uint64_t v15 = (void *)v0[635];
    uint64_t v16 = (void *)v0[634];
    uint64_t v17 = v0[605];
    swift_unknownObjectRelease();

    char v18 = *(os_unfair_lock_s **)(v13 + 24);
    os_unfair_lock_lock(v18);
    sub_1B6385318(v17 + 96);
    os_unfair_lock_unlock(v18);

    sub_1B63852E0((uint64_t)(v0 + 573));
    int v7 = sub_1B638FC6C;
    unint64_t v9 = v0 + 603;
    uint64_t v8 = v0 + 162;
  }
  return MEMORY[0x1F41881D0](v8, v9, v7, v0 + 2);
}

uint64_t sub_1B63852E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6385318(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B6E312D8();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  int v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1B6E31288();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = &v26[-v15];
  *(double *)a1 = *(double *)a1 + CACurrentMediaTime() - *(double *)(v2 + 8);
  ++*(void *)(a1 + 8);
  if (qword_1EB97FF40 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1B6E312C8();
  sub_1B6385660(v17, (uint64_t)qword_1EB997E68);
  char v18 = sub_1B6E312A8();
  sub_1B6E312E8();
  int v27 = sub_1B6E322A8();
  if (sub_1B6E323F8())
  {
    if (*(unsigned char *)(v2 + 32)) {
      CFTimeInterval v19 = &v29;
    }
    else {
      CFTimeInterval v19 = *(const char **)(v2 + 16);
    }
    uint64_t v21 = v28;
    swift_retain();
    sub_1B6E31318();
    swift_release();
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v21 + 88))(v7, v4) == *MEMORY[0x1E4FBD340])
    {
      uint64_t v22 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v7, v4);
      uint64_t v22 = "";
    }
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v13, v16, v8);
    int v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v23 = 0;
    os_signpost_id_t v24 = sub_1B6E31278();
    _os_signpost_emit_with_name_impl(&dword_1B6287000, v18, (os_signpost_type_t)v27, v24, v19, v22, v23, 2u);
    MEMORY[0x1BA9B84C0](v23, -1, -1);

    uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
    v25(v16, v8);
    return ((uint64_t (*)(unsigned char *, uint64_t))v25)(v13, v8);
  }
  else
  {

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v16, v8);
  }
}

uint64_t sub_1B6385660(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1B6385698(uint64_t result, SEL *a2)
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  if (*(void *)(v2 + 144))
  {
    v5[0] = 0;
    if (objc_msgSend((id)swift_unknownObjectRetain(), *a2, result, v5))
    {
      id v3 = v5[0];
    }
    else
    {
      id v4 = v5[0];
      sub_1B6E30D78();

      swift_willThrow();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B638575C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t assignWithTake for ShaderCache.CacheEntry(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1B638599C(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1B6385810()
{
  unsigned __int8 v1 = *(unsigned char *)(v0 + 66);
  uint64_t v2 = *(void *)(v0 + 624);
  uint64_t v3 = *(void *)(v0 + 616);
  uint64_t v4 = *(void *)(v0 + 608);
  uint64_t v5 = *(void *)(v0 + 600);
  uint64_t v6 = *(void *)(v0 + 592);
  uint64_t v7 = *(void *)(v0 + 584);
  swift_unknownObjectRelease();
  sub_1B6385A14(v7, v6, v5, v4, v3, v2, v1);
  swift_bridgeObjectRelease();
  sub_1B6384640(v0 + 240, v0 + 464);
  sub_1B62D8C10(v0 + 464);
  swift_unknownObjectRelease();
  sub_1B62D8C3C(v0 + 448);
  swift_unknownObjectRelease();
  sub_1B6385A14(v7, v6, v5, v4, v3, v2, v1);
  sub_1B6385A14(v7, v6, v5, v4, v3, v2, v1);
  uint64_t v8 = *(void *)(v0 + 128);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v9(v8);
}

uint64_t sub_1B638599C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1B6385A14(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255) {
    return sub_1B638599C(result, a2, a3, a4, a5, a6, a7 & 1);
  }
  return result;
}

uint64_t sub_1B6385A2C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1B6385B00(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1B62CAAD8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1B62CAAD8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1B6385B00(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1B6E325D8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1B6385CBC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1B6E329D8();
  if (!v8)
  {
    sub_1B6E32BD8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1B6E32C88();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1B6385CBC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1B6385D54(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B67A1FA8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1B67A1FA8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1B6385D54(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1B6385ECC(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1B6E328D8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1B6E32BD8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1B6E31998();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1B6E32C88();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1B6385ECC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B6386038(0, (unint64_t *)&unk_1EB980DB0, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  void v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_1B6385F54(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B6385FA0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B6385FEC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B6386038(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B6386084(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B63860D0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B638611C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B6386168(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}