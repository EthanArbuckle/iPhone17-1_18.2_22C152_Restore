uint64_t sub_1B6728DBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673EA58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677B3F0);
}

uint64_t sub_1B6728E38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673CDE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(void))type metadata accessor for VFXForceFieldType,
           (uint64_t)sub_1B677B358);
}

uint64_t sub_1B6728EC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677B2A0);
}

uint64_t sub_1B6728F44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677B190);
}

uint64_t sub_1B6728FC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673CDE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(void))type metadata accessor for VFXForceFieldShape,
           (uint64_t)sub_1B677B0F8);
}

uint64_t sub_1B6729050(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B677B004;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6729480(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673CDE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(void))type metadata accessor for VFXForceFieldScope,
           (uint64_t)sub_1B677AF6C);
}

uint64_t sub_1B6729510(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673CDE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(void))type metadata accessor for VFXForceFieldCullMode,
           (uint64_t)sub_1B677AED4);
}

uint64_t sub_1B67295A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B672961C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677AE1C);
}

uint64_t sub_1B672961C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  char v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  uint64_t v34 = MEMORY[0x1E4FBC538];
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = v34;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *char v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v34;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      uint64_t v34 = (*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B6729A14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for OrientationConstraint.Mode;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for OrientationConstraint.Mode;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for OrientationConstraint.Mode;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6761754;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B6729E0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B676CED4;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B672A234(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B67543F8;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B672A65C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B677AD28;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B672AA8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B677AC34;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B672AEBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677AB7C);
}

uint64_t sub_1B672AF38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677AAC4);
}

uint64_t sub_1B672AFB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for FlockingSizeMode;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for FlockingSizeMode;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for FlockingSizeMode;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6765C9C;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B672B3AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  uint64_t v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for ParticleOrientationMode;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for ParticleOrientationMode;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *uint64_t v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for ParticleOrientationMode;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B672B7A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for ParticleRibbonProfile;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for ParticleRibbonProfile;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for ParticleRibbonProfile;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6774068;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B672BB9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for ParticleRibbonTextureMode;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for ParticleRibbonTextureMode;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for ParticleRibbonTextureMode;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6773F28;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B672BF94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6773DA8;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B672C3C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B677B934;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B672C7F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677B87C);
}

uint64_t sub_1B672C870(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B67441F0;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B672CCA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6778A40;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B672D0D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673CDE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(void))type metadata accessor for simd_quatf,
           (uint64_t)sub_1B67789E4);
}

uint64_t sub_1B672D160(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673CDE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(void))type metadata accessor for simd_float4x4,
           (uint64_t)sub_1B6778988);
}

uint64_t sub_1B672D1F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for OrientationOverVelocity.DirectionAxis;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for OrientationOverVelocity.DirectionAxis;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for OrientationOverVelocity.DirectionAxis;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B675D868;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B672D5E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B675CA24;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B672DA10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6756BD8;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B672DE38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B675F67C;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B672E260(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B675F544;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B672E690(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6778CA4);
}

uint64_t sub_1B672E70C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6778BEC);
}

uint64_t sub_1B672E788(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6738FA8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6778B34);
}

uint64_t sub_1B672E804(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B675E9E8;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B672EC34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  char v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for CollisionLayerSet;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for CollisionLayerSet;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *char v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for CollisionLayerSet;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B672F02C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for EvolutionMode;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for EvolutionMode;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for EvolutionMode;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6776C24;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B672F424(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6776944;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B672F84C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B67767EC;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B672FC74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  uint64_t v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for ScaleMode;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for ScaleMode;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *uint64_t v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for ScaleMode;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B673006C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B675DE60;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B6730494(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6757984;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B67308BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  uint64_t v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for TextureFallback;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for TextureFallback;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *uint64_t v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for TextureFallback;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B6730CB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673CDE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(void))type metadata accessor for VFXParametricModelType,
           (uint64_t)sub_1B677AA2C);
}

uint64_t sub_1B6730D44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677A974);
}

uint64_t sub_1B6730DC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B67577D4;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B67311E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for ParticleColorOverPosition.GradientMode;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for ParticleColorOverPosition.GradientMode;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for ParticleColorOverPosition.GradientMode;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6761064;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B67315E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  uint64_t v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for Composition.Operation;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for Composition.Operation;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *uint64_t v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for Composition.Operation;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B67319D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B675CF14;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B6731E00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  uint64_t v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for ColorRamp;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for ColorRamp;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *uint64_t v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for ColorRamp;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B67321F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  uint64_t v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for ParticleSortMode;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for ParticleSortMode;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *uint64_t v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for ParticleSortMode;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B67325F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  uint64_t v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for ParticleAnimationMode;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for ParticleAnimationMode;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *uint64_t v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for ParticleAnimationMode;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B67329E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for ParticlePrimitiveRenderer.Shape;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for ParticlePrimitiveRenderer.Shape;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for ParticlePrimitiveRenderer.Shape;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B67724F4;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B6732DE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677B6B0);
}

uint64_t sub_1B6732E5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673CDE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(void))type metadata accessor for simd_float4x4,
           (uint64_t)sub_1B677B654);
}

uint64_t sub_1B6732EEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677A8BC);
}

uint64_t sub_1B6732F68(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677A804);
}

uint64_t sub_1B6732FE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6754A84;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B673340C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6754944;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B6733834(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779748);
}

uint64_t sub_1B67338B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779690);
}

uint64_t sub_1B673392C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B677959C;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6733D5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6738FA8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B67794E4);
}

uint64_t sub_1B6733DD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779DA0);
}

uint64_t sub_1B6733E54(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779CE8);
}

uint64_t sub_1B6733ED0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6756D88;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B67342F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for FluidSolver2DSolverSetupType;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for FluidSolver2DSolverSetupType;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for FluidSolver2DSolverSetupType;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B6767608;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B67346F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for FluidSolver2DSolverBorderType;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for FluidSolver2DSolverBorderType;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for FluidSolver2DSolverBorderType;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B67674D8;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B6734AE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B676729C;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6734F18(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B675D5B8;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B6735340(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B675D464;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B6735768(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  uint64_t v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for TextureChannel;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for TextureChannel;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *uint64_t v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for TextureChannel;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B6735B60(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B67604C0;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B6735F88(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6760374;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B67363B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6766598;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B67367E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(void),uint64_t a24)
{
  v25 = (void *)v24;
  *(_OWORD *)(v24 + 64) = 0u;
  *(_OWORD *)(v24 + 80) = 0u;
  *(_OWORD *)(v24 + 96) = 0u;
  *(unsigned char *)(v24 + 112) = 1;
  *(void *)(v24 + 128) = 0;
  *(void *)(v24 + 136) = 0;
  *(void *)(v24 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v24 + 168) = 0;
  *(void *)(v24 + 176) = 0;
  *(void *)(v24 + 160) = v28;
  *(_DWORD *)(v24 + 184) = 0;
  *(unsigned char *)(v24 + 188) = 1;
  *(_DWORD *)(v24 + 192) = 0;
  *(unsigned char *)(v24 + 196) = 1;
  *(void *)(v24 + 200) = 0x1000100000000;
  *(unsigned char *)(v24 + 208) = 1;
  *(_WORD *)(v24 + 210) = 0;
  *(void *)(v24 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  uint64_t v32 = a23(0);
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v24 + 16) = a1;
  *(void *)(v24 + 24) = a2;
  *(void *)(v24 + 32) = a17;
  *(void *)(v24 + 40) = v32;
  *(void *)(v24 + 48) = v29;
  *(unsigned char *)(v24 + 56) = v31 & 1;
  *(_WORD *)(v24 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v24 + 184) = v35;
  *(unsigned char *)(v24 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v24 + 192) = v37;
  *(unsigned char *)(v24 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v24 + 200) = v39;
  *(unsigned char *)(v24 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_28;
    }
  }
  *(unsigned char *)(v24 + 205) = v33;
  *(unsigned char *)(v24 + 206) = a10 & 1;
  if (a12)
  {
    char v40 = 0;
  }
  else
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) != 0 || a11 >= 0x100) {
      goto LABEL_28;
    }
  }
  *(unsigned char *)(v24 + 207) = v40;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
LABEL_26:
    uint64_t v48 = v25[8];
    v25[8] = a24;
    v25[9] = a17;
    sub_1B62C6A50(v48);
    v25[21] = a18;
    v25[22] = a19;
    swift_bridgeObjectRelease();
    v25[27] = a22;
    swift_release();
    return (uint64_t)v25;
  }
  swift_bridgeObjectRelease();
  uint64_t v42 = swift_conformsToProtocol2();
  if (v42)
  {
    uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v32, v42);
    uint64_t v44 = swift_conformsToProtocol2();
    if (v44) {
      uint64_t v45 = v44;
    }
    else {
      uint64_t v45 = 0;
    }
    if (v44) {
      uint64_t v46 = v43;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v46)
    {
      uint64_t v47 = (*(uint64_t (**)(void))(v45 + 8))();
      swift_release();
      swift_release();
      v25[20] = v47;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    goto LABEL_26;
  }
  __break(1u);
LABEL_28:
  uint64_t result = sub_1B6E32BD8();
  __break(1u);
  return result;
}

uint64_t sub_1B6736BBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779AC0);
}

uint64_t sub_1B6736C38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779A08);
}

uint64_t sub_1B6736CB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779C30);
}

uint64_t sub_1B6736D30(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779B78);
}

uint64_t sub_1B6736DAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v26 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v27;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1B6E32748();
  char v30 = v29;
  sub_1B675462C(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  uint64_t v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v32;
  *(void *)(v22 + 48) = v28;
  *(unsigned char *)(v22 + 56) = v30 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v22 + 184) = v35;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v22 + 192) = v37;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v22 + 200) = v39;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v33;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  uint64_t v41 = a22;
  *(unsigned char *)(v23 + 207) = v40;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v42 = *(void *)(v23 + 64);
  *uint64_t v26 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v42);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v43 = a17;
    uint64_t v44 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v43 = a17;
    uint64_t v44 = a18;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v41 = a22;
  }
  uint64_t v53 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B675B8FC;
  *(void *)(v23 + 72) = v43;
  sub_1B62C6A50(v53);
  *(void *)(v23 + 168) = v44;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v41;
  swift_release();
  return v23;
}

uint64_t sub_1B67371D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6764E24;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6737604(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779F10);
}

uint64_t sub_1B6737680(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779E58);
}

uint64_t sub_1B67376FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  char v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for FlockingLocalAxis;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for FlockingLocalAxis;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *char v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for FlockingLocalAxis;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B6737AF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6764470;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6737F24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B67652AC;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6738354(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779950);
}

uint64_t sub_1B67383D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673CDE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t (*)(void))type metadata accessor for VFXCameraToneMappingMode,
           (uint64_t)sub_1B67798B8);
}

uint64_t sub_1B6738460(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779800);
}

uint64_t sub_1B67384DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677A138);
}

uint64_t sub_1B6738558(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677A080);
}

uint64_t sub_1B67385D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6738FA8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B6779FC8);
}

uint64_t sub_1B6738650(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677A74C);
}

uint64_t sub_1B67386CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677A694);
}

uint64_t sub_1B6738748(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B677A548;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6738B78(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B676499C;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6738FA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  char v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  uint64_t v34 = MEMORY[0x1E4FBB550];
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = v34;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *char v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v34;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      uint64_t v34 = (*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B67393A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B6741564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677A490);
}

uint64_t sub_1B673941C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  return sub_1B673F678(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           (uint64_t)sub_1B677A3D8);
}

uint64_t sub_1B6739498(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B677A2E4;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B67398C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B677A1F0;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6739CF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  char v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  uint64_t v34 = MEMORY[0x1E4FBB1A0];
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = v34;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *char v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v34;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      uint64_t v34 = (*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B673A0F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  char v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  uint64_t v34 = MEMORY[0x1E4FBC4C0];
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = v34;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *char v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v34;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      uint64_t v34 = (*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B673A4E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6746900;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B673A918(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6745F94;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B673AD48(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6744604;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B673B178(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6778050;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B673B5A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6745AEC;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B673B9D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6745E0C;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B673BE08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for ImageResizingMode;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for ImageResizingMode;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for ImageResizingMode;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B674B6C4;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B673C200(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for Material.Kind;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for Material.Kind;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for Material.Kind;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B674F1DC;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B673C5F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  uint64_t v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for Entity;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for Entity;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *uint64_t v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for Entity;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B673C9F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  uint64_t v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for BlendMode;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for BlendMode;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *uint64_t v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for BlendMode;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B673CDE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(void),uint64_t a24)
{
  v25 = (void *)v24;
  *(_OWORD *)(v24 + 64) = 0u;
  *(_OWORD *)(v24 + 80) = 0u;
  *(_OWORD *)(v24 + 96) = 0u;
  *(unsigned char *)(v24 + 112) = 1;
  *(void *)(v24 + 128) = 0;
  *(void *)(v24 + 136) = 0;
  *(void *)(v24 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v24 + 168) = 0;
  *(void *)(v24 + 176) = 0;
  *(void *)(v24 + 160) = v28;
  *(_DWORD *)(v24 + 184) = 0;
  *(unsigned char *)(v24 + 188) = 1;
  *(_DWORD *)(v24 + 192) = 0;
  *(unsigned char *)(v24 + 196) = 1;
  *(void *)(v24 + 200) = 0x1000100000000;
  *(unsigned char *)(v24 + 208) = 1;
  *(_WORD *)(v24 + 210) = 0;
  *(void *)(v24 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  uint64_t v32 = a23(0);
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v24 + 16) = a1;
  *(void *)(v24 + 24) = a2;
  *(void *)(v24 + 32) = a17;
  *(void *)(v24 + 40) = v32;
  *(void *)(v24 + 48) = v29;
  *(unsigned char *)(v24 + 56) = v31 & 1;
  *(_WORD *)(v24 + 58) = a20;
  float v34 = *(double *)&a3;
  float v35 = v34;
  if (a4) {
    float v35 = 0.0;
  }
  *(float *)(v24 + 184) = v35;
  *(unsigned char *)(v24 + 188) = a4 & 1;
  float v36 = *(double *)&a5;
  float v37 = v36;
  if (a6) {
    float v37 = 0.0;
  }
  *(float *)(v24 + 192) = v37;
  *(unsigned char *)(v24 + 196) = a6 & 1;
  float v38 = *(double *)&a7;
  float v39 = v38;
  if (a8) {
    float v39 = 0.0;
  }
  *(float *)(v24 + 200) = v39;
  *(unsigned char *)(v24 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v24 + 205) = v33;
  *(unsigned char *)(v24 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v40 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v40 = 0;
LABEL_14:
  *(unsigned char *)(v24 + 207) = v40;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v44 = a24;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v32;
    uint64_t v46 = swift_conformsToProtocol2();
    if (v46) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v32;
    }
    else {
      uint64_t v48 = 0;
    }
    if (v48) {
      uint64_t v45 = (*(uint64_t (**)(void))(v47 + 8))();
    }
    uint64_t v44 = a24;
    uint64_t v49 = swift_conformsToProtocol2();
    if (v49) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v49) {
      uint64_t v51 = v45;
    }
    else {
      uint64_t v51 = 0;
    }
    if (v51)
    {
      uint64_t v52 = (*(uint64_t (**)(void))(v50 + 8))();
      swift_release();
      swift_release();
      v25[20] = v52;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  uint64_t v53 = v25[8];
  v25[8] = v44;
  v25[9] = v42;
  sub_1B62C6A50(v53);
  v25[21] = v43;
  v25[22] = a19;
  swift_bridgeObjectRelease();
  v25[27] = a22;
  swift_release();
  return (uint64_t)v25;
}

uint64_t sub_1B673D1E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B674EA78;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B673D610(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for FilterMode;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for FilterMode;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for FilterMode;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B674E91C;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B673DA08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for TextureMipFilterMode;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for TextureMipFilterMode;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for TextureMipFilterMode;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B674E7F0;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B673DE00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  uint64_t v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for AddressMode;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for AddressMode;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *uint64_t v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for AddressMode;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B673E1F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B674441C;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B673E628(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B674611C;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B673EA58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  char v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  uint64_t v34 = MEMORY[0x1E4FBC1C8];
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = v34;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *char v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v34;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      uint64_t v34 = (*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B673EE50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for KillShape.Shape;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for KillShape.Shape;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for KillShape.Shape;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B676C560;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B673F248(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6743768;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B673F678(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  char v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  uint64_t v34 = MEMORY[0x1E4FBB470];
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = v34;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *char v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v34;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      uint64_t v34 = (*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B673FA70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6747ED8;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B673FEA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6748060;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B67402D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B67481E8;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6740700(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6748370;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6740B30(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  char v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  float v34 = &type metadata for AABB;
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = &type metadata for AABB;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *char v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = &type metadata for AABB;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      float v34 = (ValueMetadata *)(*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B6740F28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = (void *)v22;
  *(_OWORD *)(v22 + 64) = 0u;
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v26;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E32748();
  char v29 = v28;
  sub_1B6758FA4(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  uint64_t v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = v31;
  *(void *)(v22 + 48) = v27;
  *(unsigned char *)(v22 + 56) = v29 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_34;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_34:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  *(unsigned char *)(v22 + 207) = v39;
  *(unsigned char *)(v22 + 208) = a12 & 1;
  uint64_t v40 = *(void *)(v22 + 64);
  *(void *)(v22 + 64) = 0;
  *(void *)(v22 + 72) = 0;
  sub_1B62C6A50(v40);
  *(void *)(v22 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v22 + 144) = a14;
  *(void *)(v22 + 152) = a15;
  *(void *)(v22 + 80) = a16;
  *(void *)(v22 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v22 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v22 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = v31;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a19;
    uint64_t v41 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      v23[20] = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  uint64_t v52 = v23[8];
  v23[8] = sub_1B6743C54;
  v23[9] = v41;
  sub_1B62C6A50(v52);
  v23[21] = v43;
  v23[22] = v42;
  swift_bridgeObjectRelease();
  v23[27] = a22;
  swift_release();
  return (uint64_t)v23;
}

uint64_t sub_1B6741358(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (a1 == a5 && a2 == a6 && !(a3 >> 16) && v7 == a4 >> 16) {
    return 1;
  }
  else {
    return sub_1B6E33078() & 1;
  }
}

uint64_t sub_1B67413C4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97DA50, (unint64_t *)&qword_1EB9979E8);
}

uint64_t sub_1B67413E8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97DC18, (unint64_t *)&qword_1EB997A08);
}

uint64_t sub_1B674140C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97DC20, (unint64_t *)&qword_1EB997A10);
}

uint64_t sub_1B6741430(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, qword_1EB97E5C8, (unint64_t *)&qword_1EB997BD8);
}

uint64_t sub_1B6741454(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97E698, (unint64_t *)&qword_1EB997BE0);
}

uint64_t sub_1B6741478(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97E6D0, (unint64_t *)&qword_1EB997BF0);
}

uint64_t sub_1B674149C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97E920, (unint64_t *)&qword_1EB997C10);
}

uint64_t sub_1B67414C0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, qword_1EB97EAC0, (unint64_t *)&qword_1EB997C18);
}

uint64_t sub_1B67414E4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB981090, (unint64_t *)&qword_1EB997F18);
}

uint64_t sub_1B6741508(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, qword_1EB97EC88, (unint64_t *)&qword_1EB997CC8);
}

uint64_t sub_1B674152C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(a2 + 8) + 32))();
}

uint64_t sub_1B6741564(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = v23;
  *(_OWORD *)(v23 + 64) = 0u;
  char v28 = (void *)(v23 + 64);
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(unsigned char *)(v23 + 112) = 1;
  *(void *)(v23 + 128) = 0;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 120) = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 168) = 0;
  *(void *)(v23 + 176) = 0;
  *(void *)(v23 + 160) = v29;
  *(_DWORD *)(v23 + 184) = 0;
  *(unsigned char *)(v23 + 188) = 1;
  *(_DWORD *)(v23 + 192) = 0;
  *(unsigned char *)(v23 + 196) = 1;
  *(void *)(v23 + 200) = 0x1000100000000;
  *(unsigned char *)(v23 + 208) = 1;
  *(_WORD *)(v23 + 210) = 0;
  *(void *)(v23 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6E32748();
  char v32 = v31;
  swift_retain();
  swift_bridgeObjectRelease();
  char v33 = 0;
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  uint64_t v34 = MEMORY[0x1E4FBB390];
  *(void *)(v23 + 32) = a17;
  *(void *)(v23 + 40) = v34;
  *(void *)(v23 + 48) = v30;
  *(unsigned char *)(v23 + 56) = v32 & 1;
  *(_WORD *)(v23 + 58) = a20;
  float v35 = *(double *)&a3;
  float v36 = v35;
  if (a4) {
    float v36 = 0.0;
  }
  *(float *)(v23 + 184) = v36;
  *(unsigned char *)(v23 + 188) = a4 & 1;
  float v37 = *(double *)&a5;
  float v38 = v37;
  if (a6) {
    float v38 = 0.0;
  }
  *(float *)(v23 + 192) = v38;
  *(unsigned char *)(v23 + 196) = a6 & 1;
  float v39 = *(double *)&a7;
  float v40 = v39;
  if (a8) {
    float v40 = 0.0;
  }
  *(float *)(v23 + 200) = v40;
  *(unsigned char *)(v23 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v33 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v23 + 205) = v33;
  *(unsigned char *)(v23 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v41 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v41 = 0;
LABEL_14:
  uint64_t v42 = a22;
  *(unsigned char *)(v24 + 207) = v41;
  *(unsigned char *)(v24 + 208) = a12 & 1;
  uint64_t v43 = *(void *)(v24 + 64);
  *char v28 = 0;
  *(void *)(v24 + 72) = 0;
  sub_1B62C6A50(v43);
  *(void *)(v24 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v24 + 144) = a14;
  *(void *)(v24 + 152) = a15;
  *(void *)(v24 + 80) = a16;
  *(void *)(v24 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v24 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v24 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v34;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50) {
      uint64_t v34 = (*(uint64_t (**)(void))(v49 + 8))();
    }
    uint64_t v44 = a17;
    uint64_t v46 = a18;
    uint64_t v45 = a19;
    uint64_t v47 = a23;
    uint64_t v51 = swift_conformsToProtocol2();
    if (v51) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 0;
    }
    if (v51) {
      uint64_t v53 = v34;
    }
    else {
      uint64_t v53 = 0;
    }
    if (v53)
    {
      uint64_t v54 = (*(uint64_t (**)(void))(v52 + 8))();
      swift_release();
      swift_release();
      *(void *)(v24 + 160) = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v42 = a22;
  }
  uint64_t v55 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = v47;
  *(void *)(v24 + 72) = v44;
  sub_1B62C6A50(v55);
  *(void *)(v24 + 168) = v46;
  *(void *)(v24 + 176) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 216) = v42;
  swift_release();
  return v24;
}

uint64_t sub_1B674195C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, unint64_t a9, char a10, unint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int16 a20,uint64_t a21,uint64_t a22)
{
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 64) = 0u;
  uint64_t v27 = (void *)(v22 + 64);
  *(_OWORD *)(v22 + 80) = 0u;
  *(_OWORD *)(v22 + 96) = 0u;
  *(unsigned char *)(v22 + 112) = 1;
  *(void *)(v22 + 128) = 0;
  *(void *)(v22 + 136) = 0;
  *(void *)(v22 + 120) = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *(void *)(v22 + 168) = 0;
  *(void *)(v22 + 176) = 0;
  *(void *)(v22 + 160) = v28;
  *(_DWORD *)(v22 + 184) = 0;
  *(unsigned char *)(v22 + 188) = 1;
  *(_DWORD *)(v22 + 192) = 0;
  *(unsigned char *)(v22 + 196) = 1;
  *(void *)(v22 + 200) = 0x1000100000000;
  *(unsigned char *)(v22 + 208) = 1;
  *(_WORD *)(v22 + 210) = 0;
  *(void *)(v22 + 216) = 0;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1B6E32748();
  char v31 = v30;
  swift_retain();
  swift_bridgeObjectRelease();
  char v32 = 0;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  *(void *)(v22 + 32) = a17;
  *(void *)(v22 + 40) = &type metadata for MeshImportOptions.Loader;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31 & 1;
  *(_WORD *)(v22 + 58) = a20;
  float v33 = *(double *)&a3;
  float v34 = v33;
  if (a4) {
    float v34 = 0.0;
  }
  *(float *)(v22 + 184) = v34;
  *(unsigned char *)(v22 + 188) = a4 & 1;
  float v35 = *(double *)&a5;
  float v36 = v35;
  if (a6) {
    float v36 = 0.0;
  }
  *(float *)(v22 + 192) = v36;
  *(unsigned char *)(v22 + 196) = a6 & 1;
  float v37 = *(double *)&a7;
  float v38 = v37;
  if (a8) {
    float v38 = 0.0;
  }
  *(float *)(v22 + 200) = v38;
  *(unsigned char *)(v22 + 204) = a8 & 1;
  if ((a10 & 1) == 0)
  {
    char v32 = a9;
    if ((a9 & 0x8000000000000000) != 0 || a9 >= 0x100) {
      goto LABEL_35;
    }
  }
  *(unsigned char *)(v22 + 205) = v32;
  *(unsigned char *)(v22 + 206) = a10 & 1;
  if ((a12 & 1) == 0)
  {
    char v39 = a11;
    if ((a11 & 0x8000000000000000) == 0 && a11 < 0x100) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  char v39 = 0;
LABEL_14:
  uint64_t v40 = a22;
  *(unsigned char *)(v23 + 207) = v39;
  *(unsigned char *)(v23 + 208) = a12 & 1;
  uint64_t v41 = *(void *)(v23 + 64);
  *uint64_t v27 = 0;
  *(void *)(v23 + 72) = 0;
  sub_1B62C6A50(v41);
  *(void *)(v23 + 96) = a13;
  swift_retain();
  swift_release();
  *(void *)(v23 + 144) = a14;
  *(void *)(v23 + 152) = a15;
  *(void *)(v23 + 80) = a16;
  *(void *)(v23 + 88) = &off_1F0F5A050;
  swift_retain();
  swift_unknownObjectRelease();
  *(_WORD *)(v23 + 210) = a20;
  if (*(void *)(a21 + 16))
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 160) = a21;
    swift_bridgeObjectRelease();
    uint64_t v42 = a17;
    uint64_t v43 = a18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &type metadata for MeshImportOptions.Loader;
    uint64_t v45 = swift_conformsToProtocol2();
    if (v45) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v45) {
      uint64_t v47 = &type metadata for MeshImportOptions.Loader;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47) {
      uint64_t v44 = (ValueMetadata *)(*(uint64_t (**)(void))(v46 + 8))();
    }
    uint64_t v42 = a17;
    uint64_t v43 = a18;
    uint64_t v48 = swift_conformsToProtocol2();
    if (v48) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 0;
    }
    if (v48) {
      uint64_t v50 = v44;
    }
    else {
      uint64_t v50 = 0;
    }
    if (v50)
    {
      uint64_t v51 = (*(uint64_t (**)(void))(v49 + 8))();
      swift_release();
      swift_release();
      *(void *)(v23 + 160) = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    uint64_t v40 = a22;
  }
  uint64_t v52 = *(void *)(v23 + 64);
  *(void *)(v23 + 64) = sub_1B674C440;
  *(void *)(v23 + 72) = v42;
  sub_1B62C6A50(v52);
  *(void *)(v23 + 168) = v43;
  *(void *)(v23 + 176) = a19;
  swift_bridgeObjectRelease();
  *(void *)(v23 + 216) = v40;
  swift_release();
  return v23;
}

uint64_t sub_1B6741D54(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB9810E8, (unint64_t *)&qword_1EB997F20);
}

uint64_t sub_1B6741D78(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, qword_1EB9810F0, (unint64_t *)&qword_1EB997F28);
}

uint64_t sub_1B6741D9C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, qword_1EB97F438, (unint64_t *)&qword_1EB997D98);
}

uint64_t sub_1B6741DC0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97F478, (unint64_t *)&qword_1EB997DA8);
}

uint64_t sub_1B6741DE4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97F680, (unint64_t *)&qword_1EB997DB0);
}

uint64_t sub_1B6741E08(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, qword_1EB97FC38, (unint64_t *)&qword_1EB997E00);
}

uint64_t sub_1B6741E2C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, qword_1EB97FC78, (unint64_t *)&qword_1EB997E10);
}

uint64_t sub_1B6741E50(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97FDD8, (unint64_t *)&qword_1EB997E18);
}

uint64_t sub_1B6741E74(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97FDE0, (unint64_t *)&qword_1EB997E20);
}

uint64_t sub_1B6741E98(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97FDE8, (unint64_t *)&qword_1EB997E28);
}

uint64_t sub_1B6741EBC(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97FF58, (unint64_t *)&qword_1EB997E80);
}

uint64_t sub_1B6741EE0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB97FF98, (unint64_t *)&qword_1EB997E98);
}

uint64_t sub_1B6741F04(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB980048, (unint64_t *)&qword_1EB997EA8);
}

uint64_t sub_1B6741F28(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB980050, (unint64_t *)&qword_1EB997EB0);
}

uint64_t sub_1B6741F4C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB980058, (unint64_t *)&qword_1EB997EB8);
}

uint64_t sub_1B6741F70(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B666D9F8(a1, a2, a3, a4, &qword_1EB980060, (unint64_t *)&qword_1EB997EC0);
}

void *sub_1B6741F94@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_1B6741FA0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B6741FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for Scheduling, (uint64_t)&off_1F0F53B50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6741FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67420C8);
}

uint64_t sub_1B674201C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E07F0, a3);
}

uint64_t sub_1B674205C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

double sub_1B6742094()
{
  return sub_1B670C3E0(v0[2], v0[3], v0[4], &qword_1EB980D48, MEMORY[0x1E4FBB550]);
}

void *sub_1B67420C8(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6ADF71C, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B6742148);
}

uint64_t sub_1B6742130()
{
  return sub_1B67432AC();
}

void sub_1B6742148()
{
  if (!qword_1E9DCE0A8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE0A8);
    }
  }
}

uint64_t sub_1B67421B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6742204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v5 = (unint64_t)sub_1B68C75F8(a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B6712824);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6) {
      goto LABEL_4;
    }
LABEL_10:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B6E32C18();
  swift_release();
  if (!v6) {
    goto LABEL_10;
  }
LABEL_4:
  sub_1B6E32768();
  uint64_t v7 = 0;
  while (1)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = MEMORY[0x1BA9B4580](v7, v5);
    }
    else
    {
      uint64_t v8 = *(void *)(v5 + 8 * v7 + 32);
      swift_retain();
    }
    swift_retain_n();
    char v9 = sub_1B6E31708();
    swift_release();
    swift_release();
    if (v9) {
      break;
    }
    swift_release();
    if (v6 == ++v7) {
      goto LABEL_10;
    }
  }
  swift_release();
  return v8;
}

uint64_t sub_1B6742380(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  unint64_t v3 = (unint64_t)sub_1B69FEFE8(a2);
  swift_bridgeObjectRelease();
  if ((v3 & 0x8000000000000000) == 0 && (v3 & 0x4000000000000000) == 0)
  {
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4) {
      goto LABEL_4;
    }
LABEL_10:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1B6E32C18();
  swift_release();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_4:
  sub_1B6E32768();
  uint64_t v5 = 0;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = MEMORY[0x1BA9B4580](v5, v3);
    }
    else
    {
      uint64_t v6 = *(void *)(v3 + 8 * v5 + 32);
      swift_retain();
    }
    swift_retain_n();
    char v7 = sub_1B6E31708();
    swift_release();
    swift_release();
    if (v7) {
      break;
    }
    swift_release();
    if (v4 == ++v5) {
      goto LABEL_10;
    }
  }
  swift_release();
  return v6;
}

uint64_t sub_1B67424CC(void *a1)
{
  uint64_t v3 = (uint64_t)sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (!v1)
  {
    uint64_t v3 = sub_1B62C550C((uint64_t)v7, v8);
    uint64_t v4 = sub_1B6E33148();
    if (v4 == 1)
    {
      sub_1B62C550C((uint64_t)v7, v8);
      sub_1B62B1EA8();
      sub_1B6E33168();
      uint64_t v3 = v6[0];
      goto LABEL_12;
    }
    if (!v4)
    {
      sub_1B62C550C((uint64_t)v7, v8);
      uint64_t v3 = sub_1B6E33108();
LABEL_12:
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
      return v3;
    }
    sub_1B62C1550((uint64_t)v7, (uint64_t)v6);
    sub_1B6E32998();
    swift_allocError();
    sub_1B6E32958();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1B6742698@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(unsigned char *)(result + 4) & 1) == 0;
  return result;
}

void sub_1B67426AC()
{
  if (!qword_1EB980D20)
  {
    sub_1B677C76C(255, (unint64_t *)&qword_1EB9801B0);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980D20);
    }
  }
}

uint64_t sub_1B6742718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for Seed, (uint64_t)&off_1F0F9E9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9790, a2);
}

uint64_t sub_1B6742758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6742968);
}

uint64_t sub_1B6742788@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for Seed, (uint64_t)&off_1F0F9E9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B67427C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674283C);
}

uint64_t sub_1B67427F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6708074, a3);
}

void *sub_1B674283C(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE8AF0, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B67428BC);
}

uint64_t sub_1B67428A4()
{
  return sub_1B6743428();
}

void sub_1B67428BC()
{
  if (!qword_1E9DCE0B8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE0B8);
    }
  }
}

uint64_t sub_1B6742924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0C0, MEMORY[0x1E4FBC4C0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67081B0, a3);
}

void *sub_1B6742968(void *a1)
{
  return sub_1B66CC348(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67429E4, (uint64_t)sub_1B6AE8AF0, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B6742A1C);
}

uint64_t sub_1B67429E4()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B6742A1C()
{
  if (!qword_1E9DCE0C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE0C8);
    }
  }
}

uint64_t sub_1B6742A84@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6742AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67433D4);
}

uint64_t sub_1B6742AF4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 76);
  return result;
}

unsigned char *sub_1B6742B00(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 76) = *result == 1;
  return result;
}

uint64_t sub_1B6742B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6742B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6743258);
}

uint64_t sub_1B6742B84@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC624, a2);
}

uint64_t sub_1B6742BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674315C);
}

uint64_t sub_1B6742BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6742C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6742FF8);
}

uint64_t sub_1B6742C64@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711DEC(a1, v2, (uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, a2);
}

uint64_t sub_1B6742C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711E70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6742EB8);
}

void sub_1B6742CC0()
{
  if (!qword_1E9DCE0D8)
  {
    sub_1B62CB19C(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1E9DCE0D8);
    }
  }
}

uint64_t sub_1B6742D3C@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(unsigned char *)(result + 74) & 0x40) != 0;
  return result;
}

unsigned char *sub_1B6742D4C(unsigned char *result, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(a2 + 74);
  if (*result == 1)
  {
    if ((v2 & 0x40) != 0) {
      return result;
    }
    __int16 v3 = v2 | 0x40;
  }
  else
  {
    if ((v2 & 0x40) == 0) {
      return result;
    }
    __int16 v3 = v2 & 0xFFBF;
  }
  *(_WORD *)(a2 + 74) = v3;
  return result;
}

uint64_t sub_1B6742D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6742DBC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EC708, a3);
}

void sub_1B6742DBC()
{
  if (!qword_1E9DCE0E0)
  {
    sub_1B62CB19C(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE0E0);
    }
  }
}

void sub_1B6742E3C()
{
  if (!qword_1E9DCE0E8)
  {
    sub_1B62CB19C(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE0E8);
    }
  }
}

void *sub_1B6742EB8(void *a1)
{
  return sub_1B66CDDE4(a1, **(void **)(v1 + 16), *(unsigned __int8 *)(*(void *)(v1 + 16) + 8), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1B6742EE0()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B6742F28()
{
  if (!qword_1E9DCE0F0)
  {
    sub_1B62CB19C(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE0F0);
    }
  }
}

uint64_t sub_1B6742FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EC820, a3);
}

void *sub_1B6742FF8(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C72E0, (uint64_t (*)(void))sub_1B6743084);
}

uint64_t sub_1B674304C()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B6743084()
{
  if (!qword_1E9DCE0F8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE0F8);
    }
  }
}

uint64_t sub_1B67430EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE100, (uint64_t)&type metadata for EmitterDescription.PhysicsSimulation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EC95C, a3);
}

double sub_1B674312C()
{
  return sub_1B670C5D4(v0[2], v0[3], v0[4], &qword_1E9DCE108, (uint64_t)&type metadata for EmitterDescription.PhysicsSimulation);
}

void *sub_1B674315C(void *a1)
{
  return sub_1B674E9E0(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C72E0, (uint64_t (*)(void))sub_1B67431B0);
}

void sub_1B67431B0()
{
  if (!qword_1E9DCE110)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE110);
    }
  }
}

uint64_t sub_1B6743218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ECA98, a3);
}

void *sub_1B6743258(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B67432AC, (void (*)(unint64_t, uint64_t, double))sub_1B66C72E0, (uint64_t (*)(void))sub_1B67432E4);
}

uint64_t sub_1B67432AC()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B67432E4()
{
  if (!qword_1E9DCE128)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE128);
    }
  }
}

uint64_t sub_1B674334C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1B6743384()
{
  return sub_1B666CD4C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1B6743394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ECBD4, a3);
}

void *sub_1B67433D4(void *a1)
{
  return sub_1B676FBF0(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C72E0, (uint64_t (*)(void))sub_1B6743460);
}

uint64_t sub_1B6743428()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B6743460()
{
  if (!qword_1E9DCE130)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE130);
    }
  }
}

__n128 sub_1B67434C8@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

__n128 sub_1B67434D4(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1B67434E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67126DC(a1, v2, (uint64_t)&type metadata for LocalAABB, a2);
}

uint64_t sub_1B674350C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6712770(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6743A6C);
}

void sub_1B674353C(__n128 *a1@<X0>, _OWORD *a2@<X8>)
{
}

void sub_1B6743554(float32x4_t *a1, float32x4_t *a2)
{
  float32x4_t v6 = *a1;
  *(double *)v3.i64 = sub_1B6743760(*a2, a2[1]);
  *(double *)v4.i64 = sub_1B6743738(v6, v3);
  *a2 = v4;
  a2[1] = v5;
}

uint64_t sub_1B674359C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for LocalAABB, (uint64_t)&off_1F0FA8C78, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B67435E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67438D0);
}

void sub_1B6743614()
{
  if (!qword_1EB97DFD0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1EB97DFD0);
    }
  }
}

void sub_1B67436A4(__n128 *a1@<X0>, _OWORD *a2@<X8>)
{
}

void sub_1B67436BC(__n128 *a1@<X0>, double (*a2)(__n128, __n128)@<X3>, _OWORD *a3@<X8>)
{
  *(double *)&long long v4 = a2(*a1, a1[1]);
  *a3 = v4;
}

void sub_1B67436EC(float32x4_t *a1, float32x4_t *a2)
{
  float32x4_t v6 = *a1;
  *(double *)v3.i64 = sub_1B6743730(*a2, a2[1]);
  *(double *)v4.i64 = sub_1B6743738(v3, v6);
  *a2 = v4;
  a2[1] = v5;
}

double sub_1B6743730(float32x4_t a1, float32x4_t a2)
{
  *(void *)&double result = vsubq_f32(a1, a2).u64[0];
  return result;
}

double sub_1B6743738(float32x4_t a1, float32x4_t a2)
{
  a1.i32[3] = 1.0;
  a2.i32[3] = 1.0;
  v2.i64[0] = 0x3F0000003F000000;
  v2.i64[1] = 0x3F0000003F000000;
  a1.i64[0] = vmulq_f32(vaddq_f32(a1, a2), v2).u64[0];
  return *(double *)a1.i64;
}

double sub_1B6743760(float32x4_t a1, float32x4_t a2)
{
  *(void *)&double result = vaddq_f32(a1, a2).u64[0];
  return result;
}

uint64_t sub_1B6743768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670B2E4, a3);
}

void sub_1B67437AC()
{
  if (!qword_1E9DCE140)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE140);
    }
  }
}

void sub_1B6743840()
{
  if (!qword_1E9DD1D10)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1D10);
    }
  }
}

uint64_t sub_1B67438D0(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D47C8);
}

uint64_t sub_1B67438FC()
{
  return sub_1B6744260();
}

void sub_1B6743914()
{
  if (!qword_1E9DCE148)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE148);
    }
  }
}

uint64_t sub_1B67439B4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 15);
}

uint64_t sub_1B67439EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE150, (uint64_t)&type metadata for AABB, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670B3FC, a3);
}

double sub_1B6743A2C()
{
  return sub_1B670DECC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6743A4C(void *a1)
{
  return sub_1B670EB88(a1, v1[2], v1[3], v1[4]);
}

void *sub_1B6743A6C(void *a1)
{
  return sub_1B6743E00(a1, (uint64_t)sub_1B6743AC8, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t))sub_1B6ADF44C, (uint64_t (*)(void))sub_1B6743AE0, (uint64_t)&unk_1F0FBB3E0);
}

uint64_t sub_1B6743AC8()
{
  return sub_1B6743E34();
}

void sub_1B6743AE0()
{
  if (!qword_1E9DCE160)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE160);
    }
  }
}

uint64_t sub_1B6743B48()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 15);
}

uint64_t sub_1B6743B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67126DC(a1, v2, (uint64_t)&type metadata for WorldAABB, a2);
}

uint64_t sub_1B6743BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6712770(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6743DA4);
}

uint64_t sub_1B6743BDC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B6743C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6743C98);
}

uint64_t sub_1B6743C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670BE70, a3);
}

uint64_t sub_1B6743C98(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D4FD4);
}

void sub_1B6743CC4()
{
  if (!qword_1E9DCE170)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE170);
    }
  }
}

uint64_t sub_1B6743D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE150, (uint64_t)&type metadata for AABB, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670BF88, a3);
}

void *sub_1B6743DA4(void *a1)
{
  return sub_1B6743E00(a1, (uint64_t)sub_1B6743AC8, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t))sub_1B6AE96EC, (uint64_t (*)(void))sub_1B6743E74, (uint64_t)&unk_1F0FBB4D0);
}

void *sub_1B6743E00(void *a1, uint64_t a2, uint64_t (*a3)(void, void, uint64_t, uint64_t, uint64_t), uint64_t (*a4)(void), uint64_t a5)
{
  return sub_1B66D5170(a1, *(void *)(v5 + 24), *(void *)(v5 + 32), *(__n128 *)*(void *)(v5 + 16), *(__n128 *)(*(void *)(v5 + 16) + 16), *(void *)(v5 + 40), a2, a3, a4, a5);
}

uint64_t sub_1B6743E34()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B6743E74()
{
  if (!qword_1E9DCE178)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE178);
    }
  }
}

uint64_t sub_1B6743EDC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671167C(a1, v2, (uint64_t)&type metadata for WorldTransform, a2);
}

uint64_t sub_1B6743F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711700(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6743FCC);
}

uint64_t sub_1B6743F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE180, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E677C, a3);
}

double sub_1B6743F8C()
{
  return sub_1B670CF20(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6743FAC(void *a1)
{
  return sub_1B670E7C0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B6743FCC(uint64_t a1)
{
  return sub_1B6748944(a1, (uint64_t (*)(uint64_t, void, void, void, __n128, __n128, __n128, __n128))sub_1B66CC670);
}

uint64_t sub_1B6743FF8()
{
  return sub_1B6748974();
}

uint64_t sub_1B6744010()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 96, 15);
}

void sub_1B6744048(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  *(double *)&long long v3 = nullsub_1(a1);
  *a2 = v3;
}

void sub_1B6744074(uint64_t a1, uint64_t a2)
{
  sub_1B6744340();
  *(_OWORD *)(a2 + 48) = v3;
}

uint64_t sub_1B67440A4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for LastFrameWorldTransform, (uint64_t)&off_1F0F8F498, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B67440EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6744234);
}

uint64_t sub_1B674411C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671167C(a1, v2, (uint64_t)&type metadata for LastFrameWorldTransform, a2);
}

uint64_t sub_1B6744148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711700(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67441C4);
}

uint64_t sub_1B6744178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE180, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FC1BC, a3);
}

uint64_t sub_1B67441C4(uint64_t a1)
{
  return sub_1B6748944(a1, (uint64_t (*)(uint64_t, void, void, void, __n128, __n128, __n128, __n128))sub_1B66D1094);
}

uint64_t sub_1B67441F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FC304, a3);
}

uint64_t sub_1B6744234(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D1280);
}

uint64_t sub_1B6744260()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B67442A0()
{
  if (!qword_1E9DCE198)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE198);
    }
  }
}

void sub_1B6744348(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  *(double *)&long long v3 = nullsub_1(a1);
  *a2 = v3;
}

void sub_1B6744374(uint64_t a1, _OWORD *a2)
{
  sub_1B6744340();
  *a2 = v3;
}

uint64_t sub_1B67443A4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B67443EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6744460);
}

uint64_t sub_1B674441C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670AD00, a3);
}

void *sub_1B6744460(void *a1)
{
  return sub_1B676FD28(a1, (uint64_t)sub_1B67438FC, (void (*)(unint64_t, uint64_t, double))sub_1B66C6C7C, (uint64_t (*)(void))sub_1B67444BC);
}

void sub_1B67444BC()
{
  if (!qword_1E9DCE1A0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE1A0);
    }
  }
}

void sub_1B674455C(uint64_t a1, _OWORD *a2)
{
  sub_1B6744340();
  *a2 = v3;
}

uint64_t sub_1B674458C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for Normal, (uint64_t)&off_1F0FA0288, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B67445D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6744648);
}

uint64_t sub_1B6744604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67088D0, a3);
}

uint64_t sub_1B6744648(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D3B00);
}

void sub_1B6744674()
{
  if (!qword_1E9DCE1A8)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE1A8);
    }
  }
}

uint64_t sub_1B6744714()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

uint64_t sub_1B6744724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710AD0(a1, v2, (uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9B6C, a2);
}

uint64_t sub_1B6744764(uint64_t result)
{
  return sub_1B6710948(result);
}

void sub_1B674476C(float32x4_t *a1@<X0>, _OWORD *a2@<X8>)
{
  *(double *)&long long v3 = sub_1B6744D00(*a1);
  *a2 = v3;
}

void sub_1B6744798(float32x4_t *a1, _OWORD *a2)
{
  *(double *)&long long v3 = sub_1B6744C6C(*a1);
  *a2 = v3;
}

uint64_t sub_1B67447C4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B674480C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6744B70);
}

__n128 sub_1B674483C@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

__n128 sub_1B6744848(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B6744854@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B674489C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6744A30);
}

void sub_1B67448CC()
{
  if (!qword_1EB97DFE0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1EB97DFE0);
    }
  }
}

uint64_t sub_1B674495C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E0DF8, a3);
}

void sub_1B67449A0()
{
  if (!qword_1E9DCE1B0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE1B0);
    }
  }
}

void *sub_1B6744A30(void *a1)
{
  return sub_1B676FD28(a1, (uint64_t)sub_1B67438FC, (void (*)(unint64_t, uint64_t, double))sub_1B66C6B88, (uint64_t (*)(void))sub_1B6744A8C);
}

void sub_1B6744A8C()
{
  if (!qword_1E9DCE1B8)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE1B8);
    }
  }
}

uint64_t sub_1B6744B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E0F10, a3);
}

void *sub_1B6744B70(void *a1)
{
  return sub_1B676FD28(a1, (uint64_t)sub_1B67438FC, (void (*)(unint64_t, uint64_t, double))sub_1B66C6B88, (uint64_t (*)(void))sub_1B6744BCC);
}

void sub_1B6744BCC()
{
  if (!qword_1E9DCE1C0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE1C0);
    }
  }
}

double sub_1B6744C6C(float32x4_t a1)
{
  v1.i64[0] = 0x3F0000003F000000;
  v1.i64[1] = 0x3F0000003F000000;
  simd_float4 v2 = (simd_float4)vmulq_f32(a1, v1);
  v2.i32[3] = 0;
  simd_float4 x = v2;
  simd_float4 v16 = _simd_cos_f4(v2);
  _Q0 = _simd_sin_f4(x);
  _Q7 = v16;
  *(float *)&double v5 = vmlas_n_f32(-(float)(v16.f32[0] * vmuls_lane_f32(_Q0.f32[1], (float32x4_t)_Q0, 2)), vmuls_lane_f32(v16.f32[1], (float32x4_t)v16, 2), _Q0.f32[0]);
  _S4 = vmuls_lane_f32(v16.f32[0], *(float32x2_t *)_Q0.f32, 1);
  __asm { FMLA            S5, S4, V7.S[2] }
  _S4 = vmuls_lane_f32(_Q7.f32[0], *(float32x2_t *)_Q7.f32, 1);
  __asm { FMLA            S6, S4, V0.S[2] }
  HIDWORD(v5) = _S5;
  return v5;
}

double sub_1B6744D00(float32x4_t a1)
{
  _Q2 = a1;
  int8x16_t v2 = (int8x16_t)vmulq_f32(a1, a1);
  float v3 = vaddv_f32(vadd_f32(*(float32x2_t *)v2.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL)));
  double v4 = 0.0;
  if (v3 != 0.0)
  {
    float v5 = _Q2.f32[3];
    _S9 = _Q2.f32[1];
    float v7 = _Q2.f32[2];
    __asm { FMLA            S1, S9, V2.S[3] }
    float v13 = _S1 / v3;
    double v14 = (float)(_S1 / v3);
    if (v14 <= 0.4999)
    {
      if (v14 >= -0.4999)
      {
        float v18 = *(float *)&v2.i32[1];
        uint64_t v19 = v2.i64[1];
        float v21 = _Q2.f32[0];
        float v22 = *(float *)v2.i32;
        float v24 = atan2f((float)((float)(_Q2.f32[0] * _Q2.f32[3]) + (float)(_Q2.f32[1] * _Q2.f32[2]))+ (float)((float)(_Q2.f32[0] * _Q2.f32[3]) + (float)(_Q2.f32[1] * _Q2.f32[2])), *(float *)&v2.i32[3]+ (float)(*(float *)&v2.i32[2] + (float)((float)-*(float *)v2.i32 - *(float *)&v2.i32[1])));
        float v23 = asinf(v13 + v13);
        atan2f((float)((float)(v7 * v5) + (float)(v21 * _S9)) + (float)((float)(v7 * v5) + (float)(v21 * _S9)), *((float *)&v19 + 1) + (float)((float)(v22 - v18) - *(float *)&v19));
        return COERCE_DOUBLE(__PAIR64__(LODWORD(v23), LODWORD(v24)));
      }
      float v17 = atan2f(_Q2.f32[0], _Q2.f32[3]);
      *(float *)&double v4 = v17 + v17;
      simd_float4 v16 = &dword_1B6E500B0;
    }
    else
    {
      float v15 = atan2f(_Q2.f32[0], _Q2.f32[3]);
      *(float *)&double v4 = v15 + v15;
      simd_float4 v16 = &dword_1B6E500B4;
    }
    HIDWORD(v4) = *v16;
  }
  return v4;
}

uint64_t sub_1B6744E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE1C8, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E1028, a3);
}

double sub_1B6744EA0()
{
  return sub_1B670C704(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6744EC0(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CA0DC);
}

uint64_t sub_1B6744EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA0430, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B6744F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6744F9C);
}

uint64_t sub_1B6744F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67089E8, a3);
}

void *sub_1B6744F9C(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6ADEBA0, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B674501C);
}

uint64_t sub_1B6745004()
{
  return sub_1B6745CBC();
}

void sub_1B674501C()
{
  if (!qword_1E9DCE1E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE1E0);
    }
  }
}

uint64_t sub_1B6745084@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B67123F0(a1, v2, (uint64_t)&type metadata for Children, (uint64_t)&off_1F0FA3898, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, a2);
}

uint64_t sub_1B67450C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67452A8);
}

void sub_1B67450F0()
{
  if (!qword_1E9DCE1E8)
  {
    sub_1B62CB19C(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1E9DCE1E8);
    }
  }
}

uint64_t sub_1B674516C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67451B0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6709BDC, a3);
}

void sub_1B67451B0()
{
  if (!qword_1E9DCE1F0)
  {
    sub_1B62CB19C(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE1F0);
    }
  }
}

void sub_1B674522C()
{
  if (!qword_1E9DCE1F8)
  {
    sub_1B62CB19C(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE1F8);
    }
  }
}

uint64_t sub_1B67452A8(uint64_t a1)
{
  return sub_1B67760F4(a1, sub_1B66D887C);
}

uint64_t sub_1B67452D4()
{
  return sub_1B674C878();
}

void sub_1B67452EC()
{
  if (!qword_1E9DCE200)
  {
    sub_1B62CB19C(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE200);
    }
  }
}

uint64_t sub_1B6745378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for LookAt, (uint64_t)&off_1F0FA0038, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B67453B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6745428);
}

uint64_t sub_1B67453E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6708794, a3);
}

void *sub_1B6745428(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE8D78, (void (*)(unint64_t, uint64_t, double))sub_1B66C8538, (uint64_t (*)(void))sub_1B6745490);
}

void sub_1B6745490()
{
  if (!qword_1E9DCE208)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE208);
    }
  }
}

uint64_t sub_1B67454F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for SmoothMotion, (uint64_t)&off_1F0F5C510, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6745538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67455A8);
}

uint64_t sub_1B6745568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E2CFC, a3);
}

void *sub_1B67455A8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADFC74, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6745628);
}

uint64_t sub_1B6745610()
{
  return sub_1B674304C();
}

void sub_1B6745628()
{
  if (!qword_1E9DCE210)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE210);
    }
  }
}

uint64_t sub_1B6745690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for RenderingOrder, (uint64_t)&off_1F0F65480, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB44C, a2);
}

uint64_t sub_1B67456D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6745770);
}

uint64_t sub_1B6745700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE220, MEMORY[0x1E4FBC150], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E62B0, a3);
}

double sub_1B6745740()
{
  return sub_1B670C484(v0[2], v0[3], v0[4], (unint64_t *)&unk_1EB980D80, MEMORY[0x1E4FBC150]);
}

void *sub_1B6745770(void *a1)
{
  return sub_1B66CC348(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67457EC, (uint64_t)sub_1B6AE0D7C, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6745804);
}

uint64_t sub_1B67457EC()
{
  return sub_1B67429E4();
}

void sub_1B6745804()
{
  if (!qword_1E9DCE228)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE228);
    }
  }
}

uint64_t sub_1B674586C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for Scale1, (uint64_t)&off_1F0FA0DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67458AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674591C);
}

uint64_t sub_1B67458DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6708FCC, a3);
}

void *sub_1B674591C(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE8F58, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6745984);
}

void sub_1B6745984()
{
  if (!qword_1E9DCE230)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE230);
    }
  }
}

uint64_t sub_1B67459EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for Scale2, (uint64_t)&off_1F0FA0F38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B6745A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6745C54);
}

void sub_1B6745A5C()
{
  if (!qword_1EB97DFC0)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1EB97DFC0);
    }
  }
}

uint64_t sub_1B6745AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6709108, a3);
}

void sub_1B6745B30()
{
  if (!qword_1E9DCE238)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE238);
    }
  }
}

void sub_1B6745BC4()
{
  if (!qword_1E9DD1D20)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1D20);
    }
  }
}

void *sub_1B6745C54(void *a1)
{
  return sub_1B6773E54(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE8FD0, (void (*)(unint64_t, uint64_t, double))sub_1B66C8538, (uint64_t (*)(void))sub_1B6745CF4);
}

uint64_t sub_1B6745CBC()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B6745CF4()
{
  if (!qword_1E9DCE240)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE240);
    }
  }
}

uint64_t sub_1B6745D94@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for Scale3, (uint64_t)&off_1F0FA10A0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B6745DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6745E50);
}

uint64_t sub_1B6745E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6709220, a3);
}

uint64_t sub_1B6745E50(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D3E38);
}

void sub_1B6745E7C()
{
  if (!qword_1E9DCE248)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE248);
    }
  }
}

uint64_t sub_1B6745F1C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B6745F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6745FD8);
}

uint64_t sub_1B6745F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6708404, a3);
}

uint64_t sub_1B6745FD8(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D3964);
}

void sub_1B6746004()
{
  if (!qword_1E9DCE250)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE250);
    }
  }
}

uint64_t sub_1B67460A4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B67460EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6746160);
}

uint64_t sub_1B674611C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670AE18, a3);
}

uint64_t sub_1B6746160(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D462C);
}

void sub_1B674618C()
{
  if (!qword_1E9DCE258)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE258);
    }
  }
}

uint64_t sub_1B674622C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for AngularVelocity, (uint64_t)&off_1F0F67CE8, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B6746274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67462E8);
}

uint64_t sub_1B67462A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E68C4, a3);
}

uint64_t sub_1B67462E8(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CC85C);
}

void sub_1B6746314()
{
  if (!qword_1E9DCE260)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE260);
    }
  }
}

unsigned __int8 *sub_1B67463B4@<X0>(unsigned __int8 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B67463C0(uint64_t *a1)
{
  return sub_1B6670FE8(*a1);
}

uint64_t sub_1B67463E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for SpaceOverride, (uint64_t)&off_1F0F61DE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6746428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6746638);
}

uint64_t sub_1B6746458@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for SpaceOverride, (uint64_t)&off_1F0F61DE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DACC4, a2);
}

uint64_t sub_1B6746498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674653C);
}

uint64_t sub_1B67464C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE270, (uint64_t)&type metadata for EntitySpace, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E4B54, a3);
}

double sub_1B6746508()
{
  return sub_1B670CD4C(v0[2], v0[3], v0[4], &qword_1E9DCE278, (uint64_t)&type metadata for EntitySpace);
}

void *sub_1B674653C(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C6EC8, (uint64_t (*)(void))sub_1B6746590);
}

void sub_1B6746590()
{
  if (!qword_1E9DCE280)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE280);
    }
  }
}

uint64_t sub_1B67465F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E4C90, a3);
}

void *sub_1B6746638(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B6742130, (void (*)(unint64_t, uint64_t, double))sub_1B66C6EC8, (uint64_t (*)(void))sub_1B674668C);
}

void sub_1B674668C()
{
  if (!qword_1E9DCE288)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE288);
    }
  }
}

uint64_t sub_1B67466F4@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6711F2C(a1, v2, (uint64_t)&type metadata for Name, (uint64_t)&off_1F0F9E630, a2);
}

uint64_t sub_1B6746720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6746790);
}

uint64_t sub_1B6746750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6707F38, a3);
}

uint64_t sub_1B6746790()
{
  return sub_1B66D6D5C(**(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 8), *(void *)(v0 + 24), *(void *)(v0 + 32), (uint64_t)sub_1B6746808, (void (*)(unint64_t, uint64_t, double))sub_1B66C69A0, (uint64_t (*)(void))sub_1B6746820);
}

uint64_t sub_1B6746808()
{
  return sub_1B674CC20();
}

void sub_1B6746820()
{
  if (!qword_1E9DCE298)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE298);
    }
  }
}

uint64_t sub_1B6746888@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B67468D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6746944);
}

uint64_t sub_1B6746900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67082EC, a3);
}

void *sub_1B6746944(void *a1)
{
  return sub_1B676FD28(a1, (uint64_t)sub_1B67438FC, (void (*)(unint64_t, uint64_t, double))sub_1B66C6A94, (uint64_t (*)(void))sub_1B67469A0);
}

void sub_1B67469A0()
{
  if (!qword_1E9DCE2A0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2A0);
    }
  }
}

uint64_t sub_1B6746A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleRoughness, (uint64_t)&off_1F0F73618, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6746A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6746AF0);
}

uint64_t sub_1B6746AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EAC70, a3);
}

void *sub_1B6746AF0(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE2570, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6746B58);
}

void sub_1B6746B58()
{
  if (!qword_1E9DCE2A8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2A8);
    }
  }
}

uint64_t sub_1B6746BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleMetalness, (uint64_t)&off_1F0F730C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6746C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6746C70);
}

uint64_t sub_1B6746C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EAA1C, a3);
}

void *sub_1B6746C70(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE2404, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6746CD8);
}

void sub_1B6746CD8()
{
  if (!qword_1E9DCE2B0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2B0);
    }
  }
}

uint64_t sub_1B6746D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleEmission, (uint64_t)&off_1F0F6D428, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6746D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6746DF0);
}

uint64_t sub_1B6746DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E8828, a3);
}

void *sub_1B6746DF0(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE1960, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6746E58);
}

void sub_1B6746E58()
{
  if (!qword_1E9DCE2B8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2B8);
    }
  }
}

uint64_t sub_1B6746EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleAngle, (uint64_t)&off_1F0F608D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6746F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6746F70);
}

uint64_t sub_1B6746F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E3F44, a3);
}

void *sub_1B6746F70(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE02E0, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6746FD8);
}

void sub_1B6746FD8()
{
  if (!qword_1E9DCE2C0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2C0);
    }
  }
}

uint64_t sub_1B6747040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleAngleVelocity, (uint64_t)&off_1F0F88960, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6747080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67470F0);
}

uint64_t sub_1B67470B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F7258, a3);
}

void *sub_1B67470F0(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE5058, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6747158);
}

void sub_1B6747158()
{
  if (!qword_1E9DCE2C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2C8);
    }
  }
}

uint64_t sub_1B67471C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleTextureFrame, (uint64_t)&off_1F0F82BB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6747200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6747270);
}

uint64_t sub_1B6747230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F58A8, a3);
}

void *sub_1B6747270(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE4B88, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B67472D8);
}

void sub_1B67472D8()
{
  if (!qword_1E9DCE2D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2D0);
    }
  }
}

uint64_t sub_1B6747340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleID, (uint64_t)&off_1F0F532A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9790, a2);
}

uint64_t sub_1B6747380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6747420);
}

uint64_t sub_1B67473B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0C0, MEMORY[0x1E4FBC4C0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E0578, a3);
}

double sub_1B67473F0()
{
  return sub_1B670C484(v0[2], v0[3], v0[4], (unint64_t *)&unk_1E9DCFCE0, MEMORY[0x1E4FBC4C0]);
}

void *sub_1B6747420(void *a1)
{
  return sub_1B66CC348(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67457EC, (uint64_t)sub_1B6ADF6A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B674749C);
}

void sub_1B674749C()
{
  if (!qword_1E9DCE2D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2D8);
    }
  }
}

float sub_1B6747504@<S0>(float *a1@<X0>, float *a2@<X8>)
{
  float result = 1.0 / *a1;
  *a2 = result;
  return result;
}

float *sub_1B6747518(float *result, float *a2)
{
  float v2 = 1000.0;
  if (*result > 0.001) {
    float v2 = 1.0 / *result;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_1B6747548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for Mass, (uint64_t)&off_1F0F9E398, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6747588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67475F8);
}

uint64_t sub_1B67475B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6707DFC, a3);
}

void *sub_1B67475F8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE8A78, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6747660);
}

void sub_1B6747660()
{
  if (!qword_1E9DCE2E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2E0);
    }
  }
}

uint64_t sub_1B67476C8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for LinearFactor, (uint64_t)&off_1F0F5A7E8, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B6747710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6747784);
}

uint64_t sub_1B6747740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E296C, a3);
}

uint64_t sub_1B6747784(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CAF00);
}

void sub_1B67477B0()
{
  if (!qword_1E9DCE2E8)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2E8);
    }
  }
}

uint64_t sub_1B6747850@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for AngularFactor, (uint64_t)&off_1F0F5D9D0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B6747898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674790C);
}

uint64_t sub_1B67478C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E3328, a3);
}

uint64_t sub_1B674790C(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CB228);
}

void sub_1B6747938()
{
  if (!qword_1E9DCE2F0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2F0);
    }
  }
}

uint64_t sub_1B67479D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6747A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6747A88);
}

uint64_t sub_1B6747A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E1170, a3);
}

void *sub_1B6747A88(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADF89C, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6747AF0);
}

void sub_1B6747AF0()
{
  if (!qword_1E9DCE2F8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE2F8);
    }
  }
}

uint64_t sub_1B6747B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleLifetime, (uint64_t)&off_1F0F6DC48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6747B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6747C08);
}

uint64_t sub_1B6747BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E8BB8, a3);
}

void *sub_1B6747C08(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE1AC0, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6747C70);
}

void sub_1B6747C70()
{
  if (!qword_1E9DCE300)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE300);
    }
  }
}

uint64_t sub_1B6747CD8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ParticleTarget, (uint64_t)&off_1F0F64DE8, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B6747D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6747D94);
}

uint64_t sub_1B6747D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E5DCC, a3);
}

uint64_t sub_1B6747D94(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CBE4C);
}

void sub_1B6747DC0()
{
  if (!qword_1E9DCE308)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE308);
    }
  }
}

uint64_t sub_1B6747E60@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for UserData1, (uint64_t)&off_1F0FAA358, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B6747EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6747F1C);
}

uint64_t sub_1B6747ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670BA10, a3);
}

uint64_t sub_1B6747F1C(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D4964);
}

void sub_1B6747F48()
{
  if (!qword_1E9DCE310)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE310);
    }
  }
}

uint64_t sub_1B6747FE8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for UserData2, (uint64_t)&off_1F0FAA550, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B6748030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67480A4);
}

uint64_t sub_1B6748060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670BB28, a3);
}

uint64_t sub_1B67480A4(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D4B00);
}

void sub_1B67480D0()
{
  if (!qword_1E9DCE318)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE318);
    }
  }
}

uint64_t sub_1B6748170@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for UserData3, (uint64_t)&off_1F0FAA748, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B67481B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674822C);
}

uint64_t sub_1B67481E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670BC40, a3);
}

uint64_t sub_1B674822C(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D4C9C);
}

void sub_1B6748258()
{
  if (!qword_1E9DCE320)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE320);
    }
  }
}

uint64_t sub_1B67482F8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for UserData4, (uint64_t)&off_1F0FAA940, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B6748340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67483B4);
}

uint64_t sub_1B6748370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670BD58, a3);
}

uint64_t sub_1B67483B4(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D4E38);
}

void sub_1B67483E0()
{
  if (!qword_1E9DCE328)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE328);
    }
  }
}

uint64_t sub_1B6748480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for NeighborCount, (uint64_t)&off_1F0F604D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67484C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6748530);
}

uint64_t sub_1B67484F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E3E08, a3);
}

void *sub_1B6748530(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE0268, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6748598);
}

void sub_1B6748598()
{
  if (!qword_1E9DCE330)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE330);
    }
  }
}

void sub_1B6748600(unsigned int *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6748838(*a1);
  *(double *)&long long v4 = nullsub_1(v3);
  *a2 = v4;
}

uint64_t sub_1B6748630(float32x4_t *a1, _DWORD *a2)
{
  float32x4_t v3 = *a1;
  v3.i32[3] = 1.0;
  uint64_t result = sub_1B67487EC(v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B6748664@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ParticlePivot, (uint64_t)&off_1F0F61200, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B67486AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6748720);
}

uint64_t sub_1B67486DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E4A3C, a3);
}

uint64_t sub_1B6748720(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CB8B0);
}

void sub_1B674874C()
{
  if (!qword_1E9DCE338)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE338);
    }
  }
}

uint64_t sub_1B67487EC(float32x4_t a1)
{
  v1.i64[0] = 0x3F0000003F000000;
  v1.i64[1] = 0x3F0000003F000000;
  v2.i64[0] = 0xFF000000FFLL;
  v2.i64[1] = 0xFF000000FFLL;
  int8x16_t v3 = vandq_s8((int8x16_t)vcvtq_s32_f32(vmlaq_f32(v1, (float32x4_t)vdupq_n_s32(0x437F0000u), a1)), v2);
  __int32 v4 = v3.i32[0] | (v3.i32[1] << 8);
  *(uint32x2_t *)v3.i8 = vshl_u32((uint32x2_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL), (uint32x2_t)0x1800000010);
  return v4 | v3.i32[0] | v3.i32[1];
}

double sub_1B6748838(unsigned int a1)
{
  v1.i64[0] = 0xFF000000FFLL;
  v1.i64[1] = 0xFF000000FFLL;
  *(void *)&double result = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(a1), (uint32x4_t)xmmword_1B6E50360), v1)), (float32x4_t)vdupq_n_s32(0x3B808081u)).u64[0];
  return result;
}

uint64_t sub_1B6748868@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671167C(a1, v2, (uint64_t)&type metadata for ProjectionMatrix, a2);
}

uint64_t sub_1B6748894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711700(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6748918);
}

uint64_t sub_1B67488CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE180, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E97C8, a3);
}

uint64_t sub_1B6748918(uint64_t a1)
{
  return sub_1B6748944(a1, (uint64_t (*)(uint64_t, void, void, void, __n128, __n128, __n128, __n128))sub_1B66CD86C);
}

uint64_t sub_1B6748944(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, __n128, __n128, __n128, __n128))
{
  return a2(a1, v2[3], v2[4], v2[5], *(__n128 *)v2[2], *(__n128 *)(v2[2] + 16), *(__n128 *)(v2[2] + 32), *(__n128 *)(v2[2] + 48));
}

uint64_t sub_1B6748974()
{
  return swift_setAtWritableKeyPath();
}

float sub_1B67489BC@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 4);
  *a2 = result;
  return result;
}

float sub_1B67489C8(float *a1, float *a2)
{
  float v3 = *a1;
  a2[1] = *a1;
  float v4 = atanf((float)(a2[3] * 0.5) / v3);
  float result = v4 + v4;
  *a2 = result;
  return result;
}

uint64_t sub_1B6748A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1F0F73918, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6748A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6749388);
}

float sub_1B6748A7C@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 12);
  *a2 = result;
  return result;
}

float sub_1B6748A88(float *a1, float *a2)
{
  float v3 = *a1;
  a2[3] = *a1;
  float v4 = atanf((float)(v3 * 0.5) / a2[1]);
  float result = v4 + v4;
  *a2 = result;
  return result;
}

float sub_1B6748ACC@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 12) / *(float *)(a1 + 16);
  *a2 = result;
  return result;
}

float sub_1B6748ADC(float *a1, uint64_t a2)
{
  float result = *(float *)(a2 + 12) / fmaxf(*a1, 0.01);
  *(float *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1B6748B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1F0F73918, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B6748B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674924C);
}

void sub_1B6748B70()
{
  if (!qword_1EB97DF78)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1EB97DF78);
    }
  }
}

uint64_t sub_1B6748BF4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 33);
  return result;
}

unsigned char *sub_1B6748C00(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 33) = *result == 1;
  return result;
}

uint64_t sub_1B6748C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1F0F73918, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6748C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6749030);
}

uint64_t sub_1B6748C84@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1F0F73918, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC40C, a2);
}

uint64_t sub_1B6748CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6748F20);
}

uint64_t sub_1B6748CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1F0F73918, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B6748D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6748DA8);
}

uint64_t sub_1B6748D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EADAC, a3);
}

void *sub_1B6748DA8(void *a1)
{
  return sub_1B6773E54(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6ADEE10, (void (*)(unint64_t, uint64_t, double))sub_1B66C7684, (uint64_t (*)(void))sub_1B6748E10);
}

void sub_1B6748E10()
{
  if (!qword_1E9DCE348)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE348);
    }
  }
}

uint64_t sub_1B6748EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE350, (uint64_t)&type metadata for ProjectionDirection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EAEC4, a3);
}

double sub_1B6748EF0()
{
  return sub_1B670C5D4(v0[2], v0[3], v0[4], &qword_1E9DCE358, (uint64_t)&type metadata for ProjectionDirection);
}

void *sub_1B6748F20(void *a1)
{
  return sub_1B676182C(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6ADEE10, (void (*)(unint64_t, uint64_t, double))sub_1B66C7684, (uint64_t (*)(void))sub_1B6748F88);
}

void sub_1B6748F88()
{
  if (!qword_1E9DCE360)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE360);
    }
  }
}

uint64_t sub_1B6748FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EB000, a3);
}

void *sub_1B6749030(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6ADEE10, (void (*)(unint64_t, uint64_t, double))sub_1B66C7684, (uint64_t (*)(void))sub_1B6749098);
}

void sub_1B6749098()
{
  if (!qword_1E9DCE368)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE368);
    }
  }
}

uint64_t sub_1B6749100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EB13C, a3);
}

void sub_1B6749144()
{
  if (!qword_1E9DCE370)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE370);
    }
  }
}

void sub_1B67491C8()
{
  if (!qword_1E9DCE378)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE378);
    }
  }
}

void *sub_1B674924C(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6ADEE10, (void (*)(unint64_t, uint64_t, double))sub_1B66C7684, (uint64_t (*)(void))sub_1B67492B4);
}

void sub_1B67492B4()
{
  if (!qword_1E9DCE380)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE380);
    }
  }
}

uint64_t sub_1B6749348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EB254, a3);
}

void *sub_1B6749388(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADEE10, (void (*)(unint64_t, uint64_t, double))sub_1B66C7684, (uint64_t (*)(void))sub_1B67493F0);
}

void sub_1B67493F0()
{
  if (!qword_1E9DCE388)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE388);
    }
  }
}

uint64_t sub_1B6749458@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 4);
  return result;
}

unsigned char *sub_1B6749464(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 4) = *result == 1;
  return result;
}

uint64_t sub_1B6749478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1F0F78720, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B67494B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674999C);
}

uint64_t sub_1B67494E8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1F0F78720, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC40C, a2);
}

uint64_t sub_1B6749528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67498A0);
}

uint64_t sub_1B6749558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1F0F78720, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6749598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67497A4);
}

uint64_t sub_1B67495C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1F0F78720, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B6749608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674967C);
}

uint64_t sub_1B6749638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ED0A0, a3);
}

void *sub_1B674967C(void *a1)
{
  return sub_1B675F714(a1, (uint64_t)sub_1B6745CBC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7390, (uint64_t (*)(void))sub_1B67496D0);
}

void sub_1B67496D0()
{
  if (!qword_1E9DCE390)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE390);
    }
  }
}

uint64_t sub_1B6749764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ED1B8, a3);
}

void *sub_1B67497A4(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7390, (uint64_t (*)(void))sub_1B67497F8);
}

void sub_1B67497F8()
{
  if (!qword_1E9DCE398)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE398);
    }
  }
}

uint64_t sub_1B6749860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE350, (uint64_t)&type metadata for ProjectionDirection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ED2F4, a3);
}

void *sub_1B67498A0(void *a1)
{
  return sub_1B674E9E0(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7390, (uint64_t (*)(void))sub_1B67498F4);
}

void sub_1B67498F4()
{
  if (!qword_1E9DCE3A0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE3A0);
    }
  }
}

uint64_t sub_1B674995C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ED430, a3);
}

void *sub_1B674999C(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B6742130, (void (*)(unint64_t, uint64_t, double))sub_1B66C7390, (uint64_t (*)(void))sub_1B67499F0);
}

void sub_1B67499F0()
{
  if (!qword_1E9DCE3A8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE3A8);
    }
  }
}

uint64_t sub_1B6749A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for CameraDepthOfField, (uint64_t)&off_1F0F75920, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6749A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6749B08);
}

uint64_t sub_1B6749AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EC354, a3);
}

void *sub_1B6749B08(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE2B64, (void (*)(unint64_t, uint64_t, double))sub_1B66C8538, (uint64_t (*)(void))sub_1B6749B70);
}

void sub_1B6749B70()
{
  if (!qword_1E9DCE3B0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE3B0);
    }
  }
}

uint64_t sub_1B6749BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for CameraBloom, (uint64_t)&off_1F0F545E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6749C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674A144);
}

uint64_t sub_1B6749C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for CameraBloom, (uint64_t)&off_1F0F545E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6749C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674A034);
}

uint64_t sub_1B6749CB8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for CameraBloom, (uint64_t)&off_1F0F545E8, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B6749D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6749F28);
}

uint64_t sub_1B6749D30@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for CameraBloom, (uint64_t)&off_1F0F545E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6749D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6749DE0);
}

uint64_t sub_1B6749DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E092C, a3);
}

void *sub_1B6749DE0(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6ADF824, (void (*)(unint64_t, uint64_t, double))sub_1B66C79C8, (uint64_t (*)(void))sub_1B6749E48);
}

void sub_1B6749E48()
{
  if (!qword_1E9DCE3B8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE3B8);
    }
  }
}

uint64_t sub_1B6749EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E0A68, a3);
}

double sub_1B6749EF4()
{
  return sub_1B670C67C(v0[2], v0[3], v0[4], (void (*)(void))sub_1B629CD98);
}

uint64_t sub_1B6749F28(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66C9DA4);
}

void sub_1B6749F54()
{
  if (!qword_1E9DCE3C0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE3C0);
    }
  }
}

uint64_t sub_1B6749FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E0B80, a3);
}

void *sub_1B674A034(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B67432AC, (uint64_t)sub_1B6ADF824, (void (*)(unint64_t, uint64_t, double))sub_1B66C79C8, (uint64_t (*)(void))sub_1B674A09C);
}

void sub_1B674A09C()
{
  if (!qword_1E9DCE3C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE3C8);
    }
  }
}

uint64_t sub_1B674A104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E0CBC, a3);
}

void *sub_1B674A144(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADF824, (void (*)(unint64_t, uint64_t, double))sub_1B66C79C8, (uint64_t (*)(void))sub_1B674A1AC);
}

void sub_1B674A1AC()
{
  if (!qword_1E9DCE3D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE3D0);
    }
  }
}

uint64_t sub_1B674A214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for CameraLensBlur, (uint64_t)&off_1F0F63238, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B674A254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674A7AC);
}

uint64_t sub_1B674A284@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 4);
  return result;
}

unint64_t sub_1B674A290(unint64_t *a1)
{
  return sub_1B667A3D4(*a1);
}

uint64_t sub_1B674A2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for CameraLensBlur, (uint64_t)&off_1F0F63238, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B674A2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674A69C);
}

uint64_t sub_1B674A328@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for CameraLensBlur, (uint64_t)&off_1F0F63238, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB048, a2);
}

uint64_t sub_1B674A368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674A58C);
}

uint64_t sub_1B674A398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for CameraLensBlur, (uint64_t)&off_1F0F63238, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B674A3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674A448);
}

uint64_t sub_1B674A408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E518C, a3);
}

void *sub_1B674A448(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE08F4, (void (*)(unint64_t, uint64_t, double))sub_1B66C87F0, (uint64_t (*)(void))sub_1B674A4B0);
}

void sub_1B674A4B0()
{
  if (!qword_1E9DCE3E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE3E0);
    }
  }
}

uint64_t sub_1B674A518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE3E8, (uint64_t)&type metadata for LensBlurQuality, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E52C8, a3);
}

double sub_1B674A558()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCE3F0, (uint64_t)&type metadata for LensBlurQuality);
}

void *sub_1B674A58C(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE08F4, (void (*)(unint64_t, uint64_t, double))sub_1B66C87F0, (uint64_t (*)(void))sub_1B674A5F4);
}

void sub_1B674A5F4()
{
  if (!qword_1E9DCE3F8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE3F8);
    }
  }
}

uint64_t sub_1B674A65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E5404, a3);
}

void *sub_1B674A69C(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE08F4, (void (*)(unint64_t, uint64_t, double))sub_1B66C87F0, (uint64_t (*)(void))sub_1B674A704);
}

void sub_1B674A704()
{
  if (!qword_1E9DCE400)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE400);
    }
  }
}

uint64_t sub_1B674A76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E5540, a3);
}

void *sub_1B674A7AC(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE08F4, (void (*)(unint64_t, uint64_t, double))sub_1B66C87F0, (uint64_t (*)(void))sub_1B674A814);
}

void sub_1B674A814()
{
  if (!qword_1E9DCE408)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE408);
    }
  }
}

unsigned __int8 *sub_1B674A87C@<X0>(unsigned __int8 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1B674A888(unint64_t *a1)
{
  return sub_1B6671014(*a1);
}

uint64_t sub_1B674A8B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for CameraToneMapping, (uint64_t)&off_1F0F70260, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B674A8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674AB14);
}

uint64_t sub_1B674A920@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for CameraToneMapping, (uint64_t)&off_1F0F70260, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DBF90, a2);
}

uint64_t sub_1B674A960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674AA04);
}

uint64_t sub_1B674A990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE418, (uint64_t)&type metadata for ToneMappingOperator, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E9E0C, a3);
}

double sub_1B674A9D0()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCE420, (uint64_t)&type metadata for ToneMappingOperator);
}

void *sub_1B674AA04(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE213C, (void (*)(unint64_t, uint64_t, double))sub_1B66C8740, (uint64_t (*)(void))sub_1B674AA6C);
}

void sub_1B674AA6C()
{
  if (!qword_1E9DCE428)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE428);
    }
  }
}

uint64_t sub_1B674AAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E9F48, a3);
}

void *sub_1B674AB14(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE213C, (void (*)(unint64_t, uint64_t, double))sub_1B66C8740, (uint64_t (*)(void))sub_1B674AB7C);
}

void sub_1B674AB7C()
{
  if (!qword_1E9DCE430)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE430);
    }
  }
}

uint64_t sub_1B674ABE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for CameraVignetting, (uint64_t)&off_1F0F6B268, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B674AC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674AC94);
}

uint64_t sub_1B674AC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E80E4, a3);
}

void *sub_1B674AC94(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE1870, (void (*)(unint64_t, uint64_t, double))sub_1B66C87F0, (uint64_t (*)(void))sub_1B674ACFC);
}

void sub_1B674ACFC()
{
  if (!qword_1E9DCE438)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE438);
    }
  }
}

uint64_t sub_1B674AD64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for CameraColorGrading, (uint64_t)&off_1F0F75698, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B674ADA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674AFCC);
}

uint64_t sub_1B674ADD4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for CameraColorGrading, (uint64_t)&off_1F0F75698, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B674AE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674AE90);
}

uint64_t sub_1B674AE4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EC100, a3);
}

void *sub_1B674AE90(void *a1)
{
  return sub_1B676FD28(a1, (uint64_t)sub_1B6744260, (void (*)(unint64_t, uint64_t, double))sub_1B66C7238, (uint64_t (*)(void))sub_1B674AEEC);
}

void sub_1B674AEEC()
{
  if (!qword_1E9DCE440)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE440);
    }
  }
}

uint64_t sub_1B674AF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EC218, a3);
}

void *sub_1B674AFCC(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7238, (uint64_t (*)(void))sub_1B674B020);
}

void sub_1B674B020()
{
  if (!qword_1E9DCE448)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE448);
    }
  }
}

uint64_t sub_1B674B088@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710828(a1, v2, (uint64_t)&type metadata for RenderSettings, (uint64_t)&off_1F0F65218, (uint64_t (*)(void))type metadata accessor for MTLPixelFormat, a2);
}

uint64_t sub_1B674B0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674B41C);
}

uint64_t sub_1B674B0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for RenderSettings, (uint64_t)&off_1F0F65218, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B674B138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674B2C4);
}

uint64_t sub_1B674B168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711A28(a1, v2, (uint64_t)&type metadata for RenderSettings, (uint64_t)&off_1F0F65218, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB2DC, a2);
}

uint64_t sub_1B674B1A8(uint64_t result)
{
  return sub_1B6710DEC(result);
}

uint64_t sub_1B674B1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE460, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E5EE4, a3);
}

uint64_t sub_1B674B1FC()
{
  return sub_1B670CDF0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B674B208(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    long long v6 = *(_OWORD *)(a1 + 32);
  }
  else {
    long long v6 = 0uLL;
  }
  long long v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, long long *))(v4 + 16))(v3, v5, &v8);
}

double *sub_1B674B260(double *a1)
{
  return sub_1B66CBFE8(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), **(double **)(v1 + 16), *(double *)(*(void *)(v1 + 16) + 8));
}

uint64_t sub_1B674B284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E602C, a3);
}

void *sub_1B674B2C4(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE0D04, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B674B32C);
}

void sub_1B674B32C()
{
  if (!qword_1E9DCE478)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE478);
    }
  }
}

uint64_t sub_1B674B394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE480, (uint64_t (*)(uint64_t))type metadata accessor for MTLPixelFormat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E6168, a3);
}

double sub_1B674B3E0()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCE488, (uint64_t (*)(uint64_t))type metadata accessor for MTLPixelFormat);
}

uint64_t sub_1B674B41C(uint64_t a1)
{
  return sub_1B6770108(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CC19C);
}

uint64_t sub_1B674B448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for Skybox, (uint64_t)&off_1F0FA1BB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B674B488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674BBB8);
}

uint64_t sub_1B674B4B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for Skybox, (uint64_t)&off_1F0FA1BB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B674B4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674BAA8);
}

uint64_t sub_1B674B528@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(result + 20) == 1) {
    *a2 = *(unsigned int *)(result + 16);
  }
  else {
    *a2 = 3;
  }
  return result;
}

uint64_t sub_1B674B54C(uint64_t *a1)
{
  return sub_1B667C878(*a1);
}

uint64_t sub_1B674B574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for Skybox, (uint64_t)&off_1F0FA1BB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B674B5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674B998);
}

uint64_t sub_1B674B5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for Skybox, (uint64_t)&off_1F0FA1BB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD434, a2);
}

uint64_t sub_1B674B624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674B848);
}

uint64_t sub_1B674B654@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for Skybox, (uint64_t)&off_1F0FA1BB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DEDD4, a2);
}

uint64_t sub_1B674B694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674B734);
}

uint64_t sub_1B674B6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4A0, (uint64_t)&type metadata for ImageResizingMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6709474, a3);
}

double sub_1B674B704()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCE4A8, (uint64_t)&type metadata for ImageResizingMode);
}

void *sub_1B674B734(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE9048, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B674B79C);
}

void sub_1B674B79C()
{
  if (!qword_1E9DCE4B0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE4B0);
    }
  }
}

uint64_t sub_1B674B804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4B8, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67095B0, a3);
}

void *sub_1B674B848(void *a1)
{
  return sub_1B677497C(a1, (uint64_t)sub_1B674B8B0, (uint64_t)sub_1B6AE9048, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B674B8F0);
}

uint64_t sub_1B674B8B0()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B674B8F0()
{
  if (!qword_1E9DCE4C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE4C8);
    }
  }
}

uint64_t sub_1B674B958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67096EC, a3);
}

void *sub_1B674B998(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B67432AC, (uint64_t)sub_1B6AE9048, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B674BA00);
}

void sub_1B674BA00()
{
  if (!qword_1E9DCE4D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE4D0);
    }
  }
}

uint64_t sub_1B674BA68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6709828, a3);
}

void *sub_1B674BAA8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B674304C, (uint64_t)sub_1B6AE9048, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B674BB10);
}

void sub_1B674BB10()
{
  if (!qword_1E9DCE4D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE4D8);
    }
  }
}

uint64_t sub_1B674BB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6709964, a3);
}

void *sub_1B674BBB8(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE9048, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B674BC20);
}

void sub_1B674BC20()
{
  if (!qword_1E9DCE4E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE4E0);
    }
  }
}

uint64_t sub_1B674BC88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for IBLGenerator, (uint64_t)&off_1F0F5A5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B674BCC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674BD38);
}

uint64_t sub_1B674BCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E2830, a3);
}

void *sub_1B674BD38(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADDA10, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B674BDA0);
}

void sub_1B674BDA0()
{
  if (!qword_1E9DCE4E8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE4E8);
    }
  }
}

uint64_t sub_1B674BE08@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67119A8(a1, v2, (uint64_t)&type metadata for ColorRampComponent, (uint64_t)&off_1F0F75B28, a2);
}

uint64_t sub_1B674BE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6710CAC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674BEA4);
}

uint64_t sub_1B674BE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4F0, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EC490, a3);
}

uint64_t sub_1B674BEA4(uint64_t a1)
{
  return sub_1B6758168(a1, (uint64_t (*)(void, void, void, void, void))sub_1B66D6800);
}

uint64_t sub_1B674BED0()
{
  return sub_1B6710F6C();
}

void sub_1B674BEEC()
{
  if (!qword_1E9DCE500)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE500);
    }
  }
}

uint64_t sub_1B674BF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711C34(a1, v2, (uint64_t)&type metadata for CurveComponent, (uint64_t)&off_1F0F63678, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB154, a2);
}

uint64_t sub_1B674BF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711B70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674C1D8);
}

void sub_1B674BFC8()
{
  if (!qword_1EB97DF28)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1EB97DF28);
    }
  }
}

uint64_t sub_1B674C04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B674C090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E567C, a3);
}

void sub_1B674C090()
{
  if (!qword_1E9DCE508)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE508);
    }
  }
}

uint64_t sub_1B674C114()
{
  return sub_1B670DCE4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B674C134(uint64_t a1)
{
  return sub_1B670E848(a1, v1[2], v1[3], v1[4]);
}

void sub_1B674C154()
{
  if (!qword_1E9DCE510)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE510);
    }
  }
}

uint64_t sub_1B674C1D8(uint64_t a1)
{
  return sub_1B675CAC4(a1, (uint64_t)sub_1B674C234, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6AE096C, (uint64_t (*)(void))sub_1B674C250);
}

uint64_t sub_1B674C234()
{
  return sub_1B67113B4();
}

void sub_1B674C250()
{
  if (!qword_1E9DCE518)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE518);
    }
  }
}

unsigned char *sub_1B674C2E8@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 2) != 0;
  return result;
}

unsigned char *sub_1B674C2F8(unsigned char *result, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 2) != 0) {
      return result;
    }
    unint64_t v3 = v2 | 2;
  }
  else
  {
    if ((v2 & 2) == 0) {
      return result;
    }
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFDLL;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1B674C324@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for MeshImportOptions, (uint64_t)&off_1F0F71D48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B674C364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674C5C0);
}

unsigned char *sub_1B674C394@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result & 1;
  return result;
}

unsigned char *sub_1B674C3A4(unsigned char *result, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if (*result == 1)
  {
    if (v2) {
      return result;
    }
    unint64_t v3 = v2 | 1;
  }
  else
  {
    if ((v2 & 1) == 0) {
      return result;
    }
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1B674C3D0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for MeshImportOptions, (uint64_t)&off_1F0F71D48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DF594, a2);
}

uint64_t sub_1B674C410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674C4B0);
}

uint64_t sub_1B674C440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE528, (uint64_t)&type metadata for MeshImportOptions.Loader, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670C0C4, a3);
}

double sub_1B674C480()
{
  return sub_1B670C5D4(v0[2], v0[3], v0[4], &qword_1E9DCE530, (uint64_t)&type metadata for MeshImportOptions.Loader);
}

void *sub_1B674C4B0(void *a1)
{
  return sub_1B676182C(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE9764, (void (*)(unint64_t, uint64_t, double))sub_1B66C8950, (uint64_t (*)(void))sub_1B674C518);
}

void sub_1B674C518()
{
  if (!qword_1E9DCE538)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE538);
    }
  }
}

uint64_t sub_1B674C580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670C200, a3);
}

void *sub_1B674C5C0(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE9764, (void (*)(unint64_t, uint64_t, double))sub_1B66C8950, (uint64_t (*)(void))sub_1B674C628);
}

void sub_1B674C628()
{
  if (!qword_1E9DCE540)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE540);
    }
  }
}

uint64_t sub_1B674C690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671119C(a1, v2, (uint64_t)&type metadata for MeshFileAsset, a2);
}

uint64_t sub_1B674C6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711230(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674C908);
}

uint64_t sub_1B674C6EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B671247C(a1, v2, (uint64_t)&type metadata for MeshFileAsset, (uint64_t)&off_1F0F5FFE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DACAC, a2);
}

uint64_t sub_1B674C72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674C84C);
}

void sub_1B674C75C()
{
  if (!qword_1E9DCE558)
  {
    sub_1B62CB19C(255, &qword_1EB980330, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE558);
    }
  }
}

uint64_t sub_1B674C7D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE560, (uint64_t (*)(uint64_t))sub_1B674C75C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E3A48, a3);
}

double sub_1B674C824()
{
  return sub_1B670CBE8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B674C830(uint64_t a1)
{
  return sub_1B670E02C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B674C83C(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B674C84C(uint64_t a1)
{
  return sub_1B67760F4(a1, sub_1B66D5AE0);
}

uint64_t sub_1B674C878()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B674C8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE578, (uint64_t)&type metadata for Asset, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E3B90, a3);
}

uint64_t sub_1B674C908(uint64_t a1)
{
  return sub_1B6776230(a1, (uint64_t (*)(_OWORD *, uint64_t, uint64_t))sub_1B66D5C88);
}

uint64_t sub_1B674C934(uint64_t a1, uint64_t a2)
{
  sub_1B674C998();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B674C998()
{
  if (!qword_1EB9810E0)
  {
    sub_1B62C55B0(255, (unint64_t *)&unk_1EB9810D0);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9810E0);
    }
  }
}

void sub_1B674CA04()
{
  if (!qword_1E9DCE588)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE588);
    }
  }
}

id *sub_1B674CA70(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_1B674CA9C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B62CB19C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B674CB1C@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6711F2C(a1, v2, (uint64_t)&type metadata for MeshReferenceAsset, (uint64_t)&off_1F0F772A0, a2);
}

uint64_t sub_1B674CB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674CBB8);
}

uint64_t sub_1B674CB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ECF64, a3);
}

uint64_t sub_1B674CBB8(uint64_t a1)
{
  return sub_1B6752078(a1, (uint64_t)sub_1B674CC20, (uint64_t)sub_1B6ADEF00, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B674CC70);
}

uint64_t sub_1B674CC20()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B674CC70()
{
  if (!qword_1E9DCE598)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE598);
    }
  }
}

uint64_t sub_1B674CCD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671119C(a1, v2, (uint64_t)&type metadata for ShaderFileAsset, a2);
}

uint64_t sub_1B674CD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711230(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674CDB4);
}

uint64_t sub_1B674CD34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE578, (uint64_t)&type metadata for Asset, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E7734, a3);
}

uint64_t sub_1B674CD74()
{
  return sub_1B670CC90(v0[2], v0[3], v0[4]);
}

void sub_1B674CD94(uint64_t a1)
{
  sub_1B670E5A8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B674CDB4(uint64_t a1)
{
  return sub_1B6776230(a1, (uint64_t (*)(_OWORD *, uint64_t, uint64_t))sub_1B66D6290);
}

uint64_t sub_1B674CDE0(uint64_t a1)
{
  return sub_1B6710D68(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1B674CDFC()
{
  if (!qword_1E9DCE5A0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE5A0);
    }
  }
}

uint64_t sub_1B674CE68@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for VideoCapture, (uint64_t)&off_1F0F5D5E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B674CEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674D428);
}

uint64_t sub_1B674CED8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 1);
  return result;
}

unint64_t sub_1B674CEE4(unint64_t *a1)
{
  return sub_1B667E4DC(*a1);
}

uint64_t sub_1B674CF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for VideoCapture, (uint64_t)&off_1F0F5D5E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B674CF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674D318);
}

uint64_t sub_1B674CF7C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for VideoCapture, (uint64_t)&off_1F0F5D5E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DAA94, a2);
}

uint64_t sub_1B674CFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674D208);
}

uint64_t sub_1B674CFEC@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6711F2C(a1, v2, (uint64_t)&type metadata for VideoCapture, (uint64_t)&off_1F0F5D5E0, a2);
}

uint64_t sub_1B674D018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674D0C8);
}

uint64_t sub_1B674D048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E2E38, a3);
}

uint64_t sub_1B674D088()
{
  return sub_1B670CAA8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B674D0A8(void *a1)
{
  return sub_1B670E9E0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B674D0C8(uint64_t a1)
{
  return sub_1B6752078(a1, (uint64_t)sub_1B6746808, (uint64_t)sub_1B6ADFCEC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B674D130);
}

void sub_1B674D130()
{
  if (!qword_1E9DCE5B0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE5B0);
    }
  }
}

uint64_t sub_1B674D198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE5B8, (uint64_t)&type metadata for VideoCapture.OrientationMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E2F74, a3);
}

double sub_1B674D1D8()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCE5C0, (uint64_t)&type metadata for VideoCapture.OrientationMode);
}

void *sub_1B674D208(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6ADFCEC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B674D270);
}

void sub_1B674D270()
{
  if (!qword_1E9DCE5C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE5C8);
    }
  }
}

uint64_t sub_1B674D2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E30B0, a3);
}

void *sub_1B674D318(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6ADFCEC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B674D380);
}

void sub_1B674D380()
{
  if (!qword_1E9DCE5D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE5D0);
    }
  }
}

uint64_t sub_1B674D3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E31EC, a3);
}

void *sub_1B674D428(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6ADFCEC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B674D490);
}

void sub_1B674D490()
{
  if (!qword_1E9DCE5D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE5D8);
    }
  }
}

uint64_t sub_1B674D4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ModelRenderer, (uint64_t)&off_1F0F60288, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B674D538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674D5A8);
}

uint64_t sub_1B674D568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E3CCC, a3);
}

void *sub_1B674D5A8(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6ADEA8C, (void (*)(unint64_t, uint64_t, double))sub_1B66C8950, (uint64_t (*)(void))sub_1B674D610);
}

void sub_1B674D610()
{
  if (!qword_1E9DCE5E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE5E0);
    }
  }
}

uint64_t sub_1B674D678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for Prefab, (uint64_t)&off_1F0FA0680, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B674D6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674D8C4);
}

uint64_t sub_1B674D6E8@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B67123F0(a1, v2, (uint64_t)&type metadata for Prefab, (uint64_t)&off_1F0FA0680, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, a2);
}

uint64_t sub_1B674D724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674D7CC);
}

uint64_t sub_1B674D754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67451B0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6708B24, a3);
}

uint64_t sub_1B674D798()
{
  return sub_1B670CA2C(v0[2], v0[3], v0[4], (void (*)(void))sub_1B674522C);
}

uint64_t sub_1B674D7CC(uint64_t a1)
{
  return sub_1B67760F4(a1, sub_1B66D8828);
}

void sub_1B674D7F8()
{
  if (!qword_1E9DCE5E8)
  {
    sub_1B62CB19C(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE5E8);
    }
  }
}

uint64_t sub_1B674D884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6708C3C, a3);
}

void *sub_1B674D8C4(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE8E68, (void (*)(unint64_t, uint64_t, double))sub_1B66C9098, (uint64_t (*)(void))sub_1B674D92C);
}

void sub_1B674D92C()
{
  if (!qword_1E9DCE5F0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE5F0);
    }
  }
}

uint64_t sub_1B674D994@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B671247C(a1, v2, (uint64_t)&type metadata for MeshModel, (uint64_t)&off_1F0FA8FD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DF450, a2);
}

uint64_t sub_1B674D9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674DC44);
}

void sub_1B674DA04(uint64_t a1)
{
}

uint64_t sub_1B674DA38@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B67123F0(a1, v2, (uint64_t)&type metadata for MeshModel, (uint64_t)&off_1F0FA8FD8, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, a2);
}

uint64_t sub_1B674DA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674DAE8);
}

uint64_t sub_1B674DAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67451B0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670B538, a3);
}

uint64_t sub_1B674DAE8(uint64_t a1)
{
  return sub_1B67760F4(a1, sub_1B66D88D0);
}

void sub_1B674DB14()
{
  if (!qword_1E9DCE608)
  {
    sub_1B62CB19C(255, &qword_1EB9802C0, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB320]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE608);
    }
  }
}

uint64_t sub_1B674DBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE610, (uint64_t (*)(uint64_t))sub_1B674DA04, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670B650, a3);
}

uint64_t sub_1B674DBEC()
{
  return sub_1B670DF78(v0[2], v0[3], v0[4], &qword_1E9DCE618, (uint64_t (*)(uint64_t))sub_1B674DA04);
}

uint64_t sub_1B674DC28(uint64_t a1)
{
  return sub_1B670EAFC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B674DC34(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B674DC44(uint64_t a1)
{
  return sub_1B67760F4(a1, sub_1B66D8924);
}

uint64_t sub_1B674DC70()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B674DCC0(uint64_t a1, void *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)((char *)a2 + a3 - 8) + 24))(*a2, a2[1], *(void *)((char *)a2 + a3 - 24));
}

uint64_t sub_1B674DD08()
{
  return 40;
}

uint64_t sub_1B674DD14()
{
  return swift_bridgeObjectRelease();
}

__n128 sub_1B674DD1C(__n128 *a1, __n128 *a2)
{
  sub_1B674DD54((uint64_t)a1, (uint64_t)a2);
  unint64_t v4 = a1[2].n128_u64[0];
  __n128 result = a1[1];
  a2[1] = result;
  a2[2].n128_u64[0] = v4;
  return result;
}

uint64_t sub_1B674DD54(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B674DDB4(void *a1)
{
  return MEMORY[0x1F4183B40](*a1, a1[1]);
}

__n128 sub_1B674DDC0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 24);
  __n128 result = *(__n128 *)a1;
  *(void *)(a2 + 32) = *(void *)(a1 + 16);
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1B674DDDC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B674DE14@<X0>(uint64_t a1@<X8>)
{
  return sub_1B666EDB4(*(void *)(v1 + 40), *(void *)(v1 + 24), a1);
}

unsigned __int8 *sub_1B674DE20@<X0>(unsigned __int8 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1B674DE2C(unint64_t *a1)
{
  return sub_1B6671000(*a1);
}

uint64_t sub_1B674DE54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B674DE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674F348);
}

uint64_t sub_1B674DEC4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DF238, a2);
}

uint64_t sub_1B674DF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674F24C);
}

unsigned char *sub_1B674DF34@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 2;
  return result;
}

uint64_t sub_1B674DF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B674DF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674F120);
}

uint64_t sub_1B674DFB8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(result + 44) == 1) {
    *a2 = *(unsigned int *)(result + 40);
  }
  else {
    *a2 = 3;
  }
  return result;
}

uint64_t sub_1B674DFDC(uint64_t *a1)
{
  return sub_1B66858F4(*a1);
}

uint64_t sub_1B674E004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD434, a2);
}

uint64_t sub_1B674E044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674F024);
}

uint64_t sub_1B674E074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B674E0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674EF28);
}

uint64_t sub_1B674E0E4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 72);
  return result;
}

uint64_t sub_1B674E0F4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710828(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(void))type metadata accessor for MTLWinding, a2);
}

uint64_t sub_1B674E134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674EEBC);
}

uint64_t sub_1B674E164@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 80);
  return result;
}

uint64_t sub_1B674E174@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710828(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(void))type metadata accessor for MTLCullMode, a2);
}

uint64_t sub_1B674E1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674EE08);
}

uint64_t sub_1B674E1E4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B674E224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674ED00);
}

void *sub_1B674E254(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B674E260@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710828(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(void))type metadata accessor for MTLCompareFunction, a2);
}

uint64_t sub_1B674E2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674EC40);
}

unsigned char *sub_1B674E2D4@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 1;
  return result;
}

unsigned char *sub_1B674E2EC@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 0;
  return result;
}

uint64_t sub_1B674E300@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B674E348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674EABC);
}

BOOL sub_1B674E378@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1B6685CD4();
  *a1 = result;
  return result;
}

uint64_t sub_1B674E3A8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 1);
  return result;
}

unsigned char *sub_1B674E3B4(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 1) = *result == 1;
  return result;
}

uint64_t sub_1B674E3C8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DEFEC, a2);
}

uint64_t sub_1B674E408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674E98C);
}

unsigned __int8 *sub_1B674E438@<X0>(unsigned __int8 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned char *sub_1B674E444(unsigned char *result, BOOL *a2)
{
  *a2 = *result == 1;
  return result;
}

uint64_t sub_1B674E458@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 2);
  return result;
}

unint64_t sub_1B674E464(unint64_t *a1)
{
  return sub_1B667F15C(*a1);
}

uint64_t sub_1B674E48C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DEEE0, a2);
}

uint64_t sub_1B674E4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674E860);
}

uint64_t sub_1B674E4FC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 3);
  return result;
}

uint64_t sub_1B674E508(uint64_t *a1)
{
  return sub_1B667F228(*a1);
}

uint64_t sub_1B674E530@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for Material, (uint64_t)&off_1F0FA65D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9E24, a2);
}

uint64_t sub_1B674E570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674E734);
}

uint64_t sub_1B674E5A0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 4);
  return result;
}

uint64_t sub_1B674E5AC(uint64_t *a1)
{
  return sub_1B667F240(*a1);
}

BOOL sub_1B674E5D4@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1B6685EE4();
  *a1 = result;
  return result;
}

BOOL sub_1B674E604@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1B6686018();
  *a1 = result;
  return result;
}

uint64_t sub_1B674E634@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B66865C4(a1, a2);
}

BOOL sub_1B674E64C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1B6686150();
  *a1 = result;
  return result;
}

BOOL sub_1B674E67C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1B6686364();
  *a1 = result;
  return result;
}

uint64_t sub_1B674E6AC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B66865C4(a1, a2);
}

BOOL sub_1B674E6C4@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1B66866FC();
  *a1 = result;
  return result;
}

uint64_t sub_1B674E6F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE650, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6709CF4, a3);
}

void *sub_1B674E734(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C85E8, (uint64_t (*)(void))sub_1B674E788);
}

void sub_1B674E788()
{
  if (!qword_1E9DCE660)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE660);
    }
  }
}

uint64_t sub_1B674E7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE668, (uint64_t)&type metadata for TextureMipFilterMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6709E30, a3);
}

double sub_1B674E830()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCE670, (uint64_t)&type metadata for TextureMipFilterMode);
}

void *sub_1B674E860(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C85E8, (uint64_t (*)(void))sub_1B674E8B4);
}

void sub_1B674E8B4()
{
  if (!qword_1E9DCE678)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE678);
    }
  }
}

uint64_t sub_1B674E91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE680, (uint64_t)&type metadata for FilterMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6709F6C, a3);
}

double sub_1B674E95C()
{
  return sub_1B670C5D4(v0[2], v0[3], v0[4], &qword_1E9DCE688, (uint64_t)&type metadata for FilterMode);
}

void *sub_1B674E98C(void *a1)
{
  return sub_1B674E9E0(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C85E8, (uint64_t (*)(void))sub_1B674EA10);
}

void *sub_1B674E9E0(void *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(void))
{
  return sub_1B66CDF6C(a1, **(unsigned char **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_1B674EA10()
{
  if (!qword_1E9DCE690)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE690);
    }
  }
}

uint64_t sub_1B674EA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670A0A8, a3);
}

void *sub_1B674EABC(void *a1)
{
  return sub_1B676FD28(a1, (uint64_t)sub_1B6744260, (void (*)(unint64_t, uint64_t, double))sub_1B66C85E8, (uint64_t (*)(void))sub_1B674EB18);
}

void sub_1B674EB18()
{
  if (!qword_1E9DCE698)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE698);
    }
  }
}

uint64_t sub_1B674EBB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE6A0, (uint64_t (*)(uint64_t))type metadata accessor for MTLCompareFunction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670A1C0, a3);
}

double sub_1B674EC04()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCE6A8, (uint64_t (*)(uint64_t))type metadata accessor for MTLCompareFunction);
}

uint64_t sub_1B674EC40(uint64_t a1)
{
  return sub_1B6770108(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D3FD4);
}

unint64_t sub_1B674EC6C()
{
  unint64_t result = qword_1E9DCE6B8;
  if (!qword_1E9DCE6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCE6B8);
  }
  return result;
}

uint64_t sub_1B674ECC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670A308, a3);
}

void *sub_1B674ED00(void *a1)
{
  return sub_1B676FBF0(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C85E8, (uint64_t (*)(void))sub_1B674ED54);
}

void sub_1B674ED54()
{
  if (!qword_1EB97F2C0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97F2C0);
    }
  }
}

uint64_t sub_1B674EDBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE6C0, (uint64_t (*)(uint64_t))type metadata accessor for MTLCullMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670A444, a3);
}

uint64_t sub_1B674EE08(uint64_t a1)
{
  return sub_1B6770108(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D416C);
}

uint64_t sub_1B674EE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE6D8, (uint64_t (*)(uint64_t))type metadata accessor for MTLWinding, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670A58C, a3);
}

double sub_1B674EE80()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCE6E0, (uint64_t (*)(uint64_t))type metadata accessor for MTLWinding);
}

uint64_t sub_1B674EEBC(uint64_t a1)
{
  return sub_1B6770108(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66D4304);
}

uint64_t sub_1B674EEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670A6D4, a3);
}

void *sub_1B674EF28(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C85E8, (uint64_t (*)(void))sub_1B674EF7C);
}

void sub_1B674EF7C()
{
  if (!qword_1E9DCE6F0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE6F0);
    }
  }
}

uint64_t sub_1B674EFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4B8, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670A810, a3);
}

void *sub_1B674F024(void *a1)
{
  return sub_1B675833C(a1, (uint64_t)sub_1B674B8B0, (void (*)(unint64_t, uint64_t, double))sub_1B66C85E8, (uint64_t (*)(void))sub_1B674F078);
}

void sub_1B674F078()
{
  if (!qword_1E9DCE6F8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE6F8);
    }
  }
}

uint64_t sub_1B674F0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670A94C, a3);
}

void *sub_1B674F120(void *a1)
{
  return sub_1B676F890(a1, (uint64_t)sub_1B6745CBC, (void (*)(unint64_t, uint64_t, double))sub_1B66C85E8, (uint64_t (*)(void))sub_1B674F174);
}

void sub_1B674F174()
{
  if (!qword_1E9DCE700)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE700);
    }
  }
}

uint64_t sub_1B674F1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE708, (uint64_t)&type metadata for Material.Kind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670AA88, a3);
}

double sub_1B674F21C()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCE710, (uint64_t)&type metadata for Material.Kind);
}

void *sub_1B674F24C(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C85E8, (uint64_t (*)(void))sub_1B674F2A0);
}

void sub_1B674F2A0()
{
  if (!qword_1E9DCE718)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE718);
    }
  }
}

uint64_t sub_1B674F308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670ABC4, a3);
}

void *sub_1B674F348(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B67432AC, (void (*)(unint64_t, uint64_t, double))sub_1B66C85E8, (uint64_t (*)(void))sub_1B674F39C);
}

void sub_1B674F39C()
{
  if (!qword_1E9DCE720)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE720);
    }
  }
}

uint64_t sub_1B674F404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671119C(a1, v2, (uint64_t)&type metadata for PointCacheFileAsset, a2);
}

uint64_t sub_1B674F430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711230(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674F4A0);
}

uint64_t sub_1B674F460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE578, (uint64_t)&type metadata for Asset, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F1678, a3);
}

uint64_t sub_1B674F4A0(uint64_t a1)
{
  return sub_1B6776230(a1, (uint64_t (*)(_OWORD *, uint64_t, uint64_t))sub_1B66D75E0);
}

void sub_1B674F4CC()
{
  if (!qword_1E9DCE728)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE728);
    }
  }
}

void sub_1B674F53C(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_1B6C8A67C(v1);
}

uint64_t sub_1B674F56C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B671247C(a1, v2, (uint64_t)&type metadata for PointCacheFromModel, (uint64_t)&off_1F0F7E3D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD568, a2);
}

uint64_t sub_1B674F5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674F6F4);
}

void sub_1B674F5DC(uint64_t a1)
{
}

unint64_t sub_1B674F610()
{
  unint64_t result = qword_1EB980620;
  if (!qword_1EB980620)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB980620);
  }
  return result;
}

uint64_t sub_1B674F650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE740, (uint64_t (*)(uint64_t))sub_1B674F5DC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F17B4, a3);
}

uint64_t sub_1B674F69C()
{
  return sub_1B670DF78(v0[2], v0[3], v0[4], &qword_1E9DCE748, (uint64_t (*)(uint64_t))sub_1B674F5DC);
}

void sub_1B674F6D8(uint64_t a1)
{
  sub_1B670E68C(a1, v1[2], v1[3], v1[4]);
}

void sub_1B674F6E4(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_1B674F6F4(uint64_t a1)
{
  return sub_1B67760F4(a1, sub_1B66D7820);
}

uint64_t sub_1B674F720()
{
  id v1 = **(id **)(v0 + 24);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1B674F770@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6711F2C(a1, v2, (uint64_t)&type metadata for REMeshAssetPointCache, (uint64_t)&off_1F0F8A8B0, a2);
}

uint64_t sub_1B674F79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674F80C);
}

uint64_t sub_1B674F7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F90A4, a3);
}

uint64_t sub_1B674F80C(uint64_t a1)
{
  return sub_1B6752078(a1, (uint64_t)sub_1B6746808, (uint64_t)sub_1B6ADF2F4, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B674F874);
}

void sub_1B674F874()
{
  if (!qword_1E9DCE758)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE758);
    }
  }
}

uint64_t sub_1B674F8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1F0F7E6B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B674F91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67502D8);
}

uint64_t sub_1B674F94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1F0F7E6B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B674F98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67501C8);
}

uint64_t sub_1B674F9BC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 16);
  return result;
}

uint64_t sub_1B674F9C8(uint64_t *a1)
{
  return sub_1B6687D20(*a1);
}

uint64_t sub_1B674F9F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1F0F7E6B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B674FA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67500B8);
}

uint64_t sub_1B674FA60@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1F0F7E6B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD580, a2);
}

uint64_t sub_1B674FAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674FFA8);
}

uint64_t sub_1B674FAD0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 18) & 1;
  return result;
}

unsigned char *sub_1B674FAE0(unsigned char *result, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if (v2) {
      return result;
    }
    __int16 v3 = v2 | 1;
  }
  else
  {
    if ((v2 & 1) == 0) {
      return result;
    }
    __int16 v3 = v2 & 0xFFFE;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B674FB0C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1F0F7E6B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B674FB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674FE68);
}

uint64_t sub_1B674FB7C@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(unsigned char *)(result + 18) & 2) != 0;
  return result;
}

unsigned char *sub_1B674FB8C(unsigned char *result, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if ((v2 & 2) != 0) {
      return result;
    }
    __int16 v3 = v2 | 2;
  }
  else
  {
    if ((v2 & 2) == 0) {
      return result;
    }
    __int16 v3 = v2 & 0xFFFD;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B674FBB8@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(unsigned char *)(result + 18) & 4) != 0;
  return result;
}

unsigned char *sub_1B674FBC8(unsigned char *result, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if ((v2 & 4) != 0) {
      return result;
    }
    __int16 v3 = v2 | 4;
  }
  else
  {
    if ((v2 & 4) == 0) {
      return result;
    }
    __int16 v3 = v2 & 0xFFFB;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B674FBF4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(unsigned char *)(result + 18) & 8) != 0;
  return result;
}

unsigned char *sub_1B674FC04(unsigned char *result, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if ((v2 & 8) != 0) {
      return result;
    }
    __int16 v3 = v2 | 8;
  }
  else
  {
    if ((v2 & 8) == 0) {
      return result;
    }
    __int16 v3 = v2 & 0xFFF7;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B674FC30@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(unsigned char *)(result + 18) & 0x10) != 0;
  return result;
}

unsigned char *sub_1B674FC40(unsigned char *result, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if ((v2 & 0x10) != 0) {
      return result;
    }
    __int16 v3 = v2 | 0x10;
  }
  else
  {
    if ((v2 & 0x10) == 0) {
      return result;
    }
    __int16 v3 = v2 & 0xFFEF;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B674FC6C@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(_WORD *)(result + 18) & 0x400) != 0;
  return result;
}

unsigned char *sub_1B674FC7C(unsigned char *result, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(a2 + 18);
  if (*result == 1)
  {
    if ((*(_WORD *)(a2 + 18) & 0x400) != 0) {
      return result;
    }
    __int16 v3 = v2 | 0x400;
  }
  else
  {
    if ((*(_WORD *)(a2 + 18) & 0x400) == 0) {
      return result;
    }
    __int16 v3 = v2 & 0xFBFF;
  }
  *(_WORD *)(a2 + 18) = v3;
  return result;
}

uint64_t sub_1B674FCA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for PointCacheGenerator, (uint64_t)&off_1F0F7E6B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9324, a2);
}

uint64_t sub_1B674FCE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B674FD58);
}

uint64_t sub_1B674FD18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE770, MEMORY[0x1E4FBC538], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F18FC, a3);
}

void *sub_1B674FD58(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE40B8, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B674FDC0);
}

void sub_1B674FDC0()
{
  if (!qword_1E9DCE780)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE780);
    }
  }
}

uint64_t sub_1B674FE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F1A38, a3);
}

void *sub_1B674FE68(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE40B8, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B674FED0);
}

void sub_1B674FED0()
{
  if (!qword_1E9DCE788)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE788);
    }
  }
}

uint64_t sub_1B674FF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE790, (uint64_t)&type metadata for PointCache.Distribution, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F1B74, a3);
}

double sub_1B674FF78()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCE798, (uint64_t)&type metadata for PointCache.Distribution);
}

void *sub_1B674FFA8(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE40B8, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6750010);
}

void sub_1B6750010()
{
  if (!qword_1E9DCE7A0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE7A0);
    }
  }
}

uint64_t sub_1B6750078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F1CB0, a3);
}

void *sub_1B67500B8(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE40B8, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6750120);
}

void sub_1B6750120()
{
  if (!qword_1E9DCE7A8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE7A8);
    }
  }
}

uint64_t sub_1B6750188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F1DEC, a3);
}

void *sub_1B67501C8(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE40B8, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6750230);
}

void sub_1B6750230()
{
  if (!qword_1E9DCE7B0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE7B0);
    }
  }
}

uint64_t sub_1B6750298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F1F28, a3);
}

void *sub_1B67502D8(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE40B8, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6750340);
}

void sub_1B6750340()
{
  if (!qword_1E9DCE7B8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE7B8);
    }
  }
}

uint64_t sub_1B67503A8()
{
  return sub_1B6CEED50();
}

uint64_t sub_1B67503E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67503F8@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6711F2C(a1, v2, (uint64_t)&type metadata for TextureFileAsset, (uint64_t)&off_1F0F6F8C8, a2);
}

uint64_t sub_1B6750424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675055C);
}

uint64_t sub_1B6750454@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B66D8FD8(a1, v2, (uint64_t)&type metadata for TextureFileAsset, a2);
}

uint64_t sub_1B6750480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B66DF7B4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67504FC);
}

uint64_t sub_1B67504B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE7C0, MEMORY[0x1E4F276F0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E9910, a3);
}

void *sub_1B67504FC(void *a1)
{
  return sub_1B66CDA58(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1B675051C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E9A58, a3);
}

uint64_t sub_1B675055C(uint64_t a1)
{
  return sub_1B6752078(a1, (uint64_t)sub_1B6746808, (uint64_t)sub_1B6AE1E88, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B67505C4);
}

void sub_1B67505C4()
{
  if (!qword_1E9DCE7D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE7D8);
    }
  }
}

uint64_t sub_1B675062C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6750638(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1B6CF5FF4(v1, v2);
}

uint64_t sub_1B6750678@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6711F2C(a1, v2, (uint64_t)&type metadata for MovieFileAsset, (uint64_t)&off_1F0F64880, a2);
}

uint64_t sub_1B67506A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6750978);
}

uint64_t sub_1B67506D4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B66D8FD8(a1, v2, (uint64_t)&type metadata for MovieFileAsset, a2);
}

uint64_t sub_1B6750700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B66DF7B4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67508FC);
}

uint64_t sub_1B6750730@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for MovieFileAsset, (uint64_t)&off_1F0F64880, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6750770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67507E0);
}

uint64_t sub_1B67507A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E5A0C, a3);
}

void *sub_1B67507E0(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE0AF4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7020, (uint64_t (*)(void))sub_1B6750848);
}

void sub_1B6750848()
{
  if (!qword_1E9DCE7E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE7E0);
    }
  }
}

uint64_t sub_1B67508B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE7C0, MEMORY[0x1E4F276F0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E5B48, a3);
}

void *sub_1B67508FC(void *a1)
{
  return sub_1B66CBC4C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1B675091C(uint64_t a1)
{
  return sub_1B670EDA4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B6750938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E5C90, a3);
}

uint64_t sub_1B6750978(uint64_t a1)
{
  return sub_1B6752078(a1, (uint64_t)sub_1B674CC20, (uint64_t)sub_1B6AE0AF4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7020, (uint64_t (*)(void))sub_1B67509E0);
}

void sub_1B67509E0()
{
  if (!qword_1E9DCE7F0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE7F0);
    }
  }
}

uint64_t sub_1B6750A4C@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6711F2C(a1, v2, (uint64_t)&type metadata for AudioFileAsset, (uint64_t)&off_1F0F62A68, a2);
}

uint64_t sub_1B6750A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6750BF0);
}

uint64_t sub_1B6750AA8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B66D8FD8(a1, v2, (uint64_t)&type metadata for AudioFileAsset, a2);
}

uint64_t sub_1B6750AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B66DF7B4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6750B90);
}

uint64_t sub_1B6750B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE7C0, MEMORY[0x1E4F276F0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E4F08, a3);
}

uint64_t sub_1B6750B50()
{
  return sub_1B670D074(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6750B70(uint64_t a1)
{
  return sub_1B670E0B8(a1, v1[2], v1[3], v1[4]);
}

void *sub_1B6750B90(void *a1)
{
  return sub_1B66CBA4C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1B6750BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E5050, a3);
}

uint64_t sub_1B6750BF0(uint64_t a1)
{
  return sub_1B6752078(a1, (uint64_t)sub_1B6746808, (uint64_t)sub_1B6AE0754, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B6750C58);
}

void sub_1B6750C58()
{
  if (!qword_1E9DCE800)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE800);
    }
  }
}

uint64_t sub_1B6750CC0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for AudioController, (uint64_t)&off_1F0F67FB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6750D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6750D70);
}

uint64_t sub_1B6750D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E69DC, a3);
}

void *sub_1B6750D70(void *a1)
{
  return sub_1B676FBF0(a1, (uint64_t)sub_1B6743428, (void (*)(unint64_t, uint64_t, double))sub_1B66C70D8, (uint64_t (*)(void))sub_1B6750DC4);
}

void sub_1B6750DC4()
{
  if (!qword_1E9DCE808)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE808);
    }
  }
}

uint64_t sub_1B6750E2C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for AudioAnalyzer, (uint64_t)&off_1F0F5DC58, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6750E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6750EDC);
}

uint64_t sub_1B6750E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E3440, a3);
}

void *sub_1B6750EDC(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6ADFED0, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6750F44);
}

void sub_1B6750F44()
{
  if (!qword_1E9DCE810)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE810);
    }
  }
}

uint64_t sub_1B6750FAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6750FBC@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B67123F0(a1, v2, (uint64_t)&type metadata for AudioSpectrum, (uint64_t)&off_1F0F5DF30, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], a2);
}

uint64_t sub_1B6750FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6751390);
}

void sub_1B6751028()
{
  if (!qword_1E9DCE818)
  {
    sub_1B62CB19C(255, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1E9DCE818);
    }
  }
}

uint64_t sub_1B67510A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67510B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

float sub_1B67510C4@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1B67510D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for AudioSpectrum, (uint64_t)&off_1F0F5DF30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6751114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6751184);
}

uint64_t sub_1B6751144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E357C, a3);
}

void *sub_1B6751184(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADFF48, (void (*)(unint64_t, uint64_t, double))sub_1B66C79C8, (uint64_t (*)(void))sub_1B67511EC);
}

void sub_1B67511EC()
{
  if (!qword_1E9DCE820)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE820);
    }
  }
}

uint64_t sub_1B6751254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6751298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E36B8, a3);
}

void sub_1B6751298()
{
  if (!qword_1E9DCE828)
  {
    sub_1B62CB19C(255, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE828);
    }
  }
}

void sub_1B6751314()
{
  if (!qword_1E9DCE830)
  {
    sub_1B62CB19C(255, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE830);
    }
  }
}

uint64_t sub_1B6751390(uint64_t a1)
{
  return sub_1B67760F4(a1, sub_1B66D5748);
}

void sub_1B67513BC()
{
  if (!qword_1E9DCE838)
  {
    sub_1B62CB19C(255, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE838);
    }
  }
}

uint64_t sub_1B675144C@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6711F2C(a1, v2, (uint64_t)&type metadata for CALayerFileAsset, (uint64_t)&off_1F0F6AE10, a2);
}

uint64_t sub_1B6751478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67515B0);
}

uint64_t sub_1B67514A8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B66D8FD8(a1, v2, (uint64_t)&type metadata for CALayerFileAsset, a2);
}

uint64_t sub_1B67514D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B66DF7B4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6751550);
}

uint64_t sub_1B6751504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE7C0, MEMORY[0x1E4F276F0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E7988, a3);
}

void *sub_1B6751550(void *a1)
{
  return sub_1B66CD1B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1B6751570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E7AD0, a3);
}

uint64_t sub_1B67515B0(uint64_t a1)
{
  return sub_1B6752078(a1, (uint64_t)sub_1B6746808, (uint64_t)sub_1B6AE1780, (void (*)(unint64_t, uint64_t, double))sub_1B66C7684, (uint64_t (*)(void))sub_1B6751618);
}

void sub_1B6751618()
{
  if (!qword_1E9DCE848)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE848);
    }
  }
}

uint64_t sub_1B6751688@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B67123F0(a1, v2, (uint64_t)&type metadata for TextureArrayFileAsset, (uint64_t)&off_1F0F8B4E8, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], a2);
}

uint64_t sub_1B67516C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6751A38);
}

void sub_1B67516F4()
{
  if (!qword_1E9DCE850)
  {
    sub_1B62CB19C(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1E9DCE850);
    }
  }
}

uint64_t sub_1B6751770@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B671247C(a1, v2, (uint64_t)&type metadata for TextureArrayFileAsset, (uint64_t)&off_1F0F8B4E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDC3C, a2);
}

uint64_t sub_1B67517B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675189C);
}

void sub_1B67517E0(uint64_t a1)
{
}

uint64_t sub_1B6751814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE868, (uint64_t (*)(uint64_t))sub_1B67517E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F9458, a3);
}

uint64_t sub_1B6751860()
{
  return sub_1B670D67C(v0[2], v0[3], v0[4], &qword_1E9DCE870, (uint64_t (*)(uint64_t))sub_1B67517E0);
}

uint64_t sub_1B675189C(uint64_t a1)
{
  return sub_1B67760F4(a1, sub_1B66D7F10);
}

uint64_t sub_1B67518C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B675190C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F95A0, a3);
}

void sub_1B675190C()
{
  if (!qword_1E9DCE880)
  {
    sub_1B62CB19C(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE880);
    }
  }
}

uint64_t sub_1B6751988()
{
  return sub_1B670CA2C(v0[2], v0[3], v0[4], (void (*)(void))sub_1B67519BC);
}

void sub_1B67519BC()
{
  if (!qword_1EB97D8D8)
  {
    sub_1B62CB19C(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D8D8);
    }
  }
}

uint64_t sub_1B6751A38(uint64_t a1)
{
  return sub_1B67760F4(a1, sub_1B66D80B8);
}

void sub_1B6751A64()
{
  if (!qword_1E9DCE888)
  {
    sub_1B62CB19C(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE888);
    }
  }
}

uint64_t sub_1B6751AF0@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6711F2C(a1, v2, (uint64_t)&type metadata for TextureNamedAsset, (uint64_t)&off_1F0F750C8, a2);
}

uint64_t sub_1B6751B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6751B8C);
}

uint64_t sub_1B6751B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EBFC4, a3);
}

uint64_t sub_1B6751B8C(uint64_t a1)
{
  return sub_1B6752078(a1, (uint64_t)sub_1B6746808, (uint64_t)sub_1B6AE29BC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8950, (uint64_t (*)(void))sub_1B6751BF4);
}

void sub_1B6751BF4()
{
  if (!qword_1E9DCE890)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE890);
    }
  }
}

uint64_t sub_1B6751C5C@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B66D8F68(a1, v2, a2);
}

uint64_t sub_1B6751C64(uint64_t result)
{
  return sub_1B6710EAC(result);
}

void sub_1B6751C6C()
{
  if (!qword_1E9DCE898)
  {
    sub_1B62CB19C(255, &qword_1E9DCE8A0, MEMORY[0x1E4F277C0], MEMORY[0x1E4FBB718]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1E9DCE898);
    }
  }
}

uint64_t sub_1B6751CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6751D2C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E7870, a3);
}

void sub_1B6751D2C()
{
  if (!qword_1E9DCE8A8)
  {
    sub_1B62CB19C(255, &qword_1E9DCE8A0, MEMORY[0x1E4F277C0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE8A8);
    }
  }
}

double sub_1B6751DA8()
{
  return sub_1B670CEA0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6751DB4(void *a1)
{
  return sub_1B670E2DC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B6751DC0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1B62FFBB0(a1, a2);
  }
  return a1;
}

uint64_t sub_1B6751DD4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_1B665D488(a1, a2);
  }
  return a1;
}

void sub_1B6751DE8()
{
  if (!qword_1E9DCE8B0)
  {
    sub_1B62CB19C(255, &qword_1E9DCE8A0, MEMORY[0x1E4F277C0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE8B0);
    }
  }
}

uint64_t sub_1B6751E64(uint64_t a1)
{
  return sub_1B67782AC(a1, sub_1B66D64D0);
}

uint64_t sub_1B6751E90()
{
  sub_1B6751DC0(**(void **)(v0 + 24), *(void *)(*(void *)(v0 + 24) + 8));
  return swift_setAtWritableKeyPath();
}

void sub_1B6751EE8()
{
  if (!qword_1E9DCE8B8)
  {
    sub_1B62CB19C(255, &qword_1E9DCE8A0, MEMORY[0x1E4F277C0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE8B8);
    }
  }
}

uint64_t sub_1B6751F74@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6711F2C(a1, v2, (uint64_t)&type metadata for TextureClient, (uint64_t)&off_1F0F62040, a2);
}

uint64_t sub_1B6751FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6752010);
}

uint64_t sub_1B6751FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E4DCC, a3);
}

uint64_t sub_1B6752010(uint64_t a1)
{
  return sub_1B6752078(a1, (uint64_t)sub_1B6746808, (uint64_t)sub_1B6AE06DC, (void (*)(unint64_t, uint64_t, double))sub_1B66C87F0, (uint64_t (*)(void))sub_1B67520C4);
}

uint64_t sub_1B6752078(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66D5EC8(**(void **)(v5 + 16), *(void *)(*(void *)(v5 + 16) + 8), *(void *)(v5 + 24), *(void *)(v5 + 32), a2, a3, a4, a5);
}

void sub_1B67520C4()
{
  if (!qword_1E9DCE8C0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE8C0);
    }
  }
}

uint64_t sub_1B675212C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for TexturePlaceholder, (uint64_t)&off_1F0F7ABB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B675216C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67521DC);
}

uint64_t sub_1B675219C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EE554, a3);
}

void *sub_1B67521DC(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE3584, (void (*)(unint64_t, uint64_t, double))sub_1B66C8950, (uint64_t (*)(void))sub_1B6752244);
}

void sub_1B6752244()
{
  if (!qword_1E9DCE8C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE8C8);
    }
  }
}

uint64_t sub_1B67522AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for TextureRequireSizeLimit, (uint64_t)&off_1F0F91A38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B67522EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67524DC);
}

uint64_t sub_1B675231C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for TextureRequireSizeLimit, (uint64_t)&off_1F0F91A38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B675235C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67523CC);
}

uint64_t sub_1B675238C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FDAF4, a3);
}

void *sub_1B67523CC(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE6510, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6752434);
}

void sub_1B6752434()
{
  if (!qword_1E9DCE8D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE8D0);
    }
  }
}

uint64_t sub_1B675249C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FDC30, a3);
}

void *sub_1B67524DC(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE6510, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6752544);
}

void sub_1B6752544()
{
  if (!qword_1E9DCE8D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE8D8);
    }
  }
}

uint64_t sub_1B67525AC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711DEC(a1, v2, (uint64_t)&type metadata for TextureRequireMipmap, (uint64_t)&off_1F0F84158, a2);
}

uint64_t sub_1B67525D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711E70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675264C);
}

uint64_t sub_1B6752608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6742DBC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F6128, a3);
}

void *sub_1B675264C(void *a1)
{
  return sub_1B6767F08(a1, (uint64_t)sub_1B6742EE0, (uint64_t)sub_1B6AE4CFC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8950, (uint64_t (*)(void))sub_1B67526B4);
}

void sub_1B67526B4()
{
  if (!qword_1E9DCE8E0)
  {
    sub_1B62CB19C(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE8E0);
    }
  }
}

uint64_t sub_1B6752740@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for RenderGraphTextureTarget, (uint64_t)&off_1F0F93F60, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC518, a2);
}

uint64_t sub_1B6752780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6752820);
}

uint64_t sub_1B67527B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE8F0, (uint64_t)&type metadata for TextureFallback, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67001C0, a3);
}

double sub_1B67527F0()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCE8F8, (uint64_t)&type metadata for TextureFallback);
}

void *sub_1B6752820(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE6EE8, (void (*)(unint64_t, uint64_t, double))sub_1B66C8740, (uint64_t (*)(void))sub_1B6752888);
}

void sub_1B6752888()
{
  if (!qword_1E9DCE900)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE900);
    }
  }
}

unsigned char *sub_1B67528F0@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x40) != 0;
  return result;
}

uint64_t sub_1B6752900(unsigned __int8 *a1)
{
  return sub_1B668BFA0(*a1);
}

uint64_t sub_1B6752928@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for TextureLoadingOptions, (uint64_t)&off_1F0F8B9D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6752968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6752B54);
}

unsigned char *sub_1B6752998@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x10) != 0;
  return result;
}

unsigned char *sub_1B67529A8(unsigned char *result, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 0x10) != 0) {
      return result;
    }
    unint64_t v3 = v2 | 0x10;
  }
  else
  {
    if ((v2 & 0x10) == 0) {
      return result;
    }
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFEFLL;
  }
  *a2 = v3;
  return result;
}

void *sub_1B67529D4@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 4) == 0;
  return result;
}

unsigned char *sub_1B67529E8(unsigned char *result, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 4) == 0) {
      return result;
    }
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFBLL;
  }
  else
  {
    if ((v2 & 4) != 0) {
      return result;
    }
    unint64_t v3 = v2 | 4;
  }
  *a2 = v3;
  return result;
}

unsigned char *sub_1B6752A14@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 8) != 0;
  return result;
}

unsigned char *sub_1B6752A24(unsigned char *result, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 8) != 0) {
      return result;
    }
    unint64_t v3 = v2 | 8;
  }
  else
  {
    if ((v2 & 8) == 0) {
      return result;
    }
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFF7;
  }
  *a2 = v3;
  return result;
}

_DWORD *sub_1B6752A50@<X0>(_DWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x80) != 0;
  return result;
}

unsigned char *sub_1B6752A60(unsigned char *result, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 0x80) != 0) {
      return result;
    }
    unint64_t v3 = v2 | 0x80;
  }
  else
  {
    if ((v2 & 0x80) == 0) {
      return result;
    }
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFF7FLL;
  }
  *a2 = v3;
  return result;
}

void sub_1B6752A8C()
{
}

uint64_t sub_1B6752AD8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 1) & 1;
  return result;
}

unsigned char *sub_1B6752AE8(unsigned char *result, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if (*result == 1)
  {
    if ((v2 & 0x100) != 0) {
      return result;
    }
    unint64_t v3 = v2 | 0x100;
  }
  else
  {
    if ((v2 & 0x100) == 0) {
      return result;
    }
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFEFFLL;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1B6752B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F96B8, a3);
}

void *sub_1B6752B54(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6ADDB00, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B6752BBC);
}

void sub_1B6752BBC()
{
  if (!qword_1E9DCE908)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE908);
    }
  }
}

uint64_t sub_1B6752C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for TextureRequireAnimationRepresentation, (uint64_t)&off_1F0F9D410, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6752C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6753034);
}

uint64_t sub_1B6752C94@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711DEC(a1, v2, (uint64_t)&type metadata for TextureRequireAnimationRepresentation, (uint64_t)&off_1F0F9D410, a2);
}

uint64_t sub_1B6752CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711E70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6752F00);
}

uint64_t sub_1B6752CF0@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 25) == 1;
  return result;
}

unsigned char *sub_1B6752D04(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 25) = *result;
  return result;
}

uint64_t sub_1B6752D10@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for TextureRequireAnimationRepresentation, (uint64_t)&off_1F0F9D410, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6752D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6752DEC);
}

uint64_t sub_1B6752D80@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 25) == 2;
  return result;
}

unsigned char *sub_1B6752D94(unsigned char *result, uint64_t a2)
{
  if (*result) {
    char v2 = 2;
  }
  else {
    char v2 = 0;
  }
  *(unsigned char *)(a2 + 25) = v2;
  return result;
}

uint64_t sub_1B6752DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67075C4, a3);
}

void *sub_1B6752DEC(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE88B4, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6752E54);
}

void sub_1B6752E54()
{
  if (!qword_1E9DCE910)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE910);
    }
  }
}

uint64_t sub_1B6752EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6742DBC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6707700, a3);
}

void *sub_1B6752F00(void *a1)
{
  return sub_1B6767F08(a1, (uint64_t)sub_1B6742EE0, (uint64_t)sub_1B6AE88B4, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6752F68);
}

void sub_1B6752F68()
{
  if (!qword_1E9DCE918)
  {
    sub_1B62CB19C(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE918);
    }
  }
}

uint64_t sub_1B6752FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6707818, a3);
}

void *sub_1B6753034(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B67432AC, (uint64_t)sub_1B6AE88B4, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B675309C);
}

void sub_1B675309C()
{
  if (!qword_1E9DCE920)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE920);
    }
  }
}

char *sub_1B6753104@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B6753110(uint64_t *a1)
{
  return sub_1B6670FE8(*a1);
}

uint64_t sub_1B6753138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for TextureRequireMask, (uint64_t)&off_1F0F7AE18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6753178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67534E8);
}

uint64_t sub_1B67531A8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for TextureRequireMask, (uint64_t)&off_1F0F7AE18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DCAF0, a2);
}

uint64_t sub_1B67531E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67533D8);
}

uint64_t sub_1B6753218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for TextureRequireMask, (uint64_t)&off_1F0F7AE18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6753258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67532C8);
}

uint64_t sub_1B6753288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EE690, a3);
}

void *sub_1B67532C8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE36BC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8538, (uint64_t (*)(void))sub_1B6753330);
}

void sub_1B6753330()
{
  if (!qword_1E9DCE928)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE928);
    }
  }
}

uint64_t sub_1B6753398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE930, (uint64_t)&type metadata for TextureChannel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EE7CC, a3);
}

void *sub_1B67533D8(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE36BC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8538, (uint64_t (*)(void))sub_1B6753440);
}

void sub_1B6753440()
{
  if (!qword_1E9DCE940)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE940);
    }
  }
}

uint64_t sub_1B67534A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EE908, a3);
}

void *sub_1B67534E8(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE36BC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8538, (uint64_t (*)(void))sub_1B6753550);
}

void sub_1B6753550()
{
  if (!qword_1E9DCE948)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE948);
    }
  }
}

unsigned char *sub_1B67535B8@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 0;
  return result;
}

unsigned char *sub_1B67535CC(unsigned char *result, BOOL *a2)
{
  *a2 = (*result & 1) == 0;
  return result;
}

uint64_t sub_1B67535E0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for TextureLoadPolicy, (uint64_t)&off_1F0F74E60, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6753620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6753838);
}

uint64_t sub_1B6753650@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 1) == 0;
  return result;
}

unsigned char *sub_1B6753664(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 1) = (*result & 1) == 0;
  return result;
}

uint64_t sub_1B6753678@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for TextureLoadPolicy, (uint64_t)&off_1F0F74E60, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC518, a2);
}

uint64_t sub_1B67536B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6753728);
}

uint64_t sub_1B67536E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE8F0, (uint64_t)&type metadata for TextureFallback, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EBD4C, a3);
}

void *sub_1B6753728(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE287C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7A78, (uint64_t (*)(void))sub_1B6753790);
}

void sub_1B6753790()
{
  if (!qword_1E9DCE950)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE950);
    }
  }
}

uint64_t sub_1B67537F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EBE88, a3);
}

void *sub_1B6753838(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE287C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7A78, (uint64_t (*)(void))sub_1B67538A0);
}

void sub_1B67538A0()
{
  if (!qword_1E9DCE958)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE958);
    }
  }
}

uint64_t sub_1B6753908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for SDFTextureGenerator, (uint64_t)&off_1F0F7F260, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B6753948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6753CB8);
}

uint64_t sub_1B6753978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for SDFTextureGenerator, (uint64_t)&off_1F0F7F260, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67539B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6753BA8);
}

uint64_t sub_1B67539E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for SDFTextureGenerator, (uint64_t)&off_1F0F7F260, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6753A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6753A98);
}

uint64_t sub_1B6753A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F2554, a3);
}

void *sub_1B6753A98(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE4328, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6753B00);
}

void sub_1B6753B00()
{
  if (!qword_1E9DCE960)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE960);
    }
  }
}

uint64_t sub_1B6753B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F2690, a3);
}

void *sub_1B6753BA8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE4328, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6753C10);
}

void sub_1B6753C10()
{
  if (!qword_1E9DCE968)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE968);
    }
  }
}

uint64_t sub_1B6753C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F27CC, a3);
}

void *sub_1B6753CB8(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE4328, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6753D20);
}

void sub_1B6753D20()
{
  if (!qword_1E9DCE970)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE970);
    }
  }
}

uint64_t sub_1B6753D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleSpawnID, (uint64_t)&off_1F0F698C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6753DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6753E38);
}

uint64_t sub_1B6753DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E75F8, a3);
}

void *sub_1B6753E38(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE13A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B6753EA0);
}

void sub_1B6753EA0()
{
  if (!qword_1E9DCE978)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE978);
    }
  }
}

uint64_t sub_1B6753F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleContinuousSpawn, (uint64_t)&off_1F0F90230, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6753F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6753FB8);
}

uint64_t sub_1B6753F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FCB78, a3);
}

void *sub_1B6753FB8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE5F84, (void (*)(unint64_t, uint64_t, double))sub_1B66C7A78, (uint64_t (*)(void))sub_1B6754020);
}

void sub_1B6754020()
{
  if (!qword_1E9DCE980)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE980);
    }
  }
}

uint64_t sub_1B6754088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSpawnOverDistance, (uint64_t)&off_1F0F95B08, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67540C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67542B8);
}

uint64_t sub_1B67540F8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSpawnOverDistance, (uint64_t)&off_1F0F95B08, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6754138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67541A8);
}

uint64_t sub_1B6754168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6701F24, a3);
}

void *sub_1B67541A8(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE74FC, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B6754210);
}

void sub_1B6754210()
{
  if (!qword_1E9DCE988)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE988);
    }
  }
}

uint64_t sub_1B6754278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6702060, a3);
}

void *sub_1B67542B8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B674304C, (uint64_t)sub_1B6AE74FC, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B6754320);
}

void sub_1B6754320()
{
  if (!qword_1E9DCE990)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE990);
    }
  }
}

uint64_t sub_1B6754388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleVariableSpawn, (uint64_t)&off_1F0F8A018, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B67543C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675443C);
}

uint64_t sub_1B67543F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F8AE4, a3);
}

void *sub_1B675443C(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE5604, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B67544A4);
}

void sub_1B67544A4()
{
  if (!qword_1E9DCE998)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE998);
    }
  }
}

uint64_t sub_1B6754538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711A28(a1, v2, (uint64_t)&type metadata for ParticleBurstSpawn, (uint64_t)&off_1F0F78A48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC730, a2);
}

uint64_t sub_1B6754578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6754768);
}

void sub_1B67545A8()
{
  if (!qword_1EB97DF80)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1EB97DF80);
    }
  }
}

void sub_1B675462C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1B675467C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67546C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ED56C, a3);
}

void sub_1B67546C0()
{
  if (!qword_1E9DCE9A0)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE9A0);
    }
  }
}

double sub_1B6754744()
{
  return sub_1B670DB40(v0[2], v0[3], v0[4]);
}

void *sub_1B6754768(void *a1)
{
  return sub_1B6754B30(a1, (uint64_t)sub_1B6744260, (uint64_t)sub_1B6AE30AC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8950, (uint64_t (*)(void))sub_1B67547D0);
}

void sub_1B67547D0()
{
  if (!qword_1E9DCE9A8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE9A8);
    }
  }
}

uint64_t sub_1B6754864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711A28(a1, v2, (uint64_t)&type metadata for ParticlePeriodicBurstSpawn, (uint64_t)&off_1F0F96778, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC730, a2);
}

uint64_t sub_1B67548A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6754AC8);
}

uint64_t sub_1B67548D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticlePeriodicBurstSpawn, (uint64_t)&off_1F0F96778, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B6754914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6754988);
}

uint64_t sub_1B6754944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6702698, a3);
}

void *sub_1B6754988(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE76F0, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B67549F0);
}

void sub_1B67549F0()
{
  if (!qword_1E9DCE9B0)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE9B0);
    }
  }
}

uint64_t sub_1B6754A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67546C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67027B0, a3);
}

void *sub_1B6754AC8(void *a1)
{
  return sub_1B6754B30(a1, (uint64_t)sub_1B6744260, (uint64_t)sub_1B6AE76F0, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6754B70);
}

void *sub_1B6754B30(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66D232C(a1, **(void **)(v5 + 16), *(void *)(*(void *)(v5 + 16) + 8), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B6754B70()
{
  if (!qword_1E9DCE9B8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE9B8);
    }
  }
}

uint64_t sub_1B6754C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSpawnDuration, (uint64_t)&off_1F0F89D18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6754C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6754CB4);
}

uint64_t sub_1B6754C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F89A8, a3);
}

void *sub_1B6754CB4(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE54FC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7A78, (uint64_t (*)(void))sub_1B6754D1C);
}

void sub_1B6754D1C()
{
  if (!qword_1E9DCE9C0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE9C0);
    }
  }
}

uint64_t sub_1B6754D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSpawnDelay, (uint64_t)&off_1F0F79928, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6754DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6754E34);
}

uint64_t sub_1B6754DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EDB74, a3);
}

void *sub_1B6754E34(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE3280, (void (*)(unint64_t, uint64_t, double))sub_1B66C7A78, (uint64_t (*)(void))sub_1B6754E9C);
}

void sub_1B6754E9C()
{
  if (!qword_1E9DCE9C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE9C8);
    }
  }
}

uint64_t sub_1B6754F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleRespawn, (uint64_t)&off_1F0F69760, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6754F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6754FB4);
}

uint64_t sub_1B6754F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E74BC, a3);
}

void *sub_1B6754FB4(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE132C, (void (*)(unint64_t, uint64_t, double))sub_1B66C8538, (uint64_t (*)(void))sub_1B675501C);
}

void sub_1B675501C()
{
  if (!qword_1E9DCE9D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE9D0);
    }
  }
}

uint64_t sub_1B6755084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1F0F6EAC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B67550C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6755798);
}

uint64_t sub_1B67550F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1F0F6EAC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6755134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6755688);
}

uint64_t sub_1B6755164@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1F0F6EAC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B67551A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6755578);
}

uint64_t sub_1B67551D4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 20);
  return result;
}

uint64_t sub_1B67551E0(uint64_t *a1)
{
  return sub_1B668FE60(*a1);
}

uint64_t sub_1B6755208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1F0F6EAC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6755248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6755468);
}

uint64_t sub_1B6755278@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSubSpawn, (uint64_t)&off_1F0F6EAC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DBE84, a2);
}

uint64_t sub_1B67552B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6755358);
}

uint64_t sub_1B67552E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE9E0, (uint64_t)&type metadata for ParticleSubSpawn.Mode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E919C, a3);
}

double sub_1B6755328()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCE9E8, (uint64_t)&type metadata for ParticleSubSpawn.Mode);
}

void *sub_1B6755358(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE1D38, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B67553C0);
}

void sub_1B67553C0()
{
  if (!qword_1E9DCE9F0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE9F0);
    }
  }
}

uint64_t sub_1B6755428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E92D8, a3);
}

void *sub_1B6755468(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B67432AC, (uint64_t)sub_1B6AE1D38, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B67554D0);
}

void sub_1B67554D0()
{
  if (!qword_1E9DCE9F8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCE9F8);
    }
  }
}

uint64_t sub_1B6755538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E9414, a3);
}

void *sub_1B6755578(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE1D38, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B67555E0);
}

void sub_1B67555E0()
{
  if (!qword_1E9DCEA00)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA00);
    }
  }
}

uint64_t sub_1B6755648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E9550, a3);
}

void *sub_1B6755688(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B674304C, (uint64_t)sub_1B6AE1D38, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B67556F0);
}

void sub_1B67556F0()
{
  if (!qword_1E9DCEA08)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA08);
    }
  }
}

uint64_t sub_1B6755758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E968C, a3);
}

void *sub_1B6755798(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE1D38, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6755800);
}

void sub_1B6755800()
{
  if (!qword_1E9DCEA10)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA10);
    }
  }
}

char *sub_1B6755868@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B6755874(uint64_t *a1)
{
  return sub_1B6671028(*a1);
}

uint64_t sub_1B675589C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleGrowEmitter, (uint64_t)&off_1F0F7DBC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B67558DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6755F54);
}

uint64_t sub_1B675590C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleGrowEmitter, (uint64_t)&off_1F0F7DBC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DADD0, a2);
}

uint64_t sub_1B675594C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6755E44);
}

uint64_t sub_1B675597C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ParticleGrowEmitter, (uint64_t)&off_1F0F7DBC8, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B67559C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6755D38);
}

uint64_t sub_1B67559F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleGrowEmitter, (uint64_t)&off_1F0F7DBC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6755A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6755C24);
}

uint64_t sub_1B6755A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleGrowEmitter, (uint64_t)&off_1F0F7DBC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6755AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6755B14);
}

uint64_t sub_1B6755AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F0CBC, a3);
}

void *sub_1B6755B14(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE3D0C, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B6755B7C);
}

void sub_1B6755B7C()
{
  if (!qword_1E9DCEA18)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA18);
    }
  }
}

uint64_t sub_1B6755BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F0DF8, a3);
}

void *sub_1B6755C24(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B674304C, (uint64_t)sub_1B6AE3D0C, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B6755C8C);
}

void sub_1B6755C8C()
{
  if (!qword_1E9DCEA20)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA20);
    }
  }
}

uint64_t sub_1B6755CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F0F34, a3);
}

uint64_t sub_1B6755D38(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CF468);
}

void sub_1B6755D64()
{
  if (!qword_1E9DCEA28)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA28);
    }
  }
}

uint64_t sub_1B6755E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEA30, (uint64_t)&type metadata for NoiseKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F104C, a3);
}

void *sub_1B6755E44(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE3D0C, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B6755EAC);
}

void sub_1B6755EAC()
{
  if (!qword_1E9DCEA40)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA40);
    }
  }
}

uint64_t sub_1B6755F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F1188, a3);
}

void *sub_1B6755F54(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE3D0C, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B6755FBC);
}

void sub_1B6755FBC()
{
  if (!qword_1E9DCEA48)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA48);
    }
  }
}

uint64_t sub_1B6756024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleMassInit, (uint64_t)&off_1F0F6DF48, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B6756064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67560D8);
}

uint64_t sub_1B6756094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E8CF4, a3);
}

void *sub_1B67560D8(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE1B38, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B6756140);
}

void sub_1B6756140()
{
  if (!qword_1E9DCEA50)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA50);
    }
  }
}

uint64_t sub_1B67561D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleLifeInit, (uint64_t)&off_1F0F6D9F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B6756214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6756408);
}

uint64_t sub_1B6756244@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleLifeInit, (uint64_t)&off_1F0F6D9F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6756284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67562F4);
}

uint64_t sub_1B67562B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E8964, a3);
}

void *sub_1B67562F4(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE19D8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7C98, (uint64_t (*)(void))sub_1B675635C);
}

void sub_1B675635C()
{
  if (!qword_1E9DCEA58)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA58);
    }
  }
}

uint64_t sub_1B67563C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E8AA0, a3);
}

void *sub_1B6756408(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE19D8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7C98, (uint64_t (*)(void))sub_1B6756470);
}

void sub_1B6756470()
{
  if (!qword_1E9DCEA60)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA60);
    }
  }
}

uint64_t sub_1B6756504@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 16);
  return result;
}

uint64_t sub_1B6756510(uint64_t *a1)
{
  return sub_1B6691700(*a1);
}

uint64_t sub_1B6756538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleVelocityInit, (uint64_t)&off_1F0F832C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6756578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6756A98);
}

uint64_t sub_1B67565A8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleVelocityInit, (uint64_t)&off_1F0F832C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC300, a2);
}

uint64_t sub_1B67565E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6756988);
}

uint64_t sub_1B6756618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleVelocityInit, (uint64_t)&off_1F0F832C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6756658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6756878);
}

uint64_t sub_1B6756688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleVelocityInit, (uint64_t)&off_1F0F832C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B67566C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675673C);
}

uint64_t sub_1B67566F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F5C5C, a3);
}

void *sub_1B675673C(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE4C00, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B67567A4);
}

void sub_1B67567A4()
{
  if (!qword_1E9DCEA68)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA68);
    }
  }
}

uint64_t sub_1B6756838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F5D74, a3);
}

void *sub_1B6756878(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE4C00, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B67568E0);
}

void sub_1B67568E0()
{
  if (!qword_1E9DCEA70)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA70);
    }
  }
}

uint64_t sub_1B6756948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEA78, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F5EB0, a3);
}

void *sub_1B6756988(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE4C00, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B67569F0);
}

void sub_1B67569F0()
{
  if (!qword_1E9DCEA88)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA88);
    }
  }
}

uint64_t sub_1B6756A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F5FEC, a3);
}

void *sub_1B6756A98(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE4C00, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6756B00);
}

void sub_1B6756B00()
{
  if (!qword_1E9DCEA90)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA90);
    }
  }
}

uint64_t sub_1B6756B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleOrientationInit, (uint64_t)&off_1F0F908D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B6756BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6756C1C);
}

uint64_t sub_1B6756BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FCDCC, a3);
}

void *sub_1B6756C1C(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE61C4, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6756C84);
}

void sub_1B6756C84()
{
  if (!qword_1E9DCEA98)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEA98);
    }
  }
}

uint64_t sub_1B6756D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleAngularVelocityInit, (uint64_t)&off_1F0F978D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B6756D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6756DCC);
}

uint64_t sub_1B6756D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703148, a3);
}

void *sub_1B6756DCC(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE79B0, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6756E34);
}

void sub_1B6756E34()
{
  if (!qword_1E9DCEAA0)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEAA0);
    }
  }
}

char *sub_1B6756EC8@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B6756ED4(uint64_t *a1)
{
  return sub_1B6671028(*a1);
}

uint64_t sub_1B6756EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleSizeInit, (uint64_t)&off_1F0F6E408, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6756F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6757334);
}

uint64_t sub_1B6756F6C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSizeInit, (uint64_t)&off_1F0F6E408, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DBD78, a2);
}

uint64_t sub_1B6756FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6757224);
}

uint64_t sub_1B6756FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleSizeInit, (uint64_t)&off_1F0F6E408, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B675701C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67570B8);
}

unsigned char *sub_1B675704C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

unsigned char *sub_1B6757060@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 2;
  return result;
}

uint64_t sub_1B6757074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E8E0C, a3);
}

void *sub_1B67570B8(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE1C10, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6757120);
}

void sub_1B6757120()
{
  if (!qword_1E9DCEAA8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEAA8);
    }
  }
}

uint64_t sub_1B67571B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEAB0, (uint64_t)&type metadata for ScaleMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E8F24, a3);
}

double sub_1B67571F4()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCEAB8, (uint64_t)&type metadata for ScaleMode);
}

void *sub_1B6757224(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE1C10, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B675728C);
}

void sub_1B675728C()
{
  if (!qword_1E9DCEAC0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEAC0);
    }
  }
}

uint64_t sub_1B67572F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E9060, a3);
}

void *sub_1B6757334(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE1C10, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B675739C);
}

void sub_1B675739C()
{
  if (!qword_1E9DCEAC8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEAC8);
    }
  }
}

uint64_t sub_1B6757404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticlePivotInit, (uint64_t)&off_1F0F733C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B6757444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67574B8);
}

uint64_t sub_1B6757474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EAB58, a3);
}

void *sub_1B67574B8(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE247C, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6757520);
}

void sub_1B6757520()
{
  if (!qword_1E9DCEAD0)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEAD0);
    }
  }
}

uint64_t sub_1B67575B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleAngleInit, (uint64_t)&off_1F0F72650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B67575F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6757668);
}

uint64_t sub_1B6757624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EA084, a3);
}

void *sub_1B6757668(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE21B4, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B67576D0);
}

void sub_1B67576D0()
{
  if (!qword_1E9DCEAD8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEAD8);
    }
  }
}

uint64_t sub_1B6757764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleAngleVelocityInit, (uint64_t)&off_1F0F94A60, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B67577A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6757818);
}

uint64_t sub_1B67577D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6700580, a3);
}

void *sub_1B6757818(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE6FD8, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B6757880);
}

void sub_1B6757880()
{
  if (!qword_1E9DCEAE0)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEAE0);
    }
  }
}

uint64_t sub_1B6757914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleTextureFrameInit, (uint64_t)&off_1F0F93BF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B6757954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67579C8);
}

uint64_t sub_1B6757984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67000A8, a3);
}

void *sub_1B67579C8(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE6E10, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B6757A30);
}

void sub_1B6757A30()
{
  if (!qword_1E9DCEAE8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEAE8);
    }
  }
}

char *sub_1B6757AC4@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B6757AD0(uint64_t *a1)
{
  return sub_1B6671040(*a1);
}

uint64_t sub_1B6757AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1F0F72AD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6757B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6758654);
}

uint64_t sub_1B6757B68@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1F0F72AD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC300, a2);
}

uint64_t sub_1B6757BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6758558);
}

uint64_t sub_1B6757BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1F0F72AD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6757C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675842C);
}

uint64_t sub_1B6757C48@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(result + 12) == 1) {
    *a2 = *(unsigned int *)(result + 8);
  }
  else {
    *a2 = 3;
  }
  return result;
}

uint64_t sub_1B6757C6C(uint64_t *a1)
{
  return sub_1B6693C54(*a1);
}

uint64_t sub_1B6757C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1F0F72AD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC1CC, a2);
}

uint64_t sub_1B6757CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67582E8);
}

uint64_t sub_1B6757D04@<X0>(uint64_t result@<X0>, float *a2@<X8>)
{
  float v2 = *(float *)(result + 8);
  if (*(unsigned char *)(result + 12)) {
    float v2 = 0.0;
  }
  *a2 = v2;
  return result;
}

_DWORD *sub_1B6757D20(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 8) = *result;
  *(unsigned char *)(a2 + 12) = 0;
  return result;
}

uint64_t sub_1B6757D30@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(unsigned char *)(result + 12) & 1) == 0;
  return result;
}

uint64_t sub_1B6757D44@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_DWORD *)(result + 8) != 0 || (*(unsigned char *)(result + 12) & 1) == 0;
  return result;
}

uint64_t sub_1B6757D64@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67119A8(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1F0F72AD8, a2);
}

uint64_t sub_1B6757D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6710CAC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675813C);
}

uint64_t sub_1B6757DC0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (*(_DWORD *)(result + 8)) {
    char v2 = 0;
  }
  else {
    char v2 = *(unsigned char *)(result + 12);
  }
  *a2 = v2;
  return result;
}

uint64_t sub_1B6757DD8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1F0F72AD8, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B6757E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6758000);
}

uint64_t sub_1B6757E50@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleColorInit, (uint64_t)&off_1F0F72AD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6757E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6757F00);
}

uint64_t sub_1B6757EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EA19C, a3);
}

void *sub_1B6757F00(void *a1)
{
  return sub_1B676FBF0(a1, (uint64_t)sub_1B6743428, (void (*)(unint64_t, uint64_t, double))sub_1B66C7188, (uint64_t (*)(void))sub_1B6757F54);
}

void sub_1B6757F54()
{
  if (!qword_1E9DCEAF8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEAF8);
    }
  }
}

uint64_t sub_1B6757FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EA2D8, a3);
}

void *sub_1B6758000(void *a1)
{
  return sub_1B676FD28(a1, (uint64_t)sub_1B6744260, (void (*)(unint64_t, uint64_t, double))sub_1B66C7188, (uint64_t (*)(void))sub_1B675805C);
}

void sub_1B675805C()
{
  if (!qword_1E9DCEB00)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB00);
    }
  }
}

uint64_t sub_1B67580FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4F0, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EA3F0, a3);
}

uint64_t sub_1B675813C(uint64_t a1)
{
  return sub_1B6758168(a1, (uint64_t (*)(void, void, void, void, void))sub_1B66D6658);
}

uint64_t sub_1B6758168(uint64_t a1, uint64_t (*a2)(void, void, void, void, void))
{
  return a2(**(void **)(v2 + 16), *(void *)(*(void *)(v2 + 16) + 8), *(unsigned __int8 *)(*(void *)(v2 + 16) + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1B67581B0()
{
  if (!qword_1E9DCEB08)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB08);
    }
  }
}

uint64_t sub_1B675821C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6758278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEB10, (uint64_t)&type metadata for ParticleColorInit.Mode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EA52C, a3);
}

double sub_1B67582B8()
{
  return sub_1B670D2D4(v0[2], v0[3], v0[4], &qword_1E9DCEB18, (uint64_t)&type metadata for ParticleColorInit.Mode);
}

void *sub_1B67582E8(void *a1)
{
  return sub_1B675833C(a1, (uint64_t)sub_1B674B8B0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7188, (uint64_t (*)(void))sub_1B6758384);
}

void *sub_1B675833C(void *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(void))
{
  return sub_1B66D449C(a1, **(unsigned int **)(v4 + 16) | ((unint64_t)*(unsigned __int8 *)(*(void *)(v4 + 16) + 4) << 32), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_1B6758384()
{
  if (!qword_1E9DCEB20)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB20);
    }
  }
}

uint64_t sub_1B67583EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EA668, a3);
}

void *sub_1B675842C(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7188, (uint64_t (*)(void))sub_1B6758480);
}

void sub_1B6758480()
{
  if (!qword_1E9DCEB28)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB28);
    }
  }
}

uint64_t sub_1B67584E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEA78, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EA7A4, a3);
}

double sub_1B6758528()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCEA80, (uint64_t)&type metadata for Composition.Operation);
}

void *sub_1B6758558(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B6743428, (void (*)(unint64_t, uint64_t, double))sub_1B66C7188, (uint64_t (*)(void))sub_1B67585AC);
}

void sub_1B67585AC()
{
  if (!qword_1E9DCEB30)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB30);
    }
  }
}

uint64_t sub_1B6758614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EA8E0, a3);
}

void *sub_1B6758654(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B67432AC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7188, (uint64_t (*)(void))sub_1B67586A8);
}

void sub_1B67586A8()
{
  if (!qword_1E9DCEB38)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB38);
    }
  }
}

uint64_t sub_1B6758710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6758750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675892C);
}

uint64_t sub_1B6758780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B67587C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6758830);
}

uint64_t sub_1B67587F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E5794, a3);
}

void *sub_1B6758830(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B67432AC, (void (*)(unint64_t, uint64_t, double))sub_1B66C6F78, (uint64_t (*)(void))sub_1B6758884);
}

void sub_1B6758884()
{
  if (!qword_1E9DCEB40)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB40);
    }
  }
}

uint64_t sub_1B67588EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E58D0, a3);
}

void *sub_1B675892C(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C6F78, (uint64_t (*)(void))sub_1B6758980);
}

void sub_1B6758980()
{
  if (!qword_1E9DCEB48)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB48);
    }
  }
}

int *sub_1B67589E8@<X0>(int *result@<X0>, void *a2@<X8>)
{
  if (*((unsigned char *)result + 4) == 1) {
    *a2 = qword_1B6E83A00[*result];
  }
  else {
    *a2 = 5;
  }
  return result;
}

uint64_t sub_1B6758A18(uint64_t *a1)
{
  return sub_1B6696418(*a1);
}

uint64_t sub_1B6758A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6758A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675AB6C);
}

uint64_t sub_1B6758AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA834, a2);
}

uint64_t sub_1B6758AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675AA70);
}

uint64_t sub_1B6758B20@<X0>(uint64_t result@<X0>, float *a2@<X8>)
{
  float v2 = *(float *)result;
  if (*(unsigned char *)(result + 4)) {
    float v2 = 0.0;
  }
  *a2 = v2;
  return result;
}

_DWORD *sub_1B6758B3C(_DWORD *result, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + 4) & 1) == 0)
  {
    *(_DWORD *)a2 = *result;
    *(unsigned char *)(a2 + 4) = 0;
  }
  return result;
}

uint64_t sub_1B6758B54@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(unsigned char *)(result + 4) & 1) == 0;
  return result;
}

uint64_t sub_1B6758B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6758BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675A8E8);
}

unsigned char *sub_1B6758BD8@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  if (result[4] == 1) {
    *a2 = *result & 1;
  }
  else {
    *a2 = 1;
  }
  return result;
}

uint64_t sub_1B6758C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B6758C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675A7C0);
}

uint64_t sub_1B6758C70@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_DWORD *)result != 0 || (*(unsigned char *)(result + 4) & 1) == 0;
  return result;
}

uint64_t sub_1B6758C90@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = qword_1B6E83A30[*(char *)(result + 32)];
  return result;
}

void *sub_1B6758CA8(void *result, uint64_t a2)
{
  if (*result == 2)
  {
    *(_OWORD *)(a2 + 16) = xmmword_1B6E78260;
    char v4 = 1;
  }
  else
  {
    if (*result == 1)
    {
      float result = (void *)sub_1B684C6E4(0xAuLL, 0xAuLL, 0xAuLL);
      *(_OWORD *)(a2 + 16) = v3;
      *(unsigned char *)(a2 + 32) = 0;
      return result;
    }
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    char v4 = 2;
  }
  *(unsigned char *)(a2 + 32) = v4;
  return result;
}

uint64_t sub_1B6758D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710C24(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66DA590, a2);
}

uint64_t sub_1B6758D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6710CAC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675A6AC);
}

uint64_t sub_1B6758D7C@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  BOOL v3 = *(unsigned char *)(result + 32) != 2 || *(_OWORD *)(result + 16) != 0;
  *a2 = v3;
  return result;
}

uint64_t sub_1B6758D9C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 33);
  return result;
}

uint64_t sub_1B6758DA8(uint64_t *a1)
{
  return sub_1B6696554(*a1);
}

uint64_t sub_1B6758DD0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA484, a2);
}

uint64_t sub_1B6758E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675A51C);
}

void sub_1B6758E40(uint32x4_t *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v3 = 0uLL;
  if (!a1[1].i8[0]) {
    *(double *)&long long v3 = sub_1B675A498(*a1);
  }
  *a2 = v3;
}

void sub_1B6758E80(uint32x4_t *a1, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 16))
  {
    *(double *)&long long v3 = sub_1B675A498(*a1);
    *(_OWORD *)a2 = v3;
    *(unsigned char *)(a2 + 16) = 0;
  }
}

uint64_t sub_1B6758EB8@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 32) == 0;
  return result;
}

uint64_t sub_1B6758ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710AD0(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA2F4, a2);
}

uint64_t sub_1B6758F0C(uint64_t result)
{
  return sub_1B6710B64(result);
}

void sub_1B6758F14()
{
  if (!qword_1EB97DFD8)
  {
    sub_1B6758FA4(255, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1EB97DFD8);
    }
  }
}

void sub_1B6758FA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B675900C()
{
  unint64_t result = qword_1EB980F18;
  if (!qword_1EB980F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980F18);
  }
  return result;
}

uint64_t sub_1B6759060@<X0>(uint64_t result@<X0>, int *a2@<X8>)
{
  int v2 = *(_DWORD *)result;
  if (*(_DWORD *)result <= 1u) {
    int v2 = 1;
  }
  if (*(unsigned char *)(result + 16) != 1) {
    int v2 = 0;
  }
  *a2 = v2;
  return result;
}

_DWORD *sub_1B6759080(_DWORD *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) == 1)
  {
    LODWORD(v2) = *result;
    if (*result <= 1u) {
      uint64_t v2 = 1;
    }
    else {
      uint64_t v2 = v2;
    }
    *(void *)a2 = v2;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = 1;
  }
  return result;
}

uint64_t sub_1B67590A8@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 32) == 1;
  return result;
}

uint64_t sub_1B67590BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9790, a2);
}

uint64_t sub_1B67590FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675A128);
}

uint64_t sub_1B675912C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B675916C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675A02C);
}

uint64_t sub_1B67591A0(uint64_t *a1)
{
  return sub_1B66965DC(*a1);
}

uint64_t sub_1B67591C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710C24(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66DA1B8, a2);
}

uint64_t sub_1B67591F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6710CAC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6759EE4);
}

uint64_t sub_1B6759228@<X0>(uint64_t result@<X0>, _OWORD *a2@<X8>)
{
  long long v2 = 0uLL;
  if (!*(unsigned char *)(result + 64)) {
    long long v2 = *(_OWORD *)(result + 48);
  }
  *a2 = v2;
  return result;
}

void *sub_1B6759250(void *result, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 64))
  {
    uint64_t v2 = result[1];
    *(void *)(a2 + 48) = *result;
    *(void *)(a2 + 56) = v2;
    *(unsigned char *)(a2 + 64) = 0;
  }
  return result;
}

uint64_t sub_1B675926C@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 64) == 0;
  return result;
}

uint64_t sub_1B6759280@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B67592C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6759D74);
}

uint64_t sub_1B67592F8@<X0>(uint64_t result@<X0>, _OWORD *a2@<X8>)
{
  long long v2 = 0uLL;
  if (*(unsigned char *)(result + 64) == 1) {
    long long v2 = *(_OWORD *)(result + 48);
  }
  *a2 = v2;
  return result;
}

void *sub_1B675931C(void *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 64) == 1)
  {
    uint64_t v2 = result[1];
    *(void *)(a2 + 48) = *result;
    *(void *)(a2 + 56) = v2;
    *(unsigned char *)(a2 + 64) = 1;
  }
  return result;
}

uint64_t sub_1B675933C@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 64) == 1;
  return result;
}

uint64_t sub_1B6759350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710C24(a1, v2, (uint64_t (*)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))sub_1B66DA03C, a2);
}

uint64_t sub_1B6759380(uint64_t result)
{
  return sub_1B6710A08(result);
}

void sub_1B6759388()
{
  if (!qword_1EB97DED8)
  {
    sub_1B62CB19C(255, &qword_1EB97DE80, (uint64_t)&type metadata for EmitterShape.Direction, MEMORY[0x1E4FBB718]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1EB97DED8);
    }
  }
}

int8x16_t sub_1B6759404@<Q0>(int8x16_t *a1@<X0>, int8x16_t *a2@<X8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>)
{
  a3.i32[0] = 0;
  a4.i8[0] = a1[6].i8[0];
  int8x16_t result = vandq_s8(a1[5], vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(a4, a3), 0));
  *a2 = result;
  return result;
}

void *sub_1B675942C(void *result, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 96))
  {
    uint64_t v2 = result[1];
    *(void *)(a2 + 80) = *result;
    *(void *)(a2 + 88) = v2;
    *(unsigned char *)(a2 + 96) = 0;
  }
  return result;
}

uint64_t sub_1B6759448@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 96) == 0;
  return result;
}

int8x16_t sub_1B675945C@<Q0>(int8x16_t *a1@<X0>, int8x16_t *a2@<X8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>)
{
  a3.i8[0] = a1[6].i8[0];
  a4.i32[0] = 1;
  int8x16_t result = vandq_s8(a1[5], vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(a3, a4), 0));
  *a2 = result;
  return result;
}

void *sub_1B6759488(void *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 96) == 1)
  {
    uint64_t v2 = result[1];
    *(void *)(a2 + 80) = *result;
    *(void *)(a2 + 88) = v2;
    *(unsigned char *)(a2 + 96) = 1;
  }
  return result;
}

uint64_t sub_1B67594A8@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 96) == 1;
  return result;
}

uint64_t sub_1B67594BC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 97);
  return result;
}

uint64_t sub_1B67594C8(uint64_t *a1)
{
  return sub_1B669694C(*a1);
}

uint64_t sub_1B67594F0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9F30, a2);
}

uint64_t sub_1B6759530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6759938);
}

uint64_t sub_1B6759560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B67595A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675980C);
}

uint64_t sub_1B67595D0@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_DWORD *)(result + 152) != -1 || *(_DWORD *)(result + 156) != 0;
  return result;
}

uint64_t sub_1B67595FC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 160);
  return result;
}

uint64_t sub_1B6759608(uint64_t *a1)
{
  return sub_1B669696C(*a1);
}

uint64_t sub_1B6759630@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for EmitterShape, (uint64_t)&off_1F0F59E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9E24, a2);
}

uint64_t sub_1B6759670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6759710);
}

uint64_t sub_1B67596A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE650, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E163C, a3);
}

double sub_1B67596E0()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCE658, (uint64_t)&type metadata for AddressMode);
}

void *sub_1B6759710(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C6E18, (uint64_t (*)(void))sub_1B6759764);
}

void sub_1B6759764()
{
  if (!qword_1E9DCEB50)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB50);
    }
  }
}

uint64_t sub_1B67597CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E1778, a3);
}

void *sub_1B675980C(void *a1)
{
  return sub_1B676F890(a1, (uint64_t)sub_1B6745CBC, (void (*)(unint64_t, uint64_t, double))sub_1B66C6E18, (uint64_t (*)(void))sub_1B6759860);
}

void sub_1B6759860()
{
  if (!qword_1E9DCEB58)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB58);
    }
  }
}

uint64_t sub_1B67598C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEB60, (uint64_t)&type metadata for MotionDistribution, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E18B4, a3);
}

double sub_1B6759908()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCEB68, (uint64_t)&type metadata for MotionDistribution);
}

void *sub_1B6759938(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C6E18, (uint64_t (*)(void))sub_1B675998C);
}

void sub_1B675998C()
{
  if (!qword_1E9DCEB70)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB70);
    }
  }
}

uint64_t sub_1B67599F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6759A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6759A94, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E19F0, a3);
}

void sub_1B6759A94()
{
  if (!qword_1E9DCEB78)
  {
    sub_1B62CB19C(255, &qword_1EB97DE80, (uint64_t)&type metadata for EmitterShape.Direction, MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB78);
    }
  }
}

double sub_1B6759B10()
{
  return sub_1B670C84C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6759B1C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16))
  {
    long long v6 = *(_OWORD *)(a1 + 32);
    char v7 = *(unsigned char *)(a1 + 48);
  }
  else
  {
    long long v6 = 0uLL;
    char v7 = -2;
  }
  long long v9 = v6;
  char v10 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, long long *))(v4 + 16))(v3, v5, &v9);
}

void sub_1B6759B80()
{
  if (!qword_1E9DCEB80)
  {
    sub_1B62CB19C(255, &qword_1EB97DE80, (uint64_t)&type metadata for EmitterShape.Direction, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB80);
    }
  }
}

void *sub_1B6759BFC(void *a1)
{
  return sub_1B66CA5A0(a1, **(void **)(v1 + 16), *(void *)(*(void *)(v1 + 16) + 8), *(unsigned __int8 *)(*(void *)(v1 + 16) + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1B6759C24()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B6759C6C()
{
  if (!qword_1E9DCEB88)
  {
    sub_1B62CB19C(255, &qword_1EB97DE80, (uint64_t)&type metadata for EmitterShape.Direction, MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB88);
    }
  }
}

uint64_t sub_1B6759CF8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 49, 15);
}

uint64_t sub_1B6759D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E1B08, a3);
}

void *sub_1B6759D74(void *a1)
{
  return sub_1B676FD28(a1, (uint64_t)sub_1B6744260, (void (*)(unint64_t, uint64_t, double))sub_1B66C6E18, (uint64_t (*)(void))sub_1B6759DD0);
}

void sub_1B6759DD0()
{
  if (!qword_1E9DCEB90)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEB90);
    }
  }
}

uint64_t sub_1B6759E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEB98, (uint64_t)&type metadata for EmitterShape.Direction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E1C20, a3);
}

uint64_t sub_1B6759EB0()
{
  return sub_1B670C978(v0[2], v0[3], v0[4], (unint64_t *)&unk_1EB980B08, (uint64_t)&type metadata for EmitterShape.Direction);
}

void *sub_1B6759EE4(void *a1)
{
  return sub_1B6759F2C(a1, (void (*)(long long *))sub_1B6759F6C, (uint64_t (*)(void))sub_1B6759F84);
}

void *sub_1B6759F2C(void *a1, void (*a2)(long long *), uint64_t (*a3)(void))
{
  return sub_1B66CABD8(a1, **(void **)(v3 + 16), *(void *)(*(void *)(v3 + 16) + 8), *(unsigned __int8 *)(*(void *)(v3 + 16) + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), a2, a3);
}

uint64_t sub_1B6759F6C()
{
  return sub_1B6759C24();
}

void sub_1B6759F84()
{
  if (!qword_1E9DCEBA0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEBA0);
    }
  }
}

uint64_t sub_1B6759FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E1D5C, a3);
}

void *sub_1B675A02C(void *a1)
{
  return sub_1B676FBF0(a1, (uint64_t)sub_1B6743428, (void (*)(unint64_t, uint64_t, double))sub_1B66C6E18, (uint64_t (*)(void))sub_1B675A080);
}

void sub_1B675A080()
{
  if (!qword_1E9DCEBA8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEBA8);
    }
  }
}

uint64_t sub_1B675A0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0C0, MEMORY[0x1E4FBC4C0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E1E98, a3);
}

void *sub_1B675A128(void *a1)
{
  return sub_1B6770580(a1, (uint64_t)sub_1B67429E4, (void (*)(unint64_t, uint64_t, double))sub_1B66C6E18, (uint64_t (*)(void))sub_1B675A17C);
}

void sub_1B675A17C()
{
  if (!qword_1E9DCEBB0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEBB0);
    }
  }
}

uint64_t sub_1B675A1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B675A228, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E1FD4, a3);
}

void sub_1B675A228()
{
  if (!qword_1E9DCEBB8)
  {
    sub_1B6758FA4(255, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEBB8);
    }
  }
}

double sub_1B675A2B8()
{
  return sub_1B670C67C(v0[2], v0[3], v0[4], (void (*)(void))sub_1B675A344);
}

uint64_t sub_1B675A2EC(void *a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = a1[2];
  if (v6)
  {
    uint64_t v6 = a1[4];
    uint64_t v7 = a1[5];
  }
  else
  {
    uint64_t v7 = 0;
  }
  v9[0] = v6;
  v9[1] = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, void *))(v4 + 16))(v3, v5, v9);
}

void sub_1B675A344()
{
  if (!qword_1E9DCEBC0)
  {
    sub_1B6758FA4(255, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEBC0);
    }
  }
}

void *sub_1B675A3D4(void *a1)
{
  return sub_1B66CAA50(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(__n128 *)*(void *)(v1 + 16));
}

void sub_1B675A3F8()
{
  if (!qword_1E9DCEBC8)
  {
    sub_1B6758FA4(255, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEBC8);
    }
  }
}

double sub_1B675A498(uint32x4_t a1)
{
  a1.i32[3] = 0;
  a1.i64[0] = vmaxq_u32(a1, (uint32x4_t)xmmword_1B6E78280).u64[0];
  return *(double *)a1.i64;
}

uint64_t sub_1B675A4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEBD0, (uint64_t)&type metadata for EmissionOrder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E20EC, a3);
}

double sub_1B675A4EC()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCEBD8, (uint64_t)&type metadata for EmissionOrder);
}

void *sub_1B675A51C(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C6E18, (uint64_t (*)(void))sub_1B675A570);
}

void sub_1B675A570()
{
  if (!qword_1E9DCEBE0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEBE0);
    }
  }
}

uint64_t sub_1B675A5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEBE8, (uint64_t)&type metadata for ShapeDistribution, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E2228, a3);
}

uint64_t sub_1B675A618()
{
  return sub_1B670C978(v0[2], v0[3], v0[4], &qword_1EB980BE8, (uint64_t)&type metadata for ShapeDistribution);
}

uint64_t sub_1B675A648(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16))
  {
    long long v6 = *(_OWORD *)(a1 + 32);
    char v7 = *(unsigned char *)(a1 + 48);
  }
  else
  {
    long long v6 = 0uLL;
    char v7 = -1;
  }
  long long v9 = v6;
  char v10 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, long long *))(v4 + 16))(v3, v5, &v9);
}

void *sub_1B675A6AC(void *a1)
{
  return sub_1B6759F2C(a1, (void (*)(long long *))sub_1B6759F6C, (uint64_t (*)(void))sub_1B675A6F4);
}

void sub_1B675A6F4()
{
  if (!qword_1E9DCEBF0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEBF0);
    }
  }
}

uint64_t sub_1B675A75C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E2364, a3);
}

double sub_1B675A7A0()
{
  return sub_1B670CFF8(v0[2], v0[3], v0[4]);
}

void *sub_1B675A7C0(void *a1)
{
  return sub_1B675F714(a1, (uint64_t)sub_1B6745CBC, (void (*)(unint64_t, uint64_t, double))sub_1B66C6E18, (uint64_t (*)(void))sub_1B675A814);
}

void sub_1B675A814()
{
  if (!qword_1E9DCEBF8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEBF8);
    }
  }
}

uint64_t sub_1B675A8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E247C, a3);
}

void *sub_1B675A8E8(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C6E18, (uint64_t (*)(void))sub_1B675A93C);
}

void sub_1B675A93C()
{
  if (!qword_1E9DCEC00)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC00);
    }
  }
}

uint64_t sub_1B675A9A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B675AA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEC08, (uint64_t)&type metadata for EmitterShape.Shape, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E25B8, a3);
}

double sub_1B675AA40()
{
  return sub_1B670D2D4(v0[2], v0[3], v0[4], &qword_1EB980B00, (uint64_t)&type metadata for EmitterShape.Shape);
}

void *sub_1B675AA70(void *a1)
{
  return sub_1B675833C(a1, (uint64_t)sub_1B674B8B0, (void (*)(unint64_t, uint64_t, double))sub_1B66C6E18, (uint64_t (*)(void))sub_1B675AAC4);
}

void sub_1B675AAC4()
{
  if (!qword_1E9DCEC10)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC10);
    }
  }
}

uint64_t sub_1B675AB2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E26F4, a3);
}

void *sub_1B675AB6C(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B67432AC, (void (*)(unint64_t, uint64_t, double))sub_1B66C6E18, (uint64_t (*)(void))sub_1B675ABC0);
}

void sub_1B675ABC0()
{
  if (!qword_1E9DCEC18)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC18);
    }
  }
}

uint64_t sub_1B675AC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for PointCacheEmitter, (uint64_t)&off_1F0F73D38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B675AC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675B4BC);
}

uint64_t sub_1B675AC98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for PointCacheEmitter, (uint64_t)&off_1F0F73D38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B675ACD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675B380);
}

uint64_t sub_1B675AD08@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for PointCacheEmitter, (uint64_t)&off_1F0F73D38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B675AD48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675B26C);
}

uint64_t sub_1B675AD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for PointCacheEmitter, (uint64_t)&off_1F0F73D38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B675ADB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675B15C);
}

uint64_t sub_1B675ADE8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 29);
  return result;
}

uint64_t sub_1B675ADF4(uint64_t *a1)
{
  return sub_1B6697698(*a1);
}

uint64_t sub_1B675AE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for PointCacheEmitter, (uint64_t)&off_1F0F73D38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B675AE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675B04C);
}

uint64_t sub_1B675AE8C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for PointCacheEmitter, (uint64_t)&off_1F0F73D38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9F30, a2);
}

uint64_t sub_1B675AECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675AF3C);
}

uint64_t sub_1B675AEFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEB60, (uint64_t)&type metadata for MotionDistribution, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EB390, a3);
}

void *sub_1B675AF3C(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE25E8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B675AFA4);
}

void sub_1B675AFA4()
{
  if (!qword_1E9DCEC20)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC20);
    }
  }
}

uint64_t sub_1B675B00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EB4CC, a3);
}

void *sub_1B675B04C(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE25E8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B675B0B4);
}

void sub_1B675B0B4()
{
  if (!qword_1E9DCEC28)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC28);
    }
  }
}

uint64_t sub_1B675B11C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EB608, a3);
}

void *sub_1B675B15C(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE25E8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B675B1C4);
}

void sub_1B675B1C4()
{
  if (!qword_1E9DCEC30)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC30);
    }
  }
}

uint64_t sub_1B675B22C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EB744, a3);
}

void *sub_1B675B26C(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE25E8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B675B2D4);
}

void sub_1B675B2D4()
{
  if (!qword_1E9DCEC38)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC38);
    }
  }
}

uint64_t sub_1B675B33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EB880, a3);
}

void *sub_1B675B380(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE25E8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B675B3E8);
}

void sub_1B675B3E8()
{
  if (!qword_1E9DCEC40)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC40);
    }
  }
}

uint64_t sub_1B675B47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EB998, a3);
}

void *sub_1B675B4BC(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE25E8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B675B524);
}

void sub_1B675B524()
{
  if (!qword_1E9DCEC48)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC48);
    }
  }
}

uint64_t sub_1B675B58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for PointCacheSpawner, (uint64_t)&off_1F0F74200, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B675B5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675B7BC);
}

uint64_t sub_1B675B5FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for PointCacheSpawner, (uint64_t)&off_1F0F74200, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B675B63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675B6AC);
}

uint64_t sub_1B675B66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EBAD4, a3);
}

void *sub_1B675B6AC(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE2740, (void (*)(unint64_t, uint64_t, double))sub_1B66C7C98, (uint64_t (*)(void))sub_1B675B714);
}

void sub_1B675B714()
{
  if (!qword_1E9DCEC50)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC50);
    }
  }
}

uint64_t sub_1B675B77C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EBC10, a3);
}

void *sub_1B675B7BC(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE2740, (void (*)(unint64_t, uint64_t, double))sub_1B66C7C98, (uint64_t (*)(void))sub_1B675B824);
}

void sub_1B675B824()
{
  if (!qword_1E9DCEC58)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC58);
    }
  }
}

uint64_t sub_1B675B88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleTargetFromPositionInit, (uint64_t)&off_1F0F9A7C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B675B8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675B940);
}

uint64_t sub_1B675B8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67057B4, a3);
}

void *sub_1B675B940(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE81FC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B675B9A8);
}

void sub_1B675B9A8()
{
  if (!qword_1E9DCEC60)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC60);
    }
  }
}

char *sub_1B675BA3C@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B675BA48(uint64_t *a1)
{
  return sub_1B6671040(*a1);
}

uint64_t sub_1B675BA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleColorOverLife, (uint64_t)&off_1F0F88E18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B675BAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675C104);
}

uint64_t sub_1B675BAE0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleColorOverLife, (uint64_t)&off_1F0F88E18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC300, a2);
}

uint64_t sub_1B675BB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675BFF4);
}

uint64_t sub_1B675BB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleColorOverLife, (uint64_t)&off_1F0F88E18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B675BB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675BEE4);
}

uint64_t sub_1B675BBC0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67119A8(a1, v2, (uint64_t)&type metadata for ParticleColorOverLife, (uint64_t)&off_1F0F88E18, a2);
}

uint64_t sub_1B675BBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6710CAC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675BDDC);
}

uint64_t sub_1B675BC1C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleColorOverLife, (uint64_t)&off_1F0F88E18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B675BC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675BCCC);
}

uint64_t sub_1B675BC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F7394, a3);
}

void *sub_1B675BCCC(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE50D0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B675BD34);
}

void sub_1B675BD34()
{
  if (!qword_1E9DCEC68)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC68);
    }
  }
}

uint64_t sub_1B675BD9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4F0, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F74D0, a3);
}

uint64_t sub_1B675BDDC(uint64_t a1)
{
  return sub_1B6760E44(a1, (uint64_t)sub_1B674BED0, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6AE50D0, (uint64_t (*)(void))sub_1B675BE38);
}

void sub_1B675BE38()
{
  if (!qword_1E9DCEC70)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC70);
    }
  }
}

uint64_t sub_1B675BEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F760C, a3);
}

void *sub_1B675BEE4(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE50D0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B675BF4C);
}

void sub_1B675BF4C()
{
  if (!qword_1E9DCEC78)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC78);
    }
  }
}

uint64_t sub_1B675BFB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEA78, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F7748, a3);
}

void *sub_1B675BFF4(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE50D0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B675C05C);
}

void sub_1B675C05C()
{
  if (!qword_1E9DCEC80)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC80);
    }
  }
}

uint64_t sub_1B675C0C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F7884, a3);
}

void *sub_1B675C104(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE50D0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B675C16C);
}

void sub_1B675C16C()
{
  if (!qword_1E9DCEC88)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC88);
    }
  }
}

char *sub_1B675C1D4@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B675C1E0(uint64_t *a1)
{
  return sub_1B6671040(*a1);
}

uint64_t sub_1B675C208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleSizeOverLife, (uint64_t)&off_1F0F828C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B675C248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675C8E4);
}

uint64_t sub_1B675C278@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSizeOverLife, (uint64_t)&off_1F0F828C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC300, a2);
}

uint64_t sub_1B675C2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675C7D4);
}

uint64_t sub_1B675C2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSizeOverLife, (uint64_t)&off_1F0F828C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B675C328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675C6C4);
}

uint64_t sub_1B675C358@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 8);
  return result;
}

uint64_t sub_1B675C364(uint64_t *a1)
{
  return sub_1B6699530(*a1);
}

uint64_t sub_1B675C38C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSizeOverLife, (uint64_t)&off_1F0F828C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DBD78, a2);
}

uint64_t sub_1B675C3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675C5B4);
}

uint64_t sub_1B675C3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711C34(a1, v2, (uint64_t)&type metadata for ParticleSizeOverLife, (uint64_t)&off_1F0F828C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB154, a2);
}

uint64_t sub_1B675C43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711B70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675C4B0);
}

uint64_t sub_1B675C46C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B674C090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F52A0, a3);
}

uint64_t sub_1B675C4B0(uint64_t a1)
{
  return sub_1B675D4D4(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1B66D79C4);
}

void sub_1B675C4DC()
{
  if (!qword_1E9DCEC90)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC90);
    }
  }
}

uint64_t sub_1B675C574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEAB0, (uint64_t)&type metadata for ScaleMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F53B8, a3);
}

void *sub_1B675C5B4(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE4944, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B675C61C);
}

void sub_1B675C61C()
{
  if (!qword_1E9DCEC98)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEC98);
    }
  }
}

uint64_t sub_1B675C684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F54F4, a3);
}

void *sub_1B675C6C4(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE4944, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B675C72C);
}

void sub_1B675C72C()
{
  if (!qword_1E9DCECA0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCECA0);
    }
  }
}

uint64_t sub_1B675C794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEA78, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F5630, a3);
}

void *sub_1B675C7D4(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE4944, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B675C83C);
}

void sub_1B675C83C()
{
  if (!qword_1E9DCECA8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCECA8);
    }
  }
}

uint64_t sub_1B675C8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F576C, a3);
}

void *sub_1B675C8E4(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE4944, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B675C94C);
}

void sub_1B675C94C()
{
  if (!qword_1E9DCECB0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCECB0);
    }
  }
}

uint64_t sub_1B675C9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711C34(a1, v2, (uint64_t)&type metadata for ParticleOpacityOverLife, (uint64_t)&off_1F0F90530, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB154, a2);
}

uint64_t sub_1B675C9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711B70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675CA68);
}

uint64_t sub_1B675CA24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B674C090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FCCB4, a3);
}

uint64_t sub_1B675CA68(uint64_t a1)
{
  return sub_1B675CAC4(a1, (uint64_t)sub_1B677DB98, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6AE605C, (uint64_t (*)(void))sub_1B675CB24);
}

uint64_t sub_1B675CAC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a4)(void))
{
  return sub_1B66D810C(**(void **)(v4 + 16), *(void *)(*(void *)(v4 + 16) + 8), *(void *)(*(void *)(v4 + 16) + 16), *(unsigned __int8 *)(*(void *)(v4 + 16) + 24), *(void *)(v4 + 24), *(void *)(v4 + 32), a2, a3, a4);
}

void sub_1B675CB24()
{
  if (!qword_1E9DCECB8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCECB8);
    }
  }
}

char *sub_1B675CBBC@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B675CBC8(uint64_t *a1)
{
  return sub_1B6671040(*a1);
}

uint64_t sub_1B675CBF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleColorOverVelocity, (uint64_t)&off_1F0F95178, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B675CC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675D2B4);
}

uint64_t sub_1B675CC60@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleColorOverVelocity, (uint64_t)&off_1F0F95178, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC300, a2);
}

uint64_t sub_1B675CCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675D1A4);
}

uint64_t sub_1B675CCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleColorOverVelocity, (uint64_t)&off_1F0F95178, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B675CD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675D094);
}

uint64_t sub_1B675CD40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleColorOverVelocity, (uint64_t)&off_1F0F95178, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B675CD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675CF58);
}

uint64_t sub_1B675CDB0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67119A8(a1, v2, (uint64_t)&type metadata for ParticleColorOverVelocity, (uint64_t)&off_1F0F95178, a2);
}

uint64_t sub_1B675CDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6710CAC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675CE4C);
}

uint64_t sub_1B675CE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4F0, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6700E00, a3);
}

uint64_t sub_1B675CE4C(uint64_t a1)
{
  return sub_1B6760E44(a1, (uint64_t)sub_1B677DBB0, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6AE721C, (uint64_t (*)(void))sub_1B675CEA8);
}

void sub_1B675CEA8()
{
  if (!qword_1E9DCECC0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCECC0);
    }
  }
}

uint64_t sub_1B675CF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6700F3C, a3);
}

void *sub_1B675CF58(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE721C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B675CFC0);
}

void sub_1B675CFC0()
{
  if (!qword_1E9DCECC8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCECC8);
    }
  }
}

uint64_t sub_1B675D054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6701054, a3);
}

void *sub_1B675D094(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE721C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B675D0FC);
}

void sub_1B675D0FC()
{
  if (!qword_1E9DCECD0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCECD0);
    }
  }
}

uint64_t sub_1B675D164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEA78, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6701190, a3);
}

void *sub_1B675D1A4(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE721C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B675D20C);
}

void sub_1B675D20C()
{
  if (!qword_1E9DCECD8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCECD8);
    }
  }
}

uint64_t sub_1B675D274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67012CC, a3);
}

void *sub_1B675D2B4(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE721C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B675D31C);
}

void sub_1B675D31C()
{
  if (!qword_1E9DCECE0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCECE0);
    }
  }
}

uint64_t sub_1B675D384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleOpacityOverVelocity, (uint64_t)&off_1F0F98090, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B675D3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675D5FC);
}

uint64_t sub_1B675D3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711C34(a1, v2, (uint64_t)&type metadata for ParticleOpacityOverVelocity, (uint64_t)&off_1F0F98090, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB154, a2);
}

uint64_t sub_1B675D434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711B70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675D4A8);
}

uint64_t sub_1B675D464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B674C090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703ABC, a3);
}

uint64_t sub_1B675D4A8(uint64_t a1)
{
  return sub_1B675D4D4(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1B66D849C);
}

uint64_t sub_1B675D4D4(uint64_t a1, uint64_t (*a2)(void, void, void, void, void, void))
{
  return a2(**(void **)(v2 + 16), *(void *)(*(void *)(v2 + 16) + 8), *(void *)(*(void *)(v2 + 16) + 16), *(unsigned __int8 *)(*(void *)(v2 + 16) + 24), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1B675D520()
{
  if (!qword_1E9DCECE8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCECE8);
    }
  }
}

uint64_t sub_1B675D5B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703BD4, a3);
}

void *sub_1B675D5FC(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE7AA4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B675D664);
}

void sub_1B675D664()
{
  if (!qword_1E9DCECF0)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCECF0);
    }
  }
}

uint64_t sub_1B675D6F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for OrientationOverVelocity, (uint64_t)&off_1F0F8FE88, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B675D738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675DAF8);
}

uint64_t sub_1B675D768@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 4);
  return result;
}

unsigned char *sub_1B675D774(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 4) = *result == 1;
  return result;
}

uint64_t sub_1B675D788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for OrientationOverVelocity, (uint64_t)&off_1F0F8FE88, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B675D7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675D9E8);
}

uint64_t sub_1B675D7F8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for OrientationOverVelocity, (uint64_t)&off_1F0F8FE88, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DE36C, a2);
}

uint64_t sub_1B675D838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675D8D8);
}

uint64_t sub_1B675D868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCED00, (uint64_t)&type metadata for OrientationOverVelocity.DirectionAxis, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FC7C4, a3);
}

double sub_1B675D8A8()
{
  return sub_1B670C5D4(v0[2], v0[3], v0[4], &qword_1E9DCED08, (uint64_t)&type metadata for OrientationOverVelocity.DirectionAxis);
}

void *sub_1B675D8D8(void *a1)
{
  return sub_1B676182C(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5E9C, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B675D940);
}

void sub_1B675D940()
{
  if (!qword_1E9DCED10)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED10);
    }
  }
}

uint64_t sub_1B675D9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FC900, a3);
}

void *sub_1B675D9E8(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B67432AC, (uint64_t)sub_1B6AE5E9C, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B675DA50);
}

void sub_1B675DA50()
{
  if (!qword_1E9DCED18)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED18);
    }
  }
}

uint64_t sub_1B675DAB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FCA3C, a3);
}

void *sub_1B675DAF8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE5E9C, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B675DB60);
}

void sub_1B675DB60()
{
  if (!qword_1E9DCED20)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED20);
    }
  }
}

char *sub_1B675DBC8@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B675DBD4(uint64_t *a1)
{
  return sub_1B6671040(*a1);
}

uint64_t sub_1B675DBFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleSizeOverVelocity, (uint64_t)&off_1F0F93890, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B675DC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675E310);
}

uint64_t sub_1B675DC6C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSizeOverVelocity, (uint64_t)&off_1F0F93890, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC300, a2);
}

uint64_t sub_1B675DCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675E200);
}

uint64_t sub_1B675DCDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSizeOverVelocity, (uint64_t)&off_1F0F93890, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B675DD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675E0F0);
}

uint64_t sub_1B675DD4C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 8);
  return result;
}

uint64_t sub_1B675DD58(uint64_t *a1)
{
  return sub_1B6699530(*a1);
}

uint64_t sub_1B675DD80@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSizeOverVelocity, (uint64_t)&off_1F0F93890, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DBD78, a2);
}

uint64_t sub_1B675DDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675DFE0);
}

uint64_t sub_1B675DDF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleSizeOverVelocity, (uint64_t)&off_1F0F93890, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B675DE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675DEA4);
}

uint64_t sub_1B675DE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FFAA0, a3);
}

void *sub_1B675DEA4(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE6CD8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B675DF0C);
}

void sub_1B675DF0C()
{
  if (!qword_1E9DCED28)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED28);
    }
  }
}

uint64_t sub_1B675DFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEAB0, (uint64_t)&type metadata for ScaleMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FFBB8, a3);
}

void *sub_1B675DFE0(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE6CD8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B675E048);
}

void sub_1B675E048()
{
  if (!qword_1E9DCED30)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED30);
    }
  }
}

uint64_t sub_1B675E0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FFCF4, a3);
}

void *sub_1B675E0F0(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE6CD8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B675E158);
}

void sub_1B675E158()
{
  if (!qword_1E9DCED38)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED38);
    }
  }
}

uint64_t sub_1B675E1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEA78, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FFE30, a3);
}

void *sub_1B675E200(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE6CD8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B675E268);
}

void sub_1B675E268()
{
  if (!qword_1E9DCED40)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED40);
    }
  }
}

uint64_t sub_1B675E2D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FFF6C, a3);
}

void *sub_1B675E310(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE6CD8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B675E378);
}

void sub_1B675E378()
{
  if (!qword_1E9DCED48)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED48);
    }
  }
}

uint64_t sub_1B675E3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for WrapAroundCamera, (uint64_t)&off_1F0F6FF30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B675E420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675E610);
}

uint64_t sub_1B675E450@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for WrapAroundCamera, (uint64_t)&off_1F0F6FF30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B675E490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675E500);
}

uint64_t sub_1B675E4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E9B94, a3);
}

void *sub_1B675E500(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE2028, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B675E568);
}

void sub_1B675E568()
{
  if (!qword_1E9DCED50)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED50);
    }
  }
}

uint64_t sub_1B675E5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E9CD0, a3);
}

void *sub_1B675E610(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE2028, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B675E678);
}

void sub_1B675E678()
{
  if (!qword_1E9DCED58)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED58);
    }
  }
}

char *sub_1B675E6E0@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B675E6EC(uint64_t *a1)
{
  return sub_1B6671040(*a1);
}

uint64_t sub_1B675E714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleColorOverTexture, (uint64_t)&off_1F0F92958, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B675E754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675EFB4);
}

uint64_t sub_1B675E784@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleColorOverTexture, (uint64_t)&off_1F0F92958, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC300, a2);
}

uint64_t sub_1B675E7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675EEA4);
}

uint64_t sub_1B675E7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleColorOverTexture, (uint64_t)&off_1F0F92958, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B675E834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675ED94);
}

uint64_t sub_1B675E864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleColorOverTexture, (uint64_t)&off_1F0F92958, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B675E8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675EC84);
}

uint64_t sub_1B675E8D4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 16);
  return result;
}

uint64_t sub_1B675E8E0(uint64_t *a1)
{
  return sub_1B6691700(*a1);
}

uint64_t sub_1B675E908@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleColorOverTexture, (uint64_t)&off_1F0F92958, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9E24, a2);
}

uint64_t sub_1B675E948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675EB74);
}

uint64_t sub_1B675E978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleColorOverTexture, (uint64_t)&off_1F0F92958, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B675E9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675EA2C);
}

uint64_t sub_1B675E9E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FE25C, a3);
}

void *sub_1B675EA2C(void *a1)
{
  return sub_1B6773E54(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE6710, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B675EA94);
}

void sub_1B675EA94()
{
  if (!qword_1E9DCED60)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED60);
    }
  }
}

uint64_t sub_1B675EB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE650, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FE374, a3);
}

void *sub_1B675EB74(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE6710, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B675EBDC);
}

void sub_1B675EBDC()
{
  if (!qword_1E9DCED68)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED68);
    }
  }
}

uint64_t sub_1B675EC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FE4B0, a3);
}

void *sub_1B675EC84(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE6710, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B675ECEC);
}

void sub_1B675ECEC()
{
  if (!qword_1E9DCED70)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED70);
    }
  }
}

uint64_t sub_1B675ED54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FE5EC, a3);
}

void *sub_1B675ED94(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE6710, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B675EDFC);
}

void sub_1B675EDFC()
{
  if (!qword_1E9DCED78)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED78);
    }
  }
}

uint64_t sub_1B675EE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEA78, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FE728, a3);
}

void *sub_1B675EEA4(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE6710, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B675EF0C);
}

void sub_1B675EF0C()
{
  if (!qword_1E9DCED80)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED80);
    }
  }
}

uint64_t sub_1B675EF74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FE864, a3);
}

void *sub_1B675EFB4(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE6710, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B675F01C);
}

void sub_1B675F01C()
{
  if (!qword_1E9DCED88)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED88);
    }
  }
}

uint64_t sub_1B675F084@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 12);
  return result;
}

uint64_t sub_1B675F090(uint64_t *a1)
{
  return sub_1B669D51C(*a1);
}

uint64_t sub_1B675F0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleSizeOverTexture, (uint64_t)&off_1F0F90D10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B675F0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675FE30);
}

uint64_t sub_1B675F128@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSizeOverTexture, (uint64_t)&off_1F0F90D10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC300, a2);
}

uint64_t sub_1B675F168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675FD34);
}

uint64_t sub_1B675F198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSizeOverTexture, (uint64_t)&off_1F0F90D10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B675F1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675FC38);
}

uint64_t sub_1B675F208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleSizeOverTexture, (uint64_t)&off_1F0F90D10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B675F248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675FB3C);
}

uint64_t sub_1B675F278@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 8);
  return result;
}

uint64_t sub_1B675F284(uint64_t *a1)
{
  return sub_1B669D534(*a1);
}

uint64_t sub_1B675F2AC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSizeOverTexture, (uint64_t)&off_1F0F90D10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DCAF0, a2);
}

uint64_t sub_1B675F2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675FA40);
}

uint64_t sub_1B675F31C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 9);
  return result;
}

uint64_t sub_1B675F328(uint64_t *a1)
{
  return sub_1B669D554(*a1);
}

uint64_t sub_1B675F350@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSizeOverTexture, (uint64_t)&off_1F0F90D10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9E24, a2);
}

uint64_t sub_1B675F390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675F914);
}

uint64_t sub_1B675F3C0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 20);
  return result;
}

uint64_t sub_1B675F3CC(uint64_t *a1)
{
  return sub_1B669D56C(*a1);
}

uint64_t sub_1B675F3F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSizeOverTexture, (uint64_t)&off_1F0F90D10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DBD78, a2);
}

uint64_t sub_1B675F434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675F818);
}

uint64_t sub_1B675F464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleSizeOverTexture, (uint64_t)&off_1F0F90D10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B675F4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675F6C0);
}

uint64_t sub_1B675F4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleSizeOverTexture, (uint64_t)&off_1F0F90D10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B675F514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B675F588);
}

uint64_t sub_1B675F544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FCEE4, a3);
}

void *sub_1B675F588(void *a1)
{
  return sub_1B67778F8(a1, (uint64_t)sub_1B6745CBC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7B30, (uint64_t (*)(void))sub_1B675F5DC);
}

void sub_1B675F5DC()
{
  if (!qword_1E9DCED90)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED90);
    }
  }
}

uint64_t sub_1B675F67C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FCFFC, a3);
}

void *sub_1B675F6C0(void *a1)
{
  return sub_1B675F714(a1, (uint64_t)sub_1B6745CBC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7B30, (uint64_t (*)(void))sub_1B675F744);
}

void *sub_1B675F714(void *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(void))
{
  return sub_1B66CE2F8(a1, *(void *)(v4 + 24), *(void *)(v4 + 32), **(float **)(v4 + 16), *(float *)(*(void *)(v4 + 16) + 4), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_1B675F744()
{
  if (!qword_1E9DCED98)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCED98);
    }
  }
}

uint64_t sub_1B675F7D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEAB0, (uint64_t)&type metadata for ScaleMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FD114, a3);
}

void *sub_1B675F818(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7B30, (uint64_t (*)(void))sub_1B675F86C);
}

void sub_1B675F86C()
{
  if (!qword_1E9DCEDA0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDA0);
    }
  }
}

uint64_t sub_1B675F8D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE650, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FD250, a3);
}

void *sub_1B675F914(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7B30, (uint64_t (*)(void))sub_1B675F968);
}

void sub_1B675F968()
{
  if (!qword_1E9DCEDA8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDA8);
    }
  }
}

uint64_t sub_1B675F9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE930, (uint64_t)&type metadata for TextureChannel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FD38C, a3);
}

double sub_1B675FA10()
{
  return sub_1B670CD4C(v0[2], v0[3], v0[4], &qword_1E9DCE938, (uint64_t)&type metadata for TextureChannel);
}

void *sub_1B675FA40(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7B30, (uint64_t (*)(void))sub_1B675FA94);
}

void sub_1B675FA94()
{
  if (!qword_1E9DCEDB0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDB0);
    }
  }
}

uint64_t sub_1B675FAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FD4C8, a3);
}

void *sub_1B675FB3C(void *a1)
{
  return sub_1B676F890(a1, (uint64_t)sub_1B6745CBC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7B30, (uint64_t (*)(void))sub_1B675FB90);
}

void sub_1B675FB90()
{
  if (!qword_1E9DCEDB8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDB8);
    }
  }
}

uint64_t sub_1B675FBF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FD604, a3);
}

void *sub_1B675FC38(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7B30, (uint64_t (*)(void))sub_1B675FC8C);
}

void sub_1B675FC8C()
{
  if (!qword_1E9DCEDC0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDC0);
    }
  }
}

uint64_t sub_1B675FCF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEA78, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FD740, a3);
}

void *sub_1B675FD34(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7B30, (uint64_t (*)(void))sub_1B675FD88);
}

void sub_1B675FD88()
{
  if (!qword_1E9DCEDC8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDC8);
    }
  }
}

uint64_t sub_1B675FDF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FD87C, a3);
}

void *sub_1B675FE30(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B67432AC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7B30, (uint64_t (*)(void))sub_1B675FE84);
}

void sub_1B675FE84()
{
  if (!qword_1E9DCEDD0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDD0);
    }
  }
}

uint64_t sub_1B675FEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticlePositionOverTexture, (uint64_t)&off_1F0F983B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B675FF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6760970);
}

uint64_t sub_1B675FF5C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 8);
  return result;
}

uint64_t sub_1B675FF68(uint64_t *a1)
{
  return sub_1B669D534(*a1);
}

uint64_t sub_1B675FF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticlePositionOverTexture, (uint64_t)&off_1F0F983B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B675FFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6760860);
}

uint64_t sub_1B6760000@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticlePositionOverTexture, (uint64_t)&off_1F0F983B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DCAF0, a2);
}

uint64_t sub_1B6760040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6760750);
}

uint64_t sub_1B6760070@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 9);
  return result;
}

uint64_t sub_1B676007C(uint64_t *a1)
{
  return sub_1B669D554(*a1);
}

uint64_t sub_1B67600A4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticlePositionOverTexture, (uint64_t)&off_1F0F983B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9E24, a2);
}

uint64_t sub_1B67600E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6760640);
}

uint64_t sub_1B6760114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticlePositionOverTexture, (uint64_t)&off_1F0F983B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B6760154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6760504);
}

uint64_t sub_1B6760184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticlePositionOverTexture, (uint64_t)&off_1F0F983B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B67601C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67603B8);
}

uint64_t sub_1B67601F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticlePositionOverTexture, (uint64_t)&off_1F0F983B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6760234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67602A4);
}

uint64_t sub_1B6760264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703CEC, a3);
}

void *sub_1B67602A4(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE7C4C, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676030C);
}

void sub_1B676030C()
{
  if (!qword_1E9DCEDD8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDD8);
    }
  }
}

uint64_t sub_1B6760374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703E28, a3);
}

void *sub_1B67603B8(void *a1)
{
  return sub_1B6773E54(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE7C4C, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B6760420);
}

void sub_1B6760420()
{
  if (!qword_1E9DCEDE0)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDE0);
    }
  }
}

uint64_t sub_1B67604C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703F40, a3);
}

void *sub_1B6760504(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE7C4C, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676056C);
}

void sub_1B676056C()
{
  if (!qword_1E9DCEDE8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDE8);
    }
  }
}

uint64_t sub_1B6760600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE650, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6704058, a3);
}

void *sub_1B6760640(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE7C4C, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B67606A8);
}

void sub_1B67606A8()
{
  if (!qword_1E9DCEDF0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDF0);
    }
  }
}

uint64_t sub_1B6760710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE930, (uint64_t)&type metadata for TextureChannel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6704194, a3);
}

void *sub_1B6760750(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE7C4C, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B67607B8);
}

void sub_1B67607B8()
{
  if (!qword_1E9DCEDF8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEDF8);
    }
  }
}

uint64_t sub_1B6760820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67042D0, a3);
}

void *sub_1B6760860(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE7C4C, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B67608C8);
}

void sub_1B67608C8()
{
  if (!qword_1E9DCEE00)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEE00);
    }
  }
}

uint64_t sub_1B6760930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670440C, a3);
}

void *sub_1B6760970(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE7C4C, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B67609D8);
}

void sub_1B67609D8()
{
  if (!qword_1E9DCEE08)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEE08);
    }
  }
}

uint64_t sub_1B6760A40@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 4);
  return result;
}

uint64_t sub_1B6760A4C(uint64_t *a1)
{
  return sub_1B669EA24(*a1);
}

uint64_t sub_1B6760A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleColorOverPosition, (uint64_t)&off_1F0F94E70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6760AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6761404);
}

uint64_t sub_1B6760AE4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleColorOverPosition, (uint64_t)&off_1F0F94E70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DC300, a2);
}

uint64_t sub_1B6760B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67612F4);
}

uint64_t sub_1B6760B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleColorOverPosition, (uint64_t)&off_1F0F94E70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6760B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67611E4);
}

unsigned __int8 *sub_1B6760BC4@<X0>(unsigned __int8 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1B6760BD0(unint64_t *a1)
{
  return sub_1B6671014(*a1);
}

uint64_t sub_1B6760BF8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleColorOverPosition, (uint64_t)&off_1F0F94E70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DE708, a2);
}

uint64_t sub_1B6760C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67610D4);
}

uint64_t sub_1B6760C68@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 1);
  return result;
}

uint64_t sub_1B6760C74(uint64_t *a1)
{
  return sub_1B669EA44(*a1);
}

uint64_t sub_1B6760C9C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleColorOverPosition, (uint64_t)&off_1F0F94E70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9E24, a2);
}

uint64_t sub_1B6760CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6760F94);
}

uint64_t sub_1B6760D0C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67119A8(a1, v2, (uint64_t)&type metadata for ParticleColorOverPosition, (uint64_t)&off_1F0F94E70, a2);
}

uint64_t sub_1B6760D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6710CAC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6760DE8);
}

uint64_t sub_1B6760D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4F0, (uint64_t)&type metadata for ColorRamp, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6700698, a3);
}

uint64_t sub_1B6760DA8()
{
  return sub_1B670D408(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6760DC8(uint64_t a1)
{
  return sub_1B670E714(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B6760DE8(uint64_t a1)
{
  return sub_1B6760E44(a1, (uint64_t)sub_1B674BED0, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6AE70B0, (uint64_t (*)(void))sub_1B6760EA0);
}

uint64_t sub_1B6760E44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a4)(void))
{
  return sub_1B66D7D5C(**(void **)(v4 + 16), *(void *)(*(void *)(v4 + 16) + 8), *(unsigned __int8 *)(*(void *)(v4 + 16) + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), a2, a3, a4);
}

void sub_1B6760EA0()
{
  if (!qword_1E9DCEE18)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEE18);
    }
  }
}

uint64_t sub_1B6760F0C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1B6760F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE650, (uint64_t)&type metadata for AddressMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67007D4, a3);
}

void *sub_1B6760F94(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE70B0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6760FFC);
}

void sub_1B6760FFC()
{
  if (!qword_1E9DCEE20)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEE20);
    }
  }
}

uint64_t sub_1B6761064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEE28, (uint64_t)&type metadata for ParticleColorOverPosition.GradientMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6700910, a3);
}

double sub_1B67610A4()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCEE30, (uint64_t)&type metadata for ParticleColorOverPosition.GradientMode);
}

void *sub_1B67610D4(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE70B0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B676113C);
}

void sub_1B676113C()
{
  if (!qword_1E9DCEE38)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEE38);
    }
  }
}

uint64_t sub_1B67611A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6700A4C, a3);
}

void *sub_1B67611E4(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE70B0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B676124C);
}

void sub_1B676124C()
{
  if (!qword_1E9DCEE40)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEE40);
    }
  }
}

uint64_t sub_1B67612B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEA78, (uint64_t)&type metadata for Composition.Operation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6700B88, a3);
}

void *sub_1B67612F4(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE70B0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B676135C);
}

void sub_1B676135C()
{
  if (!qword_1E9DCEE48)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEE48);
    }
  }
}

uint64_t sub_1B67613C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6700CC4, a3);
}

void *sub_1B6761404(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE70B0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B676146C);
}

void sub_1B676146C()
{
  if (!qword_1E9DCEE50)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEE50);
    }
  }
}

unsigned __int8 *sub_1B67614D4@<X0>(unsigned __int8 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned char *sub_1B67614E0(unsigned char *result, BOOL *a2)
{
  *a2 = *result == 1;
  return result;
}

uint64_t sub_1B67614F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for OrientationConstraint, (uint64_t)&off_1F0F883D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6761534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6761914);
}

uint64_t sub_1B6761564@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for OrientationConstraint, (uint64_t)&off_1F0F883D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDB30, a2);
}

uint64_t sub_1B67615A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67617C4);
}

uint64_t sub_1B67615D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for OrientationConstraint, (uint64_t)&off_1F0F883D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6761614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6761684);
}

uint64_t sub_1B6761644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F6D68, a3);
}

void *sub_1B6761684(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE4E98, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B67616EC);
}

void sub_1B67616EC()
{
  if (!qword_1E9DCEE60)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEE60);
    }
  }
}

uint64_t sub_1B6761754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEE68, (uint64_t)&type metadata for OrientationConstraint.Mode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F6EA4, a3);
}

double sub_1B6761794()
{
  return sub_1B670C5D4(v0[2], v0[3], v0[4], &qword_1E9DCEE70, (uint64_t)&type metadata for OrientationConstraint.Mode);
}

void *sub_1B67617C4(void *a1)
{
  return sub_1B676182C(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE4E98, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B676186C);
}

void *sub_1B676182C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66D0700(a1, **(unsigned char **)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B676186C()
{
  if (!qword_1E9DCEE78)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEE78);
    }
  }
}

uint64_t sub_1B67618D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F6FE0, a3);
}

void *sub_1B6761914(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE4E98, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B676197C);
}

void sub_1B676197C()
{
  if (!qword_1E9DCEE80)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEE80);
    }
  }
}

uint64_t sub_1B67619E4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(void *)(result + 8) == 0;
  return result;
}

uint64_t sub_1B67619F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleAngleEvolution, (uint64_t)&off_1F0F8C9E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6761A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6761E74);
}

uint64_t sub_1B6761A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711C34(a1, v2, (uint64_t)&type metadata for ParticleAngleEvolution, (uint64_t)&off_1F0F8C9E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDD9C, a2);
}

uint64_t sub_1B6761AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711B70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6761C94);
}

void sub_1B6761AD8()
{
  if (!qword_1E9DD53B0)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD53B0);
    }
  }
}

uint64_t sub_1B6761B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCEE90, (uint64_t (*)(uint64_t))sub_1B6761AD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F97F4, a3);
}

double sub_1B6761BA8()
{
  return sub_1B670DD70(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6761BC8(uint64_t a1)
{
  return sub_1B670E918(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B6761BE8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B6761C38(uint64_t result)
{
  if (result != 1) {
    return sub_1B6761C48(result);
  }
  return result;
}

uint64_t sub_1B6761C48(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6761C94(uint64_t a1)
{
  return sub_1B6761CF0(a1, (uint64_t)sub_1B6761D50, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6AE59B4, (uint64_t (*)(void))sub_1B6761D6C);
}

uint64_t sub_1B6761CF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a4)(void))
{
  return sub_1B66D8670(**(void **)(v4 + 16), *(void *)(*(void *)(v4 + 16) + 8), *(void *)(*(void *)(v4 + 16) + 16), *(unsigned __int8 *)(*(void *)(v4 + 16) + 24), *(void *)(v4 + 24), *(void *)(v4 + 32), a2, a3, a4);
}

uint64_t sub_1B6761D50(uint64_t a1)
{
  return sub_1B6711CCC(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

void sub_1B6761D6C(uint64_t a1)
{
}

void sub_1B6761DA0()
{
  if (!qword_1E9DD1D30)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD1D30);
    }
  }
}

uint64_t sub_1B6761E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F993C, a3);
}

void *sub_1B6761E74(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE59B4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6761EDC);
}

void sub_1B6761EDC()
{
  if (!qword_1E9DCEEB0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEEB0);
    }
  }
}

uint64_t sub_1B6761F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleTextureFrameEvolution, (uint64_t)&off_1F0F99AF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6761F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6762194);
}

uint64_t sub_1B6761FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711C34(a1, v2, (uint64_t)&type metadata for ParticleTextureFrameEvolution, (uint64_t)&off_1F0F99AF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DDD9C, a2);
}

uint64_t sub_1B6761FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711B70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6762070);
}

uint64_t sub_1B6762024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCEE90, (uint64_t (*)(uint64_t))sub_1B6761AD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6704DC8, a3);
}

uint64_t sub_1B6762070(uint64_t a1)
{
  return sub_1B6761CF0(a1, (uint64_t)sub_1B677DBC8, (uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6AE7ECC, (uint64_t (*)(void))sub_1B67620CC);
}

void sub_1B67620CC(uint64_t a1)
{
}

uint64_t sub_1B6762100()
{
  swift_release();
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1B6762154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6704F10, a3);
}

void *sub_1B6762194(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE7ECC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B67621FC);
}

void sub_1B67621FC()
{
  if (!qword_1E9DCEEC0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEEC0);
    }
  }
}

uint64_t sub_1B6762264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B67622A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67630A0);
}

uint64_t sub_1B67622D4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710828(a1, v2, (uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, (uint64_t (*)(void))type metadata accessor for ForceFieldType, a2);
}

uint64_t sub_1B6762314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6763004);
}

uint64_t sub_1B6762344@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6762384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6762EC0);
}

uint64_t sub_1B67623B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67623F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6762DC4);
}

void *sub_1B6762424@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (unint64_t)(*result - 7) < 2;
  return result;
}

void *sub_1B676243C@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (unint64_t)(*result - 5) < 0xFFFFFFFFFFFFFFFELL;
  return result;
}

uint64_t sub_1B6762454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9324, a2);
}

uint64_t sub_1B6762494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6762C98);
}

uint64_t sub_1B67624C4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710828(a1, v2, (uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, (uint64_t (*)(void))type metadata accessor for ForceFieldShape, a2);
}

uint64_t sub_1B6762504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6762BFC);
}

uint64_t sub_1B6762534@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710828(a1, v2, (uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, (uint64_t (*)(void))type metadata accessor for ForceFieldCullMode, a2);
}

uint64_t sub_1B6762574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6762B48);
}

uint64_t sub_1B67625A4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(void *)(result + 40) != 0;
  return result;
}

uint64_t sub_1B67625B8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B6762600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67629C4);
}

void *sub_1B6762630@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (unint64_t)(*result - 3) < 2;
  return result;
}

void *sub_1B6762648@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 9;
  return result;
}

uint64_t sub_1B676265C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B676269C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6762890);
}

uint64_t sub_1B67626CC@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *(void *)(result + 32);
  return result;
}

unsigned int *sub_1B67626D8(unsigned int *result, uint64_t a2)
{
  *(void *)(a2 + 32) = *result;
  return result;
}

uint64_t sub_1B67626E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D90C4, a2);
}

uint64_t sub_1B6762724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67627C4);
}

uint64_t sub_1B6762754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEEE8, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66DF920, a3);
}

double sub_1B6762794()
{
  return sub_1B670C484(v0[2], v0[3], v0[4], &qword_1E9DCEEF0, (uint64_t)&type metadata for CollisionLayerSet);
}

void *sub_1B67627C4(void *a1)
{
  return sub_1B66C9148(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1B67627E8()
{
  if (!qword_1E9DCEEF8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEEF8);
    }
  }
}

uint64_t sub_1B6762850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66DFA5C, a3);
}

void *sub_1B6762890(void *a1)
{
  return sub_1B676F890(a1, (uint64_t)sub_1B6745CBC, (void (*)(unint64_t, uint64_t, double))sub_1B66C6D70, (uint64_t (*)(void))sub_1B67628E4);
}

void sub_1B67628E4()
{
  if (!qword_1E9DCEF00)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEF00);
    }
  }
}

uint64_t sub_1B676294C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66DFB98, a3);
}

double sub_1B6762990()
{
  return sub_1B670C67C(v0[2], v0[3], v0[4], (void (*)(void))sub_1B6743840);
}

void *sub_1B67629C4(void *a1)
{
  return sub_1B676FD28(a1, (uint64_t)sub_1B6744260, (void (*)(unint64_t, uint64_t, double))sub_1B66C6D70, (uint64_t (*)(void))sub_1B6762A20);
}

void sub_1B6762A20()
{
  if (!qword_1E9DCEF08)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEF08);
    }
  }
}

uint64_t sub_1B6762AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCEF10, (uint64_t (*)(uint64_t))type metadata accessor for ForceFieldCullMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66DFCB0, a3);
}

double sub_1B6762B0C()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCEF18, (uint64_t (*)(uint64_t))type metadata accessor for ForceFieldCullMode);
}

uint64_t sub_1B6762B48(uint64_t a1)
{
  return sub_1B6770108(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66C92B8);
}

uint64_t sub_1B6762B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCEF28, (uint64_t (*)(uint64_t))type metadata accessor for ForceFieldShape, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66DFDF8, a3);
}

double sub_1B6762BC0()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCEF30, (uint64_t (*)(uint64_t))type metadata accessor for ForceFieldShape);
}

uint64_t sub_1B6762BFC(uint64_t a1)
{
  return sub_1B6770108(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66C9450);
}

uint64_t sub_1B6762C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE770, MEMORY[0x1E4FBC538], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66DFF40, a3);
}

double sub_1B6762C68()
{
  return sub_1B670C3E0(v0[2], v0[3], v0[4], &qword_1E9DCE778, MEMORY[0x1E4FBC538]);
}

void *sub_1B6762C98(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B6742130, (void (*)(unint64_t, uint64_t, double))sub_1B66C6D70, (uint64_t (*)(void))sub_1B6762CEC);
}

void sub_1B6762CEC()
{
  if (!qword_1E9DCEF40)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEF40);
    }
  }
}

uint64_t sub_1B6762D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E007C, a3);
}

uint64_t sub_1B6762D94()
{
  return sub_1B670C528(v0[2], v0[3], v0[4], (unint64_t *)&unk_1EB980D30, MEMORY[0x1E4FBB470]);
}

void *sub_1B6762DC4(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C6D70, (uint64_t (*)(void))sub_1B6762E18);
}

void sub_1B6762E18()
{
  if (!qword_1E9DCEF48)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEF48);
    }
  }
}

uint64_t sub_1B6762E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E01B8, a3);
}

void *sub_1B6762EC0(void *a1)
{
  return sub_1B676FBF0(a1, (uint64_t)sub_1B6743428, (void (*)(unint64_t, uint64_t, double))sub_1B66C6D70, (uint64_t (*)(void))sub_1B6762F14);
}

void sub_1B6762F14()
{
  if (!qword_1E9DCEF50)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEF50);
    }
  }
}

uint64_t sub_1B6762F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCEF58, (uint64_t (*)(uint64_t))type metadata accessor for ForceFieldType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E02F4, a3);
}

double sub_1B6762FC8()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCEF60, (uint64_t (*)(uint64_t))type metadata accessor for ForceFieldType);
}

uint64_t sub_1B6763004(uint64_t a1)
{
  return sub_1B6770108(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66C95E8);
}

uint64_t sub_1B6763030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E043C, a3);
}

double sub_1B6763070()
{
  return sub_1B670C3E0(v0[2], v0[3], v0[4], &qword_1E9DCE120, MEMORY[0x1E4FBC1C8]);
}

void *sub_1B67630A0(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B6742130, (void (*)(unint64_t, uint64_t, double))sub_1B66C6D70, (uint64_t (*)(void))sub_1B67630F4);
}

void sub_1B67630F4()
{
  if (!qword_1E9DCEF70)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEF70);
    }
  }
}

uint64_t sub_1B676315C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleForceField, (uint64_t)&off_1F0F79230, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676319C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67633A0);
}

uint64_t sub_1B67631CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleForceField, (uint64_t)&off_1F0F79230, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D90C4, a2);
}

uint64_t sub_1B676320C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676327C);
}

uint64_t sub_1B676323C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEEE8, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ED684, a3);
}

void *sub_1B676327C(void *a1)
{
  return sub_1B66CD024(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67429E4, (uint64_t)sub_1B6AE3184, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B67632F8);
}

void sub_1B67632F8()
{
  if (!qword_1E9DCEF78)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEF78);
    }
  }
}

uint64_t sub_1B6763360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ED7C0, a3);
}

void *sub_1B67633A0(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE3184, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B6763408);
}

void sub_1B6763408()
{
  if (!qword_1E9DCEF80)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEF80);
    }
  }
}

uint64_t sub_1B6763470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for Vortex, (uint64_t)&off_1F0FA2358, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67634B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6763520);
}

uint64_t sub_1B67634E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6709AA0, a3);
}

void *sub_1B6763520(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE9180, (void (*)(unint64_t, uint64_t, double))sub_1B66C8950, (uint64_t (*)(void))sub_1B6763588);
}

void sub_1B6763588()
{
  if (!qword_1E9DCEF88)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEF88);
    }
  }
}

uint64_t sub_1B67635F0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ParticleForce, (uint64_t)&off_1F0F60C08, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B6763638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67639E0);
}

uint64_t sub_1B6763668@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 16);
  return result;
}

uint64_t sub_1B6763674(uint64_t *a1)
{
  return sub_1B66A26F0(*a1);
}

uint64_t sub_1B676369C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleForce, (uint64_t)&off_1F0F60C08, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B67636DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67638CC);
}

uint64_t sub_1B676370C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleForce, (uint64_t)&off_1F0F60C08, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DACC4, a2);
}

uint64_t sub_1B676374C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67637BC);
}

uint64_t sub_1B676377C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE270, (uint64_t)&type metadata for EntitySpace, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E4080, a3);
}

void *sub_1B67637BC(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE0358, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6763824);
}

void sub_1B6763824()
{
  if (!qword_1E9DCEF90)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEF90);
    }
  }
}

uint64_t sub_1B676388C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E41BC, a3);
}

void *sub_1B67638CC(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE0358, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6763934);
}

void sub_1B6763934()
{
  if (!qword_1E9DCEF98)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEF98);
    }
  }
}

uint64_t sub_1B676399C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E42F8, a3);
}

uint64_t sub_1B67639E0(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CB714);
}

void sub_1B6763A0C()
{
  if (!qword_1E9DCEFA0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEFA0);
    }
  }
}

uint64_t sub_1B6763AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleRibbonTrails, (uint64_t)&off_1F0F82248, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B6763AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6763FF0);
}

uint64_t sub_1B6763B1C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711DEC(a1, v2, (uint64_t)&type metadata for ParticleRibbonTrails, (uint64_t)&off_1F0F82248, a2);
}

uint64_t sub_1B6763B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711E70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6763EBC);
}

uint64_t sub_1B6763B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleRibbonTrails, (uint64_t)&off_1F0F82248, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6763BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6763DA8);
}

uint64_t sub_1B6763BE8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleRibbonTrails, (uint64_t)&off_1F0F82248, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6763C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6763C98);
}

uint64_t sub_1B6763C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F4DD4, a3);
}

void *sub_1B6763C98(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE48CC, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B6763D00);
}

void sub_1B6763D00()
{
  if (!qword_1E9DCEFA8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEFA8);
    }
  }
}

uint64_t sub_1B6763D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F4F10, a3);
}

void *sub_1B6763DA8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE48CC, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B6763E10);
}

void sub_1B6763E10()
{
  if (!qword_1E9DCEFB0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEFB0);
    }
  }
}

uint64_t sub_1B6763E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6742DBC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F504C, a3);
}

void *sub_1B6763EBC(void *a1)
{
  return sub_1B6767F08(a1, (uint64_t)sub_1B6742EE0, (uint64_t)sub_1B6AE48CC, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B6763F24);
}

void sub_1B6763F24()
{
  if (!qword_1E9DCEFB8)
  {
    sub_1B62CB19C(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEFB8);
    }
  }
}

uint64_t sub_1B6763FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F5164, a3);
}

void *sub_1B6763FF0(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE48CC, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B6764058);
}

void sub_1B6764058()
{
  if (!qword_1E9DCEFC0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEFC0);
    }
  }
}

char *sub_1B67640C0@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B67640CC(uint64_t *a1)
{
  return sub_1B6671058(*a1);
}

uint64_t sub_1B67640F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleFlockingAlignOrientation, (uint64_t)&off_1F0F9B600, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6764134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67647E4);
}

uint64_t sub_1B6764164@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFlockingAlignOrientation, (uint64_t)&off_1F0F9B600, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DECB0, a2);
}

uint64_t sub_1B67641A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67646D4);
}

uint64_t sub_1B67641D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleFlockingAlignOrientation, (uint64_t)&off_1F0F9B600, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6764214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67645C0);
}

uint64_t sub_1B6764244@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 8);
  return result;
}

uint64_t sub_1B6764250(uint64_t *a1)
{
  return sub_1B66A3954(*a1);
}

uint64_t sub_1B6764278@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ParticleFlockingAlignOrientation, (uint64_t)&off_1F0F9B600, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B67642C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67644B4);
}

uint64_t sub_1B67642F0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFlockingAlignOrientation, (uint64_t)&off_1F0F9B600, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6764330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67643A0);
}

uint64_t sub_1B6764360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6705ED4, a3);
}

void *sub_1B67643A0(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE845C, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B6764408);
}

void sub_1B6764408()
{
  if (!qword_1E9DCEFD0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEFD0);
    }
  }
}

uint64_t sub_1B6764470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6706010, a3);
}

uint64_t sub_1B67644B4(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D2CA8);
}

void sub_1B67644E0()
{
  if (!qword_1E9DCEFD8)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEFD8);
    }
  }
}

uint64_t sub_1B6764580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6706128, a3);
}

void *sub_1B67645C0(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B674304C, (uint64_t)sub_1B6AE845C, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B6764628);
}

void sub_1B6764628()
{
  if (!qword_1E9DCEFE0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEFE0);
    }
  }
}

uint64_t sub_1B6764690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEFE8, (uint64_t)&type metadata for FlockingLocalAxis, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6706264, a3);
}

void *sub_1B67646D4(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE845C, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676473C);
}

void sub_1B676473C()
{
  if (!qword_1E9DCEFF8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCEFF8);
    }
  }
}

uint64_t sub_1B67647A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67063A0, a3);
}

void *sub_1B67647E4(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE845C, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676484C);
}

void sub_1B676484C()
{
  if (!qword_1E9DCF000)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF000);
    }
  }
}

uint64_t sub_1B67648B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleFlockingAlignVelocityOnPlane, (uint64_t)&off_1F0F9CBC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67648F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6764AEC);
}

uint64_t sub_1B6764924@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ParticleFlockingAlignVelocityOnPlane, (uint64_t)&off_1F0F9CBC0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B676496C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67649E0);
}

uint64_t sub_1B676499C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6707370, a3);
}

uint64_t sub_1B67649E0(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D34EC);
}

void sub_1B6764A0C()
{
  if (!qword_1E9DCF008)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF008);
    }
  }
}

uint64_t sub_1B6764AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6707488, a3);
}

void *sub_1B6764AEC(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE87CC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6764B54);
}

void sub_1B6764B54()
{
  if (!qword_1E9DCF010)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF010);
    }
  }
}

uint64_t sub_1B6764BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleFlockingConstrainToArea, (uint64_t)&off_1F0F9AD20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6764BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6764F74);
}

uint64_t sub_1B6764C2C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ParticleFlockingConstrainToArea, (uint64_t)&off_1F0F9AD20, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B6764C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6764E68);
}

uint64_t sub_1B6764CA4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFlockingConstrainToArea, (uint64_t)&off_1F0F9AD20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6764CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6764D54);
}

uint64_t sub_1B6764D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67058CC, a3);
}

void *sub_1B6764D54(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE82F0, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B6764DBC);
}

void sub_1B6764DBC()
{
  if (!qword_1E9DCF018)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF018);
    }
  }
}

uint64_t sub_1B6764E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6705A08, a3);
}

uint64_t sub_1B6764E68(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D2A34);
}

void sub_1B6764E94()
{
  if (!qword_1E9DCF020)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF020);
    }
  }
}

uint64_t sub_1B6764F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6705B20, a3);
}

void *sub_1B6764F74(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE82F0, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B6764FDC);
}

void sub_1B6764FDC()
{
  if (!qword_1E9DCF028)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF028);
    }
  }
}

uint64_t sub_1B6765044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleFlockingConstrainToPlane, (uint64_t)&off_1F0F9B910, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6765084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67653FC);
}

uint64_t sub_1B67650B4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ParticleFlockingConstrainToPlane, (uint64_t)&off_1F0F9B910, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B67650FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67652F0);
}

uint64_t sub_1B676512C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFlockingConstrainToPlane, (uint64_t)&off_1F0F9B910, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B676516C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67651DC);
}

uint64_t sub_1B676519C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67064DC, a3);
}

void *sub_1B67651DC(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE8570, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B6765244);
}

void sub_1B6765244()
{
  if (!qword_1E9DCF030)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF030);
    }
  }
}

uint64_t sub_1B67652AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6706618, a3);
}

uint64_t sub_1B67652F0(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D2E44);
}

void sub_1B676531C()
{
  if (!qword_1E9DCF038)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF038);
    }
  }
}

uint64_t sub_1B67653BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6706730, a3);
}

void *sub_1B67653FC(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE8570, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B6765464);
}

void sub_1B6765464()
{
  if (!qword_1E9DCF040)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF040);
    }
  }
}

uint64_t sub_1B67654CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleFlockingFlyTowardsArea, (uint64_t)&off_1F0F9A400, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676550C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67656E8);
}

uint64_t sub_1B676553C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFlockingFlyTowardsArea, (uint64_t)&off_1F0F9A400, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B676557C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67655EC);
}

uint64_t sub_1B67655AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670553C, a3);
}

void *sub_1B67655EC(void *a1)
{
  return sub_1B676FBF0(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7F60, (uint64_t (*)(void))sub_1B6765640);
}

void sub_1B6765640()
{
  if (!qword_1E9DCF048)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF048);
    }
  }
}

uint64_t sub_1B67656A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6705678, a3);
}

void *sub_1B67656E8(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B6745610, (void (*)(unint64_t, uint64_t, double))sub_1B66C7F60, (uint64_t (*)(void))sub_1B676573C);
}

void sub_1B676573C()
{
  if (!qword_1E9DCF050)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF050);
    }
  }
}

uint64_t sub_1B67657A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleFlockingSolver, (uint64_t)&off_1F0F8CFA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67657E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676603C);
}

uint64_t sub_1B6765814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleFlockingSolver, (uint64_t)&off_1F0F8CFA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6765854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6765F2C);
}

uint64_t sub_1B6765884@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 32);
  return result;
}

uint64_t sub_1B6765890(uint64_t *a1)
{
  return sub_1B66A6370(*a1);
}

uint64_t sub_1B67658B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleFlockingSolver, (uint64_t)&off_1F0F8CFA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B67658F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6765E1C);
}

uint64_t sub_1B6765928@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFlockingSolver, (uint64_t)&off_1F0F8CFA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DE048, a2);
}

uint64_t sub_1B6765968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6765D0C);
}

uint64_t sub_1B6765998@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711530(a1, v2, a2);
}

uint64_t sub_1B67659A0(uint64_t result)
{
  return sub_1B67115B4(result);
}

void sub_1B67659A8()
{
  if (!qword_1E9DCF068)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF068);
    }
  }
}

uint64_t sub_1B6765A38@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFlockingSolver, (uint64_t)&off_1F0F8CFA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6765A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6765AE8);
}

uint64_t sub_1B6765AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F9A78, a3);
}

void *sub_1B6765AE8(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6ADF0DC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B6765B50);
}

void sub_1B6765B50()
{
  if (!qword_1E9DCF070)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF070);
    }
  }
}

uint64_t sub_1B6765BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCF078, (uint64_t (*)(uint64_t))sub_1B67659A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F9BB4, a3);
}

double sub_1B6765C04()
{
  return sub_1B670D9E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6765C10(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16))
  {
    long long v6 = *(_OWORD *)(a1 + 32);
    char v7 = *(unsigned char *)(a1 + 48);
  }
  else
  {
    char v7 = 0;
    long long v6 = 0uLL;
  }
  long long v9 = v6;
  char v10 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, long long *))(v4 + 16))(v3, v5, &v9);
}

void *sub_1B6765C74(void *a1)
{
  return sub_1B66D0CA0(a1, **(void **)(v1 + 16), *(void *)(*(void *)(v1 + 16) + 8), *(unsigned __int8 *)(*(void *)(v1 + 16) + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1B6765C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF090, (uint64_t)&type metadata for FlockingSizeMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F9CFC, a3);
}

double sub_1B6765CDC()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCF098, (uint64_t)&type metadata for FlockingSizeMode);
}

void *sub_1B6765D0C(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6ADF0DC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B6765D74);
}

void sub_1B6765D74()
{
  if (!qword_1E9DCF0A0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF0A0);
    }
  }
}

uint64_t sub_1B6765DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F9E38, a3);
}

void *sub_1B6765E1C(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6ADF0DC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B6765E84);
}

void sub_1B6765E84()
{
  if (!qword_1E9DCF0A8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF0A8);
    }
  }
}

uint64_t sub_1B6765EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F9F74, a3);
}

void *sub_1B6765F2C(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6ADF0DC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B6765F94);
}

void sub_1B6765F94()
{
  if (!qword_1E9DCF0B0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF0B0);
    }
  }
}

uint64_t sub_1B6765FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FA0B0, a3);
}

void *sub_1B676603C(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B674304C, (uint64_t)sub_1B6ADF0DC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B67660A4);
}

void sub_1B67660A4()
{
  if (!qword_1E9DCF0B8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF0B8);
    }
  }
}

uint64_t sub_1B676610C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleFlockingSpeedControl, (uint64_t)&off_1F0F98F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676614C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6766724);
}

uint64_t sub_1B676617C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleFlockingSpeedControl, (uint64_t)&off_1F0F98F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B67661BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67665DC);
}

uint64_t sub_1B67661EC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 24);
  return result;
}

uint64_t sub_1B67661F8(uint64_t *a1)
{
  return sub_1B66A6C50(*a1);
}

uint64_t sub_1B6766220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleFlockingSpeedControl, (uint64_t)&off_1F0F98F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6766260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67664C8);
}

uint64_t sub_1B6766290@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFlockingSpeedControl, (uint64_t)&off_1F0F98F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DECB0, a2);
}

uint64_t sub_1B67662D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67663B8);
}

uint64_t sub_1B6766300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEFE8, (uint64_t)&type metadata for FlockingLocalAxis, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6704548, a3);
}

double sub_1B6766340()
{
  return sub_1B670DE30(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6766360(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    char v6 = *(unsigned char *)(a1 + 32);
  }
  else {
    char v6 = 6;
  }
  char v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v4 + 16))(v3, v5, &v8);
}

void *sub_1B67663B8(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE7D58, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6766420);
}

void sub_1B6766420()
{
  if (!qword_1E9DCF0C0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF0C0);
    }
  }
}

uint64_t sub_1B6766488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6704684, a3);
}

void *sub_1B67664C8(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE7D58, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6766530);
}

void sub_1B6766530()
{
  if (!qword_1E9DCF0C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF0C8);
    }
  }
}

uint64_t sub_1B6766598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67047C0, a3);
}

void *sub_1B67665DC(void *a1)
{
  return sub_1B6773E54(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE7D58, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B6766644);
}

void sub_1B6766644()
{
  if (!qword_1E9DCF0D0)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF0D0);
    }
  }
}

uint64_t sub_1B67666E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67048D8, a3);
}

void *sub_1B6766724(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE7D58, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B676678C);
}

void sub_1B676678C()
{
  if (!qword_1E9DCF0D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF0D8);
    }
  }
}

uint64_t sub_1B67667F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFluidSolver2DEmitter, (uint64_t)&off_1F0F99250, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6766834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6766BA4);
}

uint64_t sub_1B6766864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleFluidSolver2DEmitter, (uint64_t)&off_1F0F99250, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B67668A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6766A94);
}

uint64_t sub_1B67668D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleFluidSolver2DEmitter, (uint64_t)&off_1F0F99250, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6766914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6766984);
}

uint64_t sub_1B6766944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6704A14, a3);
}

void *sub_1B6766984(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B674304C, (uint64_t)sub_1B6AE7E54, (void (*)(unint64_t, uint64_t, double))sub_1B66C7DF8, (uint64_t (*)(void))sub_1B67669EC);
}

void sub_1B67669EC()
{
  if (!qword_1E9DCF0E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF0E0);
    }
  }
}

uint64_t sub_1B6766A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6704B50, a3);
}

void *sub_1B6766A94(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE7E54, (void (*)(unint64_t, uint64_t, double))sub_1B66C7DF8, (uint64_t (*)(void))sub_1B6766AFC);
}

void sub_1B6766AFC()
{
  if (!qword_1E9DCF0E8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF0E8);
    }
  }
}

uint64_t sub_1B6766B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6704C8C, a3);
}

void *sub_1B6766BA4(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE7E54, (void (*)(unint64_t, uint64_t, double))sub_1B66C7DF8, (uint64_t (*)(void))sub_1B6766C0C);
}

void sub_1B6766C0C()
{
  if (!qword_1E9DCF0F0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF0F0);
    }
  }
}

uint64_t sub_1B6766C74@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFluidSolver2DSolver, (uint64_t)&off_1F0F97D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6766CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6767874);
}

uint64_t sub_1B6766CE4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 10);
  return result;
}

uint64_t sub_1B6766CF0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t result = sub_1B6B37000(*a1);
  *(unsigned char *)(a2 + 10) = result;
  return result;
}

uint64_t sub_1B6766D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleFluidSolver2DSolver, (uint64_t)&off_1F0F97D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6766D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6767778);
}

uint64_t sub_1B6766D8C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFluidSolver2DSolver, (uint64_t)&off_1F0F97D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DEBA4, a2);
}

uint64_t sub_1B6766DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676767C);
}

uint64_t sub_1B6766DFC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 11);
  return result;
}

uint64_t sub_1B6766E08(uint64_t *a1)
{
  return sub_1B66A8AFC(*a1);
}

uint64_t sub_1B6766E30@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleFluidSolver2DSolver, (uint64_t)&off_1F0F97D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DEA98, a2);
}

uint64_t sub_1B6766E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676754C);
}

uint64_t sub_1B6766EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleFluidSolver2DSolver, (uint64_t)&off_1F0F97D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6766EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676741C);
}

uint64_t sub_1B6766F10@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ParticleFluidSolver2DSolver, (uint64_t)&off_1F0F97D50, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B6766F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67672E0);
}

uint64_t sub_1B6766F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for ParticleFluidSolver2DSolver, (uint64_t)&off_1F0F97D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DE920, a2);
}

uint64_t sub_1B6766FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67671BC);
}

void sub_1B6766FF8()
{
  if (!qword_1E9DCF108)
  {
    sub_1B62CB19C(255, &qword_1E9DCF110, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB718]);
    unint64_t Set = type metadata accessor for EntityGetSet();
    if (!v1) {
      atomic_store(Set, (unint64_t *)&qword_1E9DCF108);
    }
  }
}

uint64_t sub_1B6767074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67670B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703260, a3);
}

void sub_1B67670B8()
{
  if (!qword_1E9DCF118)
  {
    sub_1B62CB19C(255, &qword_1E9DCF110, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for EntityValueAccessors();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF118);
    }
  }
}

double sub_1B6767134()
{
  return sub_1B670DBB8(v0[2], v0[3], v0[4]);
}

void sub_1B6767140()
{
  if (!qword_1E9DCF120)
  {
    sub_1B62CB19C(255, &qword_1E9DCF110, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF120);
    }
  }
}

void *sub_1B67671BC(void *a1)
{
  return sub_1B675833C(a1, (uint64_t)sub_1B674B8B0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7D50, (uint64_t (*)(void))sub_1B6767210);
}

void sub_1B6767210()
{
  if (!qword_1E9DCF128)
  {
    sub_1B62CB19C(255, &qword_1E9DCF110, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF128);
    }
  }
}

uint64_t sub_1B676729C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703378, a3);
}

void *sub_1B67672E0(void *a1)
{
  return sub_1B676FD28(a1, (uint64_t)sub_1B6744260, (void (*)(unint64_t, uint64_t, double))sub_1B66C7D50, (uint64_t (*)(void))sub_1B676733C);
}

void sub_1B676733C()
{
  if (!qword_1E9DCF130)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF130);
    }
  }
}

uint64_t sub_1B67673DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703490, a3);
}

void *sub_1B676741C(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7D50, (uint64_t (*)(void))sub_1B6767470);
}

void sub_1B6767470()
{
  if (!qword_1E9DCF138)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF138);
    }
  }
}

uint64_t sub_1B67674D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF140, (uint64_t)&type metadata for FluidSolver2DSolverBorderType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67035CC, a3);
}

double sub_1B6767518()
{
  return sub_1B670D93C(v0[2], v0[3], v0[4], &qword_1E9DCF148, (uint64_t)&type metadata for FluidSolver2DSolverBorderType);
}

void *sub_1B676754C(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7D50, (uint64_t (*)(void))sub_1B67675A0);
}

void sub_1B67675A0()
{
  if (!qword_1E9DCF150)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF150);
    }
  }
}

uint64_t sub_1B6767608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF158, (uint64_t)&type metadata for FluidSolver2DSolverSetupType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703708, a3);
}

double sub_1B6767648()
{
  return sub_1B670DC40(v0[2], v0[3], v0[4], &qword_1E9DCF160, (uint64_t)&type metadata for FluidSolver2DSolverSetupType);
}

void *sub_1B676767C(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7D50, (uint64_t (*)(void))sub_1B67676D0);
}

void sub_1B67676D0()
{
  if (!qword_1E9DCF168)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF168);
    }
  }
}

uint64_t sub_1B6767738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703844, a3);
}

void *sub_1B6767778(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B67432AC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7D50, (uint64_t (*)(void))sub_1B67677CC);
}

void sub_1B67677CC()
{
  if (!qword_1E9DCF170)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF170);
    }
  }
}

uint64_t sub_1B6767834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6703980, a3);
}

void *sub_1B6767874(void *a1)
{
  return sub_1B676FBF0(a1, (uint64_t)sub_1B6743428, (void (*)(unint64_t, uint64_t, double))sub_1B66C7D50, (uint64_t (*)(void))sub_1B67678C8);
}

void sub_1B67678C8()
{
  if (!qword_1E9DCF178)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF178);
    }
  }
}

uint64_t sub_1B6767930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleDrag, (uint64_t)&off_1F0F5ABB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6767970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6767B60);
}

uint64_t sub_1B67679A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleDrag, (uint64_t)&off_1F0F5ABB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B67679E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6767A50);
}

uint64_t sub_1B6767A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E2A84, a3);
}

void *sub_1B6767A50(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6ADFB8C, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B6767AB8);
}

void sub_1B6767AB8()
{
  if (!qword_1E9DCF180)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF180);
    }
  }
}

uint64_t sub_1B6767B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E2BC0, a3);
}

void *sub_1B6767B60(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADFB8C, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B6767BC8);
}

void sub_1B6767BC8()
{
  if (!qword_1E9DCF188)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF188);
    }
  }
}

uint64_t sub_1B6767C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleCopyData, (uint64_t)&off_1F0F6D1D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B6767C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67682F0);
}

uint64_t sub_1B6767CA0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleCopyData, (uint64_t)&off_1F0F6D1D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DBC6C, a2);
}

uint64_t sub_1B6767CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67681E0);
}

uint64_t sub_1B6767D10@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleCopyData, (uint64_t)&off_1F0F6D1D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DBB60, a2);
}

uint64_t sub_1B6767D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6768048);
}

uint64_t sub_1B6767D80@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711DEC(a1, v2, (uint64_t)&type metadata for ParticleCopyData, (uint64_t)&off_1F0F6D1D0, a2);
}

uint64_t sub_1B6767DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711E70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6767EA0);
}

uint64_t sub_1B6767DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6742DBC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E835C, a3);
}

double sub_1B6767E20()
{
  return sub_1B670D4B0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6767E40(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    char v7 = *(unsigned char *)(a1 + 40);
  }
  else
  {
    char v7 = 0;
  }
  uint64_t v9 = v6;
  char v10 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v4 + 16))(v3, v5, &v9);
}

void *sub_1B6767EA0(void *a1)
{
  return sub_1B6767F08(a1, (uint64_t)sub_1B6742EE0, (uint64_t)sub_1B6AE18E8, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B6767F4C);
}

void *sub_1B6767F08(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66CF990(a1, **(void **)(v5 + 16), *(unsigned char *)(*(void *)(v5 + 16) + 8), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B6767F4C()
{
  if (!qword_1E9DCF1A0)
  {
    sub_1B62CB19C(255, &qword_1EB9803E0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF1A0);
    }
  }
}

uint64_t sub_1B6767FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF1A8, (uint64_t)&type metadata for TargetDataKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E8474, a3);
}

double sub_1B6768018()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCF1B0, (uint64_t)&type metadata for TargetDataKind);
}

void *sub_1B6768048(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE18E8, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B67680B0);
}

void sub_1B67680B0()
{
  if (!qword_1E9DCF1B8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF1B8);
    }
  }
}

uint64_t sub_1B6768118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF1C0, (uint64_t)&type metadata for SourceDataKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E85B0, a3);
}

double sub_1B6768158()
{
  return sub_1B670DC40(v0[2], v0[3], v0[4], &qword_1E9DCF1C8, (uint64_t)&type metadata for SourceDataKind);
}

uint64_t sub_1B6768188(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    char v6 = *(unsigned char *)(a1 + 32);
  }
  else {
    char v6 = 8;
  }
  char v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v4 + 16))(v3, v5, &v8);
}

void *sub_1B67681E0(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE18E8, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B6768248);
}

void sub_1B6768248()
{
  if (!qword_1E9DCF1D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF1D0);
    }
  }
}

uint64_t sub_1B67682B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E86EC, a3);
}

void *sub_1B67682F0(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE18E8, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B6768358);
}

void sub_1B6768358()
{
  if (!qword_1E9DCF1D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF1D8);
    }
  }
}

uint64_t sub_1B67683C0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 36);
  return result;
}

uint64_t sub_1B67683CC(uint64_t *a1)
{
  return sub_1B66A9CAC(*a1);
}

uint64_t sub_1B67683F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleNoise, (uint64_t)&off_1F0F60FA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6768434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6768AD4);
}

uint64_t sub_1B6768464@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleNoise, (uint64_t)&off_1F0F60FA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DADD0, a2);
}

uint64_t sub_1B67684A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67689C4);
}

uint64_t sub_1B67684D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleNoise, (uint64_t)&off_1F0F60FA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6768514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6768884);
}

uint64_t sub_1B6768544@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleNoise, (uint64_t)&off_1F0F60FA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6768584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6768774);
}

uint64_t sub_1B67685B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleNoise, (uint64_t)&off_1F0F60FA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B67685F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6768664);
}

uint64_t sub_1B6768624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E4410, a3);
}

void *sub_1B6768664(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE0440, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B67686CC);
}

void sub_1B67686CC()
{
  if (!qword_1E9DCF1E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF1E0);
    }
  }
}

uint64_t sub_1B6768734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E454C, a3);
}

void *sub_1B6768774(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE0440, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B67687DC);
}

void sub_1B67687DC()
{
  if (!qword_1E9DCF1E8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF1E8);
    }
  }
}

uint64_t sub_1B6768844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E4688, a3);
}

void *sub_1B6768884(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE0440, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B67688EC);
}

void sub_1B67688EC()
{
  if (!qword_1E9DCF1F0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF1F0);
    }
  }
}

uint64_t sub_1B6768954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEA30, (uint64_t)&type metadata for NoiseKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E47C4, a3);
}

double sub_1B6768994()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCEA38, (uint64_t)&type metadata for NoiseKind);
}

void *sub_1B67689C4(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE0440, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B6768A2C);
}

void sub_1B6768A2C()
{
  if (!qword_1E9DCF1F8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF1F8);
    }
  }
}

uint64_t sub_1B6768A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E4900, a3);
}

void *sub_1B6768AD4(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE0440, (void (*)(unint64_t, uint64_t, double))sub_1B66C8180, (uint64_t (*)(void))sub_1B6768B3C);
}

void sub_1B6768B3C()
{
  if (!qword_1E9DCF200)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF200);
    }
  }
}

uint64_t sub_1B6768BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ProjectorParameters, (uint64_t)&off_1F0F7EC70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD68C, a2);
}

uint64_t sub_1B6768BE4(uint64_t result)
{
  return sub_1B67112F4(result);
}

uint64_t sub_1B6768BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ProjectorParameters, (uint64_t)&off_1F0F7EC70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6768C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6768F9C);
}

uint64_t sub_1B6768C5C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ProjectorParameters, (uint64_t)&off_1F0F7EC70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6768C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6768E8C);
}

uint64_t sub_1B6768CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ProjectorParameters, (uint64_t)&off_1F0F7EC70, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B6768D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6768D7C);
}

uint64_t sub_1B6768D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F2064, a3);
}

void *sub_1B6768D7C(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE4210, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6768DE4);
}

void sub_1B6768DE4()
{
  if (!qword_1E9DCF210)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF210);
    }
  }
}

uint64_t sub_1B6768E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F21A0, a3);
}

void *sub_1B6768E8C(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE4210, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6768EF4);
}

void sub_1B6768EF4()
{
  if (!qword_1E9DCF218)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF218);
    }
  }
}

uint64_t sub_1B6768F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F22DC, a3);
}

void *sub_1B6768F9C(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE4210, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6769004);
}

void sub_1B6769004()
{
  if (!qword_1E9DCF220)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF220);
    }
  }
}

uint64_t sub_1B676906C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF228, (uint64_t)&type metadata for AngleF, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F2418, a3);
}

uint64_t sub_1B67690AC()
{
  return sub_1B670C528(v0[2], v0[3], v0[4], &qword_1E9DCF230, (uint64_t)&type metadata for AngleF);
}

uint64_t sub_1B67690DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    int v6 = *(_DWORD *)(a1 + 32);
  }
  else {
    int v6 = 0;
  }
  int v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(v4 + 16))(v3, v5, &v8);
}

void *sub_1B6769134(void *a1)
{
  return sub_1B66CF604(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), **(float **)(v1 + 16));
}

void sub_1B6769158()
{
  if (!qword_1E9DCF238)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF238);
    }
  }
}

uint64_t sub_1B67691C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for DistanceConstraint, (uint64_t)&off_1F0F76030, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6769200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6769270);
}

uint64_t sub_1B6769230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EC5CC, a3);
}

void *sub_1B6769270(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE2D34, (void (*)(unint64_t, uint64_t, double))sub_1B66C7A78, (uint64_t (*)(void))sub_1B67692D8);
}

void sub_1B67692D8()
{
  if (!qword_1E9DCF240)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF240);
    }
  }
}

uint64_t sub_1B6769340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for Attach, (uint64_t)&off_1F0F9F970, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6769380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6769570);
}

uint64_t sub_1B67693B0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for Attach, (uint64_t)&off_1F0F9F970, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B67693F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6769460);
}

uint64_t sub_1B6769420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670851C, a3);
}

void *sub_1B6769460(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE8C90, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B67694C8);
}

void sub_1B67694C8()
{
  if (!qword_1E9DCF248)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF248);
    }
  }
}

uint64_t sub_1B6769530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6708658, a3);
}

void *sub_1B6769570(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE8C90, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B67695D8);
}

void sub_1B67695D8()
{
  if (!qword_1E9DCF250)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF250);
    }
  }
}

uint64_t sub_1B6769640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for DirectionalLight, (uint64_t)&off_1F0F6BBC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6769680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67696F0);
}

uint64_t sub_1B67696B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E8220, a3);
}

void *sub_1B67696F0(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADD830, (void (*)(unint64_t, uint64_t, double))sub_1B66C87F0, (uint64_t (*)(void))sub_1B6769758);
}

void sub_1B6769758()
{
  if (!qword_1E9DCF258)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF258);
    }
  }
}

uint64_t sub_1B67697C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for PointLight, (uint64_t)&off_1F0F53678, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6769800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6769870);
}

uint64_t sub_1B6769830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E06B4, a3);
}

void *sub_1B6769870(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADD8A8, (void (*)(unint64_t, uint64_t, double))sub_1B66C87F0, (uint64_t (*)(void))sub_1B67698D8);
}

void sub_1B67698D8()
{
  if (!qword_1E9DCF260)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF260);
    }
  }
}

uint64_t sub_1B6769940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for AmbientLight, (uint64_t)&off_1F0F58EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6769980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67699F0);
}

uint64_t sub_1B67699B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E12AC, a3);
}

void *sub_1B67699F0(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADD920, (void (*)(unint64_t, uint64_t, double))sub_1B66C83A0, (uint64_t (*)(void))sub_1B6769A58);
}

void sub_1B6769A58()
{
  if (!qword_1E9DCF268)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF268);
    }
  }
}

uint64_t sub_1B6769AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for SpotLight, (uint64_t)&off_1F0FA9CE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6769B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6769B70);
}

uint64_t sub_1B6769B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670B8D4, a3);
}

void *sub_1B6769B70(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADD998, (void (*)(unint64_t, uint64_t, double))sub_1B66C9098, (uint64_t (*)(void))sub_1B6769BD8);
}

void sub_1B6769BD8()
{
  if (!qword_1E9DCF270)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF270);
    }
  }
}

uint64_t sub_1B6769C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for Shadow, (uint64_t)&off_1F0FA18B0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6769C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6769CF0);
}

uint64_t sub_1B6769CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6709338, a3);
}

void *sub_1B6769CF0(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6ADDA88, (void (*)(unint64_t, uint64_t, double))sub_1B66C87F0, (uint64_t (*)(void))sub_1B6769D58);
}

void sub_1B6769D58()
{
  if (!qword_1E9DCF278)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF278);
    }
  }
}

uint64_t sub_1B6769DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleCollide, (uint64_t)&off_1F0F69500, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6769E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676A004);
}

uint64_t sub_1B6769E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleCollide, (uint64_t)&off_1F0F69500, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D90C4, a2);
}

uint64_t sub_1B6769E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6769EE0);
}

uint64_t sub_1B6769EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEEE8, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E7244, a3);
}

void *sub_1B6769EE0(void *a1)
{
  return sub_1B66CD024(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67457EC, (uint64_t)sub_1B6AE1230, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B6769F5C);
}

void sub_1B6769F5C()
{
  if (!qword_1E9DCF280)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF280);
    }
  }
}

uint64_t sub_1B6769FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E7380, a3);
}

void *sub_1B676A004(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE1230, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B676A06C);
}

void sub_1B676A06C()
{
  if (!qword_1E9DCF288)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF288);
    }
  }
}

uint64_t sub_1B676A0D4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticlePlaneCollider, (uint64_t)&off_1F0F895A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B676A114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676A82C);
}

void sub_1B676A144(uint64_t a1@<X1>, uint64_t a2@<X2>, float *a3@<X8>)
{
  *a3 = (*(float (**)(void))(*(void *)(a2 + a1 - 8) + 8))(*(void *)(a2 + a1 - 24));
}

uint64_t sub_1B676A190(float *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void, float))(*(void *)(a4 + a3 - 8) + 16))(*(void *)(a4 + a3 - 24), *(void *)(a4 + a3 - 8), *a1);
}

uint64_t sub_1B676A1DC()
{
  return 24;
}

__n128 sub_1B676A1E8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1B676A1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticlePlaneCollider, (uint64_t)&off_1F0F895A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676A23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676A71C);
}

void sub_1B676A26C(uint64_t a1@<X1>, uint64_t a2@<X2>, float *a3@<X8>)
{
  *a3 = (*(float (**)(void))(*(void *)(a2 + a1 - 8) + 32))(*(void *)(a2 + a1 - 24));
}

uint64_t sub_1B676A2B8(float *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void, float))(*(void *)(a4 + a3 - 8) + 40))(*(void *)(a4 + a3 - 24), *(void *)(a4 + a3 - 8), *a1);
}

uint64_t sub_1B676A304()
{
  return 24;
}

__n128 sub_1B676A310(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void sub_1B676A324(uint64_t a1@<X1>, uint64_t a2@<X2>, float *a3@<X8>)
{
  *a3 = (*(float (**)(void))(*(void *)(a2 + a1 - 8) + 56))(*(void *)(a2 + a1 - 24));
}

uint64_t sub_1B676A370(float *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void, float))(*(void *)(a4 + a3 - 8) + 64))(*(void *)(a4 + a3 - 24), *(void *)(a4 + a3 - 8), *a1);
}

uint64_t sub_1B676A3BC()
{
  return 24;
}

__n128 sub_1B676A3C8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void sub_1B676A3DC(uint64_t a1@<X1>, uint64_t a2@<X2>, float *a3@<X8>)
{
  *a3 = (*(float (**)(void))(*(void *)(a2 + a1 - 8) + 80))(*(void *)(a2 + a1 - 24));
}

uint64_t sub_1B676A428(float *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void, float))(*(void *)(a4 + a3 - 8) + 88))(*(void *)(a4 + a3 - 24), *(void *)(a4 + a3 - 8), *a1);
}

uint64_t sub_1B676A474()
{
  return 24;
}

__n128 sub_1B676A480(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1B676A494@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _DWORD *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 128))(*(void *)(a2 + a1 - 24));
  *a3 = result;
  return result;
}

uint64_t sub_1B676A4E0(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 136))(*a1, *(void *)(a4 + a3 - 24));
}

uint64_t sub_1B676A528()
{
  return 24;
}

__n128 sub_1B676A534(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1B676A548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticlePlaneCollider, (uint64_t)&off_1F0F895A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D90C4, a2);
}

uint64_t sub_1B676A588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676A5F8);
}

uint64_t sub_1B676A5B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEEE8, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F7AFC, a3);
}

void *sub_1B676A5F8(void *a1)
{
  return sub_1B66CD024(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67429E4, (uint64_t)sub_1B6AE531C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7DF8, (uint64_t (*)(void))sub_1B676A674);
}

void sub_1B676A674()
{
  if (!qword_1E9DCF290)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF290);
    }
  }
}

uint64_t sub_1B676A6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F7C38, a3);
}

void *sub_1B676A71C(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B674304C, (uint64_t)sub_1B6AE531C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7DF8, (uint64_t (*)(void))sub_1B676A784);
}

void sub_1B676A784()
{
  if (!qword_1E9DCF298)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF298);
    }
  }
}

uint64_t sub_1B676A7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F7D74, a3);
}

void *sub_1B676A82C(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE531C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7DF8, (uint64_t (*)(void))sub_1B676A894);
}

void sub_1B676A894()
{
  if (!qword_1E9DCF2A0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2A0);
    }
  }
}

uint64_t sub_1B676A8FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSphereCollider, (uint64_t)&off_1F0F8D908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B676A93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676ACC0);
}

uint64_t sub_1B676A96C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSphereCollider, (uint64_t)&off_1F0F8D908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676A9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676ABB0);
}

uint64_t sub_1B676A9DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSphereCollider, (uint64_t)&off_1F0F8D908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D90C4, a2);
}

uint64_t sub_1B676AA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676AA8C);
}

uint64_t sub_1B676AA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEEE8, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FB1D4, a3);
}

void *sub_1B676AA8C(void *a1)
{
  return sub_1B66CD024(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67429E4, (uint64_t)sub_1B6AE5C40, (void (*)(unint64_t, uint64_t, double))sub_1B66C7DF8, (uint64_t (*)(void))sub_1B676AB08);
}

void sub_1B676AB08()
{
  if (!qword_1E9DCF2A8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2A8);
    }
  }
}

uint64_t sub_1B676AB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FB310, a3);
}

void *sub_1B676ABB0(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE5C40, (void (*)(unint64_t, uint64_t, double))sub_1B66C7DF8, (uint64_t (*)(void))sub_1B676AC18);
}

void sub_1B676AC18()
{
  if (!qword_1E9DCF2B0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2B0);
    }
  }
}

uint64_t sub_1B676AC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FB44C, a3);
}

void *sub_1B676ACC0(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5C40, (void (*)(unint64_t, uint64_t, double))sub_1B66C7DF8, (uint64_t (*)(void))sub_1B676AD28);
}

void sub_1B676AD28()
{
  if (!qword_1E9DCF2B8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2B8);
    }
  }
}

uint64_t sub_1B676AD90@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleBoxCollider, (uint64_t)&off_1F0F7D338, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B676ADD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676B154);
}

uint64_t sub_1B676AE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleBoxCollider, (uint64_t)&off_1F0F7D338, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676AE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676B044);
}

uint64_t sub_1B676AE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleBoxCollider, (uint64_t)&off_1F0F7D338, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D90C4, a2);
}

uint64_t sub_1B676AEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676AF20);
}

uint64_t sub_1B676AEE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEEE8, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EFF28, a3);
}

void *sub_1B676AF20(void *a1)
{
  return sub_1B66CD024(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67457EC, (uint64_t)sub_1B6AE3B28, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B676AF9C);
}

void sub_1B676AF9C()
{
  if (!qword_1E9DCF2C0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2C0);
    }
  }
}

uint64_t sub_1B676B004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F0064, a3);
}

void *sub_1B676B044(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE3B28, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B676B0AC);
}

void sub_1B676B0AC()
{
  if (!qword_1E9DCF2C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2C8);
    }
  }
}

uint64_t sub_1B676B114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F01A0, a3);
}

void *sub_1B676B154(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE3B28, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B676B1BC);
}

void sub_1B676B1BC()
{
  if (!qword_1E9DCF2D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2D0);
    }
  }
}

uint64_t sub_1B676B224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleCylinderCollider, (uint64_t)&off_1F0F92BD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676B264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676B468);
}

uint64_t sub_1B676B294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleCylinderCollider, (uint64_t)&off_1F0F92BD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D90C4, a2);
}

uint64_t sub_1B676B2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676B344);
}

uint64_t sub_1B676B304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEEE8, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FE9A0, a3);
}

void *sub_1B676B344(void *a1)
{
  return sub_1B66CD024(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67457EC, (uint64_t)sub_1B6AE6850, (void (*)(unint64_t, uint64_t, double))sub_1B66C9098, (uint64_t (*)(void))sub_1B676B3C0);
}

void sub_1B676B3C0()
{
  if (!qword_1E9DCF2D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2D8);
    }
  }
}

uint64_t sub_1B676B428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FEADC, a3);
}

void *sub_1B676B468(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE6850, (void (*)(unint64_t, uint64_t, double))sub_1B66C9098, (uint64_t (*)(void))sub_1B676B4D0);
}

void sub_1B676B4D0()
{
  if (!qword_1E9DCF2E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2E0);
    }
  }
}

uint64_t sub_1B676B538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleSDFCollider, (uint64_t)&off_1F0F7DEA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B676B578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676B8FC);
}

uint64_t sub_1B676B5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSDFCollider, (uint64_t)&off_1F0F7DEA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676B5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676B7EC);
}

uint64_t sub_1B676B618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSDFCollider, (uint64_t)&off_1F0F7DEA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D90C4, a2);
}

uint64_t sub_1B676B658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676B6C8);
}

uint64_t sub_1B676B688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEEE8, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F12C4, a3);
}

void *sub_1B676B6C8(void *a1)
{
  return sub_1B66CD024(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67457EC, (uint64_t)sub_1B6AE3E28, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B676B744);
}

void sub_1B676B744()
{
  if (!qword_1E9DCF2E8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2E8);
    }
  }
}

uint64_t sub_1B676B7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F1400, a3);
}

void *sub_1B676B7EC(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE3E28, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B676B854);
}

void sub_1B676B854()
{
  if (!qword_1E9DCF2F0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2F0);
    }
  }
}

uint64_t sub_1B676B8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F153C, a3);
}

void *sub_1B676B8FC(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE3E28, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B676B964);
}

void sub_1B676B964()
{
  if (!qword_1E9DCF2F8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF2F8);
    }
  }
}

uint64_t sub_1B676B9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleMeshCollider, (uint64_t)&off_1F0F81550, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B676BA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676BDE8);
}

uint64_t sub_1B676BA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleMeshCollider, (uint64_t)&off_1F0F81550, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676BA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676BCD8);
}

uint64_t sub_1B676BAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleMeshCollider, (uint64_t)&off_1F0F81550, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D90C4, a2);
}

uint64_t sub_1B676BAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676BBB4);
}

uint64_t sub_1B676BB1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCEEE8, (uint64_t)&type metadata for CollisionLayerSet, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F3424, a3);
}

uint64_t sub_1B676BB5C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    int v6 = *(_DWORD *)(a1 + 32);
  }
  else {
    int v6 = 0;
  }
  int v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(v4 + 16))(v3, v5, &v8);
}

void *sub_1B676BBB4(void *a1)
{
  return sub_1B66CD024(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67457EC, (uint64_t)sub_1B6AE45D0, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B676BC30);
}

void sub_1B676BC30()
{
  if (!qword_1E9DCF300)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF300);
    }
  }
}

uint64_t sub_1B676BC98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F3560, a3);
}

void *sub_1B676BCD8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE45D0, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B676BD40);
}

void sub_1B676BD40()
{
  if (!qword_1E9DCF308)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF308);
    }
  }
}

uint64_t sub_1B676BDA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F369C, a3);
}

void *sub_1B676BDE8(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE45D0, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B676BE50);
}

void sub_1B676BE50()
{
  if (!qword_1E9DCF310)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF310);
    }
  }
}

uint64_t sub_1B676BEB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67126DC(a1, v2, (uint64_t)&type metadata for ParticleLocalBoxCollider, a2);
}

uint64_t sub_1B676BEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6712770(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676C254);
}

uint64_t sub_1B676BF14@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleLocalBoxCollider, (uint64_t)&off_1F0F93220, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B676BF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676C144);
}

uint64_t sub_1B676BF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleLocalBoxCollider, (uint64_t)&off_1F0F93220, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676BFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676C034);
}

uint64_t sub_1B676BFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FF108, a3);
}

void *sub_1B676C034(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE6A00, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676C09C);
}

void sub_1B676C09C()
{
  if (!qword_1E9DCF318)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF318);
    }
  }
}

uint64_t sub_1B676C104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FF244, a3);
}

void *sub_1B676C144(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE6A00, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676C1AC);
}

void sub_1B676C1AC()
{
  if (!qword_1E9DCF320)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF320);
    }
  }
}

uint64_t sub_1B676C214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE150, (uint64_t)&type metadata for AABB, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FF380, a3);
}

void *sub_1B676C254(void *a1)
{
  return sub_1B66D1AB4(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(__n128 *)*(void *)(v1 + 16), *(__n128 *)(*(void *)(v1 + 16) + 16));
}

void sub_1B676C278()
{
  if (!qword_1E9DCF328)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF328);
    }
  }
}

char *sub_1B676C2E0@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B676C2EC(uint64_t *a1)
{
  return sub_1B6671028(*a1);
}

uint64_t sub_1B676C314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for KillShape, (uint64_t)&off_1F0FA8978, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B676C354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676C6CC);
}

uint64_t sub_1B676C384@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for KillShape, (uint64_t)&off_1F0FA8978, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DF344, a2);
}

uint64_t sub_1B676C3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676C5D0);
}

uint64_t sub_1B676C3F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for KillShape, (uint64_t)&off_1F0FA8978, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B676C434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676C4A4);
}

uint64_t sub_1B676C464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670AF30, a3);
}

void *sub_1B676C4A4(void *a1)
{
  return sub_1B676FBF0(a1, (uint64_t)sub_1B6743428, (void (*)(unint64_t, uint64_t, double))sub_1B66C8698, (uint64_t (*)(void))sub_1B676C4F8);
}

void sub_1B676C4F8()
{
  if (!qword_1E9DCF338)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF338);
    }
  }
}

uint64_t sub_1B676C560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF340, (uint64_t)&type metadata for KillShape.Shape, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670B06C, a3);
}

double sub_1B676C5A0()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCF348, (uint64_t)&type metadata for KillShape.Shape);
}

void *sub_1B676C5D0(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B6743428, (void (*)(unint64_t, uint64_t, double))sub_1B66C8698, (uint64_t (*)(void))sub_1B676C624);
}

void sub_1B676C624()
{
  if (!qword_1E9DCF350)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF350);
    }
  }
}

uint64_t sub_1B676C68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670B1A8, a3);
}

void *sub_1B676C6CC(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B67432AC, (void (*)(unint64_t, uint64_t, double))sub_1B66C8698, (uint64_t (*)(void))sub_1B676C720);
}

void sub_1B676C720()
{
  if (!qword_1E9DCF358)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF358);
    }
  }
}

unsigned char *sub_1B676C788@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B676C794(unsigned __int8 *a1, char *a2)
{
  int v2 = *a1;
  char v3 = *a2;
  if (v2 == 1) {
    LOBYTE(v2) = *a2;
  }
  *a2 = v2;
  return sub_1B670FD78(v3);
}

uint64_t sub_1B676C7CC@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B67114B0(a1, v2, type metadata accessor for EmitterScript, (uint64_t)&off_1F0F5EBD0, a2);
}

uint64_t sub_1B676C804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676C980);
}

uint64_t sub_1B676C83C@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B671142C(a1, v2, type metadata accessor for EmitterScript, (uint64_t)&off_1F0F5EBD0, a2);
}

uint64_t sub_1B676C874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676C8E4);
}

uint64_t sub_1B676C8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E37D0, a3);
}

uint64_t sub_1B676C8E4(uint64_t a1)
{
  return sub_1B67782AC(a1, sub_1B66D591C);
}

uint64_t sub_1B676C910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF370, (uint64_t)&type metadata for Language, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E390C, a3);
}

double sub_1B676C950()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCF378, (uint64_t)&type metadata for Language);
}

uint64_t sub_1B676C980(uint64_t a1)
{
  return sub_1B676CDC8(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CB3C4);
}

uint64_t sub_1B676C9AC(char *a1, char *a2)
{
  char v2 = *a1;
  char v3 = *a2;
  *a2 = v2;
  return sub_1B67100DC(v3);
}

uint64_t sub_1B676C9DC@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B67114B0(a1, v2, type metadata accessor for ParticleInitScript, (uint64_t)&off_1F0F796D0, a2);
}

uint64_t sub_1B676CA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676CBB0);
}

uint64_t sub_1B676CA48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B676CA58(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1B676CA9C@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B671142C(a1, v2, type metadata accessor for ParticleInitScript, (uint64_t)&off_1F0F796D0, a2);
}

uint64_t sub_1B676CAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676CB44);
}

uint64_t sub_1B676CB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ED8FC, a3);
}

uint64_t sub_1B676CB44(uint64_t a1)
{
  return sub_1B67782AC(a1, sub_1B66D69BC);
}

uint64_t sub_1B676CB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF370, (uint64_t)&type metadata for Language, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EDA38, a3);
}

uint64_t sub_1B676CBB0(uint64_t a1)
{
  return sub_1B676CDC8(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CE480);
}

uint64_t sub_1B676CBDC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 24);
  return result;
}

uint64_t sub_1B676CBE8(char *a1, uint64_t a2)
{
  char v2 = *a1;
  char v3 = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a2 + 24) = v2;
  return sub_1B67103F4(v3);
}

uint64_t sub_1B676CC18@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B67114B0(a1, v2, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1F0F82FB8, a2);
}

uint64_t sub_1B676CC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676CD9C);
}

uint64_t sub_1B676CC88@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B671142C(a1, v2, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1F0F82FB8, a2);
}

uint64_t sub_1B676CCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676CD30);
}

uint64_t sub_1B676CCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F59E4, a3);
}

uint64_t sub_1B676CD30(uint64_t a1)
{
  return sub_1B67782AC(a1, sub_1B66D7B98);
}

uint64_t sub_1B676CD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF370, (uint64_t)&type metadata for Language, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F5B20, a3);
}

uint64_t sub_1B676CD9C(uint64_t a1)
{
  return sub_1B676CDC8(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CFB38);
}

uint64_t sub_1B676CDC8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void))
{
  return a2(a1, **(unsigned __int8 **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1B676CDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticlePointRenderer, (uint64_t)&off_1F0F89908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676CE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676D054);
}

uint64_t sub_1B676CE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticlePointRenderer, (uint64_t)&off_1F0F89908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B676CEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676CF18);
}

uint64_t sub_1B676CED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F7EB0, a3);
}

void *sub_1B676CF18(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE5394, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676CF80);
}

void sub_1B676CF80()
{
  if (!qword_1E9DCF3A8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF3A8);
    }
  }
}

uint64_t sub_1B676D014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F7FC8, a3);
}

void *sub_1B676D054(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE5394, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676D0BC);
}

void sub_1B676D0BC()
{
  if (!qword_1E9DCF3B0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF3B0);
    }
  }
}

uint64_t sub_1B676D124@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + a1 - 8) + 8) + 24))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_1B676D170(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 16))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_1B676D1B4()
{
  return 16;
}

__n128 sub_1B676D1C0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D1CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B676DDC0(a1, a2, (uint64_t (*)(void, void))sub_1B6968DEC, a3);
}

uint64_t sub_1B676D1E4()
{
  return 16;
}

__n128 sub_1B676D1F0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticlePointRenderer, (uint64_t)&off_1F0F89908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B676D23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676E4CC);
}

uint64_t sub_1B676D26C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 32))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_1B676D2B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 40))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_1B676D2F8()
{
  return 16;
}

__n128 sub_1B676D304(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D310@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B676DDC0(a1, a2, (uint64_t (*)(void, void))sub_1B6968DB8, a3);
}

uint64_t sub_1B676D328()
{
  return 16;
}

__n128 sub_1B676D334(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D340@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + a1 - 8) + 8) + 32))(*(void *)(a2 + a1 - 16));
  *(_DWORD *)a3 = result;
  *(unsigned char *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1B676D394(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(unint64_t, void))(*(void *)(a4 + a3 - 8) + 104))(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), *(void *)(a4 + a3 - 16));
}

uint64_t sub_1B676D3F0()
{
  return 16;
}

__n128 sub_1B676D3FC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D408@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1B66B73A4(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_1B676D43C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B66B73E0(*a1, *(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8));
}

uint64_t sub_1B676D46C()
{
  return 16;
}

__n128 sub_1B676D478(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticlePointRenderer, (uint64_t)&off_1F0F89908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B676D4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676E3BC);
}

uint64_t sub_1B676D4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for ParticlePointRenderer, (uint64_t)&off_1F0F89908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD434, a2);
}

uint64_t sub_1B676D534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676E2AC);
}

void sub_1B676D564(uint64_t a1@<X1>, uint64_t a2@<X2>, float *a3@<X8>)
{
  *a3 = (*(float (**)(void))(*(void *)(*(void *)(a2 + a1 - 8) + 8) + 40))(*(void *)(a2 + a1 - 16));
}

uint64_t sub_1B676D5B0(float *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void, float))(*(void *)(a4 + a3 - 8) + 120))(*(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8), *a1);
}

uint64_t sub_1B676D5F8()
{
  return 16;
}

__n128 sub_1B676D604(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D610@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 56))(*(void *)(a2 + a1 - 16));
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B676D65C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 64))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_1B676D6A0()
{
  return 16;
}

__n128 sub_1B676D6AC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D6B8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticlePointRenderer, (uint64_t)&off_1F0F89908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B676D6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676E19C);
}

uint64_t sub_1B676D728@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 80))(*(void *)(a2 + a1 - 16));
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B676D774(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 88))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_1B676D7B8()
{
  return 16;
}

__n128 sub_1B676D7C4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D7D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B66B0FD0(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B676D808()
{
  return 16;
}

__n128 sub_1B676D814(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D820@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + a1 - 8) + 8) + 64))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_1B676D86C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 136))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_1B676D8B0()
{
  return 16;
}

__n128 sub_1B676D8BC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D8C8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1B66B7490(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_1B676D8FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B66B74D8(*a1, *(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8));
}

uint64_t sub_1B676D92C()
{
  return 16;
}

__n128 sub_1B676D938(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676D944@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticlePointRenderer, (uint64_t)&off_1F0F89908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD328, a2);
}

uint64_t sub_1B676D984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676E08C);
}

uint64_t sub_1B676D9B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _DWORD *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 152))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_1B676D9FC(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 160))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_1B676DA40()
{
  return 16;
}

__n128 sub_1B676DA4C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676DA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticlePointRenderer, (uint64_t)&off_1F0F89908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9790, a2);
}

uint64_t sub_1B676DA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676DF68);
}

uint64_t sub_1B676DAC8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 176))(*(void *)(a2 + a1 - 16));
  *a3 = result;
  return result;
}

uint64_t sub_1B676DB10(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 184))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_1B676DB54()
{
  return 16;
}

__n128 sub_1B676DB60(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676DB6C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1B66B7550(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_1B676DBA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B66B757C(*a1, *(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8));
}

uint64_t sub_1B676DBD0()
{
  return 16;
}

__n128 sub_1B676DBDC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676DBE8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticlePointRenderer, (uint64_t)&off_1F0F89908, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD21C, a2);
}

uint64_t sub_1B676DC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676DE58);
}

uint64_t sub_1B676DC58@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 200))(*(void *)(a2 + a1 - 16));
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B676DCA4(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 208))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_1B676DCE8()
{
  return 16;
}

__n128 sub_1B676DCF4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_1B676DD00(uint64_t a1@<X1>, uint64_t a2@<X2>, float *a3@<X8>)
{
  *a3 = (*(float (**)(void))(*(void *)(a2 + a1 - 8) + 224))(*(void *)(a2 + a1 - 16));
}

uint64_t sub_1B676DD48(float *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void, float))(*(void *)(a4 + a3 - 8) + 232))(*(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8), *a1);
}

uint64_t sub_1B676DD90()
{
  return 16;
}

__n128 sub_1B676DD9C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676DDA8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  return sub_1B676DDC0(a1, a2, (uint64_t (*)(void, void))sub_1B6968EB8, a3);
}

uint64_t sub_1B676DDC0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (*a3)(void, void)@<X3>, unsigned char *a4@<X8>)
{
  uint64_t result = a3(*(void *)(a2 + a1 - 16), *(void *)(*(void *)(a2 + a1 - 8) + 8));
  *a4 = result & 1;
  return result;
}

uint64_t sub_1B676DE00()
{
  return 16;
}

__n128 sub_1B676DE0C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B676DE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3B8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F8104, a3);
}

void *sub_1B676DE58(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5394, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676DEC0);
}

void sub_1B676DEC0()
{
  if (!qword_1E9DCF3C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF3C8);
    }
  }
}

uint64_t sub_1B676DF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0C0, MEMORY[0x1E4FBC4C0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F8240, a3);
}

void *sub_1B676DF68(void *a1)
{
  return sub_1B66CC348(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67429E4, (uint64_t)sub_1B6AE5394, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676DFE4);
}

void sub_1B676DFE4()
{
  if (!qword_1E9DCF3D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF3D0);
    }
  }
}

uint64_t sub_1B676E04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3D8, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F837C, a3);
}

void *sub_1B676E08C(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5394, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676E0F4);
}

void sub_1B676E0F4()
{
  if (!qword_1E9DCF3E8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF3E8);
    }
  }
}

uint64_t sub_1B676E15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F84B8, a3);
}

void *sub_1B676E19C(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5394, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676E204);
}

void sub_1B676E204()
{
  if (!qword_1E9DCF3F0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF3F0);
    }
  }
}

uint64_t sub_1B676E26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4B8, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F85F4, a3);
}

void *sub_1B676E2AC(void *a1)
{
  return sub_1B677497C(a1, (uint64_t)sub_1B674B8B0, (uint64_t)sub_1B6AE5394, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676E314);
}

void sub_1B676E314()
{
  if (!qword_1E9DCF3F8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF3F8);
    }
  }
}

uint64_t sub_1B676E37C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F8730, a3);
}

void *sub_1B676E3BC(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE5394, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676E424);
}

void sub_1B676E424()
{
  if (!qword_1E9DCF400)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF400);
    }
  }
}

uint64_t sub_1B676E48C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F886C, a3);
}

void *sub_1B676E4CC(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE5394, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B676E534);
}

void sub_1B676E534()
{
  if (!qword_1E9DCF408)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF408);
    }
  }
}

uint64_t sub_1B676E59C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleLineRenderer, (uint64_t)&off_1F0F812C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676E5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676E64C);
}

uint64_t sub_1B676E60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F2A44, a3);
}

void *sub_1B676E64C(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE4464, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B676E6B4);
}

void sub_1B676E6B4()
{
  if (!qword_1E9DCF410)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF410);
    }
  }
}

uint64_t sub_1B676E71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleLineRenderer, (uint64_t)&off_1F0F812C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B676E75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676F0E0);
}

uint64_t sub_1B676E78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleLineRenderer, (uint64_t)&off_1F0F812C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B676E7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676EFD0);
}

uint64_t sub_1B676E7FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for ParticleLineRenderer, (uint64_t)&off_1F0F812C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD434, a2);
}

uint64_t sub_1B676E83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676EEC0);
}

uint64_t sub_1B676E86C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleLineRenderer, (uint64_t)&off_1F0F812C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B676E8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676EDB0);
}

uint64_t sub_1B676E8DC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleLineRenderer, (uint64_t)&off_1F0F812C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD328, a2);
}

uint64_t sub_1B676E91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676ECA0);
}

uint64_t sub_1B676E94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleLineRenderer, (uint64_t)&off_1F0F812C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9790, a2);
}

uint64_t sub_1B676E98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676EB7C);
}

uint64_t sub_1B676E9BC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleLineRenderer, (uint64_t)&off_1F0F812C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD21C, a2);
}

uint64_t sub_1B676E9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676EA6C);
}

uint64_t sub_1B676EA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3B8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F2B80, a3);
}

void *sub_1B676EA6C(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE4464, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B676EAD4);
}

void sub_1B676EAD4()
{
  if (!qword_1E9DCF418)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF418);
    }
  }
}

uint64_t sub_1B676EB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0C0, MEMORY[0x1E4FBC4C0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F2CBC, a3);
}

void *sub_1B676EB7C(void *a1)
{
  return sub_1B66CC348(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67429E4, (uint64_t)sub_1B6AE4464, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B676EBF8);
}

void sub_1B676EBF8()
{
  if (!qword_1E9DCF420)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF420);
    }
  }
}

uint64_t sub_1B676EC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3D8, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F2DF8, a3);
}

void *sub_1B676ECA0(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE4464, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B676ED08);
}

void sub_1B676ED08()
{
  if (!qword_1E9DCF428)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF428);
    }
  }
}

uint64_t sub_1B676ED70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F2F34, a3);
}

void *sub_1B676EDB0(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE4464, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B676EE18);
}

void sub_1B676EE18()
{
  if (!qword_1E9DCF430)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF430);
    }
  }
}

uint64_t sub_1B676EE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4B8, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F3070, a3);
}

void *sub_1B676EEC0(void *a1)
{
  return sub_1B677497C(a1, (uint64_t)sub_1B674B8B0, (uint64_t)sub_1B6AE4464, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B676EF28);
}

void sub_1B676EF28()
{
  if (!qword_1E9DCF438)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF438);
    }
  }
}

uint64_t sub_1B676EF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F31AC, a3);
}

void *sub_1B676EFD0(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE4464, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B676F038);
}

void sub_1B676F038()
{
  if (!qword_1E9DCF440)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF440);
    }
  }
}

uint64_t sub_1B676F0A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F32E8, a3);
}

void *sub_1B676F0E0(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE4464, (void (*)(unint64_t, uint64_t, double))sub_1B66C7BE0, (uint64_t (*)(void))sub_1B676F148);
}

void sub_1B676F148()
{
  if (!qword_1E9DCF448)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF448);
    }
  }
}

uint64_t sub_1B676F1B0@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_DWORD *)(result + 28) == -1 && *(_DWORD *)(result + 32) == 0;
  return result;
}

uint64_t sub_1B676F1D8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 16);
  return result;
}

uint64_t sub_1B676F1E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B676F228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6770174);
}

uint64_t sub_1B676F258@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6710828(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(void))type metadata accessor for MTLCullMode, a2);
}

uint64_t sub_1B676F298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67700DC);
}

uint64_t sub_1B676F2C8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 96);
  return result;
}

uint64_t sub_1B676F2D4(uint64_t *a1)
{
  return sub_1B66B9414(*a1);
}

uint64_t sub_1B676F2FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD9C4, a2);
}

uint64_t sub_1B676F33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676FF98);
}

uint64_t sub_1B676F36C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 76);
  return result;
}

uint64_t sub_1B676F378(uint64_t *a1)
{
  return sub_1B66B9434(*a1);
}

uint64_t sub_1B676F3A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD8B8, a2);
}

uint64_t sub_1B676F3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676FE6C);
}

uint64_t sub_1B676F410@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 76) == 2;
  return result;
}

uint64_t sub_1B676F424@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B676F46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676FCCC);
}

uint64_t sub_1B676F49C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B676F4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676FB9C);
}

uint64_t sub_1B676F50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B676F54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676FAA0);
}

uint64_t sub_1B676F57C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B676F5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676F96C);
}

uint64_t sub_1B676F5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B676F62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676F83C);
}

uint64_t sub_1B676F65C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 138);
  return result;
}

uint64_t sub_1B676F668(uint64_t *a1)
{
  return sub_1B66B9454(*a1);
}

uint64_t sub_1B676F690@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DCAF0, a2);
}

uint64_t sub_1B676F6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B676F740);
}

uint64_t sub_1B676F700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE930, (uint64_t)&type metadata for TextureChannel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F3CC8, a3);
}

void *sub_1B676F740(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B676F794);
}

void sub_1B676F794()
{
  if (!qword_1E9DCF450)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF450);
    }
  }
}

uint64_t sub_1B676F7FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F3E04, a3);
}

void *sub_1B676F83C(void *a1)
{
  return sub_1B676F890(a1, (uint64_t)sub_1B6745CBC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B676F8C0);
}

void *sub_1B676F890(void *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(void))
{
  return sub_1B66CA290(a1, **(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_1B676F8C0()
{
  if (!qword_1E9DCF458)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF458);
    }
  }
}

uint64_t sub_1B676F928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F3F40, a3);
}

void *sub_1B676F96C(void *a1)
{
  return sub_1B67778F8(a1, (uint64_t)sub_1B6745CBC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B676F9C0);
}

void sub_1B676F9C0()
{
  if (!qword_1E9DCF460)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF460);
    }
  }
}

uint64_t sub_1B676FA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F4058, a3);
}

void *sub_1B676FAA0(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B676FAF4);
}

void sub_1B676FAF4()
{
  if (!qword_1E9DCF468)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF468);
    }
  }
}

uint64_t sub_1B676FB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F4194, a3);
}

void *sub_1B676FB9C(void *a1)
{
  return sub_1B676FBF0(a1, (uint64_t)sub_1B6743428, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B676FC20);
}

void *sub_1B676FBF0(void *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(void))
{
  return sub_1B66CA748(a1, **(unsigned char **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_1B676FC20()
{
  if (!qword_1E9DCF470)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF470);
    }
  }
}

uint64_t sub_1B676FC88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F42D0, a3);
}

void *sub_1B676FCCC(void *a1)
{
  return sub_1B676FD28(a1, (uint64_t)sub_1B6744260, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B676FD5C);
}

void *sub_1B676FD28(void *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(void))
{
  return sub_1B66C9F40(a1, *(void *)(v4 + 24), *(void *)(v4 + 32), *(__n128 *)*(void *)(v4 + 16), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_1B676FD5C()
{
  if (!qword_1E9DCF478)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF478);
    }
  }
}

uint64_t sub_1B676FDFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF480, (uint64_t)&type metadata for ParticleOrientationMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F43E8, a3);
}

double sub_1B676FE3C()
{
  return sub_1B670CD4C(v0[2], v0[3], v0[4], &qword_1E9DCF488, (uint64_t)&type metadata for ParticleOrientationMode);
}

void *sub_1B676FE6C(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B676FEC0);
}

void sub_1B676FEC0()
{
  if (!qword_1E9DCF490)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF490);
    }
  }
}

uint64_t sub_1B676FF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF498, (uint64_t)&type metadata for ParticleQuadRenderer.Shape, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F4524, a3);
}

double sub_1B676FF68()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCF4A0, (uint64_t)&type metadata for ParticleQuadRenderer.Shape);
}

void *sub_1B676FF98(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B676FFEC);
}

void sub_1B676FFEC()
{
  if (!qword_1E9DCF4A8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF4A8);
    }
  }
}

uint64_t sub_1B6770054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE6C0, (uint64_t (*)(uint64_t))type metadata accessor for MTLCullMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F4660, a3);
}

double sub_1B67700A0()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCE6C8, (uint64_t (*)(uint64_t))type metadata accessor for MTLCullMode);
}

uint64_t sub_1B67700DC(uint64_t a1)
{
  return sub_1B6770108(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1B66CF7F8);
}

uint64_t sub_1B6770108(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void))
{
  return a2(a1, **(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1B6770134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F47A8, a3);
}

void *sub_1B6770174(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B67432AC, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B67701C8);
}

void sub_1B67701C8()
{
  if (!qword_1E9DCF4B8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF4B8);
    }
  }
}

uint64_t sub_1B6770230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD434, a2);
}

uint64_t sub_1B6770270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6770754);
}

uint64_t sub_1B67702A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD328, a2);
}

uint64_t sub_1B67702E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6770658);
}

uint64_t sub_1B6770310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9790, a2);
}

uint64_t sub_1B6770350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B677052C);
}

uint64_t sub_1B6770380@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleQuadRenderer, (uint64_t)&off_1F0F81D50, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD21C, a2);
}

uint64_t sub_1B67703C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6770430);
}

uint64_t sub_1B67703F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3B8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F48E4, a3);
}

void *sub_1B6770430(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B6770484);
}

void sub_1B6770484()
{
  if (!qword_1E9DCF4C0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF4C0);
    }
  }
}

uint64_t sub_1B67704EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0C0, MEMORY[0x1E4FBC4C0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F4A20, a3);
}

void *sub_1B677052C(void *a1)
{
  return sub_1B6770580(a1, (uint64_t)sub_1B67429E4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B67705B0);
}

void *sub_1B6770580(void *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(void))
{
  return sub_1B66CA8CC(a1, **(_DWORD **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_1B67705B0()
{
  if (!qword_1E9DCF4C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF4C8);
    }
  }
}

uint64_t sub_1B6770618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3D8, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F4B5C, a3);
}

void *sub_1B6770658(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B67428A4, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B67706AC);
}

void sub_1B67706AC()
{
  if (!qword_1E9DCF4D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF4D0);
    }
  }
}

uint64_t sub_1B6770714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4B8, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F4C98, a3);
}

void *sub_1B6770754(void *a1)
{
  return sub_1B675833C(a1, (uint64_t)sub_1B674B8B0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7764, (uint64_t (*)(void))sub_1B67707A8);
}

void sub_1B67707A8()
{
  if (!qword_1E9DCF4D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF4D8);
    }
  }
}

uint64_t sub_1B6770810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleBoxRenderer, (uint64_t)&off_1F0F7D698, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B6770850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67713FC);
}

uint64_t sub_1B6770880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleBoxRenderer, (uint64_t)&off_1F0F7D698, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B67708C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67712EC);
}

uint64_t sub_1B67708F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for ParticleBoxRenderer, (uint64_t)&off_1F0F7D698, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD434, a2);
}

uint64_t sub_1B6770930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67711C4);
}

uint64_t sub_1B6770960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleBoxRenderer, (uint64_t)&off_1F0F7D698, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67709A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6771084);
}

uint64_t sub_1B67709D0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleBoxRenderer, (uint64_t)&off_1F0F7D698, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6770A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6770F74);
}

uint64_t sub_1B6770A40@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleBoxRenderer, (uint64_t)&off_1F0F7D698, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD328, a2);
}

uint64_t sub_1B6770A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6770E64);
}

uint64_t sub_1B6770AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleBoxRenderer, (uint64_t)&off_1F0F7D698, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9790, a2);
}

uint64_t sub_1B6770AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6770D10);
}

uint64_t sub_1B6770B20@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleBoxRenderer, (uint64_t)&off_1F0F7D698, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD21C, a2);
}

uint64_t sub_1B6770B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6770C00);
}

uint64_t sub_1B6770B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3B8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F02DC, a3);
}

double sub_1B6770BD0()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCF3C0, (uint64_t)&type metadata for ParticleAnimationMode);
}

void *sub_1B6770C00(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE3BA0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6770C68);
}

void sub_1B6770C68()
{
  if (!qword_1E9DCF4E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF4E0);
    }
  }
}

uint64_t sub_1B6770CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0C0, MEMORY[0x1E4FBC4C0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F0418, a3);
}

void *sub_1B6770D10(void *a1)
{
  return sub_1B66CC348(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67457EC, (uint64_t)sub_1B6AE3BA0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6770D8C);
}

void sub_1B6770D8C()
{
  if (!qword_1E9DCF4E8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF4E8);
    }
  }
}

uint64_t sub_1B6770DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3D8, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F0554, a3);
}

double sub_1B6770E34()
{
  return sub_1B670D93C(v0[2], v0[3], v0[4], &qword_1E9DCF3E0, (uint64_t)&type metadata for ParticleSortMode);
}

void *sub_1B6770E64(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE3BA0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6770ECC);
}

void sub_1B6770ECC()
{
  if (!qword_1E9DCF4F0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF4F0);
    }
  }
}

uint64_t sub_1B6770F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F0690, a3);
}

void *sub_1B6770F74(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE3BA0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6770FDC);
}

void sub_1B6770FDC()
{
  if (!qword_1E9DCF4F8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF4F8);
    }
  }
}

uint64_t sub_1B6771044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F07CC, a3);
}

void *sub_1B6771084(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE3BA0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B67710EC);
}

void sub_1B67710EC()
{
  if (!qword_1E9DCF500)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF500);
    }
  }
}

uint64_t sub_1B6771154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4B8, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F0908, a3);
}

double sub_1B6771194()
{
  return sub_1B670D2D4(v0[2], v0[3], v0[4], &qword_1E9DCE4C0, (uint64_t)&type metadata for BlendMode);
}

void *sub_1B67711C4(void *a1)
{
  return sub_1B677497C(a1, (uint64_t)sub_1B677122C, (uint64_t)sub_1B6AE3BA0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6771244);
}

uint64_t sub_1B677122C()
{
  return sub_1B674B8B0();
}

void sub_1B6771244()
{
  if (!qword_1E9DCF508)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF508);
    }
  }
}

uint64_t sub_1B67712AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F0A44, a3);
}

void *sub_1B67712EC(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE3BA0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6771354);
}

void sub_1B6771354()
{
  if (!qword_1E9DCF510)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF510);
    }
  }
}

uint64_t sub_1B67713BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F0B80, a3);
}

void *sub_1B67713FC(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE3BA0, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6771464);
}

void sub_1B6771464()
{
  if (!qword_1E9DCF518)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF518);
    }
  }
}

uint64_t sub_1B67714CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleSphereRenderer, (uint64_t)&off_1F0F8DC68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B677150C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6772010);
}

uint64_t sub_1B677153C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleSphereRenderer, (uint64_t)&off_1F0F8DC68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B677157C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6771F00);
}

uint64_t sub_1B67715AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for ParticleSphereRenderer, (uint64_t)&off_1F0F8DC68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD434, a2);
}

uint64_t sub_1B67715EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6771DF0);
}

uint64_t sub_1B677161C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSphereRenderer, (uint64_t)&off_1F0F8DC68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B677165C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6771CE0);
}

uint64_t sub_1B677168C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSphereRenderer, (uint64_t)&off_1F0F8DC68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B67716CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6771BD0);
}

uint64_t sub_1B67716FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSphereRenderer, (uint64_t)&off_1F0F8DC68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD328, a2);
}

uint64_t sub_1B677173C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6771AC0);
}

uint64_t sub_1B677176C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSphereRenderer, (uint64_t)&off_1F0F8DC68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9790, a2);
}

uint64_t sub_1B67717AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B677199C);
}

uint64_t sub_1B67717DC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleSphereRenderer, (uint64_t)&off_1F0F8DC68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD21C, a2);
}

uint64_t sub_1B677181C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B677188C);
}

uint64_t sub_1B677184C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3B8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FB588, a3);
}

void *sub_1B677188C(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5CB8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B67718F4);
}

void sub_1B67718F4()
{
  if (!qword_1E9DCF520)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF520);
    }
  }
}

uint64_t sub_1B677195C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0C0, MEMORY[0x1E4FBC4C0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FB6C4, a3);
}

void *sub_1B677199C(void *a1)
{
  return sub_1B66CC348(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67457EC, (uint64_t)sub_1B6AE5CB8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6771A18);
}

void sub_1B6771A18()
{
  if (!qword_1E9DCF528)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF528);
    }
  }
}

uint64_t sub_1B6771A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3D8, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FB800, a3);
}

void *sub_1B6771AC0(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5CB8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6771B28);
}

void sub_1B6771B28()
{
  if (!qword_1E9DCF530)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF530);
    }
  }
}

uint64_t sub_1B6771B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FB93C, a3);
}

void *sub_1B6771BD0(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5CB8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6771C38);
}

void sub_1B6771C38()
{
  if (!qword_1E9DCF538)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF538);
    }
  }
}

uint64_t sub_1B6771CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FBA78, a3);
}

void *sub_1B6771CE0(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE5CB8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6771D48);
}

void sub_1B6771D48()
{
  if (!qword_1E9DCF540)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF540);
    }
  }
}

uint64_t sub_1B6771DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4B8, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FBBB4, a3);
}

void *sub_1B6771DF0(void *a1)
{
  return sub_1B677497C(a1, (uint64_t)sub_1B677122C, (uint64_t)sub_1B6AE5CB8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6771E58);
}

void sub_1B6771E58()
{
  if (!qword_1E9DCF548)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF548);
    }
  }
}

uint64_t sub_1B6771EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FBCF0, a3);
}

void *sub_1B6771F00(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE5CB8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6771F68);
}

void sub_1B6771F68()
{
  if (!qword_1E9DCF550)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF550);
    }
  }
}

uint64_t sub_1B6771FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FBE2C, a3);
}

void *sub_1B6772010(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE5CB8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7910, (uint64_t (*)(void))sub_1B6772078);
}

void sub_1B6772078()
{
  if (!qword_1E9DCF558)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF558);
    }
  }
}

uint64_t sub_1B67720E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleSurfaceRenderer, (uint64_t)&off_1F0F91268, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6772120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6772190);
}

uint64_t sub_1B6772150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FD9B8, a3);
}

void *sub_1B6772190(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE641C, (void (*)(unint64_t, uint64_t, double))sub_1B66C8010, (uint64_t (*)(void))sub_1B67721F8);
}

void sub_1B67721F8()
{
  if (!qword_1E9DCF560)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF560);
    }
  }
}

uint64_t sub_1B6772260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleVolumetricRenderer, (uint64_t)&off_1F0F96E30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67722A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6772310);
}

uint64_t sub_1B67722D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67028C8, a3);
}

void *sub_1B6772310(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B674304C, (uint64_t)sub_1B6AE77D8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7C98, (uint64_t (*)(void))sub_1B6772378);
}

void sub_1B6772378()
{
  if (!qword_1E9DCF568)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF568);
    }
  }
}

uint64_t sub_1B67723E0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 36);
  return result;
}

uint64_t sub_1B67723EC(uint64_t *a1)
{
  return sub_1B66BA53C(*a1);
}

uint64_t sub_1B6772414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticlePrimitiveRenderer, (uint64_t)&off_1F0F95640, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6772454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6772674);
}

uint64_t sub_1B6772484@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticlePrimitiveRenderer, (uint64_t)&off_1F0F95640, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DE814, a2);
}

uint64_t sub_1B67724C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6772564);
}

uint64_t sub_1B67724F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF578, (uint64_t)&type metadata for ParticlePrimitiveRenderer.Shape, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6701408, a3);
}

double sub_1B6772534()
{
  return sub_1B670CD4C(v0[2], v0[3], v0[4], &qword_1E9DCF580, (uint64_t)&type metadata for ParticlePrimitiveRenderer.Shape);
}

void *sub_1B6772564(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE7388, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B67725CC);
}

void sub_1B67725CC()
{
  if (!qword_1E9DCF588)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF588);
    }
  }
}

uint64_t sub_1B6772634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6701544, a3);
}

void *sub_1B6772674(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B67432AC, (uint64_t)sub_1B6AE7388, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B67726DC);
}

void sub_1B67726DC()
{
  if (!qword_1E9DCF590)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF590);
    }
  }
}

uint64_t sub_1B6772744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticlePrimitiveRenderer, (uint64_t)&off_1F0F95640, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B6772784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6773108);
}

uint64_t sub_1B67727B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for ParticlePrimitiveRenderer, (uint64_t)&off_1F0F95640, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD434, a2);
}

uint64_t sub_1B67727F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6772FF8);
}

uint64_t sub_1B6772824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticlePrimitiveRenderer, (uint64_t)&off_1F0F95640, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6772864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6772EE8);
}

uint64_t sub_1B6772894@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticlePrimitiveRenderer, (uint64_t)&off_1F0F95640, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B67728D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6772DD8);
}

uint64_t sub_1B6772904@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticlePrimitiveRenderer, (uint64_t)&off_1F0F95640, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD328, a2);
}

uint64_t sub_1B6772944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6772CC8);
}

uint64_t sub_1B6772974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticlePrimitiveRenderer, (uint64_t)&off_1F0F95640, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9790, a2);
}

uint64_t sub_1B67729B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6772BA4);
}

uint64_t sub_1B67729E4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticlePrimitiveRenderer, (uint64_t)&off_1F0F95640, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD21C, a2);
}

uint64_t sub_1B6772A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6772A94);
}

uint64_t sub_1B6772A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3B8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6701680, a3);
}

void *sub_1B6772A94(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE7388, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6772AFC);
}

void sub_1B6772AFC()
{
  if (!qword_1E9DCF598)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF598);
    }
  }
}

uint64_t sub_1B6772B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0C0, MEMORY[0x1E4FBC4C0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67017BC, a3);
}

void *sub_1B6772BA4(void *a1)
{
  return sub_1B66CC348(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67429E4, (uint64_t)sub_1B6AE7388, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6772C20);
}

void sub_1B6772C20()
{
  if (!qword_1E9DCF5A0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF5A0);
    }
  }
}

uint64_t sub_1B6772C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3D8, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67018F8, a3);
}

void *sub_1B6772CC8(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE7388, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6772D30);
}

void sub_1B6772D30()
{
  if (!qword_1E9DCF5A8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF5A8);
    }
  }
}

uint64_t sub_1B6772D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6701A34, a3);
}

void *sub_1B6772DD8(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE7388, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6772E40);
}

void sub_1B6772E40()
{
  if (!qword_1E9DCF5B0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF5B0);
    }
  }
}

uint64_t sub_1B6772EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6701B70, a3);
}

void *sub_1B6772EE8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE7388, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6772F50);
}

void sub_1B6772F50()
{
  if (!qword_1E9DCF5B8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF5B8);
    }
  }
}

uint64_t sub_1B6772FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4B8, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6701CAC, a3);
}

void *sub_1B6772FF8(void *a1)
{
  return sub_1B677497C(a1, (uint64_t)sub_1B674B8B0, (uint64_t)sub_1B6AE7388, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6773060);
}

void sub_1B6773060()
{
  if (!qword_1E9DCF5C0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF5C0);
    }
  }
}

uint64_t sub_1B67730C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6701DE8, a3);
}

void *sub_1B6773108(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE7388, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6773170);
}

void sub_1B6773170()
{
  if (!qword_1E9DCF5C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF5C8);
    }
  }
}

uint64_t sub_1B67731D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleAOSphereRenderer, (uint64_t)&off_1F0F92600, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6773218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6773288);
}

uint64_t sub_1B6773248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FE120, a3);
}

void *sub_1B6773288(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE6638, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B67732F0);
}

void sub_1B67732F0()
{
  if (!qword_1E9DCF5D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF5D0);
    }
  }
}

uint64_t sub_1B6773358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleAOBoxRenderer, (uint64_t)&off_1F0F88710, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6773398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6773408);
}

uint64_t sub_1B67733C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F711C, a3);
}

void *sub_1B6773408(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE4F80, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B6773470);
}

void sub_1B6773470()
{
  if (!qword_1E9DCF5D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF5D8);
    }
  }
}

uint64_t sub_1B67734D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleDecalRenderer, (uint64_t)&off_1F0F89338, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B6773518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6773588);
}

uint64_t sub_1B6773548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F79C0, a3);
}

void *sub_1B6773588(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745004, (uint64_t)sub_1B6AE5244, (void (*)(unint64_t, uint64_t, double))sub_1B66C82E8, (uint64_t (*)(void))sub_1B67735F0);
}

void sub_1B67735F0()
{
  if (!qword_1E9DCF5E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF5E0);
    }
  }
}

uint64_t sub_1B6773658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B6773698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6774CEC);
}

uint64_t sub_1B67736C8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 36);
  return result;
}

uint64_t sub_1B67736D4(uint64_t *a1)
{
  return sub_1B66BA53C(*a1);
}

uint64_t sub_1B67736FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B677373C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6774BDC);
}

uint64_t sub_1B677376C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD8B8, a2);
}

uint64_t sub_1B67737AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6774ACC);
}

uint64_t sub_1B67737DC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(result + 12) == 1) {
    *a2 = *(unsigned int *)(result + 8);
  }
  else {
    *a2 = 3;
  }
  return result;
}

uint64_t sub_1B6773800(uint64_t *a1)
{
  return sub_1B66BCBAC(*a1);
}

uint64_t sub_1B6773828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671215C(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD434, a2);
}

uint64_t sub_1B6773868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67121F0(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6774914);
}

uint64_t sub_1B6773898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67738D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67747A4);
}

uint64_t sub_1B6773908@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6773948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6774694);
}

uint64_t sub_1B6773978@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 20);
  if (*(void *)(result + 88)) {
    char v2 = 5;
  }
  if (*(uint64_t *)(result + 96) > 1) {
    char v2 = 5;
  }
  *a2 = v2;
  return result;
}

unsigned char *sub_1B677399C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 20) = *result;
  return result;
}

uint64_t sub_1B67739A8@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *(char *)(result + 20);
  if (*(void *)(result + 88)) {
    uint64_t v2 = 5;
  }
  if (*(uint64_t *)(result + 96) > 1) {
    uint64_t v2 = 5;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_1B67739CC(uint64_t *a1)
{
  return sub_1B66B74C0(*a1);
}

uint64_t sub_1B67739F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD328, a2);
}

uint64_t sub_1B6773A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6774584);
}

uint64_t sub_1B6773A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9790, a2);
}

uint64_t sub_1B6773AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67117BC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6774460);
}

uint64_t sub_1B6773AD4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 28);
  return result;
}

uint64_t sub_1B6773AE0(uint64_t *a1)
{
  return sub_1B66BCC0C(*a1);
}

uint64_t sub_1B6773B08@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD21C, a2);
}

uint64_t sub_1B6773B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6774350);
}

uint64_t sub_1B6773B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6773BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67741E8);
}

char *sub_1B6773BE8@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B6773BF4(uint64_t *a1)
{
  return sub_1B6670FE8(*a1);
}

uint64_t sub_1B6773C1C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DE260, a2);
}

uint64_t sub_1B6773C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67740D8);
}

uint64_t sub_1B6773C8C@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 64) == 0;
  return result;
}

uint64_t sub_1B6773CA0(uint64_t *a1)
{
  return sub_1B6671028(*a1);
}

uint64_t sub_1B6773CC8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DE154, a2);
}

uint64_t sub_1B6773D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6773F98);
}

uint64_t sub_1B6773D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleRibbonRenderer, (uint64_t)&off_1F0F8D650, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B6773D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6773DEC);
}

uint64_t sub_1B6773DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FA1EC, a3);
}

void *sub_1B6773DEC(void *a1)
{
  return sub_1B6773E54(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B6773E88);
}

void *sub_1B6773E54(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66CDC58(a1, *(void *)(v5 + 24), *(void *)(v5 + 32), **(double **)(v5 + 16), *(void *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B6773E88()
{
  if (!qword_1E9DCF5F8)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF5F8);
    }
  }
}

uint64_t sub_1B6773F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF600, (uint64_t)&type metadata for ParticleRibbonTextureMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FA304, a3);
}

double sub_1B6773F68()
{
  return sub_1B670CB44(v0[2], v0[3], v0[4], &qword_1E9DCF608, (uint64_t)&type metadata for ParticleRibbonTextureMode);
}

void *sub_1B6773F98(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B6774000);
}

void sub_1B6774000()
{
  if (!qword_1E9DCF610)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF610);
    }
  }
}

uint64_t sub_1B6774068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF618, (uint64_t)&type metadata for ParticleRibbonProfile, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FA440, a3);
}

double sub_1B67740A8()
{
  return sub_1B670CD4C(v0[2], v0[3], v0[4], &qword_1E9DCF620, (uint64_t)&type metadata for ParticleRibbonProfile);
}

void *sub_1B67740D8(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B6774140);
}

void sub_1B6774140()
{
  if (!qword_1E9DCF628)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF628);
    }
  }
}

uint64_t sub_1B67741A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FA57C, a3);
}

void *sub_1B67741E8(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B6774250);
}

void sub_1B6774250()
{
  if (!qword_1E9DCF630)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF630);
    }
  }
}

uint64_t sub_1B67742B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3B8, (uint64_t)&type metadata for ParticleAnimationMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FA6B8, a3);
}

uint64_t sub_1B67742F8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    char v6 = *(unsigned char *)(a1 + 32);
  }
  else {
    char v6 = 3;
  }
  char v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v4 + 16))(v3, v5, &v8);
}

void *sub_1B6774350(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B67743B8);
}

void sub_1B67743B8()
{
  if (!qword_1E9DCF638)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF638);
    }
  }
}

uint64_t sub_1B6774420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0C0, MEMORY[0x1E4FBC4C0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FA7F4, a3);
}

void *sub_1B6774460(void *a1)
{
  return sub_1B66CC348(a1, **(_DWORD **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (uint64_t)sub_1B67429E4, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B67744DC);
}

void sub_1B67744DC()
{
  if (!qword_1E9DCF640)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF640);
    }
  }
}

uint64_t sub_1B6774544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3D8, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FA930, a3);
}

void *sub_1B6774584(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B67745EC);
}

void sub_1B67745EC()
{
  if (!qword_1E9DCF648)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF648);
    }
  }
}

uint64_t sub_1B6774654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FAA6C, a3);
}

void *sub_1B6774694(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B67746FC);
}

void sub_1B67746FC()
{
  if (!qword_1E9DCF650)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF650);
    }
  }
}

uint64_t sub_1B6774764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FABA8, a3);
}

void *sub_1B67747A4(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B677480C);
}

void sub_1B677480C()
{
  if (!qword_1E9DCF658)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF658);
    }
  }
}

uint64_t sub_1B6774874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE4B8, (uint64_t)&type metadata for BlendMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FACE4, a3);
}

uint64_t sub_1B67748B4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    LODWORD(v6) = *(_DWORD *)(a1 + 32);
    char v7 = *(unsigned char *)(a1 + 36);
  }
  else
  {
    char v7 = 0;
  }
  int v9 = v6;
  char v10 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(v4 + 16))(v3, v5, &v9);
}

void *sub_1B6774914(void *a1)
{
  return sub_1B677497C(a1, (uint64_t)sub_1B674B8B0, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B67749CC);
}

void *sub_1B677497C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66CF2D8(a1, **(unsigned int **)(v5 + 16) | ((unint64_t)*(unsigned __int8 *)(*(void *)(v5 + 16) + 4) << 32), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B67749CC()
{
  if (!qword_1E9DCF660)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF660);
    }
  }
}

uint64_t sub_1B6774A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF480, (uint64_t)&type metadata for ParticleOrientationMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FAE20, a3);
}

uint64_t sub_1B6774A74(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    char v6 = *(unsigned char *)(a1 + 32);
  }
  else {
    char v6 = 5;
  }
  char v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v4 + 16))(v3, v5, &v8);
}

void *sub_1B6774ACC(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B6774B34);
}

void sub_1B6774B34()
{
  if (!qword_1E9DCF668)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF668);
    }
  }
}

uint64_t sub_1B6774B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FAF5C, a3);
}

void *sub_1B6774BDC(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B6774C44);
}

void sub_1B6774C44()
{
  if (!qword_1E9DCF670)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF670);
    }
  }
}

uint64_t sub_1B6774CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FB098, a3);
}

void *sub_1B6774CEC(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE5AF8, (void (*)(unint64_t, uint64_t, double))sub_1B66C7858, (uint64_t (*)(void))sub_1B6774D54);
}

void sub_1B6774D54()
{
  if (!qword_1E9DCF678)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF678);
    }
  }
}

uint64_t sub_1B6774DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleMeshRenderer, (uint64_t)&off_1F0F818E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B6774DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6775320);
}

uint64_t sub_1B6774E2C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 16);
  return result;
}

uint64_t sub_1B6774E38(uint64_t *a1)
{
  return sub_1B66BD3AC(*a1);
}

uint64_t sub_1B6774E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleMeshRenderer, (uint64_t)&off_1F0F818E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6774EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6775210);
}

uint64_t sub_1B6774ED0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleMeshRenderer, (uint64_t)&off_1F0F818E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD328, a2);
}

uint64_t sub_1B6774F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6775100);
}

uint64_t sub_1B6774F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleMeshRenderer, (uint64_t)&off_1F0F818E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D98B0, a2);
}

uint64_t sub_1B6774F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6774FF0);
}

uint64_t sub_1B6774FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F37D8, a3);
}

void *sub_1B6774FF0(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE4648, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6775058);
}

void sub_1B6775058()
{
  if (!qword_1E9DCF680)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF680);
    }
  }
}

uint64_t sub_1B67750C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3D8, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F3914, a3);
}

void *sub_1B6775100(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE4648, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6775168);
}

void sub_1B6775168()
{
  if (!qword_1E9DCF688)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF688);
    }
  }
}

uint64_t sub_1B67751D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F3A50, a3);
}

void *sub_1B6775210(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE4648, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6775278);
}

void sub_1B6775278()
{
  if (!qword_1E9DCF690)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF690);
    }
  }
}

uint64_t sub_1B67752E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F3B8C, a3);
}

void *sub_1B6775320(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE4648, (void (*)(unint64_t, uint64_t, double))sub_1B66C7EA8, (uint64_t (*)(void))sub_1B6775388);
}

void sub_1B6775388()
{
  if (!qword_1E9DCF698)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF698);
    }
  }
}

uint64_t sub_1B67753F0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(char *)(result + 8);
  return result;
}

uint64_t sub_1B67753FC(uint64_t *a1)
{
  return sub_1B66BDB48(*a1);
}

uint64_t sub_1B6775424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleGaussianRenderer, (uint64_t)&off_1F0F92F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6775464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6775994);
}

uint64_t sub_1B6775494@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleGaussianRenderer, (uint64_t)&off_1F0F92F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DD328, a2);
}

uint64_t sub_1B67754D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6775844);
}

uint64_t sub_1B6775504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleGaussianRenderer, (uint64_t)&off_1F0F92F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6775544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6775734);
}

uint64_t sub_1B6775574@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for ParticleGaussianRenderer, (uint64_t)&off_1F0F92F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B67755B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6775624);
}

uint64_t sub_1B67755E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FEC18, a3);
}

void *sub_1B6775624(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE68C8, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B677568C);
}

void sub_1B677568C()
{
  if (!qword_1E9DCF6A0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF6A0);
    }
  }
}

uint64_t sub_1B67756F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FED54, a3);
}

void *sub_1B6775734(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE68C8, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B677579C);
}

void sub_1B677579C()
{
  if (!qword_1E9DCF6A8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF6A8);
    }
  }
}

uint64_t sub_1B6775804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF3D8, (uint64_t)&type metadata for ParticleSortMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FEE90, a3);
}

void *sub_1B6775844(void *a1)
{
  return sub_1B67758AC(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE68C8, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B67758EC);
}

void *sub_1B67758AC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66CB09C(a1, **(unsigned char **)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B67758EC()
{
  if (!qword_1E9DCF6B0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF6B0);
    }
  }
}

uint64_t sub_1B6775954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FEFCC, a3);
}

void *sub_1B6775994(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B6742130, (uint64_t)sub_1B6AE68C8, (void (*)(unint64_t, uint64_t, double))sub_1B66C8450, (uint64_t (*)(void))sub_1B67759FC);
}

void sub_1B67759FC()
{
  if (!qword_1E9DCF6B8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF6B8);
    }
  }
}

uint64_t sub_1B6775A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for SceneKitAssetInstance, (uint64_t)&off_1F0F8AC10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D91E4, a2);
}

uint64_t sub_1B6775AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6775D3C);
}

uint64_t sub_1B6775AD4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for SceneKitAssetInstance, (uint64_t)&off_1F0F8AC10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6775B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6775BB4);
}

uint64_t sub_1B6775B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F91E0, a3);
}

double sub_1B6775B84()
{
  return sub_1B670C5D4(v0[2], v0[3], v0[4], qword_1E9DD3AF0, MEMORY[0x1E4FBB390]);
}

void *sub_1B6775BB4(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B67428A4, (uint64_t)sub_1B6AE5770, (void (*)(unint64_t, uint64_t, double))sub_1B66C7C98, (uint64_t (*)(void))sub_1B6775C1C);
}

void sub_1B6775C1C()
{
  if (!qword_1E9DCF6C0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF6C0);
    }
  }
}

uint64_t sub_1B6775C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE1D8, (uint64_t)&type metadata for Entity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F931C, a3);
}

double sub_1B6775CC4()
{
  return sub_1B670C7AC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6775CE4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    uint64_t v6 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v4 + 16))(v3, v5, &v8);
}

void *sub_1B6775D3C(void *a1)
{
  return sub_1B6775DA4(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE5770, (void (*)(unint64_t, uint64_t, double))sub_1B66C7C98, (uint64_t (*)(void))sub_1B6775DE4);
}

void *sub_1B6775DA4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66CB588(a1, **(void **)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B6775DE4()
{
  if (!qword_1E9DCF6C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF6C8);
    }
  }
}

uint64_t sub_1B6775E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671119C(a1, v2, (uint64_t)&type metadata for SceneFileAsset, a2);
}

uint64_t sub_1B6775E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711230(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6775EE8);
}

uint64_t sub_1B6775EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE578, (uint64_t)&type metadata for Asset, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E63EC, a3);
}

uint64_t sub_1B6775EE8(uint64_t a1)
{
  return sub_1B6776230(a1, (uint64_t (*)(_OWORD *, uint64_t, uint64_t))sub_1B66D6050);
}

void sub_1B6775F14()
{
  if (!qword_1E9DCF6D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF6D0);
    }
  }
}

uint64_t sub_1B6775F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B671119C(a1, v2, (uint64_t)&type metadata for CSVFileAsset, a2);
}

uint64_t sub_1B6775FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711230(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6776204);
}

uint64_t sub_1B6775FE4@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B67123F0(a1, v2, (uint64_t)&type metadata for CSVFileAsset, (uint64_t)&off_1F0F59298, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], a2);
}

uint64_t sub_1B6776020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67760C8);
}

uint64_t sub_1B6776050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6751298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E13E8, a3);
}

uint64_t sub_1B6776094()
{
  return sub_1B670CA2C(v0[2], v0[3], v0[4], (void (*)(void))sub_1B6751314);
}

uint64_t sub_1B67760C8(uint64_t a1)
{
  return sub_1B67760F4(a1, sub_1B66D54B4);
}

uint64_t sub_1B67760F4(uint64_t a1, uint64_t (*a2)(void, void, void))
{
  return a2(**(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1B6776138()
{
  if (!qword_1E9DCF6D8)
  {
    sub_1B62CB19C(255, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF6D8);
    }
  }
}

uint64_t sub_1B67761C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE578, (uint64_t)&type metadata for Asset, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E1500, a3);
}

uint64_t sub_1B6776204(uint64_t a1)
{
  return sub_1B6776230(a1, (uint64_t (*)(_OWORD *, uint64_t, uint64_t))sub_1B66D5508);
}

uint64_t sub_1B6776230(uint64_t a1, uint64_t (*a2)(_OWORD *, uint64_t, uint64_t))
{
  uint64_t v5 = (_OWORD *)v2[2];
  uint64_t v4 = v2[3];
  uint64_t v6 = v2[4];
  long long v7 = v5[1];
  v9[0] = *v5;
  v9[1] = v7;
  void v9[2] = v5[2];
  return a2(v9, v4, v6);
}

void sub_1B677628C()
{
  if (!qword_1E9DCF6E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF6E0);
    }
  }
}

uint64_t sub_1B67762F8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B6776348@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for SetActive, (uint64_t)&off_1F0FA9800, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9564, a2);
}

uint64_t sub_1B6776388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67763F8);
}

uint64_t sub_1B67763B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670B798, a3);
}

void *sub_1B67763F8(void *a1)
{
  return sub_1B6776460(a1, (uint64_t)sub_1B6743428, (uint64_t)sub_1B6AE9494, (void (*)(unint64_t, uint64_t, double))sub_1B66C8740, (uint64_t (*)(void))sub_1B67764A0);
}

void *sub_1B6776460(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66C9C14(a1, **(unsigned char **)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B67764A0()
{
  if (!qword_1E9DCF6E8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF6E8);
    }
  }
}

uint64_t sub_1B6776508@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = qword_1B6E83A30[*(char *)(result + 8)];
  return result;
}

void *sub_1B6776520(void *result, uint64_t a2)
{
  if (*result == 2)
  {
    if (*(unsigned char *)(a2 + 8) == 1) {
      return result;
    }
    *(void *)a2 = 0x3F80000000000000;
    char v2 = 1;
    goto LABEL_8;
  }
  if (*result != 1)
  {
    *(void *)a2 = 0;
    char v2 = 2;
LABEL_8:
    *(unsigned char *)(a2 + 8) = v2;
    return result;
  }
  if (*(unsigned char *)(a2 + 8))
  {
    *(void *)a2 = 1065353216;
    *(unsigned char *)(a2 + 8) = 0;
  }
  return result;
}

uint64_t sub_1B6776578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for ParticleOpacityEvolution, (uint64_t)&off_1F0F934D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B67765B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6776DA0);
}

uint64_t sub_1B67765E8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711870(a1, v2, a2);
}

uint64_t sub_1B67765F0(uint64_t result)
{
  return sub_1B67118E0(result);
}

uint64_t sub_1B67765F8@<X0>(uint64_t result@<X0>, float *a2@<X8>)
{
  float v2 = *(float *)result;
  if (*(unsigned char *)(result + 8)) {
    float v2 = 0.0;
  }
  *a2 = v2;
  return result;
}

unsigned int *sub_1B6776614(unsigned int *result, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 8))
  {
    *(void *)a2 = *result;
    *(unsigned char *)(a2 + 8) = 0;
  }
  return result;
}

uint64_t sub_1B6776630@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 8) == 0;
  return result;
}

uint64_t sub_1B6776644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for ParticleOpacityEvolution, (uint64_t)&off_1F0F934D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6776684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6776B54);
}

uint64_t sub_1B67766B4@<X0>(uint64_t result@<X0>, float *a2@<X8>)
{
  float v2 = *(float *)result;
  float v3 = *(float *)(result + 4);
  if (*(unsigned char *)(result + 8) != 1)
  {
    float v2 = 0.0;
    float v3 = 1.0;
  }
  *a2 = v2;
  a2[1] = v3;
  return result;
}

void *sub_1B67766D8(void *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 8) == 1)
  {
    *(void *)a2 = *result;
    *(unsigned char *)(a2 + 8) = 1;
  }
  return result;
}

uint64_t sub_1B67766F8@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 8) == 1;
  return result;
}

uint64_t sub_1B677670C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67122AC(a1, v2, (uint64_t)&type metadata for ParticleOpacityEvolution, (uint64_t)&off_1F0F934D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DA6CC, a2);
}

uint64_t sub_1B677674C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6776988);
}

uint64_t sub_1B677677C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711C34(a1, v2, (uint64_t)&type metadata for ParticleOpacityEvolution, (uint64_t)&off_1F0F934D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB154, a2);
}

uint64_t sub_1B67767BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711B70(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6776830);
}

uint64_t sub_1B67767EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B674C090, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FF4BC, a3);
}

uint64_t sub_1B6776830(uint64_t a1)
{
  return sub_1B675D4D4(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1B66D82C8);
}

void sub_1B677685C()
{
  if (!qword_1E9DCF6F8)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF6F8);
    }
  }
}

uint64_t sub_1B67768F4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1B6776944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6749144, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FF5D4, a3);
}

void *sub_1B6776988(void *a1)
{
  return sub_1B67769F0(a1, (uint64_t)sub_1B6745CBC, (uint64_t)sub_1B6AE6B28, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B6776A24);
}

void *sub_1B67769F0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66CD6DC(a1, *(void *)(v5 + 24), *(void *)(v5 + 32), **(float **)(v5 + 16), *(float *)(*(void *)(v5 + 16) + 4), *(void *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B6776A24()
{
  if (!qword_1E9DCF700)
  {
    sub_1B675462C(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF700);
    }
  }
}

uint64_t sub_1B6776AB8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6776B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FF6EC, a3);
}

void *sub_1B6776B54(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE6B28, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B6776BBC);
}

void sub_1B6776BBC()
{
  if (!qword_1E9DCF708)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF708);
    }
  }
}

uint64_t sub_1B6776C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF710, (uint64_t)&type metadata for EvolutionMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FF828, a3);
}

uint64_t sub_1B6776C64()
{
  return sub_1B670DA9C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6776C70(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    char v7 = *(unsigned char *)(a1 + 40);
  }
  else
  {
    char v7 = -1;
  }
  uint64_t v9 = v6;
  char v10 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v4 + 16))(v3, v5, &v9);
}

void *sub_1B6776CD0(void *a1)
{
  return sub_1B66D1C58(a1, **(void **)(v1 + 16), *(unsigned __int8 *)(*(void *)(v1 + 16) + 8), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1B6776CF8()
{
  if (!qword_1E9DCF720)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF720);
    }
  }
}

uint64_t sub_1B6776D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FF964, a3);
}

void *sub_1B6776DA0(void *a1)
{
  return sub_1B6776E08(a1, (uint64_t)sub_1B67432AC, (uint64_t)sub_1B6AE6B28, (void (*)(unint64_t, uint64_t, double))sub_1B66C80C8, (uint64_t (*)(void))sub_1B6776E48);
}

void *sub_1B6776E08(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66C9A8C(a1, **(void **)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B6776E48()
{
  if (!qword_1E9DCF728)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF728);
    }
  }
}

uint64_t sub_1B6776EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for SineMoveAction, (uint64_t)&off_1F0F665C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6776EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67770E8);
}

uint64_t sub_1B6776F20@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for SineMoveAction, (uint64_t)&off_1F0F665C8, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8], a2);
}

uint64_t sub_1B6776F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6776FDC);
}

uint64_t sub_1B6776F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E6528, a3);
}

uint64_t sub_1B6776FDC(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66CC4D4);
}

void sub_1B6777008()
{
  if (!qword_1E9DCF730)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF730);
    }
  }
}

uint64_t sub_1B67770A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E6640, a3);
}

void *sub_1B67770E8(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE0F84, (void (*)(unint64_t, uint64_t, double))sub_1B66C88A0, (uint64_t (*)(void))sub_1B6777150);
}

void sub_1B6777150()
{
  if (!qword_1E9DCF738)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF738);
    }
  }
}

uint64_t sub_1B67771B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for AnimationTimeSource, (uint64_t)&off_1F0F7C290, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B67771F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6777CD4);
}

uint64_t sub_1B677722C(uint64_t *a1)
{
  return sub_1B66C0A08(*a1);
}

uint64_t sub_1B6777254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for AnimationTimeSource, (uint64_t)&off_1F0F7C290, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9670, a2);
}

uint64_t sub_1B6777294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67120A8(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6777BA8);
}

uint64_t sub_1B67772C4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6711054(a1, v2, a2);
}

uint64_t sub_1B67772CC(uint64_t result)
{
  return sub_1B67110CC(result);
}

uint64_t sub_1B67772D4@<X0>(uint64_t result@<X0>, float *a2@<X8>)
{
  float v2 = *(float *)(result + 24);
  if (*(unsigned char *)(result + 36)) {
    float v2 = 0.0;
  }
  *a2 = v2;
  return result;
}

unsigned int *sub_1B67772F0(unsigned int *result, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 36))
  {
    *(void *)(a2 + 24) = *result;
    *(_DWORD *)(a2 + 32) = 0;
    *(unsigned char *)(a2 + 36) = 0;
  }
  return result;
}

uint64_t sub_1B6777310@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 36) == 0;
  return result;
}

uint64_t sub_1B6777324@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = 0;
  if (*(unsigned char *)(result + 36) == 1)
  {
    *(float *)&uint64_t v2 = (float)(int)*(void *)(result + 24);
    HIDWORD(v2) = HIDWORD(*(void *)(result + 24));
  }
  *a2 = v2;
  return result;
}

double sub_1B6777354(void *a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 36) == 1)
  {
    double result = *(double *)a1;
    *(void *)(a2 + 24) = (int)COERCE_FLOAT(*a1) | ((unint64_t)HIDWORD(*a1) << 32);
    *(_DWORD *)(a2 + 32) = 0;
    *(unsigned char *)(a2 + 36) = 1;
  }
  return result;
}

uint64_t sub_1B6777384@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 36) == 1;
  return result;
}

uint64_t sub_1B6777398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67108B8(a1, v2, (uint64_t)&type metadata for AnimationTimeSource, (uint64_t)&off_1F0F7C290, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DB884, a2);
}

uint64_t sub_1B67773D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711D38(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B67778A4);
}

uint64_t sub_1B6777408@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = 0;
  if (*(unsigned char *)(result + 36) == 2)
  {
    *(float *)&uint64_t v2 = (float)(int)*(void *)(result + 24);
    HIDWORD(v2) = HIDWORD(*(void *)(result + 24));
  }
  *a2 = v2;
  return result;
}

double sub_1B6777438(void *a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 36) == 2)
  {
    double result = *(double *)a1;
    *(void *)(a2 + 24) = (int)COERCE_FLOAT(*a1) | ((unint64_t)HIDWORD(*a1) << 32);
    *(_DWORD *)(a2 + 32) = 0;
    *(unsigned char *)(a2 + 36) = 2;
  }
  return result;
}

uint64_t sub_1B6777468@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 36) == 2;
  return result;
}

uint64_t sub_1B677747C@<X0>(uint64_t result@<X0>, float *a2@<X8>)
{
  float v2 = *(float *)(result + 24);
  if (*(unsigned char *)(result + 36) != 3) {
    float v2 = 0.0;
  }
  *a2 = v2;
  return result;
}

unsigned int *sub_1B6777498(unsigned int *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 36) == 3)
  {
    *(void *)(a2 + 24) = *result;
    *(_DWORD *)(a2 + 32) = 0;
    *(unsigned char *)(a2 + 36) = 3;
  }
  return result;
}

uint64_t sub_1B67774BC@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 36) == 3;
  return result;
}

uint64_t sub_1B67774D0@<X0>(uint64_t result@<X0>, float *a2@<X8>)
{
  float v2 = *(float *)(result + 24);
  if (*(unsigned char *)(result + 36) != 4) {
    float v2 = 0.0;
  }
  *a2 = v2;
  return result;
}

unsigned int *sub_1B67774EC(unsigned int *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 36) == 4)
  {
    *(void *)(a2 + 24) = *result;
    *(_DWORD *)(a2 + 32) = 0;
    *(unsigned char *)(a2 + 36) = 4;
  }
  return result;
}

uint64_t sub_1B6777510@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 36) == 4;
  return result;
}

uint64_t sub_1B6777524@<X0>(uint64_t result@<X0>, float *a2@<X8>)
{
  float v2 = *(float *)(result + 24);
  if (*(unsigned char *)(result + 36) != 5) {
    float v2 = 0.0;
  }
  *a2 = v2;
  return result;
}

unsigned int *sub_1B6777540(unsigned int *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 36) == 5)
  {
    *(void *)(a2 + 24) = *result;
    *(_DWORD *)(a2 + 32) = 0;
    *(unsigned char *)(a2 + 36) = 5;
  }
  return result;
}

uint64_t sub_1B6777564@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 36) == 5;
  return result;
}

uint64_t sub_1B6777578@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 21);
  return result;
}

unint64_t sub_1B6777584(unint64_t *a1)
{
  return sub_1B66C09D8(*a1);
}

uint64_t sub_1B67775AC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6712830(a1, v2, (uint64_t)&type metadata for AnimationTimeSource, (uint64_t)&off_1F0F7C290, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66DCFE8, a2);
}

uint64_t sub_1B67775EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671233C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6777718);
}

uint64_t sub_1B677761C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(unsigned __int8 *)(result + 22);
  return result;
}

unint64_t sub_1B6777628(unint64_t *a1)
{
  return sub_1B66C09F4(*a1);
}

uint64_t sub_1B6777650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF750, (uint64_t)&type metadata for FillMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EF7E4, a3);
}

double sub_1B6777690()
{
  return sub_1B670C8D4(v0[2], v0[3], v0[4], &qword_1E9DCF758, (uint64_t)&type metadata for FillMode);
}

uint64_t sub_1B67776C0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    char v6 = *(unsigned char *)(a1 + 32);
  }
  else {
    char v6 = 4;
  }
  char v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v4 + 16))(v3, v5, &v8);
}

void *sub_1B6777718(void *a1)
{
  return sub_1B677776C(a1, (uint64_t)sub_1B6743428, (void (*)(unint64_t, uint64_t, double))sub_1B66C75DC, (uint64_t (*)(void))sub_1B677779C);
}

void *sub_1B677776C(void *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(void))
{
  return sub_1B66CA41C(a1, **(unsigned char **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_1B677779C()
{
  if (!qword_1E9DCF760)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF760);
    }
  }
}

uint64_t sub_1B6777804(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6777860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EF920, a3);
}

void *sub_1B67778A4(void *a1)
{
  return sub_1B67778F8(a1, (uint64_t)sub_1B6745CBC, (void (*)(unint64_t, uint64_t, double))sub_1B66C75DC, (uint64_t (*)(void))sub_1B6777928);
}

void *sub_1B67778F8(void *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(void))
{
  return sub_1B66CEFC4(a1, *(void *)(v4 + 24), *(void *)(v4 + 32), **(double **)(v4 + 16), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_1B6777928()
{
  if (!qword_1E9DCF768)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF768);
    }
  }
}

uint64_t sub_1B67779C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF770, (uint64_t)&type metadata for EasingFunction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EFA38, a3);
}

double sub_1B6777A08()
{
  return sub_1B670D87C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6777A14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v7 = *(_DWORD *)(a1 + 40);
    char v8 = *(unsigned char *)(a1 + 44);
  }
  else
  {
    int v7 = 0;
    char v8 = -1;
  }
  uint64_t v10 = v6;
  int v11 = v7;
  char v12 = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v4 + 16))(v3, v5, &v10);
}

void *sub_1B6777A80(void *a1)
{
  return sub_1B66CF148(a1, **(void **)(v1 + 16), *(unsigned int *)(*(void *)(v1 + 16) + 8) | ((unint64_t)*(unsigned __int8 *)(*(void *)(v1 + 16)+ 12) << 32), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1B6777AB0()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B6777B00()
{
  if (!qword_1E9DCF780)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF780);
    }
  }
}

uint64_t sub_1B6777B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EFB74, a3);
}

void *sub_1B6777BA8(void *a1)
{
  return sub_1B6777BFC(a1, (uint64_t)sub_1B67432AC, (void (*)(unint64_t, uint64_t, double))sub_1B66C75DC, (uint64_t (*)(void))sub_1B6777C2C);
}

void *sub_1B6777BFC(void *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(void))
{
  return sub_1B66C9780(a1, **(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_1B6777C2C()
{
  if (!qword_1E9DCF788)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF788);
    }
  }
}

uint64_t sub_1B6777C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EFCB0, a3);
}

void *sub_1B6777CD4(void *a1)
{
  return sub_1B6777D28(a1, (uint64_t)sub_1B674304C, (void (*)(unint64_t, uint64_t, double))sub_1B66C75DC, (uint64_t (*)(void))sub_1B6777D58);
}

void *sub_1B6777D28(void *a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, double), uint64_t (*a4)(void))
{
  return sub_1B66CAD7C(a1, *(void *)(v4 + 24), *(void *)(v4 + 32), **(float **)(v4 + 16), *(void *)(v4 + 40), a2, a3, a4);
}

void sub_1B6777D58()
{
  if (!qword_1E9DCF790)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF790);
    }
  }
}

uint64_t sub_1B6777DC0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712640(a1, v2, (uint64_t)&type metadata for Rect2D, (uint64_t)&off_1F0FA0C68, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8], a2);
}

uint64_t sub_1B6777E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711ABC(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6778094);
}

float sub_1B6777E3C@<S0>(float *a1@<X0>, _DWORD *a2@<X8>)
{
  float result = *a1;
  *a2 = *(_DWORD *)a1;
  return result;
}

float sub_1B6777E48(float *a1, _DWORD *a2)
{
  float result = *a1;
  *a2 = *(_DWORD *)a1;
  return result;
}

uint64_t sub_1B6777E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6712500(a1, v2, (uint64_t)&type metadata for Rect2D, (uint64_t)&off_1F0FA0C68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B66D9444, a2);
}

uint64_t sub_1B6777E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B671258C(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6777F4C);
}

float sub_1B6777EC4@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 4);
  *a2 = result;
  return result;
}

float sub_1B6777ED0(float *a1, uint64_t a2)
{
  float result = *a1;
  *(float *)(a2 + 4) = *a1;
  return result;
}

float sub_1B6777EDC@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 8);
  *a2 = result;
  return result;
}

float sub_1B6777EE8(float *a1, uint64_t a2)
{
  float result = *a1;
  *(float *)(a2 + 8) = *a1;
  return result;
}

float sub_1B6777EF4@<S0>(uint64_t a1@<X0>, float *a2@<X8>)
{
  float result = *(float *)(a1 + 12);
  *a2 = result;
  return result;
}

float sub_1B6777F00(float *a1, uint64_t a2)
{
  float result = *a1;
  *(float *)(a2 + 12) = *a1;
  return result;
}

uint64_t sub_1B6777F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6708D78, a3);
}

void *sub_1B6777F4C(void *a1)
{
  return sub_1B6777FB4(a1, (uint64_t)sub_1B6745610, (uint64_t)sub_1B6AE8EE0, (void (*)(unint64_t, uint64_t, double))sub_1B66C87F0, (uint64_t (*)(void))sub_1B6777FE8);
}

void *sub_1B6777FB4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, double), uint64_t (*a5)(void))
{
  return sub_1B66C9900(a1, *(void *)(v5 + 24), *(void *)(v5 + 32), **(float **)(v5 + 16), *(void *)(v5 + 40), a2, a3, a4, a5);
}

void sub_1B6777FE8()
{
  if (!qword_1E9DCF7A0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF7A0);
    }
  }
}

uint64_t sub_1B6778050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6708EB4, a3);
}

uint64_t sub_1B6778094(uint64_t a1)
{
  return sub_1B67780C0(a1, (uint64_t (*)(uint64_t, void, void, void, __n128))sub_1B66D3C9C);
}

uint64_t sub_1B67780C0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, __n128))
{
  return a2(a1, v2[3], v2[4], v2[5], *(__n128 *)v2[2]);
}

void sub_1B67780EC()
{
  if (!qword_1E9DCF7A8)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF7A8);
    }
  }
}

uint64_t sub_1B6778194(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_1B67781D8@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B671142C(a1, v2, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1F0F7CDE8, a2);
}

uint64_t sub_1B6778210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6711FA4(a1, a2, a3, v3, (void (*)(unsigned char *))sub_1B6778280);
}

uint64_t sub_1B6778240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EFDEC, a3);
}

uint64_t sub_1B6778280(uint64_t a1)
{
  return sub_1B67782AC(a1, sub_1B66D741C);
}

uint64_t sub_1B67782AC(uint64_t a1, uint64_t (*a2)(void, void, void, void))
{
  return a2(**(void **)(v2 + 16), *(void *)(*(void *)(v2 + 16) + 8), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1B67782F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for ComponentValueWriter();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B677835C()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

uint64_t sub_1B677836C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EDCB0, a3);
}

uint64_t sub_1B67783AC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6AAA104(a1, v2, a2);
}

uint64_t sub_1B67783B4(uint64_t result)
{
  return sub_1B6AAA11C(result);
}

void sub_1B67783BC()
{
  if (!qword_1E9DCF7C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF7C8);
    }
  }
}

uint64_t sub_1B6778424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EDDEC, a3);
}

uint64_t sub_1B6778464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6AAA1DC(a1, v2, a2);
}

uint64_t sub_1B677846C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6AAA1F4(a1, a2, a3, v3);
}

void sub_1B6778474()
{
  if (!qword_1E9DCF7D0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF7D0);
    }
  }
}

uint64_t sub_1B67784DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF7D8, (uint64_t)&type metadata for SimpleFontDescription, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EDF28, a3);
}

uint64_t sub_1B677851C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6AAA20C(a1, v2, a2);
}

uint64_t sub_1B6778524(uint64_t result)
{
  return sub_1B6AAA288(result);
}

uint64_t sub_1B677852C()
{
  return sub_1B670D534(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6778538(uint64_t a1)
{
  return sub_1B670E374(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B6778544()
{
  return swift_setAtWritableKeyPath();
}

void sub_1B677859C()
{
  if (!qword_1E9DCF7F0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF7F0);
    }
  }
}

uint64_t sub_1B6778604()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 44, 7);
}

uint64_t sub_1B6778644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EE064, a3);
}

uint64_t sub_1B6778684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6AAA350(a1, v2, a2);
}

uint64_t sub_1B677868C(uint64_t result)
{
  return sub_1B6AAA3C0(result);
}

void sub_1B6778694()
{
  if (!qword_1E9DCF7F8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF7F8);
    }
  }
}

uint64_t sub_1B67786FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EE1A0, a3);
}

uint64_t sub_1B677873C@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6AAA480(a1, v2, a2);
}

uint64_t sub_1B6778744(uint64_t result)
{
  return sub_1B6AAA4EC(result);
}

void sub_1B677874C()
{
  if (!qword_1E9DCF800)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF800);
    }
  }
}

uint64_t sub_1B67787B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCF808, (uint64_t)&type metadata for PrimitiveGenerator.PrimitiveType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EE2DC, a3);
}

uint64_t sub_1B67787F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6AAA5AC(a1, v2, a2);
}

uint64_t sub_1B67787FC(uint64_t result)
{
  return sub_1B6AAA640(result);
}

double sub_1B6778804()
{
  return sub_1B670D5E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6778810(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    char v6 = *(unsigned char *)(a1 + 32);
  }
  else {
    char v6 = 10;
  }
  char v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v4 + 16))(v3, v5, &v8);
}

void sub_1B6778868()
{
  if (!qword_1E9DCF820)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF820);
    }
  }
}

uint64_t sub_1B67788D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EE418, a3);
}

uint64_t sub_1B6778910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6AAA700(a1, v2, a2);
}

uint64_t sub_1B6778918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6AAA7A0(a1, a2, a3, v3);
}

void sub_1B6778920()
{
  if (!qword_1E9DCF828)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF828);
    }
  }
}

uint64_t sub_1B6778988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE180, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FC41C, a3);
}

uint64_t sub_1B67789D4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D8FC(a1, v2, a2);
}

uint64_t sub_1B67789DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D910(a1, a2, a3, v3);
}

uint64_t sub_1B67789E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE1C8, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FC564, a3);
}

uint64_t sub_1B6778A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D928(a1, v2, a2);
}

uint64_t sub_1B6778A38(uint64_t result)
{
  return sub_1B6B8D950(result);
}

uint64_t sub_1B6778A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FC6AC, a3);
}

uint64_t sub_1B6778A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DA10(a1, v2, a2);
}

uint64_t sub_1B6778A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DA78(a1, a2, a3, v3);
}

void sub_1B6778A94()
{
  if (!qword_1E9DCF840)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF840);
    }
  }
}

uint64_t sub_1B6778B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FDD6C, a3);
}

uint64_t sub_1B6778B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DAC0(a1, v2, a2);
}

uint64_t sub_1B6778B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DAE8(a1, a2, a3, v3);
}

void sub_1B6778B84()
{
  if (!qword_1E9DCF848)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF848);
    }
  }
}

uint64_t sub_1B6778BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FDEA8, a3);
}

uint64_t sub_1B6778C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DB00(a1, v2, a2);
}

uint64_t sub_1B6778C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DB14(a1, a2, a3, v3);
}

void sub_1B6778C3C()
{
  if (!qword_1E9DCF850)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF850);
    }
  }
}

uint64_t sub_1B6778CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FDFE4, a3);
}

uint64_t sub_1B6778CE4@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8DB2C(a1, v2, a2);
}

uint64_t sub_1B6778CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DB40(a1, a2, a3, v3);
}

void sub_1B6778CF4()
{
  if (!qword_1E9DCF858)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF858);
    }
  }
}

uint64_t sub_1B6778D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E6B18, a3);
}

uint64_t sub_1B6778D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D254(a1, v2, a2);
}

uint64_t sub_1B6778DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D27C(a1, a2, a3, v3);
}

void sub_1B6778DAC()
{
  if (!qword_1E9DCF860)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF860);
    }
  }
}

uint64_t sub_1B6778E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E6C54, a3);
}

uint64_t sub_1B6778E54@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8D294(a1, v2, a2);
}

uint64_t sub_1B6778E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D2A8(a1, a2, a3, v3);
}

void sub_1B6778E64()
{
  if (!qword_1E9DCF868)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF868);
    }
  }
}

uint64_t sub_1B6778ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E6D90, a3);
}

uint64_t sub_1B6778F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D2C0(a1, v2, a2);
}

uint64_t sub_1B6778F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D2E8(a1, a2, a3, v3);
}

void sub_1B6778F20()
{
  if (!qword_1E9DCF870)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF870);
    }
  }
}

uint64_t sub_1B6778FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E6EA8, a3);
}

uint64_t sub_1B6779000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D300(a1, v2, a2);
}

uint64_t sub_1B6779008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D314(a1, a2, a3, v3);
}

void sub_1B6779010()
{
  if (!qword_1E9DCF878)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF878);
    }
  }
}

uint64_t sub_1B6779078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E6FE4, a3);
}

uint64_t sub_1B67790BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D32C(a1, v2, a2);
}

uint64_t sub_1B67790C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D354(a1, a2, a3, v3);
}

void sub_1B67790CC()
{
  if (!qword_1E9DCF880)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF880);
    }
  }
}

uint64_t sub_1B677916C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCF888, (uint64_t (*)(uint64_t))type metadata accessor for VFXLightType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E70FC, a3);
}

uint64_t sub_1B67791B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D36C(a1, v2, a2);
}

uint64_t sub_1B67791C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D394(a1, a2, a3, v3);
}

double sub_1B67791C8()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCF898, (uint64_t (*)(uint64_t))type metadata accessor for VFXLightType);
}

uint64_t sub_1B6779204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE180, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E7C0C, a3);
}

uint64_t sub_1B6779250@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D3AC(a1, v2, a2);
}

uint64_t sub_1B6779258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D3C0(a1, a2, a3, v3);
}

uint64_t sub_1B6779260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E7D54, a3);
}

uint64_t sub_1B67792A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D3D8(a1, v2, a2);
}

uint64_t sub_1B67792AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D400(a1, a2, a3, v3);
}

uint64_t sub_1B67792B4()
{
  return sub_1B670D388(v0[2], v0[3], v0[4]);
}

void sub_1B67792D4()
{
  if (!qword_1E9DCF8B0)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF8B0);
    }
  }
}

uint64_t sub_1B6779374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E7E6C, a3);
}

uint64_t sub_1B67793B4@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8D418(a1, v2, a2);
}

uint64_t sub_1B67793BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D42C(a1, a2, a3, v3);
}

void sub_1B67793C4()
{
  if (!qword_1E9DCF8B8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF8B8);
    }
  }
}

uint64_t sub_1B677942C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66E7FA8, a3);
}

uint64_t sub_1B677946C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D444(a1, v2, a2);
}

uint64_t sub_1B6779474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D458(a1, a2, a3, v3);
}

void sub_1B677947C()
{
  if (!qword_1E9DCF8C0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF8C0);
    }
  }
}

uint64_t sub_1B67794E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6702A04, a3);
}

uint64_t sub_1B6779524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DD30(a1, v2, a2);
}

uint64_t sub_1B677952C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DD58(a1, a2, a3, v3);
}

void sub_1B6779534()
{
  if (!qword_1E9DCF8C8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF8C8);
    }
  }
}

uint64_t sub_1B677959C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6702B40, a3);
}

uint64_t sub_1B67795E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DD70(a1, v2, a2);
}

uint64_t sub_1B67795E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DD98(a1, a2, a3, v3);
}

void sub_1B67795F0()
{
  if (!qword_1E9DCF8D0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF8D0);
    }
  }
}

uint64_t sub_1B6779690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6702C58, a3);
}

uint64_t sub_1B67796D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DDB0(a1, v2, a2);
}

uint64_t sub_1B67796D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DDC4(a1, a2, a3, v3);
}

void sub_1B67796E0()
{
  if (!qword_1E9DCF8D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF8D8);
    }
  }
}

uint64_t sub_1B6779748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6702D94, a3);
}

uint64_t sub_1B6779788@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8DDDC(a1, v2, a2);
}

uint64_t sub_1B6779790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DDF0(a1, a2, a3, v3);
}

void sub_1B6779798()
{
  if (!qword_1E9DCF8E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF8E0);
    }
  }
}

uint64_t sub_1B6779800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670686C, a3);
}

uint64_t sub_1B6779840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DF68(a1, v2, a2);
}

uint64_t sub_1B6779848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DF7C(a1, a2, a3, v3);
}

void sub_1B6779850()
{
  if (!qword_1E9DCF8E8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF8E8);
    }
  }
}

uint64_t sub_1B67798B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCF8F0, (uint64_t (*)(uint64_t))type metadata accessor for VFXCameraToneMappingMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67069A8, a3);
}

uint64_t sub_1B6779904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DF94(a1, v2, a2);
}

uint64_t sub_1B677990C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DFBC(a1, a2, a3, v3);
}

double sub_1B6779914()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCF8F8, (uint64_t (*)(uint64_t))type metadata accessor for VFXCameraToneMappingMode);
}

uint64_t sub_1B6779950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6706AF0, a3);
}

uint64_t sub_1B6779990@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E088(a1, v2, a2);
}

uint64_t sub_1B6779998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E09C(a1, a2, a3, v3);
}

void sub_1B67799A0()
{
  if (!qword_1E9DCF908)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF908);
    }
  }
}

uint64_t sub_1B6779A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670504C, a3);
}

uint64_t sub_1B6779A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DE60(a1, v2, a2);
}

uint64_t sub_1B6779A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DE74(a1, a2, a3, v3);
}

void sub_1B6779A58()
{
  if (!qword_1E9DCF910)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF910);
    }
  }
}

uint64_t sub_1B6779AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6705188, a3);
}

uint64_t sub_1B6779B00@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8DE8C(a1, v2, a2);
}

uint64_t sub_1B6779B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DEA0(a1, a2, a3, v3);
}

void sub_1B6779B10()
{
  if (!qword_1E9DCF918)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF918);
    }
  }
}

uint64_t sub_1B6779B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67052C4, a3);
}

uint64_t sub_1B6779BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DEB8(a1, v2, a2);
}

uint64_t sub_1B6779BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DECC(a1, a2, a3, v3);
}

void sub_1B6779BC8()
{
  if (!qword_1E9DCF920)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF920);
    }
  }
}

uint64_t sub_1B6779C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6705400, a3);
}

uint64_t sub_1B6779C70@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8DEE4(a1, v2, a2);
}

uint64_t sub_1B6779C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DEF8(a1, a2, a3, v3);
}

void sub_1B6779C80()
{
  if (!qword_1E9DCF928)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF928);
    }
  }
}

uint64_t sub_1B6779CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6702ED0, a3);
}

uint64_t sub_1B6779D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DE08(a1, v2, a2);
}

uint64_t sub_1B6779D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DE1C(a1, a2, a3, v3);
}

void sub_1B6779D38()
{
  if (!qword_1E9DCF930)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF930);
    }
  }
}

uint64_t sub_1B6779DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670300C, a3);
}

uint64_t sub_1B6779DE0@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8DE34(a1, v2, a2);
}

uint64_t sub_1B6779DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DE48(a1, a2, a3, v3);
}

void sub_1B6779DF0()
{
  if (!qword_1E9DCF938)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF938);
    }
  }
}

uint64_t sub_1B6779E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6705C5C, a3);
}

uint64_t sub_1B6779E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DF10(a1, v2, a2);
}

uint64_t sub_1B6779EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DF24(a1, a2, a3, v3);
}

void sub_1B6779EA8()
{
  if (!qword_1E9DCF940)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF940);
    }
  }
}

uint64_t sub_1B6779F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6705D98, a3);
}

uint64_t sub_1B6779F50@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8DF3C(a1, v2, a2);
}

uint64_t sub_1B6779F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DF50(a1, a2, a3, v3);
}

void sub_1B6779F60()
{
  if (!qword_1E9DCF948)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF948);
    }
  }
}

uint64_t sub_1B6779FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6706C2C, a3);
}

uint64_t sub_1B677A008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E0B4(a1, v2, a2);
}

uint64_t sub_1B677A010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E0DC(a1, a2, a3, v3);
}

void sub_1B677A018()
{
  if (!qword_1E9DCF950)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF950);
    }
  }
}

uint64_t sub_1B677A080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6706D68, a3);
}

uint64_t sub_1B677A0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E0F4(a1, v2, a2);
}

uint64_t sub_1B677A0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E108(a1, a2, a3, v3);
}

void sub_1B677A0D0()
{
  if (!qword_1E9DCF958)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF958);
    }
  }
}

uint64_t sub_1B677A138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6706EA4, a3);
}

uint64_t sub_1B677A178@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E120(a1, v2, a2);
}

uint64_t sub_1B677A180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E134(a1, a2, a3, v3);
}

void sub_1B677A188()
{
  if (!qword_1E9DCF960)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF960);
    }
  }
}

uint64_t sub_1B677A1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6707954, a3);
}

uint64_t sub_1B677A234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E1E4(a1, v2, a2);
}

uint64_t sub_1B677A23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E2A0(a1, a2, a3, v3);
}

void sub_1B677A244()
{
  if (!qword_1E9DCF968)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF968);
    }
  }
}

uint64_t sub_1B677A2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6707A6C, a3);
}

uint64_t sub_1B677A328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E36C(a1, v2, a2);
}

uint64_t sub_1B677A330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E424(a1, a2, a3, v3);
}

void sub_1B677A338()
{
  if (!qword_1E9DCF970)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF970);
    }
  }
}

uint64_t sub_1B677A3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6707B84, a3);
}

uint64_t sub_1B677A418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E4F0(a1, v2, a2);
}

uint64_t sub_1B677A420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E580(a1, a2, a3, v3);
}

void sub_1B677A428()
{
  if (!qword_1E9DCF978)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF978);
    }
  }
}

uint64_t sub_1B677A490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6707CC0, a3);
}

uint64_t sub_1B677A4D0@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E64C(a1, v2, a2);
}

uint64_t sub_1B677A4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E6D4(a1, a2, a3, v3);
}

void sub_1B677A4E0()
{
  if (!qword_1E9DCF980)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF980);
    }
  }
}

uint64_t sub_1B677A548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B6745B30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6706FE0, a3);
}

uint64_t sub_1B677A58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E14C(a1, v2, a2);
}

uint64_t sub_1B677A594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E174(a1, a2, a3, v3);
}

uint64_t sub_1B677A59C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    uint64_t v6 = *(void *)(a1 + 32);
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v4 + 16))(v3, v5, &v8);
}

void sub_1B677A5F4()
{
  if (!qword_1E9DCF988)
  {
    sub_1B6758FA4(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF988);
    }
  }
}

uint64_t sub_1B677A694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67070F8, a3);
}

uint64_t sub_1B677A6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8E18C(a1, v2, a2);
}

uint64_t sub_1B677A6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E1A0(a1, a2, a3, v3);
}

void sub_1B677A6E4()
{
  if (!qword_1E9DCF990)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF990);
    }
  }
}

uint64_t sub_1B677A74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6707234, a3);
}

uint64_t sub_1B677A78C@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8E1B8(a1, v2, a2);
}

uint64_t sub_1B677A794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8E1CC(a1, a2, a3, v3);
}

void sub_1B677A79C()
{
  if (!qword_1E9DCF998)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF998);
    }
  }
}

uint64_t sub_1B677A804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6702420, a3);
}

uint64_t sub_1B677A844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DCD8(a1, v2, a2);
}

uint64_t sub_1B677A84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DCEC(a1, a2, a3, v3);
}

void sub_1B677A854()
{
  if (!qword_1E9DCF9A0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF9A0);
    }
  }
}

uint64_t sub_1B677A8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670255C, a3);
}

uint64_t sub_1B677A8FC@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8DD04(a1, v2, a2);
}

uint64_t sub_1B677A904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DD18(a1, a2, a3, v3);
}

void sub_1B677A90C()
{
  if (!qword_1E9DCF9A8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF9A8);
    }
  }
}

uint64_t sub_1B677A974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67002FC, a3);
}

uint64_t sub_1B677A9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DB58(a1, v2, a2);
}

uint64_t sub_1B677A9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DB6C(a1, a2, a3, v3);
}

void sub_1B677A9C4()
{
  if (!qword_1E9DCF9B0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF9B0);
    }
  }
}

uint64_t sub_1B677AA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCF9B8, (uint64_t (*)(uint64_t))type metadata accessor for VFXParametricModelType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6700438, a3);
}

uint64_t sub_1B677AA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DB84(a1, v2, a2);
}

uint64_t sub_1B677AA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DBAC(a1, a2, a3, v3);
}

double sub_1B677AA88()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCF9C8, (uint64_t (*)(uint64_t))type metadata accessor for VFXParametricModelType);
}

uint64_t sub_1B677AAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F8BFC, a3);
}

uint64_t sub_1B677AB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D7B8(a1, v2, a2);
}

uint64_t sub_1B677AB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D7CC(a1, a2, a3, v3);
}

void sub_1B677AB14()
{
  if (!qword_1E9DCF9D8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF9D8);
    }
  }
}

uint64_t sub_1B677AB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F8D38, a3);
}

uint64_t sub_1B677ABBC@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8D7E4(a1, v2, a2);
}

uint64_t sub_1B677ABC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D7F8(a1, a2, a3, v3);
}

void sub_1B677ABCC()
{
  if (!qword_1E9DCF9E0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF9E0);
    }
  }
}

uint64_t sub_1B677AC34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F8E74, a3);
}

uint64_t sub_1B677AC78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D810(a1, v2, a2);
}

uint64_t sub_1B677AC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D838(a1, a2, a3, v3);
}

void sub_1B677AC88()
{
  if (!qword_1E9DCF9E8)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF9E8);
    }
  }
}

uint64_t sub_1B677AD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F8F8C, a3);
}

uint64_t sub_1B677AD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D850(a1, v2, a2);
}

uint64_t sub_1B677AD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D878(a1, a2, a3, v3);
}

void sub_1B677AD7C()
{
  if (!qword_1E9DCF9F0)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF9F0);
    }
  }
}

uint64_t sub_1B677AE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE770, MEMORY[0x1E4FBC538], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F6240, a3);
}

uint64_t sub_1B677AE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D5A0(a1, v2, a2);
}

uint64_t sub_1B677AE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D5C8(a1, a2, a3, v3);
}

void sub_1B677AE6C()
{
  if (!qword_1E9DCF9F8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCF9F8);
    }
  }
}

uint64_t sub_1B677AED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCFA00, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldCullMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F637C, a3);
}

uint64_t sub_1B677AF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D5E0(a1, v2, a2);
}

uint64_t sub_1B677AF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D608(a1, a2, a3, v3);
}

double sub_1B677AF30()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCFA08, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldCullMode);
}

uint64_t sub_1B677AF6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCFA18, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldScope, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F64C4, a3);
}

uint64_t sub_1B677AFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D620(a1, v2, a2);
}

uint64_t sub_1B677AFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D648(a1, a2, a3, v3);
}

double sub_1B677AFC8()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCFA28, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldScope);
}

uint64_t sub_1B677B004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F660C, a3);
}

uint64_t sub_1B677B048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D660(a1, v2, a2);
}

uint64_t sub_1B677B050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D688(a1, a2, a3, v3);
}

void sub_1B677B058()
{
  if (!qword_1E9DCFA38)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFA38);
    }
  }
}

uint64_t sub_1B677B0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCFA40, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldShape, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F6724, a3);
}

uint64_t sub_1B677B144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D6A0(a1, v2, a2);
}

uint64_t sub_1B677B14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D6C8(a1, a2, a3, v3);
}

double sub_1B677B154()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCFA48, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldShape);
}

uint64_t sub_1B677B190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0B0, MEMORY[0x1E4FBB390], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F686C, a3);
}

uint64_t sub_1B677B1D0@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6B8D6E0(a1, v2, a2);
}

uint64_t sub_1B677B1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D6F4(a1, a2, a3, v3);
}

uint64_t sub_1B677B1E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    char v6 = *(unsigned char *)(a1 + 32);
  }
  else {
    char v6 = 0;
  }
  char v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v4 + 16))(v3, v5, &v8);
}

void sub_1B677B238()
{
  if (!qword_1E9DCFA58)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFA58);
    }
  }
}

uint64_t sub_1B677B2A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F69A8, a3);
}

uint64_t sub_1B677B2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D70C(a1, v2, a2);
}

uint64_t sub_1B677B2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D720(a1, a2, a3, v3);
}

void sub_1B677B2F0()
{
  if (!qword_1E9DCFA60)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFA60);
    }
  }
}

uint64_t sub_1B677B358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCFA68, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F6AE4, a3);
}

uint64_t sub_1B677B3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D738(a1, v2, a2);
}

uint64_t sub_1B677B3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D760(a1, a2, a3, v3);
}

double sub_1B677B3B4()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCFA78, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldType);
}

uint64_t sub_1B677B3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE118, MEMORY[0x1E4FBC1C8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F6C2C, a3);
}

uint64_t sub_1B677B430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D778(a1, v2, a2);
}

uint64_t sub_1B677B438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D7A0(a1, a2, a3, v3);
}

void sub_1B677B440()
{
  if (!qword_1E9DCFA88)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFA88);
    }
  }
}

uint64_t sub_1B677B4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ECD10, a3);
}

uint64_t sub_1B677B4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D470(a1, v2, a2);
}

uint64_t sub_1B677B4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D484(a1, a2, a3, v3);
}

void sub_1B677B4F8()
{
  if (!qword_1E9DCFA90)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFA90);
    }
  }
}

uint64_t sub_1B677B560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66ECE4C, a3);
}

uint64_t sub_1B677B5A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D49C(a1, v2, a2);
}

uint64_t sub_1B677B5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D4C4(a1, a2, a3, v3);
}

void sub_1B677B5B4()
{
  if (!qword_1E9DCFA98)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFA98);
    }
  }
}

uint64_t sub_1B677B654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE180, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B670219C, a3);
}

uint64_t sub_1B677B6A0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DBC4(a1, v2, a2);
}

uint64_t sub_1B677B6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DBD8(a1, a2, a3, v3);
}

uint64_t sub_1B677B6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B67022E4, a3);
}

uint64_t sub_1B677B6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8DCAC(a1, v2, a2);
}

uint64_t sub_1B677B6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8DCC0(a1, a2, a3, v3);
}

void sub_1B677B700()
{
  if (!qword_1E9DCFAA8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFAA8);
    }
  }
}

uint64_t sub_1B677B768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE180, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EF560, a3);
}

uint64_t sub_1B677B7B4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D548(a1, v2, a2);
}

uint64_t sub_1B677B7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D55C(a1, a2, a3, v3);
}

uint64_t sub_1B677B7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EF6A8, a3);
}

uint64_t sub_1B677B804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D574(a1, v2, a2);
}

uint64_t sub_1B677B80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D588(a1, a2, a3, v3);
}

void sub_1B677B814()
{
  if (!qword_1E9DCFAB8)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFAB8);
    }
  }
}

uint64_t sub_1B677B87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FBF68, a3);
}

uint64_t sub_1B677B8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D890(a1, v2, a2);
}

uint64_t sub_1B677B8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D8A4(a1, a2, a3, v3);
}

void sub_1B677B8CC()
{
  if (!qword_1E9DCFAC0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFAC0);
    }
  }
}

uint64_t sub_1B677B934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67437AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66FC0A4, a3);
}

uint64_t sub_1B677B978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D8BC(a1, v2, a2);
}

uint64_t sub_1B677B980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D8E4(a1, a2, a3, v3);
}

void sub_1B677B988()
{
  if (!qword_1E9DCFAC8)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFAC8);
    }
  }
}

uint64_t sub_1B677BA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EF30C, a3);
}

uint64_t sub_1B677BA68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D4DC(a1, v2, a2);
}

uint64_t sub_1B677BA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D4F0(a1, a2, a3, v3);
}

void sub_1B677BA78()
{
  if (!qword_1E9DCFAD0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFAD0);
    }
  }
}

uint64_t sub_1B677BAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8E20(a1, a2, v3, (uint64_t (*)(void))sub_1B67449A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EF448, a3);
}

uint64_t sub_1B677BB24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8D508(a1, v2, a2);
}

uint64_t sub_1B677BB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B8D530(a1, a2, a3, v3);
}

void sub_1B677BB34()
{
  if (!qword_1E9DCFAD8)
  {
    sub_1B6758FA4(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFAD8);
    }
  }
}

void *sub_1B677BBD4(void *a1)
{
  return sub_1B66D5314(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1B677BBF4()
{
  sub_1B62CAAD8(*(void *)(v0 + 24), (uint64_t)&v2);
  return swift_setAtWritableKeyPath();
}

void sub_1B677BC48()
{
  if (!qword_1E9DCFAE0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFAE0);
    }
  }
}

uint64_t sub_1B677BCB4()
{
  swift_release();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + 24);

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1B677BCF4()
{
  if (!qword_1E9DD86C0)
  {
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD86C0);
    }
  }
}

uint64_t sub_1B677BD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCFAE8, (uint64_t (*)(uint64_t))sub_1B677BCF4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EEA44, a3);
}

uint64_t sub_1B677BDA8@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6D00E24(a1, v2, a2);
}

uint64_t sub_1B677BDB0(uint64_t result)
{
  return sub_1B6D00E8C(result);
}

uint64_t sub_1B677BDB8()
{
  return sub_1B670D67C(v0[2], v0[3], v0[4], &qword_1E9DCFAF8, (uint64_t (*)(uint64_t))sub_1B677BCF4);
}

uint64_t sub_1B677BDF4(uint64_t a1)
{
  return sub_1B670EA70(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B677BE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCFB08, (uint64_t (*)(uint64_t))type metadata accessor for MTLStorageMode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EEB8C, a3);
}

uint64_t sub_1B677BE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6D00F4C(a1, v2, a2);
}

uint64_t sub_1B677BE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6D00F64(a1, a2, a3, v3);
}

double sub_1B677BE70()
{
  return sub_1B670C33C(v0[2], v0[3], v0[4], &qword_1E9DCFB10, (uint64_t (*)(uint64_t))type metadata accessor for MTLStorageMode);
}

void sub_1B677BEAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for ComponentValueWriter();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B677BF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCFB20, (uint64_t)&type metadata for MetalFunctionReflection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EECD4, a3);
}

uint64_t sub_1B677BF58@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6D00F7C(a1, v2, a2);
}

uint64_t sub_1B677BF60(uint64_t result)
{
  return sub_1B6D00FFC(result);
}

_OWORD *sub_1B677BF68()
{
  return sub_1B670D71C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B677BF74(void *a1)
{
  return sub_1B670E418(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B677BF80()
{
  return sub_1B6710FD4();
}

void sub_1B677BF9C()
{
  if (!qword_1E9DD8750)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD8750);
    }
  }
}

uint64_t sub_1B677C004()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1B677C05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE0A0, MEMORY[0x1E4FBB550], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EEE10, a3);
}

uint64_t sub_1B677C09C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6D010BC(a1, v2, a2);
}

uint64_t sub_1B677C0A4(uint64_t result)
{
  return sub_1B6D010D4(result);
}

void sub_1B677C0AC()
{
  if (!qword_1E9DCFB38)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFB38);
    }
  }
}

uint64_t sub_1B677C114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8EB8(a1, a2, v3, &qword_1E9DCE480, (uint64_t (*)(uint64_t))type metadata accessor for MTLPixelFormat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EEF4C, a3);
}

uint64_t sub_1B677C160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6D01194(a1, v2, a2);
}

uint64_t sub_1B677C168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6D01234(a1, a2, a3, v3);
}

uint64_t sub_1B677C170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCE290, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EF094, a3);
}

uint64_t sub_1B677C1B0@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6D01300(a1, v2, a2);
}

uint64_t sub_1B677C1B8(uint64_t result)
{
  return sub_1B6D0136C(result);
}

void sub_1B677C1C0()
{
  if (!qword_1E9DCFB48)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFB48);
    }
  }
}

uint64_t sub_1B677C228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCFB50, (uint64_t)&type metadata for KernelReference, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66EF1D0, a3);
}

uint64_t sub_1B677C268@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6D0142C(a1, v2, a2);
}

uint64_t sub_1B677C270(uint64_t result)
{
  return sub_1B6D014A8(result);
}

double sub_1B677C278()
{
  return sub_1B670D7CC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B677C284(uint64_t a1)
{
  return sub_1B670E4F0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B677C290(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B677C2A0(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1B677C2B8(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_1B677C2B8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B677C2C8()
{
  sub_1B677C290(**(void **)(v0 + 24), *(void *)(*(void *)(v0 + 24) + 8), *(unsigned char *)(*(void *)(v0 + 24) + 16));
  return swift_setAtWritableKeyPath();
}

void sub_1B677C328()
{
  if (!qword_1E9DCFB68)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFB68);
    }
  }
}

uint64_t sub_1B677C390()
{
  swift_release();
  sub_1B677C2B8(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1B677C3D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B677C418(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t destroy for KernelReference(uint64_t a1)
{
  return sub_1B677C2B8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s3VFX15KernelReferenceOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B677C290(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for KernelReference(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B677C290(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B677C2B8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for KernelReference(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B677C2B8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FunctionConstant.Key(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FunctionConstant.Key(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B677C608(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1B677C610(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for KernelReference()
{
  return &type metadata for KernelReference;
}

uint64_t sub_1B677C62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B66D8D70(a1, a2, v3, &qword_1E9DCFBC8, (uint64_t)&type metadata for GraphScriptingConfig.Mode, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B66F2908, a3);
}

uint64_t sub_1B677C66C@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1B6860ADC(a1, v2, a2);
}

uint64_t sub_1B677C674(uint64_t result)
{
  return sub_1B6860B44(result);
}

double sub_1B677C67C()
{
  return sub_1B670D93C(v0[2], v0[3], v0[4], &qword_1E9DCFBD8, (uint64_t)&type metadata for GraphScriptingConfig.Mode);
}

uint64_t sub_1B677C6AC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  if (*(void *)(a1 + 16)) {
    char v6 = *(unsigned char *)(a1 + 32);
  }
  else {
    char v6 = 7;
  }
  char v8 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v4 + 16))(v3, v5, &v8);
}

void sub_1B677C704()
{
  if (!qword_1E9DCFBE0)
  {
    unint64_t v0 = type metadata accessor for ComponentValueWriter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCFBE0);
    }
  }
}

void sub_1B677C76C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1B677DB68(uint64_t a1)
{
  return sub_1B674CDE0(a1);
}

uint64_t sub_1B677DB80(uint64_t a1)
{
  return sub_1B675091C(a1);
}

uint64_t sub_1B677DB98()
{
  return sub_1B674C234();
}

uint64_t sub_1B677DBB0()
{
  return sub_1B674BED0();
}

uint64_t sub_1B677DBC8(uint64_t a1)
{
  return sub_1B6761D50(a1);
}

uint64_t sub_1B677DCC8()
{
  sub_1B677E124(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t VFXWorld.diagnosticsTracker.getter()
{
  uint64_t result = sub_1B677DF20(&unk_1E9DCFBF0);
  if (result)
  {
    uint64_t v1 = MEMORY[0x1BA9B8670](result + 16);
    swift_release();
    if (!v1) {
      return 0;
    }
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t result = v1;
    }
    else {
      uint64_t result = 0;
    }
    if (!result)
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B677DD80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B677DF20(&unk_1E9DCFBF0);
  if (!result) {
    goto LABEL_8;
  }
  uint64_t v3 = MEMORY[0x1BA9B8670](result + 16);
  uint64_t result = swift_release();
  if (!v3) {
    goto LABEL_8;
  }
  swift_getObjectType();
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  if (!v4)
  {
    uint64_t result = swift_unknownObjectRelease();
LABEL_8:
    uint64_t v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B677DE14(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  _s13WeakReferenceCMa();
  uint64_t v3 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  objc_setAssociatedObject(v2, &unk_1E9DCFBF0, v3, (void *)0x301);

  return swift_release();
}

uint64_t VFXWorld.diagnosticsTracker.setter()
{
  _s13WeakReferenceCMa();
  uint64_t v1 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  objc_setAssociatedObject(v0, &unk_1E9DCFBF0, v1, (void *)0x301);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B677DF20(void *key)
{
  if (objc_getAssociatedObject(v1, key))
  {
    sub_1B6E32718();
    swift_unknownObjectRelease();
    sub_1B62B57A8(&v3, v4);
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_1B62B324C();
  _s13WeakReferenceCMa();
  if (swift_dynamicCast()) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t _s13WeakReferenceCMa()
{
  return self;
}

uint64_t (*VFXWorld.diagnosticsTracker.modify(uint64_t *a1))(uint64_t a1)
{
  a1[1] = v1;
  uint64_t v3 = sub_1B677DF20(&unk_1E9DCFBF0);
  if (!v3) {
    goto LABEL_8;
  }
  uint64_t v4 = MEMORY[0x1BA9B8670](v3 + 16);
  swift_release();
  if (!v4) {
    goto LABEL_8;
  }
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!v5)
  {
    swift_unknownObjectRelease();
LABEL_8:
    uint64_t v5 = 0;
  }
  *a1 = v5;
  return sub_1B677E094;
}

uint64_t sub_1B677E094(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  _s13WeakReferenceCMa();
  uint64_t v2 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  objc_setAssociatedObject(v1, &unk_1E9DCFBF0, v2, (void *)0x301);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B677E124(uint64_t a1)
{
  return a1;
}

void *initializeBufferWithCopyOfBuffer for TexturePlaceholder(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for TexturePlaceholder()
{
  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for TexturePlaceholder(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *assignWithTake for TexturePlaceholder(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TexturePlaceholder(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TexturePlaceholder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TexturePlaceholder()
{
  return &type metadata for TexturePlaceholder;
}

void **assignWithCopy for TextureCGImage(void **a1, void **a2)
{
  unint64_t v3 = *a1;
  int v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for TextureCGImage(void **a1, void **a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for TextureCGImage(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TextureCGImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureCGImage()
{
  return &type metadata for TextureCGImage;
}

uint64_t sub_1B677E3F0()
{
  return 0x696669746E656469;
}

uint64_t sub_1B677E40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B677E4B0(uint64_t a1)
{
  unint64_t v2 = sub_1B677F04C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B677E4EC(uint64_t a1)
{
  unint64_t v2 = sub_1B677F04C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B677E528@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B677F0A0(0, &qword_1E9DCFC00, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v15 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B677F04C();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v11 = sub_1B6E32D98();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *a2 = v11;
  a2[1] = v13;
  return result;
}

uint64_t sub_1B677E6B4(void *a1)
{
  sub_1B677F0A0(0, &qword_1E9DCFC10, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B677F04C();
  sub_1B6E33A88();
  sub_1B6E32F48();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void sub_1B677E800(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

void *sub_1B677E80C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B677EF18(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B677E840(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  uint64_t v5 = *v1;
  sub_1B62C550C((uint64_t)v3, v4);
  sub_1B6657A10();
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v3);
}

uint64_t sub_1B677E8EC(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(a2 + 8))(v2, 0, ObjectType, a2);
}

double sub_1B677E944@<D0>(void *a1@<X8>)
{
  *(void *)&double result = 0xFFFFFFFFLL;
  *a1 = 0xFFFFFFFFLL;
  a1[1] = 0;
  return result;
}

uint64_t sub_1B677E954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v64 = qword_1EB997A18;
  int v65 = 0;
  char v66 = 2;
  uint64_t v67 = 0;
  char v68 = 2;
  uint64_t v69 = 0;
  swift_retain();
  sub_1B6A6E0D0(1, (uint64_t)v46);
  swift_release();
  v61[0] = v46[0];
  v61[1] = v46[1];
  uint64_t v62 = v47;
  sub_1B62C9DA8(v3, (uint64_t)v61, a3 & 0xFFFFFFFFFFLL, v48);
  sub_1B62CA210((uint64_t)v48, (uint64_t)v49, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v49[0])
  {
    sub_1B62CA064((uint64_t)v46);
    goto LABEL_36;
  }
  long long v56 = v49[0];
  long long v57 = v49[1];
  uint64_t v58 = v50;
  if (v55 <= 0 || (uint64_t v38 = v52) == 0)
  {
    sub_1B62CA064((uint64_t)v46);
    sub_1B632F170(v48);
LABEL_36:
    uint64_t v9 = 0;
    int v11 = -1;
    return v11 | (unint64_t)(v9 << 32);
  }
  uint64_t v37 = v51;
  uint64_t v7 = v54;
  uint64_t v45 = v54[4];
  int v44 = *(unsigned __int8 *)(v53 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  float v35 = v54 + 8;
  uint64_t v36 = (uint64_t)(v54 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = -1;
  uint64_t v34 = a2;
  while (1)
  {
    uint64_t v42 = v8;
    uint64_t v43 = v9;
    uint64_t v12 = (unsigned int *)(v37 + 48 * v8);
    uint64_t v13 = *v12;
    double v14 = (uint64_t *)*((void *)v12 + 2);
    uint64_t v39 = v12[1];
    uint64_t v40 = *((void *)v12 + 3);
    uint64_t v15 = *((void *)v12 + 4);
    uint64_t v16 = *((void *)v12 + 5);
    uint64_t v41 = v10;
    if (v44)
    {
      float v17 = *(os_unfair_lock_s **)(v16 + 376);
      swift_retain();
      os_unfair_lock_lock(v17);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v45);
    sub_1B62CA210(v36, (uint64_t)v63, &qword_1EB97DE20);
    uint64_t v18 = v7[4];
    uint64_t v19 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v7[6] = ecs_stack_allocator_allocate(v18, 48 * v19, 8);
    v7[7] = v19;
    v35[1] = 0;
    v35[2] = 0;
    *float v35 = 0;
    swift_release();
    uint64_t v20 = sub_1B62C9024((uint64_t)&type metadata for TextureClient, (uint64_t)&off_1F0F62040, v14, v40, v15, (uint64_t)v7);
    if (v14)
    {
      uint64_t v21 = v43;
      if (v15)
      {
        float v22 = (void *)(v20 + 8);
        while (1)
        {
          uint64_t v24 = *v14++;
          uint64_t v23 = v24;
          BOOL v25 = *(v22 - 1) == a1 && *v22 == v34;
          if (v25 || (sub_1B6E334B8() & 1) != 0)
          {
            char v26 = *(unsigned char *)(v16 + 184);
            uint64_t v27 = swift_retain();
            if (v26) {
              goto LABEL_39;
            }
            int v11 = *(_DWORD *)(*(void *)(v16 + 168) + 4 * v23);
            uint64_t v21 = *(unsigned int *)(*(void *)(v27 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v11 + 8);
            swift_release();
          }
          v22 += 2;
          if (!--v15) {
            goto LABEL_23;
          }
        }
      }
      goto LABEL_23;
    }
    uint64_t v21 = v43;
    if (v13 != v39) {
      break;
    }
LABEL_23:
    uint64_t v28 = v21;
    v59[0] = v56;
    v59[1] = v57;
    uint64_t v60 = v58;
    uint64_t v10 = v41;
    sub_1B6345178(v7, (unsigned __int16 **)v59, (uint64_t)v63);
    sub_1B634507C((char *)v16);
    ecs_stack_allocator_pop_snapshot(v45);
    if (v44)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
    }
    swift_release();
    uint64_t v8 = v42 + 1;
    uint64_t v9 = v28;
    if (v42 + 1 == v38)
    {
      sub_1B62CA064((uint64_t)v46);
      sub_1B632F170(v48);
      sub_1B632F170(v48);
      return v11 | (unint64_t)(v9 << 32);
    }
  }
  uint64_t v29 = (void *)(v20 + 16 * v13 + 8);
  while (1)
  {
    BOOL v30 = *(v29 - 1) == a1 && *v29 == v34;
    if (!v30 && (sub_1B6E334B8() & 1) == 0) {
      goto LABEL_26;
    }
    char v31 = *(unsigned char *)(v16 + 184);
    uint64_t v32 = swift_retain();
    if (v31) {
      break;
    }
    int v11 = *(_DWORD *)(*(void *)(v16 + 168) + 4 * v13);
    uint64_t v21 = *(unsigned int *)(*(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v11 + 8);
    swift_release();
LABEL_26:
    ++v13;
    v29 += 2;
    if (v39 == v13) {
      goto LABEL_23;
    }
  }
LABEL_39:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B677EE24(unint64_t a1, uint64_t a2)
{
  unint64_t v5 = HIDWORD(a1);
  swift_unknownObjectRetain();
  sub_1B6BFEDD8(a1, v2, a2);
  uint64_t result = swift_unknownObjectRelease();
  if ((a1 != -1 || v5)
    && (uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v5 == -1 || *(_DWORD *)(v7 + 12 * (int)a1 + 8) == v5) {
      return sub_1B635ACD8(*(uint64_t **)(*(void *)(v2 + 136) + 8 * *(int *)(v7 + 12 * (int)a1) + 32));
    }
  }
  return result;
}

void *sub_1B677EF18(void *a1)
{
  uint64_t v3 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (!v1)
  {
    sub_1B62C14BC(v5, v5[3]);
    sub_1B62B1EA8();
    sub_1B6E33518();
    uint64_t v3 = (void *)v5[6];
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

void *assignWithCopy for TextureClient(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TextureClient()
{
  return &type metadata for TextureClient;
}

unint64_t sub_1B677F04C()
{
  unint64_t result = qword_1E9DCFC08;
  if (!qword_1E9DCFC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFC08);
  }
  return result;
}

void sub_1B677F0A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B677F04C();
    unint64_t v7 = a3(a1, &type metadata for TextureClient.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for TextureClient.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B677F1A0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureClient.CodingKeys()
{
  return &type metadata for TextureClient.CodingKeys;
}

unint64_t sub_1B677F1DC()
{
  unint64_t result = qword_1E9DCFC18;
  if (!qword_1E9DCFC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFC18);
  }
  return result;
}

unint64_t sub_1B677F234()
{
  unint64_t result = qword_1E9DCFC20;
  if (!qword_1E9DCFC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFC20);
  }
  return result;
}

unint64_t sub_1B677F28C()
{
  unint64_t result = qword_1E9DCFC28[0];
  if (!qword_1E9DCFC28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9DCFC28);
  }
  return result;
}

ValueMetadata *type metadata accessor for QuaternionFCoder()
{
  return &type metadata for QuaternionFCoder;
}

uint64_t sub_1B677F2F4(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B62AADE8();
  sub_1B62AACC4((unint64_t *)&qword_1EB97D1F8);
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

ValueMetadata *type metadata accessor for AssetManagerInstance()
{
  return &type metadata for AssetManagerInstance;
}

uint64_t sub_1B677F3DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)a1 + 16) + 32);
  int64_t v4 = *(void *)(v3 + 16);
  swift_retain();
  if (v4)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1B62B7EB4(0, v4, 0);
    uint64_t v5 = v11;
    unint64_t v6 = *(void *)(v11 + 16);
    uint64_t v7 = 32;
    do
    {
      uint64_t v8 = *(void *)(v3 + v7);
      unint64_t v9 = *(void *)(v11 + 24);
      if (v6 >= v9 >> 1) {
        sub_1B62B7EB4(v9 > 1, v6 + 1, 1);
      }
      *(void *)(v11 + 16) = v6 + 1;
      *(void *)(v11 + 8 * v6 + 32) = v8;
      v7 += 16;
      ++v6;
      --v4;
    }
    while (v4);
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  *a2 = v5;
  return result;
}

BOOL sub_1B677F4E4(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_1B6E33908();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_1B677F5B0(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_1B6E33908();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v9 = ~v5;
  unint64_t v10 = (v6 + 1) & v9;
  if (((*(void *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v11 = *(void *)(v8 + 8 * v10);
    BOOL result = v11 == a1;
    if (v11 == a1) {
      break;
    }
    unint64_t v10 = (v10 + 1) & v9;
  }
  while (((*(void *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  return result;
}

uint64_t sub_1B677F67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v6 = sub_1B6E33988();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1B6E334B8() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1B6E334B8() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1B677F7B4(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1B6E33918();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1B6E33988();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      while (1)
      {
        if (*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          if (*(unsigned char *)(*(void *)(a2 + 48) + v6) == 1)
          {
            unint64_t v8 = 0xE800000000000000;
            uint64_t v9 = 0x746E656D67617266;
            int v10 = a1;
            if (!a1) {
              goto LABEL_18;
            }
          }
          else
          {
            unint64_t v8 = 0xE700000000000000;
            uint64_t v9 = 0x657475706D6F63;
            int v10 = a1;
            if (!a1)
            {
LABEL_18:
              unint64_t v12 = 0xE600000000000000;
              if (v9 != 0x786574726576) {
                goto LABEL_20;
              }
              goto LABEL_19;
            }
          }
        }
        else
        {
          unint64_t v8 = 0xE600000000000000;
          uint64_t v9 = 0x786574726576;
          int v10 = a1;
          if (!a1) {
            goto LABEL_18;
          }
        }
        if (v10 == 1) {
          uint64_t v11 = 0x746E656D67617266;
        }
        else {
          uint64_t v11 = 0x657475706D6F63;
        }
        if (v10 == 1) {
          unint64_t v12 = 0xE800000000000000;
        }
        else {
          unint64_t v12 = 0xE700000000000000;
        }
        if (v9 != v11) {
          goto LABEL_20;
        }
LABEL_19:
        if (v8 == v12)
        {
          swift_bridgeObjectRelease_n();
          char v13 = 1;
          return v13 & 1;
        }
LABEL_20:
        char v13 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          unint64_t v6 = (v6 + 1) & v7;
          if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
            continue;
          }
        }
        return v13 & 1;
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_1B677F9DC(unint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    goto LABEL_9;
  }
  sub_1B6E33918();
  sub_1B68ED020((uint64_t)v15, a1);
  uint64_t v4 = sub_1B6E33988();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_9;
  }
  unint64_t v8 = *(void *)(*(void *)(a2 + 48) + 8 * v6);
  sub_1B62C6AA8(v8);
  char v9 = sub_1B690176C(v8, a1);
  sub_1B62C6A70(v8);
  if (v9)
  {
    char v10 = 1;
    return v10 & 1;
  }
  uint64_t v11 = ~v5;
  unint64_t v12 = (v6 + 1) & v11;
  if (((*(void *)(v7 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_9:
    char v10 = 0;
    return v10 & 1;
  }
  do
  {
    unint64_t v13 = *(void *)(*(void *)(a2 + 48) + 8 * v12);
    sub_1B62C6AA8(v13);
    char v10 = sub_1B690176C(v13, a1);
    sub_1B62C6A70(v13);
    if (v10) {
      break;
    }
    unint64_t v12 = (v12 + 1) & v11;
  }
  while (((*(void *)(v7 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  return v10 & 1;
}

uint64_t sub_1B677FB18(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  int v5 = a1;
  unint64_t v6 = HIDWORD(a1);
  sub_1B6E33918();
  sub_1B6E33958();
  sub_1B6E33958();
  sub_1B6E33928();
  uint64_t v7 = sub_1B6E33988();
  uint64_t v8 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(a3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = ~v8;
  while (1)
  {
    uint64_t v11 = *(void *)(a3 + 48) + 16 * v9;
    BOOL v12 = *(_DWORD *)v11 == v5 && *(_DWORD *)(v11 + 4) == v6;
    if (v12 && *(void *)(v11 + 8) == a2) {
      break;
    }
    unint64_t v9 = (v9 + 1) & v10;
    if (((*(void *)(a3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1B677FC18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1B6E31118();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_1B63662BC((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]),
        uint64_t v8 = sub_1B6E315A8(),
        uint64_t v9 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v10 = v8 & ~v9,
        uint64_t v11 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0))
  {
    uint64_t v18 = ~v9;
    uint64_t v19 = a2;
    uint64_t v12 = v4 + 16;
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v14 = *(void *)(v12 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      v13(v7, *(void *)(v19 + 48) + v14 * v10, v3);
      sub_1B63662BC(&qword_1EB97D9B0, MEMORY[0x1E4F27990]);
      char v16 = sub_1B6E31708();
      (*v15)(v7, v3);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v18;
    }
    while (((*(void *)(v11 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t type metadata accessor for CPUScriptRunnerSystem()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B677FE44@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for WorldTransform;
  *(void *)(inited + 40) = &off_1F0F67798;
  *(void *)(inited + 48) = &type metadata for ModelRenderer;
  *(void *)(inited + 56) = &off_1F0F60300;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  uint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  uint64_t v24 = v4[4];
  BOOL v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6780098@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Name;
  *(void *)(inited + 40) = &off_1F0F9E6A8;
  *(void *)(inited + 48) = &type metadata for Bindings;
  *(void *)(inited + 56) = &off_1F0FA3538;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  uint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  uint64_t v24 = v4[4];
  BOOL v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B67802EC@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for TriggerScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB9811A0, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F625E0;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F8E138;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  uint64_t v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  int v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B6780584@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97F780, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1EB983100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = updated;
  *(void *)(inited + 40) = &off_1F0F83030;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F8E138;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  uint64_t v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  int v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B678081C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t inited = type metadata accessor for ParticleInitScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97F770, type metadata accessor for ParticleInitScript, (uint64_t)&off_1EB982C10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B6E76B30;
  *(void *)(v14 + 32) = inited;
  *(void *)(v14 + 40) = &off_1F0F79748;
  *(void *)(v14 + 48) = v9;
  *(void *)(v14 + 56) = &off_1F0F8E138;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(v14);
    uint64_t v14 = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  uint64_t v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  int v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(v14 + 32), *(void *)(v14 + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B6780AB4@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for EmitterScript(0);
  sub_1B63396FC(0, &qword_1EB97F7C0, type metadata accessor for EmitterScript, (uint64_t)&off_1EB982298, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F5EC90;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F8E138;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  uint64_t v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  int v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B6780D4C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for ShaderScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97F7A0, type metadata accessor for ShaderScript, (uint64_t)&off_1EB981F10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F5C080;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F8E138;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  uint64_t v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  int v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B6780FE4@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for MetalFunctionScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB981190, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1EB984EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F7CE60;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F8E138;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  uint64_t v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  int v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B678127C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for SimpleScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97F7B0, type metadata accessor for SimpleScript, (uint64_t)&off_1EB982058, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F5C338;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F8E138;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  uint64_t v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  int v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B6781514@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for GraphScript(0);
  sub_1B63396FC(0, (unint64_t *)&unk_1EB97F790, type metadata accessor for GraphScript, (uint64_t)&off_1EB981C00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptStateRestoration);
  uint64_t v9 = v8;
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 41;
  uint64_t v12 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v13 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = &off_1F0F55688;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = &off_1F0F8E138;
  if (v13 > 0xF)
  {
    uint64_t v32 = sub_1B62F79D4((char *)(v11 + v12), v13 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v32;
  }
  uint64_t v15 = *(unsigned __int16 *)(v10 + 20);
  int64_t v16 = *(unsigned __int16 *)(v10 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v17 + 32) = a1;
  *(unsigned char *)(v17 + 33) = a2;
  if (v16)
  {
    uint64_t v32 = sub_1B62F7C94((char *)(v11 + v15), v16);
    sub_1B62F81D8(v17);
    uint64_t v17 = v32;
    unint64_t v18 = *(void *)(v32 + 16);
  }
  else
  {
    unint64_t v18 = 2;
  }
  uint64_t v19 = *v4 + 41;
  uint64_t v20 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v21 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  int v22 = (char *)(v19 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v23 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v24 = *((_DWORD *)v4 + 2);
  char v25 = *((unsigned char *)v4 + 12);
  uint64_t v26 = v4[4];
  uint64_t v27 = v4[2];
  char v28 = *((unsigned char *)v4 + 24);
  uint64_t v29 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v17 + 32), v18, v20, v21, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v29;
  *(_DWORD *)(a3 + 8) = v24;
  *(unsigned char *)(a3 + 12) = v25;
  *(_WORD *)(a3 + 13) = v33;
  *(unsigned char *)(a3 + 15) = v34;
  *(void *)(a3 + 16) = v27;
  *(unsigned char *)(a3 + 24) = v28;
  *(_DWORD *)(a3 + 25) = v32;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v32 + 3);
  *(void *)(a3 + 32) = v26;
  return result;
}

uint64_t sub_1B67817AC@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for VFXObjectTag();
  uint64_t v9 = *v4;
  uint64_t v10 = *v4 + 41;
  uint64_t v11 = *(unsigned __int16 *)(*v4 + 16);
  unint64_t v12 = *(unsigned __int16 *)(*v4 + 18);
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = &off_1F0F5D218;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  if (v12 > 0xF)
  {
    uint64_t v30 = sub_1B62F79D4((char *)(v10 + v11), v12 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v30;
  }
  uint64_t v14 = *(unsigned __int16 *)(v9 + 20);
  int64_t v15 = *(unsigned __int16 *)(v9 + 22);
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v16 + 32) = a1;
  *(unsigned char *)(v16 + 33) = a2;
  if (v15)
  {
    uint64_t v30 = sub_1B62F7C94((char *)(v10 + v14), v15);
    sub_1B62F81D8(v16);
    uint64_t v16 = v30;
    unint64_t v17 = *(void *)(v30 + 16);
  }
  else
  {
    unint64_t v17 = 2;
  }
  uint64_t v18 = *v4 + 41;
  uint64_t v19 = (char *)(v18 + *(unsigned __int16 *)(*v4 + 24));
  unint64_t v20 = (unint64_t)*(unsigned __int16 *)(*v4 + 26) >> 4;
  unint64_t v21 = (char *)(v18 + *(unsigned __int16 *)(*v4 + 28));
  uint64_t v22 = *(unsigned __int16 *)(*v4 + 30) / 0x18u;
  int v23 = *((_DWORD *)v4 + 2);
  char v24 = *((unsigned char *)v4 + 12);
  uint64_t v25 = v4[4];
  uint64_t v26 = v4[2];
  char v27 = *((unsigned char *)v4 + 24);
  uint64_t v28 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v16 + 32), v17, v19, v20, v21, v22);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v28;
  *(_DWORD *)(a3 + 8) = v23;
  *(unsigned char *)(a3 + 12) = v24;
  *(_WORD *)(a3 + 13) = v31;
  *(unsigned char *)(a3 + 15) = v32;
  *(void *)(a3 + 16) = v26;
  *(unsigned char *)(a3 + 24) = v27;
  *(_DWORD *)(a3 + 25) = v30;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v30 + 3);
  *(void *)(a3 + 32) = v25;
  return result;
}

uint64_t sub_1B6781A04@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for ParticlePlaneCollider;
  *(void *)(inited + 40) = &off_1F0F89618;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6781C58@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Position;
  *(void *)(inited + 40) = &off_1F0FA6F58;
  *(void *)(inited + 48) = &type metadata for ParticleAge;
  *(void *)(inited + 56) = &off_1F0F563A8;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6781EAC@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Position;
  *(void *)(inited + 40) = &off_1F0FA6F58;
  *(void *)(inited + 48) = &type metadata for ParticleRibbonLength;
  *(void *)(inited + 56) = &off_1F0F81FF0;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6782100@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for VFXDrawCallHandler;
  *(void *)(inited + 40) = &off_1F0F7B538;
  *(void *)(inited + 48) = &type metadata for WorldAABB;
  *(void *)(inited + 56) = &off_1F0FAABA0;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6782354@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for KillShape;
  *(void *)(inited + 40) = &off_1F0FA89F0;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B67825A8@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for EmitterShape;
  *(void *)(inited + 40) = &off_1F0F59F10;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B67827FC@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Skeleton;
  *(void *)(inited + 40) = &off_1F0FA7780;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6782A50@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for ForceField;
  *(void *)(inited + 40) = &off_1F0F52620;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6782CA4@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for SubEntity;
  *(void *)(inited + 40) = &off_1F0FAA030;
  *(void *)(inited + 48) = &type metadata for Parent;
  *(void *)(inited + 56) = &off_1F0FA04A8;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6782EF8@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Material;
  *(void *)(inited + 40) = &off_1F0FA6678;
  *(void *)(inited + 48) = &type metadata for MaterialParameters;
  *(void *)(inited + 56) = &off_1F0F770C0;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B678314C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for VFXAssetTag;
  *(void *)(inited + 40) = &off_1F0F58BA8;
  *(void *)(inited + 48) = &type metadata for Name;
  *(void *)(inited + 56) = &off_1F0F9E6A8;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B67833A0@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for EmitterShape;
  *(void *)(inited + 40) = &off_1F0F59F10;
  *(void *)(inited + 48) = &type metadata for Scale;
  *(void *)(inited + 56) = &off_1F0F9F580;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B67835F4@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for ParticlePlaneCollider;
  *(void *)(inited + 40) = &off_1F0F89618;
  *(void *)(inited + 48) = &type metadata for Scale;
  *(void *)(inited + 56) = &off_1F0F9F580;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6783848@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for ParticleSphereCollider;
  *(void *)(inited + 40) = &off_1F0F8D980;
  *(void *)(inited + 48) = &type metadata for Scale;
  *(void *)(inited + 56) = &off_1F0F9F580;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6783A9C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for ParticleBoxCollider;
  *(void *)(inited + 40) = &off_1F0F7D3B0;
  *(void *)(inited + 48) = &type metadata for Scale;
  *(void *)(inited + 56) = &off_1F0F9F580;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6783CF0@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for ParticleCylinderCollider;
  *(void *)(inited + 40) = &off_1F0F92C48;
  *(void *)(inited + 48) = &type metadata for Scale;
  *(void *)(inited + 56) = &off_1F0F9F580;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6783F44@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = (uint64_t)*v3 + 41;
  uint64_t v10 = (*v3)[8];
  unint64_t v11 = v8[9];
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for ParticleMeshRenderer;
  *(void *)(inited + 40) = &off_1F0F81958;
  *(void *)(inited + 48) = &type metadata for Scale;
  *(void *)(inited + 56) = &off_1F0F9F580;
  if (v11 > 0xF)
  {
    uint64_t v29 = sub_1B62F79D4((char *)(v9 + v10), v11 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v29;
  }
  uint64_t v13 = v8[10];
  int64_t v14 = v8[11];
  sub_1B62D8374(0, &qword_1EB980B40, (uint64_t)&type metadata for AccessControl, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E76B30;
  *(unsigned char *)(v15 + 32) = a1;
  *(unsigned char *)(v15 + 33) = a2;
  if (v14)
  {
    uint64_t v29 = sub_1B62F7C94((char *)(v9 + v13), v14);
    sub_1B62F81D8(v15);
    uint64_t v15 = v29;
    unint64_t v16 = *(void *)(v29 + 16);
  }
  else
  {
    unint64_t v16 = 2;
  }
  uint64_t v17 = (uint64_t)*v4 + 41;
  uint64_t v18 = (char *)(v17 + (*v4)[12]);
  unint64_t v19 = (unint64_t)(*v4)[13] >> 4;
  unint64_t v20 = (char *)(v17 + (*v4)[14]);
  uint64_t v21 = (*v4)[15] / 0x18u;
  int v22 = *((_DWORD *)v4 + 2);
  char v23 = *((unsigned char *)v4 + 12);
  char v24 = v4[4];
  uint64_t v25 = v4[2];
  char v26 = *((unsigned char *)v4 + 24);
  uint64_t v27 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v15 + 32), v16, v18, v19, v20, v21);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(_DWORD *)(a3 + 8) = v22;
  *(unsigned char *)(a3 + 12) = v23;
  *(_WORD *)(a3 + 13) = v30;
  *(unsigned char *)(a3 + 15) = v31;
  *(void *)(a3 + 16) = v25;
  *(unsigned char *)(a3 + 24) = v26;
  *(_DWORD *)(a3 + 25) = v29;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)((char *)&v29 + 3);
  *(void *)(a3 + 32) = v24;
  return result;
}

uint64_t sub_1B6784198()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B67841E0()
{
  return swift_initClassMetadata2();
}

void sub_1B6784218()
{
  *(unsigned char *)(v0 + 16) = 1;
}

uint64_t sub_1B6784224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 16);
  int v10 = *(_DWORD *)(a1 + 52);
  uint64_t v11 = *(int *)(a1 + 48);
  swift_retain();
  if (v11 == -1 && v10 == 0)
  {
    sub_1B6786A24(a1);
    sub_1B6786A7C(a1);
LABEL_17:
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
    return result;
  }
  if ((v11 & 0x80000000) != 0 || *(void *)(v9 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v11) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v9 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  if (v10 != -1 && *(_DWORD *)(v13 + 12 * (int)v11 + 8) != v10) {
    goto LABEL_17;
  }
  uint64_t v15 = (int *)(v13 + 12 * (int)v11);
  uint64_t v16 = *(void *)(*(void *)(v9 + 136) + 8 * *v15 + 32);
  __int16 v17 = *((_WORD *)v15 + 2);
  sub_1B6786A24(a1);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  char v18 = sub_1B6BFF240(v16, v17, 656, v8 == 0, 0, a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1B6786A7C(a1);
  if ((v18 & 1) == 0) {
    goto LABEL_17;
  }

  return swift_release();
}

uint64_t type metadata accessor for GPUScriptRunner()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6784498(uint64_t a1, uint64_t a2)
{
  return sub_1B67861C4(a1, *(void *)(a2 + 80), *(void *)(a2 + 88));
}

const char *sub_1B67844A4()
{
  return "GPUScriptRunner";
}

void *sub_1B67844B8@<X0>(void *a1@<X8>)
{
  swift_unknownObjectWeakInit();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = MEMORY[0x1E4FBC870];
  a1[1] = MEMORY[0x1E4FBC860];
  a1[2] = v3;
  uint64_t result = sub_1B67F44E4(v2);
  a1[3] = result;
  return result;
}

uint64_t sub_1B6784500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v8 = (id)sub_1B64B20C4(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v9 = *(void *)((char *)(id)sub_1B6355ECC((uint64_t)v8)
                 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  int v10 = *(void **)(v9 + 176);
  swift_retain();
  swift_retain();
  sub_1B6309F80((uint64_t)&type metadata for TriggerListComponent, (uint64_t)&off_1F0F844E0, v10, v13);
  swift_release();
  swift_unknownObjectWeakAssign();
  uint64_t v11 = *(void **)(v9 + 176);
  swift_retain();
  sub_1B636E6E4((uint64_t)&type metadata for TriggerListComponent, (uint64_t)&off_1F0F844E0, v11, (void (*)(uint64_t))sub_1B6787878);
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return sub_1B6317E5C((uint64_t)v13);
}

uint64_t sub_1B6784684(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  id v12 = (id)sub_1B64B20C4(a1, a2, a3, (uint64_t)a4, a5, a6, a7, a8);
  uint64_t v13 = *(void *)((char *)(id)sub_1B6355ECC((uint64_t)v12)
                  + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
  int64_t v14 = *(void **)(v13 + 176);
  swift_retain();
  swift_retain();
  sub_1B6309F80((uint64_t)&type metadata for TriggerListComponent, (uint64_t)&off_1F0F844E0, v14, &v24);
  swift_release();
  v23[0] = sub_1B6E31768();
  v23[1] = a4;
  swift_unknownObjectWeakInit();
  *(double *)&v23[3] = a10;
  uint64_t v15 = v25;
  id v16 = a4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v15 = sub_1B68C2590(0, v15[2] + 1, 1, (unint64_t)v15);
  }
  unint64_t v18 = v15[2];
  unint64_t v17 = v15[3];
  if (v18 >= v17 >> 1) {
    uint64_t v15 = sub_1B68C2590(v17 > 1, v18 + 1, 1, (unint64_t)v15);
  }
  v15[2] = v18 + 1;
  unint64_t v19 = sub_1B6787078(v23, &v15[4 * v18 + 4]);
  uint64_t v25 = v15;
  unint64_t v20 = *(void **)(v13 + 176);
  MEMORY[0x1F4188790](v19, v21);
  swift_retain();
  sub_1B636E6E4((uint64_t)&type metadata for TriggerListComponent, (uint64_t)&off_1F0F844E0, v20, (void (*)(uint64_t))sub_1B6787878);
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return sub_1B6317E5C((uint64_t)&v24);
}

uint64_t sub_1B6784918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = *(void *)(a1 + 32);
  swift_retain();
  swift_retain();
  uint64_t v45 = v9;
  uint64_t v10 = sub_1B62DE2C8(v9);
  swift_release();
  unint64_t v11 = sub_1B6C316A0(v10, (uint64_t)&type metadata for IsSubEntityOf);
  char v13 = v12;
  swift_release();
  if (v13 & 1) != 0 || (uint64_t result = sub_1B69DE438(v11), (result))
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a3;
    *(void *)(v15 + 24) = a4;
    long long v16 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v15 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v15 + 48) = v16;
    *(void *)(v15 + 64) = *(void *)(a1 + 32);
    uint64_t v47 = (int *)type metadata accessor for TriggerScript(0);
    uint64_t v46 = v47[11];
    unint64_t v17 = *(void **)(a2 + v46);
    uint64_t v18 = *a5;
    uint64_t v19 = *(void *)(*a5 + 16);
    swift_retain();
    if (v19)
    {
      id v20 = v17;
      uint64_t v21 = sub_1B69FAD60(v20);
      if (v22)
      {
        char v23 = *(void **)(*(void *)(v18 + 56) + 8 * v21);
        swift_bridgeObjectRetain();

        uint64_t v24 = v11;
        if ((v13 & 1) == 0)
        {
LABEL_10:
          uint64_t v25 = *(void **)(a2 + v47[12]);
          if (v25)
          {
            id v26 = objc_msgSend(v25, sel_behaviorGraph);
            uint64_t v44 = (uint64_t)v23;
            if (v26
              && (uint64_t v27 = v26,
                  uint64_t v28 = (char *)objc_msgSend(v26, sel_entityObject),
                  v27,
                  v28))
            {
              unsigned int v29 = *(_DWORD *)&v28[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
              uint64_t v30 = *(unsigned int *)&v28[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4];
            }
            else
            {
              uint64_t v30 = 0;
              unsigned int v29 = -1;
            }
          }
          else
          {
            uint64_t v31 = *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
            if (!v31 || !*(void *)(v31 + 24))
            {
              swift_release();
              return swift_bridgeObjectRelease();
            }
            uint64_t v44 = (uint64_t)v23;
            uint64_t v53 = (uint64_t (*)(uint64_t))&type metadata for Entity;
            uint64_t v54 = &off_1F0F9FC58;
            v50[0] = v24;
            char v32 = sub_1B62C14BC(v50, (uint64_t)&type metadata for Entity);
            v49[3] = (uint64_t)&type metadata for Entity;
            v49[4] = (uint64_t)&off_1F0F9FC58;
            __int16 v33 = sub_1B62C12C4(v49);
            uint64_t v34 = *v32;
            swift_unknownObjectRetain();
            *__int16 v33 = sub_1B6A69610(v34);
            sub_1B62C5560(0, (unint64_t *)&qword_1E9DCFCD0);
            swift_dynamicCast();
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v50);
            unsigned int v29 = v55;
            uint64_t v30 = v56;
            swift_unknownObjectRelease();
          }
          float v35 = *(void **)(a2 + v46);
          if (v13)
          {
            swift_retain();
            id v37 = v35;
            unint64_t v11 = sub_1B62DE2C8(v45);
            swift_release();
          }
          else
          {
            id v36 = v35;
          }
          uint64_t v38 = (int *)(a2 + v47[13]);
          int v39 = *v38;
          LOBYTE(v38) = *((unsigned char *)v38 + 4);
          v50[0] = v35;
          v50[1] = v11;
          int v51 = v39;
          char v52 = (char)v38;
          uint64_t v53 = sub_1B6786F3C;
          uint64_t v54 = (_UNKNOWN **)v15;
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v49[0] = v44;
          sub_1B67E545C((uint64_t)v50, v29 | (unint64_t)(v30 << 32), isUniquelyReferenced_nonNull_native);
          uint64_t v41 = v49[0];
          swift_bridgeObjectRelease();
          id v42 = *(id *)(a2 + v46);
          char v43 = swift_isUniquelyReferenced_nonNull_native();
          v49[0] = *a5;
          *a5 = 0x8000000000000000;
          sub_1B67E5338(v41, v42, v43);
          *a5 = v49[0];
          swift_release();

          return swift_bridgeObjectRelease();
        }
LABEL_9:
        swift_retain();
        uint64_t v24 = sub_1B62DE2C8(v45);
        swift_release();
        goto LABEL_10;
      }
    }
    char v23 = sub_1B67F4FCC(MEMORY[0x1E4FBC860]);
    uint64_t v24 = v11;
    if ((v13 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1B6784D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 32);
  swift_retain();
  uint64_t v8 = sub_1B62DE2C8(v7);
  swift_release();
  swift_retain();
  uint64_t v9 = sub_1B62DE2C8(v7);
  swift_release();

  return sub_1B6903120(a2, a3, v8, v9, a1);
}

uint64_t sub_1B6784DA0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = MEMORY[0x1BA9B8670]();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    v52[0] = MEMORY[0x1E4FBC870];
    long long v9 = *(_OWORD *)(a3 + 16);
    v63[0] = *(_OWORD *)a3;
    v63[1] = v9;
    uint64_t v64 = *(void *)(a3 + 32);
    sub_1B62C9DA8(a2, (uint64_t)v63, 0x200000000, v53);
    sub_1B62CA27C((uint64_t)v53, (uint64_t)v54, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (*(void *)&v54[0])
    {
      if (v60 >= 1)
      {
        uint64_t v44 = v57;
        if (v57)
        {
          float v35 = v8;
          id v36 = a1;
          uint64_t v37 = a2;
          uint64_t v43 = v56;
          uint64_t v10 = v59;
          uint64_t v11 = v59[4];
          int v49 = *(unsigned __int8 *)(v58 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v12 = type metadata accessor for TriggerScript(0);
          sub_1B63396FC(0, &qword_1EB981070, type metadata accessor for TriggerScript, (uint64_t)&off_1EB984DC8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for ScriptRuntime);
          v61[0] = v54[0];
          v61[1] = v54[1];
          uint64_t v62 = v55;
          uint64_t v40 = (uint64_t)(v10 + 6);
          uint64_t v41 = v13;
          uint64_t v50 = v10;
          uint64_t v38 = v12 - 8;
          int v39 = v10 + 8;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v14 = 0;
          uint64_t v42 = v11;
          while (1)
          {
            uint64_t v15 = (unsigned int *)(v43 + 48 * v14);
            uint64_t v46 = *v15;
            uint64_t v47 = v6;
            uint64_t v45 = v15[1];
            long long v16 = (uint64_t *)*((void *)v15 + 2);
            uint64_t v48 = *((void *)v15 + 3);
            uint64_t v18 = *((void *)v15 + 4);
            uint64_t v17 = *((void *)v15 + 5);
            if (v49)
            {
              uint64_t v19 = *(os_unfair_lock_s **)(v17 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v19);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v11);
            sub_1B62CA27C(v40, (uint64_t)v65, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v20 = v50[4];
            uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v50[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
            v50[7] = v21;
            v39[1] = 0;
            v39[2] = 0;
            *int v39 = 0;
            swift_release();
            uint64_t v22 = sub_1B62C9024(v12, (uint64_t)&off_1F0F625B0, v16, v48, v18, (uint64_t)v50);
            sub_1B62C9024(v41, (uint64_t)&off_1F0F61BF0, v16, v48, v18, (uint64_t)v50);
            if (v16)
            {
              if (v18)
              {
                uint64_t v23 = *(void *)(*(void *)v38 + 72);
                uint64_t v6 = v47;
                do
                {
                  sub_1B67EA00C(v51, *(id *)(v22 + *(int *)(v12 + 44)));

                  v22 += v23;
                  --v18;
                }
                while (v18);
                goto LABEL_19;
              }
            }
            else if (v46 != v45)
            {
              uint64_t v24 = *(void *)(*(void *)v38 + 72);
              uint64_t v25 = v45 - v46;
              uint64_t v26 = v22 + v24 * v46;
              uint64_t v6 = v47;
              do
              {
                sub_1B67EA00C(v51, *(id *)(v26 + *(int *)(v12 + 44)));

                v26 += v24;
                --v25;
              }
              while (v25);
              goto LABEL_19;
            }
            uint64_t v6 = v47;
LABEL_19:
            sub_1B6345178(v50, (unsigned __int16 **)v61, (uint64_t)v65);
            sub_1B634507C((char *)v17);
            uint64_t v11 = v42;
            ecs_stack_allocator_pop_snapshot(v42);
            if (v49)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
            }
            swift_release();
            if (++v14 == v44)
            {
              sub_1B632F170(v53);
              uint64_t v27 = v52[0];
              a1 = v36;
              a2 = v37;
              uint64_t v8 = v35;
              goto LABEL_24;
            }
          }
        }
      }
      uint64_t v27 = MEMORY[0x1E4FBC870];
LABEL_24:
      uint64_t v28 = a1[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v29 = sub_1B678535C(v27, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v29)
      {

        sub_1B632F170(v53);
        swift_bridgeObjectRelease();
      }
      else
      {
        a1[2] = v27;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        type metadata accessor for VFXTriggerType(0);
        sub_1B63662BC(&qword_1E9DCD230, type metadata accessor for VFXTriggerType);
        uint64_t v30 = (void *)sub_1B6E31EC8();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_enableTriggerTypes_, v30);

        sub_1B632F170(v53);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
  }
  a1[1] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_1B6317ED4(a1, v52);
  char v32 = *(void **)(a2 + 176);
  MEMORY[0x1F4188790](v31, v33);
  swift_retain();
  sub_1B636E6E4((uint64_t)&type metadata for TriggerListComponent, (uint64_t)&off_1F0F844E0, v32, (void (*)(uint64_t))sub_1B6786F48);
  swift_release();
  return sub_1B6317E5C((uint64_t)v52);
}

ValueMetadata *type metadata accessor for IncommingTickedEventsComponent()
{
  return &type metadata for IncommingTickedEventsComponent;
}

uint64_t sub_1B678535C(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  uint64_t v37 = a2 + 56;
  uint64_t v33 = a1 + 56;
  int64_t v34 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v32 = a1 + 104;
  while (1)
  {
    if (v6)
    {
      uint64_t v35 = (v6 - 1) & v6;
      uint64_t v36 = v3;
      unint64_t v7 = __clz(__rbit64(v6)) | (v3 << 6);
      goto LABEL_25;
    }
    uint64_t v8 = v3 + 1;
    if (v3 + 1 >= v34) {
      return 1;
    }
    unint64_t v9 = *(void *)(v33 + 8 * v8);
    if (!v9)
    {
      uint64_t v8 = v3 + 2;
      if (v3 + 2 >= v34) {
        return 1;
      }
      unint64_t v9 = *(void *)(v33 + 8 * v8);
      if (!v9)
      {
        uint64_t v8 = v3 + 3;
        if (v3 + 3 >= v34) {
          return 1;
        }
        unint64_t v9 = *(void *)(v33 + 8 * v8);
        if (!v9)
        {
          uint64_t v8 = v3 + 4;
          if (v3 + 4 >= v34) {
            return 1;
          }
          unint64_t v9 = *(void *)(v33 + 8 * v8);
          if (!v9)
          {
            uint64_t v8 = v3 + 5;
            if (v3 + 5 >= v34) {
              return 1;
            }
            unint64_t v9 = *(void *)(v33 + 8 * v8);
            if (!v9) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    uint64_t v35 = (v9 - 1) & v9;
    uint64_t v36 = v8;
    unint64_t v7 = __clz(__rbit64(v9)) + (v8 << 6);
LABEL_25:
    uint64_t v10 = a1;
    uint64_t v11 = *(void **)(*(void *)(a1 + 48) + 8 * v7);
    sub_1B6E31798();
    sub_1B6E33918();
    id v12 = v11;
    sub_1B6E318B8();
    uint64_t v13 = sub_1B6E33988();
    swift_bridgeObjectRelease();
    uint64_t v14 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v15 = v13 & ~v14;
    if (((*(void *)(v37 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
      goto LABEL_40;
    }
    uint64_t v16 = sub_1B6E31798();
    uint64_t v18 = v17;
    if (v16 == sub_1B6E31798() && v18 == v19)
    {
LABEL_7:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v21 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        uint64_t v22 = ~v14;
        for (unint64_t i = v15 + 1; ; unint64_t i = v24 + 1)
        {
          uint64_t v24 = i & v22;
          if (((*(void *)(v37 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0) {
            break;
          }
          uint64_t v25 = sub_1B6E31798();
          uint64_t v27 = v26;
          if (v25 == sub_1B6E31798() && v27 == v28) {
            goto LABEL_7;
          }
          char v30 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v30) {
            goto LABEL_8;
          }
        }
LABEL_40:

        return 0;
      }
    }
LABEL_8:

    a1 = v10;
    unint64_t v6 = v35;
    uint64_t v3 = v36;
  }
  while (v34 - 6 != v3)
  {
    unint64_t v9 = *(void *)(v32 + 8 * v3++);
    if (v9)
    {
      uint64_t v8 = v3 + 5;
      goto LABEL_24;
    }
  }
  return 1;
}

uint64_t sub_1B6785688(uint64_t a1)
{
  return *(void *)(a1 + 24) >> 1;
}

void *sub_1B6785694(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D41FC(0, &qword_1EB980D70, (uint64_t (*)(uint64_t))type metadata accessor for vfx_memory_entry_t, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _OWORD v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 24);
  return v4;
}

void *sub_1B6785748(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D8374(0, &qword_1EB980AE0, (uint64_t)&type metadata for ChunksStorage, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _OWORD v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 40);
  return v4;
}

void *sub_1B67857EC(uint64_t a1, uint64_t a2)
{
  return sub_1B6308DF8(a1, a2, (unint64_t *)&unk_1EB980D80, MEMORY[0x1E4FBC150]);
}

void *sub_1B6785800(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D41FC(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _OWORD v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 72);
  return v4;
}

void *sub_1B67858B8(uint64_t a1, uint64_t a2)
{
  return sub_1B6308DF8(a1, a2, (unint64_t *)&unk_1EB980D30, MEMORY[0x1E4FBB470]);
}

void *sub_1B67858CC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D8374(0, &qword_1EB980C50, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = j__malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 25;
  }
  _OWORD v4[2] = a1;
  v4[3] = 2 * (v6 >> 3);
  return v4;
}

void *sub_1B6785964(uint64_t a1, uint64_t a2)
{
  return sub_1B6308D28(a1, a2, (unint64_t *)&qword_1EB980DA0, (uint64_t)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
}

void *sub_1B678598C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D41FC(0, (unint64_t *)&unk_1E9DCFCF0, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = j__malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  _OWORD v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

void *sub_1B6785A30(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B6786100(0, (unint64_t *)&qword_1EB980B50, (uint64_t)&qword_1EB97E820, (uint64_t)&type metadata for BufferArgument, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B62E9854);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _OWORD v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 48);
  return v4;
}

void *sub_1B6785AE0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D8374(0, (unint64_t *)&unk_1E9DCFD30, (uint64_t)&type metadata for ParticleFlockingSolverData.Cell, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = j__malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  _OWORD v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

void *sub_1B6785B78(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D8374(0, (unint64_t *)&unk_1E9DCFD00, (uint64_t)&type metadata for FlockingParticle, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _OWORD v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 112);
  return v4;
}

void *sub_1B6785C24(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D8374(0, &qword_1E9DCFD28, (uint64_t)&type metadata for Scheduler.Event, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _OWORD v4[2] = a1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 104);
  return v4;
}

void *sub_1B6785CD0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B62D41FC(0, &qword_1E9DCFD10, (uint64_t (*)(uint64_t))sub_1B6786F8C, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = j__malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 1;
  }
  _OWORD v4[2] = a1;
  v4[3] = 2 * (v6 >> 5);
  return v4;
}

void *sub_1B6785D74(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B6E32C18();
  if (!v6) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v7 = 0;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1BA9B4580](v7, a1);
    }
    else
    {
      uint64_t v8 = *(void **)(a1 + 8 * v7 + 32);
      swift_unknownObjectRetain();
    }
    id v9 = objc_msgSend(v8, sel_name);
    uint64_t v10 = sub_1B6E31798();
    uint64_t v12 = v11;

    if (v10 == a2 && v12 == a3) {
      break;
    }
    char v14 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_15;
    }
    swift_unknownObjectRelease();
    if (v6 == ++v7) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B6785F00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1B62D41FC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B6785F70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1B6786014()
{
  if (!qword_1EB97DDA0)
  {
    sub_1B62D8374(255, (unint64_t *)&unk_1EB97DD90, MEMORY[0x1E4FBB550], (uint64_t (*)(void, uint64_t))type metadata accessor for UnsafeArray);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97DDA0);
    }
  }
}

uint64_t sub_1B6786090(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1B62D8374(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1B6786100(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1B6E330A8();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1B678615C()
{
  unint64_t result = qword_1EB985240;
  if (!qword_1EB985240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB985240);
  }
  return result;
}

uint64_t sub_1B67861B0(uint64_t a1)
{
  return sub_1B6A51D04(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B67861C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (int *)type metadata accessor for ScriptRuntime();
  uint64_t v7 = *((void *)v6 - 1);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v56 - v9;
  uint64_t v65 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v11, v12);
  char v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = *(_OWORD *)(a1 + 96);
  long long v71 = *(_OWORD *)(a1 + 80);
  long long v72 = v15;
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v73 = *(_OWORD *)(a1 + 112);
  long long v74 = v16;
  long long v17 = *(_OWORD *)(a1 + 32);
  long long v67 = *(_OWORD *)(a1 + 16);
  long long v68 = v17;
  long long v18 = *(_OWORD *)(a1 + 64);
  long long v69 = *(_OWORD *)(a1 + 48);
  long long v70 = v18;
  uint64_t v19 = v67;
  int v20 = HIDWORD(v67);
  uint64_t v21 = SDWORD2(v67);
  swift_retain();
  if ((v21 != -1 || v20)
    && (v21 & 0x80000000) == 0
    && *(void *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v21
    && ((uint64_t v22 = *(void *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v20 == -1)
     || *(_DWORD *)(v22 + 12 * (int)v21 + 8) == v20)
    && (uint64_t v23 = (unsigned int *)(v22 + 12 * (int)v21),
        sub_1B62CD3E0(*(void *)(*(void *)(v19 + 136) + 8 * (int)*v23 + 32), (uint64_t)v6, *v23 | ((unint64_t)*((unsigned __int16 *)v23 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v23+ 2) << 32), v19, v66), (uint64_t v24 = v66[0]) != 0))
  {
    unint64_t v61 = 0;
    v63 = *(void (**)(char *, uint64_t, int *))(v7 + 16);
    v63(v10, v66[0], v6);
    uint64_t v64 = v24;
    sub_1B6CED494((uint64_t)v6, (uint64_t)v14);
    uint64_t v62 = *(void (**)(char *, int *))(v7 + 8);
    v62(v10, v6);
    if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3) != 1
      || (v63(v10, v64, v6), char v25 = sub_1B6CED4C8((uint64_t)v6), v62(v10, v6), (v25 & 1) == 0))
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v14, a2);
      return swift_release();
    }
    uint64_t v58 = (char *)(v64 + v6[15]);
    uint64_t v26 = *(void (**)(char *, int *))v58;
    unint64_t v27 = *(void *)(v64 + v6[11]);
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v28 = (void *)sub_1B6E32C18();
    }
    else
    {
      uint64_t v28 = *(void **)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v62 = v26;
    if (v28)
    {
      if ((v27 & 0xC000000000000001) != 0)
      {
        uint64_t v28 = (void *)MEMORY[0x1BA9B4580](0, v27);
      }
      else
      {
        uint64_t v28 = *(void **)(v27 + 32);
        swift_unknownObjectRetain();
      }
    }
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(v28, sel_name);
    swift_unknownObjectRelease();
    uint64_t v59 = sub_1B6E31798();
    uint64_t v31 = v30;

    uint64_t v32 = v64;
    uint64_t v33 = *(void *)(v64 + v6[9]);
    if (v33)
    {
      uint64_t v34 = *(void *)(v33 + 72);
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v34 = 0;
    }
    v63 = v31;
    uint64_t v36 = v6[12];
    uint64_t v37 = *(char **)(v32 + v36);
    uint64_t v60 = v34;
    if (v37)
    {
      uint64_t v38 = v37;
    }
    else
    {
      uint64_t v57 = *(void *)(*(void *)(a1 + 8) + 232);
      uint64_t v39 = sub_1B6A80E60();
      BOOL v40 = *(void *)a1 == 0;
      swift_unknownObjectRetain();
      uint64_t v41 = (uint64_t)v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6A5CBE4(v59, v41, v34, v39, v66);
      swift_unknownObjectRelease();
      sub_1B679C370((uint64_t)v66, 1, v40);
      uint64_t v43 = v42;
      sub_1B6786968((uint64_t)v66);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if (!v43)
      {
        (*(void (**)(char *, uint64_t))(v65 + 8))(v14, a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        return swift_unknownObjectRelease();
      }
      uint64_t v44 = *(void **)(v64 + v36);
      *(void *)(v64 + v36) = v43;
      uint64_t v38 = v43;

      uint64_t v37 = 0;
    }
    uint64_t v45 = v37;
    id v46 = objc_msgSend(v38, sel_bindings);
    sub_1B67869CC();
    unint64_t v47 = sub_1B6E31C28();

    uint64_t v48 = sub_1B6785D74(v47, 0x61765F7475706E69, 0xEC0000007365756CLL);
    swift_bridgeObjectRelease();
    if (v48)
    {
      unint64_t v61 = v69;
      uint64_t v50 = v64 + v6[14];
      uint64_t v64 = *(void *)v50;
      LODWORD(v57) = *(unsigned __int8 *)(v50 + 8);
      uint64_t v51 = *(void *)(*(void *)(v19 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                      + 8 * *(void *)thread_worker_index(&thread_worker_index, v49)
                      + 8);
      char v52 = *(void **)a1;
      uint64_t v56 = *(void *)(a1 + 8);
      uint64_t v53 = (uint64_t *)(v58 + 8);
      uint64_t v54 = v60;
      swift_unknownObjectRetain();
      uint64_t v58 = v38;
      uint64_t v55 = (uint64_t)v63;
      swift_bridgeObjectRetain();
      sub_1B6786A24(a1);
      sub_1B6A95F20((uint64_t)v62, v53, (uint64_t)v48, v61, v64, v57, v51, v56, v52, v19, a1, v59, v55, v54);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_1B6786A7C(a1);

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v14, a2);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1B6786968(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B67869CC()
{
  unint64_t result = qword_1EB97D7E0;
  if (!qword_1EB97D7E0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB97D7E0);
  }
  return result;
}

uint64_t sub_1B6786A24(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6786A7C(uint64_t a1)
{
  return a1;
}

void sub_1B6786AD0(void *a1, id a2)
{
  id v3 = objc_msgSend(a2, sel_worldRef);
  if (v3)
  {
    id v15 = v3;
    if (sub_1B64B2718((uint64_t)v3, 1, v4, v5, v6, v7, v8, v9))
    {
      uint64_t v10 = self;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v15;
      *(void *)(v11 + 24) = a1;
      aBlock[4] = sub_1B67870FC;
      aBlock[5] = v11;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1B69EFABC;
      aBlock[3] = &unk_1F0FB8110;
      uint64_t v12 = _Block_copy(aBlock);
      id v13 = v15;
      id v14 = a1;
      swift_release();
      objc_msgSend(v10, sel_postCommandWithContext_object_applyBlock_, v13, 0, v12);
      _Block_release(v12);
    }
    else
    {
    }
  }
}

void sub_1B6786C40(uint64_t a1, uint64_t a2, void *a3, void *a4, id a5)
{
  id v9 = objc_msgSend(a5, sel_worldRef);
  if (v9)
  {
    id v31 = v9;
    if (sub_1B64B2718((uint64_t)v9, 1, v10, v11, v12, v13, v14, v15))
    {
      objc_msgSend(a3, sel_locationInView_, a4);
      float v17 = v16;
      objc_msgSend(a4, sel_frame);
      float Width = CGRectGetWidth(v34);
      float v29 = v17 / Width;
      objc_msgSend(a3, sel_locationInView_, a4);
      float v20 = v19;
      objc_msgSend(a4, sel_frame);
      float Height = CGRectGetHeight(v35);
      *(float *)&uint64_t v22 = v29;
      *((float *)&v22 + 1) = 1.0 - (float)(v20 / Height);
      uint64_t v30 = v22;
      uint64_t v23 = self;
      uint64_t v24 = (void *)swift_allocObject();
      v24[2] = v31;
      v24[3] = a1;
      v24[4] = a2;
      v24[5] = a3;
      v24[6] = a4;
      v24[7] = v30;
      aBlock[4] = sub_1B6787064;
      aBlock[5] = v24;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1B69EFABC;
      aBlock[3] = &unk_1F0FB9FF0;
      char v25 = _Block_copy(aBlock);
      id v26 = v31;
      swift_bridgeObjectRetain();
      id v27 = a3;
      id v28 = a4;
      swift_release();
      objc_msgSend(v23, sel_postCommandWithContext_object_applyBlock_, v26, 0, v25);
      _Block_release(v25);
    }
    else
    {
    }
  }
}

uint64_t sub_1B6786E64(void *a1)
{
  return sub_1B6C439F0(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1B6786E80(void *a1)
{
  uint64_t v3 = **(void **)(v1 + 16);
  swift_bridgeObjectRelease();
  *a1 = v3;
  return swift_bridgeObjectRetain();
}

void *sub_1B6786ECC(uint64_t a1, void *a2)
{
  return a2;
}

uint64_t sub_1B6786F04()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B6786F3C(uint64_t a1)
{
  return sub_1B6784D04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

void *sub_1B6786F48(void *a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  sub_1B6317E5C((uint64_t)a1);
  return sub_1B6317ED4(v3, a1);
}

void sub_1B6786F8C()
{
  if (!qword_1E9DCFD18)
  {
    sub_1B639595C(255, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DCFD18);
    }
  }
}

uint64_t sub_1B6787014()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1B6787064(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1B6784684(*(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void **)(v9 + 40), *(void *)(v9 + 48), a7, a8, a9, a1, *(double *)(v9 + 56));
}

void *sub_1B6787078(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  *a2 = *a1;
  a2[1] = v4;
  swift_unknownObjectWeakTakeInit();
  a2[3] = a1[3];
  return a2;
}

uint64_t sub_1B67870BC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B67870FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B6784500(*(void *)(v8 + 16), *(void *)(v8 + 24), a3, a4, a5, a6, a7, a8);
}

uint64_t destroy for TriggerScriptRunnerSystem.TriggerParam(id *a1)
{
  return swift_release();
}

uint64_t initializeWithCopy for TriggerScriptRunnerSystem.TriggerParam(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  id v6 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TriggerScriptRunnerSystem.TriggerParam(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  int v7 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TriggerScriptRunnerSystem.TriggerParam(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Query(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Query(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TriggerScriptRunnerSystem.TriggerParam()
{
  return &type metadata for TriggerScriptRunnerSystem.TriggerParam;
}

uint64_t destroy for TriggerOSEvent(id *a1)
{
  return swift_unknownObjectWeakDestroy();
}

void *initializeWithCopy for TriggerOSEvent(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  id v6 = v4;
  id v7 = v5;
  swift_unknownObjectWeakCopyInit();
  a1[3] = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for TriggerOSEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void *initializeWithTake for TriggerOSEvent(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_unknownObjectWeakTakeInit();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for TriggerOSEvent(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  swift_unknownObjectWeakTakeAssign();
  *(void *)(a1 + 24) = a2[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for GraphScriptGroup(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GraphScriptGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TriggerOSEvent()
{
  return &type metadata for TriggerOSEvent;
}

ValueMetadata *type metadata accessor for TickedEventsComponent()
{
  return &type metadata for TickedEventsComponent;
}

void *assignWithCopy for TriggerListComponent(void *a1, void *a2)
{
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for TriggerListComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeInit();
  __n128 result = *(__n128 *)(a2 + 8);
  *(__n128 *)(v3 + 8) = result;
  *(void *)(v3 + 24) = *(void *)(a2 + 24);
  return result;
}

void *assignWithTake for TriggerListComponent(void *a1, void *a2)
{
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17CodeSourceSnippetC9ParameterVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17CodeSourceSnippetC9ParameterVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TriggerListComponent()
{
  return &type metadata for TriggerListComponent;
}

uint64_t initializeBufferWithCopyOfBuffer for TickedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for TickedEvent(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TickedEvent(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryManager.QueryInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryManager.QueryInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TickedEvent()
{
  return &type metadata for TickedEvent;
}

void *sub_1B6787878(void *a1)
{
  return sub_1B6786F48(a1);
}

uint64_t sub_1B67878A0(uint64_t result)
{
  uint64_t v2 = (void *)v1[17];
  if (v2)
  {
    uint64_t v3 = result;
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (v2[20]) {
      uint64_t v5 = v2[20];
    }
    else {
      uint64_t v5 = MEMORY[0x1E4FBC860];
    }
    v1[8] = v5;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v1[9] = v4;
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[21];
    uint64_t v42 = v1;
    if (v6)
    {
      uint64_t v7 = *(void *)(v6 + 16);
      if (v7)
      {
        uint64_t v37 = v3;
        uint64_t v39 = v2;
        uint64_t v8 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
        do
        {
          uint64_t v10 = *(v8 - 1);
          uint64_t v9 = *v8;
          swift_bridgeObjectRetain_n();
          sub_1B629C678(v10, v9, v43);
          uint64_t v11 = v43[0];
          uint64_t v12 = v43[1];
          uint64_t v13 = v43[2];
          uint64_t v14 = v43[3];
          uint64_t v15 = v43[4];
          double v16 = (void *)v1[9];
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v1[9] = v16;
          uint64_t v40 = v11;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            double v16 = sub_1B68C27FC(0, v16[2] + 1, 1, v16);
            v1[9] = v16;
          }
          unint64_t v19 = v16[2];
          unint64_t v18 = v16[3];
          if (v19 >= v18 >> 1)
          {
            double v16 = sub_1B68C27FC(v18 > 1, v19 + 1, 1, v16);
            v42[9] = v16;
          }
          v8 += 2;
          v16[2] = v19 + 1;
          float v20 = &v16[5 * v19];
          v20[4] = v40;
          v20[5] = v12;
          v20[6] = v13;
          v20[7] = v14;
          v20[8] = v15;
          swift_bridgeObjectRelease();
          --v7;
          uint64_t v1 = v42;
        }
        while (v7);
        swift_bridgeObjectRelease();
        uint64_t v3 = v37;
        uint64_t v2 = v39;
        uint64_t v4 = MEMORY[0x1E4FBC860];
      }
    }
    if (v2[25]) {
      uint64_t v21 = v2[25];
    }
    else {
      uint64_t v21 = v4;
    }
    v1[13] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v1[14] = v4;
    swift_bridgeObjectRelease();
    uint64_t v22 = v2[26];
    if (v22)
    {
      uint64_t v23 = *(void *)(v22 + 16);
      if (v23)
      {
        uint64_t v38 = v3;
        uint64_t v24 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
        do
        {
          uint64_t v26 = *(v24 - 1);
          uint64_t v25 = *v24;
          swift_bridgeObjectRetain_n();
          sub_1B629C678(v26, v25, v44);
          uint64_t v27 = v44[0];
          uint64_t v28 = v44[1];
          uint64_t v29 = v44[2];
          uint64_t v30 = v44[3];
          uint64_t v31 = v44[4];
          uint64_t v32 = (void *)v1[14];
          char v33 = swift_isUniquelyReferenced_nonNull_native();
          v1[14] = v32;
          uint64_t v41 = v29;
          if ((v33 & 1) == 0)
          {
            uint64_t v32 = sub_1B68C27FC(0, v32[2] + 1, 1, v32);
            v1[14] = v32;
          }
          unint64_t v35 = v32[2];
          unint64_t v34 = v32[3];
          if (v35 >= v34 >> 1)
          {
            uint64_t v32 = sub_1B68C27FC(v34 > 1, v35 + 1, 1, v32);
            v42[14] = v32;
          }
          v24 += 2;
          v32[2] = v35 + 1;
          uint64_t v36 = &v32[5 * v35];
          v36[4] = v27;
          v36[5] = v28;
          v36[6] = v41;
          v36[7] = v30;
          v36[8] = v31;
          swift_bridgeObjectRelease();
          --v23;
          uint64_t v1 = v42;
        }
        while (v23);
        swift_bridgeObjectRelease();
        uint64_t v3 = v38;
      }
    }
    sub_1B6BD28F8(v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6787BB4()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v1 + 296);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 288);
    uint64_t v4 = *(void **)(v0 + 64);
    if (v4[2]) {
      return sub_1B69EFB10(v3, v2, v4);
    }
    else {
      return sub_1B69EFB10(v3, v2, *(void **)(v0 + 40));
    }
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 72);
    if (*(void *)(v6 + 16) && (uint64_t v7 = *(void **)(v0 + 112), v7[2] == 1))
    {
      uint64_t v8 = v7[4];
      unint64_t v9 = v7[5];
      sub_1B629C9E8(v8, v9);
      swift_bridgeObjectRetain();
      sub_1B666BC3C(v8, v9);
      uint64_t v10 = sub_1B678BB20(v6);
      char v12 = v11;
      sub_1B666BC88(v8, v9);
      swift_bridgeObjectRelease();
      sub_1B666BC88(v8, v9);
      if (v12) {
        return -1;
      }
      else {
        return v10;
      }
    }
    else
    {
      return -1;
    }
  }
}

void *sub_1B6787CEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B678C410(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v11 - 8, v12);
  v88 = (char *)v86 - v13;
  uint64_t v90 = sub_1B6E30F48();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90, v14);
  v87 = (char *)v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v5 + 136) = a1;
  swift_retain();
  double v16 = sub_1B6BD73B0(a2, a3, a4);
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  uint64_t v19 = MEMORY[0x1E4FBB1A0];
  uint64_t v102 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v100 = v17;
  *((void *)&v100 + 1) = v18;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1B6A3C3B0(1701667182, 0xE400000000000000, (uint64_t)&v100);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v100);
  swift_release();
  if (a1[23]) {
    uint64_t v20 = a1[23];
  }
  else {
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  if (*(void *)(v20 + 16))
  {
    sub_1B62D83C0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t v102 = v21;
    *(void *)&long long v100 = v20;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6A3C3B0(0xD00000000000001CLL, 0x80000001B6F2F200, (uint64_t)&v100);
    uint64_t v22 = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v100);
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1B6A3C29C(0xD00000000000001CLL, 0x80000001B6F2F200);
  }
  (*(void (**)(uint64_t))(*v16 + 1408))(v22);
  swift_release();
  uint64_t v23 = a1[24];
  if (v23 && *(void *)(v23 + 16))
  {
    sub_1B62D83C0(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t v102 = v24;
    *(void *)&long long v100 = v23;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6A3C3B0(0xD000000000000015, 0x80000001B6F2F220, (uint64_t)&v100);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v100);
    swift_release();
  }
  sub_1B67878A0(a5);
  uint64_t v25 = v16[17];
  if (v25)
  {
    uint64_t v26 = *(void *)(v25 + 328);
    if (v26)
    {
      if (*(void *)(v26 + 16))
      {
        swift_retain();
        swift_retain();
        uint64_t v27 = swift_bridgeObjectRetain();
        uint64_t v28 = sub_1B678B77C(v27, (uint64_t)v16);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        v16[15] = v28;
        swift_bridgeObjectRelease();
        uint64_t v29 = a1[5];
        if (!v29) {
          goto LABEL_22;
        }
LABEL_16:
        uint64_t v30 = a1[4];
        uint64_t v31 = v16[2];
        if (v31 && *(void *)(v31 + 16))
        {
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B62B2CE0(0x6C6562616CLL, 0xE500000000000000);
          char v33 = v32;
          swift_release();
          swift_bridgeObjectRelease();
          if (v33)
          {
            swift_bridgeObjectRelease();
            goto LABEL_22;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v102 = v19;
        *(void *)&long long v100 = v30;
        *((void *)&v100 + 1) = v29;
        swift_retain();
        sub_1B6A3C3B0(0x6C6562616CLL, 0xE500000000000000, (uint64_t)&v100);
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v100);
        goto LABEL_22;
      }
    }
  }
  uint64_t v29 = a1[5];
  if (v29) {
    goto LABEL_16;
  }
LABEL_22:
  uint64_t v34 = v16[17];
  int v35 = *(unsigned __int8 *)(v34 + 80);
  if (v35 != 2)
  {
    if (v35) {
      goto LABEL_47;
    }
    goto LABEL_76;
  }
  v86[1] = 0;
  v93 = v16;
  v92 = a1;
  uint64_t v91 = a5;
  v86[3] = v86;
  uint64_t v36 = *(void *)(v34 + 216);
  uint64_t v37 = v36 + 64;
  uint64_t v38 = 1 << *(unsigned char *)(v36 + 32);
  uint64_t v39 = -1;
  if (v38 < 64) {
    uint64_t v39 = ~(-1 << v38);
  }
  unint64_t v40 = v39 & *(void *)(v36 + 64);
  int64_t v41 = (unint64_t)(v38 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v86[2] = v34;
  swift_retain();
  char v42 = 0;
  uint64_t v43 = 0;
  int64_t v95 = v41 - 6;
  uint64_t v94 = v36 + 112;
  while (v40)
  {
    unint64_t v44 = __clz(__rbit64(v40));
    v40 &= v40 - 1;
    unint64_t v45 = v44 | (v43 << 6);
LABEL_27:
    id v46 = (uint64_t *)(*(void *)(v36 + 56) + 16 * v45);
    uint64_t v48 = *v46;
    uint64_t v47 = v46[1];
    *(void *)&long long v100 = v48;
    *((void *)&v100 + 1) = v47;
    v99[0] = 0x65756C617640;
    v99[1] = 0xE600000000000000;
    sub_1B633AF88();
    if (sub_1B6E32678()) {
      char v42 = 1;
    }
  }
  uint64_t v49 = v43 + 1;
  if (v43 + 1 >= v41) {
    goto LABEL_46;
  }
  unint64_t v50 = *(void *)(v37 + 8 * v49);
  if (v50) {
    goto LABEL_43;
  }
  uint64_t v49 = v43 + 2;
  if (v43 + 2 >= v41) {
    goto LABEL_46;
  }
  unint64_t v50 = *(void *)(v37 + 8 * v49);
  if (v50) {
    goto LABEL_43;
  }
  uint64_t v49 = v43 + 3;
  if (v43 + 3 >= v41) {
    goto LABEL_46;
  }
  unint64_t v50 = *(void *)(v37 + 8 * v49);
  if (v50) {
    goto LABEL_43;
  }
  uint64_t v49 = v43 + 4;
  if (v43 + 4 >= v41) {
    goto LABEL_46;
  }
  unint64_t v50 = *(void *)(v37 + 8 * v49);
  if (v50) {
    goto LABEL_43;
  }
  uint64_t v49 = v43 + 5;
  if (v43 + 5 >= v41) {
    goto LABEL_46;
  }
  unint64_t v50 = *(void *)(v37 + 8 * v49);
  if (v50)
  {
LABEL_43:
    unint64_t v40 = (v50 - 1) & v50;
    unint64_t v45 = __clz(__rbit64(v50)) + (v49 << 6);
    uint64_t v43 = v49;
    goto LABEL_27;
  }
  while (v95 != v43)
  {
    unint64_t v50 = *(void *)(v94 + 8 * v43++);
    if (v50)
    {
      uint64_t v49 = v43 + 5;
      goto LABEL_43;
    }
  }
LABEL_46:
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  a5 = v91;
  a1 = v92;
  double v16 = v93;
  if (v42)
  {
LABEL_47:
    if (*(void *)(v16[11] + 16) == 1)
    {
      swift_retain();
      sub_1B6A3C4C4(0x65756C6176, 0xE500000000000000, &v100);
      swift_release();
      if (v102)
      {
        v92 = a1;
        sub_1B62B57A8(&v100, v98);
        v93 = v16;
        uint64_t v51 = (void *)v16[17];
        uint64_t v52 = v51[31];
        unint64_t v53 = v51[32];
        uint64_t v54 = v52;
        unint64_t v55 = v53;
        uint64_t v56 = v51[33];
        uint64_t v57 = v51[34];
        int64_t v58 = v51[35];
        if (v53 == 59)
        {
          uint64_t v59 = (void *)v93[11];
          uint64_t v91 = a5;
          uint64_t v61 = v59[4];
          unint64_t v60 = v59[5];
          uint64_t v62 = v59[6];
          uint64_t v57 = v59[7];
          int64_t v63 = v59[8];
          sub_1B629C9E8(v61, v60);
          uint64_t v56 = v62;
          unint64_t v55 = v60;
          uint64_t v54 = v61;
          int64_t v58 = v63;
        }
        *(void *)&long long v100 = v54;
        *((void *)&v100 + 1) = v55;
        uint64_t v91 = v56;
        uint64_t v101 = v56;
        uint64_t v102 = v57;
        uint64_t v94 = v57;
        int64_t v95 = v58;
        int64_t v103 = v58;
        sub_1B666BC3C(v52, v53);
        sub_1B6A4943C(v98, v99);
        if (sub_1B6A3D8B8() == 5001813 && v64 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_56;
        }
        char v65 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if (v65)
        {
LABEL_56:
          sub_1B629DCAC(v54, v55);
          sub_1B6646D94(v99, (void (*)(void, void, void, void, void))sub_1B629DCAC);
          sub_1B62CAAD8((uint64_t)v98, (uint64_t)&v96);
          uint64_t v66 = (uint64_t)v88;
          uint64_t v67 = v90;
          int v68 = swift_dynamicCast();
          uint64_t v69 = v89;
          long long v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56);
          double v16 = v93;
          if (v68)
          {
            v70(v66, 0, 1, v67);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v66, 1, v67) != 1)
            {
              long long v71 = v87;
              (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v87, v66, v67);
              swift_retain();
              uint64_t v72 = sub_1B6E30E18();
              uint64_t v97 = MEMORY[0x1E4FBB1A0];
              *(void *)&long long v96 = v72;
              *((void *)&v96 + 1) = v73;
              swift_bridgeObjectRetain();
              sub_1B6A3C3B0(0x65756C6176, 0xE500000000000000, (uint64_t)&v96);
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v96);
              swift_bridgeObjectRelease();
              swift_release();
              (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v67);
              _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v98);
              goto LABEL_76;
            }
          }
          else
          {
            v70(v66, 1, 1, v67);
          }
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v98);
          sub_1B678C3AC(v66, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
          goto LABEL_76;
        }
        uint64_t v74 = sub_1B6A3D8B8();
        double v16 = v93;
        if (v74 == 0x6156686374697753 && v75 == 0xEB0000000065756CLL)
        {
          swift_bridgeObjectRelease();
LABEL_65:
          sub_1B629DCAC(v54, v55);
          if (sub_1B6A3D8B8() == 7630409 && v77 == 0xE300000000000000)
          {
            swift_bridgeObjectRelease();
            sub_1B6646D94(v99, (void (*)(void, void, void, void, void))sub_1B629DCAC);
LABEL_75:
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v98);
            goto LABEL_76;
          }
          char v78 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          sub_1B6646D94(v99, (void (*)(void, void, void, void, void))sub_1B629DCAC);
          if (v78) {
            goto LABEL_75;
          }
        }
        else
        {
          char v76 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          if (v76) {
            goto LABEL_65;
          }
          uint64_t v79 = sub_1B6A3D8B8();
          uint64_t v81 = v80;
          if (v79 == sub_1B6A3D8B8() && v81 == v82)
          {
            swift_bridgeObjectRelease_n();
            sub_1B6646D94(v99, (void (*)(void, void, void, void, void))sub_1B629DCAC);
            sub_1B629DCAC(v54, v55);
            goto LABEL_75;
          }
          char v83 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B6646D94(v99, (void (*)(void, void, void, void, void))sub_1B629DCAC);
          sub_1B629DCAC(v54, v55);
          if (v83) {
            goto LABEL_75;
          }
        }
        long long v96 = xmmword_1E9DD3E90;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        uint64_t v84 = v96;
        uint64_t v97 = MEMORY[0x1E4FBB550];
        *(void *)&long long v96 = 1;
        sub_1B6A3C3B0(v84, *((uint64_t *)&v96 + 1), (uint64_t)&v96);
        swift_bridgeObjectRelease();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v96);
        swift_release();
        goto LABEL_75;
      }
      sub_1B678C33C((uint64_t)&v100, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
    }
  }
LABEL_76:
  sub_1B67889B4();
  swift_release();
  swift_release();
  swift_release();
  return v16;
}

uint64_t sub_1B67889B4()
{
  uint64_t v1 = v0;
  sub_1B678C410(0, (unint64_t *)&qword_1E9DD2C20, MEMORY[0x1E4FBC420]);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v87 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v6);
  unint64_t v93 = (unint64_t)&v82 - v7;
  uint64_t v90 = sub_1B6E339E8();
  uint64_t v8 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90, v9);
  uint64_t v91 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1[17];
  if (*(void *)(v11 + 160)) {
    uint64_t v12 = *(void *)(v11 + 160);
  }
  else {
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  if (*(void *)(v11 + 168)) {
    uint64_t v13 = *(void *)(v11 + 168);
  }
  else {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1B6AF64A4(v12, v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 16);
  swift_bridgeObjectRelease();
  if (!v15) {
    return sub_1B6BD38B0();
  }
  uint64_t v16 = *(void *)(v1[17] + 176);
  if (!v16 || (uint64_t v17 = *(void *)(v16 + 16)) == 0)
  {
LABEL_47:
    unint64_t v58 = v1[7];
    if (v58 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v59 = (_OWORD *)sub_1B6E32C18();
      if (v59) {
        goto LABEL_49;
      }
    }
    else
    {
      uint64_t v59 = *(_OWORD **)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v59)
      {
LABEL_49:
        unint64_t v60 = 0;
        unint64_t v93 = v58;
        unint64_t v94 = v58 & 0xC000000000000001;
        v92 = v59;
        do
        {
          if (v94)
          {
            uint64_t v61 = MEMORY[0x1BA9B4580](v60, v58);
          }
          else
          {
            uint64_t v61 = *(void *)(v58 + 8 * (void)v60 + 32);
            swift_retain();
          }
          uint64_t v62 = *(void *)(v61 + 32);
          *(void *)&long long v103 = *(void *)(v61 + 24);
          *((void *)&v103 + 1) = v62;
          swift_bridgeObjectRetain_n();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          long long v63 = v103;
          uint64_t v64 = v1[2];
          if (v64
            && *(void *)(v64 + 16)
            && (swift_bridgeObjectRetain(),
                sub_1B62B2CE0(v63, *((uint64_t *)&v63 + 1)),
                char v66 = v65,
                swift_bridgeObjectRelease(),
                (v66 & 1) != 0))
          {
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1B629C37C(v61 + 56, (uint64_t)v111);
            sub_1B6646D94(v111, (void (*)(void, void, void, void, void))sub_1B629C9E8);
            sub_1B6A3C6F4(v111, 1, (uint64_t)&v97);
            sub_1B6646D94(v111, (void (*)(void, void, void, void, void))sub_1B629DCAC);
            if (*((void *)&v97 + 1))
            {
              long long v105 = v99;
              long long v106 = v100;
              long long v107 = v101;
              uint64_t v108 = v102;
              long long v103 = v97;
              long long v104 = v98;
              if (!v1[2])
              {
                v1[2] = sub_1B67DD080(MEMORY[0x1E4FBC860]);
                swift_bridgeObjectRelease();
              }
              sub_1B66459A4((uint64_t)&v103, (uint64_t)&v97);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&long long v95 = v1[2];
              uint64_t v68 = v95;
              v1[2] = 0x8000000000000000;
              unint64_t v70 = sub_1B62B2CE0(v63, *((uint64_t *)&v63 + 1));
              char v71 = v69;
              uint64_t v72 = *(void *)(v68 + 16) + ((v69 & 1) == 0);
              if (*(void *)(v68 + 24) >= v72)
              {
                if (isUniquelyReferenced_nonNull_native)
                {
                  uint64_t v75 = (void *)v95;
                  if ((v69 & 1) == 0) {
                    goto LABEL_70;
                  }
                }
                else
                {
                  sub_1B6ACB8DC();
                  uint64_t v75 = (void *)v95;
                  if ((v71 & 1) == 0) {
                    goto LABEL_70;
                  }
                }
              }
              else
              {
                sub_1B6AB5694(v72, isUniquelyReferenced_nonNull_native);
                uint64_t v73 = sub_1B62B2CE0(v63, *((uint64_t *)&v63 + 1));
                if ((v71 & 1) != (v74 & 1)) {
                  goto LABEL_75;
                }
                unint64_t v70 = v73;
                uint64_t v75 = (void *)v95;
                if ((v71 & 1) == 0)
                {
LABEL_70:
                  v75[(v70 >> 6) + 8] |= 1 << v70;
                  *(_OWORD *)(v75[6] + 16 * v70) = v63;
                  uint64_t v76 = v75[7] + 88 * v70;
                  long long v77 = v98;
                  *(_OWORD *)uint64_t v76 = v97;
                  *(_OWORD *)(v76 + 16) = v77;
                  long long v78 = v99;
                  long long v79 = v100;
                  long long v80 = v101;
                  *(void *)(v76 + 80) = v102;
                  *(_OWORD *)(v76 + 48) = v79;
                  *(_OWORD *)(v76 + 64) = v80;
                  *(_OWORD *)(v76 + 32) = v78;
                  ++v75[2];
                  swift_bridgeObjectRetain();
                  goto LABEL_71;
                }
              }
              sub_1B678C464((uint64_t)&v97, v75[7] + 88 * v70);
LABEL_71:
              v1[2] = v75;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B666BD18((uint64_t)&v103);
              swift_release();
              uint64_t v59 = v92;
              unint64_t v58 = v93;
              goto LABEL_51;
            }
            swift_bridgeObjectRelease();
            sub_1B678C33C((uint64_t)&v97, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
            swift_release();
          }
LABEL_51:
          unint64_t v60 = (_OWORD *)((char *)v60 + 1);
        }
        while (v59 != v60);
      }
    }
    swift_bridgeObjectRelease_n();
    return sub_1B6BD38B0();
  }
  v92 = (long long *)((char *)&v106 + 8);
  int v18 = *MEMORY[0x1E4FBC410];
  int v85 = *MEMORY[0x1E4FBC408];
  int v86 = v18;
  int v84 = *MEMORY[0x1E4FBC400];
  uint64_t v89 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v83 = swift_bridgeObjectRetain();
  uint64_t v19 = v83 + 88;
  uint64_t v88 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v20 = v93;
  uint64_t v21 = v91;
  while (1)
  {
    uint64_t v28 = *(void *)(v19 - 48);
    *(void *)&long long v103 = *(void *)(v19 - 56);
    *((void *)&v103 + 1) = v28;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    long long v29 = v103;
    uint64_t v30 = v1[2];
    if (v30)
    {
      if (*(void *)(v30 + 16))
      {
        swift_bridgeObjectRetain();
        sub_1B62B2CE0(v29, *((uint64_t *)&v29 + 1));
        char v32 = v31;
        swift_bridgeObjectRelease();
        if (v32)
        {
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }
      }
    }
    sub_1B62B31E8(v19, (uint64_t)v111);
    if (!v1[2])
    {
      v1[2] = sub_1B67DD080(MEMORY[0x1E4FBC860]);
      swift_bridgeObjectRelease();
    }
    sub_1B62CAAD8((uint64_t)v111, (uint64_t)&v95);
    char v33 = v92;
    _OWORD *v92 = 0u;
    v33[1] = 0u;
    unint64_t v94 = v29;
    long long v103 = v29;
    sub_1B62CAAD8((uint64_t)&v95, (uint64_t)&v97);
    swift_bridgeObjectRetain_n();
    sub_1B6E339A8();
    sub_1B62C14BC(&v95, v96);
    DynamicType = (ValueMetadata *)swift_getDynamicType();
    sub_1B6E339C8();
    uint64_t v35 = sub_1B6E339B8();
    uint64_t v36 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v20, 1, v35) == 1) {
      goto LABEL_21;
    }
    uint64_t v42 = v20;
    uint64_t v43 = v87;
    sub_1B678C4C0(v42, v87);
    int v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 88))(v43, v35);
    if (v44 == v86)
    {
      if (DynamicType == &type metadata for Entity)
      {
        uint64_t v38 = 0;
        uint64_t v40 = 0;
        uint64_t v41 = 0;
        uint64_t v37 = 42;
      }
      else
      {
        sub_1B6A47F08((uint64_t)DynamicType, (uint64_t)v109);
        uint64_t v38 = v109[0];
        uint64_t v37 = v109[1];
        uint64_t v40 = v109[3];
        uint64_t v41 = v109[4];
      }
      (*v89)(v91, v90);
    }
    else if (v44 == v85)
    {
      (*v89)(v21, v90);
      uint64_t v38 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v37 = 42;
    }
    else
    {
      if (v44 != v84)
      {
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v87, v35);
LABEL_21:
        sub_1B6A47F08((uint64_t)DynamicType, (uint64_t)v110);
        uint64_t v38 = v110[0];
        uint64_t v37 = v110[1];
        uint64_t v39 = v21;
        uint64_t v40 = v110[3];
        uint64_t v41 = v110[4];
        (*v89)(v39, v90);
        goto LABEL_36;
      }
      (*v89)(v21, v90);
      sub_1B62C14BC(&v95, v96);
      uint64_t v45 = swift_getDynamicType();
      uint64_t v38 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v46 = swift_conformsToProtocol2() ? v45 : 0;
      uint64_t v37 = v46 ? 41 : 42;
    }
LABEL_36:
    sub_1B678C3AC(v93, (unint64_t *)&qword_1E9DD2C20, MEMORY[0x1E4FBC420]);
    *(void *)&long long v104 = v38;
    *((void *)&v104 + 1) = v37;
    *(void *)&long long v105 = v29;
    *((void *)&v105 + 1) = v40;
    *(void *)&long long v106 = v41;
    uint64_t v47 = v92;
    sub_1B678C33C((uint64_t)v92, (unint64_t *)&qword_1EB980F60, v88);
    sub_1B62B57A8(&v95, v47);
    long long v99 = v105;
    long long v100 = v106;
    long long v101 = v107;
    uint64_t v102 = v108;
    long long v97 = v103;
    long long v98 = v104;
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v103 = v1[2];
    uint64_t v49 = v103;
    v1[2] = 0x8000000000000000;
    uint64_t v50 = v94;
    unint64_t v52 = sub_1B62B2CE0(v94, *((uint64_t *)&v29 + 1));
    char v53 = v51;
    uint64_t v54 = *(void *)(v49 + 16) + ((v51 & 1) == 0);
    if (*(void *)(v49 + 24) < v54) {
      break;
    }
    if (v48)
    {
      uint64_t v57 = v103;
      if (v51) {
        goto LABEL_42;
      }
    }
    else
    {
      sub_1B6ACB8DC();
      uint64_t v57 = v103;
      if (v53)
      {
LABEL_42:
        sub_1B678C464((uint64_t)&v97, *(void *)(v57 + 56) + 88 * v52);
        goto LABEL_12;
      }
    }
LABEL_11:
    *(void *)(v29 + 8 * (v52 >> 6) + 64) |= 1 << v52;
    uint64_t v22 = (unint64_t *)(*(void *)(v29 + 48) + 16 * v52);
    *uint64_t v22 = v94;
    v22[1] = *((void *)&v29 + 1);
    uint64_t v23 = *(void *)(v29 + 56) + 88 * v52;
    long long v24 = v98;
    *(_OWORD *)uint64_t v23 = v97;
    *(_OWORD *)(v23 + 16) = v24;
    long long v25 = v99;
    long long v26 = v100;
    long long v27 = v101;
    *(void *)(v23 + 80) = v102;
    *(_OWORD *)(v23 + 48) = v26;
    *(_OWORD *)(v23 + 64) = v27;
    *(_OWORD *)(v23 + 32) = v25;
    ++*(void *)(v29 + 16);
    swift_bridgeObjectRetain();
LABEL_12:
    v1[2] = v57;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v111);
    uint64_t v20 = v93;
    uint64_t v21 = v91;
LABEL_13:
    v19 += 88;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
  }
  sub_1B6AB5694(v54, v29);
  uint64_t v55 = sub_1B62B2CE0(v50, *((uint64_t *)&v29 + 1));
  if ((v53 & 1) == (v56 & 1))
  {
    unint64_t v52 = v55;
    uint64_t v57 = v103;
    if (v53) {
      goto LABEL_42;
    }
    goto LABEL_11;
  }
LABEL_75:
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6789458()
{
  v0[7] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = v0[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6A2EE0C(v1, v2, (void (*)(uint64_t, uint64_t, void *))sub_1B678C408);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_1B67889B4();
}

uint64_t sub_1B67894F4(uint64_t a1)
{
  *(void *)(swift_allocObject() + 136) = 0;
  sub_1B62C1550(a1, (uint64_t)v4);
  uint64_t v2 = sub_1B6BD73F8(v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
  return v2;
}

unint64_t sub_1B6789570()
{
  return 0xD000000000000011;
}

uint64_t sub_1B6789654(uint64_t *a1)
{
  uint64_t v2 = v1;
  LODWORD(v3) = *(unsigned __int8 *)(*a1 + 24);
  if ((sub_1B6BD1094() & 1) == 0)
  {
    swift_retain();
    uint64_t v17 = sub_1B6AF6338(v3);
    uint64_t v19 = v18;
    swift_release();
    if (!v19)
    {
      uint64_t v41 = v1[4];
      uint64_t v170 = v1[3];
      *((void *)&v179 + 1) = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v178 = 0;
      *((void *)&v178 + 1) = 0xE000000000000000;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1B6A3C61C(1701667182, 0xE400000000000000, (uint64_t)&v178, v184);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v178);
      sub_1B62B57A8(v184, &v178);
      swift_dynamicCast();
      long long v164 = v174;
      uint64_t v168 = sub_1B6BD12F0();
      uint64_t v43 = v42;
      *(void *)&long long v178 = 0;
      *((void *)&v178 + 1) = 0xE000000000000000;
      sub_1B6E328C8();
      v184[0] = v178;
      swift_bridgeObjectRetain();
      sub_1B67BB63C();
      swift_bridgeObjectRelease();
      uint64_t v87 = sub_1B6E32518();
      uint64_t v89 = v88;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_1B6A04144();
      uint64_t v92 = v91;
      uint64_t v94 = v93;
      uint64_t v96 = v95;
      swift_bridgeObjectRelease();
      *(void *)&long long v174 = v87;
      *((void *)&v174 + 1) = v89;
      *(void *)&long long v178 = v90;
      *((void *)&v178 + 1) = v92;
      *(void *)&long long v179 = v94;
      *((void *)&v179 + 1) = v96;
      sub_1B678C2E8();
      swift_bridgeObjectRetain();
      sub_1B6E31928();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      *(void *)&long long v178 = v170;
      *((void *)&v178 + 1) = v41;
      long long v179 = v164;
      *(void *)&long long v180 = v168;
      *((void *)&v180 + 1) = v43;
      long long v181 = v184[0];
      sub_1B6AB44D0(&v178);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    uint64_t v20 = v1[17];
    uint64_t v21 = *(void *)(v20 + 160);
    int v171 = v3;
    if (v21)
    {
      uint64_t v22 = *(void *)(v21 + 16);
      if (v22)
      {
        uint64_t v23 = swift_bridgeObjectRetain() + 40;
        do
        {
          *(void *)&long long v178 = v17;
          *((void *)&v178 + 1) = v19;
          *(void *)&v184[0] = 36;
          *((void *)&v184[0] + 1) = 0xE100000000000000;
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v24 = sub_1B6BDE8D8();
          uint64_t v26 = v25;
          swift_bridgeObjectRelease();
          *(void *)&long long v174 = v24;
          *((void *)&v174 + 1) = v26;
          sub_1B633AF88();
          uint64_t v17 = sub_1B6E32618();
          uint64_t v28 = v27;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v19 = v28;
          v23 += 16;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
        uint64_t v20 = v2[17];
      }
    }
    uint64_t v29 = *(void *)(v20 + 200);
    if (v29)
    {
      uint64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        uint64_t v31 = swift_bridgeObjectRetain() + 40;
        do
        {
          *(void *)&long long v178 = v17;
          *((void *)&v178 + 1) = v19;
          *(void *)&v184[0] = 36;
          *((void *)&v184[0] + 1) = 0xE100000000000000;
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v32 = sub_1B6BDE8D8();
          uint64_t v34 = v33;
          swift_bridgeObjectRelease();
          *(void *)&long long v174 = v32;
          *((void *)&v174 + 1) = v34;
          sub_1B633AF88();
          uint64_t v17 = sub_1B6E32618();
          uint64_t v36 = v35;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v19 = v36;
          v31 += 16;
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease();
      }
    }
    *(void *)&long long v178 = v17;
    *((void *)&v178 + 1) = v19;
    strcpy((char *)v184, "@valueAsString");
    HIBYTE(v184[0]) = -18;
    sub_1B633AF88();
    if ((sub_1B6E32678() & 1) == 0)
    {
LABEL_46:
      int v78 = v171;
      *(void *)&long long v178 = v17;
      *((void *)&v178 + 1) = v19;
      *(void *)&v184[0] = 0x65756C617640;
      *((void *)&v184[0] + 1) = 0xE600000000000000;
      if (sub_1B6E32678())
      {
        uint64_t v79 = v2[2];
        swift_bridgeObjectRetain();
        uint64_t v80 = sub_1B62B2CE0(0x65756C6176, 0xE500000000000000);
        if (v81)
        {
          sub_1B66459A4(*(void *)(v79 + 56) + 88 * v80, (uint64_t)&v178);
        }
        else
        {
          uint64_t v183 = 0;
          long long v181 = 0u;
          long long v182 = 0u;
          long long v179 = 0u;
          long long v180 = 0u;
          long long v178 = 0u;
        }
        swift_bridgeObjectRelease();
        uint64_t v82 = *a1;
        if (*(void *)(v2[10] + 16))
        {
          uint64_t v83 = v2[12];
          swift_retain();
          if ((v83 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            MEMORY[0x1BA9B4580](0, v83);
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_retain();
          }
          swift_bridgeObjectRetain();
          uint64_t v84 = sub_1B6BDE8D8();
          uint64_t v86 = v85;
          swift_release();
          swift_bridgeObjectRelease();
          int v78 = v171;
        }
        else
        {
          swift_retain();
          uint64_t v84 = 0;
          uint64_t v86 = 0;
        }
        if (v78)
        {
          if (v78 == 1) {
            unint64_t v98 = sub_1B68A3024((uint64_t)&v178, v82);
          }
          else {
            unint64_t v98 = sub_1B6896AAC(&v178, v82, v84, v86, 2);
          }
        }
        else
        {
          unint64_t v98 = sub_1B689B45C(&v178, v82, v84, v86, 0);
        }
        unint64_t v166 = v98;
        uint64_t v102 = v99;
        uint64_t v103 = v100;
        uint64_t v104 = v101;
        swift_release();
        swift_bridgeObjectRelease();
        sub_1B666BD18((uint64_t)&v178);
        if (v104)
        {
          uint64_t v105 = *a1;
          *(void *)&long long v178 = 8201;
          *((void *)&v178 + 1) = 0xE200000000000000;
          *(void *)&v184[0] = v103;
          *((void *)&v184[0] + 1) = v104;
          *(void *)&long long v174 = 10;
          *((void *)&v174 + 1) = 0xE100000000000000;
          uint64_t v176 = 2314;
          unint64_t v177 = 0xE200000000000000;
          swift_retain();
          sub_1B6E32618();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          long long v106 = v178;
          long long v107 = *(void **)(v105 + 128);
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v105 + 128) = v107;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            long long v107 = sub_1B6335858(0, v107[2] + 1, 1, v107);
            *(void *)(v105 + 128) = v107;
          }
          unint64_t v110 = v107[2];
          unint64_t v109 = v107[3];
          if (v110 >= v109 >> 1)
          {
            long long v107 = sub_1B6335858(v109 > 1, v110 + 1, 1, v107);
            *(void *)(v105 + 128) = v107;
          }
          v107[2] = v110 + 1;
          *(_OWORD *)&v107[2 * v110 + 4] = v106;
          swift_release();
          swift_bridgeObjectRelease();
        }
        *(void *)&long long v178 = v17;
        *((void *)&v178 + 1) = v19;
        *(void *)&v184[0] = 0x65756C617640;
        *((void *)&v184[0] + 1) = 0xE600000000000000;
        *(void *)&long long v174 = v166;
        *((void *)&v174 + 1) = v102;
        uint64_t v17 = sub_1B6E32618();
        uint64_t v112 = v111;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v19 = v112;
      }
      *(void *)&long long v178 = v17;
      *((void *)&v178 + 1) = v19;
      *(void *)&v184[0] = 0x23504D455423;
      *((void *)&v184[0] + 1) = 0xE600000000000000;
      if (sub_1B6E32678())
      {
        *(void *)&long long v178 = v17;
        *((void *)&v178 + 1) = v19;
        *(void *)&v184[0] = 0x23504D455423;
        *((void *)&v184[0] + 1) = 0xE600000000000000;
        uint64_t v113 = v2[4];
        *(void *)&long long v174 = v2[3];
        *((void *)&v174 + 1) = v113;
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        uint64_t v114 = sub_1B6BDE8D8();
        uint64_t v116 = v115;
        swift_bridgeObjectRelease();
        *(void *)&long long v174 = v114;
        *((void *)&v174 + 1) = v116;
        uint64_t v17 = sub_1B6E32618();
        uint64_t v118 = v117;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v19 = v118;
      }
      *(void *)&long long v178 = v17;
      *((void *)&v178 + 1) = v19;
      *(void *)&v184[0] = 10;
      *((void *)&v184[0] + 1) = 0xE100000000000000;
      *(void *)&long long v174 = 2099466;
      *((void *)&v174 + 1) = 0xE300000000000000;
      uint64_t v119 = sub_1B6E32618();
      uint64_t v121 = v120;
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(v2[17] + 240) == 1)
      {
        *(void *)&long long v178 = v119;
        *((void *)&v178 + 1) = v121;
        *(void *)&v184[0] = 0xD000000000000011;
        *((void *)&v184[0] + 1) = 0x80000001B6F349F0;
        *(void *)&long long v174 = sub_1B6BD1C68();
        *((void *)&v174 + 1) = v122;
        uint64_t v119 = sub_1B6E32618();
        uint64_t v124 = v123;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v121 = v124;
      }
      *(void *)&long long v178 = v119;
      *((void *)&v178 + 1) = v121;
      *(void *)&v184[0] = 0x2344495523;
      *((void *)&v184[0] + 1) = 0xE500000000000000;
      uint64_t v125 = v2[4];
      *(void *)&long long v174 = v2[3];
      *((void *)&v174 + 1) = v125;
      uint64_t v126 = sub_1B6E32618();
      uint64_t v128 = v127;
      swift_bridgeObjectRelease();
      *(void *)&long long v178 = v126;
      *((void *)&v178 + 1) = v128;
      *(void *)&v184[0] = 8251;
      *((void *)&v184[0] + 1) = 0xE200000000000000;
      uint64_t v129 = sub_1B6E325F8();
      if (*(void *)(v129 + 16) < 2uLL)
      {
        swift_bridgeObjectRelease();
        uint64_t v138 = *a1;
        *(void *)&long long v178 = 8201;
        *((void *)&v178 + 1) = 0xE200000000000000;
        swift_retain();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        long long v139 = v178;
        v140 = *(void **)(v138 + 128);
        swift_bridgeObjectRetain();
        char v141 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v138 + 128) = v140;
        if ((v141 & 1) == 0)
        {
          v140 = sub_1B6335858(0, v140[2] + 1, 1, v140);
          *(void *)(v138 + 128) = v140;
        }
        unint64_t v143 = v140[2];
        unint64_t v142 = v140[3];
        if (v143 >= v142 >> 1)
        {
          v140 = sub_1B6335858(v142 > 1, v143 + 1, 1, v140);
          *(void *)(v138 + 128) = v140;
        }
        v140[2] = v143 + 1;
        *(_OWORD *)&v140[2 * v143 + 4] = v139;
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v130 = *(void *)(v129 + 16);
        if (v130)
        {
          uint64_t v131 = *a1;
          swift_bridgeObjectRetain();
          uint64_t v132 = v129 + 40;
          do
          {
            *(void *)&long long v178 = 8201;
            *((void *)&v178 + 1) = 0xE200000000000000;
            swift_bridgeObjectRetain();
            swift_retain();
            sub_1B6E31948();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            long long v133 = v178;
            v134 = *(void **)(v131 + 128);
            swift_bridgeObjectRetain();
            char v135 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v131 + 128) = v134;
            if ((v135 & 1) == 0)
            {
              v134 = sub_1B6335858(0, v134[2] + 1, 1, v134);
              *(void *)(v131 + 128) = v134;
            }
            unint64_t v137 = v134[2];
            unint64_t v136 = v134[3];
            if (v137 >= v136 >> 1)
            {
              v134 = sub_1B6335858(v136 > 1, v137 + 1, 1, v134);
              *(void *)(v131 + 128) = v134;
            }
            v132 += 16;
            v134[2] = v137 + 1;
            *(_OWORD *)&v134[2 * v137 + 4] = v133;
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            --v130;
          }
          while (v130);
          uint64_t result = swift_bridgeObjectRelease_n();
          goto LABEL_86;
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_86:
      uint64_t v144 = *(void *)(v2[17] + 88);
      if (!v144) {
        return result;
      }
      uint64_t v145 = *(void *)(v144 + 16);
      if (!v145) {
        return result;
      }
      uint64_t v146 = *a1;
      swift_bridgeObjectRetain_n();
      uint64_t v147 = 0;
      while (1)
      {
        v149 = (uint64_t *)(v144 + 32 + 16 * v147);
        uint64_t v151 = *v149;
        uint64_t v150 = v149[1];
        v152 = *(void **)(v146 + 104);
        uint64_t v153 = v152[2];
        if (!v153) {
          goto LABEL_98;
        }
        BOOL v154 = v152[4] == v151 && v152[5] == v150;
        if (!v154 && (sub_1B6E334B8() & 1) == 0)
        {
          if (v153 == 1) {
            goto LABEL_98;
          }
          BOOL v158 = v152[6] == v151 && v152[7] == v150;
          if (!v158 && (sub_1B6E334B8() & 1) == 0)
          {
            uint64_t v159 = v153 - 2;
            if (!v159) {
              goto LABEL_98;
            }
            if ((v152[8] != v151 || v152[9] != v150) && (sub_1B6E334B8() & 1) == 0) {
              break;
            }
          }
        }
LABEL_90:
        if (++v147 == v145) {
          return swift_bridgeObjectRelease_n();
        }
      }
      v160 = v152 + 11;
      while (--v159)
      {
        if (*(v160 - 1) != v151 || *v160 != v150)
        {
          v160 += 2;
          if ((sub_1B6E334B8() & 1) == 0) {
            continue;
          }
        }
        goto LABEL_90;
      }
LABEL_98:
      swift_bridgeObjectRetain_n();
      swift_retain();
      char v155 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v146 + 104) = v152;
      if ((v155 & 1) == 0)
      {
        v152 = sub_1B6335858(0, v152[2] + 1, 1, v152);
        *(void *)(v146 + 104) = v152;
      }
      unint64_t v157 = v152[2];
      unint64_t v156 = v152[3];
      if (v157 >= v156 >> 1)
      {
        v152 = sub_1B6335858(v156 > 1, v157 + 1, 1, v152);
        *(void *)(v146 + 104) = v152;
      }
      v152[2] = v157 + 1;
      v148 = &v152[2 * v157];
      v148[4] = v151;
      v148[5] = v150;
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_90;
    }
    uint64_t v37 = v2[2];
    uint64_t v38 = MEMORY[0x1E4FBC840];
    if (v37 && *(void *)(v37 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1B62B2CE0(0x65756C6176, 0xE500000000000000);
      if (v40)
      {
        sub_1B66459A4(*(void *)(v37 + 56) + 88 * v39, (uint64_t)&v178);
      }
      else
      {
        uint64_t v183 = 0;
        long long v181 = 0u;
        long long v182 = 0u;
        long long v179 = 0u;
        long long v180 = 0u;
        long long v178 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v178 + 1))
      {
        sub_1B62B31E8((uint64_t)&v181 + 8, (uint64_t)&v174);
        sub_1B666BD18((uint64_t)&v178);
        if (*((void *)&v175 + 1))
        {
          sub_1B62B57A8(&v174, v184);
          sub_1B62CAAD8((uint64_t)v184, (uint64_t)&v178);
          sub_1B6E31818();
          *(void *)&long long v178 = v17;
          *((void *)&v178 + 1) = v19;
          strcpy((char *)&v174, "@valueAsString");
          HIBYTE(v174) = -18;
          uint64_t v176 = 34;
          unint64_t v177 = 0xE100000000000000;
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          uint64_t v17 = sub_1B6E32618();
          uint64_t v163 = v162;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v184);
          uint64_t v19 = v163;
          goto LABEL_46;
        }
LABEL_45:
        sub_1B678C33C((uint64_t)&v174, (unint64_t *)&qword_1EB980F60, v38 + 8);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v183 = 0;
      long long v181 = 0u;
      long long v182 = 0u;
      long long v179 = 0u;
      long long v180 = 0u;
      long long v178 = 0u;
    }
    sub_1B678C33C((uint64_t)&v178, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
    long long v174 = 0u;
    long long v175 = 0u;
    goto LABEL_45;
  }
  uint64_t v4 = sub_1B6787BB4();
  uint64_t v5 = v1[8] + 16 * v4;
  uint64_t v8 = *(void *)(v5 + 32);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = (uint64_t *)(v5 + 32);
  uint64_t v9 = v1;
  uint64_t v10 = v1[5] + 16 * v4;
  uint64_t v11 = *(void *)(v10 + 32);
  uint64_t v12 = *(void *)(v10 + 40);
  uint64_t v13 = (uint64_t *)(v10 + 32);
  if (v8 == v11 && v6 == v12) {
    goto LABEL_8;
  }
  uint64_t v15 = v4;
  if (sub_1B6E334B8())
  {
    uint64_t v8 = *v13;
    uint64_t v6 = v13[1];
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v16 = v9;
    sub_1B6BD40DC(v8, v6);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  uint64_t v44 = *v7;
  uint64_t v45 = v7[1];
  uint64_t v16 = v9;
  uint64_t v46 = (void *)(v9[9] + 40 * v15);
  uint64_t v47 = v46[4];
  unint64_t v48 = v46[5];
  char v172 = v3;
  uint64_t v3 = v46[6];
  uint64_t v49 = v46[7];
  uint64_t v167 = v46[8];
  uint64_t v50 = v16[4];
  *(void *)&long long v178 = v16[3];
  *((void *)&v178 + 1) = v50;
  swift_bridgeObjectRetain();
  sub_1B629C9E8(v47, v48);
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  long long v51 = v178;
  _s11ParameterInCMa();
  uint64_t v52 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_bridgeObjectRelease();
  *(void *)(v52 + 24) = v44;
  *(void *)(v52 + 32) = v45;
  *(_OWORD *)(v52 + 40) = v51;
  *(void *)(v52 + 56) = v47;
  *(void *)(v52 + 64) = v48;
  *(void *)(v52 + 72) = v3;
  *(void *)(v52 + 80) = v49;
  LOBYTE(v3) = v172;
  *(void *)(v52 + 88) = v167;
LABEL_27:
  if (*(void *)(v16[10] + 16))
  {
    uint64_t v53 = v16[12];
    if ((v53 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      MEMORY[0x1BA9B4580](0, v53);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
  }
  if (!swift_weakLoadStrong())
  {
    swift_release();
LABEL_34:
    if (*(void *)(v16[10] + 16))
    {
      uint64_t v68 = v16[12];
      if ((v68 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v67 = MEMORY[0x1BA9B4580](0, v68);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v67 = *(void *)(v68 + 32);
        swift_retain();
      }
    }
    else
    {
      uint64_t v67 = 0;
    }
    goto LABEL_38;
  }
  uint64_t v54 = sub_1B6C2DB5C();
  char v56 = sub_1B6BD7088(v54, v55);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if ((v56 & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v57 = v16[13];
  unint64_t v58 = (void *)v16[14];
  uint64_t v59 = *(void *)(v57 + 32);
  uint64_t v60 = *(void *)(v57 + 40);
  uint64_t v61 = v58[4];
  unint64_t v62 = v58[5];
  unint64_t v165 = v62;
  uint64_t v63 = v58[6];
  uint64_t v64 = v58[7];
  char v173 = v3;
  uint64_t v3 = v58[8];
  uint64_t v65 = v16[4];
  *(void *)&long long v178 = v16[3];
  *((void *)&v178 + 1) = v65;
  swift_bridgeObjectRetain();
  sub_1B629C9E8(v61, v62);
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  long long v66 = v178;
  _s12ParameterOutCMa();
  uint64_t v67 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_bridgeObjectRelease();
  *(void *)(v67 + 24) = v59;
  *(void *)(v67 + 32) = v60;
  *(_OWORD *)(v67 + 40) = v66;
  *(void *)(v67 + 56) = v61;
  *(void *)(v67 + 64) = v165;
  *(void *)(v67 + 72) = v63;
  *(void *)(v67 + 80) = v64;
  *(void *)(v67 + 88) = v3;
  LOBYTE(v3) = v173;
LABEL_38:
  sub_1B629C37C(v67 + 56, (uint64_t)&v178);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B6646D94(&v178, (void (*)(void, void, void, void, void))sub_1B629C9E8);
  uint64_t v69 = sub_1B6BDE8D8();
  uint64_t v71 = v70;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B689554C((uint64_t)&v178, v69, v71, 0, v3);
  swift_bridgeObjectRelease();
  sub_1B6646D94(&v178, (void (*)(void, void, void, void, void))sub_1B629DCAC);
  uint64_t v72 = *a1;
  *(void *)&v184[0] = 8201;
  *((void *)&v184[0] + 1) = 0xE200000000000000;
  swift_retain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B6BDE8D8();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  long long v73 = v184[0];
  char v74 = *(void **)(v72 + 128);
  swift_bridgeObjectRetain();
  char v75 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v72 + 128) = v74;
  if ((v75 & 1) == 0)
  {
    char v74 = sub_1B6335858(0, v74[2] + 1, 1, v74);
    *(void *)(v72 + 128) = v74;
  }
  unint64_t v77 = v74[2];
  unint64_t v76 = v74[3];
  if (v77 >= v76 >> 1)
  {
    char v74 = sub_1B6335858(v76 > 1, v77 + 1, 1, v74);
    *(void *)(v72 + 128) = v74;
  }
  v74[2] = v77 + 1;
  *(_OWORD *)&v74[2 * v77 + 4] = v73;
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B678AC80(char a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(*(void *)(v1 + 136) + 224);
  if (!v3) {
    return 0;
  }
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x6C6174656DLL;
    }
    else {
      uint64_t v4 = 0x7466697773;
    }
    uint64_t v5 = 0xE500000000000000;
    if (!*(void *)(v3 + 16)) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v5 = 0xE100000000000000;
    uint64_t v4 = 99;
    if (!*(void *)(v3 + 16))
    {
LABEL_23:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_retain();
  sub_1B62B2CE0(v4, v5);
  if ((v7 & 1) == 0)
  {
    swift_release();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v2 + 136);
  uint64_t v9 = *(void *)(v8 + 160);
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = swift_bridgeObjectRetain() + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6BDE8D8();
        swift_bridgeObjectRelease();
        sub_1B633AF88();
        sub_1B6E32618();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 += 16;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(v2 + 136);
    }
  }
  uint64_t v12 = *(void *)(v8 + 200);
  if (v12)
  {
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      uint64_t v14 = swift_bridgeObjectRetain() + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6BDE8D8();
        swift_bridgeObjectRelease();
        sub_1B633AF88();
        sub_1B6E32618();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 += 16;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
    }
  }
  sub_1B633AF88();
  uint64_t v6 = sub_1B6E32618();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1B678B064(void *a1)
{
  uint64_t v3 = v1;
  sub_1B678C138(0, &qword_1E9DCFD68, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v12[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B678C028();
  sub_1B6E33A88();
  v13[0] = 0;
  sub_1B6E32F48();
  if (!v2)
  {
    v13[0] = 1;
    sub_1B6E32F48();
    v13[0] = 2;
    sub_1B6E32F48();
    sub_1B678C19C(v3 + 48, (uint64_t)v14);
    sub_1B678C19C((uint64_t)v14, (uint64_t)v13);
    v12[15] = 3;
    sub_1B678C07C();
    sub_1B678C21C(&qword_1E9DCFD70, (void (*)(void))sub_1B678C294);
    sub_1B6E32F38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B678B290(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB5AF0(*a1, *a2);
}

unint64_t sub_1B678B29C()
{
  unint64_t result = 0x4E7972617262696CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x4E74657070696E73;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x617461646174656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B678B33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B678B928(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B678B364(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1B678B370(uint64_t a1)
{
  unint64_t v2 = sub_1B678C028();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B678B3AC(uint64_t a1)
{
  unint64_t v2 = sub_1B678C028();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B678B3E8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B678BC7C(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1B678B438(void *a1)
{
  return sub_1B678B064(a1);
}

uint64_t sub_1B678B47C()
{
  return swift_release();
}

uint64_t sub_1B678B484()
{
  sub_1B6BD807C();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t _s11CodeSnippetCMa()
{
  return self;
}

uint64_t _s11CodeSnippetC17SerializationInfoVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s11CodeSnippetC17SerializationInfoVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s11CodeSnippetC17SerializationInfoVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11CodeSnippetC17SerializationInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ComputePipelineDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComputePipelineDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s11CodeSnippetC17SerializationInfoVMa()
{
  return &_s11CodeSnippetC17SerializationInfoVN;
}

unint64_t sub_1B678B758()
{
  return sub_1B6789570();
}

uint64_t sub_1B678B77C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1B6E32A48();
    uint64_t v12 = a2;
    uint64_t v6 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v7 = *(v6 - 2);
      uint64_t v9 = *(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v15 = *(v6 - 3);
      uint64_t v16 = *(void *)(v12 + 24);
      uint64_t v17 = *(void *)(v12 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1B629C678(v9, v8, (uint64_t *)v18);
      long long v13 = v18[1];
      long long v14 = v18[0];
      uint64_t v10 = v19;
      _s12ParameterOutCMa();
      uint64_t v11 = swift_allocObject();
      swift_weakInit();
      swift_weakAssign();
      *(void *)(v11 + 24) = v15;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v16;
      *(void *)(v11 + 48) = v17;
      *(_OWORD *)(v11 + 56) = v14;
      *(_OWORD *)(v11 + 72) = v13;
      *(void *)(v11 + 88) = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B6E32A08();
      sub_1B6E32A68();
      sub_1B6E32A78();
      sub_1B6E32A28();
      v6 += 4;
      --v3;
    }
    while (v3);
    return v20;
  }
  return result;
}

uint64_t sub_1B678B928(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4E7972617262696CLL && a2 == 0xEB00000000656D61;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E74657070696E73 && a2 == 0xEB00000000656D61 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B6F34A10 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xEC00000074636944)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1B678BB20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = 0;
  for (uint64_t i = a1 + 32; ; i += 40)
  {
    sub_1B629C37C(i, (uint64_t)v10);
    sub_1B6646D94(v10, (void (*)(void, void, void, void, void))sub_1B629C9E8);
    uint64_t v4 = sub_1B6A3D8B8();
    uint64_t v6 = v5;
    if (v4 == sub_1B6A3D8B8() && v6 == v7) {
      break;
    }
    char v8 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6646D94(v10, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    if (v8) {
      return v2;
    }
    if (v1 == ++v2) {
      return 0;
    }
  }
  swift_bridgeObjectRelease_n();
  sub_1B6646D94(v10, (void (*)(void, void, void, void, void))sub_1B629DCAC);
  return v2;
}

uint64_t sub_1B678BC7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B678C138(0, &qword_1E9DCFD58, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v21 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B678C028();
  sub_1B6E33A48();
  if (v2)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v30 = 0;
    uint64_t v11 = sub_1B6E32D98();
    uint64_t v13 = v12;
    uint64_t v24 = v11;
    char v29 = 1;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B6E32D98();
    uint64_t v25 = v15;
    uint64_t v22 = v14;
    char v28 = 2;
    swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    uint64_t v21 = sub_1B6E32D98();
    uint64_t v17 = v16;
    sub_1B678C07C();
    char v27 = 3;
    sub_1B678C21C(&qword_1EB9811C0, (void (*)(void))sub_1B678C0E4);
    swift_bridgeObjectRetain();
    sub_1B6E32D78();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t v18 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = v25;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v24;
    a2[1] = v13;
    a2[2] = v22;
    a2[3] = v19;
    a2[4] = v21;
    a2[5] = v17;
    a2[6] = v18;
  }
  return result;
}

unint64_t sub_1B678C028()
{
  unint64_t result = qword_1E9DCFD60;
  if (!qword_1E9DCFD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFD60);
  }
  return result;
}

void sub_1B678C07C()
{
  if (!qword_1EB9811B8)
  {
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9811B8);
    }
  }
}

unint64_t sub_1B678C0E4()
{
  unint64_t result = qword_1EB981178;
  if (!qword_1EB981178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB981178);
  }
  return result;
}

void sub_1B678C138(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B678C028();
    unint64_t v7 = a3(a1, &_s11CodeSnippetC17SerializationInfoV10CodingKeysON, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1B678C19C(uint64_t a1, uint64_t a2)
{
  sub_1B678C410(0, (unint64_t *)&qword_1EB9811C8, (void (*)(uint64_t))sub_1B678C07C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B678C21C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B678C07C();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B678C294()
{
  unint64_t result = qword_1E9DCFD78;
  if (!qword_1E9DCFD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFD78);
  }
  return result;
}

unint64_t sub_1B678C2E8()
{
  unint64_t result = qword_1EB9800B8;
  if (!qword_1EB9800B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9800B8);
  }
  return result;
}

uint64_t sub_1B678C33C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1B62D83C0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B678C3AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1B678C410(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B678C408(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1B6BD8A8C(a1, a2, a3, v3);
}

void sub_1B678C410(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E324B8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B678C464(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B678C4C0(uint64_t a1, uint64_t a2)
{
  sub_1B678C410(0, (unint64_t *)&qword_1E9DD2C20, MEMORY[0x1E4FBC420]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *_s11CodeSnippetC17SerializationInfoV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B678C60CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11CodeSnippetC17SerializationInfoV10CodingKeysOMa()
{
  return &_s11CodeSnippetC17SerializationInfoV10CodingKeysON;
}

unint64_t sub_1B678C648()
{
  unint64_t result = qword_1E9DCFD80;
  if (!qword_1E9DCFD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFD80);
  }
  return result;
}

unint64_t sub_1B678C6A0()
{
  unint64_t result = qword_1E9DCFD88;
  if (!qword_1E9DCFD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFD88);
  }
  return result;
}

unint64_t sub_1B678C6F8()
{
  unint64_t result = qword_1E9DCFD90;
  if (!qword_1E9DCFD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFD90);
  }
  return result;
}

uint64_t sub_1B678C74C(char a1)
{
  uint64_t v2 = v1;
  sub_1B62B5820();
  MEMORY[0x1F4188790](v4 - 8, v5);
  unint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = sub_1B6E31118();
  uint64_t v13 = *(void *)(v12 - 8);
  double v15 = MEMORY[0x1F4188790](v12, v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v17, v2 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v12, v15);
  }
  else {
    sub_1B6E31108();
  }
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC3VFX21AuthoringSubGraphNode_graph);
  swift_retain();
  swift_retain();
  uint64_t v19 = sub_1B682A12C(1);
  swift_release();
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v17, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  *(void *)(swift_allocObject() + OBJC_IVAR____TtC3VFX21AuthoringSubGraphNode_graph) = v18;
  sub_1B678FED0((uint64_t)v11, (uint64_t)v7);
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1B6CE3580(v19, v20, (uint64_t)v7, 0, 0xF000000000000000);
  swift_release();
  sub_1B678FF34((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  uint64_t v22 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
  unint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8);
  uint64_t v24 = (uint64_t *)(v21 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
  uint64_t v25 = *(void *)(v21 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
  unint64_t v26 = *(void *)(v21 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8);
  *uint64_t v24 = v22;
  v24[1] = v23;
  sub_1B6751DC0(v22, v23);
  sub_1B665D488(v25, v26);
  return v21;
}

uint64_t sub_1B678CA18()
{
  return swift_release();
}

uint64_t sub_1B678CA28()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1B665D488(*(void *)(v0 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData), *(void *)(v0 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B678CB1C()
{
  return type metadata accessor for AuthoringSubGraphNode(0);
}

uint64_t type metadata accessor for AuthoringSubGraphNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DCFD98);
}

uint64_t sub_1B678CB44()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B678CB8C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX12SubGraphNode_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B678CBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(void *)(v3 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph))
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    MEMORY[0x1F4188790](a1, a2);
    v18[6] = &v21;
    v18[7] = &v20;
    MEMORY[0x1F4188790](v5, v6);
    _OWORD v18[2] = sub_1B678FE98;
    v18[3] = v7;
    swift_retain();
    unint64_t v8 = MEMORY[0x1E4FBC860];
    v19[0] = sub_1B68C967C(MEMORY[0x1E4FBC860]);
    v19[1] = v9;
    sub_1B68B9930((uint64_t)sub_1B678FEB4, (uint64_t)v18, 1, 0x1000000000000000uLL, 0, v8, v19);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v12 = v20;
    uint64_t v11 = v21;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t v14 = &unk_1F0F5C7B0;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v17 = (void *)(v3 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature);
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature);
    uint64_t v12 = v17[1];
    uint64_t v14 = (void *)v17[2];
    uint64_t v13 = v17[3];
    uint64_t v15 = v17[4];
    uint64_t v16 = v17[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  *a3 = v11;
  a3[1] = v12;
  a3[2] = v14;
  a3[3] = v13;
  a3[4] = v15;
  a3[5] = v16;
  return result;
}

uint64_t sub_1B678CD84(uint64_t result, uint64_t *a2, void *a3)
{
  if (!*(void *)(*(void *)(result + 16) + 16))
  {
    uint64_t v3 = *(__objc2_class ***)(result + 8);
    if (*v3 == _TtC3VFX17SubGraphEnterNode)
    {
      uint64_t v5 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 8);
      uint64_t v6 = *(void *)(v5 + 16);
      sub_1B6E33638();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v7 = swift_dynamicCastClass();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = MEMORY[0x1E4FBC860];
      }
      uint64_t v8 = *(void *)(v7 + 16);
      swift_release();
      if (v8 == v6 - (v6 != 0))
      {
        uint64_t v9 = swift_dynamicCastClass();
        if (!v9)
        {
          swift_bridgeObjectRelease();
          uint64_t v9 = MEMORY[0x1E4FBC860];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = sub_1B69FF278(v5, v5 + 32, v6 != 0, (2 * v6) | 1);
      }
      swift_bridgeObjectRelease();
      *a2 = v9;
    }
    else
    {
      if (*v3 != _TtC3VFX18SubGraphReturnNode) {
        return result;
      }
      *a3 = *(__objc2_class **)((char *)v3 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature);
      swift_bridgeObjectRetain();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1B678CF04(void *a1)
{
  return sub_1B678CF40(a1);
}

void *sub_1B678CF40(void *a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC3VFX12SubGraphNode_name);
  *uint64_t v3 = 0x6870617247627553;
  v3[1] = 0xE800000000000000;
  uint64_t v4 = OBJC_IVAR____TtC3VFX12SubGraphNode_graph;
  *(void *)(v1 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph) = 0;
  uint64_t v5 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX12SubGraphNode_name + 8);
  *uint64_t v3 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX12SubGraphNode_name);
  v3[1] = v5;
  *(void *)(v1 + v4) = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph);
  uint64_t v6 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature + 8);
  uint64_t v7 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature + 16);
  uint64_t v8 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature + 24);
  uint64_t v9 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature + 32);
  uint64_t v10 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature + 40);
  uint64_t v11 = (void *)(v1 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature);
  *uint64_t v11 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature);
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v11[4] = v9;
  v11[5] = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_1B682A2AC(a1);
}

uint64_t sub_1B678D044(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BAE808(*a1, *a2);
}

uint64_t sub_1B678D050()
{
  return sub_1B6E33988();
}

uint64_t sub_1B678D15C()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B678D250()
{
  return sub_1B6E33988();
}

uint64_t sub_1B678D358@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B678F4E0();
  *a1 = result;
  return result;
}

void sub_1B678D388(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701667182;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000746ELL;
      uint64_t v3 = 0x756F437475706E69;
      goto LABEL_3;
    case 2:
      *a1 = 0x6F4374757074756FLL;
      a1[1] = 0xEB00000000746E75;
      break;
    case 3:
      *a1 = 0x6D614E7475706E69;
      a1[1] = 0xEA00000000007365;
      break;
    case 4:
      *a1 = 0x614E74757074756FLL;
      a1[1] = 0xEB0000000073656DLL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1B678D458()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x756F437475706E69;
      break;
    case 2:
      uint64_t result = 0x6F4374757074756FLL;
      break;
    case 3:
      uint64_t result = 0x6D614E7475706E69;
      break;
    case 4:
      uint64_t result = 0x614E74757074756FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B678D518@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B678F4E0();
  *a1 = result;
  return result;
}

void sub_1B678D540(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1B678D54C(uint64_t a1)
{
  unint64_t v2 = sub_1B678F308();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B678D588(uint64_t a1)
{
  unint64_t v2 = sub_1B678F308();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B678D5C4(void *a1)
{
  uint64_t v3 = v1;
  sub_1B678FB14(0, &qword_1E9DCFDF8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v13[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B678F308();
  sub_1B6E33A88();
  v13[15] = 0;
  swift_bridgeObjectRetain();
  sub_1B6E32F48();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature + 16);
    v14[0] = *(_OWORD *)(v3 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature);
    v14[1] = v12;
    long long v15 = *(_OWORD *)(v3 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature + 32);
    long long v16 = v14[0];
    long long v17 = v12;
    long long v18 = v15;
    sub_1B6399A44((uint64_t)&v16);
    sub_1B6399A44((uint64_t)&v16 + 8);
    sub_1B6399A44((uint64_t)&v17);
    sub_1B6399A44((uint64_t)&v17 + 8);
    sub_1B6399A44((uint64_t)&v18);
    sub_1B6399A44((uint64_t)&v18 + 8);
    sub_1B678F52C((uint64_t *)v14);
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
    sub_1B62D8C3C((uint64_t)&v16);
    sub_1B62D8C3C((uint64_t)&v16 + 8);
    sub_1B62D8C3C((uint64_t)&v17);
    sub_1B62D8C3C((uint64_t)&v17 + 8);
    sub_1B62D8C3C((uint64_t)&v18);
    return sub_1B62D8C3C((uint64_t)&v18 + 8);
  }
}

uint64_t sub_1B678D804(void *a1)
{
  uint64_t v3 = v1;
  sub_1B678FB14(0, &qword_1E9DCFDE8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v17[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B678F308();
  uint64_t result = sub_1B6E33A48();
  if (!v2)
  {
    v17[15] = 0;
    uint64_t v12 = sub_1B6E32D98();
    uint64_t v13 = (uint64_t *)(v3 + OBJC_IVAR____TtC3VFX12SubGraphNode_name);
    *uint64_t v13 = v12;
    v13[1] = v14;
    swift_bridgeObjectRelease();
    sub_1B678F7DC((uint64_t *)v18);
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
    long long v15 = (_OWORD *)(v3 + OBJC_IVAR____TtC3VFX12SubGraphNode__signature);
    long long v16 = v18[1];
    *long long v15 = v18[0];
    v15[1] = v16;
    v15[2] = v18[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B678DA00(char a1)
{
  uint64_t v36 = *v1;
  uint64_t v33 = v1;
  uint64_t v3 = v1[4];
  uint64_t v41 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1B6C3C3B8(0, 0, 0);
  uint64_t v4 = v3;
  uint64_t v5 = v41;
  uint64_t v6 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  uint64_t v34 = v6;
  if (v6)
  {
    uint64_t v7 = 0;
    char v8 = a1 & 1;
    do
    {
      unint64_t v9 = *(void *)(v4 + 32 + 8 * v7);
      uint64_t v39 = v7;
      unint64_t v40 = v9;
      sub_1B678DE44(&v39, v8, v36, v38);
      uint64_t v10 = v38[0];
      uint64_t v11 = v38[1];
      uint64_t v41 = v5;
      unint64_t v13 = *(void *)(v5 + 16);
      unint64_t v12 = *(void *)(v5 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1B6C3C3B8(v12 > 1, v13 + 1, 1);
        uint64_t v5 = v41;
      }
      ++v7;
      *(void *)(v5 + 16) = v13 + 1;
      uint64_t v14 = v5 + 16 * v13;
      *(void *)(v14 + 32) = v10;
      *(void *)(v14 + 40) = v11;
    }
    while (v34 != v7);
  }
  swift_bridgeObjectRelease_n();
  uint64_t v39 = v5;
  sub_1B6385F54(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6646D3C();
  uint64_t v35 = sub_1B6E31638();
  unint64_t v37 = v15;
  swift_release();
  int64_t v16 = *(void *)(v33[3] + 16);
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (v16)
  {
    v38[0] = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v16, 0);
    uint64_t v18 = 0;
    uint64_t v17 = v38[0];
    do
    {
      uint64_t v39 = 37;
      unint64_t v40 = 0xE100000000000000;
      uint64_t v41 = v18;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v19 = v39;
      unint64_t v20 = v40;
      v38[0] = v17;
      unint64_t v22 = *(void *)(v17 + 16);
      unint64_t v21 = *(void *)(v17 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1B6C3C3B8(v21 > 1, v22 + 1, 1);
        uint64_t v17 = v38[0];
      }
      ++v18;
      *(void *)(v17 + 16) = v22 + 1;
      uint64_t v23 = v17 + 16 * v22;
      *(void *)(v23 + 32) = v19;
      *(void *)(v23 + 40) = v20;
    }
    while (v16 != v18);
  }
  int64_t v24 = *(void *)(v33[4] + 16);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (v24)
  {
    v38[0] = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v24, 0);
    uint64_t v26 = 0;
    uint64_t v25 = v38[0];
    do
    {
      uint64_t v39 = 29221;
      unint64_t v40 = 0xE200000000000000;
      uint64_t v41 = v26;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v28 = v39;
      unint64_t v27 = v40;
      v38[0] = v25;
      unint64_t v30 = *(void *)(v25 + 16);
      unint64_t v29 = *(void *)(v25 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1B6C3C3B8(v29 > 1, v30 + 1, 1);
        uint64_t v25 = v38[0];
      }
      ++v26;
      *(void *)(v25 + 16) = v30 + 1;
      uint64_t v31 = v25 + 16 * v30;
      *(void *)(v31 + 32) = v28;
      *(void *)(v31 + 40) = v27;
    }
    while (v24 != v26);
  }
  uint64_t v39 = v17;
  sub_1B6641518(v25);
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  uint64_t v39 = 0xD000000000000011;
  unint64_t v40 = 0x80000001B6F34AF0;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v39 = v35;
  unint64_t v40 = v37;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v39;
}

uint64_t sub_1B678DE44@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v6 = a2 & 1;
  uint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  uint64_t v12 = 0x7225206F747561;
  v11[0] = v7;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B69AFB0C(v8, (uint64_t)v11, 0.0);
  sub_1B6C0AB84(v8, (uint64_t)v11, v6, a3, (uint64_t)&off_1F0F5C7E0);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v11);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E31948();
  uint64_t v10 = v13;
  *a4 = v12;
  a4[1] = v10;
  return result;
}

void sub_1B678DF64()
{
}

uint64_t sub_1B678DF94()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B678E034()
{
  swift_bridgeObjectRelease();
  sub_1B678FE58(*(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B678E124()
{
  return sub_1B678E4BC((void (*)(void))sub_1B678E034);
}

uint64_t sub_1B678E13C()
{
  return type metadata accessor for SubGraphNode(0);
}

uint64_t type metadata accessor for SubGraphNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DCFDA8);
}

uint64_t sub_1B678E164()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B678E1BC(void *a1)
{
  return sub_1B678D5C4(a1);
}

uint64_t sub_1B678E1D4(void *a1)
{
  return sub_1B678D804(a1);
}

uint64_t sub_1B678E1EC()
{
  return 3;
}

uint64_t sub_1B678E1F4(char a1)
{
  return sub_1B678DA00(a1 & 1);
}

uint64_t sub_1B678E1FC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 8);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 16);
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *sub_1B678E284(void *a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 8);
  uint64_t v4 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 16);
  uint64_t v5 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 24);
  uint64_t v6 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 32);
  uint64_t v7 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 40);
  uint64_t v8 = (void *)(v2 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature);
  *uint64_t v8 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature);
  v8[1] = v3;
  v8[2] = v4;
  v8[3] = v5;
  v8[4] = v6;
  v8[5] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1B682A2AC(a1);
}

void sub_1B678E32C()
{
}

uint64_t sub_1B678E35C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B678E3D8()
{
  swift_bridgeObjectRelease();
  sub_1B678FE58(*(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B678E4A4()
{
  return sub_1B678E4BC((void (*)(void))sub_1B678E3D8);
}

uint64_t sub_1B678E4BC(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t sub_1B678E518()
{
  return type metadata accessor for SubGraphEndpointNode(0);
}

uint64_t type metadata accessor for SubGraphEndpointNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DCFDB8);
}

uint64_t sub_1B678E540()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B678E584()
{
  return 0x7265746E45;
}

void *sub_1B678E598(uint64_t *a1)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (*(void *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v23 = *a1;
    int64_t v6 = *(void *)(v23 + 16);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    if (v6)
    {
      uint64_t v22 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B6C3C694(0, v6, 0);
      uint64_t v5 = v22;
      unint64_t v7 = *(void *)(v22 + 16);
      uint64_t v8 = 16 * v7 + 32;
      do
      {
        uint64_t v22 = v5;
        unint64_t v9 = *(void *)(v5 + 24);
        unint64_t v10 = v7 + 1;
        if (v7 >= v9 >> 1)
        {
          sub_1B6C3C694(v9 > 1, v7 + 1, 1);
          uint64_t v5 = v22;
        }
        *(void *)(v5 + 16) = v10;
        uint64_t v11 = (void *)(v5 + v8);
        *uint64_t v11 = 0;
        v11[1] = 0;
        v8 += 16;
        unint64_t v7 = v10;
        --v6;
      }
      while (v6);
      sub_1B62D8C3C((uint64_t)&v23);
    }
  }
  sub_1B6385F54(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1B6E77050;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0x8000000000000008;
  *(void *)(v12 + 32) = v13 | 0x6000000000000000;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B6E77050;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0x8000000000000008;
  *(void *)(v14 + 32) = v15 | 0x6000000000000000;
  uint64_t v16 = *a1;
  uint64_t v22 = v14;
  swift_bridgeObjectRetain();
  sub_1B6641AB8(v16);
  uint64_t v22 = a1[1];
  sub_1B62D8C3C((uint64_t)&v22);
  uint64_t v21 = a1[2];
  sub_1B62D8C3C((uint64_t)&v21);
  swift_bridgeObjectRelease();
  uint64_t v20 = a1[4];
  sub_1B62D8C3C((uint64_t)&v20);
  uint64_t v19 = a1[5];
  sub_1B62D8C3C((uint64_t)&v19);
  swift_bridgeObjectRelease();
  sub_1B6641A90(v5);
  uint64_t v17 = (void *)((char *)v1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature);
  *uint64_t v17 = v12;
  v17[1] = v14;
  v17[2] = (uint64_t)&unk_1F0F74930;
  v17[3] = v4;
  v17[4] = (uint64_t)&unk_1F0F74960;
  v17[5] = v4;
  v1[3] = 0;
  v1[4] = 0;
  v1[2] = v4;
  sub_1B6E31108();
  return v1;
}

uint64_t sub_1B678E82C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 8);
  uint64_t v5 = *(void *)(v4 + 16);
  sub_1B6E33638();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = *(void *)(v6 + 16);
  swift_release();
  if (v7 == v5 - (v5 != 0))
  {
    uint64_t v8 = swift_dynamicCastClass();
    if (!v8)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1B69FF278(v4, v4 + 32, v5 != 0, (2 * v5) | 1);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = *(void *)(v11 + 16);
  swift_release();
  if (v12 == v10 - (v10 != 0))
  {
    uint64_t v13 = swift_dynamicCastClass();
    if (!v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1B69FF28C(v9, v9 + 32, v10 != 0, (2 * v10) | 1);
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  *a1 = v8;
  a1[1] = v15;
  a1[2] = (uint64_t)&unk_1F0F74900;
  a1[3] = v13;
  a1[4] = v15;
  a1[5] = v15;
  return result;
}

uint64_t sub_1B678E9E8(void *a1)
{
  sub_1B678FB14(0, &qword_1E9DCFDF8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v11 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B678F308();
  sub_1B6E33A88();
  sub_1B678E82C(&v11);
  sub_1B678F52C(&v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (v1)
  {
    uint64_t v28 = v11;
    sub_1B62D8C3C((uint64_t)&v28);
    uint64_t v27 = v12;
    sub_1B62D8C3C((uint64_t)&v27);
    uint64_t v26 = v13;
    sub_1B62D8C3C((uint64_t)&v26);
    uint64_t v25 = v14;
    sub_1B62D8C3C((uint64_t)&v25);
    uint64_t v24 = v15;
    sub_1B62D8C3C((uint64_t)&v24);
    uint64_t v23 = v16;
    uint64_t v9 = &v23;
  }
  else
  {
    uint64_t v22 = v11;
    sub_1B62D8C3C((uint64_t)&v22);
    uint64_t v21 = v12;
    sub_1B62D8C3C((uint64_t)&v21);
    uint64_t v20 = v13;
    sub_1B62D8C3C((uint64_t)&v20);
    uint64_t v19 = v14;
    sub_1B62D8C3C((uint64_t)&v19);
    uint64_t v18 = v15;
    sub_1B62D8C3C((uint64_t)&v18);
    uint64_t v17 = v16;
    uint64_t v9 = &v17;
  }
  return sub_1B62D8C3C((uint64_t)v9);
}

uint64_t sub_1B678EC14()
{
  return type metadata accessor for SubGraphEnterNode(0);
}

uint64_t type metadata accessor for SubGraphEnterNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DCFDC8);
}

uint64_t sub_1B678EC40(void *a1)
{
  return sub_1B678E9E8(a1);
}

uint64_t sub_1B678EC58(void *a1)
{
  return sub_1B678EF94(a1, (void (*)(uint64_t *))sub_1B678E598);
}

uint64_t sub_1B678EC84()
{
  return 0;
}

uint64_t sub_1B678EC90()
{
  return 0x6E7275746552;
}

void *sub_1B678ECA4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  sub_1B6385F54(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0x8000000000000008;
  *(void *)(v4 + 32) = v5 | 0x6000000000000000;
  uint64_t v6 = a1[4];
  uint64_t v13 = *a1;
  swift_bridgeObjectRetain();
  sub_1B62D8C3C((uint64_t)&v13);
  uint64_t v12 = a1[2];
  sub_1B62D8C3C((uint64_t)&v12);
  uint64_t v11 = a1[3];
  sub_1B62D8C3C((uint64_t)&v11);
  swift_bridgeObjectRelease();
  uint64_t v10 = a1[5];
  sub_1B62D8C3C((uint64_t)&v10);
  uint64_t v7 = (void *)((char *)v1 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature);
  *uint64_t v7 = v3;
  v7[1] = v4;
  v7[2] = &unk_1F0F7AA90;
  v7[3] = v6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  v7[4] = MEMORY[0x1E4FBC860];
  v7[5] = v8;
  v1[2] = v8;
  v1[3] = 0;
  v1[4] = 0;
  sub_1B6E31108();
  return v1;
}

uint64_t sub_1B678EDEC(void *a1)
{
  uint64_t v2 = v1;
  sub_1B678FB14(0, &qword_1E9DCFDF8, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v14 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B678F308();
  sub_1B6E33A88();
  uint64_t v10 = v2 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature;
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature);
  uint64_t v12 = *(void *)(v10 + 24);
  v14[0] = MEMORY[0x1E4FBC860];
  v14[1] = v11;
  _OWORD v14[2] = (uint64_t)&unk_1F0F7AAC0;
  v14[3] = MEMORY[0x1E4FBC860];
  v14[4] = v12;
  v14[5] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B678F52C(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B678EF94(void *a1, void (*a2)(uint64_t *))
{
  uint64_t v25 = a2;
  uint64_t v4 = v2;
  sub_1B678FB14(0, &qword_1E9DCFDE8, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v11 = (char *)v23 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B678F308();
  uint64_t result = sub_1B6E33A48();
  if (!v3)
  {
    uint64_t v13 = v25;
    sub_1B678F7DC(v24);
    uint64_t v14 = swift_allocObject();
    v13(v24);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature);
    uint64_t v16 = *(void *)(v14 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 8);
    uint64_t v17 = *(void *)(v14 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 16);
    uint64_t v18 = *(void *)(v14 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 24);
    uint64_t v19 = *(void *)(v14 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 32);
    uint64_t v20 = *(void *)(v14 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v21 = (void *)(v4 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature);
    uint64_t v25 = *(void (**)(uint64_t *))(v4 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature);
    uint64_t v22 = *(void *)(v4 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 8);
    v23[0] = *(void *)(v4 + OBJC_IVAR____TtC3VFX20SubGraphEndpointNode__signature + 16);
    v23[1] = v22;
    *uint64_t v21 = v15;
    v21[1] = v16;
    v21[2] = v17;
    v21[3] = v18;
    v21[4] = v19;
    v21[5] = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B678F208()
{
  sub_1B678E3D8();

  return swift_deallocClassInstance();
}

uint64_t sub_1B678F260()
{
  return type metadata accessor for SubGraphReturnNode(0);
}

uint64_t type metadata accessor for SubGraphReturnNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DCFDD8);
}

uint64_t sub_1B678F288()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B678F2C0(void *a1)
{
  return sub_1B678EDEC(a1);
}

uint64_t sub_1B678F2D8(void *a1)
{
  return sub_1B678EF94(a1, (void (*)(uint64_t *))sub_1B678ECA4);
}

unint64_t sub_1B678F308()
{
  unint64_t result = qword_1E9DCFDF0;
  if (!qword_1E9DCFDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFDF0);
  }
  return result;
}

uint64_t sub_1B678F35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (a2 != a1)
  {
    uint64_t v6 = a1;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, (a2 - a1) & ~((a2 - a1) >> 63), 0);
    uint64_t v3 = v18;
    uint64_t v7 = *(void *)(a3 + 16);
    uint64_t v8 = (void *)(a3 + 16 * v6 + 40);
    do
    {
      uint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      if ((v6 & 0x8000000000000000) == 0 && v6 < v7)
      {
        if (*v8)
        {
          uint64_t v11 = v7;
          sub_1B633AF88();
          swift_bridgeObjectRetain();
          uint64_t v12 = sub_1B6E325F8();
          uint64_t v9 = *(void *)(v12 + 32);
          unint64_t v10 = *(void *)(v12 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v7 = v11;
        }
        else
        {
          uint64_t v9 = 0;
        }
      }
      uint64_t v19 = v3;
      unint64_t v14 = *(void *)(v3 + 16);
      unint64_t v13 = *(void *)(v3 + 24);
      if (v14 >= v13 >> 1)
      {
        uint64_t v16 = v7;
        sub_1B6C3C3B8(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v16;
        uint64_t v3 = v19;
      }
      *(void *)(v3 + 16) = v14 + 1;
      uint64_t v15 = v3 + 16 * v14;
      *(void *)(v15 + 32) = v9;
      *(void *)(v15 + 40) = v10;
      ++v6;
      v8 += 2;
    }
    while (a2 != v6);
  }
  return v3;
}

uint64_t sub_1B678F4E0()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B678F52C(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v14 = *a1;
  uint64_t v3 = *(void *)(v14 + 16);
  uint64_t v4 = a1[3];
  uint64_t v12 = a1[2];
  uint64_t v13 = v2;
  uint64_t v5 = a1[5];
  uint64_t v10 = a1[4];
  uint64_t v6 = v10;
  uint64_t v11 = v4;
  uint64_t v9 = v5;
  sub_1B6399A44((uint64_t)&v14);
  sub_1B6399A44((uint64_t)&v13);
  sub_1B6399A44((uint64_t)&v12);
  sub_1B6399A44((uint64_t)&v11);
  sub_1B6399A44((uint64_t)&v10);
  sub_1B6399A44((uint64_t)&v9);
  sub_1B678F35C(0, v3, v4);
  sub_1B62D8C3C((uint64_t)&v14);
  sub_1B62D8C3C((uint64_t)&v13);
  sub_1B62D8C3C((uint64_t)&v12);
  sub_1B62D8C3C((uint64_t)&v11);
  sub_1B62D8C3C((uint64_t)&v10);
  sub_1B62D8C3C((uint64_t)&v9);
  uint64_t v7 = *(void *)(v2 + 16);
  sub_1B6399A44((uint64_t)&v14);
  sub_1B6399A44((uint64_t)&v13);
  sub_1B6399A44((uint64_t)&v12);
  sub_1B6399A44((uint64_t)&v11);
  sub_1B6399A44((uint64_t)&v10);
  sub_1B6399A44((uint64_t)&v9);
  sub_1B678F35C(0, v7, v6);
  sub_1B62D8C3C((uint64_t)&v14);
  sub_1B62D8C3C((uint64_t)&v13);
  sub_1B62D8C3C((uint64_t)&v12);
  sub_1B62D8C3C((uint64_t)&v11);
  sub_1B62D8C3C((uint64_t)&v10);
  sub_1B62D8C3C((uint64_t)&v9);
  sub_1B678FB14(0, &qword_1E9DCFDF8, MEMORY[0x1E4FBBDE0]);
  sub_1B6E32F88();
  if (v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B6E32F88();
    sub_1B6385F54(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B678FB78((unint64_t *)&qword_1E9DCFE00);
    sub_1B6E32FA8();
    swift_bridgeObjectRelease();
    sub_1B6E32FA8();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B678F7DC@<X0>(uint64_t *a1@<X8>)
{
  sub_1B678FB14(0, &qword_1E9DCFDE8, MEMORY[0x1E4FBBDC0]);
  uint64_t result = sub_1B6E32DD8();
  if (!v1)
  {
    uint64_t v4 = result;
    LOBYTE(v29) = 2;
    uint64_t v5 = sub_1B6E32DD8();
    sub_1B6385F54(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B678FB78((unint64_t *)&qword_1EB980308);
    sub_1B6E32DF8();
    uint64_t v6 = v29;
    sub_1B6E32DF8();
    uint64_t v27 = a1;
    uint64_t v7 = v29;
    uint64_t v26 = sub_1B6640874(0x8000000000000000, v4);
    uint64_t v25 = sub_1B6640874(0x8000000000000000, v5);
    int64_t v8 = *(void *)(v29 + 16);
    uint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t v28 = v29;
    if (v8)
    {
      uint64_t v30 = MEMORY[0x1E4FBC860];
      sub_1B6C3C694(0, v8, 0);
      uint64_t v10 = v30;
      uint64_t v11 = (uint64_t *)(v6 + 40);
      do
      {
        uint64_t v12 = *(v11 - 1);
        uint64_t v13 = *v11;
        unint64_t v14 = *(void *)(v30 + 16);
        unint64_t v15 = *(void *)(v30 + 24);
        swift_bridgeObjectRetain();
        if (v14 >= v15 >> 1) {
          sub_1B6C3C694(v15 > 1, v14 + 1, 1);
        }
        v11 += 2;
        *(void *)(v30 + 16) = v14 + 1;
        unint64_t v16 = v30 + 16 * v14;
        *(void *)(v16 + 32) = v12;
        *(void *)(v16 + 40) = v13;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      uint64_t v9 = MEMORY[0x1E4FBC860];
      uint64_t v7 = v28;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = MEMORY[0x1E4FBC860];
    }
    int64_t v17 = *(void *)(v7 + 16);
    if (v17)
    {
      sub_1B6C3C694(0, v17, 0);
      uint64_t v18 = v9;
      uint64_t v19 = (uint64_t *)(v7 + 40);
      do
      {
        uint64_t v21 = *(v19 - 1);
        uint64_t v20 = *v19;
        unint64_t v22 = *(void *)(v18 + 16);
        unint64_t v23 = *(void *)(v18 + 24);
        swift_bridgeObjectRetain();
        if (v22 >= v23 >> 1) {
          sub_1B6C3C694(v23 > 1, v22 + 1, 1);
        }
        v19 += 2;
        *(void *)(v18 + 16) = v22 + 1;
        unint64_t v24 = v18 + 16 * v22;
        *(void *)(v24 + 32) = v21;
        *(void *)(v24 + 40) = v20;
        --v17;
      }
      while (v17);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v9 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v18 = MEMORY[0x1E4FBC860];
    }
    *uint64_t v27 = v26;
    v27[1] = v25;
    v27[2] = (uint64_t)&unk_1F0F5C780;
    v27[3] = v10;
    v27[4] = v18;
    v27[5] = v9;
  }
  return result;
}

void sub_1B678FB14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B678F308();
    unint64_t v7 = a3(a1, &type metadata for SubGraphNode.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1B678FB78(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6385F54(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B678FBFC()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1B678FC34(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B678FC8C()
{
  int64_t v1 = *(void *)(*(void *)(v0 + 24) + 16);
  if (v1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v1, 0);
    uint64_t v2 = 0;
    do
    {
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      unint64_t v4 = *(void *)(v8 + 16);
      unint64_t v3 = *(void *)(v8 + 24);
      if (v4 >= v3 >> 1) {
        sub_1B6C3C3B8(v3 > 1, v4 + 1, 1);
      }
      ++v2;
      *(void *)(v8 + 16) = v4 + 1;
      uint64_t v5 = v8 + 16 * v4;
      *(void *)(v5 + 32) = 0x74756F627573;
      *(void *)(v5 + 40) = 0xE600000000000000;
    }
    while (v1 != v2);
  }
  sub_1B6385F54(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6646D3C();
  uint64_t v6 = sub_1B6E31638();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1B678FE58(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B678FE98(uint64_t a1)
{
  return sub_1B678CD84(a1, *(uint64_t **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1B678FEB4(_OWORD *a1)
{
  return sub_1B68C9034(a1, *(uint64_t (**)(_OWORD *))(v1 + 16));
}

uint64_t sub_1B678FED0(uint64_t a1, uint64_t a2)
{
  sub_1B62B5820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B678FF34(uint64_t a1)
{
  sub_1B62B5820();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SubGraphNode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B679005CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubGraphNode.CodingKeys()
{
  return &type metadata for SubGraphNode.CodingKeys;
}

unint64_t sub_1B6790098()
{
  unint64_t result = qword_1E9DCFE08;
  if (!qword_1E9DCFE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE08);
  }
  return result;
}

unint64_t sub_1B67900F0()
{
  unint64_t result = qword_1E9DCFE10;
  if (!qword_1E9DCFE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE10);
  }
  return result;
}

unint64_t sub_1B6790148()
{
  unint64_t result = qword_1E9DCFE18;
  if (!qword_1E9DCFE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE18);
  }
  return result;
}

uint64_t sub_1B679019C(uint64_t a1, void *a2)
{
  uint64_t result = sub_1B62D6998(a1, (uint64_t)v4);
  *a2 = qword_1B6E84610[v4[64]];
  return result;
}

uint64_t sub_1B67901E0()
{
  sub_1B62D6998(v0, (uint64_t)v2);
  return qword_1B6E84690[v2[64]];
}

void sub_1B6790258(uint64_t *a1@<X8>)
{
  sub_1B62D6998(v1, (uint64_t)&v27);
  switch(v31)
  {
    case 1:
      uint64_t v4 = v27;
      sub_1B63958F8(0, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
      a1[3] = v5;
      *a1 = v4;
      return;
    case 2:
      long long v26 = v27;
      unsigned int v6 = &qword_1EB980EB0;
      unint64_t v7 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
      goto LABEL_6;
    case 3:
      long long v26 = v27;
      unsigned int v6 = &qword_1EB980EF0;
      unint64_t v7 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2F8];
LABEL_6:
      sub_1B63958F8(0, (unint64_t *)v6, v7);
      a1[3] = v8;
      uint64_t v9 = swift_allocObject();
      *a1 = v9;
      *(_OWORD *)(v9 + 16) = v26;
      return;
    case 4:
      *(_OWORD *)a1 = v27;
      type metadata accessor for simd_float2x2(0);
      a1[3] = v10;
      return;
    case 5:
      type metadata accessor for simd_float2x3(0);
      goto LABEL_10;
    case 6:
      type metadata accessor for simd_float2x4(0);
LABEL_10:
      a1[3] = v11;
      goto LABEL_16;
    case 7:
      *(_OWORD *)a1 = v27;
      a1[2] = v28;
      type metadata accessor for simd_float3x2(0);
      a1[3] = v12;
      return;
    case 8:
      type metadata accessor for simd_float3x3(0);
      goto LABEL_14;
    case 9:
      type metadata accessor for simd_float3x4(0);
LABEL_14:
      a1[3] = v13;
      unint64_t v14 = (_OWORD *)swift_allocObject();
      *a1 = (uint64_t)v14;
      long long v15 = v28;
      v14[1] = v27;
      _OWORD v14[2] = v15;
      v14[3] = v29;
      return;
    case 10:
      type metadata accessor for simd_float4x2(0);
      a1[3] = v16;
LABEL_16:
      uint64_t v17 = swift_allocObject();
      *a1 = v17;
      long long v18 = v28;
      *(_OWORD *)(v17 + 16) = v27;
      *(_OWORD *)(v17 + 32) = v18;
      return;
    case 11:
      type metadata accessor for simd_float4x3(0);
      goto LABEL_19;
    case 12:
      type metadata accessor for simd_float4x4(0);
LABEL_19:
      a1[3] = v19;
      uint64_t v20 = (_OWORD *)swift_allocObject();
      *a1 = (uint64_t)v20;
      long long v21 = v28;
      v20[1] = v27;
      v20[2] = v21;
      long long v22 = v30;
      v20[3] = v29;
      v20[4] = v22;
      return;
    case 13:
      char v23 = v27;
      a1[3] = MEMORY[0x1E4FBB390];
      *(unsigned char *)a1 = v23;
      return;
    case 14:
      int v24 = v27;
      uint64_t v25 = MEMORY[0x1E4FBC150];
      goto LABEL_23;
    case 15:
      int v24 = v27;
      uint64_t v25 = MEMORY[0x1E4FBC4C0];
LABEL_23:
      a1[3] = v25;
      *(_DWORD *)a1 = v24;
      break;
    default:
      int v3 = v27;
      a1[3] = MEMORY[0x1E4FBB470];
      *(_DWORD *)a1 = v3;
      break;
  }
}

BOOL sub_1B6790594(uint64_t a1)
{
  sub_1B634FDFC(a1 + 24, (uint64_t)v5);
  sub_1B634FDFC((uint64_t)v5, (uint64_t)v6);
  if (v8) {
    return 0;
  }
  uint64_t v3 = v7;
  sub_1B62D6998(v1, (uint64_t)v4);
  return v3 == qword_1B6E84690[v4[64]];
}

uint64_t sub_1B6790608()
{
  sub_1B62D6998(v0, (uint64_t)v2);
  sub_1B6E33918();
  sub_1B62D66DC();
  return sub_1B6E33988();
}

uint64_t sub_1B6790658()
{
  sub_1B62D6998(v0, (uint64_t)&v2);
  return sub_1B62D66DC();
}

uint64_t sub_1B6790698()
{
  sub_1B62D6998(v0, (uint64_t)v2);
  sub_1B6E33918();
  sub_1B62D66DC();
  return sub_1B6E33988();
}

uint64_t sub_1B67906EC(uint64_t a1, uint64_t a2)
{
  sub_1B62D6998(a1, (uint64_t)v4);
  sub_1B62D6998(a2, (uint64_t)v5);
  return sub_1B6790DC4((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_1B6790738(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B67901E0();
  sub_1B62C550C((uint64_t)v7, v8);
  type metadata accessor for MTLDataType(0);
  sub_1B6791FB4(&qword_1E9DD6820);
  sub_1B6E332B8();
  if (!v2)
  {
    sub_1B62D6998(v1, (uint64_t)&v9);
    switch(v10)
    {
      case 1:
        sub_1B62C550C((uint64_t)v7, v8);
        uint64_t v3 = &qword_1EB980E90;
        uint64_t v4 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC280];
        sub_1B63958F8(0, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
        uint64_t v5 = &qword_1EB97D1B8;
        goto LABEL_7;
      case 2:
        sub_1B62C550C((uint64_t)v7, v8);
        uint64_t v3 = (unint64_t *)&qword_1EB980EB0;
        uint64_t v4 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
        sub_1B63958F8(0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
        uint64_t v5 = &qword_1EB97D1D8;
        goto LABEL_7;
      case 3:
        sub_1B62C550C((uint64_t)v7, v8);
        uint64_t v3 = (unint64_t *)&qword_1EB980EF0;
        uint64_t v4 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2F8];
        sub_1B63958F8(0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
        uint64_t v5 = &qword_1EB97D1F8;
LABEL_7:
        sub_1B6666340((unint64_t *)v5, v3, v4);
        goto LABEL_17;
      case 4:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B6792538();
        goto LABEL_17;
      case 5:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B67924E4();
        goto LABEL_17;
      case 6:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B6792490();
        goto LABEL_17;
      case 7:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B679243C();
        goto LABEL_17;
      case 8:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B67923E8();
        goto LABEL_17;
      case 9:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B6792394();
        goto LABEL_17;
      case 10:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B6792340();
        goto LABEL_17;
      case 11:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B67922EC();
        goto LABEL_17;
      case 12:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B6792298();
LABEL_17:
        sub_1B6E332B8();
        break;
      case 13:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B6E33278();
        break;
      case 14:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B6E332C8();
        break;
      case 15:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B6E332E8();
        break;
      default:
        sub_1B62C550C((uint64_t)v7, v8);
        sub_1B6E33298();
        break;
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
}

uint64_t sub_1B6790CA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6791584(a1, (uint64_t)v5);
  if (!v2) {
    return sub_1B62D6998((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_1B6790CEC(void *a1)
{
  sub_1B62D6998(v1, (uint64_t)&v4);
  return sub_1B6790738(a1);
}

uint64_t sub_1B6790D3C()
{
  sub_1B62D6998(v0, (uint64_t)&v2);
  return sub_1B62D5A28();
}

uint64_t sub_1B6790D74()
{
  return MEMORY[0x1F4186498](v0, 80, 15);
}

uint64_t sub_1B6790D84()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B6790D94()
{
  return MEMORY[0x1F4186498](v0, 64, 15);
}

uint64_t sub_1B6790DA4()
{
  return MEMORY[0x1F4186498](v0, 48, 15);
}

uint64_t sub_1B6790DB4()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

uint64_t sub_1B6790DC4(uint64_t a1, uint64_t a2)
{
  sub_1B62D6998(a1, (uint64_t)&v60);
  switch(v64)
  {
    case 1:
      float32x2_t v5 = *(float32x2_t *)v60.f32;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 1) {
        goto LABEL_48;
      }
      int32x2_t v6 = vceq_f32(v5, *(float32x2_t *)v55.f32);
      LOBYTE(v7) = v6.i8[0] & v6.i8[4];
      return v7 & 1;
    case 2:
      float32x4_t v43 = v60;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 2) {
        goto LABEL_48;
      }
      uint64_t v8 = 0;
      while (1)
      {
        float32x4_t v51 = v43;
        float v29 = *(float *)((unint64_t)&v51 & 0xFFFFFFFFFFFFFFF3 | (4 * (v8 & 3)));
        float32x4_t v52 = v55;
        float v30 = *(float *)((unint64_t)&v52 & 0xFFFFFFFFFFFFFFF3 | (4 * (v8 & 3)));
        BOOL v9 = v29 == v30;
        if (v8 == 2) {
          goto LABEL_50;
        }
        while (1)
        {
          ++v8;
          if (v9) {
            break;
          }
          if (v8 == 2) {
            goto LABEL_48;
          }
          BOOL v9 = 0;
        }
      }
    case 3:
      float32x4_t v44 = v60;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 3) {
        goto LABEL_48;
      }
      uint64_t v10 = 0;
      break;
    case 4:
      float32x4_t v12 = v60;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 4) {
        goto LABEL_48;
      }
      uint32x2_t v13 = (uint32x2_t)vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)&v12.u32[2], *(float32x2_t *)&v55.u32[2]), (int8x8_t)vceq_f32(*(float32x2_t *)v12.f32, *(float32x2_t *)v55.f32));
      goto LABEL_29;
    case 5:
      float32x4_t v37 = v61;
      float32x4_t v45 = v60;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 5) {
        goto LABEL_48;
      }
      uint32x4_t v14 = (uint32x4_t)vandq_s8((int8x16_t)vceqq_f32(v37, v56), (int8x16_t)vceqq_f32(v45, v55));
      goto LABEL_33;
    case 6:
      float32x4_t v38 = v61;
      float32x4_t v46 = v60;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 6) {
        goto LABEL_48;
      }
      uint32x4_t v14 = (uint32x4_t)vandq_s8((int8x16_t)vceqq_f32(v38, v56), (int8x16_t)vceqq_f32(v46, v55));
      goto LABEL_37;
    case 7:
      float32x4_t v15 = v60;
      float32x2_t v16 = *(float32x2_t *)v61.f32;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 7) {
        goto LABEL_48;
      }
      int8x8_t v17 = vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)&v15.u32[2], *(float32x2_t *)&v55.u32[2]), (int8x8_t)vceq_f32(*(float32x2_t *)v15.f32, *(float32x2_t *)v55.f32));
      int8x8_t v18 = (int8x8_t)vceq_f32(v16, *(float32x2_t *)v56.f32);
      goto LABEL_28;
    case 8:
      float32x4_t v33 = v61;
      float32x4_t v39 = v60;
      float32x4_t v47 = v62;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 8) {
        goto LABEL_48;
      }
      int8x16_t v19 = vandq_s8((int8x16_t)vceqq_f32(v33, v56), (int8x16_t)vceqq_f32(v39, v55));
      int8x16_t v20 = (int8x16_t)vceqq_f32(v47, v57);
      goto LABEL_32;
    case 9:
      float32x4_t v34 = v61;
      float32x4_t v40 = v60;
      float32x4_t v48 = v62;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 9) {
        goto LABEL_48;
      }
      int8x16_t v21 = vandq_s8((int8x16_t)vceqq_f32(v34, v56), (int8x16_t)vceqq_f32(v40, v55));
      int8x16_t v22 = (int8x16_t)vceqq_f32(v48, v57);
      goto LABEL_36;
    case 10:
      float32x4_t v23 = v60;
      float32x4_t v24 = v61;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 10) {
        goto LABEL_48;
      }
      int8x8_t v17 = vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)&v23.u32[2], *(float32x2_t *)&v55.u32[2]), (int8x8_t)vceq_f32(*(float32x2_t *)v23.f32, *(float32x2_t *)v55.f32));
      int8x8_t v18 = vand_s8((int8x8_t)vceq_f32(*(float32x2_t *)v24.f32, *(float32x2_t *)v56.f32), (int8x8_t)vceq_f32(*(float32x2_t *)&v24.u32[2], *(float32x2_t *)&v56.u32[2]));
LABEL_28:
      uint32x2_t v13 = (uint32x2_t)vand_s8(v17, v18);
LABEL_29:
      unsigned int v25 = vpmin_u32(v13, v13).u32[0];
      goto LABEL_38;
    case 11:
      float32x4_t v31 = v61;
      float32x4_t v35 = v60;
      float32x4_t v41 = v63;
      float32x4_t v49 = v62;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 11) {
        goto LABEL_48;
      }
      int8x16_t v19 = vandq_s8((int8x16_t)vceqq_f32(v31, v56), (int8x16_t)vceqq_f32(v35, v55));
      int8x16_t v20 = vandq_s8((int8x16_t)vceqq_f32(v49, v57), (int8x16_t)vceqq_f32(v41, v58));
LABEL_32:
      uint32x4_t v14 = (uint32x4_t)vandq_s8(v19, v20);
LABEL_33:
      v14.i32[3] = v14.i32[2];
      goto LABEL_37;
    case 12:
      float32x4_t v32 = v61;
      float32x4_t v36 = v60;
      float32x4_t v42 = v63;
      float32x4_t v50 = v62;
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 12) {
        goto LABEL_48;
      }
      int8x16_t v21 = vandq_s8((int8x16_t)vceqq_f32(v32, v56), (int8x16_t)vceqq_f32(v36, v55));
      int8x16_t v22 = vandq_s8((int8x16_t)vceqq_f32(v50, v57), (int8x16_t)vceqq_f32(v42, v58));
LABEL_36:
      uint32x4_t v14 = (uint32x4_t)vandq_s8(v21, v22);
LABEL_37:
      unsigned int v25 = vminvq_u32(v14);
LABEL_38:
      unsigned int v7 = v25 >> 31;
      return v7 & 1;
    case 13:
      __int8 v26 = v60.i8[0];
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 13) {
        goto LABEL_48;
      }
      LOBYTE(v7) = ((v26 & 1) == 0) ^ v55.i8[0];
      return v7 & 1;
    case 14:
      __int32 v27 = v60.i32[0];
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 == 14) {
        goto LABEL_44;
      }
      goto LABEL_48;
    case 15:
      __int32 v27 = v60.i32[0];
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59 != 15) {
        goto LABEL_48;
      }
LABEL_44:
      BOOL v4 = v27 == v55.i32[0];
      goto LABEL_45;
    default:
      float v3 = v60.f32[0];
      sub_1B62D6998(a2, (uint64_t)&v55);
      if (v59) {
        goto LABEL_48;
      }
      BOOL v4 = v3 == v55.f32[0];
LABEL_45:
      LOBYTE(v7) = v4;
      return v7 & 1;
  }
  while (1)
  {
    float32x4_t v53 = v44;
    float v29 = *(float *)((unint64_t)&v53 & 0xFFFFFFFFFFFFFFF3 | (4 * (v10 & 3)));
    float32x4_t v54 = v55;
    float v30 = *(float *)((unint64_t)&v54 & 0xFFFFFFFFFFFFFFF3 | (4 * (v10 & 3)));
    BOOL v11 = v29 == v30;
    if (v10 == 3) {
      break;
    }
    while (1)
    {
      ++v10;
      if (v11) {
        break;
      }
      if (v10 == 3) {
        goto LABEL_48;
      }
      BOOL v11 = 0;
    }
  }
LABEL_50:
  if (v29 == v30) {
    LOBYTE(v7) = 1;
  }
  else {
LABEL_48:
  }
    LOBYTE(v7) = 0;
  return v7 & 1;
}

uint64_t sub_1B6791430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t result = sub_1B62D6998(a1, (uint64_t)&v14);
  switch(v18)
  {
    case 1:
      *(void *)(a2 + a3) = v14;
      break;
    case 2:
    case 3:
    case 4:
      *(_OWORD *)(a2 + a3) = v14;
      break;
    case 5:
    case 6:
    case 10:
      int32x2_t v6 = (_OWORD *)(a2 + a3);
      long long v7 = v15;
      *int32x2_t v6 = v14;
      v6[1] = v7;
      break;
    case 7:
      uint64_t v13 = a2 + a3;
      *(_OWORD *)uint64_t v13 = v14;
      *(void *)(v13 + 16) = v15;
      break;
    case 8:
    case 9:
      BOOL v11 = (_OWORD *)(a2 + a3);
      long long v12 = v15;
      *BOOL v11 = v14;
      v11[1] = v12;
      v11[2] = v16;
      break;
    case 11:
    case 12:
      uint64_t v8 = (_OWORD *)(a2 + a3);
      long long v9 = v15;
      *uint64_t v8 = v14;
      v8[1] = v9;
      long long v10 = v17;
      v8[2] = v16;
      v8[3] = v10;
      break;
    case 13:
      *(unsigned char *)(a2 + a3) = v14;
      break;
    case 14:
    case 15:
      *(_DWORD *)(a2 + a3) = v14;
      break;
    default:
      *(_DWORD *)(a2 + a3) = v14;
      break;
  }
  return result;
}

uint64_t sub_1B6791584@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  type metadata accessor for MTLDataType(0);
  sub_1B62C550C((uint64_t)v31, v32);
  sub_1B6791FB4(&qword_1EB9804B0);
  sub_1B6E33168();
  uint64_t v6 = v21;
  switch(v21)
  {
    case 3:
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B6E33138();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v18 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      char v12 = 0;
      uint64_t v19 = v13;
      uint64_t v20 = 0;
      break;
    case 4:
      long long v14 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC280];
      sub_1B63958F8(0, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B6666340((unint64_t *)&qword_1EB97D1D0, &qword_1EB980E90, v14);
      sub_1B6E33168();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v18 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v19 = v21;
      uint64_t v20 = 0;
      char v12 = 1;
      break;
    case 5:
      long long v15 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2A8];
      sub_1B63958F8(0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B6666340((unint64_t *)&qword_1EB97D1F0, (unint64_t *)&qword_1EB980EB0, v15);
      sub_1B6E33168();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = v21;
      uint64_t v20 = v22;
      char v12 = 2;
      break;
    case 6:
      long long v16 = (uint64_t (*)(uint64_t, void, unint64_t))MEMORY[0x1E4FBC2F8];
      sub_1B63958F8(0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B6666340((unint64_t *)&qword_1EB97D210, (unint64_t *)&qword_1EB980EF0, v16);
      sub_1B6E33168();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = v21;
      uint64_t v20 = v22;
      char v12 = 3;
      break;
    case 7:
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B6792244();
      sub_1B6E33168();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = v21;
      uint64_t v20 = v22;
      char v12 = 4;
      break;
    case 8:
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B67921F0();
      sub_1B6E33168();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = v21;
      uint64_t v20 = v22;
      char v12 = 5;
      goto LABEL_17;
    case 9:
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B679219C();
      sub_1B6E33168();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = v21;
      uint64_t v20 = v22;
      char v12 = 6;
      goto LABEL_17;
    case 10:
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B6792148();
      sub_1B6E33168();
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = v21;
      uint64_t v7 = v23;
      uint64_t v20 = v22;
      char v12 = 7;
      break;
    case 11:
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B67920F4();
      sub_1B6E33168();
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v7 = v23;
      uint64_t v19 = v21;
      uint64_t v20 = v22;
      uint64_t v8 = v24;
      char v12 = 8;
      goto LABEL_15;
    case 12:
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B67920A0();
      sub_1B6E33168();
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v7 = v23;
      uint64_t v19 = v21;
      uint64_t v20 = v22;
      uint64_t v8 = v24;
      char v12 = 9;
LABEL_15:
      uint64_t v9 = v26;
      uint64_t v18 = v25;
      break;
    case 13:
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B679204C();
      sub_1B6E33168();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = v21;
      uint64_t v20 = v22;
      char v12 = 10;
LABEL_17:
      uint64_t v7 = v23;
      uint64_t v8 = v24;
      break;
    case 14:
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B6791FF8();
      sub_1B6E33168();
      uint64_t v7 = v23;
      uint64_t v19 = v21;
      uint64_t v20 = v22;
      uint64_t v8 = v24;
      uint64_t v18 = v25;
      uint64_t v9 = v26;
      char v12 = 11;
      goto LABEL_20;
    case 15:
      sub_1B62C550C((uint64_t)v31, v32);
      sub_1B62B18DC();
      sub_1B6E33168();
      uint64_t v7 = v23;
      uint64_t v19 = v21;
      uint64_t v20 = v22;
      uint64_t v8 = v24;
      uint64_t v18 = v25;
      uint64_t v9 = v26;
      char v12 = 12;
LABEL_20:
      uint64_t v10 = v27;
      uint64_t v11 = v28;
      break;
    case 29:
      sub_1B62C550C((uint64_t)v31, v32);
      unsigned int v17 = sub_1B6E33178();
      uint64_t v20 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v18 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      char v12 = 14;
      goto LABEL_24;
    case 33:
      sub_1B62C550C((uint64_t)v31, v32);
      unsigned int v17 = sub_1B6E33188();
      uint64_t v20 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v18 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      char v12 = 15;
LABEL_24:
      uint64_t v19 = v17;
      break;
    case 53:
      sub_1B62C550C((uint64_t)v31, v32);
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v18 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v19 = sub_1B6E33118() & 1;
      uint64_t v20 = 0;
      char v12 = 13;
      break;
    default:
      sub_1B62C1550((uint64_t)v31, (uint64_t)&v21);
      uint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_1B6E328C8();
      sub_1B6E31948();
      uint64_t v33 = v6;
      sub_1B6E32B18();
      sub_1B6E32998();
      swift_allocError();
      sub_1B6E32958();
      swift_bridgeObjectRelease();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v21);
      swift_willThrow();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v31);
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v31);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v20;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v11;
  *(unsigned char *)(a2 + 64) = v12;
  return result;
}

uint64_t sub_1B6791FB4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MTLDataType(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6791FF8()
{
  unint64_t result = qword_1E9DCFE38;
  if (!qword_1E9DCFE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE38);
  }
  return result;
}

unint64_t sub_1B679204C()
{
  unint64_t result = qword_1E9DCFE40;
  if (!qword_1E9DCFE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE40);
  }
  return result;
}

unint64_t sub_1B67920A0()
{
  unint64_t result = qword_1E9DCFE48;
  if (!qword_1E9DCFE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE48);
  }
  return result;
}

unint64_t sub_1B67920F4()
{
  unint64_t result = qword_1E9DCFE50;
  if (!qword_1E9DCFE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE50);
  }
  return result;
}

unint64_t sub_1B6792148()
{
  unint64_t result = qword_1E9DCFE58;
  if (!qword_1E9DCFE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE58);
  }
  return result;
}

unint64_t sub_1B679219C()
{
  unint64_t result = qword_1E9DCFE60;
  if (!qword_1E9DCFE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE60);
  }
  return result;
}

unint64_t sub_1B67921F0()
{
  unint64_t result = qword_1E9DCFE68;
  if (!qword_1E9DCFE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE68);
  }
  return result;
}

unint64_t sub_1B6792244()
{
  unint64_t result = qword_1E9DCFE70;
  if (!qword_1E9DCFE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE70);
  }
  return result;
}

unint64_t sub_1B6792298()
{
  unint64_t result = qword_1E9DCFE78;
  if (!qword_1E9DCFE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE78);
  }
  return result;
}

unint64_t sub_1B67922EC()
{
  unint64_t result = qword_1E9DCFE80;
  if (!qword_1E9DCFE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE80);
  }
  return result;
}

unint64_t sub_1B6792340()
{
  unint64_t result = qword_1E9DCFE88;
  if (!qword_1E9DCFE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE88);
  }
  return result;
}

unint64_t sub_1B6792394()
{
  unint64_t result = qword_1E9DCFE90;
  if (!qword_1E9DCFE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE90);
  }
  return result;
}

unint64_t sub_1B67923E8()
{
  unint64_t result = qword_1E9DCFE98;
  if (!qword_1E9DCFE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFE98);
  }
  return result;
}

unint64_t sub_1B679243C()
{
  unint64_t result = qword_1E9DCFEA0;
  if (!qword_1E9DCFEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFEA0);
  }
  return result;
}

unint64_t sub_1B6792490()
{
  unint64_t result = qword_1E9DCFEA8;
  if (!qword_1E9DCFEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFEA8);
  }
  return result;
}

unint64_t sub_1B67924E4()
{
  unint64_t result = qword_1E9DCFEB0;
  if (!qword_1E9DCFEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFEB0);
  }
  return result;
}

unint64_t sub_1B6792538()
{
  unint64_t result = qword_1E9DCFEB8;
  if (!qword_1E9DCFEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFEB8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DataValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF1 && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 241);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 0xF) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DataValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 - 241;
    if (a3 >= 0xF1) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF1) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B679262C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DataValue()
{
  return &type metadata for DataValue;
}

unint64_t sub_1B6792648()
{
  unint64_t result = qword_1E9DCFEC0;
  if (!qword_1E9DCFEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFEC0);
  }
  return result;
}

void *sub_1B679269C(uint64_t a1)
{
  sub_1B62E17B4();
  float32x4_t v50 = v2;
  MEMORY[0x1F4188790](v2, v3);
  float32x4_t v49 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1B6E31098();
  MEMORY[0x1F4188790](v48, v5);
  float32x4_t v47 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v42 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  unint64_t v12 = (unint64_t)(v9 + 63) >> 6;
  float32x4_t v46 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  int64_t v43 = v12;
  unint64_t v40 = v12 - 6;
  float32x4_t v41 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v51 = a1;
  uint64_t v39 = a1 + 112;
  unint64_t v45 = 0x80000001B6F35590;
  long long v44 = xmmword_1B6E77050;
  while (v11)
  {
    unint64_t v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_20:
    sub_1B6312FE4(*(void *)(v51 + 56) + 832 * v15, (uint64_t)v60, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    sub_1B6312FE4((uint64_t)v60, (uint64_t)v61, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    int v18 = sub_1B6313160((uint64_t)v61);
    sub_1B638BC0C(v60, sub_1B638C2D4, v19);
    if (v18 == 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        float32x4_t v41 = sub_1B68C2BAC(0, v41[2] + 1, 1, v41);
      }
      unint64_t v34 = v41[2];
      unint64_t v33 = v41[3];
      if (v34 >= v33 >> 1) {
        float32x4_t v41 = sub_1B68C2BAC(v33 > 1, v34 + 1, 1, v41);
      }
      sub_1B6312FE4((uint64_t)v60, (uint64_t)&v56, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
      nullsub_1(&v56);
      float32x4_t v35 = v41;
      v41[2] = v34 + 1;
      memcpy(&v35[103 * v34 + 4], v36, 0x338uLL);
    }
    else
    {
      unint64_t v55 = v11;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v56 = 0;
      unint64_t v57 = 0xE000000000000000;
      uint64_t v54 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      uint64_t v58 = v56;
      unint64_t v59 = v57;
      sub_1B6E31948();
      sub_1B6312FE4((uint64_t)v60, (uint64_t)&v56, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
      sub_1B63130BC(0, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
      sub_1B6E32B18();
      uint64_t v20 = v58;
      unint64_t v21 = v59;
      char v22 = sub_1B6E32168();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v62 = v13;
      uint64_t v23 = qword_1EB997FF0;
      uint64_t v24 = qword_1EB985528;
      swift_retain();
      if (v24 != -1) {
        swift_once();
      }
      sub_1B67A36D0();
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = v44;
      *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v25 + 64) = sub_1B678615C();
      *(void *)(v25 + 32) = v20;
      *(void *)(v25 + 40) = v21;
      swift_bridgeObjectRetain();
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v52 = v20;
      uint64_t v26 = v47;
      sub_1B6E31088();
      uint64_t v27 = (uint64_t)v49;
      uint64_t v28 = v50[12];
      uint64_t v29 = v50[16];
      uint64_t v30 = v50[20];
      uint64_t v53 = v23;
      float32x4_t v31 = &v49[v30];
      (*v46)(v49, v26, v48);
      *(unsigned char *)(v27 + v28) = v22;
      *(void *)(v27 + v29) = 0;
      *(void *)float32x4_t v31 = v52;
      *((void *)v31 + 1) = v21;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B67A3738(v27);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B638BC0C(v60, sub_1B6312B20, v32);
      uint64_t v13 = v62;
      unint64_t v11 = v55;
    }
  }
  uint64_t v16 = v13 + 1;
  if (v13 + 1 >= v43) {
    goto LABEL_33;
  }
  unint64_t v17 = *(void *)(v42 + 8 * v16);
  if (v17) {
    goto LABEL_19;
  }
  uint64_t v16 = v13 + 2;
  if (v13 + 2 >= v43) {
    goto LABEL_33;
  }
  unint64_t v17 = *(void *)(v42 + 8 * v16);
  if (v17) {
    goto LABEL_19;
  }
  uint64_t v16 = v13 + 3;
  if (v13 + 3 >= v43) {
    goto LABEL_33;
  }
  unint64_t v17 = *(void *)(v42 + 8 * v16);
  if (v17) {
    goto LABEL_19;
  }
  uint64_t v16 = v13 + 4;
  if (v13 + 4 >= v43) {
    goto LABEL_33;
  }
  unint64_t v17 = *(void *)(v42 + 8 * v16);
  if (v17) {
    goto LABEL_19;
  }
  uint64_t v16 = v13 + 5;
  if (v13 + 5 >= v43) {
    goto LABEL_33;
  }
  unint64_t v17 = *(void *)(v42 + 8 * v16);
  if (v17)
  {
LABEL_19:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v13 = v16;
    goto LABEL_20;
  }
  while (v40 != v13)
  {
    unint64_t v17 = *(void *)(v39 + 8 * v13++);
    if (v17)
    {
      uint64_t v16 = v13 + 5;
      goto LABEL_19;
    }
  }
LABEL_33:
  swift_release();
  return v41;
}

void *sub_1B6792D24(uint64_t a1)
{
  sub_1B62E17B4();
  float32x4_t v63 = v2;
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v62 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1B6E31098();
  MEMORY[0x1F4188790](v61, v5);
  float32x4_t v60 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v55 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  unint64_t v12 = (unint64_t)(v9 + 63) >> 6;
  unint64_t v59 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  int64_t v56 = v12;
  unint64_t v53 = v12 - 6;
  uint64_t v54 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v64 = a1;
  uint64_t v52 = a1 + 112;
  unint64_t v58 = 0x80000001B6F35560;
  long long v57 = xmmword_1B6E77050;
  while (v11)
  {
    uint64_t v74 = (v11 - 1) & v11;
    unint64_t v14 = __clz(__rbit64(v11)) | (v13 << 6);
LABEL_20:
    uint64_t v17 = *(void *)(v64 + 56) + 80 * v14;
    double v19 = *(void **)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    uint64_t v23 = *(void *)(v17 + 32);
    uint64_t v22 = *(void *)(v17 + 40);
    uint64_t v25 = *(void *)(v17 + 48);
    uint64_t v24 = *(void *)(v17 + 56);
    uint64_t v26 = *(void **)(v17 + 64);
    int v27 = *(unsigned __int8 *)(v17 + 72);
    uint64_t v75 = v18;
    uint64_t v76 = v20;
    uint64_t v90 = v26;
    if (v27 == 1)
    {
      uint64_t v42 = v22;
      uint64_t v43 = v25;
      sub_1B67A2324(v19, v18, v20, v21, v23, v22, v25, v24, v26, 1);
      uint64_t v44 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v54 = sub_1B68C2CE4(0, v54[2] + 1, 1, v54);
      }
      unint64_t v46 = v54[2];
      unint64_t v45 = v54[3];
      if (v46 >= v45 >> 1) {
        uint64_t v54 = sub_1B68C2CE4(v45 > 1, v46 + 1, 1, v54);
      }
      float32x4_t v47 = v54;
      _OWORD v54[2] = v46 + 1;
      uint64_t v48 = &v47[9 * v46];
      unint64_t v11 = v74;
      uint64_t v49 = v75;
      v48[4] = v19;
      v48[5] = v49;
      v48[6] = v76;
      v48[7] = v21;
      uint64_t v48[8] = v23;
      v48[9] = v42;
      v48[10] = v43;
      v48[11] = v44;
      v48[12] = v90;
    }
    else
    {
      uint64_t v73 = v13;
      uint64_t v28 = v20;
      uint64_t v77 = v22;
      unint64_t v29 = v18;
      sub_1B67A2324(v19, v18, v20, v21, v23, v22, v25, v24, v26, v27);
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      int v78 = 0;
      unint64_t v79 = 0xE000000000000000;
      uint64_t v66 = qword_1EB997FD0;
      swift_retain();
      sub_1B6E328C8();
      uint64_t v88 = v78;
      unint64_t v89 = v79;
      sub_1B6E31948();
      uint64_t v68 = v19;
      int v78 = v19;
      unint64_t v79 = v29;
      uint64_t v80 = v28;
      uint64_t v81 = v21;
      uint64_t v69 = v21;
      uint64_t v70 = v23;
      uint64_t v82 = v23;
      uint64_t v83 = v77;
      uint64_t v84 = v25;
      uint64_t v85 = v24;
      uint64_t v86 = v90;
      int v67 = v27;
      char v87 = v27;
      sub_1B63130BC(0, (unint64_t *)&unk_1E9DD0030, (uint64_t)&type metadata for ShaderCache.ComputePipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
      sub_1B6E32B18();
      float32x4_t v31 = v88;
      unint64_t v30 = v89;
      char v32 = sub_1B6E32168();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v71 = v25;
      uint64_t v72 = v24;
      uint64_t v33 = qword_1EB997FF0;
      uint64_t v34 = qword_1EB985528;
      swift_retain();
      if (v34 != -1) {
        swift_once();
      }
      sub_1B67A36D0();
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = v57;
      *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v35 + 64) = sub_1B678615C();
      *(void *)(v35 + 32) = v31;
      *(void *)(v35 + 40) = v30;
      swift_bridgeObjectRetain();
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      float32x4_t v36 = v60;
      sub_1B6E31088();
      uint64_t v37 = v63[12];
      uint64_t v38 = v63[16];
      uint64_t v39 = v63[20];
      uint64_t v40 = (uint64_t)v62;
      uint64_t v65 = v33;
      float32x4_t v41 = &v62[v39];
      (*v59)(v62, v36, v61);
      *(unsigned char *)(v40 + v37) = v32;
      *(void *)(v40 + v38) = 0;
      *(void *)float32x4_t v41 = v31;
      *((void *)v41 + 1) = v30;
      swift_bridgeObjectRetain();
      sub_1B6E31368();
      swift_release();
      sub_1B67A3738(v40);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B67A2454(v68, v75, v76, v69, v70, v77, v71, v72, v90, v67);
      uint64_t v13 = v73;
      unint64_t v11 = v74;
    }
  }
  uint64_t v15 = v13 + 1;
  if (v13 + 1 >= v56) {
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v55 + 8 * v15);
  if (v16) {
    goto LABEL_19;
  }
  uint64_t v15 = v13 + 2;
  if (v13 + 2 >= v56) {
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v55 + 8 * v15);
  if (v16) {
    goto LABEL_19;
  }
  uint64_t v15 = v13 + 3;
  if (v13 + 3 >= v56) {
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v55 + 8 * v15);
  if (v16) {
    goto LABEL_19;
  }
  uint64_t v15 = v13 + 4;
  if (v13 + 4 >= v56) {
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v55 + 8 * v15);
  if (v16) {
    goto LABEL_19;
  }
  uint64_t v15 = v13 + 5;
  if (v13 + 5 >= v56) {
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v55 + 8 * v15);
  if (v16)
  {
LABEL_19:
    uint64_t v74 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v13 = v15;
    goto LABEL_20;
  }
  while (v53 != v13)
  {
    unint64_t v16 = *(void *)(v52 + 8 * v13++);
    if (v16)
    {
      uint64_t v15 = v13 + 5;
      goto LABEL_19;
    }
  }
LABEL_33:
  swift_release();
  return v54;
}

uint64_t sub_1B679348C(uint64_t a1)
{
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v15 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v6 = 0;
  uint64_t v14 = swift_bridgeObjectRetain() + 112;
  while (v4)
  {
    unint64_t v7 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v8 = v7 | (v6 << 6);
LABEL_20:
    sub_1B6312FE4(*(void *)(a1 + 56) + 832 * v8, (uint64_t)v16, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    sub_1B6312FE4((uint64_t)v16, (uint64_t)v17, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    if (!sub_1B6313160((uint64_t)v17))
    {
      double v11 = nullsub_1(v17);
      uint64_t v12 = sub_1B638BC0C(v16, sub_1B638C2D4, v11);
      MEMORY[0x1BA9B3870](v12);
      if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B6E31C78();
      }
      sub_1B6E31CC8();
      sub_1B6E31C48();
    }
  }
  uint64_t v9 = v6 + 1;
  if (v6 + 1 >= v5) {
    goto LABEL_24;
  }
  unint64_t v10 = *(void *)(v15 + 8 * v9);
  if (v10) {
    goto LABEL_19;
  }
  uint64_t v9 = v6 + 2;
  if (v6 + 2 >= v5) {
    goto LABEL_24;
  }
  unint64_t v10 = *(void *)(v15 + 8 * v9);
  if (v10) {
    goto LABEL_19;
  }
  uint64_t v9 = v6 + 3;
  if (v6 + 3 >= v5) {
    goto LABEL_24;
  }
  unint64_t v10 = *(void *)(v15 + 8 * v9);
  if (v10) {
    goto LABEL_19;
  }
  uint64_t v9 = v6 + 4;
  if (v6 + 4 >= v5) {
    goto LABEL_24;
  }
  unint64_t v10 = *(void *)(v15 + 8 * v9);
  if (v10) {
    goto LABEL_19;
  }
  uint64_t v9 = v6 + 5;
  if (v6 + 5 >= v5) {
    goto LABEL_24;
  }
  unint64_t v10 = *(void *)(v15 + 8 * v9);
  if (v10)
  {
LABEL_19:
    unint64_t v4 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v9 << 6);
    uint64_t v6 = v9;
    goto LABEL_20;
  }
  while (v5 - 6 != v6)
  {
    unint64_t v10 = *(void *)(v14 + 8 * v6++);
    if (v10)
    {
      uint64_t v9 = v6 + 5;
      goto LABEL_19;
    }
  }
LABEL_24:
  swift_release();
  return v18;
}

uint64_t sub_1B67936E4(uint64_t a1)
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v7 = 0;
  uint64_t v15 = swift_bridgeObjectRetain() + 112;
  while (v5)
  {
    unint64_t v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_20:
    uint64_t v12 = *(void *)(a1 + 56) + 80 * v9;
    if (!*(unsigned char *)(v12 + 72))
    {
      id v13 = sub_1B67A2324(*(id *)v12, *(void *)(v12 + 8), *(void *)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void **)(v12 + 64), 0);
      MEMORY[0x1BA9B3870](v13);
      if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B6E31C78();
      }
      sub_1B6E31CC8();
      sub_1B6E31C48();
    }
  }
  uint64_t v10 = v7 + 1;
  if (v7 + 1 >= v6) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v10);
  if (v11) {
    goto LABEL_19;
  }
  uint64_t v10 = v7 + 2;
  if (v7 + 2 >= v6) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v10);
  if (v11) {
    goto LABEL_19;
  }
  uint64_t v10 = v7 + 3;
  if (v7 + 3 >= v6) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v10);
  if (v11) {
    goto LABEL_19;
  }
  uint64_t v10 = v7 + 4;
  if (v7 + 4 >= v6) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v10);
  if (v11) {
    goto LABEL_19;
  }
  uint64_t v10 = v7 + 5;
  if (v7 + 5 >= v6) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v2 + 8 * v10);
  if (v11)
  {
LABEL_19:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v10 << 6);
    uint64_t v7 = v10;
    goto LABEL_20;
  }
  while (v6 - 6 != v7)
  {
    unint64_t v11 = *(void *)(v15 + 8 * v7++);
    if (v11)
    {
      uint64_t v10 = v7 + 5;
      goto LABEL_19;
    }
  }
LABEL_24:
  swift_release();
  return v16;
}

void sub_1B67938D0()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_1B6E31768();
  unsigned __int8 v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  byte_1EB985230 = v2;
}

void sub_1B679397C()
{
  uint64_t v1 = v0;
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F351C0]), sel_init);
  uint64_t v3 = (void *)sub_1B6E30E78();
  objc_msgSend(v2, sel_setUrl_, v3);

  uint64_t v4 = *(void **)(v1 + 16);
  id v16 = 0;
  id v5 = objc_msgSend(v4, sel_newBinaryArchiveWithDescriptor_error_, v2, &v16);
  id v6 = v16;
  if (v5)
  {
    uint64_t v7 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v7);
    if (*(void *)((*(void *)(v1 + 152) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 152) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1B6E31C78();
    sub_1B6E31CC8();
    sub_1B6E31C48();
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    id v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    id v16 = (id)0xD00000000000001FLL;
    unint64_t v17 = 0x80000001B6F35540;
    sub_1B6E30F48();
    sub_1B67A33F8();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v8 = (uint64_t)v16;
    uint64_t v9 = v17;
    int v10 = sub_1B6E32168();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    id v16 = 0;
    swift_retain();
    sub_1B6B33E34(v10, (uint64_t *)&v16, v8, v9);

    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    unint64_t v11 = v6;
    uint64_t v12 = (void *)sub_1B6E30D78();

    swift_willThrow();
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    id v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E30F48();
    sub_1B67A33F8();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
    sub_1B6E32B18();
    uint64_t v13 = (uint64_t)v16;
    uint64_t v14 = v17;
    int v15 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    id v16 = 0;
    swift_retain();
    sub_1B6B33E34(v15, (uint64_t *)&v16, v13, v14);
    swift_release();
    swift_bridgeObjectRelease();

    swift_release();
  }
}

id sub_1B6793D8C()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
  qword_1EB985288 = (uint64_t)result;
  return result;
}

void *sub_1B6793DC0()
{
  id result = sub_1B67F50E0(MEMORY[0x1E4FBC860]);
  off_1EB985300 = result;
  return result;
}

uint64_t sub_1B6793DE8(void *a1)
{
  id v2 = v1;
  id v79 = a1;
  uint64_t v82 = *MEMORY[0x1E4F143B8];
  uint64_t v69 = *v1;
  uint64_t v3 = sub_1B6E30F48();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v3, v5);
  uint64_t v71 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  unint64_t v11 = (char *)&v69 - v10;
  MEMORY[0x1F4188790](v9, v12);
  uint64_t v72 = (char *)&v69 - v13;
  sub_1B638BF2C(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v19);
  uint64_t v21 = (char *)&v69 - v20;
  uint64_t v22 = MEMORY[0x1E4FBC860];
  v2[4] = MEMORY[0x1E4FBC860];
  v2[5] = sub_1B67F51F4(v22);
  v2[6] = sub_1B67F531C(v22);
  v2[7] = sub_1B67F5454(v22);
  v2[8] = sub_1B67F5574(v22);
  v2[9] = sub_1B67F55A0(v22);
  v2[10] = sub_1B67F55A0(v22);
  *((unsigned char *)v2 + 88) = 0;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  v2[18] = 0;
  v2[19] = v22;
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  int v78 = (void (*)(char *, uint64_t))((char *)v2 + OBJC_IVAR____TtC3VFX11ShaderCache_urlToSaveBinaryArchiveTo);
  uint64_t v70 = v23;
  ((void (*)(char *))v23)((char *)v2 + OBJC_IVAR____TtC3VFX11ShaderCache_urlToSaveBinaryArchiveTo);
  uint64_t v24 = (void *)((char *)v2 + OBJC_IVAR____TtC3VFX11ShaderCache_onShaderCompilation);
  *uint64_t v24 = 0;
  v24[1] = 0;
  uint64_t v25 = (char *)v2 + OBJC_IVAR____TtC3VFX11ShaderCache_lock;
  uint64_t v26 = (_DWORD *)swift_slowAlloc();
  *uint64_t v26 = 0;
  *(void *)uint64_t v25 = "lock ShaderCache";
  *((void *)v25 + 1) = 16;
  v25[16] = 2;
  *((void *)v25 + 3) = v26;
  int v27 = (void *)((char *)v2 + OBJC_IVAR____TtC3VFX11ShaderCache_reloadCallback);
  *int v27 = nullsub_1;
  v27[1] = 0;
  if (qword_1EB985520 != -1) {
    swift_once();
  }
  if (byte_1EB985230 == 1)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v28 = sub_1B6E32168();
    unint64_t v80 = 1;
    sub_1B6B33B70(v28, 0xD000000000000027, 0x80000001B6F354E0, (uint64_t *)&v80);
    swift_release();
  }
  uint64_t v77 = v11;
  v2[2] = v79;
  unint64_t v29 = self;
  swift_unknownObjectRetain();
  id v30 = objc_msgSend(v29, sel_standardUserDefaults, v69);
  float32x4_t v31 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1B639956C((uint64_t)v78, (uint64_t)v21, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  uint64_t v75 = v4;
  uint64_t v76 = v3;
  char v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  int v33 = v32(v21, 1, v3);
  sub_1B6399510((uint64_t)v21, (unint64_t *)&qword_1EB9857F0, v31);
  if (v33 != 1
    || (uint64_t v34 = (void *)sub_1B6E31768(),
        unsigned int v35 = objc_msgSend(v30, sel_BOOLForKey_, v34),
        v34,
        v35))
  {
    id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F351C0]), sel_init);
    unint64_t v80 = 0;
    id v37 = objc_msgSend(v79, sel_newBinaryArchiveWithDescriptor_error_, v36, &v80);
    id v38 = (id)v80;
    if (!v37)
    {
LABEL_25:
      uint64_t v68 = v38;
      sub_1B6E30D78();

      swift_willThrow();
      uint64_t result = swift_unexpectedError();
      __break(1u);
      return result;
    }

    v2[18] = v37;
    swift_unknownObjectRelease();
  }
  uint64_t v39 = (void *)sub_1B6E31768();
  id v74 = v30;
  unsigned __int8 v40 = objc_msgSend(v30, sel_BOOLForKey_, v39);

  *((unsigned char *)v2 + OBJC_IVAR____TtC3VFX11ShaderCache_recordMetalPipelinesScript) = v40;
  float32x4_t v41 = (void *)sub_1B6E31768();
  id v42 = objc_msgSend(self, sel_bundleWithIdentifier_, v41);

  uint64_t v43 = (void *)sub_1B6E31768();
  uint64_t v44 = (void *)sub_1B6E31768();
  id v73 = v42;
  id v45 = objc_msgSend(v42, sel_URLForResource_withExtension_, v43, v44);

  if (!v45)
  {
    id v38 = (id)v70(v18, 1, 1, v76);
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v46 = v77;
  sub_1B6E30EE8();

  uint64_t v48 = v75;
  uint64_t v47 = v76;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
  v49(v18, v46, v76);
  v70(v18, 0, 1, v47);
  v32(v18, 1, v47);
  float32x4_t v50 = v72;
  v49(v72, v18, v47);
  uint64_t v51 = (uint64_t)v71;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v71, v50, v47);
  id v52 = objc_allocWithZone((Class)type metadata accessor for ShaderLibrary());
  id v53 = v79;
  swift_unknownObjectRetain();
  uint64_t v54 = (char *)sub_1B67C880C(v51, v53, 0, 0x616665642D786676, 0xEB00000000746C75);
  int v78 = *(void (**)(char *, uint64_t))(v48 + 8);
  v78(v50, v47);
  v2[3] = v54;
  uint64_t v55 = swift_allocObject();
  swift_weakInit();
  int64_t v56 = (uint64_t (**)())&v54[OBJC_IVAR____TtC3VFX13ShaderLibrary_reloadedNotificationBlock];
  *int64_t v56 = sub_1B67A33F0;
  v56[1] = (uint64_t (*)())v55;
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  unint64_t v80 = 0;
  unint64_t v81 = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  unint64_t v80 = 0xD000000000000012;
  unint64_t v81 = 0x80000001B6F35430;
  id v57 = (id)MTLGetShaderCachePath();
  sub_1B6E31798();

  sub_1B6E31948();
  swift_bridgeObjectRelease();
  int64_t v58 = v80;
  uint64_t v59 = v81;
  int v60 = sub_1B6E32168();
  uint64_t v61 = v74;
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  unint64_t v80 = 0;
  swift_retain();
  sub_1B6B33E34(v60, (uint64_t *)&v80, v58, v59);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (v2[18])
  {
    swift_retain();
    int v62 = sub_1B6E32168();
    unint64_t v80 = 0;
    swift_retain();
    sub_1B6B33E34(v62, (uint64_t *)&v80, 0xD00000000000001ELL, 0x80000001B6F354A0);
    swift_release();
    swift_release();
  }
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC3VFX11ShaderCache_recordMetalPipelinesScript) == 1)
  {
    swift_retain();
    int v63 = sub_1B6E32168();
    unint64_t v80 = 0;
    swift_retain();
    sub_1B6B33E34(v63, (uint64_t *)&v80, 0xD000000000000020, 0x80000001B6F35470);
    swift_release();
    swift_release();
  }
  uint64_t v64 = (void *)sub_1B6E31768();
  id v65 = objc_msgSend(v61, sel_stringForKey_, v64);

  if (v65)
  {
    sub_1B6E31798();

    uint64_t v66 = v77;
    sub_1B6E30E48();
    swift_bridgeObjectRelease();
    sub_1B679397C();
    swift_unknownObjectRelease();

    v78(v66, v76);
  }
  else
  {

    swift_unknownObjectRelease();
  }
  return (uint64_t)v2;
}

uint64_t sub_1B6794AE8()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1B6794DE8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6794B38()
{
  MEMORY[0x1BA9B84C0](*(void *)(v0 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24), -1, -1);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6399510(v0 + OBJC_IVAR____TtC3VFX11ShaderCache_urlToSaveBinaryArchiveTo, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  sub_1B67A21D4(*(void *)(v0 + OBJC_IVAR____TtC3VFX11ShaderCache_onShaderCompilation));
  swift_release();
  return v0;
}

uint64_t sub_1B6794C18()
{
  sub_1B6794B38();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6794C70()
{
  return type metadata accessor for ShaderCache();
}

uint64_t type metadata accessor for ShaderCache()
{
  uint64_t result = qword_1EB985330;
  if (!qword_1EB985330) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B6794CC4()
{
  sub_1B638BF2C(319, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1B6794DE8()
{
  uint64_t v1 = v0;
  id v2 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC3VFX11ShaderCache_reloadCallback);
  uint64_t v3 = swift_retain();
  v2(v3);
  swift_release();
  *(unsigned char *)(v0 + 88) = 1;
  uint64_t v4 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v4);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B679269C(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1B6792D24(v7);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v4);
  sub_1B679EDF4();
  uint64_t v9 = v6[2];
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = v9 - 1;
    for (uint64_t i = 4; ; i += 103)
    {
      memcpy(__dst, &v6[i], 0x338uLL);
      BOOL v12 = __dst[102] != 0;
      memcpy(v29, &__dst[1], 0x328uLL);
      sub_1B67A3450(__dst);
      unint64_t v13 = sub_1B638A310((uint64_t)v29, v12);
      sub_1B630B7D8(v13, v14);
      sub_1B67A3590(__dst);
      if (!v10) {
        break;
      }
      --v10;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = v8[2];
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = v8 + 6;
    do
    {
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      uint64_t v19 = v16[2];
      uint64_t v20 = v16[3];
      uint64_t v21 = (void *)v16[6];
      BOOL v22 = v21 != 0;
      __dst[0] = *(v16 - 1);
      __dst[1] = v17;
      __dst[2] = v18;
      __dst[3] = v19;
      __dst[4] = v20;
      *(_OWORD *)&__dst[5] = *((_OWORD *)v16 + 2);
      id v27 = v21;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B679C370((uint64_t)__dst, v22, 0);
      uint64_t v23 = v1;
      uint64_t v25 = v24;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      uint64_t v1 = v23;
      v16 += 9;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(v1 + 88) = 0;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1B679506C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  id v7 = v6;
  uint64_t v8 = v5;
  uint64_t v127 = a4;
  uint64_t v149 = *MEMORY[0x1E4F143B8];
  sub_1B638BF2C(0, (unint64_t *)&unk_1EB980390, MEMORY[0x1E4FBCFE8]);
  uint64_t v15 = MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t v17 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v18);
  uint64_t v20 = (char *)&v111 - v19;
  id v21 = sub_1B629EC48(a1, a2, a3);
  if (!v6)
  {
    uint64_t v24 = v22;
    uint64_t v120 = v17;
    uint64_t v121 = v20;
    uint64_t v117 = a1;
    uint64_t v118 = a2;
    uint64_t v25 = v21;
    swift_unknownObjectRetain();
    sub_1B62D8D6C(v25, (uint64_t)v24, v127, v134);
    swift_unknownObjectRelease();
    sub_1B6312FE4((uint64_t)v134, (uint64_t)&v135, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, MEMORY[0x1E4FBB718]);
    if (!*((void *)&v135 + 1))
    {
      swift_unknownObjectRelease();
      return v25;
    }
    uint64_t v116 = (void *)*((void *)&v135 + 1);
    uint64_t v122 = v25;
    id v126 = v24;
    uint64_t v127 = 0;
    long long v138 = v135;
    long long v139 = v136;
    uint64_t v140 = v137;
    uint64_t v115 = v136;
    uint64_t v113 = v135;
    uint64_t v114 = *((void *)&v136 + 1);
    uint64_t v129 = v137;
    uint64_t v26 = v135;
    uint64_t v124 = *((void *)&v136 + 1);
    uint64_t v125 = *((void *)&v135 + 1);
    uint64_t v119 = v137;
    uint64_t v27 = sub_1B62D5DBC(v135, *((uint64_t *)&v135 + 1), *((uint64_t *)&v136 + 1), v137);
    uint64_t v28 = v8;
    uint64_t v123 = v8 + OBJC_IVAR____TtC3VFX11ShaderCache_lock;
    unint64_t v29 = *(os_unfair_lock_s **)(v8 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
    os_unfair_lock_lock(v29);
    uint64_t v30 = *(void *)(v8 + 56);
    if (*(void *)(v30 + 16) && (unint64_t v31 = sub_1B62C1A30(v27), (v32 & 1) != 0))
    {
      uint64_t v33 = *(void *)(v30 + 56) + 56 * v31;
      id v7 = *(id *)v33;
      uint64_t v34 = *(void *)(v33 + 8);
      uint64_t v35 = *(void *)(v33 + 16);
      uint64_t v36 = *(void *)(v33 + 24);
      uint64_t v38 = *(void *)(v33 + 32);
      uint64_t v37 = *(void *)(v33 + 40);
      int v39 = *(unsigned __int8 *)(v33 + 48);
      sub_1B629EBB8(*(void *)v33, v34, v35, v36, v38, v37, *(unsigned char *)(v33 + 48));
      os_unfair_lock_unlock(v29);
      if (v39 == 1)
      {
        swift_bridgeObjectRelease();
        sub_1B6384640((uint64_t)&v139, (uint64_t)v141);
        sub_1B62D8C10((uint64_t)v141);
        swift_unknownObjectRelease();
        sub_1B62D8C3C((uint64_t)&v129);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v40 = swift_unknownObjectRetain();
        sub_1B6385A14(v40, v34, v35, v36, v38, v37, 1u);
        return v7;
      }
      type metadata accessor for ShaderCache.FunctionWrapper();
      uint64_t v75 = v37;
      uint64_t v76 = (_OWORD *)swift_allocObject();
      v76[1] = 0u;
      uint64_t v111 = (uint64_t *)(v76 + 1);
      v76[2] = 0u;
      v76[3] = 0u;
      sub_1B629EBB8((uint64_t)v7, v34, v35, v36, v38, v75, 0);
      sub_1B629EBB8((uint64_t)v7, v34, v35, v36, v38, v75, 0);
      uint64_t v77 = dispatch_group_create();
      uint64_t v123 = v38;
      int v78 = v77;
      dispatch_group_enter(v77);
      LODWORD(v119) = v39;
      uint64_t v79 = (uint64_t)v121;
      sub_1B6E31DC8();
      uint64_t v80 = sub_1B6E31DE8();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v79, 0, 1, v80);
      unint64_t v81 = (void *)swift_allocObject();
      v81[2] = v78;
      v81[3] = v76;
      uint64_t v82 = v81;
      v81[4] = v7;
      uint64_t v112 = v34;
      uint64_t v113 = v35;
      uint64_t v114 = v36;
      uint64_t v115 = v75;
      sub_1B67A38FC((uint64_t)v7, v34, v35, v36, v123, v75, v119);
      uint64_t v83 = qword_1EB9852D0;
      uint64_t v84 = v78;
      uint64_t v116 = v76;
      swift_retain();
      if (v83 != -1) {
        swift_once();
      }
      uint64_t v85 = qword_1EB9854F8;
      swift_retain();
      uint64_t v86 = (uint64_t)v120;
      if (v85 != -1) {
        swift_once();
      }
      uint64_t v87 = qword_1EB997FF0;
      swift_retain();
      swift_release();
      uint64_t v88 = (void (*)(uint64_t))MEMORY[0x1E4FBCFE8];
      uint64_t v89 = (uint64_t)v121;
      sub_1B639956C((uint64_t)v121, v86, (unint64_t *)&unk_1EB980390, MEMORY[0x1E4FBCFE8]);
      uint64_t v90 = (void *)swift_allocObject();
      v90[2] = 0;
      v90[3] = 0;
      v90[4] = v87;
      v90[5] = &unk_1E9DD0048;
      v90[6] = v82;
      sub_1B6398DF8(v86, (uint64_t)&unk_1E9DD0058, (uint64_t)v90);
      swift_release();
      sub_1B6399510(v89, (unint64_t *)&unk_1EB980390, v88);
      sub_1B6E321D8();
      uint64_t v91 = *v111;
      if (*v111)
      {
        uint64_t v92 = v116[6];
        uint64_t v93 = v116[7];
        uint64_t v94 = v116[4];
        uint64_t v120 = (char *)v116[5];
        uint64_t v121 = (char *)v92;
        uint64_t v117 = v93;
        uint64_t v118 = v94;
        sub_1B67A39DC(v91);
        uint64_t v111 = v84;
        uint64_t v96 = v112;
        uint64_t v95 = v113;
        uint64_t v97 = v114;
        uint64_t v98 = v115;
        uint64_t v99 = v123;
        unsigned __int8 v100 = v119;
        sub_1B6385A14((uint64_t)v7, v112, v113, v114, v123, v115, v119);
        swift_bridgeObjectRelease();
        sub_1B6384640((uint64_t)&v139, (uint64_t)v142);
        sub_1B62D8C10((uint64_t)v142);
        swift_unknownObjectRelease();
        sub_1B62D8C3C((uint64_t)&v129);

        swift_unknownObjectRelease();
        sub_1B6385A14((uint64_t)v7, v96, v95, v97, v99, v98, v100);
        swift_release();
        swift_unknownObjectRelease();
        sub_1B6385A14((uint64_t)v7, v96, v95, v97, v99, v98, v100);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return (id)v91;
      }
      *(void *)&long long v131 = 0;
      *((void *)&v131 + 1) = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      *(void *)&long long v131 = 0xD000000000000011;
      *((void *)&v131 + 1) = 0x80000001B6F355C0;
      sub_1B6E31948();
      unint64_t v102 = *((void *)&v131 + 1);
      unint64_t v101 = v131;
      sub_1B67A2B7C();
      uint64_t v103 = swift_allocError();
      *(_OWORD *)uint64_t v104 = __PAIR128__(v102, v101);
      *(void *)(v104 + 16) = 0;
      *(unsigned char *)(v104 + 24) = 1;
      uint64_t v127 = v103;
      swift_willThrow();
      swift_release();

      uint64_t v106 = v112;
      uint64_t v105 = v113;
      uint64_t v108 = v114;
      uint64_t v107 = v115;
      uint64_t v109 = v123;
      unsigned __int8 v110 = v119;
      sub_1B6385A14((uint64_t)v7, v112, v113, v114, v123, v115, v119);
      sub_1B6385A14((uint64_t)v7, v106, v105, v108, v109, v107, v110);
      sub_1B638599C((uint64_t)v7, v106, v105, v108, v109, v107, 0);
      id v74 = &v143;
    }
    else
    {
      uint64_t v120 = (char *)v26;
      uint64_t v121 = (char *)v27;
      os_unfair_lock_unlock(v29);
      float32x4_t v41 = *(void (**)(long long *))(v8 + OBJC_IVAR____TtC3VFX11ShaderCache_onShaderCompilation);
      uint64_t v42 = v125;
      char v43 = a5;
      if (v41)
      {
        if (v41 == (void (*)(long long *))1)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          *(void *)&long long v131 = 0;
          *((void *)&v131 + 1) = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          long long v128 = v131;
          sub_1B6E31948();
          long long v131 = v138;
          long long v132 = v139;
          uint64_t v133 = v140;
          sub_1B6E32B18();
          long long v44 = v128;
          int v45 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          *(void *)&long long v131 = 0;
          swift_retain();
          sub_1B6B33E34(v45, (uint64_t *)&v131, v44, *((uint64_t *)&v44 + 1));
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v42 = v125;
          char v43 = a5;
        }
        else
        {
          unint64_t v46 = *(os_unfair_lock_s **)(v123 + 24);
          swift_retain();
          os_unfair_lock_lock(v46);
          *((void *)&v132 + 1) = &type metadata for FunctionDescriptor;
          uint64_t v47 = swift_allocObject();
          *(void *)&long long v131 = v47;
          long long v48 = v139;
          *(_OWORD *)(v47 + 16) = v138;
          *(_OWORD *)(v47 + 32) = v48;
          *(void *)(v47 + 48) = v140;
          sub_1B6384640((uint64_t)&v139, (uint64_t)v145);
          swift_bridgeObjectRetain();
          sub_1B63846D0((uint64_t)v145);
          swift_unknownObjectRetain();
          sub_1B6399A44((uint64_t)&v129);
          v41(&v131);
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v131);
          os_unfair_lock_unlock(v46);
          sub_1B67A21D4((unint64_t)v41);
        }
      }
      *(void *)&long long v131 = sub_1B6384424();
      *((void *)&v131 + 1) = v49;
      sub_1B6E31948();
      uint64_t v50 = (uint64_t)v121;
      *(void *)&long long v128 = v121;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6384D58("makeFunction", 12, 2u, v131, *((unint64_t *)&v131 + 1), v50, (uint64_t)v130);
      char v51 = v43 & 1;
      uint64_t v52 = v119;
      id v53 = sub_1B62D4D5C((uint64_t)v120, v42, v119, v51);
      *(void *)&long long v131 = 0;
      id v7 = objc_msgSend(v126, sel_newFunctionWithDescriptor_error_, v53, &v131);

      id v54 = (id)v131;
      if (v7)
      {
        sub_1B6384424();
        uint64_t v55 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_setLabel_, v55);

        uint64_t v56 = v123;
        id v57 = *(os_unfair_lock_s **)(v123 + 24);
        os_unfair_lock_lock(v57);
        sub_1B6384640((uint64_t)&v139, (uint64_t)v146);
        v147[0] = v7;
        v147[1] = v113;
        v147[2] = v116;
        v147[3] = v115;
        v147[4] = v114;
        v147[5] = v52;
        char v148 = 1;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B6399A44((uint64_t)&v129);
        swift_unknownObjectRetain();
        sub_1B63846D0((uint64_t)v146);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v131 = *(void *)(v28 + 56);
        *(void *)(v28 + 56) = 0x8000000000000000;
        sub_1B6384C30((uint64_t)v147, v50, isUniquelyReferenced_nonNull_native);
        *(void *)(v28 + 56) = v131;
        swift_bridgeObjectRelease();
        os_unfair_lock_unlock(v57);
        uint64_t v59 = *(os_unfair_lock_s **)(v56 + 24);
        os_unfair_lock_lock(v59);
        sub_1B6385318(v28 + 128);
        os_unfair_lock_unlock(v59);
        sub_1B63852E0((uint64_t)v130);
        swift_bridgeObjectRelease();
        sub_1B62D8C10((uint64_t)v146);
        swift_unknownObjectRelease();
        sub_1B62D8C3C((uint64_t)&v129);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return v7;
      }
      int v60 = v54;
      uint64_t v61 = sub_1B6E30D78();

      uint64_t v127 = v61;
      swift_willThrow();
      int v62 = *(os_unfair_lock_s **)(v123 + 24);
      os_unfair_lock_lock(v62);
      unint64_t v63 = sub_1B62C1A30(v50);
      if (v64)
      {
        unint64_t v65 = v63;
        char v66 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v67 = *(void *)(v28 + 56);
        *(void *)&long long v131 = v67;
        *(void *)(v28 + 56) = 0x8000000000000000;
        if ((v66 & 1) == 0)
        {
          sub_1B6ACE350();
          uint64_t v67 = v131;
        }
        uint64_t v68 = *(void *)(v67 + 56) + 56 * v65;
        uint64_t v69 = *(void *)v68;
        uint64_t v70 = *(void *)(v68 + 8);
        uint64_t v71 = *(void *)(v68 + 16);
        id v7 = *(id *)(v68 + 24);
        uint64_t v72 = *(void *)(v68 + 32);
        uint64_t v120 = *(char **)(v68 + 40);
        uint64_t v121 = (char *)v72;
        LODWORD(v119) = *(unsigned __int8 *)(v68 + 48);
        sub_1B6AC92D0(v65, v67);
        *(void *)(v28 + 56) = v67;
        swift_bridgeObjectRelease();
        sub_1B638599C(v69, v70, v71, (uint64_t)v7, (uint64_t)v121, (uint64_t)v120, v119);
      }
      os_unfair_lock_unlock(v62);
      swift_willThrow();
      id v73 = *(os_unfair_lock_s **)(v123 + 24);
      os_unfair_lock_lock(v73);
      sub_1B6385318(v28 + 128);
      os_unfair_lock_unlock(v73);
      sub_1B63852E0((uint64_t)v130);
      id v74 = &v144;
    }
    swift_bridgeObjectRelease();
    sub_1B6384640((uint64_t)&v139, (uint64_t)v74);
    sub_1B62D8C10((uint64_t)v74);
    swift_unknownObjectRelease();
    sub_1B62D8C3C((uint64_t)&v129);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  return v7;
}

uint64_t sub_1B6795D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a2;
  v4[9] = a3;
  uint64_t v6 = (void *)swift_task_alloc();
  v4[10] = v6;
  uint64_t v7 = sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  *uint64_t v6 = v4;
  v6[1] = sub_1B6795E58;
  uint64_t v8 = MEMORY[0x1E4FBC0F0];
  return MEMORY[0x1F4187D90](v4 + 2, a4, &type metadata for ShaderCache.SpecializedFunction, v7, v8);
}

uint64_t sub_1B6795E58()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1B6796004;
  }
  else {
    id v2 = sub_1B6795F6C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1B6795F6C()
{
  id v2 = *(NSObject **)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v1 + 16);
  long long v7 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = *(void *)(v0 + 16);
  *(void *)(v1 + 24) = v3;
  *(void *)(v1 + 32) = v4;
  *(_OWORD *)(v1 + 40) = v7;
  *(void *)(v1 + 56) = v5;
  sub_1B67A3794(v6);
  dispatch_group_leave(v2);
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1B6796004()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 64));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B6796068()
{
  unsigned __int8 v1 = *(unsigned char *)(v0 + 66);
  uint64_t v2 = *(void *)(v0 + 624);
  uint64_t v3 = *(void *)(v0 + 616);
  uint64_t v4 = *(void *)(v0 + 608);
  uint64_t v5 = *(void *)(v0 + 600);
  uint64_t v6 = *(void *)(v0 + 592);
  uint64_t v7 = *(void *)(v0 + 584);
  swift_unknownObjectRelease();
  sub_1B6385A14(v7, v6, v5, v4, v3, v2, v1);
  swift_bridgeObjectRelease();
  sub_1B6384640(v0 + 240, v0 + 440);
  sub_1B62D8C10(v0 + 440);
  swift_unknownObjectRelease();
  sub_1B62D8C3C(v0 + 448);
  swift_unknownObjectRelease();
  sub_1B6385A14(v7, v6, v5, v4, v3, v2, v1);
  sub_1B6385A14(v7, v6, v5, v4, v3, v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1B67961CC()
{
  uint64_t v1 = v0[71];
  uint64_t v2 = *(os_unfair_lock_s **)(v0[64] + v0[72] + 24);
  os_unfair_lock_lock(v2);
  unint64_t v3 = sub_1B62C1A30(v1);
  if (v4)
  {
    unint64_t v5 = v3;
    uint64_t v6 = v0[64];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(void *)(v6 + 56);
    *(void *)(v6 + 56) = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1B6ACE350();
    }
    uint64_t v9 = v0[64];
    uint64_t v10 = *(void *)(v8 + 56) + 56 * v5;
    uint64_t v11 = *(void *)(v10 + 8);
    uint64_t v19 = *(void *)v10;
    uint64_t v12 = *(void *)(v10 + 16);
    uint64_t v13 = *(void *)(v10 + 24);
    uint64_t v14 = *(void *)(v10 + 32);
    uint64_t v15 = *(void *)(v10 + 40);
    char v18 = *(unsigned char *)(v10 + 48);
    sub_1B6AC92D0(v5, v8);
    *(void *)(v9 + 56) = v8;
    swift_bridgeObjectRelease();
    sub_1B638599C(v19, v11, v12, v13, v14, v15, v18);
  }
  os_unfair_lock_unlock(v2);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B62D8C10((uint64_t)(v0 + 54));
  swift_unknownObjectRelease();
  sub_1B62D8C3C((uint64_t)(v0 + 56));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1B6796380()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 320) = v1;
  if (v1) {
    uint64_t v2 = sub_1B6796490;
  }
  else {
    uint64_t v2 = sub_1B628A5B8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1B6796490()
{
  uint64_t v1 = (void *)v0[39];
  uint64_t v2 = v0[32];
  swift_willThrow();

  unint64_t v3 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v3);
  sub_1B6385318(v2 + 128);
  os_unfair_lock_unlock(v3);
  sub_1B63852E0((uint64_t)(v0 + 10));
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1B6796540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 192) = a7;
  *(void *)(v7 + 128) = a5;
  *(void *)(v7 + 136) = a6;
  *(void *)(v7 + 112) = a3;
  *(void *)(v7 + 120) = a4;
  *(void *)(v7 + 96) = a1;
  *(void *)(v7 + 104) = a2;
  sub_1B638BF2C(0, (unint64_t *)&unk_1EB980390, MEMORY[0x1E4FBCFE8]);
  *(void *)(v7 + 144) = swift_task_alloc();
  *(void *)(v7 + 152) = swift_task_alloc();
  sub_1B67A31BC();
  *(void *)(v7 + 160) = v8;
  *(void *)(v7 + 168) = *(void *)(v8 - 8);
  *(void *)(v7 + 176) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B6796664, 0, 0);
}

uint64_t sub_1B6796664()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    char v25 = *(unsigned char *)(v0 + 192);
    uint64_t v3 = sub_1B6E31DE8();
    uint64_t v4 = *(void *)(v3 - 8);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v23 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    BOOL v22 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    unint64_t v5 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v26 = v2;
      uint64_t v8 = *(void *)(v0 + 144);
      uint64_t v7 = *(void *)(v0 + 152);
      uint64_t v28 = *(void *)(v0 + 136);
      uint64_t v9 = *(void *)(v0 + 120);
      uint64_t v27 = *(void *)(v0 + 128);
      uint64_t v11 = *(v5 - 1);
      uint64_t v10 = *v5;
      v24(v7, 1, 1, v3);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0;
      *(void *)(v12 + 24) = 0;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v11;
      *(void *)(v12 + 48) = v10;
      *(void *)(v12 + 56) = v27;
      *(void *)(v12 + 64) = v28;
      *(unsigned char *)(v12 + 72) = v25;
      sub_1B639956C(v7, v8, (unint64_t *)&unk_1EB980390, MEMORY[0x1E4FBCFE8]);
      LODWORD(v7) = (*v23)(v8, 1, v3);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = *(void *)(v0 + 144);
      if (v7 == 1)
      {
        sub_1B6399510(*(void *)(v0 + 144), (unint64_t *)&unk_1EB980390, MEMORY[0x1E4FBCFE8]);
      }
      else
      {
        sub_1B6E31DD8();
        (*v22)(v13, v3);
      }
      if (*(void *)(v12 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v14 = sub_1B6E31D98();
        uint64_t v16 = v15;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v14 = 0;
        uint64_t v16 = 0;
      }
      uint64_t v17 = **(void **)(v0 + 104);
      sub_1B62F3064(0, (unint64_t *)&unk_1EB9804C0);
      uint64_t v18 = v16 | v14;
      if (v16 | v14)
      {
        uint64_t v18 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v14;
        *(void *)(v0 + 40) = v16;
      }
      uint64_t v6 = *(void *)(v0 + 152);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v18;
      *(void *)(v0 + 64) = v17;
      swift_task_create();
      swift_release();
      sub_1B6399510(v6, (unint64_t *)&unk_1EB980390, MEMORY[0x1E4FBCFE8]);
      v5 += 2;
      uint64_t v2 = v26 - 1;
    }
    while (v26 != 1);
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 72) = MEMORY[0x1E4FBC860];
  sub_1B62F3064(0, (unint64_t *)&unk_1EB9804C0);
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E31E28();
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1B63945B8;
  uint64_t v20 = *(void *)(v0 + 160);
  return MEMORY[0x1F4187E48](v0 + 80, 0, 0, v20, v0 + 88);
}

uint64_t sub_1B6796A70()
{
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1B6796B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_1B639265C;
  return sub_1B63928BC(a5, a6, a7, a8, v16);
}

void sub_1B6796BE0()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  v21[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v20 = v0 + OBJC_IVAR____TtC3VFX11ShaderCache_lock;
  uint64_t v4 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v4);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v7 = v5 + 64;
    while (1)
    {
      uint64_t v8 = *(void *)(v7 - 32);
      uint64_t v9 = *(void *)(v7 - 24);
      uint64_t v10 = *(void *)(v7 - 16);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 == sub_1B6E30EF8() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      char v13 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if (v13) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      v7 += 40;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v3 = v0;
        uint64_t v2 = v1;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_13:
    os_unfair_lock_unlock(v4);
    uint64_t v3 = v0;
    uint64_t v2 = v1;
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
LABEL_10:
    os_unfair_lock_unlock(v4);
  }
  uint64_t v14 = *(void **)(v3 + 16);
  uint64_t v15 = (void *)sub_1B6E30E78();
  v21[0] = 0;
  id v16 = objc_msgSend(v14, sel_newLibraryWithURL_error_, v15, v21);

  if (v16)
  {
    uint64_t v17 = *(os_unfair_lock_s **)(v20 + 24);
    id v18 = v21[0];
    os_unfair_lock_lock(v17);
    sub_1B6796E30(v3, v16);
    os_unfair_lock_unlock(v17);
    if (v2) {
      __break(1u);
    }
  }
  else
  {
    id v19 = v21[0];
    sub_1B6E30D78();

    swift_willThrow();
  }
}

uint64_t sub_1B6796E30(uint64_t a1, void *a2)
{
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1B6E31768();
  objc_msgSend(a2, sel_setLabel_, v4);

  swift_unknownObjectRetain();
  uint64_t v5 = sub_1B6E30EF8();
  uint64_t v7 = v6;
  uint64_t v8 = *(void **)(a1 + 32);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 32) = v8;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B68C2E18(0, v8[2] + 1, 1, v8);
    uint64_t v8 = (void *)result;
    *(void *)(a1 + 32) = result;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B68C2E18(v10 > 1, v11 + 1, 1, v8);
    uint64_t v8 = (void *)result;
    *(void *)(a1 + 32) = result;
  }
  v8[2] = v11 + 1;
  uint64_t v12 = &v8[5 * v11];
  v12[4] = a2;
  v12[5] = v5;
  v12[6] = v7;
  v12[7] = 0x7972617262694CLL;
  v12[8] = v13;
  return result;
}

id sub_1B6796F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F352B8]), sel_init);
  objc_msgSend(v66, sel_setFragmentFunction_, a4);
  objc_msgSend(v66, sel_setObjectFunction_, a2);
  objc_msgSend(v66, sel_setMeshFunction_, a3);
  id v10 = objc_msgSend(v66, sel_fragmentLinkedFunctions);
  uint64_t v61 = v5;
  if (a5)
  {
    sub_1B62F3064(0, (unint64_t *)&unk_1EB9804C0);
    a5 = (void *)sub_1B6E31C18();
  }
  objc_msgSend(v10, sel_setPrivateFunctions_, a5);

  uint64_t v11 = *(void *)(a1 + 184);
  uint64_t v12 = *(void *)(a1 + 192);
  uint64_t v13 = *(void *)(a1 + 200);
  uint64_t v58 = *(void *)(a1 + 208);
  uint64_t v59 = *(void *)(a1 + 216);
  uint64_t v60 = *(void *)(a1 + 224);
  uint64_t v63 = *(void *)(a1 + 232);
  uint64_t v64 = *(void *)(a1 + 240);
  __src = *(void **)(a1 + 248);
  uint64_t v67 = *(void *)(a1 + 256);
  uint64_t v14 = v66;
  objc_msgSend(v66, sel_setRasterSampleCount_, *(void *)(a1 + 264));
  id v15 = objc_msgSend(v66, sel_colorAttachments);
  id v16 = objc_msgSend(v15, sel_objectAtIndexedSubscript_, 0);

  objc_msgSend(v16, sel_setPixelFormat_, v11);
  id v17 = objc_msgSend(v66, sel_colorAttachments);
  id v18 = objc_msgSend(v17, sel_objectAtIndexedSubscript_, 1);

  objc_msgSend(v18, sel_setPixelFormat_, v12);
  id v19 = objc_msgSend(v66, sel_colorAttachments);
  id v20 = objc_msgSend(v19, sel_objectAtIndexedSubscript_, 2);

  objc_msgSend(v20, sel_setPixelFormat_, v13);
  id v21 = objc_msgSend(v66, sel_colorAttachments);
  id v22 = objc_msgSend(v21, sel_objectAtIndexedSubscript_, 3);

  objc_msgSend(v22, sel_setPixelFormat_, v58);
  id v23 = objc_msgSend(v66, sel_colorAttachments);
  id v24 = objc_msgSend(v23, sel_objectAtIndexedSubscript_, 4);

  objc_msgSend(v24, sel_setPixelFormat_, v59);
  id v25 = objc_msgSend(v66, sel_colorAttachments);
  id v26 = objc_msgSend(v25, sel_objectAtIndexedSubscript_, 5);

  objc_msgSend(v26, sel_setPixelFormat_, v60);
  id v27 = objc_msgSend(v66, sel_colorAttachments);
  id v28 = objc_msgSend(v27, sel_objectAtIndexedSubscript_, 6);

  objc_msgSend(v28, sel_setPixelFormat_, v63);
  id v29 = objc_msgSend(v66, sel_colorAttachments);
  id v30 = objc_msgSend(v29, sel_objectAtIndexedSubscript_, 7);

  objc_msgSend(v30, sel_setPixelFormat_, v64);
  objc_msgSend(v66, sel_setDepthAttachmentPixelFormat_, __src);
  objc_msgSend(v66, sel_setStencilAttachmentPixelFormat_, v67);
  uint64_t v31 = 0;
  char v32 = (char *)&__dst[1] + 8;
  memcpy(__dst, (const void *)(a1 + 272), 0x1B9uLL);
  while (1)
  {
    uint64_t v34 = *((void *)v32 - 3);
    uint64_t v33 = *((void *)v32 - 2);
    uint64_t v35 = *((void *)v32 - 1);
    uint64_t v36 = *(void *)v32;
    uint64_t v38 = *((void *)v32 + 1);
    uint64_t v37 = *((void *)v32 + 2);
    uint64_t v68 = v32[24];
    id v39 = objc_msgSend(v14, sel_colorAttachments);
    id v40 = objc_msgSend(v39, sel_objectAtIndexedSubscript_, v31);

    if (v35 != 1) {
      goto LABEL_4;
    }
    v41.i64[0] = v34;
    v41.i64[1] = v33;
    v42.i64[0] = v38;
    v42.i64[1] = v37;
    if ((vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_1B6E50330, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(v42, (int64x2_t)xmmword_1B6E50D30), (int32x4_t)vceqzq_s64(v41)))) & 0xF) == 0&& v36 == 0)
    {
      objc_msgSend(v40, sel_setBlendingEnabled_, 0);
    }
    else
    {
LABEL_4:
      objc_msgSend(v40, sel_setBlendingEnabled_, 1);
      objc_msgSend(v40, sel_setSourceRGBBlendFactor_, v35);
      objc_msgSend(v40, sel_setDestinationRGBBlendFactor_, v36);
      objc_msgSend(v40, sel_setSourceAlphaBlendFactor_, v38);
      objc_msgSend(v40, sel_setDestinationAlphaBlendFactor_, v37);
      objc_msgSend(v40, sel_setRgbBlendOperation_, v34);
      objc_msgSend(v40, sel_setAlphaBlendOperation_, v33);
    }
    ++v31;
    v32 += 56;
    objc_msgSend(v40, sel_setWriteMask_, v68);

    uint64_t v14 = v66;
    if (v31 == 8) {
      break;
    }
    memcpy(__dst, (const void *)(a1 + 272), 0x1B9uLL);
  }
  objc_msgSend(v66, sel_setRasterizationEnabled_, *(unsigned __int8 *)(a1 + 792));
  unint64_t v44 = *(unsigned __int8 *)(a1 + 793);
  if (v44 >= 2 && objc_msgSend(*(id *)(v61 + 16), sel_supportsVertexAmplificationCount_, v44)) {
    objc_msgSend(v66, sel_setMaxVertexAmplificationCount_, v44);
  }
  long long v45 = *(_OWORD *)(a1 + 128);
  long long v46 = *(_OWORD *)(a1 + 144);
  long long v47 = *(_OWORD *)(a1 + 96);
  __dst[7] = *(_OWORD *)(a1 + 112);
  __dst[8] = v45;
  long long v48 = *(_OWORD *)(a1 + 160);
  __dst[9] = v46;
  __dst[10] = v48;
  long long v49 = *(_OWORD *)(a1 + 64);
  long long v50 = *(_OWORD *)(a1 + 80);
  long long v51 = *(_OWORD *)(a1 + 32);
  __dst[3] = *(_OWORD *)(a1 + 48);
  __dst[4] = v49;
  __dst[5] = v50;
  __dst[6] = v47;
  long long v52 = *(_OWORD *)(a1 + 16);
  __dst[0] = *(_OWORD *)a1;
  __dst[1] = v52;
  __dst[2] = v51;
  sub_1B628E8B4();
  sub_1B6E33918();
  sub_1B6E33928();
  sub_1B6E33988();
  sub_1B638491C();
  sub_1B6E31A38();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v53 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();
  objc_msgSend(v66, sel_setLabel_, v53);

  unint64_t v54 = *(void *)(v61 + 152);
  if (v54 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (!v57) {
      return v66;
    }
    goto LABEL_19;
  }
  if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    sub_1B62F3064(0, &qword_1E9DCFF70);
    swift_bridgeObjectRetain();
    uint64_t v55 = (void *)sub_1B6E31C18();
    swift_bridgeObjectRelease();
    objc_msgSend(v66, sel_setBinaryArchives_, v55);
  }
  return v66;
}

uint64_t sub_1B679772C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 4856) = a6;
  *(unsigned char *)(v6 + 3569) = a5;
  *(void *)(v6 + 4848) = a4;
  *(void *)(v6 + 4840) = a3;
  *(void *)(v6 + 4832) = a2;
  return MEMORY[0x1F4188298](sub_1B63120B0, 0, 0);
}

uint64_t sub_1B679775C()
{
  v1[612] = v0;
  if (v0)
  {
    return MEMORY[0x1F41881D0](v1 + 242, v1 + 602, sub_1B6798748, v1 + 338);
  }
  else
  {
    v1[613] = v1[343];
    swift_unknownObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 242, v1 + 602, sub_1B679782C, v1 + 338);
  }
}

uint64_t sub_1B679782C()
{
  v1[614] = v0;
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1B6798C68, 0, 0);
  }
  else
  {
    v1[615] = v1[602];
    swift_unknownObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 82, v1 + 601, sub_1B67978F8, v1 + 338);
  }
}

uint64_t sub_1B67978F8()
{
  v1[616] = v0;
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1B679920C, 0, 0);
  }
  else
  {
    v1[617] = v1[601];
    swift_unknownObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 162, v1 + 603, sub_1B67979C4, v1 + 338);
  }
}

uint64_t sub_1B67979C4()
{
  *(void *)(v1 + 4944) = v0;
  if (v0) {
    uint64_t v2 = sub_1B67997BC;
  }
  else {
    uint64_t v2 = sub_1B67979F8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1B67979F8()
{
  uint64_t v1 = v0[617];
  uint64_t v2 = v0[615];
  uint64_t v3 = v0[613];
  uint64_t v4 = v0[606];
  uint64_t v5 = (void *)v0[603];
  swift_bridgeObjectRetain();
  v0[619] = sub_1B6796F9C(v4, v3, v2, v1, v5);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 242, v0 + 602, sub_1B6797AE8, v0 + 338);
}

uint64_t sub_1B6797AE8()
{
  return MEMORY[0x1F4188298](sub_1B6797B04, 0, 0);
}

uint64_t sub_1B6797B04()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 2744, sub_1B6797B84, v0 + 1936);
}

uint64_t sub_1B6797B84()
{
  return MEMORY[0x1F4188298](sub_1B6797BA0, 0, 0);
}

uint64_t sub_1B6797BA0()
{
  uint64_t v30 = v0;
  uint64_t v28 = v0 + 16;
  swift_release();
  uint64_t v1 = *(void **)(v0 + 4952);
  uint64_t v2 = *(void *)(v0 + 4944);
  uint64_t v3 = *(void *)(v0 + 4888);
  uint64_t v4 = *(void *)(v0 + 4880);
  *(void *)(v0 + 5080) = 0;
  *(void *)(v0 + 5072) = v1;
  *(_OWORD *)(v0 + 5056) = 0u;
  *(void *)(v0 + 5048) = v3;
  *(void *)(v0 + 5040) = &unk_1E9DCFFE8;
  *(void *)(v0 + 5032) = v4;
  *(void *)(v0 + 5024) = &unk_1E9DCFFD8;
  *(void *)(v0 + 5016) = v2;
  uint64_t v5 = *(void *)(v0 + 4856);
  int v6 = *(unsigned __int8 *)(v0 + 3569);
  uint64_t v7 = *(void *)(v0 + 4840);
  if (*(unsigned char *)(v0 + 3569)) {
    uint64_t v8 = "asyncMakeRenderPipelineRefl";
  }
  else {
    uint64_t v8 = "asyncMakeRenderPipeline";
  }
  if (*(unsigned char *)(v0 + 3569)) {
    uint64_t v9 = 27;
  }
  else {
    uint64_t v9 = 23;
  }
  uint64_t v10 = sub_1B628EC80();
  sub_1B6384D58(v8, v9, 2u, v10, v11, v5, v0 + 4584);
  uint64_t v12 = *(void (**)(uint64_t))(v7 + OBJC_IVAR____TtC3VFX11ShaderCache_onShaderCompilation);
  if (v12)
  {
    if (v12 != (void (*)(uint64_t))1)
    {
      id v19 = *(void **)(v0 + 4848);
      id v20 = *(os_unfair_lock_s **)(*(void *)(v0 + 4840) + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
      swift_retain();
      os_unfair_lock_lock(v20);
      *(void *)(v0 + 2768) = &type metadata for RenderPipelineDescriptor;
      uint64_t v21 = swift_allocObject();
      *(void *)(v0 + 2744) = v21;
      memcpy((void *)(v21 + 16), v19, 0x328uLL);
      sub_1B63124DC((uint64_t *)v19);
      v12(v0 + 2744);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + 2744);
      os_unfair_lock_unlock(v20);
      sub_1B67A21D4((unint64_t)v12);
      if (v1) {
        goto LABEL_15;
      }
      goto LABEL_22;
    }
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v13 = *(const void **)(v0 + 4848);
    v29[0] = 0;
    v29[1] = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0xE000000000000000;
    sub_1B6E31948();
    memcpy((void *)(v0 + 2744), v13, 0x328uLL);
    sub_1B6E32B18();
    uint64_t v14 = *(void *)(v0 + 16);
    uint64_t v15 = *(void *)(v0 + 24);
    int v16 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v29[0] = 0;
    swift_retain();
    sub_1B6B33E34(v16, v29, v14, v15);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  if (v1)
  {
LABEL_15:
    if (v6) {
      uint64_t v17 = 3;
    }
    else {
      uint64_t v17 = 0;
    }
    id v18 = *(void **)(*(void *)(v0 + 4840) + 16);
    *(void *)(v0 + 2576) = v0;
    *(void *)(v0 + 2616) = v28;
    *(void *)(v0 + 2584) = sub_1B6798108;
    *(void *)(v0 + 2776) = swift_continuation_init();
    *(void *)(v0 + 2744) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 2752) = 0x40000000;
    *(void *)(v0 + 2760) = sub_1B6392C2C;
    *(void *)(v0 + 2768) = &unk_1E6145CE8;
    objc_msgSend(v18, sel_newRenderPipelineStateWithMeshDescriptor_options_completionHandler_, v1, v17, v0 + 2744);
    return MEMORY[0x1F41881E8](v0 + 2576);
  }
LABEL_22:
  id v22 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6312FE4(v0 + 4408, v0 + 4648, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, MEMORY[0x1E4FBB718]);
  sub_1B6312FE4(v0 + 4648, v0 + 4768, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, v22);
  if (*(void *)(v0 + 4776))
  {
    uint64_t v23 = *(void *)(v0 + 4792);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v23 = 0;
  }
  uint64_t v24 = *(void *)(v0 + 4840);
  sub_1B67A2B7C();
  *(void *)(v0 + 5112) = swift_allocError();
  *(void *)uint64_t v25 = 0xD000000000000015;
  *(void *)(v25 + 8) = 0x80000001B6F352D0;
  *(void *)(v25 + 16) = v23;
  *(unsigned char *)(v25 + 24) = 0;
  swift_willThrow();
  id v26 = *(os_unfair_lock_s **)(v24 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v26);
  sub_1B6385318(v24 + 96);
  os_unfair_lock_unlock(v26);
  sub_1B63852E0(v0 + 4584);
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 4824, sub_1B6798378, v28);
}

uint64_t sub_1B67980EC()
{
  return MEMORY[0x1F4188298](sub_1B63BC570, 0, 0);
}

uint64_t sub_1B6798108()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 2608);
  *(void *)(*(void *)v0 + 5088) = v1;
  if (v1) {
    uint64_t v2 = sub_1B679ABD0;
  }
  else {
    uint64_t v2 = sub_1B6798218;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_1B6798218()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 5016);
  uint64_t v4 = *(void *)(v0 + 4856);
  uint64_t v5 = *(void **)(v0 + 4848);
  uint64_t v6 = *(void *)(v0 + 4840);
  uint64_t v7 = v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock;
  uint64_t v8 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v8);
  sub_1B6312D54(v1, v6, v4, v2, v5);
  os_unfair_lock_unlock(v8);
  if (!v3)
  {
    uint64_t v9 = *(void **)(v0 + 5080);
    uint64_t v10 = *(void **)(v0 + 5072);
    uint64_t v11 = *(void *)(v0 + 4840);
    swift_unknownObjectRelease();

    uint64_t v12 = *(os_unfair_lock_s **)(v7 + 24);
    os_unfair_lock_lock(v12);
    sub_1B6385318(v11 + 96);
    os_unfair_lock_unlock(v12);

    sub_1B63852E0(v0 + 4584);
    MEMORY[0x1F41881D0](v0 + 1296, v0 + 4824, sub_1B638FC6C, v0 + 16);
  }
}

uint64_t sub_1B6798378()
{
  return MEMORY[0x1F4188298](sub_1B6798394, 0, 0);
}

uint64_t sub_1B6798394()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 4808, sub_1B6798418, v0 + 16);
}

uint64_t sub_1B6798418()
{
  return MEMORY[0x1F4188298](sub_1B6798434, 0, 0);
}

uint64_t sub_1B6798434()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void **)(v0 + 5112);
  uint64_t v16 = *(void *)(v0 + 5056);
  uint64_t v15 = *(void *)(v0 + 5040);
  uint64_t v13 = v0 + 2744;
  uint64_t v14 = *(void *)(v0 + 5024);
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 656) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 4856);
  uint64_t v6 = *(void *)(v0 + 4840);
  v17[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v17, v3, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 2744) = v1;
  sub_1B67A2C00(v13);
  sub_1B6312FE4(v13, v0 + 3576, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17[0] = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_1B63131C0(v0 + 3576, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v17[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v17[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v17[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50(v14);
  sub_1B62C6A50(v15);
  sub_1B62C6A50(v16);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B6798748()
{
  return MEMORY[0x1F4188298](sub_1B6798764, 0, 0);
}

uint64_t sub_1B6798764()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 2744, sub_1B67987E4, v0 + 1936);
}

uint64_t sub_1B67987E4()
{
  return MEMORY[0x1F4188298](sub_1B6798800, 0, 0);
}

uint64_t sub_1B6798800()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 4824, sub_1B6798884, v0 + 16);
}

uint64_t sub_1B6798884()
{
  return MEMORY[0x1F4188298](sub_1B67988A0, 0, 0);
}

uint64_t sub_1B67988A0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 4808, sub_1B6798924, v0 + 16);
}

uint64_t sub_1B6798924()
{
  return MEMORY[0x1F4188298](sub_1B6798940, 0, 0);
}

uint64_t sub_1B6798940()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void **)(v0 + 4896);
  uint64_t v13 = v0 + 2744;
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 656) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 4856);
  uint64_t v6 = *(void *)(v0 + 4840);
  v14[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v14, v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 2744) = v1;
  sub_1B67A2C00(v13);
  sub_1B6312FE4(v13, v0 + 3576, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_1B63131C0(v0 + 3576, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v14[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v14[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50((uint64_t)&unk_1E9DCFFD8);
  sub_1B62C6A50((uint64_t)&unk_1E9DCFFE8);
  sub_1B62C6A50(0);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B6798C68()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 4816, sub_1B6798CEC, v0 + 2704);
}

uint64_t sub_1B6798CEC()
{
  return MEMORY[0x1F4188298](sub_1B6798D08, 0, 0);
}

uint64_t sub_1B6798D08()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 2744, sub_1B6798D88, v0 + 1936);
}

uint64_t sub_1B6798D88()
{
  return MEMORY[0x1F4188298](sub_1B6798DA4, 0, 0);
}

uint64_t sub_1B6798DA4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 4824, sub_1B6798E28, v0 + 16);
}

uint64_t sub_1B6798E28()
{
  return MEMORY[0x1F4188298](sub_1B6798E44, 0, 0);
}

uint64_t sub_1B6798E44()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 4808, sub_1B6798EC8, v0 + 16);
}

uint64_t sub_1B6798EC8()
{
  return MEMORY[0x1F4188298](sub_1B6798EE4, 0, 0);
}

uint64_t sub_1B6798EE4()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void **)(v0 + 4912);
  uint64_t v13 = v0 + 2744;
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 656) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 4856);
  uint64_t v6 = *(void *)(v0 + 4840);
  v14[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v14, v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 2744) = v1;
  sub_1B67A2C00(v13);
  sub_1B6312FE4(v13, v0 + 3576, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_1B63131C0(v0 + 3576, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v14[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v14[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50((uint64_t)&unk_1E9DCFFD8);
  sub_1B62C6A50((uint64_t)&unk_1E9DCFFE8);
  sub_1B62C6A50(0);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B679920C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 4816, sub_1B679929C, v0 + 2704);
}

uint64_t sub_1B679929C()
{
  return MEMORY[0x1F4188298](sub_1B67992B8, 0, 0);
}

uint64_t sub_1B67992B8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 2744, sub_1B6799338, v0 + 1936);
}

uint64_t sub_1B6799338()
{
  return MEMORY[0x1F4188298](sub_1B6799354, 0, 0);
}

uint64_t sub_1B6799354()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 4824, sub_1B67993D8, v0 + 16);
}

uint64_t sub_1B67993D8()
{
  return MEMORY[0x1F4188298](sub_1B67993F4, 0, 0);
}

uint64_t sub_1B67993F4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 4808, sub_1B6799478, v0 + 16);
}

uint64_t sub_1B6799478()
{
  return MEMORY[0x1F4188298](sub_1B6799494, 0, 0);
}

uint64_t sub_1B6799494()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void **)(v0 + 4928);
  uint64_t v13 = v0 + 2744;
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 656) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 4856);
  uint64_t v6 = *(void *)(v0 + 4840);
  v14[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v14, v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 2744) = v1;
  sub_1B67A2C00(v13);
  sub_1B6312FE4(v13, v0 + 3576, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_1B63131C0(v0 + 3576, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v14[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v14[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50((uint64_t)&unk_1E9DCFFD8);
  sub_1B62C6A50((uint64_t)&unk_1E9DCFFE8);
  sub_1B62C6A50(0);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B67997BC()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 1936, v0 + 4816, sub_1B6799860, v0 + 2704);
}

uint64_t sub_1B6799860()
{
  return MEMORY[0x1F4188298](sub_1B679987C, 0, 0);
}

uint64_t sub_1B679987C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 2744, sub_1B67998FC, v0 + 1936);
}

uint64_t sub_1B67998FC()
{
  return MEMORY[0x1F4188298](sub_1B6799918, 0, 0);
}

uint64_t sub_1B6799918()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 4824, sub_1B679999C, v0 + 16);
}

uint64_t sub_1B679999C()
{
  return MEMORY[0x1F4188298](sub_1B67999B8, 0, 0);
}

uint64_t sub_1B67999B8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 4808, sub_1B6799A3C, v0 + 16);
}

uint64_t sub_1B6799A3C()
{
  return MEMORY[0x1F4188298](sub_1B6799A58, 0, 0);
}

uint64_t sub_1B6799A58()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void **)(v0 + 4944);
  uint64_t v13 = v0 + 2744;
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 656) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 4856);
  uint64_t v6 = *(void *)(v0 + 4840);
  v14[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v14, v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 2744) = v1;
  sub_1B67A2C00(v13);
  sub_1B6312FE4(v13, v0 + 3576, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_1B63131C0(v0 + 3576, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v14[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v14[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50((uint64_t)&unk_1E9DCFFD8);
  sub_1B62C6A50((uint64_t)&unk_1E9DCFFE8);
  sub_1B62C6A50(0);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B6799D80()
{
  return MEMORY[0x1F4188298](sub_1B6799D9C, 0, 0);
}

uint64_t sub_1B6799D9C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 4824, sub_1B6799E20, v0 + 16);
}

uint64_t sub_1B6799E20()
{
  return MEMORY[0x1F4188298](sub_1B6799E3C, 0, 0);
}

uint64_t sub_1B6799E3C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 4808, sub_1B6799EC0, v0 + 16);
}

uint64_t sub_1B6799EC0()
{
  return MEMORY[0x1F4188298](sub_1B6799EDC, 0, 0);
}

uint64_t sub_1B6799EDC()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void **)(v0 + 4968);
  uint64_t v13 = v0 + 2744;
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 656) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 4856);
  uint64_t v6 = *(void *)(v0 + 4840);
  v14[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v14, v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 2744) = v1;
  sub_1B67A2C00(v13);
  sub_1B6312FE4(v13, v0 + 3576, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_1B63131C0(v0 + 3576, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v14[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v14[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50(0);
  sub_1B62C6A50(0);
  sub_1B62C6A50((uint64_t)&unk_1E9DCFFC8);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B679A1EC()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 2744, sub_1B679A26C, v0 + 1936);
}

uint64_t sub_1B679A26C()
{
  return MEMORY[0x1F4188298](sub_1B679A288, 0, 0);
}

uint64_t sub_1B679A288()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 4824, sub_1B679A30C, v0 + 16);
}

uint64_t sub_1B679A30C()
{
  return MEMORY[0x1F4188298](sub_1B679A328, 0, 0);
}

uint64_t sub_1B679A328()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 4808, sub_1B679A3AC, v0 + 16);
}

uint64_t sub_1B679A3AC()
{
  return MEMORY[0x1F4188298](sub_1B679A3C8, 0, 0);
}

uint64_t sub_1B679A3C8()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void **)(v0 + 4984);
  uint64_t v13 = v0 + 2744;
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 656) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 4856);
  uint64_t v6 = *(void *)(v0 + 4840);
  v14[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v14, v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 2744) = v1;
  sub_1B67A2C00(v13);
  sub_1B6312FE4(v13, v0 + 3576, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_1B63131C0(v0 + 3576, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v14[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v14[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50(0);
  sub_1B62C6A50(0);
  sub_1B62C6A50((uint64_t)&unk_1E9DCFFC8);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B679A6D8()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 2744, sub_1B679A764, v0 + 1936);
}

uint64_t sub_1B679A764()
{
  return MEMORY[0x1F4188298](sub_1B679A780, 0, 0);
}

uint64_t sub_1B679A780()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 4824, sub_1B679A804, v0 + 16);
}

uint64_t sub_1B679A804()
{
  return MEMORY[0x1F4188298](sub_1B679A820, 0, 0);
}

uint64_t sub_1B679A820()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 4808, sub_1B679A8A4, v0 + 16);
}

uint64_t sub_1B679A8A4()
{
  return MEMORY[0x1F4188298](sub_1B679A8C0, 0, 0);
}

uint64_t sub_1B679A8C0()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void **)(v0 + 5000);
  uint64_t v13 = v0 + 2744;
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 656) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 4856);
  uint64_t v6 = *(void *)(v0 + 4840);
  v14[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v14, v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 2744) = v1;
  sub_1B67A2C00(v13);
  sub_1B6312FE4(v13, v0 + 3576, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_1B63131C0(v0 + 3576, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v14[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v14[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50(0);
  sub_1B62C6A50(0);
  sub_1B62C6A50((uint64_t)&unk_1E9DCFFC8);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B679ABD0()
{
  uint64_t v1 = (void *)v0[635];
  uint64_t v2 = (void *)v0[634];
  uint64_t v3 = v0[605];
  swift_willThrow();

  int v4 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v4);
  sub_1B6385318(v3 + 96);
  os_unfair_lock_unlock(v4);

  sub_1B63852E0((uint64_t)(v0 + 573));
  return MEMORY[0x1F41881D0](v0 + 162, v0 + 603, sub_1B679ACBC, v0 + 2);
}

uint64_t sub_1B679ACBC()
{
  return MEMORY[0x1F4188298](sub_1B679ACD8, 0, 0);
}

uint64_t sub_1B679ACD8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 4808, sub_1B679AD5C, v0 + 16);
}

uint64_t sub_1B679AD5C()
{
  return MEMORY[0x1F4188298](sub_1B679AD78, 0, 0);
}

uint64_t sub_1B679AD78()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void **)(v0 + 5088);
  uint64_t v16 = *(void *)(v0 + 5056);
  uint64_t v15 = *(void *)(v0 + 5040);
  uint64_t v13 = v0 + 2744;
  uint64_t v14 = *(void *)(v0 + 5024);
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 656) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 4856);
  uint64_t v6 = *(void *)(v0 + 4840);
  v17[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v17, v3, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 2744) = v1;
  sub_1B67A2C00(v13);
  sub_1B6312FE4(v13, v0 + 3576, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17[0] = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_1B63131C0(v0 + 3576, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v17[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v17[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v17[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50(v14);
  sub_1B62C6A50(v15);
  sub_1B62C6A50(v16);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B679B08C()
{
  uint64_t v1 = *(void **)(v0 + 5080);
  uint64_t v2 = *(void *)(v0 + 4840);
  swift_willThrow();

  uint64_t v3 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v3);
  sub_1B6385318(v2 + 96);
  os_unfair_lock_unlock(v3);

  sub_1B63852E0(v0 + 4584);
  return MEMORY[0x1F41881D0](v0 + 1296, v0 + 4824, sub_1B679B168, v0 + 16);
}

uint64_t sub_1B679B168()
{
  return MEMORY[0x1F4188298](sub_1B679B184, 0, 0);
}

uint64_t sub_1B679B184()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 4808, sub_1B679B208, v0 + 16);
}

uint64_t sub_1B679B208()
{
  return MEMORY[0x1F4188298](sub_1B679B224, 0, 0);
}

uint64_t sub_1B679B224()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void **)(v0 + 5096);
  uint64_t v16 = *(void *)(v0 + 5056);
  uint64_t v15 = *(void *)(v0 + 5040);
  uint64_t v13 = v0 + 2744;
  uint64_t v14 = *(void *)(v0 + 5024);
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 656) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 4856);
  uint64_t v6 = *(void *)(v0 + 4840);
  v17[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v17, v3, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 2744) = v1;
  sub_1B67A2C00(v13);
  sub_1B6312FE4(v13, v0 + 3576, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17[0] = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_1B63131C0(v0 + 3576, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v17[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v17[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v17[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50(v14);
  sub_1B62C6A50(v15);
  sub_1B62C6A50(v16);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B679B538()
{
  return MEMORY[0x1F4188298](sub_1B679B554, 0, 0);
}

uint64_t sub_1B679B554()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 4808, sub_1B679B5D8, v0 + 16);
}

uint64_t sub_1B679B5D8()
{
  return MEMORY[0x1F4188298](sub_1B679B5F4, 0, 0);
}

uint64_t sub_1B679B5F4()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void **)(v0 + 5104);
  uint64_t v16 = *(void *)(v0 + 5056);
  uint64_t v15 = *(void *)(v0 + 5040);
  uint64_t v13 = v0 + 2744;
  uint64_t v14 = *(void *)(v0 + 5024);
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 656) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 4856);
  uint64_t v6 = *(void *)(v0 + 4840);
  v17[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v17, v3, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 2744) = v1;
  sub_1B67A2C00(v13);
  sub_1B6312FE4(v13, v0 + 3576, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17[0] = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = 0x8000000000000000;
  sub_1B63131C0(v0 + 3576, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 40) = v17[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v17[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v17[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 4832));
  swift_release();
  swift_release();
  sub_1B62C6A50(v14);
  sub_1B62C6A50(v15);
  sub_1B62C6A50(v16);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B679B908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[44] = a2;
  v3[45] = a3;
  v3[43] = a1;
  return MEMORY[0x1F4188298](sub_1B6297D70, 0, 0);
}

uint64_t sub_1B679B92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1B639239C, 0, 0);
}

uint64_t sub_1B679B950()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1B679BAE8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1B679BA6C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1B679BA6C()
{
  swift_bridgeObjectRelease();
  **(void **)(v0 + 24) = *(void *)(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B679BAE8()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B679BB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[44] = a2;
  v3[45] = a3;
  v3[43] = a1;
  return MEMORY[0x1F4188298](sub_1B679BB88, 0, 0);
}

uint64_t sub_1B679BB88()
{
  uint64_t v1 = *(long long **)(v0 + 360);
  uint64_t v2 = *((void *)v1 + 22);
  *(void *)(v0 + 368) = v2;
  long long v3 = v1[7];
  long long v4 = v1[8];
  long long v5 = v1[10];
  *(_OWORD *)(v0 + 160) = v1[9];
  *(_OWORD *)(v0 + 176) = v5;
  *(_OWORD *)(v0 + 128) = v3;
  *(_OWORD *)(v0 + 144) = v4;
  long long v6 = v1[3];
  long long v7 = v1[4];
  long long v8 = v1[6];
  *(_OWORD *)(v0 + 96) = v1[5];
  *(_OWORD *)(v0 + 112) = v8;
  *(_OWORD *)(v0 + 64) = v6;
  *(_OWORD *)(v0 + 80) = v7;
  long long v9 = *v1;
  long long v10 = v1[2];
  *(_OWORD *)(v0 + 32) = v1[1];
  *(_OWORD *)(v0 + 48) = v10;
  *(_OWORD *)(v0 + 16) = v9;
  uint64_t v11 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6312FE4(v0 + 96, v0 + 272, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, MEMORY[0x1E4FBB718]);
  sub_1B6312FE4(v0 + 272, v0 + 232, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, v11);
  if (*(void *)(v0 + 240))
  {
    if (v2) {
      uint64_t v12 = v2;
    }
    else {
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v0 + 224) = *(void *)(v0 + 264);
    long long v13 = *(_OWORD *)(v0 + 248);
    *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 232);
    *(_OWORD *)(v0 + 208) = v13;
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 216);
    *(void *)(v0 + 376) = v15;
    *(void *)(v0 + 384) = v16;
    swift_bridgeObjectRetain();
    sub_1B63127F0((void *)(v0 + 272), (void (*)(void, void, void, void, void))sub_1B6312ABC);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1B679BD98;
    return sub_1B63928BC(v14, v15, v16, v12, 0);
  }
  else
  {
    uint64_t v19 = *(void **)(v0 + 344);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v19 = 0;
    id v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_1B679BD98(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 400) = v1;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = sub_1B679BEC0;
  }
  else
  {
    *(void *)(v4 + 408) = a1;
    long long v5 = sub_1B62940A8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1B679BEC0()
{
  swift_bridgeObjectRelease();
  sub_1B6384640((uint64_t)(v0 + 26), (uint64_t)(v0 + 41));
  sub_1B62D8C10((uint64_t)(v0 + 41));
  swift_unknownObjectRelease();
  v0[42] = v0[28];
  sub_1B62D8C3C((uint64_t)(v0 + 42));
  swift_bridgeObjectRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1B679BF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[44] = a2;
  v3[45] = a3;
  v3[43] = a1;
  return MEMORY[0x1F4188298](sub_1B679BFA0, 0, 0);
}

uint64_t sub_1B679BFA0()
{
  uint64_t v1 = *(long long **)(v0 + 360);
  uint64_t v2 = *((void *)v1 + 22);
  *(void *)(v0 + 368) = v2;
  long long v3 = v1[7];
  long long v4 = v1[8];
  long long v5 = v1[10];
  *(_OWORD *)(v0 + 160) = v1[9];
  *(_OWORD *)(v0 + 176) = v5;
  *(_OWORD *)(v0 + 128) = v3;
  *(_OWORD *)(v0 + 144) = v4;
  long long v6 = v1[3];
  long long v7 = v1[4];
  long long v8 = v1[6];
  *(_OWORD *)(v0 + 96) = v1[5];
  *(_OWORD *)(v0 + 112) = v8;
  *(_OWORD *)(v0 + 64) = v6;
  *(_OWORD *)(v0 + 80) = v7;
  long long v9 = *v1;
  long long v10 = v1[2];
  *(_OWORD *)(v0 + 32) = v1[1];
  *(_OWORD *)(v0 + 48) = v10;
  *(_OWORD *)(v0 + 16) = v9;
  uint64_t v11 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6312FE4(v0 + 136, v0 + 272, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, MEMORY[0x1E4FBB718]);
  sub_1B6312FE4(v0 + 272, v0 + 232, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, v11);
  if (*(void *)(v0 + 240))
  {
    if (v2) {
      uint64_t v12 = v2;
    }
    else {
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v0 + 224) = *(void *)(v0 + 264);
    long long v13 = *(_OWORD *)(v0 + 248);
    *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 232);
    *(_OWORD *)(v0 + 208) = v13;
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 216);
    *(void *)(v0 + 376) = v15;
    *(void *)(v0 + 384) = v16;
    swift_bridgeObjectRetain();
    sub_1B63127F0((void *)(v0 + 272), (void (*)(void, void, void, void, void))sub_1B6312ABC);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1B6394170;
    return sub_1B63928BC(v14, v15, v16, v12, 0);
  }
  else
  {
    uint64_t v19 = *(void **)(v0 + 344);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v19 = 0;
    id v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_1B679C1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[44] = a2;
  v3[45] = a3;
  v3[43] = a1;
  return MEMORY[0x1F4188298](sub_1B6297B60, 0, 0);
}

id sub_1B679C1D4(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35208]), sel_init);
  objc_msgSend(v3, sel_setComputeFunction_, a1);
  id v4 = objc_msgSend(a1, sel_name);
  if (!v4)
  {
    sub_1B6E31798();
    id v4 = (id)sub_1B6E31768();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v3, sel_setLabel_, v4);

  unint64_t v5 = *(void *)(v1 + 152);
  if (!(v5 >> 62))
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B6E32C18();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_5:
    sub_1B62F3064(0, &qword_1E9DCFF70);
    swift_bridgeObjectRetain();
    long long v6 = (void *)sub_1B6E31C18();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setBinaryArchives_, v6);
  }
LABEL_6:
  id v7 = objc_msgSend(a1, sel_name);
  if (!v7)
  {
    sub_1B6E31798();
    id v7 = (id)sub_1B6E31768();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v3, sel_setLabel_, v7);

  return v3;
}

id sub_1B679C370(uint64_t a1, uint64_t a2, int a3)
{
  id v4 = (void *)v3;
  uint64_t v164 = *MEMORY[0x1E4F143B8];
  sub_1B638BF2C(0, (unint64_t *)&unk_1EB980390, MEMORY[0x1E4FBCFE8]);
  uint64_t v10 = MEMORY[0x1F4188790](v8 - 8, v9);
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v151 = (uint64_t)&v144 - v13;
  uint64_t v14 = *(void *)a1;
  unint64_t v15 = *(void *)(a1 + 8);
  uint64_t v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v16 = *(void *)a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v16)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v42 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)v161 = 0;
    swift_retain();
    sub_1B6B33E34(v42, (uint64_t *)v161, 0xD000000000000030, 0x80000001B6F34E60);
    swift_release();
    swift_release();
    return 0;
  }
  uint64_t v147 = v12;
  uint64_t v149 = *(void **)(a1 + 24);
  uint64_t v17 = (void *)swift_unknownObjectRetain();
  uint64_t v18 = sub_1B6A5C414(v17);
  swift_unknownObjectRelease();
  uint64_t v157 = v18 ^ a2 & 1;
  uint64_t v158 = v3 + OBJC_IVAR____TtC3VFX11ShaderCache_lock;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24));
  char v19 = *(unsigned char *)(v3 + 88);
  uint64_t v148 = a2;
  LODWORD(v150) = a3;
  if ((v19 & 1) == 0
    && ((v20 = *(void *)(v3 + 48), *(void *)(v20 + 16)) && (unint64_t v21 = sub_1B62C1A30(v157), (v22 & 1) != 0)
     || (a2 & 1) == 0 && (v20 = v4[6], *(void *)(v20 + 16)) && (unint64_t v21 = sub_1B62C1A30(v18 ^ 1), (v23 & 1) != 0)))
  {
    uint64_t v24 = *(void *)(v20 + 56) + 80 * v21;
    id v25 = *(id *)v24;
    uint64_t v26 = *(void *)(v24 + 16);
    uint64_t v27 = *(void *)(v24 + 24);
    uint64_t v28 = *(void *)(v24 + 32);
    uint64_t v29 = *(void *)(v24 + 40);
    uint64_t v30 = *(void *)(v24 + 48);
    uint64_t v31 = *(void *)(v24 + 56);
    char v32 = *(void **)(v24 + 64);
    int v33 = *(unsigned __int8 *)(v24 + 72);
    char v141 = *(unsigned char *)(v24 + 72);
    id v34 = *(id *)v24;
    uint64_t v153 = *(void *)(v24 + 8);
    uint64_t v35 = v26;
    uint64_t v154 = v27;
    uint64_t v36 = v28;
    uint64_t v155 = v29;
    uint64_t v156 = v30;
    uint64_t v152 = v31;
    sub_1B67A2324(v34, v153, v26, v27, v28, v29, v30, v31, v32, v141);
  }
  else
  {
    id v25 = 0;
    uint64_t v153 = 0;
    uint64_t v35 = 0;
    uint64_t v154 = 0;
    uint64_t v36 = 0;
    uint64_t v155 = 0;
    uint64_t v156 = 0;
    uint64_t v152 = 0;
    char v32 = 0;
    int v33 = 255;
  }
  uint64_t v37 = v4[8];
  if (*(void *)(v37 + 16) && (unint64_t v38 = sub_1B62C1A30(v157), (v39 & 1) != 0))
  {
    int v40 = *(unsigned __int8 *)(*(void *)(v37 + 56) + v38);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v158 + 24));
    if (v40 == 1)
    {
      unsigned __int8 v142 = v33;
LABEL_28:
      sub_1B67A2434(v25, v153, v35, v154, v36, v155, v156, v152, v32, v142);
      return 0;
    }
  }
  else
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v158 + 24));
  }
  if (v33 > 1)
  {
    if (v33 != 2)
    {
      if ((v150 & 1) == 0) {
        goto LABEL_84;
      }
      if (qword_1EB985520 != -1) {
        swift_once();
      }
      if ((byte_1EB985230 & 1) == 0)
      {
        uint64_t v87 = dispatch_group_create();
        dispatch_group_enter(v87);
        uint64_t v88 = *(os_unfair_lock_s **)(v158 + 24);
        os_unfair_lock_lock(v88);
        *(void *)v161 = v87;
        memset(&v161[8], 0, 48);
        long long v162 = 0u;
        char v163 = 0;
        uint64_t v89 = v87;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v160[0] = v4[6];
        v4[6] = 0x8000000000000000;
        uint64_t v91 = v157;
        sub_1B67E51F8((uint64_t)v161, v157, isUniquelyReferenced_nonNull_native);
        v4[6] = v160[0];
        swift_bridgeObjectRelease();
        os_unfair_lock_unlock(v88);
        uint64_t v92 = v151;
        sub_1B6E31DC8();
        uint64_t v93 = sub_1B6E31DE8();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v92, 0, 1, v93);
        uint64_t v94 = swift_allocObject();
        *(void *)(v94 + 16) = v89;
        *(void *)(v94 + 24) = v4;
        long long v95 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)(v94 + 32) = *(_OWORD *)a1;
        *(_OWORD *)(v94 + 48) = v95;
        *(_OWORD *)(v94 + 64) = *(_OWORD *)(a1 + 32);
        *(void *)(v94 + 80) = *(void *)(a1 + 48);
        *(unsigned char *)(v94 + 88) = v148 & 1;
        *(void *)(v94 + 96) = v91;
        uint64_t v96 = v89;
        swift_retain();
        sub_1B67A2170(a1);
        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        uint64_t v97 = qword_1EB9854F8;
        swift_retain();
        if (v97 != -1) {
          swift_once();
        }
        uint64_t v98 = qword_1EB997FF0;
        swift_retain();
        swift_release();
        uint64_t v99 = (void (*)(uint64_t))MEMORY[0x1E4FBCFE8];
        uint64_t v100 = v151;
        uint64_t v101 = v147;
        sub_1B639956C(v151, v147, (unint64_t *)&unk_1EB980390, MEMORY[0x1E4FBCFE8]);
        unint64_t v102 = (void *)swift_allocObject();
        v102[2] = 0;
        v102[3] = 0;
        v102[4] = v98;
        v102[5] = &unk_1E9DCFED8;
        v102[6] = v94;
        sub_1B67A1908(v101, (uint64_t)&unk_1E9DCFEE8, (uint64_t)v102);

        swift_release();
        sub_1B6399510(v100, (unint64_t *)&unk_1EB980390, v99);
      }
      else
      {
LABEL_84:
        if (*(void *)(a1 + 40)) {
          uint64_t v44 = *(void *)(a1 + 40);
        }
        else {
          uint64_t v44 = MEMORY[0x1E4FBC860];
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v75 = sub_1B679506C(v14, v15, v149, v44, 0);
        swift_bridgeObjectRelease_n();
        uint64_t v156 = (uint64_t)v75;
        id v76 = sub_1B679C1D4(v75);
        uint64_t v77 = sub_1B6A5C780();
        unint64_t v79 = v78;
        if (v148) {
          uint64_t v80 = "makeComputePipelineRefl";
        }
        else {
          uint64_t v80 = "makeComputePipeline";
        }
        if (v148) {
          uint64_t v81 = 23;
        }
        else {
          uint64_t v81 = 19;
        }
        if (v148) {
          uint64_t v82 = 3;
        }
        else {
          uint64_t v82 = 0;
        }
        sub_1B6384D58(v80, v81, 2u, v77, v79, v157, (uint64_t)v160);
        uint64_t v83 = *(void (**)(unsigned char *))((char *)v4 + OBJC_IVAR____TtC3VFX11ShaderCache_onShaderCompilation);
        if (v83)
        {
          if (v83 == (void (*)(unsigned char *))1)
          {
            uint64_t v155 = v82;
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            *(void *)v161 = 0;
            *(void *)&v161[8] = 0xE000000000000000;
            swift_retain();
            sub_1B6E328C8();
            long long v159 = *(_OWORD *)v161;
            sub_1B6E31948();
            long long v84 = *(_OWORD *)(a1 + 16);
            *(_OWORD *)v161 = *(_OWORD *)a1;
            *(_OWORD *)&v161[16] = v84;
            *(_OWORD *)&v161[32] = *(_OWORD *)(a1 + 32);
            *(void *)&v161[48] = *(void *)(a1 + 48);
            sub_1B6E32B18();
            long long v85 = v159;
            int v86 = sub_1B6E32148();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)v161 = 0;
            swift_retain();
            sub_1B6B33E34(v86, (uint64_t *)v161, v85, *((uint64_t *)&v85 + 1));
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v82 = v155;
          }
          else
          {
            uint64_t v103 = *(os_unfair_lock_s **)(v158 + 24);
            swift_retain();
            os_unfair_lock_lock(v103);
            *(void *)&v161[24] = &type metadata for ComputePipelineDescriptor;
            uint64_t v104 = swift_allocObject();
            *(void *)v161 = v104;
            long long v105 = *(_OWORD *)(a1 + 16);
            *(_OWORD *)(v104 + 16) = *(_OWORD *)a1;
            *(_OWORD *)(v104 + 32) = v105;
            *(_OWORD *)(v104 + 48) = *(_OWORD *)(a1 + 32);
            *(void *)(v104 + 64) = *(void *)(a1 + 48);
            sub_1B67A2170(a1);
            v83(v161);
            _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v161);
            os_unfair_lock_unlock(v103);
            sub_1B67A21D4((unint64_t)v83);
          }
        }
        uint64_t v106 = (void *)v4[2];
        *(void *)v161 = 0;
        *(void *)&long long v159 = 0;
        id v25 = objc_msgSend(v106, sel_newComputePipelineStateWithDescriptor_options_reflection_error_, v76, v82, v161, &v159);
        uint64_t v107 = (void *)v159;
        uint64_t v108 = *(void **)v161;
        id v109 = *(id *)v161;
        id v110 = v107;
        if (v25)
        {
          sub_1B6385698((uint64_t)v76, (SEL *)&selRef_addComputePipelineFunctionsWithDescriptor_error_);
          uint64_t v128 = v158;
          uint64_t v129 = *(os_unfair_lock_s **)(v158 + 24);
          id v130 = v109;
          os_unfair_lock_lock(v129);
          sub_1B679D634(v108, (uint64_t)v4, v157, (uint64_t)v25, a1);
          os_unfair_lock_unlock(v129);

          long long v131 = *(os_unfair_lock_s **)(v128 + 24);
          os_unfair_lock_lock(v131);
          sub_1B6385318((uint64_t)(v4 + 14));
          os_unfair_lock_unlock(v131);
          sub_1B63852E0((uint64_t)v160);
          swift_unknownObjectRelease();

          return v25;
        }
        uint64_t v111 = v110;
        uint64_t v112 = (void *)sub_1B6E30D78();

        swift_willThrow();
        uint64_t v113 = *(os_unfair_lock_s **)(v158 + 24);
        os_unfair_lock_lock(v113);
        sub_1B6385318((uint64_t)(v4 + 14));
        os_unfair_lock_unlock(v113);
        sub_1B63852E0((uint64_t)v160);
        swift_unknownObjectRelease();

        if (qword_1EB9852D0 != -1) {
          swift_once();
        }
        *(void *)v161 = 0;
        *(void *)&v161[8] = 0xE000000000000000;
        swift_retain();
        sub_1B6E328C8();
        sub_1B6E31948();
        *(void *)&long long v159 = v112;
        sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
        sub_1B6E32B18();
        long long v114 = *(_OWORD *)v161;
        int v115 = sub_1B6E32148();
        if (qword_1EB9854F8 != -1) {
          swift_once();
        }
        *(void *)v161 = 0;
        swift_retain();
        sub_1B6B33E34(v115, (uint64_t *)v161, v114, *((uint64_t *)&v114 + 1));
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v116 = *(os_unfair_lock_s **)(v158 + 24);
        os_unfair_lock_lock(v116);
        *(void *)v161 = v112;
        memset(&v161[8], 0, 48);
        long long v162 = 0u;
        char v163 = 2;
        id v117 = v112;
        char v118 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v159 = v4[6];
        v4[6] = 0x8000000000000000;
        uint64_t v119 = v157;
        sub_1B67E51F8((uint64_t)v161, v157, v118);
        v4[6] = v159;
        swift_bridgeObjectRelease();
        char v120 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v159 = v4[8];
        v4[8] = 0x8000000000000000;
        sub_1B67E50E4(0, v119, v120);
        v4[8] = v159;
        swift_bridgeObjectRelease();
        os_unfair_lock_unlock(v116);
      }
      return 0;
    }
    unsigned __int8 v142 = 2;
    goto LABEL_28;
  }
  if (!v33)
  {
    uint64_t v41 = v152;
    if (v150)
    {
      sub_1B67A2434(v25, v153, v35, v154, v36, v155, v156, v152, v32, 0);
    }
    else
    {
      uint64_t v45 = v35;
      sub_1B67A2324(v25, v153, v35, v154, v36, v155, v156, v152, v32, 0);
      CACurrentMediaTime();
      sub_1B6E321D8();
      long long v46 = *(os_unfair_lock_s **)(v158 + 24);
      os_unfair_lock_lock(v46);
      uint64_t v47 = v4[6];
      if (*(void *)(v47 + 16) && (unint64_t v48 = sub_1B62C1A30(v157), (v49 & 1) != 0))
      {
        uint64_t v50 = *(void *)(v47 + 56) + 80 * v48;
        long long v51 = *(void **)v50;
        uint64_t v52 = *(void *)(v50 + 8);
        uint64_t v53 = *(void *)(v50 + 24);
        uint64_t v54 = *(void *)(v50 + 32);
        uint64_t v55 = *(void *)(v50 + 40);
        uint64_t v57 = *(void *)(v50 + 48);
        uint64_t v56 = *(void *)(v50 + 56);
        uint64_t v58 = *(void **)(v50 + 64);
        int v59 = *(unsigned __int8 *)(v50 + 72);
        char v143 = *(unsigned char *)(v50 + 72);
        uint64_t v60 = *(void **)v50;
        uint64_t v149 = *(void **)(v50 + 16);
        uint64_t v150 = v53;
        uint64_t v151 = v54;
        uint64_t v157 = v55;
        uint64_t v158 = v56;
        sub_1B67A2324(v60, v52, (uint64_t)v149, v53, v54, v55, v57, v56, v58, v143);
        os_unfair_lock_unlock(v46);
        if (v59 <= 1)
        {
          uint64_t v148 = v57;
          uint64_t v146 = v36;
          uint64_t v145 = v45;
          if (v59)
          {
            uint64_t v132 = v153;
            uint64_t v133 = v45;
            uint64_t v134 = v154;
            uint64_t v135 = v36;
            uint64_t v136 = v155;
            uint64_t v137 = v156;
            uint64_t v138 = v152;
            sub_1B67A2434(v25, v153, v133, v154, v135, v155, v156, v152, v32, 0);
            sub_1B67A2434(v25, v132, v145, v134, v146, v136, v137, v138, v32, 0);
            id v139 = v58;
            uint64_t v140 = (void *)swift_unknownObjectRetain();
            sub_1B67A2434(v140, v52, (uint64_t)v149, v150, v151, v157, v148, v158, v58, 1u);
            return v51;
          }
          uint64_t v61 = v153;
          uint64_t v62 = v45;
          uint64_t v63 = v154;
          uint64_t v64 = v36;
          uint64_t v65 = v155;
          uint64_t v66 = v156;
          uint64_t v67 = v152;
          sub_1B67A2434(v25, v153, v62, v154, v64, v155, v156, v152, v32, 0);
          sub_1B67A2434(v51, v52, (uint64_t)v149, v150, v151, v157, v148, v158, v58, 0);
          sub_1B67A2434(v25, v61, v145, v63, v146, v65, v66, v67, v32, 0);
          return 0;
        }
        BOOL v121 = v59 == 2;
        uint64_t v41 = v152;
        if (v121)
        {
          uint64_t v148 = v57;
          uint64_t v122 = v153;
          uint64_t v123 = v45;
          uint64_t v145 = v45;
          uint64_t v124 = v154;
          uint64_t v125 = v36;
          uint64_t v146 = v36;
          uint64_t v126 = v155;
          uint64_t v127 = v156;
          sub_1B67A2434(v25, v153, v123, v154, v125, v155, v156, v152, v32, 0);
          sub_1B67A2434(v51, v52, (uint64_t)v149, v150, v151, v157, v148, v158, v58, 2u);
          sub_1B67A2434(v25, v122, v145, v124, v146, v126, v127, v41, v32, 0);
          return 0;
        }
      }
      else
      {
        os_unfair_lock_unlock(v46);
      }
      uint64_t v70 = v153;
      uint64_t v71 = v154;
      uint64_t v72 = v155;
      uint64_t v73 = v156;
      sub_1B67A2434(v25, v153, v45, v154, v36, v155, v156, v41, v32, 0);
      sub_1B67A2434(v25, v70, v45, v71, v36, v72, v73, v41, v32, 0);
    }
    return 0;
  }
  uint64_t v43 = v152;
  if (v150)
  {
    sub_1B67A2434(v25, v153, v35, v154, v36, v155, v156, v152, v32, 1u);
    return 0;
  }
  id v68 = v32;
  uint64_t v69 = (void *)swift_unknownObjectRetain();
  sub_1B67A2434(v69, v153, v35, v154, v36, v155, v156, v43, v32, 1u);
  return v25;
}

uint64_t sub_1B679D634(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)a5;
  uint64_t v10 = *(void *)(a5 + 8);
  uint64_t v11 = *(void *)(a5 + 32);
  v16[0] = a4;
  v16[1] = v9;
  v16[2] = v10;
  long long v17 = *(_OWORD *)(a5 + 16);
  uint64_t v18 = v11;
  long long v19 = *(_OWORD *)(a5 + 40);
  uint64_t v20 = a1;
  char v21 = 1;
  swift_unknownObjectRetain();
  sub_1B67A2170(a5);
  id v12 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0x8000000000000000;
  sub_1B67E51F8((uint64_t)v16, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(a2 + 48) = v22;
  swift_bridgeObjectRelease();
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, a3, v14);
  *(void *)(a2 + 64) = v22;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B679D734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 992) = a6;
  *(unsigned char *)(v6 + 833) = a5;
  *(void *)(v6 + 984) = a4;
  *(void *)(v6 + 976) = a3;
  *(void *)(v6 + 968) = a2;
  return MEMORY[0x1F4188298](sub_1B679D764, 0, 0);
}

uint64_t sub_1B679D764()
{
  uint64_t v1 = v0[123];
  uint64_t v2 = v0[122];
  uint64_t v3 = swift_allocObject();
  v0[125] = v3;
  *(void *)(v3 + 16) = v2;
  long long v4 = *(_OWORD *)v1;
  long long v5 = *(_OWORD *)(v1 + 16);
  long long v6 = *(_OWORD *)(v1 + 32);
  *(void *)(v3 + 72) = *(void *)(v1 + 48);
  *(_OWORD *)(v3 + 56) = v6;
  *(_OWORD *)(v3 + 40) = v5;
  *(_OWORD *)(v3 + 24) = v4;
  swift_retain();
  sub_1B67A2170(v1);
  swift_retain();
  sub_1B62F3064(255, (unint64_t *)&unk_1EB9804C0);
  swift_asyncLet_begin();
  return MEMORY[0x1F41881E0](v0 + 2, v0 + 120, sub_1B679D884, v0 + 90);
}

uint64_t sub_1B679D884()
{
  *(void *)(v1 + 1008) = v0;
  if (v0) {
    return MEMORY[0x1F41881D0](v1 + 16, v1 + 960, sub_1B679DFFC, v1 + 720);
  }
  else {
    return MEMORY[0x1F4188298](sub_1B679D8C8, 0, 0);
  }
}

uint64_t sub_1B679D8C8()
{
  uint64_t v32 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 840;
  uint64_t v3 = v0 + 904;
  uint64_t v4 = *(void *)(v1 + 992);
  int v5 = *(unsigned __int8 *)(v1 + 833);
  uint64_t v6 = *(void *)(v1 + 976);
  id v7 = (void *)swift_unknownObjectRetain();
  id v30 = sub_1B679C1D4(v7);
  *(void *)(v1 + 1016) = v30;
  swift_unknownObjectRelease();
  int v29 = v5;
  if (v5) {
    uint64_t v8 = "asyncMakeComputePipelineRef";
  }
  else {
    uint64_t v8 = "asyncMakeComputePipeline";
  }
  if (v5) {
    uint64_t v9 = 27;
  }
  else {
    uint64_t v9 = 24;
  }
  uint64_t v10 = sub_1B6A5C780();
  sub_1B6384D58(v8, v9, 2u, v10, v11, v4, v2);
  id v12 = *(void (**)(uint64_t))(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_onShaderCompilation);
  if (v12)
  {
    if (v12 == (void (*)(uint64_t))1)
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v13 = *(long long **)(v1 + 984);
      v31[0] = 0;
      v31[1] = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      *(void *)(v1 + 720) = 0;
      *(void *)(v1 + 728) = 0xE000000000000000;
      sub_1B6E31948();
      long long v14 = *v13;
      long long v15 = v13[1];
      long long v16 = v13[2];
      *(void *)(v3 + 48) = *((void *)v13 + 6);
      *(_OWORD *)(v3 + 16) = v15;
      *(_OWORD *)(v3 + 32) = v16;
      *(_OWORD *)uint64_t v3 = v14;
      sub_1B6E32B18();
      uint64_t v17 = *(void *)(v1 + 720);
      uint64_t v18 = *(void *)(v1 + 728);
      int v19 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v31[0] = 0;
      swift_retain();
      sub_1B6B33E34(v19, v31, v17, v18);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t v20 = *(void *)(v1 + 984);
      char v21 = *(os_unfair_lock_s **)(*(void *)(v1 + 976) + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
      swift_retain();
      os_unfair_lock_lock(v21);
      *(void *)(v1 + 928) = &type metadata for ComputePipelineDescriptor;
      uint64_t v22 = swift_allocObject();
      *(void *)(v1 + 904) = v22;
      long long v24 = *(_OWORD *)(v20 + 16);
      long long v23 = *(_OWORD *)(v20 + 32);
      long long v25 = *(_OWORD *)v20;
      *(void *)(v22 + 64) = *(void *)(v20 + 48);
      *(_OWORD *)(v22 + 32) = v24;
      *(_OWORD *)(v22 + 48) = v23;
      *(_OWORD *)(v22 + 16) = v25;
      sub_1B67A2170(v20);
      v12(v3);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v3);
      os_unfair_lock_unlock(v21);
      sub_1B67A21D4((unint64_t)v12);
    }
  }
  if (v29) {
    uint64_t v26 = 3;
  }
  else {
    uint64_t v26 = 0;
  }
  uint64_t v27 = *(void **)(*(void *)(v1 + 976) + 16);
  *(void *)(v1 + 656) = v1;
  *(void *)(v1 + 696) = v1 + 720;
  *(void *)(v1 + 664) = sub_1B679DC88;
  *(void *)(v1 + 936) = swift_continuation_init();
  *(void *)(v1 + 904) = MEMORY[0x1E4F143A8];
  *(void *)(v1 + 912) = 0x40000000;
  *(void *)(v1 + 920) = sub_1B6392C2C;
  *(void *)(v1 + 928) = &unk_1E6140A00;
  objc_msgSend(v27, sel_newComputePipelineStateWithDescriptor_options_completionHandler_, v30, v26, v3);
  return MEMORY[0x1F41881E8](v1 + 656);
}

uint64_t sub_1B679DC88()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 688);
  *(void *)(*(void *)v0 + 1024) = v1;
  if (v1) {
    uint64_t v2 = sub_1B679E2B8;
  }
  else {
    uint64_t v2 = sub_1B679DD98;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_1B679DD98()
{
  uint64_t v1 = v0[126];
  uint64_t v2 = v0[90];
  uint64_t v3 = (void *)v0[91];
  sub_1B6385698(v0[127], (SEL *)&selRef_addComputePipelineFunctionsWithDescriptor_error_);
  v0[129] = v1;
  if (v1)
  {
    uint64_t v4 = (void *)v0[127];
    uint64_t v5 = v0[122];
    swift_unknownObjectRelease();

    uint64_t v6 = *(os_unfair_lock_s **)(v5 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
    os_unfair_lock_lock(v6);
    sub_1B6385318(v5 + 112);
    os_unfair_lock_unlock(v6);
    sub_1B63852E0((uint64_t)(v0 + 105));

    id v7 = sub_1B679E644;
    uint64_t v8 = v0 + 2;
    uint64_t v9 = v0 + 120;
  }
  else
  {
    uint64_t v10 = v0[124];
    uint64_t v11 = v0[123];
    uint64_t v12 = v0[122];
    uint64_t v13 = v12 + OBJC_IVAR____TtC3VFX11ShaderCache_lock;
    long long v14 = *(os_unfair_lock_s **)(v12 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
    os_unfair_lock_lock(v14);
    sub_1B679D634(v3, v12, v10, v2, v11);
    os_unfair_lock_unlock(v14);
    long long v15 = (void *)v0[127];
    uint64_t v16 = v0[122];
    swift_unknownObjectRelease();

    uint64_t v17 = *(os_unfair_lock_s **)(v13 + 24);
    os_unfair_lock_lock(v17);
    sub_1B6385318(v16 + 112);
    os_unfair_lock_unlock(v17);
    sub_1B63852E0((uint64_t)(v0 + 105));

    id v7 = sub_1B679DF6C;
    uint64_t v9 = v0 + 120;
    uint64_t v8 = v0 + 2;
  }
  MEMORY[0x1F41881D0](v8, v9, v7, v0 + 90);
}

uint64_t sub_1B679DF6C()
{
  return MEMORY[0x1F4188298](sub_1B679DF88, 0, 0);
}

uint64_t sub_1B679DF88()
{
  swift_release();
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 968));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B679DFFC()
{
  return MEMORY[0x1F4188298](sub_1B679E018, 0, 0);
}

uint64_t sub_1B679E018()
{
  uint64_t v14 = v0;
  uint64_t v1 = *(void **)(v0 + 1008);
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 904) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 992);
  uint64_t v6 = *(void *)(v0 + 976);
  v13[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v13, v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  id v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 760) = v1;
  *(_OWORD *)(v0 + 768) = 0u;
  *(_OWORD *)(v0 + 784) = 0u;
  *(_OWORD *)(v0 + 800) = 0u;
  *(_OWORD *)(v0 + 816) = 0u;
  *(unsigned char *)(v0 + 832) = 2;
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13[0] = *(void *)(v6 + 48);
  *(void *)(v6 + 48) = 0x8000000000000000;
  sub_1B67E51F8(v0 + 760, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 48) = v13[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v13[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v13[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 968));
  swift_release();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B679E2B8()
{
  uint64_t v1 = *(void **)(v0 + 1016);
  uint64_t v2 = *(void *)(v0 + 976);
  swift_willThrow();
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v3);
  sub_1B6385318(v2 + 112);
  os_unfair_lock_unlock(v3);
  sub_1B63852E0(v0 + 840);

  return MEMORY[0x1F41881D0](v0 + 16, v0 + 960, sub_1B679E388, v0 + 720);
}

uint64_t sub_1B679E388()
{
  return MEMORY[0x1F4188298](sub_1B679E3A4, 0, 0);
}

uint64_t sub_1B679E3A4()
{
  uint64_t v14 = v0;
  uint64_t v1 = *(void **)(v0 + 1024);
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 904) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 992);
  uint64_t v6 = *(void *)(v0 + 976);
  v13[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v13, v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  id v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 760) = v1;
  *(_OWORD *)(v0 + 768) = 0u;
  *(_OWORD *)(v0 + 784) = 0u;
  *(_OWORD *)(v0 + 800) = 0u;
  *(_OWORD *)(v0 + 816) = 0u;
  *(unsigned char *)(v0 + 832) = 2;
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13[0] = *(void *)(v6 + 48);
  *(void *)(v6 + 48) = 0x8000000000000000;
  sub_1B67E51F8(v0 + 760, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 48) = v13[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v13[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v13[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 968));
  swift_release();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B679E644()
{
  return MEMORY[0x1F4188298](sub_1B679E660, 0, 0);
}

uint64_t sub_1B679E660()
{
  uint64_t v14 = v0;
  uint64_t v1 = *(void **)(v0 + 1032);
  swift_release();
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  swift_retain();
  sub_1B6E328C8();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  sub_1B6E31948();
  *(void *)(v0 + 904) = v1;
  sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
  sub_1B6E32B18();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 992);
  uint64_t v6 = *(void *)(v0 + 976);
  v13[0] = 0;
  swift_retain();
  sub_1B6B33E34(v4, v13, v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  id v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v7);
  *(void *)(v0 + 760) = v1;
  *(_OWORD *)(v0 + 768) = 0u;
  *(_OWORD *)(v0 + 784) = 0u;
  *(_OWORD *)(v0 + 800) = 0u;
  *(_OWORD *)(v0 + 816) = 0u;
  *(unsigned char *)(v0 + 832) = 2;
  id v8 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13[0] = *(void *)(v6 + 48);
  *(void *)(v6 + 48) = 0x8000000000000000;
  sub_1B67E51F8(v0 + 760, v5, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 48) = v13[0];
  swift_bridgeObjectRelease();
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v13[0] = *(void *)(v6 + 64);
  *(void *)(v6 + 64) = 0x8000000000000000;
  sub_1B67E50E4(0, v5, v10);
  *(void *)(v6 + 64) = v13[0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 968));
  swift_release();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1B679E900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1B679E924, 0, 0);
}

uint64_t sub_1B679E924()
{
  uint64_t v1 = (uint64_t *)v0[4];
  uint64_t v2 = v1[5];
  v0[5] = v2;
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[3];
  swift_bridgeObjectRetain();
  id v7 = (void *)swift_task_alloc();
  v0[6] = v7;
  *id v7 = v0;
  v7[1] = sub_1B679EA04;
  return sub_1B63928BC(v4, v5, v6, v3, 0);
}

uint64_t sub_1B679EA04(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1B679EB68;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 64) = a1;
    uint64_t v5 = sub_1B679EB44;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1B679EB44()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B679EB68()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1B679EBDC(uint64_t a1)
{
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v13 = 0;
  v15[0] = 0;
  id v4 = objc_msgSend(v3, sel_newComputePipelineStateWithFunction_options_reflection_error_, a1, 3, &v13, v15);
  uint64_t v5 = v13;
  id v6 = v15[0];
  id v7 = v5;
  if (!v4)
  {
    id v8 = (void *)sub_1B6E30D78();

    swift_willThrow();
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    v15[0] = v8;
    sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
    sub_1B6E32B18();
    uint64_t v9 = (uint64_t)v13;
    uint64_t v10 = v14;
    int v11 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v13 = 0;
    swift_retain();
    sub_1B6B33E34(v11, (uint64_t *)&v13, v9, v10);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v4;
}

void sub_1B679EDF4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = MEMORY[0x1E4FBC868];
  *(void *)(v0 + 56) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  *(void *)(v0 + 40) = v2;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;

  os_unfair_lock_unlock(v1);
}

uint64_t sub_1B679EE7C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC3VFX11ShaderCache_lock + 24);
  os_unfair_lock_lock(v1);
  uint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_1B679348C(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_1B67936E4(v4);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v1);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1B6E32C18();
    if (!v6) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_9;
    }
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x1BA9B4580](i, v3);
    }
    else {
      id v8 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v9 = v8;
    sub_1B6E321D8();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B6E32C18();
    if (!v10) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_17;
    }
  }
  for (uint64_t j = 0; j != v10; ++j)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v12 = (id)MEMORY[0x1BA9B4580](j, v5);
    }
    else {
      id v12 = *(id *)(v5 + 8 * j + 32);
    }
    uint64_t v13 = v12;
    sub_1B6E321D8();
  }
LABEL_17:
  swift_bridgeObjectRelease_n();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B679F03C()
{
  sub_1B67A3794(*(void *)(v0 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShaderCache.FunctionWrapper()
{
  return self;
}

void *assignWithCopy for ShaderCache.SpecializedFunction(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ShaderCache.SpecializedFunction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShaderCache.SpecializedFunction(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShaderCache.SpecializedFunction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderCache.SpecializedFunction()
{
  return &type metadata for ShaderCache.SpecializedFunction;
}

void *destroy for ShaderCache.ShaderCompilationTrigger(void *result)
{
  if (*result >= 0xFFFFFFFFuLL) {
    return (void *)swift_release();
  }
  return result;
}

uint64_t _s3VFX11ShaderCacheC24ShaderCompilationTriggerOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

unint64_t *assignWithCopy for ShaderCache.ShaderCompilationTrigger(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      unint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

unint64_t *assignWithTake for ShaderCache.ShaderCompilationTrigger(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      unint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShaderCache.ShaderCompilationTrigger(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ShaderCache.ShaderCompilationTrigger(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

void *sub_1B679F494(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ShaderCache.ShaderCompilationTrigger()
{
  return &type metadata for ShaderCache.ShaderCompilationTrigger;
}

ValueMetadata *type metadata accessor for ShaderCache.Stats()
{
  return &type metadata for ShaderCache.Stats;
}

__n128 initializeWithCopy for PipelineStatistics(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PipelineStatistics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 164)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PipelineStatistics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 160) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 164) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PipelineStatistics()
{
  return &type metadata for PipelineStatistics;
}

uint64_t destroy for ShaderCache.CacheEntry(uint64_t a1)
{
  return sub_1B638599C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t initializeWithCopy for ShaderCache.CacheEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1B629EBB8(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for ShaderCache.CacheEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1B629EBB8(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  char v16 = *(unsigned char *)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  sub_1B638599C(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShaderCache.CacheEntry(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ShaderCache.CacheEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B679F758(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_1B679F760(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ShaderCache.CacheEntry()
{
  return &type metadata for ShaderCache.CacheEntry;
}

void destroy for ShaderCache.ComputePipeline(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v2 = *(void **)(a1 + 64);
}

void *initializeWithCopy for ShaderCache.ComputePipeline(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = (void *)a2[8];
  a1[8] = v7;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v7;
  return a1;
}

void *assignWithCopy for ShaderCache.ComputePipeline(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  uint64_t v4 = (void *)a1[8];
  uint64_t v5 = (void *)a2[8];
  a1[8] = v5;
  id v6 = v5;

  return a1;
}

__n128 initializeWithTake for ShaderCache.ComputePipeline(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ShaderCache.ComputePipeline(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 64);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for ShaderCache.ComputePipeline(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShaderCache.ComputePipeline(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderCache.ComputePipeline()
{
  return &type metadata for ShaderCache.ComputePipeline;
}

void destroy for ShaderCache.RenderPipeline(void *a1)
{
  swift_unknownObjectRelease();
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[12])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[17])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = (void *)a1[102];
}

uint64_t initializeWithCopy for ShaderCache.RenderPipeline(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = *(void *)(a2 + 56);
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 24);
    *long long v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v13;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    uint64_t v7 = *(void *)(a2 + 56);
    if (v7)
    {
LABEL_3:
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = *(void *)(a2 + 96);
      if (v9) {
        goto LABEL_4;
      }
LABEL_8:
      long long v15 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v15;
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      uint64_t v11 = *(void *)(a2 + 136);
      if (v11) {
        goto LABEL_5;
      }
LABEL_9:
      long long v16 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v16;
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      goto LABEL_10;
    }
  }
  long long v14 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v14;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 96);
  if (!v9) {
    goto LABEL_8;
  }
LABEL_4:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = *(void *)(a2 + 136);
  if (!v11) {
    goto LABEL_9;
  }
LABEL_5:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
LABEL_10:
  uint64_t v17 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v17;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  long long v18 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v18;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  long long v19 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v19;
  memcpy((void *)(a1 + 280), (const void *)(a2 + 280), 0x1B9uLL);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  long long v20 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v20;
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_WORD *)(a1 + 800) = *(_WORD *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  char v21 = *(void **)(a2 + 816);
  *(void *)(a1 + 816) = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v22 = v21;
  return a1;
}

uint64_t assignWithCopy for ShaderCache.RenderPipeline(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  long long v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v6)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B67A04EC(a1 + 8);
      uint64_t v7 = *(void *)(a2 + 40);
      long long v8 = *(_OWORD *)(a2 + 24);
      *long long v4 = *v5;
      *(_OWORD *)(a1 + 24) = v8;
      *(void *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *long long v4 = v9;
    *(_OWORD *)(a1 + 24) = v10;
  }
  uint64_t v11 = (_OWORD *)(a1 + 48);
  uint64_t v12 = (_OWORD *)(a2 + 48);
  uint64_t v13 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v13)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B67A04EC(a1 + 48);
      uint64_t v14 = *(void *)(a2 + 80);
      long long v15 = *(_OWORD *)(a2 + 64);
      *uint64_t v11 = *v12;
      *(_OWORD *)(a1 + 64) = v15;
      *(void *)(a1 + 80) = v14;
    }
  }
  else if (v13)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *v12;
    long long v17 = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *uint64_t v11 = v16;
    *(_OWORD *)(a1 + 64) = v17;
  }
  long long v18 = (_OWORD *)(a1 + 88);
  long long v19 = (_OWORD *)(a2 + 88);
  uint64_t v20 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v20)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B67A04EC(a1 + 88);
      uint64_t v21 = *(void *)(a2 + 120);
      long long v22 = *(_OWORD *)(a2 + 104);
      *long long v18 = *v19;
      *(_OWORD *)(a1 + 104) = v22;
      *(void *)(a1 + 120) = v21;
    }
  }
  else if (v20)
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *v19;
    long long v24 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *long long v18 = v23;
    *(_OWORD *)(a1 + 104) = v24;
  }
  long long v25 = (_OWORD *)(a1 + 128);
  uint64_t v26 = (_OWORD *)(a2 + 128);
  uint64_t v27 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v27)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B67A04EC(a1 + 128);
      uint64_t v28 = *(void *)(a2 + 160);
      long long v29 = *(_OWORD *)(a2 + 144);
      _OWORD *v25 = *v26;
      *(_OWORD *)(a1 + 144) = v29;
      *(void *)(a1 + 160) = v28;
    }
  }
  else if (v27)
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *v26;
    long long v31 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    _OWORD *v25 = v30;
    *(_OWORD *)(a1 + 144) = v31;
  }
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(unsigned char *)(a1 + 608) = *(unsigned char *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_retain();
  swift_release();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  long long v32 = *(_OWORD *)(a2 + 752);
  long long v33 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v33;
  *(_OWORD *)(a1 + 752) = v32;
  *(unsigned char *)(a1 + 800) = *(unsigned char *)(a2 + 800);
  *(unsigned char *)(a1 + 801) = *(unsigned char *)(a2 + 801);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  id v34 = *(void **)(a1 + 816);
  uint64_t v35 = *(void **)(a2 + 816);
  *(void *)(a1 + 816) = v35;
  id v36 = v35;

  return a1;
}

uint64_t sub_1B67A04EC(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for ShaderCache.RenderPipeline(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  if (*(void *)(a1 + 16))
  {
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_unknownObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_unknownObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1B67A04EC(a1 + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
LABEL_6:
  if (*(void *)(a1 + 56))
  {
    uint64_t v6 = *(void *)(a2 + 56);
    if (v6)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v6;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_unknownObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_unknownObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1B67A04EC(a1 + 48);
  }
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
LABEL_11:
  if (*(void *)(a1 + 96))
  {
    uint64_t v8 = *(void *)(a2 + 96);
    if (v8)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v8;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_unknownObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_unknownObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1B67A04EC(a1 + 88);
  }
  long long v9 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v9;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
LABEL_16:
  if (!*(void *)(a1 + 136))
  {
LABEL_20:
    long long v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    goto LABEL_21;
  }
  uint64_t v10 = *(void *)(a2 + 136);
  if (!v10)
  {
    sub_1B67A04EC(a1 + 128);
    goto LABEL_20;
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_unknownObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_unknownObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
LABEL_21:
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_unknownObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  long long v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  long long v13 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v13;
  long long v14 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v14;
  long long v15 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v15;
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  long long v16 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v16;
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  long long v17 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v17;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
  long long v18 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v18;
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  long long v19 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = v19;
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  long long v20 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v20;
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
  *(unsigned char *)(a1 + 608) = *(unsigned char *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  long long v21 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v21;
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
  long long v22 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v22;
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_release();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  long long v23 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v23;
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(unsigned char *)(a1 + 800) = *(unsigned char *)(a2 + 800);
  *(unsigned char *)(a1 + 801) = *(unsigned char *)(a2 + 801);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  long long v24 = *(void **)(a1 + 816);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);

  return a1;
}

uint64_t getEnumTagSinglePayload for ShaderCache.RenderPipeline(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 824)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShaderCache.RenderPipeline(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 824) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 824) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderCache.RenderPipeline()
{
  return &type metadata for ShaderCache.RenderPipeline;
}

uint64_t sub_1B67A0A28()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1B67A0ACC(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  long long v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)long long v3 = *(void *)a2;
    long long v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 3;
    if (v9 >= 3)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 3;
          unsigned int v9 = v12 + 3;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 2)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)long long v3 = v14;
      v3[v5] = 2;
    }
    else if (v9 == 1)
    {
      (*(void (**)(char *))(v4 + 16))(a1);
      v3[v5] = 1;
    }
    else
    {
      id v16 = *(id *)a2;
      *(void *)a1 = *(void *)a2;
      a1[v5] = 0;
      id v17 = v16;
    }
  }
  return v3;
}

void sub_1B67A0C74(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 3;
  if (v3 >= 3)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 3;
        unsigned int v3 = v6 + 3;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else {
}
  }

void *sub_1B67A0D84(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    uint64_t v11 = *(void *)a2;
    id v12 = *(id *)a2;
    *a1 = v11;
    char v10 = 2;
  }
  else
  {
    if (v5 != 1)
    {
      id v13 = *(id *)a2;
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v4) = 0;
      id v14 = v13;
      return a1;
    }
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1B67A0EE8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {

    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      long long v19 = *(void **)a2;
      id v20 = v19;
      *(void *)a1 = v19;
      char v18 = 2;
    }
    else
    {
      if (v13 != 1)
      {
        long long v21 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        a1[v7] = 0;
        id v22 = v21;
        return a1;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 1;
    }
    a1[v7] = v18;
  }
  return a1;
}

void *sub_1B67A1138(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    *a1 = *(void *)a2;
    char v10 = 2;
  }
  else if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

uint64_t sub_1B67A12B0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1B67A13E4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1B67A15ACLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1B67A15D4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 3;
        LODWORD(v4) = v7 + 3;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1B67A168C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for ShaderCache.Status()
{
  return sub_1B62C36EC();
}

uint64_t destroy for ShaderCache.Library()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ShaderCache.Library(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ShaderCache.Library(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ShaderCache.Library(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ShaderCache.Library()
{
  return &type metadata for ShaderCache.Library;
}

uint64_t sub_1B67A1908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B6E31DE8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1B6E31DD8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1B6399510(a1, (unint64_t *)&unk_1EB980390, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B6E31D98();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1B67A1AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[5] = a5;
  v6[6] = a6;
  v6[3] = a1;
  v6[4] = a4;
  return MEMORY[0x1F4188298](sub_1B67A1AEC, 0, 0);
}

uint64_t sub_1B67A1AEC()
{
  if (qword_1EB9811B0 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = *(void *)(v0 + 32);
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1B67A1C50;
  uint64_t v3 = *(void *)(v0 + 24);
  return MEMORY[0x1F41881B8](v3, v0 + 16, &unk_1E9DD0068, v1, 0, 0, 0xD000000000000014, 0x80000001B6F34EA0);
}

uint64_t sub_1B67A1C50()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1B67A1DB4, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1B67A1DB4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B67A1DCC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1B638E234;
  return v6(a1);
}

uint64_t sub_1B67A1EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[5] = a5;
  v6[6] = a6;
  v6[3] = a1;
  v6[4] = a4;
  return MEMORY[0x1F4188298](sub_1B63904F4, 0, 0);
}

uint64_t sub_1B67A1ECC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1B638F1A4;
  return v6(a1);
}

uint64_t sub_1B67A1FA8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    int64_t v8 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v8 <= a2) {
      int64_t v8 = a2;
    }
    if (v7 < a2) {
      a2 = v8;
    }
    else {
      a2 = v7;
    }
  }
  int64_t v9 = *((void *)a4 + 2);
  if (a2 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = a2;
  }
  if (v10)
  {
    sub_1B63130BC(0, (unint64_t *)&unk_1EB980DB0, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
    int v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    int v11 = (char *)MEMORY[0x1E4FBC860];
  }
  unsigned int v13 = v11 + 32;
  unsigned int v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    if (v14 < &v13[v9] && v13 < &v14[v9])
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    memcpy(v13, v14, v9);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v11;
}

uint64_t sub_1B67A2100()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B67A2118()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B67A2170(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B67A21D4(unint64_t result)
{
  if (result >= 2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B67A21E8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1B67A2250()
{
  char v2 = *(unsigned char *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1B638E3C8;
  *(void *)(v4 + 992) = v3;
  *(unsigned char *)(v4 + 833) = v2;
  *(void *)(v4 + 984) = v0 + 32;
  *(_OWORD *)(v4 + 968) = v5;
  return MEMORY[0x1F4188298](sub_1B679D764, 0, 0);
}

id sub_1B67A2324(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, char a10)
{
  if (a10 == 2)
  {
    return result;
  }
  if (a10 != 1)
  {
    if (a10) {
      return result;
    }
    return result;
  }
  id v10 = a9;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();

  return (id)swift_bridgeObjectRetain();
}

void sub_1B67A2434(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, unsigned __int8 a10)
{
  if (a10 != 255) {
    sub_1B67A2454(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  }
}

void sub_1B67A2454(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, char a10)
{
  switch(a10)
  {
    case 2:
      goto LABEL_7;
    case 1:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      a1 = a9;
LABEL_9:
LABEL_7:

      return;
    case 0:
      goto LABEL_9;
  }
}

uint64_t sub_1B67A253C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B67A2574()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1B67A25D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *long long v5 = v2;
  v5[3] = v4;
  v5[4] = v1 + 24;
  v5[1] = sub_1B638E3C8;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1B679E924, 0, 0);
}

uint64_t sub_1B67A2690()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1B67A26E0()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1B67A2744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1B6E32A48();
    uint64_t v11 = a3 + 168;
    id v10 = *(void **)(a3 + 168);
    uint64_t v9 = *(void *)(v11 + 8);
    if (v9) {
      uint64_t v6 = v9;
    }
    size_t v12 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v13 = *(v12 - 1);
      uint64_t v14 = *v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B679506C(v13, v14, v10, v6, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4) {
        break;
      }
      v12 += 2;
      sub_1B6E32A08();
      sub_1B6E32A68();
      sub_1B6E32A78();
      sub_1B6E32A28();
      if (!--v5) {
        return v16;
      }
    }
    swift_release();
  }
  return v6;
}

id sub_1B67A286C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a2;
  uint64_t v5 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6312FE4(a1, (uint64_t)v13, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, MEMORY[0x1E4FBB718]);
  uint64_t v6 = v13[1];
  uint64_t v7 = (void *)v13[3];
  uint64_t v12 = v13[0];
  uint64_t v8 = v13[4];
  sub_1B6312FE4(a1, (uint64_t)v14, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, v5);
  if (!v15) {
    return 0;
  }
  if (*(void *)(a3 + 176))
  {
    uint64_t v9 = *(void *)(a3 + 176);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = v8;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v10 = sub_1B679506C(v12, v6, v7, v9, 0);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

id sub_1B67A29D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a2;
  uint64_t v5 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6312FE4(a1, (uint64_t)v12, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, MEMORY[0x1E4FBB718]);
  uint64_t v6 = v12[1];
  uint64_t v7 = (void *)v12[3];
  uint64_t v11 = v12[0];
  sub_1B6312FE4(a1, (uint64_t)v13, (unint64_t *)&qword_1EB97D6F0, (uint64_t)&type metadata for FunctionDescriptor, v5);
  if (!v14) {
    return 0;
  }
  if (*(void *)(a3 + 176)) {
    uint64_t v8 = *(void *)(a3 + 176);
  }
  else {
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v9 = sub_1B679506C(v11, v6, v7, v8, 0);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v9;
}

uint64_t sub_1B67A2B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  return MEMORY[0x1F4188298](sub_1B6392C70, 0, 0);
}

uint64_t sub_1B67A2B64()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1B67A2B7C()
{
  unint64_t result = qword_1E9DCFF78;
  if (!qword_1E9DCFF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DCFF78);
  }
  return result;
}

void sub_1B67A2BD0(unsigned char *a1)
{
  a1[824] = -1;
}

uint64_t sub_1B67A2C00(uint64_t result)
{
  *(unsigned char *)(result + 824) = 2;
  return result;
}

uint64_t sub_1B67A2C0C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1B638BE6C(0, a3, a4, a5, MEMORY[0x1E4FBB320]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1B67A2C90()
{
  if (v0[3])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[8])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[13])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[18])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 824, 7);
}

uint64_t sub_1B67A2D70(uint64_t result)
{
  *(unsigned char *)(result + 824) = 0;
  return result;
}

uint64_t sub_1B67A2D78()
{
  swift_release();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 80))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 120))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 160))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 856, 7);
}

uint64_t sub_1B67A2E70()
{
  if (v0[3])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[8])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[13])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[18])
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 832, 7);
}

uint64_t sub_1B67A2F60(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1B638E3C8;
  v5[44] = v4;
  v5[45] = v1 + 24;
  v5[43] = a1;
  return MEMORY[0x1F4188298](sub_1B679BB88, 0, 0);
}

uint64_t sub_1B67A3024(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1B638E3C8;
  v5[44] = v4;
  v5[45] = v1 + 24;
  v5[43] = a1;
  return MEMORY[0x1F4188298](sub_1B679BFA0, 0, 0);
}

uint64_t sub_1B67A30E4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  char v10 = *(unsigned char *)(v2 + 48);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_1B638E3C8;
  return sub_1B6796540(a1, a2, v6, v7, v8, v9, v10);
}

void sub_1B67A31BC()
{
  if (!qword_1EB9803A0)
  {
    sub_1B62F3064(255, (unint64_t *)&unk_1EB9804C0);
    sub_1B62C5560(255, (unint64_t *)&qword_1EB980E40);
    unint64_t v0 = sub_1B6E31E48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9803A0);
    }
  }
}

uint64_t sub_1B67A324C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 73, 7);
}

uint64_t sub_1B67A32A4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  char v8 = *(unsigned char *)(v1 + 72);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1B638E3C8;
  void v9[2] = a1;
  char v10 = (void *)swift_task_alloc();
  _OWORD v9[3] = v10;
  *char v10 = v9;
  v10[1] = sub_1B639265C;
  return sub_1B63928BC(v4, v5, v6, v7, v8);
}

uint64_t sub_1B67A33B8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B67A33F0()
{
  return sub_1B6794AE8();
}

unint64_t sub_1B67A33F8()
{
  unint64_t result = qword_1E9DD0020;
  if (!qword_1E9DD0020)
  {
    sub_1B6E30F48();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0020);
  }
  return result;
}

void *sub_1B67A3450(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[7];
  uint64_t v8 = a1[12];
  uint64_t v9 = a1[11];
  uint64_t v10 = a1[17];
  uint64_t v11 = a1[16];
  uint64_t v12 = (void *)a1[102];
  swift_unknownObjectRetain();
  sub_1B6312ABC(v2, v3);
  sub_1B6312ABC(v4, v5);
  sub_1B6312ABC(v9, v8);
  sub_1B6312ABC(v11, v10);
  id v6 = v12;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_1B67A3590(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[7];
  uint64_t v7 = a1[12];
  uint64_t v8 = a1[11];
  uint64_t v9 = a1[17];
  uint64_t v10 = a1[16];
  uint64_t v11 = (void *)a1[102];
  swift_unknownObjectRelease();
  sub_1B6312CF0(v2, v3);
  sub_1B6312CF0(v4, v5);
  sub_1B6312CF0(v8, v7);
  sub_1B6312CF0(v10, v9);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return a1;
}

void sub_1B67A36D0()
{
  if (!qword_1EB9855A0)
  {
    sub_1B62C5560(255, (unint64_t *)&qword_1EB9852E0);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9855A0);
    }
  }
}

uint64_t sub_1B67A3738(uint64_t a1)
{
  sub_1B62E17B4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B67A3794(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B67A3800()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B67A3848(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1B638E234;
  return sub_1B6795D7C(a1, v4, v5, v6);
}

uint64_t sub_1B67A38FC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255) {
    return sub_1B629EBB8(result, a2, a3, a4, a5, a6, a7 & 1);
  }
  return result;
}

uint64_t sub_1B67A3918(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1B638E3C8;
  *(void *)(v5 + 48) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1B67A1AEC, 0, 0);
}

uint64_t sub_1B67A39DC(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1B67A3A4C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1B638E3C8;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  long long v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *long long v6 = v5;
  v6[1] = sub_1B638E234;
  return v8(a1);
}

uint64_t initializeWithCopy for ShaderCache.ShaderCacheWeakReference(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41868B0](a1, a2);
}

uint64_t assignWithCopy for ShaderCache.ShaderCacheWeakReference()
{
  return MEMORY[0x1F41868A8]();
}

uint64_t initializeWithTake for ShaderCache.ShaderCacheWeakReference()
{
  return MEMORY[0x1F41868D8]();
}

uint64_t assignWithTake for ShaderCache.ShaderCacheWeakReference()
{
  return MEMORY[0x1F41868D0]();
}

ValueMetadata *type metadata accessor for ShaderCache.ShaderCacheWeakReference()
{
  return &type metadata for ShaderCache.ShaderCacheWeakReference;
}

uint64_t sub_1B67A3B90(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    swift_unknownObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t destroy for ShaderError(uint64_t a1)
{
  return sub_1B67A3BE4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_1B67A3BE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)
  {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ShaderError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B67A3B90(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ShaderError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B67A3B90(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B67A3BE4(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for TextureArgument(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ShaderError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B67A3BE4(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SamplerArgument(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SamplerArgument(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B67A3DF8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1B67A3E00(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ShaderError()
{
  return &type metadata for ShaderError;
}

uint64_t sub_1B67A3E24()
{
  return *(unsigned int *)(v0 + 32);
}

uint64_t sub_1B67A3E2C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(a2 + 8))(v2 + 132, 0, ObjectType, a2);
}

double sub_1B67A3E84@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  *(unsigned char *)(a1 + 8) = 1;
  __asm { FMOV            V0.2S, #1.0 }
  *(void *)(a1 + 12) = _D0;
  *(_DWORD *)(a1 + 20) = 0;
  *(_OWORD *)(a1 + 24) = xmmword_1B6E849D0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 1;
  *(_DWORD *)(a1 + 64) = 1065353216;
  *(_OWORD *)(a1 + 80) = xmmword_1B6E4F540;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0x3F80000000000000;
  *(_WORD *)(a1 + 128) = 1;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(void *)(a1 + 132) = 0xFFFFFFFFLL;
  return result;
}

uint64_t sub_1B67A3EE0()
{
  return sub_1B6E33938();
}

void sub_1B67A3F10(void *a1@<X8>)
{
  *a1 = &unk_1F0F71040;
}

uint64_t sub_1B67A3F20()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B67A3F80()
{
  return sub_1B6E31B28();
}

unint64_t sub_1B67A3FD0(char a1)
{
  unint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6874676E65727473;
      break;
    case 2:
      unint64_t result = 0x6E696E65706D6164;
      break;
    case 3:
      unint64_t result = 2003790950;
      break;
    case 4:
      unint64_t result = 0x6F6D416573696F6ELL;
      break;
    case 5:
      unint64_t result = 0x6565536573696F6ELL;
      break;
    case 6:
      unint64_t result = 0x5073746365666661;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0x73726579616CLL;
      break;
    case 9:
      unint64_t result = 0x6F69746365726964;
      break;
    case 10:
      unint64_t result = 0x66664F6C6C6166;
      break;
    case 11:
      unint64_t result = 0x5066664F6C6C6166;
      break;
    case 12:
    case 13:
      unint64_t result = 0x5266664F6C6C6166;
      break;
    case 14:
      unint64_t result = 0xD000000000000011;
      break;
    case 15:
      unint64_t result = 0x65727574786574;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1B67A41E0(char a1)
{
  unint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6874676E65727473;
      break;
    case 2:
      unint64_t result = 0x6E696E65706D6164;
      break;
    case 3:
      unint64_t result = 2003790950;
      break;
    case 4:
      unint64_t result = 0x6F6D416573696F6ELL;
      break;
    case 5:
      unint64_t result = 0x6565536573696F6ELL;
      break;
    case 6:
      unint64_t result = 0x5073746365666661;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0x73726579616CLL;
      break;
    case 9:
      unint64_t result = 0x6F69746365726964;
      break;
    case 10:
      unint64_t result = 0x66664F6C6C6166;
      break;
    case 11:
      unint64_t result = 0x5066664F6C6C6166;
      break;
    case 12:
    case 13:
      unint64_t result = 0x5266664F6C6C6166;
      break;
    case 14:
      unint64_t result = 0xD000000000000011;
      break;
    case 15:
      unint64_t result = 0x65727574786574;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1B67A43F0(void *a1@<X8>)
{
  *a1 = &unk_1F0F71188;
}

uint64_t sub_1B67A4400()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B67A4460()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B67A44B0()
{
  return sub_1B6E33988();
}

void sub_1B67A44F4(void *a1@<X8>)
{
  *a1 = &unk_1F0F71240;
}

uint64_t sub_1B67A4504()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B67A4564()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B67A45B4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B67A60B8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1B67A41E0);
}

uint64_t sub_1B67A45CC(uint64_t a1, uint64_t a2)
{
  return sub_1B67A6168(a1, a2, (void (*)(uint64_t))sub_1B67A3FD0);
}

uint64_t sub_1B67A45E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67A61EC(a1, a2, a3, (void (*)(void))sub_1B67A3FD0);
}

uint64_t sub_1B67A45FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67A625C(a1, a2, a3, (void (*)(uint64_t))sub_1B67A3FD0);
}

uint64_t sub_1B67A4614@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B67A98F4();
  *a1 = result;
  return result;
}

unint64_t sub_1B67A4644@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1B67A3FD0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B67A4670()
{
  return sub_1B67A41E0(*v0);
}

uint64_t sub_1B67A4678@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B67A98F4();
  *a1 = result;
  return result;
}

void sub_1B67A46A0(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1B67A46AC(uint64_t a1)
{
  unint64_t v2 = sub_1B67AE2FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67A46E8(uint64_t a1)
{
  unint64_t v2 = sub_1B67AE2FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B67A4724(char a1)
{
  uint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6874676E65727473;
      break;
    case 2:
      uint64_t result = 0x6E696E65706D6164;
      break;
    case 3:
      uint64_t result = 0x6F6D416573696F6ELL;
      break;
    case 4:
      uint64_t result = 0x6565536573696F6ELL;
      break;
    case 5:
      uint64_t result = 0x79726F6765746163;
      break;
    case 6:
      uint64_t result = 0x4566666F6C6C6166;
      break;
    case 7:
      uint64_t result = 0x65727574786574;
      break;
    case 8:
      uint64_t result = 0x657669746361;
      break;
    case 9:
      uint64_t result = 0x6465657073;
      break;
    case 10:
      uint64_t result = 0x746E65747865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B67A4894(char a1)
{
  uint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6874676E65727473;
      break;
    case 2:
      uint64_t result = 0x6E696E65706D6164;
      break;
    case 3:
      uint64_t result = 0x6F6D416573696F6ELL;
      break;
    case 4:
      uint64_t result = 0x6565536573696F6ELL;
      break;
    case 5:
      uint64_t result = 0x79726F6765746163;
      break;
    case 6:
      uint64_t result = 0x4566666F6C6C6166;
      break;
    case 7:
      uint64_t result = 0x65727574786574;
      break;
    case 8:
      uint64_t result = 0x657669746361;
      break;
    case 9:
      uint64_t result = 0x6465657073;
      break;
    case 10:
      uint64_t result = 0x746E65747865;
      break;
    default:
      return result;
  }
  return result;
}

__n128 sub_1B67A4A04@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B67A998C(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1B67A4A50(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B67A60B8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1B67A4894);
}

uint64_t sub_1B67A4A68(uint64_t a1, uint64_t a2)
{
  return sub_1B67A6168(a1, a2, (void (*)(uint64_t))sub_1B67A4724);
}

uint64_t sub_1B67A4A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67A61EC(a1, a2, a3, (void (*)(void))sub_1B67A4724);
}

uint64_t sub_1B67A4A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67A625C(a1, a2, a3, (void (*)(uint64_t))sub_1B67A4724);
}

uint64_t sub_1B67A4AB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B67A98A8();
  *a1 = result;
  return result;
}

uint64_t sub_1B67A4AE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B67A4724(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B67A4B0C()
{
  return sub_1B67A4894(*v0);
}

uint64_t sub_1B67A4B14@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B67A98A8();
  *a1 = result;
  return result;
}

void sub_1B67A4B3C(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1B67A4B48(uint64_t a1)
{
  unint64_t v2 = sub_1B67AA4D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67A4B84(uint64_t a1)
{
  unint64_t v2 = sub_1B67AA4D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B67A4BC0(void *a1)
{
  uint64_t v3 = v1;
  sub_1B67AE294(0, &qword_1E9DD0088, (uint64_t (*)(void))sub_1B67AA4D0, (uint64_t)&type metadata for ForceField.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  char v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B67AA4D0();
  sub_1B6E33A88();
  char v15 = *(unsigned char *)(v3 + 8);
  long long v12 = *(_OWORD *)(v3 + 80);
  LOBYTE(v13) = 0;
  sub_1B6E32F88();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1B6E32F78();
    LOBYTE(v13) = 2;
    sub_1B6E32F78();
    LOBYTE(v13) = 3;
    sub_1B6E32F78();
    LOBYTE(v13) = 4;
    sub_1B6E33028();
    LOBYTE(v13) = 5;
    sub_1B6E33028();
    LOBYTE(v13) = 6;
    sub_1B6E32F78();
    *(void *)&long long v13 = *(void *)(v3 + 132);
    char v14 = 7;
    sub_1B6657A10();
    sub_1B6E32FA8();
    LOBYTE(v13) = 8;
    sub_1B6E32F58();
    LOBYTE(v13) = 9;
    sub_1B6E32F78();
    long long v13 = v12;
    char v14 = 10;
    sub_1B67AE294(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    sub_1B62AEF40((unint64_t *)&qword_1EB97D1D8);
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

__n128 sub_1B67A4F88@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B67A9F5C(a1, (uint64_t)v8);
  if (!v2)
  {
    long long v5 = v9[0];
    *(_OWORD *)(a2 + 96) = v8[6];
    *(_OWORD *)(a2 + 112) = v5;
    *(_OWORD *)(a2 + 124) = *(_OWORD *)((char *)v9 + 12);
    long long v6 = v8[3];
    *(_OWORD *)(a2 + 32) = v8[2];
    *(_OWORD *)(a2 + 48) = v6;
    long long v7 = v8[5];
    *(_OWORD *)(a2 + 64) = v8[4];
    *(_OWORD *)(a2 + 80) = v7;
    __n128 result = (__n128)v8[1];
    *(_OWORD *)a2 = v8[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1B67A4FE4(void *a1)
{
  return sub_1B67A4BC0(a1);
}

uint64_t sub_1B67A4FFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B67A9820();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t *sub_1B67A5028(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 32);
  v27[0] = *(_OWORD *)(v1 + 16);
  v27[1] = v2;
  uint64_t v28 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v27, 0x200000000, v4);
  uint64_t result = (uint64_t *)sub_1B62D7490((uint64_t)v4, (uint64_t)&v5, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v5)
  {
    uint64_t v16 = v5;
    int v17 = v6;
    char v18 = v7;
    uint64_t v19 = v8;
    char v20 = v9;
    uint64_t v21 = v10;
    uint64_t v22 = v11;
    long long v23 = v12;
    long long v24 = v13;
    uint64_t v25 = v14;
    uint64_t v26 = v15;
    sub_1B6D86350((uint64_t)&v16);
    return sub_1B632F170(v4);
  }
  return result;
}

uint64_t sub_1B67A50FC(float32x4_t *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_1B62D02FC(a2, (uint64_t)&v79, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
  unint64_t v10 = a1->i64[0];
  float v11 = a1->f32[3];
  uint64_t v12 = a1[2].i64[1];
  uint64_t v13 = a1[3].i64[1];
  if (a1->i8[8])
  {
    if ((a3 & 1) == 0)
    {
      uint64_t result = sub_1B67ADC80(102, 204, 255);
      int v17 = result;
      goto LABEL_9;
    }
    float32x4_t v75 = a1[6];
    float32x4_t v77 = a1[5];
    unint64_t v67 = v79;
    unint64_t v68 = v81;
    unint64_t v69 = v80;
    unint64_t v70 = v83;
    unint64_t v71 = v82;
    uint64_t v72 = v85;
    unint64_t v73 = v84;
    uint64_t v74 = v86;
    uint64_t result = sub_1B67ADC80(255, 111, 207);
    int v17 = result;
  }
  else
  {
    float32x4_t v75 = a1[6];
    float32x4_t v77 = a1[5];
    unint64_t v67 = v79;
    unint64_t v68 = v81;
    unint64_t v69 = v80;
    unint64_t v70 = v83;
    unint64_t v71 = v82;
    uint64_t v72 = v85;
    unint64_t v73 = v84;
    uint64_t v74 = v86;
    uint64_t result = sub_1B67ADC80(128, 128, 128);
    int v17 = result;
    if ((a3 & 1) == 0)
    {
LABEL_9:
      uint64_t v20 = a4;
LABEL_10:
      switch(v10)
      {
        case 0uLL:
          goto LABEL_57;
        case 1uLL:
        case 5uLL:
          BOOL v21 = v11 > 0.0;
          BOOL v22 = v10 == 1;
          float v23 = 0.4;
          if (v21 && v22) {
            float v24 = 0.4;
          }
          else {
            float v24 = 0.15;
          }
          if (v21 && v22) {
            float v23 = 0.15;
          }
          float v76 = v23;
          float v78 = v24;
          float32x4_t v25 = vmulq_n_f32((float32x4_t)xmmword_1B6E4F300, v23);
          float32x4_t v26 = vsubq_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F300, v24), v25);
          v25.i32[3] = 1.0;
          v26.i32[3] = 0;
          float32x4_t v127 = v25;
          v128[0] = v26;
          *(void *)&v128[1] = 2;
          memset((char *)&v128[1] + 8, 0, 57);
          sub_1B62D02FC(a2, (uint64_t)v97, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
          v124.n128_u8[0] = 1;
          if (v98) {
            sub_1B6D7E4E0(a5, 0x100000000uLL, v20, (long long *)&v127, v17);
          }
          else {
            sub_1B6D7E238(a5, 0x100000000uLL, v20, (long long *)&v127, v17, v97[0], v97[1], v97[2], v97[3]);
          }
          float32x4_t v39 = vmulq_n_f32((float32x4_t)xmmword_1B6E4F310, v76);
          float32x4_t v40 = vsubq_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F310, v78), v39);
          v39.i32[3] = 1.0;
          v40.i32[3] = 0;
          __n128 v124 = (__n128)v39;
          __n128 v125 = (__n128)v40;
          *(void *)&v126[0] = 2;
          memset((char *)v126 + 8, 0, 32);
          memset((char *)&v126[2] + 8, 0, 25);
          sub_1B62D02FC(a2, (uint64_t)v95, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
          v119[0].i8[0] = 1;
          if (v96) {
            sub_1B6D7E4E0(a5, 0x100000000uLL, v20, (long long *)&v124, v17);
          }
          else {
            sub_1B6D7E238(a5, 0x100000000uLL, v20, (long long *)&v124, v17, v95[0], v95[1], v95[2], v95[3]);
          }
          float32x4_t v41 = vmulq_n_f32((float32x4_t)xmmword_1B6E4F320, v76);
          float32x4_t v42 = vsubq_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F320, v78), v41);
          v41.i32[3] = 1.0;
          v42.i32[3] = 0;
          v119[0] = v41;
          v119[1] = v42;
          uint64_t v120 = 2;
          long long v121 = 0u;
          long long v122 = 0u;
          memset(v123, 0, sizeof(v123));
          sub_1B62D02FC(a2, (uint64_t)v93, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
          v114[0].i8[0] = 1;
          if (v94) {
            sub_1B6D7E4E0(a5, 0x100000000uLL, v20, (long long *)v119, v17);
          }
          else {
            sub_1B6D7E238(a5, 0x100000000uLL, v20, (long long *)v119, v17, v93[0], v93[1], v93[2], v93[3]);
          }
          float32x4_t v43 = vmulq_n_f32((float32x4_t)xmmword_1B6E4F330, v76);
          float32x4_t v44 = vsubq_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F330, v78), v43);
          v43.i32[3] = 1.0;
          v44.i32[3] = 0;
          v114[0] = v43;
          v114[1] = v44;
          uint64_t v115 = 2;
          long long v116 = 0u;
          long long v117 = 0u;
          memset(v118, 0, sizeof(v118));
          sub_1B62D02FC(a2, (uint64_t)v91, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
          v109[0].i8[0] = 1;
          if (v92) {
            sub_1B6D7E4E0(a5, 0x100000000uLL, v20, (long long *)v114, v17);
          }
          else {
            sub_1B6D7E238(a5, 0x100000000uLL, v20, (long long *)v114, v17, v91[0], v91[1], v91[2], v91[3]);
          }
          float32x4_t v45 = vmulq_n_f32((float32x4_t)xmmword_1B6E4F2E0, v76);
          float32x4_t v46 = vsubq_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F2E0, v78), v45);
          v45.i32[3] = 1.0;
          v46.i32[3] = 0;
          v109[0] = v45;
          v109[1] = v46;
          uint64_t v110 = 2;
          long long v111 = 0u;
          long long v112 = 0u;
          memset(v113, 0, sizeof(v113));
          sub_1B62D02FC(a2, (uint64_t)v89, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
          v104[0].i8[0] = 1;
          if (v90) {
            sub_1B6D7E4E0(a5, 0x100000000uLL, v20, (long long *)v109, v17);
          }
          else {
            sub_1B6D7E238(a5, 0x100000000uLL, v20, (long long *)v109, v17, v89[0], v89[1], v89[2], v89[3]);
          }
          float32x4_t v47 = vmulq_n_f32((float32x4_t)xmmword_1B6E4F340, v76);
          float32x4_t v48 = vsubq_f32(vmulq_n_f32((float32x4_t)xmmword_1B6E4F340, v78), v47);
          v47.i32[3] = 1.0;
          v48.i32[3] = 0;
          v104[0] = v47;
          v104[1] = v48;
          uint64_t v105 = 2;
          long long v106 = 0u;
          long long v107 = 0u;
          memset(v108, 0, sizeof(v108));
          sub_1B62D02FC(a2, (uint64_t)v87, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
          if (v88)
          {
            char v49 = (long long *)v104;
            return sub_1B6D7E4E0(a5, 0x100000000uLL, v20, v49, v17);
          }
          __n128 v50 = (__n128)v87[0];
          __n128 v51 = (__n128)v87[1];
          __n128 v52 = (__n128)v87[2];
          __n128 v53 = (__n128)v87[3];
          uint64_t v54 = (long long *)v104;
          break;
        case 2uLL:
          float32x4_t v127 = 0uLL;
          *(void *)&v128[0] = 0x400000003F000000;
          memset((char *)v128 + 8, 0, 72);
          char v38 = 5;
          goto LABEL_61;
        case 6uLL:
          goto LABEL_60;
        case 7uLL:
          float32x4_t v127 = (float32x4_t)xmmword_1B6E849F0;
          v128[0] = xmmword_1B6E84A00;
          *(void *)&v128[1] = 0x3F00000040000000;
          memset((char *)&v128[1] + 8, 0, 56);
          char v38 = 4;
          goto LABEL_61;
        case 8uLL:
        case 9uLL:
          goto LABEL_59;
        default:
          return result;
      }
      return sub_1B6D7E238(a5, 0x100000000uLL, v20, v54, v17, v50, v51, v52, v53);
    }
  }
  switch(v12)
  {
    case 1:
      float32x4_t v18 = v77;
      v18.i32[3] = 0;
      int8x16_t v141 = (int8x16_t)xmmword_1B6E4F370;
      float32x4_t v142 = v18;
      memset(v143, 0, sizeof(v143));
      char v19 = 6;
      goto LABEL_20;
    case 2:
      int8x16_t v141 = vextq_s8((int8x16_t)vdupq_lane_s32(0, 0), (int8x16_t)v77, 4uLL);
      float32x4_t v142 = 0u;
      memset(v143, 0, sizeof(v143));
      char v19 = 3;
LABEL_20:
      char v144 = v19;
      sub_1B62D02FC(a2, (uint64_t)&v137, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
      if (v139[32])
      {
        LOBYTE(v129) = 1;
        goto LABEL_26;
      }
      __n128 v34 = v137;
      __n128 v35 = v138;
      __n128 v36 = *(__n128 *)v139;
      __n128 v37 = *(__n128 *)&v139[16];
      LOBYTE(v129) = 1;
      goto LABEL_49;
    case 3:
      if (v13 == 2)
      {
        uint64_t v20 = a4;
      }
      else
      {
        float32x4_t v55 = vaddq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E4F2E0, v77, 2), (float32x4_t)0);
        v55.i32[3] = v77.i32[0];
        int8x16_t v141 = 0uLL;
        float32x4_t v142 = v55;
        v143[0] = 4;
        memset(&v143[1], 0, 56);
        char v144 = 7;
        sub_1B62D02FC(a2, (uint64_t)v102, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
        v137.n128_u8[0] = 1;
        if (v103) {
          uint64_t result = sub_1B6D7E4E0(a5, 0x100000000uLL, a4, (long long *)v141.i8, v17);
        }
        else {
          uint64_t result = sub_1B6D7E238(a5, 0x100000000uLL, a4, (long long *)v141.i8, v17, v102[0], v102[1], v102[2], v102[3]);
        }
        BOOL v60 = v13 == 1;
        uint64_t v20 = a4;
        if (v60) {
          goto LABEL_56;
        }
      }
      float32x4_t v61 = vaddq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E4F340, v77, 2), (float32x4_t)0);
      v61.i32[3] = v77.i32[0];
      __n128 v137 = 0uLL;
      __n128 v138 = (__n128)v61;
      *(void *)id v139 = 4;
      memset(&v139[8], 0, 56);
      char v140 = 7;
      sub_1B62D02FC(a2, (uint64_t)v100, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
      if (v101)
      {
        LOBYTE(v129) = 1;
        unint64_t v30 = 0x100000000;
        long long v31 = (long long *)&v137;
        uint64_t v32 = a5;
        uint64_t v33 = v20;
        goto LABEL_55;
      }
      __n128 v34 = v100[0];
      __n128 v35 = v100[1];
      __n128 v36 = v100[2];
      __n128 v37 = v100[3];
      LOBYTE(v129) = 1;
      unint64_t v56 = 0x100000000;
      uint64_t v57 = (long long *)&v137;
      uint64_t v58 = a5;
      uint64_t v59 = v20;
      goto LABEL_50;
    case 4:
      v15.i64[0] = 1;
      v16.i64[0] = v13;
      v27.i64[1] = 3212836864;
      v27.i64[0] = 2;
      float32x4_t v28 = vmulq_n_f32((float32x4_t)vbslq_s8((int8x16_t)vdupq_lane_s64(vceqq_s64(v16, v15).i64[0], 0), (int8x16_t)0, (int8x16_t)xmmword_1B6E4F340), v77.f32[0]);
      float32x4_t v29 = vmulq_n_f32((float32x4_t)vbslq_s8((int8x16_t)vdupq_lane_s64(vceqq_s64(v16, v27).i64[0], 0), (int8x16_t)0, (int8x16_t)xmmword_1B6E4F2E0), v77.f32[0]);
      v28.i32[3] = v77.i32[0];
      v29.i32[3] = v77.i32[0];
      int8x16_t v141 = (int8x16_t)v28;
      float32x4_t v142 = v29;
      v143[0] = 4;
      memset(&v143[1], 0, 56);
      char v144 = 7;
      sub_1B62D02FC(a2, (uint64_t)&v137, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
      if (v139[32])
      {
        LOBYTE(v129) = 1;
LABEL_26:
        unint64_t v30 = (unint64_t)v129 << 32;
        long long v31 = (long long *)&v141;
        uint64_t v32 = a5;
        uint64_t v20 = a4;
        uint64_t v33 = a4;
LABEL_55:
        uint64_t result = sub_1B6D7E4E0(v32, v30, v33, v31, v17);
      }
      else
      {
        __n128 v34 = v137;
        __n128 v35 = v138;
        __n128 v36 = *(__n128 *)v139;
        __n128 v37 = *(__n128 *)&v139[16];
        LOBYTE(v129) = 1;
LABEL_49:
        unint64_t v56 = (unint64_t)v129 << 32;
        uint64_t v57 = (long long *)&v141;
        uint64_t v58 = a5;
        uint64_t v20 = a4;
        uint64_t v59 = a4;
LABEL_50:
        uint64_t result = sub_1B6D7E238(v58, v56, v59, v57, v17, v34, v35, v36, v37);
      }
LABEL_56:
      switch(v10)
      {
        case 0uLL:
LABEL_57:
          float32x4_t v127 = (float32x4_t)xmmword_1B6E4F370;
          v128[0] = xmmword_1B6E84A20;
          *(void *)&v128[1] = 2;
          memset((char *)&v128[1] + 8, 0, 57);
          sub_1B62D02FC(a2, (uint64_t)&v124, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
          if (v126[2]) {
            goto LABEL_62;
          }
          __n128 v50 = v124;
          __n128 v51 = v125;
          __n128 v52 = (__n128)v126[0];
          __n128 v53 = (__n128)v126[1];
          goto LABEL_65;
        case 3uLL:
        case 4uLL:
          return result;
        case 6uLL:
LABEL_60:
          float32x4_t v127 = 0uLL;
          v128[0] = xmmword_1B6E4F320;
          v128[1] = xmmword_1B6E84A10;
          *(void *)&v128[2] = 4;
          memset((char *)&v128[2] + 8, 0, 40);
          char v38 = 9;
          goto LABEL_61;
        case 8uLL:
LABEL_59:
          float32x4_t v127 = (float32x4_t)xmmword_1B6E4F370;
          v128[0] = xmmword_1B6E849E0;
          memset(&v128[1], 0, 64);
          char v38 = 6;
LABEL_61:
          LOBYTE(v128[5]) = v38;
          sub_1B62D02FC(a2, (uint64_t)&v124, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
          if (v126[2])
          {
LABEL_62:
            v119[0].i8[0] = 1;
            char v49 = (long long *)&v127;
            return sub_1B6D7E4E0(a5, 0x100000000uLL, v20, v49, v17);
          }
          __n128 v50 = v124;
          __n128 v51 = v125;
          __n128 v52 = (__n128)v126[0];
          __n128 v53 = (__n128)v126[1];
LABEL_65:
          v119[0].i8[0] = 1;
          uint64_t v54 = (long long *)&v127;
          break;
        default:
          sub_1B62D02FC(a2, (uint64_t)v99, (unint64_t *)&qword_1EB97D810, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4);
          if (v99[64])
          {
            float32x4_t v62 = (float32x4_t)xmmword_1B6E4F370;
            __n128 v63 = (__n128)xmmword_1B6E4F2E0;
            __n128 v64 = (__n128)xmmword_1B6E4F320;
            __n128 v65 = (__n128)xmmword_1B6E4F300;
          }
          else
          {
            v65.n128_u64[0] = v67;
            v64.n128_u64[0] = v68;
            v65.n128_u64[1] = v69;
            v64.n128_u64[1] = v71;
            v63.n128_u64[0] = v70;
            v63.n128_u64[1] = v73;
            v62.i64[0] = v72;
            v62.i64[1] = v74;
          }
          __n128 v66 = (__n128)vaddq_f32(v75, v62);
          v66.n128_u32[3] = v62.u32[3];
          uint64_t v129 = 1028443341;
          long long v130 = 0u;
          long long v131 = 0u;
          long long v132 = 0u;
          long long v133 = 0u;
          long long v134 = 0u;
          uint64_t v135 = 0;
          char v136 = 2;
          v127.i8[0] = 1;
          uint64_t result = sub_1B6D7E238(a5, 0x100000000uLL, v20, (long long *)&v129, v17, v65, v64, v63, v66);
          if (v10 <= 9) {
            goto LABEL_10;
          }
          return result;
      }
      break;
    default:
      uint64_t v20 = a4;
      goto LABEL_56;
  }
  return sub_1B6D7E238(a5, 0x100000000uLL, v20, v54, v17, v50, v51, v52, v53);
}

uint64_t sub_1B67A5DE4()
{
  return type metadata accessor for ParticleForceField.CPUSystem();
}

uint64_t sub_1B67A5E04(char a1)
{
  uint64_t result = 0x6C6169646172;
  switch(a1)
  {
    case 1:
      uint64_t result = 1684957559;
      break;
    case 2:
      uint64_t result = 0x786574726F76;
      break;
    case 3:
      uint64_t result = 0x636974656E67616DLL;
      break;
    case 4:
      uint64_t result = 0x63696E6F6D726168;
      break;
    case 5:
      uint64_t result = 1734439524;
      break;
    case 6:
      uint64_t result = 0x73726579616CLL;
      break;
    case 7:
      uint64_t result = 0x65727574786574;
      break;
    case 8:
      uint64_t result = 0x7261656E696CLL;
      break;
    case 9:
      uint64_t result = 0x6573696F6ELL;
      break;
    case 10:
      uint64_t result = 0x6E656C7562727574;
      break;
    case 11:
      uint64_t result = 0x676E69727073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B67A5F44(char a1)
{
  uint64_t result = 0x6C6169646172;
  switch(a1)
  {
    case 1:
      uint64_t result = 1684957559;
      break;
    case 2:
      uint64_t result = 0x786574726F76;
      break;
    case 3:
      uint64_t result = 0x636974656E67616DLL;
      break;
    case 4:
      uint64_t result = 0x63696E6F6D726168;
      break;
    case 5:
      uint64_t result = 1734439524;
      break;
    case 6:
      uint64_t result = 0x73726579616CLL;
      break;
    case 7:
      uint64_t result = 0x65727574786574;
      break;
    case 8:
      uint64_t result = 0x7261656E696CLL;
      break;
    case 9:
      uint64_t result = 0x6573696F6ELL;
      break;
    case 10:
      uint64_t result = 0x6E656C7562727574;
      break;
    case 11:
      uint64_t result = 0x676E69727073;
      break;
    default:
      return result;
  }
  return result;
}

double sub_1B67A6084@<D0>(uint64_t a1@<X8>)
{
  __asm { FMOV            V0.4S, #1.0 }
  *(_OWORD *)a1 = _Q0;
  *(_OWORD *)(a1 + 16) = _Q0;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(a1 + 32) = result;
  *(_DWORD *)(a1 + 40) = 255;
  return result;
}

uint64_t sub_1B67A60A0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B67A60B8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1B67A5F44);
}

uint64_t sub_1B67A60B8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_1B67A6150(uint64_t a1, uint64_t a2)
{
  return sub_1B67A6168(a1, a2, (void (*)(uint64_t))sub_1B67A5E04);
}

uint64_t sub_1B67A6168(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1B6E33918();
  a3(v5);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B67A61D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67A61EC(a1, a2, a3, (void (*)(void))sub_1B67A5E04);
}

uint64_t sub_1B67A61EC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B67A6244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67A625C(a1, a2, a3, (void (*)(uint64_t))sub_1B67A5E04);
}

uint64_t sub_1B67A625C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1B6E33918();
  a4(v6);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B67A62C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B67A9940();
  *a1 = result;
  return result;
}

uint64_t sub_1B67A62F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B67A5E04(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B67A6320()
{
  return sub_1B67A5F44(*v0);
}

uint64_t sub_1B67A6328@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B67A9940();
  *a1 = result;
  return result;
}

void sub_1B67A6350(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1B67A635C(uint64_t a1)
{
  unint64_t v2 = sub_1B67AAA0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67A6398(uint64_t a1)
{
  unint64_t v2 = sub_1B67AAA0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B67A63D4(void *a1)
{
  uint64_t v3 = v1;
  sub_1B67AE294(0, &qword_1E9DD00A8, (uint64_t (*)(void))sub_1B67AAA0C, (uint64_t)&type metadata for ParticleForceField.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v12[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B67AAA0C();
  sub_1B6E33A88();
  char v21 = 0;
  sub_1B6E32F78();
  if (!v2)
  {
    char v20 = 2;
    sub_1B6E32F78();
    char v19 = 3;
    sub_1B6E32F78();
    char v18 = 4;
    sub_1B6E32F78();
    char v17 = 5;
    sub_1B6E32F78();
    int v13 = *(_DWORD *)(v3 + 40);
    char v16 = 6;
    sub_1B67AAAB4();
    sub_1B6E32FA8();
    char v15 = 7;
    sub_1B6E32F78();
    char v14 = 8;
    sub_1B6E32F78();
    v12[11] = 9;
    sub_1B6E32F78();
    v12[10] = 10;
    sub_1B6E32F78();
    v12[9] = 11;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B67A66EC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B67AA578(a1, (float *)&v6);
  if (!v2)
  {
    long long v5 = *(_OWORD *)v7;
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)&v7[12];
    *(_OWORD *)((char *)a2 + 28) = *(_OWORD *)&v7[12];
  }
  return result;
}

uint64_t sub_1B67A6734(void *a1)
{
  return sub_1B67A63D4(a1);
}

float sub_1B67A674C(uint64_t a1, __n128 a2)
{
  unint64_t v2 = a2.n128_u64[0];
  float v3 = a2.n128_f32[2];
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  float v6 = *(float *)(a1 + 64);
  long long v7 = *(_OWORD *)(a1 + 80);
  float v8 = 0.0;
  if ((v5 != 1 || a2.n128_f32[2] >= 0.0) && (v5 != 2 || a2.n128_f32[2] <= 0.0))
  {
    switch(*(void *)(a1 + 40))
    {
      case 0:
        float v8 = 1.0;
        break;
      case 1:
        float v14 = fabsf(a2.n128_f32[0]);
        float v15 = 0.0;
        float v16 = 0.0;
        long long v35 = *(_OWORD *)(a1 + 80);
        if (*(float *)&v7 >= v14)
        {
          int v33 = HIDWORD(v2);
          float v17 = powf(v14 / *(float *)&v7, v6);
          HIDWORD(v2) = v33;
          long long v7 = v35;
          float v16 = 1.0 - v17;
        }
        float v18 = fabsf(*((float *)&v2 + 1));
        if (*((float *)&v7 + 1) >= v18)
        {
          float v19 = powf(v18 / *((float *)&v7 + 1), v6);
          DWORD2(v7) = DWORD2(v35);
          float v15 = 1.0 - v19;
        }
        float v20 = fabsf(v3);
        if (*((float *)&v7 + 2) >= v20)
        {
          float v8 = 1.0 - powf(v20 / *((float *)&v7 + 2), v6);
          if (v15 >= v16) {
            float v29 = v16;
          }
          else {
            float v29 = v15;
          }
          if (v8 >= v29) {
            float v8 = v29;
          }
        }
        else
        {
          float v21 = 0.0;
          if (v15 <= 0.0) {
            float v22 = v15;
          }
          else {
            float v22 = 0.0;
          }
          if (v16 <= 0.0) {
            float v21 = v16;
          }
          if (v15 >= v16) {
            float v8 = v21;
          }
          else {
            float v8 = v22;
          }
        }
        break;
      case 2:
        float v13 = sqrtf((float)(a2.n128_f32[2] * a2.n128_f32[2])+ vaddv_f32(vmul_f32((float32x2_t)a2.n128_u64[0], (float32x2_t)a2.n128_u64[0])));
        if (*((float *)&v7 + 2) >= v13) {
          float v8 = 1.0 - powf(v13 / *((float *)&v7 + 2), *(float *)(a1 + 64));
        }
        break;
      case 3:
        float v23 = fabsf(a2.n128_f32[2]);
        LODWORD(v24) = *(void *)(a1 + 88);
        if (*((float *)&v7 + 2) < v23) {
          return v8;
        }
        float32x2_t v32 = (float32x2_t)a2.n128_u64[0];
        long long v36 = *(_OWORD *)(a1 + 80);
        float v25 = 1.0 - powf(v23 / *((float *)&v7 + 2), v6);
        if (v25 == 0.0) {
          return v8;
        }
        float v26 = (float)(v23 * *(float *)&v36) / fmaxf(v24, 0.001);
        float v27 = sqrtf(vaddv_f32(vmul_f32(v32, v32)));
        float v28 = 0.0;
        if (v26 >= v27) {
          float v28 = 1.0 - powf(v27 / v26, v6);
        }
        float v8 = v25 * v28;
        break;
      case 4:
        float v9 = fabsf(a2.n128_f32[2]);
        if (*((float *)&v7 + 2) < v9) {
          return v8;
        }
        float32x2_t v31 = (float32x2_t)v2;
        long long v34 = *(_OWORD *)(a1 + 80);
        float v10 = 1.0 - powf(v9 / *((float *)&v7 + 2), v6);
        if (v10 == 0.0) {
          return v8;
        }
        float v11 = sqrtf(vaddv_f32(vmul_f32(v31, v31)));
        float v12 = 0.0;
        if (*(float *)&v34 >= v11) {
          float v12 = 1.0 - powf(v11 / *(float *)&v34, v6);
        }
        float v8 = v10 * v12;
        break;
      default:
        sub_1B6E32BE8();
        __break(1u);
        JUMPOUT(0x1B67A6A24);
    }
    if (v4 == 1) {
      return 1.0 - ceilf(v8);
    }
  }
  return v8;
}

uint64_t sub_1B67A6A38@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F927C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = &type metadata for ForceField;
  *(void *)(inited + 40) = &off_1F0F52620;
  *(void *)(inited + 48) = &type metadata for ForceFieldRuntime;
  *(void *)(inited + 56) = &off_1F0F70D00;
  *(void *)(inited + 64) = &type metadata for WorldTransform;
  *(void *)(inited + 72) = &off_1F0F67798;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 3;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 3;
  *(_WORD *)(v12 + 32) = 771;
  *(unsigned char *)(v12 + 34) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  float v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  float v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  float v20 = v2[4];
  float v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67A6C70@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F927C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = &type metadata for Rect2D;
  *(void *)(inited + 40) = &off_1F0FA0CE0;
  *(void *)(inited + 48) = &type metadata for Color;
  *(void *)(inited + 56) = &off_1F0F9ED50;
  *(void *)(inited + 64) = &type metadata for DiscShape;
  *(void *)(inited + 72) = &off_1F0FA8568;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 3;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 3;
  *(_WORD *)(v12 + 32) = 771;
  *(unsigned char *)(v12 + 34) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  float v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  float v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  float v20 = v2[4];
  float v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67A6EA8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F927C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = &type metadata for Rect2D;
  *(void *)(inited + 40) = &off_1F0FA0CE0;
  *(void *)(inited + 48) = &type metadata for Color;
  *(void *)(inited + 56) = &off_1F0F9ED50;
  *(void *)(inited + 64) = &type metadata for RoundedRectShape;
  *(void *)(inited + 72) = &off_1F0F6F2B8;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 3;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 3;
  *(_WORD *)(v12 + 32) = 771;
  *(unsigned char *)(v12 + 34) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  float v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  float v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  float v20 = v2[4];
  float v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67A70E0@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F927C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = &type metadata for ParticleBoxCollider;
  *(void *)(inited + 40) = &off_1F0F7D3B0;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  *(void *)(inited + 64) = &type metadata for LastFrameWorldTransform;
  *(void *)(inited + 72) = &off_1F0F8F510;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 3;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 3;
  *(_WORD *)(v12 + 32) = 771;
  *(unsigned char *)(v12 + 34) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  float v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  float v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  float v20 = v2[4];
  float v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67A7318@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F927C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = &type metadata for ParticleCylinderCollider;
  *(void *)(inited + 40) = &off_1F0F92C48;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  *(void *)(inited + 64) = &type metadata for LastFrameWorldTransform;
  *(void *)(inited + 72) = &off_1F0F8F510;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 3;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 3;
  *(_WORD *)(v12 + 32) = 771;
  *(unsigned char *)(v12 + 34) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  float v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  float v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  float v20 = v2[4];
  float v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67A7550@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F927C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = &type metadata for ParticleSDFCollider;
  *(void *)(inited + 40) = &off_1F0F7DF18;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  *(void *)(inited + 64) = &type metadata for LastFrameWorldTransform;
  *(void *)(inited + 72) = &off_1F0F8F510;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 3;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 3;
  *(_WORD *)(v12 + 32) = 771;
  *(unsigned char *)(v12 + 34) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  float v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  float v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  float v20 = v2[4];
  float v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67A7788@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B62F927C(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 32) = &type metadata for ClampBox;
  *(void *)(inited + 40) = &off_1F0FA3B08;
  *(void *)(inited + 48) = &type metadata for Position;
  *(void *)(inited + 56) = &off_1F0FA6F58;
  *(void *)(inited + 64) = &type metadata for Velocity;
  *(void *)(inited + 72) = &off_1F0FA7C80;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 3;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 3;
  *(_WORD *)(v12 + 32) = 771;
  *(unsigned char *)(v12 + 34) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  float v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  float v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  float v20 = v2[4];
  float v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

void sub_1B67A79C0(void *a1, long long *a2, void *a3, uint64_t a4, float a5, float a6, int32x4_t a7, float32x4_t a8, float32x4_t a9, float32x4_t a10, float32x4_t a11, float32x4_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, float32x4_t a17, float a18, float a19)
{
  uint64_t v135 = *MEMORY[0x1E4F143B8];
  uint64_t v25 = (uint64_t *)a1[11];
  uint64_t v26 = a1[12];
  uint64_t v27 = a1[13];
  uint64_t v28 = a1[2];
  uint64_t v29 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v25, v26, v27, v28);
  uint64_t v30 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v25, v26, v27, v28);
  uint64_t v31 = sub_1B67A80B4();
  uint64_t v35 = a1[6];
  uint64_t v36 = a1[7];
  uint64_t v37 = v36 - v35;
  if (v36 != v35)
  {
    char v38 = v32;
    float32x4_t v109 = vaddq_f32(a8, a9);
    float32x4_t v106 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(a7, a7), (int8x16_t)a7, 0xCuLL);
    float32x4_t v39 = vnegq_f32((float32x4_t)a7);
    float32x4_t v99 = v39;
    float32x4_t v40 = (__int32 *)(v31 + 4 * v35);
    uint64_t v41 = 16 * v35;
    float32x4_t v42 = (float32x4_t *)(v30 + v41);
    float32x4_t v43 = (float32x4_t *)(v29 + v41);
    do
    {
      long long v50 = a2[7];
      long long v133 = a2[6];
      v134[0] = v50;
      *(_OWORD *)((char *)v134 + 12) = *(long long *)((char *)a2 + 124);
      long long v51 = a2[3];
      long long v129 = a2[2];
      long long v130 = v51;
      long long v52 = a2[5];
      long long v131 = a2[4];
      long long v132 = v52;
      long long v53 = a2[1];
      long long v127 = *a2;
      long long v128 = v53;
      v39.i32[0] = 1.0;
      if ((v38 & 1) == 0) {
        v39.i32[0] = *v40;
      }
      uint64_t v118 = v39.i64[0];
      float32x4_t v54 = *v43;
      float32x4_t v117 = *v42;
      uint64_t v55 = v127;
      float v56 = *((float *)&v127 + 3);
      float v57 = *((float *)&v128 + 1);
      uint64_t v58 = *(void *)&v134[0];
      float v59 = *((float *)&v127 + 3);
      if (*((float *)&v128 + 1) > 0.0)
      {
        uint64_t v60 = a3[1];
        uint64_t v61 = a3[2] ^ *a3;
        uint64_t v62 = a3[3] ^ v60;
        *a3 ^= v62;
        a3[1] = v61 ^ v60;
        a3[2] = v61 ^ (v60 << 17);
        a3[3] = __ROR8__(v62, 19);
        uint64_t v63 = (9 * ((((unint64_t)(5 * v60) >> 32) >> 25) | (640 * v60))) & 0xFFFFFFLL;
        float v59 = v56
            + (float)(v57
                    * (float)((float)((float)((float)(unint64_t)v63 * 0.000000059605)
                                    + (float)((float)(unint64_t)v63 * 0.000000059605))
                            + -1.0));
      }
      float32x4_t v64 = v54;
      v64.i32[3] = v33;
      float32x4_t v122 = v64;
      float32x4_t v114 = v54;
      __n128 v65 = (__n128)vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(a17, a12, v54, 2), a11, *(float32x2_t *)v54.f32, 1), a10, v54.f32[0]);
      float32x4_t v110 = (float32x4_t)v65;
      v65.n128_u32[3] = v34;
      float v66 = v59 * a5;
      unsigned __int32 v123 = v34;
      float v67 = sub_1B67A674C((uint64_t)&v127, v65);
      float v68 = v66 * v67;
      float32x4_t v46 = 0uLL;
      if (fabs(v66 * v67))
      {
        float v69 = v68 * a19;
        v70.i32[1] = HIDWORD(v118);
        float v71 = *(float *)&v118 * (float)(v68 * a19);
        float32x4_t v72 = v109;
        v72.i32[3] = v119.i32[3];
        switch(v55)
        {
          case 0:
            float32x4_t v46 = vmulq_n_f32((float32x4_t)a7, v71);
            v46.i32[3] = v101;
            goto LABEL_20;
          case 1:
            __int32 v33 = v122.i32[3];
            float32x4_t v86 = vsubq_f32(v122, v72);
            float32x4_t v87 = vmulq_f32(v86, v86);
            float32x4_t v46 = vmulq_n_f32(v86, v71 / fmaxf(sqrtf(v87.f32[2] + vaddv_f32(*(float32x2_t *)v87.f32)), 0.00001));
            v46.i32[3] = v100;
            goto LABEL_5;
          case 2:
            __int32 v33 = v122.i32[3];
            float32x4_t v44 = vsubq_f32(v122, v72);
            int8x16_t v45 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v44, (int32x4_t)v44), (int8x16_t)v44, 0xCuLL), v99), v44, v106);
            float32x4_t v46 = vmulq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v45, (int32x4_t)v45), v45, 0xCuLL), v69);
            v46.i32[3] = v102;
            goto LABEL_5;
          case 3:
          case 4:
            float32x4_t v120 = v72;
            if (*(float *)&v58 < 0.0) {
              float v73 = 14.0;
            }
            else {
              float v73 = (float)(1.25 / (float)(*(float *)&v58 + 0.083333)) + -1.0;
            }
            float32x4_t v126 = 0uLL;
            float v74 = v73 * v114.f32[0];
            float v75 = vmuls_lane_f32(v73, *(float32x2_t *)v114.f32, 1);
            float v76 = vmuls_lane_f32(v73, v114, 2);
            float v115 = v69;
            float v77 = srdnoise3(&v126, v74, v75, v76, *((float *)&v58 + 1) * a18);
            float32x4_t v78 = vmulq_n_f32(vmulq_n_f32(v126, v77), v115);
            float32x4_t v79 = v78;
            v79.i32[3] = v108;
            float32x4_t v46 = v79;
            if (v55 == 4)
            {
              float32x4_t v80 = vmulq_f32(v117, v117);
              float v81 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v80, 2), vaddq_f32(v80, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v80.f32, 1))).f32[0])* *(float *)&v118;
              *(float32x2_t *)v46.f32 = vmul_n_f32(*(float32x2_t *)v78.f32, v81);
              v46.i64[1] = COERCE_UNSIGNED_INT(vmuls_lane_f32(v81, v78, 2));
            }
            unsigned __int32 v48 = a8.u32[3];
            unsigned __int32 v47 = a9.u32[3];
            __int32 v33 = v122.i32[3];
            unsigned __int32 v34 = v123;
            float32x4_t v72 = v120;
            break;
          case 5:
            __int32 v33 = v122.i32[3];
            float32x4_t v88 = vsubq_f32(v122, v72);
            float v89 = sqrtf(vmuls_lane_f32(v88.f32[2], v88, 2) + vaddv_f32((float32x2_t)*(_OWORD *)&vmulq_f32(v88, v88)));
            *(float32x2_t *)v88.f32 = vsub_f32(0, *(float32x2_t *)v88.f32);
            v88.f32[2] = 0.0 - v88.f32[2];
            float32x4_t v46 = vmulq_n_f32(vmulq_n_f32(vmulq_n_f32(v88, v89), *(float *)&v118), v69);
            v46.i32[3] = v105;
            goto LABEL_5;
          case 6:
            __int32 v33 = v122.i32[3];
            float32x4_t v90 = vsubq_f32(v122, v72);
            int8x16_t v91 = (int8x16_t)vmlaq_f32(vmulq_f32(v106, vnegq_f32(v117)), (float32x4_t)a7, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v117, (int32x4_t)v117), (int8x16_t)v117, 0xCuLL));
            float32x4_t v92 = vmulq_f32(v90, v90);
            float32x4_t v46 = vmulq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v91, (int32x4_t)v91), v91, 0xCuLL), (float)(1.0 / sqrtf(v92.f32[2] + vaddv_f32(*(float32x2_t *)v92.f32))) * v69);
            v46.i32[3] = v103;
            goto LABEL_5;
          case 7:
            __int32 v33 = v122.i32[3];
            float32x4_t v46 = vaddq_f32(vmulq_n_f32(v117, (float)(a6 * -2.0) * sqrtf(fabsf(v56))), vmulq_n_f32(vsubq_f32(v122, v72), -v69));
            v46.i32[3] = v104;
LABEL_5:
            unsigned __int32 v48 = a8.u32[3];
            unsigned __int32 v47 = a9.u32[3];
            unsigned __int32 v34 = v123;
            break;
          case 8:
            float v93 = 2.0;
            if (v56 <= 2.0)
            {
              float v94 = v56 * a19;
              unsigned __int32 v34 = v123;
              if (a6 > 2.0) {
                goto LABEL_33;
              }
            }
            else
            {
              float v94 = a19 + a19;
              unsigned __int32 v34 = v123;
              if (a6 > 2.0) {
                goto LABEL_33;
              }
            }
            float v93 = a6;
LABEL_33:
            float v95 = sqrtf(vmuls_lane_f32(v117.f32[2], v117, 2) + vaddv_f32((float32x2_t)*(_OWORD *)&vmulq_f32(v117, v117)));
            *(float *)v70.i32 = fmaxf(v95, 0.00001);
            float v96 = (float)-(float)(v67 * v95) * (float)(v93 + (float)(v95 * v94));
            *(float32x2_t *)v46.f32 = vmul_n_f32(vdiv_f32(*(float32x2_t *)v117.f32, (float32x2_t)vdup_lane_s32(v70, 0)), v96);
            v46.f32[2] = (float)(v117.f32[2] / *(float *)v70.i32) * v96;
            v46.i32[3] = 0;
            unsigned __int32 v48 = a8.u32[3];
            unsigned __int32 v47 = a9.u32[3];
            __int32 v33 = v122.i32[3];
            break;
          case 9:
            unint64_t v82 = *(double (**)(uint64_t, __n128))(a4 + 72);
            if (v82 != (double (*)(uint64_t, __n128))1)
            {
              v83.i64[0] = 0x3F0000003F000000;
              v83.i64[1] = 0x3F0000003F000000;
              __n128 v84 = (__n128)vaddq_f32(vmulq_f32(v110, v83), v83);
              v84.n128_u32[3] = v97;
              float32x4_t v121 = v72;
              float v116 = v69;
              *(double *)v85.i64 = v82(a4, v84);
              float32x4_t v46 = vmulq_n_f32(v85, v116);
              v46.i32[3] = v98;
              float32x4_t v72 = v121;
            }
            goto LABEL_20;
          default:
            sub_1B6E32BE8();
            __break(1u);
            JUMPOUT(0x1B67A808CLL);
        }
      }
      else
      {
        float32x4_t v72 = v119;
LABEL_20:
        unsigned __int32 v48 = a8.u32[3];
        unsigned __int32 v47 = a9.u32[3];
        __int32 v33 = v122.i32[3];
        unsigned __int32 v34 = v123;
      }
      float32x4_t v39 = *v42;
      float32x4_t v49 = vaddq_f32(v46, *v42);
      a8.i32[3] = v48;
      v49.i32[3] = 0;
      *v42++ = v49;
      ++v40;
      ++v43;
      float32x4_t v119 = v72;
      a9.i32[3] = v47;
      --v37;
    }
    while (v37);
  }
}

uint64_t sub_1B67A80B4()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for Mass, (uint64_t)&off_1F0F9E398, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A8128()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for AngularFactor, (uint64_t)&off_1F0F5D9D0, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A819C()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A8210()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for ParticleParentID, (uint64_t)&off_1F0F6E0C8, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A8284()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A82F8()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for Scale1, (uint64_t)&off_1F0FA0DD0, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A836C()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for Scale2, (uint64_t)&off_1F0FA0F38, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A83E0()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for Scale3, (uint64_t)&off_1F0FA10A0, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A8454()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for ParticleID, (uint64_t)&off_1F0F532A8, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A84C8()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A853C()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for NeighborCount, (uint64_t)&off_1F0F604D8, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A85B0()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for LinearFactor, (uint64_t)&off_1F0F5A7E8, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_1B67A8624()
{
  uint64_t v1 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, *(uint64_t **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 16));
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t type metadata accessor for ParticleForceField.CPUSystem()
{
  return self;
}

const char *sub_1B67A86C0()
{
  return "ParticleForceField.CPU";
}

uint64_t sub_1B67A86D4(uint64_t a1)
{
  uint64_t v196 = *MEMORY[0x1E4F143B8];
  long long v2 = *(_OWORD *)(a1 + 96);
  long long v167 = *(_OWORD *)(a1 + 80);
  long long v168 = v2;
  long long v3 = *(_OWORD *)(a1 + 128);
  long long v169 = *(_OWORD *)(a1 + 112);
  long long v170 = v3;
  long long v4 = *(_OWORD *)(a1 + 32);
  long long v163 = *(_OWORD *)(a1 + 16);
  long long v164 = v4;
  long long v5 = *(_OWORD *)(a1 + 64);
  long long v165 = *(_OWORD *)(a1 + 48);
  long long v166 = v5;
  uint64_t v157 = v163;
  swift_retain();
  if (*((void *)&v163 + 1) == 0xFFFFFFFFLL
    || (DWORD2(v163) & 0x80000000) != 0
    || *(void *)(v163 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= SDWORD2(v163)
    || (uint64_t v6 = *(void *)(v163 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(v163) != -1)
    && *(_DWORD *)(v6 + 12 * SDWORD2(v163) + 8) != HIDWORD(v163))
  {
    swift_release();
    goto LABEL_10;
  }
  unint64_t v7 = (unsigned int *)(v6 + 12 * SDWORD2(v163));
  sub_1B696372C(*(void *)(*(void *)(v163 + 136) + 8 * (int)*v7 + 32), *v7 | ((unint64_t)*((unsigned __int16 *)v7 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v7 + 2) << 32), 44, v163, (uint64_t)&v173);
  uint64_t result = swift_release();
  if (v175.columns[0].u8[12] == 1)
  {
LABEL_10:
    float v133 = 1.0;
    float v134 = 1.0;
    float v16 = 1.0;
    float v14 = 1.0;
    float v15 = 1.0;
    float v12 = 1.0;
    float v13 = 1.0;
    float v10 = 1.0;
    float v11 = 1.0;
    float v9 = 1.0;
    goto LABEL_11;
  }
  if (!v175.columns[0].i32[2]) {
    return result;
  }
  float v9 = v173.f32[1];
  float v10 = v173.f32[3];
  float v11 = v173.f32[2];
  float v12 = v174.f32[1];
  float v13 = v174.f32[0];
  float v14 = v174.f32[3];
  float v15 = v174.f32[2];
  float v16 = v175.columns[0].f32[0];
  float v133 = v173.f32[0];
  float v134 = v175.columns[0].f32[1];
LABEL_11:
  unsigned int v147 = *(_DWORD *)(v163 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 64);
  swift_retain();
  *(double *)v17.i64 = sub_1B6335378();
  float32x4_t v145 = v18;
  float32x4_t v146 = v17;
  float32x4_t v143 = v20;
  float32x4_t v144 = v19;
  long long v21 = *(_OWORD *)(v1 + 32);
  v171[0] = *(_OWORD *)(v1 + 16);
  v171[1] = v21;
  uint64_t v172 = *(void *)(v1 + 48);
  sub_1B62C9DA8(v163, (uint64_t)v171, 0x200000000, v187);
  sub_1B62D7490((uint64_t)v187, (uint64_t)v188, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v188[0])
  {
    long long v158 = v188[0];
    long long v159 = v188[1];
    uint64_t v160 = v189;
    if (v194 > 0)
    {
      uint64_t v132 = v191;
      if (v191)
      {
        uint64_t v131 = v190;
        uint64_t v22 = v193[4];
        int v137 = *(unsigned __int8 *)(v192 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        __n128 v138 = v193;
        long long v129 = v193 + 8;
        uint64_t v130 = (uint64_t)(v193 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v23 = 0;
        uint64_t v128 = v22;
        do
        {
          uint64_t v136 = v23;
          float v24 = (unsigned int *)(v131 + 48 * v23);
          uint64_t v25 = *v24;
          uint64_t v139 = v24[1];
          uint64_t v26 = (uint64_t *)*((void *)v24 + 2);
          uint64_t v27 = *((void *)v24 + 3);
          uint64_t v28 = *((void *)v24 + 5);
          uint64_t v142 = *((void *)v24 + 4);
          if (v137)
          {
            uint64_t v29 = *(os_unfair_lock_s **)(v28 + 376);
            swift_retain();
            os_unfair_lock_lock(v29);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v28 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v22);
          sub_1B62D7490(v130, (uint64_t)v195, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v30 = v138[4];
          uint64_t v31 = *(void *)(*(void *)(*(void *)(*(void *)(v28 + 40) + 16) + 32) + 16) + 1;
          uint64_t v32 = v28;
          swift_retain();
          v138[6] = ecs_stack_allocator_allocate(v30, 48 * v31, 8);
          v138[7] = v31;
          v129[1] = 0;
          v129[2] = 0;
          *long long v129 = 0;
          swift_release();
          uint64_t v33 = v142;
          uint64_t v34 = sub_1B62C9024((uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, v26, v27, v142, (uint64_t)v138);
          sub_1B62C9024((uint64_t)&type metadata for ForceFieldRuntime, (uint64_t)&off_1F0F70CD0, v26, v27, v142, (uint64_t)v138);
          uint64_t v135 = v32;
          uint64_t v35 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v26, v27, v142, (uint64_t)v138);
          if (v26)
          {
            float32x4_t v37 = v126;
            float32x4_t v36 = v127;
            float32x4_t v38 = v125;
            if (v142)
            {
              uint64_t v39 = 0;
              do
              {
                float32x4_t v40 = (unsigned int *)(v34 + 144 * v39);
                float v41 = v9;
                switch(*(void *)v40)
                {
                  case 0:
                    float v41 = v133;
                    if (v133 != 0.0) {
                      goto LABEL_41;
                    }
                    goto LABEL_23;
                  case 1:
                    goto LABEL_40;
                  case 2:
                    float v41 = v11;
                    if (v11 != 0.0) {
                      goto LABEL_41;
                    }
                    goto LABEL_23;
                  case 3:
                    float v41 = v14;
                    if (v14 != 0.0) {
                      goto LABEL_41;
                    }
                    goto LABEL_23;
                  case 4:
                    float v41 = v16;
                    if (v16 != 0.0) {
                      goto LABEL_41;
                    }
                    goto LABEL_23;
                  case 5:
                    float v41 = v134;
                    if (v134 != 0.0) {
                      goto LABEL_41;
                    }
                    goto LABEL_23;
                  case 6:
                    float v41 = v10;
LABEL_40:
                    if (v41 != 0.0) {
                      goto LABEL_41;
                    }
                    goto LABEL_23;
                  case 7:
                    float v41 = v13;
                    if (v13 != 0.0) {
                      goto LABEL_41;
                    }
                    goto LABEL_23;
                  case 8:
                    float v41 = v12;
                    if (v12 != 0.0) {
                      goto LABEL_41;
                    }
                    goto LABEL_23;
                  case 9:
                    float v41 = v15;
                    if (v15 == 0.0) {
                      goto LABEL_23;
                    }
LABEL_41:
                    float32x4_t v42 = (float32x4_t *)(v35 + (v39 << 6));
                    float32x4_t v43 = v42[2];
                    float32x4_t v44 = v42[3];
                    int32x4_t v45 = (int32x4_t)vmulq_f32(v43, v43);
                    v45.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v45, 2), vadd_f32(*(float32x2_t *)v45.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v45.i8, 1))).u32[0];
                    float32x2_t v46 = vrsqrte_f32((float32x2_t)v45.u32[0]);
                    float32x2_t v47 = vmul_f32(v46, vrsqrts_f32((float32x2_t)v45.u32[0], vmul_f32(v46, v46)));
                    float32x4_t v48 = vmulq_n_f32(v43, vmul_f32(v47, vrsqrts_f32((float32x2_t)v45.u32[0], vmul_f32(v47, v47))).f32[0]);
                    float32x4_t v49 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v144, v48, 2), v145, *(float32x2_t *)v48.f32, 1), v146, v48.f32[0]);
                    float v148 = v41;
                    float32x4_t v50 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v143, v144, v44, 2), v145, *(float32x2_t *)v44.f32, 1), v146, v44.f32[0]);
                    float32x4_t v51 = v42[1];
                    float32x4_t v52 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v43, *((float32x4_t *)v40 + 6), 2), v51, *(float32x2_t *)(v40 + 24), 1), *v42, COERCE_FLOAT(*((_OWORD *)v40 + 6)));
                    v197.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v146, COERCE_FLOAT(*v42)), v145, *(float32x2_t *)v42->f32, 1), v144, *v42, 2), v143, *v42, 3);
                    v197.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v146, v51.f32[0]), v145, *(float32x2_t *)v51.f32, 1), v144, v51, 2), v143, v51, 3);
                    v197.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v146, v43.f32[0]), v145, *(float32x2_t *)v43.f32, 1), v144, v43, 2), v143, v43, 3);
                    v197.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v146, v44.f32[0]), v145, *(float32x2_t *)v44.f32, 1), v144, v44, 2), v143, v44, 3);
                    v49.i32[3] = v38.i32[3];
                    v50.i32[3] = v37.i32[3];
                    float32x4_t v153 = v50;
                    float32x4_t v155 = v49;
                    v52.i32[3] = v36.i32[3];
                    float32x4_t v151 = v52;
                    simd_float4x4 v198 = __invert_f4(v197);
                    long long v53 = *((_OWORD *)v40 + 5);
                    DWORD2(v53) = fmaxf(COERCE_FLOAT(*((void *)v40 + 11)), 0.001);
                    unsigned int v54 = v40[5];
                    unsigned int v55 = v40[16];
                    uint64_t v56 = *((void *)v40 + 5);
                    BOOL v57 = *((void *)v40 + 6) == 1;
                    uint64_t v58 = *((void *)v40 + 7);
                    float32x2_t v59 = vmul_f32((float32x2_t)__PAIR64__(v147, LODWORD(v148)), *(float32x2_t *)(v40 + 3));
                    uint64_t v60 = *((void *)v40 + 14);
                    float32x4_t v173 = v153;
                    float32x4_t v174 = v155;
                    simd_float4x4 v175 = v198;
                    float32x4_t v176 = v151;
                    long long v177 = v53;
                    float32x2_t v179 = v59;
                    unsigned int v178 = v147;
                    float v180 = v148;
                    uint64_t v182 = v60;
                    unsigned int v181 = v54;
                    unsigned int v183 = v55;
                    BOOL v184 = v57;
                    char v185 = v58;
                    char v186 = v56;
                    uint64_t v61 = *(void *)a1;
                    if (*(void *)a1)
                    {
                      uint64_t ObjectType = swift_getObjectType();
                      type metadata accessor for particle_force_field_uniforms(0);
                      sub_1B6B594A8((uint64_t)&v173, 1, ObjectType, v63, v64, v65, v66, v67);
                    }
                    sub_1B62D840C(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
                    uint64_t v68 = swift_allocObject();
                    *(_OWORD *)(v68 + 16) = xmmword_1B6E77050;
                    uint64_t v69 = *v40;
                    *(_OWORD *)(v68 + 32) = xmmword_1B6E84A30;
                    *(unsigned char *)(v68 + 48) = 0;
                    *(void *)(v68 + 64) = v69;
                    *(void *)(v68 + 120) = 0;
                    *(_OWORD *)(v68 + 104) = 0u;
                    *(_OWORD *)(v68 + 88) = 0u;
                    *(_OWORD *)(v68 + 72) = 0u;
                    *(unsigned char *)(v68 + 128) = 14;
                    uint64_t v70 = (int)v165;
                    int v71 = DWORD1(v165);
                    swift_retain();
                    if (v70 == -1 && !v71) {
                      goto LABEL_103;
                    }
                    if ((v70 & 0x80000000) != 0) {
                      goto LABEL_103;
                    }
                    float32x4_t v72 = (uint64_t *)(v157 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
                    if (*(void *)(v157 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v70) {
                      goto LABEL_103;
                    }
                    uint64_t v73 = *v72;
                    uint64_t v74 = *v72 + 12 * (int)v70;
                    int v75 = *(__int16 *)(v74 + 4);
                    if (v71 != -1 && *(_DWORD *)(v74 + 8) != v71) {
                      goto LABEL_103;
                    }
                    uint64_t v76 = *(void *)(*(void *)(v157 + 136) + 8 * *(int *)(v73 + 12 * (int)v70) + 32);
                    uint64_t v77 = *(void *)(v76 + 48);
                    uint64_t v78 = *(void *)(v77 + 16);
                    if (!v78) {
                      goto LABEL_103;
                    }
                    float32x4_t v79 = (void *)(v77 + 56);
                    break;
                  default:
                    goto LABEL_104;
                }
                while ((ValueMetadata *)*(v79 - 3) != &type metadata for EmitterRuntime)
                {
                  v79 += 5;
                  if (!--v78) {
                    goto LABEL_103;
                  }
                }
                sub_1B6A81660(*(void *)(v76 + 128) + *v79 + 656 * v75, v61 == 0, v68, a1, 0xD000000000000014, 0x80000001B6F356D0, 0);
                swift_release();
                swift_setDeallocating();
                swift_arrayDestroy();
                swift_deallocClassInstance();
                float32x4_t v36 = v151;
                float32x4_t v37 = v153;
                float32x4_t v38 = v155;
                uint64_t v33 = v142;
LABEL_23:
                ++v39;
              }
              while (v39 != v33);
              float32x4_t v125 = v38;
              float32x4_t v126 = v37;
              float32x4_t v127 = v36;
            }
            uint64_t v22 = v128;
            uint64_t v80 = v136;
          }
          else
          {
            uint64_t v81 = v139;
            if (v25 != v139)
            {
              float32x4_t v82 = v124;
              do
              {
                float32x4_t v83 = (unsigned int *)(v34 + 144 * v25);
                float v84 = v9;
                switch(*(void *)v83)
                {
                  case 0:
                    float v84 = v133;
                    if (v133 != 0.0) {
                      goto LABEL_79;
                    }
                    goto LABEL_61;
                  case 1:
                    goto LABEL_78;
                  case 2:
                    float v84 = v11;
                    if (v11 != 0.0) {
                      goto LABEL_79;
                    }
                    goto LABEL_61;
                  case 3:
                    float v84 = v14;
                    if (v14 != 0.0) {
                      goto LABEL_79;
                    }
                    goto LABEL_61;
                  case 4:
                    float v84 = v16;
                    if (v16 != 0.0) {
                      goto LABEL_79;
                    }
                    goto LABEL_61;
                  case 5:
                    float v84 = v134;
                    if (v134 != 0.0) {
                      goto LABEL_79;
                    }
                    goto LABEL_61;
                  case 6:
                    float v84 = v10;
                    if (v10 != 0.0) {
                      goto LABEL_79;
                    }
                    goto LABEL_61;
                  case 7:
                    float v84 = v13;
LABEL_78:
                    if (v84 != 0.0) {
                      goto LABEL_79;
                    }
                    goto LABEL_61;
                  case 8:
                    float v84 = v12;
                    if (v12 != 0.0) {
                      goto LABEL_79;
                    }
                    goto LABEL_61;
                  case 9:
                    float v84 = v15;
                    if (v15 == 0.0) {
                      goto LABEL_61;
                    }
LABEL_79:
                    uint64_t v85 = v35;
                    float32x4_t v86 = (float32x4_t *)(v35 + (v25 << 6));
                    float32x4_t v87 = v86[2];
                    float32x4_t v88 = v86[3];
                    int32x4_t v89 = (int32x4_t)vmulq_f32(v87, v87);
                    v89.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v89, 2), vadd_f32(*(float32x2_t *)v89.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v89.i8, 1))).u32[0];
                    float32x2_t v90 = vrsqrte_f32((float32x2_t)v89.u32[0]);
                    float32x2_t v91 = vmul_f32(v90, vrsqrts_f32((float32x2_t)v89.u32[0], vmul_f32(v90, v90)));
                    float32x4_t v92 = vmulq_n_f32(v87, vmul_f32(v91, vrsqrts_f32((float32x2_t)v89.u32[0], vmul_f32(v91, v91))).f32[0]);
                    float32x4_t v93 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v144, v92, 2), v145, *(float32x2_t *)v92.f32, 1), v146, v92.f32[0]);
                    float v149 = v84;
                    float32x4_t v94 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v143, v144, v88, 2), v145, *(float32x2_t *)v88.f32, 1), v146, v88.f32[0]);
                    float32x4_t v95 = v86[1];
                    float32x4_t v96 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v87, *((float32x4_t *)v83 + 6), 2), v95, *(float32x2_t *)(v83 + 24), 1), *v86, COERCE_FLOAT(*((_OWORD *)v83 + 6)));
                    v199.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v146, COERCE_FLOAT(*v86)), v145, *(float32x2_t *)v86->f32, 1), v144, *v86, 2), v143, *v86, 3);
                    v199.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v146, v95.f32[0]), v145, *(float32x2_t *)v95.f32, 1), v144, v95, 2), v143, v95, 3);
                    v199.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v146, v87.f32[0]), v145, *(float32x2_t *)v87.f32, 1), v144, v87, 2), v143, v87, 3);
                    v199.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v146, v88.f32[0]), v145, *(float32x2_t *)v88.f32, 1), v144, v88, 2), v143, v88, 3);
                    v93.i32[3] = v82.i32[3];
                    v94.i32[3] = v140;
                    float32x4_t v154 = v94;
                    float32x4_t v156 = v93;
                    v96.i32[3] = v141;
                    float32x4_t v152 = v96;
                    simd_float4x4 v200 = __invert_f4(v199);
                    long long v97 = *((_OWORD *)v83 + 5);
                    DWORD2(v97) = fmaxf(COERCE_FLOAT(*((void *)v83 + 11)), 0.001);
                    unsigned int v98 = v83[5];
                    unsigned int v99 = v83[16];
                    uint64_t v100 = *((void *)v83 + 5);
                    BOOL v101 = *((void *)v83 + 6) == 1;
                    uint64_t v102 = *((void *)v83 + 7);
                    float32x2_t v103 = vmul_f32((float32x2_t)__PAIR64__(v147, LODWORD(v149)), *(float32x2_t *)(v83 + 3));
                    uint64_t v104 = *((void *)v83 + 14);
                    float32x4_t v173 = v154;
                    float32x4_t v174 = v156;
                    simd_float4x4 v175 = v200;
                    float32x4_t v176 = v152;
                    long long v177 = v97;
                    float32x2_t v179 = v103;
                    unsigned int v178 = v147;
                    float v180 = v149;
                    uint64_t v182 = v104;
                    unsigned int v181 = v98;
                    unsigned int v183 = v99;
                    BOOL v184 = v101;
                    char v185 = v102;
                    char v186 = v100;
                    uint64_t v105 = *(void *)a1;
                    if (*(void *)a1)
                    {
                      uint64_t v106 = swift_getObjectType();
                      type metadata accessor for particle_force_field_uniforms(0);
                      sub_1B6B594A8((uint64_t)&v173, 1, v106, v107, v108, v109, v110, v111);
                    }
                    sub_1B62D840C(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
                    uint64_t v112 = swift_allocObject();
                    *(_OWORD *)(v112 + 16) = xmmword_1B6E77050;
                    uint64_t v113 = *v83;
                    *(_OWORD *)(v112 + 32) = xmmword_1B6E84A30;
                    *(unsigned char *)(v112 + 48) = 0;
                    *(void *)(v112 + 64) = v113;
                    *(void *)(v112 + 120) = 0;
                    *(_OWORD *)(v112 + 104) = 0u;
                    *(_OWORD *)(v112 + 88) = 0u;
                    *(_OWORD *)(v112 + 72) = 0u;
                    *(unsigned char *)(v112 + 128) = 14;
                    uint64_t v114 = (int)v165;
                    int v115 = DWORD1(v165);
                    swift_retain();
                    if (v114 == -1 && !v115) {
                      goto LABEL_103;
                    }
                    if ((v114 & 0x80000000) != 0) {
                      goto LABEL_103;
                    }
                    float v116 = (uint64_t *)(v157 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
                    if (*(void *)(v157 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v114) {
                      goto LABEL_103;
                    }
                    uint64_t v117 = *v116;
                    uint64_t v118 = *v116 + 12 * (int)v114;
                    int v119 = *(__int16 *)(v118 + 4);
                    if (v115 != -1 && *(_DWORD *)(v118 + 8) != v115) {
                      goto LABEL_103;
                    }
                    uint64_t v120 = *(void *)(*(void *)(v157 + 136) + 8 * *(int *)(v117 + 12 * (int)v114) + 32);
                    uint64_t v121 = *(void *)(v120 + 48);
                    uint64_t v122 = *(void *)(v121 + 16);
                    if (!v122) {
                      goto LABEL_103;
                    }
                    unsigned __int32 v123 = (void *)(v121 + 56);
                    break;
                  default:
                    goto LABEL_104;
                }
                while ((ValueMetadata *)*(v123 - 3) != &type metadata for EmitterRuntime)
                {
                  v123 += 5;
                  if (!--v122)
                  {
LABEL_103:
                    v173.i64[0] = 0;
                    v173.i64[1] = 0xE000000000000000;
                    sub_1B6E328C8();
                    sub_1B6E31948();
                    sub_1B681F698();
                    sub_1B6E31948();
                    swift_bridgeObjectRelease();
                    sub_1B6E31948();
                    sub_1B6E31948();
                    sub_1B6E31948();
                    while (1)
                    {
LABEL_104:
                      sub_1B6E32BE8();
                      __break(1u);
                    }
                  }
                }
                sub_1B6A81660(*(void *)(v120 + 128) + *v123 + 656 * v119, v105 == 0, v112, a1, 0xD000000000000014, 0x80000001B6F356D0, 0);
                swift_release();
                swift_setDeallocating();
                swift_arrayDestroy();
                swift_deallocClassInstance();
                float32x4_t v82 = v156;
                __int32 v140 = v154.i32[3];
                __int32 v141 = v152.i32[3];
                uint64_t v35 = v85;
                uint64_t v81 = v139;
LABEL_61:
                ++v25;
              }
              while (v25 != v81);
              float32x4_t v124 = v82;
            }
            uint64_t v80 = v136;
            uint64_t v22 = v128;
          }
          v161[0] = v158;
          v161[1] = v159;
          uint64_t v162 = v160;
          sub_1B6345178(v138, (unsigned __int16 **)v161, (uint64_t)v195);
          sub_1B634507C((char *)v135);
          ecs_stack_allocator_pop_snapshot(v22);
          if (v137)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v135 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v135 + 376));
          }
          swift_release();
          uint64_t v23 = v80 + 1;
        }
        while (v23 != v132);
        sub_1B632F170(v187);
      }
    }
    sub_1B632F170(v187);
  }
  return swift_release();
}

uint64_t type metadata accessor for ParticleForceField.GPUSystem()
{
  return self;
}

ValueMetadata *type metadata accessor for ForceFieldRuntime()
{
  return &type metadata for ForceFieldRuntime;
}

__n128 initializeWithCopy for ForceField(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 124) = *(_OWORD *)(a2 + 124);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ForceField(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 140)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ForceField(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 136) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 140) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 140) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForceField()
{
  return &type metadata for ForceField;
}

uint64_t sub_1B67A9728()
{
  uint64_t v0 = swift_allocObject();
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EB997A18;
  int v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  char v9 = 2;
  uint64_t v10 = 0;
  swift_retain();
  sub_1B67A6A38((uint64_t)v3);
  swift_release();
  long long v1 = v3[1];
  *(_OWORD *)(v0 + 16) = v3[0];
  *(_OWORD *)(v0 + 32) = v1;
  *(void *)(v0 + 48) = v4;
  return v0;
}

const char *sub_1B67A97EC()
{
  return "ParticleForceField.GPU";
}

uint64_t sub_1B67A9800()
{
  return type metadata accessor for ParticleForceField.GPUSystem();
}

uint64_t sub_1B67A9820()
{
  uint64_t v2 = 0;
  MEMORY[0x1BA9B84E0](&v2, 8);
  uint64_t v0 = v2;
  uint64_t v2 = 0;
  MEMORY[0x1BA9B84E0](&v2, 8);
  uint64_t v2 = 0;
  MEMORY[0x1BA9B84E0](&v2, 8);
  uint64_t v2 = 0;
  MEMORY[0x1BA9B84E0](&v2, 8);
  return v0;
}

uint64_t sub_1B67A98A8()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B67A98F4()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10) {
    return 16;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B67A9940()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B67A998C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B67AE294(0, &qword_1E9DD00F0, (uint64_t (*)(void))sub_1B67AE2FC, (uint64_t)&type metadata for ForceField_LEGACY.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = a1[3];
  float32x4_t v42 = a1;
  sub_1B62C14BC(a1, v11);
  sub_1B67AE2FC();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v42);
  }
  uint64_t v12 = v7;
  char v45 = 0;
  sub_1B67AE350();
  sub_1B6E32DF8();
  char v13 = v43;
  LOBYTE(v43) = 1;
  sub_1B6E32DC8();
  int v15 = v14;
  LOBYTE(v43) = 2;
  sub_1B6E32DC8();
  int v17 = v16;
  LOBYTE(v43) = 3;
  sub_1B6E32DC8();
  int v19 = v18;
  LOBYTE(v43) = 4;
  sub_1B6E32DC8();
  int v21 = v20;
  LOBYTE(v43) = 5;
  uint64_t v23 = sub_1B6E32E78();
  LOBYTE(v43) = 6;
  int v24 = sub_1B6E32DA8();
  LOBYTE(v43) = 7;
  int v25 = sub_1B6E32DA8();
  int v41 = v24;
  int v44 = v25;
  char v45 = 8;
  sub_1B67AAA60();
  sub_1B6E32DF8();
  int v40 = v43;
  char v45 = 9;
  sub_1B67AE3A4();
  uint64_t v26 = v6;
  sub_1B6E32DF8();
  int v39 = v43;
  char v45 = 10;
  sub_1B67AE3F8();
  sub_1B6E32DF8();
  int v38 = v43;
  LOBYTE(v43) = 11;
  sub_1B6E32DC8();
  int v28 = v27;
  sub_1B62AA858();
  char v45 = 12;
  unint64_t v37 = sub_1B67AE44C();
  sub_1B6E32DF8();
  unint64_t v29 = v43;
  char v45 = 13;
  sub_1B6E32DF8();
  unint64_t v30 = v43;
  char v45 = 14;
  sub_1B6E32DF8();
  unint64_t v37 = v43;
  uint64_t v31 = v42[3];
  uint64_t v32 = v42[4];
  sub_1B62C14BC(v42, v31);
  if (sub_1B62B8F14(1097, v31, v32))
  {
    char v45 = 15;
    sub_1B62B1EA8();
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v26);
    uint64_t v33 = v43;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v26);
    uint64_t v33 = 0xFFFFFFFFLL;
  }
  char v34 = v41 & 1;
  char v35 = v44 & 1;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v42);
  *(unsigned char *)a2 = v13;
  *(_DWORD *)(a2 + 4) = v15;
  *(_DWORD *)(a2 + 8) = v17;
  *(_DWORD *)(a2 + 12) = v19;
  *(_DWORD *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v23;
  *(unsigned char *)(a2 + 32) = v34;
  *(unsigned char *)(a2 + 33) = v35;
  *(_DWORD *)(a2 + 36) = v40;
  *(unsigned char *)(a2 + 40) = v39;
  *(unsigned char *)(a2 + 41) = v38;
  *(_DWORD *)(a2 + 44) = v28;
  *(void *)(a2 + 48) = v29;
  *(void *)(a2 + 56) = v30;
  *(void *)(a2 + 64) = v37;
  *(void *)(a2 + 72) = v33;
  return result;
}

uint64_t sub_1B67A9F5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B67AE294(0, &qword_1E9DD0070, (uint64_t (*)(void))sub_1B67AA4D0, (uint64_t)&type metadata for ForceField.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v32 - v9;
  char v46 = 0;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_1B62C14BC(a1, v11);
  if (!sub_1B62B8F14(2025, v11, v12))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v2)
    {
      sub_1B62C14BC(v45, v45[3]);
      sub_1B67AA524();
      sub_1B6E33518();
      int v17 = DWORD2(v35);
      int v15 = DWORD1(v35);
      int v19 = v36;
      uint64_t v31 = v37;
      uint64_t v20 = v38;
      int v22 = v41;
      uint64_t v29 = v44;
      LODWORD(v26) = v43;
      DWORD1(v26) = v43;
      *((void *)&v26 + 1) = v42;
      long long v34 = v26;
      uint64_t v13 = qword_1B6E85448[(char)v35];
      uint64_t v28 = 2 - v39;
      uint64_t v27 = qword_1B6E85480[v40];
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v45);
      int v24 = 0;
      char v30 = 1;
      goto LABEL_7;
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(a1, a1[3]);
  sub_1B67AA4D0();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  LOBYTE(v35) = 0;
  uint64_t v13 = sub_1B6E32DD8();
  LOBYTE(v35) = 1;
  sub_1B6E32DC8();
  int v15 = v14;
  LOBYTE(v35) = 8;
  char v46 = sub_1B6E32DA8() & 1;
  LOBYTE(v35) = 2;
  sub_1B6E32DC8();
  int v17 = v16;
  LOBYTE(v35) = 3;
  sub_1B6E32DC8();
  int v19 = v18;
  LOBYTE(v35) = 4;
  uint64_t v33 = sub_1B6E32E78();
  LOBYTE(v35) = 5;
  uint64_t v20 = sub_1B6E32E78();
  LOBYTE(v35) = 6;
  sub_1B6E32DC8();
  int v22 = v21;
  LOBYTE(v35) = 9;
  sub_1B6E32DC8();
  int v24 = v23;
  sub_1B67AE294(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  LOBYTE(v45[0]) = 10;
  sub_1B62AEF40((unint64_t *)&qword_1EB97D1F0);
  sub_1B6E32DF8();
  long long v34 = v35;
  LOBYTE(v45[0]) = 7;
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = v35;
  char v30 = v46;
  uint64_t v31 = v33;
LABEL_7:
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(void *)a2 = v13;
  *(unsigned char *)(a2 + 8) = v30;
  *(_DWORD *)(a2 + 12) = v15;
  *(_DWORD *)(a2 + 16) = v17;
  *(_DWORD *)(a2 + 20) = v19;
  *(void *)(a2 + 24) = v31;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v27;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v28;
  *(_DWORD *)(a2 + 64) = v22;
  *(_OWORD *)(a2 + 80) = v34;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(_DWORD *)(a2 + 112) = 0;
  *(_DWORD *)(a2 + 116) = v24;
  *(_WORD *)(a2 + 128) = 1;
  *(void *)(a2 + 132) = v29;
  return result;
}

unint64_t sub_1B67AA4D0()
{
  unint64_t result = qword_1E9DD0078;
  if (!qword_1E9DD0078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0078);
  }
  return result;
}

unint64_t sub_1B67AA524()
{
  unint64_t result = qword_1E9DD0080;
  if (!qword_1E9DD0080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0080);
  }
  return result;
}

uint64_t sub_1B67AA578@<X0>(void *a1@<X0>, float *a2@<X8>)
{
  char v46 = a2;
  sub_1B67AE294(0, &qword_1E9DD0090, (uint64_t (*)(void))sub_1B67AAA0C, (uint64_t)&type metadata for ParticleForceField.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v44 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B67AAA0C();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v11 = v46;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_1B62C14BC(a1, v12);
  BOOL v14 = sub_1B62B8F14(2025, v12, v13);
  int v15 = a1;
  if (v14)
  {
    LOBYTE(v48) = 8;
    uint64_t v16 = v5;
    int v17 = v9;
    sub_1B6E32DC8();
    int v19 = v18;
    LOBYTE(v48) = 9;
    sub_1B6E32DC8();
    float v21 = v20;
    LOBYTE(v48) = 10;
    sub_1B6E32DC8();
    float v23 = v22;
    LOBYTE(v48) = 11;
    sub_1B6E32DC8();
    float v25 = v24;
  }
  else
  {
    LOBYTE(v48) = 1;
    uint64_t v16 = v5;
    int v17 = v9;
    sub_1B6E32DC8();
    int v19 = v26;
    float v25 = 1.0;
    float v23 = 1.0;
    float v21 = 1.0;
  }
  LOBYTE(v48) = 0;
  sub_1B6E32DC8();
  int v28 = v27;
  LOBYTE(v48) = 2;
  sub_1B6E32DC8();
  int v30 = v29;
  LOBYTE(v48) = 3;
  sub_1B6E32DC8();
  int v32 = v31;
  LOBYTE(v48) = 4;
  sub_1B6E32DC8();
  int v34 = v33;
  LOBYTE(v48) = 5;
  sub_1B6E32DC8();
  int v45 = v35;
  char v47 = 6;
  sub_1B67AAA60();
  sub_1B6E32DF8();
  uint64_t v37 = v15;
  int v38 = v48;
  uint64_t v39 = v15[3];
  uint64_t v40 = v15[4];
  uint64_t v41 = (uint64_t)v37;
  sub_1B62C14BC(v37, v39);
  if (sub_1B62B8F14(1097, v39, v40))
  {
    LOBYTE(v48) = 7;
    sub_1B6E32DC8();
    float v44 = v42;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v16);
    float v44 = 1.0;
  }
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v41);
  *(_DWORD *)uint64_t v11 = v19;
  *((_DWORD *)v11 + 1) = v28;
  *((_DWORD *)v11 + 2) = v30;
  *((_DWORD *)v11 + 3) = v32;
  int v43 = v45;
  *((_DWORD *)v11 + 4) = v34;
  *((_DWORD *)v11 + 5) = v43;
  v11[6] = v44;
  v11[7] = v21;
  v11[8] = v23;
  v11[9] = v25;
  *((_DWORD *)v11 + 10) = v38;
  return result;
}

unint64_t sub_1B67AAA0C()
{
  unint64_t result = qword_1E9DD0098;
  if (!qword_1E9DD0098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0098);
  }
  return result;
}

unint64_t sub_1B67AAA60()
{
  unint64_t result = qword_1E9DD00A0;
  if (!qword_1E9DD00A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD00A0);
  }
  return result;
}

unint64_t sub_1B67AAAB4()
{
  unint64_t result = qword_1E9DD00B0;
  if (!qword_1E9DD00B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD00B0);
  }
  return result;
}

uint64_t *sub_1B67AAB08(uint64_t a1, int a2, float32x4_t a3, float32x4_t a4, double a5, float a6, float a7)
{
  double v292 = a5;
  float32x4_t v266 = a4;
  float32x4_t v277 = a3;
  uint64_t v377 = *MEMORY[0x1E4F143B8];
  sub_1B62E17B4();
  v285 = v11;
  MEMORY[0x1F4188790](v11, v12);
  v284 = (char *)&v231 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v283 = sub_1B6E31098();
  uint64_t v14 = *(void *)(v283 - 8);
  MEMORY[0x1F4188790](v283, v15);
  v282 = (char *)&v231 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v326 = qword_1EB997A18;
  int v327 = 0;
  char v328 = 2;
  uint64_t v329 = 0;
  char v330 = 2;
  uint64_t v331 = 0;
  swift_retain();
  sub_1B67A6A38((uint64_t)v317);
  swift_release();
  v324[0] = v317[0];
  v324[1] = v317[1];
  uint64_t v325 = v318;
  uint64_t v294 = a1;
  sub_1B62C9DA8(a1, (uint64_t)v324, 0x200000000, v348);
  sub_1B62D7490((uint64_t)v348, (uint64_t)v365, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v365[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v317);
  }
  long long v319 = v365[0];
  long long v320 = v365[1];
  uint64_t v321 = v366;
  if (v371 <= 0 || (uint64_t v274 = v368) == 0)
  {
    sub_1B62CA064((uint64_t)v317);
    return sub_1B632F170(v348);
  }
  uint64_t v273 = v367;
  uint64_t v17 = v370[4];
  int v18 = *(unsigned __int8 *)(v369 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v270 = v370 + 6;
  v280 = v370;
  v269 = v370 + 8;
  v308 = &v346;
  v281 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  float32x4_t v298 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v277.f32, 1);
  float32x4_t v299 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v277.f32, 0);
  float32x4_t v297 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v277, 2);
  float32_t v267 = v277.f32[2];
  float32_t v268 = v277.f32[1];
  float32x4_t v19 = v266;
  float32x4_t v20 = vmulq_f32(v19, v19);
  float32x4_t v21 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v20, 2), vaddq_f32(v20, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v20.f32, 1)));
  float v254 = sqrtf(vmuls_lane_f32(v266.f32[2], v266, 2) + vaddv_f32(*(float32x2_t *)v20.f32));
  v20.f32[0] = fmaxf(v254, 0.00001);
  v21.f32[0] = sqrtf(v21.f32[0]) * *(float *)&v292;
  float32x4_t v253 = v21;
  float32x2_t v252 = vdiv_f32(*(float32x2_t *)v266.f32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v20.f32, 0));
  float v251 = v266.f32[2] / v20.f32[0];
  float32x4_t v249 = vnegq_f32(v266);
  float32x4_t v250 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v19, (int32x4_t)v19), (int8x16_t)v19, 0xCuLL);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  unint64_t v276 = (unint64_t)"VFX/ForceField.swift";
  unint64_t v275 = 0x80000001B6F35690;
  unint64_t v235 = (unint64_t)"ParticleForceField.GPU";
  uint64_t v232 = 0x80000001B6F35710;
  float32x4_t v309 = 0u;
  int v271 = v18;
  int v296 = a2;
  uint64_t v272 = v17;
  while (2)
  {
    uint64_t v278 = v23;
    float v24 = (unsigned int *)(v273 + 48 * v22);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    int v27 = (uint64_t *)*((void *)v24 + 2);
    uint64_t v28 = *((void *)v24 + 3);
    uint64_t v30 = *((void *)v24 + 4);
    int v29 = (char *)*((void *)v24 + 5);
    v295 = v29;
    uint64_t v279 = v22;
    v316.i64[0] = v25;
    if (v18)
    {
      int v31 = (os_unfair_lock_s *)*((void *)v295 + 47);
      swift_retain();
      int v32 = v31;
      int v29 = v295;
      os_unfair_lock_lock(v32);
      os_unfair_lock_lock(*((os_unfair_lock_t *)v29 + 43));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v17);
    sub_1B62D7490((uint64_t)v270, (uint64_t)v372, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    int v33 = v280;
    uint64_t v34 = v280[4];
    uint64_t v35 = *(void *)(*(void *)(*(void *)(*((void *)v29 + 5) + 16) + 32) + 16) + 1;
    swift_retain();
    v33[6] = ecs_stack_allocator_allocate(v34, 48 * v35, 8);
    v33[7] = v35;
    int v36 = v269;
    v269[1] = 0;
    v36[2] = 0;
    *int v36 = 0;
    swift_release();
    uint64_t v37 = sub_1B62C9024((uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, v27, v28, v30, (uint64_t)v33);
    uint64_t v38 = sub_1B62C9024((uint64_t)&type metadata for ForceFieldRuntime, (uint64_t)&off_1F0F70CD0, v27, v28, v30, (uint64_t)v33);
    uint64_t v39 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v27, v28, v30, (uint64_t)v33);
    if (v27)
    {
      float32x4_t v40 = v315;
      float32x4_t v41 = v314;
      __n128 v42 = v313;
      if (!v30) {
        goto LABEL_170;
      }
      uint64_t v43 = v30;
      uint64_t v44 = v39 + 32;
      int v45 = (uint64_t *)(v38 + 16);
      int v46 = v296;
      while (1)
      {
        if ((*(_DWORD *)(v37 + 32) & v46) != 0 && *(unsigned char *)(v37 + 8) == 1)
        {
          __n128 v313 = v42;
          v378.columns[1] = *(simd_float4 *)(v44 - 16);
          __n128 v312 = *(__n128 *)(v44 - 32);
          v378.columns[0] = (simd_float4)v312;
          __n128 v311 = (__n128)v378.columns[1];
          v378.columns[3] = *(simd_float4 *)(v44 + 16);
          simd_float4 v316 = *(simd_float4 *)v44;
          v378.columns[2] = v316;
          float32x4_t v310 = (float32x4_t)v378.columns[3];
          float32x4_t v314 = v41;
          float32x4_t v315 = v40;
          simd_float4x4 v51 = __invert_f4(v378);
          float32x4_t v50 = (float32x4_t)v51.columns[0];
          float32x4_t v305 = (float32x4_t)xmmword_1B6E4F2E0;
          float32x4_t v306 = (float32x4_t)xmmword_1B6E4F320;
          float32x4_t v307 = (float32x4_t)xmmword_1B6E4F300;
          v51.columns[0] = (simd_float4)vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32((float32x4_t)0, (float32x4_t)xmmword_1B6E4F2E0, v310, 2), (float32x4_t)xmmword_1B6E4F320, *(float32x2_t *)v310.f32, 1), (float32x4_t)xmmword_1B6E4F300, v310.f32[0]);
          v51.columns[0].i32[3] = v315.i32[3];
          float32x4_t v315 = (float32x4_t)v51.columns[0];
          float32x4_t v52 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32((float32x4_t)v316, *(float32x4_t *)(v37 + 96), 2), (float32x4_t)v311, *(float32x2_t *)(v37 + 96), 1), (float32x4_t)v312, COERCE_FLOAT(*(_OWORD *)(v37 + 96)));
          v52.i32[3] = v314.i32[3];
          float32x4_t v314 = v52;
          float32x4_t v343 = 0u;
          float32x4_t v342 = 0u;
          float32x4_t v341 = 0u;
          float32x4_t v340 = 0u;
          uint64_t v344 = 0;
          uint64_t v345 = 1;
          long long v53 = v308;
          uint64_t *v308 = 0;
          v53[1] = 0;
          if (*(void *)v37 == 9)
          {
            float32x4_t v290 = (float32x4_t)v51.columns[2];
            float32x4_t v291 = (float32x4_t)v51.columns[1];
            float32x4_t v310 = v50;
            __n128 v312 = (__n128)v51.columns[3];
            sub_1B6CEE8E8(*(void *)(v37 + 132), v349);
            sub_1B62D7490((uint64_t)v349, (uint64_t)v351, (unint64_t *)&unk_1EB97EFD0, (uint64_t)&type metadata for TextureCPURuntime);
            if (!v357) {
              goto LABEL_28;
            }
            if (v356 != 7)
            {
              sub_1B66576EC(v349[0].i64);
LABEL_28:
              if (qword_1EB9852D0 != -1) {
                swift_once();
              }
              v316.i64[0] = qword_1EB997FD0;
              swift_retain();
              char v60 = sub_1B6E32148();
              if (qword_1EB9854F8 != -1) {
                swift_once();
              }
              v312.n128_u64[0] = (unint64_t)v45;
              v311.n128_u64[0] = v43;
              uint64_t v61 = qword_1EB997FF0;
              uint64_t v62 = qword_1EB985528;
              swift_retain();
              if (v62 != -1) {
                swift_once();
              }
              sub_1B67A36D0();
              uint64_t v63 = swift_allocObject();
              *(_OWORD *)(v63 + 16) = xmmword_1B6E77050;
              *(void *)(v63 + 56) = MEMORY[0x1E4FBB1A0];
              *(void *)(v63 + 64) = sub_1B678615C();
              unint64_t v64 = v276 | 0x8000000000000000;
              v310.i64[0] = v276 | 0x8000000000000000;
              *(void *)(v63 + 32) = 0xD00000000000001ELL;
              *(void *)(v63 + 40) = v64;
              sub_1B6E31258();
              swift_bridgeObjectRelease();
              swift_retain();
              char v65 = v60;
              uint64_t v66 = v282;
              sub_1B6E31088();
              uint64_t v67 = v285[12];
              v307.i64[0] = v61;
              uint64_t v68 = v285[16];
              uint64_t v69 = (uint64_t)v284;
              uint64_t v70 = &v284[v285[20]];
              (*v281)(v284, v66, v283);
              *(unsigned char *)(v69 + v67) = v65;
              *(void *)(v69 + v68) = 0;
              *(void *)uint64_t v70 = 0xD00000000000001ELL;
              *((void *)v70 + 1) = v310.i64[0];
              sub_1B6E31368();
              swift_release();
              sub_1B67A3738(v69);
              swift_release();
              swift_release();
              __n128 v42 = v313;
              int v46 = v296;
              float32x4_t v40 = v315;
              float32x4_t v41 = v314;
              uint64_t v43 = v311.n128_u64[0];
              int v45 = (uint64_t *)v312.n128_u64[0];
              goto LABEL_17;
            }
            unsigned int v54 = (void *)v351[0];
            uint64_t v55 = v351[1];
            unsigned int v56 = v352;
            uint64_t v57 = v355;
            int v58 = 0;
            switch(v355)
            {
              case 10:
                int v58 = 4;
                if (v351[0]) {
                  goto LABEL_58;
                }
                goto LABEL_60;
              case 11:
                int v58 = 5;
                if (!v351[0]) {
                  goto LABEL_60;
                }
                goto LABEL_58;
              case 12:
              case 13:
              case 14:
              case 15:
              case 16:
              case 17:
              case 18:
              case 19:
              case 20:
              case 21:
              case 22:
              case 23:
              case 24:
              case 26:
              case 27:
              case 28:
              case 29:
              case 30:
              case 31:
              case 32:
              case 33:
              case 34:
              case 35:
              case 36:
              case 37:
              case 38:
              case 39:
              case 40:
              case 41:
              case 42:
              case 43:
              case 44:
              case 45:
              case 46:
              case 47:
              case 48:
              case 49:
              case 50:
              case 51:
              case 52:
              case 53:
              case 54:
              case 56:
              case 57:
              case 58:
              case 59:
              case 60:
              case 61:
              case 62:
              case 63:
              case 64:
              case 65:
              case 66:
              case 67:
              case 68:
              case 69:
              case 72:
              case 73:
              case 74:
              case 75:
              case 76:
              case 77:
              case 78:
              case 79:
                goto LABEL_39;
              case 25:
                goto LABEL_57;
              case 55:
                int v58 = 1;
                if (!v351[0]) {
                  goto LABEL_60;
                }
                goto LABEL_58;
              case 70:
                int v58 = 6;
                if (!v351[0]) {
                  goto LABEL_60;
                }
                goto LABEL_58;
              case 71:
                int v58 = 7;
                if (!v351[0]) {
                  goto LABEL_60;
                }
                goto LABEL_58;
              case 80:
                int v58 = 8;
                if (!v351[0]) {
                  goto LABEL_60;
                }
                goto LABEL_58;
              case 81:
                int v58 = 9;
LABEL_57:
                if (v351[0]) {
                  goto LABEL_58;
                }
                goto LABEL_60;
              default:
                if (v355 == 115)
                {
                  int v58 = 2;
                  if (!v351[0]) {
                    goto LABEL_60;
                  }
                }
                else
                {
                  if (v355 != 125)
                  {
LABEL_39:
                    if (qword_1EB9852D0 != -1) {
                      swift_once();
                    }
                    v332.i64[0] = 0;
                    v332.i64[1] = 0xE000000000000000;
                    v264.i64[0] = qword_1EB997FD0;
                    swift_retain();
                    sub_1B6E328C8();
                    swift_bridgeObjectRelease();
                    v332.i64[0] = 0xD00000000000001ALL;
                    v332.i64[1] = v235 | 0x8000000000000000;
                    _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0(v57);
                    sub_1B6E31948();
                    swift_bridgeObjectRelease();
                    float32x4_t v71 = v332;
                    v289.i32[0] = sub_1B6E32148();
                    if (qword_1EB9854F8 != -1) {
                      swift_once();
                    }
                    v311.n128_u64[0] = v43;
                    uint64_t v72 = qword_1EB997FF0;
                    uint64_t v73 = qword_1EB985528;
                    swift_retain();
                    if (v73 != -1) {
                      swift_once();
                    }
                    sub_1B67A36D0();
                    uint64_t v74 = swift_allocObject();
                    *(_OWORD *)(v74 + 16) = xmmword_1B6E77050;
                    *(void *)(v74 + 56) = MEMORY[0x1E4FBB1A0];
                    *(void *)(v74 + 64) = sub_1B678615C();
                    *(float32x4_t *)(v74 + 32) = v71;
                    swift_bridgeObjectRetain();
                    sub_1B6E31258();
                    swift_bridgeObjectRelease();
                    swift_retain();
                    int v75 = v282;
                    sub_1B6E31088();
                    uint64_t v76 = v285[12];
                    uint64_t v236 = v285[16];
                    uint64_t v237 = v76;
                    uint64_t v77 = v285[20];
                    v263.i64[0] = v72;
                    uint64_t v78 = (uint64_t)v284;
                    float32x4_t v79 = (float32x4_t *)&v284[v77];
                    (*v281)(v284, v75, v283);
                    *(unsigned char *)(v78 + v237) = v289.i8[0];
                    *(void *)(v78 + v236) = 0;
                    *float32x4_t v79 = v71;
                    swift_bridgeObjectRetain();
                    sub_1B6E31368();
                    swift_release();
                    sub_1B67A3738(v78);
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release();
                    uint64_t v43 = v311.n128_u64[0];
                    goto LABEL_60;
                  }
                  int v58 = 3;
                  if (!v351[0]) {
                    goto LABEL_60;
                  }
                }
LABEL_58:
                v289.i32[0] = v353;
                v311.n128_u32[0] = v354;
                if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
                {
                  swift_unknownObjectRelease();
LABEL_60:
                  sub_1B66576EC(v349[0].i64);
                  float32x4_t v340 = 0u;
                  float32x4_t v341 = 0u;
                  float32x4_t v342 = 0u;
                  float32x4_t v343 = 0u;
                  uint64_t v344 = 0;
                  uint64_t v345 = 1;
                  uint64_t v59 = 1;
                  uint64_t v80 = v308;
                  uint64_t *v308 = 0;
                  v80[1] = 0;
                  goto LABEL_62;
                }
                id v81 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
                id v82 = v54;
                swift_unknownObjectRelease();
                v83.i64[0] = __PAIR64__(v289.u32[0], v56);
                v83.i64[1] = __PAIR64__(v265.u32[3], v311.n128_u32[0]);
                __n128 v311 = (__n128)v83;
                vfx_sampler3d_make((uint64_t)v81 + v55, v58, 2, 1, (uint64_t)&v332, v83);
                float32x4_t v289 = v332;
                float32x4_t v264 = v334;
                float32x4_t v265 = v333;
                float32x4_t v263 = v335;
                uint64_t v84 = v336;
                uint64_t v59 = v337;
                uint64_t v85 = v339;
                uint64_t v86 = v338;
                sub_1B66576EC(v349[0].i64);
                float32x4_t v340 = v289;
                float32x4_t v341 = v265;
                float32x4_t v342 = v264;
                float32x4_t v343 = v263;
                uint64_t v344 = v84;
                uint64_t v345 = v59;
                float32x4_t v265 = (float32x4_t)v311;
                uint64_t v346 = v86;
                uint64_t v347 = v85;
LABEL_62:
                int v46 = v296;
                v51.columns[3] = (simd_float4)v312;
                float32x4_t v50 = v310;
                v51.columns[2] = (simd_float4)v290;
                v51.columns[1] = (simd_float4)v291;
                break;
            }
          }
          else
          {
            uint64_t v59 = 1;
          }
          float v87 = *(float *)(v37 + 16);
          long long v88 = *(_OWORD *)(v37 + 80);
          long long v89 = *(_OWORD *)(v37 + 112);
          v373[6] = *(_OWORD *)(v37 + 96);
          v374[0] = v89;
          *(_OWORD *)((char *)v374 + 12) = *(_OWORD *)(v37 + 124);
          long long v90 = *(_OWORD *)(v37 + 16);
          long long v92 = *(_OWORD *)(v37 + 48);
          long long v91 = *(_OWORD *)(v37 + 64);
          v373[2] = *(_OWORD *)(v37 + 32);
          v373[3] = v92;
          v373[5] = v88;
          v373[4] = v91;
          long long v93 = *(_OWORD *)v37;
          v373[1] = v90;
          v373[0] = v93;
          uint64_t v94 = v93;
          float v95 = *((float *)&v93 + 3);
          float v96 = *((float *)&v93 + 3);
          uint64_t v97 = *(void *)&v374[0];
          if (*((float *)&v90 + 1) > 0.0)
          {
            uint64_t v99 = *(v45 - 2);
            uint64_t v98 = *(v45 - 1);
            int v100 = 9 * ((((unint64_t)(5 * v98) >> 32) >> 25) | (640 * v98));
            uint64_t v101 = *v45 ^ v99;
            uint64_t v102 = v45[1] ^ v98;
            *(v45 - 2) = v102 ^ v99;
            *(v45 - 1) = v101 ^ v98;
            *int v45 = v101 ^ (v98 << 17);
            v45[1] = __ROR8__(v102, 19);
            float v96 = *((float *)&v93 + 3)
                + (float)(*((float *)&v90 + 1)
                        * (float)((float)((float)((float)(*(void *)&v100 & 0xFFFFFFLL) * 0.000000059605)
                                        + (float)((float)(*(void *)&v100 & 0xFFFFFFLL) * 0.000000059605))
                                + -1.0));
          }
          __n128 v312 = (__n128)vmlaq_f32(vmlaq_f32(vmlaq_f32((float32x4_t)v51.columns[3], (float32x4_t)v51.columns[2], v297), (float32x4_t)v51.columns[1], v298), v50, v299);
          __n128 v103 = v312;
          v103.n128_u32[3] = v313.n128_u32[3];
          __n128 v313 = v103;
          float v104 = sub_1B67A674C((uint64_t)v373, v103);
          float32x4_t v106 = 0uLL;
          if (fabs(v96 * v104))
          {
            int32x4_t v107 = (int32x4_t)vmulq_f32((float32x4_t)v316, (float32x4_t)v316);
            v107.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v107, 2), vadd_f32(*(float32x2_t *)v107.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v107.i8, 1))).u32[0];
            float32x2_t v108 = vrsqrte_f32((float32x2_t)v107.u32[0]);
            float32x2_t v109 = vmul_f32(v108, vrsqrts_f32((float32x2_t)v107.u32[0], vmul_f32(v108, v108)));
            float32x4_t v110 = vmulq_n_f32((float32x4_t)v316, vmul_f32(v109, vrsqrts_f32((float32x2_t)v107.u32[0], vmul_f32(v109, v109))).f32[0]);
            float32x4_t v111 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v305, v110, 2), v306, *(float32x2_t *)v110.f32, 1), v307, v110.f32[0]);
            float v112 = v87 * a7;
            v105.f32[0] = (float)(v96 * v104) * a7;
            float v113 = v105.f32[0] * *(float *)&v292;
            float32x4_t v40 = v315;
            float32x4_t v41 = v314;
            float32x4_t v48 = vaddq_f32(v315, v314);
            v48.i32[3] = v303.i32[3];
            switch(v94)
            {
              case 0:
                float32x4_t v106 = vmulq_n_f32(v111, v113);
                v106.i32[3] = v256.i32[3];
                float32x4_t v47 = v302;
                float32x4_t v256 = v106;
                goto LABEL_15;
              case 1:
                float32x4_t v119 = vsubq_f32(v277, v48);
                float32x4_t v120 = vmulq_f32(v119, v119);
                float32x4_t v106 = vmulq_n_f32(v119, v113 / fmaxf(sqrtf(v120.f32[2] + vaddv_f32(*(float32x2_t *)v120.f32)), 0.00001));
                v106.i32[3] = v255.i32[3];
                float32x4_t v47 = v302;
                float32x4_t v255 = v106;
                goto LABEL_15;
              case 2:
                float32x4_t v117 = vsubq_f32(v277, v48);
                int8x16_t v118 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v117, (int32x4_t)v117), (int8x16_t)v117, 0xCuLL), vnegq_f32(v111)), v117, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v111, (int32x4_t)v111), (int8x16_t)v111, 0xCuLL));
                float32x4_t v106 = vmulq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v118, (int32x4_t)v118), v118, 0xCuLL), v105.f32[0]);
                v106.i32[3] = v257.i32[3];
                float32x4_t v47 = v302;
                float32x4_t v257 = v106;
                goto LABEL_15;
              case 3:
              case 4:
                simd_float4 v316 = (simd_float4)v48;
                if (*(float *)&v97 < 0.0) {
                  float v114 = 14.0;
                }
                else {
                  float v114 = (float)(1.25 / (float)(*(float *)&v97 + 0.083333)) + -1.0;
                }
                float32x4_t v332 = 0uLL;
                __n128 v312 = (__n128)v105;
                float v115 = srdnoise3(&v332, v277.f32[0] * v114, v268 * v114, v267 * v114, *((float *)&v97 + 1) * a6);
                float32x4_t v116 = vmulq_n_f32(vmulq_n_f32(v332, v115), v312.n128_f32[0]);
                float32x4_t v47 = v116;
                v47.i32[3] = v302.i32[3];
                float32x4_t v106 = v47;
                if (v94 == 4)
                {
                  *(float32x2_t *)v106.f32 = vmul_n_f32(*(float32x2_t *)v116.f32, v253.f32[0]);
                  v106.i64[1] = COERCE_UNSIGNED_INT(vmuls_lane_f32(v253.f32[0], v116, 2));
                }
                float32x4_t v40 = v315;
                float32x4_t v41 = v314;
                __n128 v42 = v313;
                float32x4_t v48 = (float32x4_t)v316;
                goto LABEL_16;
              case 5:
                float32x4_t v121 = vsubq_f32(v277, v48);
                float v122 = sqrtf(vmuls_lane_f32(v121.f32[2], v121, 2)+ vaddv_f32((float32x2_t)*(_OWORD *)&vmulq_f32(v121, v121)));
                *(float32x2_t *)v121.f32 = vsub_f32(0, *(float32x2_t *)v121.f32);
                v121.f32[2] = 0.0 - v121.f32[2];
                float32x4_t v106 = vmulq_n_f32(vmulq_n_f32(vmulq_n_f32(v121, v122), *(float *)&v292), v105.f32[0]);
                v106.i32[3] = v262.i32[3];
                float32x4_t v262 = v106;
                float32x4_t v47 = v302;
                goto LABEL_15;
              case 6:
                float32x4_t v125 = vsubq_f32(v277, v48);
                int8x16_t v126 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v111, (int32x4_t)v111), (int8x16_t)v111, 0xCuLL), v249), v111, v250);
                float32x4_t v127 = vmulq_f32(v125, v125);
                float32x4_t v106 = vmulq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v126, (int32x4_t)v126), v126, 0xCuLL), (float)(1.0 / sqrtf(v127.f32[2] + vaddv_f32(*(float32x2_t *)v127.f32))) * v105.f32[0]);
                v106.i32[3] = v259.i32[3];
                float32x4_t v47 = v302;
                float32x4_t v259 = v106;
                goto LABEL_15;
              case 7:
                float32x4_t v123 = vmulq_n_f32(vsubq_f32(v277, v48), -v105.f32[0]);
                float32x4_t v124 = vmulq_n_f32(v266, (float)(v112 * -2.0) * sqrtf(fabsf(v95)));
                float32x4_t v106 = vaddq_f32(v124, v123);
                v124.i32[3] = v258.i32[3];
                v123.i32[3] = v261.i32[3];
                v106.i32[3] = v260.i32[3];
                float32x4_t v47 = v302;
                float32x4_t v260 = v106;
                float32x4_t v261 = v123;
                float32x4_t v258 = v124;
                goto LABEL_15;
              case 8:
                float v128 = 2.0;
                if (v112 <= 2.0) {
                  float v129 = v87 * a7;
                }
                else {
                  float v129 = 2.0;
                }
                if (v95 <= 2.0) {
                  float v128 = v95;
                }
                float v130 = (float)(v129 + (float)(v254 * (float)(v128 * a7))) * (float)-(float)(v104 * v254);
                *(float32x2_t *)v106.f32 = vmul_n_f32(v252, v130);
                v106.f32[2] = v251 * v130;
                v106.i32[3] = 0;
                float32x4_t v47 = v302;
                goto LABEL_15;
              case 9:
                if (v59 == 1)
                {
                  float32x4_t v47 = v302;
                }
                else
                {
                  v131.i64[0] = 0x3F0000003F000000;
                  v131.i64[1] = 0x3F0000003F000000;
                  __n128 v132 = (__n128)vaddq_f32(vmulq_f32((float32x4_t)v312, v131), v131);
                  v132.n128_u32[3] = v246.u32[3];
                  __n128 v311 = v132;
                  simd_float4 v316 = (simd_float4)v48;
                  __n128 v312 = (__n128)v105;
                  *(double *)v133.i64 = ((double (*)(float32x4_t *, __n128))v345)(&v340, v132);
                  float32x4_t v48 = (float32x4_t)v316;
                  float32x4_t v41 = v314;
                  float32x4_t v40 = v315;
                  float32x4_t v106 = vmulq_n_f32(v133, v312.n128_f32[0]);
                  v106.i32[3] = v247.i32[3];
                  float32x4_t v47 = v302;
                  float32x4_t v246 = (float32x4_t)v311;
                  float32x4_t v247 = v106;
                }
                goto LABEL_15;
              default:
                goto LABEL_175;
            }
          }
          float32x4_t v47 = v302;
          float32x4_t v48 = v303;
          float32x4_t v40 = v315;
          float32x4_t v41 = v314;
LABEL_15:
          __n128 v42 = v313;
LABEL_16:
          float32x4_t v49 = vaddq_f32(v309, v106);
          v49.i32[3] = v304.i32[3];
          float32x4_t v303 = v48;
          float32x4_t v304 = v49;
          float32x4_t v309 = v49;
          float32x4_t v302 = v47;
        }
LABEL_17:
        v37 += 144;
        v44 += 64;
        v45 += 4;
        if (!--v43)
        {
          __n128 v313 = v42;
          float32x4_t v314 = v41;
          float32x4_t v315 = v40;
          goto LABEL_170;
        }
      }
    }
    if (v26 == v316.i32[0]) {
      goto LABEL_170;
    }
    uint64_t v134 = v316.i64[0] - v26;
    uint64_t v135 = v37 + 144 * v26;
    uint64_t v136 = v39 + (v26 << 6) + 32;
    int v137 = (uint64_t *)(v38 + 32 * v26 + 16);
    int v138 = v296;
    float32x4_t v140 = v300;
    float32x4_t v139 = v301;
    float32x4_t v141 = v293;
    do
    {
      if ((*(_DWORD *)(v135 + 32) & v138) == 0 || *(unsigned char *)(v135 + 8) != 1) {
        goto LABEL_96;
      }
      __n128 v312 = (__n128)v141;
      v379.columns[1] = *(simd_float4 *)(v136 - 16);
      float32x4_t v310 = *(float32x4_t *)(v136 - 32);
      v379.columns[0] = (simd_float4)v310;
      float32x4_t v306 = v139;
      float32x4_t v307 = (float32x4_t)v379.columns[1];
      v379.columns[3] = *(simd_float4 *)(v136 + 16);
      simd_float4 v316 = *(simd_float4 *)v136;
      v379.columns[2] = v316;
      float32x4_t v305 = (float32x4_t)v379.columns[3];
      __n128 v311 = (__n128)v140;
      simd_float4x4 v380 = __invert_f4(v379);
      float32x4_t v145 = (float32x4_t)v380.columns[0];
      float32x4_t v289 = (float32x4_t)xmmword_1B6E4F2E0;
      float32x4_t v290 = (float32x4_t)xmmword_1B6E4F320;
      float32x4_t v291 = (float32x4_t)xmmword_1B6E4F300;
      float32x4_t v146 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32((float32x4_t)0, (float32x4_t)xmmword_1B6E4F2E0, v305, 2), (float32x4_t)xmmword_1B6E4F320, *(float32x2_t *)v305.f32, 1), (float32x4_t)xmmword_1B6E4F300, v305.f32[0]);
      v146.i32[3] = v306.i32[3];
      float32x4_t v147 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32((float32x4_t)v316, *(float32x4_t *)(v135 + 96), 2), v307, *(float32x2_t *)(v135 + 96), 1), v310, COERCE_FLOAT(*(_OWORD *)(v135 + 96)));
      v147.i32[3] = v311.n128_i32[3];
      float32x4_t v343 = 0u;
      float32x4_t v342 = 0u;
      float32x4_t v341 = 0u;
      float32x4_t v340 = 0u;
      uint64_t v344 = 0;
      uint64_t v345 = 1;
      float v148 = v308;
      uint64_t *v308 = 0;
      v148[1] = 0;
      BOOL v149 = *(void *)v135 == 9;
      float32x4_t v300 = v147;
      float32x4_t v301 = v146;
      if (!v149)
      {
        uint64_t v155 = 1;
LABEL_142:
        float v182 = *(float *)(v135 + 16);
        long long v183 = *(_OWORD *)(v135 + 80);
        long long v184 = *(_OWORD *)(v135 + 112);
        v375[6] = *(_OWORD *)(v135 + 96);
        v376[0] = v184;
        *(_OWORD *)((char *)v376 + 12) = *(_OWORD *)(v135 + 124);
        long long v185 = *(_OWORD *)(v135 + 16);
        long long v187 = *(_OWORD *)(v135 + 48);
        long long v186 = *(_OWORD *)(v135 + 64);
        v375[2] = *(_OWORD *)(v135 + 32);
        v375[3] = v187;
        v375[5] = v183;
        v375[4] = v186;
        long long v188 = *(_OWORD *)v135;
        v375[1] = v185;
        v375[0] = v188;
        uint64_t v189 = v188;
        float v190 = *((float *)&v188 + 3);
        float v191 = *((float *)&v188 + 3);
        uint64_t v192 = *(void *)&v376[0];
        if (*((float *)&v185 + 1) > 0.0)
        {
          uint64_t v194 = *(v137 - 2);
          uint64_t v193 = *(v137 - 1);
          int v195 = 9 * ((((unint64_t)(5 * v193) >> 32) >> 25) | (640 * v193));
          uint64_t v196 = *v137 ^ v194;
          uint64_t v197 = v137[1] ^ v193;
          *(v137 - 2) = v197 ^ v194;
          *(v137 - 1) = v196 ^ v193;
          *int v137 = v196 ^ (v193 << 17);
          v137[1] = __ROR8__(v197, 19);
          float v191 = *((float *)&v188 + 3)
               + (float)(*((float *)&v185 + 1)
                       * (float)((float)((float)((float)(*(void *)&v195 & 0xFFFFFFLL) * 0.000000059605)
                                       + (float)((float)(*(void *)&v195 & 0xFFFFFFLL) * 0.000000059605))
                               + -1.0));
        }
        __n128 v311 = (__n128)vmlaq_f32(vmlaq_f32(vmlaq_f32((float32x4_t)v380.columns[3], (float32x4_t)v380.columns[2], v297), (float32x4_t)v380.columns[1], v298), v145, v299);
        __n128 v198 = v311;
        v198.n128_u32[3] = v312.n128_u32[3];
        float32x4_t v293 = (float32x4_t)v198;
        float v199 = sub_1B67A674C((uint64_t)v375, v198);
        float32x4_t v201 = 0uLL;
        if (fabs(v191 * v199))
        {
          float32x4_t v140 = v300;
          int32x4_t v202 = (int32x4_t)vmulq_f32((float32x4_t)v316, (float32x4_t)v316);
          v202.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v202, 2), vadd_f32(*(float32x2_t *)v202.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v202.i8, 1))).u32[0];
          float32x2_t v203 = vrsqrte_f32((float32x2_t)v202.u32[0]);
          float32x2_t v204 = vmul_f32(v203, vrsqrts_f32((float32x2_t)v202.u32[0], vmul_f32(v203, v203)));
          float32x4_t v205 = vmulq_n_f32((float32x4_t)v316, vmul_f32(v204, vrsqrts_f32((float32x2_t)v202.u32[0], vmul_f32(v204, v204))).f32[0]);
          float32x4_t v206 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v289, v205, 2), v290, *(float32x2_t *)v205.f32, 1), v291, v205.f32[0]);
          float v207 = v182 * a7;
          v200.f32[0] = (float)(v191 * v199) * a7;
          float v208 = v200.f32[0] * *(float *)&v292;
          float32x4_t v139 = v301;
          float32x4_t v143 = vaddq_f32(v301, v300);
          v143.i32[3] = v286.i32[3];
          switch(v189)
          {
            case 0:
              float32x4_t v201 = vmulq_n_f32(v206, v208);
              v201.i32[3] = v242.i32[3];
              float32x4_t v242 = v201;
              float32x4_t v142 = v287;
              goto LABEL_94;
            case 1:
              float32x4_t v212 = vsubq_f32(v277, v143);
              float32x4_t v213 = vmulq_f32(v212, v212);
              float32x4_t v201 = vmulq_n_f32(v212, v208 / fmaxf(sqrtf(v213.f32[2] + vaddv_f32(*(float32x2_t *)v213.f32)), 0.00001));
              v201.i32[3] = v241.i32[3];
              float32x4_t v241 = v201;
              float32x4_t v142 = v287;
              goto LABEL_94;
            case 2:
              float32x4_t v214 = vsubq_f32(v277, v143);
              int8x16_t v215 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v214, (int32x4_t)v214), (int8x16_t)v214, 0xCuLL), vnegq_f32(v206)), v214, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v206, (int32x4_t)v206), (int8x16_t)v206, 0xCuLL));
              float32x4_t v201 = vmulq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v215, (int32x4_t)v215), v215, 0xCuLL), v200.f32[0]);
              v201.i32[3] = v243.i32[3];
              float32x4_t v243 = v201;
              float32x4_t v142 = v287;
              goto LABEL_94;
            case 3:
            case 4:
              simd_float4 v316 = (simd_float4)v143;
              if (*(float *)&v192 < 0.0) {
                float v209 = 14.0;
              }
              else {
                float v209 = (float)(1.25 / (float)(*(float *)&v192 + 0.083333)) + -1.0;
              }
              float32x4_t v332 = 0uLL;
              __n128 v312 = (__n128)v200;
              float v210 = srdnoise3(&v332, v277.f32[0] * v209, v268 * v209, v267 * v209, *((float *)&v192 + 1) * a6);
              float32x4_t v211 = vmulq_n_f32(vmulq_n_f32(v332, v210), v312.n128_f32[0]);
              float32x4_t v142 = v211;
              v142.i32[3] = v287.i32[3];
              float32x4_t v201 = v142;
              if (v189 == 4)
              {
                *(float32x2_t *)v201.f32 = vmul_n_f32(*(float32x2_t *)v211.f32, v253.f32[0]);
                v201.i64[1] = COERCE_UNSIGNED_INT(vmuls_lane_f32(v253.f32[0], v211, 2));
              }
              float32x4_t v140 = v300;
              float32x4_t v139 = v301;
              float32x4_t v141 = v293;
              float32x4_t v143 = (float32x4_t)v316;
              goto LABEL_95;
            case 5:
              float32x4_t v218 = vsubq_f32(v277, v143);
              float v219 = sqrtf(vmuls_lane_f32(v218.f32[2], v218, 2) + vaddv_f32((float32x2_t)*(_OWORD *)&vmulq_f32(v218, v218)));
              *(float32x2_t *)v218.f32 = vsub_f32(0, *(float32x2_t *)v218.f32);
              v218.f32[2] = 0.0 - v218.f32[2];
              float32x4_t v201 = vmulq_n_f32(vmulq_n_f32(vmulq_n_f32(v218, v219), *(float *)&v292), v200.f32[0]);
              v201.i32[3] = v238.i32[3];
              float32x4_t v142 = v287;
              float32x4_t v238 = v201;
              goto LABEL_94;
            case 6:
              float32x4_t v220 = vsubq_f32(v277, v143);
              int8x16_t v221 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v206, (int32x4_t)v206), (int8x16_t)v206, 0xCuLL), v249), v206, v250);
              float32x4_t v222 = vmulq_f32(v220, v220);
              float32x4_t v201 = vmulq_n_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v221, (int32x4_t)v221), v221, 0xCuLL), (float)(1.0 / sqrtf(v222.f32[2] + vaddv_f32(*(float32x2_t *)v222.f32))) * v200.f32[0]);
              v201.i32[3] = v244.i32[3];
              float32x4_t v244 = v201;
              float32x4_t v142 = v287;
              goto LABEL_94;
            case 7:
              float32x4_t v216 = vmulq_n_f32(vsubq_f32(v277, v143), -v200.f32[0]);
              float32x4_t v217 = vmulq_n_f32(v266, (float)(v207 * -2.0) * sqrtf(fabsf(v190)));
              float32x4_t v201 = vaddq_f32(v217, v216);
              v217.i32[3] = v240.i32[3];
              v216.i32[3] = v239.i32[3];
              v201.i32[3] = v245.i32[3];
              float32x4_t v245 = v201;
              float32x4_t v239 = v216;
              float32x4_t v240 = v217;
              float32x4_t v142 = v287;
              goto LABEL_94;
            case 8:
              float v223 = 2.0;
              if (v207 <= 2.0) {
                float v224 = v182 * a7;
              }
              else {
                float v224 = 2.0;
              }
              if (v190 <= 2.0) {
                float v223 = v190;
              }
              float v225 = (float)(v224 + (float)(v254 * (float)(v223 * a7))) * (float)-(float)(v199 * v254);
              *(float32x2_t *)v201.f32 = vmul_n_f32(v252, v225);
              v201.f32[2] = v251 * v225;
              v201.i32[3] = 0;
              float32x4_t v142 = v287;
              goto LABEL_94;
            case 9:
              if (v155 != 1)
              {
                v226.i64[0] = 0x3F0000003F000000;
                v226.i64[1] = 0x3F0000003F000000;
                __n128 v227 = (__n128)vaddq_f32(vmulq_f32((float32x4_t)v311, v226), v226);
                v227.n128_u32[3] = v233.u32[3];
                __n128 v311 = v227;
                simd_float4 v316 = (simd_float4)v143;
                __n128 v312 = (__n128)v200;
                *(double *)v228.i64 = ((double (*)(float32x4_t *, __n128))v345)(&v340, v227);
                float32x4_t v143 = (float32x4_t)v316;
                float32x4_t v140 = v300;
                float32x4_t v139 = v301;
                float32x4_t v201 = vmulq_n_f32(v228, v312.n128_f32[0]);
                v201.i32[3] = v234.i32[3];
                float32x4_t v233 = (float32x4_t)v311;
                float32x4_t v234 = v201;
              }
              float32x4_t v142 = v287;
              goto LABEL_94;
            default:
LABEL_175:
              sub_1B6E32BE8();
              __break(1u);
              JUMPOUT(0x1B67ACAC4);
          }
        }
        float32x4_t v143 = v286;
        float32x4_t v142 = v287;
        float32x4_t v140 = v300;
        float32x4_t v139 = v301;
LABEL_94:
        float32x4_t v141 = v293;
LABEL_95:
        float32x4_t v144 = vaddq_f32(v309, v201);
        v144.i32[3] = v288.i32[3];
        float32x4_t v287 = v142;
        float32x4_t v288 = v144;
        float32x4_t v309 = v144;
        float32x4_t v286 = v143;
        goto LABEL_96;
      }
      float32x4_t v305 = (float32x4_t)v380.columns[2];
      float32x4_t v306 = (float32x4_t)v380.columns[1];
      float32x4_t v307 = (float32x4_t)v380.columns[0];
      __n128 v311 = (__n128)v380.columns[3];
      sub_1B6CEE8E8(*(void *)(v135 + 132), v350);
      sub_1B62D7490((uint64_t)v350, (uint64_t)v358, (unint64_t *)&unk_1EB97EFD0, (uint64_t)&type metadata for TextureCPURuntime);
      if (v364)
      {
        if (v363 == 7)
        {
          uint64_t v150 = (void *)v358[0];
          uint64_t v151 = v358[1];
          unsigned int v152 = v359;
          uint64_t v153 = v362;
          int v154 = 0;
          switch(v362)
          {
            case 10:
              int v154 = 4;
              if (v358[0]) {
                goto LABEL_137;
              }
              goto LABEL_139;
            case 11:
              int v154 = 5;
              if (!v358[0]) {
                goto LABEL_139;
              }
              goto LABEL_137;
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
              goto LABEL_118;
            case 25:
              goto LABEL_136;
            case 55:
              int v154 = 1;
              if (!v358[0]) {
                goto LABEL_139;
              }
              goto LABEL_137;
            case 70:
              int v154 = 6;
              if (!v358[0]) {
                goto LABEL_139;
              }
              goto LABEL_137;
            case 71:
              int v154 = 7;
              if (!v358[0]) {
                goto LABEL_139;
              }
              goto LABEL_137;
            case 80:
              int v154 = 8;
              if (!v358[0]) {
                goto LABEL_139;
              }
              goto LABEL_137;
            case 81:
              int v154 = 9;
LABEL_136:
              if (v358[0]) {
                goto LABEL_137;
              }
              goto LABEL_139;
            default:
              if (v362 == 115)
              {
                int v154 = 2;
                if (!v358[0]) {
                  goto LABEL_139;
                }
              }
              else
              {
                if (v362 != 125)
                {
LABEL_118:
                  if (qword_1EB9852D0 != -1) {
                    swift_once();
                  }
                  v332.i64[0] = 0;
                  v332.i64[1] = 0xE000000000000000;
                  v264.i64[0] = qword_1EB997FD0;
                  swift_retain();
                  sub_1B6E328C8();
                  swift_bridgeObjectRelease();
                  v332.i64[0] = 0xD00000000000001ALL;
                  v332.i64[1] = v232;
                  _sSo14MTLPixelFormatV3VFXE11descriptionSSvg_0(v153);
                  sub_1B6E31948();
                  swift_bridgeObjectRelease();
                  float32x4_t v166 = v332;
                  v293.i32[0] = sub_1B6E32148();
                  if (qword_1EB9854F8 != -1) {
                    swift_once();
                  }
                  v310.i64[0] = v134;
                  uint64_t v167 = qword_1EB997FF0;
                  uint64_t v168 = qword_1EB985528;
                  swift_retain();
                  if (v168 != -1) {
                    swift_once();
                  }
                  sub_1B67A36D0();
                  uint64_t v169 = swift_allocObject();
                  *(_OWORD *)(v169 + 16) = xmmword_1B6E77050;
                  *(void *)(v169 + 56) = MEMORY[0x1E4FBB1A0];
                  *(void *)(v169 + 64) = sub_1B678615C();
                  *(float32x4_t *)(v169 + 32) = v166;
                  swift_bridgeObjectRetain();
                  sub_1B6E31258();
                  swift_bridgeObjectRelease();
                  swift_retain();
                  long long v170 = v282;
                  sub_1B6E31088();
                  uint64_t v171 = v285[12];
                  uint64_t v236 = v285[16];
                  uint64_t v237 = v171;
                  uint64_t v172 = v285[20];
                  uint64_t v173 = (uint64_t)v284;
                  v263.i64[0] = v167;
                  float32x4_t v174 = (float32x4_t *)&v284[v172];
                  (*v281)(v284, v170, v283);
                  *(unsigned char *)(v173 + v237) = v293.i8[0];
                  *(void *)(v173 + v236) = 0;
                  *float32x4_t v174 = v166;
                  swift_bridgeObjectRetain();
                  sub_1B6E31368();
                  swift_release();
                  sub_1B67A3738(v173);
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  uint64_t v134 = v310.i64[0];
                  goto LABEL_139;
                }
                int v154 = 3;
                if (!v358[0]) {
                  goto LABEL_139;
                }
              }
LABEL_137:
              v293.i32[0] = v360;
              v310.i32[0] = v361;
              if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
              {
                swift_unknownObjectRelease();
LABEL_139:
                sub_1B66576EC(v350[0].i64);
                float32x4_t v340 = 0u;
                float32x4_t v341 = 0u;
                float32x4_t v342 = 0u;
                float32x4_t v343 = 0u;
                uint64_t v344 = 0;
                uint64_t v345 = 1;
                uint64_t v155 = 1;
                simd_float4x4 v175 = v308;
                uint64_t *v308 = 0;
                v175[1] = 0;
                goto LABEL_141;
              }
              id v176 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
              id v177 = v150;
              swift_unknownObjectRelease();
              v178.i64[0] = __PAIR64__(v293.u32[0], v152);
              v178.i64[1] = __PAIR64__(v248.u32[3], v310.u32[0]);
              float32x4_t v310 = (float32x4_t)v178;
              vfx_sampler3d_make((uint64_t)v176 + v151, v154, 2, 1, (uint64_t)&v332, v178);
              float32x4_t v293 = v332;
              float32x4_t v263 = v334;
              float32x4_t v264 = v333;
              float32x4_t v248 = v335;
              uint64_t v179 = v336;
              uint64_t v155 = v337;
              uint64_t v180 = v339;
              uint64_t v181 = v338;
              sub_1B66576EC(v350[0].i64);
              float32x4_t v340 = v293;
              float32x4_t v341 = v264;
              float32x4_t v342 = v263;
              float32x4_t v343 = v248;
              uint64_t v344 = v179;
              uint64_t v345 = v155;
              float32x4_t v248 = v310;
              uint64_t v346 = v181;
              uint64_t v347 = v180;
LABEL_141:
              int v138 = v296;
              v380.columns[3] = (simd_float4)v311;
              v380.columns[1] = (simd_float4)v306;
              float32x4_t v145 = v307;
              v380.columns[2] = (simd_float4)v305;
              break;
          }
          goto LABEL_142;
        }
        sub_1B66576EC(v350[0].i64);
      }
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      v316.i64[0] = qword_1EB997FD0;
      swift_retain();
      char v156 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v311.n128_u64[0] = (unint64_t)v137;
      v310.i64[0] = v134;
      uint64_t v157 = qword_1EB997FF0;
      uint64_t v158 = qword_1EB985528;
      swift_retain();
      if (v158 != -1) {
        swift_once();
      }
      sub_1B67A36D0();
      uint64_t v159 = swift_allocObject();
      *(_OWORD *)(v159 + 16) = xmmword_1B6E77050;
      *(void *)(v159 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v159 + 64) = sub_1B678615C();
      *(void *)(v159 + 32) = 0xD00000000000001ELL;
      *(void *)(v159 + 40) = v275;
      sub_1B6E31258();
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v160 = v282;
      sub_1B6E31088();
      uint64_t v161 = v285[12];
      uint64_t v162 = v285[16];
      uint64_t v163 = v285[20];
      uint64_t v164 = (uint64_t)v284;
      v307.i64[0] = v157;
      long long v165 = &v284[v163];
      (*v281)(v284, v160, v283);
      *(unsigned char *)(v164 + v161) = v156;
      *(void *)(v164 + v162) = 0;
      *(void *)long long v165 = 0xD00000000000001ELL;
      *((void *)v165 + 1) = v275;
      sub_1B6E31368();
      swift_release();
      sub_1B67A3738(v164);
      swift_release();
      swift_release();
      float32x4_t v141 = (float32x4_t)v312;
      int v138 = v296;
      float32x4_t v140 = v300;
      float32x4_t v139 = v301;
      uint64_t v134 = v310.i64[0];
      int v137 = (uint64_t *)v311.n128_u64[0];
LABEL_96:
      v135 += 144;
      v136 += 64;
      v137 += 4;
      --v134;
    }
    while (v134);
    float32x4_t v293 = v141;
    float32x4_t v300 = v140;
    float32x4_t v301 = v139;
LABEL_170:
    v322[0] = v319;
    v322[1] = v320;
    uint64_t v323 = v321;
    uint64_t v23 = v278;
    sub_1B6345178(v280, (unsigned __int16 **)v322, (uint64_t)v372);
    v229 = v295;
    sub_1B634507C(v295);
    uint64_t v17 = v272;
    ecs_stack_allocator_pop_snapshot(v272);
    int v18 = v271;
    if (v271)
    {
      os_unfair_lock_unlock(*((os_unfair_lock_t *)v229 + 43));
      os_unfair_lock_unlock(*((os_unfair_lock_t *)v229 + 47));
    }
    swift_release();
    uint64_t v22 = v279 + 1;
    if (v279 + 1 != v274) {
      continue;
    }
    break;
  }
  sub_1B62CA064((uint64_t)v317);
  sub_1B632F170(v348);
  return sub_1B632F170(v348);
}

void sub_1B67ACD54(uint64_t a1, void *a2, float32x2_t *a3, float *a4, uint64_t a5, uint64_t a6, float32x4_t a7, float32x4_t a8, float32x4_t a9, float32x4_t a10, float a11, float a12)
{
  uint64_t v145 = *MEMORY[0x1E4F143B8];
  if ((a4[10] & *(_DWORD *)(a1 + 32)) == 0 || *(unsigned char *)(a1 + 8) != 1) {
    return;
  }
  uint64_t v15 = a4;
  float32x4_t v111 = *(float32x4_t *)a3[2].f32;
  float32x4_t v113 = *(float32x4_t *)a3->f32;
  v146.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a7, COERCE_FLOAT(*(_OWORD *)a3->f32)), a8, *a3, 1), a9, *(float32x4_t *)a3->f32, 2), a10, *(float32x4_t *)a3->f32, 3);
  v146.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a7, v111.f32[0]), a8, *(float32x2_t *)v111.f32, 1), a9, v111, 2), a10, v111, 3);
  float32x4_t v115 = *(float32x4_t *)a3[4].f32;
  v146.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a7, v115.f32[0]), a8, a3[4], 1), a9, v115, 2), a10, v115, 3);
  float32x4_t v107 = a8;
  float32x4_t v109 = a7;
  float32x4_t v103 = *(float32x4_t *)a3[6].f32;
  float32x4_t v105 = a9;
  float32x4_t v94 = a10;
  v146.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a7, v103.f32[0]), a8, a3[6], 1), a9, v103, 2), a10, v103, 3);
  simd_float4x4 v147 = __invert_f4(v146);
  float32x4_t v92 = (float32x4_t)v147.columns[1];
  float32x4_t v93 = (float32x4_t)v147.columns[0];
  float32x4_t v90 = (float32x4_t)v147.columns[3];
  float32x4_t v91 = (float32x4_t)v147.columns[2];
  memset(v119, 0, sizeof(v119));
  uint64_t v120 = 0;
  uint64_t v121 = 1;
  uint64_t v123 = 0;
  uint64_t v122 = 0;
  float v96 = (long long *)a1;
  if (*(void *)a1 == 9)
  {
    sub_1B6CEE8E8(*(void *)(a1 + 132), v124);
    sub_1B62D7490((uint64_t)v124, (uint64_t)v132, (unint64_t *)&unk_1EB97EFD0, (uint64_t)&type metadata for TextureCPURuntime);
    if (v137)
    {
      v138[4] = v134;
      v138[5] = v135;
      v138[6] = v136;
      uint64_t v139 = v137;
      v138[0] = v132[0];
      v138[1] = v132[1];
      v138[3] = v133;
      v138[2] = v132[2];
      if (*((void *)&v133 + 1) == 7)
      {
        sub_1B6AFF208((uint64_t)v138, 2, 1, (uint64_t)v125);
        sub_1B66576EC(v124[0].i64);
        sub_1B62D02FC((uint64_t)v125, (uint64_t)v119, &qword_1E9DD00B8, (uint64_t (*)(uint64_t))type metadata accessor for __vfx_sampler3d);
        float32x4_t v89 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v115, *(float32x4_t *)(a1 + 96), 2), v111, *(float32x2_t *)(a1 + 96), 1), v113, COERCE_FLOAT(*(_OWORD *)(a1 + 96)));
        v15 += 6;
        goto LABEL_23;
      }
      sub_1B66576EC(v124[0].i64);
    }
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v23 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v140[0] = 0;
    swift_retain();
    sub_1B6B33E34(v23, v140, 0xD00000000000001ELL, 0x80000001B6F35690);
    swift_release();
    swift_release();
    return;
  }
  float32x4_t v89 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v115, *(float32x4_t *)(a1 + 96), 2), v111, *(float32x2_t *)(a1 + 96), 1), v113, COERCE_FLOAT(*(_OWORD *)(a1 + 96)));
  switch(*(void *)a1)
  {
    case 0:
      break;
    case 1:
      ++v15;
      break;
    case 2:
      v15 += 2;
      break;
    case 3:
      v15 += 7;
      break;
    case 4:
      v15 += 8;
      break;
    case 5:
      v15 += 9;
      break;
    case 6:
      v15 += 3;
      break;
    case 7:
      v15 += 4;
      break;
    case 8:
      v15 += 5;
      break;
    default:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B67AD638);
  }
LABEL_23:
  float v24 = *v15;
  if (*v15 != 0.0)
  {
    float v25 = *(float *)(a1 + 16);
    long long v26 = *(_OWORD *)(a6 + 104);
    v117[0] = *(_OWORD *)(a6 + 88);
    v117[1] = v26;
    uint64_t v118 = *(void *)(a6 + 120);
    sub_1B62C9DA8(a5, (uint64_t)v117, 0x200000000, v126);
    sub_1B62D7490((uint64_t)v126, (uint64_t)v127, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    float v112 = (unsigned __int16 *)v127[0];
    if (v127[0])
    {
      uint64_t v88 = v131;
      if (v131 >= 1)
      {
        uint64_t v87 = v128;
        if (v128)
        {
          uint64_t v27 = 0;
          int32x4_t v28 = (int32x4_t)vmulq_f32(v115, v115);
          v28.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v28, 2), vadd_f32(*(float32x2_t *)v28.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v28.i8, 1))).u32[0];
          float32x2_t v29 = vrsqrte_f32((float32x2_t)v28.u32[0]);
          float32x2_t v30 = vmul_f32(v29, vrsqrts_f32((float32x2_t)v28.u32[0], vmul_f32(v29, v29)));
          float32x4_t v31 = vmulq_n_f32(v115, vmul_f32(v30, vrsqrts_f32((float32x2_t)v28.u32[0], vmul_f32(v30, v30))).f32[0]);
          int32x4_t v85 = (int32x4_t)vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v105, v31, 2), v107, *(float32x2_t *)v31.f32, 1), v109, v31.f32[0]);
          float32x4_t v95 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(v94, v105, v103, 2), v107, *(float32x2_t *)v103.f32, 1), v109, v103.f32[0]);
          float v32 = v25 * a11;
          uint64_t v84 = v127[5];
          uint64_t v106 = v130[4];
          int v104 = *(unsigned __int8 *)(v129 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          id v82 = v130 + 8;
          uint64_t v83 = v129;
          uint64_t v110 = v127[0] + 41;
          uint64_t v86 = a2;
          float32x4_t v116 = v130;
          do
          {
            int v33 = (unsigned int *)(v84 + 48 * v27);
            uint64_t v34 = *v33;
            uint64_t v35 = v33[1];
            uint64_t v36 = v33[2];
            uint64_t v37 = *((void *)v33 + 2);
            uint64_t v38 = *((void *)v33 + 3);
            uint64_t v40 = *((void *)v33 + 4);
            uint64_t v39 = *((void *)v33 + 5);
            uint64_t v102 = v27;
            if (v104)
            {
              float32x4_t v41 = *(os_unfair_lock_s **)(v39 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v41);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v39 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            uint64_t v42 = v39;
            uint64_t v108 = v39;
            ecs_stack_allocator_push_snapshot(v106);
            uint64_t v43 = v116;
            uint64_t v100 = v116[7];
            uint64_t v101 = v116[6];
            uint64_t v98 = v116[9];
            uint64_t v99 = v116[8];
            uint64_t v97 = v116[10];
            uint64_t v44 = v116[4];
            uint64_t v45 = *(void *)(*(void *)(*(void *)(*(void *)(v42 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            uint64_t v46 = v108;
            v116[6] = ecs_stack_allocator_allocate(v44, 48 * v45, 8);
            v116[7] = v45;
            v82[1] = 0;
            v82[2] = 0;
            *id v82 = 0;
            swift_release();
            v140[0] = v83;
            v140[1] = v108;
            v140[2] = (uint64_t)v116;
            v140[3] = v36;
            v140[4] = (v35 - v34 + v36);
            v140[5] = v88;
            v140[6] = v34;
            v140[7] = v35;
            v140[8] = 0;
            v140[9] = 0;
            char v141 = 1;
            uint64_t v142 = v37;
            uint64_t v143 = v38;
            uint64_t v144 = v40;
            sub_1B67A79C0(v140, v96, v86, (uint64_t)v119, v24, v32, v85, v95, v89, v93, v92, v91, v47, v48, v49, v50, v90, a12, a11);
            unint64_t v51 = v116[6];
            uint64_t v114 = v116[8];
            if (!v114)
            {
              uint64_t v78 = v116[7];
              float32x4_t v79 = (void *)v116[4];
              uint64_t v81 = v102;
              goto LABEL_70;
            }
            for (uint64_t i = 0; i != v114; ++i)
            {
              unint64_t v54 = v51;
              uint64_t v55 = (uint64_t *)(v51 + 48 * i);
              uint64_t v56 = *v55;
              uint64_t v57 = (void (*)(uint64_t))v55[4];
              uint64_t v58 = v43[9];
              if (v58) {
                BOOL v59 = v56 == v58;
              }
              else {
                BOOL v59 = 0;
              }
              if (v59 || !v112[11]) {
                goto LABEL_34;
              }
              unint64_t v60 = v112[9];
              uint64_t v61 = (void *)(v110 + v112[8]);
              uint64_t v62 = v55[2];
              uint64_t v63 = v61;
              unint64_t v64 = v60 >> 4;
              uint64_t v65 = v110;
              if (v60 >= 0x10)
              {
                while (*v63 != v56)
                {
                  ++v65;
                  v63 += 2;
                  if (!--v64) {
                    goto LABEL_49;
                  }
                }
                unsigned int v66 = *(unsigned __int8 *)(v65 + v112[10]);
                BOOL v67 = v66 > 5;
                int v68 = (1 << v66) & 0x23;
                if (v67 || v68 == 0)
                {
LABEL_34:
                  uint64_t v53 = swift_retain();
                  v57(v53);
                  swift_release();
                  goto LABEL_35;
                }
              }
LABEL_49:
              if (swift_conformsToProtocol2()) {
                uint64_t v70 = v62;
              }
              else {
                uint64_t v70 = 0;
              }
              if (v70)
              {
                if (v60 < 0x10) {
                  goto LABEL_34;
                }
                float32x4_t v71 = v61;
                unint64_t v72 = v60 >> 4;
                uint64_t v73 = v110;
                while (*v71 != v70)
                {
                  ++v73;
                  v71 += 2;
                  if (!--v72) {
                    goto LABEL_62;
                  }
                }
                unsigned int v74 = *(unsigned __int8 *)(v73 + v112[10]);
                BOOL v67 = v74 > 5;
                int v75 = (1 << v74) & 0x23;
                if (v67 || v75 == 0) {
                  goto LABEL_34;
                }
LABEL_62:
                uint64_t v77 = 16 * (v60 >> 4);
                while (*v61 != v70)
                {
                  v61 += 2;
                  v77 -= 16;
                  if (!v77) {
                    goto LABEL_34;
                  }
                }
              }
LABEL_35:
              uint64_t v43 = v116;
              unint64_t v51 = v54;
            }
            uint64_t v78 = v116[7];
            unint64_t v51 = v116[6];
            float32x4_t v79 = (void *)v116[4];
            if ((uint64_t)v116[8] >= 1)
            {
              unint64_t v80 = v116[6];
              swift_arrayDestroy();
              unint64_t v51 = v80;
            }
            uint64_t v81 = v102;
            uint64_t v46 = v108;
LABEL_70:
            ecs_stack_allocator_deallocate(v79, v51, 48 * v78);
            v43[6] = v101;
            v43[7] = v100;
            v43[8] = v99;
            v43[9] = v98;
            v43[10] = v97;
            sub_1B634507C((char *)v46);
            ecs_stack_allocator_pop_snapshot(v106);
            if (v104)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 376));
            }
            swift_release();
            uint64_t v27 = v81 + 1;
          }
          while (v27 != v87);
        }
      }
      sub_1B632F170(v126);
    }
  }
}

uint64_t sub_1B67AD65C(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  int v3 = *(_DWORD *)(a1 + 12);
  uint64_t v4 = *(int *)(a1 + 8);
  swift_retain();
  BOOL v5 = v4 == -1 && v3 == 0;
  if (v5
    || (v4 & 0x80000000) != 0
    || *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v4
    || (uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v3 != -1)
    && *(_DWORD *)(v6 + 12 * (int)v4 + 8) != v3)
  {
    swift_release();
LABEL_10:
    int v7 = 255;
    float v8 = 1.0;
    float v9 = 1.0;
    float v10 = 1.0;
    float v11 = 1.0;
    float v12 = 1.0;
    float v13 = 1.0;
    float v14 = 1.0;
    float v15 = 1.0;
    float v16 = 1.0;
    uint64_t result = 1065353216;
    goto LABEL_11;
  }
  uint64_t v44 = (unsigned int *)(v6 + 12 * (int)v4);
  sub_1B696372C(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v44 + 32), *v44 | ((unint64_t)*((unsigned __int16 *)v44 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v44 + 2) << 32), 44, v2, (uint64_t)&v62);
  swift_release();
  if ((v65 & 0x100000000) != 0) {
    goto LABEL_10;
  }
  int v7 = v65;
  float v16 = *(float *)&v64;
  uint64_t result = HIDWORD(v64);
  float v14 = *((float *)&v63 + 2);
  float v15 = *((float *)&v63 + 3);
  float v12 = *(float *)&v63;
  float v13 = *((float *)&v63 + 1);
  float v10 = *((float *)&v62 + 2);
  float v11 = *((float *)&v62 + 3);
  float v8 = *(float *)&v62;
  float v9 = *((float *)&v62 + 1);
LABEL_11:
  v78[0] = v8;
  v78[1] = v9;
  v78[2] = v10;
  v78[3] = v11;
  v78[4] = v12;
  v78[5] = v13;
  v78[6] = v14;
  v78[7] = v15;
  v78[8] = v16;
  LODWORD(v78[9]) = result;
  LODWORD(v78[10]) = v7;
  if (v7)
  {
    swift_retain();
    sub_1B62F46E8();
    float v19 = v18;
    double v20 = *(double *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 48);
    *(double *)v21.i64 = sub_1B6335378();
    float32x4_t v57 = v22;
    float32x4_t v58 = v21;
    float32x4_t v55 = v24;
    float32x4_t v56 = v23;
    if (qword_1EB97DC28 != -1) {
      swift_once();
    }
    uint64_t v79 = qword_1EB997A18;
    int v80 = 0;
    char v81 = 2;
    uint64_t v82 = 0;
    char v83 = 2;
    uint64_t v84 = 0;
    swift_retain();
    sub_1B67A6A38((uint64_t)v59);
    swift_release();
    v75[0] = v59[0];
    v75[1] = v59[1];
    uint64_t v76 = v60;
    sub_1B62C9DA8(v2, (uint64_t)v75, 0x200000000, v61);
    sub_1B62D7490((uint64_t)v61, (uint64_t)&v62, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if ((void)v62)
    {
      long long v70 = v62;
      long long v71 = v63;
      uint64_t v72 = v64;
      if (v69 > 0 && (uint64_t v49 = v66) != 0)
      {
        float v25 = v20;
        uint64_t v47 = v65;
        uint64_t v26 = v68[4];
        char v53 = *(unsigned char *)(v67 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        unint64_t v54 = v68;
        uint64_t v45 = v68 + 8;
        uint64_t v46 = (uint64_t)(v68 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v27 = 0;
        uint64_t v48 = v26;
        do
        {
          int32x4_t v28 = (unsigned int *)(v47 + 48 * v27);
          float32x2_t v30 = (uint64_t *)*((void *)v28 + 2);
          uint64_t v29 = *((void *)v28 + 3);
          uint64_t v32 = *((void *)v28 + 4);
          uint64_t v31 = *((void *)v28 + 5);
          uint64_t v51 = *v28;
          uint64_t v52 = v27;
          uint64_t v50 = v28[1];
          if (v53)
          {
            int v33 = *(os_unfair_lock_s **)(v31 + 376);
            swift_retain();
            os_unfair_lock_lock(v33);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v31 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v26);
          sub_1B62D7490(v46, (uint64_t)v77, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v34 = v54[4];
          uint64_t v35 = *(void *)(*(void *)(*(void *)(*(void *)(v31 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v54[6] = ecs_stack_allocator_allocate(v34, 48 * v35, 8);
          v54[7] = v35;
          v45[1] = 0;
          v45[2] = 0;
          *uint64_t v45 = 0;
          swift_release();
          uint64_t v36 = sub_1B62C9024((uint64_t)&type metadata for ForceField, (uint64_t)&off_1F0F525A8, v30, v29, v32, (uint64_t)v54);
          uint64_t v37 = (void *)sub_1B62C9024((uint64_t)&type metadata for ForceFieldRuntime, (uint64_t)&off_1F0F70CD0, v30, v29, v32, (uint64_t)v54);
          uint64_t v38 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v30, v29, v32, (uint64_t)v54);
          uint64_t v39 = (float32x2_t *)v38;
          if (v30)
          {
            for (; v32; --v32)
            {
              sub_1B67ACD54(v36, v37, v39, v78, v2, a1, v58, v57, v56, v55, v19, v25);
              v39 += 8;
              v37 += 4;
              v36 += 144;
            }
          }
          else if (v51 != v50)
          {
            uint64_t v40 = v50 - v51;
            float32x4_t v41 = (float32x2_t *)(v38 + (v51 << 6));
            uint64_t v42 = v36 + 144 * v51;
            uint64_t v43 = &v37[4 * v51];
            do
            {
              sub_1B67ACD54(v42, v43, v41, v78, v2, a1, v58, v57, v56, v55, v19, v25);
              v41 += 8;
              v43 += 4;
              v42 += 144;
              --v40;
            }
            while (v40);
          }
          v73[0] = v70;
          v73[1] = v71;
          uint64_t v74 = v72;
          sub_1B6345178(v54, (unsigned __int16 **)v73, (uint64_t)v77);
          sub_1B634507C((char *)v31);
          uint64_t v26 = v48;
          ecs_stack_allocator_pop_snapshot(v48);
          if (v53)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 376));
          }
          swift_release();
          uint64_t v27 = v52 + 1;
        }
        while (v52 + 1 != v49);
      }
      else
      {
        swift_retain();
        swift_retain();
        swift_retain();
      }
      swift_release();
      sub_1B62CA064((uint64_t)v59);
      sub_1B632F170(v61);
      return (uint64_t)sub_1B632F170(v61);
    }
    else
    {
      sub_1B62CA064((uint64_t)v59);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B67ADC80(int a1, int a2, int a3)
{
  return a1 | (a2 << 8) | (a3 << 16) | 0xFF000000;
}

uint64_t getEnumTagSinglePayload for ParticleForceField.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ParticleForceField.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67ADDECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleForceField.CodingKeys()
{
  return &type metadata for ParticleForceField.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ForceField_LEGACY(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ForceField_LEGACY(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForceField_LEGACY()
{
  return &type metadata for ForceField_LEGACY;
}

uint64_t getEnumTagSinglePayload for ArgumentScope(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ForceField.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67AE03CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForceField.CodingKeys()
{
  return &type metadata for ForceField.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleForceField()
{
  return &type metadata for ParticleForceField;
}

unint64_t sub_1B67AE088()
{
  unint64_t result = qword_1E9DD00C0;
  if (!qword_1E9DD00C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD00C0);
  }
  return result;
}

unint64_t sub_1B67AE0E0()
{
  unint64_t result = qword_1E9DD00C8;
  if (!qword_1E9DD00C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD00C8);
  }
  return result;
}

unint64_t sub_1B67AE138()
{
  unint64_t result = qword_1E9DD00D0;
  if (!qword_1E9DD00D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD00D0);
  }
  return result;
}

unint64_t sub_1B67AE190()
{
  unint64_t result = qword_1E9DD00D8;
  if (!qword_1E9DD00D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD00D8);
  }
  return result;
}

unint64_t sub_1B67AE1E8()
{
  unint64_t result = qword_1E9DD00E0;
  if (!qword_1E9DD00E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD00E0);
  }
  return result;
}

unint64_t sub_1B67AE240()
{
  unint64_t result = qword_1E9DD00E8;
  if (!qword_1E9DD00E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD00E8);
  }
  return result;
}

void sub_1B67AE294(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B67AE2FC()
{
  unint64_t result = qword_1E9DD00F8;
  if (!qword_1E9DD00F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD00F8);
  }
  return result;
}

unint64_t sub_1B67AE350()
{
  unint64_t result = qword_1E9DD0100;
  if (!qword_1E9DD0100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0100);
  }
  return result;
}

unint64_t sub_1B67AE3A4()
{
  unint64_t result = qword_1E9DD0108;
  if (!qword_1E9DD0108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0108);
  }
  return result;
}

unint64_t sub_1B67AE3F8()
{
  unint64_t result = qword_1E9DD0110;
  if (!qword_1E9DD0110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0110);
  }
  return result;
}

unint64_t sub_1B67AE44C()
{
  unint64_t result = qword_1EB980418;
  if (!qword_1EB980418)
  {
    sub_1B62AA858();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980418);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ForceField_LEGACY.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ForceField_LEGACY.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67AE610);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForceField_LEGACY.CodingKeys()
{
  return &type metadata for ForceField_LEGACY.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ForceField_LEGACY.FallOff(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67AE714);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForceField_LEGACY.FallOff()
{
  return &type metadata for ForceField_LEGACY.FallOff;
}

unsigned char *storeEnumTagSinglePayload for ForceField_LEGACY.Direction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67AE818);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForceField_LEGACY.Direction()
{
  return &type metadata for ForceField_LEGACY.Direction;
}

unsigned char *storeEnumTagSinglePayload for ForceField_LEGACY.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67AE91CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForceField_LEGACY.Kind()
{
  return &type metadata for ForceField_LEGACY.Kind;
}

uint64_t sub_1B67AE954()
{
  return sub_1B67AE984(&qword_1E9DD0118, &qword_1E9DD0120, (uint64_t)&type metadata for ForceField_LEGACY.Kind);
}

uint64_t sub_1B67AE984(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B62D840C(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B67AE9EC()
{
  unint64_t result = qword_1E9DD0128;
  if (!qword_1E9DD0128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0128);
  }
  return result;
}

uint64_t sub_1B67AEA40()
{
  return sub_1B67AE984(&qword_1E9DD0130, &qword_1E9DD0138, (uint64_t)&type metadata for ForceField_LEGACY.Direction);
}

unint64_t sub_1B67AEA74()
{
  unint64_t result = qword_1E9DD0140;
  if (!qword_1E9DD0140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0140);
  }
  return result;
}

uint64_t sub_1B67AEAC8()
{
  return sub_1B67AE984(&qword_1E9DD0148, &qword_1E9DD0150, (uint64_t)&type metadata for ForceField_LEGACY.FallOff);
}

unint64_t sub_1B67AEAFC()
{
  unint64_t result = qword_1E9DD0158;
  if (!qword_1E9DD0158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0158);
  }
  return result;
}

unint64_t sub_1B67AEB54()
{
  unint64_t result = qword_1E9DD0160;
  if (!qword_1E9DD0160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0160);
  }
  return result;
}

unint64_t sub_1B67AEBAC()
{
  unint64_t result = qword_1E9DD0168;
  if (!qword_1E9DD0168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0168);
  }
  return result;
}

unint64_t sub_1B67AEC04()
{
  unint64_t result = qword_1E9DD0170;
  if (!qword_1E9DD0170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0170);
  }
  return result;
}

unint64_t sub_1B67AEC58()
{
  unint64_t result = qword_1E9DD0178;
  if (!qword_1E9DD0178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0178);
  }
  return result;
}

unint64_t sub_1B67AECAC()
{
  unint64_t result = qword_1E9DD0180;
  if (!qword_1E9DD0180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0180);
  }
  return result;
}

unint64_t sub_1B67AED00()
{
  unint64_t result = qword_1E9DD0188;
  if (!qword_1E9DD0188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0188);
  }
  return result;
}

ValueMetadata *type metadata accessor for Orientation()
{
  return &type metadata for Orientation;
}

uint64_t sub_1B67AED74()
{
  return sub_1B6E33988();
}

uint64_t sub_1B67AEDC4()
{
  return sub_1B6E318B8();
}

uint64_t sub_1B67AEDD8()
{
  return sub_1B6E33988();
}

uint64_t sub_1B67AEE24@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B67AEE78(void *a1@<X8>)
{
  *a1 = 0x65756C6176;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1B67AEE90()
{
  return 0x65756C6176;
}

uint64_t sub_1B67AEEA4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B67AEEFC(uint64_t a1)
{
  unint64_t v2 = sub_1B67AF01C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67AEF38(uint64_t a1)
{
  unint64_t v2 = sub_1B67AF01C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B67AEF74(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B67AF070();
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

unint64_t sub_1B67AF01C()
{
  unint64_t result = qword_1EB97DBF8;
  if (!qword_1EB97DBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DBF8);
  }
  return result;
}

unint64_t sub_1B67AF070()
{
  unint64_t result = qword_1E9DD0190;
  if (!qword_1E9DD0190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0190);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Orientation.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B67AF160);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Orientation.CodingKeys()
{
  return &type metadata for Orientation.CodingKeys;
}

unint64_t sub_1B67AF19C()
{
  unint64_t result = qword_1E9DD0198;
  if (!qword_1E9DD0198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0198);
  }
  return result;
}

unint64_t sub_1B67AF1F4()
{
  unint64_t result = qword_1EB97DC08;
  if (!qword_1EB97DC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DC08);
  }
  return result;
}

unint64_t sub_1B67AF24C()
{
  unint64_t result = qword_1EB97DC00;
  if (!qword_1EB97DC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DC00);
  }
  return result;
}

uint64_t *sub_1B67AF2A0()
{
  sub_1B62F46E8();
  float v2 = v1;
  long long v3 = *(_OWORD *)(v0 + 32);
  v75[0] = *(_OWORD *)(v0 + 16);
  v75[1] = v3;
  uint64_t v76 = *(void *)(v0 + 48);
  uint64_t v4 = swift_retain();
  sub_1B62C9DA8(v4, (uint64_t)v75, 0x200000000, v68);
  sub_1B6309B40((uint64_t)v68, (uint64_t)v69);
  uint64_t v67 = (unsigned __int16 *)v69[0];
  if (!v69[0]) {
    return (uint64_t *)swift_release();
  }
  uint64_t v5 = v69[7];
  uint64_t v56 = v69[5];
  uint64_t v57 = v69[8];
  unsigned int v6 = (void *)v69[9];
  uint64_t v7 = v69[10];
  swift_release();
  uint64_t v55 = v7;
  if (v7 > 0 && v5)
  {
    float v8 = v2 * 0.5;
    uint64_t v9 = v6[4];
    int v66 = *(unsigned __int8 *)(v57 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v10 = 0;
    uint64_t v53 = v9;
    uint64_t v54 = v5;
    while (1)
    {
      uint64_t v11 = (unsigned int *)(v56 + 48 * v10);
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      uint64_t v14 = v11[2];
      uint64_t v15 = *((void *)v11 + 3);
      uint64_t v61 = v10;
      uint64_t v62 = *((void *)v11 + 2);
      uint64_t v16 = *((void *)v11 + 4);
      uint64_t v17 = *((void *)v11 + 5);
      if (v66)
      {
        float v18 = *(os_unfair_lock_s **)(v17 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v18);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v9);
      uint64_t v59 = v6[7];
      uint64_t v60 = v6[6];
      uint64_t v58 = v6[8];
      uint64_t v63 = v6[10];
      uint64_t v64 = v6[9];
      uint64_t v19 = v6[4];
      uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v6[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
      v6[7] = v20;
      v6[9] = 0;
      v6[10] = 0;
      unsigned char v6[8] = 0;
      swift_release();
      v70[0] = v57;
      v70[1] = v17;
      uint64_t v65 = v17;
      v70[2] = v6;
      v70[3] = v14;
      v70[4] = (v13 - v12 + v14);
      v70[5] = v55;
      v70[6] = v12;
      v70[7] = v13;
      v70[8] = 0;
      v70[9] = 0;
      char v71 = 1;
      uint64_t v72 = v62;
      uint64_t v73 = v15;
      uint64_t v74 = v16;
      sub_1B67AF758(v70, v8);
      unint64_t v21 = v6[6];
      uint64_t v22 = v6[8];
      if (!v22)
      {
        uint64_t v48 = v6[7];
        uint64_t v49 = (void *)v6[4];
        uint64_t v9 = v53;
        uint64_t v50 = v54;
        uint64_t v51 = v61;
        goto LABEL_46;
      }
      for (uint64_t i = 0; i != v22; ++i)
      {
        float v25 = (uint64_t *)(v21 + 48 * i);
        uint64_t v26 = *v25;
        uint64_t v27 = (void (*)(uint64_t))v25[4];
        uint64_t v28 = v6[9];
        if (v28) {
          BOOL v29 = v26 == v28;
        }
        else {
          BOOL v29 = 0;
        }
        if (v29 || !v67[11]) {
          goto LABEL_11;
        }
        unint64_t v30 = v67[9];
        uint64_t v31 = (void *)((char *)v67 + v67[8] + 41);
        uint64_t v32 = v25[2];
        int v33 = v31;
        unint64_t v34 = v30 >> 4;
        uint64_t v35 = (char *)v67 + 41;
        if (v30 >= 0x10)
        {
          while (*v33 != v26)
          {
            ++v35;
            v33 += 2;
            if (!--v34) {
              goto LABEL_26;
            }
          }
          unsigned int v36 = v35[v67[10]];
          BOOL v37 = v36 > 5;
          int v38 = (1 << v36) & 0x23;
          if (v37 || v38 == 0)
          {
LABEL_11:
            uint64_t v24 = swift_retain();
            v27(v24);
            swift_release();
            continue;
          }
        }
LABEL_26:
        if (swift_conformsToProtocol2()) {
          uint64_t v40 = v32;
        }
        else {
          uint64_t v40 = 0;
        }
        if (v40)
        {
          if (v30 < 0x10) {
            goto LABEL_11;
          }
          float32x4_t v41 = v31;
          unint64_t v42 = v30 >> 4;
          uint64_t v43 = (char *)v67 + 41;
          while (*v41 != v40)
          {
            ++v43;
            v41 += 2;
            if (!--v42) {
              goto LABEL_39;
            }
          }
          unsigned int v44 = v43[v67[10]];
          BOOL v37 = v44 > 5;
          int v45 = (1 << v44) & 0x23;
          if (v37 || v45 == 0) {
            goto LABEL_11;
          }
LABEL_39:
          uint64_t v47 = 16 * (v30 >> 4);
          while (*v31 != v40)
          {
            v31 += 2;
            v47 -= 16;
            if (!v47) {
              goto LABEL_11;
            }
          }
        }
      }
      uint64_t v48 = v6[7];
      unint64_t v21 = v6[6];
      uint64_t v49 = (void *)v6[4];
      uint64_t v9 = v53;
      uint64_t v50 = v54;
      uint64_t v51 = v61;
      if ((uint64_t)v6[8] >= 1) {
        swift_arrayDestroy();
      }
LABEL_46:
      ecs_stack_allocator_deallocate(v49, v21, 48 * v48);
      v6[6] = v60;
      v6[7] = v59;
      unsigned char v6[8] = v58;
      v6[9] = v64;
      v6[10] = v63;
      sub_1B634507C((char *)v65);
      ecs_stack_allocator_pop_snapshot(v9);
      if (v66)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v65 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v65 + 376));
      }
      swift_release();
      uint64_t v10 = v51 + 1;
      if (v10 == v50)
      {
        sub_1B632F170(v68);
        return sub_1B632F170(v68);
      }
    }
  }
  return sub_1B632F170(v68);
}

void sub_1B67AF758(void *a1, float a2)
{
  uint64_t v4 = (uint64_t *)a1[11];
  uint64_t v5 = a1[12];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[2];
  uint64_t v8 = sub_1B62C9024((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, v4, v5, v6, v7);
  uint64_t v9 = sub_1B62C9024((uint64_t)&type metadata for AngularVelocity, (uint64_t)&off_1F0F67CE8, v4, v5, v6, v7);
  uint64_t v10 = sub_1B67A8128();
  uint64_t v11 = a1[6];
  uint64_t v12 = a1[7];
  uint64_t v13 = v12 - v11;
  if (v14)
  {
    if (v12 != v11)
    {
      uint64_t v40 = 16 * v11;
      float32x4_t v41 = (float32x4_t *)(v9 + v40);
      unint64_t v42 = (float32x4_t *)(v8 + v40);
      do
      {
        float v51 = vmuls_lane_f32(a2, *v41, 3);
        float32x4_t v52 = vmulq_n_f32(*v41, v51);
        float32x4_t v53 = v52;
        v53.i32[3] = v67;
        float32x4_t v65 = *v42;
        if (v51 > 0.0001)
        {
          float v64 = v51;
          float32x4_t v59 = v52;
          float v54 = sinf(v51);
          float v51 = v64;
          float v55 = v54 / v64;
          *(float32x2_t *)v53.f32 = vmul_n_f32(*(float32x2_t *)v59.f32, v55);
          v53.i64[1] = COERCE_UNSIGNED_INT(vmuls_lane_f32(v55, v59, 2));
        }
        float32x4_t v63 = v53;
        _S0 = cosf(v51);
        _Q5 = (int32x4_t)v65;
        int8x16_t v45 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(_Q5, _Q5), (int8x16_t)v65, 0xCuLL), vnegq_f32(v63)), v65, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v63, (int32x4_t)v63), (int8x16_t)v63, 0xCuLL));
        float32x4_t v47 = vaddq_f32(vmlaq_n_f32(vmulq_laneq_f32(v63, v65, 3), v65, _S0), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v45, (int32x4_t)v45), v45, 0xCuLL));
        __asm { FMLA            S2, S0, V5.S[3] }
        v47.i32[3] = _S2;
        int8x16_t v48 = (int8x16_t)vmulq_f32(v47, v47);
        int32x2_t v49 = (int32x2_t)vadd_f32(*(float32x2_t *)v48.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL));
        float32x4_t v50 = (float32x4_t)xmmword_1B6E4F370;
        if (vaddv_f32((float32x2_t)v49) != 0.0)
        {
          unsigned __int32 v56 = vadd_f32((float32x2_t)v49, (float32x2_t)vdup_lane_s32(v49, 1)).u32[0];
          float32x2_t v57 = vrsqrte_f32((float32x2_t)v56);
          float32x2_t v58 = vmul_f32(v57, vrsqrts_f32((float32x2_t)v56, vmul_f32(v57, v57)));
          float32x4_t v50 = vmulq_n_f32(v47, vmul_f32(v58, vrsqrts_f32((float32x2_t)v56, vmul_f32(v58, v58))).f32[0]);
        }
        *v42++ = v50;
        ++v41;
        --v13;
      }
      while (v13);
    }
  }
  else if (v12 != v11)
  {
    uint64_t v15 = 16 * v11;
    uint64_t v16 = (float32x4_t *)(v10 + v15);
    uint64_t v17 = (float32x4_t *)(v9 + v15);
    float v18 = (float32x4_t *)(v8 + v15);
    do
    {
      float32x4_t v31 = vmulq_n_f32(*v17, vmuls_lane_f32(a2, *v17, 3));
      v31.i32[3] = v67;
      float32x4_t v32 = vmulq_f32(*v16, v31);
      float32x4_t v33 = v32;
      v33.i32[3] = v66;
      float v34 = v32.f32[2];
      float v35 = sqrtf(vmuls_lane_f32(v32.f32[2], v32, 2) + vaddv_f32((float32x2_t)*(_OWORD *)&vmulq_f32(v32, v32)));
      float32x4_t v62 = *v18;
      if (v35 > 0.0001)
      {
        float32x2_t v61 = *(float32x2_t *)v32.f32;
        float v36 = sinf(v35) / v35;
        *(float32x2_t *)v33.f32 = vmul_n_f32(v61, v36);
        v33.f32[2] = v34 * v36;
        v33.i32[3] = 0;
      }
      float32x4_t v60 = v33;
      _S0 = cosf(v35);
      _Q5 = (int32x4_t)v62;
      int8x16_t v21 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(_Q5, _Q5), (int8x16_t)v62, 0xCuLL), vnegq_f32(v60)), v62, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v60, (int32x4_t)v60), (int8x16_t)v60, 0xCuLL));
      float32x4_t v27 = vaddq_f32(vmlaq_n_f32(vmulq_laneq_f32(v60, v62, 3), v62, _S0), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v21, (int32x4_t)v21), v21, 0xCuLL));
      __asm { FMLA            S2, S0, V5.S[3] }
      v27.i32[3] = _S2;
      int8x16_t v28 = (int8x16_t)vmulq_f32(v27, v27);
      int32x2_t v29 = (int32x2_t)vadd_f32(*(float32x2_t *)v28.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v28, v28, 8uLL));
      float32x4_t v30 = (float32x4_t)xmmword_1B6E4F370;
      if (vaddv_f32((float32x2_t)v29) != 0.0)
      {
        unsigned __int32 v37 = vadd_f32((float32x2_t)v29, (float32x2_t)vdup_lane_s32(v29, 1)).u32[0];
        float32x2_t v38 = vrsqrte_f32((float32x2_t)v37);
        float32x2_t v39 = vmul_f32(v38, vrsqrts_f32((float32x2_t)v37, vmul_f32(v38, v38)));
        float32x4_t v30 = vmulq_n_f32(v27, vmul_f32(v39, vrsqrts_f32((float32x2_t)v37, vmul_f32(v39, v39))).f32[0]);
      }
      *v18++ = v30;
      ++v16;
      ++v17;
      --v13;
    }
    while (v13);
  }
}

uint64_t type metadata accessor for ParticleIntegrateOrientation.System()
{
  return self;
}

uint64_t sub_1B67AFAE8(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 104);
  long long v8 = *(_OWORD *)(a1 + 88);
  long long v9 = v3;
  uint64_t v10 = *(void *)(a1 + 120);
  sub_1B663C678((uint64_t)v6);
  sub_1B62F648C(a1);
  long long v4 = v6[1];
  *(_OWORD *)(v2 + 16) = v6[0];
  *(_OWORD *)(v2 + 32) = v4;
  *(void *)(v2 + 48) = v7;
  return v2;
}

const char *sub_1B67AFB70()
{
  return "ParticleIntegrateOrientation.CPU";
}

uint64_t sub_1B67AFB84()
{
  return type metadata accessor for ParticleIntegrateOrientation.System();
}

ValueMetadata *type metadata accessor for ParticleIntegrateOrientation()
{
  return &type metadata for ParticleIntegrateOrientation;
}

uint64_t sub_1B67AFBB4()
{
  return sub_1B6E32B18();
}

uint64_t sub_1B67AFBF8(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, uint64_t a8)
{
  unint64_t v76 = a6;
  unint64_t v77 = a7;
  unint64_t v74 = a3;
  unint64_t v75 = a4;
  uint64_t v72 = a1;
  unint64_t v73 = a2;
  uint64_t v10 = sub_1B6E31118();
  uint64_t v68 = *(void *)(v10 - 8);
  uint64_t v69 = v10;
  MEMORY[0x1F4188790](v10, v11);
  __int32 v67 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63BCE08(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v20 = (char *)&v66 - v19;
  uint64_t v21 = type metadata accessor for ScriptIndex();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21, v23);
  float v25 = (_DWORD *)((char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v26, v27);
  int32x2_t v29 = (char *)&v66 - v28;
  MEMORY[0x1F4188790](v30, v31);
  float32x4_t v33 = (int *)((char *)&v66 - v32);
  MEMORY[0x1F4188790](v34, v35);
  unsigned __int32 v37 = (char *)&v66 - v36;
  uint64_t v71 = a8;
  sub_1B67BA970(a8, (uint64_t)v20);
  float32x2_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v38(v20, 1, v21) == 1)
  {
    sub_1B67BAA04((uint64_t)v20);
  }
  else
  {
    sub_1B67BAA90((uint64_t)v20, (uint64_t)v37);
    sub_1B67C5C70((uint64_t)v37, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1B633A03C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
      uint64_t v39 = (uint64_t)v37;
    }
    else
    {
      int v40 = *v33;
      int v41 = v33[1];
      if (v40 != -1 || v41 != 0)
      {
        LODWORD(v80[0]) = v40;
        uint64_t v81 = sub_1B6E33098();
        unint64_t v82 = v43;
        sub_1B6E31948();
        LODWORD(v80[0]) = v41;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        unint64_t v44 = v82;
        unint64_t v70 = v81;
        sub_1B633A03C((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
        goto LABEL_13;
      }
      uint64_t v39 = (uint64_t)v37;
    }
    sub_1B633A03C(v39, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  LODWORD(v80[0]) = a5;
  uint64_t v81 = sub_1B6E33098();
  unint64_t v82 = v45;
  sub_1B6E31948();
  LODWORD(v80[0]) = HIDWORD(a5);
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  unint64_t v44 = v82;
  unint64_t v70 = v81;
LABEL_13:
  sub_1B67BA970(v71, (uint64_t)v16);
  if (v38(v16, 1, v21) == 1)
  {
    sub_1B67BAA04((uint64_t)v16);
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
  }
  else
  {
    sub_1B67BAA90((uint64_t)v16, (uint64_t)v29);
    sub_1B67C5C70((uint64_t)v29, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      int32x2_t v49 = v67;
      uint64_t v48 = v68;
      uint64_t v50 = v69;
      (*(void (**)(char *, _DWORD *, uint64_t))(v68 + 32))(v67, v25, v69);
      uint64_t v81 = sub_1B6E310B8();
      unint64_t v82 = v51;
      v80[0] = 45;
      v80[1] = 0xE100000000000000;
      unint64_t v78 = 95;
      unint64_t v79 = 0xE100000000000000;
      sub_1B633AF88();
      uint64_t v46 = sub_1B6E32618();
      unint64_t v47 = v52;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    }
    else
    {
      LODWORD(v81) = *v25;
      uint64_t v46 = sub_1B6E33098();
      unint64_t v47 = v53;
    }
    sub_1B633A03C((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ScriptIndex);
  }
  uint64_t v81 = v72;
  unint64_t v82 = v73;
  strcpy((char *)v80, "%SCRIPT_ID%");
  HIDWORD(v80[1]) = -352321536;
  unint64_t v78 = 0xD00000000000001ELL;
  unint64_t v79 = 0x80000001B6F35870;
  sub_1B633AF88();
  uint64_t v81 = sub_1B6E32618();
  unint64_t v82 = v54;
  strcpy((char *)v80, "%PROJECT%");
  WORD1(v80[1]) = 0;
  HIDWORD(v80[1]) = -385875968;
  unint64_t v78 = v74;
  unint64_t v79 = v75;
  uint64_t v55 = sub_1B6E32618();
  unint64_t v57 = v56;
  swift_bridgeObjectRelease();
  uint64_t v81 = v55;
  unint64_t v82 = v57;
  v80[0] = 0x25444E494B25;
  v80[1] = 0xE600000000000000;
  unint64_t v78 = v76;
  unint64_t v79 = v77;
  uint64_t v58 = sub_1B6E32618();
  unint64_t v60 = v59;
  swift_bridgeObjectRelease();
  uint64_t v81 = v58;
  unint64_t v82 = v60;
  strcpy((char *)v80, "%ENTITY%");
  BYTE1(v80[1]) = 0;
  WORD1(v80[1]) = 0;
  HIDWORD(v80[1]) = -402653184;
  unint64_t v78 = v70;
  unint64_t v79 = v44;
  uint64_t v61 = sub_1B6E32618();
  unint64_t v63 = v62;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = v61;
  unint64_t v82 = v63;
  strcpy((char *)v80, "%ORIG_ENTITY%");
  HIWORD(v80[1]) = -4864;
  unint64_t v78 = v46;
  unint64_t v79 = v47;
  uint64_t v64 = sub_1B6E32618();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v64;
}

uint64_t sub_1B67B03DC(uint64_t a1, char a2)
{
  if (a2 == 2) {
    return sub_1B6C82C84();
  }
  if (swift_dynamicCastMetatype()) {
    return 1819242338;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x745F38746E6975;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x745F3631746E6975;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x745F3233746E6975;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x745F3436746E6975;
  }
  uint64_t v2 = 0x745F3436746E69;
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x745F38746E69;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x745F3631746E69;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x745F3233746E69;
  }
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  uint64_t v2 = 0x6E69755F646D6973;
  sub_1B633F5D8(0, &qword_1EB980EA0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC280]);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  sub_1B633F5D8(0, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  sub_1B633F5D8(0, &qword_1EB980F08, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2F8]);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x656C62756F64;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x74616F6C66;
  }
  uint64_t v2 = 0x6F6C665F646D6973;
  sub_1B633F5D8(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  sub_1B633F5D8(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  sub_1B633F5D8(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  sub_1B67C5BBC(0, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  if (swift_dynamicCastMetatype()) {
    return 0x616F6C665F786676;
  }
  sub_1B67C5BBC(0, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
  if (swift_dynamicCastMetatype()) {
    return 0x5F746E695F786676;
  }
  type metadata accessor for simd_quatf(0);
  if (swift_dynamicCastMetatype())
  {
    if (a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v5 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0) {
        return 0x6175715F646D6973;
      }
    }
    return v2;
  }
  type metadata accessor for simd_float2x2(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  type metadata accessor for simd_float2x3(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  type metadata accessor for simd_float2x4(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  type metadata accessor for simd_float3x2(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  type metadata accessor for simd_float3x3(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  type metadata accessor for simd_float3x4(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  type metadata accessor for simd_float4x2(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  type metadata accessor for simd_float4x3(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  type metadata accessor for simd_float4x4(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  uint64_t v2 = 0x6F762074736E6F63;
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x2A64696F76;
  }
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  uint64_t v2 = 0x706D61735F786676;
  type metadata accessor for __vfx_sampler1d(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  type metadata accessor for __vfx_sampler2d(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  type metadata accessor for __vfx_sampler3d(0);
  if (swift_dynamicCastMetatype()) {
    return v2;
  }
  type metadata accessor for frame_constants(0);
  if (swift_dynamicCastMetatype()) {
    return 0x6F635F656D617266;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x656C636974726170;
  }
  if (swift_dynamicCastMetatype()) {
    return 1718378856;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x32666C6168;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x33666C6168;
  }
  if (swift_dynamicCastMetatype()) {
    return 0x34666C6168;
  }
  type metadata accessor for pbr_lighting_parameters(0);
  if (swift_dynamicCastMetatype()) {
    return 0xD000000000000017;
  }
  sub_1B67C5C0C(0, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
  if (swift_dynamicCastMetatype()) {
    return 0x2A2074616F6C66;
  }
  if (!swift_dynamicCastMetatype())
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B67B0EA0()
{
}

uint64_t sub_1B67B0EFC()
{
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1B6E31948();
  (*(uint64_t (**)(uint64_t))(*(void *)v0 + 104))(v1);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return 0x202F2F0A2F2FLL;
}

void sub_1B67B1030()
{
}

void *sub_1B67B108C(char a1, void (*a2)(uint64_t *__return_ptr, uint64_t), void (*a3)(uint64_t *), uint64_t (*a4)(void), uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, void, void **))
{
  uint64_t v10 = v7;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v83 = qword_1EB997A18;
  int v84 = 0;
  char v85 = 2;
  uint64_t v86 = 0;
  char v87 = 2;
  uint64_t v88 = 0;
  swift_retain();
  a2(&v55, 1);
  swift_release();
  uint64_t v77 = v55;
  int v78 = v56;
  char v79 = v57;
  uint64_t v80 = v58 | 1;
  char v81 = v59;
  uint64_t v82 = v60;
  float32x4_t v89 = (void *)MEMORY[0x1E4FBC860];
  sub_1B62C9DA8(*(void *)(v6 + 16), (uint64_t)&v77, 0x200000000, v61);
  sub_1B62CA2FC((uint64_t)v61, (uint64_t)v62, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v62[0])
  {
    a3(&v55);
    return (void *)MEMORY[0x1E4FBC860];
  }
  long long v69 = v62[0];
  long long v70 = v62[1];
  uint64_t v71 = v63;
  if (v68 <= 0)
  {
    a3(&v55);
    sub_1B632F170(v61);
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v40 = v65;
  if (!v65)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    a3(&v55);
    sub_1B632F170(v61);
    uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
LABEL_42:
    sub_1B632F170(v61);
    return v36;
  }
  uint64_t v42 = v6;
  uint64_t v46 = v64;
  uint64_t v50 = v67[4];
  int v11 = *(unsigned __int8 *)(v66 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v45 = (uint64_t)(v67 + 6);
  float32x2_t v38 = v67 + 13;
  unint64_t v52 = v67;
  unint64_t v43 = v67 + 8;
  uint64_t v44 = a4(0);
  uint64_t v39 = v44 - 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v12 = 0;
  int v41 = v11;
  while (1)
  {
    uint64_t v47 = v12;
    uint64_t v13 = (unsigned int *)(v46 + 48 * v12);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    uint64_t v16 = (uint64_t *)*((void *)v13 + 2);
    uint64_t v48 = *((void *)v13 + 3);
    uint64_t v18 = *((void *)v13 + 4);
    uint64_t v17 = *((void *)v13 + 5);
    if (v11)
    {
      uint64_t v19 = *(os_unfair_lock_s **)(v17 + 376);
      swift_retain();
      os_unfair_lock_lock(v19);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v50);
    sub_1B62CA2FC(v45, (uint64_t)v76, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v20 = v52[4];
    uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v52[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
    v52[7] = v21;
    v43[1] = 0;
    v43[2] = 0;
    *unint64_t v43 = 0;
    swift_release();
    uint64_t v22 = sub_1B62C9024(v44, a5, v16, v48, v18, (uint64_t)v52);
    uint64_t v23 = v22;
    if (!v16) {
      break;
    }
    if (v18)
    {
      uint64_t v24 = *(void *)(*(void *)v39 + 72);
      do
      {
        uint64_t v25 = *v16++;
        a6(v17, v25, v23, v42, a1 & 1, &v89);
        if (v10) {
          goto LABEL_38;
        }
        v23 += v24;
      }
      while (--v18);
    }
LABEL_21:
    v72[0] = v69;
    v72[1] = v70;
    uint64_t v73 = v71;
    sub_1B6345178(v52, (unsigned __int16 **)v72, (uint64_t)v76);
    int v11 = v41;
    if (*(void *)(v52[13] + 16))
    {
      uint64_t v28 = swift_bridgeObjectRetain();
      sub_1B639147C(v28, v17);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v30 = v52[13];
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1B6399BB8(0, *(void *)(v30 + 16));
      }
      else
      {
        uint64_t v31 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(v30 + 24) >= 2uLL)
        {
          sub_1B63BCE08(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
          uint64_t v31 = (void *)swift_allocObject();
          size_t v32 = j__malloc_size(v31);
          uint64_t v31[2] = 0;
          v31[3] = 2 * ((uint64_t)(v32 - 32) / 72);
        }
        *float32x2_t v38 = v31;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v52[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        float32x4_t v33 = *(char **)(v17 + 232);
        uint64_t v34 = *(char **)(v17 + 256);
        if (v33 == v34)
        {
          uint64_t v35 = *(char **)(v17 + 240);
        }
        else
        {
          sub_1B666018C(v34, v33);
          uint64_t v34 = *(char **)(v17 + 232);
          uint64_t v35 = *(char **)(v17 + 240);
          if (v35 == v34)
          {
            uint64_t v35 = 0;
            uint64_t v34 = 0;
            *(void *)(v17 + 232) = 0;
            *(void *)(v17 + 240) = 0;
          }
        }
        *(void *)(v17 + 248) = v35;
        *(void *)(v17 + 256) = v34;
      }
    }
    ecs_stack_allocator_pop_snapshot(v50);
    if (v41)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
    }
    swift_release();
    uint64_t v12 = v47 + 1;
    if (v47 + 1 == v40)
    {
      a3(&v55);
      sub_1B632F170(v61);
      uint64_t v36 = v89;
      goto LABEL_42;
    }
  }
  if (v15 == v14) {
    goto LABEL_21;
  }
  uint64_t v26 = *(void *)(*(void *)v39 + 72);
  uint64_t v27 = v22 + v26 * v15;
  while (1)
  {
    a6(v17, v15, v27, v42, a1 & 1, &v89);
    if (v10) {
      break;
    }
    ++v15;
    v27 += v26;
    if (v14 == v15) {
      goto LABEL_21;
    }
  }
LABEL_38:
  v74[0] = v69;
  v74[1] = v70;
  uint64_t v75 = v71;
  uint64_t v36 = v52;
  sub_1B6345178(v52, (unsigned __int16 **)v74, (uint64_t)v76);
  sub_1B634507C((char *)v17);
  ecs_stack_allocator_pop_snapshot(v50);
  if (v41)
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
  }
  a3(&v55);
  sub_1B632F170(v61);
  sub_1B632F170(v61);
  swift_release();
  swift_bridgeObjectRelease();
  return v36;
}

void *sub_1B67B173C(char a1, void (*a2)(uint64_t *__return_ptr, uint64_t), void (*a3)(uint64_t *), uint64_t (*a4)(void), uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void **))
{
  uint64_t v11 = v7;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v85 = qword_1EB997A18;
  int v86 = 0;
  char v87 = 2;
  uint64_t v88 = 0;
  char v89 = 2;
  uint64_t v90 = 0;
  swift_retain();
  a2(&v57, 1);
  swift_release();
  uint64_t v79 = v57;
  int v80 = v58;
  char v81 = v59;
  uint64_t v82 = v60 | 1;
  char v83 = v61;
  uint64_t v84 = v62;
  float32x4_t v91 = (void *)MEMORY[0x1E4FBC860];
  sub_1B62C9DA8(*(void *)(v6 + 16), (uint64_t)&v79, 0x200000000, v63);
  sub_1B62CA2FC((uint64_t)v63, (uint64_t)v64, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v64[0])
  {
    a3(&v57);
    return (void *)MEMORY[0x1E4FBC860];
  }
  long long v71 = v64[0];
  long long v72 = v64[1];
  uint64_t v73 = v65;
  if (v70 <= 0)
  {
    a3(&v57);
    sub_1B632F170(v63);
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v41 = v67;
  if (!v67)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    a3(&v57);
    sub_1B632F170(v63);
    unsigned __int32 v37 = (void *)MEMORY[0x1E4FBC860];
LABEL_44:
    sub_1B632F170(v63);
    return v37;
  }
  uint64_t v54 = v6;
  uint64_t v47 = v66;
  uint64_t v43 = v68;
  uint64_t v51 = v69[4];
  int v52 = *(unsigned __int8 *)(v68 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v46 = (uint64_t)(v69 + 6);
  uint64_t v39 = v69 + 13;
  unint64_t v53 = v69;
  uint64_t v44 = v69 + 8;
  uint64_t v45 = a4(0);
  uint64_t v40 = v45 - 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v12 = 0;
  uint64_t v42 = a3;
  while (1)
  {
    uint64_t v48 = v12;
    uint64_t v13 = (unsigned int *)(v47 + 48 * v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = (uint64_t *)*((void *)v13 + 2);
    uint64_t v49 = *((void *)v13 + 3);
    uint64_t v18 = *((void *)v13 + 4);
    uint64_t v17 = *((void *)v13 + 5);
    if (v52)
    {
      uint64_t v19 = *(os_unfair_lock_s **)(v17 + 376);
      swift_retain();
      os_unfair_lock_lock(v19);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v51);
    sub_1B62CA2FC(v46, (uint64_t)v78, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v20 = v53[4];
    uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v53[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
    v53[7] = v21;
    v44[1] = 0;
    v44[2] = 0;
    *uint64_t v44 = 0;
    swift_release();
    uint64_t v22 = sub_1B62C9024(v45, a5, v16, v49, v18, (uint64_t)v53);
    uint64_t v23 = v22;
    if (!v16) {
      break;
    }
    if (v18)
    {
      uint64_t v24 = *(void *)(*(void *)v40 + 72);
      uint64_t v25 = v42;
      while (1)
      {
        uint64_t v26 = *v16++;
        a6(v43, v17, v26, v23, v54, a1 & 1, &v91);
        if (v11) {
          goto LABEL_40;
        }
        v23 += v24;
        if (!--v18) {
          goto LABEL_19;
        }
      }
    }
LABEL_18:
    uint64_t v25 = v42;
LABEL_19:
    v74[0] = v71;
    v74[1] = v72;
    uint64_t v75 = v73;
    sub_1B6345178(v53, (unsigned __int16 **)v74, (uint64_t)v78);
    if (*(void *)(v53[13] + 16))
    {
      uint64_t v27 = swift_bridgeObjectRetain();
      sub_1B639147C(v27, v17);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v29 = v53[13];
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1B6399BB8(0, *(void *)(v29 + 16));
      }
      else
      {
        uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(v29 + 24) >= 2uLL)
        {
          sub_1B63BCE08(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
          uint64_t v30 = (void *)swift_allocObject();
          size_t v31 = j__malloc_size(v30);
          v30[2] = 0;
          v30[3] = 2 * ((uint64_t)(v31 - 32) / 72);
        }
        *uint64_t v39 = v30;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v53[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        size_t v32 = *(char **)(v17 + 232);
        float32x4_t v33 = *(char **)(v17 + 256);
        if (v32 == v33)
        {
          uint64_t v34 = *(char **)(v17 + 240);
        }
        else
        {
          sub_1B666018C(v33, v32);
          float32x4_t v33 = *(char **)(v17 + 232);
          uint64_t v34 = *(char **)(v17 + 240);
          if (v34 == v33)
          {
            uint64_t v34 = 0;
            float32x4_t v33 = 0;
            *(void *)(v17 + 232) = 0;
            *(void *)(v17 + 240) = 0;
          }
        }
        *(void *)(v17 + 248) = v34;
        *(void *)(v17 + 256) = v33;
      }
    }
    ecs_stack_allocator_pop_snapshot(v51);
    if (v52)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
    }
    swift_release();
    uint64_t v12 = v48 + 1;
    if (v48 + 1 == v41)
    {
      v25(&v57);
      sub_1B632F170(v63);
      unsigned __int32 v37 = v91;
      goto LABEL_44;
    }
  }
  if (v14 == v15) {
    goto LABEL_18;
  }
  uint64_t v35 = *(void *)(*(void *)v40 + 72);
  uint64_t v36 = v22 + v35 * v14;
  uint64_t v25 = v42;
  while (1)
  {
    a6(v43, v17, v14, v36, v54, a1 & 1, &v91);
    if (v11) {
      break;
    }
    ++v14;
    v36 += v35;
    if (v15 == v14) {
      goto LABEL_19;
    }
  }
LABEL_40:
  v76[0] = v71;
  v76[1] = v72;
  uint64_t v77 = v73;
  unsigned __int32 v37 = v53;
  sub_1B6345178(v53, (unsigned __int16 **)v76, (uint64_t)v78);
  sub_1B634507C((char *)v17);
  ecs_stack_allocator_pop_snapshot(v51);
  if (v52)
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
  }
  v25(&v57);
  sub_1B632F170(v63);
  sub_1B632F170(v63);
  swift_release();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_1B67B1DFC(char a1)
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  long long v3 = sub_1B67B173C(a1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63ABE64, (void (*)(uint64_t *))sub_1B62CA064, type metadata accessor for GraphScript, (uint64_t)&off_1F0F55610, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void **))sub_1B67BC6F4);
  if (v1)
  {
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else
  {
    sub_1B6641B88((uint64_t)v3);
    long long v4 = sub_1B67B173C(a1 & 1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63ABB74, (void (*)(uint64_t *))sub_1B63061D4, type metadata accessor for SimpleScript, (uint64_t)&off_1F0F5C308, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void **))sub_1B67BCD44);
    sub_1B6641B88((uint64_t)v4);
    char v5 = sub_1B67B108C(a1 & 1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63A8D54, (void (*)(uint64_t *))sub_1B63061D4, type metadata accessor for MetalFunctionScript, (uint64_t)&off_1F0F7CDE8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void **))sub_1B67BD394);
    sub_1B6641B88((uint64_t)v5);
    uint64_t v6 = sub_1B67B108C(a1 & 1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63ABBE8, (void (*)(uint64_t *))sub_1B63061D4, type metadata accessor for ShaderScript, (uint64_t)&off_1F0F5C050, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void **))sub_1B67BDD48);
    sub_1B6641B88((uint64_t)v6);
    uint64_t v7 = sub_1B67B173C(a1 & 1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AB6F0, (void (*)(uint64_t *))sub_1B63061D4, type metadata accessor for EmitterScript, (uint64_t)&off_1F0F5EBD0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void **))sub_1B67BE3AC);
    sub_1B6641B88((uint64_t)v7);
    long long v8 = sub_1B67B173C(a1 & 1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63AAC84, (void (*)(uint64_t *))sub_1B63061D4, type metadata accessor for TriggerScript, (uint64_t)&off_1F0F625B0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void **))sub_1B67BEA04);
    sub_1B6641B88((uint64_t)v8);
    long long v9 = sub_1B67B173C(a1 & 1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63A93E0, (void (*)(uint64_t *))sub_1B63061D4, type metadata accessor for ParticleInitScript, (uint64_t)&off_1F0F796D0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void **))sub_1B67BF05C);
    sub_1B6641B88((uint64_t)v9);
    uint64_t v10 = sub_1B67B173C(a1 & 1, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1B63A84C0, (void (*)(uint64_t *))sub_1B63061D4, type metadata accessor for ParticleUpdateScript, (uint64_t)&off_1F0F82FB8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void **))sub_1B67BF6C4);
    sub_1B6641B88((uint64_t)v10);
    return v12;
  }
}

uint64_t sub_1B67B2218()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScriptCodeGen()
{
  return self;
}

uint64_t sub_1B67B2284()
{
  uint64_t result = sub_1B67B22A8();
  qword_1E9E492C0 = result;
  *(void *)algn_1E9E492C8 = v1;
  return result;
}

uint64_t sub_1B67B22A8()
{
  sub_1B63BCE08(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8, v1);
  long long v3 = &v21[-v2];
  uint64_t v4 = sub_1B6E30F48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  long long v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = &v21[-v11];
  uint64_t v13 = (void *)sub_1B6E31768();
  id v14 = objc_msgSend(self, sel_bundleWithIdentifier_, v13);

  uint64_t v15 = (void *)sub_1B6E31768();
  uint64_t v16 = (void *)sub_1B6E31768();
  id v17 = objc_msgSend(v14, sel_URLForResource_withExtension_, v15, v16);

  if (v17)
  {
    sub_1B6E30EE8();

    uint64_t v18 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
    v18(v3, v8, v4);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
    v18(v12, v3, v4);
    uint64_t v19 = sub_1B6E31748();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v12, v4);
    return v19;
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B67B25B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6B47FA4(*a1, *a2);
}

uint64_t sub_1B67B25C4()
{
  return sub_1B6E33988();
}

uint64_t sub_1B67B2664()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B67B26F0()
{
  return sub_1B6E33988();
}

uint64_t sub_1B67B278C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B67BFD34();
  *a1 = result;
  return result;
}

void sub_1B67B27BC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x746E656D67617266;
  if (v2 != 1)
  {
    uint64_t v5 = 0x657475706D6F63;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x786574726576;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B67B2818()
{
  uint64_t v1 = 0x746E656D67617266;
  if (*v0 != 1) {
    uint64_t v1 = 0x657475706D6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x786574726576;
  }
}

void *sub_1B67B2870(uint64_t a1)
{
  uint64_t v1 = &unk_1B6E77000;
  uint64_t v67 = *(void *)(a1 + 16);
  if (v67)
  {
    uint64_t v2 = 0;
    unint64_t v3 = (unsigned char *)(swift_bridgeObjectRetain() + 40);
    unint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    while (2)
    {
      unint64_t v6 = *((void *)v3 - 1);
      switch(v6 >> 60)
      {
        case 0uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xDuLL:
          sub_1B62C6AA8(*((void *)v3 - 1));
          swift_retain();
          uint64_t v7 = sub_1B68C3500(0, 0, 1, v4);
          sub_1B62C6A70(v6);
          goto LABEL_40;
        case 3uLL:
        case 4uLL:
          char v8 = *v3;
          sub_1B62C6AA8(*((void *)v3 - 1));
          sub_1B68EC9E4(v6);
          if (sub_1B6A94630(v9, 1u))
          {
            if ((v8 & 2) != 0) {
              uint64_t v10 = MEMORY[0x1E4FBB870];
            }
            else {
              uint64_t v10 = MEMORY[0x1E4FBB2A0];
            }
          }
          else
          {
            sub_1B68EC9E4(v6);
          }
          v68[0] = sub_1B67B03DC(v10, 1);
          v68[1] = v21;
          sub_1B6E31948();
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          uint64_t v22 = v68[0];
          uint64_t v23 = v68[1];
          sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
          uint64_t v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = xmmword_1B6E77050;
          *(void *)(v24 + 32) = v22;
          unint64_t v25 = v24 + 32;
          *(void *)(v24 + 40) = v23;
          sub_1B67C5060();
          *(void *)(v24 + 48) = 0;
          *(void *)(v24 + 56) = 0;
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
          *(void *)(inited + 32) = v24;
          uint64_t v27 = *(void *)(v24 + 16);
          swift_bridgeObjectRetain();
          uint64_t v28 = sub_1B68C3500(0, v27, 1, MEMORY[0x1E4FBC860]);
          uint64_t v7 = v28;
          if (!*(void *)(v24 + 16)) {
            goto LABEL_29;
          }
          unint64_t v29 = (unint64_t)&v28[4 * v28[2] + 4];
          if (v25 < v29 + 32 * v27 && v29 < v25 + 32 * v27) {
            goto LABEL_84;
          }
          swift_arrayInitWithCopy();
          if (v27) {
            v7[2] += v27;
          }
LABEL_29:
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
          goto LABEL_39;
        case 0xBuLL:
          sub_1B62C6AA8(v6);
          swift_retain();
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          strcpy((char *)v68, "uint32_t value");
          HIBYTE(v68[1]) = -18;
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          uint64_t v11 = v68[0];
          uint64_t v12 = v68[1];
          sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
          uint64_t v13 = swift_allocObject();
          *(_OWORD *)(v13 + 16) = xmmword_1B6E77050;
          *(void *)(v13 + 32) = v11;
          unint64_t v14 = v13 + 32;
          *(void *)(v13 + 40) = v12;
          sub_1B67C5060();
          *(void *)(v13 + 48) = 0;
          *(void *)(v13 + 56) = 0;
          uint64_t v15 = swift_initStackObject();
          *(_OWORD *)(v15 + 16) = xmmword_1B6E77050;
          *(void *)(v15 + 32) = v13;
          uint64_t v16 = v4;
          uint64_t v17 = *(void *)(v13 + 16);
          swift_bridgeObjectRetain();
          uint64_t v18 = sub_1B68C3500(0, v17, 1, v16);
          uint64_t v7 = v18;
          if (!*(void *)(v13 + 16)) {
            goto LABEL_38;
          }
          unint64_t v19 = (unint64_t)&v18[4 * v18[2] + 4];
          if (v14 < v19 + 32 * v17 && v19 < v14 + 32 * v17) {
            goto LABEL_84;
          }
          swift_arrayInitWithCopy();
          if (v17) {
            v7[2] += v17;
          }
          goto LABEL_38;
        case 0xCuLL:
          sub_1B62C6AA8(v6);
          swift_retain();
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          strcpy((char *)v68, "uint32_t value");
          HIBYTE(v68[1]) = -18;
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          uint64_t v31 = v68[0];
          uint64_t v32 = v68[1];
          sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
          uint64_t v33 = swift_allocObject();
          *(_OWORD *)(v33 + 16) = xmmword_1B6E77050;
          *(void *)(v33 + 32) = v31;
          unint64_t v34 = v33 + 32;
          *(void *)(v33 + 40) = v32;
          sub_1B67C5060();
          *(void *)(v33 + 48) = 0;
          *(void *)(v33 + 56) = 0;
          uint64_t v35 = swift_initStackObject();
          *(_OWORD *)(v35 + 16) = xmmword_1B6E77050;
          *(void *)(v35 + 32) = v33;
          uint64_t v36 = v4;
          uint64_t v37 = *(void *)(v33 + 16);
          swift_bridgeObjectRetain();
          float32x2_t v38 = sub_1B68C3500(0, v37, 1, v36);
          uint64_t v7 = v38;
          if (!*(void *)(v33 + 16)) {
            goto LABEL_38;
          }
          unint64_t v39 = (unint64_t)&v38[4 * v38[2] + 4];
          if (v34 < v39 + 32 * v37 && v39 < v34 + 32 * v37) {
            goto LABEL_84;
          }
          swift_arrayInitWithCopy();
          if (v37) {
            v7[2] += v37;
          }
LABEL_38:
          swift_bridgeObjectRelease();
          sub_1B62C6A70(v6);
          swift_setDeallocating();
          sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
LABEL_39:
          swift_arrayDestroy();
          unint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_40:
          sub_1B67C5060();
          uint64_t v41 = swift_initStackObject();
          *(_OWORD *)(v41 + 16) = xmmword_1B6E77050;
          *(void *)(v41 + 32) = v7;
          uint64_t v42 = v7[2];
          swift_bridgeObjectRetain();
          uint64_t v43 = sub_1B68C3500(0, v42, 1, v4);
          uint64_t v44 = v43;
          if (!v7[2]) {
            goto LABEL_48;
          }
          unint64_t v45 = (unint64_t)&v43[4 * v43[2] + 4];
          if ((unint64_t)(v7 + 4) < v45 + 32 * v42 && v45 < (unint64_t)&v7[4 * v42 + 4]) {
            goto LABEL_84;
          }
          swift_arrayInitWithCopy();
          if (v42) {
            v44[2] += v42;
          }
LABEL_48:
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
          swift_arrayDestroy();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_1B68C3618(0, v5[2] + 1, 1, v5);
          }
          unint64_t v48 = v5[2];
          unint64_t v47 = v5[3];
          if (v48 >= v47 >> 1) {
            uint64_t v5 = sub_1B68C3618(v47 > 1, v48 + 1, 1, v5);
          }
          ++v2;
          v3 += 32;
          v5[2] = v48 + 1;
          v5[v48 + 4] = v44;
          sub_1B62C6A70(v6);
          unint64_t v4 = (void *)MEMORY[0x1E4FBC860];
          if (v67 != v2) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v1 = (_OWORD *)&unk_1B6E77000;
          uint64_t v49 = v5[2];
          if (v49) {
            goto LABEL_54;
          }
          goto LABEL_73;
        case 0xFuLL:
          if (v6 != 0xF000000000000000) {
            goto LABEL_83;
          }
          uint64_t v7 = sub_1B68C3500(0, 0, 1, v4);
          goto LABEL_40;
        default:
LABEL_83:
          v68[0] = 0;
          v68[1] = 0xE000000000000000;
          sub_1B62C6AA8(v6);
          sub_1B62C6AA8(v6);
          sub_1B6E328C8();
          sub_1B6E32B18();
          sub_1B6E31948();
          sub_1B6E32BE8();
          __break(1u);
          goto LABEL_84;
      }
    }
  }
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v49 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (v49)
  {
LABEL_54:
    swift_bridgeObjectRetain();
    uint64_t v50 = 0;
    uint64_t v51 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v52 = v5[v50 + 4];
      uint64_t v53 = *(void *)(v52 + 16);
      uint64_t v54 = v51[2];
      uint64_t v55 = v54 + v53;
      swift_bridgeObjectRetain();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v55 <= v51[3] >> 1)
      {
        if (*(void *)(v52 + 16)) {
          goto LABEL_64;
        }
      }
      else
      {
        if (v54 <= v55) {
          uint64_t v57 = v54 + v53;
        }
        else {
          uint64_t v57 = v54;
        }
        uint64_t v51 = sub_1B68C3500(isUniquelyReferenced_nonNull_native, v57, 1, v51);
        if (*(void *)(v52 + 16))
        {
LABEL_64:
          unint64_t v58 = (unint64_t)&v51[4 * v51[2] + 4];
          if (v52 + 32 < v58 + 32 * v53 && v58 < v52 + 32 + 32 * v53) {
            goto LABEL_85;
          }
          swift_arrayInitWithCopy();
          if (v53) {
            v51[2] += v53;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v49 == ++v50)
      {
        swift_bridgeObjectRelease();
        goto LABEL_74;
      }
    }
  }
LABEL_73:
  uint64_t v51 = (void *)MEMORY[0x1E4FBC860];
LABEL_74:
  swift_bridgeObjectRelease();
  sub_1B67C5060();
  uint64_t v60 = swift_initStackObject();
  *(_OWORD *)(v60 + 16) = v1[5];
  *(void *)(v60 + 32) = v51;
  uint64_t v61 = v51[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_1B68C3500(0, v61, 1, MEMORY[0x1E4FBC860]);
  uint64_t v63 = v62;
  if (v51[2])
  {
    unint64_t v64 = (unint64_t)&v62[4 * v62[2] + 4];
    if ((unint64_t)(v51 + 4) < v64 + 32 * v61 && v64 < (unint64_t)&v51[4 * v61 + 4])
    {
      while (1)
      {
LABEL_85:
        sub_1B6E32C88();
        __break(1u);
LABEL_84:
        swift_release();
      }
    }
    swift_arrayInitWithCopy();
    if (v61) {
      v63[2] += v61;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  return v63;
}

void *sub_1B67B33CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    unint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v39 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v39) {
      goto LABEL_45;
    }
    goto LABEL_64;
  }
  uint64_t v2 = (unsigned char *)(swift_bridgeObjectRetain() + 40);
  unint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v5 = *((void *)v2 - 1);
    if (v5 >> 60 != 13)
    {
LABEL_15:
      sub_1B62C6AA8(*((void *)v2 - 1));
      uint64_t v17 = sub_1B68C3500(0, 0, 1, v3);
      goto LABEL_16;
    }
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    unint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    unint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
    int v10 = *(unsigned __int8 *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
    if (v10 == 3)
    {
      char v28 = *v2;
      sub_1B62C6AA8(*((void *)v2 - 1));
      sub_1B62C6AA8(v5);
      sub_1B67C51E0(v7, v6, v9, v8, 3);
      sub_1B68EC9E4(v5);
      unint64_t v58 = v6;
      unint64_t v57 = v9;
      if (sub_1B6A94630(v29, 1u))
      {
        if ((v28 & 2) != 0) {
          uint64_t v30 = MEMORY[0x1E4FBB870];
        }
        else {
          uint64_t v30 = MEMORY[0x1E4FBB2A0];
        }
      }
      else
      {
        sub_1B68EC9E4(v5);
      }
      uint64_t v61 = sub_1B67B03DC(v30, 1);
      uint64_t v62 = v31;
      sub_1B6E31948();
      uint64_t v59 = v7;
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1B6E77050;
      *(void *)(v32 + 32) = v61;
      unint64_t v33 = v32 + 32;
      *(void *)(v32 + 40) = v62;
      sub_1B67C5060();
      *(void *)(v32 + 48) = 0;
      *(void *)(v32 + 56) = 0;
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
      *(void *)(inited + 32) = v32;
      uint64_t v35 = *(void *)(v32 + 16);
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1B68C3500(0, v35, 1, MEMORY[0x1E4FBC860]);
      uint64_t v17 = v36;
      if (*(void *)(v32 + 16))
      {
        unint64_t v37 = (unint64_t)&v36[4 * v36[2] + 4];
        if (v33 < v37 + 32 * v35 && v37 < v33 + 32 * v35)
        {
          while (1)
          {
LABEL_74:
            swift_release();
LABEL_75:
            sub_1B6E32C88();
            __break(1u);
          }
        }
        swift_arrayInitWithCopy();
        if (v35) {
          v17[2] += v35;
        }
      }
      swift_bridgeObjectRelease();
      sub_1B67C511C(v59, v58, v57, v8, 3);
      swift_setDeallocating();
      sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
      swift_arrayDestroy();
      sub_1B62C6A70(v5);
      unint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      if (v10 != 4) {
        goto LABEL_15;
      }
      uint64_t v60 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      sub_1B62C6AA8(v5);
      sub_1B62C6AA8(v5);
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      sub_1B6E31948();
      uint64_t v11 = v8;
      sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1B6E77050;
      *(void *)(v12 + 32) = v60;
      unint64_t v13 = v12 + 32;
      *(void *)(v12 + 40) = v11;
      sub_1B67C5060();
      *(void *)(v12 + 48) = 0;
      *(void *)(v12 + 56) = 0;
      uint64_t v14 = swift_initStackObject();
      *(_OWORD *)(v14 + 16) = xmmword_1B6E77050;
      *(void *)(v14 + 32) = v12;
      uint64_t v15 = *(void *)(v12 + 16);
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1B68C3500(0, v15, 1, v3);
      uint64_t v17 = v16;
      if (*(void *)(v12 + 16))
      {
        unint64_t v18 = (unint64_t)&v16[4 * v16[2] + 4];
        if (v13 < v18 + 32 * v15 && v18 < v13 + 32 * v15) {
          goto LABEL_74;
        }
        swift_arrayInitWithCopy();
        if (v15) {
          v17[2] += v15;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B62C6A70(v5);
    }
LABEL_16:
    sub_1B67C5060();
    uint64_t v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_1B6E77050;
    *(void *)(v20 + 32) = v17;
    uint64_t v21 = v17[2];
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1B68C3500(0, v21, 1, v3);
    uint64_t v23 = v22;
    if (v17[2])
    {
      unint64_t v24 = (unint64_t)&v22[4 * v22[2] + 4];
      if ((unint64_t)(v17 + 4) < v24 + 32 * v21 && v24 < (unint64_t)&v17[4 * v21 + 4]) {
        goto LABEL_74;
      }
      swift_arrayInitWithCopy();
      if (v21) {
        v23[2] += v21;
      }
    }
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v4 = sub_1B68C3618(0, v4[2] + 1, 1, v4);
    }
    unint64_t v27 = v4[2];
    unint64_t v26 = v4[3];
    if (v27 >= v26 >> 1) {
      unint64_t v4 = sub_1B68C3618(v26 > 1, v27 + 1, 1, v4);
    }
    v2 += 32;
    _OWORD v4[2] = v27 + 1;
    v4[v27 + 4] = v23;
    sub_1B62C6A70(v5);
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  uint64_t v39 = v4[2];
  if (v39)
  {
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v40 = 0;
    uint64_t v41 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v42 = v4[v40 + 4];
      uint64_t v43 = *(void *)(v42 + 16);
      uint64_t v44 = v41[2];
      uint64_t v45 = v44 + v43;
      swift_bridgeObjectRetain();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v45 <= v41[3] >> 1)
      {
        if (*(void *)(v42 + 16)) {
          goto LABEL_55;
        }
      }
      else
      {
        if (v44 <= v45) {
          uint64_t v47 = v44 + v43;
        }
        else {
          uint64_t v47 = v44;
        }
        uint64_t v41 = sub_1B68C3500(isUniquelyReferenced_nonNull_native, v47, 1, v41);
        if (*(void *)(v42 + 16))
        {
LABEL_55:
          unint64_t v48 = (unint64_t)&v41[4 * v41[2] + 4];
          if (v42 + 32 < v48 + 32 * v43 && v48 < v42 + 32 + 32 * v43) {
            goto LABEL_75;
          }
          swift_arrayInitWithCopy();
          if (v43) {
            v41[2] += v43;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v39 == ++v40)
      {
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
    }
  }
LABEL_64:
  uint64_t v41 = (void *)MEMORY[0x1E4FBC860];
LABEL_65:
  swift_bridgeObjectRelease();
  sub_1B67C5060();
  uint64_t v50 = swift_initStackObject();
  *(_OWORD *)(v50 + 16) = xmmword_1B6E77050;
  *(void *)(v50 + 32) = v41;
  uint64_t v51 = v41[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1B68C3500(0, v51, 1, MEMORY[0x1E4FBC860]);
  uint64_t v53 = v52;
  if (v41[2])
  {
    unint64_t v54 = (unint64_t)&v52[4 * v52[2] + 4];
    if ((unint64_t)(v41 + 4) < v54 + 32 * v51 && v54 < (unint64_t)&v41[4 * v51 + 4]) {
      goto LABEL_75;
    }
    swift_arrayInitWithCopy();
    if (v51) {
      v53[2] += v51;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  return v53;
}

void *sub_1B67B3BC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    uint64_t v3 = swift_bridgeObjectRetain();
    unint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v5 = 32;
    unint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v68 = v3;
    do
    {
      unint64_t v7 = *(void *)(v2 + v5);
      if (v7 >> 60 == 13 && *(unsigned char *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x30) == 1)
      {
        uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        unint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        unint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v11 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
        unint64_t v70 = v9;
        uint64_t v71 = v8;
        unint64_t v72 = v10;
        uint64_t v69 = v11;
        if (v9 >= 9)
        {
          sub_1B62C6AA8(v7);
          sub_1B62C6AA8(v7);
          sub_1B67C51E0(v8, v9, v10, v11, 1);
          sub_1B67C52A4(v10);
          uint64_t v73 = sub_1B69B04D4(1, v10);
          uint64_t v74 = v15;
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
          uint64_t v16 = swift_allocObject();
          *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
          *(void *)(v16 + 32) = v73;
          unint64_t v17 = v16 + 32;
          *(void *)(v16 + 40) = v74;
          sub_1B67C5060();
          *(void *)(v16 + 48) = 0;
          *(void *)(v16 + 56) = 0;
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
          *(void *)(inited + 32) = v16;
          uint64_t v19 = *(void *)(v16 + 16);
          swift_bridgeObjectRetain();
          uint64_t v20 = sub_1B68C3500(0, v19, 1, MEMORY[0x1E4FBC860]);
          unint64_t v13 = v20;
          if (*(void *)(v16 + 16))
          {
            unint64_t v21 = (unint64_t)&v20[4 * v20[2] + 4];
            if (v17 < v21 + 32 * v19 && v21 < v17 + 32 * v19)
            {
              while (1)
              {
LABEL_97:
                swift_release();
LABEL_98:
                sub_1B6E32C88();
                __break(1u);
              }
            }
            swift_arrayInitWithCopy();
            if (v19) {
              v13[2] += v19;
            }
          }
          swift_bridgeObjectRelease();
          sub_1B678FC34(v10);
          swift_setDeallocating();
          sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
          swift_arrayDestroy();
          uint64_t v2 = v68;
          uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
        }
        else
        {
          sub_1B62C6AA8(v7);
          sub_1B62C6AA8(v7);
          sub_1B67C51E0(v8, v9, v10, v11, 1);
          uint64_t v12 = v4;
          unint64_t v13 = sub_1B68C3500(0, 0, 1, v4);
        }
        sub_1B67C5060();
        uint64_t v23 = swift_initStackObject();
        *(_OWORD *)(v23 + 16) = xmmword_1B6E77050;
        *(void *)(v23 + 32) = v13;
        uint64_t v24 = v13[2];
        swift_bridgeObjectRetain();
        unint64_t v25 = sub_1B68C3500(0, v24, 1, v12);
        uint64_t v14 = v25;
        if (v13[2])
        {
          unint64_t v26 = (unint64_t)&v25[4 * v25[2] + 4];
          if ((unint64_t)(v13 + 4) < v26 + 32 * v24 && v26 < (unint64_t)&v13[4 * v24 + 4]) {
            goto LABEL_97;
          }
          swift_arrayInitWithCopy();
          if (v24) {
            v14[2] += v24;
          }
        }
        swift_bridgeObjectRelease();
        sub_1B67C511C(v71, v70, v72, v69, 1);
        swift_setDeallocating();
        sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
        swift_arrayDestroy();
        sub_1B62C6A70(v7);
        unint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      }
      else
      {
        sub_1B62C6AA8(*(void *)(v2 + v5));
        uint64_t v14 = sub_1B68C3500(0, 0, 1, v4);
      }
      sub_1B67C5060();
      uint64_t v28 = swift_initStackObject();
      *(_OWORD *)(v28 + 16) = xmmword_1B6E77050;
      *(void *)(v28 + 32) = v14;
      uint64_t v29 = v14[2];
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1B68C3500(0, v29, 1, v4);
      uint64_t v31 = v30;
      if (v14[2])
      {
        unint64_t v32 = (unint64_t)&v30[4 * v30[2] + 4];
        if ((unint64_t)(v14 + 4) < v32 + 32 * v29 && v32 < (unint64_t)&v14[4 * v29 + 4]) {
          goto LABEL_97;
        }
        swift_arrayInitWithCopy();
        if (v29) {
          v31[2] += v29;
        }
      }
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
      swift_arrayDestroy();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v6 = sub_1B68C3618(0, v6[2] + 1, 1, v6);
      }
      unint64_t v35 = v6[2];
      unint64_t v34 = v6[3];
      if (v35 >= v34 >> 1) {
        unint64_t v6 = sub_1B68C3618(v34 > 1, v35 + 1, 1, v6);
      }
      _OWORD v6[2] = v35 + 1;
      v6[v35 + 4] = v31;
      sub_1B62C6A70(v7);
      v5 += 32;
      --v1;
      unint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    }
    while (v1);
    swift_bridgeObjectRelease();
    uint64_t v36 = v6[2];
    if (v36) {
      goto LABEL_40;
    }
  }
  else
  {
    unint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v36 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v36)
    {
LABEL_40:
      swift_bridgeObjectRetain();
      uint64_t v37 = 0;
      float32x2_t v38 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        uint64_t v39 = v6[v37 + 4];
        uint64_t v40 = *(void *)(v39 + 16);
        uint64_t v41 = v38[2];
        uint64_t v42 = v41 + v40;
        swift_bridgeObjectRetain();
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (isUniquelyReferenced_nonNull_native && v42 <= v38[3] >> 1)
        {
          if (*(void *)(v39 + 16)) {
            goto LABEL_50;
          }
        }
        else
        {
          if (v41 <= v42) {
            uint64_t v44 = v41 + v40;
          }
          else {
            uint64_t v44 = v41;
          }
          float32x2_t v38 = sub_1B68C3500(isUniquelyReferenced_nonNull_native, v44, 1, v38);
          if (*(void *)(v39 + 16))
          {
LABEL_50:
            unint64_t v45 = (unint64_t)&v38[4 * v38[2] + 4];
            if (v39 + 32 < v45 + 32 * v40 && v45 < v39 + 32 + 32 * v40) {
              goto LABEL_98;
            }
            swift_arrayInitWithCopy();
            if (v40) {
              v38[2] += v40;
            }
          }
        }
        swift_bridgeObjectRelease();
        if (v36 == ++v37)
        {
          swift_bridgeObjectRelease();
          goto LABEL_60;
        }
      }
    }
  }
  float32x2_t v38 = (void *)MEMORY[0x1E4FBC860];
LABEL_60:
  swift_bridgeObjectRelease();
  sub_1B67C5060();
  uint64_t v47 = swift_initStackObject();
  *(void *)(v47 + 32) = &unk_1F0F782C8;
  *(_OWORD *)(v47 + 16) = xmmword_1B6E77D10;
  *(void *)(v47 + 40) = &unk_1F0F78288;
  *(void *)(v47 + 48) = v38;
  uint64_t v48 = qword_1F0F782D8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1B68C3500(0, v48, 1, MEMORY[0x1E4FBC860]);
  uint64_t v50 = v49;
  if (qword_1F0F782D8)
  {
    unint64_t v51 = (unint64_t)&v49[4 * v49[2] + 4];
    if (v51 + 32 * v48 > (unint64_t)&unk_1F0F782E8 && v51 < (unint64_t)&unk_1F0F782E8 + 32 * v48) {
      goto LABEL_98;
    }
    swift_arrayInitWithCopy();
    if (v48) {
      v50[2] += v48;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v53 = *(void *)(v47 + 40);
  uint64_t v54 = *(void *)(v53 + 16);
  uint64_t v55 = v50[2];
  unint64_t v56 = v50[3];
  swift_bridgeObjectRetain();
  if (v55 + v54 > (uint64_t)(v56 >> 1))
  {
    if (v55 <= v55 + v54) {
      uint64_t v66 = v55 + v54;
    }
    else {
      uint64_t v66 = v55;
    }
    uint64_t v50 = sub_1B68C3500(1, v66, 1, v50);
    if (!*(void *)(v53 + 16)) {
      goto LABEL_77;
    }
  }
  else if (!v54)
  {
    goto LABEL_77;
  }
  unint64_t v57 = (unint64_t)&v50[4 * v50[2] + 4];
  if (v53 + 32 < v57 + 32 * v54 && v57 < v53 + 32 + 32 * v54) {
    goto LABEL_98;
  }
  swift_arrayInitWithCopy();
  if (v54) {
    v50[2] += v54;
  }
LABEL_77:
  swift_bridgeObjectRelease();
  uint64_t v59 = *(void *)(v47 + 48);
  uint64_t v60 = *(void *)(v59 + 16);
  uint64_t v61 = v50[2];
  unint64_t v62 = v50[3];
  swift_bridgeObjectRetain();
  if (v61 + v60 > (uint64_t)(v62 >> 1))
  {
    if (v61 <= v61 + v60) {
      uint64_t v67 = v61 + v60;
    }
    else {
      uint64_t v67 = v61;
    }
    uint64_t v50 = sub_1B68C3500(1, v67, 1, v50);
    if (!*(void *)(v59 + 16)) {
      goto LABEL_86;
    }
  }
  else if (!v60)
  {
    goto LABEL_86;
  }
  unint64_t v63 = (unint64_t)&v50[4 * v50[2] + 4];
  if (v59 + 32 < v63 + 32 * v60 && v63 < v59 + 32 + 32 * v60) {
    goto LABEL_98;
  }
  swift_arrayInitWithCopy();
  if (v60) {
    v50[2] += v60;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  return v50;
}

uint64_t sub_1B67B44DC()
{
  sub_1B67C5060();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &unk_1F0F78210;
  uint64_t v1 = qword_1F0F78220;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B68C3500(0, v1, 1, MEMORY[0x1E4FBC860]);
  uint64_t v3 = v2;
  if (qword_1F0F78220)
  {
    unint64_t v4 = (unint64_t)&v2[4 * v2[2] + 4];
    if (v4 + 32 * v1 > (unint64_t)&unk_1F0F78230 && v4 < (unint64_t)&unk_1F0F78230 + 32 * v1)
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
    if (v1) {
      v3[2] += v1;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  return (uint64_t)v3;
}

uint64_t sub_1B67B4670(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, int64_t a9)
{
  if (a1)
  {
    if (a1 != 1)
    {
      sub_1B67C5060();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
      *(void *)(inited + 32) = &unk_1F0F77550;
      uint64_t v18 = sub_1B67BB4AC(inited);
      swift_setDeallocating();
      sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
      swift_arrayDestroy();
      goto LABEL_10;
    }
    sub_1B6E328C8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1B6E77050;
    *(void *)(v14 + 32) = a2;
    *(void *)(v14 + 40) = a3;
    *(void *)(v14 + 48) = 0;
    *(void *)(v14 + 56) = 0;
    if (a4)
    {
      sub_1B67C5060();
      uint64_t v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_1B6E77050;
      *(void *)(v15 + 32) = &unk_1F0F77810;
      uint64_t v16 = sub_1B67BB4AC(v15);
      swift_setDeallocating();
      sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
      swift_arrayDestroy();
    }
    else
    {
      uint64_t v16 = MEMORY[0x1E4FBC860];
    }
    sub_1B67C5060();
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1B6E85720;
    *(void *)(v20 + 32) = v14;
    *(void *)(v20 + 40) = v16;
    *(void *)(v20 + 48) = &unk_1F0F77510;
    *(void *)(v20 + 56) = &unk_1F0F775D0;
    *(void *)(v20 + 64) = &unk_1F0F77610;
    *(void *)(v20 + 72) = &unk_1F0F77650;
    *(void *)(v20 + 80) = &unk_1F0F77690;
    uint64_t v21 = sub_1B67BB4AC(v20);
    swift_setDeallocating();
    sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    uint64_t v18 = v21;
    swift_arrayDestroy();
  }
  else
  {
    sub_1B67C5060();
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1B6E76900;
    *(void *)(v17 + 32) = &unk_1F0F776D0;
    *(void *)(v17 + 40) = &unk_1F0F77710;
    *(void *)(v17 + 48) = &unk_1F0F77750;
    *(void *)(v17 + 56) = &unk_1F0F77790;
    *(void *)(v17 + 64) = &unk_1F0F777D0;
    uint64_t v18 = sub_1B67BB4AC(v17);
    swift_setDeallocating();
    sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
  }
  swift_deallocClassInstance();
LABEL_10:
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1B6E77050;
  *(void *)(v22 + 32) = 0x746E6174736E6F63;
  *(void *)(v22 + 40) = 0xE900000000000020;
  *(void *)(v22 + 48) = 0;
  *(void *)(v22 + 56) = 0;
  uint64_t v122 = v22;
  if (a1 == 1)
  {
    int64_t v23 = a9;
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1B6E77050;
    *(void *)(v28 + 32) = 0;
    *(void *)(v28 + 40) = 0xE000000000000000;
    sub_1B67C5060();
    *(void *)(v28 + 48) = 0;
    *(void *)(v28 + 56) = 0;
    unint64_t v24 = swift_initStackObject();
    *(_OWORD *)(v24 + 16) = xmmword_1B6E77050;
    *(void *)(v24 + 32) = v28;
    uint64_t v26 = 0;
    uint64_t v121 = sub_1B67BB4AC(v24);
    swift_setDeallocating();
    sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
    if (a8) {
      goto LABEL_19;
    }
LABEL_16:
    uint64_t v27 = MEMORY[0x1E4FBC860];
    goto LABEL_20;
  }
  int64_t v23 = a9;
  unint64_t v24 = 0x746E656D67617266;
  char v25 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_18;
  }
  if (!a1) {
    goto LABEL_17;
  }
  uint64_t v26 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_18;
  }
  uint64_t v121 = MEMORY[0x1E4FBC860];
  if ((a8 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_19:
  sub_1B67C5060();
  uint64_t v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_1B6E77050;
  *(void *)(v29 + 32) = &unk_1F0F77590;
  uint64_t v26 = 0;
  uint64_t v27 = sub_1B67BB4AC(v29);
  swift_setDeallocating();
  sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
LABEL_20:
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v125 = *(void *)(v23 + 16);
  if (v125)
  {
    uint64_t v119 = v27;
    uint64_t v120 = v18;
    swift_bridgeObjectRetain();
    uint64_t v123 = 0;
    uint64_t v31 = 0;
    uint64_t v124 = 7;
    uint64_t v32 = 32;
    while (1)
    {
      unint64_t v33 = *(void *)(v23 + v32);
      int8x16_t v126 = (void *)v30;
      uint64_t v127 = v32;
      switch(v33 >> 60)
      {
        case 3uLL:
        case 4uLL:
        case 0xBuLL:
        case 0xCuLL:
          sub_1B67C5060();
          unint64_t v24 = swift_initStackObject();
          *(_OWORD *)(v24 + 16) = xmmword_1B6E77050;
          unint64_t v34 = (void *)MEMORY[0x1E4FBC860];
          *(void *)(v24 + 32) = MEMORY[0x1E4FBC860];
          uint64_t v26 = v24 + 32;
          sub_1B62C6AA8(v33);
          int64_t v23 = *(void *)(v24 + 32);
          uint64_t v30 = *(void *)(v23 + 16);
          uint64_t v35 = v34[2];
          uint64_t v36 = v35 + v30;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (!isUniquelyReferenced_nonNull_native || (uint64_t v32 = (uint64_t)v34, v36 > v34[3] >> 1))
          {
            if (v35 <= v36) {
              uint64_t v38 = v35 + v30;
            }
            else {
              uint64_t v38 = v35;
            }
            uint64_t v32 = (uint64_t)sub_1B68C3500(isUniquelyReferenced_nonNull_native, v38, 1, v34);
          }
          if (!*(void *)(v23 + 16)) {
            goto LABEL_37;
          }
          unint64_t v39 = v32 + 32 * *(void *)(v32 + 16) + 32;
          if (v23 + 32 < v39 + 32 * v30 && v39 < v23 + 32 + 32 * v30) {
            goto LABEL_205;
          }
          swift_arrayInitWithCopy();
          if (v30) {
            *(void *)(v32 + 16) += v30;
          }
LABEL_37:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
          swift_arrayDestroy();
          goto LABEL_185;
        case 7uLL:
          uint64_t v75 = sub_1B67C0898(v33);
          uint64_t v77 = v76;
          sub_1B62C6AA8(v33);
          sub_1B62C6AA8(v33);
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          uint64_t v78 = v75;
          uint64_t v79 = v77;
          unint64_t v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = xmmword_1B6E77050;
          *(void *)(v24 + 32) = v78;
          int64_t v23 = v24 + 32;
          *(void *)(v24 + 40) = v79;
          sub_1B67C5060();
          *(void *)(v24 + 48) = 0;
          *(void *)(v24 + 56) = 0;
          uint64_t v26 = swift_initStackObject();
          *(_OWORD *)(v26 + 16) = xmmword_1B6E76B30;
          *(void *)(v26 + 32) = v24;
          int v80 = (void *)MEMORY[0x1E4FBC860];
          *(void *)(v26 + 40) = MEMORY[0x1E4FBC860];
          uint64_t v30 = *(void *)(v24 + 16);
          uint64_t v81 = v80[2];
          uint64_t v82 = v81 + v30;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v83 = swift_isUniquelyReferenced_nonNull_native();
          if ((v83 & 1) == 0 || (uint64_t v32 = (uint64_t)v80, v82 > v80[3] >> 1))
          {
            if (v81 <= v82) {
              uint64_t v84 = v81 + v30;
            }
            else {
              uint64_t v84 = v81;
            }
            uint64_t v32 = (uint64_t)sub_1B68C3500(v83, v84, 1, v80);
          }
          if (!*(void *)(v24 + 16)) {
            goto LABEL_122;
          }
          unint64_t v85 = v32 + 32 * *(void *)(v32 + 16) + 32;
          if (v23 < v85 + 32 * v30 && v85 < v23 + 32 * v30) {
            goto LABEL_205;
          }
          swift_arrayInitWithCopy();
          if (v30) {
            *(void *)(v32 + 16) += v30;
          }
LABEL_122:
          swift_bridgeObjectRelease();
          unint64_t v24 = *(void *)(v26 + 40);
          int64_t v23 = *(void *)(v24 + 16);
          uint64_t v86 = *(void *)(v32 + 16);
          uint64_t v30 = v86 + v23;
          swift_bridgeObjectRetain();
          int v87 = swift_isUniquelyReferenced_nonNull_native();
          if (v87 && v30 <= *(void *)(v32 + 24) >> 1)
          {
            if (!*(void *)(v24 + 16)) {
              goto LABEL_146;
            }
          }
          else
          {
            if (v86 <= v30) {
              uint64_t v91 = v86 + v23;
            }
            else {
              uint64_t v91 = v86;
            }
            uint64_t v32 = (uint64_t)sub_1B68C3500(v87, v91, 1, (void *)v32);
            if (!*(void *)(v24 + 16)) {
              goto LABEL_146;
            }
          }
          unint64_t v92 = v32 + 32 * *(void *)(v32 + 16) + 32;
          if (v24 + 32 < v92 + 32 * v23 && v92 < v24 + 32 + 32 * v23) {
            goto LABEL_205;
          }
          swift_arrayInitWithCopy();
          if (v23) {
            *(void *)(v32 + 16) += v23;
          }
LABEL_146:
          ++v123;
          goto LABEL_182;
        case 8uLL:
          if (*(unsigned __int8 *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x20) >= 2u)
          {
            sub_1B67C5060();
            uint64_t v32 = swift_initStackObject();
            *(_OWORD *)(v32 + 16) = xmmword_1B6E77050;
            int64_t v23 = MEMORY[0x1E4FBC860];
            *(void *)(v32 + 32) = MEMORY[0x1E4FBC860];
            sub_1B62C6AA8(v33);
            sub_1B62C6AA8(v33);
            uint64_t v26 = *(void *)(v32 + 32);
            unint64_t v24 = *(void *)(v26 + 16);
            uint64_t v96 = *(void *)(v23 + 16);
            uint64_t v97 = v96 + v24;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int v98 = swift_isUniquelyReferenced_nonNull_native();
            if (v98 && (uint64_t v30 = v23, v97 <= *(void *)(v23 + 24) >> 1))
            {
              if (!*(void *)(v26 + 16)) {
                goto LABEL_171;
              }
            }
            else
            {
              if (v96 <= v97) {
                uint64_t v99 = v96 + v24;
              }
              else {
                uint64_t v99 = v96;
              }
              uint64_t v30 = (uint64_t)sub_1B68C3500(v98, v99, 1, (void *)v23);
              if (!*(void *)(v26 + 16)) {
                goto LABEL_171;
              }
            }
            unint64_t v100 = v30 + 32 * *(void *)(v30 + 16) + 32;
            if (v26 + 32 < v100 + 32 * v24 && v100 < v26 + 32 + 32 * v24) {
              goto LABEL_205;
            }
            goto LABEL_169;
          }
          sub_1B62C6AA8(v33);
          sub_1B62C6AA8(v33);
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          uint64_t v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = xmmword_1B6E77050;
          *(void *)(v26 + 32) = 0xD000000000000019;
          unint64_t v24 = v26 + 32;
          *(void *)(v26 + 40) = 0x80000001B6F363C0;
          sub_1B67C5060();
          *(void *)(v26 + 48) = 0;
          *(void *)(v26 + 56) = 0;
          uint64_t v32 = swift_initStackObject();
          *(_OWORD *)(v32 + 16) = xmmword_1B6E76B30;
          *(void *)(v32 + 32) = v26;
          uint64_t v54 = (void *)MEMORY[0x1E4FBC860];
          *(void *)(v32 + 40) = MEMORY[0x1E4FBC860];
          uint64_t v55 = *(void *)(v26 + 16);
          int64_t v23 = v54[2];
          int64_t v56 = v23 + v55;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v57 = swift_isUniquelyReferenced_nonNull_native();
          if (!v57 || (uint64_t v30 = (uint64_t)v54, v56 > v54[3] >> 1))
          {
            if (v23 <= v56) {
              uint64_t v58 = v23 + v55;
            }
            else {
              uint64_t v58 = v23;
            }
            uint64_t v30 = (uint64_t)sub_1B68C3500(v57, v58, 1, v54);
          }
          if (*(void *)(v26 + 16))
          {
            unint64_t v59 = v30 + 32 * *(void *)(v30 + 16) + 32;
            if (v24 < v59 + 32 * v55 && v59 < v24 + 32 * v55) {
              goto LABEL_205;
            }
            swift_arrayInitWithCopy();
            if (v55) {
              *(void *)(v30 + 16) += v55;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v26 = *(void *)(v32 + 40);
          unint64_t v24 = *(void *)(v26 + 16);
          int64_t v60 = *(void *)(v30 + 16);
          int64_t v23 = v60 + v24;
          swift_bridgeObjectRetain();
          int v61 = swift_isUniquelyReferenced_nonNull_native();
          if (!v61 || v23 > *(void *)(v30 + 24) >> 1)
          {
            if (v60 <= v23) {
              uint64_t v62 = v60 + v24;
            }
            else {
              uint64_t v62 = v60;
            }
            uint64_t v30 = (uint64_t)sub_1B68C3500(v61, v62, 1, (void *)v30);
          }
          v124 += 2;
          if (*(void *)(v26 + 16))
          {
            unint64_t v63 = v30 + 32 * *(void *)(v30 + 16) + 32;
            if (v26 + 32 < v63 + 32 * v24 && v63 < v26 + 32 + 32 * v24) {
              goto LABEL_205;
            }
LABEL_169:
            swift_arrayInitWithCopy();
            if (v24) {
              *(void *)(v30 + 16) += v24;
            }
          }
LABEL_171:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
          swift_arrayDestroy();
          sub_1B67C5060();
          uint64_t v26 = swift_initStackObject();
          *(_OWORD *)(v26 + 16) = xmmword_1B6E77050;
          *(void *)(v26 + 32) = v30;
          unint64_t v24 = *(void *)(v30 + 16);
          uint64_t v102 = (void *)MEMORY[0x1E4FBC860];
          int64_t v23 = *(void *)(MEMORY[0x1E4FBC860] + 16);
          int64_t v103 = v23 + v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v104 = swift_isUniquelyReferenced_nonNull_native();
          if (!v104 || (uint64_t v32 = (uint64_t)v102, v103 > v102[3] >> 1))
          {
            if (v23 <= v103) {
              uint64_t v105 = v23 + v24;
            }
            else {
              uint64_t v105 = v23;
            }
            uint64_t v32 = (uint64_t)sub_1B68C3500(v104, v105, 1, v102);
          }
          if (*(void *)(v30 + 16))
          {
            unint64_t v106 = v32 + 32 * *(void *)(v32 + 16) + 32;
            if (v30 + 32 < v106 + 32 * v24 && v106 < v30 + 32 + 32 * v24) {
              goto LABEL_205;
            }
            swift_arrayInitWithCopy();
            if (v24) {
              *(void *)(v32 + 16) += v24;
            }
          }
LABEL_182:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
LABEL_183:
          unint64_t v95 = v33;
LABEL_184:
          sub_1B62C6A70(v95);
LABEL_185:
          sub_1B67C5060();
          unint64_t v24 = swift_initStackObject();
          *(_OWORD *)(v24 + 16) = xmmword_1B6E77050;
          *(void *)(v24 + 32) = v32;
          uint64_t v26 = v24 + 32;
          int64_t v23 = *(void *)(v32 + 16);
          float32x4_t v107 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v108 = *(void *)(MEMORY[0x1E4FBC860] + 16);
          uint64_t v109 = v108 + v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v110 = swift_isUniquelyReferenced_nonNull_native();
          if ((v110 & 1) == 0 || (float32x4_t v111 = v107, v109 > v107[3] >> 1))
          {
            if (v108 <= v109) {
              uint64_t v112 = v108 + v23;
            }
            else {
              uint64_t v112 = v108;
            }
            float32x4_t v111 = sub_1B68C3500(v110, v112, 1, v107);
          }
          uint64_t v30 = (uint64_t)v126;
          if (*(void *)(v32 + 16))
          {
            unint64_t v113 = (unint64_t)&v111[4 * v111[2] + 4];
            if (v32 + 32 < v113 + 32 * v23 && v113 < v32 + 32 + 32 * v23) {
              goto LABEL_205;
            }
            swift_arrayInitWithCopy();
            if (v23) {
              v111[2] += v23;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
          swift_arrayDestroy();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v30 = (uint64_t)sub_1B68C3618(0, v126[2] + 1, 1, v126);
          }
          int64_t v23 = a9;
          unint64_t v24 = *(void *)(v30 + 16);
          unint64_t v114 = *(void *)(v30 + 24);
          uint64_t v26 = v24 + 1;
          if (v24 >= v114 >> 1) {
            uint64_t v30 = (uint64_t)sub_1B68C3618(v114 > 1, v24 + 1, 1, (void *)v30);
          }
          ++v31;
          *(void *)(v30 + 16) = v26;
          *(void *)(v30 + 8 * v24 + 32) = v111;
          sub_1B62C6A70(v33);
          uint64_t v32 = v127 + 32;
          if (v125 == v31)
          {
            swift_bridgeObjectRelease();
            uint64_t v27 = v119;
            uint64_t v18 = v120;
            goto LABEL_202;
          }
          break;
        case 9uLL:
          sub_1B67C5060();
          uint64_t v26 = swift_initStackObject();
          *(_OWORD *)(v26 + 16) = xmmword_1B6E77050;
          unint64_t v64 = (void *)MEMORY[0x1E4FBC860];
          *(void *)(v26 + 32) = MEMORY[0x1E4FBC860];
          sub_1B62C6AA8(v33);
          sub_1B62C6AA8(v33);
          unint64_t v24 = *(void *)(v26 + 32);
          int64_t v23 = *(void *)(v24 + 16);
          uint64_t v30 = v64[2];
          uint64_t v65 = v30 + v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v66 = swift_isUniquelyReferenced_nonNull_native();
          if ((v66 & 1) != 0 && (uint64_t v32 = (uint64_t)v64, v65 <= v64[3] >> 1))
          {
            if (!*(void *)(v24 + 16)) {
              goto LABEL_182;
            }
          }
          else
          {
            if (v30 <= v65) {
              uint64_t v88 = v30 + v23;
            }
            else {
              uint64_t v88 = v30;
            }
            uint64_t v32 = (uint64_t)sub_1B68C3500(v66, v88, 1, v64);
            if (!*(void *)(v24 + 16)) {
              goto LABEL_182;
            }
          }
          unint64_t v89 = v32 + 32 * *(void *)(v32 + 16) + 32;
          if (v24 + 32 < v89 + 32 * v23 && v89 < v24 + 32 + 32 * v23)
          {
            while (1)
            {
LABEL_205:
              sub_1B6E32C88();
              __break(1u);
LABEL_206:
              sub_1B62C6AA8(v33);
              sub_1B62C6AA8(v33);
              sub_1B67C51E0(v26, v24, v23, v32, v30);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1B6E328C8();
              sub_1B6E32B18();
              sub_1B6E31948();
LABEL_204:
              sub_1B6E32BE8();
              __break(1u);
            }
          }
          swift_arrayInitWithCopy();
          if (v23) {
            *(void *)(v32 + 16) += v23;
          }
          goto LABEL_182;
        case 0xDuLL:
          uint64_t v26 = *(void *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          unint64_t v24 = *(void *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          int64_t v23 = *(void *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v32 = *(void *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
          LODWORD(v30) = *(unsigned __int8 *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
          if (v30 != 6 || (v24 | v26 | v23 | v32) != 0) {
            goto LABEL_206;
          }
          sub_1B67C5060();
          unint64_t v24 = swift_initStackObject();
          *(_OWORD *)(v24 + 16) = xmmword_1B6E77050;
          uint64_t v42 = (void *)MEMORY[0x1E4FBC860];
          *(void *)(v24 + 32) = MEMORY[0x1E4FBC860];
          int64_t v23 = v24 + 32;
          sub_1B62C6AA8(v33);
          sub_1B62C6AA8(v33);
          uint64_t v32 = *(void *)(v24 + 32);
          uint64_t v30 = *(void *)(v32 + 16);
          uint64_t v43 = v42[2];
          uint64_t v44 = v43 + v30;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v45 = swift_isUniquelyReferenced_nonNull_native();
          if (!v45 || (uint64_t v26 = (uint64_t)v42, v44 > v42[3] >> 1))
          {
            if (v43 <= v44) {
              uint64_t v46 = v43 + v30;
            }
            else {
              uint64_t v46 = v43;
            }
            uint64_t v26 = (uint64_t)sub_1B68C3500(v45, v46, 1, v42);
          }
          if (!*(void *)(v32 + 16)) {
            goto LABEL_57;
          }
          unint64_t v47 = v26 + 32 * *(void *)(v26 + 16) + 32;
          if (v32 + 32 < v47 + 32 * v30 && v47 < v32 + 32 + 32 * v30) {
            goto LABEL_205;
          }
          swift_arrayInitWithCopy();
          if (v30) {
            *(void *)(v26 + 16) += v30;
          }
LABEL_57:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
          swift_arrayDestroy();
          int64_t v23 = swift_initStackObject();
          *(_OWORD *)(v23 + 16) = xmmword_1B6E77050;
          *(void *)(v23 + 32) = v26;
          LOBYTE(v30) = v23 + 32;
          uint64_t v49 = *(void *)(v26 + 16);
          unint64_t v24 = v42[2];
          int64_t v50 = v24 + v49;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v51 = swift_isUniquelyReferenced_nonNull_native();
          if ((v51 & 1) == 0 || (uint64_t v32 = (uint64_t)v42, v50 > v42[3] >> 1))
          {
            if ((uint64_t)v24 <= v50) {
              uint64_t v52 = v24 + v49;
            }
            else {
              uint64_t v52 = v24;
            }
            uint64_t v32 = (uint64_t)sub_1B68C3500(v51, v52, 1, v42);
          }
          if (!*(void *)(v26 + 16)) {
            goto LABEL_68;
          }
          unint64_t v53 = v32 + 32 * *(void *)(v32 + 16) + 32;
          if (v26 + 32 < v53 + 32 * v49 && v53 < v26 + 32 + 32 * v49) {
            goto LABEL_205;
          }
          swift_arrayInitWithCopy();
          if (v49) {
            *(void *)(v32 + 16) += v49;
          }
LABEL_68:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B67C511C(0, 0, 0, 0, 6);
          swift_setDeallocating();
          swift_arrayDestroy();
          goto LABEL_183;
        case 0xFuLL:
          if (v33 != 0xF000000000000000) {
            goto LABEL_203;
          }
          sub_1B62C6AA8(0xF000000000000000);
          sub_1B6E328C8();
          sub_1B6E31948();
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          unint64_t v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = xmmword_1B6E77050;
          *(void *)(v24 + 32) = 0;
          int64_t v23 = v24 + 32;
          *(void *)(v24 + 40) = 0xE000000000000000;
          sub_1B67C5060();
          *(void *)(v24 + 48) = 0;
          *(void *)(v24 + 56) = 0;
          uint64_t v26 = swift_initStackObject();
          *(_OWORD *)(v26 + 16) = xmmword_1B6E76B30;
          *(void *)(v26 + 32) = v24;
          uint64_t v67 = (void *)MEMORY[0x1E4FBC860];
          *(void *)(v26 + 40) = MEMORY[0x1E4FBC860];
          uint64_t v30 = *(void *)(v24 + 16);
          uint64_t v68 = v67[2];
          uint64_t v69 = v68 + v30;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v70 = swift_isUniquelyReferenced_nonNull_native();
          if (!v70 || (uint64_t v32 = (uint64_t)v67, v69 > v67[3] >> 1))
          {
            if (v68 <= v69) {
              uint64_t v71 = v68 + v30;
            }
            else {
              uint64_t v71 = v68;
            }
            uint64_t v32 = (uint64_t)sub_1B68C3500(v70, v71, 1, v67);
          }
          if (!*(void *)(v24 + 16)) {
            goto LABEL_107;
          }
          unint64_t v72 = v32 + 32 * *(void *)(v32 + 16) + 32;
          if (v23 < v72 + 32 * v30 && v72 < v23 + 32 * v30) {
            goto LABEL_205;
          }
          swift_arrayInitWithCopy();
          if (v30) {
            *(void *)(v32 + 16) += v30;
          }
LABEL_107:
          swift_bridgeObjectRelease();
          unint64_t v24 = *(void *)(v26 + 40);
          int64_t v23 = *(void *)(v24 + 16);
          uint64_t v73 = *(void *)(v32 + 16);
          uint64_t v30 = v73 + v23;
          swift_bridgeObjectRetain();
          int v74 = swift_isUniquelyReferenced_nonNull_native();
          if (v74 && v30 <= *(void *)(v32 + 24) >> 1)
          {
            if (!*(void *)(v24 + 16)) {
              goto LABEL_155;
            }
          }
          else
          {
            if (v73 <= v30) {
              uint64_t v93 = v73 + v23;
            }
            else {
              uint64_t v93 = v73;
            }
            uint64_t v32 = (uint64_t)sub_1B68C3500(v74, v93, 1, (void *)v32);
            if (!*(void *)(v24 + 16)) {
              goto LABEL_155;
            }
          }
          unint64_t v94 = v32 + 32 * *(void *)(v32 + 16) + 32;
          if (v24 + 32 < v94 + 32 * v23 && v94 < v24 + 32 + 32 * v23) {
            goto LABEL_205;
          }
          swift_arrayInitWithCopy();
          if (v23) {
            *(void *)(v32 + 16) += v23;
          }
LABEL_155:
          ++v124;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          unint64_t v95 = 0xF000000000000000;
          goto LABEL_184;
        default:
LABEL_203:
          sub_1B62C6AA8(v33);
          sub_1B62C6AA8(v33);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B6E328C8();
          sub_1B6E32B18();
          sub_1B6E31948();
          goto LABEL_204;
      }
    }
  }
LABEL_202:
  uint64_t v115 = sub_1B67BB4AC(v30);
  swift_bridgeObjectRelease();
  sub_1B67C5060();
  uint64_t v116 = swift_initStackObject();
  *(_OWORD *)(v116 + 16) = xmmword_1B6E76900;
  *(void *)(v116 + 32) = v18;
  *(void *)(v116 + 40) = v122;
  *(void *)(v116 + 48) = v121;
  *(void *)(v116 + 56) = v27;
  *(void *)(v116 + 64) = v115;
  uint64_t v117 = sub_1B67BB4AC(v116);
  swift_setDeallocating();
  sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  return v117;
}

uint64_t sub_1B67B61C0(unsigned __int8 a1)
{
  if (a1 < 3u) {
    return a1 + 25649;
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E32B18();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

unint64_t sub_1B67B6290(unint64_t *a1)
{
  unint64_t v1 = *a1;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(unsigned char *)(v2 + 48) = 1;
  LOBYTE(v1) = sub_1B690176C(v1, v2 | 0xD000000000000000);
  swift_release();
  return v1 & 1;
}

double sub_1B67B6308@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, uint64_t a6@<X6>, char a7@<W7>, uint64_t a8@<X8>)
{
  sub_1B67BBC48(a1, a2, a3, a4, a5, a6, a6, 2, (uint64_t *)v11, a7);
  double result = *(double *)v11;
  long long v10 = v11[1];
  *(_OWORD *)a8 = v11[0];
  *(_OWORD *)(a8 + 16) = v10;
  *(void *)(a8 + 32) = v12;
  return result;
}

uint64_t sub_1B67B635C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = *a1;
  char v5 = a1[1];
  uint64_t result = sub_1B67B1DFC(1);
  if (!v2)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void *)(result + 16);
    uint64_t v13 = sub_1B67B0EFC();
    unint64_t v14 = v9;
    if (qword_1E9DCC498 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B67C5300(v7);
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v10 = v13;
      LOBYTE(v13) = v4;
      BYTE1(v13) = v5;
      sub_1B67B6524(v10, v14, (__int16 *)&v13);
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_1B6E30F48();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 0, 1, v11);
    }
    else
    {
      uint64_t v12 = sub_1B6E30F48();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B67B6524(uint64_t a1, unint64_t a2, __int16 *a3)
{
  __int16 v6 = *a3;
  type metadata accessor for MetalToolchainCodeLoader();
  swift_allocObject();
  sub_1B6C4E38C();
  uint64_t v8 = v7;
  __int16 v14 = v6;
  type metadata accessor for XcodeCommandBuilder();
  swift_allocObject();
  uint64_t v9 = sub_1B6830944((unsigned __int8 *)&v14);
  if (v9)
  {
    *(void *)(v8 + 80) = v9;
    swift_release();
    uint64_t v10 = sub_1B6C4C204(a1, a2, 0x657475706D6F63, 0xE700000000000000);
    if (!v3)
    {
      sub_1B6C4E3B4((uint64_t)v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1B6E30E48();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1B67C5B68();
    swift_allocError();
    *uint64_t v12 = 0;
    v12[1] = 0;
    swift_willThrow();
  }
  return swift_release();
}

uint64_t type metadata accessor for MetalScriptCodeGen()
{
  return self;
}

uint64_t sub_1B67B66CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X6>, unsigned __int8 a7@<W7>, void *a8@<X8>)
{
  int v9 = a7;
  sub_1B67BB7B4(a1, a2, a3, a4, 1, 1);
  if (!v9)
  {
    if (qword_1E9DCC498 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
  }
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1B67B79C8(4);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
  }
  uint64_t v58 = *(void *)(a6 + 16);
  char v55 = a5;
  if (v58)
  {
    sub_1B67B79C8(4);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v11 = (unsigned char *)(a6 + 40);
    do
    {
      unint64_t v14 = *((void *)v11 - 1);
      if (v14 >> 60 == 14)
      {
        uint64_t v12 = *(void *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        swift_retain_n();
        sub_1B665A7E8(v12);
        sub_1B67B03DC(v13, 0);
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B67B79C8(4);
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B62C6A70(v14);
        swift_bridgeObjectRelease();
        sub_1B62C6A70(v14);
      }
      else if (v14 >> 60 != 15 || v14 != 0xF000000000000000)
      {
        char v16 = *v11;
        sub_1B62C6AA8(*((void *)v11 - 1));
        sub_1B68EC9E4(v14);
        if (sub_1B6A94630(v17, 0))
        {
          if ((v16 & 2) != 0) {
            uint64_t v18 = MEMORY[0x1E4FBB870];
          }
          else {
            uint64_t v18 = MEMORY[0x1E4FBB2A0];
          }
        }
        else
        {
          sub_1B68EC9E4(v14);
        }
        sub_1B67B03DC(v18, 0);
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B67B79C8(4);
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B62C6A70(v14);
        swift_bridgeObjectRelease();
      }
      ++v10;
      v11 += 32;
    }
    while (v58 != v10);
    swift_bridgeObjectRelease();
    a5 = v55;
    uint64_t v19 = a6;
    if (v55) {
      goto LABEL_23;
    }
LABEL_25:
    uint64_t v20 = 4;
    goto LABEL_26;
  }
  sub_1B6E31948();
  uint64_t v19 = a6;
  if ((a5 & 1) == 0) {
    goto LABEL_25;
  }
LABEL_23:
  sub_1B67B79C8(4);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v20 = 8;
LABEL_26:
  sub_1B6E31948();
  sub_1B67B79C8(v20);
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  if (!v58)
  {
    sub_1B67B79C8(v20);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    if (a5) {
      goto LABEL_106;
    }
    goto LABEL_107;
  }
  uint64_t v56 = v20;
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v22 = (unsigned char *)(v19 + 40);
  do
  {
    unint64_t v23 = *((void *)v22 - 1);
    char v24 = *v22;
    unint64_t v25 = v23 >> 60;
    if (v23 == 0xF000000000000000 && v25 == 15)
    {
      sub_1B6E31948();
      goto LABEL_29;
    }
    if (v25 == 9)
    {
      swift_retain_n();
      char v27 = sub_1B68EB40C(v23);
      sub_1B62C6A70(v23);
      if ((v27 & 1) == 0)
      {
        swift_retain();
        uint64_t v28 = sub_1B6E32738();
        uint64_t result = swift_conformsToProtocol2();
        if (!result)
        {
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
          return result;
        }
        sub_1B62CD84C(v28);
        sub_1B62C6A70(v23);
        sub_1B68EC9E4(v23);
        if (sub_1B6A94630(v30, 0))
        {
          if ((v24 & 2) != 0) {
            uint64_t v31 = MEMORY[0x1E4FBB870];
          }
          else {
            uint64_t v31 = MEMORY[0x1E4FBB2A0];
          }
        }
        else
        {
          sub_1B68EC9E4(v23);
        }
        sub_1B67B03DC(v31, 0);
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
    }
    else
    {
      sub_1B62C6AA8(v23);
    }
    sub_1B62C6AA8(v23);
    char v32 = sub_1B68EB40C(v23);
    sub_1B62C6A70(v23);
    if ((v32 & 1) == 0)
    {
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
LABEL_47:
    sub_1B6E31948();
LABEL_48:
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B68EC9E4(v23);
    if (sub_1B6A94630(v33, 0))
    {
      sub_1B6E31948();
      swift_bridgeObjectRelease();
    }
LABEL_29:
    v22 += 32;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B67B79C8(v20 + 4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B62C6A70(v23);
    swift_bridgeObjectRelease();
    ++v21;
  }
  while (v58 != v21);
  uint64_t v34 = a6;
  swift_bridgeObjectRelease();
  sub_1B67B79C8(v56);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v35 = 0;
  uint64_t v36 = 32;
  uint64_t v52 = MEMORY[0x1E4FBC840] + 8;
  while (2)
  {
    unint64_t v37 = *(void *)(v34 + v36);
    unint64_t v38 = v37 >> 60;
    if (v37 >> 60 != 3 && v38 != 4)
    {
      if (v38 == 9)
      {
        unint64_t v39 = (__int16 *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 58);
        goto LABEL_59;
      }
      goto LABEL_53;
    }
    unint64_t v39 = (__int16 *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 66);
LABEL_59:
    __int16 v40 = *v39;
    if ((*v39 & 3) != 0)
    {
      sub_1B62C6AA8(*(void *)(v34 + v36));
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B68EC9E4(v37);
      uint64_t v42 = v41;
      if (!swift_dynamicCastMetatype())
      {
        type metadata accessor for frame_constants(0);
        if (swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype()
          || swift_dynamicCastMetatype())
        {
          goto LABEL_67;
        }
        if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
        {
          sub_1B67C5BBC(0, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
          if (!swift_dynamicCastMetatype())
          {
            if (swift_dynamicCastMetatype())
            {
              if (sub_1B6E334B8()) {
                goto LABEL_67;
              }
            }
            else if (v42 != v52)
            {
              if (swift_dynamicCastMetatype()
                || (type metadata accessor for __vfx_sampler1d(0), swift_dynamicCastMetatype())
                || (type metadata accessor for __vfx_sampler2d(0), swift_dynamicCastMetatype())
                || (type metadata accessor for __vfx_sampler3d(0), swift_dynamicCastMetatype())
                || (swift_conformsToProtocol2() ? (uint64_t v51 = v42) : (uint64_t v51 = 0), !v51))
              {
LABEL_67:
                sub_1B68EC9E4(v37);
              }
            }
          }
        }
      }
      if (v38 == 9)
      {
        if ((*(_WORD *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x3A) & 0x80) != 0)
        {
          if ((*(unsigned char *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x38) & 1) == 0) {
            goto LABEL_81;
          }
        }
        else
        {
          if ((*(unsigned char *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x38) & 1) == 0) {
            goto LABEL_81;
          }
          uint64_t v53 = *(void *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
          sub_1B62C6AA8(v37);
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v43 = sub_1B6E32738();
          if (swift_conformsToProtocol2()) {
            uint64_t v44 = v43;
          }
          else {
            uint64_t v44 = 0;
          }
          if (!v44) {
            goto LABEL_84;
          }
          uint64_t v45 = sub_1B6E32738();
          uint64_t result = swift_conformsToProtocol2();
          if (!result) {
            goto LABEL_112;
          }
          if (sub_1B62CA808(v45))
          {
            uint64_t v46 = sub_1B6E32738();
            uint64_t result = swift_conformsToProtocol2();
            if (!result) {
              goto LABEL_113;
            }
            uint64_t v47 = sub_1B62CD84C(v46);
            sub_1B62CB508(v53, v53);
            uint64_t v49 = v48;
            swift_release();
            swift_bridgeObjectRelease();
            sub_1B62C6A70(v37);
            if (v47 == v49)
            {
LABEL_81:
              swift_retain();
              uint64_t v50 = sub_1B6E32738();
              uint64_t result = swift_conformsToProtocol2();
              if (!result)
              {
                __break(1u);
                goto LABEL_111;
              }
              sub_1B62CD84C(v50);
              sub_1B62C6A70(v37);
              sub_1B6E328C8();
              sub_1B6E31948();
              sub_1B6E33098();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              sub_1B6E31948();
              sub_1B6E33098();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              sub_1B6E31948();
              if ((v40 & 1) == 0)
              {
LABEL_86:
                if ((v40 & 2) == 0)
                {
                  swift_bridgeObjectRelease();
                  sub_1B62C6A70(v37);
                  goto LABEL_52;
                }
              }
LABEL_51:
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              sub_1B6E31948();
              sub_1B67B79C8(v56);
              swift_bridgeObjectRelease();
              sub_1B6E31948();
              sub_1B62C6A70(v37);
              swift_bridgeObjectRelease();
LABEL_52:
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v34 = a6;
              goto LABEL_53;
            }
          }
          else
          {
LABEL_84:
            swift_release();
            swift_bridgeObjectRelease();
            sub_1B62C6A70(v37);
          }
        }
      }
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      if ((v40 & 1) == 0) {
        goto LABEL_86;
      }
      goto LABEL_51;
    }
LABEL_53:
    ++v35;
    v36 += 32;
    if (v58 != v35) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = v56;
  if ((v55 & 1) == 0) {
    goto LABEL_107;
  }
LABEL_106:
  sub_1B67B79C8(v20 - 4);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
LABEL_107:
  uint64_t result = sub_1B6E31948();
  *a8 = &unk_1F0F63120;
  a8[1] = 0;
  a8[2] = 0xE000000000000000;
  a8[3] = 11565;
  a8[4] = 0xE200000000000000;
  return result;
}

uint64_t sub_1B67B79C8(uint64_t a1)
{
  sub_1B633AF88();
  uint64_t v2 = *(void *)(sub_1B6E325F8() + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    char v4 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      swift_bridgeObjectRetain_n();
      uint64_t v8 = sub_1B6E31988();
      if (!v9)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v4 = sub_1B6335858(0, v4[2] + 1, 1, v4);
        }
        unint64_t v14 = v4[2];
        unint64_t v13 = v4[3];
        if (v14 >= v13 >> 1) {
          char v4 = sub_1B6335858(v13 > 1, v14 + 1, 1, v4);
        }
        _OWORD v4[2] = v14 + 1;
        char v5 = &v4[2 * v14];
        v5[4] = 0;
        __int16 v6 = v5 + 4;
        unint64_t v7 = 0xE000000000000000;
        goto LABEL_4;
      }
      uint64_t v10 = v9;
      while (1)
      {
        if (v8 == 32 && v10 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
        char v11 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if ((v11 & 1) == 0) {
          break;
        }
LABEL_8:
        uint64_t v8 = sub_1B6E31988();
        uint64_t v10 = v12;
        if (!v12) {
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v21 = MEMORY[0x1BA9B3690](32, 0xE100000000000000, a1);
      unint64_t v22 = v15;
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v7 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v4 = sub_1B6335858(0, v4[2] + 1, 1, v4);
      }
      unint64_t v17 = v4[2];
      unint64_t v16 = v4[3];
      if (v17 >= v16 >> 1) {
        char v4 = sub_1B6335858(v16 > 1, v17 + 1, 1, v4);
      }
      _OWORD v4[2] = v17 + 1;
      uint64_t v18 = &v4[2 * v17];
      v18[4] = v21;
      __int16 v6 = v18 + 4;
LABEL_4:
      ++v3;
      v6[1] = v7;
    }
    while (v3 != v2);
  }
  swift_bridgeObjectRelease();
  sub_1B67C5C0C(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6646D3C();
  uint64_t v19 = sub_1B6E31638();
  swift_bridgeObjectRelease();
  return v19;
}

void *sub_1B67B7CBC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1B6641B88(v1);
  uint64_t v57 = *(void *)(a1 + 16);
  if (v57)
  {
    uint64_t v2 = 0;
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    char v4 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v58 = v2;
      unint64_t v59 = v4;
      uint64_t v5 = *(void *)(*(void *)(a1 + 32 + 40 * v2) + 16);
      if (v5)
      {
        uint64_t v6 = swift_bridgeObjectRetain() + 40;
        unint64_t v7 = v3;
        uint64_t v8 = v3;
        do
        {
          swift_bridgeObjectRetain();
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
          uint64_t v9 = swift_allocObject();
          *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
          *(void *)(v9 + 32) = 0xD000000000000010;
          unint64_t v10 = v9 + 32;
          *(void *)(v9 + 40) = 0x80000001B6F36E10;
          sub_1B67C5060();
          *(void *)(v9 + 48) = 0;
          *(void *)(v9 + 56) = 0;
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
          *(void *)(inited + 32) = v9;
          uint64_t v12 = *(void *)(v9 + 16);
          swift_bridgeObjectRetain();
          unint64_t v13 = sub_1B68C3500(0, v12, 1, v7);
          unint64_t v14 = v13;
          if (*(void *)(v9 + 16))
          {
            unint64_t v15 = (unint64_t)&v13[4 * v13[2] + 4];
            if (v10 < v15 + 32 * v12 && v15 < v10 + 32 * v12) {
              goto LABEL_82;
            }
            swift_arrayInitWithCopy();
            if (v12) {
              v14[2] += v12;
            }
          }
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
          swift_arrayDestroy();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1B68C3618(0, v8[2] + 1, 1, v8);
          }
          unint64_t v18 = v8[2];
          unint64_t v17 = v8[3];
          if (v18 >= v17 >> 1) {
            uint64_t v8 = sub_1B68C3618(v17 > 1, v18 + 1, 1, v8);
          }
          v6 += 16;
          v8[2] = v18 + 1;
          v8[v18 + 4] = v14;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease();
        uint64_t v3 = v7;
        uint64_t v19 = v8[2];
        if (v19)
        {
LABEL_19:
          swift_bridgeObjectRetain();
          uint64_t v20 = 0;
          uint64_t v21 = v3;
          while (1)
          {
            uint64_t v22 = v8[v20 + 4];
            uint64_t v23 = *(void *)(v22 + 16);
            uint64_t v24 = v21[2];
            uint64_t v25 = v24 + v23;
            swift_bridgeObjectRetain();
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (isUniquelyReferenced_nonNull_native && v25 <= v21[3] >> 1)
            {
              if (*(void *)(v22 + 16)) {
                goto LABEL_29;
              }
            }
            else
            {
              if (v24 <= v25) {
                uint64_t v27 = v24 + v23;
              }
              else {
                uint64_t v27 = v24;
              }
              uint64_t v21 = sub_1B68C3500(isUniquelyReferenced_nonNull_native, v27, 1, v21);
              if (*(void *)(v22 + 16))
              {
LABEL_29:
                unint64_t v28 = (unint64_t)&v21[4 * v21[2] + 4];
                if (v22 + 32 < v28 + 32 * v23 && v28 < v22 + 32 + 32 * v23) {
                  goto LABEL_83;
                }
                swift_arrayInitWithCopy();
                if (v23) {
                  v21[2] += v23;
                }
              }
            }
            swift_bridgeObjectRelease();
            if (v19 == ++v20)
            {
              swift_bridgeObjectRelease();
              goto LABEL_39;
            }
          }
        }
      }
      else
      {
        uint64_t v8 = v3;
        uint64_t v19 = v3[2];
        if (v19) {
          goto LABEL_19;
        }
      }
      uint64_t v21 = v3;
LABEL_39:
      swift_bridgeObjectRelease();
      sub_1B67C5060();
      uint64_t v30 = swift_initStackObject();
      *(_OWORD *)(v30 + 16) = xmmword_1B6E77050;
      *(void *)(v30 + 32) = v21;
      uint64_t v31 = v21[2];
      swift_bridgeObjectRetain();
      char v32 = sub_1B68C3500(0, v31, 1, v3);
      uint64_t v33 = v32;
      char v4 = v59;
      if (v21[2])
      {
        unint64_t v34 = (unint64_t)&v32[4 * v32[2] + 4];
        if ((unint64_t)(v21 + 4) < v34 + 32 * v31 && v34 < (unint64_t)&v21[4 * v31 + 4])
        {
          while (1)
          {
LABEL_82:
            swift_release();
LABEL_83:
            sub_1B6E32C88();
            __break(1u);
          }
        }
        swift_arrayInitWithCopy();
        if (v31) {
          v33[2] += v31;
        }
      }
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
      swift_arrayDestroy();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v4 = sub_1B68C3618(0, v59[2] + 1, 1, v59);
      }
      unint64_t v37 = v4[2];
      unint64_t v36 = v4[3];
      if (v37 >= v36 >> 1) {
        char v4 = sub_1B68C3618(v36 > 1, v37 + 1, 1, v4);
      }
      uint64_t v2 = v58 + 1;
      _OWORD v4[2] = v37 + 1;
      v4[v37 + 4] = v33;
    }
    while (v58 + 1 != v57);
    swift_bridgeObjectRelease();
    uint64_t v38 = v4[2];
    if (v38) {
      goto LABEL_53;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    char v4 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v38 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v38)
    {
LABEL_53:
      swift_bridgeObjectRetain();
      uint64_t v39 = 0;
      __int16 v40 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        uint64_t v41 = v4;
        uint64_t v42 = v4[v39 + 4];
        uint64_t v43 = *(void *)(v42 + 16);
        uint64_t v44 = v40[2];
        uint64_t v45 = v44 + v43;
        swift_bridgeObjectRetain();
        int v46 = swift_isUniquelyReferenced_nonNull_native();
        if (v46 && v45 <= v40[3] >> 1)
        {
          if (*(void *)(v42 + 16)) {
            goto LABEL_63;
          }
        }
        else
        {
          if (v44 <= v45) {
            uint64_t v47 = v44 + v43;
          }
          else {
            uint64_t v47 = v44;
          }
          __int16 v40 = sub_1B68C3500(v46, v47, 1, v40);
          if (*(void *)(v42 + 16))
          {
LABEL_63:
            unint64_t v48 = (unint64_t)&v40[4 * v40[2] + 4];
            if (v42 + 32 < v48 + 32 * v43 && v48 < v42 + 32 + 32 * v43) {
              goto LABEL_83;
            }
            swift_arrayInitWithCopy();
            if (v43) {
              v40[2] += v43;
            }
          }
        }
        swift_bridgeObjectRelease();
        ++v39;
        char v4 = v41;
        if (v38 == v39)
        {
          swift_bridgeObjectRelease();
          goto LABEL_73;
        }
      }
    }
  }
  __int16 v40 = (void *)MEMORY[0x1E4FBC860];
LABEL_73:
  swift_bridgeObjectRelease();
  sub_1B67C5060();
  uint64_t v50 = swift_initStackObject();
  *(_OWORD *)(v50 + 16) = xmmword_1B6E77050;
  *(void *)(v50 + 32) = v40;
  uint64_t v51 = v40[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1B68C3500(0, v51, 1, MEMORY[0x1E4FBC860]);
  uint64_t v53 = v52;
  if (v40[2])
  {
    unint64_t v54 = (unint64_t)&v52[4 * v52[2] + 4];
    if ((unint64_t)(v40 + 4) < v54 + 32 * v51 && v54 < (unint64_t)&v40[4 * v51 + 4]) {
      goto LABEL_83;
    }
    swift_arrayInitWithCopy();
    if (v51) {
      v53[2] += v51;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  return v53;
}

uint64_t sub_1B67B84A4()
{
  sub_1B67C5060();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &unk_1F0F62FE0;
  *(void *)(inited + 40) = &unk_1F0F62FA0;
  uint64_t v1 = qword_1F0F62FF0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B68C3500(0, v1, 1, MEMORY[0x1E4FBC860]);
  uint64_t v3 = v2;
  if (qword_1F0F62FF0)
  {
    unint64_t v4 = (unint64_t)&v2[4 * v2[2] + 4];
    if (v4 + 32 * v1 > (unint64_t)&unk_1F0F63000 && v4 < (unint64_t)&unk_1F0F63000 + 32 * v1) {
      goto LABEL_24;
    }
    swift_arrayInitWithCopy();
    if (v1) {
      v3[2] += v1;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(inited + 40);
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = v3[2];
  unint64_t v9 = v3[3];
  swift_bridgeObjectRetain();
  if (v8 + v7 > (uint64_t)(v9 >> 1))
  {
    if (v8 <= v8 + v7) {
      uint64_t v13 = v8 + v7;
    }
    else {
      uint64_t v13 = v8;
    }
    uint64_t v3 = sub_1B68C3500(1, v13, 1, v3);
    if (!*(void *)(v6 + 16)) {
      goto LABEL_18;
    }
  }
  else if (!v7)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
    return (uint64_t)v3;
  }
  unint64_t v10 = (unint64_t)&v3[4 * v3[2] + 4];
  if (v6 + 32 >= v10 + 32 * v7 || v10 >= v6 + 32 + 32 * v7)
  {
    swift_arrayInitWithCopy();
    if (v7) {
      v3[2] += v7;
    }
    goto LABEL_18;
  }
LABEL_24:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B67B86EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B6D493C0(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1B67B79C8(4);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  sub_1B67C5060();
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = 0;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E85730;
  *(void *)(inited + 32) = &unk_1F0F630E0;
  *(void *)(inited + 40) = &unk_1F0F63060;
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = &unk_1F0F630A0;
  uint64_t v9 = qword_1F0F630F0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1B68C3500(0, v9, 1, MEMORY[0x1E4FBC860]);
  char v11 = v10;
  if (qword_1F0F630F0)
  {
    unint64_t v12 = (unint64_t)&v10[4 * v10[2] + 4];
    if (v12 + 32 * v9 > (unint64_t)&unk_1F0F63100 && v12 < (unint64_t)&unk_1F0F63100 + 32 * v9) {
      goto LABEL_43;
    }
    swift_arrayInitWithCopy();
    if (v9) {
      v11[2] += v9;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(inited + 40);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = v11[2];
  unint64_t v17 = v11[3];
  swift_bridgeObjectRetain();
  if (v16 + v15 > (uint64_t)(v17 >> 1))
  {
    if (v16 <= v16 + v15) {
      uint64_t v30 = v16 + v15;
    }
    else {
      uint64_t v30 = v16;
    }
    char v11 = sub_1B68C3500(1, v30, 1, v11);
    if (!*(void *)(v14 + 16)) {
      goto LABEL_15;
    }
  }
  else if (!v15)
  {
    goto LABEL_15;
  }
  unint64_t v18 = (unint64_t)&v11[4 * v11[2] + 4];
  if (v14 + 32 < v18 + 32 * v15 && v18 < v14 + 32 + 32 * v15) {
    goto LABEL_43;
  }
  swift_arrayInitWithCopy();
  if (v15) {
    v11[2] += v15;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(inited + 48);
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v21 = v11[2];
  unint64_t v22 = v11[3];
  swift_bridgeObjectRetain();
  if (v21 + v20 > (uint64_t)(v22 >> 1))
  {
    if (v21 <= v21 + v20) {
      uint64_t v31 = v21 + v20;
    }
    else {
      uint64_t v31 = v21;
    }
    char v11 = sub_1B68C3500(1, v31, 1, v11);
    if (!*(void *)(v19 + 16)) {
      goto LABEL_21;
    }
  }
  else if (!v20)
  {
    goto LABEL_21;
  }
  unint64_t v23 = (unint64_t)&v11[4 * v11[2] + 4];
  if (v19 + 32 < v23 + 32 * v20 && v23 < v19 + 32 + 32 * v20) {
    goto LABEL_43;
  }
  swift_arrayInitWithCopy();
  if (v20) {
    v11[2] += v20;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(inited + 56);
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v26 = v11[2];
  unint64_t v27 = v11[3];
  swift_bridgeObjectRetain();
  if (v26 + v25 > (uint64_t)(v27 >> 1))
  {
    if (v26 <= v26 + v25) {
      uint64_t v32 = v26 + v25;
    }
    else {
      uint64_t v32 = v26;
    }
    char v11 = sub_1B68C3500(1, v32, 1, v11);
    if (!*(void *)(v24 + 16)) {
      goto LABEL_27;
    }
  }
  else if (!v25)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
    return (uint64_t)v11;
  }
  unint64_t v28 = (unint64_t)&v11[4 * v11[2] + 4];
  if (v24 + 32 >= v28 + 32 * v25 || v28 >= v24 + 32 + 32 * v25)
  {
    swift_arrayInitWithCopy();
    if (v25) {
      v11[2] += v25;
    }
    goto LABEL_27;
  }
LABEL_43:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

void *sub_1B67B8B34(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1B6641B88(v1);
  uint64_t v63 = *(void *)(a1 + 16);
  if (v63)
  {
    uint64_t v2 = 0;
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v64 = v2;
      uint64_t v65 = v4;
      uint64_t v5 = *(void *)(*(void *)(a1 + 32 + 40 * v2) + 16);
      if (v5)
      {
        uint64_t v6 = swift_bridgeObjectRetain() + 40;
        uint64_t v7 = v3;
        uint64_t v8 = v3;
        do
        {
          swift_bridgeObjectRetain();
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
          uint64_t v9 = swift_allocObject();
          *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
          *(void *)(v9 + 32) = 2236539;
          unint64_t v10 = v9 + 32;
          *(void *)(v9 + 40) = 0xE300000000000000;
          sub_1B67C5060();
          *(void *)(v9 + 48) = 0;
          *(void *)(v9 + 56) = 0;
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
          *(void *)(inited + 32) = v9;
          uint64_t v12 = *(void *)(v9 + 16);
          swift_bridgeObjectRetain();
          uint64_t v13 = sub_1B68C3500(0, v12, 1, v7);
          uint64_t v14 = v13;
          if (*(void *)(v9 + 16))
          {
            unint64_t v15 = (unint64_t)&v13[4 * v13[2] + 4];
            if (v10 < v15 + 32 * v12 && v15 < v10 + 32 * v12) {
              goto LABEL_96;
            }
            swift_arrayInitWithCopy();
            if (v12) {
              v14[2] += v12;
            }
          }
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
          swift_arrayDestroy();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1B68C3618(0, v8[2] + 1, 1, v8);
          }
          unint64_t v18 = v8[2];
          unint64_t v17 = v8[3];
          if (v18 >= v17 >> 1) {
            uint64_t v8 = sub_1B68C3618(v17 > 1, v18 + 1, 1, v8);
          }
          v6 += 16;
          v8[2] = v18 + 1;
          v8[v18 + 4] = v14;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease();
        uint64_t v3 = v7;
        uint64_t v19 = v8[2];
        if (v19)
        {
LABEL_19:
          swift_bridgeObjectRetain();
          uint64_t v20 = 0;
          uint64_t v21 = v3;
          while (1)
          {
            uint64_t v22 = v8[v20 + 4];
            uint64_t v23 = *(void *)(v22 + 16);
            uint64_t v24 = v21[2];
            uint64_t v25 = v24 + v23;
            swift_bridgeObjectRetain();
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (isUniquelyReferenced_nonNull_native && v25 <= v21[3] >> 1)
            {
              if (*(void *)(v22 + 16)) {
                goto LABEL_29;
              }
            }
            else
            {
              if (v24 <= v25) {
                uint64_t v27 = v24 + v23;
              }
              else {
                uint64_t v27 = v24;
              }
              uint64_t v21 = sub_1B68C3500(isUniquelyReferenced_nonNull_native, v27, 1, v21);
              if (*(void *)(v22 + 16))
              {
LABEL_29:
                unint64_t v28 = (unint64_t)&v21[4 * v21[2] + 4];
                if (v22 + 32 < v28 + 32 * v23 && v28 < v22 + 32 + 32 * v23) {
                  goto LABEL_97;
                }
                swift_arrayInitWithCopy();
                if (v23) {
                  v21[2] += v23;
                }
              }
            }
            swift_bridgeObjectRelease();
            if (v19 == ++v20)
            {
              swift_bridgeObjectRelease();
              goto LABEL_39;
            }
          }
        }
      }
      else
      {
        uint64_t v8 = v3;
        uint64_t v19 = v3[2];
        if (v19) {
          goto LABEL_19;
        }
      }
      uint64_t v21 = v3;
LABEL_39:
      swift_bridgeObjectRelease();
      sub_1B67C5060();
      uint64_t v30 = swift_initStackObject();
      *(_OWORD *)(v30 + 16) = xmmword_1B6E77050;
      *(void *)(v30 + 32) = v21;
      uint64_t v31 = v21[2];
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1B68C3500(0, v31, 1, v3);
      uint64_t v33 = v32;
      if (v21[2])
      {
        unint64_t v34 = (unint64_t)&v32[4 * v32[2] + 4];
        if ((unint64_t)(v21 + 4) < v34 + 32 * v31 && v34 < (unint64_t)&v21[4 * v31 + 4])
        {
          while (1)
          {
LABEL_96:
            swift_release();
LABEL_97:
            sub_1B6E32C88();
            __break(1u);
          }
        }
        swift_arrayInitWithCopy();
        if (v31) {
          v33[2] += v31;
        }
      }
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
      swift_arrayDestroy();
      uint64_t v4 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1B68C3618(0, v65[2] + 1, 1, v65);
      }
      unint64_t v37 = v4[2];
      unint64_t v36 = v4[3];
      if (v37 >= v36 >> 1) {
        uint64_t v4 = sub_1B68C3618(v36 > 1, v37 + 1, 1, v4);
      }
      uint64_t v2 = v64 + 1;
      _OWORD v4[2] = v37 + 1;
      v4[v37 + 4] = v33;
    }
    while (v64 + 1 != v63);
    swift_bridgeObjectRelease();
    uint64_t v38 = v4[2];
    if (v38) {
      goto LABEL_53;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v38 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v38)
    {
LABEL_53:
      swift_bridgeObjectRetain();
      uint64_t v39 = 0;
      __int16 v40 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        uint64_t v41 = v4[v39 + 4];
        uint64_t v42 = *(void *)(v41 + 16);
        uint64_t v43 = v40[2];
        uint64_t v44 = v43 + v42;
        swift_bridgeObjectRetain();
        int v45 = swift_isUniquelyReferenced_nonNull_native();
        if (v45 && v44 <= v40[3] >> 1)
        {
          if (*(void *)(v41 + 16)) {
            goto LABEL_63;
          }
        }
        else
        {
          if (v43 <= v44) {
            uint64_t v46 = v43 + v42;
          }
          else {
            uint64_t v46 = v43;
          }
          __int16 v40 = sub_1B68C3500(v45, v46, 1, v40);
          if (*(void *)(v41 + 16))
          {
LABEL_63:
            unint64_t v47 = (unint64_t)&v40[4 * v40[2] + 4];
            if (v41 + 32 < v47 + 32 * v42 && v47 < v41 + 32 + 32 * v42) {
              goto LABEL_97;
            }
            swift_arrayInitWithCopy();
            if (v42) {
              v40[2] += v42;
            }
          }
        }
        swift_bridgeObjectRelease();
        if (v38 == ++v39)
        {
          swift_bridgeObjectRelease();
          goto LABEL_73;
        }
      }
    }
  }
  __int16 v40 = (void *)MEMORY[0x1E4FBC860];
LABEL_73:
  swift_bridgeObjectRelease();
  sub_1B67C5060();
  uint64_t v49 = swift_initStackObject();
  *(_OWORD *)(v49 + 16) = xmmword_1B6E76B30;
  *(void *)(v49 + 32) = v40;
  *(void *)(v49 + 40) = &unk_1F0F63020;
  uint64_t v50 = v40[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_1B68C3500(0, v50, 1, MEMORY[0x1E4FBC860]);
  uint64_t v52 = v51;
  if (v40[2])
  {
    unint64_t v53 = (unint64_t)&v51[4 * v51[2] + 4];
    if ((unint64_t)(v40 + 4) < v53 + 32 * v50 && v53 < (unint64_t)&v40[4 * v50 + 4]) {
      goto LABEL_97;
    }
    swift_arrayInitWithCopy();
    if (v50) {
      v52[2] += v50;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v55 = *(void *)(v49 + 40);
  uint64_t v56 = *(void *)(v55 + 16);
  uint64_t v57 = v52[2];
  unint64_t v58 = v52[3];
  swift_bridgeObjectRetain();
  if (v57 + v56 > (uint64_t)(v58 >> 1))
  {
    if (v57 <= v57 + v56) {
      uint64_t v62 = v57 + v56;
    }
    else {
      uint64_t v62 = v57;
    }
    uint64_t v52 = sub_1B68C3500(1, v62, 1, v52);
    if (!*(void *)(v55 + 16)) {
      goto LABEL_90;
    }
  }
  else if (!v56)
  {
    goto LABEL_90;
  }
  unint64_t v59 = (unint64_t)&v52[4 * v52[2] + 4];
  if (v55 + 32 < v59 + 32 * v56 && v59 < v55 + 32 + 32 * v56) {
    goto LABEL_97;
  }
  swift_arrayInitWithCopy();
  if (v56) {
    v52[2] += v56;
  }
LABEL_90:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  return v52;
}

uint64_t sub_1B67B93D4(char a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = sub_1B67B1DFC(a1);
  if (!v2)
  {
    uint64_t v7 = v6;
    uint64_t v3 = *(void *)(v6 + 16);
    sub_1B67B0EFC();
    if (qword_1E9DCC498 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void *)(v1 + 16);
    uint64_t v8 = *(void **)(v1 + 24);
    uint64_t v10 = *(void *)(v4 + 32);
    type metadata accessor for SwiftScriptCodeGen();
    swift_initStackObject();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B67BB6D0(v9, v8, v10);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1B67B1DFC(a1 & 1);
    swift_release();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6D493A8(v7, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6D48E78(0x72746E655F786676, 0xEB00000000745F79);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6D493D8(v7, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v13 = swift_retain();
    sub_1B6D493F0(v13);
    swift_release();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B67C5300(v7);
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t type metadata accessor for CScriptCodeGen()
{
  return self;
}

uint64_t sub_1B67B96D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X6>, unsigned __int8 a7@<W7>, void *a8@<X8>)
{
  int v9 = a7;
  sub_1B67BC3E4(a1, a2, a3, a4);
  if (!v9)
  {
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
  }
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B67B79C8(4);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1B67B79C8(4);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = a6;
  uint64_t v53 = *(void *)(a6 + 16);
  if (v53)
  {
    sub_1B67B79C8(4);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = a6 + 40;
    do
    {
      unint64_t v13 = *(void *)(v12 - 8);
      if (v13 != 0xF000000000000000)
      {
        sub_1B62C6AA8(v13);
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B68EC9E4(v13);
        if ((sub_1B6A94630(v14, 2u) & 1) == 0) {
          sub_1B68EC9E4(v13);
        }
        sub_1B6E33B48();
        swift_bridgeObjectRetain();
        char v15 = sub_1B6E319F8();
        swift_bridgeObjectRelease();
        if (v15)
        {
          sub_1B6E318F8();
          sub_1B6E31868();
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B67B79C8(4);
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B62C6A70(v13);
        swift_bridgeObjectRelease();
      }
      ++v11;
      v12 += 32;
    }
    while (v53 != v11);
    uint64_t v10 = a6;
    swift_bridgeObjectRelease();
    if (a5) {
      goto LABEL_15;
    }
LABEL_17:
    uint64_t v16 = 4;
    goto LABEL_18;
  }
  sub_1B6E31948();
  if ((a5 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_15:
  sub_1B67B79C8(4);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v16 = 8;
LABEL_18:
  sub_1B6E31948();
  sub_1B67B79C8(v16);
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  if (!v53)
  {
    sub_1B67B79C8(v16);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    if (a5) {
      goto LABEL_92;
    }
    goto LABEL_93;
  }
  uint64_t v51 = v16;
  uint64_t v17 = v16 + 4;
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  uint64_t v19 = (unsigned char *)(v10 + 40);
  do
  {
    unint64_t v20 = *((void *)v19 - 1);
    char v21 = *v19;
    unint64_t v22 = v20 >> 60;
    if (v20 == 0xF000000000000000 && v22 == 15)
    {
      sub_1B6E31948();
      goto LABEL_21;
    }
    if (v22 == 9)
    {
      swift_retain_n();
      char v24 = sub_1B68EB40C(v20);
      sub_1B62C6A70(v20);
      if ((v24 & 1) == 0)
      {
        swift_retain();
        uint64_t v25 = sub_1B6E32738();
        uint64_t result = swift_conformsToProtocol2();
        if (!result)
        {
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
          return result;
        }
        sub_1B62CD84C(v25);
        sub_1B62C6A70(v20);
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B68EC9E4(v20);
        if ((sub_1B6A94630(v27, 2u) & 1) == 0) {
          sub_1B68EC9E4(v20);
        }
        uint64_t v17 = v16 + 4;
        sub_1B6C82C84();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
    }
    else
    {
      sub_1B62C6AA8(v20);
    }
    sub_1B62C6AA8(v20);
    sub_1B68EB40C(v20);
    sub_1B62C6A70(v20);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
LABEL_35:
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B68EC9E4(v20);
    if ((sub_1B6A94630(v28, 2u) & 1) != 0 || (v21 & 2) == 0)
    {
      sub_1B68EC9E4(v20);
      sub_1B6A94630(v29, 2u);
    }
LABEL_21:
    v19 += 32;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B67B79C8(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B62C6A70(v20);
    swift_bridgeObjectRelease();
    ++v18;
  }
  while (v53 != v18);
  uint64_t v30 = a6;
  swift_bridgeObjectRelease();
  sub_1B67B79C8(v16);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v31 = 0;
  uint64_t v32 = 32;
  uint64_t v48 = MEMORY[0x1E4FBC840] + 8;
  while (2)
  {
    unint64_t v33 = *(void *)(v30 + v32);
    unint64_t v34 = v33 >> 60;
    if (v33 >> 60 != 3 && v34 != 4)
    {
      if (v34 == 9)
      {
        uint64_t v35 = (__int16 *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 58);
        goto LABEL_47;
      }
      goto LABEL_41;
    }
    uint64_t v35 = (__int16 *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 66);
LABEL_47:
    __int16 v36 = *v35;
    if ((*v35 & 3) != 0)
    {
      sub_1B62C6AA8(*(void *)(v30 + v32));
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B68EC9E4(v33);
      uint64_t v38 = v37;
      if (!swift_dynamicCastMetatype())
      {
        type metadata accessor for frame_constants(0);
        if (!swift_dynamicCastMetatype())
        {
          if (swift_dynamicCastMetatype()
            || swift_dynamicCastMetatype()
            || swift_dynamicCastMetatype()
            || swift_dynamicCastMetatype()
            || swift_dynamicCastMetatype()
            || !swift_dynamicCastMetatype()
            && !swift_dynamicCastMetatype()
            && (sub_1B67C5BBC(0, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve), !swift_dynamicCastMetatype())&& (swift_dynamicCastMetatype()|| v38 != v48&& !swift_dynamicCastMetatype()&& (type metadata accessor for __vfx_sampler1d(0), !swift_dynamicCastMetatype())&& (type metadata accessor for __vfx_sampler2d(0), !swift_dynamicCastMetatype())&& (type metadata accessor for __vfx_sampler3d(0), !swift_dynamicCastMetatype())&& (swift_conformsToProtocol2() ? (uint64_t v47 = v38) : (uint64_t v47 = 0), !v47)))
          {
            sub_1B68EC9E4(v33);
          }
        }
      }
      if (v34 == 9)
      {
        if ((*(_WORD *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x3A) & 0x80) != 0)
        {
          if ((*(unsigned char *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x38) & 1) == 0) {
            goto LABEL_69;
          }
        }
        else
        {
          if ((*(unsigned char *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x38) & 1) == 0) {
            goto LABEL_69;
          }
          uint64_t v49 = *(void *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
          sub_1B62C6AA8(v33);
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v39 = sub_1B6E32738();
          if (swift_conformsToProtocol2()) {
            uint64_t v40 = v39;
          }
          else {
            uint64_t v40 = 0;
          }
          if (!v40) {
            goto LABEL_71;
          }
          uint64_t v41 = sub_1B6E32738();
          uint64_t result = swift_conformsToProtocol2();
          if (!result) {
            goto LABEL_98;
          }
          if (sub_1B62CA808(v41))
          {
            uint64_t v42 = sub_1B6E32738();
            uint64_t result = swift_conformsToProtocol2();
            if (!result) {
              goto LABEL_99;
            }
            uint64_t v43 = sub_1B62CD84C(v42);
            sub_1B62CB508(v49, v49);
            uint64_t v45 = v44;
            swift_release();
            swift_bridgeObjectRelease();
            sub_1B62C6A70(v33);
            if (v43 == v45)
            {
LABEL_69:
              swift_retain();
              uint64_t v46 = sub_1B6E32738();
              uint64_t result = swift_conformsToProtocol2();
              if (!result)
              {
                __break(1u);
                goto LABEL_97;
              }
              sub_1B62CD84C(v46);
              sub_1B62C6A70(v33);
              sub_1B6E328C8();
              sub_1B6E31948();
              sub_1B6E33098();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              sub_1B6E31948();
              sub_1B6E33098();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              goto LABEL_73;
            }
          }
          else
          {
LABEL_71:
            swift_release();
            swift_bridgeObjectRelease();
            sub_1B62C6A70(v33);
          }
        }
      }
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
LABEL_73:
      sub_1B6E31948();
      uint64_t v30 = a6;
      if ((v36 & 1) != 0 || (v36 & 2) != 0)
      {
        sub_1B6E31948();
        sub_1B67B79C8(v51);
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B62C6A70(v33);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1B62C6A70(v33);
      }
      swift_release();
      swift_bridgeObjectRelease();
    }
LABEL_41:
    ++v31;
    v32 += 32;
    if (v53 != v31) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = v51;
  if ((a5 & 1) == 0) {
    goto LABEL_93;
  }
LABEL_92:
  v16 -= 4;
  sub_1B67B79C8(v16);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
LABEL_93:
  sub_1B67B79C8(v16 - 4);
  sub_1B6E31948();
  uint64_t result = swift_bridgeObjectRelease();
  *a8 = &unk_1F0F7AB30;
  a8[1] = 0;
  a8[2] = 0xE000000000000000;
  a8[3] = 11565;
  a8[4] = 0xE200000000000000;
  return result;
}

uint64_t sub_1B67BA894(char a1)
{
  uint64_t v3 = sub_1B67B1DFC(a1);
  if (!v2)
  {
    uint64_t v4 = v3;
    sub_1B67B0EFC();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B67C57E0(v4);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v1 = *(void *)(v4 + 16);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t type metadata accessor for SwiftScriptCodeGen()
{
  return self;
}

uint64_t sub_1B67BA970(uint64_t a1, uint64_t a2)
{
  sub_1B63BCE08(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B67BAA04(uint64_t a1)
{
  sub_1B63BCE08(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B67BAA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScriptIndex();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B67BAAF4(int a1, void *a2, uint64_t a3)
{
  int v110 = a1;
  uint64_t v5 = sub_1B6E30AB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v118 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v108 - v11;
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)&v108 - v15;
  MEMORY[0x1F4188790](v17, v18);
  unint64_t v20 = (char *)&v108 - v19;
  sub_1B6E30A58();
  sub_1B6E30A28();
  sub_1B6E30A68();
  uint64_t v114 = v6;
  uint64_t v21 = v6 + 8;
  unint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v116 = v12;
  v22(v12, v5);
  uint64_t v117 = v16;
  uint64_t v120 = v21;
  uint64_t v121 = v5;
  uint64_t v119 = v22;
  v22(v16, v5);
  uint64_t v122 = a2;
  uint64_t v123 = a3;
  unint64_t v23 = sub_1B633AF88();
  uint64_t v109 = v20;
  unint64_t v115 = v23;
  uint64_t v24 = sub_1B6E325E8();
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v26 = MEMORY[0x1E4FBC860];
  if (v25)
  {
    uint64_t v27 = (uint64_t *)(v24 + 40);
    uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v33 = *(v27 - 1);
      uint64_t v32 = *v27;
      uint64_t v34 = HIBYTE(*v27) & 0xF;
      if ((*v27 & 0x2000000000000000) == 0) {
        uint64_t v34 = v33 & 0xFFFFFFFFFFFFLL;
      }
      if (v34)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v122 = v28;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1B6C3C3B8(0, v28[2] + 1, 1);
          uint64_t v28 = v122;
        }
        unint64_t v30 = v28[2];
        unint64_t v29 = v28[3];
        if (v30 >= v29 >> 1)
        {
          sub_1B6C3C3B8(v29 > 1, v30 + 1, 1);
          uint64_t v28 = v122;
        }
        v28[2] = v30 + 1;
        uint64_t v31 = &v28[2 * v30];
        v31[4] = v33;
        v31[5] = v32;
      }
      v27 += 2;
      --v25;
    }
    while (v25);
  }
  else
  {
    uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  int64_t v36 = v28[2];
  if (!v36) {
    goto LABEL_24;
  }
  unint64_t v37 = v28[5];
  uint64_t v38 = v28[4] & 0xFFFFFFFFFFFFLL;
  if ((v37 & 0x2000000000000000) != 0) {
    uint64_t v38 = HIBYTE(v37) & 0xF;
  }
  if (v38)
  {
    uint64_t v126 = v26;
    sub_1B6C3C3B8(0, v36, 0);
    float32x4_t v111 = v28;
    uint64_t v112 = (void (**)(char *, char *, uint64_t))(v114 + 32);
    uint64_t v39 = v28 + 5;
    uint64_t v40 = v117;
    do
    {
      uint64_t v41 = *v39;
      uint64_t v122 = (void *)*(v39 - 1);
      uint64_t v123 = v41;
      swift_bridgeObjectRetain();
      uint64_t v42 = v116;
      sub_1B6E30AA8();
      uint64_t v43 = v118;
      sub_1B6E30A48();
      sub_1B6E30A98();
      uint64_t v44 = v121;
      uint64_t v45 = v119;
      v119(v43, v121);
      sub_1B6E30A78();
      (*v112)(v40, v42, v44);
      uint64_t v46 = MEMORY[0x1E4FBB1A0];
      uint64_t v47 = sub_1B6E325E8();
      v45(v40, v44);
      uint64_t v122 = (void *)v47;
      sub_1B67C5C0C(0, (unint64_t *)&qword_1EB9802F0, v46, MEMORY[0x1E4FBB320]);
      uint64_t v49 = v48;
      unint64_t v113 = sub_1B6646D3C();
      uint64_t v114 = v49;
      uint64_t v50 = sub_1B6E31638();
      uint64_t v52 = v51;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v53 = (void *)v126;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3C3B8(0, v53[2] + 1, 1);
        uint64_t v53 = (void *)v126;
      }
      unint64_t v55 = v53[2];
      unint64_t v54 = v53[3];
      if (v55 >= v54 >> 1)
      {
        sub_1B6C3C3B8(v54 > 1, v55 + 1, 1);
        uint64_t v53 = (void *)v126;
      }
      v39 += 2;
      v53[2] = v55 + 1;
      uint64_t v56 = &v53[2 * v55];
      v56[4] = v50;
      v56[5] = v52;
      --v36;
    }
    while (v36);
    swift_release();
    uint64_t v58 = v53[2];
    unint64_t v59 = (void *)MEMORY[0x1E4FBC860];
    if (v58)
    {
      int64_t v60 = v53 + 5;
      int v61 = (char *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v66 = *(v60 - 1);
        uint64_t v65 = *v60;
        uint64_t v67 = HIBYTE(*v60) & 0xF;
        if ((*v60 & 0x2000000000000000) == 0) {
          uint64_t v67 = v66 & 0xFFFFFFFFFFFFLL;
        }
        if (v67)
        {
          swift_bridgeObjectRetain();
          char v68 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v122 = v61;
          if ((v68 & 1) == 0)
          {
            sub_1B6C3C3B8(0, *((void *)v61 + 2) + 1, 1);
            int v61 = (char *)v122;
          }
          unint64_t v63 = *((void *)v61 + 2);
          unint64_t v62 = *((void *)v61 + 3);
          if (v63 >= v62 >> 1)
          {
            sub_1B6C3C3B8(v62 > 1, v63 + 1, 1);
            int v61 = (char *)v122;
          }
          *((void *)v61 + 2) = v63 + 1;
          uint64_t v64 = &v61[16 * v63];
          *((void *)v64 + 4) = v66;
          *((void *)v64 + 5) = v65;
        }
        v60 += 2;
        --v58;
      }
      while (v58);
    }
    else
    {
      int v61 = (char *)MEMORY[0x1E4FBC860];
    }
    swift_release();
    uint64_t v128 = v59;
    sub_1B6C3C3B8(0, 0, 0);
    uint64_t v69 = v128;
    uint64_t v70 = *((void *)v61 + 2);
    if (v70)
    {
      swift_retain();
      uint64_t v71 = 0;
      uint64_t v118 = v61;
      do
      {
        uint64_t v72 = *(void *)&v61[v71 + 32];
        unint64_t v73 = *(void *)&v61[v71 + 40];
        if ((v110 & 1) != 0 || v71)
        {
          swift_bridgeObjectRetain();
          sub_1B6E318F8();
          sub_1B6E31A78();
          uint64_t v74 = sub_1B6E32518();
          unint64_t v76 = v75;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          uint64_t v77 = sub_1B6A04144();
          uint64_t v79 = v78;
          uint64_t v81 = v80;
          uint64_t v83 = v82;
          swift_bridgeObjectRelease();
          uint64_t v126 = v74;
          unint64_t v127 = v76;
          uint64_t v122 = (void *)v77;
          uint64_t v123 = v79;
          uint64_t v124 = v81;
          uint64_t v125 = v83;
          sub_1B678C2E8();
          swift_bridgeObjectRetain();
          sub_1B6E31928();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v72 = v126;
          unint64_t v73 = v127;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v128 = v69;
        unint64_t v85 = v69[2];
        unint64_t v84 = v69[3];
        if (v85 >= v84 >> 1)
        {
          sub_1B6C3C3B8(v84 > 1, v85 + 1, 1);
          uint64_t v69 = v128;
        }
        v69[2] = v85 + 1;
        uint64_t v86 = &v69[2 * v85];
        void v86[4] = v72;
        v86[5] = v73;
        v71 += 16;
        --v70;
        int v61 = v118;
      }
      while (v70);
      swift_release();
    }
    swift_release();
    uint64_t v122 = v69;
    uint64_t v87 = sub_1B6E31638();
    unint64_t v89 = v88;
    swift_release();
    uint64_t v90 = HIBYTE(v89) & 0xF;
    if ((v89 & 0x2000000000000000) == 0) {
      uint64_t v90 = v87 & 0xFFFFFFFFFFFFLL;
    }
    if (v90)
    {
      swift_bridgeObjectRetain();
      uint64_t v57 = v87;
      uint64_t v91 = v89;
      if (v110)
      {
        sub_1B67BB63C();
        swift_bridgeObjectRelease();
        uint64_t v92 = sub_1B6E32508();
        unint64_t v94 = v93;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v95 = sub_1B6A04144();
        uint64_t v97 = v96;
        uint64_t v99 = v98;
        uint64_t v101 = v100;
        swift_bridgeObjectRelease();
        uint64_t v126 = v92;
        unint64_t v127 = v94;
        uint64_t v122 = (void *)v95;
        uint64_t v123 = v97;
        uint64_t v124 = v99;
        uint64_t v125 = v101;
        sub_1B678C2E8();
        swift_bridgeObjectRetain();
        sub_1B6E31928();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v57 = v126;
        uint64_t v91 = v127;
      }
      sub_1B6E31A48();
      char v102 = sub_1B6E315E8();
      swift_bridgeObjectRelease();
      if (v102)
      {
        char v103 = sub_1B69EEF08(v87, v89, qword_1F0FAAE60);
        swift_arrayDestroy();
        swift_bridgeObjectRelease();
        if ((v103 & 1) == 0)
        {
          sub_1B6E31A48();
          char v104 = sub_1B6E315E8();
          swift_bridgeObjectRelease();
          if (v104)
          {
            char v105 = sub_1B69EEF08(v57, v91, qword_1F0FAAE60);
            swift_arrayDestroy();
            if ((v105 & 1) == 0)
            {
              v119(v109, v121);
              return v57;
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v122 = (void *)v57;
      uint64_t v123 = v91;
      uint64_t v126 = 95;
      unint64_t v127 = 0xE100000000000000;
      uint64_t v126 = sub_1B6E31A68();
      unint64_t v127 = v106;
      sub_1B6E31928();
      uint64_t v57 = v126;
      v119(v109, v121);
      swift_bridgeObjectRelease();
      return v57;
    }
    v119(v109, v121);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_24:
    v119(v109, v121);
    swift_release();
  }
  return 0;
}

uint64_t sub_1B67BB4AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v5 = *(void *)(a1 + 8 * v3 + 32);
    uint64_t v6 = *(void *)(v5 + 16);
    uint64_t v7 = v4[2];
    uint64_t v8 = v7 + v6;
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v8 <= v4[3] >> 1)
    {
      if (!*(void *)(v5 + 16)) {
        goto LABEL_3;
      }
    }
    else
    {
      if (v7 <= v8) {
        uint64_t v10 = v7 + v6;
      }
      else {
        uint64_t v10 = v7;
      }
      uint64_t v4 = sub_1B68C3500(isUniquelyReferenced_nonNull_native, v10, 1, v4);
      if (!*(void *)(v5 + 16)) {
        goto LABEL_3;
      }
    }
    unint64_t v11 = (unint64_t)&v4[4 * v4[2] + 4];
    if (v5 + 32 < v11 + 32 * v6 && v11 < v5 + 32 + 32 * v6)
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
    if (v6) {
      v4[2] += v6;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    ++v3;
  }
  while (v1 != v3);
  swift_bridgeObjectRelease();
  return (uint64_t)v4;
}

uint64_t sub_1B67BB63C()
{
  sub_1B6E318F8();

  return sub_1B6E31A78();
}

uint64_t sub_1B67BB6D0(uint64_t a1, void *a2, uint64_t a3)
{
  _OWORD v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1B67BAAF4(0, a2, a3);
  if (v7)
  {
    v3[5] = v6;
    v3[6] = v7;
    return (uint64_t)v3;
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B67BB7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  if (a5)
  {
    sub_1B633AF88();
    if ((sub_1B6E32678() & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E32618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E32618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E32618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((a6 & 1) == 0) {
        return a1;
      }
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a6)
  {
LABEL_4:
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B633AF88();
    sub_1B6E32618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1B67BBC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t *a9@<X8>, char a10)
{
  uint64_t v65 = a7;
  uint64_t v71 = a3;
  uint64_t v72 = a4;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  if ((_BYTE)a8)
  {
    if (a8 == 1) {
      uint64_t v16 = 0x746E656D67617266;
    }
    else {
      uint64_t v16 = 0x5F657475706D6F63;
    }
    if (a8 == 1) {
      uint64_t v17 = 0xEF737475706E695FLL;
    }
    else {
      uint64_t v17 = 0xEE00737475706E69;
    }
  }
  else
  {
    uint64_t v17 = 0xED0000737475706ELL;
    uint64_t v16 = 0x695F786574726576;
  }
  swift_bridgeObjectRetain();
  _OWORD v59[2] = v16;
  uint64_t v64 = v17;
  sub_1B6D48860(v16, v17, a6);
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  unint64_t v63 = a9;
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  int v62 = a5;
  if ((_BYTE)a8)
  {
    if (a8 != 1)
    {
      uint64_t v66 = 0xE400000000000000;
      uint64_t v18 = 1684631414;
LABEL_19:
      uint64_t v24 = 0x786574726576;
      swift_bridgeObjectRelease();
      char v22 = 1;
      uint64_t v23 = v65;
      goto LABEL_20;
    }
    uint64_t v66 = 0xEC00000074756F5FLL;
    sub_1B6D48878(0x746E656D67617266, 0xEC00000074756F5FLL);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v18 = 0x746E656D67617266;
  }
  else
  {
    uint64_t v66 = 0xE200000000000000;
    uint64_t v18 = 28521;
  }
  char v19 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_16:
    char v22 = 1;
    uint64_t v23 = v65;
LABEL_17:
    uint64_t v24 = 0x786574726576;
    goto LABEL_20;
  }
  if (!(_BYTE)a8) {
    goto LABEL_19;
  }
  char v21 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_16;
  }
  uint64_t v23 = v65;
  uint64_t v52 = *(void *)(v65 + 16);
  if (!v52)
  {
    char v22 = 0;
    goto LABEL_17;
  }
  uint64_t v53 = (unint64_t *)(v65 + 32);
  uint64_t v24 = 0x786574726576;
  char v22 = 1;
  while (2)
  {
    unint64_t v55 = *v53;
    v53 += 4;
    unint64_t v54 = v55;
    switch(v55 >> 60)
    {
      case 8uLL:
        uint64_t v56 = v54 & 0xFFFFFFFFFFFFFFFLL;
        if (*(unsigned char *)(v56 + 32) != 2 || *(_OWORD *)(v56 + 16) != 0) {
          goto LABEL_63;
        }
        goto LABEL_73;
      case 9uLL:
        break;
      case 0xDuLL:
        uint64_t v57 = v54 & 0xFFFFFFFFFFFFFFFLL;
        if (*(unsigned char *)(v57 + 48) != 5 || *(unsigned char *)(v57 + 16) != 9) {
          goto LABEL_63;
        }
        goto LABEL_73;
      case 0xFuLL:
        if (v54 != 0xF000000000000008) {
          goto LABEL_63;
        }
LABEL_73:
        char v22 = 1;
        break;
      default:
LABEL_63:
        if (--v52) {
          continue;
        }
        char v22 = 0;
        break;
    }
    break;
  }
LABEL_20:
  uint64_t v25 = *(void *)(v23 + 16);
  if (v25)
  {
    uint64_t v26 = (unint64_t *)(v23 + 32);
    do
    {
      unint64_t v28 = *v26;
      v26 += 4;
      unint64_t v27 = v28;
      if (v28 >> 60 == 13)
      {
        uint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFLL;
        uint64_t v30 = *(void *)((v27 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        int v31 = *(unsigned __int8 *)(v29 + 48);
        BOOL v32 = ((1 << v31) & 0x3B) == 0 && v31 == 2;
        if (v32 && v30 == 0) {
          break;
        }
      }
      --v25;
    }
    while (v25);
  }
  if ((_BYTE)a8)
  {
    if (a8 == 1) {
      uint64_t v34 = 0xEC000000746E656DLL;
    }
    else {
      uint64_t v34 = 0xEB00000000657475;
    }
    if (a8 == 1) {
      uint64_t v35 = 0x676172665F786676;
    }
    else {
      uint64_t v35 = 0x706D6F635F786676;
    }
    if (a8 == 1) {
      uint64_t v24 = 0x746E656D67617266;
    }
    else {
      uint64_t v24 = 0x6C656E72656BLL;
    }
    if (a8 == 1) {
      uint64_t v36 = 0xE800000000000000;
    }
    else {
      uint64_t v36 = 0xE600000000000000;
    }
  }
  else
  {
    uint64_t v36 = 0xE600000000000000;
    uint64_t v34 = 0xEA00000000007865;
    uint64_t v35 = 0x747265765F786676;
  }
  v59[1] = v59;
  if (a10) {
    unint64_t v37 = (void *)MEMORY[0x1E4FBC860];
  }
  else {
    unint64_t v37 = &unk_1F0F78250;
  }
  MEMORY[0x1F4188790](v35, v20);
  unint64_t v38 = v66;
  uint64_t v69 = sub_1B6D48890(v39, v34, v18, v66, v24, v36, (uint64_t)v37, (uint64_t (*)(uint64_t))sub_1B67BDD08);
  uint64_t v70 = v40;
  sub_1B6E31948();
  uint64_t v67 = 0;
  unint64_t v68 = 0xE000000000000000;
  char v41 = v62 & 1;
  int v62 = a8;
  uint64_t v42 = sub_1B67C2D6C(v22, a8, v41, v65, (void *)v18, v38, v60, v61);
  uint64_t v43 = *(void *)(v42 + 16);
  if (v43)
  {
    uint64_t v44 = v42 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      char v45 = sub_1B6E31A08();
      swift_bridgeObjectRelease();
      if ((v45 & 1) == 0) {
        sub_1B6E31948();
      }
      v44 += 32;
      --v43;
    }
    while (v43);
  }
  swift_bridgeObjectRelease();
  sub_1B67B79C8(4);
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B67C5C0C(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B6E77050;
  if ((_BYTE)v62)
  {
    uint64_t v47 = v63;
    if (v62 == 1)
    {
      uint64_t v48 = 0x676172665F786676;
      unint64_t v49 = 0xEC000000746E656DLL;
    }
    else
    {
      uint64_t v48 = 0x706D6F635F786676;
      unint64_t v49 = 0xEB00000000657475;
    }
  }
  else
  {
    unint64_t v49 = 0xEA00000000007865;
    uint64_t v47 = v63;
    uint64_t v48 = 0x747265765F786676;
  }
  *(void *)(result + 32) = v48;
  *(void *)(result + 40) = v49;
  uint64_t v50 = v71;
  uint64_t v51 = v72;
  *uint64_t v47 = result;
  v47[1] = v50;
  v47[2] = v51;
  v47[3] = 11565;
  v47[4] = 0xE200000000000000;
  return result;
}

uint64_t sub_1B67BC3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B633AF88();
  swift_bridgeObjectRetain();
  if (sub_1B6E32678())
  {
    swift_bridgeObjectRetain();
    if (!a4) {
      return a1;
    }
    uint64_t v6 = a1;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  uint64_t v6 = a1;
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E32618();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E32618();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_1B67BC6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, void **a7)
{
  uint64_t v71 = a1;
  uint64_t v72 = a7;
  LODWORD(v73) = a6;
  sub_1B63BCE08(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (uint64_t *)((char *)&v63 - v16);
  uint64_t v18 = type metadata accessor for GraphScript(0);
  double v20 = MEMORY[0x1F4188790](v18, v19);
  uint64_t v76 = (uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = *(unsigned __int8 *)(a4 + 24);
  char v23 = (*(uint64_t (**)(double))(*a5 + 104))(v20);
  uint64_t v24 = 0x6C6174656DLL;
  if (v22 != 1) {
    uint64_t v24 = 0x7466697773;
  }
  if (v22) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = 99;
  }
  if (v22) {
    unint64_t v26 = 0xE500000000000000;
  }
  else {
    unint64_t v26 = 0xE100000000000000;
  }
  uint64_t v74 = v17;
  if (v23)
  {
    unint64_t v27 = 0xE500000000000000;
    if (v23 == 1) {
      uint64_t v28 = 0x6C6174656DLL;
    }
    else {
      uint64_t v28 = 0x7466697773;
    }
  }
  else
  {
    unint64_t v27 = 0xE100000000000000;
    uint64_t v28 = 99;
  }
  if (v25 == v28 && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v29 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      return;
    }
  }
  sub_1B67C5C70(a4, v76, type metadata accessor for GraphScript);
  unint64_t v30 = a5[5];
  unint64_t v69 = a5[6];
  unint64_t v70 = v30;
  swift_retain();
  uint64_t v31 = sub_1B62DE2C8(a3);
  swift_release();
  sub_1B67BA970(a4 + *(int *)(v18 + 40), (uint64_t)v13);
  uint64_t v32 = type metadata accessor for ScriptIndex();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v13, 1, v32) == 1)
  {
    swift_retain();
    uint64_t v34 = sub_1B62DE2C8(a3);
    swift_release();
    uint64_t v35 = v74;
    *uint64_t v74 = v34;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v13);
  }
  else
  {
    uint64_t v35 = v74;
    sub_1B67BAA90((uint64_t)v13, (uint64_t)v74);
  }
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v32);
  unint64_t v37 = v75;
  uint64_t v36 = v76;
  uint64_t v38 = sub_1B68F179C(1, v77);
  if (v37)
  {
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v36, type metadata accessor for GraphScript);
    if (v73) {
      swift_willThrow();
    }
    else {
  }
    }
  else
  {
    uint64_t v73 = a3;
    uint64_t v65 = &v63;
    uint64_t v40 = v77[0];
    uint64_t v64 = v77[1];
    unint64_t v41 = v77[2];
    uint64_t v66 = v79;
    uint64_t v67 = v80;
    unint64_t v68 = v78;
    MEMORY[0x1F4188790](v38, v39);
    unint64_t v42 = v69;
    unint64_t v43 = v70;
    *(&v63 - 6) = v70;
    *(&v63 - 5) = v42;
    *((_DWORD *)&v63 - 8) = v31;
    *((_DWORD *)&v63 - 7) = v44;
    *(&v63 - 3) = 0x6870617267;
    *(&v63 - 2) = 0xE500000000000000;
    *(&v63 - 1) = (uint64_t)v35;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)(&v63 - 8), v40);
    unint64_t v75 = 0;
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_1B67AFBF8(v64, v41, v43, v42, v31, 0x6870617267uLL, 0xE500000000000000, (uint64_t)v35);
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v76, type metadata accessor for GraphScript);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v49 = sub_1B62DE2C8(v73);
    swift_release();
    v77[3] = (uint64_t)&type metadata for GraphScript.Info;
    uint64_t v78 = &off_1F0F55508;
    uint64_t v50 = sub_1B62C12C4(v77);
    *uint64_t v50 = sub_1B69035D0(v49);
    v50[1] = v51;
    void v50[2] = v52;
    v50[3] = v53;
    uint64_t v54 = off_1F0F55520();
    uint64_t v56 = v55;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v77);
    uint64_t v57 = v72;
    uint64_t v58 = *v72;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v57 = v58;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v58 = sub_1B68C33D4(0, v58[2] + 1, 1, v58);
      *uint64_t v57 = v58;
    }
    unint64_t v61 = v58[2];
    unint64_t v60 = v58[3];
    if (v61 >= v60 >> 1)
    {
      uint64_t v58 = sub_1B68C33D4(v60 > 1, v61 + 1, 1, v58);
      *uint64_t v57 = v58;
    }
    v58[2] = v61 + 1;
    int v62 = &v58[5 * v61];
    v62[4] = v45;
    v62[5] = v46;
    v62[6] = v48;
    v62[7] = v54;
    v62[8] = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1B67BCD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, void **a7)
{
  uint64_t v71 = a1;
  uint64_t v72 = a7;
  LODWORD(v73) = a6;
  sub_1B63BCE08(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (uint64_t *)((char *)&v63 - v16);
  uint64_t v18 = type metadata accessor for SimpleScript(0);
  double v20 = MEMORY[0x1F4188790](v18, v19);
  uint64_t v76 = (uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = *(unsigned __int8 *)(a4 + 32);
  char v23 = (*(uint64_t (**)(double))(*a5 + 104))(v20);
  uint64_t v24 = 0x6C6174656DLL;
  if (v22 != 1) {
    uint64_t v24 = 0x7466697773;
  }
  if (v22) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = 99;
  }
  if (v22) {
    unint64_t v26 = 0xE500000000000000;
  }
  else {
    unint64_t v26 = 0xE100000000000000;
  }
  uint64_t v74 = v17;
  if (v23)
  {
    unint64_t v27 = 0xE500000000000000;
    if (v23 == 1) {
      uint64_t v28 = 0x6C6174656DLL;
    }
    else {
      uint64_t v28 = 0x7466697773;
    }
  }
  else
  {
    unint64_t v27 = 0xE100000000000000;
    uint64_t v28 = 99;
  }
  if (v25 == v28 && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v29 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      return;
    }
  }
  sub_1B67C5C70(a4, v76, type metadata accessor for SimpleScript);
  unint64_t v30 = a5[5];
  unint64_t v69 = a5[6];
  unint64_t v70 = v30;
  swift_retain();
  uint64_t v31 = sub_1B62DE2C8(a3);
  swift_release();
  sub_1B67BA970(a4 + *(int *)(v18 + 36), (uint64_t)v13);
  uint64_t v32 = type metadata accessor for ScriptIndex();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v13, 1, v32) == 1)
  {
    swift_retain();
    uint64_t v34 = sub_1B62DE2C8(a3);
    swift_release();
    uint64_t v35 = v74;
    *uint64_t v74 = v34;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v13);
  }
  else
  {
    uint64_t v35 = v74;
    sub_1B67BAA90((uint64_t)v13, (uint64_t)v74);
  }
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v32);
  unint64_t v37 = v75;
  uint64_t v36 = v76;
  uint64_t v38 = sub_1B68F38B8(1, v77);
  if (v37)
  {
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v36, type metadata accessor for SimpleScript);
    if (v73) {
      swift_willThrow();
    }
    else {
  }
    }
  else
  {
    uint64_t v73 = a3;
    uint64_t v65 = &v63;
    uint64_t v40 = v77[0];
    uint64_t v64 = v77[1];
    unint64_t v41 = v77[2];
    uint64_t v66 = v79;
    uint64_t v67 = v80;
    unint64_t v68 = v78;
    MEMORY[0x1F4188790](v38, v39);
    unint64_t v42 = v69;
    unint64_t v43 = v70;
    *(&v63 - 6) = v70;
    *(&v63 - 5) = v42;
    *((_DWORD *)&v63 - 8) = v31;
    *((_DWORD *)&v63 - 7) = v44;
    *(&v63 - 3) = 0x656C706D6973;
    *(&v63 - 2) = 0xE600000000000000;
    *(&v63 - 1) = (uint64_t)v35;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)(&v63 - 8), v40);
    unint64_t v75 = 0;
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_1B67AFBF8(v64, v41, v43, v42, v31, 0x656C706D6973uLL, 0xE600000000000000, (uint64_t)v35);
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v76, type metadata accessor for SimpleScript);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v49 = sub_1B62DE2C8(v73);
    swift_release();
    v77[3] = (uint64_t)&type metadata for GraphScript.Info;
    uint64_t v78 = &off_1F0F55508;
    uint64_t v50 = sub_1B62C12C4(v77);
    *uint64_t v50 = sub_1B69035D0(v49);
    v50[1] = v51;
    void v50[2] = v52;
    v50[3] = v53;
    uint64_t v54 = off_1F0F55520();
    uint64_t v56 = v55;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v77);
    uint64_t v57 = v72;
    uint64_t v58 = *v72;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v57 = v58;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v58 = sub_1B68C33D4(0, v58[2] + 1, 1, v58);
      *uint64_t v57 = v58;
    }
    unint64_t v61 = v58[2];
    unint64_t v60 = v58[3];
    if (v61 >= v60 >> 1)
    {
      uint64_t v58 = sub_1B68C33D4(v60 > 1, v61 + 1, 1, v58);
      *uint64_t v57 = v58;
    }
    v58[2] = v61 + 1;
    int v62 = &v58[5 * v61];
    v62[4] = v45;
    v62[5] = v46;
    v62[6] = v48;
    v62[7] = v54;
    v62[8] = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1B67BD394(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5, void **a6)
{
  uint64_t v64 = a6;
  LODWORD(v65) = a5;
  sub_1B63BCE08(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (uint64_t *)((char *)&v60 - v15);
  uint64_t v17 = type metadata accessor for MetalFunctionScript(0);
  double v19 = MEMORY[0x1F4188790](v17, v18);
  uint64_t v68 = (uint64_t)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v21 = *(unsigned __int8 *)(a3 + 16);
  char v22 = (*(uint64_t (**)(double))(*a4 + 104))(v19);
  uint64_t v23 = 0x6C6174656DLL;
  if (v21 != 1) {
    uint64_t v23 = 0x7466697773;
  }
  if (v21) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 99;
  }
  if (v21) {
    unint64_t v25 = 0xE500000000000000;
  }
  else {
    unint64_t v25 = 0xE100000000000000;
  }
  uint64_t v66 = v16;
  if (v22)
  {
    unint64_t v26 = 0xE500000000000000;
    if (v22 == 1) {
      uint64_t v27 = 0x6C6174656DLL;
    }
    else {
      uint64_t v27 = 0x7466697773;
    }
  }
  else
  {
    unint64_t v26 = 0xE100000000000000;
    uint64_t v27 = 99;
  }
  uint64_t v28 = a2;
  if (v24 == v27 && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v29 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      return;
    }
  }
  sub_1B67C5C70(a3, v68, type metadata accessor for MetalFunctionScript);
  unint64_t v30 = a4[5];
  unint64_t v62 = a4[6];
  unint64_t v63 = v30;
  swift_retain();
  uint64_t v31 = sub_1B62DE2C8(v28);
  swift_release();
  sub_1B67BA970(a3 + *(int *)(v17 + 24), (uint64_t)v12);
  uint64_t v32 = type metadata accessor for ScriptIndex();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v12, 1, v32) == 1)
  {
    swift_retain();
    uint64_t v34 = sub_1B62DE2C8(v28);
    swift_release();
    uint64_t v35 = v66;
    *uint64_t v66 = v34;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v12);
  }
  else
  {
    uint64_t v35 = v66;
    sub_1B67BAA90((uint64_t)v12, (uint64_t)v66);
  }
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v32);
  unint64_t v37 = v67;
  uint64_t v36 = v68;
  uint64_t v38 = sub_1B68F4AE8(1, v69);
  if (v37)
  {
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v36, type metadata accessor for MetalFunctionScript);
    if (v65) {
      swift_willThrow();
    }
    else {
  }
    }
  else
  {
    uint64_t v65 = (uint64_t)&v60;
    uint64_t v41 = v69[0];
    uint64_t v40 = v69[1];
    unint64_t v42 = v69[2];
    unint64_t v60 = v70;
    uint64_t v61 = v28;
    MEMORY[0x1F4188790](v38, v39);
    unint64_t v44 = v62;
    unint64_t v43 = v63;
    *(&v60 - 6) = (_UNKNOWN **)v63;
    *(&v60 - 5) = (_UNKNOWN **)v44;
    *((_DWORD *)&v60 - 8) = v31;
    *((_DWORD *)&v60 - 7) = v45;
    *(&v60 - 3) = (_UNKNOWN **)0x6C656E72656BLL;
    *(&v60 - 2) = (_UNKNOWN **)0xE600000000000000;
    *(&v60 - 1) = (_UNKNOWN **)v35;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)(&v60 - 8), v41);
    uint64_t v67 = 0;
    swift_bridgeObjectRelease();
    uint64_t v65 = sub_1B67AFBF8(v40, v42, v43, v44, v31, 0x6C656E72656BuLL, 0xE600000000000000, (uint64_t)v35);
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v68, type metadata accessor for MetalFunctionScript);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1B62DE2C8(v61);
    swift_release();
    v69[3] = (uint64_t)&type metadata for MetalFunctionScript.Info;
    unint64_t v70 = &off_1F0F7CCD0;
    uint64_t v49 = sub_1B62C12C4(v69);
    strcpy((char *)v49, "Kernel Script");
    *((_WORD *)v49 + 7) = -4864;
    _OWORD v49[2] = 0xD00000000000001CLL;
    v49[3] = 0x80000001B6F36E30;
    strcpy((char *)v49 + 32, "Kernel Script");
    *((_WORD *)v49 + 23) = -4864;
    uint64_t v50 = off_1F0F7CCE8();
    uint64_t v52 = v51;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v69);
    uint64_t v53 = v64;
    uint64_t v54 = *v64;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v53 = v54;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v54 = sub_1B68C33D4(0, v54[2] + 1, 1, v54);
      *uint64_t v53 = v54;
    }
    unint64_t v57 = v54[2];
    unint64_t v56 = v54[3];
    if (v57 >= v56 >> 1)
    {
      uint64_t v54 = sub_1B68C33D4(v56 > 1, v57 + 1, 1, v54);
      *uint64_t v53 = v54;
    }
    _OWORD v54[2] = v57 + 1;
    uint64_t v58 = &v54[5 * v57];
    uint64_t v59 = v65;
    v58[4] = v46;
    v58[5] = v59;
    v58[6] = v48;
    v58[7] = v50;
    v58[8] = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B67BD9F0@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, void *a4@<X8>)
{
  uint64_t v4 = *(void **)a1;
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v5 = 0xD00000000000001DLL;
    }
    else {
      unint64_t v5 = 0xD000000000000017;
    }
    if (a2 == 1) {
      unint64_t v6 = 0x80000001B6F35940;
    }
    else {
      unint64_t v6 = 0x80000001B6F359A0;
    }
  }
  else
  {
    unint64_t v6 = 0x80000001B6F35940;
    unint64_t v5 = 0xD00000000000001DLL;
  }
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = 0x63617073656D616ELL;
  unint64_t v7 = 0xEA00000000002065;
  uint64_t v9 = v4[2];
  if (v9)
  {
    uint64_t v10 = 0;
    do
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1B6C16720(v4);
      }
      uint64_t v11 = &v4[v10];
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      void v11[4] = v5;
      v11[5] = v6;
      v10 += 2;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease();
  if (a3)
  {
    if (qword_1E9DCC498 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_1E9E492C0;
    unint64_t v18 = *(void *)algn_1E9E492C8;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v8 = v17;
    unint64_t v7 = v18;
  }
  *a4 = v4;
  a4[1] = v8;
  a4[2] = v7;
  a4[3] = v14;
  a4[4] = v15;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67BDD08()
{
  return sub_1B67B4670(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72), *(void *)(v0 + 80));
}

void sub_1B67BDD48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5, void **a6)
{
  unint64_t v62 = a6;
  LODWORD(v63) = a5;
  sub_1B63BCE08(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (uint64_t *)((char *)v59 - v15);
  uint64_t v17 = type metadata accessor for ShaderScript(0);
  double v19 = MEMORY[0x1F4188790](v17, v18);
  uint64_t v66 = (uint64_t)v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v21 = *(unsigned __int8 *)(a3 + 16);
  char v22 = (*(uint64_t (**)(double))(*a4 + 104))(v19);
  uint64_t v23 = 0x6C6174656DLL;
  if (v21 != 1) {
    uint64_t v23 = 0x7466697773;
  }
  if (v21) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 99;
  }
  if (v21) {
    unint64_t v25 = 0xE500000000000000;
  }
  else {
    unint64_t v25 = 0xE100000000000000;
  }
  uint64_t v64 = v16;
  if (v22)
  {
    unint64_t v26 = 0xE500000000000000;
    if (v22 == 1) {
      uint64_t v27 = 0x6C6174656DLL;
    }
    else {
      uint64_t v27 = 0x7466697773;
    }
  }
  else
  {
    unint64_t v26 = 0xE100000000000000;
    uint64_t v27 = 99;
  }
  if (v24 == v27 && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v28 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      return;
    }
  }
  sub_1B67C5C70(a3, v66, type metadata accessor for ShaderScript);
  uint64_t v29 = a4[5];
  unint64_t v60 = a4[6];
  uint64_t v61 = v29;
  swift_retain();
  uint64_t v30 = sub_1B62DE2C8(a2);
  swift_release();
  sub_1B67BA970(a3 + *(int *)(v17 + 24), (uint64_t)v12);
  uint64_t v31 = type metadata accessor for ScriptIndex();
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v12, 1, v31) == 1)
  {
    swift_retain();
    uint64_t v33 = sub_1B62DE2C8(a2);
    swift_release();
    uint64_t v34 = v64;
    *uint64_t v64 = v33;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v12);
  }
  else
  {
    uint64_t v34 = v64;
    sub_1B67BAA90((uint64_t)v12, (uint64_t)v64);
  }
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v31);
  uint64_t v36 = v65;
  uint64_t v35 = v66;
  uint64_t v37 = sub_1B68F5BA0(1, v67);
  if (v36)
  {
    sub_1B67BAA04((uint64_t)v34);
    sub_1B633A03C(v35, type metadata accessor for ShaderScript);
    if (v63) {
      swift_willThrow();
    }
    else {
  }
    }
  else
  {
    uint64_t v63 = (uint64_t)v59;
    uint64_t v39 = v67[0];
    unint64_t v40 = v67[2];
    _OWORD v59[2] = v69;
    void v59[3] = (uint64_t)v68;
    v59[0] = v67[1];
    v59[1] = v70;
    MEMORY[0x1F4188790](v37, v38);
    unint64_t v42 = v60;
    unint64_t v41 = v61;
    v59[-6] = v61;
    v59[-5] = v42;
    LODWORD(v59[-4]) = v30;
    HIDWORD(v59[-4]) = v43;
    v59[-3] = 0x726564616873;
    v59[-2] = 0xE600000000000000;
    v59[-1] = (uint64_t)v34;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)&v59[-8], v39);
    uint64_t v65 = 0;
    swift_bridgeObjectRelease();
    uint64_t v63 = sub_1B67AFBF8(v59[0], v40, v41, v42, v30, 0x726564616873uLL, 0xE600000000000000, (uint64_t)v34);
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v34);
    sub_1B633A03C(v66, type metadata accessor for ShaderScript);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1B62DE2C8(a2);
    swift_release();
    v67[3] = (uint64_t)&type metadata for ShaderScript.Info;
    uint64_t v68 = &off_1F0F5BF88;
    uint64_t v47 = sub_1B62C12C4(v67);
    *uint64_t v47 = sub_1B68F8054();
    v47[1] = v48;
    strcpy((char *)v47 + 16, "Shader Script");
    *((_WORD *)v47 + 15) = -4864;
    uint64_t v49 = off_1F0F5BFA0();
    uint64_t v51 = v50;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v67);
    uint64_t v52 = v62;
    uint64_t v53 = *v62;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v52 = v53;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v53 = sub_1B68C33D4(0, v53[2] + 1, 1, v53);
      *uint64_t v52 = v53;
    }
    unint64_t v56 = v53[2];
    unint64_t v55 = v53[3];
    if (v56 >= v55 >> 1)
    {
      uint64_t v53 = sub_1B68C33D4(v55 > 1, v56 + 1, 1, v53);
      *uint64_t v52 = v53;
    }
    v53[2] = v56 + 1;
    unint64_t v57 = &v53[5 * v56];
    uint64_t v58 = v63;
    v57[4] = v44;
    v57[5] = v58;
    v57[6] = v46;
    v57[7] = v49;
    v57[8] = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1B67BE3AC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, void *a5, int a6, void **a7)
{
  uint64_t v70 = a1;
  uint64_t v71 = a7;
  LODWORD(v72) = a6;
  sub_1B63BCE08(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (uint64_t *)((char *)&v62 - v16);
  uint64_t v18 = type metadata accessor for EmitterScript(0);
  double v20 = MEMORY[0x1F4188790](v18, v19);
  uint64_t v75 = (uint64_t)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = *a4;
  char v23 = (*(uint64_t (**)(double))(*a5 + 104))(v20);
  uint64_t v24 = 0x6C6174656DLL;
  if (v22 != 1) {
    uint64_t v24 = 0x7466697773;
  }
  if (v22) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = 99;
  }
  if (v22) {
    unint64_t v26 = 0xE500000000000000;
  }
  else {
    unint64_t v26 = 0xE100000000000000;
  }
  uint64_t v73 = v17;
  if (v23)
  {
    unint64_t v27 = 0xE500000000000000;
    if (v23 == 1) {
      uint64_t v28 = 0x6C6174656DLL;
    }
    else {
      uint64_t v28 = 0x7466697773;
    }
  }
  else
  {
    unint64_t v27 = 0xE100000000000000;
    uint64_t v28 = 99;
  }
  if (v25 == v28 && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v29 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      return;
    }
  }
  sub_1B67C5C70((uint64_t)a4, v75, type metadata accessor for EmitterScript);
  unint64_t v30 = a5[5];
  unint64_t v68 = a5[6];
  unint64_t v69 = v30;
  swift_retain();
  uint64_t v31 = sub_1B62DE2C8(a3);
  swift_release();
  sub_1B67BA970((uint64_t)&a4[*(int *)(v18 + 32)], (uint64_t)v13);
  uint64_t v32 = type metadata accessor for ScriptIndex();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v13, 1, v32) == 1)
  {
    swift_retain();
    uint64_t v34 = sub_1B62DE2C8(a3);
    swift_release();
    uint64_t v35 = v73;
    *uint64_t v73 = v34;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v13);
  }
  else
  {
    uint64_t v35 = v73;
    sub_1B67BAA90((uint64_t)v13, (uint64_t)v73);
  }
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v32);
  uint64_t v37 = v74;
  uint64_t v36 = v75;
  uint64_t v38 = sub_1B68F259C(1, v76);
  if (v37)
  {
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v36, type metadata accessor for EmitterScript);
    if (v72) {
      swift_willThrow();
    }
    else {
  }
    }
  else
  {
    uint64_t v72 = a3;
    uint64_t v64 = &v62;
    uint64_t v40 = v76[0];
    uint64_t v63 = v76[1];
    unint64_t v41 = v76[2];
    uint64_t v65 = v78;
    uint64_t v66 = v79;
    uint64_t v67 = v77;
    MEMORY[0x1F4188790](v38, v39);
    unint64_t v42 = v68;
    unint64_t v43 = v69;
    *(&v62 - 6) = v69;
    *(&v62 - 5) = v42;
    *((_DWORD *)&v62 - 8) = v31;
    *((_DWORD *)&v62 - 7) = v44;
    *(&v62 - 3) = 0x72657474696D65;
    *(&v62 - 2) = 0xE700000000000000;
    *(&v62 - 1) = (uint64_t)v35;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)(&v62 - 8), v40);
    uint64_t v74 = 0;
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_1B67AFBF8(v63, v41, v43, v42, v31, 0x72657474696D65uLL, 0xE700000000000000, (uint64_t)v35);
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    uint64_t v49 = v45;
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v75, type metadata accessor for EmitterScript);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v50 = sub_1B62DE2C8(v72);
    swift_release();
    v76[3] = (uint64_t)&type metadata for EmitterScript.Info;
    uint64_t v77 = &off_1F0F5EAC0;
    uint64_t v51 = sub_1B62C12C4(v76);
    *uint64_t v51 = sub_1B6904998(v50);
    v51[1] = v52;
    uint64_t v53 = off_1F0F5EAD8();
    uint64_t v55 = v54;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v76);
    unint64_t v56 = v71;
    unint64_t v57 = *v71;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v56 = v57;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v57 = sub_1B68C33D4(0, v57[2] + 1, 1, v57);
      *unint64_t v56 = v57;
    }
    unint64_t v60 = v57[2];
    unint64_t v59 = v57[3];
    if (v60 >= v59 >> 1)
    {
      unint64_t v57 = sub_1B68C33D4(v59 > 1, v60 + 1, 1, v57);
      *unint64_t v56 = v57;
    }
    v57[2] = v60 + 1;
    uint64_t v61 = &v57[5 * v60];
    v61[4] = v49;
    v61[5] = v46;
    v61[6] = v48;
    v61[7] = v53;
    uint64_t v61[8] = v55;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1B67BEA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, void **a7)
{
  uint64_t v71 = a1;
  uint64_t v72 = a7;
  LODWORD(v73) = a6;
  sub_1B63BCE08(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (uint64_t *)((char *)&v63 - v16);
  uint64_t v18 = type metadata accessor for TriggerScript(0);
  double v20 = MEMORY[0x1F4188790](v18, v19);
  uint64_t v76 = (uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = *(unsigned __int8 *)(a4 + 24);
  char v23 = (*(uint64_t (**)(double))(*a5 + 104))(v20);
  uint64_t v24 = 0x6C6174656DLL;
  if (v22 != 1) {
    uint64_t v24 = 0x7466697773;
  }
  if (v22) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = 99;
  }
  if (v22) {
    unint64_t v26 = 0xE500000000000000;
  }
  else {
    unint64_t v26 = 0xE100000000000000;
  }
  uint64_t v74 = v17;
  if (v23)
  {
    unint64_t v27 = 0xE500000000000000;
    if (v23 == 1) {
      uint64_t v28 = 0x6C6174656DLL;
    }
    else {
      uint64_t v28 = 0x7466697773;
    }
  }
  else
  {
    unint64_t v27 = 0xE100000000000000;
    uint64_t v28 = 99;
  }
  if (v25 == v28 && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v29 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      return;
    }
  }
  sub_1B67C5C70(a4, v76, type metadata accessor for TriggerScript);
  unint64_t v30 = a5[5];
  unint64_t v69 = a5[6];
  unint64_t v70 = v30;
  swift_retain();
  uint64_t v31 = sub_1B62DE2C8(a3);
  swift_release();
  sub_1B67BA970(a4 + *(int *)(v18 + 40), (uint64_t)v13);
  uint64_t v32 = type metadata accessor for ScriptIndex();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v13, 1, v32) == 1)
  {
    swift_retain();
    uint64_t v34 = sub_1B62DE2C8(a3);
    swift_release();
    uint64_t v35 = v74;
    *uint64_t v74 = v34;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v13);
  }
  else
  {
    uint64_t v35 = v74;
    sub_1B67BAA90((uint64_t)v13, (uint64_t)v74);
  }
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v32);
  uint64_t v37 = v75;
  uint64_t v36 = v76;
  uint64_t v38 = sub_1B68F179C(1, v77);
  if (v37)
  {
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v36, type metadata accessor for TriggerScript);
    if (v73) {
      swift_willThrow();
    }
    else {
  }
    }
  else
  {
    uint64_t v73 = a3;
    uint64_t v65 = &v63;
    uint64_t v40 = v77[0];
    uint64_t v64 = v77[1];
    unint64_t v41 = v77[2];
    uint64_t v66 = v79;
    uint64_t v67 = v80;
    unint64_t v68 = v78;
    MEMORY[0x1F4188790](v38, v39);
    unint64_t v42 = v69;
    unint64_t v43 = v70;
    *(&v63 - 6) = v70;
    *(&v63 - 5) = v42;
    *((_DWORD *)&v63 - 8) = v31;
    *((_DWORD *)&v63 - 7) = v44;
    *(&v63 - 3) = 0x72656767697274;
    *(&v63 - 2) = 0xE700000000000000;
    *(&v63 - 1) = (uint64_t)v35;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)(&v63 - 8), v40);
    uint64_t v75 = 0;
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_1B67AFBF8(v64, v41, v43, v42, v31, 0x72656767697274uLL, 0xE700000000000000, (uint64_t)v35);
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v76, type metadata accessor for TriggerScript);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v49 = sub_1B62DE2C8(v73);
    swift_release();
    v77[3] = (uint64_t)&type metadata for TriggerScript.Info;
    uint64_t v78 = &off_1F0F624B0;
    uint64_t v50 = sub_1B62C12C4(v77);
    *uint64_t v50 = sub_1B6904AA8(v49);
    v50[1] = v51;
    void v50[2] = v52;
    v50[3] = v53;
    uint64_t v54 = off_1F0F624C8();
    uint64_t v56 = v55;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v77);
    unint64_t v57 = v72;
    uint64_t v58 = *v72;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v57 = v58;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v58 = sub_1B68C33D4(0, v58[2] + 1, 1, v58);
      *unint64_t v57 = v58;
    }
    unint64_t v61 = v58[2];
    unint64_t v60 = v58[3];
    if (v61 >= v60 >> 1)
    {
      uint64_t v58 = sub_1B68C33D4(v60 > 1, v61 + 1, 1, v58);
      *unint64_t v57 = v58;
    }
    v58[2] = v61 + 1;
    uint64_t v62 = &v58[5 * v61];
    v62[4] = v45;
    v62[5] = v46;
    v62[6] = v48;
    v62[7] = v54;
    v62[8] = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}