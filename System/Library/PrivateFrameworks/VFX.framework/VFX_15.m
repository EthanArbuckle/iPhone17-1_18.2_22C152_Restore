void sub_1B6AFEFC8(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int v8;
  unsigned int v9;
  __int16 v10;
  long long v11;
  long long v12;
  void *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  long long v17;
  id v18;
  id v19;
  _OWORD v20[2];
  uint64_t v21;
  long long v22;

  v8 = *(unsigned __int16 *)(a1 + 32);
  v9 = *(unsigned __int16 *)(a1 + 34);
  v10 = sub_1B6AFECA0(*(void *)(a1 + 48));
  v11 = xmmword_1B6E50D30;
  v12 = 0uLL;
  if ((v10 & 0x100) != 0 || (v13 = *(void **)a1) == 0)
  {
    v16 = 0;
    v17 = 0uLL;
  }
  else
  {
    v14 = v10;
    v15 = *(void *)(a1 + 8);
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
    {
      swift_unknownObjectRelease();
      v16 = 0;
      v17 = 0uLL;
      v11 = xmmword_1B6E50D30;
      v12 = 0uLL;
    }
    else
    {
      v18 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      v19 = v13;
      swift_unknownObjectRelease();
      vfx_sampler2d_make((uint64_t)v18 + v15, v14, a2, a3 & 1, (uint64_t)v20, (int32x2_t)__PAIR64__(v9, v8));
      v12 = v20[0];
      v17 = v20[1];
      v16 = v21;
      v11 = v22;
    }
  }
  *(_OWORD *)a4 = v12;
  *(_OWORD *)(a4 + 16) = v17;
  *(void *)(a4 + 32) = v16;
  *(_OWORD *)(a4 + 40) = v11;
}

void sub_1B6AFF0F4(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int v8 = *(unsigned __int16 *)(a1 + 32);
  __int16 v9 = sub_1B6AFECA0(*(void *)(a1 + 48));
  long long v10 = 0uLL;
  if ((v9 & 0x100) != 0 || (v11 = *(void **)a1) == 0)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 1;
  }
  else
  {
    char v12 = v9;
    uint64_t v13 = *(void *)(a1 + 8);
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
    {
      swift_unknownObjectRelease();
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 1;
      long long v10 = 0uLL;
    }
    else
    {
      id v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v18 = v11;
      swift_unknownObjectRelease();
      vfx_sampler1d_make((uint64_t)v17 + v13, v8, v12, a2, a3 & 1, (uint64_t)&v19);
      long long v10 = v19;
      uint64_t v14 = v20;
      uint64_t v16 = v21;
      uint64_t v15 = v22;
    }
  }
  *(_OWORD *)a4 = v10;
  *(void *)(a4 + 16) = v14;
  *(void *)(a4 + 24) = v16;
  *(void *)(a4 + 32) = v15;
}

void sub_1B6AFF208(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int v8 = *(unsigned __int16 *)(a1 + 32);
  unsigned int v9 = *(unsigned __int16 *)(a1 + 34);
  __int32 v10 = *(unsigned __int16 *)(a1 + 36);
  __int16 v11 = sub_1B6AFECA0(*(void *)(a1 + 48));
  long long v12 = xmmword_1B6E4F270;
  if ((v11 & 0x100) != 0 || (uint64_t v13 = *(void **)a1) == 0)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
  }
  else
  {
    char v14 = v11;
    uint64_t v15 = *(void *)(a1 + 8);
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
    {
      swift_unknownObjectRelease();
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      long long v12 = xmmword_1B6E4F270;
    }
    else
    {
      id v26 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v27 = v13;
      swift_unknownObjectRelease();
      v28.i64[0] = __PAIR64__(v9, v8);
      v28.i32[2] = v10;
      vfx_sampler3d_make((uint64_t)v26 + v15, v14, a2, a3 & 1, (uint64_t)v29, v28);
      uint64_t v16 = v29[0];
      uint64_t v17 = v29[1];
      uint64_t v18 = v29[2];
      uint64_t v19 = v29[3];
      uint64_t v20 = v29[4];
      uint64_t v21 = v29[5];
      uint64_t v22 = v29[6];
      uint64_t v23 = v29[7];
      long long v12 = v30;
      uint64_t v24 = v31;
      uint64_t v25 = v32;
    }
  }
  *(void *)a4 = v16;
  *(void *)(a4 + 8) = v17;
  *(void *)(a4 + 16) = v18;
  *(void *)(a4 + 24) = v19;
  *(void *)(a4 + 32) = v20;
  *(void *)(a4 + 40) = v21;
  *(void *)(a4 + 48) = v22;
  *(void *)(a4 + 56) = v23;
  *(_OWORD *)(a4 + 64) = v12;
  *(void *)(a4 + 80) = v24;
  *(void *)(a4 + 88) = v25;
}

uint64_t sub_1B6AFF38C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(a2 + 8))(v2 + 24, 0, ObjectType, a2);
}

double sub_1B6AFF3E4@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1B6E98660;
  *(_DWORD *)(a1 + 16) = 0;
  double result = NAN;
  *(void *)(a1 + 20) = 0xFFFFFFFF000000FFLL;
  *(_DWORD *)(a1 + 28) = 0;
  return result;
}

double sub_1B6AFF404@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6B034B0(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1B6AFF440(void *a1)
{
  sub_1B698B528(0, &qword_1E9DD1BC0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  unsigned int v9 = &v12[-v8];
  long long v10 = v1[1];
  long long v14 = *v1;
  long long v15 = v10;
  uint64_t result = sub_1B6891ED0(a1, (uint64_t)&v12[-v8]);
  if (!v2)
  {
    uint64_t v13 = *((void *)&v15 + 1);
    v12[7] = 12;
    sub_1B6657A10();
    sub_1B6E32FA8();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

double sub_1B6AFF588()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB997A18;
  int v4 = 0;
  char v5 = 2;
  uint64_t v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  swift_retain();
  sub_1B663E878((uint64_t)v1);
  swift_release();
  double result = *(double *)v1;
  xmmword_1E9E495E8 = v1[0];
  unk_1E9E495F8 = v1[1];
  qword_1E9E49608 = v2;
  return result;
}

uint64_t *sub_1B6AFF634(uint64_t a1, uint64_t a2)
{
  if (qword_1E9DCC580 != -1) {
    swift_once();
  }
  v51[0] = xmmword_1E9E495E8;
  v51[1] = unk_1E9E495F8;
  uint64_t v52 = qword_1E9E49608;
  uint64_t v5 = a2 & 0xFFFFFFFFFFLL;
  sub_1B62C9DA8(a1, (uint64_t)v51, a2 & 0xFFFFFFFFFFLL, v37);
  double result = (uint64_t *)sub_1B62CA210((uint64_t)v37, (uint64_t)v38, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v38[0])
  {
    long long v45 = v38[0];
    long long v46 = v38[1];
    uint64_t v47 = v39;
    if (v44 >= 1)
    {
      uint64_t v31 = v41;
      if (v41)
      {
        uint64_t v29 = v40;
        uint64_t v7 = v43[4];
        int i = *(unsigned __int8 *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v36 = v43;
        id v26 = v43 + 8;
        uint64_t v27 = (uint64_t)(v43 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v9 = 0;
        int v28 = i;
        uint64_t v30 = v7;
        uint64_t v25 = v2;
        do
        {
          long long v10 = (unsigned int *)(v29 + 48 * v9);
          uint64_t v33 = *v10;
          uint64_t v32 = v10[1];
          uint64_t v11 = *((void *)v10 + 3);
          uint64_t v13 = *((void *)v10 + 4);
          uint64_t v12 = *((void *)v10 + 5);
          v34 = (uint64_t *)*((void *)v10 + 2);
          uint64_t v35 = v9;
          if (i)
          {
            long long v14 = *(os_unfair_lock_s **)(v12 + 376);
            swift_retain();
            os_unfair_lock_lock(v14);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v7);
          sub_1B62CA210(v27, (uint64_t)v50, &qword_1EB97DE20);
          uint64_t v15 = v36[4];
          uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v12 + 40) + 16) + 32) + 16) + 1;
          uint64_t v17 = v12;
          swift_retain();
          v36[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
          v36[7] = v16;
          v26[1] = 0;
          v26[2] = 0;
          *id v26 = 0;
          swift_release();
          uint64_t v18 = sub_1B62C9024((uint64_t)&type metadata for ParticleMeshCollider, (uint64_t)&off_1F0F81550, v34, v11, v13, (uint64_t)v36);
          uint64_t v19 = v17;
          uint64_t v20 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v34, v11, v13, (uint64_t)v36);
          uint64_t v21 = (float32x2_t *)v20;
          if (v34)
          {
            for (int i = v28; v13; --v13)
            {
              sub_1B6B02C54(v18, v21, v25, a1, v5);
              v21 += 8;
              v18 += 32;
            }
          }
          else
          {
            int i = v28;
            if (v33 != v32)
            {
              uint64_t v22 = v32 - v33;
              uint64_t v23 = (float32x2_t *)(v20 + (v33 << 6));
              uint64_t v24 = v18 + 32 * v33;
              do
              {
                sub_1B6B02C54(v24, v23, v25, a1, v5);
                v23 += 8;
                v24 += 32;
                --v22;
              }
              while (v22);
            }
          }
          v48[0] = v45;
          v48[1] = v46;
          uint64_t v49 = v47;
          sub_1B6345178(v36, (unsigned __int16 **)v48, (uint64_t)v50);
          sub_1B634507C((char *)v19);
          uint64_t v7 = v30;
          ecs_stack_allocator_pop_snapshot(v30);
          if (i)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 376));
          }
          swift_release();
          uint64_t v9 = v35 + 1;
        }
        while (v35 + 1 != v31);
        sub_1B632F170(v37);
      }
    }
    return sub_1B632F170(v37);
  }
  return result;
}

uint64_t sub_1B6AFFA3C(long long *a1, float32x4_t *a2, uint64_t a3, unint64_t a4, uint64_t a5, float a6, float32x4_t a7, float32x4_t a8, float32x4_t a9, float32x4_t a10, float32x4_t a11, float32x4_t a12, float32x4_t a13, uint64_t a14, uint64_t a15, uint64_t a16, float32x4_t a17, float32x4_t a18, float32x4_t a19, float32x4_t a20)
{
  uint64_t v778 = *MEMORY[0x1E4F143B8];
  uint64_t v23 = (uint64_t *)*((void *)a1 + 11);
  uint64_t v24 = *((void *)a1 + 12);
  uint64_t v25 = *((void *)a1 + 13);
  uint64_t v26 = *((void *)a1 + 1);
  uint64_t v27 = *((void *)a1 + 2);
  uint64_t v715 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v23, v24, v25, v27);
  uint64_t v714 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v23, v24, v25, v27);
  uint64_t v700 = sub_1B67A819C();
  char v29 = v28;
  uint64_t v703 = sub_1B63459F8();
  char v711 = v30;
  float32x4_t v757 = *a2;
  long long v771 = a1[6];
  long long v31 = a1[4];
  long long v770 = a1[5];
  long long v769 = v31;
  long long v32 = a1[2];
  long long v768 = a1[3];
  long long v33 = a1[1];
  long long v765 = *a1;
  long long v766 = v33;
  v759.i64[0] = (uint64_t)&off_1F0F7C560;
  uint64_t v34 = a2[1].i64[0];
  v758.i64[1] = (uint64_t)&type metadata for CollisionProperties;
  v758.i64[0] = v34;
  uint64_t v720 = a3;
  uint64_t v35 = *(void *)(a3 + 16);
  v761[1] = 0;
  v761[0] = 0;
  long long v767 = v32;
  uint64_t v36 = *((void *)a1 + 6);
  uint64_t v37 = *((void *)a1 + 7);
  uint64_t v38 = *(void *)(v27 + 32);
  swift_retain();
  v772 = ecs_stack_allocator_allocate(v38, 8 * (v37 - v36), 8);
  uint64_t v773 = v37 - v36;
  uint64_t v774 = 0;
  sub_1B62C1550((uint64_t)&v757, (uint64_t)v762);
  float v763 = a6;
  v762[5] = v35;
  sub_1B6345398(*(void *)(v26 + 40), (uint64_t)&type metadata for Anchored, &v756);
  char v764 = v756;
  swift_retain();
  uint64_t v39 = ecs_stack_allocator_allocate(v38, 80 * (v37 - v36), 16);
  swift_release();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v757);
  uint64_t v713 = v37;
  v775 = v39;
  uint64_t v776 = v37 - v36;
  uint64_t v777 = 0;
  if (v37 != v36)
  {
    uint64_t v41 = v36;
    int v712 = v29 & 1;
    float v710 = *(float *)(v720 + 80) * 0.5;
    float32x4_t v699 = vmlaq_f32(vmlaq_f32(vmulq_f32(a20, (float32x4_t)0), (float32x4_t)0, a19), (float32x4_t)0, a18);
    float32x4_t v42 = vmulq_f32(v699, v699);
    v42.i64[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v42, 2), vaddq_f32(v42, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v42.f32, 1))).u64[0];
    int32x4_t v43 = vdupq_lane_s32(*(int32x2_t *)v42.f32, 0);
    v43.i32[3] = 0;
    int32x4_t v44 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v42.f32[0] != 0.0)), 0x1FuLL));
    v44.i32[3] = 0;
    int8x16_t v697 = (int8x16_t)vcltzq_s32(v44);
    float32x4_t v698 = (float32x4_t)v43;
    while (1)
    {
      v724 = (float32x4_t *)(v714 + 16 * v41);
      float32x4_t v46 = vmulq_n_f32(*v724, a6);
      v723 = (float32x4_t *)(v715 + 16 * v41);
      float32x4_t v47 = vsubq_f32(*v723, v46);
      float32x4_t v48 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(a10, a9, v47, 2), a8, *(float32x2_t *)v47.f32, 1), a7, v47.f32[0]);
      float32x4_t v49 = v48;
      v49.i32[3] = v755.i32[3];
      float32x4_t v755 = v49;
      float32x4_t v50 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(a9, v46, 2), a8, *(float32x2_t *)v46.f32, 1), a7, v46.f32[0]);
      float32x4_t v51 = v50;
      v51.i32[3] = v738.i32[3];
      float32x4_t v738 = v51;
      if ((*(_DWORD *)(v720 + 80) & 0x7FFFFFFF) == 0) {
        break;
      }
      __asm { FMOV            V0.4S, #1.0 }
      float32x4_t v744 = v48;
      float32x4_t v746 = _Q0;
      float32x4_t v748 = v50;
      uint64_t v722 = v41;
      if (v711)
      {
        float32x4_t v62 = _Q0;
        v62.i32[3] = v709;
        float32x4_t v750 = v62;
      }
      else
      {
        float32x4_t v750 = *(float32x4_t *)(v703 + 16 * v41);
      }
      uint64_t v63 = sub_1B6A565A8(0);
      if (!v63) {
        goto LABEL_466;
      }
      v66 = (uint16x4_t *)v63;
      uint64_t v67 = v64;
      uint64_t v68 = v65;
      float v69 = v710 * fmaxf(fmaxf(v750.f32[0], v750.f32[2]), v750.f32[1]);
      if (v64 != 30)
      {
        __asm { FMOV            V0.4S, #-1.0 }
        float32x4_t v741 = _Q0;
        uint64_t v344 = swift_slowAlloc();
        uint64_t v348 = v344;
        uint64_t v349 = *(void *)(a5 + 48);
        if (!v349)
        {
          float32x4_t v351 = v748;
          goto LABEL_270;
        }
        if (unint64_t)(v67 - 9) < 0x2D && ((0x1C01805FFC09uLL >> (v67 - 9)))
        {
          v350 = (_DWORD *)(v344 + 8);
          float32x4_t v351 = v748;
          do
          {
            switch(v67)
            {
              case 9:
                *(double *)v345.i64 = sub_1B6748838(v66->i32[0]);
                float32x4_t v351 = v748;
                break;
              case 12:
                *(uint32x2_t *)v358.i8 = vshl_u32((uint32x2_t)vdup_n_s32(v66->i32[0]), (uint32x2_t)0x1000000018);
                v358.i32[2] = v66->i32[0] << 8;
                v358.i32[3] = v66->i32[0];
                v346.i16[1] = v746.i16[1];
                float32x4_t v345 = vminnmq_f32(vmaxnmq_f32(vmulq_f32(vcvtq_f32_s32(vshrq_n_s32(v358, 0x18uLL)), (float32x4_t)vdupq_n_s32(0x3C010204u)), v741), v746);
                break;
              case 19:
                v345.i16[0] = v66->i16[0];
                v362.f32[0] = (float)v345.u32[0];
                v346.i16[0] = v66->i16[1];
                v362.f32[1] = (float)v346.u32[0];
                *(int32x2_t *)v346.f32 = vdup_n_s32(0x37800080u);
                *(float32x2_t *)v345.f32 = vmul_f32(v362, *(float32x2_t *)v346.f32);
                break;
              case 20:
                v345.i16[0] = v66->i16[0];
                v346.i16[0] = v66->i16[1];
                v346.f32[0] = (float)v346.u32[0];
                v347.i16[0] = v66->i16[2];
                v360.i32[3] = 0;
                v360.f32[0] = (float)v345.u32[0];
                v360.i32[1] = v346.i32[0];
                v360.f32[2] = (float)v347.u32[0];
                float32x4_t v345 = vmulq_f32(v360, (float32x4_t)vdupq_n_s32(0x37800080u));
                break;
              case 21:
                float32x4_t v356 = vcvtq_f32_u32(vmovl_u16(*v66));
                unsigned int v357 = 931135616;
                goto LABEL_225;
              case 22:
                v359.i32[0] = v66->i16[0];
                v359.i32[1] = v66->i16[1];
                *(int32x2_t *)v346.f32 = vdup_n_s32(0x38000100u);
                *(float32x2_t *)v345.f32 = vmul_f32(vadd_f32((float32x2_t)vadd_s32(v359, vdup_n_s32(0x4B400000u)), (float32x2_t)vdup_n_s32(0xCB400000)), *(float32x2_t *)v346.f32);
                break;
              case 23:
                v363.i32[0] = v66->i32[0];
                v363.i32[1] = v66->u16[2];
                float32x4_t v364 = (float32x4_t)vaddw_s16(vdupq_n_s32(0x4B400000u), v363);
                goto LABEL_224;
              case 24:
                float32x4_t v364 = (float32x4_t)vaddw_s16(vdupq_n_s32(0x4B400000u), (int16x4_t)*v66);
LABEL_224:
                float32x4_t v356 = vaddq_f32(v364, (float32x4_t)vdupq_n_s32(0xCB400000));
                unsigned int v357 = 939524352;
LABEL_225:
                float32x4_t v346 = (float32x4_t)vdupq_n_s32(v357);
                float32x4_t v345 = vmulq_f32(v356, v346);
                break;
              case 25:
                float v751 = sub_1B64D90E0(v66->u16[0]);
                v345.f32[0] = sub_1B64D90E0(v66->u16[1]);
                float32x4_t v351 = v748;
                v347.i16[1] = HIWORD(v751);
                v346.i16[1] = v345.i16[1];
                v345.i32[2] = 0;
                v345.i64[0] = __PAIR64__(v345.u32[0], LODWORD(v751));
                break;
              case 26:
                v367.i32[0] = v66->u16[0];
                v367.i32[1] = v66->u16[1];
                v367.i64[1] = v66->u16[2];
                v368.i64[0] = 0x8000000080000000;
                v368.i64[1] = 0x8000000080000000;
                int8x16_t v369 = vandq_s8((int8x16_t)vshlq_n_s32(v367, 0x10uLL), v368);
                int8x16_t v370 = (int8x16_t)vshlq_n_s32(v367, 0xDuLL);
                float32x4_t v346 = (float32x4_t)vorrq_s8(v369, vandq_s8(v370, (int8x16_t)vdupq_n_s32(0x7FE000u)));
                v347.i64[0] = 0x3800000038000000;
                v347.i64[1] = 0x3800000038000000;
                float32x4_t v345 = (float32x4_t)vorrq_s8((int8x16_t)v346, (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v370, (int8x16_t)vdupq_n_s32(0xF800000u)), (int32x4_t)v347));
                break;
              case 27:
                v352.i64[0] = 0x8000000080000000;
                v352.i64[1] = 0x8000000080000000;
                int8x16_t v353 = (int8x16_t)vshll_n_u16(*v66, 0xDuLL);
                int8x16_t v354 = vorrq_s8(vandq_s8((int8x16_t)vmovl_s16((int16x4_t)*v66), v352), vandq_s8(v353, (int8x16_t)vdupq_n_s32(0x7FE000u)));
                int8x16_t v347 = (int8x16_t)vdupq_n_s32(0xF800000u);
                int32x4_t v355 = (int32x4_t)vorrq_s8(vandq_s8(v353, v347), v354);
                v346.i64[0] = 0x3800000038000000;
                v346.i64[1] = 0x3800000038000000;
                float32x4_t v345 = (float32x4_t)vaddq_s32(v355, (int32x4_t)v346);
                break;
              case 28:
                v345.i32[0] = v66->i32[0];
                break;
              case 29:
                *(uint16x4_t *)v345.f32 = *v66;
                break;
              case 31:
                float32x4_t v345 = *(float32x4_t *)v66->i8;
                break;
              case 41:
                uint32x4_t v365 = (uint32x4_t)vld1q_dup_f32((const float *)v66);
                v346.i16[1] = 14976;
                float32x4_t v345 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vandq_s8((int8x16_t)vshlq_u32(v365, (uint32x4_t)xmmword_1B6E72A00), (int8x16_t)xmmword_1B6E729C0)), (float32x4_t)xmmword_1B6E72A10);
                break;
              case 51:
                v345.i16[0] = v66->i16[0];
                v345.f32[0] = (float)v345.u32[0];
                float v366 = 0.000015259;
                goto LABEL_232;
              case 52:
                v345.i16[0] = v66->i16[0];
                v345.f32[0] = (float)vmovl_s16(*(int16x4_t *)v345.f32).i32[0];
                float v366 = 0.000030519;
LABEL_232:
                v346.f32[0] = v345.f32[0] * v366;
                goto LABEL_233;
              case 53:
                float v371 = sub_1B64D90E0(v66->u16[0]);
                float32x4_t v351 = v748;
                v346.f32[0] = v371;
LABEL_233:
                v345.i32[2] = 0;
                v345.i64[0] = v346.u32[0];
                break;
              default:
                uint32x4_t v361 = (uint32x4_t)vld1q_dup_f32((const float *)v66);
                v346.i16[1] = 15104;
                float32x4_t v345 = vmulq_f32(vcvtq_f32_s32(vshlq_s32((int32x4_t)vshlq_u32(v361, (uint32x4_t)xmmword_1B6E729E0), (int32x4_t)xmmword_1B6E729F0)), (float32x4_t)xmmword_1B6E72A20);
                break;
            }
            *((void *)v350 - 1) = v345.i64[0];
            _DWORD *v350 = v345.i32[2];
            v350 += 3;
            v66 = (uint16x4_t *)((char *)v66 + v68);
            --v349;
          }
          while (v349);
LABEL_270:
          uint64_t v407 = *(void *)(a5 + 40);
          uint64_t v408 = *(void *)(v407 + 16);
          if (!v408)
          {
            MEMORY[0x1BA9B84C0](v348, -1, -1);
            goto LABEL_5;
          }
          uint64_t v409 = v407 + 32;
          float v410 = -v69;
          float32x4_t v411 = vmulq_f32(v351, v351);
          float32x4_t v735 = vnegq_f32(v351);
          float32x4_t v737 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v351, (int32x4_t)v351), (int8x16_t)v351, 0xCuLL);
          float v733 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v411, 2), vaddq_f32(v411, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v411.f32, 1))).f32[0];
          float v412 = -v733;
          swift_bridgeObjectRetain();
          float32x2_t v747 = 0;
          uint64_t v745 = 0;
          uint64_t v413 = 0;
          float v77 = 0.0;
          char v414 = 1;
          uint64_t v753 = v409;
          uint64_t v743 = v408;
          while (2)
          {
            v415 = (void *)(v409 + (v413 << 7));
            v416 = (void *)v415[4];
            if (*v415 != 3 || v416 == 0) {
              goto LABEL_274;
            }
            uint64_t v418 = v415[5];
            uint64_t v419 = v415[9];
            uint64_t v420 = v415[10];
            if (v420 == 4)
            {
              swift_unknownObjectRetain_n();
              swift_bridgeObjectRetain();
              if (objc_msgSend(v416, sel_storageMode) == (id)2) {
                goto LABEL_466;
              }
              v421 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
              id v422 = v416;
              if (v419 >= 1)
              {
                uint64_t v426 = 0;
                v427 = &v421[v418];
                v428.i64[0] = 0x3F0000003F000000;
                v428.i64[1] = 0x3F0000003F000000;
                float32x4_t v430 = v731;
                float32x4_t v429 = v732;
                uint64_t v409 = v753;
                uint64_t v408 = v743;
                while (1)
                {
                  _VF = __OFADD__(v426, 3);
                  uint64_t v441 = v426 + 3;
                  v442 = &v427[4 * v426];
                  uint64_t v443 = v348 + 12 * *(unsigned int *)v442;
                  v425.i64[0] = *(void *)v443;
                  float32x4_t v444 = v425;
                  v444.i32[2] = *(_DWORD *)(v443 + 8);
                  v425.i32[2] = v444.i32[2];
                  uint64_t v445 = v348 + 12 * *((unsigned int *)v442 + 1);
                  v424.i64[0] = *(void *)v445;
                  float32x4_t v446 = v424;
                  uint64_t v447 = v348 + 12 * *((unsigned int *)v442 + 2);
                  v423.i64[0] = *(void *)v447;
                  __int32 v448 = *(_DWORD *)(v447 + 8);
                  float32x4_t v449 = v423;
                  v449.i32[2] = v448;
                  uint64_t v426 = _VF ? 0x7FFFFFFFFFFFFFFFLL : v441;
                  v446.i32[2] = *(_DWORD *)(v445 + 8);
                  float32x4_t v450 = vsubq_f32(v446, v425);
                  float32x4_t v425 = vsubq_f32(v449, v425);
                  float32x4_t v451 = vnegq_f32(v450);
                  float32x4_t v452 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v425, (int32x4_t)v425), (int8x16_t)v425, 0xCuLL), v451), v425, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v450, (int32x4_t)v450), (int8x16_t)v450, 0xCuLL));
                  float32x4_t v453 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v452, (int32x4_t)v452), (int8x16_t)v452, 0xCuLL);
                  float32x4_t v454 = vmulq_f32(v452, v452);
                  v454.i64[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v454.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v454, 2), v454)).u64[0];
                  float32x4_t v455 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v454.f32, 0);
                  v455.i32[3] = 0;
                  float32x4_t v456 = vrsqrteq_f32(v455);
                  float32x4_t v457 = vmulq_f32(v456, vrsqrtsq_f32(v455, vmulq_f32(v456, v456)));
                  int32x4_t v458 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v454.f32[0] != 0.0)), 0x1FuLL));
                  v458.i32[3] = 0;
                  float32x4_t v459 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v458), (int8x16_t)vmulq_f32(vmulq_f32(v457, vrsqrtsq_f32(v455, vmulq_f32(v457, v457))), v453), (int8x16_t)v453);
                  float32x4_t v460 = vmulq_f32(v748, v459);
                  float v461 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v460, 2), vaddq_f32(v460, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v460.f32, 1))).f32[0];
                  float32x4_t v462 = vmulq_f32(v444, v459);
                  float32x4_t v463 = vmulq_f32(v744, v459);
                  LODWORD(v464) = vsubq_f32(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v463, 2), vaddq_f32(v463, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v463.f32, 1))), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v462, 2), vaddq_f32(v462, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v462.f32, 1)))).u32[0];
                  if (v461 < 0.0 && v464 >= v410)
                  {
                    v424.i32[2] = *(_DWORD *)(v445 + 8);
                    v423.i32[2] = v448;
                    if (v464 <= v69) {
                      goto LABEL_302;
                    }
                    float v466 = (float)-(float)(v464 - v69) / v461;
                    if (v466 <= 1.0) {
                      break;
                    }
                  }
LABEL_288:
                  if (v426 >= v419)
                  {
                    float32x4_t v731 = v430;
                    float32x4_t v732 = v429;
                    goto LABEL_273;
                  }
                }
                float32x4_t v467 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(vextq_s8((int8x16_t)v425, (int8x16_t)v425, 0xCuLL), (int8x16_t)v425, 8uLL), v451), (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v450, (int8x16_t)v450, 0xCuLL), (int8x16_t)v450, 8uLL), v425);
                float32x4_t v468 = vmulq_f32(v467, v467);
                int32x2_t v469 = (int32x2_t)vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v468, 2), vaddq_f32(v468, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v468.f32, 1))).u64[0];
                if (fabsf(*(float *)v469.i32) >= 1.1755e-38)
                {
                  float32x4_t v471 = vmlaq_n_f32(v744, v748, v466);
                  float32x4_t v472 = vsubq_f32(v423, v471);
                  float32x4_t v473 = vsubq_f32(v424, v471);
                  float32x4_t v474 = vsubq_f32(v444, v471);
                  float32x4_t v475 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v473, (int8x16_t)v473, 0xCuLL), (int8x16_t)v473, 8uLL);
                  float32x4_t v476 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v472, (int8x16_t)v472, 0xCuLL), (int8x16_t)v472, 8uLL);
                  float32x4_t v477 = vmlaq_f32(vmulq_f32(v476, vnegq_f32(v473)), v475, v472);
                  float32x4_t v478 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v474, (int8x16_t)v474, 0xCuLL), (int8x16_t)v474, 8uLL);
                  float32x4_t v479 = vmlaq_f32(vmulq_f32(v478, vnegq_f32(v472)), v476, v474);
                  float32x4_t v480 = vmlaq_f32(vmulq_f32(v475, vnegq_f32(v474)), v478, v473);
                  int32x4_t v481 = (int32x4_t)vmulq_f32(v467, v477);
                  int32x4_t v482 = (int32x4_t)vmulq_f32(v467, v479);
                  int32x4_t v483 = (int32x4_t)vmulq_f32(v467, v480);
                  int32x4_t v484 = vdupq_laneq_s32(v482, 2);
                  float32x4_t v485 = (float32x4_t)vzip1q_s32(vzip1q_s32(v481, v483), v482);
                  float32x4_t v486 = (float32x4_t)vtrn2q_s32(v481, v482);
                  v486.i32[2] = v483.i32[1];
                  _Q5 = vdivq_f32(vaddq_f32((float32x4_t)vzip1q_s32(vzip2q_s32(v481, v483), v484), vaddq_f32(v485, v486)), (float32x4_t)vdupq_lane_s32(v469, 0));
                }
                else
                {
                  __asm { FMOV            V5.4S, #-1.0 }
                }
                v487.i64[0] = 0xBF000000BF000000;
                v487.i64[1] = 0xBF000000BF000000;
                float32x4_t v425 = (float32x4_t)vcgeq_f32(v428, vabsq_f32(vaddq_f32(_Q5, v487)));
                v425.i32[3] = v425.i32[2];
                if ((vminvq_u32((uint32x4_t)v425) & 0x80000000) == 0)
                {
LABEL_302:
                  float32x4_t v488 = vmulq_f32(v450, v450);
                  float v489 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v488, 2), vaddq_f32(v488, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v488.f32, 1))).f32[0]);
                  float32x4_t v490 = vmulq_n_f32(v450, 1.0 / v489);
                  float32x4_t v491 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v490, (int32x4_t)v490), (int8x16_t)v490, 0xCuLL);
                  float32x4_t v492 = vmlaq_f32(vmulq_f32(v491, v735), v490, v737);
                  float32x4_t v493 = vmulq_f32(v492, v492);
                  float v494 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v493.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v493, 2), v493)).f32[0];
                  float v466 = 2.0;
                  if (v494 != 0.0)
                  {
                    float32x4_t v495 = vmulq_f32(vaddq_f32(v444, v424), v428);
                    float32x4_t v496 = vsubq_f32(v744, v495);
                    float32x4_t v497 = vmlaq_f32(vmulq_f32(v491, vnegq_f32(v496)), v490, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v496, (int32x4_t)v496), (int8x16_t)v496, 0xCuLL));
                    float32x4_t v498 = vmulq_f32(v492, v497);
                    v498.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v498.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v498, 2), v498)).f32[0];
                    float v499 = v498.f32[0] + v498.f32[0];
                    float32x4_t v500 = vmulq_f32(v497, v497);
                    float v501 = (float)((float)(v494 * -4.0)
                                 * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v500.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v500, 2), v500)).f32[0]+ (float)(v410 * v69)))+ (float)(v499 * v499);
                    if (v501 >= 0.0)
                    {
                      float v502 = (float)((float)-v499 - sqrtf(v501)) / (float)(v494 + v494);
                      if (v502 >= 0.0 && v502 <= 1.0)
                      {
                        float32x4_t v504 = vmulq_f32(v490, vsubq_f32(vmlaq_n_f32(v744, v748, v502), v495));
                        if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v504, 2), vaddq_f32(v504, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v504.f32, 1))).f32[0]) <= (float)(v489 * 0.5))
                        {
                          if (v502 >= 2.0 || v502 < 0.0) {
                            float v466 = 2.0;
                          }
                          else {
                            float v466 = v502;
                          }
                        }
                      }
                    }
                  }
                  float32x4_t v506 = vsubq_f32(v423, v424);
                  float32x4_t v507 = vmulq_f32(v506, v506);
                  float v508 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v507, 2), vaddq_f32(v507, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v507.f32, 1))).f32[0]);
                  float32x4_t v509 = vmulq_n_f32(v506, 1.0 / v508);
                  float32x4_t v510 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v509, (int32x4_t)v509), (int8x16_t)v509, 0xCuLL);
                  float32x4_t v511 = vmlaq_f32(vmulq_f32(v510, v735), v509, v737);
                  float32x4_t v512 = vmulq_f32(v511, v511);
                  float v513 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v512.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v512, 2), v512)).f32[0];
                  if (v513 != 0.0)
                  {
                    float32x4_t v514 = vmulq_f32(vaddq_f32(v424, v423), v428);
                    float32x4_t v515 = vsubq_f32(v744, v514);
                    float32x4_t v516 = vmlaq_f32(vmulq_f32(v510, vnegq_f32(v515)), v509, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v515, (int32x4_t)v515), (int8x16_t)v515, 0xCuLL));
                    float32x4_t v517 = vmulq_f32(v511, v516);
                    v517.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v517.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v517, 2), v517)).f32[0];
                    float v518 = v517.f32[0] + v517.f32[0];
                    float32x4_t v519 = vmulq_f32(v516, v516);
                    float v520 = (float)((float)(v513 * -4.0)
                                 * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v519.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v519, 2), v519)).f32[0]+ (float)(v410 * v69)))+ (float)(v518 * v518);
                    if (v520 >= 0.0)
                    {
                      float v521 = (float)((float)-v518 - sqrtf(v520)) / (float)(v513 + v513);
                      if (v521 >= 0.0 && v521 <= 1.0)
                      {
                        float32x4_t v523 = vmulq_f32(v509, vsubq_f32(vmlaq_n_f32(v744, v748, v521), v514));
                        if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v523, 2), vaddq_f32(v523, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v523.f32, 1))).f32[0]) <= (float)(v508 * 0.5)&& v521 < v466&& v521 >= 0.0)
                        {
                          float v466 = v521;
                        }
                      }
                    }
                  }
                  float32x4_t v525 = vsubq_f32(v444, v423);
                  float32x4_t v526 = vmulq_f32(v525, v525);
                  float32x4_t v425 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v526, 2), vaddq_f32(v526, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v526.f32, 1)));
                  v425.f32[0] = sqrtf(v425.f32[0]);
                  float32x4_t v527 = vmulq_n_f32(v525, 1.0 / v425.f32[0]);
                  float32x4_t v528 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v527, (int32x4_t)v527), (int8x16_t)v527, 0xCuLL);
                  float32x4_t v529 = vmlaq_f32(vmulq_f32(v528, v735), v527, v737);
                  float32x4_t v530 = vmulq_f32(v529, v529);
                  float v531 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v530.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v530, 2), v530)).f32[0];
                  if (v531 != 0.0)
                  {
                    float32x4_t v532 = vmulq_f32(vaddq_f32(v444, v423), v428);
                    float32x4_t v533 = vsubq_f32(v744, v532);
                    float32x4_t v534 = vmlaq_f32(vmulq_f32(v528, vnegq_f32(v533)), v527, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v533, (int32x4_t)v533), (int8x16_t)v533, 0xCuLL));
                    float32x4_t v535 = vmulq_f32(v529, v534);
                    v535.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v535.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v535, 2), v535)).f32[0];
                    float v536 = v535.f32[0] + v535.f32[0];
                    float32x4_t v537 = vmulq_f32(v534, v534);
                    float v538 = (float)((float)(v531 * -4.0)
                                 * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v537.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v537, 2), v537)).f32[0]+ (float)(v410 * v69)))+ (float)(v536 * v536);
                    if (v538 >= 0.0)
                    {
                      float v539 = (float)((float)-v536 - sqrtf(v538)) / (float)(v531 + v531);
                      if (v539 >= 0.0 && v539 <= 1.0)
                      {
                        float32x4_t v541 = vmulq_f32(v527, vsubq_f32(vmlaq_n_f32(v744, v748, v539), v532));
                        if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v541, 2), vaddq_f32(v541, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v541.f32, 1))).f32[0]) <= (float)(v425.f32[0] * 0.5)&& v539 < v466&& v539 >= 0.0)
                        {
                          float v466 = v539;
                        }
                      }
                    }
                  }
                  if (v466 < 0.0 || v466 > 1.0)
                  {
                    if (v733 < 0.00000011921) {
                      goto LABEL_288;
                    }
                    float32x4_t v545 = vsubq_f32(v744, v444);
                    float32x4_t v546 = vmulq_f32(v748, v545);
                    LODWORD(v547) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v546, 2), vaddq_f32(v546, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v546.f32, 1))).u32[0];
                    float32x4_t v548 = vmulq_f32(v545, v545);
                    float32x4_t v425 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v548, 2);
                    float v549 = vmlas_n_f32((float)(vaddq_f32(v425, vaddq_f32(v548, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v548.f32, 1))).f32[0]+ (float)(v410 * v69))* v412, v547, v547);
                    if (v549 < 0.0
                      || ((float v466 = (float)((float)-sqrtf(v549) - v547) / v733, v466 >= 0.0)
                        ? (BOOL v550 = v466 > 1.0)
                        : (BOOL v550 = 1),
                          v550))
                    {
                      float32x4_t v551 = vsubq_f32(v744, v424);
                      float32x4_t v552 = vmulq_f32(v748, v551);
                      float32x4_t v424 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v552, 2), vaddq_f32(v552, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v552.f32, 1)));
                      float32x4_t v553 = vmulq_f32(v551, v551);
                      float v554 = vmlas_n_f32((float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v553, 2), vaddq_f32(v553, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v553.f32, 1))).f32[0]+ (float)(v410 * v69))* v412, v424.f32[0], v424.f32[0]);
                      if (v554 < 0.0
                        || ((float v466 = (float)((float)-sqrtf(v554) - v424.f32[0]) / v733, v466 >= 0.0)
                          ? (BOOL v555 = v466 > 1.0)
                          : (BOOL v555 = 1),
                            v555))
                      {
                        float32x4_t v556 = vsubq_f32(v744, v423);
                        float32x4_t v557 = vmulq_f32(v748, v556);
                        float32x4_t v423 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v557, 2), vaddq_f32(v557, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v557.f32, 1)));
                        float32x4_t v558 = vmulq_f32(v556, v556);
                        float32x4_t v424 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v558, 2), vaddq_f32(v558, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v558.f32, 1)));
                        v424.f32[0] = vmlas_n_f32((float)(v424.f32[0] + (float)(v410 * v69)) * v412, v423.f32[0], v423.f32[0]);
                        if (v424.f32[0] < 0.0) {
                          goto LABEL_288;
                        }
                        float v466 = (float)((float)-sqrtf(v424.f32[0]) - v423.f32[0]) / v733;
                        if (v466 < 0.0 || v466 > 1.0) {
                          goto LABEL_288;
                        }
                      }
                    }
                  }
                }
                if (v466 >= 0.0 && v466 <= 1.0)
                {
                  float32x4_t v424 = vmulq_n_f32(v748, v466);
                  float32x4_t v423 = vaddq_f32(v755, v424);
                  v424.i32[3] = v429.i32[3];
                  v423.i32[3] = v430.i32[3];
                  float v544 = INFINITY;
                  if ((v414 & 1) == 0) {
                    float v544 = v77;
                  }
                  if (v466 < v544)
                  {
                    char v414 = 0;
                    uint64_t v745 = v423.i64[1];
                    float32x2_t v747 = *(float32x2_t *)v423.f32;
                    float32x4_t v429 = v424;
                    float32x4_t v430 = v423;
                    float v77 = v466;
                  }
                  else
                  {
                    float32x4_t v429 = v424;
                    float32x4_t v430 = v423;
                  }
                }
                goto LABEL_288;
              }
LABEL_272:
              uint64_t v409 = v753;
              uint64_t v408 = v743;
              goto LABEL_273;
            }
            if (v420 != 2) {
              goto LABEL_466;
            }
            swift_unknownObjectRetain_n();
            swift_bridgeObjectRetain();
            if (objc_msgSend(v416, sel_storageMode) == (id)2) {
              goto LABEL_466;
            }
            v431 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
            id v432 = v416;
            if (v419 < 1) {
              goto LABEL_272;
            }
            uint64_t v436 = 0;
            v437 = &v431[v418];
            v438.i64[0] = 0x3F0000003F000000;
            v438.i64[1] = 0x3F0000003F000000;
            float32x4_t v440 = v729;
            float32x4_t v439 = v730;
            uint64_t v409 = v753;
            uint64_t v408 = v743;
LABEL_374:
            _VF = __OFADD__(v436, 3);
            uint64_t v560 = v436 + 3;
            v561 = &v437[2 * v436];
            uint64_t v562 = v348 + 12 * *(unsigned __int16 *)v561;
            v435.i64[0] = *(void *)v562;
            float32x4_t v563 = v435;
            v563.i32[2] = *(_DWORD *)(v562 + 8);
            v435.i32[2] = v563.i32[2];
            uint64_t v564 = v348 + 12 * *((unsigned __int16 *)v561 + 1);
            v434.i64[0] = *(void *)v564;
            float32x4_t v565 = v434;
            uint64_t v566 = v348 + 12 * *((unsigned __int16 *)v561 + 2);
            v433.i64[0] = *(void *)v566;
            __int32 v567 = *(_DWORD *)(v566 + 8);
            float32x4_t v568 = v433;
            v568.i32[2] = v567;
            if (_VF) {
              uint64_t v436 = 0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              uint64_t v436 = v560;
            }
            v565.i32[2] = *(_DWORD *)(v564 + 8);
            float32x4_t v569 = vsubq_f32(v565, v435);
            float32x4_t v435 = vsubq_f32(v568, v435);
            float32x4_t v570 = vnegq_f32(v569);
            float32x4_t v571 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v435, (int32x4_t)v435), (int8x16_t)v435, 0xCuLL), v570), v435, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v569, (int32x4_t)v569), (int8x16_t)v569, 0xCuLL));
            float32x4_t v572 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v571, (int32x4_t)v571), (int8x16_t)v571, 0xCuLL);
            float32x4_t v573 = vmulq_f32(v571, v571);
            v573.i64[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v573.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v573, 2), v573)).u64[0];
            float32x4_t v574 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v573.f32, 0);
            v574.i32[3] = 0;
            float32x4_t v575 = vrsqrteq_f32(v574);
            float32x4_t v576 = vmulq_f32(v575, vrsqrtsq_f32(v574, vmulq_f32(v575, v575)));
            int32x4_t v577 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v573.f32[0] != 0.0)), 0x1FuLL));
            v577.i32[3] = 0;
            float32x4_t v578 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v577), (int8x16_t)vmulq_f32(vmulq_f32(v576, vrsqrtsq_f32(v574, vmulq_f32(v576, v576))), v572), (int8x16_t)v572);
            float32x4_t v579 = vmulq_f32(v748, v578);
            float v580 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v579, 2), vaddq_f32(v579, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v579.f32, 1))).f32[0];
            float32x4_t v581 = vmulq_f32(v563, v578);
            float32x4_t v582 = vmulq_f32(v744, v578);
            LODWORD(v583) = vsubq_f32(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v582, 2), vaddq_f32(v582, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v582.f32, 1))), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v581, 2), vaddq_f32(v581, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v581.f32, 1)))).u32[0];
            if (v580 < 0.0 && v583 >= v410)
            {
              v434.i32[2] = *(_DWORD *)(v564 + 8);
              v433.i32[2] = v567;
              if (v583 <= v69) {
                goto LABEL_386;
              }
              float v585 = (float)-(float)(v583 - v69) / v580;
              if (v585 <= 1.0)
              {
                float32x4_t v586 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(vextq_s8((int8x16_t)v435, (int8x16_t)v435, 0xCuLL), (int8x16_t)v435, 8uLL), v570), (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v569, (int8x16_t)v569, 0xCuLL), (int8x16_t)v569, 8uLL), v435);
                float32x4_t v587 = vmulq_f32(v586, v586);
                int32x2_t v588 = (int32x2_t)vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v587, 2), vaddq_f32(v587, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v587.f32, 1))).u64[0];
                float32x4_t v589 = v741;
                if (fabsf(*(float *)v588.i32) >= 1.1755e-38)
                {
                  float32x4_t v590 = vmlaq_n_f32(v744, v748, v585);
                  float32x4_t v591 = vsubq_f32(v433, v590);
                  float32x4_t v592 = vsubq_f32(v434, v590);
                  float32x4_t v593 = vsubq_f32(v563, v590);
                  float32x4_t v594 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v592, (int8x16_t)v592, 0xCuLL), (int8x16_t)v592, 8uLL);
                  float32x4_t v595 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v591, (int8x16_t)v591, 0xCuLL), (int8x16_t)v591, 8uLL);
                  float32x4_t v596 = vmlaq_f32(vmulq_f32(v595, vnegq_f32(v592)), v594, v591);
                  float32x4_t v597 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v593, (int8x16_t)v593, 0xCuLL), (int8x16_t)v593, 8uLL);
                  float32x4_t v598 = vmlaq_f32(vmulq_f32(v597, vnegq_f32(v591)), v595, v593);
                  float32x4_t v599 = vmlaq_f32(vmulq_f32(v594, vnegq_f32(v593)), v597, v592);
                  int32x4_t v600 = (int32x4_t)vmulq_f32(v586, v596);
                  int32x4_t v601 = (int32x4_t)vmulq_f32(v586, v598);
                  int32x4_t v602 = (int32x4_t)vmulq_f32(v586, v599);
                  int32x4_t v603 = vdupq_laneq_s32(v601, 2);
                  float32x4_t v604 = (float32x4_t)vzip1q_s32(vzip1q_s32(v600, v602), v601);
                  float32x4_t v605 = (float32x4_t)vtrn2q_s32(v600, v601);
                  v605.i32[2] = v602.i32[1];
                  float32x4_t v589 = vdivq_f32(vaddq_f32((float32x4_t)vzip1q_s32(vzip2q_s32(v600, v602), v603), vaddq_f32(v604, v605)), (float32x4_t)vdupq_lane_s32(v588, 0));
                }
                v606.i64[0] = 0xBF000000BF000000;
                v606.i64[1] = 0xBF000000BF000000;
                float32x4_t v435 = (float32x4_t)vcgeq_f32(v438, vabsq_f32(vaddq_f32(v589, v606)));
                v435.i32[3] = v435.i32[2];
                if ((vminvq_u32((uint32x4_t)v435) & 0x80000000) != 0)
                {
LABEL_428:
                  if (v585 >= 0.0 && v585 <= 1.0)
                  {
                    float32x4_t v434 = vmulq_n_f32(v748, v585);
                    float32x4_t v433 = vaddq_f32(v755, v434);
                    v434.i32[3] = v439.i32[3];
                    v433.i32[3] = v440.i32[3];
                    float v663 = INFINITY;
                    if ((v414 & 1) == 0) {
                      float v663 = v77;
                    }
                    if (v585 < v663)
                    {
                      char v414 = 0;
                      uint64_t v745 = v433.i64[1];
                      float32x2_t v747 = *(float32x2_t *)v433.f32;
                      float32x4_t v439 = v434;
                      float32x4_t v440 = v433;
                      float v77 = v585;
                    }
                    else
                    {
                      float32x4_t v439 = v434;
                      float32x4_t v440 = v433;
                    }
                  }
                }
                else
                {
LABEL_386:
                  float32x4_t v607 = vmulq_f32(v569, v569);
                  float v608 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v607, 2), vaddq_f32(v607, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v607.f32, 1))).f32[0]);
                  float32x4_t v609 = vmulq_n_f32(v569, 1.0 / v608);
                  float32x4_t v610 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v609, (int32x4_t)v609), (int8x16_t)v609, 0xCuLL);
                  float32x4_t v611 = vmlaq_f32(vmulq_f32(v610, v735), v609, v737);
                  float32x4_t v612 = vmulq_f32(v611, v611);
                  float v613 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v612.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v612, 2), v612)).f32[0];
                  float v585 = 2.0;
                  if (v613 != 0.0)
                  {
                    float32x4_t v614 = vmulq_f32(vaddq_f32(v563, v434), v438);
                    float32x4_t v615 = vsubq_f32(v744, v614);
                    float32x4_t v616 = vmlaq_f32(vmulq_f32(v610, vnegq_f32(v615)), v609, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v615, (int32x4_t)v615), (int8x16_t)v615, 0xCuLL));
                    float32x4_t v617 = vmulq_f32(v611, v616);
                    v617.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v617.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v617, 2), v617)).f32[0];
                    float v618 = v617.f32[0] + v617.f32[0];
                    float32x4_t v619 = vmulq_f32(v616, v616);
                    float v620 = (float)((float)(v613 * -4.0)
                                 * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v619.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v619, 2), v619)).f32[0]+ (float)(v410 * v69)))+ (float)(v618 * v618);
                    if (v620 >= 0.0)
                    {
                      float v621 = (float)((float)-v618 - sqrtf(v620)) / (float)(v613 + v613);
                      if (v621 >= 0.0 && v621 <= 1.0)
                      {
                        float32x4_t v623 = vmulq_f32(v609, vsubq_f32(vmlaq_n_f32(v744, v748, v621), v614));
                        if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v623, 2), vaddq_f32(v623, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v623.f32, 1))).f32[0]) <= (float)(v608 * 0.5))
                        {
                          if (v621 >= 2.0 || v621 < 0.0) {
                            float v585 = 2.0;
                          }
                          else {
                            float v585 = v621;
                          }
                        }
                      }
                    }
                  }
                  float32x4_t v625 = vsubq_f32(v433, v434);
                  float32x4_t v626 = vmulq_f32(v625, v625);
                  float v627 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v626, 2), vaddq_f32(v626, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v626.f32, 1))).f32[0]);
                  float32x4_t v628 = vmulq_n_f32(v625, 1.0 / v627);
                  float32x4_t v629 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v628, (int32x4_t)v628), (int8x16_t)v628, 0xCuLL);
                  float32x4_t v630 = vmlaq_f32(vmulq_f32(v629, v735), v628, v737);
                  float32x4_t v631 = vmulq_f32(v630, v630);
                  float v632 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v631.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v631, 2), v631)).f32[0];
                  if (v632 != 0.0)
                  {
                    float32x4_t v633 = vmulq_f32(vaddq_f32(v434, v433), v438);
                    float32x4_t v634 = vsubq_f32(v744, v633);
                    float32x4_t v635 = vmlaq_f32(vmulq_f32(v629, vnegq_f32(v634)), v628, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v634, (int32x4_t)v634), (int8x16_t)v634, 0xCuLL));
                    float32x4_t v636 = vmulq_f32(v630, v635);
                    v636.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v636.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v636, 2), v636)).f32[0];
                    float v637 = v636.f32[0] + v636.f32[0];
                    float32x4_t v638 = vmulq_f32(v635, v635);
                    float v639 = (float)((float)(v632 * -4.0)
                                 * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v638.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v638, 2), v638)).f32[0]+ (float)(v410 * v69)))+ (float)(v637 * v637);
                    if (v639 >= 0.0)
                    {
                      float v640 = (float)((float)-v637 - sqrtf(v639)) / (float)(v632 + v632);
                      if (v640 >= 0.0 && v640 <= 1.0)
                      {
                        float32x4_t v642 = vmulq_f32(v628, vsubq_f32(vmlaq_n_f32(v744, v748, v640), v633));
                        if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v642, 2), vaddq_f32(v642, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v642.f32, 1))).f32[0]) <= (float)(v627 * 0.5)&& v640 < v585&& v640 >= 0.0)
                        {
                          float v585 = v640;
                        }
                      }
                    }
                  }
                  float32x4_t v644 = vsubq_f32(v563, v433);
                  float32x4_t v645 = vmulq_f32(v644, v644);
                  float32x4_t v435 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v645, 2), vaddq_f32(v645, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v645.f32, 1)));
                  v435.f32[0] = sqrtf(v435.f32[0]);
                  float32x4_t v646 = vmulq_n_f32(v644, 1.0 / v435.f32[0]);
                  float32x4_t v647 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v646, (int32x4_t)v646), (int8x16_t)v646, 0xCuLL);
                  float32x4_t v648 = vmlaq_f32(vmulq_f32(v647, v735), v646, v737);
                  float32x4_t v649 = vmulq_f32(v648, v648);
                  float v650 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v649.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v649, 2), v649)).f32[0];
                  if (v650 != 0.0)
                  {
                    float32x4_t v651 = vmulq_f32(vaddq_f32(v563, v433), v438);
                    float32x4_t v652 = vsubq_f32(v744, v651);
                    float32x4_t v653 = vmlaq_f32(vmulq_f32(v647, vnegq_f32(v652)), v646, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v652, (int32x4_t)v652), (int8x16_t)v652, 0xCuLL));
                    float32x4_t v654 = vmulq_f32(v648, v653);
                    v654.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v654.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v654, 2), v654)).f32[0];
                    float v655 = v654.f32[0] + v654.f32[0];
                    float32x4_t v656 = vmulq_f32(v653, v653);
                    float v657 = (float)((float)(v650 * -4.0)
                                 * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v656.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v656, 2), v656)).f32[0]+ (float)(v410 * v69)))+ (float)(v655 * v655);
                    if (v657 >= 0.0)
                    {
                      float v658 = (float)((float)-v655 - sqrtf(v657)) / (float)(v650 + v650);
                      if (v658 >= 0.0 && v658 <= 1.0)
                      {
                        float32x4_t v660 = vmulq_f32(v646, vsubq_f32(vmlaq_n_f32(v744, v748, v658), v651));
                        if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v660, 2), vaddq_f32(v660, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v660.f32, 1))).f32[0]) <= (float)(v435.f32[0] * 0.5)&& v658 < v585&& v658 >= 0.0)
                        {
                          float v585 = v658;
                        }
                      }
                    }
                  }
                  if (v585 >= 0.0 && v585 <= 1.0) {
                    goto LABEL_428;
                  }
                  if (v733 >= 0.00000011921)
                  {
                    float32x4_t v664 = vsubq_f32(v744, v563);
                    float32x4_t v665 = vmulq_f32(v748, v664);
                    LODWORD(v666) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v665, 2), vaddq_f32(v665, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v665.f32, 1))).u32[0];
                    float32x4_t v667 = vmulq_f32(v664, v664);
                    float32x4_t v435 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v667, 2);
                    float v668 = vmlas_n_f32((float)(vaddq_f32(v435, vaddq_f32(v667, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v667.f32, 1))).f32[0]+ (float)(v410 * v69))* v412, v666, v666);
                    if (v668 >= 0.0)
                    {
                      float v585 = (float)((float)-sqrtf(v668) - v666) / v733;
                      if (v585 >= 0.0 && v585 <= 1.0) {
                        goto LABEL_428;
                      }
                    }
                    float32x4_t v670 = vsubq_f32(v744, v434);
                    float32x4_t v671 = vmulq_f32(v748, v670);
                    float32x4_t v434 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v671, 2), vaddq_f32(v671, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v671.f32, 1)));
                    float32x4_t v672 = vmulq_f32(v670, v670);
                    float v673 = vmlas_n_f32((float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v672, 2), vaddq_f32(v672, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v672.f32, 1))).f32[0]+ (float)(v410 * v69))* v412, v434.f32[0], v434.f32[0]);
                    if (v673 >= 0.0)
                    {
                      float v585 = (float)((float)-sqrtf(v673) - v434.f32[0]) / v733;
                      if (v585 >= 0.0 && v585 <= 1.0) {
                        goto LABEL_428;
                      }
                    }
                    float32x4_t v675 = vsubq_f32(v744, v433);
                    float32x4_t v676 = vmulq_f32(v748, v675);
                    float32x4_t v433 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v676, 2), vaddq_f32(v676, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v676.f32, 1)));
                    float32x4_t v677 = vmulq_f32(v675, v675);
                    float32x4_t v434 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v677, 2), vaddq_f32(v677, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v677.f32, 1)));
                    v434.f32[0] = vmlas_n_f32((float)(v434.f32[0] + (float)(v410 * v69)) * v412, v433.f32[0], v433.f32[0]);
                    if (v434.f32[0] >= 0.0)
                    {
                      float v585 = (float)((float)-sqrtf(v434.f32[0]) - v433.f32[0]) / v733;
                      if (v585 >= 0.0 && v585 <= 1.0) {
                        goto LABEL_428;
                      }
                    }
                  }
                }
              }
            }
            if (v436 >= v419)
            {
              float32x4_t v729 = v440;
              float32x4_t v730 = v439;
LABEL_273:
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease_n();
LABEL_274:
              if (++v413 != v408) {
                continue;
              }
              swift_bridgeObjectRelease();
              MEMORY[0x1BA9B84C0](v348, -1, -1);
              if ((v414 & 1) == 0)
              {
                uint64_t v45 = v722;
                __int32 v679 = v704;
                __int32 v680 = v705;
                if (v712) {
                  goto LABEL_460;
                }
LABEL_462:
                v683 = (uint64_t *)(v700 + 16 * v45);
                uint64_t v681 = *v683;
                uint64_t v682 = v683[1];
LABEL_463:
                *(float32x2_t *)v684.f32 = v747;
                v684.i64[1] = v745;
                float32x4_t v685 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(a17, a13, v684, 2), a12, v747, 1), a11, v747.f32[0]);
                v685.i32[3] = v679;
                float32x4_t v686 = vrsqrteq_f32(v698);
                float32x4_t v687 = vmulq_f32(v686, vrsqrtsq_f32(v698, vmulq_f32(v686, v686)));
                float32x4_t v688 = (float32x4_t)vbslq_s8(v697, (int8x16_t)vmulq_f32(v699, vmulq_f32(v687, vrsqrtsq_f32(v698, vmulq_f32(v687, v687)))), (int8x16_t)v699);
                v688.i32[3] = v680;
                __int32 v749 = v680;
                __int32 v754 = v679;
                sub_1B6C323C0(v45, v723, v724, v681, v682, v712, v685, v688, v77);
                __int32 v704 = v754;
                __int32 v705 = v749;
                goto LABEL_6;
              }
LABEL_5:
              uint64_t v45 = v722;
              goto LABEL_6;
            }
            goto LABEL_374;
          }
        }
        v757.i64[0] = 0;
        v757.i64[1] = 0xE000000000000000;
        sub_1B6E328C8();
        sub_1B6E31948();
        uint64_t v756 = v67;
LABEL_470:
        type metadata accessor for MTLVertexFormat(0);
        sub_1B6E32B18();
        goto LABEL_466;
      }
      uint64_t v70 = *(void *)(a5 + 40);
      uint64_t v71 = *(void *)(v70 + 16);
      if (!v71) {
        goto LABEL_5;
      }
      uint64_t v72 = v70 + 32;
      float v73 = -v69;
      float32x4_t v740 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v748, (int32x4_t)v748), (int8x16_t)v748, 0xCuLL);
      float32x4_t v74 = vmulq_f32(v748, v748);
      float v734 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v74, 2), vaddq_f32(v74, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v74.f32, 1))).f32[0];
      float32x4_t v736 = vnegq_f32(v748);
      float v75 = -v734;
      swift_bridgeObjectRetain();
      float32x2_t v747 = 0;
      uint64_t v745 = 0;
      uint64_t v76 = 0;
      float v77 = 0.0;
      char v78 = 1;
      uint64_t v742 = v71;
      while (2)
      {
        v79 = (void *)(v72 + (v76 << 7));
        v80 = (void *)v79[4];
        if (*v79 != 3 || v80 == 0) {
          goto LABEL_20;
        }
        uint64_t v82 = v79[5];
        uint64_t v83 = v79[9];
        uint64_t v84 = v79[10];
        if (v84 == 4)
        {
          swift_unknownObjectRetain_n();
          swift_bridgeObjectRetain();
          if (objc_msgSend(v80, sel_storageMode) != (id)2)
          {
            v85 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
            id v86 = v80;
            if (v83 < 1)
            {
LABEL_18:
              uint64_t v71 = v742;
              goto LABEL_19;
            }
            uint64_t v90 = 0;
            v91 = &v85[v82];
            v92.i64[0] = 0x3F0000003F000000;
            v92.i64[1] = 0x3F0000003F000000;
            float32x4_t v94 = v727;
            float32x4_t v93 = v728;
            uint64_t v71 = v742;
            while (1)
            {
              _VF = __OFADD__(v90, 3);
              uint64_t v105 = v90 + 3;
              v106 = &v91[4 * v90];
              v107 = (char *)v66 + v68 * *(unsigned int *)v106;
              v89.i64[0] = *(void *)v107;
              float32x4_t v108 = v89;
              v108.i32[2] = *((_DWORD *)v107 + 2);
              v89.i32[2] = v108.i32[2];
              v109 = (char *)v66 + v68 * *((unsigned int *)v106 + 1);
              v88.i64[0] = *(void *)v109;
              float32x4_t v110 = v88;
              v111 = (char *)v66 + v68 * *((unsigned int *)v106 + 2);
              v87.i64[0] = *(void *)v111;
              __int32 v112 = *((_DWORD *)v111 + 2);
              float32x4_t v113 = v87;
              v113.i32[2] = v112;
              uint64_t v90 = _VF ? 0x7FFFFFFFFFFFFFFFLL : v105;
              v110.i32[2] = *((_DWORD *)v109 + 2);
              float32x4_t v114 = vsubq_f32(v110, v89);
              float32x4_t v89 = vsubq_f32(v113, v89);
              float32x4_t v115 = vnegq_f32(v114);
              float32x4_t v116 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v89, (int32x4_t)v89), (int8x16_t)v89, 0xCuLL), v115), v89, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v114, (int32x4_t)v114), (int8x16_t)v114, 0xCuLL));
              float32x4_t v117 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v116, (int32x4_t)v116), (int8x16_t)v116, 0xCuLL);
              float32x4_t v118 = vmulq_f32(v116, v116);
              v118.i64[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v118.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v118, 2), v118)).u64[0];
              float32x4_t v119 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v118.f32, 0);
              v119.i32[3] = 0;
              float32x4_t v120 = vrsqrteq_f32(v119);
              float32x4_t v121 = vmulq_f32(v120, vrsqrtsq_f32(v119, vmulq_f32(v120, v120)));
              int32x4_t v122 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v118.f32[0] != 0.0)), 0x1FuLL));
              v122.i32[3] = 0;
              float32x4_t v123 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v122), (int8x16_t)vmulq_f32(vmulq_f32(v121, vrsqrtsq_f32(v119, vmulq_f32(v121, v121))), v117), (int8x16_t)v117);
              float32x4_t v124 = vmulq_f32(v748, v123);
              float v125 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v124, 2), vaddq_f32(v124, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v124.f32, 1))).f32[0];
              float32x4_t v126 = vmulq_f32(v108, v123);
              float32x4_t v127 = vmulq_f32(v744, v123);
              LODWORD(v128) = vsubq_f32(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v127, 2), vaddq_f32(v127, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v127.f32, 1))), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v126, 2), vaddq_f32(v126, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v126.f32, 1)))).u32[0];
              if (v125 < 0.0 && v128 >= v73)
              {
                v88.i32[2] = *((_DWORD *)v109 + 2);
                v87.i32[2] = v112;
                if (v128 <= v69) {
                  goto LABEL_48;
                }
                float v130 = (float)-(float)(v128 - v69) / v125;
                if (v130 <= 1.0) {
                  break;
                }
              }
LABEL_34:
              if (v90 >= v83)
              {
                float32x4_t v727 = v94;
                float32x4_t v728 = v93;
                goto LABEL_19;
              }
            }
            float32x4_t v131 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(vextq_s8((int8x16_t)v89, (int8x16_t)v89, 0xCuLL), (int8x16_t)v89, 8uLL), v115), (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v114, (int8x16_t)v114, 0xCuLL), (int8x16_t)v114, 8uLL), v89);
            float32x4_t v132 = vmulq_f32(v131, v131);
            int32x2_t v133 = (int32x2_t)vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v132, 2), vaddq_f32(v132, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v132.f32, 1))).u64[0];
            if (fabsf(*(float *)v133.i32) >= 1.1755e-38)
            {
              float32x4_t v135 = vmlaq_n_f32(v744, v748, v130);
              float32x4_t v136 = vsubq_f32(v87, v135);
              float32x4_t v137 = vsubq_f32(v88, v135);
              float32x4_t v138 = vsubq_f32(v108, v135);
              float32x4_t v139 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v137, (int8x16_t)v137, 0xCuLL), (int8x16_t)v137, 8uLL);
              float32x4_t v140 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v136, (int8x16_t)v136, 0xCuLL), (int8x16_t)v136, 8uLL);
              float32x4_t v141 = vmlaq_f32(vmulq_f32(v140, vnegq_f32(v137)), v139, v136);
              float32x4_t v142 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v138, (int8x16_t)v138, 0xCuLL), (int8x16_t)v138, 8uLL);
              float32x4_t v143 = vmlaq_f32(vmulq_f32(v142, vnegq_f32(v136)), v140, v138);
              float32x4_t v144 = vmlaq_f32(vmulq_f32(v139, vnegq_f32(v138)), v142, v137);
              int32x4_t v145 = (int32x4_t)vmulq_f32(v131, v141);
              int32x4_t v146 = (int32x4_t)vmulq_f32(v131, v143);
              int32x4_t v147 = (int32x4_t)vmulq_f32(v131, v144);
              int32x4_t v148 = vdupq_laneq_s32(v146, 2);
              float32x4_t v149 = (float32x4_t)vzip1q_s32(vzip1q_s32(v145, v147), v146);
              float32x4_t v150 = (float32x4_t)vtrn2q_s32(v145, v146);
              v150.i32[2] = v147.i32[1];
              _Q5 = vdivq_f32(vaddq_f32((float32x4_t)vzip1q_s32(vzip2q_s32(v145, v147), v148), vaddq_f32(v149, v150)), (float32x4_t)vdupq_lane_s32(v133, 0));
            }
            else
            {
              __asm { FMOV            V5.4S, #-1.0 }
            }
            v151.i64[0] = 0xBF000000BF000000;
            v151.i64[1] = 0xBF000000BF000000;
            float32x4_t v89 = (float32x4_t)vcgeq_f32(v92, vabsq_f32(vaddq_f32(_Q5, v151)));
            v89.i32[3] = v89.i32[2];
            if ((vminvq_u32((uint32x4_t)v89) & 0x80000000) == 0)
            {
LABEL_48:
              float32x4_t v152 = vmulq_f32(v114, v114);
              float v153 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v152, 2), vaddq_f32(v152, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v152.f32, 1))).f32[0]);
              float32x4_t v154 = vmulq_n_f32(v114, 1.0 / v153);
              float32x4_t v155 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v154, (int32x4_t)v154), (int8x16_t)v154, 0xCuLL);
              float32x4_t v156 = vmlaq_f32(vmulq_f32(v155, v736), v154, v740);
              float32x4_t v157 = vmulq_f32(v156, v156);
              float v158 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v157.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v157, 2), v157)).f32[0];
              float v130 = 2.0;
              if (v158 != 0.0)
              {
                float32x4_t v159 = vmulq_f32(vaddq_f32(v108, v88), v92);
                float32x4_t v160 = vsubq_f32(v744, v159);
                float32x4_t v161 = vmlaq_f32(vmulq_f32(v155, vnegq_f32(v160)), v154, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v160, (int32x4_t)v160), (int8x16_t)v160, 0xCuLL));
                float32x4_t v162 = vmulq_f32(v156, v161);
                v162.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v162.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v162, 2), v162)).f32[0];
                float v163 = v162.f32[0] + v162.f32[0];
                float32x4_t v164 = vmulq_f32(v161, v161);
                float v165 = (float)((float)(v158 * -4.0)
                             * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v164.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v164, 2), v164)).f32[0]+ (float)(v73 * v69)))+ (float)(v163 * v163);
                if (v165 >= 0.0)
                {
                  float v166 = (float)((float)-v163 - sqrtf(v165)) / (float)(v158 + v158);
                  if (v166 >= 0.0 && v166 <= 1.0)
                  {
                    float32x4_t v168 = vmulq_f32(v154, vsubq_f32(vmlaq_n_f32(v744, v748, v166), v159));
                    if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v168, 2), vaddq_f32(v168, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v168.f32, 1))).f32[0]) <= (float)(v153 * 0.5))
                    {
                      if (v166 >= 2.0 || v166 < 0.0) {
                        float v130 = 2.0;
                      }
                      else {
                        float v130 = v166;
                      }
                    }
                  }
                }
              }
              float32x4_t v170 = vsubq_f32(v87, v88);
              float32x4_t v171 = vmulq_f32(v170, v170);
              float v172 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v171, 2), vaddq_f32(v171, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v171.f32, 1))).f32[0]);
              float32x4_t v173 = vmulq_n_f32(v170, 1.0 / v172);
              float32x4_t v174 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v173, (int32x4_t)v173), (int8x16_t)v173, 0xCuLL);
              float32x4_t v175 = vmlaq_f32(vmulq_f32(v174, v736), v173, v740);
              float32x4_t v176 = vmulq_f32(v175, v175);
              float v177 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v176.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v176, 2), v176)).f32[0];
              if (v177 != 0.0)
              {
                float32x4_t v178 = vmulq_f32(vaddq_f32(v88, v87), v92);
                float32x4_t v179 = vsubq_f32(v744, v178);
                float32x4_t v180 = vmlaq_f32(vmulq_f32(v174, vnegq_f32(v179)), v173, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v179, (int32x4_t)v179), (int8x16_t)v179, 0xCuLL));
                float32x4_t v181 = vmulq_f32(v175, v180);
                v181.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v181.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v181, 2), v181)).f32[0];
                float v182 = v181.f32[0] + v181.f32[0];
                float32x4_t v183 = vmulq_f32(v180, v180);
                float v184 = (float)((float)(v177 * -4.0)
                             * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v183.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v183, 2), v183)).f32[0]+ (float)(v73 * v69)))+ (float)(v182 * v182);
                if (v184 >= 0.0)
                {
                  float v185 = (float)((float)-v182 - sqrtf(v184)) / (float)(v177 + v177);
                  if (v185 >= 0.0 && v185 <= 1.0)
                  {
                    float32x4_t v187 = vmulq_f32(v173, vsubq_f32(vmlaq_n_f32(v744, v748, v185), v178));
                    if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v187, 2), vaddq_f32(v187, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v187.f32, 1))).f32[0]) <= (float)(v172 * 0.5)&& v185 < v130&& v185 >= 0.0)
                    {
                      float v130 = v185;
                    }
                  }
                }
              }
              float32x4_t v189 = vsubq_f32(v108, v87);
              float32x4_t v190 = vmulq_f32(v189, v189);
              float32x4_t v89 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v190, 2), vaddq_f32(v190, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v190.f32, 1)));
              v89.f32[0] = sqrtf(v89.f32[0]);
              float32x4_t v191 = vmulq_n_f32(v189, 1.0 / v89.f32[0]);
              float32x4_t v192 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v191, (int32x4_t)v191), (int8x16_t)v191, 0xCuLL);
              float32x4_t v193 = vmlaq_f32(vmulq_f32(v192, v736), v191, v740);
              float32x4_t v194 = vmulq_f32(v193, v193);
              float v195 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v194.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v194, 2), v194)).f32[0];
              if (v195 != 0.0)
              {
                float32x4_t v196 = vmulq_f32(vaddq_f32(v108, v87), v92);
                float32x4_t v197 = vsubq_f32(v744, v196);
                float32x4_t v198 = vmlaq_f32(vmulq_f32(v192, vnegq_f32(v197)), v191, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v197, (int32x4_t)v197), (int8x16_t)v197, 0xCuLL));
                float32x4_t v199 = vmulq_f32(v193, v198);
                v199.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v199.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v199, 2), v199)).f32[0];
                float v200 = v199.f32[0] + v199.f32[0];
                float32x4_t v201 = vmulq_f32(v198, v198);
                float v202 = (float)((float)(v195 * -4.0)
                             * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v201.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v201, 2), v201)).f32[0]+ (float)(v73 * v69)))+ (float)(v200 * v200);
                if (v202 >= 0.0)
                {
                  float v203 = (float)((float)-v200 - sqrtf(v202)) / (float)(v195 + v195);
                  if (v203 >= 0.0 && v203 <= 1.0)
                  {
                    float32x4_t v205 = vmulq_f32(v191, vsubq_f32(vmlaq_n_f32(v744, v748, v203), v196));
                    if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v205, 2), vaddq_f32(v205, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v205.f32, 1))).f32[0]) <= (float)(v89.f32[0] * 0.5)&& v203 < v130&& v203 >= 0.0)
                    {
                      float v130 = v203;
                    }
                  }
                }
              }
              if (v130 < 0.0 || v130 > 1.0)
              {
                if (v734 < 0.00000011921) {
                  goto LABEL_34;
                }
                float32x4_t v209 = vsubq_f32(v744, v108);
                float32x4_t v210 = vmulq_f32(v748, v209);
                LODWORD(v211) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v210, 2), vaddq_f32(v210, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v210.f32, 1))).u32[0];
                float32x4_t v212 = vmulq_f32(v209, v209);
                float32x4_t v89 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v212, 2);
                float v213 = vmlas_n_f32((float)(vaddq_f32(v89, vaddq_f32(v212, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v212.f32, 1))).f32[0]+ (float)(v73 * v69))* v75, v211, v211);
                if (v213 < 0.0
                  || ((float v130 = (float)((float)-sqrtf(v213) - v211) / v734, v130 >= 0.0)
                    ? (BOOL v214 = v130 > 1.0)
                    : (BOOL v214 = 1),
                      v214))
                {
                  float32x4_t v215 = vsubq_f32(v744, v88);
                  float32x4_t v216 = vmulq_f32(v748, v215);
                  float32x4_t v88 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v216, 2), vaddq_f32(v216, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v216.f32, 1)));
                  float32x4_t v217 = vmulq_f32(v215, v215);
                  float v218 = vmlas_n_f32((float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v217, 2), vaddq_f32(v217, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v217.f32, 1))).f32[0]+ (float)(v73 * v69))* v75, v88.f32[0], v88.f32[0]);
                  if (v218 < 0.0
                    || ((float v130 = (float)((float)-sqrtf(v218) - v88.f32[0]) / v734, v130 >= 0.0)
                      ? (BOOL v219 = v130 > 1.0)
                      : (BOOL v219 = 1),
                        v219))
                  {
                    float32x4_t v220 = vsubq_f32(v744, v87);
                    float32x4_t v221 = vmulq_f32(v748, v220);
                    float32x4_t v87 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v221, 2), vaddq_f32(v221, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v221.f32, 1)));
                    float32x4_t v222 = vmulq_f32(v220, v220);
                    float32x4_t v88 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v222, 2), vaddq_f32(v222, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v222.f32, 1)));
                    v88.f32[0] = vmlas_n_f32((float)(v88.f32[0] + (float)(v73 * v69)) * v75, v87.f32[0], v87.f32[0]);
                    if (v88.f32[0] < 0.0) {
                      goto LABEL_34;
                    }
                    float v130 = (float)((float)-sqrtf(v88.f32[0]) - v87.f32[0]) / v734;
                    if (v130 < 0.0 || v130 > 1.0) {
                      goto LABEL_34;
                    }
                  }
                }
              }
            }
            if (v130 >= 0.0 && v130 <= 1.0)
            {
              float32x4_t v88 = vmulq_n_f32(v748, v130);
              float32x4_t v87 = vaddq_f32(v755, v88);
              v88.i32[3] = v93.i32[3];
              v87.i32[3] = v94.i32[3];
              float v208 = INFINITY;
              if ((v78 & 1) == 0) {
                float v208 = v77;
              }
              if (v130 < v208)
              {
                char v78 = 0;
                uint64_t v745 = v87.i64[1];
                float32x2_t v747 = *(float32x2_t *)v87.f32;
                float32x4_t v93 = v88;
                float32x4_t v94 = v87;
                float v77 = v130;
              }
              else
              {
                float32x4_t v93 = v88;
                float32x4_t v94 = v87;
              }
            }
            goto LABEL_34;
          }
          while (1)
          {
LABEL_466:
            sub_1B6E32BE8();
            __break(1u);
          }
        }
        if (v84 != 2) {
          goto LABEL_466;
        }
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain();
        if (objc_msgSend(v80, sel_storageMode) == (id)2) {
          goto LABEL_466;
        }
        v95 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
        id v96 = v80;
        if (v83 < 1) {
          goto LABEL_18;
        }
        uint64_t v100 = 0;
        v101 = &v95[v82];
        v102.i64[0] = 0x3F0000003F000000;
        v102.i64[1] = 0x3F0000003F000000;
        float32x4_t v104 = v725;
        float32x4_t v103 = v726;
        uint64_t v71 = v742;
        do
        {
          _VF = __OFADD__(v100, 3);
          uint64_t v224 = v100 + 3;
          v225 = &v101[2 * v100];
          v226 = (char *)v66 + v68 * *(unsigned __int16 *)v225;
          v99.i64[0] = *(void *)v226;
          float32x4_t v227 = v99;
          v227.i32[2] = *((_DWORD *)v226 + 2);
          v99.i32[2] = v227.i32[2];
          v228 = (char *)v66 + v68 * *((unsigned __int16 *)v225 + 1);
          v98.i64[0] = *(void *)v228;
          float32x4_t v229 = v98;
          v230 = (char *)v66 + v68 * *((unsigned __int16 *)v225 + 2);
          v97.i64[0] = *(void *)v230;
          __int32 v231 = *((_DWORD *)v230 + 2);
          float32x4_t v232 = v97;
          v232.i32[2] = v231;
          if (_VF) {
            uint64_t v100 = 0x7FFFFFFFFFFFFFFFLL;
          }
          else {
            uint64_t v100 = v224;
          }
          v229.i32[2] = *((_DWORD *)v228 + 2);
          float32x4_t v233 = vsubq_f32(v229, v99);
          float32x4_t v99 = vsubq_f32(v232, v99);
          float32x4_t v234 = vnegq_f32(v233);
          float32x4_t v235 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v99, (int32x4_t)v99), (int8x16_t)v99, 0xCuLL), v234), v99, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v233, (int32x4_t)v233), (int8x16_t)v233, 0xCuLL));
          float32x4_t v236 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v235, (int32x4_t)v235), (int8x16_t)v235, 0xCuLL);
          float32x4_t v237 = vmulq_f32(v235, v235);
          v237.i64[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v237.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v237, 2), v237)).u64[0];
          float32x4_t v238 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v237.f32, 0);
          v238.i32[3] = 0;
          float32x4_t v239 = vrsqrteq_f32(v238);
          float32x4_t v240 = vmulq_f32(v239, vrsqrtsq_f32(v238, vmulq_f32(v239, v239)));
          int32x4_t v241 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v237.f32[0] != 0.0)), 0x1FuLL));
          v241.i32[3] = 0;
          float32x4_t v242 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v241), (int8x16_t)vmulq_f32(vmulq_f32(v240, vrsqrtsq_f32(v238, vmulq_f32(v240, v240))), v236), (int8x16_t)v236);
          float32x4_t v243 = vmulq_f32(v748, v242);
          float v244 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v243, 2), vaddq_f32(v243, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v243.f32, 1))).f32[0];
          float32x4_t v245 = vmulq_f32(v227, v242);
          float32x4_t v246 = vmulq_f32(v744, v242);
          LODWORD(v247) = vsubq_f32(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v246, 2), vaddq_f32(v246, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v246.f32, 1))), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v245, 2), vaddq_f32(v245, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v245.f32, 1)))).u32[0];
          if (v244 < 0.0 && v247 >= v73)
          {
            v98.i32[2] = *((_DWORD *)v228 + 2);
            v97.i32[2] = v231;
            if (v247 > v69)
            {
              float v249 = (float)-(float)(v247 - v69) / v244;
              if (v249 > 1.0) {
                continue;
              }
              float32x4_t v250 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(vextq_s8((int8x16_t)v99, (int8x16_t)v99, 0xCuLL), (int8x16_t)v99, 8uLL), v234), (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v233, (int8x16_t)v233, 0xCuLL), (int8x16_t)v233, 8uLL), v99);
              float32x4_t v251 = vmulq_f32(v250, v250);
              int32x2_t v252 = (int32x2_t)vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v251, 2), vaddq_f32(v251, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v251.f32, 1))).u64[0];
              if (fabsf(*(float *)v252.i32) >= 1.1755e-38)
              {
                float32x4_t v254 = vmlaq_n_f32(v744, v748, v249);
                float32x4_t v255 = vsubq_f32(v97, v254);
                float32x4_t v256 = vsubq_f32(v98, v254);
                float32x4_t v257 = vsubq_f32(v227, v254);
                float32x4_t v258 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v256, (int8x16_t)v256, 0xCuLL), (int8x16_t)v256, 8uLL);
                float32x4_t v259 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v255, (int8x16_t)v255, 0xCuLL), (int8x16_t)v255, 8uLL);
                float32x4_t v260 = vmlaq_f32(vmulq_f32(v259, vnegq_f32(v256)), v258, v255);
                float32x4_t v261 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v257, (int8x16_t)v257, 0xCuLL), (int8x16_t)v257, 8uLL);
                float32x4_t v262 = vmlaq_f32(vmulq_f32(v261, vnegq_f32(v255)), v259, v257);
                float32x4_t v263 = vmlaq_f32(vmulq_f32(v258, vnegq_f32(v257)), v261, v256);
                int32x4_t v264 = (int32x4_t)vmulq_f32(v250, v260);
                int32x4_t v265 = (int32x4_t)vmulq_f32(v250, v262);
                int32x4_t v266 = (int32x4_t)vmulq_f32(v250, v263);
                int32x4_t v267 = vdupq_laneq_s32(v265, 2);
                float32x4_t v268 = (float32x4_t)vzip1q_s32(vzip1q_s32(v264, v266), v265);
                float32x4_t v269 = (float32x4_t)vtrn2q_s32(v264, v265);
                v269.i32[2] = v266.i32[1];
                _Q5 = vdivq_f32(vaddq_f32((float32x4_t)vzip1q_s32(vzip2q_s32(v264, v266), v267), vaddq_f32(v268, v269)), (float32x4_t)vdupq_lane_s32(v252, 0));
              }
              else
              {
                __asm { FMOV            V5.4S, #-1.0 }
              }
              v270.i64[0] = 0xBF000000BF000000;
              v270.i64[1] = 0xBF000000BF000000;
              float32x4_t v99 = (float32x4_t)vcgeq_f32(v102, vabsq_f32(vaddq_f32(_Q5, v270)));
              v99.i32[3] = v99.i32[2];
              if ((vminvq_u32((uint32x4_t)v99) & 0x80000000) != 0) {
                goto LABEL_175;
              }
            }
            float32x4_t v271 = vmulq_f32(v233, v233);
            float v272 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v271, 2), vaddq_f32(v271, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v271.f32, 1))).f32[0]);
            float32x4_t v273 = vmulq_n_f32(v233, 1.0 / v272);
            float32x4_t v274 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v273, (int32x4_t)v273), (int8x16_t)v273, 0xCuLL);
            float32x4_t v275 = vmlaq_f32(vmulq_f32(v274, v736), v273, v740);
            float32x4_t v276 = vmulq_f32(v275, v275);
            float v277 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v276.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v276, 2), v276)).f32[0];
            float v249 = 2.0;
            if (v277 != 0.0)
            {
              float32x4_t v278 = vmulq_f32(vaddq_f32(v227, v98), v102);
              float32x4_t v279 = vsubq_f32(v744, v278);
              float32x4_t v280 = vmlaq_f32(vmulq_f32(v274, vnegq_f32(v279)), v273, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v279, (int32x4_t)v279), (int8x16_t)v279, 0xCuLL));
              float32x4_t v281 = vmulq_f32(v275, v280);
              v281.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v281.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v281, 2), v281)).f32[0];
              float v282 = v281.f32[0] + v281.f32[0];
              float32x4_t v283 = vmulq_f32(v280, v280);
              float v284 = (float)((float)(v277 * -4.0)
                           * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v283.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v283, 2), v283)).f32[0]+ (float)(v73 * v69)))+ (float)(v282 * v282);
              if (v284 >= 0.0)
              {
                float v285 = (float)((float)-v282 - sqrtf(v284)) / (float)(v277 + v277);
                if (v285 >= 0.0 && v285 <= 1.0)
                {
                  float32x4_t v287 = vmulq_f32(v273, vsubq_f32(vmlaq_n_f32(v744, v748, v285), v278));
                  if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v287, 2), vaddq_f32(v287, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v287.f32, 1))).f32[0]) <= (float)(v272 * 0.5))
                  {
                    if (v285 >= 2.0 || v285 < 0.0) {
                      float v249 = 2.0;
                    }
                    else {
                      float v249 = v285;
                    }
                  }
                }
              }
            }
            float32x4_t v289 = vsubq_f32(v97, v98);
            float32x4_t v290 = vmulq_f32(v289, v289);
            float v291 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v290, 2), vaddq_f32(v290, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v290.f32, 1))).f32[0]);
            float32x4_t v292 = vmulq_n_f32(v289, 1.0 / v291);
            float32x4_t v293 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v292, (int32x4_t)v292), (int8x16_t)v292, 0xCuLL);
            float32x4_t v294 = vmlaq_f32(vmulq_f32(v293, v736), v292, v740);
            float32x4_t v295 = vmulq_f32(v294, v294);
            float v296 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v295.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v295, 2), v295)).f32[0];
            if (v296 != 0.0)
            {
              float32x4_t v297 = vmulq_f32(vaddq_f32(v98, v97), v102);
              float32x4_t v298 = vsubq_f32(v744, v297);
              float32x4_t v299 = vmlaq_f32(vmulq_f32(v293, vnegq_f32(v298)), v292, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v298, (int32x4_t)v298), (int8x16_t)v298, 0xCuLL));
              float32x4_t v300 = vmulq_f32(v294, v299);
              v300.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v300.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v300, 2), v300)).f32[0];
              float v301 = v300.f32[0] + v300.f32[0];
              float32x4_t v302 = vmulq_f32(v299, v299);
              float v303 = (float)((float)(v296 * -4.0)
                           * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v302.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v302, 2), v302)).f32[0]+ (float)(v73 * v69)))+ (float)(v301 * v301);
              if (v303 >= 0.0)
              {
                float v304 = (float)((float)-v301 - sqrtf(v303)) / (float)(v296 + v296);
                if (v304 >= 0.0 && v304 <= 1.0)
                {
                  float32x4_t v306 = vmulq_f32(v292, vsubq_f32(vmlaq_n_f32(v744, v748, v304), v297));
                  if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v306, 2), vaddq_f32(v306, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v306.f32, 1))).f32[0]) <= (float)(v291 * 0.5)&& v304 < v249&& v304 >= 0.0)
                  {
                    float v249 = v304;
                  }
                }
              }
            }
            float32x4_t v308 = vsubq_f32(v227, v97);
            float32x4_t v309 = vmulq_f32(v308, v308);
            float32x4_t v99 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v309, 2), vaddq_f32(v309, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v309.f32, 1)));
            v99.f32[0] = sqrtf(v99.f32[0]);
            float32x4_t v310 = vmulq_n_f32(v308, 1.0 / v99.f32[0]);
            float32x4_t v311 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v310, (int32x4_t)v310), (int8x16_t)v310, 0xCuLL);
            float32x4_t v312 = vmlaq_f32(vmulq_f32(v311, v736), v310, v740);
            float32x4_t v313 = vmulq_f32(v312, v312);
            float v314 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v313.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v313, 2), v313)).f32[0];
            if (v314 != 0.0)
            {
              float32x4_t v315 = vmulq_f32(vaddq_f32(v227, v97), v102);
              float32x4_t v316 = vsubq_f32(v744, v315);
              float32x4_t v317 = vmlaq_f32(vmulq_f32(v311, vnegq_f32(v316)), v310, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v316, (int32x4_t)v316), (int8x16_t)v316, 0xCuLL));
              float32x4_t v318 = vmulq_f32(v312, v317);
              v318.f32[0] = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v318.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v318, 2), v318)).f32[0];
              float v319 = v318.f32[0] + v318.f32[0];
              float32x4_t v320 = vmulq_f32(v317, v317);
              float v321 = (float)((float)(v314 * -4.0)
                           * (float)(vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v320.f32, 1), vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v320, 2), v320)).f32[0]+ (float)(v73 * v69)))+ (float)(v319 * v319);
              if (v321 >= 0.0)
              {
                float v322 = (float)((float)-v319 - sqrtf(v321)) / (float)(v314 + v314);
                if (v322 >= 0.0 && v322 <= 1.0)
                {
                  float32x4_t v324 = vmulq_f32(v310, vsubq_f32(vmlaq_n_f32(v744, v748, v322), v315));
                  if (fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v324, 2), vaddq_f32(v324, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v324.f32, 1))).f32[0]) <= (float)(v99.f32[0] * 0.5)&& v322 < v249&& v322 >= 0.0)
                  {
                    float v249 = v322;
                  }
                }
              }
            }
            if (v249 >= 0.0 && v249 <= 1.0) {
              goto LABEL_175;
            }
            if (v734 >= 0.00000011921)
            {
              float32x4_t v328 = vsubq_f32(v744, v227);
              float32x4_t v329 = vmulq_f32(v748, v328);
              LODWORD(v330) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v329, 2), vaddq_f32(v329, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v329.f32, 1))).u32[0];
              float32x4_t v331 = vmulq_f32(v328, v328);
              float32x4_t v99 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v331, 2);
              float v332 = vmlas_n_f32((float)(vaddq_f32(v99, vaddq_f32(v331, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v331.f32, 1))).f32[0]+ (float)(v73 * v69))* v75, v330, v330);
              if (v332 >= 0.0)
              {
                float v249 = (float)((float)-sqrtf(v332) - v330) / v734;
                if (v249 >= 0.0 && v249 <= 1.0) {
                  goto LABEL_175;
                }
              }
              float32x4_t v334 = vsubq_f32(v744, v98);
              float32x4_t v335 = vmulq_f32(v748, v334);
              float32x4_t v98 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v335, 2), vaddq_f32(v335, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v335.f32, 1)));
              float32x4_t v336 = vmulq_f32(v334, v334);
              float v337 = vmlas_n_f32((float)(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v336, 2), vaddq_f32(v336, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v336.f32, 1))).f32[0]+ (float)(v73 * v69))* v75, v98.f32[0], v98.f32[0]);
              if (v337 >= 0.0)
              {
                float v249 = (float)((float)-sqrtf(v337) - v98.f32[0]) / v734;
                if (v249 >= 0.0 && v249 <= 1.0) {
                  goto LABEL_175;
                }
              }
              float32x4_t v339 = vsubq_f32(v744, v97);
              float32x4_t v340 = vmulq_f32(v748, v339);
              float32x4_t v97 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v340, 2), vaddq_f32(v340, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v340.f32, 1)));
              float32x4_t v341 = vmulq_f32(v339, v339);
              float32x4_t v98 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v341, 2), vaddq_f32(v341, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v341.f32, 1)));
              v98.f32[0] = vmlas_n_f32((float)(v98.f32[0] + (float)(v73 * v69)) * v75, v97.f32[0], v97.f32[0]);
              if (v98.f32[0] >= 0.0)
              {
                float v249 = (float)((float)-sqrtf(v98.f32[0]) - v97.f32[0]) / v734;
                if (v249 >= 0.0 && v249 <= 1.0)
                {
LABEL_175:
                  if (v249 >= 0.0 && v249 <= 1.0)
                  {
                    float32x4_t v98 = vmulq_n_f32(v748, v249);
                    float32x4_t v97 = vaddq_f32(v755, v98);
                    v98.i32[3] = v103.i32[3];
                    v97.i32[3] = v104.i32[3];
                    float v327 = INFINITY;
                    if ((v78 & 1) == 0) {
                      float v327 = v77;
                    }
                    if (v249 < v327)
                    {
                      char v78 = 0;
                      uint64_t v745 = v97.i64[1];
                      float32x2_t v747 = *(float32x2_t *)v97.f32;
                      float32x4_t v103 = v98;
                      float32x4_t v104 = v97;
                      float v77 = v249;
                    }
                    else
                    {
                      float32x4_t v103 = v98;
                      float32x4_t v104 = v97;
                    }
                  }
                }
              }
            }
          }
        }
        while (v100 < v83);
        float32x4_t v725 = v104;
        float32x4_t v726 = v103;
LABEL_19:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
LABEL_20:
        if (++v76 != v71) {
          continue;
        }
        break;
      }
      swift_bridgeObjectRelease();
      uint64_t v45 = v722;
      if ((v78 & 1) == 0)
      {
        __int32 v679 = v704;
        __int32 v680 = v705;
        if (!v712) {
          goto LABEL_462;
        }
LABEL_460:
        uint64_t v681 = 0;
        uint64_t v682 = 0;
        goto LABEL_463;
      }
LABEL_6:
      uint64_t v41 = v45 + 1;
      if (v41 == v713) {
        goto LABEL_2;
      }
    }
    uint64_t v55 = v41;
    uint64_t v56 = sub_1B6A565A8(0);
    if (!v56) {
      goto LABEL_466;
    }
    v59 = (uint16x4_t *)v56;
    uint64_t v60 = v57;
    uint64_t v61 = v58;
    if (v57 == 30)
    {
      sub_1B6A568A4(v56, v58, 1, a5, &v757, v755, v738);
    }
    else
    {
      uint64_t v372 = swift_slowAlloc();
      uint64_t v376 = v372;
      uint64_t v377 = *(void *)(a5 + 48);
      if (v377)
      {
        if ((unint64_t)(v60 - 9) >= 0x2D || ((0x1C01805FFC09uLL >> (v60 - 9)) & 1) == 0)
        {
          v757.i64[0] = 0;
          v757.i64[1] = 0xE000000000000000;
          sub_1B6E328C8();
          sub_1B6E31948();
          uint64_t v756 = v60;
          goto LABEL_470;
        }
        v378 = (_DWORD *)(v372 + 8);
        do
        {
          switch(v60)
          {
            case 9:
              *(double *)v373.i64 = sub_1B6748838(v59->i32[0]);
              break;
            case 12:
              *(uint32x2_t *)v385.i8 = vshl_u32((uint32x2_t)vdup_n_s32(v59->i32[0]), (uint32x2_t)0x1000000018);
              v385.i32[2] = v59->i32[0] << 8;
              v385.i32[3] = v59->i32[0];
              __asm { FMOV            V1.4S, #-1.0 }
              float32x4_t v387 = vmaxnmq_f32(vmulq_f32(vcvtq_f32_s32(vshrq_n_s32(v385, 0x18uLL)), (float32x4_t)vdupq_n_s32(0x3C010204u)), _Q1);
              __asm { FMOV            V1.4S, #1.0 }
              float32x4_t v373 = vminnmq_f32(v387, _Q1);
              break;
            case 19:
              v373.i16[0] = v59->i16[0];
              v391.f32[0] = (float)v373.u32[0];
              _Q1.i16[0] = v59->i16[1];
              v391.f32[1] = (float)_Q1.u32[0];
              *(int32x2_t *)_Q1.f32 = vdup_n_s32(0x37800080u);
              *(float32x2_t *)v373.f32 = vmul_f32(v391, *(float32x2_t *)_Q1.f32);
              break;
            case 20:
              v373.i16[0] = v59->i16[0];
              _Q1.i16[0] = v59->i16[1];
              _Q1.f32[0] = (float)_Q1.u32[0];
              v375.i16[0] = v59->i16[2];
              v389.i32[3] = 0;
              v389.f32[0] = (float)v373.u32[0];
              v389.i32[1] = _Q1.i32[0];
              v389.f32[2] = (float)v375.u32[0];
              float32x4_t v373 = vmulq_f32(v389, (float32x4_t)vdupq_n_s32(0x37800080u));
              break;
            case 21:
              float32x4_t v383 = vcvtq_f32_u32(vmovl_u16(*v59));
              unsigned int v384 = 931135616;
              goto LABEL_256;
            case 22:
              v388.i32[0] = v59->i16[0];
              v388.i32[1] = v59->i16[1];
              *(int32x2_t *)_Q1.f32 = vdup_n_s32(0x38000100u);
              *(float32x2_t *)v373.f32 = vmul_f32(vadd_f32((float32x2_t)vadd_s32(v388, vdup_n_s32(0x4B400000u)), (float32x2_t)vdup_n_s32(0xCB400000)), *(float32x2_t *)_Q1.f32);
              break;
            case 23:
              v392.i32[0] = v59->i32[0];
              v392.i32[1] = v59->u16[2];
              float32x4_t v393 = (float32x4_t)vaddw_s16(vdupq_n_s32(0x4B400000u), v392);
              goto LABEL_255;
            case 24:
              float32x4_t v393 = (float32x4_t)vaddw_s16(vdupq_n_s32(0x4B400000u), (int16x4_t)*v59);
LABEL_255:
              float32x4_t v383 = vaddq_f32(v393, (float32x4_t)vdupq_n_s32(0xCB400000));
              unsigned int v384 = 939524352;
LABEL_256:
              _Q1 = (float32x4_t)vdupq_n_s32(v384);
              float32x4_t v373 = vmulq_f32(v383, _Q1);
              break;
            case 25:
              float v752 = sub_1B64D90E0(v59->u16[0]);
              _Q1.i32[0] = sub_1B64D90E0(v59->u16[1]);
              v373.i32[2] = 0;
              v375.i16[1] = HIWORD(v752);
              v373.i64[0] = __PAIR64__(_Q1.u32[0], LODWORD(v752));
              break;
            case 26:
              v396.i32[0] = v59->u16[0];
              v396.i32[1] = v59->u16[1];
              v396.i64[1] = v59->u16[2];
              v397.i64[0] = 0x8000000080000000;
              v397.i64[1] = 0x8000000080000000;
              int8x16_t v398 = vandq_s8((int8x16_t)vshlq_n_s32(v396, 0x10uLL), v397);
              int8x16_t v399 = (int8x16_t)vshlq_n_s32(v396, 0xDuLL);
              _Q1 = (float32x4_t)vorrq_s8(v398, vandq_s8(v399, (int8x16_t)vdupq_n_s32(0x7FE000u)));
              v375.i64[0] = 0x3800000038000000;
              v375.i64[1] = 0x3800000038000000;
              float32x4_t v373 = (float32x4_t)vorrq_s8((int8x16_t)_Q1, (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v399, (int8x16_t)vdupq_n_s32(0xF800000u)), (int32x4_t)v375));
              break;
            case 27:
              v379.i64[0] = 0x8000000080000000;
              v379.i64[1] = 0x8000000080000000;
              int8x16_t v380 = (int8x16_t)vshll_n_u16(*v59, 0xDuLL);
              int8x16_t v381 = vorrq_s8(vandq_s8((int8x16_t)vmovl_s16((int16x4_t)*v59), v379), vandq_s8(v380, (int8x16_t)vdupq_n_s32(0x7FE000u)));
              int8x16_t v375 = (int8x16_t)vdupq_n_s32(0xF800000u);
              int32x4_t v382 = (int32x4_t)vorrq_s8(vandq_s8(v380, v375), v381);
              _Q1.i64[0] = 0x3800000038000000;
              _Q1.i64[1] = 0x3800000038000000;
              float32x4_t v373 = (float32x4_t)vaddq_s32(v382, (int32x4_t)_Q1);
              break;
            case 28:
              v373.i32[0] = v59->i32[0];
              break;
            case 29:
              *(uint16x4_t *)v373.f32 = *v59;
              break;
            case 31:
              float32x4_t v373 = *(float32x4_t *)v59->i8;
              break;
            case 41:
              uint32x4_t v394 = (uint32x4_t)vld1q_dup_f32((const float *)v59);
              _Q1.i16[1] = 14976;
              float32x4_t v373 = vmulq_f32(vcvtq_f32_u32((uint32x4_t)vandq_s8((int8x16_t)vshlq_u32(v394, (uint32x4_t)xmmword_1B6E72A00), (int8x16_t)xmmword_1B6E729C0)), (float32x4_t)xmmword_1B6E72A10);
              break;
            case 51:
              v373.i16[0] = v59->i16[0];
              v373.f32[0] = (float)v373.u32[0];
              float v395 = 0.000015259;
              goto LABEL_263;
            case 52:
              v373.i16[0] = v59->i16[0];
              v373.f32[0] = (float)vmovl_s16(*(int16x4_t *)v373.f32).i32[0];
              float v395 = 0.000030519;
LABEL_263:
              _Q1.f32[0] = v373.f32[0] * v395;
              goto LABEL_264;
            case 53:
              _Q1.i32[0] = sub_1B64D90E0(v59->u16[0]);
LABEL_264:
              v373.i32[2] = 0;
              v373.i64[0] = _Q1.u32[0];
              break;
            default:
              uint32x4_t v390 = (uint32x4_t)vld1q_dup_f32((const float *)v59);
              _Q1.i16[1] = 15104;
              float32x4_t v373 = vmulq_f32(vcvtq_f32_s32(vshlq_s32((int32x4_t)vshlq_u32(v390, (uint32x4_t)xmmword_1B6E729E0), (int32x4_t)xmmword_1B6E729F0)), (float32x4_t)xmmword_1B6E72A20);
              break;
          }
          *((void *)v378 - 1) = v373.i64[0];
          _DWORD *v378 = v373.i32[2];
          v378 += 3;
          v59 = (uint16x4_t *)((char *)v59 + v61);
          --v377;
        }
        while (v377);
      }
      sub_1B6A568A4(v376, 12, 1, a5, &v757, v755, v738);
      MEMORY[0x1BA9B84C0](v376, -1, -1);
    }
    uint64_t v45 = v55;
    if ((v760 & 1) == 0)
    {
      float32x4_t v400 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(a20, v759, 2), a19, *(float32x2_t *)v759.f32, 1), a18, v759.f32[0]);
      float32x4_t v401 = vmulq_f32(v400, v400);
      int32x2_t v402 = (int32x2_t)vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v401, 2), vaddq_f32(v401, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v401.f32, 1))).u64[0];
      unsigned int v403 = *(float *)v402.i32 != 0.0;
      if (v712)
      {
        uint64_t v405 = 0;
        uint64_t v406 = 0;
      }
      else
      {
        v404 = (uint64_t *)(v700 + 16 * v55);
        uint64_t v405 = *v404;
        uint64_t v406 = v404[1];
      }
      float32x4_t v689 = vmlaq_n_f32(vmlaq_lane_f32(vmlaq_laneq_f32(a17, a13, v758, 2), a12, *(float32x2_t *)v758.f32, 1), a11, v758.f32[0]);
      v689.i32[3] = v701;
      float32x4_t v690 = (float32x4_t)vdupq_lane_s32(v402, 0);
      v690.i32[3] = 0;
      float32x4_t v691 = vrsqrteq_f32(v690);
      float32x4_t v692 = vmulq_f32(v691, vrsqrtsq_f32(v690, vmulq_f32(v691, v691)));
      int8x16_t v693 = (int8x16_t)vmulq_f32(v400, vmulq_f32(v692, vrsqrtsq_f32(v690, vmulq_f32(v692, v692))));
      int32x4_t v694 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v403)), 0x1FuLL));
      v694.i32[3] = 0;
      float32x4_t v695 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v694), v693, (int8x16_t)v400);
      v695.i32[3] = v702;
      sub_1B6C323C0(v55, v723, v724, v405, v406, v712, v689, v695, v757.f32[0]);
    }
    goto LABEL_6;
  }
LABEL_2:
  sub_1B6B02B78((uint64_t)v761, a4 | ((HIDWORD(a4) & 1) << 32));
  return sub_1B6894710((uint64_t)v761);
}

uint64_t sub_1B6B02B78(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = sub_1B6894764(a1, (uint64_t)v9);
  if (v9[28])
  {
    MEMORY[0x1F4188790](v3, v9[7]);
    v8[2] = v9;
    sub_1B6B2150C(0, v4, 1, a2 | ((HIDWORD(a2) & 1) << 32), v5, (void (*)(void *))sub_1B68947C0, (uint64_t)v8, v6);
    ecs_stack_allocator_deallocate(*(void **)(v9[11] + 32), v9[26], 80 * v9[27]);
  }
  sub_1B6C33184(v9);
  return sub_1B6894710((uint64_t)v9);
}

uint64_t sub_1B6B02C54(uint64_t result, float32x2_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5 = *(_DWORD *)(result + 28);
  uint64_t v6 = *(int *)(result + 24);
  if ((v6 != -1 || v5 != 0)
    && (v6 & 0x80000000) == 0
    && *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v6)
  {
    uint64_t v10 = a3;
    uint64_t v12 = (float32x2_t *)result;
    float v13 = *(float *)(a3 + 160);
    uint64_t v14 = *(void *)(a4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (v5 == -1 || *(_DWORD *)(v14 + 12 * (int)v6 + 8) == v5)
    {
      double result = sub_1B69656CC(*(void *)(*(void *)(a4 + 136) + 8 * *(int *)(v14 + 12 * (int)v6) + 32), *(_DWORD *)(v14 + 12 * (int)v6), *(_WORD *)(v14 + 12 * (int)v6 + 4), 16, a4);
      if (v15)
      {
        uint64_t v109 = result;
        swift_bridgeObjectRelease();
        double result = v109;
        if (v109)
        {
          int v16 = *(_DWORD *)(v10 + 84) & v12[2].i32[1];
          if (v16)
          {
            float v17 = *(float *)(v10 + 80);
            float v18 = v12[2].f32[0] + v17;
            float v19 = fminf(fmaxf(v12[1].f32[1] + *(float *)(v10 + 76), 0.0), 1.0);
            float v20 = fminf(fmaxf(v12[1].f32[0] + *(float *)(v10 + 72), 0.0), 1.0);
            __asm { FMOV            V4.2S, #1.0 }
            *(float32x2_t *)v146.f32 = vminnm_f32(vmaxnm_f32(vadd_f32(*v12, *(float32x2_t *)(v10 + 64)), 0), _D4);
            v146.f32[2] = v20;
            v146.f32[3] = 1.0 - v19;
            float v147 = v18;
            int v148 = v16;
            float32x4_t v25 = *(float32x4_t *)(v10 + 96);
            float32x4_t v26 = *(float32x4_t *)(v10 + 112);
            float32x4_t v27 = *(float32x4_t *)(v10 + 128);
            float32x4_t v28 = *(float32x4_t *)(v10 + 144);
            float32x4_t v120 = *(float32x4_t *)a2->f32;
            float32x4_t v122 = *(float32x4_t *)a2[2].f32;
            v152.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, COERCE_FLOAT(*(_OWORD *)a2->f32)), v26, *a2, 1), v27, *(float32x4_t *)a2->f32, 2), v28, *(float32x4_t *)a2->f32, 3);
            v152.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, v122.f32[0]), v26, *(float32x2_t *)v122.f32, 1), v27, v122, 2), v28, v122, 3);
            float32x4_t v125 = *(float32x4_t *)a2[4].f32;
            v152.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, v125.f32[0]), v26, a2[4], 1), v27, v125, 2), v28, v125, 3);
            v152.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v25, COERCE_FLOAT(*(_OWORD *)a2[6].f32)), v26, a2[6], 1), v27, *(float32x4_t *)a2[6].f32, 2), v28, *(float32x4_t *)a2[6].f32, 3);
            float32x4_t v107 = (float32x4_t)v152.columns[1];
            float32x4_t v108 = (float32x4_t)v152.columns[0];
            float32x4_t v105 = (float32x4_t)v152.columns[3];
            float32x4_t v106 = (float32x4_t)v152.columns[2];
            simd_float4x4 v153 = __invert_f4(v152);
            float32x4_t v103 = (float32x4_t)v153.columns[1];
            float32x4_t v104 = (float32x4_t)v153.columns[0];
            float32x4_t v101 = (float32x4_t)v153.columns[3];
            float32x4_t v102 = (float32x4_t)v153.columns[2];
            if ((LODWORD(v17) & 0x7FFFFFFF) != 0)
            {
              float32x4_t v29 = vmulq_f32(v120, v120);
              float32x4_t v30 = vmulq_f32(v122, v122);
              float v31 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v30, 2), vaddq_f32(v30, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v30.f32, 1))).f32[0]);
              float32x4_t v32 = vmulq_f32(v125, v125);
              float v33 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v32, 2), vaddq_f32(v32, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v32.f32, 1))).f32[0]);
              if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v29, 2), vaddq_f32(v29, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v29.f32, 1))).f32[0]) != v31|| v31 != v33)
              {
                if (qword_1EB9852D0 != -1) {
                  swift_once();
                }
                swift_retain();
                int v35 = sub_1B6E32148();
                if (qword_1EB9854F8 != -1) {
                  swift_once();
                }
                *(void *)&long long v133 = 0;
                swift_retain();
                sub_1B6B33E34(v35, (uint64_t *)&v133, 0xD00000000000004ALL, 0x80000001B6F48910);
                swift_release();
                swift_release();
              }
            }
            BOOL v36 = (a5 & 0xFE00000000) != 0;
            if (!a5) {
              BOOL v36 = 1;
            }
            BOOL v100 = v36;
            v149[0] = *(_OWORD *)(v10 + 24);
            v149[1] = *(_OWORD *)(v10 + 40);
            uint64_t v150 = *(void *)(v10 + 56);
            sub_1B62C9DA8(a4, (uint64_t)v149, 0x200000000, v127);
            sub_1B62CA210((uint64_t)v127, (uint64_t)v128, (unint64_t *)&qword_1EB97DC50);
            float32x4_t v121 = (unsigned __int16 *)v128[0];
            if (v128[0])
            {
              uint64_t v99 = v132;
              if (v132 > 0)
              {
                uint64_t v98 = v129;
                if (v129)
                {
                  uint64_t v37 = 0;
                  int32x4_t v38 = (int32x4_t)vmulq_f32(v108, v108);
                  int32x4_t v39 = (int32x4_t)vmulq_f32(v107, v107);
                  int32x4_t v40 = (int32x4_t)vmulq_f32(v106, v106);
                  float32x4_t v41 = (float32x4_t)vtrn2q_s32(v38, v39);
                  v41.i32[2] = v40.i32[1];
                  float32x4_t v42 = vaddq_f32((float32x4_t)vzip1q_s32(vzip2q_s32(v38, v40), vdupq_laneq_s32(v39, 2)), vaddq_f32((float32x4_t)vzip1q_s32(vzip1q_s32(v38, v40), v39), v41));
                  int32x4_t v43 = vceqzq_f32(v42);
                  __asm { FMOV            V2.4S, #1.0 }
                  v43.i32[3] = 0;
                  float32x4_t v45 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v43), (int8x16_t)v42, (int8x16_t)vdivq_f32(_Q2, v42));
                  float32x4_t v95 = vmulq_lane_f32(v107, *(float32x2_t *)v45.f32, 1);
                  float32x4_t v96 = vmulq_n_f32(v108, v45.f32[0]);
                  float32x4_t v94 = vmulq_laneq_f32(v106, v45, 2);
                  uint64_t v93 = v128[5];
                  int v119 = *(unsigned __int8 *)(v130 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
                  uint64_t v118 = v131[4];
                  v91 = v131 + 8;
                  uint64_t v92 = v130;
                  if ((a5 & 0xFE00000000) != 0) {
                    uint64_t v46 = 0;
                  }
                  else {
                    uint64_t v46 = a5;
                  }
                  uint64_t v90 = v46;
                  uint64_t v151 = v128[0] + 41;
                  uint64_t v97 = v10;
                  float32x4_t v126 = v131;
                  do
                  {
                    float32x4_t v47 = (unsigned int *)(v93 + 48 * v37);
                    uint64_t v48 = *v47;
                    uint64_t v49 = v47[1];
                    uint64_t v50 = v47[2];
                    uint64_t v51 = *((void *)v47 + 3);
                    uint64_t v115 = v37;
                    uint64_t v116 = *((void *)v47 + 2);
                    uint64_t v52 = *((void *)v47 + 5);
                    uint64_t v123 = *((void *)v47 + 4);
                    if (v119)
                    {
                      v53 = *(os_unfair_lock_s **)(v52 + 376);
                      swift_retain_n();
                      os_unfair_lock_lock(v53);
                      os_unfair_lock_lock(*(os_unfair_lock_t *)(v52 + 344));
                      swift_release();
                    }
                    else
                    {
                      swift_retain();
                    }
                    ecs_stack_allocator_push_snapshot(v118);
                    v54 = v126;
                    uint64_t v113 = v126[7];
                    uint64_t v114 = v126[6];
                    uint64_t v111 = v126[9];
                    uint64_t v112 = v126[8];
                    uint64_t v110 = v126[10];
                    uint64_t v55 = v126[4];
                    uint64_t v56 = *(void *)(*(void *)(*(void *)(*(void *)(v52 + 40) + 16) + 32) + 16) + 1;
                    swift_retain();
                    v126[6] = ecs_stack_allocator_allocate(v55, 48 * v56, 8);
                    v126[7] = v56;
                    v91[1] = 0;
                    v91[2] = 0;
                    void *v91 = 0;
                    swift_release();
                    *(void *)&long long v133 = v92;
                    *((void *)&v133 + 1) = v52;
                    uint64_t v117 = v52;
                    v134 = v126;
                    uint64_t v135 = v50;
                    uint64_t v136 = (v49 - v48 + v50);
                    uint64_t v137 = v99;
                    uint64_t v138 = v48;
                    uint64_t v139 = v49;
                    uint64_t v140 = 0;
                    uint64_t v141 = 0;
                    char v142 = 1;
                    uint64_t v143 = v116;
                    uint64_t v144 = v51;
                    uint64_t v145 = v123;
                    sub_1B6AFFA3C(&v133, &v146, v10, v90 | ((unint64_t)v100 << 32), v109, v13, v104, v103, v102, v101, v108, v107, v106, v57, v58, v59, v105, v96, v95,
                      v94);
                    unint64_t v60 = v126[6];
                    uint64_t v124 = v126[8];
                    if (!v124)
                    {
                      uint64_t v87 = v126[7];
                      float32x4_t v88 = (void *)v126[4];
                      goto LABEL_72;
                    }
                    for (uint64_t i = 0; i != v124; ++i)
                    {
                      unint64_t v63 = v60;
                      uint64_t v64 = (uint64_t *)(v60 + 48 * i);
                      uint64_t v65 = *v64;
                      v66 = (void (*)(uint64_t))v64[4];
                      uint64_t v67 = v54[9];
                      if (v67) {
                        BOOL v68 = v65 == v67;
                      }
                      else {
                        BOOL v68 = 0;
                      }
                      if (v68 || !v121[11]) {
                        goto LABEL_37;
                      }
                      unint64_t v69 = v121[9];
                      uint64_t v70 = (void *)(v151 + v121[8]);
                      uint64_t v71 = v64[2];
                      uint64_t v72 = v70;
                      unint64_t v73 = v69 >> 4;
                      uint64_t v74 = v151;
                      if (v69 >= 0x10)
                      {
                        while (*v72 != v65)
                        {
                          ++v74;
                          v72 += 2;
                          if (!--v73) {
                            goto LABEL_52;
                          }
                        }
                        unsigned int v75 = *(unsigned __int8 *)(v74 + v121[10]);
                        BOOL v76 = v75 > 5;
                        int v77 = (1 << v75) & 0x23;
                        if (v76 || v77 == 0)
                        {
LABEL_37:
                          uint64_t v62 = swift_retain();
                          v66(v62);
                          swift_release();
                          goto LABEL_38;
                        }
                      }
LABEL_52:
                      if (swift_conformsToProtocol2()) {
                        uint64_t v79 = v71;
                      }
                      else {
                        uint64_t v79 = 0;
                      }
                      if (v79)
                      {
                        if (v69 < 0x10) {
                          goto LABEL_37;
                        }
                        v80 = v70;
                        unint64_t v81 = v69 >> 4;
                        uint64_t v82 = v151;
                        while (*v80 != v79)
                        {
                          ++v82;
                          v80 += 2;
                          if (!--v81) {
                            goto LABEL_65;
                          }
                        }
                        unsigned int v83 = *(unsigned __int8 *)(v82 + v121[10]);
                        BOOL v76 = v83 > 5;
                        int v84 = (1 << v83) & 0x23;
                        if (v76 || v84 == 0) {
                          goto LABEL_37;
                        }
LABEL_65:
                        uint64_t v86 = 16 * (v69 >> 4);
                        while (*v70 != v79)
                        {
                          v70 += 2;
                          v86 -= 16;
                          if (!v86) {
                            goto LABEL_37;
                          }
                        }
                      }
LABEL_38:
                      v54 = v126;
                      unint64_t v60 = v63;
                    }
                    uint64_t v87 = v126[7];
                    unint64_t v60 = v126[6];
                    float32x4_t v88 = (void *)v126[4];
                    if ((uint64_t)v126[8] >= 1)
                    {
                      unint64_t v89 = v126[6];
                      swift_arrayDestroy();
                      unint64_t v60 = v89;
                    }
LABEL_72:
                    ecs_stack_allocator_deallocate(v88, v60, 48 * v87);
                    v54[6] = v114;
                    v54[7] = v113;
                    v54[8] = v112;
                    v54[9] = v111;
                    v54[10] = v110;
                    sub_1B634507C((char *)v117);
                    ecs_stack_allocator_pop_snapshot(v118);
                    if (v119)
                    {
                      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v117 + 344));
                      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v117 + 376));
                    }
                    swift_release();
                    uint64_t v37 = v115 + 1;
                    uint64_t v10 = v97;
                  }
                  while (v115 + 1 != v98);
                }
              }
              sub_1B632F170(v127);
            }
            return swift_release();
          }
          else
          {
            return swift_release();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1B6B034B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B698B528(0, (unint64_t *)&unk_1E9DD6DA0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v15[-v9];
  long long v16 = xmmword_1B6E98660;
  int v17 = 0;
  unint64_t v18 = 0xFFFFFFFF000000FFLL;
  int v19 = 0;
  sub_1B689291C(a1, 0);
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  v15[15] = 12;
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v12 = v20;
  int v13 = v17;
  int v14 = v18;
  *(_OWORD *)a2 = v16;
  *(_DWORD *)(a2 + 16) = v13;
  *(_DWORD *)(a2 + 20) = v14;
  *(void *)(a2 + 24) = v12;
  return result;
}

ValueMetadata *type metadata accessor for ParticleMeshCollider()
{
  return &type metadata for ParticleMeshCollider;
}

BOOL sub_1B6B03680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 24);
  uint64_t v7 = v6(a3, a4);
  return v7 == v6(a3, a4);
}

uint64_t sub_1B6B03704()
{
  if ((v0[1] ^ (unint64_t)*v0) < 0x4000) {
    return 0;
  }
  sub_1B6E32548();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1B6E32588();
  swift_bridgeObjectRelease();
  sub_1B6E32568();
  swift_bridgeObjectRetain();
  sub_1B6E32528();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1B6E32588();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t *v0 = v2;
  v0[1] = v4;
  v0[2] = v6;
  v0[3] = v8;
  return v1;
}

uint64_t sub_1B6B03868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  if (v3 == v1[3] >> 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t result = 0;
    long long v7 = 0uLL;
  }
  else
  {
    uint64_t v8 = (unsigned __int8 *)(v1[1] + 40 * v3);
    uint64_t v4 = *v8;
    long long v9 = *(_OWORD *)(v8 + 8);
    uint64_t v5 = *((void *)v8 + 3);
    _OWORD v1[2] = v3 + 1;
    uint64_t result = swift_bridgeObjectRetain();
    long long v7 = v9;
  }
  *(void *)a1 = v4;
  *(_OWORD *)(a1 + 8) = v7;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1B6B038F0()
{
  swift_bridgeObjectRetain();
  unint64_t v0 = sub_1B6E31A78();
  unint64_t v2 = v1;
  swift_bridgeObjectRelease();
  if (v2 >> 14 != v0 >> 14)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v5 = sub_1B6E32568();
      unint64_t v7 = v6;
      unint64_t v8 = sub_1B6E32528();
      if (!((v7 & 0x2000000000000000) != 0 ? HIBYTE(v7) & 0xF : v5 & 0xFFFFFFFFFFFFLL)) {
        break;
      }
      if ((v7 & 0x1000000000000000) != 0)
      {
        int v10 = sub_1B6E328B8();
      }
      else
      {
        if ((v7 & 0x2000000000000000) == 0 && (v5 & 0x1000000000000000) == 0) {
          sub_1B6E329D8();
        }
        int v10 = sub_1B6E329E8();
      }
      int v11 = v10;
      swift_bridgeObjectRelease();
      if ((v11 - 14) < 0xFFFFFFFC && (v11 - 8232) >= 2)
      {
        uint64_t v4 = 1;
        if (v11 == 133) {
          goto LABEL_5;
        }
        goto LABEL_15;
      }
      uint64_t v4 = 1;
LABEL_5:
      v3 += v4;
      if (v2 >> 14 == v8 >> 14)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v4 = 0;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
LABEL_24:
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  return 0x3A7475706E69;
}

uint64_t sub_1B6B03B58()
{
  sub_1B6B11C54();
  MEMORY[0x1F4188790](v0 - 8, v1);
  float32x4_t v28 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6B1203C(0, &qword_1EB97DA08, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBD2D0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  unint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v27 - v11;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1B6E31A78();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v29 = v13;
  uint64_t v30 = v15;
  uint64_t v31 = v17;
  uint64_t v32 = v19;
  sub_1B6B11D38(0, &qword_1E9DD5BA0, (uint64_t (*)(void))sub_1B6B11DA0, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBBD30]);
  sub_1B6B11DF4();
  sub_1B6E31A58();
  sub_1B6E311B8();
  sub_1B6E31218();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  char v20 = v5 + 8;
  uint64_t v22 = v8;
  uint64_t v23 = (uint64_t)v28;
  v21(v22, v4);
  uint64_t v24 = v33;
  sub_1B6E311E8();
  v21(v12, v4);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    sub_1B6B1203C(0, &qword_1EB97D9E8, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBD2C8]);
    char v20 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v23, 1, v25) != 1;
    sub_1B6B11CD0(v23);
  }
  return v20 & 1;
}

uint64_t sub_1B6B03E70@<X0>(uint64_t *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  sub_1B6E32548();
  uint64_t v8 = sub_1B6E32568();
  BOOL v10 = v8 == 36 && v9 == 0xE100000000000000;
  if (v10 || (v11 = v8, uint64_t v12 = v9, (sub_1B6E334B8() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 5;
LABEL_7:
    *a3 = v17;
    a3[1] = result;
    a3[2] = v14;
    a3[3] = v15;
    a3[4] = v16;
    return result;
  }
  BOOL v18 = v11 == 46 && v12 == 0xE100000000000000;
  if (v18 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 2;
    goto LABEL_7;
  }
  if (v11 == 58 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 3;
    goto LABEL_7;
  }
  if (v11 == 59 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 4;
    goto LABEL_7;
  }
  if (v11 == 64 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 6;
    goto LABEL_7;
  }
  if (v11 == 61 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 7;
    goto LABEL_7;
  }
  if (v11 == 40 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 8;
    goto LABEL_7;
  }
  if (v11 == 41 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 9;
    goto LABEL_7;
  }
  if (v11 == 91 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 10;
    goto LABEL_7;
  }
  if (v11 == 93 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 11;
    goto LABEL_7;
  }
  if (v11 == 60 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 12;
    goto LABEL_7;
  }
  if (v11 == 62 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 13;
    goto LABEL_7;
  }
  if (v11 == 44 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6B03704();
    unsigned int v17 = 0;
    goto LABEL_7;
  }
  if ((v11 != 35 || v12 != 0xE100000000000000) && (sub_1B6E334B8() & 1) == 0)
  {
    if (v11 == 65 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 66 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 67 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 68 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 69 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 70 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 71 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 72 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 73 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 74 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 75 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 76 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 77 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 78 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 79 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 80 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 81 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 82 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 83 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 84 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 85 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 86 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 87 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 88 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 89 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 90 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 97 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 98 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 99 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 100 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 101 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 102 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 103 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 104 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 105 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 106 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 107 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 108 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 109 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 110 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 111 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 112 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 113 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 114 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 115 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 116 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 117 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 118 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 119 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 120 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 121 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 122 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 95 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = v50;
      uint64_t result = sub_1B6B08260(a1, v40);
      uint64_t v50 = v19;
      if (!v19)
      {
        unsigned int v17 = v40[0];
        uint64_t result = v41;
        uint64_t v14 = v42;
        uint64_t v15 = v43;
        uint64_t v16 = v44;
        goto LABEL_7;
      }
      return result;
    }
    if (v11 == 48 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 49 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 50 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 51 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 52 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 53 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 54 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 55 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 56 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 57 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = v50;
      uint64_t result = sub_1B6B08688(a1, v45);
      uint64_t v50 = v25;
      if (!v25)
      {
        unsigned int v17 = v45[0];
        uint64_t result = v46;
        uint64_t v14 = v47;
        uint64_t v15 = v48;
        uint64_t v16 = v49;
        goto LABEL_7;
      }
      return result;
    }
    if (v11 == 47 && v12 == 0xE100000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      sub_1B6E32548();
      if (sub_1B6E32568() == 47 && v26 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_271;
      }
      char v27 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if (v27)
      {
LABEL_271:
        swift_bridgeObjectRelease();
        uint64_t result = sub_1B6B08AD0(a1);
        if (v50) {
          return result;
        }
LABEL_65:
        unsigned int v17 = 0;
        uint64_t result = 0;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        goto LABEL_7;
      }
    }
    if (v11 == 32 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 9 && v12 == 0xE100000000000000
      || (sub_1B6E334B8() & 1) != 0
      || v11 == 10 && v12 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v28 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
      {
        sub_1B6E328C8();
        sub_1B6E31948();
        sub_1B6E32548();
        sub_1B6E32568();
        sub_1B6E315D8();
        swift_bridgeObjectRelease();
        uint64_t v36 = sub_1B6B038F0();
        uint64_t v38 = v37;
        swift_bridgeObjectRelease();
        sub_1B6B11C00();
        uint64_t v23 = swift_allocError();
        *int32x4_t v39 = v36;
        v39[1] = v38;
        goto LABEL_74;
      }
    }
    if ((v7 ^ (unint64_t)v6) >= 0x4000)
    {
      sub_1B6E32568();
      swift_bridgeObjectRetain();
      sub_1B6E32528();
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_1B6E32588();
      uint64_t v31 = v30;
      uint64_t v33 = v32;
      uint64_t v35 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned int v17 = 0;
      uint64_t result = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      *a1 = v29;
      a1[1] = v31;
      a1[2] = v33;
      a1[3] = v35;
      goto LABEL_7;
    }
    goto LABEL_65;
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6B07D20(a1);
  if (!v50)
  {
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1B6B03704();
      unsigned int v17 = 1;
      goto LABEL_7;
    }
    if (a2) {
      goto LABEL_65;
    }
    uint64_t v20 = sub_1B6B038F0();
    uint64_t v22 = v21;
    sub_1B6B11C00();
    uint64_t v23 = swift_allocError();
    *uint64_t v24 = v20;
    v24[1] = v22;
LABEL_74:
    uint64_t v50 = v23;
    return swift_willThrow();
  }
  return result;
}

void *sub_1B6B05330(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  unint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  if ((a2 ^ a1) >= 0x4000)
  {
    uint64_t v35 = a3;
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      sub_1B6B03E70((uint64_t *)&v25, a5 & 1, v29);
      if (v6) {
        break;
      }
      sub_1B6B11B80((uint64_t)v29, (uint64_t)v30, &qword_1EB97FDA8, (uint64_t)&type metadata for Lexer.Token);
      if (v31)
      {
        long long v32 = v30[0];
        long long v33 = v30[1];
        uint64_t v34 = v31;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1B68C2F44(0, v7[2] + 1, 1, v7);
        }
        unint64_t v13 = v7[2];
        unint64_t v12 = v7[3];
        if (v13 >= v12 >> 1) {
          uint64_t v7 = sub_1B68C2F44(v12 > 1, v13 + 1, 1, v7);
        }
        v7[2] = v13 + 1;
        uint64_t v9 = &v7[5 * v13];
        long long v10 = v32;
        long long v11 = v33;
        v9[8] = v34;
        *((_OWORD *)v9 + 2) = v10;
        *((_OWORD *)v9 + 3) = v11;
      }
      if (!((v26 ^ v25) >> 14)) {
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1B6E32588();
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_1B68C2F44(0, v7[2] + 1, 1, v7);
    }
    unint64_t v22 = v7[2];
    unint64_t v21 = v7[3];
    if (v22 >= v21 >> 1) {
      uint64_t v7 = sub_1B68C2F44(v21 > 1, v22 + 1, 1, v7);
    }
    v7[2] = v22 + 1;
    uint64_t v23 = &v7[5 * v22];
    *((unsigned char *)v23 + 32) = 16;
    v23[5] = v14;
    v23[6] = v16;
    v23[7] = v18;
    v23[8] = v20;
  }
  return v7;
}

uint64_t sub_1B6B05598(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return v1 | 0x100;
  }
  for (uint64_t i = a1 + 56; ; i += 32)
  {
    uint64_t v3 = *(void *)(i - 16);
    if (v3)
    {
      BOOL v4 = *(void *)(i - 24) == 0x74756F6E69 && v3 == 0xE500000000000000;
      if (v4 || (sub_1B6E334B8() & 1) != 0) {
        break;
      }
    }
    if (!--v1) {
      return v1 | 0x100;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B6E31828();
  BOOL v7 = v5 == 1702195828 && v6 == 0xE400000000000000;
  if (v7
    || (uint64_t v8 = v5, v9 = v6, (sub_1B6E334B8() & 1) != 0)
    || v8 == 7562617 && v9 == 0xE300000000000000
    || (sub_1B6E334B8() & 1) != 0
    || v8 == 49 && v9 == 0xE100000000000000
    || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v11 = 3;
LABEL_18:
    swift_bridgeObjectRelease();
    return v11;
  }
  if (v8 == 0x65736C6166 && v9 == 0xE500000000000000
    || (sub_1B6E334B8() & 1) != 0
    || v8 == 28526 && v9 == 0xE200000000000000
    || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_32:
    swift_bridgeObjectRelease();
    unsigned int v11 = 1;
    goto LABEL_18;
  }
  if (v8 == 48 && v9 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v11 = 1;
    goto LABEL_18;
  }
  char v12 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_32;
  }
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6B117F4();
  swift_allocError();
  *unint64_t v13 = 39;
  v13[1] = 0xE100000000000000;
  return swift_willThrow();
}

uint64_t sub_1B6B058F4()
{
  uint64_t v0 = sub_1B638E5B0((uint64_t)&unk_1F0F5BC08);
  uint64_t result = swift_arrayDestroy();
  qword_1EB997A60 = v0;
  return result;
}

uint64_t sub_1B6B05940()
{
  if (*(void *)(v0 + 16) == *(void *)(v0 + 24) >> 1) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B6E31A78();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v1 = MEMORY[0x1BA9B34C0](v2, v4, v6, v8);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B6B05A24()
{
  if (*(void *)(v0 + 16) != *(void *)(v0 + 24) >> 1) {
    swift_bridgeObjectRetain();
  }
  unint64_t v1 = sub_1B6E31A78();
  unint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v3 >> 14 != v1 >> 14)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t v6 = sub_1B6E32568();
      unint64_t v8 = v7;
      unint64_t v9 = sub_1B6E32528();
      if (!((v8 & 0x2000000000000000) != 0 ? HIBYTE(v8) & 0xF : v6 & 0xFFFFFFFFFFFFLL)) {
        break;
      }
      if ((v8 & 0x1000000000000000) != 0)
      {
        int v11 = sub_1B6E328B8();
      }
      else
      {
        if ((v8 & 0x2000000000000000) == 0 && (v6 & 0x1000000000000000) == 0) {
          sub_1B6E329D8();
        }
        int v11 = sub_1B6E329E8();
      }
      int v12 = v11;
      swift_bridgeObjectRelease();
      if ((v12 - 14) < 0xFFFFFFFC && (v12 - 8232) >= 2)
      {
        uint64_t v5 = 1;
        if (v12 == 133) {
          goto LABEL_7;
        }
        goto LABEL_17;
      }
      uint64_t v5 = 1;
LABEL_7:
      v4 += v5;
      if (v3 >> 14 == v9 >> 14)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v5 = 0;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
LABEL_26:
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  return 0x3A7475706E69;
}

uint64_t sub_1B6B05CB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  if (v3 == v1[3] >> 1 || (uint64_t v4 = v1[1], *(unsigned char *)(v4 + 40 * v3) != 16))
  {
    sub_1B6B03868((uint64_t)v13);
    uint64_t v6 = v14;
    uint64_t v7 = v15;
    uint64_t v9 = v16;
    uint64_t v8 = v17;
    uint64_t v12 = (uint64_t)(v1 + 4);
    char v11 = v13[0];
    sub_1B6B118B8((uint64_t)v13, v12);
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = (void *)(v4 + 40 * v3);
    uint64_t v6 = v5[1];
    uint64_t v7 = v5[2];
    uint64_t v9 = v5[3];
    uint64_t v8 = v5[4];
    uint64_t result = swift_bridgeObjectRetain();
    char v11 = 16;
  }
  *(unsigned char *)a1 = v11;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v8;
  return result;
}

uint64_t sub_1B6B05D60()
{
  if (*(void *)(v0 + 16) == *(void *)(v0 + 24) >> 1) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B6E31A78();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v1 = MEMORY[0x1BA9B34C0](v2, v4, v6, v8);
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_1B6B05E3C(unsigned __int8 a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12 = a5 + 16;
  if (a4 == 3 || (sub_1B677F7B4(a4, a3) & 1) == 0)
  {
    long long v27 = *(_OWORD *)(v12 + 48);
    _OWORD v51[2] = *(_OWORD *)(v12 + 32);
    v51[3] = v27;
    uint64_t v52 = *(void *)(v12 + 64);
    long long v28 = *(_OWORD *)(v12 + 16);
    v51[0] = *(_OWORD *)v12;
    v51[1] = v28;
    sub_1B6B119AC((uint64_t)v51);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    MEMORY[0x1BA9B34C0](a6, a7, a8, a9);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6B11AF4();
    sub_1B6E31EE8();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1B6B05A24();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    long long v32 = v51;
LABEL_23:
    sub_1B6B119E4((uint64_t)v32);
    sub_1B6B117F4();
    swift_allocError();
    *long long v33 = v29;
    v33[1] = v31;
    return swift_willThrow();
  }
  uint64_t v45 = *(void *)(a10 + 16);
  if (v45)
  {
    uint64_t v42 = a7;
    uint64_t v43 = a8;
    uint64_t v53 = a2 + 56;
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    while (1)
    {
      uint64_t v15 = (uint64_t *)(a10 + 32 + 32 * v14);
      uint64_t v16 = v15[1];
      if (!v16)
      {
        swift_bridgeObjectRelease();
        long long v35 = *(_OWORD *)(v12 + 48);
        v49[2] = *(_OWORD *)(v12 + 32);
        v49[3] = v35;
        uint64_t v50 = *(void *)(v12 + 64);
        long long v36 = *(_OWORD *)(v12 + 16);
        v49[0] = *(_OWORD *)v12;
        v49[1] = v36;
        sub_1B6B119AC((uint64_t)v49);
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        MEMORY[0x1BA9B34C0](a6, v42, v43, a9);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v29 = sub_1B6B05A24();
        uint64_t v31 = v37;
        swift_bridgeObjectRelease();
        long long v32 = v49;
        goto LABEL_23;
      }
      uint64_t v17 = *v15;
      if (!*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        goto LABEL_28;
      }
      sub_1B6E33918();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      uint64_t v18 = sub_1B6E33988();
      uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v53 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_28;
      }
      uint64_t v21 = *(void *)(a2 + 48);
      unint64_t v22 = (void *)(v21 + 16 * v20);
      BOOL v23 = *v22 == v17 && v16 == v22[1];
      if (!v23 && (sub_1B6E334B8() & 1) == 0) {
        break;
      }
LABEL_5:
      ++v14;
      swift_bridgeObjectRelease();
      if (v14 == v45)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    uint64_t v24 = ~v19;
    while (1)
    {
      unint64_t v20 = (v20 + 1) & v24;
      if (((*(void *)(v53 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        break;
      }
      unint64_t v25 = (void *)(v21 + 16 * v20);
      BOOL v26 = *v25 == v17 && v16 == v25[1];
      if (v26 || (sub_1B6E334B8() & 1) != 0) {
        goto LABEL_5;
      }
    }
LABEL_28:
    swift_bridgeObjectRelease();
    long long v39 = *(_OWORD *)(v12 + 48);
    v47[2] = *(_OWORD *)(v12 + 32);
    v47[3] = v39;
    uint64_t v48 = *(void *)(v12 + 64);
    long long v40 = *(_OWORD *)(v12 + 16);
    v47[0] = *(_OWORD *)v12;
    v47[1] = v40;
    sub_1B6B119AC((uint64_t)v47);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    MEMORY[0x1BA9B34C0](a6, v42, v43, a9);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v29 = sub_1B6B05A24();
    uint64_t v31 = v41;
    swift_bridgeObjectRelease();
    long long v32 = v47;
    goto LABEL_23;
  }
LABEL_26:
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = a1;
  *(void *)(v38 + 24) = 0;
  *(void *)(v38 + 32) = 0;
  *(void *)(v38 + 40) = 0;
  unint64_t result = v38 | 0xD000000000000000;
  *(unsigned char *)(v38 + 48) = 5;
  return result;
}

uint64_t sub_1B6B06330(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = *(void *)(a3 + 16);
  if (v43)
  {
    char v37 = a1;
    uint64_t v38 = a4 + 16;
    uint64_t v48 = a3 + 32;
    uint64_t v9 = a2 + 56;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    while (1)
    {
      char v11 = (uint64_t *)(v48 + 32 * v10);
      uint64_t v12 = v11[1];
      if (!v12)
      {
        swift_bridgeObjectRelease();
        long long v25 = *(_OWORD *)(v38 + 48);
        v46[2] = *(_OWORD *)(v38 + 32);
        v46[3] = v25;
        uint64_t v47 = *(void *)(v38 + 64);
        long long v26 = *(_OWORD *)(v38 + 16);
        v46[0] = *(_OWORD *)v38;
        v46[1] = v26;
        sub_1B6B119AC((uint64_t)v46);
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        MEMORY[0x1BA9B34C0](a5, a6, a7, a8);
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        uint64_t v27 = sub_1B6B05A24();
        uint64_t v29 = v28;
        swift_bridgeObjectRelease();
        uint64_t v30 = v46;
        goto LABEL_25;
      }
      uint64_t v13 = *v11;
      if (!*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        goto LABEL_24;
      }
      sub_1B6E33918();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      uint64_t v14 = sub_1B6E33988();
      uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v16 = v14 & ~v15;
      if (((*(void *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
        goto LABEL_24;
      }
      uint64_t v17 = *(void *)(a2 + 48);
      uint64_t v18 = (void *)(v17 + 16 * v16);
      BOOL v19 = *v18 == v13 && v12 == v18[1];
      if (!v19 && (sub_1B6E334B8() & 1) == 0) {
        break;
      }
LABEL_3:
      ++v10;
      swift_bridgeObjectRelease();
      if (v10 == v43)
      {
        swift_bridgeObjectRelease();
        a1 = v37;
        goto LABEL_22;
      }
    }
    uint64_t v20 = ~v15;
    for (unint64_t i = v16 + 1; ; unint64_t i = v22 + 1)
    {
      uint64_t v22 = i & v20;
      if (((*(void *)(v9 + (((i & v20) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v20)) & 1) == 0) {
        break;
      }
      BOOL v23 = (void *)(v17 + 16 * v22);
      BOOL v24 = *v23 == v13 && v12 == v23[1];
      if (v24 || (sub_1B6E334B8() & 1) != 0) {
        goto LABEL_3;
      }
    }
LABEL_24:
    swift_bridgeObjectRelease();
    long long v33 = *(_OWORD *)(v38 + 48);
    v44[2] = *(_OWORD *)(v38 + 32);
    v44[3] = v33;
    uint64_t v45 = *(void *)(v38 + 64);
    long long v34 = *(_OWORD *)(v38 + 16);
    v44[0] = *(_OWORD *)v38;
    v44[1] = v34;
    sub_1B6B119AC((uint64_t)v44);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    MEMORY[0x1BA9B34C0](a5, a6, a7, a8);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v27 = sub_1B6B05A24();
    uint64_t v29 = v35;
    swift_bridgeObjectRelease();
    uint64_t v30 = v44;
LABEL_25:
    sub_1B6B119E4((uint64_t)v30);
    sub_1B6B117F4();
    swift_allocError();
    uint64_t *v36 = v27;
    v36[1] = v29;
    return swift_willThrow();
  }
  else
  {
LABEL_22:
    char v31 = a1 & 1;
    uint64_t result = swift_allocObject();
    *(unsigned char *)(result + 16) = v31;
  }
  return result;
}

uint64_t sub_1B6B066E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7)
{
  if (a6 != result)
  {
    long long v11 = *(_OWORD *)(a7 + 64);
    v17[2] = *(_OWORD *)(a7 + 48);
    v17[3] = v11;
    uint64_t v18 = *(void *)(a7 + 80);
    long long v12 = *(_OWORD *)(a7 + 32);
    v17[0] = *(_OWORD *)(a7 + 16);
    v17[1] = v12;
    sub_1B6B119AC((uint64_t)v17);
    sub_1B6E328C8();
    sub_1B6E31948();
    MEMORY[0x1BA9B34C0](a2, a3, a4, a5);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E32B18();
    uint64_t v13 = sub_1B6B05A24();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_1B6B119E4((uint64_t)v17);
    sub_1B6B117F4();
    swift_allocError();
    *unint64_t v16 = v13;
    v16[1] = v15;
    return swift_willThrow();
  }
  return result;
}

void sub_1B6B06858(unint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  switch(a1 >> 60)
  {
    case 7uLL:
      goto LABEL_17;
    case 0xDuLL:
      uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      char v20 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      switch(v20)
      {
        case 1:
          sub_1B67C525C(*(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10), *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18), *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20));
          goto LABEL_11;
        case 3:
          swift_retain();
          sub_1B68EC9E4(a1);
          if (sub_1B6A94630(v34, 1u))
          {
            if ((a2 & 2) != 0) {
              uint64_t v35 = MEMORY[0x1E4FBB870];
            }
            else {
              uint64_t v35 = MEMORY[0x1E4FBB2A0];
            }
          }
          else
          {
            sub_1B68EC9E4(a1);
          }
          uint64_t v36 = sub_1B67B03DC(v35, 1);
          uint64_t v14 = v37;
          sub_1B67C511C(v17, v18, v12, v19, 3);
          char v11 = 0;
          unint64_t v15 = 0xE500000000000000;
          uint64_t v16 = 0x74736E6F63;
          unint64_t v12 = v36;
          goto LABEL_24;
        case 4:
          swift_bridgeObjectRetain();
          char v11 = 0;
          unint64_t v15 = 0xE500000000000000;
          uint64_t v16 = 0x74736E6F63;
          uint64_t v14 = v19;
          goto LABEL_24;
        case 5:
          if (*(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) - 20 < 3)
          {
            unint64_t v33 = sub_1B68EB774(*(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10));
            unint64_t v3 = v33;
            if (v33 >> 60 != 7)
            {
              while (1)
              {
                sub_1B678FC34(v3);
                sub_1B6E328C8();
                sub_1B6E31948();
                sub_1B6E32B18();
                sub_1B6E31948();
LABEL_49:
                sub_1B6E32BE8();
                __break(1u);
              }
            }
            unint64_t v12 = *(void *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v14 = *(void *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
            swift_bridgeObjectRetain();
            sub_1B678FC34(v3);
            goto LABEL_48;
          }
          if (*(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) == 18)
          {
            sub_1B68EC9E4(a1);
            if (sub_1B6A94630(v38, 1u))
            {
              if ((a2 & 2) != 0) {
                uint64_t v39 = MEMORY[0x1E4FBB870];
              }
              else {
                uint64_t v39 = MEMORY[0x1E4FBB2A0];
              }
            }
            else
            {
              sub_1B68EC9E4(a1);
            }
            unint64_t v12 = sub_1B67B03DC(v39, 1);
            uint64_t v14 = v40;
LABEL_48:
            uint64_t v16 = 0;
            char v11 = 0;
            unint64_t v15 = 0xE000000000000000;
            goto LABEL_24;
          }
LABEL_17:
          sub_1B68EC9E4(a1);
          if ((sub_1B6A94630(v26, 1u) & 1) == 0) {
            goto LABEL_21;
          }
LABEL_18:
          if ((a2 & 2) != 0) {
            uint64_t v9 = MEMORY[0x1E4FBB870];
          }
          else {
            uint64_t v9 = MEMORY[0x1E4FBB2A0];
          }
LABEL_23:
          unint64_t v12 = sub_1B67B03DC(v9, 1);
          uint64_t v14 = v27;
          char v11 = 0;
          unint64_t v15 = 0xE500000000000000;
          uint64_t v16 = 0x74736E6F63;
LABEL_24:
          *(void *)a3 = v12;
          *(void *)(a3 + 8) = v14;
          *(void *)(a3 + 16) = v16;
          *(void *)(a3 + 24) = v15;
          *(unsigned char *)(a3 + 32) = v11;
          return;
        default:
LABEL_11:
          sub_1B68EC9E4(a1);
          char v22 = sub_1B6A94630(v21, 1u);
          if ((a2 & 2) != 0)
          {
            if (v22) {
              uint64_t v28 = MEMORY[0x1E4FBB870];
            }
            else {
              sub_1B68EC9E4(a1);
            }
            char v11 = 1;
            uint64_t v31 = sub_1B67B03DC(v28, 1);
            uint64_t v14 = v32;
            sub_1B67C511C(v17, v18, v12, v19, v20);
            unint64_t v15 = 0xE600000000000000;
            uint64_t v16 = 0x646165726874;
            unint64_t v12 = v31;
          }
          else
          {
            if (v22) {
              uint64_t v23 = MEMORY[0x1E4FBB2A0];
            }
            else {
              sub_1B68EC9E4(a1);
            }
            uint64_t v29 = sub_1B67B03DC(v23, 1);
            uint64_t v14 = v30;
            sub_1B67C511C(v17, v18, v12, v19, v20);
            char v11 = 0;
            unint64_t v15 = 0xE500000000000000;
            uint64_t v16 = 0x74736E6F63;
            unint64_t v12 = v29;
          }
          goto LABEL_24;
      }
    case 0xEuLL:
      goto LABEL_49;
    case 0xFuLL:
      if (a1 != 0xF000000000000000) {
        goto LABEL_2;
      }
      sub_1B68EC9E4(0xF000000000000000);
      if (sub_1B6A94630(v24, 1u)) {
        goto LABEL_18;
      }
      unint64_t v25 = 0xF000000000000000;
      goto LABEL_22;
    default:
LABEL_2:
      sub_1B68EC9E4(a1);
      char v8 = sub_1B6A94630(v7, 1u);
      if ((a2 & 2) != 0)
      {
        if (v8) {
          uint64_t v10 = MEMORY[0x1E4FBB870];
        }
        else {
          sub_1B68EC9E4(a1);
        }
        char v11 = 1;
        unint64_t v12 = sub_1B67B03DC(v10, 1);
        uint64_t v14 = v13;
        unint64_t v15 = 0xE600000000000000;
        uint64_t v16 = 0x646165726874;
        goto LABEL_24;
      }
      if (v8)
      {
        uint64_t v9 = MEMORY[0x1E4FBB2A0];
      }
      else
      {
LABEL_21:
        unint64_t v25 = a1;
LABEL_22:
        sub_1B68EC9E4(v25);
      }
      goto LABEL_23;
  }
}

unint64_t sub_1B6B06D70(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1B6B06E50(15, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_1B6E328B8();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_1B6E329D8();
      }
      unsigned int v5 = sub_1B6E329E8();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

uint64_t sub_1B6B06E50(uint64_t result, uint64_t a2, unint64_t a3)
{
  char v5 = (a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0;
  uint64_t v6 = result & 0xC;
  uint64_t v7 = 4 << v5;
  if ((result & 1) == 0 || v6 == v7)
  {
    if (v6 != v7)
    {
      if (result) {
        return result;
      }
      return result & 0xC | sub_1B6B06EE0(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
    uint64_t result = sub_1B6A034EC(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1B6B06EE0(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1B6B06EE0(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_1B6E329D8();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return MEMORY[0x1F4184CD0]();
    }
  }
  return result;
}

uint64_t sub_1B6B07004(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a6) & 0xF;
  }
  else {
    uint64_t v6 = a5 & 0xFFFFFFFFFFFFLL;
  }
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6) {
    return 1;
  }
  else {
    return sub_1B6E33078() & 1;
  }
}

uint64_t sub_1B6B0707C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  sub_1B6B121B8(0, &qword_1EB980678, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB560], MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32878();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v6 = a1 + 32;
  uint64_t v7 = ~(-1 << *(unsigned char *)(v3 + 32));
  do
  {
    uint64_t v8 = *(void *)(v6 + 8 * v4);
    uint64_t v9 = sub_1B6E33908();
    unint64_t v10 = v9 & v7;
    unint64_t v11 = (v9 & (unint64_t)v7) >> 6;
    uint64_t v12 = *(void *)(v5 + 8 * v11);
    uint64_t v13 = 1 << (v9 & v7);
    uint64_t v14 = *(void *)(v3 + 48);
    if ((v13 & v12) != 0)
    {
      while (*(void *)(v14 + 8 * v10) != v8)
      {
        unint64_t v10 = (v10 + 1) & v7;
        unint64_t v11 = v10 >> 6;
        uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
        uint64_t v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0) {
          goto LABEL_3;
        }
      }
    }
    else
    {
LABEL_3:
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(void *)(v14 + 8 * v10) = v8;
      ++*(void *)(v3 + 16);
    }
    ++v4;
  }
  while (v4 != v1);
  return v3;
}

uint64_t sub_1B6B071AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  for (uint64_t i = a1 + 56; ; i += 32)
  {
    uint64_t v7 = *(void *)(i - 16);
    if (v7)
    {
      uint64_t v8 = *(void *)(i - 24);
      if (v8 == a2 && v7 == a3) {
        goto LABEL_11;
      }
      if (sub_1B6E334B8()) {
        break;
      }
    }
    if (!--v3) {
      return 0;
    }
  }
  a2 = v8;
LABEL_11:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1B6B07288(uint64_t a1, uint64_t a2)
{
  sub_1B6B11F78(0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)v20 - v12;
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (char *)v20 - v16;
  sub_1B6B11FAC();
  sub_1B6E311B8();
  sub_1B6E31218();
  unint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v9, v5);
  sub_1B6E31208();
  v18(v13, v5);
  v20[2] = a1;
  v20[3] = a2;
  v20[0] = 0;
  v20[1] = 0xE000000000000000;
  sub_1B6B12088();
  sub_1B6906E30();
  sub_1B6B12170(&qword_1E9DD5BD8, sub_1B6B11F78);
  sub_1B6E320C8();
  v18(v17, v5);
  return v20[4];
}

uint64_t sub_1B6B074A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1B6B120DC();
    uint64_t v3 = sub_1B6E32878();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v29 = v1;
    uint64_t v30 = a1 + 32;
    while (1)
    {
      uint64_t v7 = *(void **)(v30 + 8 * v4);
      sub_1B6E31798();
      sub_1B6E33918();
      id v8 = v7;
      sub_1B6E318B8();
      uint64_t v9 = sub_1B6E33988();
      swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v9 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_1B6E31798();
        uint64_t v17 = v16;
        if (v15 == sub_1B6E31798() && v17 == v18)
        {
LABEL_19:
          swift_bridgeObjectRelease_n();
LABEL_20:

          uint64_t v6 = v29;
          goto LABEL_4;
        }
        char v20 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_20;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_1B6E31798();
          uint64_t v24 = v23;
          if (v22 == sub_1B6E31798() && v24 == v25) {
            goto LABEL_19;
          }
          char v27 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_20;
          }
        }
      }
      uint64_t v6 = v29;
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v8;
      ++*(void *)(v3 + 16);
LABEL_4:
      if (++v4 == v6) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1B6B076CC(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, unsigned __int8 a5)
{
  unint64_t v50 = a3;
  unint64_t v51 = a4;
  int v7 = a5;
  uint64_t v47 = sub_1B6E31188();
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47, v8);
  uint64_t v44 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6B11EB8(0, &qword_1EB97D9E0, (uint64_t (*)(uint64_t))sub_1B6907220, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v13 = (char *)&v43 - v12;
  sub_1B6907220(0);
  uint64_t v15 = v14;
  uint64_t v52 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v43 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6B11E84(0);
  uint64_t v55 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v20);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v43 - v25;
  MEMORY[0x1F4188790](v27, v28);
  uint64_t v30 = (char *)&v43 - v29;
  uint64_t v48 = a2;
  uint64_t v46 = a1;
  if (v7 != 2)
  {
    unint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v53 = 0x2B735C64696F76;
    unint64_t v54 = 0xE700000000000000;
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t v32 = v49;
    sub_1B6E31248();
    if (!v32) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  unint64_t v53 = 0;
  unint64_t v54 = 0xE000000000000000;
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  unint64_t v53 = 0x2B735C636E7566;
  unint64_t v54 = 0xE700000000000000;
  sub_1B6E31948();
  sub_1B6E31948();
  uint64_t v31 = v49;
  sub_1B6E31248();
  if (v31)
  {
    swift_unexpectedError();
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v22 = v26;
LABEL_5:
  unint64_t v33 = v30;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v30, v22, v55);
  unint64_t v53 = v50;
  unint64_t v54 = v51;
  sub_1B6E31198();
  sub_1B666BDC4();
  sub_1B6B12170(&qword_1EB97D9F8, sub_1B6B11E84);
  sub_1B6E31608();
  uint64_t v34 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v13, 1, v15) == 1)
  {
    sub_1B639567C((uint64_t)v13, (uint64_t)&qword_1EB97D9E0, (uint64_t)sub_1B6907220, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6B11EB8);
    unint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v53 = 0xD00000000000001DLL;
    unint64_t v54 = 0x80000001B6F49320;
    sub_1B6E31948();
    uint64_t v35 = v53;
    unint64_t v36 = v54;
    sub_1B6B117F4();
    swift_allocError();
    *uint64_t v37 = v35;
    v37[1] = v36;
    swift_willThrow();
  }
  else
  {
    uint64_t v38 = v43;
    uint64_t v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v34 + 32))(v43, v13, v15);
    MEMORY[0x1F4188790](v39, v40);
    *(&v43 - 2) = (char *)1;
    swift_getKeyPath();
    uint64_t v41 = v44;
    sub_1B6E31228();
    swift_release();
    uint64_t v35 = sub_1B6E31178();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v47);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v15);
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v33, v55);
  return v35;
}

uint64_t sub_1B6B07D20(uint64_t *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBB7A8];
  sub_1B6B1203C(0, &qword_1EB97D9E8, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBD2C8]);
  uint64_t v4 = v3;
  uint64_t v59 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  int v7 = (char *)&v53 - v6;
  sub_1B6B11C54();
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v15 = (char *)&v53 - v14;
  sub_1B6B1203C(0, &qword_1EB97DA08, v2, MEMORY[0x1E4FBD2D0]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16, v19);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22, v23);
  uint64_t v25 = (char *)&v53 - v24;
  uint64_t v26 = v60;
  char v27 = sub_1B6B03B58();
  if (!v26)
  {
    uint64_t v55 = v7;
    uint64_t v56 = v11;
    uint64_t v57 = v21;
    uint64_t v58 = v18;
    unint64_t v60 = v25;
    if (v27)
    {
      sub_1B6E311B8();
      uint64_t v30 = a1;
      uint64_t v31 = v17;
      sub_1B6E311D8();
      uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
      uint64_t v33 = v4;
      unsigned int v34 = v32(v15, 1, v4);
      sub_1B6B11CD0((uint64_t)v15);
      if (v34 == 1)
      {
        (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v31);
        char v28 = 0;
      }
      else
      {
        unint64_t v54 = v32;
        uint64_t v35 = v57;
        sub_1B6E311B8();
        uint64_t v36 = (uint64_t)v56;
        sub_1B6E311F8();
        uint64_t v37 = v58;
        if (v54((char *)v36, 1, v33) == 1)
        {
          sub_1B6B11CD0(v36);
          uint64_t v38 = sub_1B6B038F0();
          uint64_t v40 = v39;
          sub_1B6B11C00();
          swift_allocError();
          *uint64_t v41 = v38;
          v41[1] = v40;
          swift_willThrow();
          uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
          v42(v35, v31);
          v42(v60, v31);
        }
        else
        {
          uint64_t v43 = v36;
          uint64_t v44 = v59;
          uint64_t v45 = v55;
          (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v55, v43, v33);
          swift_getKeyPath();
          sub_1B6E31228();
          swift_release();
          if ((v30[1] ^ (unint64_t)*v30) >= 0x4000)
          {
            uint64_t v56 = (char *)v30[2];
            swift_bridgeObjectRetain();
            uint64_t v46 = sub_1B6E32588();
            uint64_t v48 = v47;
            uint64_t v56 = v49;
            unint64_t v54 = v50;
            uint64_t v45 = v55;
            swift_bridgeObjectRelease_n();
            *uint64_t v30 = v46;
            v30[1] = v48;
            unint64_t v51 = v54;
            _OWORD v30[2] = (uint64_t)v56;
            v30[3] = (uint64_t)v51;
          }
          (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v33);
          uint64_t v52 = *(void (**)(char *, uint64_t))(v58 + 8);
          v52(v35, v31);
          v52(v60, v31);
          char v28 = 1;
        }
      }
    }
    else
    {
      char v28 = 0;
    }
  }
  return v28 & 1;
}

uint64_t sub_1B6B08260@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v44 = a2;
  sub_1B6B11C54();
  MEMORY[0x1F4188790](v4 - 8, v5);
  int v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1E4FBB7A8];
  sub_1B6B1203C(0, &qword_1EB97D9E8, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBD2C8]);
  uint64_t v10 = v9;
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)&v39 - v12;
  sub_1B6B1203C(0, &qword_1EB97DA08, v8, MEMORY[0x1E4FBD2D0]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v19 = (char *)&v39 - v18;
  sub_1B6E311B8();
  sub_1B6E311F8();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  uint64_t v42 = v16;
  uint64_t v43 = v15;
  uint64_t v20 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v7, 1, v10) == 1)
  {
    sub_1B6B11CD0((uint64_t)v7);
    *(void *)&long long v45 = 0;
    *((void *)&v45 + 1) = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&long long v45 = 0xD000000000000014;
    *((void *)&v45 + 1) = 0x80000001B6F492A0;
    uint64_t v22 = *a1;
    uint64_t v21 = a1[1];
    uint64_t v24 = a1[2];
    uint64_t v23 = a1[3];
    swift_bridgeObjectRetain();
    MEMORY[0x1BA9B34C0](v22, v21, v24, v23);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v25 = v45;
    sub_1B6B11C00();
    swift_allocError();
    *uint64_t v26 = v25;
    swift_willThrow();
    uint64_t v16 = v42;
    uint64_t v15 = v43;
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  char v28 = v13;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v13, v7, v10);
  swift_getKeyPath();
  sub_1B6E31228();
  swift_release();
  if ((a1[1] ^ (unint64_t)*a1) >= 0x4000)
  {
    uint64_t v41 = v45;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1B6E32588();
    uint64_t v31 = v30;
    uint64_t v40 = v33;
    uint64_t v41 = v32;
    swift_bridgeObjectRelease_n();
    *a1 = v29;
    a1[1] = v31;
    uint64_t v34 = v40;
    a1[2] = v41;
    a1[3] = v34;
  }
  sub_1B6E31238();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v10);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v19, v43);
  uint64_t v35 = v46;
  uint64_t v36 = v47;
  long long v37 = v45;
  uint64_t v38 = v44;
  *uint64_t v44 = 14;
  *(_OWORD *)(v38 + 8) = v37;
  *((void *)v38 + 3) = v35;
  *((void *)v38 + 4) = v36;
  return result;
}

uint64_t sub_1B6B08688@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  sub_1B6B11C54();
  MEMORY[0x1F4188790](v4 - 8, v5);
  int v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1E4FBB7A8];
  sub_1B6B1203C(0, &qword_1EB97D9E8, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBD2C8]);
  uint64_t v10 = v9;
  uint64_t v51 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)&v42 - v12;
  sub_1B6B1203C(0, &qword_1EB97DA08, v8, MEMORY[0x1E4FBD2D0]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v19 = (char *)&v42 - v18;
  sub_1B6E311B8();
  sub_1B6E311F8();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  uint64_t v20 = v13;
  uint64_t v45 = v16;
  uint64_t v46 = v15;
  uint64_t v21 = v51;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v7, 1, v10) == 1)
  {
    sub_1B6B11CD0((uint64_t)v7);
    uint64_t v23 = *a1;
    uint64_t v22 = a1[1];
    uint64_t v25 = a1[2];
    uint64_t v24 = a1[3];
    *(void *)&long long v48 = 0;
    *((void *)&v48 + 1) = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&long long v48 = 0xD000000000000010;
    *((void *)&v48 + 1) = 0x80000001B6F492E0;
    swift_bridgeObjectRetain();
    MEMORY[0x1BA9B34C0](v23, v22, v25, v24);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_1B6B038F0();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    sub_1B6B11C00();
    swift_allocError();
    *uint64_t v29 = v26;
    v29[1] = v28;
    swift_willThrow();
    uint64_t v16 = v45;
    uint64_t v15 = v46;
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  uint64_t v31 = v20;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v20, v7, v10);
  swift_getKeyPath();
  sub_1B6E31228();
  swift_release();
  if ((a1[1] ^ (unint64_t)*a1) >= 0x4000)
  {
    uint64_t v44 = v48;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1B6E32588();
    uint64_t v34 = v33;
    uint64_t v43 = v36;
    uint64_t v44 = v35;
    swift_bridgeObjectRelease_n();
    *a1 = v32;
    a1[1] = v34;
    uint64_t v37 = v43;
    a1[2] = v44;
    a1[3] = v37;
  }
  sub_1B6E31238();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v31, v10);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v19, v46);
  uint64_t v38 = v49;
  uint64_t v39 = v50;
  long long v40 = v48;
  uint64_t v41 = v47;
  *uint64_t v47 = 15;
  *(_OWORD *)(v41 + 8) = v40;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v39;
  return result;
}

uint64_t sub_1B6B08AD0(uint64_t *a1)
{
  sub_1B6B11C54();
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1E4FBB7A8];
  sub_1B6B1203C(0, &qword_1EB97D9E8, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBD2C8]);
  uint64_t v9 = v8;
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v34 - v11;
  sub_1B6B1203C(0, &qword_1EB97DA08, v7, MEMORY[0x1E4FBD2D0]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v18 = (char *)&v34 - v17;
  sub_1B6E311B8();
  sub_1B6E311F8();
  if (!v1)
  {
    uint64_t v38 = v12;
    uint64_t v19 = v39;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v6, 1, v9) == 1)
    {
      sub_1B6B11CD0((uint64_t)v6);
      uint64_t v20 = sub_1B6B038F0();
      uint64_t v22 = v21;
      sub_1B6B11C00();
      swift_allocError();
      *uint64_t v23 = v20;
      v23[1] = v22;
      swift_willThrow();
    }
    else
    {
      uint64_t v24 = v9;
      uint64_t v25 = v19;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v38, v6, v24);
      swift_getKeyPath();
      sub_1B6E31228();
      swift_release();
      if ((a1[1] ^ (unint64_t)*a1) >= 0x4000)
      {
        uint64_t v26 = a1[2];
        uint64_t v36 = v40;
        uint64_t v37 = v26;
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_1B6E32588();
        uint64_t v36 = v29;
        uint64_t v37 = v28;
        uint64_t v35 = v30;
        swift_bridgeObjectRelease_n();
        uint64_t v31 = v37;
        *a1 = v27;
        a1[1] = v31;
        uint64_t v32 = v35;
        a1[2] = v36;
        a1[3] = v32;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v38, v24);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_1B6B08E54(unsigned __int8 a1)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  unint64_t v5 = v1[3];
  if (v4 == v5 >> 1 || *(unsigned __int8 *)(v3 + 40 * v4) != a1)
  {
    uint64_t v7 = v1[8];
    uint64_t v15 = *v1;
    uint64_t v16 = v3;
    uint64_t v17 = v4;
    unint64_t v18 = v5;
    long long v8 = *((_OWORD *)v1 + 3);
    long long v19 = *((_OWORD *)v1 + 2);
    long long v20 = v8;
    uint64_t v21 = v7;
    sub_1B6E328C8();
    sub_1B6E31948();
    unsigned __int8 v22 = a1;
    sub_1B6E32B18();
    sub_1B6E31948();
    sub_1B6B05940();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_1B6B05A24();
    uint64_t v6 = v10;
    swift_bridgeObjectRelease();
    sub_1B6B117F4();
    swift_allocError();
    uint64_t *v11 = v9;
    v11[1] = v6;
    swift_willThrow();
  }
  else
  {
    sub_1B6B03868((uint64_t)v13);
    uint64_t v6 = v14;
    sub_1B6B118B8((uint64_t)v13, (uint64_t)(v1 + 4));
  }
  return v6;
}

uint64_t sub_1B6B08FF0(unsigned __int8 a1)
{
  uint64_t v2 = v1[2];
  if (v2 != v1[3] >> 1)
  {
    uint64_t v3 = v1[1];
    if (*(unsigned __int8 *)(v3 + 40 * v2) == a1) {
      return *(void *)(v3 + 40 * v2 + 8);
    }
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E32B18();
  sub_1B6E31948();
  sub_1B6B05940();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1B6B05A24();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  sub_1B6B117F4();
  swift_allocError();
  *long long v8 = v5;
  v8[1] = v7;
  return swift_willThrow();
}

uint64_t sub_1B6B09150@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v7 = a1[3];
  long long v58 = a1[2];
  long long v59 = v7;
  uint64_t v60 = *((void *)a1 + 8);
  long long v8 = a1[1];
  v57[0] = *a1;
  v57[1] = v8;
  long long v49 = v58;
  long long v50 = v7;
  uint64_t v51 = v60;
  long long v47 = v57[0];
  long long v48 = v8;
  sub_1B6B119AC((uint64_t)v57);
  uint64_t v9 = sub_1B6B08E54(0xEu);
  if (!v3)
  {
    uint64_t v13 = v9;
    uint64_t v14 = v10;
    uint64_t v15 = v11;
    uint64_t v16 = v12;
    swift_bridgeObjectRetain();
    uint64_t v17 = MEMORY[0x1BA9B34C0](v13, v14, v15, v16);
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = swift_conformsToProtocol2();
    if (v20) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = 0;
    }
    if (v20) {
      uint64_t v22 = a2;
    }
    else {
      uint64_t v22 = 0;
    }
    if (v22)
    {
      uint64_t v23 = *(void *)(v21 + 8);
      if ((*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v23 + 16))(0, 1, v22, v23))
      {
        sub_1B6B119E4((uint64_t)v57);
        long long v44 = 0u;
        long long v45 = 0u;
        uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, void, char, void, char, void, void, long long *, _WORD, uint64_t, uint64_t))(v23 + 64);
        uint64_t v42 = v23;
        uint64_t v25 = MEMORY[0x1E4FBC840] + 8;
        uint64_t v26 = v24(v17, v19, MEMORY[0x1E4FBC840] + 8, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, &v44, 0, v22, v42);
        swift_bridgeObjectRelease();
        sub_1B639567C((uint64_t)&v44, (uint64_t)&qword_1EB980F60, v25, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6B1203C);
LABEL_14:
        uint64_t v28 = *(void *)(v26 + 16);
        uint64_t v27 = *(void *)(v26 + 24);
        uint64_t v29 = *(void *)(v26 + 48);
        char v30 = *(unsigned char *)(v26 + 56);
        __int16 v31 = *(_WORD *)(v26 + 58);
        swift_bridgeObjectRetain();
        long long v43 = *(_OWORD *)(v26 + 32);
        swift_retain();
        uint64_t result = swift_release();
        uint64_t v33 = v51;
        long long v34 = v48;
        *a1 = v47;
        a1[1] = v34;
        long long v35 = v50;
        a1[2] = v49;
        a1[3] = v35;
        *((void *)a1 + 8) = v33;
        *(void *)a3 = v28;
        *(void *)(a3 + 8) = v27;
        *(_OWORD *)(a3 + 16) = v43;
        *(void *)(a3 + 32) = v29;
        *(unsigned char *)(a3 + 40) = v30;
        *(_WORD *)(a3 + 42) = v31;
        return result;
      }
      *((void *)&v45 + 1) = v22;
      uint64_t v46 = v21;
      sub_1B62C12C4((uint64_t *)&v44);
      sub_1B6A5DD6C(v22, v23);
      if (sub_1B6A5DDA4(v17, v19, v22, v23))
      {
        swift_bridgeObjectRelease();
        uint64_t v26 = sub_1B684F640(0, 1);
        swift_retain();
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v44);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v44);
      long long v36 = a1[3];
      long long v54 = a1[2];
      long long v55 = v36;
      uint64_t v56 = *((void *)a1 + 8);
      long long v37 = a1[1];
      long long v52 = *a1;
      long long v53 = v37;
      *(void *)&long long v44 = 0;
      *((void *)&v44 + 1) = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      *(void *)&long long v44 = 0xD000000000000012;
      *((void *)&v44 + 1) = 0x80000001B6F48F40;
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      *(void *)&long long v44 = 0xD000000000000013;
      *((void *)&v44 + 1) = 0x80000001B6F48F20;
      sub_1B6E33B48();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
    }
    uint64_t v38 = sub_1B6B05A24();
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    sub_1B6B117F4();
    swift_allocError();
    *uint64_t v41 = v38;
    v41[1] = v40;
    swift_willThrow();
  }
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B09588(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1B6B121B8(0, (unint64_t *)&unk_1EB980668, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB9A8]);
    uint64_t v3 = sub_1B6E32878();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v23 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v23 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1B6E33918();
      swift_bridgeObjectRetain();
      sub_1B6E318B8();
      uint64_t v9 = sub_1B6E33988();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v9 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) == 0) {
        goto LABEL_19;
      }
      uint64_t v15 = *(void *)(v3 + 48);
      uint64_t v16 = (void *)(v15 + 16 * v11);
      BOOL v17 = *v16 == v8 && v16[1] == v7;
      if (!v17 && (sub_1B6E334B8() & 1) == 0) {
        break;
      }
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
    uint64_t v18 = ~v10;
    while (1)
    {
      unint64_t v11 = (v11 + 1) & v18;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if ((v13 & (1 << v11)) == 0) {
        break;
      }
      uint64_t v19 = (void *)(v15 + 16 * v11);
      BOOL v20 = *v19 == v8 && v19[1] == v7;
      if (v20 || (sub_1B6E334B8() & 1) != 0) {
        goto LABEL_3;
      }
    }
LABEL_19:
    *(void *)(v5 + 8 * v12) = v14 | v13;
    uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
    *uint64_t v21 = v8;
    v21[1] = v7;
    ++*(void *)(v3 + 16);
    goto LABEL_4;
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1B6B0974C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[2];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v5 = a1[7];
  uint64_t v39 = *a1;
  uint64_t v40 = a1[1];
  unint64_t v41 = a1[3];
  uint64_t v42 = v3;
  uint64_t v43 = v6;
  uint64_t v44 = a1[8];
  if (v2 == v41 >> 1 || *(unsigned char *)(a1[1] + 40 * v2) != 1)
  {
    uint64_t v11 = a1[8];
    unint64_t v16 = a1[3];
    uint64_t v17 = a1[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v13 = v3;
    unint64_t v9 = v2;
    uint64_t v12 = v4;
    uint64_t v14 = v6;
    uint64_t v10 = v5;
    unint64_t v15 = v41 >> 1;
    uint64_t v7 = v17;
    unint64_t v8 = v16;
    if (v2 == v41 >> 1)
    {
LABEL_9:
      unint64_t v15 = v9;
LABEL_10:
      uint64_t v46 = v1;
      uint64_t v47 = v7;
      unint64_t v48 = v15;
      unint64_t v49 = v8;
      uint64_t v50 = v13;
      uint64_t v51 = v12;
      uint64_t v52 = v14;
      uint64_t v53 = v10;
      uint64_t v54 = v11;
      sub_1B6E328C8();
      sub_1B6E31948();
      char v55 = 14;
      sub_1B6E32B18();
      sub_1B6E31948();
      sub_1B6B05940();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_1B6B05A24();
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      sub_1B6B117F4();
      swift_allocError();
      *uint64_t v27 = v24;
      v27[1] = v26;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1B6B05CB0((uint64_t)v45);
    sub_1B6B11980((uint64_t)v45);
    sub_1B6E31948();
    uint64_t v1 = v39;
    uint64_t v7 = v40;
    unint64_t v9 = v2;
    unint64_t v8 = v41;
    uint64_t v10 = v5;
    uint64_t v11 = v44;
    uint64_t v13 = v42;
    uint64_t v12 = v4;
    uint64_t v14 = v43;
    unint64_t v15 = v41 >> 1;
    if (v2 == v41 >> 1) {
      goto LABEL_9;
    }
  }
  if (*(unsigned char *)(v7 + 40 * v9) != 14) {
    goto LABEL_9;
  }
  uint64_t v35 = v1;
  unint64_t v36 = v8;
  uint64_t v18 = (void *)(v7 + 40 * v9);
  uint64_t v19 = v18[1];
  uint64_t v20 = v18[2];
  uint64_t v22 = v18[3];
  uint64_t v21 = v18[4];
  unint64_t v23 = v9 + 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = v21;
  sub_1B678C2E8();
  sub_1B6E31928();
  if (v9 + 1 != v15)
  {
    if (*(unsigned char *)(v7 + 40 * v23) == 2)
    {
      uint64_t v29 = (void *)(v7 + 40 * v23);
      uint64_t v14 = v29[2];
      uint64_t v33 = v29[1];
      uint64_t v10 = v29[3];
      uint64_t v11 = v29[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      if (v9 + 2 == v15)
      {
        uint64_t v13 = 2;
      }
      else
      {
        if (*(unsigned char *)(v7 + 40 * (v9 + 2)) == 14)
        {
          uint64_t v30 = v7 + 40 * v9 + 88;
          while (1)
          {
            uint64_t v19 = *(void *)v30;
            uint64_t v20 = *(void *)(v30 + 8);
            uint64_t v22 = *(void *)(v30 + 16);
            uint64_t v31 = *(void *)(v30 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_1B6E31928();
            if (v15 - 3 == v9)
            {
              uint64_t v37 = v31;
              goto LABEL_15;
            }
            if (*(unsigned char *)(v30 + 32) != 2) {
              break;
            }
            uint64_t v14 = *(void *)(v30 + 48);
            uint64_t v34 = *(void *)(v30 + 40);
            uint64_t v10 = *(void *)(v30 + 56);
            uint64_t v11 = *(void *)(v30 + 64);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            if (v15 - 4 == v9) {
              goto LABEL_23;
            }
            int v32 = *(unsigned __int8 *)(v30 + 72);
            v30 += 80;
            v9 += 2;
            if (v32 != 14)
            {
              unint64_t v15 = v9 + 2;
LABEL_23:
              uint64_t v1 = v35;
              unint64_t v8 = v36;
              uint64_t v12 = v34;
              uint64_t v13 = 2;
              goto LABEL_10;
            }
          }
          uint64_t v37 = v31;
          unint64_t v15 = v9 + 3;
          goto LABEL_15;
        }
        uint64_t v13 = 2;
        unint64_t v15 = v9 + 2;
      }
      unint64_t v8 = v36;
      uint64_t v12 = v33;
      goto LABEL_10;
    }
    unint64_t v15 = v9 + 1;
  }
LABEL_15:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v35;
  a1[1] = v7;
  a1[2] = v15;
  a1[3] = v36;
  a1[4] = 14;
  a1[5] = v19;
  a1[6] = v20;
  a1[7] = v22;
  a1[8] = v37;
  return 0;
}

uint64_t sub_1B6B09C14(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  v52[0] = *(_OWORD *)a1;
  v52[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v53 = *(_OWORD *)(a1 + 32);
  long long v54 = v4;
  uint64_t v55 = *(void *)(a1 + 64);
  long long v47 = v53;
  long long v48 = v4;
  uint64_t v49 = v55;
  long long v45 = v52[0];
  long long v46 = v3;
  if ((void)v3 == *((void *)&v3 + 1) >> 1)
  {
LABEL_6:
    sub_1B6B119AC((uint64_t)v52);
    sub_1B6B119AC((uint64_t)v52);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6B119AC((uint64_t)v52);
    sub_1B6B05940();
    sub_1B6B119E4((uint64_t)v52);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_1B6B05A24();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_1B6B119E4((uint64_t)v52);
    sub_1B6B117F4();
    swift_allocError();
    *unint64_t v15 = v1;
    v15[1] = v14;
    swift_willThrow();
LABEL_7:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return v1;
  }
  uint64_t v5 = v2;
  uint64_t v7 = (void *)(*((void *)&v52[0] + 1) + 40 * v3);
  int v8 = *(unsigned __int8 *)v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = v7[2];
  uint64_t v12 = v7[3];
  uint64_t v11 = v7[4];
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    sub_1B6B119AC((uint64_t)v52);
    sub_1B6B0974C((uint64_t *)&v45);
    if (!v5)
    {
      sub_1B6B119E4((uint64_t)v52);
      uint64_t v9 = sub_1B6E31A78();
      uint64_t v10 = v16;
      uint64_t v12 = v17;
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v19;
      goto LABEL_26;
    }
    goto LABEL_7;
  }
  if (v8 != 14)
  {
    if (v8 == 15)
    {
      sub_1B6B05CB0((uint64_t)v50);
      sub_1B6B11980((uint64_t)v50);
      goto LABEL_26;
    }
    goto LABEL_6;
  }
  sub_1B6B05CB0((uint64_t)v51);
  sub_1B6B11980((uint64_t)v51);
  if ((void)v46 == *((void *)&v46 + 1) >> 1
    || (uint64_t v20 = *((void *)&v45 + 1), *(unsigned char *)(*((void *)&v45 + 1) + 40 * v46) != 12))
  {
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  uint64_t v21 = (void *)(*((void *)&v45 + 1) + 40 * v46);
  uint64_t v56 = v21[1];
  uint64_t v22 = v21[4];
  uint64_t v43 = v21[3];
  uint64_t v44 = v21[2];
  uint64_t v23 = v46 + 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = 12;
  uint64_t v42 = v46 + 1;
  uint64_t v25 = *((void *)&v46 + 1) >> 1;
  while (1)
  {
    if (v23 == v25)
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = 0;
      uint64_t v56 = 0;
      uint64_t v43 = 0;
      uint64_t v44 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v25;
      goto LABEL_17;
    }
    uint64_t v26 = v20;
    uint64_t v27 = (unsigned __int8 *)(v20 + 40 * v23);
    unsigned int v30 = *v27;
    uint64_t v28 = (uint64_t *)(v27 + 8);
    uint64_t v29 = v30;
    if (v30 == 16) {
      break;
    }
    uint64_t v56 = *v28;
    uint64_t v31 = v28[3];
    uint64_t v43 = v28[2];
    uint64_t v44 = v28[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    ++v23;
    uint64_t v24 = v29;
    uint64_t v22 = v31;
    uint64_t v42 = v23;
    uint64_t v20 = v26;
    uint64_t v25 = *((void *)&v46 + 1) >> 1;
LABEL_17:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v24 == 16)
    {
      uint64_t v26 = v20;
      uint64_t v33 = v44;
      goto LABEL_23;
    }
    if (v24 == 13)
    {
      *(void *)&long long v47 = v24;
      *((void *)&v47 + 1) = v56;
      *(void *)&long long v48 = v44;
      *((void *)&v48 + 1) = v43;
      uint64_t v49 = v22;
      *((void *)&v45 + 1) = v20;
      uint64_t v32 = v42;
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = v44;
LABEL_23:
  *(void *)&long long v47 = v24;
  *((void *)&v47 + 1) = v56;
  *(void *)&long long v48 = v33;
  *((void *)&v48 + 1) = v43;
  uint64_t v49 = v22;
  *((void *)&v45 + 1) = v26;
  uint64_t v32 = v42;
LABEL_24:
  *(void *)&long long v46 = v32;
LABEL_25:
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B6E31A78();
  uint64_t v10 = v34;
  uint64_t v12 = v35;
  uint64_t v37 = v36;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v11 = v37;
LABEL_26:
  uint64_t v38 = v49;
  long long v39 = v46;
  *(_OWORD *)a1 = v45;
  *(_OWORD *)(a1 + 16) = v39;
  long long v40 = v48;
  *(_OWORD *)(a1 + 32) = v47;
  *(_OWORD *)(a1 + 48) = v40;
  *(void *)(a1 + 64) = v38;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v1 = MEMORY[0x1BA9B34C0](v9, v10, v12, v11);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B6B0A0FC(uint64_t a1, char a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    unint64_t v6 = *(void *)(a1 + 24);
    if (v5 == v6 >> 1) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v7 = *(void *)(a1 + 8);
    if (*(unsigned char *)(v7 + 40 * v5) != 8) {
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    unint64_t v6 = *(void *)(a1 + 24);
  }
  uint64_t v9 = *(void *)(a1 + 64);
  *(void *)&long long v68 = *(void *)a1;
  *((void *)&v68 + 1) = v7;
  *(void *)&long long v69 = v5;
  *((void *)&v69 + 1) = v6;
  long long v10 = *(_OWORD *)(a1 + 48);
  v70[0] = *(_OWORD *)(a1 + 32);
  v70[1] = v10;
  uint64_t v71 = v9;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1B6B08E54(8u);
  if (v3) {
    goto LABEL_7;
  }
  uint64_t v58 = a1;
  unint64_t v81 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    v76[0] = v68;
    v76[1] = v69;
    v77[0] = v70[0];
    v77[1] = v70[1];
    uint64_t v78 = v71;
    *(_OWORD *)v66 = v70[0];
    *(_OWORD *)&v66[16] = v70[1];
    uint64_t v67 = v71;
    long long v64 = v68;
    long long v65 = v69;
    uint64_t v11 = *((void *)&v68 + 1);
    long long v12 = v69;
    uint64_t v13 = *((void *)&v69 + 1) >> 1;
    if ((void)v69 == *((void *)&v69 + 1) >> 1 || *(unsigned char *)(*((void *)&v68 + 1) + 40 * v69) != 14)
    {
      sub_1B6B119AC((uint64_t)v76);
      sub_1B6B119AC((uint64_t)v76);
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E32B18();
      sub_1B6E31948();
      if ((void)v12 != v13)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1B6E31A78();
        uint64_t v27 = v26;
        uint64_t v29 = v28;
        uint64_t v31 = v30;
        swift_bridgeObjectRelease();
        MEMORY[0x1BA9B34C0](v25, v27, v29, v31);
        swift_bridgeObjectRelease();
      }
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6B05A24();
      swift_bridgeObjectRelease();
      sub_1B6B119E4((uint64_t)v76);
      swift_bridgeObjectRelease();
      uint64_t v19 = 0;
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v62 = *(void *)&v76[0];
      uint64_t v14 = (void *)(*((void *)&v68 + 1) + 40 * v69);
      uint64_t v15 = v14[2];
      uint64_t v59 = v14[1];
      uint64_t v17 = v14[3];
      uint64_t v16 = v14[4];
      sub_1B6B11B80((uint64_t)v77, (uint64_t)v79, &qword_1EB97FDA8, (uint64_t)&type metadata for Lexer.Token);
      uint64_t v18 = v12 + 1;
      sub_1B6B119AC((uint64_t)v76);
      sub_1B6B119AC((uint64_t)v76);
      swift_bridgeObjectRetain();
      sub_1B6B11980((uint64_t)v79);
      swift_bridgeObjectRetain();
      uint64_t v19 = MEMORY[0x1BA9B34C0](v59, v15, v17, v16);
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      if ((void)v12 + 1 == v13 || *(unsigned char *)(v11 + 40 * v18) != 7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v19 = 0;
        uint64_t v21 = 0;
      }
      else
      {
        uint64_t v22 = v11 + 40 * v18;
        long long v60 = *(_OWORD *)(v22 + 8);
        uint64_t v23 = *(void *)(v22 + 24);
        uint64_t v24 = *(void *)(v22 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1B6B119E4((uint64_t)v76);
        *(void *)&long long v64 = v62;
        *((void *)&v64 + 1) = v11;
        *(void *)&long long v65 = v12 + 2;
        *((void *)&v65 + 1) = *((void *)&v12 + 1);
        *(void *)v66 = 7;
        *(_OWORD *)&v66[8] = v60;
        *(void *)&v66[24] = v23;
        uint64_t v67 = v24;
      }
    }
    uint64_t v32 = sub_1B6B09C14((uint64_t)&v64);
    uint64_t v34 = v33;
    sub_1B6B119E4((uint64_t)v76);
    v74[0] = *(_OWORD *)v66;
    v74[1] = *(_OWORD *)&v66[16];
    uint64_t v75 = v67;
    long long v72 = v64;
    long long v73 = v65;
    v70[0] = *(_OWORD *)v66;
    v70[1] = *(_OWORD *)&v66[16];
    uint64_t v71 = v67;
    long long v68 = v64;
    long long v69 = v65;
    if (v21) {
      break;
    }
    long long v40 = v81;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v40 = sub_1B68C3070(0, v40[2] + 1, 1, v40);
    }
    unint64_t v42 = v40[2];
    unint64_t v41 = v40[3];
    if (v42 >= v41 >> 1) {
      long long v40 = sub_1B68C3070(v41 > 1, v42 + 1, 1, v40);
    }
    v40[2] = v42 + 1;
    unint64_t v81 = v40;
    long long v39 = &v40[4 * v42];
    v39[4] = v19;
    v39[5] = 0;
LABEL_30:
    v39[6] = v32;
    v39[7] = v34;
    long long v43 = v73;
    if ((void)v73 == *((void *)&v73 + 1) >> 1
      || (uint64_t v44 = *((void *)&v72 + 1), v45 = (unsigned char *)(*((void *)&v72 + 1) + 40 * v73), *v45))
    {
      sub_1B6B08E54(9u);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v51 = v71;
      long long v52 = v69;
      *(_OWORD *)uint64_t v58 = v68;
      *(_OWORD *)(v58 + 16) = v52;
      long long v53 = v70[1];
      *(_OWORD *)(v58 + 32) = v70[0];
      *(_OWORD *)(v58 + 48) = v53;
      *(void *)(v58 + 64) = v51;
      return (uint64_t)v81;
    }
    uint64_t v46 = v72;
    sub_1B6B11B80((uint64_t)v74, (uint64_t)v80, &qword_1EB97FDA8, (uint64_t)&type metadata for Lexer.Token);
    uint64_t v47 = *v45;
    uint64_t v48 = v44 + 40 * v43;
    long long v63 = *(_OWORD *)(v48 + 8);
    uint64_t v50 = *(void *)(v48 + 24);
    uint64_t v49 = *(void *)(v48 + 32);
    swift_bridgeObjectRetain();
    sub_1B6B11980((uint64_t)v80);
    *(void *)&long long v68 = v46;
    *((void *)&v68 + 1) = v44;
    *(void *)&long long v69 = v43 + 1;
    *((void *)&v69 + 1) = *((void *)&v43 + 1);
    *(void *)&v70[0] = v47;
    *(_OWORD *)((char *)v70 + 8) = v63;
    *((void *)&v70[1] + 1) = v50;
    uint64_t v71 = v49;
  }
  char v35 = sub_1B677F67C(v19, v21, a3);
  uint64_t v36 = v81;
  if (v35)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v36 = sub_1B68C3070(0, v36[2] + 1, 1, v36);
    }
    unint64_t v38 = v36[2];
    unint64_t v37 = v36[3];
    if (v38 >= v37 >> 1) {
      uint64_t v36 = sub_1B68C3070(v37 > 1, v38 + 1, 1, v36);
    }
    v36[2] = v38 + 1;
    unint64_t v81 = v36;
    long long v39 = &v36[4 * v38];
    v39[4] = v19;
    v39[5] = v21;
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v64 = 0;
  *((void *)&v64 + 1) = 0xE000000000000000;
  sub_1B6B119AC((uint64_t)&v72);
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  *(void *)&long long v64 = 0x746E656D75677261;
  *((void *)&v64 + 1) = 0xEA00000000002720;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v54 = sub_1B6B05A24();
  uint64_t v56 = v55;
  swift_bridgeObjectRelease();
  sub_1B6B119E4((uint64_t)&v72);
  sub_1B6B117F4();
  swift_allocError();
  *uint64_t v57 = v54;
  v57[1] = v56;
  swift_willThrow();
LABEL_7:
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B0A840@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1B6E30AB8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = *(_OWORD *)(a1 + 48);
  long long v106 = *(_OWORD *)(a1 + 32);
  long long v107 = v15;
  uint64_t v108 = *(void *)(a1 + 64);
  long long v16 = *(_OWORD *)(a1 + 16);
  long long v104 = *(_OWORD *)a1;
  long long v105 = v16;
  long long v83 = v106;
  long long v84 = v15;
  uint64_t v85 = v108;
  long long v81 = v104;
  long long v82 = v16;
  if (a2)
  {
    if ((void)v105 == *((void *)&v105 + 1) >> 1
      || (*(unsigned __int8 *)(*((void *)&v104 + 1) + 40 * v105) | 4) != 5)
    {
      sub_1B6B119AC((uint64_t)&v104);
    }
    else
    {
      sub_1B6B119AC((uint64_t)&v104);
      sub_1B6B05CB0((uint64_t)v86);
      sub_1B6B11980((uint64_t)v86);
    }
    sub_1B6B08E54(0xEu);
    if (v4) {
      goto LABEL_35;
    }
    sub_1B6B08E54(2u);
    uint64_t v5 = 0;
    LODWORD(v77) = a3;
    uint64_t v78 = v11;
    uint64_t v115 = v10;
  }
  else
  {
    LODWORD(v77) = a3;
    uint64_t v78 = v11;
    uint64_t v115 = v10;
    sub_1B6B119AC((uint64_t)&v104);
  }
  uint64_t v17 = sub_1B6B08E54(0xEu);
  if (!v5)
  {
    uint64_t v21 = v17;
    uint64_t v22 = v18;
    uint64_t v23 = v19;
    uint64_t v24 = v20;
    BOOL v76 = a4;
    swift_bridgeObjectRetain();
    uint64_t v25 = MEMORY[0x1BA9B34C0](v21, v22, v23, v24);
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v28 = *((void *)&v81 + 1);
    long long v29 = v82;
    if ((void)v82 == *((void *)&v82 + 1) >> 1 || *(unsigned char *)(*((void *)&v81 + 1) + 40 * v82) != 2)
    {
      uint64_t v77 = v81;
      sub_1B6890014(v25, v27, (uint64_t)v91);
      sub_1B6B11B80((uint64_t)v91, (uint64_t)&v92, (unint64_t *)&unk_1EB97E6F0, (uint64_t)&type metadata for ScriptKeyPath);
      if (v93)
      {
        long long v74 = v94;
        uint64_t v72 = v95;
        uint64_t v73 = v92;
        char v98 = v96;
        int v71 = v97;
        uint64_t v75 = v93;
        swift_bridgeObjectRelease();
        uint64_t v109 = v77;
        uint64_t v110 = v28;
        long long v111 = v29;
        long long v112 = v83;
        long long v113 = v84;
        uint64_t v114 = v85;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v32 = sub_1B6B05D60();
        unint64_t v34 = v33;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_1B6B119E4((uint64_t)&v104);
        unint64_t v79 = v32;
        unint64_t v80 = v34;
        sub_1B6E30A58();
        sub_1B633AF88();
        uint64_t v35 = sub_1B6E32608();
        uint64_t v37 = v36;
        (*(void (**)(char *, uint64_t))(v78 + 8))(v14, v115);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v39 = v72;
        uint64_t v40 = v73;
        __int16 v41 = v71;
        uint64_t v42 = v75;
        char v43 = 0;
        uint64_t v44 = v85;
        long long v45 = v82;
        *(_OWORD *)a1 = v81;
        *(_OWORD *)(a1 + 16) = v45;
        long long v46 = v84;
        *(_OWORD *)(a1 + 32) = v83;
        *(_OWORD *)(a1 + 48) = v46;
        long long v47 = v74;
        *(void *)(a1 + 64) = v44;
        LOBYTE(v14) = 1;
        char v48 = v98;
LABEL_17:
        uint64_t v49 = v76;
        *BOOL v76 = v40;
        v49[1] = v42;
        *((_OWORD *)v49 + 1) = v47;
        _OWORD v49[4] = v39;
        *((unsigned char *)v49 + 40) = v48;
        *((_WORD *)v49 + 21) = v41;
        v49[6] = v35;
        v49[7] = v37;
        *((unsigned char *)v49 + 64) = v43;
        *((unsigned char *)v49 + 65) = (_BYTE)v14;
        return result;
      }
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000017;
      unint64_t v80 = 0x80000001B6F48E80;
      sub_1B6E31948();
    }
    else
    {
      uint64_t v30 = 0x73676E69646E6942;
      uint64_t v31 = v27;
      if (v25 == 0x73676E69646E6962 && v27 == 0xE800000000000000)
      {
        uint64_t v31 = 0xE800000000000000;
        swift_bridgeObjectRelease();
      }
      else if (sub_1B6E334B8())
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = 0xE800000000000000;
      }
      else
      {
        uint64_t v30 = v25;
      }
      if (qword_1EB97D5D0 != -1) {
        swift_once();
      }
      swift_retain();
      uint64_t v50 = sub_1B62B2184(v30, v31, 0, 1);
      swift_release();
      if (v50)
      {
        if (!swift_conformsToProtocol2()) {
          uint64_t v50 = 0;
        }
        if (v50)
        {
          uint64_t v51 = swift_conformsToProtocol2() ? v50 : 0;
          if (v51)
          {
            swift_bridgeObjectRelease();
            sub_1B6B08E54(2u);
            sub_1B6B09150(&v81, v51, (uint64_t)v87);
            v102[2] = v83;
            v102[3] = v84;
            uint64_t v103 = v85;
            v102[0] = v81;
            v102[1] = v82;
            sub_1B6B119AC((uint64_t)v102);
            uint64_t v52 = sub_1B6B05D60();
            unint64_t v54 = v53;
            sub_1B6B119E4((uint64_t)v102);
            unint64_t v79 = v52;
            unint64_t v80 = v54;
            sub_1B6E30A58();
            sub_1B633AF88();
            uint64_t v35 = sub_1B6E32608();
            uint64_t v37 = v55;
            (*(void (**)(char *, uint64_t))(v78 + 8))(v14, v115);
            swift_bridgeObjectRelease();
            v100[2] = v83;
            v100[3] = v84;
            uint64_t v101 = v85;
            v100[0] = v81;
            v100[1] = v82;
            sub_1B6B119AC((uint64_t)v100);
            uint64_t v56 = sub_1B6B09588((uint64_t)&unk_1F0F5BA60);
            swift_arrayDestroy();
            uint64_t v61 = sub_1B6B0A0FC((uint64_t)&v81, 1, v56);
            swift_bridgeObjectRelease();
            if (!*(void *)(v61 + 16))
            {
              char v43 = 0;
              LOBYTE(v14) = 1;
              goto LABEL_41;
            }
            if (v77)
            {
              unsigned int v62 = sub_1B6B05598(v61);
              char v43 = v62;
              LODWORD(v14) = (v62 >> 8) & 1;
LABEL_41:
              sub_1B6B119E4((uint64_t)v100);
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              uint64_t v67 = v85;
              long long v68 = v82;
              *(_OWORD *)a1 = v81;
              *(_OWORD *)(a1 + 16) = v68;
              long long v69 = v84;
              *(_OWORD *)(a1 + 32) = v83;
              *(_OWORD *)(a1 + 48) = v69;
              *(void *)(a1 + 64) = v67;
              __int16 v41 = v90;
              uint64_t v39 = v88;
              long long v47 = v87[1];
              uint64_t v42 = *((void *)&v87[0] + 1);
              uint64_t v40 = *(void *)&v87[0];
              char v48 = v89;
              goto LABEL_17;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v63 = sub_1B6B05A24();
            uint64_t v65 = v64;
            sub_1B6B117F4();
            swift_allocError();
            uint64_t *v66 = v63;
            v66[1] = v65;
            swift_willThrow();
            sub_1B6B119E4((uint64_t)v100);
            long long v99 = v87[0];
            sub_1B62C7BF4((uint64_t)&v99);
            swift_release();
            goto LABEL_35;
          }
        }
      }
      unint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v79 = 0xD000000000000018;
      unint64_t v80 = 0x80000001B6F48EA0;
      sub_1B6E31948();
    }
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v57 = sub_1B6B05A24();
    uint64_t v59 = v58;
    swift_bridgeObjectRelease();
    sub_1B6B117F4();
    swift_allocError();
    *long long v60 = v57;
    v60[1] = v59;
    swift_willThrow();
  }
LABEL_35:
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B0B10C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646C726F77 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E656373 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646C726F777263 && a2 == 0xE700000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 2003134838 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6B117F4();
    swift_allocError();
    *unint64_t v6 = 39;
    v6[1] = 0xE100000000000000;
    return swift_willThrow();
  }
}

uint64_t sub_1B6B0B3A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  sub_1B6B11D38(0, &qword_1E9DD5B90, (uint64_t (*)(void))sub_1B6B11AF4, (uint64_t)&type metadata for MetalScriptCodeGen.FunctionKind, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32878();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v19 = a1 + 32;
  uint64_t v20 = v1;
  while (2)
  {
    int v6 = *(unsigned __int8 *)(v19 + v4);
    sub_1B6E33918();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1B6E33988();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) == 0)
    {
LABEL_3:
      *(void *)(v5 + 8 * v10) = v12 | v11;
      *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
      ++*(void *)(v3 + 16);
      goto LABEL_4;
    }
    while (!*(unsigned char *)(*(void *)(v3 + 48) + v9))
    {
      unint64_t v13 = 0xE600000000000000;
      uint64_t v14 = 0x786574726576;
      if (v6) {
        goto LABEL_11;
      }
LABEL_20:
      unint64_t v16 = 0xE600000000000000;
      if (v14 == 0x786574726576) {
        goto LABEL_21;
      }
LABEL_22:
      char v17 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_4;
      }
      unint64_t v9 = (v9 + 1) & v8;
      unint64_t v10 = v9 >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
      uint64_t v12 = 1 << v9;
      if ((v11 & (1 << v9)) == 0) {
        goto LABEL_3;
      }
    }
    if (*(unsigned char *)(*(void *)(v3 + 48) + v9) == 1)
    {
      unint64_t v13 = 0xE800000000000000;
      uint64_t v14 = 0x746E656D67617266;
      if (v6) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
    unint64_t v13 = 0xE700000000000000;
    uint64_t v14 = 0x657475706D6F63;
    if (!v6) {
      goto LABEL_20;
    }
LABEL_11:
    if (v6 == 1) {
      uint64_t v15 = 0x746E656D67617266;
    }
    else {
      uint64_t v15 = 0x657475706D6F63;
    }
    if (v6 == 1) {
      unint64_t v16 = 0xE800000000000000;
    }
    else {
      unint64_t v16 = 0xE700000000000000;
    }
    if (v14 != v15) {
      goto LABEL_22;
    }
LABEL_21:
    if (v13 != v16) {
      goto LABEL_22;
    }
    swift_bridgeObjectRelease_n();
LABEL_4:
    if (++v4 != v20) {
      continue;
    }
    return v3;
  }
}

unint64_t sub_1B6B0B64C(uint64_t a1, int a2)
{
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  uint64_t v7 = (_OWORD *)(v5 + 16);
  unint64_t v8 = *(void *)(a1 + 64);
  long long v9 = *(_OWORD *)(a1 + 32);
  long long v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = v9;
  *(_OWORD *)(v5 + 64) = v10;
  *(void *)(v5 + 80) = v8;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v11 = sub_1B6B08E54(0xEu);
  if (v2) {
    goto LABEL_2;
  }
  uint64_t v15 = v14;
  int v70 = a2;
  unint64_t v61 = v11;
  unint64_t v63 = v12;
  uint64_t v65 = v13;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1B6B09588((uint64_t)&unk_1F0F5B9C0);
  swift_arrayDestroy();
  uint64_t v17 = sub_1B6B0A0FC((uint64_t)v7, 1, v16);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v58 = v15;
    uint64_t v59 = v17;
    uint64_t v19 = (uint64_t *)(v17 + 56);
    do
    {
      uint64_t v20 = *(v19 - 2);
      if (v20)
      {
        uint64_t v21 = *(v19 - 1);
        uint64_t v22 = *v19;
        BOOL v23 = *(v19 - 3) == 0x6563617073 && v20 == 0xE500000000000000;
        if (v23 || (sub_1B6E334B8() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          int v69 = sub_1B6B0B10C(v21, v22);
          goto LABEL_15;
        }
      }
      v19 += 4;
      --v18;
    }
    while (v18);
    int v69 = 5;
LABEL_15:
    uint64_t v15 = v58;
    uint64_t v17 = v59;
  }
  else
  {
    int v69 = 5;
  }
  if (sub_1B6741358(29796, 0xE200000000000000, v61, v63, v65, v15))
  {
    uint64_t v24 = MEMORY[0x1E4FBC870];
    char v25 = 0;
LABEL_20:
    unint64_t v8 = sub_1B6B06330(v25, v24, v17, v5, v61, v63, v65, v15);
LABEL_33:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    long long v64 = *(_OWORD *)(v5 + 48);
    long long v66 = *(_OWORD *)(v5 + 32);
    uint64_t v33 = *(void *)(v5 + 64);
    uint64_t v34 = *(void *)(v5 + 72);
    uint64_t v35 = *(void *)(v5 + 80);
    swift_bridgeObjectRetain();
    long long v62 = *(_OWORD *)(v5 + 16);
    swift_unknownObjectRetain();
    swift_release();
    *(_OWORD *)a1 = v62;
    *(_OWORD *)(a1 + 16) = v66;
    *(_OWORD *)(a1 + 32) = v64;
    *(void *)(a1 + 48) = v33;
    *(void *)(a1 + 56) = v34;
    *(void *)(a1 + 64) = v35;
    return v8;
  }
  if (sub_1B6741358(1701669236, 0xE400000000000000, v61, v63, v65, v15))
  {
    uint64_t v24 = MEMORY[0x1E4FBC870];
    char v25 = 1;
    goto LABEL_20;
  }
  if (sub_1B6741358(0x5F646C726F777263, 0xEF6A6F72705F6F74, v61, v63, v65, v15))
  {
    uint64_t v26 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B690);
    unint64_t v27 = sub_1B6B05E3C(5u, MEMORY[0x1E4FBC870], v26, v70, v5, v61, v63, v65, v15, v17);
LABEL_32:
    unint64_t v8 = v27;
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  if (sub_1B6741358(0x5F646C726F777263, 0xEF776569765F6F74, v61, v63, v65, v15))
  {
    uint64_t v28 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B848);
    unint64_t v27 = sub_1B6B05E3C(6u, MEMORY[0x1E4FBC870], v28, v70, v5, v61, v63, v65, v15, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0x5F6F745F77656976, 0xEC0000006A6F7270, v61, v63, v65, v15))
  {
    uint64_t v29 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B870);
    unint64_t v27 = sub_1B6B05E3C(7u, MEMORY[0x1E4FBC870], v29, v70, v5, v61, v63, v65, v15, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0x5F6F745F6A6F7270, 0xEC00000077656976, v61, v63, v65, v15))
  {
    uint64_t v30 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B898);
    unint64_t v27 = sub_1B6B05E3C(8u, MEMORY[0x1E4FBC870], v30, v70, v5, v61, v63, v65, v15, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0xD000000000000012, 0x80000001B6F48D70, v61, v63, v65, v15))
  {
    uint64_t v31 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B8C0);
    unint64_t v27 = sub_1B6B05E3C(9u, MEMORY[0x1E4FBC870], v31, v70, v5, v61, v63, v65, v15, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0x705F6172656D6163, 0xEF6E6F697469736FLL, v61, v63, v65, v15))
  {
    if (v69 == 5) {
      char v36 = 3;
    }
    else {
      char v36 = v69;
    }
    unsigned __int8 v60 = v36;
    uint64_t v37 = sub_1B6B09588((uint64_t)&unk_1F0F5B8E8);
    swift_arrayDestroy();
    uint64_t v38 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B918);
    unint64_t v8 = sub_1B6B05E3C(v60, v37, v38, v70, v5, v61, v63, v65, v15, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  if (sub_1B6741358(0xD000000000000018, 0x80000001B6F48D90, v61, v63, v65, v15))
  {
    uint64_t v39 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B940);
    unint64_t v27 = sub_1B6B05E3C(0xAu, MEMORY[0x1E4FBC870], v39, v70, v5, v61, v63, v65, v15, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0xD000000000000012, 0x80000001B6F48DB0, v61, v63, v65, v15))
  {
    uint64_t v40 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B968);
    unint64_t v27 = sub_1B6B05E3C(0xBu, MEMORY[0x1E4FBC870], v40, v70, v5, v61, v63, v65, v15, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0xD00000000000001ALL, 0x80000001B6F48DD0, v61, v63, v65, v15))
  {
    uint64_t v41 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B990);
    unint64_t v8 = sub_1B6B05E3C(0xCu, MEMORY[0x1E4FBC870], v41, v70, v5, v61, v63, v65, v15, v17);
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  uint64_t v42 = v15;
  if (sub_1B6741358(0x6E5F6172656D6163, 0xEB00000000726165, v61, v63, v65, v15))
  {
    uint64_t v43 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B6B8);
    unint64_t v27 = sub_1B6B05E3C(0xEu, MEMORY[0x1E4FBC870], v43, v70, v5, v61, v63, v65, v42, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0x665F6172656D6163, 0xEA00000000007261, v61, v63, v65, v15))
  {
    uint64_t v44 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B6E0);
    unint64_t v27 = sub_1B6B05E3C(0xFu, MEMORY[0x1E4FBC870], v44, v70, v5, v61, v63, v65, v42, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0x695F6172656D6163, 0xEC0000007865646ELL, v61, v63, v65, v15))
  {
    uint64_t v45 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B708);
    unint64_t v27 = sub_1B6B05E3C(0xDu, MEMORY[0x1E4FBC870], v45, v70, v5, v61, v63, v65, v42, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0x6F5F6C6174726F70, 0xEE00797469636170, v61, v63, v65, v15))
  {
    uint64_t v46 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B730);
    unint64_t v27 = sub_1B6B05E3C(0x13u, MEMORY[0x1E4FBC870], v46, v70, v5, v61, v63, v65, v42, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0x65636E6169646172, 0xE800000000000000, v61, v63, v65, v15))
  {
    uint64_t v47 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B758);
    unint64_t v27 = sub_1B6B05E3C(0x14u, MEMORY[0x1E4FBC870], v47, v70, v5, v61, v63, v65, v42, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0x6E61696461727269, 0xEA00000000006563, v61, v63, v65, v15))
  {
    uint64_t v48 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B780);
    unint64_t v27 = sub_1B6B05E3C(0x15u, MEMORY[0x1E4FBC870], v48, v70, v5, v61, v63, v65, v42, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0x65746E695F6C6269, 0xED0000797469736ELL, v61, v63, v65, v15))
  {
    uint64_t v49 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B7A8);
    unint64_t v27 = sub_1B6B05E3C(0x10u, MEMORY[0x1E4FBC870], v49, v70, v5, v61, v63, v65, v42, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0x61746F725F6C6269, 0xEC0000006E6F6974, v61, v63, v65, v15))
  {
    uint64_t v50 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B7D0);
    unint64_t v27 = sub_1B6B05E3C(0x11u, MEMORY[0x1E4FBC870], v50, v70, v5, v61, v63, v65, v42, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0x74756C5F66647262, 0xE800000000000000, v61, v63, v65, v15))
  {
    uint64_t v51 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B7F8);
    unint64_t v27 = sub_1B6B05E3C(0x16u, MEMORY[0x1E4FBC870], v51, v70, v5, v61, v63, v65, v42, v17);
    goto LABEL_32;
  }
  if (sub_1B6741358(0xD000000000000017, 0x80000001B6F35920, v61, v63, v65, v15))
  {
    uint64_t v52 = sub_1B6B0B3A0((uint64_t)&unk_1F0F5B820);
    unint64_t v27 = sub_1B6B05E3C(0x12u, MEMORY[0x1E4FBC870], v52, v70, v5, v61, v63, v65, v42, v17);
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
  long long v53 = *(_OWORD *)(v5 + 64);
  v67[2] = *(_OWORD *)(v5 + 48);
  v67[3] = v53;
  uint64_t v68 = *(void *)(v5 + 80);
  long long v54 = *(_OWORD *)(v5 + 32);
  v67[0] = *v7;
  v67[1] = v54;
  sub_1B6B119AC((uint64_t)v67);
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  MEMORY[0x1BA9B34C0](v61, v63, v65, v15);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v55 = sub_1B6B05A24();
  unint64_t v8 = v56;
  swift_bridgeObjectRelease();
  sub_1B6B119E4((uint64_t)v67);
  sub_1B6B117F4();
  swift_allocError();
  *uint64_t v57 = v55;
  v57[1] = v8;
  swift_willThrow();
LABEL_2:
  swift_release();
  return v8;
}

uint64_t sub_1B6B0C3A4(long long *a1)
{
  long long v17 = *a1;
  long long v18 = a1[1];
  long long v19 = a1[2];
  long long v20 = a1[3];
  uint64_t v21 = *((void *)a1 + 8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1B6B08E54(2u);
  if (!v1)
  {
    unint64_t v5 = sub_1B6B08E54(0xEu);
    unint64_t v7 = v6;
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    char v12 = sub_1B6741358(0x6E6F697469736F70, 0xE800000000000000, v5, v6, v8, v10);
    if (v12)
    {
      uint64_t v3 = 0;
LABEL_21:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      *a1 = v17;
      a1[1] = v18;
      a1[2] = v19;
      a1[3] = v20;
      *((void *)a1 + 8) = v21;
      return v3;
    }
    if (sub_1B6741358(0x726F6C6F63, 0xE500000000000000, v5, v7, v9, v11))
    {
      uint64_t v3 = 5;
      goto LABEL_21;
    }
    if (sub_1B6741358(0x6C616D726F6ELL, 0xE600000000000000, v5, v7, v9, v11))
    {
      uint64_t v3 = 6;
      goto LABEL_21;
    }
    if (sub_1B6741358(0x746E65676E6174, 0xE700000000000000, v5, v7, v9, v11))
    {
      uint64_t v3 = 7;
      goto LABEL_21;
    }
    if (sub_1B6741358(3176053, 0xE300000000000000, v5, v7, v9, v11))
    {
      uint64_t v3 = 1;
      goto LABEL_21;
    }
    if (sub_1B6741358(3241589, 0xE300000000000000, v5, v7, v9, v11))
    {
      uint64_t v3 = 2;
      goto LABEL_21;
    }
    if (sub_1B6741358(3307125, 0xE300000000000000, v5, v7, v9, v11))
    {
      uint64_t v3 = 3;
      goto LABEL_21;
    }
    if (sub_1B6741358(3372661, 0xE300000000000000, v5, v7, v9, v11))
    {
      uint64_t v3 = 4;
      goto LABEL_21;
    }
    v22[2] = v19;
    v22[3] = v20;
    uint64_t v23 = v21;
    v22[0] = v17;
    v22[1] = v18;
    swift_bridgeObjectRetain();
    sub_1B6B119AC((uint64_t)v22);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    MEMORY[0x1BA9B34C0](v5, v7, v9, v11);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v13 = sub_1B6B05A24();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_1B6B119E4((uint64_t)v22);
    sub_1B6B117F4();
    swift_allocError();
    *uint64_t v16 = v13;
    v16[1] = v15;
    swift_willThrow();
  }
  uint64_t v3 = v21;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1B6B0C720(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1718378856 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0x8000000000000048;
  }
  if (a1 == 0x32666C6168 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_allocObject();
    long long v7 = xmmword_1B6E9A6A0;
LABEL_11:
    *(_OWORD *)(v6 + 16) = v7;
    return v6 | 0x1000000000000000;
  }
  if (a1 == 0x33666C6168 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_allocObject();
    long long v7 = xmmword_1B6E9A6B0;
    goto LABEL_11;
  }
  if (a1 == 0x34666C6168 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_allocObject();
    long long v7 = xmmword_1B6E9A6C0;
    goto LABEL_11;
  }
  if (a1 == 0x74616F6C66 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0x8000000000000050;
  }
  if (a1 == 0x3274616F6C66 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_allocObject();
    long long v7 = xmmword_1B6E8F480;
    goto LABEL_11;
  }
  if (a1 == 0x3374616F6C66 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_allocObject();
    long long v7 = xmmword_1B6E8DAE0;
    goto LABEL_11;
  }
  if (a1 == 0x3474616F6C66 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_allocObject();
    long long v7 = xmmword_1B6E8DAD0;
    goto LABEL_11;
  }
  if (a1 == 0x33783374616F6C66 && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 3;
    uint64_t v10 = swift_allocObject();
    long long v11 = xmmword_1B6E8DAE0;
LABEL_41:
    *(_OWORD *)(v10 + 16) = v11;
    *(void *)(v9 + 24) = v10 | 0x1000000000000000;
    return v9 | 0x1000000000000000;
  }
  if (a1 == 0x34783474616F6C66 && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 4;
    uint64_t v10 = swift_allocObject();
    long long v11 = xmmword_1B6E8DAD0;
    goto LABEL_41;
  }
  if (a1 == 7630441 && a2 == 0xE300000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    unint64_t v5 = 0x8000000000000030;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B666BDC4();
    sub_1B666BE18();
    if ((sub_1B6E31618() & 1) != 0 || (sub_1B6E31618())
      && (swift_bridgeObjectRetain(), char v12 = sub_1B69B3604(), v12 != 7))
    {
      char v13 = v12;
      uint64_t v14 = swift_allocObject();
      *(unsigned char *)(v14 + 16) = v13;
      *(void *)(v14 + 24) = a1;
      *(void *)(v14 + 32) = a2;
      return v14 | 0x7000000000000000;
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0xF000000000000007;
    }
  }
  return v5;
}

uint64_t sub_1B6B0CD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EB97D5B8 != -1) {
    swift_once();
  }
  uint64_t result = sub_1B677F67C(a2, a3, qword_1EB997A60);
  if (result)
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    uint64_t v6 = sub_1B6B05A24();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    sub_1B6B117F4();
    swift_allocError();
    *uint64_t v9 = v6;
    v9[1] = v8;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B6B0CE94(uint64_t *a1)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[7];
  uint64_t v7 = a1[8];
  *(void *)&long long v59 = *a1;
  *((void *)&v59 + 1) = v3;
  *(void *)unsigned __int8 v60 = v5;
  long long v8 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)&v60[8] = v8;
  *(_OWORD *)&v60[24] = *(_OWORD *)(a1 + 5);
  *(void *)&v60[40] = v6;
  uint64_t v61 = v7;
  if (v5 != (unint64_t)v8 >> 1 && *(unsigned char *)(v3 + 40 * v5) == 2)
  {
    uint64_t v81 = v7;
    uint64_t v9 = v3 + 40 * v5;
    uint64_t v11 = *(void *)(v9 + 24);
    uint64_t v10 = *(void *)(v9 + 32);
    *(void *)&long long v59 = v4;
    *((void *)&v59 + 1) = v3;
    *(void *)unsigned __int8 v60 = v5 + 1;
    *(void *)&v60[8] = v8;
    *(void *)&v60[16] = 2;
    *(_OWORD *)&v60[24] = *(_OWORD *)(v9 + 8);
    *(void *)&v60[40] = v11;
    uint64_t v61 = v10;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t v12 = sub_1B6B08E54(0xEu);
    if (v1)
    {
LABEL_29:
      uint64_t v20 = v61;
      swift_unknownObjectRelease();
      goto LABEL_30;
    }
    unint64_t v16 = v12;
    unint64_t v17 = v13;
    uint64_t v18 = v14;
    uint64_t v19 = v15;
    if ((sub_1B6741358(0x6E6F697469736F70, 0xE800000000000000, v12, v13, v14, v15) & 1) != 0
      || (sub_1B6741358(0xD000000000000010, 0x80000001B6F48FF0, v16, v17, v18, v19) & 1) != 0
      || (sub_1B6741358(3176053, 0xE300000000000000, v16, v17, v18, v19) & 1) != 0
      || (sub_1B6741358(3241589, 0xE300000000000000, v16, v17, v18, v19) & 1) != 0
      || (sub_1B6741358(3307125, 0xE300000000000000, v16, v17, v18, v19) & 1) != 0
      || (sub_1B6741358(3372661, 0xE300000000000000, v16, v17, v18, v19) & 1) != 0
      || (sub_1B6741358(0x726F6C6F63, 0xE500000000000000, v16, v17, v18, v19) & 1) != 0
      || (sub_1B6741358(0x6C616D726F6ELL, 0xE600000000000000, v16, v17, v18, v19) & 1) != 0
      || (sub_1B6741358(0x746E65676E6174, 0xE700000000000000, v16, v17, v18, v19) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v20 = 0;
      goto LABEL_44;
    }
    v79[2] = *(_OWORD *)&v60[16];
    v79[3] = *(_OWORD *)&v60[32];
    uint64_t v80 = v61;
    v79[0] = v59;
    v79[1] = *(_OWORD *)v60;
    swift_bridgeObjectRetain();
    sub_1B6B119AC((uint64_t)v79);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    MEMORY[0x1BA9B34C0](v16, v17, v18, v19);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v47 = sub_1B6B05A24();
    uint64_t v49 = v55;
    swift_bridgeObjectRelease();
    sub_1B6B119E4((uint64_t)v79);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v20 = sub_1B6B09588((uint64_t)&unk_1F0F5BA28);
  swift_arrayDestroy();
  uint64_t v21 = sub_1B6B0A0FC((uint64_t)&v59, 0, v20);
  if (!v1)
  {
    uint64_t v22 = (void *)v21;
    uint64_t v81 = v7;
    swift_bridgeObjectRelease();
    uint64_t v23 = v59;
    long long v58 = *(_OWORD *)v60;
    uint64_t v57 = *((void *)&v59 + 1);
    if (*(void *)v60 == *(void *)&v60[8] >> 1
      || (uint64_t v24 = (void *)(*((void *)&v59 + 1) + 40 * *(void *)v60),
          int v25 = *(unsigned __int8 *)v24,
          uint64_t v27 = v24[1],
          uint64_t v26 = v24[2],
          uint64_t v28 = v24[3],
          uint64_t v29 = v24[4],
          swift_bridgeObjectRetain(),
          v25 != 14))
    {
      swift_bridgeObjectRelease();
      unint64_t v35 = v22[2];
      if (!v35)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        uint64_t v62 = v23;
        uint64_t v63 = v57;
        long long v64 = v58;
        long long v65 = *(_OWORD *)&v60[16];
        long long v66 = *(_OWORD *)&v60[32];
        uint64_t v67 = v61;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v47 = sub_1B6B05A24();
        uint64_t v49 = v48;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
LABEL_27:
        sub_1B6B117F4();
        swift_allocError();
        *uint64_t v50 = v47;
        v50[1] = v49;
LABEL_28:
        swift_willThrow();
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v30 = MEMORY[0x1BA9B34C0](v27, v26, v28, v29);
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = sub_1B68C3070(0, v22[2] + 1, 1, v22);
      }
      unint64_t v34 = v22[2];
      unint64_t v33 = v22[3];
      unint64_t v35 = v34 + 1;
      if (v34 >= v33 >> 1) {
        uint64_t v22 = sub_1B68C3070(v33 > 1, v34 + 1, 1, v22);
      }
      v22[2] = v35;
      char v36 = &v22[4 * v34];
      *((_OWORD *)v36 + 2) = xmmword_1B6EA6200;
      v36[6] = v30;
      v36[7] = v32;
    }
    uint64_t v56 = v23;
    uint64_t v37 = v22 + 7;
    while (1)
    {
      uint64_t v38 = *(v37 - 2);
      if (v38)
      {
        uint64_t v20 = *(v37 - 1);
        uint64_t v39 = *v37;
        BOOL v40 = *(v37 - 3) == 1701667182 && v38 == 0xE400000000000000;
        if (v40 || (sub_1B6E334B8() & 1) != 0) {
          break;
        }
      }
      v37 += 4;
      if (!--v35) {
        goto LABEL_26;
      }
    }
    uint64_t v41 = v22[6];
    uint64_t v42 = v22[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    if ((~sub_1B6B0C720(v41, v42) & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRelease();
      v68[0] = v56;
      v68[1] = v57;
      long long v69 = v58;
      long long v70 = *(_OWORD *)&v60[16];
      long long v71 = *(_OWORD *)&v60[32];
      uint64_t v72 = v61;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_1B6B0CD68((uint64_t)v68, v20, v39);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
LABEL_44:
      uint64_t v52 = v61;
      long long v53 = *(_OWORD *)v60;
      *(_OWORD *)a1 = v59;
      *((_OWORD *)a1 + 1) = v53;
      long long v54 = *(_OWORD *)&v60[32];
      *((_OWORD *)a1 + 2) = *(_OWORD *)&v60[16];
      *((_OWORD *)a1 + 3) = v54;
      a1[8] = v52;
      return v20;
    }
    swift_bridgeObjectRelease();
    uint64_t v73 = v56;
    uint64_t v74 = v57;
    long long v75 = v58;
    long long v76 = *(_OWORD *)&v60[16];
    long long v77 = *(_OWORD *)&v60[32];
    uint64_t v78 = v61;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v43 = sub_1B6B05A24();
    uint64_t v45 = v44;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6B117F4();
    swift_allocError();
    *uint64_t v46 = v43;
    v46[1] = v45;
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
LABEL_30:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1B6B0D770(long long *a1)
{
  long long v17 = *a1;
  long long v18 = a1[1];
  long long v19 = a1[2];
  long long v20 = a1[3];
  uint64_t v21 = *((void *)a1 + 8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1B6B08E54(2u);
  if (!v1)
  {
    unint64_t v5 = sub_1B6B08E54(0xEu);
    unint64_t v7 = v6;
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    char v12 = sub_1B6741358(0x726F6C6F63, 0xE500000000000000, v5, v6, v8, v10);
    if (v12)
    {
      uint64_t v3 = 0;
LABEL_17:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      *a1 = v17;
      a1[1] = v18;
      a1[2] = v19;
      a1[3] = v20;
      *((void *)a1 + 8) = v21;
      return v3;
    }
    if (sub_1B6741358(0xD000000000000010, 0x80000001B6F48FF0, v5, v7, v9, v11))
    {
      uint64_t v3 = 1;
      goto LABEL_17;
    }
    if (sub_1B6741358(0x645F7261656E696CLL, 0xEC00000068747065, v5, v7, v9, v11))
    {
      uint64_t v3 = 2;
      goto LABEL_17;
    }
    if (sub_1B6741358(0x61665F746E6F7266, 0xEC000000676E6963, v5, v7, v9, v11))
    {
      uint64_t v3 = 3;
      goto LABEL_17;
    }
    if (sub_1B6741358(0xD000000000000017, 0x80000001B6F49070, v5, v7, v9, v11))
    {
      uint64_t v3 = 4;
      goto LABEL_17;
    }
    if (sub_1B6741358(0x766974696D697270, 0xEC00000064695F65, v5, v7, v9, v11))
    {
      uint64_t v3 = 5;
      goto LABEL_17;
    }
    v22[2] = v19;
    v22[3] = v20;
    uint64_t v23 = v21;
    v22[0] = v17;
    v22[1] = v18;
    swift_bridgeObjectRetain();
    sub_1B6B119AC((uint64_t)v22);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    MEMORY[0x1BA9B34C0](v5, v7, v9, v11);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v13 = sub_1B6B05A24();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_1B6B119E4((uint64_t)v22);
    sub_1B6B117F4();
    swift_allocError();
    *unint64_t v16 = v13;
    v16[1] = v15;
    swift_willThrow();
  }
  uint64_t v3 = v21;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1B6B0DACC(long long *a1)
{
  long long v15 = *a1;
  long long v16 = a1[1];
  long long v17 = a1[2];
  long long v18 = a1[3];
  uint64_t v19 = *((void *)a1 + 8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1B6B08E54(2u);
  if (!v1)
  {
    unint64_t v3 = sub_1B6B08E54(0xEu);
    unint64_t v5 = v4;
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    if (sub_1B6741358(0x726F6C6F63, 0xE500000000000000, v3, v4, v6, v8))
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_unknownObjectRelease();
      *a1 = v15;
      a1[1] = v16;
      a1[2] = v17;
      a1[3] = v18;
      *((void *)a1 + 8) = v19;
      return result;
    }
    v20[2] = v17;
    v20[3] = v18;
    uint64_t v21 = v19;
    v20[0] = v15;
    v20[1] = v16;
    swift_bridgeObjectRetain();
    sub_1B6B119AC((uint64_t)v20);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    MEMORY[0x1BA9B34C0](v3, v5, v7, v9);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v11 = sub_1B6B05A24();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_1B6B119E4((uint64_t)v20);
    sub_1B6B117F4();
    swift_allocError();
    *uint64_t v14 = v11;
    v14[1] = v13;
    swift_willThrow();
  }
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1B6B0DCF0(long long *a1)
{
  unint64_t v3 = (void *)*((void *)a1 + 8);
  long long v4 = a1[1];
  long long v35 = *a1;
  long long v36 = v4;
  long long v5 = a1[3];
  long long v37 = a1[2];
  long long v38 = v5;
  uint64_t v39 = v3;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  unint64_t v6 = sub_1B6B08E54(0xEu);
  if (!v1)
  {
    if (sub_1B6B07004(v6, v7, v8, v9, 0x6C6169726574616DLL, 0xE800000000000000))
    {
      uint64_t v10 = sub_1B6B09588((uint64_t)&unk_1F0F5B9F8);
      swift_arrayDestroy();
      long long v15 = (void *)sub_1B6B0A0FC((uint64_t)&v35, 0, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v17 = *((void *)&v35 + 1);
      uint64_t v18 = v35;
      long long v19 = v36;
      if ((void)v36 != *((void *)&v36 + 1) >> 1)
      {
        uint64_t v34 = *((void *)&v35 + 1);
        uint64_t v42 = v35;
        long long v20 = (void *)(*((void *)&v35 + 1) + 40 * v36);
        int v21 = *(unsigned __int8 *)v20;
        uint64_t v22 = v20[1];
        uint64_t v23 = v20[2];
        uint64_t v24 = v20[3];
        uint64_t v25 = v20[4];
        swift_bridgeObjectRetain();
        if (v21 == 14)
        {
          uint64_t v26 = MEMORY[0x1BA9B34C0](v22, v23, v24, v25);
          uint64_t v28 = v27;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v15 = sub_1B68C3070(0, v15[2] + 1, 1, v15);
          }
          unint64_t v30 = v15[2];
          unint64_t v29 = v15[3];
          if (v30 >= v29 >> 1) {
            long long v15 = sub_1B68C3070(v29 > 1, v30 + 1, 1, v15);
          }
          v15[2] = v30 + 1;
          uint64_t v31 = &v15[4 * v30];
          *((_OWORD *)v31 + 2) = xmmword_1B6EA6200;
          v31[6] = v26;
          v31[7] = v28;
          uint64_t v17 = v34;
          uint64_t v18 = v42;
          goto LABEL_16;
        }
        uint64_t v17 = v34;
        uint64_t v18 = v42;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      uint64_t v32 = v39;
      *(void *)a1 = v18;
      *((void *)a1 + 1) = v17;
      a1[1] = v19;
      long long v33 = v38;
      a1[2] = v37;
      a1[3] = v33;
      *((void *)a1 + 8) = v32;
      return v15;
    }
    v40[2] = v37;
    v40[3] = v38;
    uint64_t v41 = v39;
    v40[0] = v35;
    v40[1] = v36;
    sub_1B6B119AC((uint64_t)v40);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6B119AC((uint64_t)v40);
    sub_1B6B05940();
    sub_1B6B119E4((uint64_t)v40);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_1B6B05A24();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_1B6B119E4((uint64_t)v40);
    sub_1B6B117F4();
    swift_allocError();
    *uint64_t v14 = v11;
    v14[1] = v13;
    swift_willThrow();
  }
  long long v15 = v39;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1B6B0E030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = *(_OWORD *)(a1 + 48);
  long long v54 = *(_OWORD *)(a1 + 32);
  long long v55 = v5;
  uint64_t v56 = *(void *)(a1 + 64);
  long long v6 = *(_OWORD *)(a1 + 16);
  v53[0] = *(_OWORD *)a1;
  v53[1] = v6;
  long long v50 = v54;
  long long v51 = v5;
  uint64_t v52 = v56;
  long long v48 = v53[0];
  long long v49 = v6;
  sub_1B6B119AC((uint64_t)v53);
  unint64_t v7 = sub_1B6B0DCF0(&v48);
  if (v2) {
    goto LABEL_7;
  }
  uint64_t v8 = v7;
  uint64_t v9 = v7[2];
  if (!v9)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1B6B05A24();
    uint64_t v15 = v16;
    goto LABEL_6;
  }
  uint64_t v11 = v7[6];
  uint64_t v10 = v7[7];
  swift_bridgeObjectRetain_n();
  unint64_t v12 = sub_1B6B0C720(v11, v10);
  if ((~v12 & 0xF000000000000007) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&v47[0] = 0xD00000000000001DLL;
    *((void *)&v47[0] + 1) = 0x80000001B6F49100;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v13 = sub_1B6B05A24();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
LABEL_6:
    sub_1B6B117F4();
    swift_allocError();
    *uint64_t v17 = v13;
    v17[1] = v15;
    swift_willThrow();
LABEL_7:
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v43 = v11;
  uint64_t v44 = a2;
  unint64_t v45 = v12;
  long long v19 = v8 + 7;
  long long v20 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v25 = *(v19 - 2);
    if (v25)
    {
      long long v46 = *((_OWORD *)v19 - 1);
      uint64_t v26 = *(v19 - 3);
      uint64_t v27 = *v19;
      BOOL v28 = v26 == 1701667182 && v25 == 0xE400000000000000;
      if (v28 || (sub_1B6E334B8() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        *(void *)&v47[0] = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B6C3D4E8(0, v20[2] + 1, 1);
          long long v20 = *(void **)&v47[0];
        }
        long long v21 = v46;
        unint64_t v23 = v20[2];
        unint64_t v22 = v20[3];
        if (v23 >= v22 >> 1)
        {
          sub_1B6C3D4E8(v22 > 1, v23 + 1, 1);
          long long v21 = v46;
          long long v20 = *(void **)&v47[0];
        }
        v20[2] = v23 + 1;
        uint64_t v24 = &v20[4 * v23];
        v24[4] = v26;
        *(_OWORD *)(v24 + 5) = v21;
        v24[7] = v27;
      }
    }
    v19 += 4;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  if (!v20[2])
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v31 = sub_1B6B05A24();
    uint64_t v33 = v32;
    sub_1B6B117F4();
    swift_allocError();
    uint64_t *v34 = v31;
    v34[1] = v33;
    swift_willThrow();
    sub_1B6827B68(v45);
    goto LABEL_7;
  }
  uint64_t v30 = v20[6];
  uint64_t v29 = v20[7];
  swift_bridgeObjectRetain();
  swift_release();
  sub_1B6B119AC((uint64_t)v53);
  sub_1B6B0CD68((uint64_t)v53, v30, v29);
  sub_1B6B119E4((uint64_t)v53);
  sub_1B6B119E4((uint64_t)v53);
  uint64_t v35 = v10;
  if (v45 >> 60 == 7)
  {
    uint64_t result = sub_1B6827B68(v45);
    char v36 = 4;
    uint64_t v37 = v43;
    uint64_t v38 = v44;
LABEL_28:
    uint64_t v40 = v52;
    long long v41 = v49;
    *(_OWORD *)a1 = v48;
    *(_OWORD *)(a1 + 16) = v41;
    long long v42 = v51;
    *(_OWORD *)(a1 + 32) = v50;
    *(_OWORD *)(a1 + 48) = v42;
    *(void *)(a1 + 64) = v40;
    *(void *)uint64_t v38 = v30;
    *(void *)(v38 + 8) = v29;
    *(void *)(v38 + 16) = v37;
    *(void *)(v38 + 24) = v35;
    *(unsigned char *)(v38 + 32) = v36;
    return result;
  }
  swift_bridgeObjectRelease();
  sub_1B69B27D0(v45);
  uint64_t v38 = v44;
  if (v39)
  {
    memset(v47, 0, sizeof(v47));
    uint64_t v30 = sub_1B62B2E34(v39, (uint64_t)v47, v30, v29, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, (uint64_t)&type metadata for MaterialParameters, v39, (uint64_t)&off_1F0F77048);
    sub_1B6827B68(v45);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B639567C((uint64_t)v47, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6B1203C);
    uint64_t v29 = 0;
    uint64_t v37 = 0;
    uint64_t v35 = 0;
    char v36 = 3;
    goto LABEL_28;
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  unint64_t v57 = v45;
  sub_1B6E32B18();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6B0E5C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746165706572 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F745F706D616C63 && a2 == 0xED00006F72657A5FLL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F745F706D616C63 && a2 == 0xED0000656764655FLL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D5F746165706572 && a2 == 0xED0000726F727269 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6B117F4();
    swift_allocError();
    *long long v6 = 39;
    v6[1] = 0xE100000000000000;
    return swift_willThrow();
  }
}

uint64_t sub_1B6B0E86C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7473657261656ELL && a2 == 0xE700000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261656E696CLL && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6B117F4();
    swift_allocError();
    *long long v6 = 39;
    v6[1] = 0xE100000000000000;
    return swift_willThrow();
  }
}

uint64_t sub_1B6B0E9F4(uint64_t a1, char a2, char a3, int a4)
{
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  uint64_t v9 = v7 + 16;
  uint64_t v10 = *(void *)(a1 + 64);
  long long v11 = *(_OWORD *)(a1 + 32);
  long long v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v7 + 32) = v8;
  *(_OWORD *)(v7 + 48) = v11;
  *(_OWORD *)(v7 + 64) = v12;
  *(void *)(v7 + 80) = v10;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1B6B05CB0((uint64_t)v155);
  sub_1B6B11980((uint64_t)v155);
  int v13 = v155[0];
  if (v155[0] != 5 && v155[0] != 6 && v155[0] != 1)
  {
    long long v14 = *(_OWORD *)v9;
    v199[1] = *(_OWORD *)(v7 + 32);
    long long v15 = *(_OWORD *)(v7 + 64);
    v199[2] = *(_OWORD *)(v7 + 48);
    v199[3] = v15;
    uint64_t v200 = *(void *)(v7 + 80);
    v199[0] = v14;
    sub_1B6B119AC((uint64_t)v199);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v152 = 0xD00000000000001ELL;
    unint64_t v153 = 0x80000001B6F48A40;
    sub_1B6B119AC((uint64_t)v199);
    sub_1B6B05940();
    sub_1B6B119E4((uint64_t)v199);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v16 = (_OWORD *)sub_1B6B05A24();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    sub_1B6B119E4((uint64_t)v199);
    sub_1B6B117F4();
    swift_allocError();
    *long long v19 = v16;
    v19[1] = v18;
    swift_willThrow();
LABEL_14:
    swift_release();
    return (uint64_t)v16;
  }
  uint64_t v151 = v7;
  float32x4_t v201 = (_OWORD *)a1;
  if (a4 != 3)
  {
    if (a4 != 1)
    {
      char v20 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_12;
      }
      if ((_BYTE)a4) {
        sub_1B6E334B8();
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_12:
  long long v21 = *(_OWORD *)(v7 + 64);
  v189[2] = *(_OWORD *)(v7 + 48);
  v189[3] = v21;
  uint64_t v190 = *(void *)(v7 + 80);
  long long v22 = *(_OWORD *)(v7 + 32);
  v189[0] = *(_OWORD *)v9;
  v189[1] = v22;
  sub_1B6B119AC((uint64_t)v189);
  uint64_t v16 = v189;
  uint64_t v23 = sub_1B6B08FF0(0xEu);
  if (v4)
  {
    sub_1B6B119E4((uint64_t)v189);
    goto LABEL_14;
  }
  unint64_t v28 = v23;
  unint64_t v29 = v24;
  uint64_t v30 = v25;
  uint64_t v31 = v26;
  swift_bridgeObjectRetain();
  sub_1B6B119E4((uint64_t)v189);
  if ((sub_1B6741358(0x6F43747069726373, 0xED0000747865746ELL, v28, v29, v30, v31) & 1) != 0
    || (sub_1B6741358(0x635F747069726373, 0xEE00747865746E6FLL, v28, v29, v30, v31) & 1) != 0)
  {
    sub_1B6B066E8(5, v28, v29, v30, v31, v13, v151);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_1B6B05CB0((uint64_t)v156);
    sub_1B6B11980((uint64_t)v156);
    uint64_t v16 = (_OWORD *)0xF000000000000000;
LABEL_19:
    long long v147 = *(_OWORD *)(v151 + 48);
    long long v149 = *(_OWORD *)(v151 + 32);
    uint64_t v32 = *(void *)(v151 + 64);
    uint64_t v33 = *(void *)(v151 + 72);
    uint64_t v34 = *(void *)(v151 + 80);
    swift_bridgeObjectRetain();
    long long v145 = *(_OWORD *)(v151 + 16);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t v35 = v201;
    *float32x4_t v201 = v145;
    v35[1] = v149;
    v35[2] = v147;
    *((void *)v35 + 6) = v32;
    *((void *)v35 + 7) = v33;
    *((void *)v35 + 8) = v34;
    return (uint64_t)v16;
  }
  if (v13 == 1)
  {
    swift_bridgeObjectRelease();
    sub_1B6B0A840(v9, 1, 1, &v152);
    uint64_t v36 = v154;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    unint64_t v152 = 35;
    unint64_t v153 = 0xE100000000000000;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    unint64_t v37 = v152;
    unint64_t v38 = v153;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v36;
    *(void *)(v39 + 24) = v37;
    *(void *)(v39 + 32) = v38;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v16 = (_OWORD *)(v39 | 0x6000000000000000);
    goto LABEL_19;
  }
  if (sub_1B6741358(0x6E69746C697562, 0xE700000000000000, v28, v29, v30, v31))
  {
    sub_1B6B066E8(5, v28, v29, v30, v31, v13, v151);
    swift_bridgeObjectRelease();
    sub_1B6B05CB0((uint64_t)v157);
    sub_1B6B11980((uint64_t)v157);
    sub_1B6B08E54(2u);
    uint64_t v16 = (_OWORD *)sub_1B6B0B64C(v9, a4);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_19;
  }
  if (sub_1B6741358(0x72657474696D65, 0xE700000000000000, v28, v29, v30, v31))
  {
    swift_bridgeObjectRelease();
    if (v13 == 5)
    {
      sub_1B6B05CB0((uint64_t)v158);
      sub_1B6B11980((uint64_t)v158);
      uint64_t v40 = *(void *)(v151 + 32);
      if (v40 == *(void *)(v151 + 40) >> 1 || *(unsigned char *)(*(void *)(v151 + 24) + 40 * v40) != 2)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v54 = swift_allocObject();
        *(void *)(v54 + 16) = 0;
        *(void *)(v54 + 24) = 0;
        *(unsigned char *)(v54 + 32) = 2;
        uint64_t v16 = (_OWORD *)(v54 | 0x8000000000000000);
      }
      else
      {
        sub_1B6B08E54(2u);
        sub_1B6B0A840(v9, 0, 1, &v152);
        uint64_t v41 = v154;
        unint64_t v152 = 0x72657474696D6524;
        unint64_t v153 = 0xE90000000000002ELL;
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        unint64_t v42 = v153;
        if (a2 == 1)
        {
          swift_bridgeObjectRelease();
          long long v43 = *(_OWORD *)(v9 + 48);
          v177[2] = *(_OWORD *)(v9 + 32);
          v177[3] = v43;
          uint64_t v178 = *(void *)(v9 + 64);
          long long v44 = *(_OWORD *)(v9 + 16);
          v177[0] = *(_OWORD *)v9;
          v177[1] = v44;
          sub_1B6B119AC((uint64_t)v177);
          uint64_t v16 = (_OWORD *)sub_1B6B05A24();
          uint64_t v46 = v45;
          sub_1B6B119E4((uint64_t)v177);
          sub_1B6B117F4();
          swift_allocError();
          *uint64_t v47 = v16;
          v47[1] = v46;
          swift_willThrow();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          return (uint64_t)v16;
        }
        unint64_t v79 = v152;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v80 = swift_allocObject();
        *(void *)(v80 + 16) = v41;
        *(void *)(v80 + 24) = v79;
        *(void *)(v80 + 32) = v42;
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v16 = (_OWORD *)(v80 | 0x6000000000000000);
      }
      goto LABEL_19;
    }
    sub_1B6B05CB0((uint64_t)v159);
    sub_1B6B11980((uint64_t)v159);
    sub_1B6B08E54(8u);
    uint64_t v51 = sub_1B6B0974C((uint64_t *)v9);
    uint64_t v53 = v52;
    sub_1B6B08E54(9u);
    if (a2 != 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v78 = swift_allocObject();
      *(void *)(v78 + 16) = v51;
      *(void *)(v78 + 24) = v53;
      *(unsigned char *)(v78 + 32) = 1;
      uint64_t v16 = (_OWORD *)(v78 | 0x8000000000000000);
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    long long v67 = *(_OWORD *)(v9 + 48);
    v179[2] = *(_OWORD *)(v9 + 32);
    v179[3] = v67;
    uint64_t v180 = *(void *)(v9 + 64);
    long long v68 = *(_OWORD *)(v9 + 16);
    v179[0] = *(_OWORD *)v9;
    v179[1] = v68;
    sub_1B6B119AC((uint64_t)v179);
    uint64_t v69 = sub_1B6B05A24();
    uint64_t v16 = v70;
    long long v71 = v179;
    goto LABEL_85;
  }
  if ((sub_1B6741358(0x656C636974726170, 0xE800000000000000, v28, v29, v30, v31) & 1) == 0)
  {
    if (sub_1B6741358(0x695F786574726576, 0xE90000000000006ELL, v28, v29, v30, v31))
    {
      sub_1B6B066E8(5, v28, v29, v30, v31, v13, v151);
      swift_bridgeObjectRelease();
      if (a4 != 3)
      {
        if (!(_BYTE)a4)
        {
          swift_bridgeObjectRelease();
LABEL_63:
          sub_1B6B05CB0((uint64_t)v162);
          sub_1B6B11980((uint64_t)v162);
          unsigned __int8 v74 = sub_1B6B0C3A4((long long *)v9);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v75 = swift_allocObject();
          *(void *)(v75 + 16) = v74;
          *(void *)(v75 + 24) = 0;
          uint64_t v16 = (_OWORD *)(v75 | 0xD000000000000000);
          *(void *)(v75 + 32) = 0;
          *(void *)(v75 + 40) = 0;
          *(unsigned char *)(v75 + 48) = 0;
          goto LABEL_19;
        }
        char v73 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if (v73) {
          goto LABEL_63;
        }
      }
LABEL_64:
      sub_1B6B119AC((uint64_t)v189);
      uint64_t v64 = sub_1B6B05A24();
      uint64_t v16 = v76;
      long long v66 = v189;
      goto LABEL_65;
    }
    if (sub_1B6741358(0x6F5F786574726576, 0xEA00000000007475, v28, v29, v30, v31))
    {
      sub_1B6B066E8(5, v28, v29, v30, v31, v13, v151);
      swift_bridgeObjectRelease();
      sub_1B6B05CB0((uint64_t)v163);
      sub_1B6B11980((uint64_t)v163);
      if (a4 <= 1u)
      {
        uint64_t v55 = sub_1B6B0CE94((uint64_t *)v9);
        uint64_t v57 = v56;
        uint64_t v59 = v58;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v60 = swift_allocObject();
        *(void *)(v60 + 16) = v55;
        *(void *)(v60 + 24) = v57;
        *(void *)(v60 + 32) = v59;
        *(void *)(v60 + 40) = 0;
        uint64_t v16 = (_OWORD *)(v60 | 0xD000000000000000);
        *(unsigned char *)(v60 + 48) = 1;
        goto LABEL_19;
      }
      long long v62 = *(_OWORD *)(v9 + 48);
      v191[2] = *(_OWORD *)(v9 + 32);
      v191[3] = v62;
      uint64_t v192 = *(void *)(v9 + 64);
      long long v63 = *(_OWORD *)(v9 + 16);
      v191[0] = *(_OWORD *)v9;
      v191[1] = v63;
      sub_1B6B119AC((uint64_t)v191);
      uint64_t v64 = sub_1B6B05A24();
      uint64_t v16 = v65;
      long long v66 = v191;
LABEL_65:
      sub_1B6B119E4((uint64_t)v66);
      sub_1B6B117F4();
      swift_allocError();
      *long long v77 = v64;
      v77[1] = (uint64_t)v16;
      swift_willThrow();
      goto LABEL_14;
    }
    if (sub_1B6741358(0x746E656D67617266, 0xEB000000006E695FLL, v28, v29, v30, v31))
    {
      sub_1B6B066E8(5, v28, v29, v30, v31, v13, v151);
      swift_bridgeObjectRelease();
      sub_1B6B05CB0((uint64_t)v164);
      sub_1B6B11980((uint64_t)v164);
      if (a4 != 3)
      {
        if (a4 == 1)
        {
          swift_bridgeObjectRelease();
LABEL_79:
          unsigned __int8 v89 = sub_1B6B0D770((long long *)v9);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v90 = swift_allocObject();
          *(void *)(v90 + 16) = v89;
          *(void *)(v90 + 24) = 0;
          *(void *)(v90 + 32) = 0;
          *(void *)(v90 + 40) = 0;
          uint64_t v16 = (_OWORD *)(v90 | 0xD000000000000000);
          *(unsigned char *)(v90 + 48) = 2;
          goto LABEL_19;
        }
        char v88 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if (v88) {
          goto LABEL_79;
        }
      }
      long long v91 = *(_OWORD *)(v9 + 48);
      v193[2] = *(_OWORD *)(v9 + 32);
      v193[3] = v91;
      uint64_t v194 = *(void *)(v9 + 64);
      long long v92 = *(_OWORD *)(v9 + 16);
      v193[0] = *(_OWORD *)v9;
      v193[1] = v92;
      sub_1B6B119AC((uint64_t)v193);
      uint64_t v64 = sub_1B6B05A24();
      uint64_t v16 = v93;
      long long v66 = v193;
      goto LABEL_65;
    }
    if (sub_1B6741358(0x746E656D67617266, 0xEC00000074756F5FLL, v28, v29, v30, v31))
    {
      sub_1B6B066E8(5, v28, v29, v30, v31, v13, v151);
      swift_bridgeObjectRelease();
      sub_1B6B05CB0((uint64_t)v165);
      sub_1B6B11980((uint64_t)v165);
      if (a4 != 3)
      {
        if (a4 == 1)
        {
          swift_bridgeObjectRelease();
LABEL_90:
          sub_1B6B0DACC((long long *)v9);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v102 = swift_allocObject();
          *(void *)(v102 + 16) = 1;
          *(void *)(v102 + 24) = 0;
          *(void *)(v102 + 32) = 0;
          *(void *)(v102 + 40) = 0;
          uint64_t v16 = (_OWORD *)(v102 | 0xD000000000000000);
          *(unsigned char *)(v102 + 48) = 6;
          goto LABEL_19;
        }
        char v101 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if (v101) {
          goto LABEL_90;
        }
      }
      long long v103 = *(_OWORD *)(v9 + 48);
      v195[2] = *(_OWORD *)(v9 + 32);
      v195[3] = v103;
      uint64_t v196 = *(void *)(v9 + 64);
      long long v104 = *(_OWORD *)(v9 + 16);
      v195[0] = *(_OWORD *)v9;
      v195[1] = v104;
      sub_1B6B119AC((uint64_t)v195);
      uint64_t v64 = sub_1B6B05A24();
      uint64_t v16 = v105;
      long long v66 = v195;
      goto LABEL_65;
    }
    if (sub_1B6741358(0x6C6169726574616DLL, 0xE800000000000000, v28, v29, v30, v31))
    {
      sub_1B6B066E8(5, v28, v29, v30, v31, v13, v151);
      swift_bridgeObjectRelease();
      if (a4 <= 1u)
      {
        sub_1B6B0E030(v9, (uint64_t)v166);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v61 = swift_allocObject();
        sub_1B6906CE8(v166, v61 + 16);
        uint64_t v16 = (_OWORD *)(v61 | 0xD000000000000000);
        goto LABEL_19;
      }
      sub_1B6B119AC((uint64_t)v189);
      uint64_t v69 = sub_1B6B05A24();
      uint64_t v16 = v96;
      long long v71 = v189;
      goto LABEL_85;
    }
    if ((sub_1B6741358(0x3165727574786574, 0xE900000000000064, v28, v29, v30, v31) & 1) == 0
      && (sub_1B6741358(0x3265727574786574, 0xE900000000000064, v28, v29, v30, v31) & 1) == 0
      && (sub_1B6741358(0x3365727574786574, 0xE900000000000064, v28, v29, v30, v31) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1B6B119AC((uint64_t)v189);
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v152 = 0xD00000000000001BLL;
      unint64_t v153 = 0x80000001B6F48A60;
      sub_1B6B119AC((uint64_t)v189);
      sub_1B6B05940();
      sub_1B6B119E4((uint64_t)v189);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v16 = (_OWORD *)sub_1B6B05A24();
      uint64_t v99 = v98;
      swift_bridgeObjectRelease();
      BOOL v100 = v189;
LABEL_93:
      sub_1B6B119E4((uint64_t)v100);
      sub_1B6B117F4();
      swift_allocError();
      void *v109 = v16;
      v109[1] = v99;
      goto LABEL_86;
    }
    sub_1B6B05CB0((uint64_t)v167);
    sub_1B6B11980((uint64_t)v167);
    uint64_t v72 = sub_1B6B09588((uint64_t)&unk_1F0F5BA98);
    swift_arrayDestroy();
    uint64_t v81 = (void *)sub_1B6B0A0FC(v9, 1, v72);
    swift_bridgeObjectRelease();
    if (!v81[2] || v81[5])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v82 = *(_OWORD *)(v9 + 48);
      v197[2] = *(_OWORD *)(v9 + 32);
      v197[3] = v82;
      uint64_t v198 = *(void *)(v9 + 64);
      long long v83 = *(_OWORD *)(v9 + 16);
      v197[0] = *(_OWORD *)v9;
      v197[1] = v83;
      sub_1B6B119AC((uint64_t)v197);
      uint64_t v69 = sub_1B6B05A24();
      uint64_t v16 = v84;
      long long v71 = v197;
LABEL_85:
      sub_1B6B119E4((uint64_t)v71);
      sub_1B6B117F4();
      swift_allocError();
      *unsigned __int16 v97 = v69;
      v97[1] = (uint64_t)v16;
LABEL_86:
      swift_willThrow();
      goto LABEL_14;
    }
    uint64_t v110 = v81[7];
    uint64_t v150 = v81[6];
    if (sub_1B6741358(0x3165727574786574, 0xE900000000000064, v28, v29, v30, v31))
    {
      char v111 = 0;
    }
    else
    {
      if ((sub_1B6741358(0x3265727574786574, 0xE900000000000064, v28, v29, v30, v31) & 1) == 0)
      {
        char v118 = sub_1B6741358(0x3365727574786574, 0xE900000000000064, v28, v29, v30, v31);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if ((v118 & 1) == 0) {
          goto LABEL_133;
        }
        char v111 = 2;
LABEL_103:
        sub_1B6B071AC((uint64_t)v81, 0x5F73736572646461, 0xEC00000065646F6DLL);
        if (v120)
        {
          uint64_t v121 = v119;
          uint64_t v122 = v120;
          swift_bridgeObjectRetain();
          char v123 = sub_1B6B0E5C0(v121, v122);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v123 = 2;
        }
        sub_1B6B071AC((uint64_t)v81, 0x6D5F7265746C6966, 0xEB0000000065646FLL);
        if (v125)
        {
          uint64_t v126 = v124;
          uint64_t v127 = v125;
          swift_bridgeObjectRetain();
          LOBYTE(v126) = sub_1B6B0E86C(v126, v127);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          char v135 = v126 & 1;
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          char v135 = 1;
        }
        uint64_t v136 = swift_allocObject();
        *(void *)(v136 + 16) = v150;
        *(void *)(v136 + 24) = v110;
        *(unsigned char *)(v136 + 32) = 1;
        *(unsigned char *)(v136 + 33) = v111;
        *(unsigned char *)(v136 + 34) = v123;
        uint64_t v16 = (_OWORD *)(v136 | 0x7000000000000000);
        *(unsigned char *)(v136 + 35) = v135;
        goto LABEL_19;
      }
      char v111 = 1;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_103;
  }
  sub_1B6B066E8(5, v28, v29, v30, v31, v13, v151);
  swift_bridgeObjectRelease();
  if ((a3 & 1) == 0) {
    goto LABEL_64;
  }
  sub_1B6B05CB0((uint64_t)v160);
  sub_1B6B11980((uint64_t)v160);
  sub_1B6B08E54(2u);
  uint64_t v49 = sub_1B6B0974C((uint64_t *)v9);
  uint64_t v50 = v48;
  if (v49 == 0x7865646E69 && v48 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (a2 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v16 = (_OWORD *)0xF000000000000008;
      goto LABEL_19;
    }
    long long v85 = *(_OWORD *)(v9 + 48);
    v181[2] = *(_OWORD *)(v9 + 32);
    v181[3] = v85;
    uint64_t v182 = *(void *)(v9 + 64);
    long long v86 = *(_OWORD *)(v9 + 16);
    v181[0] = *(_OWORD *)v9;
    v181[1] = v86;
    sub_1B6B119AC((uint64_t)v181);
    uint64_t v69 = sub_1B6B05A24();
    uint64_t v16 = v87;
    long long v71 = v181;
    goto LABEL_85;
  }
  sub_1B6A04940(v49, v50, (uint64_t)v161);
  swift_bridgeObjectRelease();
  sub_1B6B11B80((uint64_t)v161, (uint64_t)&v168, (unint64_t *)&unk_1EB97E6F0, (uint64_t)&type metadata for ScriptKeyPath);
  if (!*((void *)&v168 + 1))
  {
    long long v106 = *(_OWORD *)(v9 + 48);
    v187[2] = *(_OWORD *)(v9 + 32);
    v187[3] = v106;
    uint64_t v188 = *(void *)(v9 + 64);
    long long v107 = *(_OWORD *)(v9 + 16);
    v187[0] = *(_OWORD *)v9;
    v187[1] = v107;
    sub_1B6B119AC((uint64_t)v187);
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v152 = 0xD00000000000001BLL;
    unint64_t v153 = 0x80000001B6F48BD0;
    sub_1B6B119AC((uint64_t)v187);
    sub_1B6B05940();
    sub_1B6B119E4((uint64_t)v187);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v16 = (_OWORD *)sub_1B6B05A24();
    uint64_t v99 = v108;
    swift_bridgeObjectRelease();
    BOOL v100 = v187;
    goto LABEL_93;
  }
  long long v174 = v168;
  uint64_t v94 = v169;
  long long v172 = v170;
  int v173 = v171;
  uint64_t v95 = sub_1B6B09588((uint64_t)&unk_1F0F5BAD8);
  swift_arrayDestroy();
  uint64_t v112 = sub_1B6B0A0FC(v9, 1, v95);
  swift_bridgeObjectRelease();
  sub_1B6B071AC(v112, 0x6563617073, 0xE500000000000000);
  if (!v114)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    char v128 = 5;
    goto LABEL_130;
  }
  uint64_t v115 = v113;
  uint64_t v116 = v114;
  swift_bridgeObjectRetain();
  char v117 = sub_1B6B0B10C(v115, v116);
  char v128 = v117;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a4 == 3) {
    goto LABEL_111;
  }
  if (a4 != 1)
  {
    char v137 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v137) {
      goto LABEL_120;
    }
    if ((_BYTE)a4)
    {
      char v138 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if ((v138 & 1) == 0)
      {
LABEL_111:
        long long v129 = *(_OWORD *)(v9 + 48);
        v185[2] = *(_OWORD *)(v9 + 32);
        v185[3] = v129;
        uint64_t v186 = *(void *)(v9 + 64);
        long long v130 = *(_OWORD *)(v9 + 16);
        v185[0] = *(_OWORD *)v9;
        v185[1] = v130;
        sub_1B6B119AC((uint64_t)v185);
        uint64_t v131 = sub_1B6B05A24();
        uint64_t v16 = v132;
        sub_1B6B119E4((uint64_t)v185);
        sub_1B6B117F4();
        swift_allocError();
        *long long v133 = v131;
        v133[1] = (uint64_t)v16;
        swift_willThrow();
        long long v176 = v174;
        v134 = &v176;
LABEL_83:
        sub_1B62C7BF4((uint64_t)v134);
        swift_release();
        goto LABEL_14;
      }
      goto LABEL_120;
    }
  }
  swift_bridgeObjectRelease();
LABEL_120:
  sub_1B6E32738();
  if (swift_conformsToProtocol2())
  {
    if (!swift_dynamicCastMetatype()
      && !swift_dynamicCastMetatype()
      && !swift_dynamicCastMetatype()
      && !swift_dynamicCastMetatype()
      && !swift_dynamicCastMetatype()
      && !swift_dynamicCastMetatype()
      && !swift_dynamicCastMetatype()
      && !swift_dynamicCastMetatype())
    {
      long long v140 = *(_OWORD *)(v9 + 48);
      v183[2] = *(_OWORD *)(v9 + 32);
      v183[3] = v140;
      uint64_t v184 = *(void *)(v9 + 64);
      long long v141 = *(_OWORD *)(v9 + 16);
      v183[0] = *(_OWORD *)v9;
      v183[1] = v141;
      sub_1B6B119AC((uint64_t)v183);
      uint64_t v142 = sub_1B6B05A24();
      uint64_t v16 = v143;
      sub_1B6B119E4((uint64_t)v183);
      sub_1B6B117F4();
      swift_allocError();
      *uint64_t v144 = v142;
      v144[1] = (uint64_t)v16;
      swift_willThrow();
      long long v175 = v174;
      v134 = &v175;
      goto LABEL_83;
    }
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
LABEL_130:
    uint64_t v139 = swift_allocObject();
    *(void *)(v139 + 32) = v94;
    *(_OWORD *)(v139 + 16) = v174;
    *(_OWORD *)(v139 + 40) = v172;
    *(_DWORD *)(v139 + 56) = v173;
    *(unsigned char *)(v139 + 60) = v128;
    uint64_t v16 = (_OWORD *)(v139 | 0x9000000000000000);
    goto LABEL_19;
  }
  __break(1u);
LABEL_133:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6B108EC@<X0>(uint64_t *a1@<X0>, unsigned __int8 a2@<W1>, char a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v43 = a1[2];
  uint64_t v12 = a1[7];
  uint64_t v13 = a1[8];
  *(void *)&long long v40 = v11;
  *((void *)&v40 + 1) = v10;
  *(void *)uint64_t v41 = v43;
  long long v39 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)&v41[8] = v39;
  *(_OWORD *)&v41[24] = *(_OWORD *)(a1 + 5);
  *(void *)&v41[40] = v12;
  uint64_t v42 = v13;
  if (a2 > 1u)
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_1B6E334B8();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      unint64_t v15 = (unint64_t)v39 >> 1;
      uint64_t v16 = sub_1B6B0E9F4((uint64_t)&v40, a2, a3 & 1, a4);
      if (!v5)
      {
        uint64_t v21 = v16;
        char v23 = v17;
        char v36 = v19;
        uint64_t v37 = v18;
        sub_1B6B08E54(0xEu);
        goto LABEL_10;
      }
LABEL_9:
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  sub_1B6B08E54(0xEu);
  if (v5) {
    goto LABEL_9;
  }
  sub_1B6B08E54(0xEu);
  sub_1B6B08E54(3u);
  uint64_t v21 = sub_1B6B0E9F4((uint64_t)&v40, a2, a3 & 1, a4);
  char v23 = v22;
  char v36 = v24;
  uint64_t v37 = v25;
  unint64_t v15 = (unint64_t)v39 >> 1;
LABEL_10:
  if (v43 != v15) {
    swift_bridgeObjectRetain();
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1B6E31A78();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v33 = v42;
  long long v34 = *(_OWORD *)v41;
  *(_OWORD *)a1 = v40;
  *((_OWORD *)a1 + 1) = v34;
  long long v35 = *(_OWORD *)&v41[32];
  *((_OWORD *)a1 + 2) = *(_OWORD *)&v41[16];
  *((_OWORD *)a1 + 3) = v35;
  a1[8] = v33;
  *(void *)a5 = v21;
  *(unsigned char *)(a5 + 8) = v23;
  *(void *)(a5 + 16) = v37;
  *(unsigned char *)(a5 + 24) = v36 & 1;
  *(void *)(a5 + 32) = v26;
  *(void *)(a5 + 40) = v28;
  *(void *)(a5 + 48) = v30;
  *(void *)(a5 + 56) = v32;
  return result;
}

void *sub_1B6B10C0C(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, unsigned __int8 a5, char a6, int a7)
{
  uint64_t v11 = (void *)a4;
  sub_1B6B076CC(a1, a2, a3, a4, a5);
  if (v7) {
    return v11;
  }
  int v55 = a7;
  sub_1B6E31A78();
  unint64_t v12 = sub_1B6E32588();
  uint64_t v16 = sub_1B6B05330(v12, v13, v14, v15, 0);
  swift_bridgeObjectRelease();
  uint64_t v17 = v16[2];
  swift_bridgeObjectRelease();
  uint64_t v18 = 0;
  char v19 = v16 + 4;
  char v20 = 1;
  unint64_t v21 = (2 * v17) | 1;
  uint64_t v41 = v16;
  uint64_t v42 = v16 + 4;
  uint64_t v43 = 0;
  unint64_t v44 = v21;
  memset(v45, 0, sizeof(v45));
  uint64_t v46 = 0;
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  int v56 = a6 & 1;
  int v22 = v55;
  while (1)
  {
    unint64_t v23 = v21 >> 1;
    if (v18 == v21 >> 1) {
      break;
    }
    if (LOBYTE(v19[5 * v18]) == 16) {
      goto LABEL_16;
    }
    if ((v20 & 1) == 0)
    {
      uint64_t v34 = v46;
      if (LOBYTE(v19[5 * v18])) {
        goto LABEL_17;
      }
      char v24 = &v19[5 * v18];
      long long v40 = *(_OWORD *)(v24 + 1);
      uint64_t v25 = v24[3];
      uint64_t v26 = v24[4];
      uint64_t v27 = v18 + 1;
      uint64_t v43 = v18 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v45[0] = 0;
      *(_OWORD *)((char *)v45 + 8) = v40;
      *((void *)&v45[1] + 1) = v25;
      uint64_t v46 = v26;
      int v22 = v55;
      if (v27 != v23 && LOBYTE(v19[5 * v27]) == 16)
      {
LABEL_16:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return v11;
      }
    }
LABEL_11:
    sub_1B6B108EC((uint64_t *)&v41, a5, v56, v22, (uint64_t)v47);
    sub_1B6B11848((unint64_t *)v47);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1B68C3188(0, v11[2] + 1, 1, v11);
    }
    unint64_t v29 = v11[2];
    unint64_t v28 = v11[3];
    if (v29 >= v28 >> 1) {
      uint64_t v11 = sub_1B68C3188(v28 > 1, v29 + 1, 1, v11);
    }
    v11[2] = v29 + 1;
    uint64_t v30 = &v11[8 * v29];
    long long v31 = v47[0];
    long long v32 = v47[1];
    long long v33 = v47[3];
    v30[4] = v47[2];
    v30[5] = v33;
    _OWORD v30[2] = v31;
    v30[3] = v32;
    sub_1B6B11880((unint64_t *)v47);
    char v20 = 0;
    uint64_t v16 = v41;
    char v19 = v42;
    uint64_t v18 = v43;
    unint64_t v21 = v44;
  }
  if (v20) {
    goto LABEL_11;
  }
  uint64_t v34 = v46;
LABEL_17:
  uint64_t v48 = v16;
  uint64_t v49 = v19;
  uint64_t v50 = v18;
  unint64_t v51 = v21;
  long long v52 = v45[0];
  long long v53 = v45[1];
  uint64_t v54 = v34;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E32B18();
  sub_1B6E31948();
  sub_1B6B05940();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_1B6B05A24();
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  sub_1B6B117F4();
  swift_allocError();
  *unint64_t v38 = v35;
  v38[1] = v37;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B6B10FB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4)
  {
    uint64_t v23 = a1;
    swift_bridgeObjectRetain();
    return v23;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = MEMORY[0x1E4FBB2A0];
  long long v8 = (void *)(a3 + (v4 << 6));
  uint64_t v25 = MEMORY[0x1E4FBC840] + 8;
  char v26 = a4;
  do
  {
    if (v8[3])
    {
      unint64_t v10 = *(v8 - 4);
      char v11 = *((unsigned char *)v8 - 24);
      uint64_t v31 = *v8;
      if (a4)
      {
        if (a4 == 1)
        {
          sub_1B62C6AA8(v10);
          swift_bridgeObjectRetain();
          sub_1B62C6AA8(v10);
          sub_1B6B06858(v10, v11, (uint64_t)&v28);
          v30[0] = v29;
          if ((*((void *)&v29 + 1) & 0x2000000000000000) != 0) {
            uint64_t v9 = HIBYTE(*((void *)&v30[0] + 1)) & 0xFLL;
          }
          else {
            uint64_t v9 = *(void *)&v30[0] & 0xFFFFFFFFFFFFLL;
          }
          if (v9)
          {
            swift_bridgeObjectRetain();
            sub_1B62C7C20((uint64_t)v30);
            sub_1B6E31948();
            swift_bridgeObjectRelease();
          }
          sub_1B62C7BF4((uint64_t)v30);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          a4 = v26;
        }
        else
        {
          sub_1B62C6AA8(v10);
          swift_bridgeObjectRetain();
          sub_1B62C6AA8(v10);
          sub_1B68EC9E4(v10);
          uint64_t v13 = v12;
          if (swift_dynamicCastMetatype()
            || (type metadata accessor for frame_constants(0), swift_dynamicCastMetatype())
            || !swift_dynamicCastMetatype()
            && !swift_dynamicCastMetatype()
            && !swift_dynamicCastMetatype()
            && !swift_dynamicCastMetatype()
            && !swift_dynamicCastMetatype()
            && (swift_dynamicCastMetatype()
             || swift_dynamicCastMetatype()
             || (sub_1B6B121B8(0, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve), swift_dynamicCastMetatype())|| !swift_dynamicCastMetatype()&& (v13 == MEMORY[0x1E4FBC840] + 8|| swift_dynamicCastMetatype()|| (type metadata accessor for __vfx_sampler1d(0), swift_dynamicCastMetatype())|| (type metadata accessor for __vfx_sampler2d(0), swift_dynamicCastMetatype())|| (type metadata accessor for __vfx_sampler3d(0), swift_dynamicCastMetatype())|| (swift_conformsToProtocol2() ? (uint64_t v20 = v13) : (uint64_t v20 = 0), v20))))
          {
            if ((v11 & 2) != 0) {
              uint64_t v14 = MEMORY[0x1E4FBB870];
            }
            else {
              uint64_t v14 = v7;
            }
          }
          else
          {
            sub_1B68EC9E4(v10);
          }
          sub_1B67B03DC(v14, 2);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
        }
        goto LABEL_9;
      }
      sub_1B62C6AA8(v10);
      swift_bridgeObjectRetain();
      sub_1B62C6AA8(v10);
      sub_1B68EC9E4(v10);
      uint64_t v16 = v15;
      if (swift_dynamicCastMetatype()) {
        goto LABEL_22;
      }
      type metadata accessor for frame_constants(0);
      if (swift_dynamicCastMetatype()) {
        goto LABEL_22;
      }
      if (swift_dynamicCastMetatype()
        || swift_dynamicCastMetatype()
        || swift_dynamicCastMetatype()
        || swift_dynamicCastMetatype()
        || swift_dynamicCastMetatype())
      {
LABEL_45:
        sub_1B68EC9E4(v10);
        goto LABEL_25;
      }
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        sub_1B6B121B8(0, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
        if (!swift_dynamicCastMetatype())
        {
          if (swift_dynamicCastMetatype())
          {
            if (sub_1B6E334B8()) {
              goto LABEL_45;
            }
          }
          else if (v16 != v25 && !swift_dynamicCastMetatype())
          {
            type metadata accessor for __vfx_sampler1d(0);
            if (!swift_dynamicCastMetatype())
            {
              type metadata accessor for __vfx_sampler2d(0);
              if (!swift_dynamicCastMetatype())
              {
                type metadata accessor for __vfx_sampler3d(0);
                if (!swift_dynamicCastMetatype() && !(swift_conformsToProtocol2() ? v16 : 0)) {
                  goto LABEL_45;
                }
              }
            }
          }
        }
      }
LABEL_22:
      if ((v11 & 2) != 0) {
        uint64_t v17 = MEMORY[0x1E4FBB870];
      }
      else {
        uint64_t v17 = v7;
      }
LABEL_25:
      sub_1B67B03DC(v17, 0);
      sub_1B68EC9E4(v10);
      uint64_t v19 = v18;
      if (swift_dynamicCastMetatype()) {
        goto LABEL_9;
      }
      type metadata accessor for frame_constants(0);
      if (swift_dynamicCastMetatype()) {
        goto LABEL_9;
      }
      if (!swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype()
        && !swift_dynamicCastMetatype())
      {
        if (swift_dynamicCastMetatype()) {
          goto LABEL_9;
        }
        if (swift_dynamicCastMetatype()) {
          goto LABEL_9;
        }
        sub_1B6B121B8(0, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
        if (swift_dynamicCastMetatype()) {
          goto LABEL_9;
        }
        if (swift_dynamicCastMetatype())
        {
          if ((sub_1B6E334B8() & 1) == 0) {
            goto LABEL_9;
          }
        }
        else
        {
          if (v19 == MEMORY[0x1E4FBC840] + 8) {
            goto LABEL_9;
          }
          if (swift_dynamicCastMetatype()) {
            goto LABEL_9;
          }
          type metadata accessor for __vfx_sampler1d(0);
          if (swift_dynamicCastMetatype()) {
            goto LABEL_9;
          }
          type metadata accessor for __vfx_sampler2d(0);
          if (swift_dynamicCastMetatype()) {
            goto LABEL_9;
          }
          type metadata accessor for __vfx_sampler3d(0);
          if (swift_dynamicCastMetatype()) {
            goto LABEL_9;
          }
          if (swift_conformsToProtocol2() ? v19 : 0) {
            goto LABEL_9;
          }
        }
      }
      sub_1B6E31948();
LABEL_9:
      sub_1B6906E30();
      sub_1B6E31878();
      sub_1B62C6A70(v10);
      sub_1B62C6A70(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = MEMORY[0x1E4FBB2A0];
    }
    v8 -= 8;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1B6B117F4()
{
  unint64_t result = qword_1E9DD5B80;
  if (!qword_1E9DD5B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5B80);
  }
  return result;
}

unint64_t *sub_1B6B11848(unint64_t *a1)
{
  return a1;
}

unint64_t *sub_1B6B11880(unint64_t *a1)
{
  return a1;
}

uint64_t sub_1B6B118B8(uint64_t a1, uint64_t a2)
{
  sub_1B6B1203C(0, &qword_1EB97FDA8, (uint64_t)&type metadata for Lexer.Token, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6B11940()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1B6B11980(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B119AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B119E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B11A1C()
{
  return sub_1B6654748(36);
}

uint64_t sub_1B6B11A24()
{
  sub_1B67C511C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1B6B11A64()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 61, 7);
}

uint64_t sub_1B6B11AA4()
{
  return sub_1B6654748(33);
}

uint64_t sub_1B6B11AAC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1B6B11AE4()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

unint64_t sub_1B6B11AF4()
{
  unint64_t result = qword_1E9DD5B88;
  if (!qword_1E9DD5B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5B88);
  }
  return result;
}

uint64_t sub_1B6B11B48()
{
  sub_1B678FC34(*(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6B11B80(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6B1203C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1B6B11C00()
{
  unint64_t result = qword_1E9DD5B98;
  if (!qword_1E9DD5B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5B98);
  }
  return result;
}

void sub_1B6B11C54()
{
  if (!qword_1EB97D9F0)
  {
    sub_1B6B1203C(255, &qword_1EB97D9E8, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBD2C8]);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D9F0);
    }
  }
}

uint64_t sub_1B6B11CD0(uint64_t a1)
{
  sub_1B6B11C54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B6B11D2C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 8);
  return result;
}

void sub_1B6B11D38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B6B11DA0()
{
  unint64_t result = qword_1E9DD5BA8;
  if (!qword_1E9DD5BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5BA8);
  }
  return result;
}

unint64_t sub_1B6B11DF4()
{
  unint64_t result = qword_1E9DD5BB0;
  if (!qword_1E9DD5BB0)
  {
    sub_1B6B11D38(255, &qword_1E9DD5BA0, (uint64_t (*)(void))sub_1B6B11DA0, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBBD30]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5BB0);
  }
  return result;
}

void sub_1B6B11E84(uint64_t a1)
{
}

void sub_1B6B11EB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B6B11F1C()
{
  return sub_1B6E311A8();
}

uint64_t sub_1B6B11F44()
{
  return 8;
}

BOOL sub_1B6B11F50(void *a1, void *a2)
{
  return *a2 == *a1;
}

uint64_t sub_1B6B11F64()
{
  return sub_1B6E31F28();
}

void *sub_1B6B11F6C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1B6B11F78(uint64_t a1)
{
}

void sub_1B6B11FAC()
{
  if (!qword_1E9DD5BC0)
  {
    sub_1B6B1203C(255, &qword_1E9DD5BC8, MEMORY[0x1E4FBB7A8], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1E9DD5BC0);
    }
  }
}

void sub_1B6B1203C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1B6B12088()
{
  unint64_t result = qword_1E9DD5BD0;
  if (!qword_1E9DD5BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5BD0);
  }
  return result;
}

void sub_1B6B120DC()
{
  if (!qword_1E9DD5BE0)
  {
    type metadata accessor for URLResourceKey(255);
    sub_1B6B12170(&qword_1E9DCD718, type metadata accessor for URLResourceKey);
    unint64_t v0 = sub_1B6E32888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5BE0);
    }
  }
}

uint64_t sub_1B6B12170(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B6B121B8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1B6B12208(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1B6B12504();
      uint64_t v3 = sub_1B6E32878();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (!v2)
  {
LABEL_4:
    uint64_t v5 = *(void *)(v4 + 16);
    if (!v5) {
      return v3;
    }
    goto LABEL_9;
  }
LABEL_8:
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B6E32C18();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_9:
    uint64_t v7 = v3 + 56;
    uint64_t v37 = v5;
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = 0;
      unint64_t v35 = v1;
      while (1)
      {
        uint64_t v9 = MEMORY[0x1BA9B4580](v8, v1);
        uint64_t v10 = sub_1B6E32348();
        uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v12 = v10 & ~v11;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v7 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
        if (((1 << v12) & v14) != 0)
        {
          sub_1B68D79CC();
          id v16 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
          char v17 = sub_1B6E32358();

          if (v17)
          {
LABEL_19:
            swift_unknownObjectRelease();
            unint64_t v1 = v35;
            uint64_t v5 = v37;
            goto LABEL_13;
          }
          uint64_t v18 = ~v11;
          while (1)
          {
            unint64_t v12 = (v12 + 1) & v18;
            unint64_t v13 = v12 >> 6;
            uint64_t v14 = *(void *)(v7 + 8 * (v12 >> 6));
            uint64_t v15 = 1 << v12;
            if ((v14 & (1 << v12)) == 0) {
              break;
            }
            id v19 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
            char v20 = sub_1B6E32358();

            if (v20) {
              goto LABEL_19;
            }
          }
          unint64_t v1 = v35;
          uint64_t v5 = v37;
        }
        *(void *)(v7 + 8 * v13) = v15 | v14;
        *(void *)(*(void *)(v3 + 48) + 8 * v12) = v9;
        ++*(void *)(v3 + 16);
LABEL_13:
        if (++v8 == v5) {
          return v3;
        }
      }
    }
    uint64_t v21 = 0;
    unint64_t v36 = v1 + 32;
    do
    {
      id v22 = *(id *)(v36 + 8 * v21);
      uint64_t v23 = sub_1B6E32348();
      uint64_t v24 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      uint64_t v27 = *(void *)(v7 + 8 * (v25 >> 6));
      uint64_t v28 = 1 << v25;
      if (((1 << v25) & v27) != 0)
      {
        sub_1B68D79CC();
        id v29 = *(id *)(*(void *)(v3 + 48) + 8 * v25);
        char v30 = sub_1B6E32358();

        if (v30)
        {
LABEL_28:

          goto LABEL_22;
        }
        uint64_t v31 = ~v24;
        while (1)
        {
          unint64_t v25 = (v25 + 1) & v31;
          unint64_t v26 = v25 >> 6;
          uint64_t v27 = *(void *)(v7 + 8 * (v25 >> 6));
          uint64_t v28 = 1 << v25;
          if ((v27 & (1 << v25)) == 0) {
            break;
          }
          id v32 = *(id *)(*(void *)(v3 + 48) + 8 * v25);
          char v33 = sub_1B6E32358();

          if (v33) {
            goto LABEL_28;
          }
        }
      }
      *(void *)(v7 + 8 * v26) = v28 | v27;
      *(void *)(*(void *)(v3 + 48) + 8 * v25) = v22;
      ++*(void *)(v3 + 16);
LABEL_22:
      ++v21;
    }
    while (v21 != v37);
  }
  return v3;
}

void sub_1B6B12504()
{
  if (!qword_1E9DD5BE8)
  {
    sub_1B68D79CC();
    sub_1B6B12170((unint64_t *)&qword_1E9DD21A8, (void (*)(uint64_t))sub_1B68D79CC);
    unint64_t v0 = sub_1B6E32888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5BE8);
    }
  }
}

ValueMetadata *type metadata accessor for Lexer.Error()
{
  return &type metadata for Lexer.Error;
}

ValueMetadata *type metadata accessor for ScriptParser.Argument()
{
  return &type metadata for ScriptParser.Argument;
}

uint64_t destroy for Lexer.Token()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Lexer.Token(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Lexer.Token(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Lexer.Token(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Lexer.Token()
{
  return &type metadata for Lexer.Token;
}

uint64_t destroy for ScriptParser.ParsedScriptParameter(unint64_t *a1)
{
  sub_1B62C6A70(*a1);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScriptParser.ParsedScriptParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_1B62C6AA8(*(void *)a2);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScriptParser.ParsedScriptParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_1B62C6AA8(*(void *)a2);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v4;
  sub_1B62C6A70(v5);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ScriptParser.ParsedScriptParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  sub_1B62C6A70(v4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptParser.ParsedScriptParameter(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScriptParser.ParsedScriptParameter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 56) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptParser.ParsedScriptParameter()
{
  return &type metadata for ScriptParser.ParsedScriptParameter;
}

ValueMetadata *type metadata accessor for ScriptParser.Error()
{
  return &type metadata for ScriptParser.Error;
}

unsigned char *storeEnumTagSinglePayload for Lexer.TokenKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B12A8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Lexer.TokenKind()
{
  return &type metadata for Lexer.TokenKind;
}

unint64_t sub_1B6B12AC8()
{
  unint64_t result = qword_1E9DD5BF0[0];
  if (!qword_1E9DD5BF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9DD5BF0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Lexer(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Lexer(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B12C90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Lexer()
{
  return &type metadata for Lexer;
}

uint64_t sub_1B6B12CCC(void *a1, float a2)
{
  unsigned int v4 = (uint64_t *)a1[11];
  uint64_t v5 = a1[12];
  uint64_t v6 = a1[13];
  uint64_t v8 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v9 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v4, v5, v6, v7);
  uint64_t v10 = sub_1B62C9024((uint64_t)&type metadata for ParticleLifetime, (uint64_t)&off_1F0F6DC48, v4, v5, v6, v7);
  uint64_t v11 = a1[6];
  uint64_t v12 = a1[7];
  unint64_t v13 = ecs_stack_allocator_allocate(*(void *)(v7 + 32), 8 * (v12 - v11), 8);
  uint64_t v14 = v13;
  uint64_t v15 = 0;
  for (uint64_t i = v12 - v11; v12 != v11; ++v11)
  {
    float v17 = *(float *)(v9 + 4 * v11) + (float)(*(float *)(v10 + 4 * v11) * a2);
    if (v17 >= 1.0) {
      v13[v15++] = v11;
    }
    else {
      *(float *)(v9 + 4 * v11) = v17;
    }
  }
  uint64_t v31 = 0;
  memset(v30, 0, sizeof(v30));
  char v32 = 5;
  if (v15 < 1)
  {
    swift_retain();
  }
  else
  {
    if (v15 == *(void *)(v8 + 240) - *(void *)(v8 + 232))
    {
      sub_1B639192C((uint64_t)v30, (uint64_t)v27);
      uint64_t v29 = 0;
      long long v28 = 0uLL;
    }
    else
    {
      sub_1B639192C((uint64_t)v30, (uint64_t)v27);
      *(void *)&long long v28 = v14;
      *((void *)&v28 + 1) = i;
      uint64_t v29 = v15;
    }
    uint64_t v18 = *(void **)(v7 + 104);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v7 + 104) = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v18 = sub_1B68C0C6C(0, v18[2] + 1, 1, v18);
      *(void *)(v7 + 104) = v18;
    }
    unint64_t v21 = v18[2];
    unint64_t v20 = v18[3];
    if (v21 >= v20 >> 1)
    {
      uint64_t v18 = sub_1B68C0C6C(v20 > 1, v21 + 1, 1, v18);
      *(void *)(v7 + 104) = v18;
    }
    v18[2] = v21 + 1;
    id v22 = &v18[9 * v21];
    *((_OWORD *)v22 + 2) = v27[0];
    long long v23 = v27[1];
    long long v24 = v27[2];
    long long v25 = v28;
    v22[12] = v29;
    *((_OWORD *)v22 + 4) = v24;
    *((_OWORD *)v22 + 5) = v25;
    *((_OWORD *)v22 + 3) = v23;
  }
  sub_1B6391400((uint64_t)v30);
  return swift_release();
}

uint64_t type metadata accessor for ParticleLifeAndDeath.System()
{
  return self;
}

uint64_t sub_1B6B12F18(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 64);
  long long v8 = *(_OWORD *)(a1 + 48);
  long long v9 = v3;
  uint64_t v10 = *(void *)(a1 + 80);
  sub_1B663DDD8((uint64_t)v6);
  sub_1B62F648C(a1);
  long long v4 = v6[1];
  *(_OWORD *)(v2 + 16) = v6[0];
  *(_OWORD *)(v2 + 32) = v4;
  *(void *)(v2 + 48) = v7;
  return v2;
}

const char *sub_1B6B12F98()
{
  return "ParticleLifeAndDeath";
}

uint64_t sub_1B6B12FAC()
{
  return type metadata accessor for ParticleLifeAndDeath.System();
}

ValueMetadata *type metadata accessor for ParticleLifeAndDeath()
{
  return &type metadata for ParticleLifeAndDeath;
}

uint64_t sub_1B6B12FDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(v5 + 40);
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = *(void *)(v5 + 16);
  char v11 = *(unsigned char *)(v5 + 24);
  uint64_t v12 = *(void *)(v5 + 32);
  uint64_t v13 = type metadata accessor for _BinaryDecoder.DataStream();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = 0;
  uint64_t v22 = v13;
  long long v23 = &off_1F0F67898;
  *(void *)&long long v21 = v14;
  type metadata accessor for _BinaryDecoder();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  *(void *)(v15 + 48) = MEMORY[0x1E4FBC860];
  *(void *)(v15 + 64) = 0;
  *(void *)(v15 + 112) = v16;
  sub_1B62C15C4(&v21, v15 + 72);
  *(void *)(v15 + 56) = v9;
  *(void *)(v15 + 16) = v10;
  *(unsigned char *)(v15 + 24) = v11;
  *(void *)(v15 + 32) = v12;
  *(void *)(v15 + 40) = v8;
  sub_1B62FFBB0(a2, a3);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B62C6A60(v12);
  sub_1B6B1318C(a1, a4, a5);
  return swift_release();
}

uint64_t sub_1B6B13108()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  sub_1B62C6A50(v1);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BinaryDecoder()
{
  return self;
}

uint64_t sub_1B6B1318C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v6 = sub_1B6E31808();
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v8 = v3 + 72;
  sub_1B62C1550(v3 + 72, (uint64_t)v28);
  uint64_t v9 = v30;
  uint64_t v10 = v31;
  sub_1B62C14BC(v28, v30);
  uint64_t v11 = sub_1B6E318C8();
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v9, v10);
  unint64_t v14 = v13;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v28);
  if (!v4)
  {
    uint64_t v25 = v3;
    sub_1B62FFBB0(v12, v14);
    uint64_t v16 = sub_1B6B3258C(v12, v14);
    sub_1B62C2360(v12, v14);
    v28[0] = (uint64_t)v16;
    sub_1B6E317E8();
    sub_1B6B18018(0, &qword_1EB980370, MEMORY[0x1E4FBB320]);
    sub_1B6B18068();
    uint64_t v17 = sub_1B6E317C8();
    uint64_t v19 = v18;
    swift_release();
    if (v19)
    {
      BOOL v20 = v17 == 0x30316E6962786676 && v19 == 0xE800000000000000;
      if (v20 || (sub_1B6E334B8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1B62C1550(v8, (uint64_t)v27);
        uint64_t v21 = sub_1B62C0DB8();
        uint64_t v22 = *(void *)(v25 + 48);
        sub_1B62C0DFC((uint64_t)v27, (uint64_t)&v29);
        v28[0] = v21;
        v28[1] = v22;
        swift_bridgeObjectRetain();
        sub_1B62C0DD4((uint64_t)v27);
        sub_1B62C11CC(v28[0], (uint64_t)&v29, v28[0], a1, (uint64_t)&type metadata for _BinaryDecoder.SingleValueStore, a2, (uint64_t)&off_1F0F679D0, v32);
        sub_1B62C2360(v12, v14);
        return sub_1B62FD898((uint64_t)v28);
      }
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v23 = v17;
      *(void *)(v23 + 8) = v19;
      char v24 = 1;
    }
    else
    {
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v23 = 0;
      *(void *)(v23 + 8) = 0;
      char v24 = 6;
    }
    *(unsigned char *)(v23 + 16) = v24;
    swift_willThrow();
    return sub_1B62C2360(v12, v14);
  }
  return result;
}

uint64_t sub_1B6B13480(void *a1)
{
  return sub_1B62C0154(a1);
}

uint64_t sub_1B6B1350C(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_1B62C14BC(v1, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 64))(v8, v3, v4);
  uint64_t v5 = v9;
  uint64_t v6 = v10;
  sub_1B62C14BC(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, v5, v6);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v8);
}

uint64_t sub_1B6B135FC()
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = v0[3];
  uint64_t v3 = v0[4] + 8;
  uint64_t v4 = v0[2];
  unint64_t v5 = v2 >> 62;
  uint64_t v6 = v1;
  switch(v2 >> 62)
  {
    case 1uLL:
      if ((uint64_t)(0xFFFFFFFF00000001 * v4) >> 32 < v3) {
        goto LABEL_9;
      }
      goto LABEL_10;
    case 2uLL:
      if (*(void *)(v4 + 24) - *(void *)(v4 + 16) >= v3) {
        goto LABEL_10;
      }
      goto LABEL_9;
    case 3uLL:
      if (v3 > 0) {
        goto LABEL_9;
      }
      uint64_t v13 = 0;
      memset(v12, 0, 14);
      uint64_t v7 = (char *)v12;
      goto LABEL_15;
    default:
      if (BYTE6(v2) < v3)
      {
LABEL_9:
        sub_1B6B17984();
        swift_allocError();
        *(_OWORD *)uint64_t v8 = xmmword_1B6E50D30;
        *(unsigned char *)(v8 + 16) = 6;
        return swift_willThrow();
      }
LABEL_10:
      uint64_t v13 = 0;
      if (!v5)
      {
        v12[0] = v4;
        LOWORD(v12[1]) = v2;
        BYTE2(v12[1]) = BYTE2(v2);
        BYTE3(v12[1]) = BYTE3(v2);
        BYTE4(v12[1]) = BYTE4(v2);
        BYTE5(v12[1]) = BYTE5(v2);
        uint64_t v7 = (char *)v12 + BYTE6(v2);
LABEL_15:
        sub_1B62C2840(&v13, (uint64_t)&v14, (uint64_t)v12, (int)v7, (uint64_t)v0, 8);
        goto LABEL_18;
      }
      if (v5 != 1)
      {
        uint64_t v10 = *(void *)(v4 + 16);
        uint64_t v11 = *(void *)(v4 + 24);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B6B17A48(v10, v11, v2 & 0x3FFFFFFFFFFFFFFFLL, &v13, (uint64_t)v0, 8);
        if (!v6)
        {
          swift_release();
          swift_release();
          goto LABEL_18;
        }
LABEL_20:
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x1B6B138C8);
      }
      swift_retain();
      sub_1B62FFBB0(v4, v2);
      sub_1B6B17A48((int)v4, v4 >> 32, v2 & 0x3FFFFFFFFFFFFFFFLL, &v13, (uint64_t)v0, 8);
      if (v1)
      {
        sub_1B62C2360(v4, v2);
        __break(1u);
        goto LABEL_20;
      }
      sub_1B62C2360(v4, v2);
LABEL_18:
      v0[4] += 8;
      return v13;
  }
}

uint64_t sub_1B6B138D8()
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  unint64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  uint64_t v4 = v2 + 1;
  uint64_t v5 = v0[2];
  unint64_t v6 = v3 >> 62;
  uint64_t v7 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((uint64_t)(0xFFFFFFFF00000001 * v5) >> 32 < v4) {
        goto LABEL_9;
      }
      goto LABEL_10;
    case 2uLL:
      if (*(void *)(v5 + 24) - *(void *)(v5 + 16) >= v4) {
        goto LABEL_10;
      }
      goto LABEL_9;
    case 3uLL:
      if (v2 < 0x7FFFFFFFFFFFFFFFLL) {
        goto LABEL_9;
      }
      unsigned __int8 v14 = 0;
      memset(v13, 0, sizeof(v13));
      uint64_t v8 = v13;
      goto LABEL_15;
    default:
      if (BYTE6(v3) < v4)
      {
LABEL_9:
        sub_1B6B17984();
        swift_allocError();
        *(_OWORD *)uint64_t v9 = xmmword_1B6E50D30;
        *(unsigned char *)(v9 + 16) = 6;
        return swift_willThrow();
      }
LABEL_10:
      unsigned __int8 v14 = 0;
      if (!v6)
      {
        *(void *)uint64_t v13 = v5;
        *(_WORD *)&char v13[8] = v3;
        v13[10] = BYTE2(v3);
        v13[11] = BYTE3(v3);
        v13[12] = BYTE4(v3);
        v13[13] = BYTE5(v3);
        uint64_t v8 = &v13[BYTE6(v3)];
LABEL_15:
        sub_1B62C2840(&v14, (uint64_t)&v15, (uint64_t)v13, (int)v8, (uint64_t)v0, 1);
        goto LABEL_18;
      }
      if (v6 != 1)
      {
        uint64_t v11 = *(void *)(v5 + 16);
        uint64_t v12 = *(void *)(v5 + 24);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B6B17B08(v11, v12, v3 & 0x3FFFFFFFFFFFFFFFLL, &v14, (uint64_t)v0, 1);
        if (!v7)
        {
          swift_release();
          swift_release();
          goto LABEL_18;
        }
LABEL_20:
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x1B6B13BA8);
      }
      swift_retain();
      sub_1B62FFBB0(v5, v3);
      sub_1B6B17B08((int)v5, v5 >> 32, v3 & 0x3FFFFFFFFFFFFFFFLL, &v14, (uint64_t)v0, 1);
      if (v1)
      {
        sub_1B62C2360(v5, v3);
        __break(1u);
        goto LABEL_20;
      }
      sub_1B62C2360(v5, v3);
LABEL_18:
      ++v0[4];
      return v14;
  }
}

uint64_t sub_1B6B13BB8()
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = v0[3];
  uint64_t v3 = v0[4] + 2;
  uint64_t v4 = v0[2];
  unint64_t v5 = v2 >> 62;
  uint64_t v6 = v1;
  switch(v2 >> 62)
  {
    case 1uLL:
      if ((uint64_t)(0xFFFFFFFF00000001 * v4) >> 32 < v3) {
        goto LABEL_9;
      }
      goto LABEL_10;
    case 2uLL:
      if (*(void *)(v4 + 24) - *(void *)(v4 + 16) >= v3) {
        goto LABEL_10;
      }
      goto LABEL_9;
    case 3uLL:
      if (v3 > 0) {
        goto LABEL_9;
      }
      unsigned __int16 v13 = 0;
      memset(v12, 0, sizeof(v12));
      uint64_t v7 = v12;
      goto LABEL_15;
    default:
      if (BYTE6(v2) < v3)
      {
LABEL_9:
        sub_1B6B17984();
        swift_allocError();
        *(_OWORD *)uint64_t v8 = xmmword_1B6E50D30;
        *(unsigned char *)(v8 + 16) = 6;
        return swift_willThrow();
      }
LABEL_10:
      unsigned __int16 v13 = 0;
      if (!v5)
      {
        *(void *)uint64_t v12 = v4;
        *(_WORD *)&unsigned char v12[8] = v2;
        v12[10] = BYTE2(v2);
        v12[11] = BYTE3(v2);
        v12[12] = BYTE4(v2);
        v12[13] = BYTE5(v2);
        uint64_t v7 = &v12[BYTE6(v2)];
LABEL_15:
        sub_1B62C2840(&v13, (uint64_t)&v14, (uint64_t)v12, (int)v7, (uint64_t)v0, 2);
        goto LABEL_18;
      }
      if (v5 != 1)
      {
        uint64_t v10 = *(void *)(v4 + 16);
        uint64_t v11 = *(void *)(v4 + 24);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B6B17BC8(v10, v11, v2 & 0x3FFFFFFFFFFFFFFFLL, &v13, (uint64_t)v0, 2);
        if (!v6)
        {
          swift_release();
          swift_release();
          goto LABEL_18;
        }
LABEL_20:
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x1B6B13E84);
      }
      swift_retain();
      sub_1B62FFBB0(v4, v2);
      sub_1B6B17BC8((int)v4, v4 >> 32, v2 & 0x3FFFFFFFFFFFFFFFLL, &v13, (uint64_t)v0, 2);
      if (v1)
      {
        sub_1B62C2360(v4, v2);
        __break(1u);
        goto LABEL_20;
      }
      sub_1B62C2360(v4, v2);
LABEL_18:
      v0[4] += 2;
      return v13;
  }
}

uint64_t sub_1B6B13EC4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v29 = a4;
  uint64_t v8 = sub_1B6E324B8();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8, v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a1, a3);
  if (!v4)
  {
    if ((result & 0xE0) == 0x20)
    {
      int v22 = sub_1B62C1D44(a1, a3);
      sub_1B6E33AE8();
      uint64_t v20 = *(void *)(a2 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v12, 1, a2) == 1)
      {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v8);
        int v30 = v22;
        uint64_t v23 = sub_1B6E33098();
        uint64_t v25 = v24;
        sub_1B6B17984();
        swift_allocError();
        *(void *)uint64_t v21 = v23;
        *(void *)(v21 + 8) = v25;
        goto LABEL_8;
      }
      uint64_t v15 = v12;
    }
    else
    {
      if ((result & 0xE0) != 0x60)
      {
        uint64_t v27 = result & 0xE0;
        sub_1B6B17984();
        swift_allocError();
        *(void *)uint64_t v21 = &unk_1F0F52060;
        *(void *)(v21 + 8) = v27;
        char v26 = 3;
        goto LABEL_10;
      }
      uint64_t v17 = sub_1B62B902C(a1, a3);
      uint64_t v19 = v18;
      swift_bridgeObjectRetain();
      sub_1B6E33AC8();
      uint64_t v20 = *(void *)(a2 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, a2) == 1)
      {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v8);
        sub_1B6B17984();
        swift_allocError();
        *(void *)uint64_t v21 = v17;
        *(void *)(v21 + 8) = v19;
LABEL_8:
        char v26 = 2;
LABEL_10:
        *(unsigned char *)(v21 + 16) = v26;
        return swift_willThrow();
      }
      swift_bridgeObjectRelease();
    }
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(v29, v15, a2);
  }
  return result;
}

uint64_t sub_1B6B14240()
{
  unsigned __int8 v2 = sub_1B62C4258();
  if (v0) {
    return v1;
  }
  if ((v2 & 0xE0) != 0x20)
  {
    uint64_t v4 = v2 & 0xE0;
    sub_1B6B17984();
    swift_allocError();
    *(void *)uint64_t v5 = &unk_1F0F51E38;
    char v6 = 3;
LABEL_9:
    *(void *)(v5 + 8) = v4;
    *(unsigned char *)(v5 + 16) = v6;
    swift_willThrow();
    return v1;
  }
  uint64_t v1 = v2 & 0xF;
  if ((v2 & 0x10) != 0)
  {
    if ((v2 & 0xF) == 0) {
      return sub_1B6B138D8();
    }
    if (v1 == 1) {
      return bswap32(sub_1B6B13BB8()) >> 16;
    }
    if (v1 == 2) {
      return bswap32(sub_1B62AB020());
    }
    sub_1B6B17984();
    swift_allocError();
    uint64_t v4 = 0;
    char v6 = 0;
    *(void *)uint64_t v5 = v1;
    goto LABEL_9;
  }
  return v1;
}

uint64_t sub_1B6B14364(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for _KeyBox();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)v21 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v21 - v11, a1, v8);
  uint64_t v13 = a4[3];
  uint64_t v14 = a4[4];
  sub_1B62C14BC(a4, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a2, v13, v14);
  if (v4) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  uint64_t v18 = v15;
  uint64_t v19 = v16;
  type metadata accessor for _BinaryDecoder.DataStream();
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v18;
  v20[3] = v19;
  _OWORD v20[4] = 0;
  v21[1] = v20;
  swift_getWitnessTable();
  sub_1B6E31568();
  return sub_1B6E31588();
}

uint64_t sub_1B6B14524()
{
  uint64_t v1 = *v0;
  if (v0[3]) {
    return sub_1B6E31C88();
  }
  uint64_t v3 = v0[2];
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  type metadata accessor for _KeyBox();
  type metadata accessor for _BinaryDecoder.DataStream();
  uint64_t WitnessTable = swift_getWitnessTable();
  v12[5] = v3;
  MEMORY[0x1F4188790](WitnessTable, v7);
  void v12[2] = v4;
  v12[3] = v5;
  uint64_t v8 = sub_1B6E31518();
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_getWitnessTable();
  uint64_t v2 = sub_1B699C9EC((void (*)(char *, char *))sub_1B6B17D48, (uint64_t)v12, v8, v4, MEMORY[0x1E4FBC248], v9, MEMORY[0x1E4FBC278], v10);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1B6B146A0(uint64_t a1, uint64_t (*a2)(uint64_t, void))
{
  type metadata accessor for _KeyBox();
  type metadata accessor for _BinaryDecoder.DataStream();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, *(void *)(a1 + *(int *)(TupleTypeMetadata2 + 48))) & 1;
}

void **sub_1B6B14730(void **result, void *a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v8 = 0;
    uint64_t v9 = *result;
    uint64_t v10 = a3;
    while (1)
    {
      *uint64_t v9 = v8;
      uint64_t v11 = a4[3];
      uint64_t v12 = a4[4];
      sub_1B62C14BC(a4, v11);
      uint64_t result = (void **)sub_1B62C1D44(v11, v12);
      if (v4) {
        break;
      }
      v8 += result;
      ++v9;
      if (!--v10) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    *a2 = a3;
  }
  return result;
}

uint64_t sub_1B6B147D8(uint64_t (*a1)(uint64_t))
{
  uint64_t result = a1(v1 + 16);
  if (!v2) {
    ++*(_DWORD *)(v1 + 80);
  }
  return result;
}

uint64_t sub_1B6B1481C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(unsigned int *)(v2 + 56);
  if (!v3) {
    return sub_1B6E31C88();
  }
  MEMORY[0x1F4188790](v3, a2);
  return sub_1B6E31CA8();
}

uint64_t sub_1B6B148DC(uint64_t a1, void *a2, uint64_t a3)
{
  *a2 = a3;
  sub_1B6299DFC();
  return sub_1B6AB3E64();
}

uint64_t sub_1B6B149A8(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B6B149E0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B6B14A24(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RenderPass.Dimension(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RenderPass.Dimension(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B6B14AEC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1B6B14AF4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

uint64_t type metadata accessor for _BinaryDecoder.KeyedStore.KeyedSources()
{
  return sub_1B62C36EC();
}

uint64_t destroy for BinaryDecoder.Options(uint64_t a1)
{
  uint64_t result = swift_release();
  if (*(void *)(a1 + 16))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for BinaryDecoder.Options(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 16);
  swift_retain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  return a1;
}

uint64_t assignWithCopy for BinaryDecoder.Options(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a1 + 16);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v4)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BinaryDecoder.Options(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 16);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  if (!v5)
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for BinaryDecoder.Options()
{
  return &type metadata for BinaryDecoder.Options;
}

uint64_t sub_1B6B14D20()
{
  swift_bridgeObjectRelease();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + 32);

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1B6B14D60(uint64_t a1, uint64_t a2)
{
  char v5 = (*(uint64_t (**)(void))(a2 + 40))();
  if (!v2)
  {
    if (v5)
    {
      char v6 = 0;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
      char v6 = 1;
    }
  }
  return v6 & 1;
}

uint64_t sub_1B6B14DD8(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3 = (*(uint64_t (**)(void))(a2 + 48))();
  if (!v2)
  {
    if ((v3 & 0xE0) != 0)
    {
      uint64_t v5 = v3 & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v6 = &unk_1F0F51FD8;
      char v7 = 3;
    }
    else
    {
      if ((v3 & 0x10) != 0)
      {
        char v4 = v3 & 1;
        return v4 & 1;
      }
      sub_1B6B17984();
      swift_allocError();
      uint64_t v5 = 0;
      *(void *)uint64_t v6 = 16;
      char v7 = 4;
    }
    *(void *)(v6 + 8) = v5;
    *(unsigned char *)(v6 + 16) = v7;
    swift_willThrow();
  }
  return v4 & 1;
}

unint64_t sub_1B6B14EA8(uint64_t a1)
{
  unint64_t result = sub_1B62C4258();
  if (!v1)
  {
    char v4 = result;
    if ((result & 0xE0) == 0x20)
    {
      result &= 0xFu;
      if ((v4 & 0x10) == 0) {
        return result;
      }
      if (result == 3) {
        return bswap64(sub_1B6B135FC());
      }
      uint64_t v8 = (result << 8) | 3;
      sub_1B6B17984();
      swift_allocError();
      uint64_t v5 = 0;
      *(void *)uint64_t v6 = v8;
      char v7 = 5;
    }
    else
    {
      uint64_t v5 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v6 = a1;
      char v7 = 3;
    }
    *(void *)(v6 + 8) = v5;
    *(unsigned char *)(v6 + 16) = v7;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B6B14F90(uint64_t a1)
{
  uint64_t result = sub_1B62C4258();
  if (!v1)
  {
    char v4 = result;
    if ((result & 0xE0) == 0x20)
    {
      result &= 0xFu;
      if ((v4 & 0x10) == 0) {
        return result;
      }
      if (!result) {
        return sub_1B6B138D8();
      }
      unint64_t v5 = (unint64_t)(v4 & 0xF) << 8;
      sub_1B6B17984();
      swift_allocError();
      uint64_t v7 = 0;
      *(void *)uint64_t v6 = v5;
      char v8 = 5;
    }
    else
    {
      uint64_t v7 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v6 = a1;
      char v8 = 3;
    }
    *(void *)(v6 + 8) = v7;
    *(unsigned char *)(v6 + 16) = v8;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B6B1506C(uint64_t a1)
{
  uint64_t result = sub_1B62C4258();
  if (!v1)
  {
    char v4 = result;
    if ((result & 0xE0) == 0x20)
    {
      result &= 0xFu;
      if ((v4 & 0x10) == 0) {
        return result;
      }
      if (result == 1) {
        return bswap32(sub_1B6B13BB8()) >> 16;
      }
      uint64_t v8 = (result << 8) | 1;
      sub_1B6B17984();
      swift_allocError();
      uint64_t v5 = 0;
      *(void *)uint64_t v6 = v8;
      char v7 = 5;
    }
    else
    {
      uint64_t v5 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v6 = a1;
      char v7 = 3;
    }
    *(void *)(v6 + 8) = v5;
    *(unsigned char *)(v6 + 16) = v7;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B6B15158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  sub_1B62C14BC(v3, v8);
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(v9 + 8))(0, v8, v9);
  if (!v4)
  {
    char v11 = result;
    if ((result & 0xE0) == 0x20)
    {
      result &= 0xFu;
      if ((v11 & 0x10) == 0) {
        return result;
      }
      if (result == 1)
      {
        uint64_t v12 = v3[3];
        uint64_t v13 = v3[4];
        sub_1B62C14BC(v3, v12);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 32))(&v18, a2, a3, v12, v13);
        return bswap32((unsigned __int16)v18) >> 16;
      }
      uint64_t v17 = (result << 8) | 1;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v15 = v17;
      *(void *)(v15 + 8) = 0;
      char v16 = 5;
    }
    else
    {
      uint64_t v14 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v15 = a1;
      *(void *)(v15 + 8) = v14;
      char v16 = 3;
    }
    *(unsigned char *)(v15 + 16) = v16;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B6B152D4(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(a2 + 48))();
  if (!v2 && (result & 0x10) != 0) {
    return sub_1B6B15320(result, a1);
  }
  return result;
}

uint64_t sub_1B6B15320(char a1, uint64_t a2)
{
  switch(a1 & 0xF)
  {
    case 0:
      sub_1B6B17F2C();
      uint64_t v3 = MEMORY[0x1E4FBC358];
      goto LABEL_7;
    case 1:
      sub_1B6B17ED8();
      uint64_t v3 = MEMORY[0x1E4FBC450];
      goto LABEL_7;
    case 2:
      sub_1B6B17E84();
      uint64_t v3 = MEMORY[0x1E4FBC4C0];
      goto LABEL_7;
    case 3:
      sub_1B6B17E30();
      uint64_t v3 = MEMORY[0x1E4FBC538];
LABEL_7:
      uint64_t result = sub_1B62B01B4(v3, a2, v3);
      break;
    default:
      unint64_t v4 = ((unint64_t)(a1 & 0xF) << 8) | 3;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v5 = v4;
      *(void *)(v5 + 8) = 0;
      *(unsigned char *)(v5 + 16) = 5;
      uint64_t result = swift_willThrow();
      break;
  }
  return result;
}

uint64_t sub_1B6B15450(uint64_t a1, uint64_t a2)
{
  return sub_1B62AFE54(a1, a2, (void (*)(void))sub_1B6B17E30, MEMORY[0x1E4FBC538]);
}

uint64_t sub_1B6B15484(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  a3();
  uint64_t result = sub_1B62AFEC4(a4, a1, a4, a2);
  if (!v4) {
    return v9;
  }
  return result;
}

uint64_t sub_1B6B154F4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  a3();
  uint64_t result = sub_1B62AFEC4(a4, a1, a4, a2);
  if (!v4) {
    return v9;
  }
  return result;
}

uint64_t sub_1B6B15564(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(a2 + 48))();
  if (!v2)
  {
    if ((result & 0xE0) == 0x40)
    {
      if (result != 64) {
        return sub_1B6B15320(result, a1);
      }
    }
    else
    {
      uint64_t v5 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v6 = &unk_1F0F51E08;
      *(void *)(v6 + 8) = v5;
      *(unsigned char *)(v6 + 16) = 3;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1B6B15624()
{
  uint64_t result = sub_1B62C4258();
  if (!v0)
  {
    if ((result & 0xE0) == 0x40)
    {
      if (result == 64) {
        return result != 64;
      }
      uint64_t v2 = result & 0xF;
      if (v2 == 3) {
        return result != 64;
      }
      uint64_t v6 = (v2 << 8) | 3;
      sub_1B6B17984();
      swift_allocError();
      uint64_t v3 = 0;
      *(void *)uint64_t v4 = v6;
      char v5 = 5;
    }
    else
    {
      uint64_t v3 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v4 = &unk_1F0F51EC0;
      char v5 = 3;
    }
    *(void *)(v4 + 8) = v3;
    *(unsigned char *)(v4 + 16) = v5;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B6B15708()
{
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  sub_1B62C14BC(v0, v2);
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(v3 + 8))(0, v2, v3);
  if (!v1)
  {
    if ((result & 0xE0) == 0x40)
    {
      uint64_t v5 = result & 0xF;
      if (result == 64 || v5 == 3) {
        return result != 64;
      }
      uint64_t v7 = (v5 << 8) | 3;
      sub_1B6B17984();
      swift_allocError();
      uint64_t v9 = 0;
      *(void *)uint64_t v8 = v7;
      char v10 = 5;
    }
    else
    {
      uint64_t v9 = result & 0xE0;
      sub_1B6B17984();
      swift_allocError();
      *(void *)uint64_t v8 = &unk_1F0F51F10;
      char v10 = 3;
    }
    *(void *)(v8 + 8) = v9;
    *(unsigned char *)(v8 + 16) = v10;
    return swift_willThrow();
  }
  return result;
}

double sub_1B6B15820(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_1B6B18604();
  char v6 = sub_1B63BD9F8(MEMORY[0x1E4FBB3D0], a1, MEMORY[0x1E4FBB3D0], a2);
  if (!v2)
  {
    double result = 0.0;
    if (v6)
    {
      sub_1B63BD844(a1, MEMORY[0x1E4FBB3D0], v5, (uint64_t)&v8);
      return v8;
    }
  }
  return result;
}

uint64_t sub_1B6B158B8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>, uint64_t a7)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 64))(v16, a2, a5);
  type metadata accessor for _BinaryDecoder.UnkeyedStore();
  swift_allocObject();
  uint64_t result = sub_1B62C0F28(v16, a1);
  if (!v7)
  {
    uint64_t v13 = sub_1B6B1481C(a4, a7);
    swift_release();
    double v14 = nullsub_1(v13);
    v16[0] = v15;
    (*(void (**)(uint64_t, void *, uint64_t, double))(*(void *)(a3 - 8) + 16))(a6, v16, a3, v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6B159E8()
{
  return sub_1B6B14524();
}

double sub_1B6B15A0C(uint64_t a1)
{
  sub_1B6B15A44(a1, &v3);
  if (!v1) {
    return v3;
  }
  return result;
}

uint64_t sub_1B6B15A44@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t result = sub_1B62C345C(a1, a1);
  if (!v2)
  {
    if (sub_1B6B15624())
    {
      unint64_t v5 = sub_1B6B135FC();
      uint64_t result = swift_release();
      *a2 = bswap64(v5);
    }
    else
    {
      uint64_t result = swift_release();
      *a2 = 0;
    }
  }
  return result;
}

uint64_t sub_1B6B15ADC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t result = sub_1B62C345C(a1, a1);
  if (!v3)
  {
    unint64_t v7 = sub_1B6B14EA8(a2);
    uint64_t result = swift_release();
    *a3 = v7;
  }
  return result;
}

uint64_t sub_1B6B15B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = sub_1B6B15B84(a1, a7, &v9);
  if (!v7) {
    return v9;
  }
  return result;
}

uint64_t sub_1B6B15B84@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B62C345C(a1, a1);
  if (!v3)
  {
    char v7 = sub_1B6B14F90(a2);
    uint64_t result = swift_release();
    *a3 = v7;
  }
  return result;
}

uint64_t sub_1B6B15BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = sub_1B6B15C2C(a1, a7, &v9);
  if (!v7) {
    return v9;
  }
  return result;
}

uint64_t sub_1B6B15C2C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _WORD *a3@<X8>)
{
  uint64_t result = sub_1B62C345C(a1, a1);
  if (!v3)
  {
    __int16 v7 = sub_1B6B1506C(a2);
    uint64_t result = swift_release();
    *a3 = v7;
  }
  return result;
}

void *sub_1B6B15C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *(*a8)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t result = a8(&v10, a4, a1, a7);
  if (!v8) {
    return (void *)v10;
  }
  return result;
}

uint64_t sub_1B6B15CD8@<X0>(uint64_t a1@<X2>, void *a2@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>, uint64_t a6)
{
  return sub_1B6B15D0C(a3, a1, a2, a4, a6, a5);
}

uint64_t sub_1B6B15D0C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v32 = a5;
  uint64_t v33 = a4;
  uint64_t v30 = a6;
  uint64_t v34 = *a1;
  uint64_t v8 = *(void *)(v34 + 80);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1, a2);
  char v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = MEMORY[0x1F4188790](v12, v13);
  char v16 = (char *)&v30 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16);
  uint64_t v35 = v18;
  v17((char *)&v30 - v15, v18, v8, v14);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v38 = a3;
  uint64_t v31 = a2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    a3 = sub_1B62B0BD0(0, a3[2] + 1, 1, a3);
    unint64_t v38 = a3;
  }
  unint64_t v21 = a3[2];
  unint64_t v20 = a3[3];
  if (v21 >= v20 >> 1) {
    unint64_t v38 = sub_1B62B0BD0(v20 > 1, v21 + 1, 1, a3);
  }
  ((void (*)(char *, char *, uint64_t))v17)(v11, v16, v8);
  sub_1B62C5608(v21, (uint64_t)v11, (uint64_t *)&v38, v8, *(void *)(v34 + 88));
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  int v22 = v38;
  uint64_t v23 = v36;
  uint64_t v25 = sub_1B62C345C(v35, v24);
  if (v23) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v26 = v25;
  type metadata accessor for _BinaryDecoder.KeyedStore();
  v37[3] = type metadata accessor for _BinaryDecoder.DataStream();
  v37[4] = &off_1F0F67898;
  v37[0] = v26;
  swift_allocObject();
  uint64_t v27 = sub_1B62C0154(v37);
  uint64_t v28 = v31;
  sub_1B6B16014(v31);
  v37[0] = v28;
  v37[1] = v22;
  v37[2] = v27;
  type metadata accessor for _BinaryKeyedDecodingContainer();
  swift_getWitnessTable();
  sub_1B6E32EB8();
  return swift_release();
}

uint64_t sub_1B6B16014(uint64_t a1)
{
  uint64_t v2 = swift_retain();
  MEMORY[0x1BA9B3870](v2);
  if (*(void *)((*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_1B6E31C78();
  sub_1B6E31CC8();
  return sub_1B6E31C48();
}

uint64_t sub_1B6B16094@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t *a3@<X3>, void *a4@<X8>)
{
  return sub_1B6B160B4(a3, a1, a2, a4);
}

uint64_t sub_1B6B160B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a1;
  uint64_t v33 = a2;
  uint64_t v34 = v7;
  uint64_t v8 = *(void *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1, a2);
  char v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = MEMORY[0x1F4188790](v12, v13);
  char v16 = (char *)&v32 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16);
  uint64_t v35 = v18;
  v17((char *)&v32 - v15, v18, v8, v14);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v38 = a3;
  uint64_t v32 = a4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    a3 = sub_1B62B0BD0(0, a3[2] + 1, 1, a3);
    unint64_t v38 = a3;
  }
  unint64_t v21 = a3[2];
  unint64_t v20 = a3[3];
  if (v21 >= v20 >> 1) {
    unint64_t v38 = sub_1B62B0BD0(v20 > 1, v21 + 1, 1, a3);
  }
  ((void (*)(char *, char *, uint64_t))v17)(v11, v16, v8);
  sub_1B62C5608(v21, (uint64_t)v11, (uint64_t *)&v38, v8, *(void *)(v34 + 88));
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  int v22 = v38;
  uint64_t v23 = v36;
  uint64_t v25 = sub_1B62C345C(v35, v24);
  if (v23) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v26 = v25;
  v37[3] = type metadata accessor for _BinaryDecoder.DataStream();
  v37[4] = &off_1F0F67898;
  v37[0] = v26;
  type metadata accessor for _BinaryDecoder.UnkeyedStore();
  swift_allocObject();
  uint64_t v27 = v33;
  uint64_t v29 = sub_1B62C0F28(v37, v33);
  uint64_t v30 = swift_retain();
  MEMORY[0x1BA9B3870](v30);
  if (*(void *)((*(void *)(v27 + 112) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v27 + 112) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    sub_1B6E31C78();
  sub_1B6E31CC8();
  sub_1B6E31C48();
  uint64_t v31 = v32;
  v32[3] = &type metadata for _BinaryUnkeyedDecodingContainer;
  v31[4] = sub_1B62C0EB0();
  uint64_t result = swift_release();
  *uint64_t v31 = v22;
  v31[1] = v27;
  v31[2] = v29;
  return result;
}

void sub_1B6B16398()
{
}

uint64_t sub_1B6B163FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B6B16428(a1, a2, a3);
}

uint64_t sub_1B6B16428@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1B62C345C(a1, a1);
  if (!v3)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    uint64_t v12 = *(void *)(a2 + 40);
    uint64_t v17 = type metadata accessor for _BinaryDecoder.DataStream();
    uint64_t v18 = &off_1F0F67898;
    *(void *)&long long v16 = v7;
    uint64_t v13 = type metadata accessor for _BinaryDecoder();
    uint64_t v14 = swift_allocObject();
    uint64_t v15 = MEMORY[0x1E4FBC860];
    *(void *)(v14 + 48) = MEMORY[0x1E4FBC860];
    *(void *)(v14 + 64) = 0;
    *(void *)(v14 + 112) = v15;
    sub_1B62C15C4(&v16, v14 + 72);
    *(void *)(v14 + 56) = v8;
    *(void *)(v14 + 16) = v9;
    *(unsigned char *)(v14 + 24) = v10;
    *(void *)(v14 + 32) = v11;
    *(void *)(v14 + 40) = v12;
    a3[3] = v13;
    a3[4] = sub_1B62C1B0C();
    *a3 = v14;
    swift_retain();
    swift_bridgeObjectRetain();
    return sub_1B62C6A60(v11);
  }
  return result;
}

uint64_t sub_1B6B16530()
{
  return sub_1B6B159E8();
}

double sub_1B6B16544(uint64_t a1)
{
  return sub_1B6B15A0C(a1);
}

void *sub_1B6B1656C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16634(a1, a2, a3, (uint64_t)&unk_1F0F52000, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B6B15ADC);
}

uint64_t sub_1B6B165A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B166D0(a1, a2, a3, (uint64_t)&unk_1F0F51BA0);
}

uint64_t sub_1B6B165C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B1671C(a1, a2, a3, (uint64_t)&unk_1F0F51BC8);
}

uint64_t sub_1B6B165E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B62A08B4(a1, a2, a3, (uint64_t)&unk_1F0F51BF0);
}

void *sub_1B6B16600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16634(a1, a2, a3, (uint64_t)&unk_1F0F51C18, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B6B15ADC);
}

void *sub_1B6B16634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *(*a5)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  return sub_1B6B15C98(a1, *v5, v5[1], v5[2], *(void *)(a2 + 16), *(void *)(a2 + 24), a4, a5);
}

uint64_t sub_1B6B16664()
{
  return sub_1B6E336C8();
}

void *sub_1B6B1667C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16634(a1, a2, a3, (uint64_t)&unk_1F0F52030, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B6B15ADC);
}

uint64_t sub_1B6B166B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B166D0(a1, a2, a3, (uint64_t)&unk_1F0F51C40);
}

uint64_t sub_1B6B166D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B15B48(a1, *v4, v4[1], v4[2], *(void *)(a2 + 16), *(void *)(a2 + 24), a4);
}

uint64_t sub_1B6B166FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B1671C(a1, a2, a3, (uint64_t)&unk_1F0F51C68);
}

uint64_t sub_1B6B1671C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B15BF0(a1, *v4, v4[1], v4[2], *(void *)(a2 + 16), *(void *)(a2 + 24), a4);
}

void *sub_1B6B16748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16634(a1, a2, a3, (uint64_t)&unk_1F0F51C98, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1B6B15ADC);
}

uint64_t sub_1B6B1677C()
{
  return sub_1B6E336D8();
}

uint64_t sub_1B6B16794()
{
  return sub_1B6E33648();
}

uint64_t sub_1B6B167AC()
{
  uint64_t result = sub_1B6E33668();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B6B167D0()
{
  uint64_t result = sub_1B6E33678();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B6B167F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16918(a1, a2, a3, MEMORY[0x1E4FBBF78]);
}

uint64_t sub_1B6B16820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16974(a1, a2, a3, MEMORY[0x1E4FBBF80]);
}

uint64_t sub_1B6B1684C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B638EF98(a1, a2, a3, MEMORY[0x1E4FBBF88]);
}

uint64_t sub_1B6B16878()
{
  uint64_t result = sub_1B6E336A8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B6B1689C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16A20(a1, a2, a3, MEMORY[0x1E4FBBFA0]);
}

uint64_t sub_1B6B168C8()
{
  uint64_t result = sub_1B6E33688();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B6B168EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16918(a1, a2, a3, MEMORY[0x1E4FBBF98]);
}

uint64_t sub_1B6B16918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_1B6B16948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16974(a1, a2, a3, MEMORY[0x1E4FBBFA8]);
}

uint64_t sub_1B6B16974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_1B6B169A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B638EF98(a1, a2, a3, MEMORY[0x1E4FBBFB0]);
}

uint64_t sub_1B6B169D0()
{
  uint64_t result = sub_1B6E336B8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B6B169F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16A20(a1, a2, a3, MEMORY[0x1E4FBBFC0]);
}

uint64_t sub_1B6B16A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = a4();
  if (v4) {
    return v6;
  }
  return result;
}

uint64_t sub_1B6B16A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B62C333C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, uint64_t, void, uint64_t))sub_1B6B15CD8);
}

uint64_t sub_1B6B16A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16AF8(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B6B16094);
}

void sub_1B6B16AA4()
{
}

uint64_t sub_1B6B16ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B16AF8(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B6B163FC);
}

uint64_t sub_1B6B16AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void))
{
  return a4(a1, *v4, v4[1], v4[2], *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_1B6B16B28()
{
  return sub_1B6B16B50(*(void **)(v0 + 16), v0);
}

uint64_t sub_1B6B16B50(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(unsigned int *)(*(void *)(a2 + 16) + 80);
  *(void *)&long long v16 = 0x207865646E49;
  *((void *)&v16 + 1) = 0xE600000000000000;
  uint64_t v20 = v5;
  swift_bridgeObjectRetain();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1B62B0BD0(0, v4[2] + 1, 1, v4);
  }
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  if (v7 >= v6 >> 1) {
    uint64_t v4 = sub_1B62B0BD0(v6 > 1, v7 + 1, 1, v4);
  }
  uint64_t v18 = &type metadata for _BinaryKey;
  unint64_t v19 = sub_1B62B0BEC();
  uint64_t v8 = swift_allocObject();
  *(void *)&long long v16 = v8;
  *(void *)(v8 + 16) = 0x207865646E49;
  *(void *)(v8 + 24) = 0xE600000000000000;
  *(void *)(v8 + 32) = v5;
  *(unsigned char *)(v8 + 40) = 0;
  v4[2] = v7 + 1;
  sub_1B62C15C4(&v16, (uint64_t)&v4[5 * v7 + 4]);
  type metadata accessor for _BinaryDecoder.KeyedStore();
  uint64_t v9 = a1 + 2;
  uint64_t v10 = a1[5];
  uint64_t v11 = a1[6];
  sub_1B62C14BC(v9, v10);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v11 + 64))(&v16, v10, v11);
  swift_allocObject();
  uint64_t v12 = sub_1B62C0154(&v16);
  if (v15) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v14 = v12;
  sub_1B6B16014(*(void *)(a2 + 8));
  *(void *)&long long v16 = *(void *)(a2 + 8);
  *((void *)&v16 + 1) = v4;
  uint64_t v17 = v14;
  type metadata accessor for _BinaryKeyedDecodingContainer();
  swift_getWitnessTable();
  sub_1B6E32EB8();
  return swift_release();
}

uint64_t sub_1B6B16DB0()
{
  return *(unsigned int *)(*(void *)(v0 + 16) + 80);
}

uint64_t sub_1B6B16DBC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 48);
  sub_1B62C14BC((void *)(v2 + 16), v3);
  char v5 = sub_1B6B14D60(v3, v4);
  if (!v1) {
    ++*(_DWORD *)(v2 + 80);
  }
  return v5 & 1;
}

uint64_t sub_1B6B16E24()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 48);
  sub_1B62C14BC((void *)(v2 + 16), v3);
  char v5 = sub_1B6B14DD8(v3, v4);
  if (!v1) {
    ++*(_DWORD *)(v2 + 80);
  }
  return v5 & 1;
}

void sub_1B6B16E8C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 48);
  sub_1B62C14BC((void *)(v2 + 16), v3);
  sub_1B6B15820(v3, v4);
  if (!v1) {
    ++*(_DWORD *)(v2 + 80);
  }
}

uint64_t sub_1B6B16EF0(uint64_t a1, uint64_t a2)
{
  return sub_1B6B17080(a1, a2, (void (*)(void))sub_1B6B185B0, MEMORY[0x1E4FBC098]);
}

uint64_t sub_1B6B16F24(uint64_t a1, uint64_t a2)
{
  return sub_1B6B17130(a1, a2, (void (*)(void))sub_1B6B1855C, MEMORY[0x1E4FBC0F8]);
}

uint64_t sub_1B6B16F58(uint64_t a1, uint64_t a2)
{
  return sub_1B6B16F8C(a1, a2, (void (*)(void))sub_1B62B00A8, MEMORY[0x1E4FBC1C8]);
}

uint64_t sub_1B6B16F8C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = *(void *)(v8 + 48);
  sub_1B62C14BC((void *)(v8 + 16), v9);
  uint64_t result = sub_1B62AFE54(v9, v10, a3, a4);
  if (!v5) {
    ++*(_DWORD *)(v8 + 80);
  }
  return result;
}

uint64_t sub_1B6B17008()
{
  return sub_1B6E33228();
}

uint64_t sub_1B6B17020(uint64_t a1, uint64_t a2)
{
  return sub_1B62AFDAC(a1, a2, sub_1B6B15450);
}

uint64_t sub_1B6B1704C(uint64_t a1, uint64_t a2)
{
  return sub_1B6B17080(a1, a2, (void (*)(void))sub_1B6B17F2C, MEMORY[0x1E4FBC358]);
}

uint64_t sub_1B6B17080(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = *(void *)(v8 + 48);
  sub_1B62C14BC((void *)(v8 + 16), v9);
  uint64_t result = sub_1B6B15484(v9, v10, a3, a4);
  if (!v5) {
    ++*(_DWORD *)(v8 + 80);
  }
  return result;
}

uint64_t sub_1B6B170FC(uint64_t a1, uint64_t a2)
{
  return sub_1B6B17130(a1, a2, (void (*)(void))sub_1B6B17ED8, MEMORY[0x1E4FBC450]);
}

uint64_t sub_1B6B17130(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = *(void *)(v8 + 40);
  uint64_t v10 = *(void *)(v8 + 48);
  sub_1B62C14BC((void *)(v8 + 16), v9);
  uint64_t result = sub_1B6B154F4(v9, v10, a3, a4);
  if (!v5) {
    ++*(_DWORD *)(v8 + 80);
  }
  return result;
}

uint64_t sub_1B6B171AC(uint64_t a1, uint64_t a2)
{
  return sub_1B62A86BC(a1, a2, (void (*)(void))sub_1B6B17E84, MEMORY[0x1E4FBC4C0]);
}

uint64_t sub_1B6B171E0(uint64_t a1, uint64_t a2)
{
  return sub_1B6B16F8C(a1, a2, (void (*)(void))sub_1B6B17E30, MEMORY[0x1E4FBC538]);
}

uint64_t sub_1B6B17214()
{
  return sub_1B6E33238();
}

uint64_t sub_1B6B1722C()
{
  return sub_1B6E331B8();
}

uint64_t sub_1B6B17244()
{
  return sub_1B6E331A8();
}

uint64_t sub_1B6B1725C()
{
  uint64_t result = sub_1B6E331C8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B6B17280(uint64_t a1, uint64_t a2)
{
  return sub_1B6B174AC(a1, a2, MEMORY[0x1E4FBBE18]);
}

uint64_t sub_1B6B172AC()
{
  uint64_t result = sub_1B6E331D8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B6B172D0(uint64_t a1, uint64_t a2)
{
  return sub_1B6B173F4(a1, a2, MEMORY[0x1E4FBBE20]);
}

uint64_t sub_1B6B172FC(uint64_t a1, uint64_t a2)
{
  return sub_1B6B17450(a1, a2, MEMORY[0x1E4FBBE28]);
}

uint64_t sub_1B6B17328(uint64_t a1, uint64_t a2)
{
  return sub_1B6B174AC(a1, a2, MEMORY[0x1E4FBBE30]);
}

uint64_t sub_1B6B17354()
{
  uint64_t result = sub_1B6E33208();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B6B17378(uint64_t a1, uint64_t a2)
{
  return sub_1B6B17534(a1, a2, MEMORY[0x1E4FBBE40]);
}

uint64_t sub_1B6B173A4()
{
  uint64_t result = sub_1B6E331E8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B6B173C8(uint64_t a1, uint64_t a2)
{
  return sub_1B6B173F4(a1, a2, MEMORY[0x1E4FBBE38]);
}

uint64_t sub_1B6B173F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FF;
}

uint64_t sub_1B6B17424(uint64_t a1, uint64_t a2)
{
  return sub_1B6B17450(a1, a2, MEMORY[0x1E4FBBE48]);
}

uint64_t sub_1B6B17450(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t sub_1B6B17480(uint64_t a1, uint64_t a2)
{
  return sub_1B6B174AC(a1, a2, MEMORY[0x1E4FBBE50]);
}

uint64_t sub_1B6B174AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_1B6B174E4()
{
  uint64_t result = sub_1B6E33218();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B6B17508(uint64_t a1, uint64_t a2)
{
  return sub_1B6B17534(a1, a2, MEMORY[0x1E4FBBE58]);
}

uint64_t sub_1B6B17534(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_1B6B17560()
{
  return sub_1B6E331F8();
}

uint64_t sub_1B6B1758C()
{
  return sub_1B6B16B28();
}

void sub_1B6B175A4()
{
}

uint64_t sub_1B6B17608()
{
  uint64_t v2 = v0;
  uint64_t v3 = (void *)(v0 + 16);
  uint64_t result = sub_1B6B15708();
  if (!v1 && (result & 1) != 0)
  {
    uint64_t v6 = *(void *)(v2 + 40);
    uint64_t v5 = *(void *)(v2 + 48);
    sub_1B62C14BC(v3, v6);
    return (uint64_t)(*(void *(**)(uint64_t *__return_ptr, void, void, uint64_t, uint64_t))(v5 + 32))(&v7, MEMORY[0x1E4FBC538], MEMORY[0x1E4FBC588], v6, v5);
  }
  return result;
}

uint64_t sub_1B6B176B4()
{
  return sub_1B6B15158((uint64_t)&unk_1F0F51CC8, MEMORY[0x1E4FBC0F8], MEMORY[0x1E4FBC140]);
}

uint64_t sub_1B6B176F0()
{
  return sub_1B6E33558();
}

uint64_t sub_1B6B17708()
{
  return sub_1B629768C((uint64_t)&unk_1F0F51DA8, MEMORY[0x1E4FBC538], MEMORY[0x1E4FBC588]);
}

uint64_t sub_1B6B17744()
{
  return sub_1B62AD818((uint64_t)&unk_1F0F9C930, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBC3A8]);
}

uint64_t sub_1B6B17774()
{
  return sub_1B6B15158((uint64_t)&unk_1F0F51D50, MEMORY[0x1E4FBC450], MEMORY[0x1E4FBC4A8]);
}

uint64_t sub_1B6B177B0()
{
  return sub_1B62B97CC((uint64_t)&unk_1F0F51D78, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC520]);
}

uint64_t sub_1B6B177EC()
{
  return sub_1B6E33568();
}

uint64_t sub_1B6B17804()
{
  return swift_bridgeObjectRetain();
}

double (*sub_1B6B17810())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6B17834(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B6B12FDC(a1, a2, a3, a4, a5);
}

uint64_t sub_1B6B17858(uint64_t a1, void *a2)
{
  return sub_1B6B148DC(a1, a2, *(void *)(v2 + 40));
}

uint64_t sub_1B6B1788C(uint64_t a1, void (*a2)(void *, uint64_t *))
{
  if (a1 < 0)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      uint64_t v5 = sub_1B6E31C98();
      *(void *)(v5 + 16) = a1;
    }
    else
    {
      uint64_t v5 = MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 0;
    v7[0] = v5 + 32;
    v7[1] = a1;
    a2(v7, &v8);
    *(void *)(v5 + 16) = v8;
    if (v2) {
      swift_bridgeObjectRelease();
    }
    return v5;
  }
  return result;
}

unint64_t sub_1B6B17984()
{
  unint64_t result = qword_1EB97DDF8;
  if (!qword_1EB97DDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DDF8);
  }
  return result;
}

void **sub_1B6B179D8(void **a1, void *a2)
{
  return sub_1B6B14730(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1B6B179F4()
{
  return sub_1B6B37010() & 1;
}

uint64_t sub_1B6B17A24(uint64_t a1)
{
  return sub_1B6B146A0(a1, *(uint64_t (**)(uint64_t, void))(v1 + 32)) & 1;
}

uint64_t sub_1B6B17A48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int64_t a6)
{
  uint64_t v11 = sub_1B6E30B98();
  if (v11) {
    v11 += a1 - sub_1B6E30BC8();
  }
  uint64_t v12 = sub_1B6E30BB8();
  int v13 = a2 - a1;
  if (v12 < a2 - a1) {
    int v13 = v12;
  }
  int v14 = v11 + v13;
  if (v11) {
    int v15 = v14;
  }
  else {
    int v15 = 0;
  }
  sub_1B62C2840(a4, (uint64_t)a4 + 8, v11, v15, a5, a6);
  return swift_release();
}

uint64_t sub_1B6B17B08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int64_t a6)
{
  uint64_t v11 = sub_1B6E30B98();
  if (v11) {
    v11 += a1 - sub_1B6E30BC8();
  }
  uint64_t v12 = sub_1B6E30BB8();
  int v13 = a2 - a1;
  if (v12 < a2 - a1) {
    int v13 = v12;
  }
  int v14 = v11 + v13;
  if (v11) {
    int v15 = v14;
  }
  else {
    int v15 = 0;
  }
  sub_1B62C2840(a4, (uint64_t)a4 + 1, v11, v15, a5, a6);
  return swift_release();
}

uint64_t sub_1B6B17BC8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int64_t a6)
{
  uint64_t v11 = sub_1B6E30B98();
  if (v11) {
    v11 += a1 - sub_1B6E30BC8();
  }
  uint64_t v12 = sub_1B6E30BB8();
  int v13 = a2 - a1;
  if (v12 < a2 - a1) {
    int v13 = v12;
  }
  int v14 = v11 + v13;
  if (v11) {
    int v15 = v14;
  }
  else {
    int v15 = 0;
  }
  sub_1B62C2840(a4, (uint64_t)a4 + 2, v11, v15, a5, a6);
  return swift_release();
}

uint64_t sub_1B6B17C88(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int64_t a6)
{
  uint64_t v11 = sub_1B6E30B98();
  if (v11) {
    v11 += a1 - sub_1B6E30BC8();
  }
  uint64_t v12 = sub_1B6E30BB8();
  int v13 = a2 - a1;
  if (v12 < a2 - a1) {
    int v13 = v12;
  }
  int v14 = v11 + v13;
  if (v11) {
    int v15 = v14;
  }
  else {
    int v15 = 0;
  }
  sub_1B62C2840(a4, (uint64_t)a4 + 4, v11, v15, a5, a6);
  return swift_release();
}

uint64_t sub_1B6B17D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t sub_1B6B17DA0(uint64_t a1, uint64_t a2)
{
  return sub_1B6B14364(a1, a2, *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1B6B17DC0(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 32);
  type metadata accessor for _KeyBox();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, *(void *)(a1 + *(int *)(TupleTypeMetadata2 + 48)));
}

unint64_t sub_1B6B17E30()
{
  unint64_t result = qword_1EB980F28;
  if (!qword_1EB980F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980F28);
  }
  return result;
}

unint64_t sub_1B6B17E84()
{
  unint64_t result = qword_1EB980F20;
  if (!qword_1EB980F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980F20);
  }
  return result;
}

unint64_t sub_1B6B17ED8()
{
  unint64_t result = qword_1E9DD5C78;
  if (!qword_1E9DD5C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5C78);
  }
  return result;
}

unint64_t sub_1B6B17F2C()
{
  unint64_t result = qword_1E9DD5C80;
  if (!qword_1E9DD5C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5C80);
  }
  return result;
}

void sub_1B6B17F80()
{
  if (!qword_1E9DD5C88)
  {
    sub_1B62C2D70(255, (unint64_t *)&unk_1E9DD1F50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for _KeyBox);
    type metadata accessor for _BinaryDecoder.DataStream();
    sub_1B6AD98F4();
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5C88);
    }
  }
}

void sub_1B6B18018(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC358]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1B6B18068()
{
  unint64_t result = qword_1EB980378;
  if (!qword_1EB980378)
  {
    sub_1B6B18018(255, &qword_1EB980370, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980378);
  }
  return result;
}

uint64_t sub_1B6B180DC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for _BinaryUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for _BinaryUnkeyedDecodingContainer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for _BinaryUnkeyedDecodingContainer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for _BinaryUnkeyedDecodingContainer()
{
  return &type metadata for _BinaryUnkeyedDecodingContainer;
}

uint64_t *assignWithCopy for _BinaryDecoder.SingleValueStore(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for _BinaryDecoder.SingleValueStore(uint64_t a1, uint64_t a2)
{
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for _BinaryDecoder.SingleValueStore(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _BinaryDecoder.SingleValueStore(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _BinaryDecoder.SingleValueStore()
{
  return &type metadata for _BinaryDecoder.SingleValueStore;
}

uint64_t destroy for _BinarySingleValueDecodingContainer(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 16);
}

uint64_t initializeWithCopy for _BinarySingleValueDecodingContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 16;
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 16, v4, v6);
  return a1;
}

void *assignWithCopy for _BinarySingleValueDecodingContainer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B62C15DC(a1 + 2, a2 + 2);
  return a1;
}

uint64_t assignWithTake for _BinarySingleValueDecodingContainer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for _BinarySingleValueDecodingContainer(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _BinarySingleValueDecodingContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _BinarySingleValueDecodingContainer()
{
  return &type metadata for _BinarySingleValueDecodingContainer;
}

uint64_t sub_1B6B1851C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_1B6B18524()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

unint64_t sub_1B6B1855C()
{
  unint64_t result = qword_1E9DD5C90;
  if (!qword_1E9DD5C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5C90);
  }
  return result;
}

unint64_t sub_1B6B185B0()
{
  unint64_t result = qword_1E9DD5C98;
  if (!qword_1E9DD5C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5C98);
  }
  return result;
}

unint64_t sub_1B6B18604()
{
  unint64_t result = qword_1E9DD5CA0;
  if (!qword_1E9DD5CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5CA0);
  }
  return result;
}

void sub_1B6B18664(void *a1, uint64_t a2, uint64_t *a3, char a4, uint64_t a5, void *a6, uint64_t a7, unsigned int *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v21 = *a3;
  uint64_t v22 = a3[1];
  sub_1B6B19094();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1B6E77050;
  *(_OWORD *)(v23 + 32) = xmmword_1B6EA6B00;
  *(unsigned char *)(v23 + 48) = 0;
  *(void *)(v23 + 64) = a4 & 1;
  *(_OWORD *)(v23 + 72) = 0u;
  *(_OWORD *)(v23 + 88) = 0u;
  *(_OWORD *)(v23 + 104) = 0u;
  *(void *)(v23 + 120) = 0;
  *(unsigned char *)(v23 + 128) = 13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1B6A5CBE4(v21, v22, 0, v23, v64);
  id v24 = sub_1B679C370((uint64_t)v64, 0, 0);
  uint64_t v26 = v25;
  sub_1B6786968((uint64_t)v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v24)
  {
    swift_getObjectType();
    objc_msgSend(a1, sel_setTexture_atIndex_, a5, 0);
    objc_msgSend(a1, sel_setTexture_atIndex_, a6, 1);
    objc_msgSend(a1, sel_setBytes_length_atIndex_, a7, 4, 0);
    sub_1B6B595FC(v24, (uint64_t)a6, 0);
    unsigned int v27 = objc_msgSend(*(id *)(a2 + 16), sel_supportsWritableArrayOfTextures);
    uint64_t v28 = swift_allocObject();
    uint64_t v29 = *a8;
    *(_OWORD *)(v28 + 16) = xmmword_1B6E77050;
    *(_OWORD *)(v28 + 32) = xmmword_1B6EA6B10;
    *(unsigned char *)(v28 + 48) = 0;
    *(void *)(v28 + 64) = v29;
    *(_OWORD *)(v28 + 72) = 0u;
    *(_OWORD *)(v28 + 88) = 0u;
    *(_OWORD *)(v28 + 104) = 0u;
    *(void *)(v28 + 120) = 0;
    *(unsigned char *)(v28 + 128) = 14;
    swift_bridgeObjectRetain();
    uint64_t v30 = a8;
    if (v27)
    {
      sub_1B6A5CBE4(0xD00000000000001CLL, 0x80000001B6F49750, 0, v28, v65);
      id v31 = sub_1B679C370((uint64_t)v65, 0, 0);
      uint64_t v33 = v32;
      sub_1B6786968((uint64_t)v65);
      swift_bridgeObjectRelease();

      if (!v31) {
        goto LABEL_19;
      }
      objc_msgSend(a1, sel_setTexture_atIndex_, a6, 0);
      objc_msgSend(a1, sel_setTexture_atIndex_, a9, 1);
      objc_msgSend(a1, sel_setTexture_atIndex_, a10, 2);
    }
    else
    {
      sub_1B6A5CBE4(0xD00000000000002BLL, 0x80000001B6F49700, 0, v28, v65);
      id v31 = sub_1B679C370((uint64_t)v65, 0, 0);
      uint64_t v35 = v34;
      sub_1B6786968((uint64_t)v65);
      swift_bridgeObjectRelease();

      if (!v31) {
        goto LABEL_19;
      }
      uint64_t v36 = &selRef_setFragmentTextures_withRange_;
      objc_msgSend(a1, sel_setTexture_atIndex_, a6, 0);
      uint64_t v37 = *(void *)a8;
      if (*(void *)a8)
      {
        int v56 = a6;
        swift_getObjectType();
        uint64_t v38 = 0;
        while (1)
        {
          uint64_t v39 = sub_1B6BBC8A0();
          if (!v39) {
            goto LABEL_18;
          }
          long long v40 = v36[480];
          uint64_t v41 = v36;
          uint64_t v42 = v38 + 1;
          objc_msgSend(a1, v40, v39, v38 + 1);
          swift_getObjectType();
          uint64_t v43 = sub_1B6BBC8A0();
          if (!v43)
          {
            swift_unknownObjectRelease();
            goto LABEL_18;
          }
          objc_msgSend(a1, (SEL)v41 + 479, v43, v38 + 4);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          ++v38;
          BOOL v44 = v42 == v37;
          uint64_t v36 = v41;
          if (v44)
          {
            a6 = v56;
            uint64_t v30 = a8;
            break;
          }
        }
      }
    }
    objc_msgSend(a1, sel_setBytes_length_atIndex_, a11, 40, 0, v56);
    sub_1B6B59478(a12, a13, a14, 0);
    sub_1B6B595FC(v31, (uint64_t)a6, 0);
    swift_unknownObjectRelease();
    uint64_t v45 = swift_allocObject();
    uint64_t v46 = *(unsigned int *)v30;
    *(_OWORD *)(v45 + 16) = xmmword_1B6E77050;
    *(_OWORD *)(v45 + 32) = xmmword_1B6EA6B10;
    *(unsigned char *)(v45 + 48) = 0;
    *(void *)(v45 + 64) = v46;
    *(_OWORD *)(v45 + 72) = 0u;
    *(_OWORD *)(v45 + 88) = 0u;
    *(_OWORD *)(v45 + 104) = 0u;
    *(void *)(v45 + 120) = 0;
    *(unsigned char *)(v45 + 128) = 14;
    swift_bridgeObjectRetain();
    sub_1B6A5CBE4(0xD00000000000001ALL, 0x80000001B6F49730, 0, v45, v66);
    id v47 = sub_1B679C370((uint64_t)v66, 0, 0);
    uint64_t v49 = v48;
    sub_1B6786968((uint64_t)v66);
    swift_bridgeObjectRelease();

    if (v47)
    {
      objc_msgSend(a1, sel_setTexture_atIndex_, a9, 0);
      objc_msgSend(a1, sel_setTexture_atIndex_, a10, 1);
      objc_msgSend(a1, sel_setTexture_atIndex_, a6, 2);
      uint64_t v50 = (uint64_t)objc_msgSend(v47, sel_threadExecutionWidth);
      sub_1B6389580(1, (v50 + 2 * a15) / v50 * v50, &v62);
      long long v51 = v62;
      uint64_t v52 = v63;
      sub_1B6389580((uint64_t)objc_msgSend(a6, sel_width), ((uint64_t)objc_msgSend(a6, sel_height) + *((void *)&v62 + 1) - 1) / *((void *)&v62 + 1), &v62);
      long long v59 = v62;
      uint64_t v53 = v63;
      uint64_t v54 = ((32 * a16 + 16 * *((void *)&v51 + 1)) * *v30) | 0xF;
      if (v54 <= 0) {
        uint64_t v55 = -(-v54 & 0xF);
      }
      else {
        uint64_t v55 = 15;
      }
      objc_msgSend(a1, sel_setThreadgroupMemoryLength_atIndex_, v54 - v55, 0);
      objc_msgSend(a1, sel_setComputePipelineState_, v47);
      long long v62 = v59;
      uint64_t v63 = v53;
      long long v60 = v51;
      uint64_t v61 = v52;
      objc_msgSend(a1, sel_dispatchThreadgroups_threadsPerThreadgroup_, &v62, &v60);
LABEL_18:
      swift_unknownObjectRelease();
    }
LABEL_19:
    swift_unknownObjectRelease();
  }
}

_OWORD *sub_1B6B18CCC(void *a1, uint64_t a2, uint64_t a3, float a4)
{
  if (objc_msgSend(a1, sel_storageMode) == (id)2)
  {
    uint64_t v8 = 0;
    if (a3 != 3) {
      goto LABEL_3;
    }
LABEL_7:
    sub_1B629ACD8(0, (unint64_t *)&qword_1EB980DA0, (void (*)(uint64_t))sub_1B62AADE8);
    uint64_t v9 = (_OWORD *)swift_allocObject();
    v9[1] = xmmword_1B6E77D10;
    v9[2] = xmmword_1B6EA6B20;
    v9[3] = xmmword_1B6EA6B30;
    v9[4] = xmmword_1B6EA6B40;
    goto LABEL_9;
  }
  uint64_t v10 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  id v11 = a1;
  uint64_t v8 = (float32x2_t *)&v10[a2];
  if (a3 == 3) {
    goto LABEL_7;
  }
LABEL_3:
  if (a3 == 2)
  {
    sub_1B629ACD8(0, (unint64_t *)&qword_1EB980DA0, (void (*)(uint64_t))sub_1B62AADE8);
    uint64_t v9 = (_OWORD *)swift_allocObject();
    v9[1] = xmmword_1B6E76B30;
    v9[2] = xmmword_1B6EA6B50;
    v9[3] = xmmword_1B6EA6B60;
  }
  else
  {
    if (a3 != 1) {
      return (_OWORD *)MEMORY[0x1E4FBC860];
    }
    sub_1B629ACD8(0, (unint64_t *)&qword_1EB980DA0, (void (*)(uint64_t))sub_1B62AADE8);
    uint64_t v9 = (_OWORD *)swift_allocObject();
    v9[1] = xmmword_1B6E77050;
    v9[2] = xmmword_1B6EA6B70;
  }
LABEL_9:
  uint64_t v12 = 0;
  unint64_t v13 = vcvtps_s32_f32(a4);
  int v14 = v9 + 2;
  BOOL v44 = v9;
  int v15 = v8;
  do
  {
    long long v16 = v14;
    long long v45 = v14[v12];
    LODWORD(v17) = HIDWORD(*(void *)&v14[v12]);
    uint64_t v19 = (2 * v13) | 1;
    uint64_t v18 = -(uint64_t)v13;
    uint64_t v20 = v15;
    do
    {
      float v21 = (float)((float)((float)v18 * 1.1) / a4) * (float)((float)((float)v18 * 1.1) / a4);
      float v46 = expf(v17 * v21);
      __float2 v22 = __sincosf_stret(*(float *)&v45 * v21);
      *v20++ = vmul_n_f32((float32x2_t)__PAIR64__(LODWORD(v22.__sinval), LODWORD(v22.__cosval)), v46);
      ++v18;
      --v19;
    }
    while (v19);
    ++v12;
    v15 += 128;
    int v14 = v16;
  }
  while (v12 != a3);
  uint64_t v23 = 0;
  float v24 = 0.0;
  uint64_t v25 = v8;
  unint64_t result = v44;
  do
  {
    unsigned int v27 = (float *)&v16[v23];
    uint64_t v28 = v23 << 7;
    float32x2_t v29 = v8[128 * v23 + v13];
    float v30 = v27[2];
    float v31 = v27[3];
    float v32 = vmuls_lane_f32(v29.f32[0], v29, 1);
    float v24 = (float)(v31 * (float)(v32 + v32))
        + (float)(v24 + (float)(v30 * (float)(vmul_f32(v29, v29).f32[0] - vmuls_lane_f32(v29.f32[1], v29, 1))));
    if (v13)
    {
      uint64_t v33 = 0;
      float v34 = v30 + v30;
      float v35 = v31 + v31;
      do
      {
        float v24 = (float)(v35
                    * (float)(vmuls_lane_f32(v29.f32[0], v25[v33], 1)
                            + (float)(v29.f32[1] * COERCE_FLOAT(*(void *)&v25[v33]))))
            + (float)(v24
                    + (float)(v34 * (float)(vmul_f32(v29, v25[v33]).f32[0] - vmuls_lane_f32(v29.f32[1], v25[v33], 1))));
        ++v33;
      }
      while (v13 != v33);
      uint64_t v36 = 0;
      float v37 = v30 * 4.0;
      float v38 = v31 * 4.0;
      do
      {
        uint64_t v39 = 0;
        float32x2_t v40 = v8[v36 + v28];
        float v24 = (float)(v35 * (float)((float)(v29.f32[1] * v40.f32[0]) + vmuls_lane_f32(v29.f32[0], v40, 1)))
            + (float)(v24 + (float)(v34 * (float)(vmul_f32(v29, v40).f32[0] - vmuls_lane_f32(v29.f32[1], v40, 1))));
        do
        {
          LODWORD(v41) = HIDWORD(*(void *)&v8[v36 + v28]);
          float v24 = (float)(v38
                      * (float)(vmuls_lane_f32(v40.f32[0], v25[v39], 1)
                              + (float)(v41 * COERCE_FLOAT(*(void *)&v25[v39]))))
              + (float)(v24 + (float)(v37 * (float)(vmul_f32(v40, v25[v39]).f32[0] - vmuls_lane_f32(v41, v25[v39], 1))));
          ++v39;
        }
        while (v13 != v39);
        ++v36;
      }
      while (v36 != v13);
    }
    ++v23;
    v25 += 128;
  }
  while (v23 != a3);
  uint64_t v42 = a3 << 7;
  if (a3 << 7)
  {
    float v43 = 1.0 / sqrtf(v24);
    do
    {
      *uint64_t v8 = vmul_n_f32(*v8, v43);
      ++v8;
      --v42;
    }
    while (v42);
  }
  return result;
}

void sub_1B6B19094()
{
  if (!qword_1EB985580)
  {
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB985580);
    }
  }
}

ValueMetadata *type metadata accessor for Extensions()
{
  return &type metadata for Extensions;
}

uint64_t sub_1B6B190FC(uint64_t a1, uint64_t a2)
{
  return sub_1B6B19144(a1, a2, (uint64_t)sub_1B6B1A3D4, MEMORY[0x1E4FBB2A0], 63553);
}

uint64_t sub_1B6B19120(uint64_t a1, uint64_t a2)
{
  return sub_1B6B19144(a1, a2, (uint64_t)sub_1B663246C, MEMORY[0x1E4FBB870], 15938);
}

uint64_t sub_1B6B19144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = v5;
  uint64_t v12 = *(void *)(a1 - 8);
  double v13 = MEMORY[0x1F4188790](a1, a2);
  int v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v15, v9, a1, v13);
  uint64_t DynamicType = swift_getDynamicType();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, a1);
  uint64_t isClassType = swift_isClassType();
  if (isClassType) {
    uint64_t v19 = DynamicType;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v19)
  {
    uint64_t v20 = sub_1B6E33498();
    swift_unknownObjectRelease();
  }
  else
  {
    MEMORY[0x1F4188790](isClassType, v18);
    uint64_t v24 = a2;
    uint64_t v23 = a5;
    sub_1B6B192EC(v9, a3, (uint64_t)&v25[-4], a1, MEMORY[0x1E4FBC248], a4, MEMORY[0x1E4FBC278], v21);
    return v25[1];
  }
  return v20;
}

uint64_t sub_1B6B192EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v15(v12, v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

uint64_t sub_1B6B193C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_2;
  }
  sub_1B6E330B8();
  if (swift_dynamicCastClass())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a3);
    sub_1B62CAAD8(a1, (uint64_t)&v17);
    swift_retain();
    swift_dynamicCast();
    LOBYTE(v21) = v13;
    goto LABEL_9;
  }
  sub_1B6E330B8();
  if (swift_dynamicCastClass())
  {
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a3);
    sub_1B62CAAD8(a1, (uint64_t)&v17);
    swift_retain();
    swift_dynamicCast();
    LODWORD(v21) = v13;
    goto LABEL_9;
  }
  sub_1B6E330B8();
  if (swift_dynamicCastClass()
    || (sub_1B633F5D8(255, &qword_1EB980EA0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC280]), sub_1B6E330B8(), swift_dynamicCastClass()))
  {
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a3);
    sub_1B62CAAD8(a1, (uint64_t)&v17);
    swift_retain();
    swift_dynamicCast();
    *(void *)&long long v21 = v13;
    goto LABEL_9;
  }
  sub_1B633F5D8(255, (unint64_t *)&unk_1EB980EC0, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2A8]);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_2;
  }
  sub_1B633F5D8(255, &qword_1EB980F08, (uint64_t (*)(void))sub_1B675900C, MEMORY[0x1E4FBC4C0], MEMORY[0x1E4FBC2F8]);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_2;
  }
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_6;
  }
  sub_1B633F5D8(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_8;
  }
  sub_1B633F5D8(255, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_2;
  }
  sub_1B633F5D8(255, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_2;
  }
  type metadata accessor for simd_float2x2(255);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_2;
  }
  type metadata accessor for simd_float2x3(255);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_29;
  }
  type metadata accessor for simd_float2x4(255);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_29;
  }
  type metadata accessor for simd_float3x2(255);
  sub_1B6E330B8();
  if (swift_dynamicCastClass())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a3);
    sub_1B62CAAD8(a1, (uint64_t)&v17);
    swift_retain();
    swift_dynamicCast();
    long long v21 = v13;
    *(void *)&long long v22 = v14;
    goto LABEL_9;
  }
  type metadata accessor for simd_float3x3(255);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()
    || (type metadata accessor for simd_float3x4(255), sub_1B6E330B8(), swift_dynamicCastClass()))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a3);
    sub_1B62CAAD8(a1, (uint64_t)&v21);
    swift_retain();
    swift_dynamicCast();
    long long v13 = v17;
    long long v14 = v18;
    long long v15 = v19;
    goto LABEL_9;
  }
  type metadata accessor for simd_float4x2(255);
  sub_1B6E330B8();
  if (swift_dynamicCastClass())
  {
LABEL_29:
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a3);
    sub_1B62CAAD8(a1, (uint64_t)&v17);
    swift_retain();
    swift_dynamicCast();
    long long v21 = v13;
    long long v22 = v14;
    goto LABEL_9;
  }
  type metadata accessor for simd_float4x3(255);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()
    || (type metadata accessor for simd_float4x4(255), sub_1B6E330B8(), swift_dynamicCastClass()))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a3);
    sub_1B62CAAD8(a1, (uint64_t)&v21);
    swift_retain();
    swift_dynamicCast();
    long long v13 = v17;
    long long v14 = v18;
    long long v15 = v19;
    long long v16 = v20;
    goto LABEL_9;
  }
  type metadata accessor for simd_quatf(255);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_2;
  }
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_8;
  }
  sub_1B67C5BBC(255, (unint64_t *)&qword_1EB980420, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB568], MEMORY[0x1E4FBB6A0]);
  sub_1B6E330B8();
  if (swift_dynamicCastClass())
  {
LABEL_2:
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a3);
    sub_1B62CAAD8(a1, (uint64_t)&v17);
    swift_retain();
    swift_dynamicCast();
    long long v21 = v13;
LABEL_9:
    swift_setAtReferenceWritableKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a3);
  }
  sub_1B67C5BBC(255, (unint64_t *)&qword_1EB980410, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB498], MEMORY[0x1E4FBB6A0]);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_8;
  }
  sub_1B6E330B8();
  if (swift_dynamicCastClass())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a3);
    sub_1B62CAAD8(a1, (uint64_t)&v17);
    swift_retain();
    swift_dynamicCast();
    long long v21 = v13;
    LOBYTE(v22) = v14;
    goto LABEL_9;
  }
  sub_1B67C5BBC(255, (unint64_t *)&qword_1EB97FDA0, MEMORY[0x1E4FBB470], (uint64_t)&off_1F0FAB230, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Curve);
  sub_1B6E330B8();
  if (swift_dynamicCastClass())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a3);
    sub_1B62CAAD8(a1, (uint64_t)&v17);
    swift_retain();
    swift_dynamicCast();
    long long v21 = v13;
    *(void *)&long long v22 = v14;
    BYTE8(v22) = BYTE8(v14);
    goto LABEL_9;
  }
  sub_1B6386084(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_8;
  }
  sub_1B6386084(255, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
  sub_1B6E330B8();
  if (swift_dynamicCastClass()) {
    goto LABEL_8;
  }
  uint64_t v12 = MEMORY[0x1E4FBC840] + 8;
  sub_1B6E330B8();
  if (swift_dynamicCastClass()
    || (sub_1B6386084(255, (unint64_t *)&qword_1EB980F60, v12, MEMORY[0x1E4FBB718]),
        sub_1B6E330B8(),
        swift_dynamicCastClass()))
  {
    sub_1B62CAAD8(a1, (uint64_t)&v17);
    swift_retain();
    swift_setAtReferenceWritableKeyPath();
    return swift_release();
  }
  else
  {
    *(void *)&long long v17 = 0;
    *((void *)&v17 + 1) = 0xE000000000000000;
    sub_1B6E328C8();
    sub_1B6E31948();
    *(void *)&long long v13 = a2;
    sub_1B6E32768();
    sub_1B6E32B18();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

ValueMetadata *_s3VFX10ExtensionsVMa_0()
{
  return &_s3VFX10ExtensionsVN_0;
}

uint64_t sub_1B6B1A3D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B663246C(a1, a2);
}

uint64_t sub_1B6B1A3EC()
{
  return type metadata accessor for ParticleLifeInit.System();
}

double sub_1B6B1A40C()
{
  sub_1B62D2B64();
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E76B30;
  *(void *)(v0 + 32) = &type metadata for ParticleAge;
  *(void *)(v0 + 40) = &off_1F0F56330;
  *(void *)(v0 + 48) = &type metadata for ParticleLifetime;
  *(void *)(v0 + 56) = &off_1F0F6DC48;
  return result;
}

double sub_1B6B1A468@<D0>(uint64_t a1@<X8>)
{
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)a1 = result;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_1B6B1A478(char *a1, char *a2)
{
  return sub_1B6BB19C4(*a1, *a2);
}

uint64_t sub_1B6B1A484()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B1A508()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B1A578()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B1A5F8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B6B1A658(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x65676E6172;
  if (*v1) {
    unint64_t v2 = 0xD000000000000011;
  }
  unint64_t v3 = 0x80000001B6F2E780;
  if (!*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B6B1A698()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x65676E6172;
  }
}

uint64_t sub_1B6B1A6D4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B6B1A738(uint64_t a1)
{
  unint64_t v2 = sub_1B6B1B320();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B1A774(uint64_t a1)
{
  unint64_t v2 = sub_1B6B1B320();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6B1A7B0(void *a1, float a2, float a3)
{
  sub_1B6B1B374(0, &qword_1E9DD5CA8, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  uint64_t v12 = &v14[-v11];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6B1B320();
  sub_1B6E33A88();
  float v15 = a2;
  float v16 = a3;
  v14[7] = 0;
  sub_1B62AA858();
  sub_1B62AA5EC(qword_1E9DD02C8);
  sub_1B6E32FA8();
  if (!v3)
  {
    v14[6] = 1;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
}

void sub_1B6B1A974(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v5 = sub_1B6B1B118(a1);
  if (!v2)
  {
    *(float *)a2 = v5;
    *(_DWORD *)(a2 + 4) = v6;
    *(unsigned char *)(a2 + 8) = v4 & 1;
  }
}

uint64_t sub_1B6B1A9A8(void *a1)
{
  return sub_1B6B1A7B0(a1, *v1, v1[1]);
}

uint64_t *sub_1B6B1A9C8(void *a1, float a2, float a3, uint64_t a4, uint64_t a5)
{
  long long v8 = *(_OWORD *)(a5 + 32);
  v88[0] = *(_OWORD *)(a5 + 16);
  v88[1] = v8;
  uint64_t v89 = *(void *)(a5 + 48);
  uint64_t v9 = swift_retain();
  sub_1B62C9DA8(v9, (uint64_t)v88, 0x200000000, v74);
  sub_1B62CA210((uint64_t)v74, (uint64_t)v75, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v75[0]) {
    return (uint64_t *)swift_release();
  }
  long long v82 = v75[0];
  long long v83 = v75[1];
  uint64_t v69 = v77;
  uint64_t v84 = v76;
  uint64_t v11 = v78;
  uint64_t v10 = v79;
  uint64_t v12 = v81;
  uint64_t v72 = v80;
  swift_release();
  sub_1B62F46E8();
  if (v12 <= 0 || !v11) {
    return sub_1B632F170(v74);
  }
  float v14 = (float)-(float)(v13 * (float)(1.0 / a2)) / (float)v12;
  uint64_t v15 = v72[4];
  int v71 = *(unsigned __int8 *)(v10 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v85[0] = v82;
  v85[1] = v83;
  uint64_t v86 = v84;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v16 = 0;
  float v17 = 0.0;
  __asm { FMOV            V0.4S, #1.0 }
  long long v64 = _Q0;
  int32x4_t v65 = vdupq_n_s32(0x4479FFFFu);
  uint64_t v23 = v5;
  uint64_t v67 = v11;
  uint64_t v68 = v15;
  do
  {
    uint64_t v24 = (unsigned int *)(v69 + 48 * v16);
    uint64_t v25 = v24[1];
    uint64_t v70 = *v24;
    unsigned int v27 = (uint64_t *)*((void *)v24 + 2);
    uint64_t v26 = *((void *)v24 + 3);
    uint64_t v28 = *((void *)v24 + 4);
    uint64_t v29 = *((void *)v24 + 5);
    uint64_t v73 = v23;
    if (v71)
    {
      float v30 = *(os_unfair_lock_s **)(v29 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v30);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v29 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v15);
    sub_1B62CA210((uint64_t)(v72 + 6), (uint64_t)v87, &qword_1EB97DE20);
    uint64_t v31 = v72[4];
    uint64_t v32 = *(void *)(*(void *)(*(void *)(*(void *)(v29 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v72[6] = ecs_stack_allocator_allocate(v31, 48 * v32, 8);
    v72[7] = v32;
    v72[9] = 0;
    v72[10] = 0;
    v72[8] = 0;
    swift_release();
    uint64_t v33 = sub_1B62C9024((uint64_t)&type metadata for ParticleLifetime, (uint64_t)&off_1F0F6DC48, v27, v26, v28, (uint64_t)v72);
    uint64_t v34 = sub_1B62C9024((uint64_t)&type metadata for ParticleAge, (uint64_t)&off_1F0F56330, v27, v26, v28, (uint64_t)v72);
    if (a2 == a3)
    {
      if (a2 == 0.0)
      {
        uint64_t v35 = v70;
        if (v70 != v25)
        {
          uint64_t v36 = v25 - v70;
          uint64_t v37 = v73;
          if ((unint64_t)(v25 - v70) < 0xC) {
            goto LABEL_17;
          }
          uint64_t v38 = v34 + 4 * v70;
          uint64_t v39 = v33 + 4 * v70;
          if ((unint64_t)(v38 - v39) < 0x20) {
            goto LABEL_17;
          }
          uint64_t v35 = (v36 & 0xFFFFFFFFFFFFFFF8) + v70;
          float32x2_t v40 = (int32x4_t *)(v39 + 16);
          float v41 = (_OWORD *)(v38 + 16);
          unint64_t v42 = v36 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            v40[-1] = v65;
            *float32x2_t v40 = v65;
            v40 += 2;
            *(v41 - 1) = v64;
            *float v41 = v64;
            v41 += 2;
            v42 -= 8;
          }
          while (v42);
          if (v36 != (v36 & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_17:
            uint64_t v43 = v25 - v35;
            BOOL v44 = (_DWORD *)(v34 + 4 * v35);
            long long v45 = (_DWORD *)(v33 + 4 * v35);
            do
            {
              *v45++ = 1148846079;
              *v44++ = 1065353216;
              --v43;
            }
            while (v43);
          }
          goto LABEL_29;
        }
      }
      else if (v70 != v25)
      {
        uint64_t v60 = v25 - v70;
        uint64_t v61 = (float *)(v34 + 4 * v70);
        long long v62 = (float *)(v33 + 4 * v70);
        uint64_t v37 = v73;
        uint64_t v59 = v67;
        do
        {
          *v62++ = 1.0 / a2;
          *v61++ = v17;
          float v17 = v14 + v17;
          --v60;
        }
        while (v60);
        goto LABEL_30;
      }
    }
    else if (v70 != v25)
    {
      uint64_t v46 = a1[3];
      uint64_t v47 = a1[4];
      uint64_t v48 = a1[1];
      uint64_t v49 = a1[2];
      uint64_t v50 = v25 - v70;
      long long v51 = (float *)(v34 + 4 * v70);
      uint64_t v52 = (float *)(v33 + 4 * v70);
      do
      {
        float v53 = (float)((float)(a3 - a2)
                    * (float)((float)((9 * ((((unint64_t)(5 * v49) >> 32) >> 25) | (640 * v49))) & 0xFFFFFF)
                            * 0.000000059605))
            + a2;
        float v54 = 1.0 / v53;
        uint64_t v55 = v48 ^ v46;
        uint64_t v56 = v49 ^ v47;
        v46 ^= v48 ^ (v49 << 17);
        v49 ^= v55;
        v48 ^= v56;
        BOOL v57 = v53 > 0.001;
        float v58 = 1000.0;
        if (v57) {
          float v58 = v54;
        }
        uint64_t v47 = __ROR8__(v56, 19);
        *v52++ = v58;
        *v51++ = v17;
        float v17 = v14 + v17;
        --v50;
      }
      while (v50);
      a1[1] = v48;
      a1[2] = v49;
      a1[3] = v46;
      a1[4] = v47;
    }
    uint64_t v37 = v73;
LABEL_29:
    uint64_t v59 = v67;
LABEL_30:
    sub_1B6345178(v72, (unsigned __int16 **)v85, (uint64_t)v87);
    uint64_t v23 = v37;
    sub_1B634507C((char *)v29);
    uint64_t v15 = v68;
    ecs_stack_allocator_pop_snapshot(v68);
    if (v71)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 376));
    }
    swift_release();
    ++v16;
  }
  while (v16 != v59);
  sub_1B632F170(v74);
  return sub_1B632F170(v74);
}

uint64_t type metadata accessor for ParticleLifeInit.System()
{
  return self;
}

uint64_t sub_1B6B1AEF0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 104);
  long long v11 = *(_OWORD *)(a1 + 88);
  long long v12 = v3;
  uint64_t v13 = *(void *)(a1 + 120);
  sub_1B663DBB8((uint64_t)v7);
  long long v4 = v7[1];
  *(_OWORD *)(v2 + 16) = v7[0];
  *(_OWORD *)(v2 + 32) = v4;
  *(void *)(v2 + 48) = v8;
  sub_1B67CF68C((uint64_t)v9);
  sub_1B62F648C(a1);
  long long v5 = v9[1];
  *(_OWORD *)(v2 + 56) = v9[0];
  *(_OWORD *)(v2 + 72) = v5;
  *(void *)(v2 + 88) = v10;
  return v2;
}

const char *sub_1B6B1AF94()
{
  return "SetLife.CPU";
}

uint64_t type metadata accessor for ParticleLifeInit.GPUSystem()
{
  return self;
}

const char *sub_1B6B1AFD0()
{
  return "ParticleLifeInit.GPU";
}

uint64_t sub_1B6B1AFE4()
{
  return type metadata accessor for ParticleLifeInit.GPUSystem();
}

uint64_t sub_1B6B1B004(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[6];
  swift_retain();
  uint64_t v5 = sub_1B635A274(v3);
  int v7 = v6;
  swift_release();
  float v9 = *((float *)&v5 + 1);
  float v8 = *(float *)&v5;
  if (v7 == 2)
  {
    float v8 = 1.0;
    float v9 = 1.0;
  }
  *(float *)long long v18 = v8;
  *(float *)&v18[1] = v9;
  uint64_t v10 = *a1;
  if (*a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for particle_set_life_uniforms(0);
    sub_1B6B594A8((uint64_t)v18, 1, ObjectType, v12, v13, v14, v15, v16);
  }
  swift_retain();
  sub_1B6786A24((uint64_t)a1);
  sub_1B6BFF388(v4, v2, v10 == 0, 0, (uint64_t)a1, 0xD000000000000011, 0x80000001B6F49820, 0);
  sub_1B6786A7C((uint64_t)a1);
  return swift_release();
}

float sub_1B6B1B118(void *a1)
{
  sub_1B6B1B374(0, &qword_1EB981288, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  float v9 = &v11[-v8];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6B1B320();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B62AA858();
    v11[7] = 0;
    sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
    sub_1B6E32DF8();
    float v2 = v12;
    v11[6] = 1;
    sub_1B6E32D38();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B6B1B320()
{
  unint64_t result = qword_1EB981098;
  if (!qword_1EB981098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB981098);
  }
  return result;
}

void sub_1B6B1B374(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6B1B320();
    unint64_t v7 = a3(a1, &type metadata for ParticleLifeInit.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleLifeInit.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B1B4A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleLifeInit.CodingKeys()
{
  return &type metadata for ParticleLifeInit.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for ParticleLifeInit(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleLifeInit(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleLifeInit(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleLifeInit()
{
  return &type metadata for ParticleLifeInit;
}

unint64_t sub_1B6B1B59C()
{
  unint64_t result = qword_1E9DD5CB0;
  if (!qword_1E9DD5CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5CB0);
  }
  return result;
}

unint64_t sub_1B6B1B5F4()
{
  unint64_t result = qword_1EB9810A8;
  if (!qword_1EB9810A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9810A8);
  }
  return result;
}

unint64_t sub_1B6B1B64C()
{
  unint64_t result = qword_1EB9810A0;
  if (!qword_1EB9810A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9810A0);
  }
  return result;
}

uint64_t sub_1B6B1B6A0()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2 + 32;
    swift_retain();
    do
    {
      sub_1B633B0E8();
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_release();
    uint64_t v1 = *(void *)(v0 + 96);
  }
  if (v1) {
    MEMORY[0x1BA9B84C0](v1, -1, -1);
  }
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1B6B1B750()
{
  sub_1B6B1B6A0();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6B1B784(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1B6C3D548(0, v1, 0);
    uint64_t v2 = v19;
    unint64_t v4 = sub_1B6860A50(a1);
    uint64_t v5 = 0;
    uint64_t v6 = a1 + 64;
    int64_t v7 = *(void *)(v19 + 16);
    uint64_t v8 = a1 + 88;
    do
    {
      unint64_t v9 = v7;
      long long v10 = *(_OWORD *)(*(void *)(a1 + 56) + 24 * v4 + 8);
      unint64_t v11 = *(void *)(v19 + 24);
      ++v7;
      if (v9 >= v11 >> 1)
      {
        uint64_t v18 = v8;
        long long v17 = *(_OWORD *)(*(void *)(a1 + 56) + 24 * v4 + 8);
        sub_1B6C3D548(v11 > 1, v7, 1);
        long long v10 = v17;
        uint64_t v8 = v18;
      }
      *(void *)(v19 + 16) = v7;
      *(_OWORD *)(v19 + 16 * v9 + 32) = v10;
      unint64_t v12 = v4 >> 6;
      if ((*(void *)(v6 + 8 * (v4 >> 6)) & (-2 << v4)) != 0)
      {
        unint64_t v4 = __clz(__rbit64(*(void *)(v6 + 8 * (v4 >> 6)) & (-2 << v4))) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
        unint64_t v13 = v12 + 1;
        unint64_t v14 = (v4 + 63) >> 6;
        if (v12 + 1 < v14)
        {
          unint64_t v15 = *(void *)(v6 + 8 * v13);
          if (!v15)
          {
            unint64_t v13 = v12 + 2;
            if (v12 + 2 >= v14) {
              goto LABEL_4;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v13);
            if (!v15)
            {
              while (v14 - 3 != v12)
              {
                unint64_t v15 = *(void *)(v8 + 8 * v12++);
                if (v15)
                {
                  unint64_t v13 = v12 + 2;
                  goto LABEL_10;
                }
              }
              goto LABEL_4;
            }
          }
LABEL_10:
          unint64_t v4 = __clz(__rbit64(v15)) + (v13 << 6);
        }
      }
LABEL_4:
      ++v5;
    }
    while (v5 != v1);
  }
  return v2;
}

double (*sub_1B6B1B930())(void)
{
  int64_t v1 = *v0;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unsigned char *v0 = v1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unsigned char *v0 = sub_1B6C167D8(v1);
  }
  return nullsub_1;
}

double (*sub_1B6B1B9A8())(void)
{
  int64_t v1 = *v0;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unsigned char *v0 = v1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unsigned char *v0 = sub_1B6C1692C(v1);
  }
  return nullsub_1;
}

void sub_1B6B1BA20(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1B6BFB510(*(void *)(v3 + 40), v3, a1, a2, a3);
  sub_1B6BF16FC(*(void *)(v3 + 40), a1, a2, a3, 1, v3);
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
    vfx_counters.add(_:_:)(*(_DWORD *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 44), a3);
  }
  if (*(void *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
    vfx_counters.add(_:_:)(*(_DWORD *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager_counters + 48), -a3);
  }
  ++*(_DWORD *)(v3 + 116);
}

uint64_t sub_1B6B1BAEC(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if (*(unsigned char *)(v4 + 120) != (result & 1))
  {
    char v6 = result;
    if (a2 && *(void *)(v5 + 240) - *(void *)(v5 + 232) > a4)
    {
      return sub_1B6BF2AEC(a2, a3, a4, *(_DWORD *)(v5 + 24), result & 1, *(unsigned int *)(v5 + 28) | ((unint64_t)*(unsigned __int8 *)(v5 + 32) << 32), 0, 0);
    }
    else
    {
      uint64_t v7 = *(unsigned int *)(v5 + 188);
      int v8 = *(_DWORD *)(v5 + 24);
      swift_retain();
      sub_1B68E61E4(v7, v6 & 1, v8);
      unint64_t result = swift_release();
      *(unsigned char *)(v5 + 120) = v6 & 1;
    }
  }
  return result;
}

uint64_t sub_1B6B1BBCC(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  if (*(unsigned char *)(v3 + 120) != (result & 1))
  {
    char v5 = result;
    if ((a3 & 1) != 0 || (uint64_t)(*(void *)(v4 + 240) - *(void *)(v4 + 232)) < 2)
    {
      uint64_t v6 = *(unsigned int *)(v4 + 188);
      int v7 = *(_DWORD *)(v4 + 24);
      swift_retain();
      sub_1B68E61E4(v6, v5 & 1, v7);
      unint64_t result = swift_release();
      *(unsigned char *)(v4 + 120) = v5 & 1;
    }
    else
    {
      return sub_1B6BF2E48(a2, *(_DWORD *)(v4 + 24), result & 1, *(unsigned int *)(v4 + 28) | ((unint64_t)*(unsigned __int8 *)(v4 + 32) << 32), 0, 0, 0, 0);
    }
  }
  return result;
}

uint64_t sub_1B6B1BCA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TriggerScript(0);
  uint64_t v3 = sub_1B62C91B8(v2);
  uint64_t v4 = 0;
  if ((v5 & 1) == 0)
  {
    uint64_t v6 = *(void *)(v2 - 8);
    if (*(void *)(v6 + 64)) {
      uint64_t v7 = *(void *)(v6 + 72);
    }
    else {
      uint64_t v7 = 0;
    }
    return v3 + v7 * a1;
  }
  return v4;
}

uint64_t sub_1B6B1BD4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GraphScript(0);
  uint64_t v3 = sub_1B62C91B8(v2);
  uint64_t v4 = 0;
  if ((v5 & 1) == 0)
  {
    uint64_t v6 = *(void *)(v2 - 8);
    if (*(void *)(v6 + 64)) {
      uint64_t v7 = *(void *)(v6 + 72);
    }
    else {
      uint64_t v7 = 0;
    }
    return v3 + v7 * a1;
  }
  return v4;
}

uint64_t sub_1B6B1BDF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VFXObjectTag();
  uint64_t v3 = sub_1B62C91B8(v2);
  uint64_t v4 = 0;
  if ((v5 & 1) == 0)
  {
    uint64_t v6 = *(void *)(v2 - 8);
    if (*(void *)(v6 + 64)) {
      uint64_t v7 = *(void *)(v6 + 72);
    }
    else {
      uint64_t v7 = 0;
    }
    return v3 + v7 * a1;
  }
  return v4;
}

unint64_t sub_1B6B1BE94(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = a1;
  unint64_t v5 = HIDWORD(a1);
  unint64_t v7 = a1;
  (*(void (**)(unint64_t *))(a4 + 8))(&v7);
  if (v7 == v4 && HIDWORD(v7) == v5) {
    return 0;
  }
  else {
    return v7 | ((unint64_t)HIDWORD(v7) << 32);
  }
}

uint64_t sub_1B6B1BF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1B664D9F0(a1, a4);
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16);

  return v7(a4, a2, a3);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1B6B1BF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t *))(a4 + 8))(&v4);
}

uint64_t sub_1B6B1BFA4(unint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_1B62FF544(MEMORY[0x1E4FBC860]);
  type metadata accessor for RemapContext();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 24) = sub_1B62FF544(v8);
  unint64_t v11 = sub_1B67DD1D8(v8);
  swift_bridgeObjectRelease();
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v11;
  *(unsigned char *)(v10 + 16) = a3;
  sub_1B69DF07C(a1, v10);
  sub_1B6B1FB1C(v10, a2, 0x100000000uLL, 0, a4);
  if (*(void *)(*(void *)(v10 + 24) + 16)
    && (sub_1B62BE38C(a1), uint64_t v12 = *(void *)(v10 + 24), *(void *)(v12 + 16))
    && (uint64_t v13 = sub_1B62BE38C(a1), (v14 & 1) != 0))
  {
    unint64_t v15 = (unsigned int *)(*(void *)(v12 + 56) + 8 * v13);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    swift_release();
    uint64_t v18 = v17 << 32;
  }
  else
  {
    swift_release();
    uint64_t v18 = 0;
    uint64_t v16 = 0xFFFFFFFFLL;
  }
  return v18 | v16;
}

uint64_t sub_1B6B1C0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1B6E31118();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_1B6B1C140(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  if (!*(void *)(v3 + 16))
  {
    long long v7 = xmmword_1B6E4F270;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1B69FA8B4(a1);
  if ((v5 & 1) == 0)
  {
    long long v7 = xmmword_1B6E4F270;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1B664D9F0(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  if (v7 == __PAIR128__(1, 0))
  {
LABEL_7:
    sub_1B6649008(a1, (uint64_t)v10);
    sub_1B6B28984((uint64_t)&v7, (uint64_t)&qword_1E9DD5CE0, (uint64_t)&type metadata for VFXBridgeableReference, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62CA83C);
    goto LABEL_8;
  }
  sub_1B66490B8(a1);
  sub_1B6649008((uint64_t)&v7, (uint64_t)v10);
LABEL_8:
  sub_1B6649008((uint64_t)v10, a1);
  sub_1B664D9F0(a1, (uint64_t)v10);
  MEMORY[0x1BA9B8670](v10);
  sub_1B66490B8((uint64_t)v10);
  return swift_unknownObjectRelease();
}

uint64_t sub_1B6B1C278()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6B1C2BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B1C0D4(a1, a2);
}

uint64_t sub_1B6B1C2D4(uint64_t result, uint64_t a2)
{
  BOOL v3 = *(void *)result == -1 && HIDWORD(*(void *)result) == 0;
  if (!v3 && (*(void *)(v2 + 16) & ~a2) == 0)
  {
    uint64_t v12 = *(void *)result;
    uint64_t v4 = *(void *)(v2 + 24);
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 24) = v4;
    if ((result & 1) == 0)
    {
      unint64_t result = (uint64_t)sub_1B633F784(0, *(void *)(v4 + 16) + 1, 1, (char *)v4);
      uint64_t v4 = result;
      *(void *)(v2 + 24) = result;
    }
    unint64_t v5 = *(void *)(v4 + 16);
    unint64_t v6 = *(void *)(v4 + 24);
    unint64_t v7 = v5 + 1;
    uint64_t v8 = v12;
    if (v5 >= v6 >> 1)
    {
      unint64_t v11 = v5 + 1;
      uint64_t v9 = (char *)v4;
      unint64_t v10 = *(void *)(v4 + 16);
      unint64_t result = (uint64_t)sub_1B633F784(v6 > 1, v5 + 1, 1, v9);
      uint64_t v8 = v12;
      unint64_t v5 = v10;
      unint64_t v7 = v11;
      uint64_t v4 = result;
    }
    *(void *)(v4 + 16) = v7;
    *(void *)(v4 + 8 * v5 + 32) = v8;
    *(void *)(v2 + 24) = v4;
  }
  return result;
}

uint64_t sub_1B6B1C3B0()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6B1C3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  v49[1] = a5;
  uint64_t v50 = a4;
  uint64_t v12 = sub_1B6E31118();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14);
  long long v51 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63BDE98(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8, v17);
  uint64_t v19 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22.n128_f64[0] = MEMORY[0x1F4188790](v20, v21);
  uint64_t v24 = (char *)v49 - v23;
  uint64_t v25 = *(void *)(v6 + 32);
  uint64_t v26 = *(void *)(v25 + 16);
  uint64_t v52 = a2;
  if (!v26) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B62B2CE0(a2, a3);
  if ((v28 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
    v32(v24, 1, 1, v12, v22);
    goto LABEL_8;
  }
  v49[0] = a1;
  uint64_t v29 = *(void *)(*(void *)(v25 + 56) + 8 * v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v29 + 16) && (uint64_t v30 = sub_1B69FA874(v49[0]), (v31 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v24, *(void *)(v29 + 56) + *(void *)(v13 + 72) * v30, v12);
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v32)(v24, 0, 1, v12);
  }
  else
  {
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v32)(v24, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  int v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v24, 1, v12);
  a1 = v49[0];
  if (v48 != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a6, v24, v12);
  }
LABEL_8:
  uint64_t v33 = sub_1B6B28984((uint64_t)v24, (uint64_t)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63BDE98);
  v50(v33);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v35 = (uint64_t)v51;
  v34(v51, a1, v12);
  v34(v19, a6, v12);
  ((void (*)(char *, void, uint64_t, uint64_t))v32)(v19, 0, 1, v12);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v53 = *(void *)(v7 + 32);
  uint64_t v37 = v53;
  *(void *)(v7 + 32) = 0x8000000000000000;
  uint64_t v38 = v52;
  unint64_t v39 = sub_1B62B2CE0(v52, a3);
  char v41 = v40;
  uint64_t v42 = *(void *)(v37 + 16) + ((v40 & 1) == 0);
  if (*(void *)(v37 + 24) >= v42)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B6ACC3F4();
      uint64_t v37 = v53;
    }
  }
  else
  {
    sub_1B6AB6A54(v42, isUniquelyReferenced_nonNull_native);
    uint64_t v37 = v53;
    uint64_t v43 = sub_1B62B2CE0(v38, a3);
    if ((v41 & 1) != (v44 & 1))
    {
      uint64_t result = sub_1B6E33838();
      __break(1u);
      return result;
    }
    unint64_t v39 = v43;
  }
  *(void *)(v7 + 32) = v37;
  swift_bridgeObjectRelease();
  long long v45 = *(void **)(v7 + 32);
  swift_bridgeObjectRetain();
  if ((v41 & 1) == 0)
  {
    uint64_t v46 = sub_1B67E09F8(MEMORY[0x1E4FBC860]);
    sub_1B62B3510(v39, v38, a3, (uint64_t)v46, v45);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_1B6CE064C((uint64_t)v19, v35);
  return swift_bridgeObjectRelease();
}

void *sub_1B6B1C878@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1B67E09F8(MEMORY[0x1E4FBC860]);
  *a1 = result;
  return result;
}

uint64_t sub_1B6B1C8A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

double sub_1B6B1C8E8(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = sub_1B62BE38C(*a1);
    if (v6)
    {
      double result = *(double *)(*(void *)(v2 + 56) + 8 * v4);
      *(double *)a1 = result;
    }
  }
  return result;
}

uint64_t sub_1B6B1C930()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B1C98C()
{
  return sub_1B6E33958();
}

uint64_t sub_1B6B1C9C8()
{
  return sub_1B6E33988();
}

BOOL sub_1B6B1CA20(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 8) == *(void *)(a2 + 8);
}

uint64_t PrivateCommandQueue.deinit()
{
  ecs_stack_allocator_destroy(*(uint64_t **)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PrivateCommandQueue.__deallocating_deinit()
{
  ecs_stack_allocator_destroy(*(uint64_t **)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VFXBridgingRemapAndResolveContext()
{
  return self;
}

uint64_t type metadata accessor for CollectReferencesContext()
{
  return self;
}

uint64_t type metadata accessor for RemapContext()
{
  return self;
}

uint64_t method lookup function for PrivateCommandQueue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PrivateCommandQueue);
}

ValueMetadata *type metadata accessor for PrivateCommandQueue.Stats()
{
  return &type metadata for PrivateCommandQueue.Stats;
}

uint64_t assignWithCopy for PrivateCommandQueue.Operation(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    if ((v4 & 0xFFFFFFFE) == 2) {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 0u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 40) = 0;
        return a1;
      case 1u:
        *(_OWORD *)a1 = *a2;
        char v8 = 1;
        goto LABEL_15;
      case 2u:
        uint64_t v9 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v9;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v9 - 8))(a1, a2);
        char v8 = 2;
        goto LABEL_15;
      case 3u:
        uint64_t v10 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v10;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v10 - 8))(a1, a2);
        char v8 = 3;
        goto LABEL_15;
      case 4u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v8 = 4;
LABEL_15:
        *(unsigned char *)(a1 + 40) = v8;
        break;
      default:
        long long v6 = *a2;
        long long v7 = a2[1];
        *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
        *(_OWORD *)a1 = v6;
        *(_OWORD *)(a1 + 16) = v7;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for PrivateCommandQueue.Operation(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    if ((v4 & 0xFFFFFFFE) == 2) {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 0u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 40) = 0;
        return a1;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v7 = 1;
        goto LABEL_15;
      case 2u:
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v7 = 2;
        goto LABEL_15;
      case 3u:
        long long v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v7 = 3;
        goto LABEL_15;
      case 4u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v7 = 4;
LABEL_15:
        *(unsigned char *)(a1 + 40) = v7;
        break;
      default:
        long long v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivateCommandQueue.Operation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 6) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PrivateCommandQueue.Operation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)double result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)double result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B6B1CEA0(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 5) {
    return (*(_DWORD *)a1 + 5);
  }
  return result;
}

uint64_t sub_1B6B1CEBC(uint64_t result, unsigned int a2)
{
  if (a2 > 4)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PrivateCommandQueue.Operation()
{
  return &type metadata for PrivateCommandQueue.Operation;
}

ValueMetadata *type metadata accessor for CommandQueue.DirtyPropagation()
{
  return &type metadata for CommandQueue.DirtyPropagation;
}

ValueMetadata *type metadata accessor for ReferenceOptions()
{
  return &type metadata for ReferenceOptions;
}

uint64_t getEnumTagSinglePayload for CommandQueue(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandQueue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandQueue()
{
  return &type metadata for CommandQueue;
}

ValueMetadata *type metadata accessor for CommandQueue.IterationContext()
{
  return &type metadata for CommandQueue.IterationContext;
}

unint64_t sub_1B6B1CFBC()
{
  unint64_t result = qword_1E9DD5CB8;
  if (!qword_1E9DD5CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5CB8);
  }
  return result;
}

unint64_t sub_1B6B1D014()
{
  unint64_t result = qword_1E9DD5CC0;
  if (!qword_1E9DD5CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5CC0);
  }
  return result;
}

unint64_t sub_1B6B1D06C()
{
  unint64_t result = qword_1E9DD5CC8;
  if (!qword_1E9DD5CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5CC8);
  }
  return result;
}

unint64_t sub_1B6B1D0C4()
{
  unint64_t result = qword_1E9DD5CD0;
  if (!qword_1E9DD5CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5CD0);
  }
  return result;
}

unint64_t sub_1B6B1D11C()
{
  unint64_t result = qword_1EB97DE10;
  if (!qword_1EB97DE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DE10);
  }
  return result;
}

unint64_t sub_1B6B1D170(unint64_t result, unint64_t a2)
{
  if (a2 != 0xFFFFFFFF) {
    return sub_1B6398CA0(v2, result, a2);
  }
  return result;
}

uint64_t sub_1B6B1D1B4(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[29];
  uint64_t v7 = a2[30];
  swift_retain();
  if (v7 != v6)
  {
    uint64_t v166 = v7 - v6;
    uint64_t v167 = v6;
    uint64_t v176 = (uint64_t)a2;
    uint64_t v9 = *(void *)(v2 + 32);
    ecs_stack_allocator_push_snapshot(v9);
    uint64_t v168 = v9;
    uint64_t v164 = 8 * v7;
    uint64_t v10 = (unsigned int *)ecs_stack_allocator_allocate(v9, 8 * v7, 4);
    unint64_t v11 = v10;
    uint64_t v169 = v7;
    if (v7)
    {
      uint64_t v12 = v7;
      uint64_t v13 = v10;
      do
      {
        *((_WORD *)v13 + 2) = 256;
        *uint64_t v13 = 0;
        v13 += 2;
        --v12;
      }
      while (v12);
    }
    uint64_t v180 = v5;
    uint64_t v173 = *(void *)(a1 + 16);
    if (!v173)
    {
      uint64_t v165 = v7;
LABEL_93:
      if (v165)
      {
        uint64_t v81 = 0;
        uint64_t v82 = 0;
        uint64_t v83 = v166;
        uint64_t v84 = v169;
        do
        {
          long long v85 = (char *)&v11[2 * v81 + 1] + 1;
          while (1)
          {
            uint64_t v86 = v81 + 1;
            if (*v85 != 1) {
              break;
            }
            v85 += 8;
            ++v81;
            if (v165 == v86) {
              goto LABEL_103;
            }
          }
          ++v82;
        }
        while (v165 - 1 != v81++);
      }
      else
      {
        uint64_t v82 = 0;
        uint64_t v83 = v166;
        uint64_t v84 = v169;
      }
LABEL_103:
      char v88 = ecs_stack_allocator_allocate(v168, 24 * v82, 8);
      uint64_t v89 = v88;
      uint64_t v90 = 0;
      uint64_t v91 = v167;
LABEL_106:
      uint64_t v93 = &v11[2 * v91];
      if (*((unsigned char *)v93 + 5)) {
        goto LABEL_105;
      }
      uint64_t v94 = *((unsigned __int8 *)v93 + 4);
      uint64_t v95 = *v93;
      uint64_t v96 = v95 | (v94 << 32);
      if (!v90)
      {
LABEL_104:
        long long v92 = &v88[3 * v90];
        *(_DWORD *)long long v92 = v95;
        *((unsigned char *)v92 + 4) = BYTE4(v96) & 1;
        *(_OWORD *)(v92 + 1) = xmmword_1B6E4F270;
        ++v90;
        goto LABEL_105;
      }
      uint64_t v97 = v90;
      uint64_t v98 = v88 + 2;
      while (1)
      {
        if (*((unsigned char *)v98 - 12))
        {
          if ((v96 & 0x100000000) != 0) {
            goto LABEL_114;
          }
        }
        else if ((v96 & 0x100000000) == 0 && *((_DWORD *)v98 - 4) == v95)
        {
LABEL_114:
          ++*v98;
LABEL_105:
          if (++v91 != v84) {
            goto LABEL_106;
          }
          uint64_t v99 = v90 - 1;
          uint64_t v179 = v90;
          if (v90 != 1)
          {
            uint64_t v100 = v88[1];
            char v101 = v88 + 4;
            do
            {
              v100 += *(v101 - 2);
              void *v101 = v100;
              v101 += 3;
              --v99;
            }
            while (v99);
          }
          uint64_t v182 = ecs_stack_allocator_allocate(v168, 8 * v83, 8);
          memset(v182, 255, 8 * v83);
          uint64_t v102 = v167;
          do
          {
            long long v103 = &v11[2 * v102];
            if ((*((unsigned char *)v103 + 5) & 1) == 0 && v179)
            {
              uint64_t v104 = *v103;
              unint64_t v105 = v104 | ((unint64_t)*((unsigned __int8 *)v103 + 4) << 32);
              uint64_t v106 = v179;
              long long v107 = v89 + 1;
              do
              {
                if (*((unsigned char *)v107 - 4))
                {
                  if ((v105 & 0x100000000) != 0) {
                    goto LABEL_119;
                  }
                }
                else if ((v105 & 0x100000000) == 0 && *((_DWORD *)v107 - 2) == v104)
                {
LABEL_119:
                  v182[(*v107)++] = v102;
                  break;
                }
                v107 += 3;
                --v106;
              }
              while (v106);
            }
            ++v102;
          }
          while (v102 != v84);
          uint64_t v108 = ecs_stack_allocator_allocate(v168, 8 * v83, 8);
          uint64_t v109 = v89[2];
          long long v175 = v89;
          uint64_t v110 = 0;
          if (v179 != 1)
          {
            char v111 = v89 + 5;
            uint64_t v112 = 1;
            do
            {
              uint64_t v114 = *v111;
              v111 += 3;
              uint64_t v113 = v114;
              BOOL v115 = v109 <= v114;
              if (v109 < v114) {
                uint64_t v110 = v112;
              }
              uint64_t v116 = v112 + 1;
              if (v115) {
                uint64_t v109 = v113;
              }
              ++v112;
            }
            while (v179 != v116);
          }
          uint64_t v117 = *(void *)(v176 + 240) - (*(void *)(v176 + 232) + v82);
          if (v117 < v109)
          {
            int v118 = *(_DWORD *)(v176 + 24);
            uint64_t v119 = &v175[3 * v110];
            if (*((unsigned char *)v119 + 4))
            {
              int v120 = -1;
LABEL_143:
              uint64_t v121 = 0;
              uint64_t v122 = v167;
              char v123 = &v11[2 * v167];
              do
              {
                if ((*((unsigned char *)v123 + 5) & 1) != 0
                  || (uint64_t v124 = *v123,
                      ((v124 | ((unint64_t)*((unsigned __int8 *)v123 + 4) << 32)) & 0x100000000) != 0)
                  || v120 != v124)
                {
                  v108[v121++] = v122;
                }
                ++v122;
                v123 += 2;
              }
              while (v169 != v122);
              uint64_t v132 = v167;
              long long v133 = (char *)&v11[2 * v167 + 1] + 1;
              uint64_t v128 = v180;
              uint64_t v129 = v169;
              uint64_t v131 = v175;
              do
              {
                if (*v133) {
                  v182[v82++] = v132;
                }
                ++v132;
                v133 += 8;
              }
              while (v169 != v132);
              *(_DWORD *)uint64_t v119 = v118;
              *((unsigned char *)v119 + 4) = 0;
              v134 = &v175[3 * v110];
              v134[1] = v82;
              v134[2] = v117;
              size_t v130 = v164;
LABEL_159:
              char v135 = ecs_stack_allocator_allocate(v168, v130, 8);
              uint64_t v136 = v135;
              if (v129) {
                bzero(v135, v130);
              }
              uint64_t v137 = v179;
              if (!v179)
              {
LABEL_194:
                ecs_stack_allocator_pop_snapshot(v168);
                return swift_release();
              }
              uint64_t v138 = 0;
              uint64_t v170 = v128 + 48;
              uint64_t v172 = v128 + 44;
              uint64_t v139 = v167;
              while (2)
              {
                long long v140 = &v131[3 * v138];
                uint64_t v141 = v140[2];
                if (v141 >= 1)
                {
                  signed int v142 = *(_DWORD *)v140;
                  int v143 = *((unsigned __int8 *)v140 + 4);
                  uint64_t v144 = v131[3 * v138 + 1];
                  uint64_t v145 = 8 * v141;
                  float32x4_t v146 = ecs_stack_allocator_allocate(v168, 8 * v141, 8);
                  memset(v146, 255, 8 * v141);
                  if (v139 == v167)
                  {
                    if ((unint64_t)v141 < 0xA || (unint64_t)v146 + v145 - (void)&v182[v144] < 0x20)
                    {
                      uint64_t v147 = 0;
                      goto LABEL_169;
                    }
                    uint64_t v147 = v141 & 0x7FFFFFFFFFFFFFFCLL;
                    float32x4_t v160 = (long long *)((char *)v182 + 8 * v144 - v145 + 16);
                    float32x4_t v161 = v146 + 2;
                    unint64_t v162 = v141 & 0xFFFFFFFFFFFFFFFCLL;
                    do
                    {
                      long long v163 = *v160;
                      *(v161 - 1) = *(v160 - 1);
                      *float32x4_t v161 = v163;
                      v160 += 2;
                      v161 += 2;
                      v162 -= 4;
                    }
                    while (v162);
                    if (v141 != v147)
                    {
LABEL_169:
                      uint64_t v148 = v147 - v141;
                      long long v149 = &v146[v147];
                      do
                      {
                        *v149++ = v182[v144 + v148];
                        BOOL v150 = __CFADD__(v148++, 1);
                      }
                      while (!v150);
                    }
                  }
                  else
                  {
                    uint64_t v151 = -v141;
                    unint64_t v152 = v146;
                    do
                    {
                      *v152++ = v136[v182[v144 + v151]];
                      BOOL v150 = __CFADD__(v151++, 1);
                    }
                    while (!v150);
                  }
                  if (v143)
                  {
                    sub_1B6BFB510(*(void *)(v176 + 40), v176, v146, v141, v141);
                    sub_1B6BF16FC(*(void *)(v176 + 40), v146, v141, v141, 1, v176);
                    if (*(void *)(v180 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
                      vfx_counters.add(_:_:)(*(_DWORD *)(v172 + OBJC_IVAR____TtC3VFX13EntityManager_counters), v141);
                    }
                    uint64_t v153 = v166;
                    if (*(void *)(v180 + OBJC_IVAR____TtC3VFX13EntityManager_counters)) {
                      vfx_counters.add(_:_:)(*(_DWORD *)(v170 + OBJC_IVAR____TtC3VFX13EntityManager_counters), -v141);
                    }
                    ++*(_DWORD *)(v176 + 116);
                  }
                  else
                  {
                    int v154 = *(unsigned __int8 *)(v176 + 120);
                    uint64_t v155 = *(unsigned int *)(v176 + 28);
                    v197[0] = *(unsigned char *)(v176 + 32);
                    sub_1B6BF2AEC(v146, v141, v141, v142, v154, v155 | ((unint64_t)v197[0] << 32), 0, 0);
                    uint64_t v153 = v166;
                  }
                  uint64_t v137 = v179;
                  uint64_t v156 = -v141;
                  do
                  {
                    v136[v182[v144 + v156]] = -1;
                    BOOL v150 = __CFADD__(v156++, 1);
                  }
                  while (!v150);
                  uint64_t v157 = 0;
                  v139 += v141;
                  float v158 = &v136[v167];
                  uint64_t v131 = v175;
                  uint64_t v159 = v153;
                  do
                  {
                    if (*v158 != -1)
                    {
                      *float v158 = v157 + v139;
                      ++v157;
                    }
                    ++v158;
                    --v159;
                  }
                  while (v159);
                }
                if (++v138 == v137) {
                  goto LABEL_194;
                }
                continue;
              }
            }
            int v120 = *(_DWORD *)v119;
            if (sub_1B63B4340(*(_DWORD *)v119))
            {
              sub_1B66603E4(v120);
              goto LABEL_143;
            }
          }
          uint64_t v125 = 0;
          uint64_t v126 = v167;
          uint64_t v127 = (char *)&v11[2 * v167 + 1] + 1;
          uint64_t v128 = v180;
          uint64_t v129 = v169;
          size_t v130 = v164;
          uint64_t v131 = v175;
          do
          {
            if ((*v127 & 1) == 0) {
              v108[v125++] = v126;
            }
            ++v126;
            v127 += 8;
          }
          while (v169 != v126);
          goto LABEL_159;
        }
        v98 += 3;
        if (!--v97) {
          goto LABEL_104;
        }
      }
    }
    uint64_t v14 = 0;
    uint64_t v171 = a1 + 32;
    uint64_t v165 = v7;
    float32x4_t v181 = v10;
    while (2)
    {
      uint64_t v15 = (void *)(v171 + 72 * v14++);
      sub_1B639192C((uint64_t)v15, (uint64_t)v197);
      uint64_t v17 = (uint64_t *)v15[6];
      uint64_t v16 = v15[7];
      uint64_t v18 = v15[8];
      uint64_t v198 = v17;
      uint64_t v199 = v16;
      uint64_t v200 = v18;
      sub_1B639192C((uint64_t)v197, (uint64_t)v195);
      switch(v196)
      {
        case 1:
          uint64_t v174 = v14;
          long long v27 = v195[0];
          int v178 = *(_DWORD *)(v176 + 24);
          if (v17)
          {
            if (!v18) {
              goto LABEL_10;
            }
            while (1)
            {
              uint64_t v31 = *v17++;
              uint64_t v32 = &v11[2 * v31];
              if (*((unsigned char *)v32 + 5))
              {
                uint64_t v185 = 0;
                long long v183 = 0u;
                long long v184 = 0u;
                uint64_t v194 = 0;
                long long v192 = 0u;
                long long v193 = 0u;
                LODWORD(v28) = v178;
              }
              else
              {
                unint64_t v28 = *v32 | ((unint64_t)*((unsigned __int8 *)v32 + 4) << 32);
                if ((v28 & 0x100000000) != 0) {
                  goto LABEL_28;
                }
                uint64_t v185 = 0;
                long long v183 = 0u;
                long long v184 = 0u;
                uint64_t v194 = 0;
                long long v192 = 0u;
                long long v193 = 0u;
              }
              unsigned int v29 = sub_1B637F628(v28, 0, 0, v27, *((uint64_t *)&v27 + 1), (uint64_t)&v183, (uint64_t)&v192);
              uint64_t v30 = MEMORY[0x1E4FBB718];
              sub_1B6B28984((uint64_t)&v192, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63BDE98);
              sub_1B6B28984((uint64_t)&v183, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, v30, (uint64_t (*)(void))sub_1B63BDE98);
              *uint64_t v32 = v29;
              *((_WORD *)v32 + 2) = 0;
              unint64_t v11 = v181;
LABEL_28:
              if (!--v18) {
                goto LABEL_10;
              }
            }
          }
          uint64_t v64 = *(void *)(v176 + 232);
          uint64_t v65 = *(void *)(v176 + 240);
          uint64_t v66 = v65 - v64;
          if (v65 == v64) {
            goto LABEL_10;
          }
          uint64_t v67 = v11;
          while (1)
          {
            if (*((unsigned char *)v67 + 5))
            {
              uint64_t v185 = 0;
              long long v183 = 0u;
              long long v184 = 0u;
              uint64_t v194 = 0;
              long long v192 = 0u;
              long long v193 = 0u;
              LODWORD(v68) = v178;
            }
            else
            {
              unint64_t v68 = *v67 | ((unint64_t)*((unsigned __int8 *)v67 + 4) << 32);
              if ((v68 & 0x100000000) != 0) {
                goto LABEL_74;
              }
              uint64_t v185 = 0;
              long long v183 = 0u;
              long long v184 = 0u;
              uint64_t v194 = 0;
              long long v192 = 0u;
              long long v193 = 0u;
            }
            unsigned int v69 = sub_1B637F628(v68, 0, 0, v27, *((uint64_t *)&v27 + 1), (uint64_t)&v183, (uint64_t)&v192);
            uint64_t v70 = MEMORY[0x1E4FBB718];
            sub_1B6B28984((uint64_t)&v192, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63BDE98);
            sub_1B6B28984((uint64_t)&v183, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, v70, (uint64_t (*)(void))sub_1B63BDE98);
            *uint64_t v67 = v69;
            *((_WORD *)v67 + 2) = 0;
LABEL_74:
            v67 += 2;
            if (!--v66) {
              goto LABEL_10;
            }
          }
        case 2:
          uint64_t v174 = v14;
          sub_1B62C15C4(v195, (uint64_t)&v183);
          int v33 = *(_DWORD *)(v176 + 24);
          if (v17)
          {
            if (!v18) {
              goto LABEL_79;
            }
            while (1)
            {
              uint64_t v37 = *v17++;
              uint64_t v38 = &v11[2 * v37];
              if (*((unsigned char *)v38 + 5))
              {
                sub_1B62C1550((uint64_t)&v183, (uint64_t)&v192);
                uint64_t v191 = 0;
                long long v189 = 0u;
                long long v190 = 0u;
                int v34 = v33;
              }
              else
              {
                unint64_t v39 = *v38 | ((unint64_t)*((unsigned __int8 *)v38 + 4) << 32);
                if ((v39 & 0x100000000) != 0) {
                  goto LABEL_37;
                }
                sub_1B62C1550((uint64_t)&v183, (uint64_t)&v192);
                uint64_t v191 = 0;
                long long v189 = 0u;
                long long v190 = 0u;
                int v34 = v39;
              }
              unsigned int v35 = sub_1B637F628(v34, 0, 0, 0, 0, (uint64_t)&v192, (uint64_t)&v189);
              uint64_t v36 = MEMORY[0x1E4FBB718];
              sub_1B6B28984((uint64_t)&v189, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63BDE98);
              unint64_t v11 = v181;
              sub_1B6B28984((uint64_t)&v192, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, v36, (uint64_t (*)(void))sub_1B63BDE98);
              *uint64_t v38 = v35;
              *((_WORD *)v38 + 2) = 0;
LABEL_37:
              if (!--v18) {
                goto LABEL_79;
              }
            }
          }
          uint64_t v49 = *(void *)(v176 + 232);
          uint64_t v50 = *(void *)(v176 + 240);
          uint64_t v51 = v50 - v49;
          if (v50 == v49) {
            goto LABEL_79;
          }
          uint64_t v52 = v11;
          while (1)
          {
            if (*((unsigned char *)v52 + 5))
            {
              sub_1B62C1550((uint64_t)&v183, (uint64_t)&v192);
              uint64_t v191 = 0;
              long long v189 = 0u;
              long long v190 = 0u;
              int v53 = v33;
            }
            else
            {
              unint64_t v56 = *v52 | ((unint64_t)*((unsigned __int8 *)v52 + 4) << 32);
              if ((v56 & 0x100000000) != 0) {
                goto LABEL_58;
              }
              sub_1B62C1550((uint64_t)&v183, (uint64_t)&v192);
              uint64_t v191 = 0;
              long long v189 = 0u;
              long long v190 = 0u;
              int v53 = v56;
            }
            unsigned int v54 = sub_1B637F628(v53, 0, 0, 0, 0, (uint64_t)&v192, (uint64_t)&v189);
            uint64_t v55 = MEMORY[0x1E4FBB718];
            sub_1B6B28984((uint64_t)&v189, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63BDE98);
            sub_1B6B28984((uint64_t)&v192, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, v55, (uint64_t (*)(void))sub_1B63BDE98);
            *uint64_t v52 = v54;
            *((_WORD *)v52 + 2) = 0;
            unint64_t v11 = v181;
LABEL_58:
            v52 += 2;
            if (!--v51) {
              goto LABEL_79;
            }
          }
        case 3:
          uint64_t v174 = v14;
          sub_1B62C15C4(v195, (uint64_t)&v183);
          int v40 = *(_DWORD *)(v176 + 24);
          if (v17)
          {
            if (!v18) {
              goto LABEL_79;
            }
            while (1)
            {
              uint64_t v44 = *v17++;
              long long v45 = &v11[2 * v44];
              if (*((unsigned char *)v45 + 5))
              {
                uint64_t v194 = 0;
                long long v192 = 0u;
                long long v193 = 0u;
                sub_1B62C1550((uint64_t)&v183, (uint64_t)&v189);
                int v41 = v40;
              }
              else
              {
                unint64_t v46 = *v45 | ((unint64_t)*((unsigned __int8 *)v45 + 4) << 32);
                if ((v46 & 0x100000000) != 0) {
                  goto LABEL_46;
                }
                uint64_t v194 = 0;
                long long v192 = 0u;
                long long v193 = 0u;
                sub_1B62C1550((uint64_t)&v183, (uint64_t)&v189);
                int v41 = v46;
              }
              unsigned int v42 = sub_1B637F628(v41, 0, 0, 0, 0, (uint64_t)&v192, (uint64_t)&v189);
              uint64_t v43 = MEMORY[0x1E4FBB718];
              sub_1B6B28984((uint64_t)&v189, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63BDE98);
              sub_1B6B28984((uint64_t)&v192, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, v43, (uint64_t (*)(void))sub_1B63BDE98);
              *long long v45 = v42;
              *((_WORD *)v45 + 2) = 0;
              unint64_t v11 = v181;
LABEL_46:
              if (!--v18) {
                goto LABEL_79;
              }
            }
          }
          uint64_t v71 = *(void *)(v176 + 232);
          uint64_t v72 = *(void *)(v176 + 240);
          uint64_t v73 = v72 - v71;
          if (v72 != v71)
          {
            uint64_t v76 = v11;
            do
            {
              if (*((unsigned char *)v76 + 5))
              {
                uint64_t v194 = 0;
                long long v192 = 0u;
                long long v193 = 0u;
                sub_1B62C1550((uint64_t)&v183, (uint64_t)&v189);
                int v77 = v40;
              }
              else
              {
                unint64_t v80 = *v76 | ((unint64_t)*((unsigned __int8 *)v76 + 4) << 32);
                if ((v80 & 0x100000000) != 0) {
                  goto LABEL_88;
                }
                uint64_t v194 = 0;
                long long v192 = 0u;
                long long v193 = 0u;
                sub_1B62C1550((uint64_t)&v183, (uint64_t)&v189);
                int v77 = v80;
              }
              unsigned int v78 = sub_1B637F628(v77, 0, 0, 0, 0, (uint64_t)&v192, (uint64_t)&v189);
              uint64_t v79 = MEMORY[0x1E4FBB718];
              sub_1B6B28984((uint64_t)&v189, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63BDE98);
              unint64_t v11 = v181;
              sub_1B6B28984((uint64_t)&v192, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, v79, (uint64_t (*)(void))sub_1B63BDE98);
              *uint64_t v76 = v78;
              *((_WORD *)v76 + 2) = 0;
LABEL_88:
              v76 += 2;
              --v73;
            }
            while (v73);
          }
LABEL_79:
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v183);
          sub_1B63B28BC((uint64_t)v197, (uint64_t (*)(void))sub_1B63B29DC);
LABEL_11:
          uint64_t v14 = v174;
LABEL_12:
          if (v14 == v173) {
            goto LABEL_93;
          }
          continue;
        case 4:
          goto LABEL_84;
        case 5:
          sub_1B639192C((uint64_t)v197, (uint64_t)&v183);
          uint64_t v186 = v17;
          uint64_t v187 = v16;
          uint64_t v188 = v18;
          if (v17)
          {
            sub_1B6391400((uint64_t)&v183);
            for (; v18; --v18)
            {
              uint64_t v47 = *v17++;
              int v48 = &v11[2 * v47];
              *int v48 = 0;
              *((_WORD *)v48 + 2) = 1;
            }
          }
          else
          {
            sub_1B6391400((uint64_t)&v183);
            uint64_t v74 = v169;
            if (v169)
            {
              uint64_t v75 = &v11[2 * v165];
              do
              {
                *((_WORD *)v75 + 2) = 1;
                *uint64_t v75 = 0;
                v75 += 2;
                --v74;
              }
              while (v74);
            }
            v165 += v169;
          }
LABEL_84:
          sub_1B63B28BC((uint64_t)v197, (uint64_t (*)(void))sub_1B63B29DC);
          goto LABEL_12;
        default:
          uint64_t v174 = v14;
          long long v19 = v195[0];
          int v177 = *(_DWORD *)(v176 + 24);
          if (v17)
          {
            if (!v18) {
              goto LABEL_10;
            }
            while (1)
            {
              uint64_t v23 = *v17++;
              uint64_t v24 = &v11[2 * v23];
              if (*((unsigned char *)v24 + 5))
              {
                uint64_t v185 = 0;
                long long v183 = 0u;
                long long v184 = 0u;
                uint64_t v194 = 0;
                long long v192 = 0u;
                long long v193 = 0u;
                unsigned int v20 = sub_1B637F628(v177, v19, *((uint64_t *)&v19 + 1), 0, 0, (uint64_t)&v183, (uint64_t)&v192);
                uint64_t v21 = MEMORY[0x1E4FBB718];
                sub_1B6B28984((uint64_t)&v192, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63BDE98);
                uint64_t v22 = v21;
              }
              else
              {
                unint64_t v25 = *v24 | ((unint64_t)*((unsigned __int8 *)v24 + 4) << 32);
                if ((v25 & 0x100000000) != 0) {
                  goto LABEL_19;
                }
                uint64_t v185 = 0;
                long long v183 = 0u;
                long long v184 = 0u;
                uint64_t v194 = 0;
                long long v192 = 0u;
                long long v193 = 0u;
                unsigned int v20 = sub_1B637F628(v25, v19, *((uint64_t *)&v19 + 1), 0, 0, (uint64_t)&v183, (uint64_t)&v192);
                uint64_t v26 = MEMORY[0x1E4FBB718];
                sub_1B6B28984((uint64_t)&v192, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63BDE98);
                uint64_t v22 = v26;
              }
              sub_1B6B28984((uint64_t)&v183, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, v22, (uint64_t (*)(void))sub_1B63BDE98);
              *uint64_t v24 = v20;
              *((_WORD *)v24 + 2) = 0;
              unint64_t v11 = v181;
LABEL_19:
              if (!--v18) {
                goto LABEL_10;
              }
            }
          }
          uint64_t v57 = *(void *)(v176 + 232);
          uint64_t v58 = *(void *)(v176 + 240);
          uint64_t v59 = v58 - v57;
          if (v58 == v57)
          {
LABEL_10:
            sub_1B63B28BC((uint64_t)v197, (uint64_t (*)(void))sub_1B63B29DC);
            goto LABEL_11;
          }
          uint64_t v60 = v11;
          break;
      }
      break;
    }
    while (1)
    {
      if (*((unsigned char *)v60 + 5))
      {
        uint64_t v185 = 0;
        long long v183 = 0u;
        long long v184 = 0u;
        uint64_t v194 = 0;
        long long v192 = 0u;
        long long v193 = 0u;
        LODWORD(v61) = v177;
      }
      else
      {
        unint64_t v61 = *v60 | ((unint64_t)*((unsigned __int8 *)v60 + 4) << 32);
        if ((v61 & 0x100000000) != 0) {
          goto LABEL_66;
        }
        uint64_t v185 = 0;
        long long v183 = 0u;
        long long v184 = 0u;
        uint64_t v194 = 0;
        long long v192 = 0u;
        long long v193 = 0u;
      }
      unsigned int v62 = sub_1B637F628(v61, v19, *((uint64_t *)&v19 + 1), 0, 0, (uint64_t)&v183, (uint64_t)&v192);
      uint64_t v63 = MEMORY[0x1E4FBB718];
      sub_1B6B28984((uint64_t)&v192, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B63BDE98);
      sub_1B6B28984((uint64_t)&v183, (uint64_t)&qword_1EB97E850, (uint64_t)sub_1B63B8BE4, v63, (uint64_t (*)(void))sub_1B63BDE98);
      *uint64_t v60 = v62;
      *((_WORD *)v60 + 2) = 0;
LABEL_66:
      v60 += 2;
      if (!--v59) {
        goto LABEL_10;
      }
    }
  }

  return swift_release();
}

__n128 sub_1B6B1E458(void **a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (!a2)
  {
    sub_1B639192C(a5, (uint64_t)v23);
    *(void *)&long long v24 = 0;
    *((void *)&v24 + 1) = a3;
LABEL_13:
    uint64_t v25 = a4;
    goto LABEL_14;
  }
  if (a4 <= 0) {
    return result;
  }
  if (*(void *)(a6 + 240) - *(void *)(a6 + 232) != a4)
  {
    if (a7)
    {
      uint64_t v12 = 8 * a4;
      swift_retain();
      uint64_t v13 = (char *)sub_1B62FC4C8(8 * a4, 8);
      if (&v13[v12] > a2 && &a2[v12] > v13)
      {
        sub_1B6E32C88();
        __break(1u);
        JUMPOUT(0x1B6B1E640);
      }
      uint64_t v15 = v13;
      memcpy(v13, a2, 8 * a4);
      swift_release();
      sub_1B639192C(a5, (uint64_t)v23);
      *(void *)&long long v24 = v15;
      *((void *)&v24 + 1) = a4;
    }
    else
    {
      sub_1B639192C(a5, (uint64_t)v23);
      *(void *)&long long v24 = a2;
      *((void *)&v24 + 1) = a3;
    }
    goto LABEL_13;
  }
  sub_1B639192C(a5, (uint64_t)v23);
  uint64_t v25 = 0;
  long long v24 = 0uLL;
LABEL_14:
  uint64_t v16 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = sub_1B68C0C6C(0, v16[2] + 1, 1, v16);
  }
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    uint64_t v16 = sub_1B68C0C6C(v17 > 1, v18 + 1, 1, v16);
  }
  v16[2] = v18 + 1;
  long long v19 = &v16[9 * v18];
  *((_OWORD *)v19 + 2) = v23[0];
  __n128 result = (__n128)v23[1];
  long long v21 = v23[2];
  long long v22 = v24;
  v19[12] = v25;
  *((_OWORD *)v19 + 4) = v21;
  *((_OWORD *)v19 + 5) = v22;
  *((__n128 *)v19 + 3) = result;
  *a1 = v16;
  return result;
}

uint64_t sub_1B6B1E658(uint64_t a1, uint64_t a2)
{
  return sub_1B6B22660(a1, a2) & 1;
}

uint64_t sub_1B6B1E684(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v11 = swift_getKeyPath();
  sub_1B62F06B8(v11, 1);
  swift_release();
  swift_release();
  signed int v12 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v13 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v13 = sub_1B69E07A0();
    swift_release();
  }
  int v18 = -1;
  uint64_t v14 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v12, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v14, &v17, v13, &v18, a1, a5, v12, SHIWORD(v12), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v15 = type metadata accessor for GraphScript(0);
  swift_retain();
  sub_1B62C91B8(v15);
  swift_release();
  return v13;
}

uint64_t sub_1B6B1E830(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v11 = swift_getKeyPath();
  sub_1B62F06B8(v11, 1);
  swift_release();
  swift_release();
  signed int v12 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v13 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v13 = sub_1B69E07A0();
    swift_release();
  }
  int v17 = -1;
  uint64_t v14 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v12, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v14, &v16, v13, &v17, a1, a5, v12, SHIWORD(v12), a3 & 1);
  swift_release();
  swift_release();
  swift_retain();
  sub_1B62C91B8((uint64_t)&type metadata for IBLRuntime);
  swift_release();
  return v13;
}

uint64_t sub_1B6B1E9D4(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, long long *a6, int a7, __n128 a8, __n128 a9, __n128 a10, __n128 a11)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v17 = swift_getKeyPath();
  sub_1B62F06B8(v17, 1);
  swift_release();
  swift_release();
  signed int v18 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v19 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v19 = sub_1B69E07A0();
    swift_release();
  }
  int v30 = -1;
  *(_OWORD *)unsigned int v29 = 0uLL;
  uint64_t v20 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v18, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v20, v29, v19, &v30, a1, a5, v18, SHIWORD(v18), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v21 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v30 + 32);
  v31[0] = *(void *)(a5 + 16);
  v31[1] = v21;
  v31[2] = a5;
  long long v32 = xmmword_1B6E4F270;
  uint64_t v33 = 1;
  long long v34 = *(_OWORD *)v29;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  char v37 = 1;
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  swift_retain();
  sub_1B6D7EBEC((uint64_t)v31, a6, a7, a8, a9, a10, a11);
  swift_release();
  return v19;
}

uint64_t sub_1B6B1EBC8(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, long long *a6, int a7)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v13 = swift_getKeyPath();
  sub_1B62F06B8(v13, 1);
  swift_release();
  swift_release();
  signed int v14 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v15 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v15 = sub_1B69E07A0();
    swift_release();
  }
  int v22 = -1;
  *(_OWORD *)uint64_t v21 = 0uLL;
  uint64_t v16 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v14, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v16, v21, v15, &v22, a1, a5, v14, SHIWORD(v14), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v17 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v22 + 32);
  v23[0] = *(void *)(a5 + 16);
  v23[1] = v17;
  v23[2] = a5;
  long long v24 = xmmword_1B6E4F270;
  uint64_t v25 = 1;
  long long v26 = *(_OWORD *)v21;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  char v29 = 1;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  swift_retain();
  sub_1B6D7E7B8((uint64_t)v23, a6, a7);
  swift_release();
  return v15;
}

uint64_t sub_1B6B1EDAC(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, __n128 a6, __n128 a7, float a8)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v15 = swift_getKeyPath();
  sub_1B62F06B8(v15, 1);
  swift_release();
  swift_release();
  signed int v16 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v17 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v17 = sub_1B69E07A0();
    swift_release();
  }
  int v24 = -1;
  *(_OWORD *)uint64_t v23 = 0uLL;
  uint64_t v18 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v16, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v18, v23, v17, &v24, a1, a5, v16, SHIWORD(v16), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v19 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v24 + 32);
  v25[0] = *(void *)(a5 + 16);
  v25[1] = v19;
  void v25[2] = a5;
  long long v26 = xmmword_1B6E4F270;
  uint64_t v27 = 1;
  long long v28 = *(_OWORD *)v23;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  char v31 = 1;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  swift_retain();
  sub_1B6D7E9EC((uint64_t)v25, a6, a7, a8);
  swift_release();
  return v17;
}

uint64_t sub_1B6B1EF9C(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5)
{
  return sub_1B6B1F75C(a1, a2, a3, a4, a5, (void (*)(void *))sub_1B6D7EAE4);
}

uint64_t sub_1B6B1EFC8(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v11 = swift_getKeyPath();
  sub_1B62F06B8(v11, 1);
  swift_release();
  swift_release();
  signed int v12 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v13 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v13 = sub_1B69E07A0();
    swift_release();
  }
  int v18 = -1;
  v17[0] = 0;
  v17[1] = 0;
  uint64_t v14 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v12, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v14, v17, v13, &v18, a1, a5, v12, SHIWORD(v12), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v15 = v17[0];
  swift_retain();
  sub_1B62C91B8((uint64_t)&type metadata for VFXTag);
  sub_1B6B1BDF0(v15);
  sub_1B62C91B8((uint64_t)&type metadata for WorldTransform);
  swift_release();
  return v13;
}

uint64_t sub_1B6B1F194(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5)
{
  return sub_1B6B1F75C(a1, a2, a3, a4, a5, (void (*)(void *))sub_1B6D7ED54);
}

uint64_t sub_1B6B1F1C0(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8, __n128 a9, float32x4_t a10)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v16 = swift_getKeyPath();
  sub_1B62F06B8(v16, 1);
  swift_release();
  swift_release();
  signed int v17 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v18 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v18 = sub_1B69E07A0();
    swift_release();
  }
  int v28 = -1;
  *(_OWORD *)uint64_t v27 = 0uLL;
  uint64_t v19 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v17, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v19, v27, v18, &v28, a1, a5, v17, SHIWORD(v17), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v20 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v28 + 32);
  v29[0] = *(void *)(a5 + 16);
  v29[1] = v20;
  v29[2] = a5;
  long long v30 = xmmword_1B6E4F270;
  uint64_t v31 = 1;
  long long v32 = *(_OWORD *)v27;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  char v35 = 1;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  swift_retain();
  sub_1B6D7EE0C((uint64_t)v29, a6, a7, a8, a9, a10);
  swift_release();
  return v18;
}

uint64_t sub_1B6B1F3B0(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5)
{
  return sub_1B6B1F75C(a1, a2, a3, a4, a5, (void (*)(void *))sub_1B6D7E720);
}

uint64_t sub_1B6B1F3DC(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, long long *a6, __n128 a7, __n128 a8, __n128 a9, __n128 a10)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v16 = swift_getKeyPath();
  sub_1B62F06B8(v16, 1);
  swift_release();
  swift_release();
  signed int v17 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v18 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v18 = sub_1B69E07A0();
    swift_release();
  }
  int v28 = -1;
  *(_OWORD *)uint64_t v27 = 0uLL;
  uint64_t v19 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v17, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v19, v27, v18, &v28, a1, a5, v17, SHIWORD(v17), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v20 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v28 + 32);
  v29[0] = *(void *)(a5 + 16);
  v29[1] = v20;
  v29[2] = a5;
  long long v30 = xmmword_1B6E4F270;
  uint64_t v31 = 1;
  long long v32 = *(_OWORD *)v27;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  char v35 = 1;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  swift_retain();
  sub_1B6D7E8B8((uint64_t)v29, a6, a7, a8, a9, a10);
  swift_release();
  return v18;
}

uint64_t sub_1B6B1F5C8(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v11 = swift_getKeyPath();
  sub_1B62F06B8(v11, 1);
  swift_release();
  swift_release();
  signed int v12 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v13 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v13 = sub_1B69E07A0();
    swift_release();
  }
  int v17 = -1;
  uint64_t v14 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v12, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v14, &v16, v13, &v17, a1, a5, v12, SHIWORD(v12), a3 & 1);
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_1B6B1F730(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5)
{
  return sub_1B6B1F75C(a1, a2, a3, a4, a5, (void (*)(void *))sub_1B6D7F204);
}

uint64_t sub_1B6B1F75C(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, void (*a6)(void *))
{
  long long v30 = a6;
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v12 = swift_getKeyPath();
  sub_1B62F06B8(v12, 1);
  swift_release();
  swift_release();
  signed int v13 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v14 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v14 = sub_1B69E07A0();
    swift_release();
  }
  int v19 = -1;
  *(_OWORD *)uint64_t v18 = 0uLL;
  uint64_t v15 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v13, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v15, v18, v14, &v19, a1, a5, v13, SHIWORD(v13), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v16 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v19 + 32);
  v20[0] = *(void *)(a5 + 16);
  v20[1] = v16;
  v20[2] = a5;
  long long v21 = xmmword_1B6E4F270;
  uint64_t v22 = 1;
  long long v23 = *(_OWORD *)v18;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  char v26 = 1;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  swift_retain();
  v30(v20);
  swift_release();
  return v14;
}

uint64_t sub_1B6B1F93C(uint64_t a1, char a2, char a3, unint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t a7)
{
  uint64_t v31 = a5;
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v13 = swift_getKeyPath();
  sub_1B62F06B8(v13, 1);
  swift_release();
  swift_release();
  signed int v14 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v15 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v15 = sub_1B69E07A0();
    swift_release();
  }
  int v20 = -1;
  *(_OWORD *)int v19 = 0uLL;
  uint64_t v16 = *(void *)(a7 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v14, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v16, v19, v15, &v20, a1, a7, v14, SHIWORD(v14), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v17 = *(void *)(*(void *)(*(void *)(a7 + 16) + 136) + 8 * v20 + 32);
  v21[0] = *(void *)(a7 + 16);
  v21[1] = v17;
  void v21[2] = a7;
  long long v22 = xmmword_1B6E4F270;
  uint64_t v23 = 1;
  long long v24 = *(_OWORD *)v19;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  char v27 = 1;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  swift_retain();
  v31(v21);
  swift_release();
  return v15;
}

uint64_t sub_1B6B1FB1C(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6 = *(void **)(a5 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v146 = v7 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v7 + 64);
  uint64_t v149 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
  uint64_t v11 = (void *)(a2 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v12 = (char *)v6 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  unint64_t v13 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v148 = a3;
  swift_retain();
  uint64_t v152 = v7;
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  int64_t v147 = v13;
  unint64_t v145 = v13 - 5;
  uint64_t v170 = v6;
  int v154 = v11;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      uint64_t v20 = (v10 - 1) & v10;
      unint64_t v21 = v19 | (v14 << 6);
    }
    else
    {
      uint64_t v22 = v14 + 1;
      if (v14 + 1 >= v147) {
        goto LABEL_48;
      }
      unint64_t v23 = *(void *)(v146 + 8 * v22);
      if (!v23)
      {
        uint64_t v22 = v14 + 2;
        if (v14 + 2 >= v147) {
          goto LABEL_48;
        }
        unint64_t v23 = *(void *)(v146 + 8 * v22);
        if (!v23)
        {
          uint64_t v22 = v14 + 3;
          if (v14 + 3 >= v147) {
            goto LABEL_48;
          }
          unint64_t v23 = *(void *)(v146 + 8 * v22);
          if (!v23)
          {
            uint64_t v22 = v14 + 4;
            if (v14 + 4 >= v147)
            {
LABEL_48:
              swift_release();
              uint64_t v63 = *(void *)(a1 + 24);
              uint64_t v64 = *(void *)(v63 + 64);
              uint64_t v153 = v63 + 64;
              uint64_t v65 = 1 << *(unsigned char *)(v63 + 32);
              uint64_t v66 = -1;
              if (v65 < 64) {
                uint64_t v66 = ~(-1 << v65);
              }
              unint64_t v67 = v66 & v64;
              unint64_t v68 = (void *)((char *)v6 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
              int64_t v69 = (unint64_t)(v65 + 63) >> 6;
              uint64_t v70 = swift_bridgeObjectRetain();
              uint64_t v71 = 0;
              float v158 = v68;
              uint64_t v161 = v70;
              while (1)
              {
                if (v67)
                {
                  unint64_t v72 = __clz(__rbit64(v67));
                  uint64_t v73 = (v67 - 1) & v67;
                  unint64_t v74 = v72 | (v71 << 6);
                }
                else
                {
                  uint64_t v75 = v71 + 1;
                  if (v71 + 1 >= v69) {
                    goto LABEL_89;
                  }
                  unint64_t v76 = *(void *)(v153 + 8 * v75);
                  if (!v76)
                  {
                    uint64_t v75 = v71 + 2;
                    if (v71 + 2 >= v69) {
                      goto LABEL_89;
                    }
                    unint64_t v76 = *(void *)(v153 + 8 * v75);
                    if (!v76)
                    {
                      uint64_t v75 = v71 + 3;
                      if (v71 + 3 >= v69) {
                        goto LABEL_89;
                      }
                      unint64_t v76 = *(void *)(v153 + 8 * v75);
                      if (!v76)
                      {
                        uint64_t v75 = v71 + 4;
                        if (v71 + 4 >= v69)
                        {
LABEL_89:
                          swift_release();
                          uint64_t v96 = swift_bridgeObjectRetain();
                          uint64_t v97 = sub_1B6B1B784(v96);
                          swift_bridgeObjectRelease();
                          uint64_t v159 = *(void *)(v97 + 16);
                          if (!v159)
                          {
LABEL_126:
                            swift_release();
                            return swift_bridgeObjectRelease();
                          }
                          uint64_t v98 = 0;
                          uint64_t v156 = v97 + 32;
                          uint64_t v99 = (char *)MEMORY[0x1E4FBC860];
                          while (2)
                          {
                            long long v100 = *(_OWORD *)(v156 + 16 * v98);
                            uint64_t v101 = *(void *)(a2 + 208);
                            uint64_t v162 = v98;
                            long long v168 = v100;
                            if (*(void *)(v101 + 16))
                            {
                              unint64_t v102 = sub_1B62C1A30(v100);
                              long long v103 = v99;
                              if (v104)
                              {
                                long long v103 = *(char **)(*(void *)(v101 + 56) + 24 * v102);
                                swift_bridgeObjectRetain();
                              }
                              uint64_t v105 = *((void *)v103 + 2);
                              if (!v105)
                              {
LABEL_110:
                                swift_bridgeObjectRelease();
                                uint64_t v120 = *((void *)v99 + 2);
                                if (v120)
                                {
                                  uint64_t v121 = (int32x2_t *)(v99 + 32);
                                  do
                                  {
                                    int32x2_t v122 = vceq_s32(vrev64_s32(*v121), (int32x2_t)0xFFFFFFFF00000000);
                                    if ((v122.i32[1] & v122.i32[0] & 1) == 0)
                                    {
                                      long long v169 = *(_OWORD *)v121->i8;
                                      uint64_t v123 = swift_allocObject();
                                      *(_OWORD *)(v123 + 16) = v168;
                                      uint64_t v124 = swift_allocObject();
                                      *(void *)(v124 + 16) = sub_1B6A6AEF4;
                                      *(void *)(v124 + 24) = v123;
                                      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                                      *(void *)&long long v172 = v170[26];
                                      uint64_t v126 = v172;
                                      v170[26] = 0x8000000000000000;
                                      unint64_t v127 = sub_1B62C1A30(v168);
                                      char v129 = v128;
                                      uint64_t v130 = *(void *)(v126 + 16) + ((v128 & 1) == 0);
                                      if (*(void *)(v126 + 24) >= v130)
                                      {
                                        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                                        {
                                          sub_1B6ACD434();
                                          uint64_t v126 = v172;
                                        }
                                      }
                                      else
                                      {
                                        sub_1B6AB89CC(v130, isUniquelyReferenced_nonNull_native);
                                        uint64_t v126 = v172;
                                        unint64_t v131 = sub_1B62C1A30(v168);
                                        if ((v129 & 1) != (v132 & 1)) {
                                          goto LABEL_128;
                                        }
                                        unint64_t v127 = v131;
                                      }
                                      v170[26] = v126;
                                      swift_bridgeObjectRelease();
                                      long long v133 = (void *)v170[26];
                                      swift_bridgeObjectRetain();
                                      if ((v129 & 1) == 0)
                                      {
                                        sub_1B6C3166C(*(uint64_t (**)(void))(v124 + 16), (uint64_t *)&v172);
                                        uint64_t v134 = v173;
                                        v133[(v127 >> 6) + 8] |= 1 << v127;
                                        *(void *)(v133[6] + 8 * v127) = v168;
                                        uint64_t v135 = v133[7] + 24 * v127;
                                        *(_OWORD *)uint64_t v135 = v172;
                                        *(void *)(v135 + 16) = v134;
                                        ++v133[2];
                                      }
                                      uint64_t v136 = v133[7];
                                      swift_bridgeObjectRelease();
                                      uint64_t v137 = (char **)(v136 + 24 * v127);
                                      uint64_t v138 = *v137;
                                      char v139 = swift_isUniquelyReferenced_nonNull_native();
                                      *uint64_t v137 = v138;
                                      if ((v139 & 1) == 0)
                                      {
                                        uint64_t v138 = sub_1B68C17A0(0, *((void *)v138 + 2) + 1, 1, v138);
                                        *uint64_t v137 = v138;
                                      }
                                      unint64_t v141 = *((void *)v138 + 2);
                                      unint64_t v140 = *((void *)v138 + 3);
                                      long long v142 = v169;
                                      if (v141 >= v140 >> 1)
                                      {
                                        int v143 = sub_1B68C17A0(v140 > 1, v141 + 1, 1, v138);
                                        long long v142 = v169;
                                        uint64_t v138 = v143;
                                        *uint64_t v137 = v143;
                                      }
                                      *((void *)v138 + 2) = v141 + 1;
                                      *(_OWORD *)&v138[16 * v141 + 32] = v142;
                                      swift_release();
                                      swift_release();
                                    }
                                    v121 += 2;
                                    --v120;
                                  }
                                  while (v120);
                                }
                                uint64_t v98 = v162 + 1;
                                swift_bridgeObjectRelease();
                                uint64_t v99 = (char *)MEMORY[0x1E4FBC860];
                                if (v162 + 1 == v159) {
                                  goto LABEL_126;
                                }
                                continue;
                              }
                            }
                            else
                            {
                              long long v103 = v99;
                              uint64_t v105 = *((void *)v99 + 2);
                              if (!v105) {
                                goto LABEL_110;
                              }
                            }
                            break;
                          }
                          swift_bridgeObjectRetain();
                          uint64_t v106 = (unsigned int *)(v103 + 44);
                          do
                          {
                            uint64_t v108 = *(void *)(a1 + 24);
                            if (*(void *)(v108 + 16))
                            {
                              uint64_t v109 = *(v106 - 1);
                              uint64_t v110 = *v106;
                              uint64_t v111 = sub_1B62BE38C(*(void *)(v106 - 3));
                              if (v112)
                              {
                                uint64_t v113 = *(void *)(a1 + 24);
                                if (*(void *)(v113 + 16))
                                {
                                  uint64_t v114 = *(void *)(*(void *)(v108 + 56) + 8 * v111);
                                  uint64_t v115 = sub_1B62BE38C(v109 | (v110 << 32));
                                  if (v116)
                                  {
                                    uint64_t v117 = *(void *)(*(void *)(v113 + 56) + 8 * v115);
                                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                                      uint64_t v99 = sub_1B68C17A0(0, *((void *)v99 + 2) + 1, 1, v99);
                                    }
                                    unint64_t v119 = *((void *)v99 + 2);
                                    unint64_t v118 = *((void *)v99 + 3);
                                    if (v119 >= v118 >> 1) {
                                      uint64_t v99 = sub_1B68C17A0(v118 > 1, v119 + 1, 1, v99);
                                    }
                                    *((void *)v99 + 2) = v119 + 1;
                                    long long v107 = &v99[16 * v119];
                                    *((void *)v107 + 4) = v114;
                                    *((void *)v107 + 5) = v117;
                                  }
                                }
                              }
                            }
                            v106 += 4;
                            --v105;
                          }
                          while (v105);
                          swift_bridgeObjectRelease();
                          goto LABEL_110;
                        }
                        unint64_t v76 = *(void *)(v153 + 8 * v75);
                        if (!v76)
                        {
                          do
                          {
                            if (v69 - 5 == v71) {
                              goto LABEL_89;
                            }
                            unint64_t v76 = *(void *)(v70 + 8 * v71++ + 104);
                          }
                          while (!v76);
                          uint64_t v75 = v71 + 4;
                        }
                      }
                    }
                  }
                  uint64_t v73 = (v76 - 1) & v76;
                  unint64_t v74 = __clz(__rbit64(v76)) + (v75 << 6);
                  uint64_t v71 = v75;
                }
                uint64_t v77 = 8 * v74;
                unsigned int v78 = (int *)(*(void *)(v70 + 48) + v77);
                int v79 = *v78;
                int v80 = v78[1];
                BOOL v81 = v79 == -1 && v80 == 0;
                if (v81 || v79 < 0 || v11[1] <= v79) {
                  goto LABEL_127;
                }
                if (v80 != -1 && *(_DWORD *)(*v11 + 12 * v79 + 8) != v80) {
                  goto LABEL_127;
                }
                unint64_t v164 = v73;
                uint64_t v167 = v71;
                uint64_t v83 = (int *)(*(void *)(v70 + 56) + v77);
                int v84 = *v83;
                int v85 = v83[1];
                if (v84 == -1 && v85 == 0) {
                  goto LABEL_127;
                }
                if (v84 < 0) {
                  goto LABEL_127;
                }
                if (v68[1] <= v84) {
                  goto LABEL_127;
                }
                uint64_t v87 = *(__int16 *)(*v11 + 12 * v79 + 4);
                uint64_t v88 = *v68;
                if (v85 != -1 && *(_DWORD *)(v88 + 12 * v84 + 8) != v85) {
                  goto LABEL_127;
                }
                uint64_t v89 = (int *)(v88 + 12 * v84);
                uint64_t v90 = *((__int16 *)v89 + 2);
                uint64_t v91 = *(void *)(v6[17] + 8 * *v89 + 32);
                swift_retain();
                swift_retain();
                sub_1B66608C4(v87, v90, v91);
                uint64_t v92 = *(void *)(*(void *)(v91 + 40) + 24);
                uint64_t v93 = *(void *)(v92 + 16);
                if (v93)
                {
                  uint64_t v94 = *(void *)(v91 + 128);
                  swift_retain();
                  uint64_t v95 = (void *)(v92 + 56);
                  do
                  {
                    sub_1B6B3BE48(v94 + *v95 + *(v95 - 1) * v90, a1, (uint64_t)&off_1F0F5B0A0, *(v95 - 3), *(v95 - 2));
                    v95 += 5;
                    --v93;
                  }
                  while (v93);
                  swift_release();
                  uint64_t v6 = v170;
                  uint64_t v11 = v154;
                }
                swift_release();
                swift_release();
                unint64_t v68 = v158;
                uint64_t v70 = v161;
                uint64_t v71 = v167;
                unint64_t v67 = v164;
              }
            }
            unint64_t v23 = *(void *)(v146 + 8 * v22);
            if (!v23)
            {
              do
              {
                if (v145 == v14) {
                  goto LABEL_48;
                }
                unint64_t v23 = *(void *)(v152 + 8 * v14++ + 104);
              }
              while (!v23);
              uint64_t v22 = v14 + 4;
            }
          }
        }
      }
      uint64_t v20 = (v23 - 1) & v23;
      unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
      uint64_t v14 = v22;
    }
    long long v24 = (unsigned int *)(*(void *)(v152 + 48) + 8 * v21);
    unsigned int v25 = *v24;
    uint64_t v26 = v24[1];
    BOOL v27 = v25 == -1 && v26 == 0;
    if (v27 || (v25 & 0x80000000) != 0 || v11[1] <= (int)v25) {
      break;
    }
    if (v26 != -1 && *(_DWORD *)(*v11 + 12 * (int)v25 + 8) != v26) {
      break;
    }
    uint64_t v29 = *(__int16 *)(*v11 + 12 * (int)v25 + 6);
    unint64_t v30 = v25 | (unint64_t)(v26 << 32);
    char v31 = sub_1B69DE438(v30);
    uint64_t v32 = *(void *)(*(void *)(a2 + 80) + 8 * v29 + 32);
    uint64_t v166 = v14;
    uint64_t v160 = v30;
    unint64_t v163 = v20;
    char v157 = v31;
    if (a4)
    {
      char v33 = *(unsigned char *)(v32 + 212);
      swift_retain();
      if (v33)
      {
        char v155 = sub_1B62EB864(v30);
        goto LABEL_36;
      }
    }
    else
    {
      swift_retain();
    }
    char v155 = 1;
LABEL_36:
    uint64_t v34 = *(void *)(v32 + 128);
    uint64_t v35 = *(void *)(v32 + 168);
    char v36 = *(unsigned char *)(v32 + 176);
    uint64_t v37 = *(void *)(v32 + 184);
    long long v38 = *(_OWORD *)(v32 + 112);
    long long v172 = *(_OWORD *)(v32 + 96);
    long long v173 = v38;
    uint64_t v174 = v34;
    long long v175 = *(_OWORD *)(v32 + 136);
    long long v176 = *(_OWORD *)(v32 + 152);
    uint64_t v177 = v35;
    char v178 = v36;
    uint64_t v179 = v37;
    uint64_t v39 = sub_1B63B10B0();
    swift_retain();
    uint64_t v40 = sub_1B6B2297C((uint64_t)v39, a1);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v41 = *(void *)(*(void *)(v32 + 16) + 32);
    unsigned int v42 = v12;
    uint64_t v43 = (os_unfair_lock_s *)*((void *)v12 + 3);
    swift_retain();
    os_unfair_lock_lock(v43);
    uint64_t v44 = sub_1B637F1F8(v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1B63B7CC4((uint64_t)v44, v40);
    uint64_t v47 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v48 = (void *)v6[9];
    uint64_t v49 = v48[2];
    if (v49)
    {
      uint64_t v50 = v48[4];
      if (*(void *)(v50 + 144) != v45)
      {
        uint64_t v55 = v49 - 1;
        if (!v55) {
          goto LABEL_45;
        }
        unint64_t v56 = v48 + 5;
        while (1)
        {
          uint64_t v50 = *v56;
          if (*(void *)(*v56 + 144) == v45) {
            break;
          }
          ++v56;
          if (!--v55) {
            goto LABEL_45;
          }
        }
      }
      uint64_t v51 = *(void *)(v50 + 16);
      if (*(void *)(v51 + 16))
      {
        unint64_t v52 = sub_1B62C1A30(v47);
        if (v53)
        {
          int v54 = *(_DWORD *)(*(void *)(v51 + 56) + 4 * v52);
          goto LABEL_46;
        }
      }
    }
LABEL_45:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v54 = sub_1B637C7BC(v45, v47, (uint64_t)v44, v40);
    swift_bridgeObjectRelease_n();
LABEL_46:
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void *)(v6[10] + 8 * v54 + 32);
    uint64_t v12 = v42;
    uint64_t v58 = (os_unfair_lock_s *)*((void *)v42 + 3);
    swift_retain();
    os_unfair_lock_unlock(v58);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v59 = **(void **)((char *)v6 + v149);
    swift_retain();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1B62F06B8(KeyPath, 1);
    swift_release();
    swift_release();
    swift_retain();
    uint64_t v61 = swift_getKeyPath();
    sub_1B62F06B8(v61, 1);
    swift_release();
    swift_release();
    signed int v62 = *(_DWORD *)(v57 + 204);
    if (*(unsigned char *)(v57 + 208))
    {
      unint64_t v16 = 0;
      LODWORD(v15) = -1;
    }
    else
    {
      swift_retain();
      uint64_t v15 = sub_1B69E07A0();
      swift_release();
      unint64_t v16 = v15 & 0xFFFFFFFF00000000;
    }
    int v171 = -1;
    uint64_t v17 = *(void *)(v59 + 16);
    swift_retain();
    swift_retain();
    sub_1B68E9170(v62, v148 | ((HIDWORD(a3) & 1) << 32), v157 & 1, v17, (uint64_t *)&v172, v16 | v15, &v171, v57, v59, v62, SHIWORD(v62), v155 & 1);
    swift_release();
    swift_release();
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v172 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = 0x8000000000000000;
    sub_1B6BA1018(v16 | v15, v160, v18);
    *(void *)(a1 + 24) = v172;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v6 = v170;
    uint64_t v11 = v154;
    uint64_t v14 = v166;
    unint64_t v10 = v163;
  }
LABEL_127:
  sub_1B6E32BE8();
  __break(1u);
LABEL_128:
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6B2082C(uint64_t result, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, char **a7, uint64_t *a8)
{
  uint64_t v156 = a8;
  if (a5 < 1) {
    return result;
  }
  Swift::Int v11 = a5;
  uint64_t v124 = a4;
  LODWORD(v125) = a3;
  LODWORD(v129) = result;
  uint64_t v134 = v8;
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, v11);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v14 = swift_getKeyPath();
  sub_1B62F06B8(v14, v11);
  swift_release();
  swift_release();
  uint64_t v15 = *(void *)(a6 + 32);
  ecs_stack_allocator_push_snapshot(v15);
  uint64_t v16 = *(int *)(a2 + 204);
  uint64_t v126 = 4 * v11;
  unint64_t v127 = (void *)v16;
  uint64_t v17 = ecs_stack_allocator_allocate(v15, 4 * v11, 4);
  char v18 = v17;
  uint64_t v128 = a2;
  char v19 = *(unsigned char *)(a2 + 208);
  uint64_t v133 = a6;
  if ((v19 & 1) == 0)
  {
    char v33 = 0;
    uint64_t v34 = (void *)&unk_1EB97E000;
    uint64_t v130 = v17;
    char v132 = (uint64_t *)v11;
    do
    {
      uint64_t v38 = *(void *)(a6 + 16);
      uint64_t v37 = (uint64_t *)(v38 + v34[141]);
      uint64_t v39 = (os_unfair_lock_s *)v37[3];
      swift_retain();
      os_unfair_lock_lock(v39);
      ++*(void *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
      uint64_t v40 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
      LODWORD(a6) = *(_DWORD *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
      if (a6 == -1)
      {
        unint64_t v131 = v37;
        uint64_t v41 = (char **)(v38 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v42 = OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity;
        uint64_t v43 = *(char **)(v38 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        a6 = *(void *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
        uint64_t v44 = 2 * *(void *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity);
        *(void *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = v44;
        uint64_t v45 = (char *)swift_slowAlloc();
        *uint64_t v41 = v45;
        v41[1] = (char *)v44;
        if (a6 < 0) {
          goto LABEL_95;
        }
        if (v45 != v43 || v45 >= &v43[12 * a6]) {
          memmove(v45, v43, 12 * a6);
        }
        if (v43) {
          MEMORY[0x1BA9B84C0](v43, -1, -1);
        }
        uint64_t v47 = *(void *)(v38 + v42);
        int v48 = *v41;
        if (v47 - 1 != a6)
        {
          uint64_t v49 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
          int v50 = a6 + 1;
          do
          {
            int v51 = *(_DWORD *)(v38 + v49);
            unint64_t v52 = &v48[12 * v50 - 12];
            *(_DWORD *)unint64_t v52 = v50;
            *((_DWORD *)v52 + 1) = -1;
            *((_DWORD *)v52 + 2) = v51;
            ++v50;
          }
          while (v47 != v50);
        }
        int v35 = *(_DWORD *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager_generationSalt);
        char v36 = &v48[12 * v47];
        *(void *)(v36 - 12) = -1;
        *((_DWORD *)v36 - 1) = v35;
        *(_DWORD *)(v38 + v40) = a6;
        char v18 = v130;
        uint64_t v37 = v131;
        uint64_t v34 = &unk_1EB97E000;
      }
      *(_DWORD *)(v38 + v40) = *(_DWORD *)(*(void *)(v38 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                         + 12 * (int)a6);
      os_unfair_lock_unlock((os_unfair_lock_t)v37[3]);
      swift_release();
      *((_DWORD *)v18 + (void)v33) = a6;
      char v33 = (uint64_t *)((char *)v33 + 1);
      Swift::Int v11 = (Swift::Int)v132;
      a6 = v133;
    }
    while (v33 != v132);
  }
  uint64_t v20 = (4 * v11) >> 2;
  uint64_t v137 = 0;
  uint64_t v21 = v128;
  uint64_t v22 = v11 / *(void *)(v128 + 64);
  signed int v23 = (int)v127;
  uint64_t v24 = v22
      + 2 * *(void *)(*(void *)(*(void *)(*(void *)(a6 + 16) + 96) + 40 * (int)v127 + 32) + 16)
      + 1;
  unsigned int v25 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 24 * v24, 8);
  v135[0] = v25;
  v135[1] = v24;
  uint64_t v136 = 0;
  uint64_t v26 = *(void *)(a6 + 16);
  swift_retain();
  char v132 = &v121;
  *(void *)&long long v138 = 0;
  *((void *)&v138 + 1) = v20;
  *(void *)&long long v139 = v18;
  *((void *)&v139 + 1) = v20;
  if (v126 < 1)
  {
    swift_release();
    uint64_t v32 = 0;
  }
  else
  {
    unint64_t v27 = (unint64_t)v124;
    uint64_t v28 = v124;
    swift_retain();
    unint64_t v29 = v28 | ((HIDWORD(v27) & 1) << 32);
    signed int v30 = v23;
    char v31 = v125 & 1;
    do
    {
      swift_retain();
      sub_1B62F0B08(v30, v29, v31, v26, (uint64_t *)&v138, v21, (uint64_t)v18, v20, &v137, a6, v30, v135);
      swift_release();
    }
    while ((uint64_t)(*((void *)&v138 + 1) - v138) > 0);
    swift_release();
    swift_release();
    uint64_t v32 = v136;
    unsigned int v25 = (void *)v135[0];
  }
  char v53 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 48 * v32, 8);
  uint64_t v54 = (uint64_t)v53;
  if (!v32)
  {
LABEL_30:
    uint64_t v62 = v133;
    uint64_t v63 = *(void *)(v133 + 16);
    uint64_t v64 = qword_1EB97DC28;
    swift_retain();
    if (v64 != -1) {
      swift_once();
    }
    uint64_t v150 = qword_1EB997A18;
    int v151 = 0;
    char v152 = 2;
    uint64_t v153 = 0;
    char v154 = 2;
    uint64_t v155 = 0;
    swift_retain();
    sub_1B62CB7E0(v63, v62, (uint64_t)&v150, v54, v32, v32, (uint64_t)&v138);
    swift_release();
    swift_release();
    if (v129)
    {
      if (v145 > 0)
      {
        unint64_t v131 = v142;
        if (v142)
        {
          uint64_t v65 = 0;
          uint64_t v66 = v144;
          uint64_t v129 = v141;
          uint64_t v130 = v144;
          int v67 = *(unsigned __int8 *)(v143 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v124 = v144 + 13;
          uint64_t v126 = (uint64_t)(v144 + 8);
          unint64_t v127 = v144 + 6;
          uint64_t v68 = v144[4];
          LODWORD(v128) = v67;
          uint64_t v125 = v68;
          while (1)
          {
            int64_t v69 = (unsigned int *)(v129 + 48 * (void)v65);
            uint64_t v70 = *v69;
            uint64_t v71 = v69[1];
            uint64_t v72 = *((void *)v69 + 5);
            char v132 = v65;
            if (v67)
            {
              uint64_t v73 = *(os_unfair_lock_s **)(v72 + 376);
              swift_retain();
              os_unfair_lock_lock(v73);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v72 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v68);
            sub_1B62CA4FC((uint64_t)v127, (uint64_t)v149, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v74 = v66[4];
            uint64_t v75 = *(void *)(*(void *)(*(void *)(*(void *)(v72 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v66[6] = ecs_stack_allocator_allocate(v74, 48 * v75, 8);
            v66[7] = v75;
            unint64_t v76 = (void *)v126;
            *(void *)(v126 + 8) = 0;
            _OWORD v76[2] = 0;
            *unint64_t v76 = 0;
            swift_release();
            if (v70 != v71) {
              break;
            }
LABEL_41:
            long long v146 = v138;
            long long v147 = v139;
            uint64_t v148 = v140;
            uint64_t v66 = v130;
            uint64_t v77 = v134;
            sub_1B6345178(v130, (unsigned __int16 **)&v146, (uint64_t)v149);
            uint64_t v134 = v77;
            uint64_t v68 = v125;
            if (*(void *)(v66[13] + 16))
            {
              uint64_t v78 = swift_bridgeObjectRetain();
              sub_1B639147C(v78, v72);
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v80 = v66[13];
              if (isUniquelyReferenced_nonNull_native)
              {
                sub_1B6399BB8(0, *(void *)(v80 + 16));
              }
              else
              {
                uint64_t v88 = (void *)MEMORY[0x1E4FBC860];
                if (*(void *)(v80 + 24) >= 2uLL)
                {
                  sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                  uint64_t v88 = (void *)swift_allocObject();
                  size_t v89 = j__malloc_size(v88);
                  _OWORD v88[2] = 0;
                  v88[3] = 2 * ((uint64_t)(v89 - 32) / 72);
                }
                *uint64_t v124 = v88;
                swift_bridgeObjectRelease();
              }
              if (*(unsigned __int8 *)(v66[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
              {
                uint64_t v90 = *(char **)(v72 + 232);
                uint64_t v91 = *(char **)(v72 + 256);
                if (v90 == v91)
                {
                  uint64_t v92 = *(char **)(v72 + 240);
                }
                else
                {
                  sub_1B666018C(v91, v90);
                  uint64_t v91 = *(char **)(v72 + 232);
                  uint64_t v92 = *(char **)(v72 + 240);
                  if (v92 == v91)
                  {
                    uint64_t v92 = 0;
                    uint64_t v91 = 0;
                    *(void *)(v72 + 232) = 0;
                    *(void *)(v72 + 240) = 0;
                  }
                }
                *(void *)(v72 + 248) = v92;
                *(void *)(v72 + 256) = v91;
              }
            }
            ecs_stack_allocator_pop_snapshot(v68);
            int v67 = v128;
            if (v128)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v72 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v72 + 376));
            }
            swift_release();
            uint64_t v65 = (uint64_t *)((char *)v132 + 1);
            if ((uint64_t *)((char *)v132 + 1) == v131) {
              goto LABEL_89;
            }
          }
          uint64_t v81 = *v156;
          while (1)
          {
            uint64_t v82 = swift_retain();
            if (*(unsigned char *)(v72 + 184)) {
              break;
            }
            int v83 = *(_DWORD *)(*(void *)(v72 + 168) + 4 * v70);
            int v84 = *(_DWORD *)(*(void *)(v82 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v83 + 8);
            swift_release();
            int v85 = *a7;
            char v86 = swift_isUniquelyReferenced_nonNull_native();
            *a7 = v85;
            if ((v86 & 1) == 0) {
              int v85 = sub_1B6C16770((uint64_t)v85);
            }
            ++v70;
            uint64_t v87 = &v85[8 * v81];
            *((_DWORD *)v87 + 8) = v83;
            *((_DWORD *)v87 + 9) = v84;
            *a7 = v85;
            uint64_t v81 = *v156 + 1;
            *uint64_t v156 = v81;
            if (v71 == v70) {
              goto LABEL_41;
            }
          }
LABEL_91:
          LODWORD(v122) = 0;
          uint64_t v121 = 204;
          sub_1B6E32BE8();
          __break(1u);
          goto LABEL_92;
        }
      }
    }
    else if (v145 > 0)
    {
      unint64_t v131 = v142;
      if (v142)
      {
        uint64_t v93 = 0;
        uint64_t v94 = v144;
        uint64_t v129 = v141;
        uint64_t v130 = v144;
        int v95 = *(unsigned __int8 *)(v143 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v124 = v144 + 13;
        uint64_t v126 = (uint64_t)(v144 + 8);
        unint64_t v127 = v144 + 6;
        uint64_t v96 = v144[4];
        LODWORD(v128) = v95;
        uint64_t v125 = v96;
        while (1)
        {
          uint64_t v97 = (unsigned int *)(v129 + 48 * (void)v93);
          uint64_t v98 = *v97;
          uint64_t v99 = v97[1];
          uint64_t v100 = *((void *)v97 + 5);
          char v132 = v93;
          if (v95)
          {
            uint64_t v101 = *(os_unfair_lock_s **)(v100 + 376);
            swift_retain();
            os_unfair_lock_lock(v101);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v100 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v96);
          sub_1B62CA4FC((uint64_t)v127, (uint64_t)v149, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v102 = v94[4];
          uint64_t v103 = *(void *)(*(void *)(*(void *)(*(void *)(v100 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v94[6] = ecs_stack_allocator_allocate(v102, 48 * v103, 8);
          v94[7] = v103;
          char v104 = (void *)v126;
          *(void *)(v126 + 8) = 0;
          v104[2] = 0;
          *char v104 = 0;
          swift_release();
          if (v98 != v99) {
            break;
          }
LABEL_69:
          long long v146 = v138;
          long long v147 = v139;
          uint64_t v148 = v140;
          uint64_t v94 = v130;
          uint64_t v105 = v134;
          sub_1B6345178(v130, (unsigned __int16 **)&v146, (uint64_t)v149);
          uint64_t v134 = v105;
          uint64_t v96 = v125;
          if (*(void *)(v94[13] + 16))
          {
            uint64_t v106 = swift_bridgeObjectRetain();
            sub_1B639147C(v106, v100);
            swift_bridgeObjectRelease();
            char v107 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v108 = v94[13];
            if (v107)
            {
              sub_1B6399BB8(0, *(void *)(v108 + 16));
            }
            else
            {
              char v116 = (void *)MEMORY[0x1E4FBC860];
              if (*(void *)(v108 + 24) >= 2uLL)
              {
                sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                char v116 = (void *)swift_allocObject();
                size_t v117 = j__malloc_size(v116);
                v116[2] = 0;
                v116[3] = 2 * ((uint64_t)(v117 - 32) / 72);
              }
              *uint64_t v124 = v116;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v94[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              unint64_t v118 = *(char **)(v100 + 232);
              unint64_t v119 = *(char **)(v100 + 256);
              if (v118 == v119)
              {
                uint64_t v120 = *(char **)(v100 + 240);
              }
              else
              {
                sub_1B666018C(v119, v118);
                unint64_t v119 = *(char **)(v100 + 232);
                uint64_t v120 = *(char **)(v100 + 240);
                if (v120 == v119)
                {
                  uint64_t v120 = 0;
                  unint64_t v119 = 0;
                  *(void *)(v100 + 232) = 0;
                  *(void *)(v100 + 240) = 0;
                }
              }
              *(void *)(v100 + 248) = v120;
              *(void *)(v100 + 256) = v119;
            }
          }
          ecs_stack_allocator_pop_snapshot(v96);
          int v95 = v128;
          if (v128)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v100 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v100 + 376));
          }
          swift_release();
          uint64_t v93 = (uint64_t *)((char *)v132 + 1);
          if ((uint64_t *)((char *)v132 + 1) == v131) {
            goto LABEL_89;
          }
        }
        uint64_t v109 = *v156;
        while (1)
        {
          uint64_t v110 = swift_retain();
          if (*(unsigned char *)(v100 + 184)) {
            goto LABEL_91;
          }
          int v111 = *(_DWORD *)(*(void *)(v100 + 168) + 4 * v98);
          int v112 = *(_DWORD *)(*(void *)(v110 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v111 + 8);
          swift_release();
          uint64_t v113 = *a7;
          char v114 = swift_isUniquelyReferenced_nonNull_native();
          *a7 = v113;
          if ((v114 & 1) == 0) {
            uint64_t v113 = sub_1B6C16770((uint64_t)v113);
          }
          ++v98;
          uint64_t v115 = &v113[8 * v109];
          *((_DWORD *)v115 + 8) = v111;
          *((_DWORD *)v115 + 9) = v112;
          *a7 = v113;
          uint64_t v109 = *v156 + 1;
          *uint64_t v156 = v109;
          if (v99 == v98) {
            goto LABEL_69;
          }
        }
      }
    }
LABEL_89:
    sub_1B62F073C((uint64_t)&v138);
    return ecs_stack_allocator_pop_snapshot(*(void *)(v133 + 32));
  }
  unint64_t v55 = 0;
  unint64_t v56 = v25 + 2;
  uint64_t v57 = v32;
  uint64_t v58 = v53;
  while (1)
  {
    uint64_t v59 = *(v56 - 1);
    uint64_t v60 = *v56;
    uint64_t v61 = swift_retain();
    if ((v55 & 0x8000000000000000) != 0) {
      break;
    }
    if (HIDWORD(v55))
    {
      int v123 = 0;
      uint64_t v122 = 3455;
      LOBYTE(v121) = 2;
      goto LABEL_94;
    }
    *((_DWORD *)v58 + 1) = v60;
    *((_DWORD *)v58 + 2) = v55;
    unint64_t v55 = v55 - v59 + v60;
    *(_DWORD *)uint64_t v58 = v59;
    v58[2] = 0;
    v58[3] = 0;
    v58[4] = 0;
    v58[5] = v61;
    v58 += 6;
    v56 += 3;
    if (!--v57) {
      goto LABEL_30;
    }
  }
LABEL_92:
  int v123 = 0;
  uint64_t v122 = 3451;
  LOBYTE(v121) = 2;
LABEL_94:
  sub_1B6E32BD8();
  __break(1u);
LABEL_95:
  int v123 = 0;
  uint64_t v122 = 1046;
  LOBYTE(v121) = 2;
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6B2150C(uint64_t result, uint64_t a2, char a3, unint64_t a4, uint64_t a5, void (*a6)(void *), uint64_t a7, uint64_t a8)
{
  if (a5 < 1) {
    return result;
  }
  Swift::Int v10 = a5;
  char v111 = result;
  uint64_t v123 = v8;
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, v10);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v13 = swift_getKeyPath();
  sub_1B62F06B8(v13, v10);
  swift_release();
  swift_release();
  uint64_t v14 = *(void *)(a8 + 32);
  ecs_stack_allocator_push_snapshot(v14);
  uint64_t v164 = *(unsigned int *)(a2 + 204);
  uint64_t v103 = 4 * v10;
  uint64_t v120 = ecs_stack_allocator_allocate(v14, 4 * v10, 4);
  uint64_t v106 = a8;
  uint64_t v107 = a2;
  uint64_t v15 = a8;
  if ((*(unsigned char *)(a2 + 208) & 1) == 0)
  {
    uint64_t v53 = 0;
    Swift::Int v115 = v10;
    do
    {
      uint64_t v57 = *(void *)(v15 + 16);
      uint64_t v56 = v57 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
      uint64_t v58 = *(os_unfair_lock_s **)(v57 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
      swift_retain();
      os_unfair_lock_lock(v58);
      ++*(void *)(v57 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
      uint64_t v59 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
      LODWORD(v60) = *(_DWORD *)(v57 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
      if (v60 == -1)
      {
        uint64_t v118 = v56;
        uint64_t v61 = (char **)(v57 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v62 = OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity;
        uint64_t v63 = *(char **)(v57 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v60 = *(void *)(v57 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
        uint64_t v64 = 2 * *(void *)(v57 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity);
        *(void *)(v57 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = v64;
        uint64_t v65 = (char *)swift_slowAlloc();
        *uint64_t v61 = v65;
        v61[1] = (char *)v64;
        if (v60 < 0) {
          goto LABEL_81;
        }
        if (v65 != v63 || v65 >= &v63[12 * v60]) {
          memmove(v65, v63, 12 * v60);
        }
        if (v63) {
          MEMORY[0x1BA9B84C0](v63, -1, -1);
        }
        uint64_t v67 = *(void *)(v57 + v62);
        uint64_t v68 = *v61;
        if (v67 - 1 != v60)
        {
          uint64_t v69 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
          int v70 = v60 + 1;
          do
          {
            int v71 = *(_DWORD *)(v57 + v69);
            uint64_t v72 = &v68[12 * v70 - 12];
            *(_DWORD *)uint64_t v72 = v70;
            *((_DWORD *)v72 + 1) = -1;
            *((_DWORD *)v72 + 2) = v71;
            ++v70;
          }
          while (v67 != v70);
        }
        int v54 = *(_DWORD *)(v57 + OBJC_IVAR____TtC3VFX13EntityManager_generationSalt);
        unint64_t v55 = &v68[12 * v67];
        *(void *)(v55 - 12) = -1;
        *((_DWORD *)v55 - 1) = v54;
        *(_DWORD *)(v57 + v59) = v60;
        uint64_t v15 = v106;
        Swift::Int v10 = v115;
        uint64_t v56 = v118;
      }
      *(_DWORD *)(v57 + v59) = *(_DWORD *)(*(void *)(v57 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                         + 12 * (int)v60);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v56 + 24));
      swift_release();
      *((_DWORD *)v120 + v53++) = v60;
    }
    while (v53 != v10);
  }
  uint64_t v131 = 0;
  uint64_t v16 = v10 / *(void *)(v107 + 64)
      + 2 * *(void *)(*(void *)(*(void *)(*(void *)(v15 + 16) + 96) + 40 * (int)v164 + 32) + 16)
      + 1;
  uint64_t v128 = ecs_stack_allocator_allocate(*(void *)(v15 + 32), 24 * v16, 8);
  uint64_t v129 = v16;
  uint64_t v130 = 0;
  uint64_t v17 = *(void *)(v15 + 16);
  uint64_t v18 = swift_retain();
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v124 = 0;
  uint64_t v125 = (4 * v10) >> 2;
  uint64_t v126 = v120;
  uint64_t v127 = v125;
  if (v103 >= 1)
  {
    do
      sub_1B68E9B70(v164, a4 | ((HIDWORD(a4) & 1) << 32), a3 & 1, v17, &v124, sub_1B6B25170);
    while (v125 - v124 > 0);
  }
  swift_release();
  uint64_t v20 = v130;
  uint64_t v21 = ecs_stack_allocator_allocate(*(void *)(v15 + 32), 48 * v130, 8);
  uint64_t v22 = (uint64_t)v21;
  uint64_t v23 = v130;
  if (!v130)
  {
LABEL_10:
    uint64_t v31 = *(void *)(v106 + 16);
    uint64_t v32 = qword_1EB97DC28;
    swift_retain();
    if (v32 != -1) {
      swift_once();
    }
    uint64_t v158 = qword_1EB997A18;
    int v159 = 0;
    char v160 = 2;
    uint64_t v161 = 0;
    char v162 = 2;
    uint64_t v163 = 0;
    swift_retain();
    sub_1B62CB7E0(v31, v106, (uint64_t)&v158, v22, v20, v23, (uint64_t)&v132);
    swift_release();
    swift_release();
    if (v111)
    {
      if (v139 >= 1)
      {
        uint64_t v33 = v136;
        if (v136)
        {
          uint64_t v108 = v139;
          uint64_t v34 = v138;
          uint64_t v35 = v138[4];
          uint64_t v104 = v137;
          int v36 = *(unsigned __int8 *)(v137 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v93 = v138 + 13;
          int v95 = v138 + 8;
          uint64_t v98 = (uint64_t)(v138 + 6);
          uint64_t v37 = (uint64_t *)(v135 + 24);
          int v101 = v36;
          do
          {
            uint64_t v164 = v33;
            uint64_t v38 = *((unsigned int *)v37 - 6);
            uint64_t v39 = *((unsigned int *)v37 - 4);
            uint64_t v117 = *v37;
            uint64_t v121 = *(v37 - 1);
            uint64_t v40 = v37[2];
            uint64_t v112 = *((unsigned int *)v37 - 5);
            uint64_t v114 = v37[1];
            if (v36)
            {
              uint64_t v41 = *(os_unfair_lock_s **)(v40 + 376);
              swift_retain();
              os_unfair_lock_lock(v41);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v40 + 344));
            }
            else
            {
              swift_retain();
            }
            uint64_t v42 = v35;
            ecs_stack_allocator_push_snapshot(v35);
            sub_1B62CA4FC(v98, (uint64_t)v146, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v43 = v34[4];
            uint64_t v44 = *(void *)(*(void *)(*(void *)(*(void *)(v40 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v34[6] = ecs_stack_allocator_allocate(v43, 48 * v44, 8);
            v34[7] = v44;
            v95[1] = 0;
            v95[2] = 0;
            void *v95 = 0;
            swift_release();
            v147[0] = v104;
            v147[1] = v40;
            v147[2] = v34;
            v147[3] = v39;
            v147[4] = (v112 - v38 + v39);
            v147[5] = v108;
            v147[6] = v38;
            v147[7] = v112;
            v147[8] = 0;
            v147[9] = 0;
            char v148 = 1;
            uint64_t v149 = v121;
            uint64_t v150 = v117;
            uint64_t v151 = v114;
            a6(v147);
            if (v123) {
              goto LABEL_80;
            }
            v140[0] = v132;
            v140[1] = v133;
            uint64_t v141 = v134;
            sub_1B6345178(v34, (unsigned __int16 **)v140, (uint64_t)v146);
            uint64_t v123 = 0;
            uint64_t v35 = v42;
            int v36 = v101;
            if (*(void *)(v34[13] + 16))
            {
              uint64_t v45 = swift_bridgeObjectRetain();
              sub_1B639147C(v45, v40);
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v47 = v34[13];
              if (isUniquelyReferenced_nonNull_native)
              {
                sub_1B6399BB8(0, *(void *)(v47 + 16));
              }
              else
              {
                int v48 = (void *)MEMORY[0x1E4FBC860];
                if (*(void *)(v47 + 24) >= 2uLL)
                {
                  sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                  int v48 = (void *)swift_allocObject();
                  size_t v49 = j__malloc_size(v48);
                  _OWORD v48[2] = 0;
                  v48[3] = 2 * ((uint64_t)(v49 - 32) / 72);
                }
                *uint64_t v93 = v48;
                swift_bridgeObjectRelease();
              }
              if (*(unsigned __int8 *)(v34[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
              {
                int v50 = *(char **)(v40 + 232);
                int v51 = *(char **)(v40 + 256);
                if (v50 == v51)
                {
                  unint64_t v52 = *(char **)(v40 + 240);
                }
                else
                {
                  sub_1B666018C(v51, v50);
                  int v51 = *(char **)(v40 + 232);
                  unint64_t v52 = *(char **)(v40 + 240);
                  if (v52 == v51)
                  {
                    unint64_t v52 = 0;
                    int v51 = 0;
                    *(void *)(v40 + 232) = 0;
                    *(void *)(v40 + 240) = 0;
                  }
                }
                *(void *)(v40 + 248) = v52;
                *(void *)(v40 + 256) = v51;
              }
            }
            ecs_stack_allocator_pop_snapshot(v35);
            if (v101)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v40 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v40 + 376));
            }
            swift_release();
            v37 += 6;
            uint64_t v33 = v164 - 1;
          }
          while (v164 != 1);
        }
      }
    }
    else if (v139 >= 1)
    {
      uint64_t v73 = v136;
      if (v136)
      {
        uint64_t v109 = v139;
        uint64_t v74 = v138;
        uint64_t v75 = v138[4];
        uint64_t v102 = v137;
        uint64_t v105 = v75;
        int v76 = *(unsigned __int8 *)(v137 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v94 = v138 + 13;
        uint64_t v96 = v138 + 8;
        uint64_t v99 = (uint64_t)(v138 + 6);
        uint64_t v77 = (uint64_t *)(v135 + 24);
        int v113 = v76;
        while (1)
        {
          uint64_t v116 = v73;
          uint64_t v79 = *((unsigned int *)v77 - 6);
          uint64_t v78 = *((unsigned int *)v77 - 5);
          uint64_t v80 = *((unsigned int *)v77 - 4);
          uint64_t v164 = *(v77 - 1);
          uint64_t v81 = v77[2];
          uint64_t v119 = v77[1];
          uint64_t v122 = *v77;
          if (v76)
          {
            uint64_t v82 = *(os_unfair_lock_s **)(v81 + 376);
            swift_retain();
            os_unfair_lock_lock(v82);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v81 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v75);
          sub_1B62CA4FC(v99, (uint64_t)v152, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v83 = v74[4];
          uint64_t v84 = *(void *)(*(void *)(*(void *)(*(void *)(v81 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v74[6] = ecs_stack_allocator_allocate(v83, 48 * v84, 8);
          v74[7] = v84;
          v96[1] = 0;
          v96[2] = 0;
          *uint64_t v96 = 0;
          swift_release();
          v153[0] = v102;
          v153[1] = v81;
          v153[2] = v74;
          v153[3] = v80;
          v153[4] = (v78 - v79 + v80);
          v153[5] = v109;
          v153[6] = v79;
          v153[7] = v78;
          v153[8] = 0;
          v153[9] = 0;
          char v154 = 1;
          uint64_t v155 = v164;
          uint64_t v156 = v122;
          uint64_t v157 = v119;
          a6(v153);
          if (v123) {
            break;
          }
          v142[0] = v132;
          v142[1] = v133;
          uint64_t v143 = v134;
          sub_1B6345178(v74, (unsigned __int16 **)v142, (uint64_t)v152);
          uint64_t v123 = 0;
          if (*(void *)(v74[13] + 16))
          {
            uint64_t v85 = swift_bridgeObjectRetain();
            sub_1B639147C(v85, v81);
            swift_bridgeObjectRelease();
            char v86 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v87 = v74[13];
            if (v86)
            {
              sub_1B6399BB8(0, *(void *)(v87 + 16));
            }
            else
            {
              uint64_t v88 = (void *)MEMORY[0x1E4FBC860];
              if (*(void *)(v87 + 24) >= 2uLL)
              {
                sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                uint64_t v88 = (void *)swift_allocObject();
                size_t v89 = j__malloc_size(v88);
                _OWORD v88[2] = 0;
                v88[3] = 2 * ((uint64_t)(v89 - 32) / 72);
              }
              *uint64_t v94 = v88;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v74[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              uint64_t v90 = *(char **)(v81 + 232);
              uint64_t v91 = *(char **)(v81 + 256);
              if (v90 == v91)
              {
                uint64_t v92 = *(char **)(v81 + 240);
              }
              else
              {
                sub_1B666018C(v91, v90);
                uint64_t v91 = *(char **)(v81 + 232);
                uint64_t v92 = *(char **)(v81 + 240);
                if (v92 == v91)
                {
                  uint64_t v92 = 0;
                  uint64_t v91 = 0;
                  *(void *)(v81 + 232) = 0;
                  *(void *)(v81 + 240) = 0;
                }
              }
              *(void *)(v81 + 248) = v92;
              *(void *)(v81 + 256) = v91;
            }
          }
          uint64_t v75 = v105;
          ecs_stack_allocator_pop_snapshot(v105);
          int v76 = v113;
          if (v113)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v81 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v81 + 376));
          }
          swift_release();
          v77 += 6;
          uint64_t v73 = v116 - 1;
          if (v116 == 1) {
            goto LABEL_74;
          }
        }
        v144[0] = v132;
        v144[1] = v133;
        uint64_t v145 = v134;
        sub_1B6345178(v74, (unsigned __int16 **)v144, (uint64_t)v152);
        sub_1B634507C((char *)v81);
        ecs_stack_allocator_pop_snapshot(v105);
        if (v113)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v81 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v81 + 376));
        }
        sub_1B62F073C((uint64_t)&v132);
        swift_release();
        return ecs_stack_allocator_pop_snapshot(*(void *)(v106 + 32));
      }
    }
LABEL_74:
    sub_1B62F073C((uint64_t)&v132);
    return ecs_stack_allocator_pop_snapshot(*(void *)(v106 + 32));
  }
  unint64_t v24 = 0;
  unsigned int v25 = v128 + 2;
  uint64_t v26 = v130;
  unint64_t v27 = v21;
  while (1)
  {
    uint64_t v28 = *(v25 - 1);
    uint64_t v29 = *v25;
    uint64_t v30 = swift_retain();
    if ((v24 & 0x8000000000000000) != 0 || HIDWORD(v24)) {
      break;
    }
    *((_DWORD *)v27 + 1) = v29;
    *((_DWORD *)v27 + 2) = v24;
    unint64_t v24 = v24 - v28 + v29;
    *(_DWORD *)unint64_t v27 = v28;
    v27[2] = 0;
    uint64_t v27[3] = 0;
    v27[4] = 0;
    v27[5] = v30;
    v27 += 6;
    v25 += 3;
    if (!--v26) {
      goto LABEL_10;
    }
  }
  sub_1B6E32BD8();
  __break(1u);
LABEL_80:
  swift_unexpectedError();
  __break(1u);
LABEL_81:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6B22208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, __int16 a9)
{
  char v16 = *(unsigned char *)(a4 + 208);
  swift_retain();
  if ((v16 & 1) == 0 && a2 != a3)
  {
    uint64_t v17 = *a7;
    uint64_t v18 = a2;
    do
    {
      int v19 = *(_DWORD *)(a1 + 188);
      uint64_t v20 = *(void *)(*(void *)(a8 + 16) + OBJC_IVAR____TtC3VFX13EntityManager__entries)
          + 12 * *(int *)(a5 + 4 * v17);
      *(_WORD *)(v20 + 4) = v18;
      *(_DWORD *)uint64_t v20 = v19;
      *(_WORD *)(v20 + 6) = a9;
      uint64_t v17 = *a7 + 1;
      *a7 = v17;
      ++v18;
    }
    while (a3 != v18);
  }
  if (*(unsigned char *)(a4 + 212) == 1)
  {
    uint64_t v21 = *(void *)(a1 + 192);
    if (v21) {
      sub_1B6BFB3E4(a2, a3, 3, 0, 3, v21, *(void *)(a1 + 200), *(void *)(a1 + 208));
    }
    sub_1B63658B4(*(void *)(a1 + 40), a1, a2, a3);
  }

  return swift_release();
}

uint64_t sub_1B6B22338(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = sub_1B62C91B8((uint64_t)&type metadata for DebugInfoWireframePrimitive);
  if (v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v4 + 112 * v3;
  }
  uint64_t v7 = sub_1B62C91B8((uint64_t)&type metadata for DebugInfoColor);
  if (v8) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v7 + 4 * v3;
  }
  return a2(v6, v9);
}

uint64_t sub_1B6B223D8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = sub_1B62C91B8((uint64_t)&type metadata for DebugInfoWireframePrimitive);
  if (v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v4 + 112 * v3;
  }
  uint64_t v7 = sub_1B62C91B8((uint64_t)&type metadata for WorldTransform);
  if (v8) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v7 + (v3 << 6);
  }
  uint64_t v10 = sub_1B62C91B8((uint64_t)&type metadata for Beamed);
  if (v11) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = v10;
  }
  return a2(v6, v9, v12);
}

uint64_t sub_1B6B2249C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = sub_1B62C91B8((uint64_t)&type metadata for TextureFileAsset);
  if (v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v4 + 48 * v3;
  }
  uint64_t v7 = sub_1B62C91B8((uint64_t)&type metadata for TextureLoadPolicy);
  if (v8) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v7 + 4 * v3;
  }
  uint64_t v10 = sub_1B62C91B8((uint64_t)&type metadata for TextureLoadingOptions);
  if (v11) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = v10 + (v3 << 6);
  }
  return a2(v6, v9, v12);
}

uint64_t sub_1B6B2256C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = sub_1B62C91B8((uint64_t)&type metadata for DebugInfoWireframePrimitive);
  if (v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v4 + 112 * v3;
  }
  uint64_t v7 = sub_1B62C91B8((uint64_t)&type metadata for DebugInfoColor);
  if (v8) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v7 + 4 * v3;
  }
  uint64_t v10 = sub_1B62C91B8((uint64_t)&type metadata for WorldTransform);
  if (v11) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = v10 + (v3 << 6);
  }
  uint64_t v13 = sub_1B62C91B8((uint64_t)&type metadata for Beamed);
  if (v14) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v13;
  }
  return a2(v6, v9, v12, v15);
}

uint64_t sub_1B6B22660(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  sub_1B639192C(a1, (uint64_t)v13);
  sub_1B639192C(a2, (uint64_t)&v14);
  switch(v13[40])
  {
    case 1:
      sub_1B639192C((uint64_t)v13, (uint64_t)v12);
      if (v17 != 1) {
        goto LABEL_15;
      }
      goto LABEL_5;
    case 2:
      sub_1B639192C((uint64_t)v13, (uint64_t)v12);
      if (v17 == 2) {
        goto LABEL_7;
      }
      goto LABEL_9;
    case 3:
      sub_1B639192C((uint64_t)v13, (uint64_t)v12);
      if (v17 == 3)
      {
LABEL_7:
        sub_1B62C15C4(v12, (uint64_t)v9);
        sub_1B62C15C4((long long *)&v14, (uint64_t)v8);
        uint64_t v4 = v10;
        uint64_t v5 = v11;
        sub_1B62C14BC(v9, v10);
        char v3 = sub_1B6B3D86C(v8, v4, v5);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v8);
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
LABEL_12:
        sub_1B6391400((uint64_t)v13);
      }
      else
      {
LABEL_9:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v12);
LABEL_15:
        sub_1B63B28BC((uint64_t)v13, (uint64_t (*)(void))sub_1B691F560);
        char v3 = 0;
      }
      return v3 & 1;
    case 4:
      sub_1B639192C((uint64_t)v13, (uint64_t)v12);
      if (v17 != 4) {
        goto LABEL_15;
      }
      char v3 = LOBYTE(v12[0]) ^ v14 ^ 1;
      goto LABEL_12;
    case 5:
      if (v17 != 5) {
        goto LABEL_15;
      }
      int8x16_t v6 = vorrq_s8(v15, v16);
      if (*(void *)&vorr_s8(*(int8x8_t *)v6.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)) | v14) {
        goto LABEL_15;
      }
      sub_1B6391400((uint64_t)v13);
      char v3 = 1;
      return v3 & 1;
    default:
      sub_1B639192C((uint64_t)v13, (uint64_t)v12);
      if (v17) {
        goto LABEL_15;
      }
LABEL_5:
      char v3 = *(void *)&v12[0] == v14;
      goto LABEL_12;
  }
}

uint64_t sub_1B6B22884(uint64_t a1, uint64_t *a2, int a3, _DWORD *a4, uint64_t a5, uint64_t a6, __int16 a7, char a8)
{
  uint64_t result = sub_1B68E652C(a3);
  *a2 = result;
  a2[1] = v17;
  int v18 = *(_DWORD *)(a1 + 188);
  *a4 = v18;
  if ((*(unsigned char *)(a5 + 208) & 1) == 0)
  {
    uint64_t v19 = *(void *)(*(void *)(a6 + 16) + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * a3;
    *(_DWORD *)uint64_t v19 = v18;
    *(_WORD *)(v19 + 4) = result;
    *(_WORD *)(v19 + 6) = a7;
  }
  if ((a8 & 1) != 0 && *(unsigned char *)(a5 + 212) == 1)
  {
    uint64_t v20 = *(void *)(a1 + 192);
    if (v20)
    {
      uint64_t v21 = *(void *)(a1 + 208);
      uint64_t v22 = 8 * (result >> 6);
      *(void *)(v20 + v22) |= 1 << result;
      *(void *)(v21 + v22) &= ~(1 << result);
    }
    return sub_1B635AD78(*(void *)(a1 + 40), a1, result);
  }
  return result;
}

uint64_t sub_1B6B2297C(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1B6C3C4D0(0, v2, 0);
    uint64_t v3 = v16;
    uint64_t v6 = a1 + 32;
    do
    {
      sub_1B62C1550(v6, (uint64_t)&v13);
      uint64_t v8 = v14;
      uint64_t v7 = v15;
      sub_1B62C550C((uint64_t)&v13, v14);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t))(*(void *)(v7 + 8) + 96))(a2, &off_1F0F5B0A0, v8);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = v3;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B6C3C4D0(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v16;
      }
      unint64_t v11 = *(void *)(v3 + 16);
      unint64_t v10 = *(void *)(v3 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1B6C3C4D0(v10 > 1, v11 + 1, 1);
        uint64_t v3 = v16;
      }
      *(void *)(v3 + 16) = v11 + 1;
      sub_1B62C15C4(&v13, v3 + 40 * v11 + 32);
      v6 += 40;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1B6B22AD4(uint64_t a1, unint64_t a2, Swift::Int a3, uint64_t a4)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, a3);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v9 = swift_getKeyPath();
  sub_1B62F06B8(v9, a3);
  swift_release();
  swift_release();
  uint64_t v10 = *(void *)(a4 + 32);
  ecs_stack_allocator_push_snapshot(v10);
  signed int v11 = *(_DWORD *)(a1 + 204);
  uint64_t v12 = ecs_stack_allocator_allocate(v10, 4 * a3, 4);
  long long v13 = v12;
  if (*(unsigned char *)(a1 + 208) == 1)
  {
    uint64_t v14 = *(void *)(a4 + 16);
    swift_retain();
    uint64_t v49 = 0;
    uint64_t v50 = (4 * a3) >> 2;
    int v51 = v13;
    uint64_t v52 = v50;
    if (4 * a3 >= 1)
    {
      do
        sub_1B68E6E80(v11, a2 | ((HIDWORD(a2) & 1) << 32), 1, v14, &v49);
      while (v50 - v49 > 0);
    }
LABEL_25:
    swift_release();
    return ecs_stack_allocator_pop_snapshot(*(void *)(a4 + 32));
  }
  uint64_t v42 = (4 * a3) >> 2;
  uint64_t v43 = 4 * a3;
  signed int v44 = v11;
  unint64_t v41 = a2;
  uint64_t v15 = v12;
  if (!a3)
  {
LABEL_23:
    uint64_t v53 = 0;
    uint64_t v37 = *(void *)(a4 + 16);
    uint64_t v38 = swift_retain();
    MEMORY[0x1F4188790](v38, v39);
    uint64_t v49 = 0;
    uint64_t v50 = v42;
    int v51 = v15;
    uint64_t v52 = v42;
    if (v43 >= 1)
    {
      do
        sub_1B68E9B70(v44, v41 | ((HIDWORD(v41) & 1) << 32), 1, v37, &v49, sub_1B6B22EEC);
      while (v50 - v49 > 0);
    }
    goto LABEL_25;
  }
  uint64_t v16 = 0;
  uint64_t v46 = v12;
  Swift::Int v47 = a3;
  uint64_t v45 = a4;
  while (1)
  {
    uint64_t v20 = *(void *)(a4 + 16);
    uint64_t v19 = v20 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
    uint64_t v24 = a4;
    uint64_t v21 = *(os_unfair_lock_s **)(v20 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
    swift_retain();
    uint64_t v22 = v21;
    a4 = v24;
    os_unfair_lock_lock(v22);
    ++*(void *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
    uint64_t v23 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
    LODWORD(v24) = *(_DWORD *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
    if (v24 == -1) {
      break;
    }
LABEL_8:
    *(_DWORD *)(v20 + v23) = *(_DWORD *)(*(void *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                       + 12 * (int)v24);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 24));
    swift_release();
    *((_DWORD *)v15 + v16++) = v24;
    if (v16 == a3) {
      goto LABEL_23;
    }
  }
  uint64_t v48 = v19;
  unsigned int v25 = (char **)(v20 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v26 = OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity;
  unint64_t v27 = *(char **)(v20 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v24 = *(void *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
  uint64_t v28 = 2 * *(void *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity);
  *(void *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = v28;
  uint64_t v29 = (char *)swift_slowAlloc();
  *unsigned int v25 = v29;
  v25[1] = (char *)v28;
  if ((v24 & 0x8000000000000000) == 0)
  {
    if (v29 != v27 || v29 >= &v27[12 * v24]) {
      memmove(v29, v27, 12 * v24);
    }
    if (v27) {
      MEMORY[0x1BA9B84C0](v27, -1, -1);
    }
    uint64_t v31 = *(void *)(v20 + v26);
    uint64_t v32 = *v25;
    uint64_t v15 = v46;
    if (v31 - 1 != v24)
    {
      uint64_t v33 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
      int v34 = v24 + 1;
      do
      {
        int v35 = *(_DWORD *)(v20 + v33);
        int v36 = &v32[12 * v34 - 12];
        *(_DWORD *)int v36 = v34;
        *((_DWORD *)v36 + 1) = -1;
        *((_DWORD *)v36 + 2) = v35;
        ++v34;
      }
      while (v31 != v34);
    }
    int v17 = *(_DWORD *)(v20 + OBJC_IVAR____TtC3VFX13EntityManager_generationSalt);
    int v18 = &v32[12 * v31];
    *(void *)(v18 - 12) = -1;
    *((_DWORD *)v18 - 1) = v17;
    *(_DWORD *)(v20 + v23) = v24;
    a3 = v47;
    uint64_t v19 = v48;
    a4 = v45;
    goto LABEL_8;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6B22EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B22208(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(uint64_t **)(v3 + 40), *(void *)(v3 + 48), *(_DWORD *)(v3 + 56));
}

uint64_t sub_1B6B22F20(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  return sub_1B6B22F78(a1, a2, a3, a4, a5, a6, a7, sub_1B6B1BD4C);
}

uint64_t sub_1B6B22F4C(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  return sub_1B6B22F78(a1, a2, a3, a4, a5, a6, a7, sub_1B6B1BCA8);
}

uint64_t sub_1B6B22F78(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, uint64_t (*a8)(uint64_t))
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v14 = swift_getKeyPath();
  sub_1B62F06B8(v14, 1);
  swift_release();
  swift_release();
  signed int v15 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v16 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v16 = sub_1B69E07A0();
    swift_release();
  }
  int v24 = -1;
  v23[0] = 0;
  v23[1] = 0;
  uint64_t v17 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v15, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v17, v23, v16, &v24, a1, a5, v15, SHIWORD(v15), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v18 = v23[0];
  swift_retain();
  uint64_t v19 = a8(v18);
  a6(v19);
  swift_release();
  return v16;
}

uint64_t sub_1B6B23134(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, unint64_t a8, float a9)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v16 = swift_getKeyPath();
  sub_1B62F06B8(v16, 1);
  swift_release();
  swift_release();
  signed int v17 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v18 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v18 = sub_1B69E07A0();
    swift_release();
  }
  int v26 = -1;
  long long v25 = 0uLL;
  uint64_t v19 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v17, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v19, (uint64_t *)&v25, v18, &v26, a1, a5, v17, SHIWORD(v17), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v20 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v26 + 32);
  v27[0] = *(void *)(a5 + 16);
  v27[1] = v20;
  v27[2] = a5;
  long long v28 = xmmword_1B6E4F270;
  uint64_t v29 = 1;
  long long v30 = v25;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  char v33 = 1;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v34 = 0;
  swift_retain();
  swift_retain();
  sub_1B6D7F350((uint64_t)v27, a6, a7, a8 | ((HIDWORD(a8) & 1) << 32), a9);
  swift_release();
  swift_release_n();
  return v18;
}

uint64_t sub_1B6B23358(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v13 = swift_getKeyPath();
  sub_1B62F06B8(v13, 1);
  swift_release();
  swift_release();
  signed int v14 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v15 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v15 = sub_1B69E07A0();
    swift_release();
  }
  int v22 = -1;
  *(_OWORD *)uint64_t v21 = 0uLL;
  uint64_t v16 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v14, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v16, v21, v15, &v22, a1, a5, v14, SHIWORD(v14), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v17 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v22 + 32);
  v23[0] = *(void *)(a5 + 16);
  v23[1] = v17;
  uint64_t v23[2] = a5;
  long long v24 = xmmword_1B6E4F270;
  uint64_t v25 = 1;
  long long v26 = *(_OWORD *)v21;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  char v29 = 1;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  swift_retain();
  swift_retain();
  sub_1B6D7F5D0((uint64_t)v23, a6, a7);
  swift_release();
  swift_release_n();
  return v15;
}

uint64_t sub_1B6B23560(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, void *a6)
{
  return sub_1B6B23A88(a1, a2, a3, a4, a5, a6, (void (*)(void *, id))sub_1B6D7F800);
}

uint64_t sub_1B6B2358C(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B28698(a1, a2, a3, a4, a5, a6, a7, (void (*)(void *, uint64_t, uint64_t))sub_1B6B2249C);
}

uint64_t sub_1B6B235B8(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, unint64_t a8, float a9, uint64_t a10, uint64_t a11)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v17 = swift_getKeyPath();
  sub_1B62F06B8(v17, 1);
  swift_release();
  swift_release();
  signed int v18 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v19 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v19 = sub_1B69E07A0();
    swift_release();
  }
  int v28 = -1;
  long long v27 = 0uLL;
  uint64_t v20 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v18, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v20, (uint64_t *)&v27, v19, &v28, a1, a5, v18, SHIWORD(v18), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v21 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v28 + 32);
  v29[0] = *(void *)(a5 + 16);
  v29[1] = v21;
  v29[2] = a5;
  long long v30 = xmmword_1B6E4F270;
  uint64_t v31 = 1;
  long long v32 = v27;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  char v35 = 1;
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  uint64_t v36 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6D7FA64((uint64_t)v29, a6, a7, a8 | ((HIDWORD(a8) & 1) << 32), a10, a11, a9);
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  return v19;
}

uint64_t sub_1B6B23808(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v15 = swift_getKeyPath();
  sub_1B62F06B8(v15, 1);
  swift_release();
  swift_release();
  signed int v16 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v17 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v17 = sub_1B69E07A0();
    swift_release();
  }
  int v25 = -1;
  *(_OWORD *)long long v24 = 0uLL;
  uint64_t v18 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v16, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v18, v24, v17, &v25, a1, a5, v16, SHIWORD(v16), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v19 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v25 + 32);
  v26[0] = *(void *)(a5 + 16);
  v26[1] = v19;
  v26[2] = a5;
  long long v27 = xmmword_1B6E4F270;
  uint64_t v28 = 1;
  long long v29 = *(_OWORD *)v24;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  char v32 = 1;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B6D7FD7C((uint64_t)v26, a6, a7, a8, a9);
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return v17;
}

uint64_t sub_1B6B23A5C(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, void *a6)
{
  return sub_1B6B23A88(a1, a2, a3, a4, a5, a6, (void (*)(void *, id))sub_1B6D8007C);
}

uint64_t sub_1B6B23A88(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, void *a6, void (*a7)(void *, id))
{
  uint64_t v34 = a7;
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  id v21 = a6;
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v14 = swift_getKeyPath();
  sub_1B62F06B8(v14, 1);
  swift_release();
  swift_release();
  signed int v15 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v16 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v16 = sub_1B69E07A0();
    swift_release();
  }
  int v23 = -1;
  *(_OWORD *)int v22 = 0uLL;
  uint64_t v17 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v15, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v17, v22, v16, &v23, a1, a5, v15, SHIWORD(v15), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v18 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v23 + 32);
  v24[0] = *(void *)(a5 + 16);
  v24[1] = v18;
  v24[2] = a5;
  long long v25 = xmmword_1B6E4F270;
  uint64_t v26 = 1;
  long long v27 = *(_OWORD *)v22;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  char v30 = 1;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  id v19 = v21;
  swift_retain();
  v34(v24, v19);
  swift_release();

  return v16;
}

uint64_t sub_1B6B23C94(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62FFBB0(a6, a7);
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v13 = swift_getKeyPath();
  sub_1B62F06B8(v13, 1);
  swift_release();
  swift_release();
  signed int v14 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v15 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v15 = sub_1B69E07A0();
    swift_release();
  }
  int v22 = -1;
  *(_OWORD *)id v21 = 0uLL;
  uint64_t v16 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v14, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v16, v21, v15, &v22, a1, a5, v14, SHIWORD(v14), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v17 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v22 + 32);
  v23[0] = *(void *)(a5 + 16);
  v23[1] = v17;
  uint64_t v23[2] = a5;
  long long v24 = xmmword_1B6E4F270;
  uint64_t v25 = 1;
  long long v26 = *(_OWORD *)v21;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  char v29 = 1;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  swift_retain();
  sub_1B62FFBB0(a6, a7);
  sub_1B6D80384((uint64_t)v23, a6, a7);
  sub_1B62C2360(a6, a7);
  swift_release();
  sub_1B62C2360(a6, a7);
  return v15;
}

uint64_t sub_1B6B23EB0(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, float a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1B6B23FB0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (void (*)(void *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))sub_1B6D80674);
}

uint64_t sub_1B6B23EF0(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, float a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1B6B23FB0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (void (*)(void *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))sub_1B6D80710);
}

uint64_t sub_1B6B23F30(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, float a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1B6B23FB0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (void (*)(void *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))sub_1B6D808AC);
}

uint64_t sub_1B6B23F70(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, float a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1B6B23FB0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (void (*)(void *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))sub_1B6D80948);
}

uint64_t sub_1B6B23FB0(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, float a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(void *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v19 = swift_getKeyPath();
  sub_1B62F06B8(v19, 1);
  swift_release();
  swift_release();
  signed int v20 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v21 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v21 = sub_1B69E07A0();
    swift_release();
  }
  int v30 = -1;
  *(_OWORD *)char v29 = 0uLL;
  uint64_t v22 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v20, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v22, v29, v21, &v30, a1, a5, v20, SHIWORD(v20), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v23 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v30 + 32);
  v31[0] = *(void *)(a5 + 16);
  v31[1] = v23;
  v31[2] = a5;
  long long v32 = xmmword_1B6E4F270;
  uint64_t v33 = 1;
  long long v34 = *(_OWORD *)v29;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  char v37 = 1;
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  a13(v31, a6, a7, a8, a10, a11, a12, a9);
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  return v21;
}

uint64_t sub_1B6B2420C(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  swift_unknownObjectRetain();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v12 = swift_getKeyPath();
  sub_1B62F06B8(v12, 1);
  swift_release();
  swift_release();
  signed int v13 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v14 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v14 = sub_1B69E07A0();
    swift_release();
  }
  int v20 = -1;
  *(_OWORD *)uint64_t v19 = 0uLL;
  uint64_t v15 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v13, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v15, v19, v14, &v20, a1, a5, v13, SHIWORD(v13), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v16 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v20 + 32);
  v21[0] = *(void *)(a5 + 16);
  v21[1] = v16;
  void v21[2] = a5;
  long long v22 = xmmword_1B6E4F270;
  uint64_t v23 = 1;
  long long v24 = *(_OWORD *)v19;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  char v27 = 1;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  swift_unknownObjectRetain();
  swift_retain();
  sub_1B6D80C58((uint64_t)v21, a6);
  swift_release();
  swift_unknownObjectRelease_n();
  return v14;
}

uint64_t sub_1B6B2440C(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v130 = a7;
  uint64_t v131 = a8;
  if (a5 >= 1)
  {
    Swift::Int v16 = a5;
    uint64_t v123 = a4;
    int v124 = a3;
    LODWORD(v122) = result;
    uint64_t v135 = v14;
    swift_retain();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1B62F06B8(KeyPath, v16);
    swift_release();
    swift_release();
    swift_retain();
    uint64_t v19 = swift_getKeyPath();
    sub_1B62F06B8(v19, v16);
    swift_release();
    swift_release();
    uint64_t v20 = *(void *)(a6 + 32);
    ecs_stack_allocator_push_snapshot(v20);
    uint64_t v175 = *(int *)(a2 + 204);
    Swift::Int v125 = 4 * v16;
    uint64_t v133 = a6;
    uint64_t v134 = ecs_stack_allocator_allocate(v20, 4 * v16, 4);
    uint64_t v126 = a2;
    if ((*(unsigned char *)(a2 + 208) & 1) == 0)
    {
      uint64_t v31 = 0;
      long long v32 = (void *)&unk_1EB97E000;
      do
      {
        uint64_t v36 = *(void *)(a6 + 16);
        uint64_t v35 = (uint64_t *)(v36 + v32[141]);
        char v37 = (os_unfair_lock_s *)v35[3];
        swift_retain();
        os_unfair_lock_lock(v37);
        ++*(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
        uint64_t v38 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
        LODWORD(v39) = *(_DWORD *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
        if (v39 == -1)
        {
          long long v132 = v35;
          Swift::Int v40 = v16;
          unint64_t v41 = (char **)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v42 = OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity;
          uint64_t v43 = *(char **)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v39 = *(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
          uint64_t v44 = 2 * *(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity);
          *(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = v44;
          uint64_t v45 = (char *)swift_slowAlloc();
          *unint64_t v41 = v45;
          v41[1] = (char *)v44;
          if (v39 < 0) {
            goto LABEL_85;
          }
          if (v45 != v43 || v45 >= &v43[12 * v39]) {
            memmove(v45, v43, 12 * v39);
          }
          if (v43) {
            MEMORY[0x1BA9B84C0](v43, -1, -1);
          }
          Swift::Int v16 = v40;
          uint64_t v47 = *(void *)(v36 + v42);
          uint64_t v48 = *v41;
          long long v32 = &unk_1EB97E000;
          if (v47 - 1 != v39)
          {
            uint64_t v49 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
            int v50 = v39 + 1;
            do
            {
              int v51 = *(_DWORD *)(v36 + v49);
              uint64_t v52 = &v48[12 * v50 - 12];
              *(_DWORD *)uint64_t v52 = v50;
              *((_DWORD *)v52 + 1) = -1;
              *((_DWORD *)v52 + 2) = v51;
              ++v50;
            }
            while (v47 != v50);
          }
          int v33 = *(_DWORD *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager_generationSalt);
          long long v34 = &v48[12 * v47];
          *(void *)(v34 - 12) = -1;
          *((_DWORD *)v34 - 1) = v33;
          *(_DWORD *)(v36 + v38) = v39;
          uint64_t v35 = v132;
          a6 = v133;
        }
        *(_DWORD *)(v36 + v38) = *(_DWORD *)(*(void *)(v36 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                           + 12 * (int)v39);
        os_unfair_lock_unlock((os_unfair_lock_t)v35[3]);
        swift_release();
        *((_DWORD *)v134 + v31++) = v39;
      }
      while (v31 != v16);
    }
    uint64_t v129 = a12;
    uint64_t v127 = a11;
    uint64_t v128 = a10;
    uint64_t v21 = (4 * v16) >> 2;
    uint64_t v142 = 0;
    uint64_t v22 = v126;
    uint64_t v23 = v16 / *(void *)(v126 + 64)
        + 2 * *(void *)(*(void *)(*(void *)(*(void *)(a6 + 16) + 96) + 40 * (int)v175 + 32) + 16)
        + 1;
    long long v24 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 24 * v23, 8);
    v140[0] = v24;
    v140[1] = v23;
    uint64_t v141 = 0;
    uint64_t v25 = *(void *)(a6 + 16);
    swift_retain();
    uint64_t v136 = 0;
    uint64_t v137 = v21;
    long long v138 = v134;
    uint64_t v139 = v21;
    if (v125 < 1)
    {
      swift_release();
      uint64_t v30 = 0;
    }
    else
    {
      long long v132 = &v113;
      unint64_t v26 = v123;
      uint64_t v27 = v123;
      swift_retain();
      char v28 = v124 & 1;
      uint64_t v29 = (uint64_t)v134;
      do
      {
        swift_retain();
        sub_1B62F0B08(v175, v27 | ((HIDWORD(v26) & 1) << 32), v28, v25, &v136, v22, v29, v21, &v142, a6, v175, v140);
        swift_release();
      }
      while (v137 - v136 > 0);
      swift_release();
      swift_release();
      uint64_t v30 = v141;
      long long v24 = (void *)v140[0];
    }
    uint64_t v53 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 48 * v30, 8);
    uint64_t v54 = (uint64_t)v53;
    if (v30)
    {
      unint64_t v55 = 0;
      uint64_t v56 = v24 + 2;
      uint64_t v57 = v30;
      uint64_t v58 = v53;
      while (1)
      {
        uint64_t v59 = *(v56 - 1);
        uint64_t v60 = *v56;
        uint64_t v61 = swift_retain();
        if ((v55 & 0x8000000000000000) != 0)
        {
          swift_release();
          swift_release();
          swift_release();
          sub_1B62F648C(v129);
          int v115 = 0;
          uint64_t v114 = 3451;
          LOBYTE(v113) = 2;
          goto LABEL_84;
        }
        if (HIDWORD(v55)) {
          break;
        }
        *((_DWORD *)v58 + 1) = v60;
        *((_DWORD *)v58 + 2) = v55;
        unint64_t v55 = v55 - v59 + v60;
        *(_DWORD *)uint64_t v58 = v59;
        v58[2] = 0;
        v58[3] = 0;
        v58[4] = 0;
        v58[5] = v61;
        v58 += 6;
        v56 += 3;
        if (!--v57) {
          goto LABEL_30;
        }
      }
      swift_release();
      swift_release();
      swift_release();
      sub_1B62F648C(v129);
      int v115 = 0;
      uint64_t v114 = 3455;
      LOBYTE(v113) = 2;
LABEL_84:
      sub_1B6E32BD8();
      __break(1u);
LABEL_85:
      int v115 = 0;
      uint64_t v114 = 1046;
      LOBYTE(v113) = 2;
      sub_1B6E32C88();
      __break(1u);
      goto LABEL_86;
    }
LABEL_30:
    uint64_t v126 = a13;
    Swift::Int v125 = a9;
    uint64_t v62 = v133;
    uint64_t v63 = *(void *)(v133 + 16);
    uint64_t v64 = qword_1EB97DC28;
    swift_retain();
    if (v64 != -1) {
      swift_once();
    }
    int v124 = a14;
    uint64_t v169 = qword_1EB997A18;
    int v170 = 0;
    char v171 = 2;
    uint64_t v172 = 0;
    char v173 = 2;
    uint64_t v174 = 0;
    swift_retain();
    sub_1B62CB7E0(v63, v62, (uint64_t)&v169, v54, v30, v30, (uint64_t)&v143);
    swift_release();
    swift_release();
    uint64_t v123 = v150;
    if (v122)
    {
      if (v150 > 0)
      {
        uint64_t v65 = v147;
        if (v147)
        {
          uint64_t v66 = v149;
          uint64_t v67 = v149[4];
          uint64_t v121 = v67;
          uint64_t v122 = v148;
          int v68 = *(unsigned __int8 *)(v148 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v116 = v149 + 13;
          uint64_t v118 = v149 + 8;
          uint64_t v119 = v149 + 6;
          uint64_t v117 = v159;
          uint64_t v69 = (uint64_t **)(v146 + 24);
          LODWORD(v120) = v68;
          while (1)
          {
            uint64_t v175 = v65;
            uint64_t v70 = *((unsigned int *)v69 - 6);
            uint64_t v71 = *((unsigned int *)v69 - 5);
            uint64_t v72 = *((unsigned int *)v69 - 4);
            uint64_t v134 = *(v69 - 1);
            uint64_t v73 = v69[1];
            long long v132 = *v69;
            uint64_t v74 = (uint64_t)v69[2];
            if (v68)
            {
              uint64_t v75 = *(os_unfair_lock_s **)(v74 + 376);
              swift_retain();
              os_unfair_lock_lock(v75);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v74 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v67);
            sub_1B62CA4FC((uint64_t)v119, (uint64_t)v157, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v76 = v66[4];
            uint64_t v77 = *(void *)(*(void *)(*(void *)(*(void *)(v74 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v66[6] = ecs_stack_allocator_allocate(v76, 48 * v77, 8);
            v66[7] = v77;
            uint64_t v78 = v118;
            v118[1] = 0;
            v78[2] = 0;
            *uint64_t v78 = 0;
            swift_release();
            v158[0] = v122;
            v158[1] = v74;
            v158[2] = v66;
            v158[3] = v72;
            v158[4] = (v71 - v70 + v72);
            v158[5] = v123;
            v158[6] = v70;
            v158[7] = v71;
            uint64_t v79 = v117;
            *(void *)uint64_t v117 = 0;
            *((void *)v79 + 1) = 0;
            v159[16] = 1;
            uint64_t v80 = v135;
            char v160 = v134;
            uint64_t v161 = v132;
            char v162 = v73;
            sub_1B696C4B0((uint64_t)v158, v130, v131, v125, v128, v127, v129, v126, v124 & 1);
            if (v80) {
              break;
            }
            v151[0] = v143;
            v151[1] = v144;
            uint64_t v152 = v145;
            sub_1B6345178(v66, (unsigned __int16 **)v151, (uint64_t)v157);
            uint64_t v135 = 0;
            uint64_t v62 = v133;
            int v68 = v120;
            if (*(void *)(v66[13] + 16))
            {
              uint64_t v81 = swift_bridgeObjectRetain();
              sub_1B639147C(v81, v74);
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v83 = v66[13];
              if (isUniquelyReferenced_nonNull_native)
              {
                sub_1B6399BB8(0, *(void *)(v83 + 16));
              }
              else
              {
                uint64_t v84 = (void *)MEMORY[0x1E4FBC860];
                if (*(void *)(v83 + 24) >= 2uLL)
                {
                  sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                  uint64_t v84 = (void *)swift_allocObject();
                  size_t v85 = j__malloc_size(v84);
                  v84[2] = 0;
                  v84[3] = 2 * ((uint64_t)(v85 - 32) / 72);
                }
                *uint64_t v116 = v84;
                swift_bridgeObjectRelease();
              }
              if (*(unsigned __int8 *)(v66[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
              {
                char v86 = *(char **)(v74 + 232);
                uint64_t v87 = *(char **)(v74 + 256);
                if (v86 == v87)
                {
                  uint64_t v88 = *(char **)(v74 + 240);
                }
                else
                {
                  sub_1B666018C(v87, v86);
                  uint64_t v87 = *(char **)(v74 + 232);
                  uint64_t v88 = *(char **)(v74 + 240);
                  if (v88 == v87)
                  {
                    uint64_t v88 = 0;
                    uint64_t v87 = 0;
                    *(void *)(v74 + 232) = 0;
                    *(void *)(v74 + 240) = 0;
                  }
                }
                *(void *)(v74 + 248) = v88;
                *(void *)(v74 + 256) = v87;
              }
            }
            uint64_t v67 = v121;
            ecs_stack_allocator_pop_snapshot(v121);
            if (v68)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v74 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v74 + 376));
            }
            swift_release();
            v69 += 6;
            uint64_t v65 = v175 - 1;
            if (v175 == 1) {
              goto LABEL_77;
            }
          }
LABEL_86:
          uint64_t result = swift_unexpectedError();
          __break(1u);
          return result;
        }
      }
      goto LABEL_77;
    }
    if (v150 <= 0 || (uint64_t v89 = v147) == 0)
    {
LABEL_77:
      sub_1B62F073C((uint64_t)&v143);
      return ecs_stack_allocator_pop_snapshot(*(void *)(v62 + 32));
    }
    uint64_t v90 = v149;
    uint64_t v175 = v149[4];
    int v91 = *(unsigned __int8 *)(v148 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v119 = v149 + 6;
    uint64_t v120 = v148;
    uint64_t v116 = v149 + 13;
    uint64_t v118 = v149 + 8;
    uint64_t v117 = v165;
    uint64_t v92 = (uint64_t *)(v146 + 24);
    LODWORD(v121) = v91;
    while (1)
    {
      uint64_t v122 = v89;
      uint64_t v93 = *((unsigned int *)v92 - 6);
      uint64_t v94 = *((unsigned int *)v92 - 5);
      uint64_t v95 = *((unsigned int *)v92 - 4);
      uint64_t v96 = *v92;
      uint64_t v134 = (void *)*(v92 - 1);
      uint64_t v97 = v92[2];
      long long v132 = (uint64_t *)v92[1];
      if (v91)
      {
        uint64_t v98 = *(os_unfair_lock_s **)(v97 + 376);
        swift_retain();
        os_unfair_lock_lock(v98);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v97 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v175);
      sub_1B62CA4FC((uint64_t)v119, (uint64_t)v163, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v99 = v90[4];
      uint64_t v100 = *(void *)(*(void *)(*(void *)(*(void *)(v97 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v90[6] = ecs_stack_allocator_allocate(v99, 48 * v100, 8);
      v90[7] = v100;
      int v101 = v118;
      v118[1] = 0;
      v101[2] = 0;
      void *v101 = 0;
      swift_release();
      v164[0] = v120;
      v164[1] = v97;
      v164[2] = v90;
      v164[3] = v95;
      v164[4] = (v94 - v93 + v95);
      v164[5] = v123;
      v164[6] = v93;
      v164[7] = v94;
      uint64_t v102 = v117;
      *(void *)uint64_t v117 = 0;
      *((void *)v102 + 1) = 0;
      v165[16] = 1;
      uint64_t v103 = v135;
      uint64_t v166 = v134;
      uint64_t v167 = v96;
      long long v168 = v132;
      sub_1B696C4B0((uint64_t)v164, v130, v131, v125, v128, v127, v129, v126, v124 & 1);
      if (v103) {
        break;
      }
      v153[0] = v143;
      v153[1] = v144;
      uint64_t v154 = v145;
      sub_1B6345178(v90, (unsigned __int16 **)v153, (uint64_t)v163);
      uint64_t v135 = 0;
      uint64_t v62 = v133;
      if (*(void *)(v90[13] + 16))
      {
        uint64_t v104 = swift_bridgeObjectRetain();
        sub_1B639147C(v104, v97);
        swift_bridgeObjectRelease();
        char v105 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v106 = v90[13];
        if (v105)
        {
          sub_1B6399BB8(0, *(void *)(v106 + 16));
        }
        else
        {
          uint64_t v107 = (void *)MEMORY[0x1E4FBC860];
          if (*(void *)(v106 + 24) >= 2uLL)
          {
            sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
            uint64_t v107 = (void *)swift_allocObject();
            size_t v108 = j__malloc_size(v107);
            v107[2] = 0;
            v107[3] = 2 * ((uint64_t)(v108 - 32) / 72);
          }
          *uint64_t v116 = v107;
          swift_bridgeObjectRelease();
        }
        if (*(unsigned __int8 *)(v90[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
        {
          uint64_t v109 = *(char **)(v97 + 232);
          uint64_t v110 = *(char **)(v97 + 256);
          if (v109 == v110)
          {
            char v111 = *(char **)(v97 + 240);
          }
          else
          {
            sub_1B666018C(v110, v109);
            uint64_t v110 = *(char **)(v97 + 232);
            char v111 = *(char **)(v97 + 240);
            if (v111 == v110)
            {
              char v111 = 0;
              uint64_t v110 = 0;
              *(void *)(v97 + 232) = 0;
              *(void *)(v97 + 240) = 0;
            }
          }
          *(void *)(v97 + 248) = v111;
          *(void *)(v97 + 256) = v110;
        }
      }
      ecs_stack_allocator_pop_snapshot(v175);
      int v91 = v121;
      if (v121)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v97 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v97 + 376));
      }
      swift_release();
      v92 += 6;
      uint64_t v89 = v122 - 1;
      if (v122 == 1) {
        goto LABEL_77;
      }
    }
    v155[0] = v143;
    v155[1] = v144;
    uint64_t v156 = v145;
    sub_1B6345178(v90, (unsigned __int16 **)v155, (uint64_t)v163);
    sub_1B634507C((char *)v97);
    ecs_stack_allocator_pop_snapshot(v175);
    uint64_t v112 = v133;
    if (v121)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v97 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v97 + 376));
    }
    sub_1B62F073C((uint64_t)&v143);
    swift_release();
    return ecs_stack_allocator_pop_snapshot(*(void *)(v112 + 32));
  }
  return result;
}

uint64_t sub_1B6B25170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B62FD2F0(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(uint64_t **)(v3 + 40), *(void *)(v3 + 48), *(_DWORD *)(v3 + 56), *(void **)(v3 + 64));
}

uint64_t sub_1B6B251AC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6B251BC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6B251CC(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, __n128 a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v127 = a8;
  uint64_t v128 = a7;
  __n128 v125 = a9;
  __n128 v126 = a10;
  if (a5 >= 1)
  {
    Swift::Int v14 = a5;
    uint64_t v120 = a4;
    LODWORD(v121) = a3;
    LODWORD(v122) = result;
    uint64_t v133 = v12;
    swift_retain();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1B62F06B8(KeyPath, v14);
    swift_release();
    swift_release();
    swift_retain();
    uint64_t v17 = swift_getKeyPath();
    sub_1B62F06B8(v17, v14);
    swift_release();
    swift_release();
    uint64_t v18 = *(void *)(a6 + 32);
    ecs_stack_allocator_push_snapshot(v18);
    uint64_t v173 = *(int *)(a2 + 204);
    uint64_t v123 = 4 * v14;
    uint64_t v131 = a6;
    long long v132 = ecs_stack_allocator_allocate(v18, 4 * v14, 4);
    uint64_t v124 = a2;
    if ((*(unsigned char *)(a2 + 208) & 1) == 0)
    {
      uint64_t v28 = 0;
      uint64_t v29 = (void *)&unk_1EB97E000;
      Swift::Int v129 = v14;
      do
      {
        uint64_t v33 = *(void *)(a6 + 16);
        long long v32 = (uint64_t *)(v33 + v29[141]);
        long long v34 = (os_unfair_lock_s *)v32[3];
        swift_retain();
        os_unfair_lock_lock(v34);
        ++*(void *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
        uint64_t v35 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
        LODWORD(v36) = *(_DWORD *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
        if (v36 == -1)
        {
          uint64_t v130 = v32;
          char v37 = (char **)(v33 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v38 = OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity;
          uint64_t v39 = *(char **)(v33 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v36 = *(void *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
          uint64_t v40 = 2 * *(void *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity);
          *(void *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = v40;
          unint64_t v41 = (char *)swift_slowAlloc();
          *char v37 = v41;
          v37[1] = (char *)v40;
          if (v36 < 0) {
            goto LABEL_86;
          }
          if (v41 != v39 || v41 >= &v39[12 * v36]) {
            memmove(v41, v39, 12 * v36);
          }
          if (v39) {
            MEMORY[0x1BA9B84C0](v39, -1, -1);
          }
          uint64_t v43 = *(void *)(v33 + v38);
          uint64_t v44 = *v37;
          uint64_t v29 = &unk_1EB97E000;
          if (v43 - 1 != v36)
          {
            uint64_t v45 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
            int v46 = v36 + 1;
            do
            {
              int v47 = *(_DWORD *)(v33 + v45);
              uint64_t v48 = &v44[12 * v46 - 12];
              *(_DWORD *)uint64_t v48 = v46;
              *((_DWORD *)v48 + 1) = -1;
              *((_DWORD *)v48 + 2) = v47;
              ++v46;
            }
            while (v43 != v46);
          }
          int v30 = *(_DWORD *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager_generationSalt);
          uint64_t v31 = &v44[12 * v43];
          *(void *)(v31 - 12) = -1;
          *((_DWORD *)v31 - 1) = v30;
          *(_DWORD *)(v33 + v35) = v36;
          long long v32 = v130;
          a6 = v131;
          Swift::Int v14 = v129;
        }
        *(_DWORD *)(v33 + v35) = *(_DWORD *)(*(void *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                           + 12 * (int)v36);
        os_unfair_lock_unlock((os_unfair_lock_t)v32[3]);
        swift_release();
        *((_DWORD *)v132 + v28++) = v36;
      }
      while (v28 != v14);
    }
    uint64_t v140 = 0;
    uint64_t v19 = v124;
    uint64_t v20 = v14 / *(void *)(v124 + 64)
        + 2 * *(void *)(*(void *)(*(void *)(*(void *)(a6 + 16) + 96) + 40 * (int)v173 + 32) + 16)
        + 1;
    uint64_t v21 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 24 * v20, 8);
    v138[0] = v21;
    v138[1] = v20;
    uint64_t v139 = 0;
    uint64_t v22 = *(void *)(a6 + 16);
    swift_retain();
    uint64_t v134 = 0;
    uint64_t v135 = (4 * v14) >> 2;
    uint64_t v136 = v132;
    uint64_t v137 = v135;
    if (v123 < 1)
    {
      swift_release();
      uint64_t v27 = 0;
    }
    else
    {
      uint64_t v130 = &v113;
      unint64_t v23 = v120;
      uint64_t v24 = v120;
      swift_retain();
      char v25 = v121 & 1;
      uint64_t v26 = (uint64_t)v132;
      do
      {
        swift_retain();
        sub_1B62F0B08(v173, v24 | ((HIDWORD(v23) & 1) << 32), v25, v22, &v134, v19, v26, (4 * v14) >> 2, &v140, a6, v173, v138);
        swift_release();
      }
      while (v135 - v134 > 0);
      swift_release();
      swift_release();
      uint64_t v27 = v139;
      uint64_t v21 = (void *)v138[0];
    }
    uint64_t v49 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 48 * v27, 8);
    uint64_t v50 = (uint64_t)v49;
    if (v27)
    {
      unint64_t v51 = 0;
      uint64_t v52 = v21 + 2;
      uint64_t v53 = v27;
      uint64_t v54 = v49;
      while (1)
      {
        uint64_t v55 = *(v52 - 1);
        uint64_t v56 = *v52;
        uint64_t v57 = swift_retain();
        if ((v51 & 0x8000000000000000) != 0)
        {
          swift_release();
          int v115 = 0;
          uint64_t v114 = 3451;
          LOBYTE(v113) = 2;
          goto LABEL_85;
        }
        if (HIDWORD(v51)) {
          break;
        }
        *((_DWORD *)v54 + 1) = v56;
        *((_DWORD *)v54 + 2) = v51;
        unint64_t v51 = v51 - v55 + v56;
        *(_DWORD *)uint64_t v54 = v55;
        v54[2] = 0;
        v54[3] = 0;
        v54[4] = 0;
        v54[5] = v57;
        v54 += 6;
        v52 += 3;
        if (!--v53) {
          goto LABEL_30;
        }
      }
      swift_release();
      int v115 = 0;
      uint64_t v114 = 3455;
      LOBYTE(v113) = 2;
LABEL_85:
      sub_1B6E32BD8();
      __break(1u);
LABEL_86:
      int v115 = 0;
      uint64_t v114 = 1046;
      LOBYTE(v113) = 2;
      sub_1B6E32C88();
      __break(1u);
      goto LABEL_87;
    }
LABEL_30:
    LODWORD(v124) = a12;
    uint64_t v123 = a11;
    uint64_t v58 = v131;
    uint64_t v59 = *(void *)(v131 + 16);
    uint64_t v60 = qword_1EB97DC28;
    swift_retain();
    if (v60 != -1) {
      swift_once();
    }
    uint64_t v167 = qword_1EB997A18;
    int v168 = 0;
    char v169 = 2;
    uint64_t v170 = 0;
    char v171 = 2;
    uint64_t v172 = 0;
    swift_retain();
    sub_1B62CB7E0(v59, v58, (uint64_t)&v167, v50, v27, v27, (uint64_t)&v141);
    swift_release();
    swift_release();
    if (v122)
    {
      if (v148 > 0)
      {
        uint64_t v61 = v145;
        uint64_t v62 = v131;
        if (v145)
        {
          uint64_t v122 = v148;
          uint64_t v63 = v147;
          uint64_t v64 = v147[4];
          uint64_t v121 = v146;
          LODWORD(v173) = *(unsigned __int8 *)(v146 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v116 = v147 + 13;
          uint64_t v118 = v147 + 8;
          uint64_t v119 = v147 + 6;
          uint64_t v117 = v157;
          uint64_t v65 = (uint64_t *)(v144 + 24);
          uint64_t v120 = v64;
          while (1)
          {
            long long v132 = v61;
            uint64_t v67 = *((unsigned int *)v65 - 6);
            uint64_t v66 = *((unsigned int *)v65 - 5);
            uint64_t v68 = *((unsigned int *)v65 - 4);
            uint64_t v69 = (uint64_t *)*(v65 - 1);
            uint64_t v70 = *v65;
            uint64_t v71 = v65[2];
            Swift::Int v129 = v65[1];
            uint64_t v130 = v69;
            if (v173)
            {
              uint64_t v72 = *(os_unfair_lock_s **)(v71 + 376);
              swift_retain();
              os_unfair_lock_lock(v72);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v71 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v64);
            sub_1B62CA4FC((uint64_t)v119, (uint64_t)v155, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v73 = v63[4];
            uint64_t v74 = *(void *)(*(void *)(*(void *)(*(void *)(v71 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v63[6] = ecs_stack_allocator_allocate(v73, 48 * v74, 8);
            v63[7] = v74;
            uint64_t v75 = v118;
            v118[1] = 0;
            _OWORD v75[2] = 0;
            *uint64_t v75 = 0;
            swift_release();
            v156[0] = v121;
            v156[1] = v71;
            v156[2] = v63;
            v156[3] = v68;
            v156[4] = (v66 - v67 + v68);
            uint64_t v76 = v123;
            v156[5] = v122;
            v156[6] = v67;
            v156[7] = v66;
            uint64_t v77 = v117;
            *(void *)uint64_t v117 = 0;
            *((void *)v77 + 1) = 0;
            v157[16] = 1;
            uint64_t v158 = v130;
            uint64_t v159 = v70;
            Swift::Int v160 = v129;
            uint64_t v78 = v133;
            sub_1B69A2200(v156, v128, v127, v76, v124, v125, v126);
            if (v78) {
              break;
            }
            v149[0] = v141;
            v149[1] = v142;
            uint64_t v150 = v143;
            sub_1B6345178(v63, (unsigned __int16 **)v149, (uint64_t)v155);
            uint64_t v133 = 0;
            uint64_t v62 = v131;
            if (*(void *)(v63[13] + 16))
            {
              uint64_t v79 = swift_bridgeObjectRetain();
              sub_1B639147C(v79, v71);
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v81 = v63[13];
              if (isUniquelyReferenced_nonNull_native)
              {
                sub_1B6399BB8(0, *(void *)(v81 + 16));
              }
              else
              {
                uint64_t v82 = (void *)MEMORY[0x1E4FBC860];
                if (*(void *)(v81 + 24) >= 2uLL)
                {
                  sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                  uint64_t v82 = (void *)swift_allocObject();
                  size_t v83 = j__malloc_size(v82);
                  v82[2] = 0;
                  v82[3] = 2 * ((uint64_t)(v83 - 32) / 72);
                }
                *uint64_t v116 = v82;
                swift_bridgeObjectRelease();
              }
              if (*(unsigned __int8 *)(v63[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
              {
                uint64_t v84 = *(char **)(v71 + 232);
                size_t v85 = *(char **)(v71 + 256);
                if (v84 == v85)
                {
                  char v86 = *(char **)(v71 + 240);
                }
                else
                {
                  sub_1B666018C(v85, v84);
                  size_t v85 = *(char **)(v71 + 232);
                  char v86 = *(char **)(v71 + 240);
                  if (v86 == v85)
                  {
                    char v86 = 0;
                    size_t v85 = 0;
                    *(void *)(v71 + 232) = 0;
                    *(void *)(v71 + 240) = 0;
                  }
                }
                *(void *)(v71 + 248) = v86;
                *(void *)(v71 + 256) = v85;
              }
            }
            uint64_t v64 = v120;
            ecs_stack_allocator_pop_snapshot(v120);
            if (v173)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v71 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v71 + 376));
            }
            swift_release();
            v65 += 6;
            uint64_t v61 = (void *)((char *)v132 - 1);
            if (v132 == (void *)1) {
              goto LABEL_78;
            }
          }
LABEL_87:
          uint64_t result = swift_unexpectedError();
          __break(1u);
          return result;
        }
        goto LABEL_78;
      }
      goto LABEL_77;
    }
    if (v148 <= 0)
    {
LABEL_77:
      uint64_t v62 = v131;
      goto LABEL_78;
    }
    Swift::Int v87 = (Swift::Int)v145;
    uint64_t v62 = v131;
    if (!v145)
    {
LABEL_78:
      sub_1B62F073C((uint64_t)&v141);
      return ecs_stack_allocator_pop_snapshot(*(void *)(v62 + 32));
    }
    uint64_t v122 = v148;
    uint64_t v88 = v147;
    uint64_t v173 = v147[4];
    int v89 = *(unsigned __int8 *)(v146 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v119 = v147 + 6;
    uint64_t v120 = v146;
    uint64_t v116 = v147 + 13;
    uint64_t v118 = v147 + 8;
    uint64_t v117 = v163;
    uint64_t v90 = (uint64_t *)(v144 + 24);
    LODWORD(v121) = v89;
    while (1)
    {
      uint64_t v92 = *((unsigned int *)v90 - 6);
      uint64_t v91 = *((unsigned int *)v90 - 5);
      uint64_t v93 = *((unsigned int *)v90 - 4);
      uint64_t v94 = *v90;
      long long v132 = (void *)*(v90 - 1);
      uint64_t v95 = (uint64_t *)v90[1];
      uint64_t v96 = v90[2];
      Swift::Int v129 = v87;
      uint64_t v130 = v95;
      if (v89)
      {
        uint64_t v97 = *(os_unfair_lock_s **)(v96 + 376);
        swift_retain();
        os_unfair_lock_lock(v97);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v96 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v173);
      sub_1B62CA4FC((uint64_t)v119, (uint64_t)v161, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v98 = v88[4];
      uint64_t v99 = *(void *)(*(void *)(*(void *)(*(void *)(v96 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v88[6] = ecs_stack_allocator_allocate(v98, 48 * v99, 8);
      v88[7] = v99;
      uint64_t v100 = v118;
      v118[1] = 0;
      v100[2] = 0;
      *uint64_t v100 = 0;
      swift_release();
      v162[0] = v120;
      v162[1] = v96;
      v162[2] = v88;
      v162[3] = v93;
      v162[4] = (v91 - v92 + v93);
      uint64_t v101 = v123;
      v162[5] = v122;
      v162[6] = v92;
      v162[7] = v91;
      uint64_t v102 = v117;
      *(void *)uint64_t v117 = 0;
      *((void *)v102 + 1) = 0;
      v163[16] = 1;
      uint64_t v103 = v133;
      uint64_t v164 = v132;
      uint64_t v165 = v94;
      uint64_t v166 = v130;
      sub_1B69A2200(v162, v128, v127, v101, v124, v125, v126);
      if (v103) {
        break;
      }
      v151[0] = v141;
      v151[1] = v142;
      uint64_t v152 = v143;
      sub_1B6345178(v88, (unsigned __int16 **)v151, (uint64_t)v161);
      uint64_t v133 = 0;
      uint64_t v62 = v131;
      if (*(void *)(v88[13] + 16))
      {
        uint64_t v104 = swift_bridgeObjectRetain();
        sub_1B639147C(v104, v96);
        swift_bridgeObjectRelease();
        char v105 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v106 = v88[13];
        if (v105)
        {
          sub_1B6399BB8(0, *(void *)(v106 + 16));
        }
        else
        {
          uint64_t v107 = (void *)MEMORY[0x1E4FBC860];
          if (*(void *)(v106 + 24) >= 2uLL)
          {
            sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
            uint64_t v107 = (void *)swift_allocObject();
            size_t v108 = j__malloc_size(v107);
            v107[2] = 0;
            v107[3] = 2 * ((uint64_t)(v108 - 32) / 72);
          }
          *uint64_t v116 = v107;
          swift_bridgeObjectRelease();
        }
        if (*(unsigned __int8 *)(v88[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
        {
          uint64_t v109 = *(char **)(v96 + 232);
          uint64_t v110 = *(char **)(v96 + 256);
          if (v109 == v110)
          {
            char v111 = *(char **)(v96 + 240);
          }
          else
          {
            sub_1B666018C(v110, v109);
            uint64_t v110 = *(char **)(v96 + 232);
            char v111 = *(char **)(v96 + 240);
            if (v111 == v110)
            {
              char v111 = 0;
              uint64_t v110 = 0;
              *(void *)(v96 + 232) = 0;
              *(void *)(v96 + 240) = 0;
            }
          }
          *(void *)(v96 + 248) = v111;
          *(void *)(v96 + 256) = v110;
        }
      }
      ecs_stack_allocator_pop_snapshot(v173);
      int v89 = v121;
      if (v121)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 376));
      }
      swift_release();
      v90 += 6;
      Swift::Int v87 = v129 - 1;
      if (v129 == 1) {
        goto LABEL_78;
      }
    }
    v153[0] = v141;
    v153[1] = v142;
    uint64_t v154 = v143;
    sub_1B6345178(v88, (unsigned __int16 **)v153, (uint64_t)v161);
    sub_1B634507C((char *)v96);
    ecs_stack_allocator_pop_snapshot(v173);
    uint64_t v112 = v131;
    if (v121)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 376));
    }
    sub_1B62F073C((uint64_t)&v141);
    swift_release();
    return ecs_stack_allocator_pop_snapshot(*(void *)(v112 + 32));
  }
  return result;
}

uint64_t sub_1B6B25EE4(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int32x4_t *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20)
{
  uint64_t v144 = a7;
  uint64_t v145 = a8;
  if (a5 >= 1)
  {
    Swift::Int v22 = a5;
    uint64_t v137 = a4;
    LODWORD(v138) = a3;
    LODWORD(v129) = result;
    uint64_t v148 = v20;
    swift_retain();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1B62F06B8(KeyPath, v22);
    swift_release();
    swift_release();
    swift_retain();
    uint64_t v25 = swift_getKeyPath();
    sub_1B62F06B8(v25, v22);
    swift_release();
    swift_release();
    uint64_t v26 = *(void *)(a6 + 32);
    ecs_stack_allocator_push_snapshot(v26);
    uint64_t v188 = *(int *)(a2 + 204);
    Swift::Int v139 = 4 * v22;
    uint64_t v147 = ecs_stack_allocator_allocate(v26, 4 * v22, 4);
    uint64_t v140 = a2;
    char v27 = *(unsigned char *)(a2 + 208);
    uint64_t v130 = a6;
    if ((v27 & 1) == 0)
    {
      uint64_t v38 = 0;
      Swift::Int v141 = v22;
      do
      {
        uint64_t v42 = *(void *)(a6 + 16);
        unint64_t v41 = (uint64_t *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_lock);
        uint64_t v43 = *(os_unfair_lock_s **)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
        swift_retain();
        os_unfair_lock_lock(v43);
        ++*(void *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
        uint64_t v44 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
        LODWORD(v45) = *(_DWORD *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
        if (v45 == -1)
        {
          uint64_t v146 = v41;
          int v46 = (char **)(v42 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v47 = OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity;
          uint64_t v48 = *(char **)(v42 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v45 = *(void *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
          uint64_t v49 = 2 * *(void *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity);
          *(void *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = v49;
          uint64_t v50 = (char *)swift_slowAlloc();
          *int v46 = v50;
          v46[1] = (char *)v49;
          if (v45 < 0) {
            goto LABEL_85;
          }
          if (v50 != v48 || v50 >= &v48[12 * v45]) {
            memmove(v50, v48, 12 * v45);
          }
          if (v48) {
            MEMORY[0x1BA9B84C0](v48, -1, -1);
          }
          uint64_t v52 = *(void *)(v42 + v47);
          uint64_t v53 = *v46;
          if (v52 - 1 != v45)
          {
            uint64_t v54 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
            int v55 = v45 + 1;
            do
            {
              int v56 = *(_DWORD *)(v42 + v54);
              uint64_t v57 = &v53[12 * v55 - 12];
              *(_DWORD *)uint64_t v57 = v55;
              *((_DWORD *)v57 + 1) = -1;
              *((_DWORD *)v57 + 2) = v56;
              ++v55;
            }
            while (v52 != v55);
          }
          int v39 = *(_DWORD *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager_generationSalt);
          uint64_t v40 = &v53[12 * v52];
          *(void *)(v40 - 12) = -1;
          *((_DWORD *)v40 - 1) = v39;
          *(_DWORD *)(v42 + v44) = v45;
          a6 = v130;
          Swift::Int v22 = v141;
          unint64_t v41 = v146;
        }
        *(_DWORD *)(v42 + v44) = *(_DWORD *)(*(void *)(v42 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                           + 12 * (int)v45);
        os_unfair_lock_unlock((os_unfair_lock_t)v41[3]);
        swift_release();
        *((_DWORD *)v147 + v38++) = v45;
      }
      while (v38 != v22);
    }
    uint64_t v142 = a10;
    uint64_t v143 = a9;
    uint64_t v28 = (4 * v22) >> 2;
    uint64_t v155 = 0;
    uint64_t v29 = v140;
    uint64_t v30 = v22 / *(void *)(v140 + 64)
        + 2 * *(void *)(*(void *)(*(void *)(*(void *)(a6 + 16) + 96) + 40 * (int)v188 + 32) + 16)
        + 1;
    uint64_t v31 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 24 * v30, 8);
    v153[0] = v31;
    v153[1] = v30;
    uint64_t v154 = 0;
    uint64_t v32 = *(void *)(a6 + 16);
    swift_retain();
    uint64_t v149 = 0;
    uint64_t v150 = v28;
    uint64_t v151 = v147;
    uint64_t v152 = v28;
    if (v139 < 1)
    {
      swift_release();
      uint64_t v37 = 0;
    }
    else
    {
      uint64_t v146 = &v120;
      unint64_t v33 = v137;
      uint64_t v34 = v137;
      swift_retain();
      char v35 = v138 & 1;
      uint64_t v36 = (uint64_t)v147;
      do
      {
        swift_retain();
        sub_1B62F0B08(v188, v34 | ((HIDWORD(v33) & 1) << 32), v35, v32, &v149, v29, v36, v28, &v155, a6, v188, v153);
        swift_release();
      }
      while (v150 - v149 > 0);
      swift_release();
      swift_release();
      uint64_t v37 = v154;
      uint64_t v31 = (void *)v153[0];
    }
    Swift::Int v141 = a14;
    uint64_t v58 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 48 * v37, 8);
    uint64_t v59 = (uint64_t)v58;
    if (v37)
    {
      unint64_t v60 = 0;
      uint64_t v61 = v31 + 2;
      uint64_t v62 = v37;
      uint64_t v63 = v58;
      while (1)
      {
        uint64_t v64 = *(v61 - 1);
        uint64_t v65 = *v61;
        uint64_t v66 = swift_retain();
        if ((v60 & 0x8000000000000000) != 0)
        {
          sub_1B696C828((uint64_t)v145);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
          LODWORD(v122) = 0;
          uint64_t v121 = 3451;
          LOBYTE(v120) = 2;
          goto LABEL_84;
        }
        if (HIDWORD(v60)) {
          break;
        }
        *((_DWORD *)v63 + 1) = v65;
        *((_DWORD *)v63 + 2) = v60;
        unint64_t v60 = v60 - v64 + v65;
        *(_DWORD *)uint64_t v63 = v64;
        v63[2] = 0;
        v63[3] = 0;
        v63[4] = 0;
        v63[5] = v66;
        v63 += 6;
        v61 += 3;
        if (!--v62) {
          goto LABEL_30;
        }
      }
      sub_1B696C828((uint64_t)v145);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      LODWORD(v122) = 0;
      uint64_t v121 = 3455;
      LOBYTE(v120) = 2;
LABEL_84:
      sub_1B6E32BD8();
      __break(1u);
LABEL_85:
      LODWORD(v122) = 0;
      uint64_t v121 = 1046;
      LOBYTE(v120) = 2;
      sub_1B6E32C88();
      __break(1u);
      goto LABEL_86;
    }
LABEL_30:
    uint64_t v140 = a13;
    Swift::Int v139 = a12;
    uint64_t v138 = a11;
    uint64_t v67 = v130;
    uint64_t v68 = *(void *)(v130 + 16);
    uint64_t v69 = qword_1EB97DC28;
    swift_retain();
    if (v69 != -1) {
      swift_once();
    }
    LODWORD(v137) = a20;
    uint64_t v136 = a19;
    uint64_t v135 = a18;
    uint64_t v134 = a17;
    uint64_t v133 = a16;
    uint64_t v132 = a15;
    uint64_t v182 = qword_1EB997A18;
    int v183 = 0;
    char v184 = 2;
    uint64_t v185 = 0;
    char v186 = 2;
    uint64_t v187 = 0;
    swift_retain();
    sub_1B62CB7E0(v68, v67, (uint64_t)&v182, v59, v37, v37, (uint64_t)&v156);
    swift_release();
    swift_release();
    uint64_t v131 = v163;
    if (v129)
    {
      if (v163 > 0)
      {
        uint64_t v70 = v160;
        if (v160)
        {
          uint64_t v71 = v162;
          uint64_t v72 = v162[4];
          uint64_t v128 = v72;
          uint64_t v129 = v161;
          int v73 = *(unsigned __int8 *)(v161 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v123 = v162 + 13;
          __n128 v125 = v162 + 8;
          __n128 v126 = v162 + 6;
          uint64_t v124 = v172;
          uint64_t v74 = (uint64_t **)(v159 + 24);
          LODWORD(v127) = v73;
          while (1)
          {
            uint64_t v188 = v70;
            uint64_t v75 = *((unsigned int *)v74 - 6);
            uint64_t v76 = *((unsigned int *)v74 - 5);
            uint64_t v77 = *((unsigned int *)v74 - 4);
            uint64_t v78 = *(v74 - 1);
            uint64_t v79 = v74[1];
            uint64_t v146 = *v74;
            uint64_t v147 = v78;
            uint64_t v80 = (uint64_t)v74[2];
            if (v73)
            {
              uint64_t v81 = *(os_unfair_lock_s **)(v80 + 376);
              swift_retain();
              os_unfair_lock_lock(v81);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v80 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v72);
            sub_1B62CA4FC((uint64_t)v126, (uint64_t)v170, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v82 = v71[4];
            uint64_t v83 = *(void *)(*(void *)(*(void *)(*(void *)(v80 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v71[6] = ecs_stack_allocator_allocate(v82, 48 * v83, 8);
            v71[7] = v83;
            uint64_t v84 = v125;
            v125[1] = 0;
            v84[2] = 0;
            *uint64_t v84 = 0;
            swift_release();
            v171[0] = v129;
            v171[1] = v80;
            v171[2] = v71;
            v171[3] = v77;
            v171[4] = (v76 - v75 + v77);
            v171[5] = v131;
            v171[6] = v75;
            v171[7] = v76;
            size_t v85 = v124;
            *(void *)uint64_t v124 = 0;
            *((void *)v85 + 1) = 0;
            v172[16] = 1;
            uint64_t v173 = v147;
            uint64_t v174 = v146;
            uint64_t v175 = v79;
            uint64_t v86 = v148;
            sub_1B69A2328(v171, v144, v145, v143, v142, v138, v139, v140, v141, v132, v133, v134, v135, v136, v137);
            if (v86) {
              break;
            }
            v164[0] = v156;
            v164[1] = v157;
            uint64_t v165 = v158;
            sub_1B6345178(v71, (unsigned __int16 **)v164, (uint64_t)v170);
            uint64_t v148 = 0;
            int v73 = v127;
            if (*(void *)(v71[13] + 16))
            {
              uint64_t v87 = swift_bridgeObjectRetain();
              sub_1B639147C(v87, v80);
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v89 = v71[13];
              if (isUniquelyReferenced_nonNull_native)
              {
                sub_1B6399BB8(0, *(void *)(v89 + 16));
              }
              else
              {
                uint64_t v90 = (void *)MEMORY[0x1E4FBC860];
                if (*(void *)(v89 + 24) >= 2uLL)
                {
                  sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                  uint64_t v90 = (void *)swift_allocObject();
                  size_t v91 = j__malloc_size(v90);
                  v90[2] = 0;
                  v90[3] = 2 * ((uint64_t)(v91 - 32) / 72);
                }
                *uint64_t v123 = v90;
                swift_bridgeObjectRelease();
              }
              if (*(unsigned __int8 *)(v71[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
              {
                uint64_t v92 = *(char **)(v80 + 232);
                uint64_t v93 = *(char **)(v80 + 256);
                if (v92 == v93)
                {
                  uint64_t v94 = *(char **)(v80 + 240);
                }
                else
                {
                  sub_1B666018C(v93, v92);
                  uint64_t v93 = *(char **)(v80 + 232);
                  uint64_t v94 = *(char **)(v80 + 240);
                  if (v94 == v93)
                  {
                    uint64_t v94 = 0;
                    uint64_t v93 = 0;
                    *(void *)(v80 + 232) = 0;
                    *(void *)(v80 + 240) = 0;
                  }
                }
                *(void *)(v80 + 248) = v94;
                *(void *)(v80 + 256) = v93;
              }
            }
            uint64_t v72 = v128;
            ecs_stack_allocator_pop_snapshot(v128);
            if (v73)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v80 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v80 + 376));
            }
            swift_release();
            v74 += 6;
            uint64_t v70 = v188 - 1;
            if (v188 == 1) {
              goto LABEL_77;
            }
          }
LABEL_86:
          uint64_t result = swift_unexpectedError();
          __break(1u);
          return result;
        }
      }
      goto LABEL_77;
    }
    if (v163 <= 0 || (uint64_t v95 = v160) == 0)
    {
LABEL_77:
      sub_1B62F073C((uint64_t)&v156);
      return ecs_stack_allocator_pop_snapshot(*(void *)(v130 + 32));
    }
    uint64_t v96 = v162;
    uint64_t v97 = v162[4];
    uint64_t v127 = v161;
    int v98 = *(unsigned __int8 *)(v161 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    uint64_t v123 = v162 + 13;
    __n128 v125 = v162 + 8;
    __n128 v126 = v162 + 6;
    uint64_t v124 = v178;
    uint64_t v99 = (void *)(v159 + 24);
    LODWORD(v128) = v98;
    while (1)
    {
      uint64_t v129 = v95;
      uint64_t v100 = *((unsigned int *)v99 - 6);
      uint64_t v101 = *((unsigned int *)v99 - 5);
      uint64_t v102 = *((unsigned int *)v99 - 4);
      uint64_t v188 = *(v99 - 1);
      uint64_t v103 = (void *)*v99;
      uint64_t v104 = v99[2];
      uint64_t v146 = (uint64_t *)v99[1];
      uint64_t v147 = v103;
      if (v98)
      {
        char v105 = *(os_unfair_lock_s **)(v104 + 376);
        swift_retain();
        os_unfair_lock_lock(v105);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v104 + 344));
      }
      else
      {
        swift_retain();
      }
      uint64_t v106 = v97;
      ecs_stack_allocator_push_snapshot(v97);
      sub_1B62CA4FC((uint64_t)v126, (uint64_t)v176, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v107 = v96[4];
      uint64_t v108 = *(void *)(*(void *)(*(void *)(*(void *)(v104 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v96[6] = ecs_stack_allocator_allocate(v107, 48 * v108, 8);
      v96[7] = v108;
      uint64_t v109 = v125;
      v125[1] = 0;
      v109[2] = 0;
      void *v109 = 0;
      swift_release();
      v177[0] = v127;
      v177[1] = v104;
      v177[2] = v96;
      v177[3] = v102;
      _OWORD v177[4] = (v101 - v100 + v102);
      v177[5] = v131;
      v177[6] = v100;
      v177[7] = v101;
      uint64_t v110 = v124;
      *(void *)uint64_t v124 = 0;
      *((void *)v110 + 1) = 0;
      v178[16] = 1;
      uint64_t v179 = v188;
      uint64_t v180 = v147;
      float32x4_t v181 = v146;
      uint64_t v111 = v148;
      sub_1B69A2328(v177, v144, v145, v143, v142, v138, v139, v140, v141, v132, v133, v134, v135, v136, v137);
      if (v111) {
        break;
      }
      v166[0] = v156;
      v166[1] = v157;
      uint64_t v167 = v158;
      sub_1B6345178(v96, (unsigned __int16 **)v166, (uint64_t)v176);
      uint64_t v148 = 0;
      uint64_t v97 = v106;
      if (*(void *)(v96[13] + 16))
      {
        uint64_t v112 = swift_bridgeObjectRetain();
        sub_1B639147C(v112, v104);
        swift_bridgeObjectRelease();
        char v113 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v114 = v96[13];
        if (v113)
        {
          sub_1B6399BB8(0, *(void *)(v114 + 16));
        }
        else
        {
          int v115 = (void *)MEMORY[0x1E4FBC860];
          if (*(void *)(v114 + 24) >= 2uLL)
          {
            sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
            int v115 = (void *)swift_allocObject();
            size_t v116 = j__malloc_size(v115);
            v115[2] = 0;
            v115[3] = 2 * ((uint64_t)(v116 - 32) / 72);
          }
          *uint64_t v123 = v115;
          swift_bridgeObjectRelease();
        }
        if (*(unsigned __int8 *)(v96[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
        {
          uint64_t v117 = *(char **)(v104 + 232);
          uint64_t v118 = *(char **)(v104 + 256);
          if (v117 == v118)
          {
            uint64_t v119 = *(char **)(v104 + 240);
          }
          else
          {
            sub_1B666018C(v118, v117);
            uint64_t v118 = *(char **)(v104 + 232);
            uint64_t v119 = *(char **)(v104 + 240);
            if (v119 == v118)
            {
              uint64_t v119 = 0;
              uint64_t v118 = 0;
              *(void *)(v104 + 232) = 0;
              *(void *)(v104 + 240) = 0;
            }
          }
          *(void *)(v104 + 248) = v119;
          *(void *)(v104 + 256) = v118;
        }
      }
      ecs_stack_allocator_pop_snapshot(v106);
      int v98 = v128;
      if (v128)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v104 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v104 + 376));
      }
      swift_release();
      v99 += 6;
      uint64_t v95 = v129 - 1;
      if (v129 == 1) {
        goto LABEL_77;
      }
    }
    v168[0] = v156;
    v168[1] = v157;
    uint64_t v169 = v158;
    sub_1B6345178(v96, (unsigned __int16 **)v168, (uint64_t)v176);
    sub_1B634507C((char *)v104);
    ecs_stack_allocator_pop_snapshot(v106);
    if (v128)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v104 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v104 + 376));
    }
    sub_1B62F073C((uint64_t)&v156);
    swift_release();
    return ecs_stack_allocator_pop_snapshot(*(void *)(v130 + 32));
  }
  return result;
}

uint64_t sub_1B6B26CB4(uint64_t result, uint64_t a2, int a3, unint64_t a4, Swift::Int a5, uint64_t a6, uint64_t a7, __n128 a8, __n128 a9)
{
  uint64_t v120 = a7;
  __n128 v118 = a8;
  __n128 v119 = a9;
  if (a5 >= 1)
  {
    unint64_t v111 = a4;
    int v112 = a3;
    LODWORD(v114) = result;
    uint64_t v144 = v9;
    swift_retain();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1B62F06B8(KeyPath, a5);
    swift_release();
    swift_release();
    swift_retain();
    uint64_t v14 = swift_getKeyPath();
    sub_1B62F06B8(v14, a5);
    swift_release();
    swift_release();
    uint64_t v15 = *(void *)(a6 + 32);
    ecs_stack_allocator_push_snapshot(v15);
    uint64_t v122 = *(int *)(a2 + 204);
    uint64_t v16 = v15;
    uint64_t v17 = a5;
    uint64_t v113 = 4 * a5;
    uint64_t v18 = ecs_stack_allocator_allocate(v16, 4 * a5, 4);
    char v19 = *(unsigned char *)(a2 + 208);
    uint64_t v121 = a6;
    if ((v19 & 1) == 0)
    {
      uint64_t v28 = 0;
      int v115 = (void *)v17;
      uint64_t v116 = a2;
      do
      {
        uint64_t v32 = *(void *)(a6 + 16);
        uint64_t v31 = (uint64_t *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_lock);
        unint64_t v33 = *(os_unfair_lock_s **)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
        swift_retain();
        os_unfair_lock_lock(v33);
        ++*(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
        uint64_t v34 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
        LODWORD(a6) = *(_DWORD *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
        if (a6 == -1)
        {
          uint64_t v117 = v31;
          char v35 = (char **)(v32 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v36 = OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity;
          uint64_t v37 = *(char **)(v32 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          a6 = *(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
          uint64_t v38 = 2 * *(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity);
          *(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = v38;
          int v39 = (char *)swift_slowAlloc();
          *char v35 = v39;
          v35[1] = (char *)v38;
          if (a6 < 0) {
            goto LABEL_80;
          }
          if (v39 != v37 || v39 >= &v37[12 * a6]) {
            memmove(v39, v37, 12 * a6);
          }
          if (v37) {
            MEMORY[0x1BA9B84C0](v37, -1, -1);
          }
          uint64_t v41 = *(void *)(v32 + v36);
          uint64_t v42 = *v35;
          uint64_t v17 = (uint64_t)v115;
          if (v41 - 1 != a6)
          {
            uint64_t v43 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
            int v44 = a6 + 1;
            do
            {
              int v45 = *(_DWORD *)(v32 + v43);
              int v46 = &v42[12 * v44 - 12];
              *(_DWORD *)int v46 = v44;
              *((_DWORD *)v46 + 1) = -1;
              *((_DWORD *)v46 + 2) = v45;
              ++v44;
            }
            while (v41 != v44);
          }
          int v29 = *(_DWORD *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_generationSalt);
          uint64_t v30 = &v42[12 * v41];
          *(void *)(v30 - 12) = -1;
          *((_DWORD *)v30 - 1) = v29;
          *(_DWORD *)(v32 + v34) = a6;
          a2 = v116;
          uint64_t v31 = v117;
        }
        *(_DWORD *)(v32 + v34) = *(_DWORD *)(*(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                           + 12 * (int)a6);
        os_unfair_lock_unlock((os_unfair_lock_t)v31[3]);
        swift_release();
        *((_DWORD *)v18 + v28++) = a6;
        a6 = v121;
      }
      while (v28 != v17);
    }
    uint64_t v20 = (4 * v17) >> 2;
    uint64_t v125 = 0;
    uint64_t v21 = v17 / *(void *)(a2 + 64)
        + 2 * *(void *)(*(void *)(*(void *)(*(void *)(a6 + 16) + 96) + 40 * (int)v122 + 32) + 16)
        + 1;
    Swift::Int v22 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 24 * v21, 8);
    v123[0] = v22;
    v123[1] = v21;
    uint64_t v124 = 0;
    uint64_t v23 = *(void *)(a6 + 16);
    swift_retain();
    *(void *)&long long v126 = 0;
    *((void *)&v126 + 1) = v20;
    *(void *)&long long v127 = v18;
    *((void *)&v127 + 1) = v20;
    if (v113 < 1)
    {
      swift_release();
      uint64_t v27 = 0;
    }
    else
    {
      uint64_t v117 = &v108;
      unint64_t v24 = v111;
      uint64_t v25 = v111;
      swift_retain();
      char v26 = v112 & 1;
      do
      {
        swift_retain();
        sub_1B62F0B08(v122, v25 | ((HIDWORD(v24) & 1) << 32), v26, v23, (uint64_t *)&v126, a2, (uint64_t)v18, v20, &v125, a6, v122, v123);
        swift_release();
      }
      while ((uint64_t)(*((void *)&v126 + 1) - v126) > 0);
      swift_release();
      swift_release();
      uint64_t v27 = v124;
      Swift::Int v22 = (void *)v123[0];
    }
    uint64_t v47 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 48 * v27, 8);
    uint64_t v48 = (uint64_t)v47;
    if (v27)
    {
      unint64_t v49 = 0;
      uint64_t v50 = v22 + 2;
      uint64_t v51 = v27;
      uint64_t v52 = v47;
      while (1)
      {
        uint64_t v53 = *(v50 - 1);
        uint64_t v54 = *v50;
        uint64_t v55 = swift_retain();
        if ((v49 & 0x8000000000000000) != 0)
        {
          swift_release();
          int v110 = 0;
          uint64_t v109 = 3451;
          LOBYTE(v108) = 2;
          goto LABEL_79;
        }
        if (HIDWORD(v49)) {
          break;
        }
        *((_DWORD *)v52 + 1) = v54;
        *((_DWORD *)v52 + 2) = v49;
        unint64_t v49 = v49 - v53 + v54;
        *(_DWORD *)uint64_t v52 = v53;
        _OWORD v52[2] = 0;
        v52[3] = 0;
        v52[4] = 0;
        v52[5] = v55;
        v52 += 6;
        v50 += 3;
        if (!--v51) {
          goto LABEL_30;
        }
      }
      swift_release();
      int v110 = 0;
      uint64_t v109 = 3455;
      LOBYTE(v108) = 2;
LABEL_79:
      sub_1B6E32BD8();
      __break(1u);
LABEL_80:
      int v110 = 0;
      uint64_t v109 = 1046;
      LOBYTE(v108) = 2;
      uint64_t result = sub_1B6E32C88();
      __break(1u);
    }
    else
    {
LABEL_30:
      uint64_t v56 = *(void *)(a6 + 16);
      uint64_t v57 = qword_1EB97DC28;
      swift_retain();
      if (v57 != -1) {
        swift_once();
      }
      uint64_t v138 = qword_1EB997A18;
      int v139 = 0;
      char v140 = 2;
      uint64_t v141 = 0;
      char v142 = 2;
      uint64_t v143 = 0;
      swift_retain();
      sub_1B62CB7E0(v56, a6, (uint64_t)&v138, v48, v27, v27, (uint64_t)&v126);
      swift_release();
      swift_release();
      if (v114)
      {
        if (v133 > 0)
        {
          uint64_t v58 = v130;
          if (v130)
          {
            uint64_t v59 = v132;
            uint64_t v60 = v132[4];
            LODWORD(v122) = *(unsigned __int8 *)(v131 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
            uint64_t v113 = (uint64_t)(v132 + 13);
            long long v134 = v126;
            long long v135 = v127;
            uint64_t v136 = v128;
            uint64_t v114 = v132 + 8;
            int v115 = v132 + 6;
            uint64_t v61 = (uint64_t *)(v129 + 24);
            uint64_t v116 = v60;
            do
            {
              uint64_t v117 = v58;
              uint64_t v62 = *((unsigned int *)v61 - 6);
              uint64_t v64 = (uint64_t *)*(v61 - 1);
              uint64_t v63 = *v61;
              uint64_t v65 = v61[1];
              uint64_t v66 = v61[2];
              if (v122)
              {
                uint64_t v67 = *(os_unfair_lock_s **)(v66 + 376);
                swift_retain();
                os_unfair_lock_lock(v67);
                os_unfair_lock_lock(*(os_unfair_lock_t *)(v66 + 344));
              }
              else
              {
                swift_retain();
              }
              ecs_stack_allocator_push_snapshot(v60);
              sub_1B62CA4FC((uint64_t)v115, (uint64_t)v137, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
              uint64_t v68 = v59[4];
              uint64_t v69 = *(void *)(*(void *)(*(void *)(*(void *)(v66 + 40) + 16) + 32) + 16) + 1;
              swift_retain();
              v59[6] = ecs_stack_allocator_allocate(v68, 48 * v69, 8);
              v59[7] = v69;
              uint64_t v70 = v114;
              v114[1] = 0;
              _OWORD v70[2] = 0;
              *uint64_t v70 = 0;
              swift_release();
              uint64_t v71 = sub_1B62C9024((uint64_t)&type metadata for DrawCallComponent, (uint64_t)&off_1F0F709E8, v64, v63, v65, (uint64_t)v59);
              uint64_t v72 = (__n128 *)(sub_1B62C9024((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, v64, v63, v65, (uint64_t)v59)+ 32 * v62);
              __n128 v73 = v119;
              *uint64_t v72 = v118;
              v72[1] = v73;
              *(void *)(v71 + 8 * v62) = v120;
              swift_retain();
              swift_release();
              uint64_t v74 = v144;
              sub_1B6345178(v59, (unsigned __int16 **)&v134, (uint64_t)v137);
              uint64_t v144 = v74;
              if (*(void *)(v59[13] + 16))
              {
                uint64_t v75 = swift_bridgeObjectRetain();
                sub_1B639147C(v75, v66);
                swift_bridgeObjectRelease();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v77 = v59[13];
                if (isUniquelyReferenced_nonNull_native)
                {
                  sub_1B6399BB8(0, *(void *)(v77 + 16));
                }
                else
                {
                  uint64_t v78 = (void *)MEMORY[0x1E4FBC860];
                  if (*(void *)(v77 + 24) >= 2uLL)
                  {
                    sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                    uint64_t v78 = (void *)swift_allocObject();
                    size_t v79 = j__malloc_size(v78);
                    v78[2] = 0;
                    v78[3] = 2 * ((uint64_t)(v79 - 32) / 72);
                  }
                  *(void *)uint64_t v113 = v78;
                  swift_bridgeObjectRelease();
                }
                if (*(unsigned __int8 *)(v59[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
                {
                  uint64_t v80 = *(char **)(v66 + 232);
                  uint64_t v81 = *(char **)(v66 + 256);
                  if (v80 == v81)
                  {
                    uint64_t v82 = *(char **)(v66 + 240);
                  }
                  else
                  {
                    sub_1B666018C(v81, v80);
                    uint64_t v81 = *(char **)(v66 + 232);
                    uint64_t v82 = *(char **)(v66 + 240);
                    if (v82 == v81)
                    {
                      uint64_t v82 = 0;
                      uint64_t v81 = 0;
                      *(void *)(v66 + 232) = 0;
                      *(void *)(v66 + 240) = 0;
                    }
                  }
                  *(void *)(v66 + 248) = v82;
                  *(void *)(v66 + 256) = v81;
                }
              }
              uint64_t v60 = v116;
              ecs_stack_allocator_pop_snapshot(v116);
              if (v122)
              {
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v66 + 344));
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v66 + 376));
              }
              swift_release();
              v61 += 6;
              uint64_t v58 = (uint64_t *)((char *)v117 - 1);
            }
            while (v117 != (uint64_t *)1);
          }
        }
      }
      else if (v133 > 0)
      {
        uint64_t v83 = v130;
        if (v130)
        {
          uint64_t v84 = v132;
          uint64_t v85 = v132[4];
          LODWORD(v122) = *(unsigned __int8 *)(v131 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v113 = (uint64_t)(v132 + 13);
          long long v134 = v126;
          long long v135 = v127;
          uint64_t v136 = v128;
          uint64_t v114 = v132 + 8;
          int v115 = v132 + 6;
          uint64_t v86 = (uint64_t *)(v129 + 24);
          uint64_t v116 = v85;
          do
          {
            uint64_t v117 = v83;
            uint64_t v87 = *((unsigned int *)v86 - 6);
            uint64_t v88 = (uint64_t *)*(v86 - 1);
            uint64_t v89 = *v86;
            uint64_t v90 = v86[1];
            uint64_t v91 = v86[2];
            if (v122)
            {
              uint64_t v92 = *(os_unfair_lock_s **)(v91 + 376);
              swift_retain();
              os_unfair_lock_lock(v92);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v91 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v85);
            sub_1B62CA4FC((uint64_t)v115, (uint64_t)v137, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v93 = v84[4];
            uint64_t v94 = *(void *)(*(void *)(*(void *)(*(void *)(v91 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v84[6] = ecs_stack_allocator_allocate(v93, 48 * v94, 8);
            v84[7] = v94;
            uint64_t v95 = v114;
            v114[1] = 0;
            v95[2] = 0;
            void *v95 = 0;
            swift_release();
            uint64_t v96 = sub_1B62C9024((uint64_t)&type metadata for DrawCallComponent, (uint64_t)&off_1F0F709E8, v88, v89, v90, (uint64_t)v84);
            uint64_t v97 = (__n128 *)(sub_1B62C9024((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, v88, v89, v90, (uint64_t)v84)+ 32 * v87);
            __n128 v98 = v119;
            *uint64_t v97 = v118;
            v97[1] = v98;
            *(void *)(v96 + 8 * v87) = v120;
            swift_retain();
            swift_release();
            uint64_t v99 = v144;
            sub_1B6345178(v84, (unsigned __int16 **)&v134, (uint64_t)v137);
            uint64_t v144 = v99;
            if (*(void *)(v84[13] + 16))
            {
              uint64_t v100 = swift_bridgeObjectRetain();
              sub_1B639147C(v100, v91);
              swift_bridgeObjectRelease();
              char v101 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v102 = v84[13];
              if (v101)
              {
                sub_1B6399BB8(0, *(void *)(v102 + 16));
              }
              else
              {
                uint64_t v103 = (void *)MEMORY[0x1E4FBC860];
                if (*(void *)(v102 + 24) >= 2uLL)
                {
                  sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                  uint64_t v103 = (void *)swift_allocObject();
                  size_t v104 = j__malloc_size(v103);
                  v103[2] = 0;
                  v103[3] = 2 * ((uint64_t)(v104 - 32) / 72);
                }
                *(void *)uint64_t v113 = v103;
                swift_bridgeObjectRelease();
              }
              if (*(unsigned __int8 *)(v84[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
              {
                char v105 = *(char **)(v91 + 232);
                uint64_t v106 = *(char **)(v91 + 256);
                if (v105 == v106)
                {
                  uint64_t v107 = *(char **)(v91 + 240);
                }
                else
                {
                  sub_1B666018C(v106, v105);
                  uint64_t v106 = *(char **)(v91 + 232);
                  uint64_t v107 = *(char **)(v91 + 240);
                  if (v107 == v106)
                  {
                    uint64_t v107 = 0;
                    uint64_t v106 = 0;
                    *(void *)(v91 + 232) = 0;
                    *(void *)(v91 + 240) = 0;
                  }
                }
                *(void *)(v91 + 248) = v107;
                *(void *)(v91 + 256) = v106;
              }
            }
            uint64_t v85 = v116;
            ecs_stack_allocator_pop_snapshot(v116);
            if (v122)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v91 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v91 + 376));
            }
            swift_release();
            v86 += 6;
            uint64_t v83 = (uint64_t *)((char *)v117 - 1);
          }
          while (v117 != (uint64_t *)1);
        }
      }
      sub_1B62F073C((uint64_t)&v126);
      return ecs_stack_allocator_pop_snapshot(*(void *)(v121 + 32));
    }
  }
  return result;
}

uint64_t sub_1B6B27900(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B28698(a1, a2, a3, a4, a5, a6, a7, (void (*)(void *, uint64_t, uint64_t))sub_1B6B22338);
}

uint64_t sub_1B6B2792C(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B28698(a1, a2, a3, a4, a5, a6, a7, (void (*)(void *, uint64_t, uint64_t))sub_1B6B223D8);
}

uint64_t sub_1B6B27958(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, char **a7, uint64_t a8, void *a9, void *a10)
{
  uint64_t v125 = a7;
  uint64_t v126 = a8;
  if (a5 >= 1)
  {
    Swift::Int v12 = a5;
    uint64_t v120 = a4;
    LODWORD(v121) = a3;
    LODWORD(v127) = result;
    uint64_t v131 = v10;
    swift_retain();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1B62F06B8(KeyPath, v12);
    swift_release();
    swift_release();
    swift_retain();
    uint64_t v15 = swift_getKeyPath();
    sub_1B62F06B8(v15, v12);
    swift_release();
    swift_release();
    uint64_t v16 = *(void *)(a6 + 32);
    ecs_stack_allocator_push_snapshot(v16);
    uint64_t v171 = *(int *)(a2 + 204);
    uint64_t v122 = 4 * v12;
    uint64_t v129 = a6;
    uint64_t v130 = ecs_stack_allocator_allocate(v16, 4 * v12, 4);
    uint64_t v123 = (void *)a2;
    if ((*(unsigned char *)(a2 + 208) & 1) == 0)
    {
      uint64_t v27 = 0;
      uint64_t v28 = (void *)&unk_1EB97E000;
      do
      {
        uint64_t v32 = *(void *)(a6 + 16);
        uint64_t v31 = (uint64_t *)(v32 + v28[141]);
        unint64_t v33 = (os_unfair_lock_s *)v31[3];
        swift_retain();
        os_unfair_lock_lock(v33);
        ++*(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_entityCount);
        uint64_t v34 = OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex;
        LODWORD(v35) = *(_DWORD *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_firstFreeIndex);
        if (v35 == -1)
        {
          uint64_t v128 = v31;
          Swift::Int v36 = v12;
          uint64_t v37 = (char **)(v32 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v38 = OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity;
          int v39 = *(char **)(v32 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
          uint64_t v35 = *(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
          uint64_t v40 = 2 * *(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity);
          *(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_entityCapacity) = v40;
          uint64_t v41 = (char *)swift_slowAlloc();
          *uint64_t v37 = v41;
          v37[1] = (char *)v40;
          if (v35 < 0) {
            goto LABEL_86;
          }
          if (v41 != v39 || v41 >= &v39[12 * v35]) {
            memmove(v41, v39, 12 * v35);
          }
          if (v39) {
            MEMORY[0x1BA9B84C0](v39, -1, -1);
          }
          Swift::Int v12 = v36;
          uint64_t v43 = *(void *)(v32 + v38);
          int v44 = *v37;
          uint64_t v28 = &unk_1EB97E000;
          if (v43 - 1 != v35)
          {
            uint64_t v45 = OBJC_IVAR____TtC3VFX13EntityManager_generationSalt;
            int v46 = v35 + 1;
            do
            {
              int v47 = *(_DWORD *)(v32 + v45);
              uint64_t v48 = &v44[12 * v46 - 12];
              *(_DWORD *)uint64_t v48 = v46;
              *((_DWORD *)v48 + 1) = -1;
              *((_DWORD *)v48 + 2) = v47;
              ++v46;
            }
            while (v43 != v46);
          }
          int v29 = *(_DWORD *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager_generationSalt);
          uint64_t v30 = &v44[12 * v43];
          *(void *)(v30 - 12) = -1;
          *((_DWORD *)v30 - 1) = v29;
          *(_DWORD *)(v32 + v34) = v35;
          uint64_t v31 = v128;
          a6 = v129;
        }
        *(_DWORD *)(v32 + v34) = *(_DWORD *)(*(void *)(v32 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                           + 12 * (int)v35);
        os_unfair_lock_unlock((os_unfair_lock_t)v31[3]);
        swift_release();
        *((_DWORD *)v130 + v27++) = v35;
      }
      while (v27 != v12);
    }
    uint64_t v124 = a10;
    uint64_t v17 = (4 * v12) >> 2;
    uint64_t v138 = 0;
    uint64_t v18 = (uint64_t)v123;
    uint64_t v19 = v12 / v123[8]
        + 2 * *(void *)(*(void *)(*(void *)(*(void *)(a6 + 16) + 96) + 40 * (int)v171 + 32) + 16)
        + 1;
    uint64_t v20 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 24 * v19, 8);
    v136[0] = v20;
    v136[1] = v19;
    uint64_t v137 = 0;
    uint64_t v21 = *(void *)(a6 + 16);
    swift_retain();
    uint64_t v132 = 0;
    uint64_t v133 = v17;
    long long v134 = v130;
    uint64_t v135 = v17;
    if (v122 < 1)
    {
      swift_release();
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v128 = &v113;
      unint64_t v22 = v120;
      uint64_t v23 = v120;
      swift_retain();
      char v24 = v121 & 1;
      uint64_t v25 = (uint64_t)v130;
      do
      {
        swift_retain();
        sub_1B62F0B08(v171, v23 | ((HIDWORD(v22) & 1) << 32), v24, v21, &v132, v18, v25, v17, &v138, a6, v171, v136);
        swift_release();
      }
      while (v133 - v132 > 0);
      swift_release();
      swift_release();
      uint64_t v26 = v137;
      uint64_t v20 = (void *)v136[0];
    }
    unint64_t v49 = ecs_stack_allocator_allocate(*(void *)(a6 + 32), 48 * v26, 8);
    uint64_t v50 = (uint64_t)v49;
    if (v26)
    {
      unint64_t v51 = 0;
      uint64_t v52 = v20 + 2;
      uint64_t v53 = v26;
      uint64_t v54 = v49;
      while (1)
      {
        uint64_t v55 = *(v52 - 1);
        uint64_t v56 = *v52;
        uint64_t v57 = swift_retain();
        if ((v51 & 0x8000000000000000) != 0)
        {
          swift_release();
          swift_bridgeObjectRelease();
          int v115 = 0;
          uint64_t v114 = 3451;
          LOBYTE(v113) = 2;
          goto LABEL_85;
        }
        if (HIDWORD(v51)) {
          break;
        }
        *((_DWORD *)v54 + 1) = v56;
        *((_DWORD *)v54 + 2) = v51;
        unint64_t v51 = v51 - v55 + v56;
        *(_DWORD *)uint64_t v54 = v55;
        v54[2] = 0;
        v54[3] = 0;
        v54[4] = 0;
        v54[5] = v57;
        v54 += 6;
        v52 += 3;
        if (!--v53) {
          goto LABEL_30;
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      int v115 = 0;
      uint64_t v114 = 3455;
      LOBYTE(v113) = 2;
LABEL_85:
      sub_1B6E32BD8();
      __break(1u);
LABEL_86:
      int v115 = 0;
      uint64_t v114 = 1046;
      LOBYTE(v113) = 2;
      sub_1B6E32C88();
      __break(1u);
      goto LABEL_87;
    }
LABEL_30:
    uint64_t v123 = a9;
    uint64_t v58 = v129;
    uint64_t v59 = *(void *)(v129 + 16);
    uint64_t v60 = qword_1EB97DC28;
    swift_retain();
    if (v60 != -1) {
      swift_once();
    }
    uint64_t v165 = qword_1EB997A18;
    int v166 = 0;
    char v167 = 2;
    uint64_t v168 = 0;
    char v169 = 2;
    uint64_t v170 = 0;
    swift_retain();
    sub_1B62CB7E0(v59, v58, (uint64_t)&v165, v50, v26, v26, (uint64_t)&v139);
    swift_release();
    swift_release();
    if (v127)
    {
      if (v146 > 0)
      {
        uint64_t v61 = v143;
        uint64_t v62 = v129;
        if (v143)
        {
          uint64_t v122 = v146;
          uint64_t v63 = v145;
          uint64_t v64 = v145[4];
          uint64_t v121 = v144;
          LODWORD(v171) = *(unsigned __int8 *)(v144 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v116 = v145 + 13;
          __n128 v118 = v145 + 8;
          __n128 v119 = v145 + 6;
          uint64_t v117 = v155;
          uint64_t v65 = (uint64_t *)(v142 + 24);
          uint64_t v120 = v64;
          while (1)
          {
            uint64_t v130 = v61;
            uint64_t v67 = *((unsigned int *)v65 - 6);
            uint64_t v66 = *((unsigned int *)v65 - 5);
            uint64_t v68 = *((unsigned int *)v65 - 4);
            uint64_t v69 = (uint64_t *)*(v65 - 1);
            uint64_t v70 = *v65;
            uint64_t v71 = v65[2];
            uint64_t v127 = v65[1];
            uint64_t v128 = v69;
            if (v171)
            {
              uint64_t v72 = *(os_unfair_lock_s **)(v71 + 376);
              swift_retain();
              os_unfair_lock_lock(v72);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v71 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v64);
            sub_1B62CA4FC((uint64_t)v119, (uint64_t)v153, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
            uint64_t v73 = v63[4];
            uint64_t v74 = *(void *)(*(void *)(*(void *)(*(void *)(v71 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v63[6] = ecs_stack_allocator_allocate(v73, 48 * v74, 8);
            v63[7] = v74;
            uint64_t v75 = v118;
            v118[1] = 0;
            _OWORD v75[2] = 0;
            *uint64_t v75 = 0;
            swift_release();
            v154[0] = v121;
            v154[1] = v71;
            v154[2] = v63;
            v154[3] = v68;
            v154[4] = (v66 - v67 + v68);
            uint64_t v76 = v123;
            v154[5] = v122;
            v154[6] = v67;
            v154[7] = v66;
            uint64_t v77 = v117;
            *(void *)uint64_t v117 = 0;
            *((void *)v77 + 1) = 0;
            v155[16] = 1;
            long long v156 = v128;
            uint64_t v157 = v70;
            uint64_t v158 = v127;
            uint64_t v78 = v131;
            sub_1B6C74508(v154, v125, v126, v76, v124);
            if (v78) {
              break;
            }
            v147[0] = v139;
            v147[1] = v140;
            uint64_t v148 = v141;
            sub_1B6345178(v63, (unsigned __int16 **)v147, (uint64_t)v153);
            uint64_t v131 = 0;
            uint64_t v62 = v129;
            if (*(void *)(v63[13] + 16))
            {
              uint64_t v79 = swift_bridgeObjectRetain();
              sub_1B639147C(v79, v71);
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v81 = v63[13];
              if (isUniquelyReferenced_nonNull_native)
              {
                sub_1B6399BB8(0, *(void *)(v81 + 16));
              }
              else
              {
                uint64_t v82 = (void *)MEMORY[0x1E4FBC860];
                if (*(void *)(v81 + 24) >= 2uLL)
                {
                  sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                  uint64_t v82 = (void *)swift_allocObject();
                  size_t v83 = j__malloc_size(v82);
                  v82[2] = 0;
                  v82[3] = 2 * ((uint64_t)(v83 - 32) / 72);
                }
                *uint64_t v116 = v82;
                swift_bridgeObjectRelease();
              }
              if (*(unsigned __int8 *)(v63[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
              {
                uint64_t v84 = *(char **)(v71 + 232);
                uint64_t v85 = *(char **)(v71 + 256);
                if (v84 == v85)
                {
                  uint64_t v86 = *(char **)(v71 + 240);
                }
                else
                {
                  sub_1B666018C(v85, v84);
                  uint64_t v85 = *(char **)(v71 + 232);
                  uint64_t v86 = *(char **)(v71 + 240);
                  if (v86 == v85)
                  {
                    uint64_t v86 = 0;
                    uint64_t v85 = 0;
                    *(void *)(v71 + 232) = 0;
                    *(void *)(v71 + 240) = 0;
                  }
                }
                *(void *)(v71 + 248) = v86;
                *(void *)(v71 + 256) = v85;
              }
            }
            uint64_t v64 = v120;
            ecs_stack_allocator_pop_snapshot(v120);
            if (v171)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v71 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v71 + 376));
            }
            swift_release();
            v65 += 6;
            uint64_t v61 = (void *)((char *)v130 - 1);
            if (v130 == (void *)1) {
              goto LABEL_78;
            }
          }
LABEL_87:
          uint64_t result = swift_unexpectedError();
          __break(1u);
          return result;
        }
        goto LABEL_78;
      }
      goto LABEL_77;
    }
    if (v146 <= 0)
    {
LABEL_77:
      uint64_t v62 = v129;
      goto LABEL_78;
    }
    uint64_t v87 = v143;
    uint64_t v62 = v129;
    if (!v143)
    {
LABEL_78:
      sub_1B62F073C((uint64_t)&v139);
      return ecs_stack_allocator_pop_snapshot(*(void *)(v62 + 32));
    }
    uint64_t v122 = v146;
    uint64_t v88 = v145;
    uint64_t v171 = v145[4];
    int v89 = *(unsigned __int8 *)(v144 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    __n128 v119 = v145 + 6;
    uint64_t v120 = v144;
    uint64_t v116 = v145 + 13;
    __n128 v118 = v145 + 8;
    uint64_t v117 = v161;
    uint64_t v90 = (uint64_t *)(v142 + 24);
    LODWORD(v121) = v89;
    while (1)
    {
      uint64_t v92 = *((unsigned int *)v90 - 6);
      uint64_t v91 = *((unsigned int *)v90 - 5);
      uint64_t v93 = *((unsigned int *)v90 - 4);
      uint64_t v94 = *v90;
      uint64_t v130 = (void *)*(v90 - 1);
      uint64_t v95 = (uint64_t *)v90[1];
      uint64_t v96 = v90[2];
      uint64_t v127 = (uint64_t)v87;
      uint64_t v128 = v95;
      if (v89)
      {
        uint64_t v97 = *(os_unfair_lock_s **)(v96 + 376);
        swift_retain();
        os_unfair_lock_lock(v97);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v96 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v171);
      sub_1B62CA4FC((uint64_t)v119, (uint64_t)v159, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v98 = v88[4];
      uint64_t v99 = *(void *)(*(void *)(*(void *)(*(void *)(v96 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v88[6] = ecs_stack_allocator_allocate(v98, 48 * v99, 8);
      v88[7] = v99;
      uint64_t v100 = v118;
      v118[1] = 0;
      v100[2] = 0;
      *uint64_t v100 = 0;
      swift_release();
      v160[0] = v120;
      v160[1] = v96;
      v160[2] = v88;
      v160[3] = v93;
      v160[4] = (v91 - v92 + v93);
      char v101 = v123;
      v160[5] = v122;
      v160[6] = v92;
      v160[7] = v91;
      uint64_t v102 = v117;
      *(void *)uint64_t v117 = 0;
      *((void *)v102 + 1) = 0;
      v161[16] = 1;
      uint64_t v103 = v131;
      char v162 = v130;
      uint64_t v163 = v94;
      uint64_t v164 = v128;
      sub_1B6C74508(v160, v125, v126, v101, v124);
      if (v103) {
        break;
      }
      v149[0] = v139;
      v149[1] = v140;
      uint64_t v150 = v141;
      sub_1B6345178(v88, (unsigned __int16 **)v149, (uint64_t)v159);
      uint64_t v131 = 0;
      uint64_t v62 = v129;
      if (*(void *)(v88[13] + 16))
      {
        uint64_t v104 = swift_bridgeObjectRetain();
        sub_1B639147C(v104, v96);
        swift_bridgeObjectRelease();
        char v105 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v106 = v88[13];
        if (v105)
        {
          sub_1B6399BB8(0, *(void *)(v106 + 16));
        }
        else
        {
          uint64_t v107 = (void *)MEMORY[0x1E4FBC860];
          if (*(void *)(v106 + 24) >= 2uLL)
          {
            sub_1B63BDE98(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
            uint64_t v107 = (void *)swift_allocObject();
            size_t v108 = j__malloc_size(v107);
            v107[2] = 0;
            v107[3] = 2 * ((uint64_t)(v108 - 32) / 72);
          }
          *uint64_t v116 = v107;
          swift_bridgeObjectRelease();
        }
        if (*(unsigned __int8 *)(v88[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
        {
          uint64_t v109 = *(char **)(v96 + 232);
          int v110 = *(char **)(v96 + 256);
          if (v109 == v110)
          {
            unint64_t v111 = *(char **)(v96 + 240);
          }
          else
          {
            sub_1B666018C(v110, v109);
            int v110 = *(char **)(v96 + 232);
            unint64_t v111 = *(char **)(v96 + 240);
            if (v111 == v110)
            {
              unint64_t v111 = 0;
              int v110 = 0;
              *(void *)(v96 + 232) = 0;
              *(void *)(v96 + 240) = 0;
            }
          }
          *(void *)(v96 + 248) = v111;
          *(void *)(v96 + 256) = v110;
        }
      }
      ecs_stack_allocator_pop_snapshot(v171);
      int v89 = v121;
      if (v121)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 376));
      }
      swift_release();
      v90 += 6;
      uint64_t v87 = (void *)(v127 - 1);
      if (v127 == 1) {
        goto LABEL_78;
      }
    }
    v151[0] = v139;
    v151[1] = v140;
    uint64_t v152 = v141;
    sub_1B6345178(v88, (unsigned __int16 **)v151, (uint64_t)v159);
    sub_1B634507C((char *)v96);
    ecs_stack_allocator_pop_snapshot(v171);
    uint64_t v112 = v129;
    if (v121)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 376));
    }
    sub_1B62F073C((uint64_t)&v139);
    swift_release();
    return ecs_stack_allocator_pop_snapshot(*(void *)(v112 + 32));
  }
  return result;
}

uint64_t sub_1B6B2866C(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B28698(a1, a2, a3, a4, a5, a6, a7, (void (*)(void *, uint64_t, uint64_t))sub_1B6B2256C);
}

uint64_t sub_1B6B28698(uint64_t a1, char a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void *, uint64_t, uint64_t))
{
  uint64_t v34 = a8;
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62F06B8(KeyPath, 1);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v14 = swift_getKeyPath();
  sub_1B62F06B8(v14, 1);
  swift_release();
  swift_release();
  signed int v15 = *(_DWORD *)(a1 + 204);
  if (*(unsigned char *)(a1 + 208))
  {
    uint64_t v16 = 0xFFFFFFFFLL;
  }
  else
  {
    swift_retain();
    uint64_t v16 = sub_1B69E07A0();
    swift_release();
  }
  int v23 = -1;
  *(_OWORD *)unint64_t v22 = 0uLL;
  uint64_t v17 = *(void *)(a5 + 16);
  swift_retain();
  swift_retain();
  sub_1B68E9170(v15, a4 | ((HIDWORD(a4) & 1) << 32), a2 & 1, v17, v22, v16, &v23, a1, a5, v15, SHIWORD(v15), a3 & 1);
  swift_release();
  swift_release();
  uint64_t v18 = *(void *)(*(void *)(*(void *)(a5 + 16) + 136) + 8 * v23 + 32);
  v24[0] = *(void *)(a5 + 16);
  v24[1] = v18;
  v24[2] = a5;
  long long v25 = xmmword_1B6E4F270;
  uint64_t v26 = 1;
  long long v27 = *(_OWORD *)v22;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  char v30 = 1;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  swift_retain();
  v34(v24, a6, a7);
  swift_release();
  return v16;
}

void sub_1B6B28880()
{
  if (!qword_1E9DD5CD8)
  {
    type metadata accessor for ComponentsDataChunk();
    sub_1B63BDE98(255, (unint64_t *)&unk_1E9DD50C8, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBB320]);
    sub_1B6B2892C();
    unint64_t v0 = sub_1B6E32B88();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5CD8);
    }
  }
}

unint64_t sub_1B6B2892C()
{
  unint64_t result = qword_1E9DD50D8;
  if (!qword_1E9DD50D8)
  {
    type metadata accessor for ComponentsDataChunk();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD50D8);
  }
  return result;
}

uint64_t sub_1B6B28984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t initializeWithCopy for CommandQueue.IterationContext.ComponentBuffer(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CommandQueue.IterationContext.ComponentBuffer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CommandQueue.IterationContext.ComponentBuffer(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CommandQueue.IterationContext.ComponentBuffer()
{
  return &type metadata for CommandQueue.IterationContext.ComponentBuffer;
}

BOOL sub_1B6B28ABC(unint64_t a1, unint64_t a2)
{
  if (sub_1B6B2A48C(a1, a2) != 1) {
    return 0;
  }
  if (a1 >> 60 != 1)
  {
    if (a1 >> 60 != 8) {
      goto LABEL_23;
    }
    *((void *)&v5 + 1) = a1;
    *(void *)&long long v5 = a1 + 0x7FFFFFFFFFFFFFD0;
    unint64_t v4 = v5 >> 3;
    if (v4 > 5 || v4 == 3) {
      goto LABEL_23;
    }
    if (a2 >> 60 == 1 && *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18) >> 60 != 1) {
      return 1;
    }
    if (v4 >= 3)
    {
      if (v4 != 4) {
        goto LABEL_23;
      }
    }
    else
    {
      if (sub_1B69B18E4(a2, 0x8000000000000050) & 1) != 0 || (sub_1B69B18E4(a2, 0x8000000000000058)) {
        return 1;
      }
      if (a1 == 0x8000000000000040)
      {
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = 0x8000000000000040;
LABEL_22:
        char v14 = sub_1B69B18E4(v13 | 0x2000000000000000, a2);
        swift_release();
        if (v14) {
          return 1;
        }
LABEL_23:
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_1B6E8F480;
        char v16 = sub_1B69B18E4(v15 | 0x1000000000000000, a1);
        swift_release();
        if (v16)
        {
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = 0x8000000000000050;
          char v18 = sub_1B69B18E4(v17 | 0x2000000000000000, a2);
          swift_release();
          if (v18) {
            return 1;
          }
        }
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = 0x8000000000000050;
        char v20 = sub_1B69B18E4(v19 | 0x2000000000000000, a1);
        swift_release();
        if (v20)
        {
          uint64_t v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = xmmword_1B6E8F480;
          char v22 = sub_1B69B18E4(v21 | 0x1000000000000000, a2);
          swift_release();
          return v22 & 1;
        }
        return 0;
      }
      if (a1 != 0x8000000000000050) {
        goto LABEL_23;
      }
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = 0x8000000000000050;
    goto LABEL_22;
  }
  if (a2 >> 60 != 1) {
    goto LABEL_23;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  unint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
  sub_1B67C52A4(v7);
  sub_1B67C52A4(v9);
  char v11 = sub_1B69B18E4(v7, v9);
  sub_1B678FC34(v9);
  sub_1B678FC34(v7);
  return (v11 & 1) != 0 && v8 < v10;
}

uint64_t sub_1B6B28D78()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8CastNode_srcType);
  sub_1B67C52A4(v1);
  sub_1B69B0F8C(v1);
  sub_1B678FC34(v1);
  swift_bridgeObjectRetain();
  sub_1B67BB63C();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1B6E32518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6A04144();
  swift_bridgeObjectRelease();
  sub_1B678C2E8();
  swift_bridgeObjectRetain();
  sub_1B6E31928();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  unint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8CastNode_dstType);
  sub_1B67C52A4(v3);
  sub_1B69B0F8C(v3);
  sub_1B678FC34(v3);
  swift_bridgeObjectRetain();
  sub_1B67BB63C();
  swift_bridgeObjectRelease();
  sub_1B6E32518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6A04144();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31928();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_1B6B28FEC@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v3 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1B6B2A970(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
  uint64_t v5 = swift_allocObject();
  unint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC3VFX8CastNode_srcType);
  *(void *)(v5 + 16) = v6;
  *(void *)(v4 + 32) = v5 | 0x6000000000000000;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  uint64_t v8 = swift_allocObject();
  unint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC3VFX8CastNode_dstType);
  *(void *)(v8 + 16) = v9;
  *(void *)(v7 + 32) = v8 | 0x6000000000000000;
  sub_1B6B2A970(0, &qword_1E9DD1998, (uint64_t)&type metadata for AnyValue, v3);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 64) = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v10 + 16) = xmmword_1B6E77050;
  *(_OWORD *)(v10 + 32) = xmmword_1B6E8DB00;
  sub_1B67C52A4(v6);
  unint64_t result = sub_1B67C52A4(v9);
  *a1 = v4;
  a1[1] = v7;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0FA37E0;
  a1[3] = v12;
  a1[4] = v12;
  a1[5] = v10;
  return result;
}

void *sub_1B6B29168(void *a1)
{
  uint64_t v2 = swift_allocObject();
  unint64_t v3 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX8CastNode_srcType);
  *(void *)(v2 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v3;
  unint64_t v4 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX8CastNode_dstType);
  *(void *)(v2 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v4;
  sub_1B67C52A4(v3);
  sub_1B67C52A4(v4);
  return sub_1B682A2AC(a1);
}

uint64_t sub_1B6B291D8(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v3, v4);
  sub_1B698F244();
  sub_1B6E332B8();
  if (!v1)
  {
    sub_1B62C550C((uint64_t)v3, v4);
    sub_1B6E332B8();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v3);
}

uint64_t sub_1B6B292DC(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  uint64_t result = sub_1B6E33A18();
  if (!v2)
  {
    sub_1B62C550C((uint64_t)v7, v8);
    sub_1B698F4B8();
    sub_1B6E33168();
    unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC3VFX8CastNode_srcType);
    *(void *)(v1 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v6;
    sub_1B678FC34(v4);
    sub_1B62C550C((uint64_t)v7, v8);
    sub_1B6E33168();
    unint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC3VFX8CastNode_dstType);
    *(void *)(v1 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v6;
    sub_1B678FC34(v5);
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1B6B29408(char a1)
{
  char v2 = a1 & 1;
  unint64_t v3 = *(void *)(*(void *)(v1 + 24) + 32);
  sub_1B68289A0(*(void *)(v1 + 24));
  sub_1B67C52A4(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(*(void *)(v1 + 32) + 32);
  sub_1B68289A0(*(void *)(v1 + 24));
  sub_1B67C52A4(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1B6B294EC(v3, v4, v2);
  sub_1B678FC34(v3);
  sub_1B678FC34(v4);
  return v5;
}

uint64_t sub_1B6B294EC(unint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6 = a3 & 1;
  sub_1B69B18E4(a1, a2);
  unint64_t v7 = a2 >> 60;
  if (!(a2 >> 60))
  {
    unint64_t v9 = *(void *)(a2 + 16);
    sub_1B67C52A4(v9);
    uint64_t v8 = sub_1B6B294EC(a1, v9, v6);
    sub_1B678FC34(v9);
    return v8;
  }
  if (sub_1B69B18E4(a1, a2)) {
    return 12325;
  }
  unint64_t v10 = a1 >> 60;
  if (a1 >> 60 != 1)
  {
    if (v10 == 8)
    {
      *((void *)&v12 + 1) = a1;
      *(void *)&long long v12 = a1 + 0x7FFFFFFFFFFFFFD0;
      unint64_t v11 = v12 >> 3;
      if (v11 <= 5 && v11 != 3)
      {
        if (v7 != 1)
        {
          if (v7 == 8)
          {
            *((void *)&v14 + 1) = a2;
            *(void *)&long long v14 = a2 + 0x7FFFFFFFFFFFFFD0;
            unint64_t v13 = v14 >> 3;
            if (v13 <= 5 && v13 != 3) {
              goto LABEL_71;
            }
          }
LABEL_36:
          if v10 == 8 && a1 == 0x8000000000000020 && (sub_1B69B18E4(0x8000000000000040, a2)) {
            goto LABEL_98;
          }
          goto LABEL_39;
        }
LABEL_33:
        *((void *)&v25 + 1) = a1;
        *(void *)&long long v25 = a1 + 0x7FFFFFFFFFFFFFD0;
        unint64_t v24 = v25 >> 3;
        if (v24 <= 5 && v24 != 3 && *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18) >> 60 != 1)
        {
          uint64_t v52 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          if (v52)
          {
            uint64_t v78 = MEMORY[0x1E4FBC860];
            sub_1B6C3C3B8(0, v52 & ~(v52 >> 63), 0);
            uint64_t v53 = v78;
            unint64_t v54 = *(void *)(v78 + 16);
            uint64_t v55 = 16 * v54;
            do
            {
              uint64_t v78 = v53;
              unint64_t v56 = *(void *)(v53 + 24);
              unint64_t v57 = v54 + 1;
              if (v54 >= v56 >> 1)
              {
                sub_1B6C3C3B8(v56 > 1, v54 + 1, 1);
                uint64_t v53 = v78;
              }
              *(void *)(v53 + 16) = v57;
              uint64_t v58 = v53 + v55;
              *(void *)(v58 + 32) = 12325;
              *(void *)(v58 + 40) = 0xE200000000000000;
              v55 += 16;
              unint64_t v54 = v57;
              --v52;
            }
            while (v52);
          }
          sub_1B6B2A970(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
          sub_1B6646D3C();
          sub_1B6E31638();
          swift_bridgeObjectRelease();
          uint64_t v78 = sub_1B69B25B0(v6, a2);
          unint64_t v79 = v59;
          sub_1B6E31948();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          goto LABEL_78;
        }
        goto LABEL_36;
      }
    }
    goto LABEL_30;
  }
  if (v7 == 1)
  {
    unint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18) & 0xF000000000000000;
    if (v15 != 0x1000000000000000)
    {
      unint64_t v16 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if ((v16 & 0xF000000000000000) != 0x1000000000000000)
      {
        uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v75 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        if (v17 >= v75)
        {
          sub_1B67C52A4(v16);
          sub_1B69AFB0C(v16, (uint64_t)&v78, 0.0);
          uint64_t v74 = sub_1B6C0AB84(v16, (uint64_t)&v78, v6, v3, (uint64_t)&off_1F0FA3810);
          unint64_t v62 = v61;
          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v78);
          if (!v17)
          {
            swift_bridgeObjectRelease();
            goto LABEL_95;
          }
          unint64_t v73 = v16;
          uint64_t v77 = MEMORY[0x1E4FBC860];
          sub_1B6C3C3B8(0, v17 & ~(v17 >> 63), 0);
          uint64_t v63 = 0;
          uint64_t v64 = (char *)&unk_1F0FA3740;
          do
          {
            if (v63 >= v75)
            {
              unint64_t v65 = v62;
              swift_bridgeObjectRetain();
              uint64_t v66 = v74;
            }
            else
            {
              uint64_t v78 = 3026981;
              unint64_t v79 = 0xE300000000000000;
              swift_bridgeObjectRetain();
              swift_arrayDestroy();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              uint64_t v66 = v78;
              unint64_t v65 = v79;
            }
            uint64_t v67 = v77;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B6C3C3B8(0, *(void *)(v77 + 16) + 1, 1);
              uint64_t v67 = v77;
            }
            unint64_t v69 = *(void *)(v67 + 16);
            unint64_t v68 = *(void *)(v67 + 24);
            unint64_t v70 = v69 + 1;
            if (v69 >= v68 >> 1)
            {
              sub_1B6C3C3B8(v68 > 1, v69 + 1, 1);
              unint64_t v70 = v69 + 1;
              uint64_t v67 = v77;
            }
            ++v63;
            *(void *)(v67 + 16) = v70;
            uint64_t v71 = v67 + 16 * v69;
            *(void *)(v71 + 32) = v66;
            *(void *)(v71 + 40) = v65;
            v64 += 16;
          }
          while (v17 != v63);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v18 = 4;
          if (v17 < 4) {
            uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          }
          if (v17 <= 0) {
            uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          }
          int64_t v19 = v18 & 0x7FFFFFFFFFFFFFFFLL;
          if ((v18 & 0x7FFFFFFFFFFFFFFFLL) == 0)
          {
            sub_1B67C52A4(v16);
            swift_arrayDestroy();
            goto LABEL_95;
          }
          unint64_t v73 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          sub_1B67C52A4(v16);
          uint64_t v76 = MEMORY[0x1E4FBC860];
          sub_1B6C3C3B8(0, v19, 0);
          char v20 = (char *)&unk_1F0FA37A0;
          do
          {
            uint64_t v78 = 3026981;
            unint64_t v79 = 0xE300000000000000;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            unint64_t v22 = *(void *)(v76 + 16);
            unint64_t v21 = *(void *)(v76 + 24);
            if (v22 >= v21 >> 1) {
              sub_1B6C3C3B8(v21 > 1, v22 + 1, 1);
            }
            v20 += 16;
            *(void *)(v76 + 16) = v22 + 1;
            uint64_t v23 = v76 + 16 * v22;
            *(void *)(v23 + 32) = 3026981;
            *(void *)(v23 + 40) = 0xE300000000000000;
            --v19;
          }
          while (v19);
          swift_arrayDestroy();
        }
        unint64_t v16 = v73;
LABEL_95:
        uint64_t v78 = sub_1B69B25B0(v6, a2);
        unint64_t v79 = v72;
        sub_1B6E31948();
        sub_1B6B2A970(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        sub_1B6646D3C();
        sub_1B6E31638();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B678FC34(v16);
        return v78;
      }
    }
  }
  else
  {
    unint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18) & 0xF000000000000000;
  }
  if (v15 == 0x1000000000000000)
  {
LABEL_30:
    if (v7 != 1) {
      goto LABEL_36;
    }
    if (v10 != 1)
    {
      if (v10 != 8) {
        goto LABEL_36;
      }
      goto LABEL_33;
    }
LABEL_59:
    sub_1B69B18E4(a1, 0x8000000000000010);
    sub_1B69B18E4(a2, 0x8000000000000010);
    BOOL v32 = 0;
    goto LABEL_60;
  }
  if (v7 == 1) {
    goto LABEL_59;
  }
  if (v7 == 8)
  {
    *((void *)&v36 + 1) = a2;
    *(void *)&long long v36 = a2 + 0x7FFFFFFFFFFFFFD0;
    unint64_t v35 = v36 >> 3;
    if (v35 <= 5 && v35 != 3) {
      return 2016292901;
    }
  }
LABEL_39:
  BOOL v26 = v7 == 8;
  BOOL v27 = v7 == 8;
  if (v26 && a2 == 0x8000000000000020)
  {
    if (sub_1B69B18E4(0x8000000000000040, a1)) {
      goto LABEL_98;
    }
    BOOL v27 = 1;
  }
  char v28 = sub_1B69B18E4(a1, 0x8000000000000010);
  if (v27 && (v28 & 1) != 0)
  {
    *((void *)&v30 + 1) = a2;
    *(void *)&long long v30 = a2 + 0x7FFFFFFFFFFFFFD0;
    unint64_t v29 = v30 >> 3;
    if (v29 <= 5 && v29 != 3) {
      goto LABEL_71;
    }
  }
  char v31 = sub_1B69B18E4(a2, 0x8000000000000010);
  BOOL v26 = v10 == 8;
  BOOL v32 = v10 == 8;
  if (v26 && (v31 & 1) != 0)
  {
    *((void *)&v34 + 1) = a1;
    *(void *)&long long v34 = a1 + 0x7FFFFFFFFFFFFFD0;
    unint64_t v33 = v34 >> 3;
    BOOL v32 = 1;
    if (v33 <= 5 && v33 != 3) {
      goto LABEL_71;
    }
  }
LABEL_60:
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1B6E8F480;
  char v38 = sub_1B69B18E4(v37 | 0x1000000000000000, a1);
  swift_release();
  if (v38)
  {
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = 0x8000000000000050;
    char v40 = sub_1B69B18E4(v39 | 0x2000000000000000, a2);
    swift_release();
    if (v40) {
      goto LABEL_71;
    }
  }
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = 0x8000000000000050;
  char v42 = sub_1B69B18E4(v41 | 0x2000000000000000, a1);
  swift_release();
  if (v42)
  {
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1B6E8F480;
    char v44 = sub_1B69B18E4(v43 | 0x1000000000000000, a2);
    swift_release();
    if (v44)
    {
      sub_1B6E328C8();
      uint64_t v45 = sub_1B69B25B0(v6, a2);
      unint64_t v47 = v46;
      swift_bridgeObjectRelease();
      uint64_t v78 = v45;
      unint64_t v79 = v47;
LABEL_78:
      sub_1B6E31948();
      return v78;
    }
  }
  if (!v32) {
    goto LABEL_97;
  }
  if (a1 == 0x8000000000000040)
  {
    uint64_t v48 = swift_allocObject();
    unint64_t v49 = 0x8000000000000040;
    goto LABEL_70;
  }
  if (a1 == 0x8000000000000050)
  {
    uint64_t v48 = swift_allocObject();
    unint64_t v49 = 0x8000000000000050;
LABEL_70:
    *(void *)(v48 + 16) = v49;
    char v50 = sub_1B69B18E4(v48 | 0x2000000000000000, a2);
    swift_release();
    if (v50)
    {
LABEL_71:
      uint64_t v78 = sub_1B69B25B0(v6, a2);
      unint64_t v79 = v51;
      goto LABEL_78;
    }
  }
LABEL_97:
  uint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B69B0F8C(a1);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B69B0F8C(a2);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
LABEL_98:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B6B29FA4()
{
}

unint64_t sub_1B6B29FD4()
{
  sub_1B678FC34(*(void *)(v0 + OBJC_IVAR____TtC3VFX8CastNode_srcType));
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8CastNode_dstType);

  return sub_1B678FC34(v1);
}

uint64_t sub_1B6B2A014()
{
  swift_bridgeObjectRelease();
  sub_1B678FE58(*(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1B678FC34(*(void *)(v0 + OBJC_IVAR____TtC3VFX8CastNode_srcType));
  sub_1B678FC34(*(void *)(v0 + OBJC_IVAR____TtC3VFX8CastNode_dstType));

  return swift_deallocClassInstance();
}

uint64_t sub_1B6B2A0E8()
{
  return type metadata accessor for CastNode(0);
}

uint64_t type metadata accessor for CastNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5CE8);
}

uint64_t sub_1B6B2A110()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B6B2A154(void *a1)
{
  return sub_1B6B291D8(a1);
}

uint64_t sub_1B6B2A16C(void *a1)
{
  return sub_1B6B292DC(a1);
}

uint64_t sub_1B6B2A184(char a1)
{
  return sub_1B6B29408(a1 & 1);
}

uint64_t sub_1B6B2A18C()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC3VFX8CastNode_srcType);
  sub_1B67C52A4(v2);
  sub_1B69B0F8C(v2);
  sub_1B678FC34(v2);
  swift_bridgeObjectRetain();
  sub_1B67BB63C();
  swift_bridgeObjectRelease();
  sub_1B6E32518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6A04144();
  swift_bridgeObjectRelease();
  sub_1B678C2E8();
  swift_bridgeObjectRetain();
  sub_1B6E31928();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC3VFX8CastNode_dstType);
  sub_1B67C52A4(v3);
  sub_1B69B0F8C(v3);
  sub_1B678FC34(v3);
  swift_bridgeObjectRetain();
  sub_1B67BB63C();
  swift_bridgeObjectRelease();
  sub_1B6E32518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6A04144();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31928();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return 40;
}

uint64_t sub_1B6B2A42C()
{
  return type metadata accessor for AutoCastNode(0);
}

uint64_t type metadata accessor for AutoCastNode(uint64_t a1)
{
  return sub_1B633A29C(a1, qword_1E9DD5CF8);
}

uint64_t sub_1B6B2A454()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B6B2A48C(unint64_t a1, unint64_t a2)
{
  unint64_t v4 = a2 >> 60;
  if (!(a2 >> 60))
  {
    unint64_t v12 = *(void *)(a2 + 16);
    sub_1B67C52A4(v12);
    uint64_t v13 = sub_1B6B2A48C(a1, v12);
    sub_1B678FC34(v12);
    return v13;
  }
  unint64_t v5 = a1 >> 60;
  if (a1 >> 60 != 1)
  {
    if (v5 != 8) {
      goto LABEL_17;
    }
    *((void *)&v7 + 1) = a1;
    *(void *)&long long v7 = a1 + 0x7FFFFFFFFFFFFFD0;
    unint64_t v6 = v7 >> 3;
    if (v6 > 5 || v6 == 3) {
      goto LABEL_17;
    }
    if (v4 == 8)
    {
      *((void *)&v10 + 1) = a2;
      *(void *)&long long v10 = a2 + 0x7FFFFFFFFFFFFFD0;
      unint64_t v9 = v10 >> 3;
      if (v9 < 6 && ((0x37u >> v9) & 1) != 0) {
        return 1;
      }
    }
    if (v6 > 5 || v6 == 3 || v4 != 1 || (unint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18), v11 >> 60 == 1))
    {
LABEL_17:
      if v5 == 8 && a1 == 0x8000000000000020 && (sub_1B69B18E4(0x8000000000000040, a2)) {
        return 0;
      }
      goto LABEL_33;
    }
    sub_1B67C52A4(*(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18));
    char v22 = sub_1B69B18E4(a1, v11);
    sub_1B678FC34(v11);
LABEL_62:
    if (v22) {
      return 1;
    }
    else {
      return 2;
    }
  }
  unint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
  if (v4 == 1 && v15 >> 60 != 1)
  {
    unint64_t v16 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    if (v16 >> 60 != 1)
    {
      unsigned int v31 = (0x10101u >> (v15 - 48)) & 1;
      if (v15 + 0x7FFFFFFFFFFFFFD0 > 0x10) {
        unsigned int v31 = 0;
      }
      if (v15 >> 60 != 8) {
        unsigned int v31 = 0;
      }
      if (v16 >> 60 == 8 && v16 + 0x7FFFFFFFFFFFFFD0 <= 0x10) {
        unsigned int v32 = (0x10101u >> (v16 - 48)) & 1;
      }
      else {
        unsigned int v32 = 0;
      }
      if (v31 != v32) {
        return 2;
      }
      else {
        return 1;
      }
    }
    sub_1B69B18E4(a1, 0x8000000000000010);
    sub_1B69B18E4(a2, 0x8000000000000010);
    goto LABEL_68;
  }
  if (v4 == 8)
  {
    *((void *)&v18 + 1) = a2;
    *(void *)&long long v18 = a2 + 0x7FFFFFFFFFFFFFD0;
    unint64_t v17 = v18 >> 3;
    BOOL v19 = (v15 & 0xF000000000000000) == 0x1000000000000000 || v17 > 5;
    if (!v19 && v17 != 3)
    {
      uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1B67C52A4(*(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18));
      char v22 = sub_1B69B18E4(v15, a2);
      sub_1B683DE78(v21, v15);
      goto LABEL_62;
    }
  }
LABEL_33:
  BOOL v23 = v4 == 8;
  if (a2 == 0x8000000000000020 && v4 == 8)
  {
    if (sub_1B69B18E4(0x8000000000000040, a1)) {
      return 0;
    }
    BOOL v23 = 1;
  }
  char v24 = sub_1B69B18E4(a1, 0x8000000000000010);
  if (v23 && (v24 & 1) != 0)
  {
    *((void *)&v26 + 1) = a2;
    *(void *)&long long v26 = a2 + 0x7FFFFFFFFFFFFFD0;
    unint64_t v25 = v26 >> 3;
    if (v25 < 6 && ((0x37u >> v25) & 1) != 0) {
      return 0;
    }
  }
  if (sub_1B69B18E4(a2, 0x8000000000000010))
  {
    if (v5 != 8) {
      goto LABEL_68;
    }
    *((void *)&v28 + 1) = a1;
    *(void *)&long long v28 = a1 + 0x7FFFFFFFFFFFFFD0;
    unint64_t v27 = v28 >> 3;
    if (v27 < 6 && ((0x37u >> v27) & 1) != 0) {
      return 0;
    }
  }
  else if (v5 != 8)
  {
    goto LABEL_68;
  }
  if (a1 == 0x8000000000000040)
  {
    uint64_t v29 = swift_allocObject();
    unint64_t v30 = 0x8000000000000040;
LABEL_66:
    *(void *)(v29 + 16) = v30;
    char v33 = sub_1B69B18E4(v29 | 0x2000000000000000, a2);
    swift_release();
    if (v33) {
      return 1;
    }
    goto LABEL_68;
  }
  if (a1 == 0x8000000000000050)
  {
    uint64_t v29 = swift_allocObject();
    unint64_t v30 = 0x8000000000000050;
    goto LABEL_66;
  }
LABEL_68:
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = 0x8000000000000050;
  char v35 = sub_1B69B18E4(v34 | 0x2000000000000000, a1);
  swift_release();
  if (v35)
  {
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1B6E8F480;
    char v37 = sub_1B69B18E4(v36 | 0x1000000000000000, a2);
    swift_release();
    if (v37) {
      return 0;
    }
  }
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1B6E8F480;
  char v39 = sub_1B69B18E4(v38 | 0x1000000000000000, a1);
  swift_release();
  if (v39)
  {
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = 0x8000000000000050;
    char v41 = sub_1B69B18E4(v40 | 0x2000000000000000, a2);
    swift_release();
    if (v41) {
      return 0;
    }
  }
  return 2;
}

uint64_t sub_1B6B2A900()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6B2A938()
{
  sub_1B678FC34(*(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B6B2A970(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B6B2A9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v8 = *(unsigned char *)(v3 + 16);
  char v9 = *(unsigned char *)(v3 + 17);
  uint64_t v11 = *(void *)(v3 + 24);
  uint64_t v10 = *(void *)(v3 + 32);
  type metadata accessor for _BinaryEncoder();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 48) = 0;
  *(void *)(v12 + 56) = 0;
  *(void *)(v12 + 64) = 0;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(v12 + 72) = 0;
  *(void *)(v12 + 80) = v13;
  *(unsigned char *)(v12 + 16) = v8;
  *(unsigned char *)(v12 + 17) = v9;
  *(void *)(v12 + 24) = v11;
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1B6B2AE38(a1, a2, a3);
  swift_release();
  if (v4)
  {
    uint64_t v15 = sub_1B6E329C8();
    swift_allocError();
    unint64_t v17 = v16;
    sub_1B6B33190();
    v17[3] = a2;
    long long v18 = sub_1B62C12C4(v17);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v18, a1, a2);
    id v19 = v4;
    sub_1B6E32978();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBAA0], v15);
    swift_willThrow();
  }
  return v14;
}

uint64_t sub_1B6B2AB9C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BinaryEncoder()
{
  return self;
}

void *sub_1B6B2AC00()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[7];
  if (v2)
  {
    uint64_t v3 = v0[8];
    unint64_t v4 = (void *)v0[10];
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v1[10] = v4;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v4 = sub_1B6C167EC(v4);
      v1[10] = v4;
    }
    uint64_t v6 = v4[2] - 1;
    long long v11 = *(_OWORD *)&v4[2 * v6 + 4];
    v4[2] = v6;
    v1[10] = v4;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = v2;
    MEMORY[0x1F4188790](ObjectType, v8);
    long long v10 = v11;
    (*(void (**)(uint64_t (*)(uint64_t)))(*(void *)(v3 + 8) + 16))(sub_1B6B33174);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B6B2AD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a1, ObjectType, a3);
  if (v3)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6B2ADC8()
{
  sub_1B6B2AC00();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _BinaryEncoder()
{
  return self;
}

uint64_t sub_1B6B2AE1C()
{
  if (*(void *)(v0 + 72)) {
    return *(void *)(v0 + 72);
  }
  uint64_t result = v0;
  *(void *)(v0 + 72) = v0;
  return result;
}

uint64_t sub_1B6B2AE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = sub_1B6B2AE1C();
  uint64_t v10 = type metadata accessor for _BinaryEncoder.DataStore();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(_OWORD *)(v11 + 24) = xmmword_1B6E77700;
  uint64_t v12 = v11 + 24;
  if (*(void *)(sub_1B6385D54(0x30316E6962786676, 0xE800000000000000) + 16)) {
    sub_1B6E30FB8();
  }
  swift_release();
  sub_1B6B2B4A0(*(void *)(v5 + 72), a1, v11, v10, a2, (uint64_t)&off_1F0F67B60, a3);
  if (!v4)
  {
    uint64_t v12 = *(void *)(v11 + 24);
    sub_1B62FFBB0(v12, *(void *)(v11 + 32));
  }
  swift_release();
  return v12;
}

uint64_t sub_1B6B2AF58()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for _BinaryEncoder.KeyedStore();
  uint64_t v3 = sub_1B6B2AE1C();
  swift_allocObject();
  uint64_t v4 = sub_1B6B2BB04(v3);
  sub_1B6B32418(v4, v1, v2, (uint64_t)&off_1F0F67A98);
  type metadata accessor for _BinaryKeyedEncodingContainer();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1B6E33048();
  return swift_release();
}

uint64_t sub_1B6B2B050(uint64_t a1)
{
  return sub_1B6B2BB04(a1);
}

uint64_t sub_1B6B2B08C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1B6B2AE1C();
  char v4 = *(unsigned char *)(v1 + 48);
  type metadata accessor for _BinaryEncoder.UnkeyedStore();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_DWORD *)(v5 + 56) = 0;
  *(void *)(v5 + 64) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v5 + 73) = 0;
  *(void *)(v5 + 16) = v3;
  *(unsigned char *)(v5 + 72) = v4;
  *(unsigned char *)(v1 + 48) = 0;
  uint64_t v6 = *(void **)(v1 + 80);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 80) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v6 = sub_1B68C0D7C(0, v6[2] + 1, 1, v6);
    *(void *)(v1 + 80) = v6;
  }
  unint64_t v9 = v6[2];
  unint64_t v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    uint64_t v6 = sub_1B68C0D7C(v8 > 1, v9 + 1, 1, v6);
    *(void *)(v1 + 80) = v6;
  }
  _OWORD v6[2] = v9 + 1;
  uint64_t v10 = &v6[2 * v9];
  v10[4] = v5;
  v10[5] = &off_1F0F67AE8;
  uint64_t v11 = *(void *)(v1 + 72);
  uint64_t v12 = *(void *)(v1 + 32);
  a1[3] = &type metadata for _BinaryUnkeyedEncodingContainer;
  a1[4] = sub_1B6B33048();
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  *a1 = v11;
  a1[1] = v5;
  a1[2] = v12;
  return result;
}

uint64_t sub_1B6B2B1C4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1B6B2AE1C();
  type metadata accessor for _BinaryEncoder.SingleValueDataStore();
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 40) = 0;
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = xmmword_1B6E77700;
  uint64_t v5 = (void *)v1[10];
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v1[10] = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1B68C0D7C(0, v5[2] + 1, 1, v5);
    v1[10] = v5;
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    uint64_t v5 = sub_1B68C0D7C(v7 > 1, v8 + 1, 1, v5);
    v1[10] = v5;
  }
  v5[2] = v8 + 1;
  unint64_t v9 = &v5[2 * v8];
  v9[4] = v4;
  v9[5] = &off_1F0F67B60;
  uint64_t v10 = v1[4];
  uint64_t v11 = v1[9];
  a1[3] = &type metadata for _BinarySingleValueEncodingContainer;
  a1[4] = sub_1B6B32FF4();
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  *a1 = v10;
  a1[1] = v4;
  a1[2] = v11;
  return result;
}

uint64_t sub_1B6B2B2E0()
{
  swift_getMetatypeMetadata();
  if (sub_1B6E31838() == 0xD00000000000001ALL && v0 == 0x80000001B6F49EF0)
  {
    swift_bridgeObjectRelease();
    char v1 = 1;
  }
  else
  {
    char v1 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
  }
  return v1 & 1;
}

uint64_t sub_1B6B2B384()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B6B2B390()
{
  return sub_1B6B2AF58();
}

uint64_t sub_1B6B2B3B4@<X0>(void *a1@<X8>)
{
  return sub_1B6B2B08C(a1);
}

uint64_t sub_1B6B2B3D8@<X0>(void *a1@<X8>)
{
  return sub_1B6B2B1C4(a1);
}

uint64_t sub_1B6B2B3FC(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  v9[4] = a4;
  void v9[3] = a3;
  unint64_t v7 = sub_1B62C12C4(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v7, v4, a3);
  a1(v9);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
}

uint64_t sub_1B6B2B4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (*(void *)(a1 + 24) && sub_1B62C1B08(a5, a5, a7)) {
    *(unsigned char *)(a1 + 48) = 1;
  }
  v15[3] = type metadata accessor for _BinaryEncoder();
  v15[4] = sub_1B6B330B4();
  v15[0] = a1;
  swift_retain();
  sub_1B6E31598();
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v15);
  if (!v7)
  {
    uint64_t v12 = *(void **)(a1 + 80);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a1 + 80) = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1B6C167EC(v12);
      uint64_t v12 = (void *)isUniquelyReferenced_nonNull_native;
      *(void *)(a1 + 80) = isUniquelyReferenced_nonNull_native;
    }
    --v12[2];
    *(void *)(a1 + 80) = v12;
    v15[0] = a3;
    MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native, v14);
    (*(void (**)(uint64_t (*)(uint64_t)))(*(void *)(a6 + 8) + 16))(sub_1B6B3310C);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B6B2B634(char a1)
{
  v5[5] = *MEMORY[0x1E4F143B8];
  sub_1B6B32744(0, &qword_1E9DD5D88, MEMORY[0x1E4FBBB08]);
  uint64_t v3 = v2;
  v5[3] = v2;
  v5[4] = sub_1B6B32794();
  LOBYTE(v5[0]) = a1;
  sub_1B62C14BC(v5, v3);
  sub_1B6E30FA8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
}

uint64_t sub_1B6B2B748()
{
  sub_1B62C2360(*(void *)(v0 + 24), *(void *)(v0 + 32));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _BinaryEncoder.DataStore()
{
  return self;
}

uint64_t sub_1B6B2B7A4(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_1B62C14BC(a1, v2);
  uint64_t v5 = *(void *)(v1 + 24);
  unint64_t v4 = *(void *)(v1 + 32);
  sub_1B62FFBB0(v5, v4);
  uint64_t v6 = sub_1B6B3258C(v5, v4);
  sub_1B62C2360(v5, v4);
  (*(void (**)(void *, uint64_t, uint64_t))(v3 + 32))(v6, v2, v3);
  return swift_release();
}

uint64_t sub_1B6B2B850(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B2B3FC(a1, a2, a3, a4);
}

uint64_t sub_1B6B2B868(char a1)
{
  return sub_1B6B2B634(a1);
}

uint64_t sub_1B6B2B898(uint64_t result)
{
  if (*(void *)(result + 16)) {
    return sub_1B6E30FB8();
  }
  return result;
}

uint64_t sub_1B6B2B8D8()
{
  sub_1B62C2360(*(void *)(v0 + 24), *(void *)(v0 + 32));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _BinaryEncoder.SingleValueDataStore()
{
  return self;
}

uint64_t sub_1B6B2B934()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B6B2B9B4()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v1 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    type metadata accessor for _BinaryEncoder.DataStore();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v2;
    *(_OWORD *)(v1 + 24) = xmmword_1B6E77700;
    *(void *)(v0 + 32) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1B6B2BA24()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (!v1)
  {
    uint64_t v1 = sub_1B6B2B9B4();
    swift_release();
    *(void *)(v0 + 40) = v1;
  }
  return v1;
}

uint64_t sub_1B6B2BA5C()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    type metadata accessor for _BinaryEncoder.DataStore();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v2;
    *(_OWORD *)(v1 + 24) = xmmword_1B6E77700;
    *(void *)(v0 + 48) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1B6B2BACC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (!v1)
  {
    uint64_t v1 = sub_1B6B2BA5C();
    swift_release();
    *(void *)(v0 + 56) = v1;
  }
  return v1;
}

uint64_t sub_1B6B2BB04(uint64_t a1)
{
  *(_DWORD *)(v1 + 24) = 0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(void *)(v1 + 64) = MEMORY[0x1E4FBC868];
  *(unsigned char *)(v1 + 72) = 0;
  *(void *)(v1 + 16) = a1;
  type metadata accessor for _BinaryEncoder.KeyedStore();
  char v3 = 0;
  if (*(unsigned char *)(a1 + 17) == 1)
  {
    type metadata accessor for _BinaryEncoder();
    char v3 = sub_1B6B2B2E0() ^ 1;
  }
  *(unsigned char *)(v1 + 72) = v3 & 1;
  return v1;
}

uint64_t sub_1B6B2BBCC(uint64_t a1, void (*a2)(uint64_t, _UNKNOWN **), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_1B6B2BA5C();
  uint64_t v12 = sub_1B6B32ED8(v11, a2);
  uint64_t v14 = v13;
  uint64_t result = swift_release();
  if (!v6)
  {
    uint64_t v16 = sub_1B6B2BA24();
    uint64_t result = sub_1B6B2BC84(v16, v5, a1, v14 - v12, a4, a5);
    ++*(_DWORD *)(v5 + 24);
  }
  return result;
}

uint64_t sub_1B6B2BC84(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a5 - 8);
  double v12 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v14 = (char *)&v24[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v15 + 72) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a3, a5, v12);
    unint64_t v16 = sub_1B6E33AD8();
    if ((v17 & 1) == 0)
    {
      if ((v16 & 0x8000000000000000) != 0 || HIDWORD(v16)) {
        goto LABEL_21;
      }
      sub_1B6B2C0B4(v16);
      if (!v6) {
        goto LABEL_16;
      }
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, a5);
    }
    unsigned int v20 = sub_1B62C371C();
    unsigned int v21 = v20;
    if (v20 > 0xFF || v20 >= 0x10u)
    {
      swift_retain();
      sub_1B6B2B634(50);
      sub_1B6B2DE8C(v21);
      swift_release();
      if (v6) {
        return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, a5);
      }
    }
    else
    {
      sub_1B6B2B634(v20 | 0x20);
    }
LABEL_16:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, a5);
    goto LABEL_17;
  }
  void v24[3] = a5;
  v24[4] = a6;
  long long v18 = sub_1B62C12C4(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(v18, a3, a5);
  sub_1B6B2BF3C(v24);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v24);
  if (v6) {
    return result;
  }
LABEL_17:
  if ((a4 & 0x8000000000000000) != 0 || HIDWORD(a4))
  {
LABEL_21:
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  return sub_1B6B2C0B4(a4);
}

uint64_t sub_1B6B2BF3C(void *a1)
{
  uint64_t v2 = v1;
  sub_1B62C14BC(a1, a1[3]);
  unint64_t v4 = sub_1B6E33AD8();
  if (v5)
  {
    sub_1B62C14BC(a1, a1[3]);
    uint64_t v7 = sub_1B6E33AB8();
    unint64_t v9 = v8;
    v10[3] = type metadata accessor for _BinaryEncoder.DataStore();
    v10[4] = &off_1F0F67B38;
    v10[0] = v2;
    swift_retain();
    sub_1B6B2F6CC(v10, v7, v9);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v10);
    return swift_bridgeObjectRelease();
  }
  else if ((v4 & 0x8000000000000000) != 0 || HIDWORD(v4))
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    return sub_1B6B2C0B4(v4);
  }
  return result;
}

uint64_t sub_1B6B2C0B4(unsigned int a1)
{
  if (a1 >= 0xFF)
  {
    swift_retain();
    if (a1 >= 0xFFFF)
    {
      sub_1B6B2B634(50);
      sub_1B6B2DE8C(a1);
    }
    else
    {
      sub_1B6B2B634(49);
      sub_1B6B2DF28(a1);
    }
  }
  else
  {
    if (a1 < 0x10u) {
      return sub_1B6B2B634(a1 | 0x20);
    }
    swift_retain();
    sub_1B6B2B634(48);
    sub_1B6B2DDF4(a1);
  }
  return swift_release();
}

uint64_t sub_1B6B2C194(unsigned int a1, uint64_t a2, uint64_t a3)
{
  if (a1 <= 0xFE) {
    return sub_1B6B2DC28(a1, a2, a3);
  }
  if (a1 > 0xFFFE) {
    return sub_1B6B2D3B4(a1, a2, a3);
  }
  return sub_1B6B2DCC0(a1, a2, a3);
}

uint64_t sub_1B6B2C1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B62C1550(a3, (uint64_t)v14);
  sub_1B62C14BC(v14, v15);
  uint64_t v6 = sub_1B6E33AB8();
  uint64_t v8 = v7;
  sub_1B62C14BC(v14, v15);
  uint64_t v9 = sub_1B6E33AD8();
  char v11 = v10 & 1;
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v14);
  swift_unknownObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14[0] = *(void *)(v3 + 64);
  *(void *)(v3 + 64) = 0x8000000000000000;
  sub_1B67E8EFC(a1, a2, v6, v8, v9, v11, isUniquelyReferenced_nonNull_native);
  *(void *)(v3 + 64) = v14[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B2C2E4(void *a1)
{
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_1B6B32CA0(v4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B6B32874);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    if (*(unsigned char *)(v1 + 72)) {
      char v6 = -32;
    }
    else {
      char v6 = -64;
    }
    uint64_t v7 = a1[3];
    uint64_t v8 = a1[4];
    sub_1B62C14BC(a1, v7);
    int v25 = *(_DWORD *)(v1 + 24);
    char v26 = v6;
    (*(void (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(v8 + 16))(sub_1B6B32808, v24, v7, v8);
    uint64_t v9 = sub_1B6B2BA24();
    sub_1B62C1550((uint64_t)a1, (uint64_t)v24);
    uint64_t v10 = v27;
    uint64_t v11 = v28;
    sub_1B62C14BC(v24, v27);
    uint64_t v13 = *(void *)(v9 + 24);
    unint64_t v12 = *(void *)(v9 + 32);
    sub_1B62FFBB0(v13, v12);
    uint64_t v14 = sub_1B6B3258C(v13, v12);
    sub_1B62C2360(v13, v12);
    (*(void (**)(void *, uint64_t, uint64_t))(v11 + 32))(v14, v10, v11);
    swift_release();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v24);
    uint64_t v15 = sub_1B6B2BACC();
    sub_1B62C1550((uint64_t)a1, (uint64_t)v21);
    uint64_t v16 = v22;
    uint64_t v17 = v23;
    sub_1B62C14BC(v21, v22);
    uint64_t v19 = *(void *)(v15 + 24);
    unint64_t v18 = *(void *)(v15 + 32);
    sub_1B62FFBB0(v19, v18);
    unsigned int v20 = sub_1B6B3258C(v19, v18);
    sub_1B62C2360(v19, v18);
    (*(void (**)(void *, uint64_t, uint64_t))(v17 + 32))(v20, v16, v17);
    swift_release();
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v21);
  }
  return result;
}

uint64_t sub_1B6B2C50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = swift_getObjectType();
  uint64_t v9 = *(void *)(a2 + 8);
  long long v12[3] = v8;
  v12[4] = v9;
  v12[0] = a1;
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(a4 + 16);
  swift_unknownObjectRetain();
  v10(v12, ObjectType, a4);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v12);
}

uint64_t sub_1B6B2C5B8(char a1)
{
  return sub_1B6B2B634(a1);
}

uint64_t sub_1B6B2C5F8(uint64_t a1)
{
  uint64_t result = sub_1B6B2BACC();
  if (*(void *)(a1 + 16)) {
    return sub_1B6E30FB8();
  }
  return result;
}

uint64_t sub_1B6B2C644()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B6B2C674()
{
  sub_1B6B2C644();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _BinaryEncoder.KeyedStore()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6B2C6BC(void *a1)
{
  return sub_1B6B2C2E4(a1);
}

uint64_t sub_1B6B2C6D4()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_1B6B2C6E0(char a1)
{
  return sub_1B6B2C5B8(a1);
}

uint64_t sub_1B6B2C704(uint64_t a1)
{
  return sub_1B6B2C5F8(a1);
}

uint64_t sub_1B6B2C728()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    type metadata accessor for _BinaryEncoder.DataStore();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v2;
    *(_OWORD *)(v1 + 24) = xmmword_1B6E77700;
    *(void *)(v0 + 24) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1B6B2C798()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (!v1)
  {
    uint64_t v1 = sub_1B6B2C728();
    swift_release();
    *(void *)(v0 + 32) = v1;
  }
  return v1;
}

uint64_t sub_1B6B2C7D0()
{
  if (*(void *)(v0 + 40))
  {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    type metadata accessor for _BinaryEncoder.DataStore();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v2;
    *(_OWORD *)(v1 + 24) = xmmword_1B6E77700;
    *(void *)(v0 + 40) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1B6B2C840()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (!v1)
  {
    uint64_t v1 = sub_1B6B2C7D0();
    swift_release();
    *(void *)(v0 + 48) = v1;
  }
  return v1;
}

uint64_t sub_1B6B2C878(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  if (*(unsigned char *)(a1 + 73) == 1)
  {
    v13[3] = type metadata accessor for _BinaryEncoder.UnkeyedStore();
    void v13[4] = (uint64_t)&off_1F0F67B10;
    v13[0] = a1;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B6B2F6CC(v13, a2, a3);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v13);
    return swift_bridgeObjectRelease_n();
  }
  *(unsigned char *)(a1 + 73) = 1;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1B6B2C798();
  swift_bridgeObjectRetain();
  sub_1B6B2CBD0(v8, a1, a2, a3, v13);
  if (v4) {
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v9 = v13[0];
  uint64_t v10 = v13[1];
  sub_1B6B2C840();
  unint64_t v11 = v10 - v9;
  if (v10 - v9 >= 0 && !HIDWORD(v11))
  {
    sub_1B6B2C0B4(v11);
    ++*(_DWORD *)(a1 + 56);
    *(unsigned char *)(a1 + 73) = 0;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_1B6E32BD8();
  __break(1u);
  return result;
}

uint64_t sub_1B6B2CA48(void (*a1)(uint64_t *))
{
  if (*(unsigned char *)(v1 + 73))
  {
    void v9[3] = type metadata accessor for _BinaryEncoder.UnkeyedStore();
    v9[4] = (uint64_t)&off_1F0F67B10;
    v9[0] = v1;
    swift_retain();
    a1(v9);
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
  }
  else
  {
    *(unsigned char *)(v1 + 73) = 1;
    uint64_t v5 = sub_1B6B2C798();
    uint64_t result = sub_1B6B2CD50(v5, a1, v1, v9);
    if (!v2)
    {
      uint64_t v6 = v9[0];
      uint64_t v7 = v9[1];
      sub_1B6B2C840();
      unint64_t v8 = v7 - v6;
      if (v7 - v6 < 0 || HIDWORD(v8))
      {
        uint64_t result = sub_1B6E32BD8();
        __break(1u);
      }
      else
      {
        uint64_t result = sub_1B6B2C0B4(v8);
        ++*(_DWORD *)(v1 + 56);
        *(unsigned char *)(v1 + 73) = 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B6B2CBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 24);
  unint64_t v8 = *(void *)(a1 + 32);
  uint64_t v13 = 0;
  switch(v8 >> 62)
  {
    case 1uLL:
      uint64_t v13 = (uint64_t)(0xFFFFFFFF00000001 * v7) >> 32;
      break;
    case 2uLL:
      uint64_t v13 = *(void *)(v7 + 24) - *(void *)(v7 + 16);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v13 = BYTE6(v8);
      break;
  }
  void v21[3] = type metadata accessor for _BinaryEncoder.UnkeyedStore();
  v21[4] = &off_1F0F67B10;
  v21[0] = a2;
  swift_retain();
  sub_1B6B2F6CC(v21, a3, a4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v21);
  if (v5) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v16 = *(void *)(a1 + 24);
  unint64_t v15 = *(void *)(a1 + 32);
  switch(v15 >> 62)
  {
    case 1uLL:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = (uint64_t)(0xFFFFFFFF00000001 * v16) >> 32;
      break;
    case 2uLL:
      uint64_t v20 = v16 + 16;
      uint64_t v19 = *(void *)(v16 + 16);
      uint64_t v18 = *(void *)(v20 + 8);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = v18 - v19;
      break;
    case 3uLL:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      break;
    default:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = BYTE6(v15);
      break;
  }
  *a5 = v13;
  a5[1] = v17;
  return result;
}

uint64_t sub_1B6B2CD50@<X0>(uint64_t a1@<X0>, void (*a2)(void *)@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  uint64_t v11 = 0;
  switch(v7 >> 62)
  {
    case 1uLL:
      uint64_t v11 = (uint64_t)(0xFFFFFFFF00000001 * v6) >> 32;
      break;
    case 2uLL:
      uint64_t v11 = *(void *)(v6 + 24) - *(void *)(v6 + 16);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v11 = BYTE6(v7);
      break;
  }
  v16[3] = type metadata accessor for _BinaryEncoder.UnkeyedStore();
  v16[4] = &off_1F0F67B10;
  v16[0] = a3;
  swift_retain();
  a2(v16);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v16);
  if (!v4)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    unint64_t v14 = *(void *)(a1 + 32);
    uint64_t v15 = 0;
    switch(v14 >> 62)
    {
      case 1uLL:
        uint64_t v15 = (uint64_t)(0xFFFFFFFF00000001 * v13) >> 32;
        break;
      case 2uLL:
        uint64_t v15 = *(void *)(v13 + 24) - *(void *)(v13 + 16);
        break;
      case 3uLL:
        break;
      default:
        uint64_t v15 = BYTE6(v14);
        break;
    }
    *a4 = v11;
    a4[1] = v15;
  }
  return result;
}

uint64_t sub_1B6B2CE9C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = (uint64_t)a1;
  if (*(unsigned char *)(v1 + 72)) {
    char v5 = 0x80;
  }
  else {
    char v5 = -96;
  }
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_1B62C14BC(a1, v6);
  int v32 = *(_DWORD *)(v1 + 56);
  char v33 = v5;
  uint64_t result = (*(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(v7 + 16))(sub_1B6B32808, v31, v6, v7);
  if (!v2)
  {
    if (*(unsigned char *)(v1 + 72) == 1)
    {
      uint64_t v9 = sub_1B6B2C840();
      sub_1B62C1550(v4, (uint64_t)v31);
      uint64_t v10 = v34;
      uint64_t v11 = v35;
      sub_1B62C14BC(v31, v34);
      uint64_t v13 = *(void *)(v9 + 24);
      unint64_t v12 = *(void *)(v9 + 32);
      sub_1B62FFBB0(v13, v12);
      unint64_t v14 = sub_1B6B3258C(v13, v12);
      sub_1B62C2360(v13, v12);
      ((void (*)(void *, uint64_t, _UNKNOWN **))v11[4])(v14, v10, v11);
      swift_release();
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v31);
    }
    uint64_t v15 = *(void *)(v3 + 64);
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v36 = 0;
      uint64_t v30 = v4;
      swift_bridgeObjectRetain_n();
      uint64_t v17 = (uint64_t *)(v15 + 40);
      while (1)
      {
        uint64_t v18 = *v17;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v20 = v3;
        uint64_t v21 = sub_1B6B2C728();
        uint64_t v34 = type metadata accessor for _BinaryEncoder.DataStore();
        char v35 = &off_1F0F67B38;
        v31[0] = v21;
        uint64_t v22 = *(void (**)(void *, uint64_t, uint64_t))(v18 + 16);
        swift_unknownObjectRetain();
        uint64_t v23 = v36;
        v22(v31, ObjectType, v18);
        uint64_t v36 = v23;
        if (v23) {
          break;
        }
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v31);
        swift_unknownObjectRelease();
        v17 += 2;
        --v16;
        uint64_t v3 = v20;
        if (!v16)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v4 = v30;
          goto LABEL_12;
        }
      }
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v31);
      swift_bridgeObjectRelease_n();
      return swift_unknownObjectRelease();
    }
    else
    {
LABEL_12:
      uint64_t v24 = sub_1B6B2C798();
      sub_1B62C1550(v4, (uint64_t)v31);
      uint64_t v25 = v34;
      char v26 = v35;
      sub_1B62C14BC(v31, v34);
      uint64_t v28 = *(void *)(v24 + 24);
      unint64_t v27 = *(void *)(v24 + 32);
      sub_1B62FFBB0(v28, v27);
      uint64_t v29 = sub_1B6B3258C(v28, v27);
      sub_1B62C2360(v28, v27);
      ((void (*)(void *, uint64_t, _UNKNOWN **))v26[4])(v29, v25, v26);
      swift_release();
      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v31);
    }
  }
  return result;
}

uint64_t sub_1B6B2D184()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _BinaryEncoder.UnkeyedStore()
{
  return self;
}

uint64_t sub_1B6B2D1F4(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BinaryEncoder.Options(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BinaryEncoder.Options(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for BinaryEncoder.Options()
{
  return &type metadata for BinaryEncoder.Options;
}

uint64_t sub_1B6B2D2CC(void *a1)
{
  return sub_1B6B2CE9C(a1);
}

uint64_t sub_1B6B2D2E4(void (*a1)(uint64_t *))
{
  return sub_1B6B2CA48(a1);
}

uint64_t sub_1B6B2D308()
{
  return sub_1B6E30FB8();
}

uint64_t sub_1B6B2D364(uint64_t a1)
{
  uint64_t result = sub_1B6B2C798();
  if (*(void *)(a1 + 16)) {
    return sub_1B6E30FB8();
  }
  return result;
}

uint64_t sub_1B6B2D3B4(int a1, uint64_t a2, uint64_t a3)
{
  int v8 = a1;
  unint64_t v5 = sub_1B6B17E84();
  _OWORD v7[2] = a2;
  v7[3] = MEMORY[0x1E4FBC4C0];
  v7[4] = a3;
  v7[5] = v5;
  v7[6] = &v8;
  return (*(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(a3 + 16))(sub_1B6B32828, v7, a2, a3);
}

uint64_t sub_1B6B2D44C()
{
  if (*(unsigned char *)(v0 + 73) == 1)
  {
    swift_retain();
    sub_1B6B2C798();
    sub_1B6E30FB8();
    return swift_release();
  }
  else
  {
    *(unsigned char *)(v0 + 73) = 1;
    uint64_t v3 = sub_1B6B2C798();
    uint64_t v4 = *(void *)(v3 + 24);
    unint64_t v5 = *(void *)(v3 + 32);
    uint64_t v6 = v3;
    uint64_t v7 = 0;
    switch(v5 >> 62)
    {
      case 1uLL:
        uint64_t v7 = (uint64_t)(0xFFFFFFFF00000001 * v4) >> 32;
        break;
      case 2uLL:
        uint64_t v7 = *(void *)(v4 + 24) - *(void *)(v4 + 16);
        break;
      case 3uLL:
        break;
      default:
        uint64_t v7 = BYTE6(v5);
        break;
    }
    swift_retain();
    sub_1B6E30FB8();
    swift_release();
    uint64_t v8 = *(void *)(v6 + 24);
    unint64_t v9 = *(void *)(v6 + 32);
    uint64_t v10 = 0;
    switch(v9 >> 62)
    {
      case 1uLL:
        uint64_t v10 = (uint64_t)(0xFFFFFFFF00000001 * v8) >> 32;
        break;
      case 2uLL:
        uint64_t v10 = *(void *)(v8 + 24) - *(void *)(v8 + 16);
        break;
      case 3uLL:
        break;
      default:
        uint64_t v10 = BYTE6(v9);
        break;
    }
    sub_1B6B2C840();
    unint64_t v11 = v10 - v7;
    if (v10 - v7 < 0 || HIDWORD(v11))
    {
      sub_1B6E32BD8();
      __break(1u);
      JUMPOUT(0x1B6B2D650);
    }
    uint64_t result = sub_1B6B2C0B4(v11);
    if (!v1)
    {
      ++*(_DWORD *)(v0 + 56);
      *(unsigned char *)(v0 + 73) = 0;
    }
  }
  return result;
}

uint64_t sub_1B6B2D670(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_1B62C14BC(a1, v1);
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v2 + 24))(0, v1, v2);
}

uint64_t sub_1B6B2D6CC()
{
  if (*(unsigned char *)(v0 + 73) == 1)
  {
    swift_retain();
    sub_1B6B2C798();
    sub_1B6E30FB8();
    return swift_release();
  }
  else
  {
    *(unsigned char *)(v0 + 73) = 1;
    uint64_t v3 = sub_1B6B2C798();
    uint64_t v4 = *(void *)(v3 + 24);
    unint64_t v5 = *(void *)(v3 + 32);
    uint64_t v6 = v3;
    switch(v5 >> 62)
    {
      case 1uLL:
        uint64_t v7 = (uint64_t)(0xFFFFFFFF00000001 * v4) >> 32;
        break;
      case 2uLL:
        uint64_t v7 = *(void *)(v4 + 24) - *(void *)(v4 + 16);
        break;
      case 3uLL:
        uint64_t v7 = 0;
        break;
      default:
        uint64_t v7 = BYTE6(v5);
        break;
    }
    swift_retain();
    sub_1B6E30FB8();
    swift_release();
    uint64_t v8 = *(void *)(v6 + 24);
    unint64_t v9 = *(void *)(v6 + 32);
    uint64_t v10 = 0;
    switch(v9 >> 62)
    {
      case 1uLL:
        uint64_t v10 = (uint64_t)(0xFFFFFFFF00000001 * v8) >> 32;
        break;
      case 2uLL:
        uint64_t v10 = *(void *)(v8 + 24) - *(void *)(v8 + 16);
        break;
      case 3uLL:
        break;
      default:
        uint64_t v10 = BYTE6(v9);
        break;
    }
    sub_1B6B2C840();
    unint64_t v11 = v10 - v7;
    if (v10 - v7 < 0 || HIDWORD(v11))
    {
      sub_1B6E32BD8();
      __break(1u);
      JUMPOUT(0x1B6B2D910);
    }
    uint64_t result = sub_1B6B2C0B4(v11);
    if (!v1)
    {
      ++*(_DWORD *)(v0 + 56);
      *(unsigned char *)(v0 + 73) = 0;
    }
  }
  return result;
}

uint64_t sub_1B6B2D930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  unint64_t v5 = sub_1B62B00A8();
  _OWORD v7[2] = a2;
  v7[3] = MEMORY[0x1E4FBC1C8];
  v7[4] = a3;
  v7[5] = v5;
  v7[6] = &v8;
  return (*(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(a3 + 16))(sub_1B6B32828, v7, a2, a3);
}

uint64_t sub_1B6B2D9C8(char a1, uint64_t a2, uint64_t a3)
{
  char v8 = a1;
  unint64_t v5 = sub_1B6B185B0();
  _OWORD v7[2] = a2;
  v7[3] = MEMORY[0x1E4FBC098];
  v7[4] = a3;
  v7[5] = v5;
  v7[6] = &v8;
  return (*(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(a3 + 16))(sub_1B6B32828, v7, a2, a3);
}

uint64_t sub_1B6B2DA60(__int16 a1, uint64_t a2, uint64_t a3)
{
  __int16 v8 = a1;
  unint64_t v5 = sub_1B6B1855C();
  _OWORD v7[2] = a2;
  v7[3] = MEMORY[0x1E4FBC0F8];
  v7[4] = a3;
  v7[5] = v5;
  v7[6] = &v8;
  return (*(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(a3 + 16))(sub_1B6B32828, v7, a2, a3);
}

uint64_t sub_1B6B2DAF8(int a1, uint64_t a2, uint64_t a3)
{
  int v8 = a1;
  unint64_t v5 = sub_1B62A87A8();
  _OWORD v7[2] = a2;
  v7[3] = MEMORY[0x1E4FBC150];
  v7[4] = a3;
  v7[5] = v5;
  v7[6] = &v8;
  return (*(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(a3 + 16))(sub_1B6B32828, v7, a2, a3);
}

uint64_t sub_1B6B2DB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a1;
  unint64_t v5 = sub_1B6B17E30();
  _OWORD v7[2] = a2;
  v7[3] = MEMORY[0x1E4FBC538];
  v7[4] = a3;
  v7[5] = v5;
  v7[6] = &v8;
  return (*(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(a3 + 16))(sub_1B6B32828, v7, a2, a3);
}

uint64_t sub_1B6B2DC28(char a1, uint64_t a2, uint64_t a3)
{
  char v8 = a1;
  unint64_t v5 = sub_1B6B17F2C();
  _OWORD v7[2] = a2;
  v7[3] = MEMORY[0x1E4FBC358];
  v7[4] = a3;
  v7[5] = v5;
  v7[6] = &v8;
  return (*(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(a3 + 16))(sub_1B6B32828, v7, a2, a3);
}

uint64_t sub_1B6B2DCC0(__int16 a1, uint64_t a2, uint64_t a3)
{
  __int16 v8 = a1;
  unint64_t v5 = sub_1B6B17ED8();
  _OWORD v7[2] = a2;
  v7[3] = MEMORY[0x1E4FBC450];
  v7[4] = a3;
  v7[5] = v5;
  v7[6] = &v8;
  return (*(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(a3 + 16))(sub_1B6B32828, v7, a2, a3);
}

uint64_t sub_1B6B2DD58(unint64_t a1)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = bswap64(a1);
  if (sub_1B6B324CC(&v2, &v3)[2]) {
    sub_1B6E30FB8();
  }
  return swift_release();
}

uint64_t sub_1B6B2DDF4(char a1)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  char v2 = a1;
  if (sub_1B6B324CC(&v2, &v3)[2]) {
    sub_1B6E30FB8();
  }
  return swift_release();
}

uint64_t sub_1B6B2DE8C(unsigned int a1)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  unsigned int v2 = bswap32(a1);
  if (sub_1B6B324CC(&v2, &v3)[2]) {
    sub_1B6E30FB8();
  }
  return swift_release();
}

uint64_t sub_1B6B2DF28(unsigned int a1)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  __int16 v2 = bswap32(a1) >> 16;
  if (sub_1B6B324CC(&v2, &v3)[2]) {
    sub_1B6E30FB8();
  }
  return swift_release();
}

uint64_t sub_1B6B2DFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1, a2);
  unint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6E32B58();
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  uint64_t v22 = v5;
  unint64_t v13 = sub_1B666BD6C();
  sub_1B6D6C938((uint64_t)v12, (uint64_t)sub_1B6B3284C, (uint64_t)v17, a3, v13, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v16);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, a3);
}

uint64_t sub_1B6B2E150(unsigned char *a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  sub_1B6B324CC(a1, a2);
  (*(void (**)(void))(a6 + 32))();
  uint64_t result = swift_release();
  if (v8) {
    *a8 = v8;
  }
  return result;
}

uint64_t sub_1B6B2E1D4(void *a1, unsigned int a2, uint64_t (*a3)(void), uint64_t a4)
{
  unsigned int v17 = a2;
  if (a2 <= 0xFF && a2 <= 0xFu)
  {
    uint64_t v15 = a1[3];
    uint64_t v16 = a1[4];
    sub_1B62C14BC(a1, v15);
    return (*(uint64_t (**)(void, uint64_t, uint64_t))(v16 + 24))(a2 | 0x20, v15, v16);
  }
  else
  {
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    sub_1B62C14BC(a1, v9);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(50, v9, v10);
    if (!v4)
    {
      uint64_t v12 = a1[3];
      uint64_t v13 = a1[4];
      sub_1B62C14BC(a1, v12);
      uint64_t v14 = a3();
      return sub_1B6B2DFC8((uint64_t)&v17, v12, a4, v13, v14);
    }
  }
  return result;
}

uint64_t sub_1B6B2E2F8(void *a1, unint64_t a2)
{
  unint64_t v13 = a2;
  if (a2 <= 0xFF && (int v4 = a2, a2 <= 0xFu))
  {
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    sub_1B62C14BC(a1, v11);
    return (*(uint64_t (**)(void, uint64_t, uint64_t))(v12 + 24))(v4 | 0x20u, v11, v12);
  }
  else
  {
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    sub_1B62C14BC(a1, v5);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(51, v5, v6);
    if (!v2)
    {
      uint64_t v8 = a1[3];
      uint64_t v9 = a1[4];
      sub_1B62C14BC(a1, v8);
      unint64_t v10 = sub_1B62B00A8();
      return sub_1B6B2DFC8((uint64_t)&v13, v8, MEMORY[0x1E4FBC1C8], v9, v10);
    }
  }
  return result;
}

uint64_t sub_1B6B2E40C(void *a1, int a2, uint64_t (*a3)(void), uint64_t a4)
{
  __int16 v18 = a2;
  if ((unsigned __int16)a2 >= 0x100u || a2 > 0xFu)
  {
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    sub_1B62C14BC(a1, v9);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(49, v9, v10);
    if (!v4)
    {
      uint64_t v11 = a1[3];
      uint64_t v12 = a1[4];
      sub_1B62C14BC(a1, v11);
      uint64_t v13 = a3();
      return sub_1B6B2DFC8((uint64_t)&v18, v11, a4, v12, v13);
    }
  }
  else
  {
    uint64_t v15 = a1[3];
    uint64_t v16 = a1[4];
    sub_1B62C14BC(a1, v15);
    return (*(uint64_t (**)(void, uint64_t, uint64_t))(v16 + 24))(a2 | 0x20u, v15, v16);
  }
  return result;
}

uint64_t sub_1B6B2E530(void *a1, unsigned int a2)
{
  unsigned int v13 = a2;
  if (a2 < 0x100 && a2 <= 0xFu)
  {
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    sub_1B62C14BC(a1, v11);
    return (*(uint64_t (**)(void, uint64_t, uint64_t))(v12 + 24))(a2 | 0x20, v11, v12);
  }
  else
  {
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    sub_1B62C14BC(a1, v5);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(50, v5, v6);
    if (!v2)
    {
      uint64_t v8 = a1[3];
      uint64_t v9 = a1[4];
      sub_1B62C14BC(a1, v8);
      unint64_t v10 = sub_1B6B17E84();
      return sub_1B6B2DFC8((uint64_t)&v13, v8, MEMORY[0x1E4FBC4C0], v9, v10);
    }
  }
  return result;
}

uint64_t sub_1B6B2E644(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v74 = a1;
  uint64_t v65 = a6;
  uint64_t v8 = *(void *)(a6 + 8);
  uint64_t v71 = *(void *)(*(void *)(v8 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness, v9);
  unint64_t v69 = (char *)&v62 - v10;
  uint64_t v11 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v63 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v16);
  unint64_t v72 = (char *)&v62 - v17;
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v62 - v20;
  MEMORY[0x1F4188790](v22, v23);
  uint64_t v25 = (char *)&v62 - v24;
  double v28 = MEMORY[0x1F4188790](v26, v27);
  uint64_t v30 = (char *)&v62 - v29;
  unsigned int v31 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  uint64_t v64 = a2;
  v31((char *)&v62 - v29, a2, a4, v28);
  uint64_t v75 = v8;
  LOBYTE(a2) = sub_1B6E326E8();
  ((void (*)(char *, char *, uint64_t))v31)(v25, v30, a4);
  if (a2)
  {
    uint64_t v66 = v30;
    swift_getAssociatedConformanceWitness();
    sub_1B6E337E8();
    sub_1B6E33488();
    char v32 = sub_1B6E31658();
    uint64_t v33 = v11;
    uint64_t v34 = *(void (**)(char *, uint64_t))(v11 + 8);
    v34(v21, a4);
    v34(v25, a4);
    if (v32)
    {
      v34(v66, a4);
      uint64_t v35 = v73;
      goto LABEL_20;
    }
    unint64_t v62 = v21;
    uint64_t v67 = v33;
    unint64_t v68 = v34;
    uint64_t v30 = v66;
  }
  else
  {
    unint64_t v62 = v21;
    uint64_t v36 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v67 = v11;
    unint64_t v68 = v36;
    v36(v25, a4);
  }
  uint64_t v37 = sub_1B6E326D8();
  uint64_t v38 = v72;
  ((void (*)(char *, char *, uint64_t))v31)(v72, v30, a4);
  if (v37 <= 7)
  {
    char v39 = v68;
    v68(v38, a4);
    uint64_t v35 = v73;
    goto LABEL_8;
  }
  unsigned __int8 v76 = -1;
  char v44 = sub_1B6E326E8();
  uint64_t v45 = sub_1B6E326D8();
  if (v44)
  {
    if (v45 <= 8)
    {
      uint64_t v66 = v30;
      swift_getAssociatedConformanceWitness();
      sub_1B6E337E8();
      unint64_t v46 = v62;
      sub_1B6E33488();
      char v47 = sub_1B6E31648();
      uint64_t v48 = v67;
      unint64_t v49 = v46;
      char v50 = v68;
      v68(v49, a4);
      LODWORD(v75) = v76;
      unint64_t v51 = v63;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v63, v38, a4);
      if (v47)
      {
        unsigned __int8 v52 = sub_1B6E326C8();
        v50(v51, a4);
        uint64_t v35 = v73;
        char v39 = v50;
        uint64_t v30 = v66;
        if (v75 < v52) {
          goto LABEL_19;
        }
      }
      else
      {
        v50(v51, a4);
        uint64_t v35 = v73;
        char v39 = v50;
        uint64_t v30 = v66;
      }
      goto LABEL_8;
    }
LABEL_16:
    sub_1B62B0054();
    uint64_t v53 = v62;
    sub_1B6E32698();
    char v54 = sub_1B6E31658();
    uint64_t v55 = v53;
    unint64_t v56 = v68;
    v68(v55, a4);
    v56(v38, a4);
    char v39 = v56;
    uint64_t v35 = v73;
    if (v54) {
      goto LABEL_19;
    }
    goto LABEL_8;
  }
  if (v45 >= 9) {
    goto LABEL_16;
  }
  unsigned __int8 v57 = sub_1B6E326C8();
  char v39 = v68;
  v68(v38, a4);
  uint64_t v35 = v73;
  if (v76 < v57)
  {
LABEL_19:
    v39(v30, a4);
    goto LABEL_20;
  }
LABEL_8:
  int v40 = sub_1B6E326C8();
  v39(v30, a4);
  if (v40 <= 0xFu)
  {
    uint64_t v41 = v74[3];
    uint64_t v42 = v74[4];
    sub_1B62C14BC(v74, v41);
    return (*(uint64_t (**)(void, uint64_t, uint64_t))(v42 + 24))(v40 | 0x20u, v41, v42);
  }
LABEL_20:
  uint64_t v58 = v74[3];
  uint64_t v59 = v74[4];
  sub_1B62C14BC(v74, v58);
  uint64_t result = sub_1B62B00FC(a4);
  if (!v35)
  {
    (*(void (**)(void, uint64_t, uint64_t))(v59 + 24))(result | 0x30, v58, v59);
    uint64_t v60 = v74[3];
    uint64_t v61 = v74[4];
    sub_1B62C14BC(v74, v60);
    return sub_1B6B2DFC8(v64, v60, a4, v61, v65);
  }
  return result;
}

uint64_t sub_1B6B2ED20(void *a1, char a2, float a3)
{
  uint64_t v8 = a1[3];
  uint64_t v7 = a1[4];
  sub_1B62C14BC(a1, v8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  if (a3 == 0.0) {
    return v9(64, v8, v7);
  }
  if (a2) {
    uint64_t v11 = 83;
  }
  else {
    uint64_t v11 = 66;
  }
  uint64_t result = v9(v11, v8, v7);
  if (!v3)
  {
    uint64_t v12 = a1[3];
    uint64_t v13 = a1[4];
    sub_1B62C14BC(a1, v12);
    float v15 = a3;
    unint64_t v14 = sub_1B6B17E84();
    return sub_1B6B2DFC8((uint64_t)&v15, v12, MEMORY[0x1E4FBC4C0], v13, v14);
  }
  return result;
}

uint64_t sub_1B6B2EE20(void *a1, char a2, double a3)
{
  uint64_t v8 = a1[3];
  uint64_t v7 = a1[4];
  sub_1B62C14BC(a1, v8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  if (a3 == 0.0) {
    return v9(64, v8, v7);
  }
  if (a2) {
    uint64_t v11 = 84;
  }
  else {
    uint64_t v11 = 67;
  }
  uint64_t result = v9(v11, v8, v7);
  if (!v3)
  {
    uint64_t v12 = a1[3];
    uint64_t v13 = a1[4];
    sub_1B62C14BC(a1, v12);
    double v15 = a3;
    unint64_t v14 = sub_1B6B17E30();
    return sub_1B6B2DFC8((uint64_t)&v15, v12, MEMORY[0x1E4FBC538], v13, v14);
  }
  return result;
}

uint64_t sub_1B6B2EF20(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v38 = a1;
  int v36 = a3;
  uint64_t v39 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v34 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness, v10);
  uint64_t v35 = (char *)&v33 - v11;
  uint64_t v12 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v17, v18);
  swift_getAssociatedConformanceWitness();
  sub_1B6E337D8();
  sub_1B6E33438();
  uint64_t v19 = v38;
  char v20 = sub_1B6E31708();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, a5);
  uint64_t v22 = v19[3];
  uint64_t v21 = v19[4];
  sub_1B62C14BC(v19, v22);
  if (v20) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 24))(64, v22, v21);
  }
  uint64_t v24 = a7;
  uint64_t v25 = (uint64_t)v35;
  uint64_t v26 = v37;
  uint64_t result = sub_1B62B00FC(a5);
  if (v36)
  {
    if (v26) {
      return result;
    }
    uint64_t v27 = (result + 1) | 0x50u;
  }
  else
  {
    if (v26) {
      return result;
    }
    uint64_t v27 = result | 0x40;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 24))(v27, v22, v21);
  double v28 = v19;
  uint64_t v29 = v19[3];
  uint64_t v30 = v19[4];
  sub_1B62C14BC(v28, v29);
  (*(void (**)(uint64_t, uint64_t))(v24 + 32))(a5, v24);
  uint64_t v31 = v34;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1B6B2DFC8(v25, v29, v31, v30, AssociatedConformanceWitness);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v25, v31);
}

uint64_t sub_1B6B2F2AC(uint64_t a1, uint64_t a2, float a3)
{
  float v9 = a3;
  unint64_t v5 = sub_1B639A9AC();
  _OWORD v7[2] = a1;
  v7[3] = MEMORY[0x1E4FBB470];
  v7[4] = a2;
  v7[5] = v5;
  v7[6] = &v9;
  char v8 = 0;
  return (*(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t, uint64_t))(a2 + 16))(sub_1B6B332E0, v7, a1, a2);
}

uint64_t sub_1B6B2F348(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(*(void *)(v2 + 16) + 16) == 1)
  {
    MEMORY[0x1F4188790](a1, a2);
    uint64_t v3 = (void (*)(uint64_t *))sub_1B6B339FC;
  }
  else
  {
    MEMORY[0x1F4188790](a1, a2);
    uint64_t v3 = (void (*)(uint64_t *))sub_1B6B33530;
  }
  return sub_1B6B2CA48(v3);
}

uint64_t sub_1B6B2F418(double a1)
{
  if (*(unsigned char *)(*(void *)(v1 + 16) + 16) != 1)
  {
    if (a1 != 0.0)
    {
      swift_retain();
      sub_1B6B2B634(67);
      sub_1B6B2DD58(*(unint64_t *)&a1);
      return swift_release();
    }
    return sub_1B6B2B634(64);
  }
  float v3 = a1;
  if (v3 == 0.0) {
    return sub_1B6B2B634(64);
  }
  swift_retain();
  sub_1B6B2B634(83);
  sub_1B6B2DE8C(LODWORD(v3));
  return swift_release();
}

uint64_t sub_1B6B2F4DC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = *(void (**)(void))(a2 + 8);
  v6();
  if (*(unsigned char *)(((uint64_t (*)(uint64_t, uint64_t))v6)(a1, a2) + 16) == 1)
  {
    float v7 = a3;
    *(float *)&double v11 = v7;
    unint64_t v8 = sub_1B639A9AC();
    uint64_t v13 = a1;
    uint64_t v14 = MEMORY[0x1E4FBB470];
    uint64_t v15 = a2;
    unint64_t v16 = v8;
    uint64_t v17 = &v11;
    char v18 = 1;
  }
  else
  {
    double v11 = a3;
    unint64_t v9 = sub_1B6B18604();
    uint64_t v13 = a1;
    uint64_t v14 = MEMORY[0x1E4FBB3D0];
    uint64_t v15 = a2;
    unint64_t v16 = v9;
    uint64_t v17 = &v11;
    char v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t (*)(void *), unsigned char *, uint64_t, uint64_t))(a2 + 16))(sub_1B6B332E0, v12, a1, a2);
}

uint64_t sub_1B6B2F5E8(void *a1, unsigned int a2, int a3)
{
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_1B62C14BC(a1, v7);
  if (a2 <= 0x1E) {
    return (*(uint64_t (**)(void, uint64_t, uint64_t))(v8 + 24))(a2 | a3, v7, v8);
  }
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(v8 + 24))(a3 | 0x1Fu, v7, v8);
  if (!v3)
  {
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    sub_1B62C14BC(a1, v10);
    return sub_1B6B2C194(a2, v10, v11);
  }
  return result;
}

uint64_t sub_1B6B2F6CC(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  sub_1B62C14BC(a1, v8);
  if ((a3 & 0x1000000000000000) != 0)
  {
    unint64_t v10 = sub_1B6E31998();
    if ((v10 & 0x8000000000000000) != 0)
    {
LABEL_5:
      sub_1B6E32BD8();
      __break(1u);
      goto LABEL_6;
    }
LABEL_4:
    if (!HIDWORD(v10)) {
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if ((a3 & 0x2000000000000000) == 0)
  {
    unint64_t v10 = a2 & 0xFFFFFFFFFFFFLL;
    goto LABEL_4;
  }
LABEL_6:
  unint64_t v10 = HIBYTE(a3) & 0xF;
LABEL_7:
  swift_bridgeObjectRetain();
  int v16 = v10;
  char v17 = 96;
  (*(void (**)(uint64_t (*)(void *), unsigned char *, uint64_t, uint64_t))(v9 + 16))(sub_1B6B32808, v15, v8, v9);
  if (v4) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_1B62C14BC(a1, v12);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1B6385D54(a2, a3);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v14, v12, v13);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B6B2F8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B2BBCC(a1, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B2F910, 0, *(void *)(*(void *)a3 + 80), *(void *)(*(void *)a3 + 88));
}

uint64_t sub_1B6B2F910(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t (*)(void *), void, uint64_t))(*(void *)(a2 + 8) + 16))(sub_1B6B2D670, 0, ObjectType);
}

uint64_t sub_1B6B2F984(char a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = *a4;
  v6[16] = a1;
  return sub_1B6B2BBCC(a2, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B339A4, (uint64_t)v6, *(void *)(v4 + 80), *(void *)(v4 + 88));
}

uint64_t sub_1B6B2F9FC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(void *)(a2 + 8);
  v8[16] = a3;
  return (*(uint64_t (**)(uint64_t (*)(void *), unsigned char *, uint64_t))(v6 + 16))(sub_1B6B33308, v8, ObjectType);
}

uint64_t sub_1B6B2FA88(char a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, _UNKNOWN **))
{
  uint64_t v8 = *a4;
  v10[16] = a1;
  return sub_1B6B2BBCC(a2, a8, (uint64_t)v10, *(void *)(v8 + 80), *(void *)(v8 + 88));
}

uint64_t sub_1B6B2FAF0(__int16 a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, _UNKNOWN **))
{
  uint64_t v8 = *a4;
  v10[8] = a1;
  return sub_1B6B2BBCC(a2, a8, (uint64_t)v10, *(void *)(v8 + 80), *(void *)(v8 + 88));
}

uint64_t sub_1B6B2FB58(int a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, _UNKNOWN **))
{
  uint64_t v8 = *a4;
  v10[4] = a1;
  return sub_1B6B2BBCC(a2, a8, (uint64_t)v10, *(void *)(v8 + 80), *(void *)(v8 + 88));
}

uint64_t sub_1B6B2FBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, _UNKNOWN **))
{
  uint64_t v8 = *a4;
  v10[2] = a1;
  return sub_1B6B2BBCC(a2, a8, (uint64_t)v10, *(void *)(v8 + 80), *(void *)(v8 + 88));
}

uint64_t sub_1B6B2FC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  v7[3] = a2;
  uint64_t v5 = *a5;
  _OWORD v7[2] = a1;
  return sub_1B6B2BBCC(a3, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B33988, (uint64_t)v7, *(void *)(v5 + 80), *(void *)(v5 + 88));
}

uint64_t sub_1B6B2FCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  v11[5] = a1;
  uint64_t v9 = *(void *)(a2 + 8);
  v11[2] = a3;
  v11[3] = a4;
  return (*(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t))(v9 + 16))(sub_1B6B32FD8, v11, ObjectType);
}

uint64_t sub_1B6B2FD3C(uint64_t a1, float a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = *a4;
  *(float *)&v6[4] = a2;
  return sub_1B6B2BBCC(a1, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B338D8, (uint64_t)v6, *(void *)(v4 + 80), *(void *)(v4 + 88));
}

uint64_t sub_1B6B2FDB0(uint64_t a1, double a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = *a4;
  *(double *)&_OWORD v6[2] = a2;
  return sub_1B6B2BBCC(a1, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B33930, (uint64_t)v6, *(void *)(v4 + 80), *(void *)(v4 + 88));
}

uint64_t sub_1B6B2FE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1B6B2FE60(a3, a2, a3, a4, a5, a1, a6, a7, a8, a9);
}

uint64_t sub_1B6B2FE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v40 = a8;
  uint64_t v41 = a3;
  uint64_t v42 = a6;
  uint64_t v43 = a5;
  uint64_t v13 = *(void *)(a7 - 8);
  uint64_t v39 = a9;
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = MEMORY[0x1F4188790](v16, v17);
  char v20 = (char *)&v38 - v19;
  uint64_t v21 = *(void (**)(char *, double))(v13 + 16);
  uint64_t v44 = v22;
  v21((char *)&v38 - v19, v18);
  uint64_t v25 = *(void **)(a1 + 32);
  uint64_t v24 = (uint64_t *)(a1 + 32);
  uint64_t v23 = v25;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v24 = (uint64_t)v25;
  uint64_t v55 = v24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v23 = sub_1B62B0BD0(0, v23[2] + 1, 1, v23);
    *uint64_t v24 = (uint64_t)v23;
  }
  uint64_t v38 = a10;
  unint64_t v28 = v23[2];
  unint64_t v27 = v23[3];
  if (v28 >= v27 >> 1)
  {
    uint64_t v37 = sub_1B62B0BD0(v27 > 1, v28 + 1, 1, v23);
    *uint64_t v55 = (uint64_t)v37;
  }
  ((void (*)(char *, char *, uint64_t))v21)(v15, v20, a7);
  uint64_t v29 = (uint64_t)v15;
  uint64_t v30 = v55;
  sub_1B62C5608(v28, v29, v55, a7, v39);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v20, a7);
  uint64_t v31 = *a4;
  uint64_t v47 = *(void *)(*a4 + 80);
  uint64_t v48 = v40;
  uint64_t v49 = *(void *)(v31 + 88);
  uint64_t v50 = v38;
  uint64_t v51 = v42;
  uint64_t v52 = v41;
  uint64_t v53 = a4;
  uint64_t v54 = v43;
  uint64_t v32 = v45;
  uint64_t result = sub_1B6B2BBCC(v44, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B33554, (uint64_t)v46, v47, v49);
  if (!v32)
  {
    uint64_t v34 = (void *)*v30;
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v30 = (uint64_t)v34;
    if ((v35 & 1) == 0)
    {
      uint64_t v34 = sub_1B6C16A0C(v34);
      *uint64_t v30 = (uint64_t)v34;
    }
    uint64_t v36 = v34[2] - 1;
    uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v34[5 * v36 + 4]);
    v34[2] = v36;
    *uint64_t v30 = (uint64_t)v34;
  }
  return result;
}

uint64_t sub_1B6B300F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v32 = a6;
  uint64_t v30 = a3;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = MEMORY[0x1F4188790](v12, v13);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void (**)(char *, double))(v9 + 16);
  uint64_t v31 = v18;
  v17((char *)&v29 - v15, v14);
  uint64_t v19 = v7 + 2;
  char v20 = (void *)v7[2];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  _OWORD v7[2] = (uint64_t)v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v20 = sub_1B62B0BD0(0, v20[2] + 1, 1, v20);
    *uint64_t v19 = v20;
  }
  unint64_t v23 = v20[2];
  unint64_t v22 = v20[3];
  if (v23 >= v22 >> 1) {
    *uint64_t v19 = sub_1B62B0BD0(v22 > 1, v23 + 1, 1, v20);
  }
  ((void (*)(char *, char *, uint64_t))v17)(v11, v16, v8);
  sub_1B62C5608(v23, (uint64_t)v11, v7 + 2, v8, *(void *)(v30 + 24));
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  uint64_t v24 = v7[2];
  type metadata accessor for _BinaryEncoder.KeyedStore();
  uint64_t v25 = *v7;
  swift_allocObject();
  uint64_t v26 = sub_1B6B2BB04(v25);
  uint64_t v27 = v7[1];
  swift_bridgeObjectRetain();
  sub_1B6B30654(v27, v26, v31, (uint64_t)&off_1F0F67A98);
  uint64_t v35 = v25;
  uint64_t v36 = v26;
  uint64_t v37 = v24;
  type metadata accessor for _BinaryKeyedEncodingContainer();
  swift_getWitnessTable();
  sub_1B6E33048();
  swift_release();
  return sub_1B6B30380((uint64_t)v7);
}

uint64_t sub_1B6B30380(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 16) = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1B6C16A0C(v2);
    *(void *)(a1 + 16) = v2;
  }
  uint64_t v4 = v2[2] - 1;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v2[5 * v4 + 4]);
  v2[2] = v4;
  *(void *)(a1 + 16) = v2;
  return result;
}

uint64_t sub_1B6B303F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v29 = a2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = MEMORY[0x1F4188790](v10, v11);
  double v14 = (char *)&v29 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16);
  uint64_t v30 = v16;
  v15((char *)&v29 - v13, v16, v6, v12);
  uint64_t v31 = v4;
  uint64_t v19 = (void *)v4[2];
  uint64_t v17 = v4 + 2;
  uint64_t v18 = v19;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v17 = (uint64_t)v19;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v18 = sub_1B62B0BD0(0, v18[2] + 1, 1, v18);
    *uint64_t v17 = (uint64_t)v18;
  }
  unint64_t v22 = v18[2];
  unint64_t v21 = v18[3];
  if (v22 >= v21 >> 1) {
    *uint64_t v17 = (uint64_t)sub_1B62B0BD0(v21 > 1, v22 + 1, 1, v18);
  }
  ((void (*)(char *, char *, uint64_t))v15)(v9, v14, v6);
  sub_1B62C5608(v22, (uint64_t)v9, v17, v6, *(void *)(v29 + 24));
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  uint64_t v23 = (uint64_t)v31;
  uint64_t v24 = v31[2];
  uint64_t v25 = *v31;
  type metadata accessor for _BinaryEncoder.UnkeyedStore();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 24) = 0u;
  *(_OWORD *)(v26 + 40) = 0u;
  *(_DWORD *)(v26 + 56) = 0;
  *(void *)(v26 + 64) = MEMORY[0x1E4FBC860];
  *(void *)(v26 + 16) = v25;
  *(_WORD *)(v26 + 72) = 0;
  uint64_t v27 = *(void *)(v23 + 8);
  swift_bridgeObjectRetain();
  sub_1B6B30654(v27, v26, v30, (uint64_t)&off_1F0F67AE8);
  a3[3] = &type metadata for _BinaryUnkeyedEncodingContainer;
  a3[4] = sub_1B6B33048();
  swift_release();
  *a3 = v25;
  a3[1] = v26;
  a3[2] = v24;
  return sub_1B6B30380(v23);
}

uint64_t sub_1B6B30654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v11 = *(_OWORD *)(*(void *)a1 + 80);
  uint64_t v9 = v11;
  uint64_t v7 = sub_1B62C12C4(v10);
  (*(void (**)(uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, a3);
  sub_1B6B2C1D8(a2, a4, (uint64_t)v10);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v10);
}

void sub_1B6B30728()
{
}

uint64_t sub_1B6B3078C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  type metadata accessor for _BinaryEncoder.SingleValueDataStore();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(_OWORD *)(v6 + 24) = xmmword_1B6E77700;
  *(unsigned char *)(v6 + 40) = 1;
  sub_1B6B30654(v2[1], v6, a1, (uint64_t)&off_1F0F67B60);
  sub_1B6B3083C(v5, v6, a2);

  return swift_release();
}

uint64_t sub_1B6B3083C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v5 = *(unsigned char *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 17);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = type metadata accessor for _BinaryEncoder();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 48) = 0;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)(v10 + 72) = 0;
  *(void *)(v10 + 80) = v11;
  *(unsigned char *)(v10 + 16) = v5;
  *(unsigned char *)(v10 + 17) = v6;
  *(void *)(v10 + 24) = v7;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v8;
  *(void *)(v10 + 56) = a2;
  *(void *)(v10 + 64) = &off_1F0F67B60;
  a3[3] = v9;
  a3[4] = sub_1B6B330B4();
  *a3 = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1B6B30908(uint64_t a1)
{
  return sub_1B6B2F8A8(a1, *v1, v1[1]);
}

uint64_t sub_1B6B30930(char a1, uint64_t a2)
{
  return sub_1B6B2F984(a1, a2, *(void *)v2, *(uint64_t **)(v2 + 8));
}

uint64_t sub_1B6B30958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B2FC28(a1, a2, a3, *(void *)v3, *(uint64_t **)(v3 + 8));
}

uint64_t sub_1B6B30980(uint64_t a1, double a2)
{
  return sub_1B6B2FDB0(a1, a2, *(void *)v2, *(uint64_t **)(v2 + 8));
}

uint64_t sub_1B6B309A8(uint64_t a1, float a2)
{
  return sub_1B6B2FD3C(a1, a2, *(void *)v2, *(uint64_t **)(v2 + 8));
}

uint64_t sub_1B6B309D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30A80(a1, a2, a3, a4, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B33678);
}

uint64_t sub_1B6B309FC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30B1C(a1, a2, a3, a4, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B33840);
}

uint64_t sub_1B6B30A28(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30B74(a1, a2, a3, a4, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B337A8);
}

uint64_t sub_1B6B30A54(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30BCC(a1, a2, a3, a4, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B33710);
}

uint64_t sub_1B6B30A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _UNKNOWN **))
{
  return sub_1B6B2FBC0(a1, a2, *(void *)v5, *(uint64_t **)(v5 + 8), *(void *)(v5 + 16), *(void *)(a3 + 16), *(void *)(a3 + 24), a5);
}

uint64_t sub_1B6B30AAC()
{
  return sub_1B6E33798();
}

uint64_t sub_1B6B30AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30A80(a1, a2, a3, a4, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B335C8);
}

uint64_t sub_1B6B30AF0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30B1C(a1, a2, a3, a4, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B3364C);
}

uint64_t sub_1B6B30B1C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _UNKNOWN **))
{
  return sub_1B6B2FA88(a1, a2, *(void *)v5, *(uint64_t **)(v5 + 8), *(void *)(v5 + 16), *(void *)(a3 + 16), *(void *)(a3 + 24), a5);
}

uint64_t sub_1B6B30B48(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30B74(a1, a2, a3, a4, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B33620);
}

uint64_t sub_1B6B30B74(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _UNKNOWN **))
{
  return sub_1B6B2FAF0(a1, a2, *(void *)v5, *(uint64_t **)(v5 + 8), *(void *)(v5 + 16), *(void *)(a3 + 16), *(void *)(a3 + 24), a5);
}

uint64_t sub_1B6B30BA0(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30BCC(a1, a2, a3, a4, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B335F4);
}

uint64_t sub_1B6B30BCC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _UNKNOWN **))
{
  return sub_1B6B2FB58(a1, a2, *(void *)v5, *(uint64_t **)(v5 + 8), *(void *)(v5 + 16), *(void *)(a3 + 16), *(void *)(a3 + 24), a5);
}

uint64_t sub_1B6B30BF8()
{
  return sub_1B6E337A8();
}

uint64_t sub_1B6B30C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B6B2FE24(a1, a2, *(void *)v5, *(uint64_t **)(v5 + 8), *(void *)(v5 + 16), *(void *)(a5 + 16), a3, *(void *)(a5 + 24), a4);
}

uint64_t sub_1B6B30C4C()
{
  return sub_1B6E33788();
}

uint64_t sub_1B6B30C78()
{
  return sub_1B6E336F8();
}

uint64_t sub_1B6B30C90()
{
  return sub_1B6E336E8();
}

uint64_t sub_1B6B30CA8()
{
  return sub_1B6E33708();
}

uint64_t sub_1B6B30CC4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30EB8(a1, a2, a3, a4, MEMORY[0x1E4FBBFF0]);
}

uint64_t sub_1B6B30CF0()
{
  return sub_1B6E33718();
}

uint64_t sub_1B6B30D0C(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30E10(a1, a2, a3, a4, MEMORY[0x1E4FBC008]);
}

uint64_t sub_1B6B30D38(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30E64(a1, a2, a3, a4, MEMORY[0x1E4FBC010]);
}

uint64_t sub_1B6B30D64(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30EB8(a1, a2, a3, a4, MEMORY[0x1E4FBC018]);
}

uint64_t sub_1B6B30D90()
{
  return sub_1B6E33748();
}

uint64_t sub_1B6B30DAC()
{
  return sub_1B6E33758();
}

uint64_t sub_1B6B30DC8()
{
  return sub_1B6E33728();
}

uint64_t sub_1B6B30DE4(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30E10(a1, a2, a3, a4, MEMORY[0x1E4FBC028]);
}

uint64_t sub_1B6B30E10(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FF);
}

uint64_t sub_1B6B30E38(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30E64(a1, a2, a3, a4, MEMORY[0x1E4FBC038]);
}

uint64_t sub_1B6B30E64(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FFFF);
}

uint64_t sub_1B6B30E8C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6B30EB8(a1, a2, a3, a4, MEMORY[0x1E4FBC040]);
}

uint64_t sub_1B6B30EB8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  return a5(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_1B6B30EE8()
{
  return sub_1B6E33768();
}

uint64_t sub_1B6B30F04()
{
  return sub_1B6E33778();
}

uint64_t sub_1B6B30F20()
{
  return sub_1B6E33738();
}

uint64_t sub_1B6B30F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1B6B300F4(a1, a2, a5, a3, a4, a6);
}

void sub_1B6B30F64()
{
}

uint64_t sub_1B6B30F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B6B30FA4(a2, a2, a3, a4, a1, a5, a6);
}

uint64_t sub_1B6B30FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = *(unsigned int *)(a3 + 56);
  *(void *)&long long v26 = 0x207865646E49;
  *((void *)&v26 + 1) = 0xE600000000000000;
  uint64_t v29 = v11;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  double v12 = *(void **)(a1 + 32);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 32) = v12;
  uint64_t v25 = a7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    double v12 = sub_1B62B0BD0(0, v12[2] + 1, 1, v12);
    *(void *)(a1 + 32) = v12;
  }
  unint64_t v15 = v12[2];
  unint64_t v14 = v12[3];
  if (v15 >= v14 >> 1)
  {
    double v12 = sub_1B62B0BD0(v14 > 1, v15 + 1, 1, v12);
    *(void *)(a1 + 32) = v12;
  }
  uint64_t v27 = &type metadata for _BinaryKey;
  unint64_t v28 = sub_1B62B0BEC();
  uint64_t v16 = swift_allocObject();
  *(void *)&long long v26 = v16;
  *(void *)(v16 + 16) = 0x207865646E49;
  *(void *)(v16 + 24) = 0xE600000000000000;
  *(void *)(v16 + 32) = v11;
  *(unsigned char *)(v16 + 40) = 0;
  void v12[2] = v15 + 1;
  sub_1B62C15C4(&v26, (uint64_t)&v12[5 * v15 + 4]);
  uint64_t v17 = type metadata accessor for _BinaryEncoder.UnkeyedStore();
  uint64_t result = sub_1B6B2B4A0(a2, a5, a3, v17, a6, (uint64_t)&off_1F0F67AE8, v25);
  if (!v7)
  {
    uint64_t v19 = *(void **)(a1 + 32);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a1 + 32) = v19;
    if ((v20 & 1) == 0)
    {
      uint64_t v19 = sub_1B6C16A0C(v19);
      *(void *)(a1 + 32) = v19;
    }
    uint64_t v21 = v19[2] - 1;
    uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v19[5 * v21 + 4]);
    v19[2] = v21;
    *(void *)(a1 + 32) = v19;
  }
  return result;
}

uint64_t sub_1B6B31188(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(unsigned int *)(a3 + 56);
  *(void *)&long long v14 = 0x207865646E49;
  *((void *)&v14 + 1) = 0xE600000000000000;
  uint64_t v18 = v7;
  swift_bridgeObjectRetain();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a4 = sub_1B62B0BD0(0, a4[2] + 1, 1, a4);
  }
  unint64_t v9 = a4[2];
  unint64_t v8 = a4[3];
  if (v9 >= v8 >> 1) {
    a4 = sub_1B62B0BD0(v8 > 1, v9 + 1, 1, a4);
  }
  uint64_t v16 = &type metadata for _BinaryKey;
  unint64_t v17 = sub_1B62B0BEC();
  uint64_t v10 = swift_allocObject();
  *(void *)&long long v14 = v10;
  *(void *)(v10 + 16) = 0x207865646E49;
  *(void *)(v10 + 24) = 0xE600000000000000;
  *(void *)(v10 + 32) = v7;
  *(unsigned char *)(v10 + 40) = 0;
  a4[2] = v9 + 1;
  sub_1B62C15C4(&v14, (uint64_t)&a4[5 * v9 + 4]);
  type metadata accessor for _BinaryEncoder.KeyedStore();
  swift_allocObject();
  uint64_t v11 = sub_1B6B2BB04(a2);
  uint64_t v12 = type metadata accessor for _BinaryEncoder.KeyedStore();
  swift_bridgeObjectRetain();
  sub_1B6B328E4(v11, a3, v12, (uint64_t)&off_1F0F67A98);
  swift_bridgeObjectRelease();
  *(void *)&long long v14 = a2;
  *((void *)&v14 + 1) = v11;
  unint64_t v15 = a4;
  type metadata accessor for _BinaryKeyedEncodingContainer();
  swift_getWitnessTable();
  sub_1B6E33048();
  return swift_release();
}

uint64_t sub_1B6B313C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *(unsigned int *)(a2 + 56);
  *(void *)&long long v19 = 0x207865646E49;
  *((void *)&v19 + 1) = 0xE600000000000000;
  uint64_t v22 = v8;
  swift_bridgeObjectRetain();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a3 = sub_1B62B0BD0(0, a3[2] + 1, 1, a3);
  }
  unint64_t v10 = a3[2];
  unint64_t v9 = a3[3];
  if (v10 >= v9 >> 1) {
    a3 = sub_1B62B0BD0(v9 > 1, v10 + 1, 1, a3);
  }
  char v20 = &type metadata for _BinaryKey;
  unint64_t v21 = sub_1B62B0BEC();
  uint64_t v11 = swift_allocObject();
  *(void *)&long long v19 = v11;
  *(void *)(v11 + 16) = 0x207865646E49;
  *(void *)(v11 + 24) = 0xE600000000000000;
  *(void *)(v11 + 32) = v8;
  *(unsigned char *)(v11 + 40) = 0;
  a3[2] = v10 + 1;
  sub_1B62C15C4(&v19, (uint64_t)&a3[5 * v10 + 4]);
  type metadata accessor for _BinaryEncoder.UnkeyedStore();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_DWORD *)(v12 + 56) = 0;
  *(void *)(v12 + 64) = MEMORY[0x1E4FBC860];
  *(void *)(v12 + 16) = a1;
  *(_WORD *)(v12 + 72) = 0;
  uint64_t v13 = *(void **)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 64) = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v13 = sub_1B68C0D7C(0, v13[2] + 1, 1, v13);
    *(void *)(a2 + 64) = v13;
  }
  unint64_t v16 = v13[2];
  unint64_t v15 = v13[3];
  if (v16 >= v15 >> 1)
  {
    uint64_t v13 = sub_1B68C0D7C(v15 > 1, v16 + 1, 1, v13);
    *(void *)(a2 + 64) = v13;
  }
  v13[2] = v16 + 1;
  unint64_t v17 = &v13[2 * v16];
  _OWORD v17[4] = v12;
  v17[5] = &off_1F0F67AE8;
  ++*(_DWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  a4[3] = &type metadata for _BinaryUnkeyedEncodingContainer;
  a4[4] = sub_1B6B33048();
  uint64_t result = swift_release();
  *a4 = a1;
  a4[1] = v12;
  a4[2] = a3;
  return result;
}

uint64_t sub_1B6B31620()
{
  return *(unsigned int *)(*(void *)(v0 + 8) + 56);
}

uint64_t sub_1B6B3162C()
{
  return sub_1B6B2D44C();
}

uint64_t sub_1B6B31650()
{
  return sub_1B6B2D6CC();
}

uint64_t sub_1B6B31674(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 8);
  swift_bridgeObjectRetain();
  return sub_1B6B2C878(v5, a1, a2);
}

uint64_t sub_1B6B316BC(uint64_t a1, uint64_t a2)
{
  return sub_1B6B2F348(a1, a2);
}

uint64_t sub_1B6B316E0()
{
  return sub_1B6B2CA48((void (*)(uint64_t *))sub_1B6B3350C);
}

uint64_t sub_1B6B31734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B31854(a1, a2, a3, (void (*)(uint64_t *))sub_1B6B339E4);
}

uint64_t sub_1B6B31760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B318C0(a1, a2, a3, (void (*)(uint64_t *))sub_1B6B334F0);
}

uint64_t sub_1B6B3178C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3192C(a1, a2, a3, (void (*)(uint64_t *))sub_1B6B334B4);
}

uint64_t sub_1B6B317B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B31998(a1, a2, a3, (void (*)(uint64_t *))sub_1B6B33478);
}

uint64_t sub_1B6B317E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B31854(a1, a2, a3, (void (*)(uint64_t *))sub_1B6B33458);
}

uint64_t sub_1B6B31810()
{
  return sub_1B6E33418();
}

uint64_t sub_1B6B31828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B31854(a1, a2, a3, (void (*)(uint64_t *))sub_1B6B339C4);
}

uint64_t sub_1B6B31854(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *))
{
  return sub_1B6B2CA48(a4);
}

uint64_t sub_1B6B31894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B318C0(a1, a2, a3, (void (*)(uint64_t *))sub_1B6B3343C);
}

uint64_t sub_1B6B318C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *))
{
  return sub_1B6B2CA48(a4);
}

uint64_t sub_1B6B31900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3192C(a1, a2, a3, (void (*)(uint64_t *))sub_1B6B33400);
}

uint64_t sub_1B6B3192C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *))
{
  return sub_1B6B2CA48(a4);
}

uint64_t sub_1B6B3196C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B31998(a1, a2, a3, (void (*)(uint64_t *))sub_1B6B333C4);
}

uint64_t sub_1B6B31998(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *))
{
  return sub_1B6B2CA48(a4);
}

uint64_t sub_1B6B319D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B31854(a1, a2, a3, (void (*)(uint64_t *))sub_1B6B333A8);
}

uint64_t sub_1B6B31A04()
{
  return sub_1B6E33428();
}

uint64_t sub_1B6B31A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B30F7C(a1, *v3, v3[1], v3[2], a2, a3);
}

uint64_t sub_1B6B31A44()
{
  return sub_1B6E332F8();
}

uint64_t sub_1B6B31A70()
{
  return sub_1B6E33328();
}

uint64_t sub_1B6B31A9C()
{
  return sub_1B6E33318();
}

uint64_t sub_1B6B31AC8()
{
  return sub_1B6E33338();
}

uint64_t sub_1B6B31AF4()
{
  return sub_1B6E33348();
}

uint64_t sub_1B6B31B20()
{
  return sub_1B6E33358();
}

uint64_t sub_1B6B31B4C()
{
  return sub_1B6E33378();
}

uint64_t sub_1B6B31B78()
{
  return sub_1B6E33388();
}

uint64_t sub_1B6B31BA4()
{
  return sub_1B6E33398();
}

uint64_t sub_1B6B31BD0()
{
  return sub_1B6E333A8();
}

uint64_t sub_1B6B31BFC()
{
  return sub_1B6E333C8();
}

uint64_t sub_1B6B31C28()
{
  return sub_1B6E33368();
}

uint64_t sub_1B6B31C54()
{
  return sub_1B6E333B8();
}

uint64_t sub_1B6B31C80()
{
  return sub_1B6E333D8();
}

uint64_t sub_1B6B31CAC()
{
  return sub_1B6E333E8();
}

uint64_t sub_1B6B31CD8()
{
  return sub_1B6E333F8();
}

uint64_t sub_1B6B31D04()
{
  return sub_1B6E33408();
}

uint64_t sub_1B6B31D30()
{
  return sub_1B6E33308();
}

uint64_t sub_1B6B31D64(uint64_t a1)
{
  return sub_1B6B31188(a1, *(void *)v1, *(void *)(v1 + 8), *(void **)(v1 + 16));
}

uint64_t sub_1B6B31D78@<X0>(void *a1@<X8>)
{
  return sub_1B6B313C8(*(void *)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), a1);
}

void sub_1B6B31D84()
{
}

uint64_t sub_1B6B31DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for _BinaryEncoder.SingleValueDataStore();
  return sub_1B6B2B4A0(a4, a1, a3, v11, a5, (uint64_t)&off_1F0F67B60, a6);
}

uint64_t sub_1B6B31E5C()
{
  return sub_1B6B2B634(0);
}

uint64_t sub_1B6B31E90(char a1)
{
  return sub_1B6B2B634(a1 | 0x10u);
}

uint64_t sub_1B6B31EC4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 8);
  v7[3] = type metadata accessor for _BinaryEncoder.SingleValueDataStore();
  void v7[4] = &off_1F0F67B38;
  v7[0] = v5;
  swift_retain();
  sub_1B6B2F6CC(v7, a1, a2);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
}

uint64_t sub_1B6B31F44(double a1)
{
  return sub_1B6B2F418(a1);
}

uint64_t sub_1B6B31F68(float a1)
{
  if (a1 == 0.0) {
    return sub_1B6B2B634(64);
  }
  swift_retain();
  sub_1B6B2B634(66);
  sub_1B6B2DE8C(LODWORD(a1));
  return swift_release();
}

uint64_t sub_1B6B31FE8(unint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  v5[3] = type metadata accessor for _BinaryEncoder.SingleValueDataStore();
  v5[4] = &off_1F0F67B38;
  v5[0] = v3;
  swift_retain();
  sub_1B6B2E2F8(v5, a1);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
}

uint64_t sub_1B6B32060(unsigned __int8 a1)
{
  if (a1 < 0x10u) {
    return sub_1B6B2B634(a1 | 0x20u);
  }
  swift_retain();
  sub_1B6B2B634(48);
  sub_1B6B2DDF4(a1);
  return swift_release();
}

uint64_t sub_1B6B320E0(int a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3227C(a1, a2, a3, (uint64_t (*)(void))sub_1B6B1855C, MEMORY[0x1E4FBC0F8]);
}

uint64_t sub_1B6B32114(unsigned int a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  v5[3] = type metadata accessor for _BinaryEncoder.SingleValueDataStore();
  v5[4] = &off_1F0F67B38;
  v5[0] = v3;
  swift_retain();
  sub_1B6B2E1D4(v5, a1, (uint64_t (*)(void))sub_1B62A87A8, MEMORY[0x1E4FBC150]);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
}

uint64_t sub_1B6B321A8()
{
  return sub_1B6E33608();
}

uint64_t sub_1B6B321C0(unint64_t a1)
{
  if (a1 <= 0xFF && a1 < 0x10u) {
    return sub_1B6B2B634(a1 | 0x20u);
  }
  swift_retain();
  sub_1B6B2B634(51);
  sub_1B6B2DD58(a1);
  return swift_release();
}

uint64_t sub_1B6B32248(int a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3227C(a1, a2, a3, (uint64_t (*)(void))sub_1B6B17ED8, MEMORY[0x1E4FBC450]);
}

uint64_t sub_1B6B3227C(int a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v9 = *(void *)(v5 + 8);
  v11[3] = type metadata accessor for _BinaryEncoder.SingleValueDataStore();
  v11[4] = &off_1F0F67B38;
  v11[0] = v9;
  swift_retain();
  sub_1B6B2E40C(v11, a1, a4, a5);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v11);
}

uint64_t sub_1B6B3230C(unsigned int a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  v5[3] = type metadata accessor for _BinaryEncoder.SingleValueDataStore();
  v5[4] = &off_1F0F67B38;
  v5[0] = v3;
  swift_retain();
  sub_1B6B2E530(v5, a1);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
}

uint64_t sub_1B6B32384()
{
  return sub_1B6E33618();
}

uint64_t sub_1B6B3239C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B31DE8(a1, *v3, v3[1], v3[2], a2, a3);
}

uint64_t sub_1B6B323C4()
{
  return swift_bridgeObjectRetain();
}

double (*sub_1B6B323D0())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6B323F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B2A9BC(a1, a2, a3);
}

uint64_t sub_1B6B32418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void **)(a2 + 80);
  swift_unknownObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 80) = v7;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B68C0D7C(0, v7[2] + 1, 1, v7);
    uint64_t v7 = (void *)result;
    *(void *)(a2 + 80) = result;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B68C0D7C(v9 > 1, v10 + 1, 1, v7);
    uint64_t v7 = (void *)result;
    *(void *)(a2 + 80) = result;
  }
  _OWORD v7[2] = v10 + 1;
  uint64_t v11 = &v7[2 * v10];
  v11[4] = a1;
  void v11[5] = a4;
  return result;
}

void *sub_1B6B324CC(unsigned char *a1, unsigned char *a2)
{
  if (!a1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  int64_t v4 = a2 - a1;
  if (a2 == a1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  if (v4 < 1)
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    if (!a2) {
      return v5;
    }
  }
  else
  {
    sub_1B6B32744(0, (unint64_t *)&unk_1EB980DB0, MEMORY[0x1E4FBBE00]);
    uint64_t v5 = (void *)swift_allocObject();
    size_t v7 = j__malloc_size(v5);
    v5[2] = v4;
    v5[3] = 2 * v7 - 64;
    if (!a2) {
      return v5;
    }
  }
  if (a1 < a2) {
    memmove(v5 + 4, a1, v4);
  }
  return v5;
}

void *sub_1B6B3258C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1B6E31028();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (uint64_t)(0xFFFFFFFF00000001 * a1) >> 32;
      if (v10) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 24) - *(void *)(a1 + 16);
      if (v10) {
        goto LABEL_7;
      }
      break;
    case 3uLL:
      return v9;
    default:
      uint64_t v10 = BYTE6(a2);
      if (BYTE6(a2))
      {
LABEL_7:
        if (v10 >= 1)
        {
          sub_1B6B32744(0, (unint64_t *)&unk_1EB980DB0, MEMORY[0x1E4FBBE00]);
          unint64_t v9 = (void *)swift_allocObject();
          size_t v11 = j__malloc_size(v9);
          _OWORD v9[2] = v10;
          void v9[3] = 2 * v11 - 64;
        }
        sub_1B62FFBB0(a1, a2);
        sub_1B6E30F88();
        sub_1B62C2360(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      }
      break;
  }
  return v9;
}

void sub_1B6B32744(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC358]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1B6B32794()
{
  unint64_t result = qword_1E9DD5D90;
  if (!qword_1E9DD5D90)
  {
    sub_1B6B32744(255, &qword_1E9DD5D88, MEMORY[0x1E4FBBB08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5D90);
  }
  return result;
}

uint64_t sub_1B6B32808(void *a1)
{
  return sub_1B6B2F5E8(a1, *(_DWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 20));
}

uint64_t sub_1B6B32828(void *a1)
{
  return sub_1B6B2E644(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1B6B3284C(unsigned char *a1, unsigned char *a2, void *a3)
{
  return sub_1B6B2E150(a1, a2, v3[6], v3[2], v3[3], v3[4], v3[5], a3);
}

uint64_t sub_1B6B32874(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  v9[0] = a1;
  v9[1] = a2;
  _OWORD v9[2] = a3;
  char v10 = a4 & 1;
  v8[2] = a5;
  void v8[3] = a6;
  unint64_t v6 = sub_1B62B0BEC();
  return sub_1B6B2BBCC((uint64_t)v9, (void (*)(uint64_t, _UNKNOWN **))sub_1B6B32EBC, (uint64_t)v8, (uint64_t)&type metadata for _BinaryKey, v6);
}

uint64_t sub_1B6B328E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void **)(a2 + 64);
  swift_unknownObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 64) = v7;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1B68C0D7C(0, v7[2] + 1, 1, v7);
    uint64_t v7 = (void *)result;
    *(void *)(a2 + 64) = result;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t result = (uint64_t)sub_1B68C0D7C(v9 > 1, v10 + 1, 1, v7);
    uint64_t v7 = (void *)result;
    *(void *)(a2 + 64) = result;
  }
  _OWORD v7[2] = v10 + 1;
  size_t v11 = &v7[2 * v10];
  v11[4] = a1;
  void v11[5] = a4;
  ++*(_DWORD *)(a2 + 56);
  return result;
}

uint64_t sub_1B6B329A4(void *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  unint64_t v14 = v4;
  if (v4 > 0xFF || v4 >= 0x10u)
  {
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[4];
    sub_1B62C14BC(a1, v6);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(51, v6, v7);
    if (!v2)
    {
      uint64_t v8 = a1[3];
      uint64_t v9 = a1[4];
      sub_1B62C14BC(a1, v8);
      unint64_t v10 = sub_1B6B17E30();
      return sub_1B6B2DFC8((uint64_t)&v14, v8, MEMORY[0x1E4FBC538], v9, v10);
    }
  }
  else
  {
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    sub_1B62C14BC(a1, v11);
    return (*(uint64_t (**)(void, uint64_t, uint64_t))(v12 + 24))(v4 | 0x20, v11, v12);
  }
  return result;
}

uint64_t sub_1B6B32AB8(void *a1, unsigned __int8 *a2)
{
  unsigned __int8 v10 = *a2;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_1B62C14BC(a1, v4);
  if (v10 < 0x10u) {
    return (*(uint64_t (**)(void, uint64_t, uint64_t))(v5 + 24))(v10 | 0x20u, v4, v5);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(48, v4, v5);
  if (!v2)
  {
    uint64_t v7 = a1[3];
    uint64_t v8 = a1[4];
    sub_1B62C14BC(a1, v7);
    unint64_t v9 = sub_1B6B185B0();
    return sub_1B6B2DFC8((uint64_t)&v10, v7, MEMORY[0x1E4FBC098], v8, v9);
  }
  return result;
}

uint64_t sub_1B6B32BAC(void *a1, unsigned __int8 *a2)
{
  unsigned __int8 v10 = *a2;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_1B62C14BC(a1, v4);
  if (v10 < 0x10u) {
    return (*(uint64_t (**)(void, uint64_t, uint64_t))(v5 + 24))(v10 | 0x20u, v4, v5);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(48, v4, v5);
  if (!v2)
  {
    uint64_t v7 = a1[3];
    uint64_t v8 = a1[4];
    sub_1B62C14BC(a1, v7);
    unint64_t v9 = sub_1B6B17F2C();
    return sub_1B6B2DFC8((uint64_t)&v10, v7, MEMORY[0x1E4FBC358], v8, v9);
  }
  return result;
}

uint64_t sub_1B6B32CA0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v23 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  unint64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v24 = v7;
  unint64_t v22 = v7 - 6;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    uint64_t v13 = *(void *)(a1 + 48) + 32 * v10;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    uint64_t v16 = *(void *)(v13 + 16);
    uint64_t v17 = *(unsigned __int8 *)(v13 + 24);
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v10);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    a2(v14, v15, v16, v17, v19, v20);
    if (v3)
    {
      swift_release();
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    uint64_t v11 = v8 + 1;
    if (v8 + 1 >= v24) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v23 + 8 * v11);
    if (!v12)
    {
      uint64_t v11 = v8 + 2;
      if (v8 + 2 >= v24) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v23 + 8 * v11);
      if (!v12)
      {
        uint64_t v11 = v8 + 3;
        if (v8 + 3 >= v24) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v23 + 8 * v11);
        if (!v12)
        {
          uint64_t v11 = v8 + 4;
          if (v8 + 4 >= v24) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v23 + 8 * v11);
          if (!v12)
          {
            uint64_t v11 = v8 + 5;
            if (v8 + 5 >= v24) {
              return swift_release();
            }
            unint64_t v12 = *(void *)(v23 + 8 * v11);
            if (!v12)
            {
              while (v22 != v8)
              {
                unint64_t v12 = *(void *)(a1 + 8 * v8++ + 112);
                if (v12)
                {
                  uint64_t v11 = v8 + 5;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v11 << 6);
    uint64_t v8 = v11;
  }
}

uint64_t sub_1B6B32EBC(uint64_t a1, uint64_t a2)
{
  return sub_1B6B2C50C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1B6B32ED8(uint64_t a1, void (*a2)(uint64_t, _UNKNOWN **))
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v4 = (uint64_t)(0xFFFFFFFF00000001 * v2) >> 32;
      break;
    case 2uLL:
      uint64_t v4 = *(void *)(v2 + 24) - *(void *)(v2 + 16);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v4 = BYTE6(v3);
      break;
  }
  a2(a1, &off_1F0F67B60);
  return v4;
}

uint64_t sub_1B6B32FD8(void *a1)
{
  return sub_1B6B2F6CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1B6B32FF4()
{
  unint64_t result = qword_1E9DD5D98;
  if (!qword_1E9DD5D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5D98);
  }
  return result;
}

unint64_t sub_1B6B33048()
{
  unint64_t result = qword_1E9DD5DA0;
  if (!qword_1E9DD5DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5DA0);
  }
  return result;
}

uint64_t type metadata accessor for _BinaryKeyedEncodingContainer()
{
  return sub_1B62C36EC();
}

unint64_t sub_1B6B330B4()
{
  unint64_t result = qword_1E9DD5DA8;
  if (!qword_1E9DD5DA8)
  {
    type metadata accessor for _BinaryEncoder();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5DA8);
  }
  return result;
}

uint64_t sub_1B6B3310C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(a1, ObjectType, v3);
}

uint64_t sub_1B6B33174(uint64_t a1)
{
  return sub_1B6B2AD44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1B6B33190()
{
  if (!qword_1E9DD5DB0[0])
  {
    sub_1B6E329B8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, qword_1E9DD5DB0);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for Prefab(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for Prefab(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void *_s3VFX31_BinaryUnkeyedEncodingContainerVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for _BinaryUnkeyedEncodingContainer()
{
  return &type metadata for _BinaryUnkeyedEncodingContainer;
}

ValueMetadata *type metadata accessor for _BinarySingleValueEncodingContainer()
{
  return &type metadata for _BinarySingleValueEncodingContainer;
}

uint64_t sub_1B6B332E0(void *a1)
{
  return sub_1B6B2EF20(a1, *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1B6B33308(void *a1)
{
  int v2 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_1B62C14BC(a1, v3);
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v4 + 24))(v2 | 0x10u, v3, v4);
}

uint64_t sub_1B6B33370()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1B6B333A8(void *a1)
{
  return sub_1B6B329A4(a1, *(unint64_t **)(v1 + 16));
}

uint64_t sub_1B6B333C4(void *a1)
{
  return sub_1B6B2E1D4(a1, **(_DWORD **)(v1 + 16), (uint64_t (*)(void))sub_1B6B17E84, MEMORY[0x1E4FBC4C0]);
}

uint64_t sub_1B6B33400(void *a1)
{
  return sub_1B6B2E40C(a1, **(unsigned __int16 **)(v1 + 16), (uint64_t (*)(void))sub_1B6B17ED8, MEMORY[0x1E4FBC450]);
}

uint64_t sub_1B6B3343C(void *a1)
{
  return sub_1B6B32BAC(a1, *(unsigned __int8 **)(v1 + 16));
}

uint64_t sub_1B6B33458(void *a1)
{
  return sub_1B6B2E2F8(a1, **(void **)(v1 + 16));
}

uint64_t sub_1B6B33478(void *a1)
{
  return sub_1B6B2E1D4(a1, **(_DWORD **)(v1 + 16), (uint64_t (*)(void))sub_1B62A87A8, MEMORY[0x1E4FBC150]);
}

uint64_t sub_1B6B334B4(void *a1)
{
  return sub_1B6B2E40C(a1, **(unsigned __int16 **)(v1 + 16), (uint64_t (*)(void))sub_1B6B1855C, MEMORY[0x1E4FBC0F8]);
}

uint64_t sub_1B6B334F0(void *a1)
{
  return sub_1B6B32AB8(a1, *(unsigned __int8 **)(v1 + 16));
}

uint64_t sub_1B6B3350C(void *a1)
{
  return sub_1B6B2ED20(a1, *(unsigned char *)(v1 + 24), **(float **)(v1 + 16));
}

uint64_t sub_1B6B33530(void *a1)
{
  return sub_1B6B2EE20(a1, *(unsigned char *)(v1 + 24), **(double **)(v1 + 16));
}

uint64_t sub_1B6B33554(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[5];
  uint64_t v7 = v2[6];
  uint64_t v8 = v2[7];
  uint64_t ObjectType = swift_getObjectType();
  return sub_1B6B2B4A0(v8, v7, a1, ObjectType, v5, a2, v6);
}

uint64_t sub_1B6B335C8(uint64_t a1, uint64_t a2)
{
  return sub_1B6B336A4(a1, a2, sub_1B6B2DB90);
}

uint64_t sub_1B6B335F4(uint64_t a1, uint64_t a2)
{
  return sub_1B6B3373C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1B6B2D3B4);
}

uint64_t sub_1B6B33620(uint64_t a1, uint64_t a2)
{
  return sub_1B6B337D4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1B6B2DCC0);
}

uint64_t sub_1B6B3364C(uint64_t a1, uint64_t a2)
{
  return sub_1B6B3386C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1B6B2DC28);
}

uint64_t sub_1B6B33678(uint64_t a1, uint64_t a2)
{
  return sub_1B6B336A4(a1, a2, sub_1B6B2D930);
}

uint64_t sub_1B6B336A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void))
{
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t ObjectType = swift_getObjectType();
  return a3(v6, ObjectType, *(void *)(a2 + 8));
}

uint64_t sub_1B6B33710(uint64_t a1, uint64_t a2)
{
  return sub_1B6B3373C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1B6B2DAF8);
}

uint64_t sub_1B6B3373C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void))
{
  uint64_t v6 = *(unsigned int *)(v3 + 16);
  uint64_t ObjectType = swift_getObjectType();
  return a3(v6, ObjectType, *(void *)(a2 + 8));
}

uint64_t sub_1B6B337A8(uint64_t a1, uint64_t a2)
{
  return sub_1B6B337D4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1B6B2DA60);
}

uint64_t sub_1B6B337D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void))
{
  uint64_t v6 = *(unsigned __int16 *)(v3 + 16);
  uint64_t ObjectType = swift_getObjectType();
  return a3(v6, ObjectType, *(void *)(a2 + 8));
}

uint64_t sub_1B6B33840(uint64_t a1, uint64_t a2)
{
  return sub_1B6B3386C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void))sub_1B6B2D9C8);
}

uint64_t sub_1B6B3386C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void))
{
  uint64_t v6 = *(unsigned __int8 *)(v3 + 16);
  uint64_t ObjectType = swift_getObjectType();
  return a3(v6, ObjectType, *(void *)(a2 + 8));
}

uint64_t sub_1B6B338D8(uint64_t a1, uint64_t a2)
{
  float v4 = *(float *)(v2 + 16);
  uint64_t ObjectType = swift_getObjectType();
  return sub_1B6B2F2AC(ObjectType, *(void *)(a2 + 8), v4);
}

uint64_t sub_1B6B33930(uint64_t a1, uint64_t a2)
{
  double v4 = *(double *)(v2 + 16);
  uint64_t ObjectType = swift_getObjectType();
  return sub_1B6B2F4DC(ObjectType, *(void *)(a2 + 8), v4);
}

uint64_t sub_1B6B33988(uint64_t a1, uint64_t a2)
{
  return sub_1B6B2FCA4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1B6B339A4(uint64_t a1, uint64_t a2)
{
  return sub_1B6B2F9FC(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_1B6B339C4(void *a1)
{
  return sub_1B6B333A8(a1);
}

uint64_t sub_1B6B339E4(void *a1)
{
  return sub_1B6B33458(a1);
}

uint64_t sub_1B6B339FC(void *a1)
{
  return sub_1B6B3350C(a1);
}

uint64_t sub_1B6B33A14(unsigned __int8 a1)
{
  return sub_1B6B32060(a1);
}

uint64_t sub_1B6B33A38(uint64_t a1)
{
  return sub_1B639E9BC(a1, (void (*)(void))type metadata accessor for ThreadLogger, &qword_1EB997FD0);
}

void sub_1B6B33A58()
{
  qword_1EB97E390 = MEMORY[0x1E4FBC870];
}

void sub_1B6B33A6C()
{
  dword_1EB94A1F0 = 0;
}

uint64_t LogOptions.rawValue.getter()
{
  return *(void *)v0;
}

VFX::LogOptions __swiftcall LogOptions.init(rawValue:)(VFX::LogOptions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void sub_1B6B33A88()
{
}

uint64_t sub_1B6B33AEC()
{
  sub_1B6B34460(0, &qword_1EB981AD8, 255, (uint64_t (*)(uint64_t))sub_1B6B3442C, MEMORY[0x1E4FBD2A0]);
  swift_allocObject();
  uint64_t result = sub_1B6E33B28();
  qword_1EB997F50 = result;
  return result;
}

void sub_1B6B33B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  if (*a4)
  {
    sub_1B6E33998();
    sub_1B6E33938();
    sub_1B6E318B8();
    long long v15 = v11[2];
    long long v16 = v11[3];
    uint64_t v17 = v12;
    long long v13 = v11[0];
    long long v14 = v11[1];
    uint64_t v9 = sub_1B6E33978();
    if (qword_1EB97DDC8 != -1) {
      swift_once();
    }
    os_unfair_lock_lock((os_unfair_lock_t)&dword_1EB94A1F0);
    if (qword_1EB97E3A0 != -1) {
      swift_once();
    }
    if (sub_1B677F4E4(v9, qword_1EB97E390))
    {
      os_unfair_lock_unlock((os_unfair_lock_t)&dword_1EB94A1F0);
      return;
    }
    sub_1B637E330(&v10, v9);
    os_unfair_lock_unlock((os_unfair_lock_t)&dword_1EB94A1F0);
  }
  *(void *)&v11[0] = v8;
  (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t))(*(void *)v4 + 88))(a1, v11, a2, a3);
}

uint64_t sub_1B6B33D00()
{
  sub_1B6B344C4();
  uint64_t result = sub_1B6E32428();
  qword_1EB997FF8 = result;
  return result;
}

uint64_t sub_1B6B33D68()
{
  uint64_t v0 = sub_1B6E32418();
  MEMORY[0x1F4188790](v0 - 8, v1);
  uint64_t v2 = sub_1B6E312C8();
  sub_1B6829964(v2, qword_1EB997E68);
  sub_1B6385660(v2, (uint64_t)qword_1EB997E68);
  sub_1B6E32408();
  return sub_1B6E312B8();
}

uint64_t sub_1B6B33E34(int a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  int v24 = a1;
  sub_1B62E17B4();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1B6E31098();
  uint64_t v12 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23, v13);
  long long v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a2;
  if (qword_1EB985528 != -1) {
    swift_once();
  }
  sub_1B6B34460(0, (unint64_t *)&qword_1EB9855A0, 255, (uint64_t (*)(uint64_t))sub_1B6816990, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B6E77050;
  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 64) = sub_1B678615C();
  *(void *)(v16 + 32) = a3;
  *(void *)(v16 + 40) = a4;
  swift_bridgeObjectRetain();
  char v17 = v24;
  sub_1B6E31258();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1B6E31088();
  uint64_t v18 = v8[12];
  uint64_t v19 = v8[16];
  uint64_t v20 = &v11[v8[20]];
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v11, v15, v23);
  v11[v18] = v17;
  *(void *)&v11[v19] = v22;
  *(void *)uint64_t v20 = a3;
  *((void *)v20 + 1) = a4;
  swift_bridgeObjectRetain();
  sub_1B6E31368();
  swift_release();
  return sub_1B67A3738((uint64_t)v11);
}

uint64_t sub_1B6B340B4(int a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *a2;
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v9 = v7;
  swift_retain();
  sub_1B6B33E34(a1, &v9, a3, a4);

  return swift_release();
}

uint64_t sub_1B6B34168(int a1)
{
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v2 = sub_1B6E31968();
  uint64_t v4 = v3;
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v6 = 0;
  swift_retain();
  sub_1B6B33E34(a1, &v6, v2, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

unint64_t sub_1B6B34278()
{
  unint64_t result = qword_1E9DD5E38;
  if (!qword_1E9DD5E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5E38);
  }
  return result;
}

unint64_t sub_1B6B342D0()
{
  unint64_t result = qword_1E9DD5E40;
  if (!qword_1E9DD5E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5E40);
  }
  return result;
}

unint64_t sub_1B6B34328()
{
  unint64_t result = qword_1E9DD5E48;
  if (!qword_1E9DD5E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5E48);
  }
  return result;
}

unint64_t sub_1B6B34380()
{
  unint64_t result = qword_1E9DD5E50;
  if (!qword_1E9DD5E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5E50);
  }
  return result;
}

ValueMetadata *type metadata accessor for LogOptions()
{
  return &type metadata for LogOptions;
}

uint64_t type metadata accessor for Logger()
{
  return self;
}

uint64_t type metadata accessor for ThreadLogger()
{
  return self;
}

void sub_1B6B3442C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1B6B34460(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1B6B344C4()
{
  unint64_t result = qword_1EB985250;
  if (!qword_1EB985250)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB985250);
  }
  return result;
}

uint64_t destroy for DoubleBufferAllocator()
{
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for DoubleBufferAllocator(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for DoubleBufferAllocator(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for DoubleBufferAllocator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for DoubleBufferAllocator(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DoubleBufferAllocator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DoubleBufferAllocator()
{
  return &type metadata for DoubleBufferAllocator;
}

void sub_1B6B34758()
{
}

void *sub_1B6B347A4(void *a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)a1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder, v2 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)(v2 + v3) = *(_OWORD *)((char *)a1 + OBJC_IVAR____TtC3VFX12ConstantNode_semantic);
  return sub_1B682A2AC(a1);
}

uint64_t sub_1B6B34820()
{
  return type metadata accessor for PredefinedConstantNode(0);
}

uint64_t type metadata accessor for PredefinedConstantNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5E58);
}

uint64_t sub_1B6B34848()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B6B34880()
{
  return 26960;
}

uint64_t sub_1B6B3488C@<X0>(unint64_t *a1@<X8>)
{
  return sub_1B6B349C8(a1, 3.1416);
}

void sub_1B6B348A4()
{
}

uint64_t sub_1B6B348E0()
{
  return type metadata accessor for PiNode(0);
}

uint64_t type metadata accessor for PiNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5E68);
}

uint64_t sub_1B6B34908()
{
  return 0x69506F7754;
}

uint64_t sub_1B6B3491C@<X0>(unint64_t *a1@<X8>)
{
  return sub_1B6B349C8(a1, 6.2832);
}

uint64_t sub_1B6B3492C()
{
  return type metadata accessor for TwoPiNode(0);
}

uint64_t type metadata accessor for TwoPiNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5E78);
}

uint64_t sub_1B6B34954()
{
  return 0x6950666C6148;
}

uint64_t sub_1B6B34968@<X0>(unint64_t *a1@<X8>)
{
  return sub_1B6B349C8(a1, 1.5708);
}

uint64_t sub_1B6B34978()
{
  return type metadata accessor for HalfPiNode(0);
}

uint64_t type metadata accessor for HalfPiNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5E88);
}

uint64_t sub_1B6B349A0()
{
  return 0x6E6F6C69737045;
}

uint64_t sub_1B6B349B8@<X0>(unint64_t *a1@<X8>)
{
  return sub_1B6B349C8(a1, 0.0000001);
}

uint64_t sub_1B6B349C8@<X0>(unint64_t *a1@<X8>, float a2@<S0>)
{
  v7[3] = MEMORY[0x1E4FBB470];
  *(float *)uint64_t v7 = a2;
  sub_1B62C14BC(v7, MEMORY[0x1E4FBB470]);
  uint64_t DynamicType = swift_getDynamicType();
  unint64_t v4 = sub_1B69B1CC4(DynamicType);
  if ((~v4 & 0xF000000000000007) != 0)
  {
    unint64_t v5 = v4;
    sub_1B62CAAD8((uint64_t)v7, (uint64_t)(a1 + 1));
    *a1 = v5;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6B34AE0()
{
  return type metadata accessor for EpsilonNode(0);
}

uint64_t type metadata accessor for EpsilonNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5E98);
}

uint64_t sub_1B6B34B08()
{
  return 0x797469746E656449;
}

uint64_t sub_1B6B34B28@<X0>(unint64_t *a1@<X8>)
{
  type metadata accessor for simd_float2x2(0);
  v7[3] = v2;
  v7[0] = 1065353216;
  v7[1] = 0x3F80000000000000;
  sub_1B62C14BC(v7, v2);
  uint64_t DynamicType = swift_getDynamicType();
  unint64_t v4 = sub_1B69B1CC4(DynamicType);
  if ((~v4 & 0xF000000000000007) != 0)
  {
    unint64_t v5 = v4;
    sub_1B62CAAD8((uint64_t)v7, (uint64_t)(a1 + 1));
    *a1 = v5;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6B34C54()
{
  return type metadata accessor for Identity2x2Node(0);
}

uint64_t type metadata accessor for Identity2x2Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5EA8);
}

uint64_t sub_1B6B34C7C()
{
  return 0x797469746E656449;
}

uint64_t sub_1B6B34C9C@<X0>(unint64_t *a1@<X8>)
{
  type metadata accessor for simd_float3x3(0);
  uint64_t v3 = v2;
  void v9[3] = v2;
  unint64_t v4 = (_OWORD *)swift_allocObject();
  v9[0] = v4;
  v4[1] = xmmword_1B6E4F300;
  v4[2] = xmmword_1B6E4F320;
  v4[3] = xmmword_1B6E4F2E0;
  sub_1B62C14BC(v9, v3);
  uint64_t DynamicType = swift_getDynamicType();
  unint64_t v6 = sub_1B69B1CC4(DynamicType);
  if ((~v6 & 0xF000000000000007) != 0)
  {
    unint64_t v7 = v6;
    sub_1B62CAAD8((uint64_t)v9, (uint64_t)(a1 + 1));
    *a1 = v7;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6B34DEC()
{
  return type metadata accessor for Identity3x3Node(0);
}

uint64_t type metadata accessor for Identity3x3Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5EB8);
}

uint64_t sub_1B6B34E14()
{
  return 0x797469746E656449;
}

uint64_t sub_1B6B34E34@<X0>(unint64_t *a1@<X8>)
{
  type metadata accessor for simd_float4x4(0);
  uint64_t v3 = v2;
  void v9[3] = v2;
  unint64_t v4 = (_OWORD *)swift_allocObject();
  v9[0] = v4;
  v4[1] = xmmword_1B6E4F300;
  v4[2] = xmmword_1B6E4F320;
  v4[3] = xmmword_1B6E4F2E0;
  v4[4] = xmmword_1B6E4F370;
  sub_1B62C14BC(v9, v3);
  uint64_t DynamicType = swift_getDynamicType();
  unint64_t v6 = sub_1B69B1CC4(DynamicType);
  if ((~v6 & 0xF000000000000007) != 0)
  {
    unint64_t v7 = v6;
    sub_1B62CAAD8((uint64_t)v9, (uint64_t)(a1 + 1));
    *a1 = v7;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6B34F8C()
{
  return type metadata accessor for Identity4x4Node(0);
}

uint64_t type metadata accessor for Identity4x4Node(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5EC8);
}

unint64_t sub_1B6B34FB4()
{
  return 0xD000000000000012;
}

uint64_t sub_1B6B34FD0@<X0>(unint64_t *a1@<X8>)
{
  type metadata accessor for simd_quatf(0);
  uint64_t v3 = v2;
  void v8[3] = v2;
  v8[0] = swift_allocObject();
  *(_OWORD *)(v8[0] + 16) = xmmword_1B6E4F370;
  sub_1B62C14BC(v8, v3);
  uint64_t DynamicType = swift_getDynamicType();
  unint64_t v5 = sub_1B69B1CC4(DynamicType);
  if ((~v5 & 0xF000000000000007) != 0)
  {
    unint64_t v6 = v5;
    sub_1B62CAAD8((uint64_t)v8, (uint64_t)(a1 + 1));
    *a1 = v6;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v8);
  }
  else
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

void *sub_1B6B3510C()
{
  uint64_t v1 = v0;
  (*(void (**)(void *__return_ptr))(*v0 + 312))(v4);
  uint64_t v2 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)v4, (uint64_t)v1 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v1 + v2) = xmmword_1B6E50D30;
  _OWORD v1[2] = MEMORY[0x1E4FBC860];
  v1[3] = 0;
  v1[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)v4);
  return v1;
}

uint64_t sub_1B6B351F0()
{
  swift_bridgeObjectRelease();
  sub_1B678FE58(*(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1B6650728(v0 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);

  return swift_deallocClassInstance();
}

uint64_t sub_1B6B352B8()
{
  return type metadata accessor for IdentityQuaternionNode(0);
}

uint64_t type metadata accessor for IdentityQuaternionNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD5ED8);
}

uint64_t sub_1B6B352E0()
{
  return MEMORY[0x1F4186498](v0, 32, 15);
}

uint64_t sub_1B6B352F0()
{
  return MEMORY[0x1F4186498](v0, 80, 15);
}

uint64_t sub_1B6B35300()
{
  return MEMORY[0x1F4186498](v0, 64, 15);
}

void sub_1B6B35310()
{
}

BOOL sub_1B6B353DC(char a1)
{
  return a1 == 2;
}

double sub_1B6B353EC(char a1)
{
  *(void *)&double result = 1065353216;
  switch(a1)
  {
    case 1:
      double result = 0.0078125;
      break;
    case 2:
      double result = 0.0;
      break;
    case 3:
      *(void *)&double result = 3212836864;
      break;
    case 4:
      double result = -0.0078125;
      break;
    case 5:
      double result = 0.0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6B3546C()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B6B354BC()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6B3551C()
{
  return sub_1B6E31B28();
}

void sub_1B6B3556C(void *a1@<X8>)
{
  *a1 = &unk_1F0FA9510;
}

uint64_t sub_1B6B3557C()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6B355DC()
{
  return sub_1B6E31B28();
}

void sub_1B6B3562C(void *a1@<X8>)
{
  *a1 = &unk_1F0F66DE8;
}

uint64_t sub_1B6B3563C()
{
  return sub_1B6E31B28();
}

void sub_1B6B3568C(void *a1@<X8>)
{
  *a1 = &unk_1F0F549F0;
}

uint64_t sub_1B6B3569C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B6B35F84(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6B356C8(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6E332D8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

uint64_t sub_1B6B3575C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B357C4()
{
  return sub_1B6B3575C();
}

uint64_t sub_1B6B357D0()
{
  return sub_1B6E33958();
}

uint64_t sub_1B6B35814()
{
  return sub_1B6E33988();
}

BOOL sub_1B6B35874(float *a1, float *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1];
}

uint64_t sub_1B6B358A0(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v3, v4);
  sub_1B6E332A8();
  if (!v1)
  {
    sub_1B62C550C((uint64_t)v3, v4);
    sub_1B6E33298();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v3);
}

uint64_t sub_1B6B359F8(void *a1)
{
  return sub_1B6B358A0(a1);
}

void sub_1B6B35A18(void *a1@<X8>)
{
  *a1 = &unk_1F0F669A8;
}

uint64_t sub_1B6B35A28()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6B35A88()
{
  return sub_1B6E31B28();
}

void sub_1B6B35AD8(void *a1@<X8>)
{
  *a1 = &unk_1F0F66B98;
}

uint64_t sub_1B6B35AE8()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6B35B48()
{
  return sub_1B6E31B28();
}

void sub_1B6B35B98(void *a1@<X8>)
{
  *a1 = &unk_1F0FA9330;
}

uint64_t sub_1B6B35BA8()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6B35C08()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B6B35C58@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B6B36054(*a1);
  *a2 = result;
  return result;
}

void sub_1B6B35C84(void *a1@<X8>)
{
  *a1 = &unk_1F0F70BC0;
}

uint64_t sub_1B6B35C94()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6B35CF4()
{
  return sub_1B6E31B28();
}

void sub_1B6B35D44(void *a1@<X8>)
{
  *a1 = &unk_1F0F6C048;
}

uint64_t sub_1B6B35D54()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6B35DB4()
{
  return sub_1B6E31B28();
}

void sub_1B6B35E04(void *a1@<X8>)
{
  *a1 = &unk_1F0F98908;
}

uint64_t sub_1B6B35E14()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6B35E74()
{
  return sub_1B6E31B28();
}

void sub_1B6B35EC4(void *a1@<X8>)
{
  *a1 = &unk_1F0F99720;
}

uint64_t sub_1B6B35ED4()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6B35F34()
{
  return sub_1B6E31B28();
}

uint64_t sub_1B6B35F84(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return 0;
  }
  else
  {
    sub_1B62C550C((uint64_t)v6, v7);
    unsigned __int8 v3 = sub_1B6E33148();
    if ((v3 & 0xFC) != 0) {
      uint64_t v4 = 0;
    }
    else {
      uint64_t v4 = v3;
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v6);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v4;
}

uint64_t sub_1B6B36054(uint64_t result)
{
  if (result >= 6u) {
    return 6;
  }
  else {
    return result;
  }
}

unint64_t sub_1B6B36068()
{
  unint64_t result = qword_1EB980030;
  if (!qword_1EB980030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980030);
  }
  return result;
}

unint64_t sub_1B6B360BC()
{
  unint64_t result = qword_1EB980020;
  if (!qword_1EB980020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980020);
  }
  return result;
}

unint64_t sub_1B6B36110()
{
  unint64_t result = qword_1E9DD5EE8;
  if (!qword_1E9DD5EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5EE8);
  }
  return result;
}

unint64_t sub_1B6B36164()
{
  unint64_t result = qword_1E9DD5EF0;
  if (!qword_1E9DD5EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5EF0);
  }
  return result;
}

unint64_t sub_1B6B361B8()
{
  unint64_t result = qword_1E9DD5EF8;
  if (!qword_1E9DD5EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5EF8);
  }
  return result;
}

unint64_t sub_1B6B3620C()
{
  unint64_t result = qword_1E9DD5F00;
  if (!qword_1E9DD5F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5F00);
  }
  return result;
}

unint64_t sub_1B6B36260()
{
  unint64_t result = qword_1E9DD5F08;
  if (!qword_1E9DD5F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5F08);
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetDataKind()
{
  return &type metadata for TargetDataKind;
}

ValueMetadata *type metadata accessor for SourceDataKind()
{
  return &type metadata for SourceDataKind;
}

unsigned char *storeEnumTagSinglePayload for FlockingLocalAxis(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B363ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlockingLocalAxis()
{
  return &type metadata for FlockingLocalAxis;
}

ValueMetadata *type metadata accessor for FlockingSizeMode()
{
  return &type metadata for FlockingSizeMode;
}

unsigned char *_s3VFX11CompositionV9OperationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B364C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Composition.Operation()
{
  return &type metadata for Composition.Operation;
}

uint64_t getEnumTagSinglePayload for Composition(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && a1[8]) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Composition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Composition()
{
  return &type metadata for Composition;
}

ValueMetadata *type metadata accessor for ScaleMode()
{
  return &type metadata for ScaleMode;
}

unsigned char *_s3VFX9NoiseKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B3666CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoiseKind()
{
  return &type metadata for NoiseKind;
}

unsigned char *storeEnumTagSinglePayload for TextureChannel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B36770);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextureChannel()
{
  return &type metadata for TextureChannel;
}

unsigned char *storeEnumTagSinglePayload for FluidSolver2DSolverBorderType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B36874);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FluidSolver2DSolverBorderType()
{
  return &type metadata for FluidSolver2DSolverBorderType;
}

unsigned char *_s3VFX28FluidSolver2DSolverSetupTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B36978);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FluidSolver2DSolverSetupType()
{
  return &type metadata for FluidSolver2DSolverSetupType;
}

uint64_t sub_1B6B369B0()
{
  return sub_1B699C708(&qword_1E9DD5F10, &qword_1E9DD5F18);
}

unint64_t sub_1B6B369E4()
{
  unint64_t result = qword_1E9DD5F20;
  if (!qword_1E9DD5F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5F20);
  }
  return result;
}

uint64_t sub_1B6B36A38()
{
  return sub_1B699C708(&qword_1E9DD5F28, &qword_1E9DD5F30);
}

unint64_t sub_1B6B36A6C()
{
  unint64_t result = qword_1E9DD5F38;
  if (!qword_1E9DD5F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5F38);
  }
  return result;
}

uint64_t sub_1B6B36AC0()
{
  return sub_1B699C708(&qword_1E9DD5F40, &qword_1E9DD5F48);
}

unint64_t sub_1B6B36AF4()
{
  unint64_t result = qword_1E9DD5F50;
  if (!qword_1E9DD5F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5F50);
  }
  return result;
}

uint64_t sub_1B6B36B48()
{
  return sub_1B699C708(&qword_1E9DD5F58, &qword_1E9DD5F60);
}

unint64_t sub_1B6B36B7C()
{
  unint64_t result = qword_1E9DD5F68;
  if (!qword_1E9DD5F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5F68);
  }
  return result;
}

uint64_t sub_1B6B36BD0()
{
  return sub_1B699C708(&qword_1E9DD5F70, &qword_1E9DD5F78);
}

unint64_t sub_1B6B36C04()
{
  unint64_t result = qword_1E9DD5F80;
  if (!qword_1E9DD5F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5F80);
  }
  return result;
}

unint64_t sub_1B6B36C5C()
{
  unint64_t result = qword_1E9DD5F88;
  if (!qword_1E9DD5F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5F88);
  }
  return result;
}

uint64_t sub_1B6B36CB0()
{
  return sub_1B699C708(&qword_1E9DD5F90, &qword_1E9DD5F98);
}

unint64_t sub_1B6B36CE4()
{
  unint64_t result = qword_1E9DD5FA0;
  if (!qword_1E9DD5FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5FA0);
  }
  return result;
}

uint64_t sub_1B6B36D38()
{
  return sub_1B699C708(&qword_1E9DD5FA8, &qword_1E9DD5FB0);
}

unint64_t sub_1B6B36D6C()
{
  unint64_t result = qword_1E9DD5FB8;
  if (!qword_1E9DD5FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5FB8);
  }
  return result;
}

uint64_t sub_1B6B36DC0()
{
  return sub_1B699C708(&qword_1E9DD5FC0, &qword_1E9DD5FC8);
}

unint64_t sub_1B6B36DF4()
{
  unint64_t result = qword_1E9DD5FD0;
  if (!qword_1E9DD5FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5FD0);
  }
  return result;
}

uint64_t sub_1B6B36E48()
{
  return sub_1B699C708(&qword_1E9DD5FD8, &qword_1E9DD5FE0);
}

unint64_t sub_1B6B36E7C()
{
  unint64_t result = qword_1E9DD5FE8;
  if (!qword_1E9DD5FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5FE8);
  }
  return result;
}

uint64_t sub_1B6B36ED0()
{
  return sub_1B699C708(&qword_1E9DD5FF0, &qword_1E9DD5FF8);
}

unint64_t sub_1B6B36F04()
{
  unint64_t result = qword_1E9DD6000;
  if (!qword_1E9DD6000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6000);
  }
  return result;
}

unint64_t sub_1B6B36F58()
{
  unint64_t result = qword_1E9DD6008;
  if (!qword_1E9DD6008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6008);
  }
  return result;
}

unint64_t sub_1B6B36FAC()
{
  unint64_t result = qword_1E9DD6010;
  if (!qword_1E9DD6010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6010);
  }
  return result;
}

uint64_t sub_1B6B37010()
{
  uint64_t v0 = sub_1B6E33AB8();
  uint64_t v2 = v1;
  if (v0 == sub_1B6E33AB8() && v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1B6B370C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

void *sub_1B6B37138(void *a1)
{
  uint64_t v3 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (!v1)
  {
    sub_1B62C14BC(v5, v5[3]);
    sub_1B6E31D18();
    swift_getWitnessTable();
    sub_1B6E33518();
    uint64_t v3 = (void *)v5[6];
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1B6B37250(void *a1, uint64_t a2)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  uint64_t v6 = a2;
  sub_1B62C550C((uint64_t)v4, v5);
  sub_1B6E31D18();
  swift_getWitnessTable();
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

void *sub_1B6B37334@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_1B6B37138(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6B37368(void *a1)
{
  return sub_1B6B37250(a1, *v1);
}

uint64_t sub_1B6B37390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v25[1] = a1;
  void v25[2] = a2;
  uint64_t v26 = a4;
  uint64_t v5 = sub_1B6E324B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  unint64_t v9 = (char *)v25 - v8;
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for _KeyBox();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v19 = (char *)v25 - v18;
  sub_1B6E33AC8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v20 = 1;
    uint64_t v21 = v26;
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v22(v14, v9, a3);
    v22(v19, v14, a3);
    uint64_t v23 = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v26, v19, v15);
    uint64_t v20 = 0;
    uint64_t v21 = v23;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v21, v20, 1, v15);
}

uint64_t sub_1B6B3761C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v25 = a3;
  uint64_t v4 = sub_1B6E324B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for _KeyBox();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v18 = (char *)&v24 - v17;
  sub_1B6E33AE8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t v19 = 1;
    uint64_t v20 = v25;
  }
  else
  {
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v21(v13, v8, a2);
    v21(v18, v13, a2);
    uint64_t v22 = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v25, v18, v14);
    uint64_t v19 = 0;
    uint64_t v20 = v22;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v20, v19, 1, v14);
}

uint64_t sub_1B6B378A0()
{
  return sub_1B6E33AB8();
}

uint64_t sub_1B6B378AC()
{
  return sub_1B6E33AD8();
}

uint64_t sub_1B6B378D0()
{
  return sub_1B6B37010() & 1;
}

uint64_t sub_1B6B378EC()
{
  sub_1B6E33AB8();
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B37940()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B3798C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1B6B37390(a1, a2, *(void *)(a3 + 16), a4);
}

uint64_t sub_1B6B37998()
{
  return sub_1B6B378AC();
}

uint64_t sub_1B6B379B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B6B3761C(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1B6B379C8()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B37A0C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B6B37A60(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B6B37AB4()
{
  return sub_1B6B378D0();
}

uint64_t sub_1B6B37AC0@<X0>(char *a1@<X0>, _DWORD *a2@<X8>)
{
  int v4 = strlen(a1);
  uint64_t result = MurmurHash2((unsigned __int8 *)a1, v4, 0);
  *a2 = result;
  return result;
}

uint64_t sub_1B6B37B0C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_1B6B37B20()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1B6B37B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6E33098();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = a1;
  *(unsigned char *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_1B6B37B88()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1B6E33918();
  sub_1B6E318B8();
  sub_1B6E33938();
  if (v1 != 1) {
    sub_1B6E33928();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B6B37C14()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1B6E318B8();
  if (v1 == 1) {
    return sub_1B6E33938();
  }
  sub_1B6E33938();
  return sub_1B6E33928();
}

uint64_t sub_1B6B37C78()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1B6E33918();
  sub_1B6E318B8();
  sub_1B6E33938();
  if (v1 != 1) {
    sub_1B6E33928();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B6B37D00(uint64_t a1)
{
  unint64_t v2 = sub_1B62B0BEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B37D3C(uint64_t a1)
{
  unint64_t v2 = sub_1B62B0BEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6B37D78(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1B6E334B8();
  }
}

unint64_t sub_1B6B37DA8(uint64_t a1)
{
  unint64_t result = sub_1B6B37DD0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B6B37DD0()
{
  unint64_t result = qword_1EB9800B0;
  if (!qword_1EB9800B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9800B0);
  }
  return result;
}

double sub_1B6B37E28@<D0>(double *a1@<X0>, void *a2@<X8>)
{
  double result = *a1;
  *a2 = *(void *)a1;
  return result;
}

unint64_t sub_1B6B37E34(uint64_t a1)
{
  unint64_t result = sub_1B6B37E5C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B6B37E5C()
{
  unint64_t result = qword_1E9DD6018;
  if (!qword_1E9DD6018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6018);
  }
  return result;
}

uint64_t type metadata accessor for BinaryCodingTypeRegistry()
{
  return self;
}

uint64_t initializeWithCopy for _BinaryKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for _BinaryKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for _BinaryKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for _BinaryKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _BinaryKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _BinaryKey()
{
  return &type metadata for _BinaryKey;
}

unint64_t sub_1B6B3805C()
{
  unint64_t result = qword_1E9DD6020;
  if (!qword_1E9DD6020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6020);
  }
  return result;
}

unint64_t sub_1B6B380B4()
{
  unint64_t result = qword_1EB97DA90;
  if (!qword_1EB97DA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DA90);
  }
  return result;
}

unint64_t sub_1B6B3810C()
{
  unint64_t result = qword_1EB97DA88;
  if (!qword_1EB97DA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DA88);
  }
  return result;
}

uint64_t sub_1B6B38164(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 < 2 || a3 == 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for BinaryCoding.Err(uint64_t a1)
{
  return sub_1B6B3819C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1B6B3819C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 < 2 || a3 == 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s3VFX12BinaryCodingO3ErrOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B6B38164(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for BinaryCoding.Err(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B6B38164(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B6B3819C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for BinaryCoding.Err(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B6B3819C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BinaryCoding.Err(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BinaryCoding.Err(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B6B3833C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_1B6B38354(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(void *)uint64_t result = a2 - 6;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BinaryCoding.Err()
{
  return &type metadata for BinaryCoding.Err;
}

uint64_t type metadata accessor for ParallelCoder()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6B38394(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1B6B384F0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1B6B38708);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_1B6B38730()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6B3874C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6B38768()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6B38784()
{
  return 0x7961727241;
}

uint64_t sub_1B6B38798@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = OBJC_IVAR____TtC3VFX9ArrayNode_count;
  uint64_t v5 = sub_1B6640874(v3 | 0x4000000000000000, *(void *)(v1 + OBJC_IVAR____TtC3VFX9ArrayNode_count));
  sub_1B6B39830(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = *(void *)(v1 + v4);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(v7 + 24) = result | 0x4000000000000000;
  *(void *)(v6 + 32) = v7;
  *a1 = v5;
  a1[1] = v6;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0FA7E88;
  a1[3] = v9;
  a1[4] = v9;
  a1[5] = v9;
  return result;
}

void *sub_1B6B388A8(uint64_t a1)
{
  unint64_t v2 = (void *)swift_allocObject();
  *(void *)((char *)v2 + OBJC_IVAR____TtC3VFX9ArrayNode_count) = *(void *)(a1 + OBJC_IVAR____TtC3VFX9ArrayNode_count);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  v2[3] = 0;
  _DWORD v2[4] = 0;
  v2[2] = v3;
  sub_1B6E31108();
  swift_release();
  return v2;
}

void sub_1B6B3891C()
{
}

uint64_t sub_1B6B3894C()
{
  return type metadata accessor for ArrayNode(0);
}

uint64_t type metadata accessor for ArrayNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6028);
}

uint64_t sub_1B6B38974()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B6B389BC(void *a1)
{
  return sub_1B6C0C6E4();
}

uint64_t sub_1B6B38A34(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  uint64_t result = sub_1B6C0C780();
  if (!v2) {
    *(void *)(v1 + OBJC_IVAR____TtC3VFX9ArrayNode_count) = v4;
  }
  return result;
}

uint64_t sub_1B6B38AB8()
{
  return 0x7961727241746547;
}

uint64_t sub_1B6B38AD8@<X0>(uint64_t *a1@<X8>)
{
  sub_1B6B39830(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v3 + 16) = v4 | 0x4000000000000000;
  *(void *)(v2 + 32) = v3 | 0x2000000000000000;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000030;
  *(void *)(v5 + 32) = result | 0x6000000000000000;
  *a1 = v2;
  a1[1] = v5;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0F6C320;
  a1[3] = v7;
  a1[4] = v7;
  a1[5] = v7;
  return result;
}

uint64_t sub_1B6B38BF8()
{
  return type metadata accessor for GetArraySizeNode(0);
}

uint64_t type metadata accessor for GetArraySizeNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6038);
}

uint64_t sub_1B6B38C20()
{
  return 0x7961727241746547;
}

uint64_t sub_1B6B38C44@<X0>(uint64_t *a1@<X8>)
{
  sub_1B6B39830(0, (unint64_t *)&qword_1E9DD1D50, (uint64_t)&type metadata for TypeConstraint, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E76B30;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v3 + 16) = v4 | 0x4000000000000000;
  *(void *)(v2 + 32) = v3 | 0x2000000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0x8000000000000030;
  *(void *)(v2 + 40) = v5 | 0x6000000000000000;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E77050;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(v6 + 32) = result | 0x4000000000000000;
  *a1 = v2;
  a1[1] = v6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a1[2] = (uint64_t)&unk_1F0F7C908;
  a1[3] = v8;
  a1[4] = v8;
  a1[5] = v8;
  return result;
}

uint64_t sub_1B6B38D84()
{
  return type metadata accessor for GetArrayElementNode(0);
}

uint64_t type metadata accessor for GetArrayElementNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD6048);
}

uint64_t sub_1B6B38DAC(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(*(void *)(a1 + 24) + 32);
  sub_1B68289A0(*(void *)(a1 + 24));
  sub_1B67C52A4(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B69B04D4(v3, v4);
  sub_1B678FC34(v4);
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6B39830(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  *(void *)(v5 + 32) = 0xD00000000000001CLL;
  unint64_t v6 = v5 + 32;
  *(void *)(v5 + 48) = 0;
  *(void *)(v5 + 56) = 0;
  *(void *)(v5 + 40) = 0x80000001B6F4A230;
  uint64_t v7 = swift_retain();
  sub_1B6D49420(v7);
  swift_release();
  uint64_t v8 = sub_1B67B79C8(4);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B6E77050;
  *(void *)(v11 + 32) = v8;
  *(void *)(v11 + 40) = v10;
  sub_1B67C5060();
  *(void *)(v11 + 48) = 0;
  *(void *)(v11 + 56) = 0;
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = v5;
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 40) = v11;
  *(void *)(inited + 48) = &unk_1F0FA7E40;
  uint64_t v13 = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unsigned int v14 = sub_1B68C3500(0, v13, 1, MEMORY[0x1E4FBC860]);
  int v15 = v14;
  if (*(void *)(v5 + 16))
  {
    unint64_t v16 = (unint64_t)&v14[4 * v14[2] + 4];
    if (v6 < v16 + 32 * v13 && v16 < v6 + 32 * v13) {
      goto LABEL_29;
    }
    swift_arrayInitWithCopy();
    if (v13) {
      v15[2] += v13;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(inited + 40);
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = v15[2];
  unint64_t v20 = v15[3];
  swift_bridgeObjectRetain();
  if (v19 + v18 > (uint64_t)(v20 >> 1))
  {
    if (v19 <= v19 + v18) {
      uint64_t v28 = v19 + v18;
    }
    else {
      uint64_t v28 = v19;
    }
    int v15 = sub_1B68C3500(1, v28, 1, v15);
    if (!*(void *)(v17 + 16)) {
      goto LABEL_12;
    }
  }
  else if (!v18)
  {
    goto LABEL_12;
  }
  unint64_t v21 = (unint64_t)&v15[4 * v15[2] + 4];
  if (v17 + 32 < v21 + 32 * v18 && v21 < v17 + 32 + 32 * v18) {
    goto LABEL_29;
  }
  swift_arrayInitWithCopy();
  if (v18) {
    v15[2] += v18;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(inited + 48);
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v24 = v15[2];
  unint64_t v25 = v15[3];
  swift_bridgeObjectRetain();
  if (v24 + v23 > (uint64_t)(v25 >> 1))
  {
    if (v24 <= v24 + v23) {
      uint64_t v29 = v24 + v23;
    }
    else {
      uint64_t v29 = v24;
    }
    int v15 = sub_1B68C3500(1, v29, 1, v15);
    if (!*(void *)(v22 + 16)) {
      goto LABEL_18;
    }
  }
  else if (!v23)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1B6B39830(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
    return (uint64_t)v15;
  }
  unint64_t v26 = (unint64_t)&v15[4 * v15[2] + 4];
  if (v22 + 32 >= v26 + 32 * v23 || v26 >= v22 + 32 + 32 * v23)
  {
    swift_arrayInitWithCopy();
    if (v23) {
      v15[2] += v23;
    }
    goto LABEL_18;
  }
LABEL_29:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6B39244(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    char v3 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6B39830(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1B6E77050;
      *(void *)(v4 + 32) = 37;
      unint64_t v5 = v4 + 32;
      *(void *)(v4 + 40) = 0xE100000000000000;
      sub_1B67C5060();
      *(void *)(v4 + 48) = 0;
      *(void *)(v4 + 56) = 0;
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
      *(void *)(inited + 32) = v4;
      uint64_t v7 = *(void *)(v4 + 16);
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1B68C3500(0, v7, 1, MEMORY[0x1E4FBC860]);
      uint64_t v9 = v8;
      if (*(void *)(v4 + 16))
      {
        unint64_t v10 = (unint64_t)&v8[4 * v8[2] + 4];
        if (v5 < v10 + 32 * v7 && v10 < v5 + 32 * v7)
        {
          swift_release();
          goto LABEL_45;
        }
        swift_arrayInitWithCopy();
        if (v7) {
          v9[2] += v7;
        }
      }
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1B6B39830(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
      swift_arrayDestroy();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v3 = sub_1B68C3618(0, v3[2] + 1, 1, v3);
      }
      unint64_t v13 = v3[2];
      unint64_t v12 = v3[3];
      unint64_t v14 = v13 + 1;
      if (v13 >= v12 >> 1) {
        char v3 = sub_1B68C3618(v12 > 1, v13 + 1, 1, v3);
      }
      ++v2;
      v3[2] = v14;
      v3[v13 + 4] = v9;
    }
    while (v1 != v2);
  }
  else
  {
    char v3 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    int v15 = (void *)MEMORY[0x1E4FBC860];
    if (!v14) {
      goto LABEL_36;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  int v15 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v17 = v3[v16 + 4];
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = v15[2];
    uint64_t v20 = v19 + v18;
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v20 <= v15[3] >> 1)
    {
      if (!*(void *)(v17 + 16)) {
        goto LABEL_19;
      }
    }
    else
    {
      if (v19 <= v20) {
        uint64_t v22 = v19 + v18;
      }
      else {
        uint64_t v22 = v19;
      }
      int v15 = sub_1B68C3500(isUniquelyReferenced_nonNull_native, v22, 1, v15);
      if (!*(void *)(v17 + 16)) {
        goto LABEL_19;
      }
    }
    unint64_t v23 = (unint64_t)&v15[4 * v15[2] + 4];
    if (v17 + 32 < v23 + 32 * v18 && v23 < v17 + 32 + 32 * v18) {
      goto LABEL_45;
    }
    swift_arrayInitWithCopy();
    if (v18) {
      v15[2] += v18;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    ++v16;
  }
  while (v14 != v16);
  swift_bridgeObjectRelease();
LABEL_36:
  swift_bridgeObjectRelease();
  sub_1B67C5060();
  uint64_t v25 = swift_initStackObject();
  *(_OWORD *)(v25 + 16) = xmmword_1B6E77050;
  *(void *)(v25 + 32) = v15;
  uint64_t v26 = v15[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B68C3500(0, v26, 1, MEMORY[0x1E4FBC860]);
  uint64_t v28 = v27;
  if (!v15[2]) {
    goto LABEL_44;
  }
  unint64_t v29 = (unint64_t)&v27[4 * v27[2] + 4];
  if ((unint64_t)(v15 + 4) >= v29 + 32 * v26 || v29 >= (unint64_t)&v15[4 * v26 + 4])
  {
    swift_arrayInitWithCopy();
    if (v26) {
      v28[2] += v26;
    }
LABEL_44:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1B6B39830(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
    return (uint64_t)v28;
  }
LABEL_45:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6B396F8(char a1)
{
  char v1 = a1 & 1;
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_1B6D49540(v2, v1);
  swift_release();
  return v3;
}

uint64_t sub_1B6B39748()
{
  return 0x28657A69732E3025;
}

unint64_t sub_1B6B39768()
{
  return 0xD00000000000001ALL;
}

void sub_1B6B39830(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B6B3987C()
{
  sub_1B6645740(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6B398B4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6B398C4()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6B398FC()
{
  sub_1B6645740(*(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6B39934(uint64_t a1)
{
  unint64_t v2 = sub_1B6B39D34();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B39970(uint64_t a1)
{
  unint64_t v2 = sub_1B6B39D34();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6B399AC(void *a1)
{
  sub_1B6B39CD8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6B39D34();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B6B39AB8()
{
  return type metadata accessor for ParticleSetID.System();
}

double sub_1B6B39AD8()
{
  sub_1B62D2B64();
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 32) = &type metadata for ParticleID;
  *(void *)(v0 + 40) = &off_1F0F532A8;
  return result;
}

uint64_t sub_1B6B39B20(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 64);
  long long v16 = *(_OWORD *)(a1 + 48);
  long long v17 = v3;
  uint64_t v18 = *(void *)(a1 + 80);
  sub_1B62E3324((uint64_t)&v10);
  sub_1B62F648C(a1);
  int v4 = v11;
  char v5 = v12;
  char v6 = v14;
  uint64_t v7 = v15;
  uint64_t v8 = v13 | 0x10;
  *(void *)(v2 + 16) = v10;
  *(_DWORD *)(v2 + 24) = v4;
  *(unsigned char *)(v2 + 28) = v5;
  *(void *)(v2 + 32) = v8;
  *(unsigned char *)(v2 + 40) = v6;
  *(void *)(v2 + 48) = v7;
  return v2;
}

uint64_t type metadata accessor for ParticleSetID.GPUSystem()
{
  return self;
}

uint64_t sub_1B6B39BE4(void *a1)
{
  char v2 = *a1 == 0;
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[6];
  swift_retain();
  sub_1B6786A24((uint64_t)a1);
  sub_1B6BFF388(v4, v3, v2, 0, (uint64_t)a1, 0x656C636974726170, 0xEF64695F7465735FLL, 0);
  sub_1B6786A7C((uint64_t)a1);

  return swift_release();
}

const char *sub_1B6B39C94()
{
  return "ParticleSetID.GPU";
}

uint64_t sub_1B6B39CA8()
{
  return type metadata accessor for ParticleSetID.GPUSystem();
}

ValueMetadata *type metadata accessor for ParticleSetID()
{
  return &type metadata for ParticleSetID;
}

void sub_1B6B39CD8()
{
  if (!qword_1E9DD6058)
  {
    sub_1B6B39D34();
    unint64_t v0 = sub_1B6E33038();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD6058);
    }
  }
}

unint64_t sub_1B6B39D34()
{
  unint64_t result = qword_1E9DD6060;
  if (!qword_1E9DD6060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6060);
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSetID.CodingKeys()
{
  return &type metadata for ParticleSetID.CodingKeys;
}

unint64_t sub_1B6B39D9C()
{
  unint64_t result = qword_1E9DD6068;
  if (!qword_1E9DD6068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6068);
  }
  return result;
}

unint64_t sub_1B6B39DF4()
{
  unint64_t result = qword_1E9DD6070;
  if (!qword_1E9DD6070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6070);
  }
  return result;
}

uint64_t sub_1B6B39E48(uint64_t a1)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v2 = sub_1B636E9A8((uint64_t)&type metadata for FrameConstantsStorage);
  if (v4)
  {
    uint64_t v6 = *(void *)(a1 + 16) + v2;
    uint64_t v7 = 32 * v3;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + 32 * v3 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v5 = *(void *)(v6 + 24);
    uint64_t v8 = *(os_unfair_lock_s **)(*(void *)(a1 + 32) + v7 + 24);
    swift_unknownObjectRetain();
    os_unfair_lock_unlock(v8);
  }
  else
  {
    os_unfair_recursive_lock_unlock();
    return 1;
  }
  return v5;
}

void sub_1B6B39F10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v4 = sub_1B636E9A8((uint64_t)&type metadata for SceneWorldAABB);
  char v7 = v6;
  if (v6)
  {
    char v12 = (uint64_t *)(*(void *)(a1 + 16) + v4);
    uint64_t v13 = 32 * v5;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + 32 * v5 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v8 = *v12;
    uint64_t v9 = v12[1];
    uint64_t v10 = v12[2];
    uint64_t v11 = v12[3];
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + v13 + 24));
  }
  else
  {
    os_unfair_recursive_lock_unlock();
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v11;
  *(unsigned char *)(a2 + 32) = (v7 & 1) == 0;
}

uint64_t sub_1B6B39FF4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_slowAlloc();
  *uint64_t v3 = 0;
  *(void *)(v1 + 128) = "SceneComponentStorage";
  *(void *)(v1 + 136) = 21;
  *(unsigned char *)(v1 + 144) = 2;
  *(void *)(v1 + 152) = v3;
  uint64_t v4 = sub_1B68ACDF0(a1);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1B62CF0F0(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_slowAlloc();
  *(void *)(v1 + 16) = v6;
  *(void *)(v1 + 24) = v6 + v5 + 512;
  uint64_t v7 = 0;
  *(void *)(v1 + 32) = swift_slowAlloc();
  *(void *)(v1 + 40) = 64;
  do
  {
    uint64_t v8 = *(void *)(v1 + 32) + v7;
    uint64_t v9 = (_DWORD *)swift_slowAlloc();
    *uint64_t v9 = 0;
    *(void *)uint64_t v8 = "SceneComponent lock";
    *(void *)(v8 + 8) = 19;
    *(unsigned char *)(v8 + 16) = 2;
    v7 += 32;
    *(void *)(v8 + 24) = v9;
  }
  while (v7 != 2048);
  sub_1B62CEB80(MEMORY[0x1E4FBC860], 0, 256, 0, (uint64_t)&v14);
  uint64_t v10 = v15;
  uint64_t v11 = v18;
  char v12 = v19;
  *(_OWORD *)(v1 + 48) = v14;
  *(void *)(v1 + 64) = v10;
  *(_OWORD *)(v1 + 72) = v16;
  *(_OWORD *)(v1 + 88) = v17;
  *(void *)(v1 + 104) = v11;
  *(unsigned char *)(v1 + 112) = v12;
  *(void *)(v1 + 120) = 0;
  return v1;
}

uint64_t sub_1B6B3A14C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[6];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v0[2];
    uint64_t v5 = v2 + 32;
    swift_retain();
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = (uint64_t *)(v5 + 40 * v6);
      uint64_t v8 = *v7;
      uint64_t v9 = v7[3];
      uint64_t result = swift_conformsToProtocol2();
      if (!result) {
        break;
      }
      uint64_t v11 = result;
      os_unfair_recursive_lock_lock_with_options();
      uint64_t v12 = v1[6];
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        unint64_t v14 = 0;
        uint64_t v15 = v4 + v9;
        long long v16 = (void *)(v12 + 32);
        while (*v16 != v8)
        {
          ++v14;
          v16 += 5;
          if (v13 == v14) {
            goto LABEL_3;
          }
        }
        unint64_t v17 = v14 - 65;
        if (v14 >= 0x40) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = 1 << v14;
        }
        if (v17 < 0xFFFFFFFFFFFFFF7FLL) {
          uint64_t v18 = 0;
        }
        uint64_t v19 = v1[15] & v18;
        os_unfair_recursive_lock_unlock();
        if (v19) {
          sub_1B6B3F37C(v15, 1, v8, v11);
        }
      }
      else
      {
LABEL_3:
        os_unfair_recursive_lock_unlock();
      }
      if (++v6 == v3)
      {
        swift_release();
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    uint64_t v20 = v1[5];
    if (v20)
    {
      uint64_t v21 = 24;
      do
      {
        MEMORY[0x1BA9B84C0](*(void *)(v1[4] + v21), -1, -1);
        v21 += 32;
        --v20;
      }
      while (v20);
    }
    MEMORY[0x1BA9B84C0](v1[19], -1, -1);
    uint64_t v22 = v1[2];
    if (v22) {
      MEMORY[0x1BA9B84C0](v22, -1, -1);
    }
    uint64_t v23 = v1[4];
    if (v23) {
      MEMORY[0x1BA9B84C0](v23, -1, -1);
    }
    swift_release();
    swift_release();
    swift_release();
    return (uint64_t)v1;
  }
  return result;
}

uint64_t sub_1B6B3A320()
{
  sub_1B6B3A14C();

  return swift_deallocClassInstance();
}

void sub_1B6B3A354(uint64_t a1, uint64_t a2, void *a3)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v6 = sub_1B636E9A8(a1);
  if (v7 != 2)
  {
    unint64_t v10 = v8;
    if (v7)
    {
LABEL_11:
      os_unfair_lock_lock(*(os_unfair_lock_t *)(a3[4] + 32 * v10 + 24));
      os_unfair_recursive_lock_unlock();
      sub_1B6AAFEA0(5);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3[4] + 32 * v10 + 24));
      return;
    }
    uint64_t v11 = a3[2] + v6;
    uint64_t v9 = a1;
LABEL_6:
    sub_1B636E480(v11, 1, v9);
    uint64_t v12 = 1 << v10;
    if (v10 >= 0x40) {
      uint64_t v12 = 0;
    }
    if (v10 > 0x40) {
      uint64_t v12 = 0;
    }
    a3[15] |= v12;
    goto LABEL_11;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v13);
  if (v16 + v15 <= 4096)
  {
    unint64_t v10 = v13;
    uint64_t v9 = v14;
    uint64_t v11 = a3[2] + v16;
    goto LABEL_6;
  }
  unint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v17 = 4096;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B6B3A580(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t))
{
  return sub_1B6B3A85C(a1, a2, a3, a4);
}

uint64_t sub_1B6B3A598(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t))
{
  void (*v27)(void *__return_ptr, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  os_unfair_recursive_lock_lock_with_options();
  uint64_t v9 = sub_1B636E9A8(a1);
  if (v10 == 2)
  {
    sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v27);
    if (v30 + v29 > 4096)
    {
      uint64_t v27 = 0;
      uint64_t v28 = 0xE000000000000000;
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E33B48();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v31 = 4096;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    }
    unint64_t v12 = (unint64_t)v27;
    uint64_t v13 = *(void *)(a3 + 16) + v30;
    sub_1B636E480(v13, 1, v28);
    uint64_t v14 = 1 << v12;
    if (v12 >= 0x40) {
      uint64_t v14 = 0;
    }
    uint64_t v17 = *(void *)(a3 + 32);
    uint64_t v16 = (void *)(a3 + 32);
    uint64_t v15 = v17;
    if (v12 > 0x40) {
      uint64_t v14 = 0;
    }
    v16[11] |= v14;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 32 * v12 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v18 = v13;
  }
  else
  {
    unint64_t v12 = v11;
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = v19 + v9;
    if (v10)
    {
      uint64_t v25 = *(void *)(a3 + 32);
      uint64_t v16 = (void *)(a3 + 32);
      uint64_t v24 = v25 + 32 * v11;
    }
    else
    {
      sub_1B636E480(v19 + v9, 1, a1);
      uint64_t v21 = 1 << v12;
      if (v12 >= 0x40) {
        uint64_t v21 = 0;
      }
      uint64_t v23 = *(void *)(a3 + 32);
      uint64_t v16 = (void *)(a3 + 32);
      uint64_t v22 = v23;
      if (v12 > 0x40) {
        uint64_t v21 = 0;
      }
      v16[11] |= v21;
      uint64_t v24 = v22 + 32 * v12;
    }
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v18 = v20;
  }
  a4(&v27, v18);
  if (!v4) {
    a4 = v27;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*v16 + 32 * v12 + 24));
  return (uint64_t)a4;
}

uint64_t sub_1B6B3A85C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t))
{
  void (*v27)(void *__return_ptr, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  os_unfair_recursive_lock_lock_with_options();
  uint64_t v9 = sub_1B636E9A8(a1);
  if (v10 == 2)
  {
    sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v27);
    if (v30 + v29 > 4096)
    {
      uint64_t v27 = 0;
      uint64_t v28 = 0xE000000000000000;
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E33B48();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v31 = 4096;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    }
    unint64_t v12 = (unint64_t)v27;
    uint64_t v13 = *(void *)(a3 + 16) + v30;
    sub_1B636E480(v13, 1, v28);
    uint64_t v14 = 1 << v12;
    if (v12 >= 0x40) {
      uint64_t v14 = 0;
    }
    uint64_t v17 = *(void *)(a3 + 32);
    uint64_t v16 = (void *)(a3 + 32);
    uint64_t v15 = v17;
    if (v12 > 0x40) {
      uint64_t v14 = 0;
    }
    v16[11] |= v14;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 32 * v12 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v18 = v13;
  }
  else
  {
    unint64_t v12 = v11;
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = v19 + v9;
    if (v10)
    {
      uint64_t v25 = *(void *)(a3 + 32);
      uint64_t v16 = (void *)(a3 + 32);
      uint64_t v24 = v25 + 32 * v11;
    }
    else
    {
      sub_1B636E480(v19 + v9, 1, a1);
      uint64_t v21 = 1 << v12;
      if (v12 >= 0x40) {
        uint64_t v21 = 0;
      }
      uint64_t v23 = *(void *)(a3 + 32);
      uint64_t v16 = (void *)(a3 + 32);
      uint64_t v22 = v23;
      if (v12 > 0x40) {
        uint64_t v21 = 0;
      }
      v16[11] |= v21;
      uint64_t v24 = v22 + 32 * v12;
    }
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v18 = v20;
  }
  a4(&v27, v18);
  if (!v4) {
    a4 = v27;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*v16 + 32 * v12 + 24));
  return (uint64_t)a4;
}

uint64_t sub_1B6B3AB14(uint64_t a1, uint64_t a2, void *a3)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v6 = sub_1B636E9A8(a1);
  if (v7 != 2)
  {
    unint64_t v10 = v8;
    uint64_t v13 = a3[2];
    uint64_t v11 = v13 + v6;
    if (v7)
    {
LABEL_11:
      uint64_t v15 = 32 * v10;
      os_unfair_lock_lock(*(os_unfair_lock_t *)(a3[4] + v15 + 24));
      os_unfair_recursive_lock_unlock();
      uint64_t v16 = MEMORY[0x1BA9B8670](v11);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3[4] + v15 + 24));
      return v16;
    }
    uint64_t v12 = v13 + v6;
    uint64_t v9 = a1;
LABEL_6:
    sub_1B636E480(v12, 1, v9);
    uint64_t v14 = 1 << v10;
    if (v10 >= 0x40) {
      uint64_t v14 = 0;
    }
    if (v10 > 0x40) {
      uint64_t v14 = 0;
    }
    a3[15] |= v14;
    goto LABEL_11;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v18);
  if (v21 + v20 <= 4096)
  {
    unint64_t v10 = v18;
    uint64_t v9 = v19;
    uint64_t v11 = a3[2] + v21;
    uint64_t v12 = v11;
    goto LABEL_6;
  }
  unint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v22 = 4096;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B6B3AD4C(uint64_t a1, uint64_t a2, void *a3)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v6 = sub_1B636E9A8(a1);
  if (v7 != 2)
  {
    unint64_t v10 = v8;
    if (v7)
    {
LABEL_11:
      os_unfair_lock_lock(*(os_unfair_lock_t *)(a3[4] + 32 * v10 + 24));
      os_unfair_recursive_lock_unlock();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3[4] + 32 * v10 + 24));
      return;
    }
    uint64_t v11 = a3[2] + v6;
    uint64_t v9 = a1;
LABEL_6:
    sub_1B636E480(v11, 1, v9);
    uint64_t v12 = 1 << v10;
    if (v10 >= 0x40) {
      uint64_t v12 = 0;
    }
    if (v10 > 0x40) {
      uint64_t v12 = 0;
    }
    a3[15] |= v12;
    goto LABEL_11;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v13);
  if (v16 + v15 <= 4096)
  {
    unint64_t v10 = v13;
    uint64_t v9 = v14;
    uint64_t v11 = a3[2] + v16;
    goto LABEL_6;
  }
  unint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v17 = 4096;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E32BE8();
  __break(1u);
}

void sub_1B6B3AF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v7 = sub_1B636E9A8(a1);
  if (v8 == 2)
  {
    sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v24);
    if ((uint64_t)(v26 + *((void *)&v25 + 1)) > 4096)
    {
      v24.i64[0] = 0;
      v24.i64[1] = 0xE000000000000000;
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E33B48();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v27 = 4096;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E32BE8();
      __break(1u);
      return;
    }
    unint64_t v10 = v24.i64[0];
    uint64_t v11 = *(void *)(a3 + 16) + v26;
    sub_1B636E480(v11, 1, v24.i64[1]);
    uint64_t v12 = 1 << v10;
    if (v10 >= 0x40) {
      uint64_t v12 = 0;
    }
    uint64_t v15 = *(void *)(a3 + 32);
    unint64_t v14 = (void *)(a3 + 32);
    uint64_t v13 = v15;
    if (v10 > 0x40) {
      uint64_t v12 = 0;
    }
    v14[11] |= v12;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 32 * v10 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v16 = v11;
  }
  else
  {
    unint64_t v10 = v9;
    uint64_t v17 = *(void *)(a3 + 16);
    uint64_t v18 = v17 + v7;
    if (v8)
    {
      uint64_t v23 = *(void *)(a3 + 32);
      unint64_t v14 = (void *)(a3 + 32);
      uint64_t v22 = v23 + 32 * v9;
    }
    else
    {
      sub_1B636E480(v17 + v7, 1, a1);
      uint64_t v19 = 1 << v10;
      if (v10 >= 0x40) {
        uint64_t v19 = 0;
      }
      uint64_t v21 = *(void *)(a3 + 32);
      unint64_t v14 = (void *)(a3 + 32);
      uint64_t v20 = v21;
      if (v10 > 0x40) {
        uint64_t v19 = 0;
      }
      v14[11] |= v19;
      uint64_t v22 = v20 + 32 * v10;
    }
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v22 + 24));
    os_unfair_recursive_lock_unlock();
    uint64_t v16 = v18;
  }
  sub_1B6A4EAF8(v16, &v24);
  if (v3) {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*v14 + 32 * v10 + 24));
  }
  else {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*v14 + 32 * v10 + 24));
  }
}

void sub_1B6B3B22C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v8 = sub_1B636E9A8(a1);
  if (v9 != 2)
  {
    unint64_t v12 = v10;
    uint64_t v15 = a3[2];
    uint64_t v13 = (void *)(v15 + v8);
    if (v9)
    {
LABEL_11:
      uint64_t v17 = 32 * v12;
      os_unfair_lock_lock(*(os_unfair_lock_t *)(a3[4] + 32 * v12 + 24));
      os_unfair_recursive_lock_unlock();
      uint64_t v19 = v13[4];
      uint64_t v18 = v13[5];
      uint64_t v20 = v13[2];
      uint64_t v21 = v13[3];
      float32x4_t v24 = v13;
      uint64_t v22 = *v13;
      uint64_t v23 = v24[1];
      long long v25 = *(os_unfair_lock_s **)(a3[4] + v17 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock(v25);
      *a4 = v22;
      a4[1] = v23;
      a4[2] = v20;
      a4[3] = v21;
      a4[4] = v19;
      a4[5] = v18;
      return;
    }
    uint64_t v14 = v15 + v8;
    uint64_t v11 = a1;
LABEL_6:
    sub_1B636E480(v14, 1, v11);
    uint64_t v16 = 1 << v12;
    if (v12 >= 0x40) {
      uint64_t v16 = 0;
    }
    if (v12 > 0x40) {
      uint64_t v16 = 0;
    }
    a3[15] |= v16;
    goto LABEL_11;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v26);
  if (v29 + v28 <= 4096)
  {
    unint64_t v12 = v26;
    uint64_t v11 = v27;
    uint64_t v13 = (void *)(a3[2] + v29);
    uint64_t v14 = (uint64_t)v13;
    goto LABEL_6;
  }
  unint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v30 = 4096;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E32BE8();
  __break(1u);
}

void sub_1B6B3B4A0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v8 = sub_1B636E9A8(a1);
  if (v9 != 2)
  {
    unint64_t v12 = v10;
    uint64_t v15 = a3[2];
    uint64_t v13 = (unsigned char *)(v15 + v8);
    if (v9)
    {
LABEL_11:
      os_unfair_lock_lock(*(os_unfair_lock_t *)(a3[4] + 32 * v12 + 24));
      os_unfair_recursive_lock_unlock();
      char v17 = v13[1];
      char v18 = v13[2];
      char v19 = v13[3];
      char v20 = v13[4];
      char v21 = v13[5];
      char v22 = v13[6];
      *a4 = *v13;
      a4[1] = v17;
      a4[2] = v18;
      a4[3] = v19;
      a4[4] = v20;
      a4[5] = v21;
      a4[6] = v22;
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3[4] + 32 * v12 + 24));
      return;
    }
    uint64_t v14 = v15 + v8;
    uint64_t v11 = a1;
LABEL_6:
    sub_1B636E480(v14, 1, v11);
    uint64_t v16 = 1 << v12;
    if (v12 >= 0x40) {
      uint64_t v16 = 0;
    }
    if (v12 > 0x40) {
      uint64_t v16 = 0;
    }
    a3[15] |= v16;
    goto LABEL_11;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v23);
  if (v26 + v25 <= 4096)
  {
    unint64_t v12 = v23;
    uint64_t v11 = v24;
    uint64_t v13 = (unsigned char *)(a3[2] + v26);
    uint64_t v14 = (uint64_t)v13;
    goto LABEL_6;
  }
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E32BE8();
  __break(1u);
}

BOOL sub_1B6B3B6FC(uint64_t a1, uint64_t a2)
{
  os_unfair_recursive_lock_lock_with_options();
  sub_1B636E9A8((uint64_t)&type metadata for DefaultMaterialInstance);
  char v6 = v5;
  if (v5)
  {
    uint64_t v7 = 32 * v4;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + 32 * v4 + 24));
    os_unfair_recursive_lock_unlock();
    swift_getAtKeyPath();
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = 0;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(a1 + 32) + v7 + 24));
  }
  else
  {
    os_unfair_recursive_lock_unlock();
  }
  return (v6 & 1) == 0;
}

uint64_t sub_1B6B3B7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain_n();
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v6 = sub_1B636E9A8(a1);
  if (v7 != 2)
  {
    unint64_t v9 = v8;
    if (v7)
    {
      uint64_t v18 = *(void *)(a3 + 32);
      unint64_t v12 = (void *)(a3 + 32);
      uint64_t v17 = v18 + 32 * v8;
    }
    else
    {
      sub_1B636E480(*(void *)(a3 + 16) + v6, 1, a1);
      uint64_t v14 = 1 << v9;
      if (v9 >= 0x40) {
        uint64_t v14 = 0;
      }
      uint64_t v16 = *(void *)(a3 + 32);
      unint64_t v12 = (void *)(a3 + 32);
      uint64_t v15 = v16;
      if (v9 > 0x40) {
        uint64_t v14 = 0;
      }
      v12[11] |= v14;
      uint64_t v17 = v15 + 32 * v9;
    }
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 24));
    os_unfair_recursive_lock_unlock();
    swift_retain();
    goto LABEL_16;
  }
  sub_1B62CD618(a1, *(void *)(a2 + 8), (uint64_t)&v21);
  if (v24 + v23 <= 4096)
  {
    unint64_t v9 = v21;
    sub_1B636E480(*(void *)(a3 + 16) + v24, 1, v22);
    uint64_t v10 = 1 << v9;
    if (v9 >= 0x40) {
      uint64_t v10 = 0;
    }
    uint64_t v13 = *(void *)(a3 + 32);
    unint64_t v12 = (void *)(a3 + 32);
    uint64_t v11 = v13;
    if (v9 > 0x40) {
      uint64_t v10 = 0;
    }
    v12[11] |= v10;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 32 * v9 + 24));
    os_unfair_recursive_lock_unlock();
    swift_retain();
LABEL_16:
    swift_getAtKeyPath();
    swift_release();
    unint64_t v19 = v21;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*v12 + 32 * v9 + 24));
    swift_release_n();
    return v19;
  }
  unint64_t v21 = 0;
  uint64_t v22 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_release_n();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

double sub_1B6B3BAA4(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 128) = 1;
  return result;
}

ValueMetadata *type metadata accessor for Tombstone()
{
  return &type metadata for Tombstone;
}

unint64_t sub_1B6B3BAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B439D8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B3BAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x1F4184600](a1 + *(void *)(*(void *)(a8 - 8) + 72) * a3, a7, a4 + *(void *)(*(void *)(a8 - 8) + 72) * a6, a8);
}

uint64_t sub_1B6B3BB28()
{
  return 31759;
}

BOOL sub_1B6B3BB30(const void *a1, const void *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 - 8);
  return (*(unsigned char *)(v3 + 82) & 1) != 0 || memcmp(a1, a2, *(void *)(v3 + 64)) != 0;
}

uint64_t sub_1B6B3BB8C(uint64_t a1)
{
  sub_1B6649144(v1);
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  return sub_1B664DA4C((uint64_t)v4, v1);
}

uint64_t sub_1B6B3BC00(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 - 8);
  double v6 = MEMORY[0x1F4188790](a1, a2);
  unint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t, double))(v5 + 8))(v2, v6);
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v5 + 32))(v2, v8, a2);
}

char *sub_1B6B3BD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B43A98(a1, a3, a4, a6, a7);
}

double sub_1B6B3BD30(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 12) = v5;
  *(void *)(v1 + 16) = v6;
  *(_DWORD *)(v1 + 24) = v7;
  double result = v8;
  *(double *)(v1 + 28) = v8;
  return result;
}

char *sub_1B6B3BDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B43C58(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B3BDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1) {
    uint64_t v6 = (a2 - a1) / *(void *)(*(void *)(a5 - 8) + 72);
  }
  else {
    uint64_t v6 = 0;
  }
  return MEMORY[0x1F4184698](a3, a4, a1, v6);
}

uint64_t sub_1B6B3BE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return memswap_pattern4(a1, a2, *(void *)(*(void *)(a3 - 8) + 72));
}

uint64_t sub_1B6B3BE38()
{
  return sub_1B6E32498();
}

uint64_t sub_1B6B3BE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1B62CD7F8(a4);
  if (result >= 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 96))(a2, a3, a4, a5);
  }
  return result;
}

double sub_1B6B3BEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B41A0C(a1, a2, a3, MEMORY[0x1E4FBC8F8]);
}

char *sub_1B6B3BEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B43B30(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B3BF08(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  uint64_t result = swift_dynamicCast();
  id *v1 = v4;
  return result;
}

unint64_t sub_1B6B3BF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44E4C(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B3BFA0(uint64_t a1)
{
  sub_1B6317E5C(v1);
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  return sub_1B6B47130((uint64_t)&v4, v1);
}

char *sub_1B6B3C018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44D28(a1, a3, a4, a6, a7);
}

BOOL sub_1B6B3C040(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x8CuLL) != 0;
}

__n128 sub_1B6B3C064(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  long long v2 = v7[0];
  *(_OWORD *)(v1 + 96) = v6[8];
  *(_OWORD *)(v1 + 112) = v2;
  *(_OWORD *)(v1 + 124) = *(_OWORD *)((char *)v7 + 12);
  long long v3 = v6[5];
  *(_OWORD *)(v1 + 32) = v6[4];
  *(_OWORD *)(v1 + 48) = v3;
  long long v4 = v6[7];
  *(_OWORD *)(v1 + 64) = v6[6];
  *(_OWORD *)(v1 + 80) = v4;
  __n128 result = (__n128)v6[3];
  *(_OWORD *)uint64_t v1 = v6[2];
  *(__n128 *)(v1 + 16) = result;
  return result;
}

char *sub_1B6B3C0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44068(a1, a3, a4, a6, a7);
}

double sub_1B6B3C104(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  double result = *(double *)&v3;
  _OWORD *v1 = v3;
  v1[1] = v4;
  return result;
}

char *sub_1B6B3C15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44850(a1, a3, a4, a6, a7);
}

double sub_1B6B3C184(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 16) = v4;
  double result = v5;
  *(double *)(v1 + 32) = v5;
  *(_DWORD *)(v1 + 40) = v6;
  return result;
}

double sub_1B6B3C1EC(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v4);
  swift_dynamicCast();
  double result = *(double *)&v3;
  _OWORD *v1 = v3;
  return result;
}

char *sub_1B6B3C244(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, size_t __len)
{
  return sub_1B6B45628(a1, a3, a4, a6, __len);
}

double sub_1B6B3C274(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1B6B3C28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B6B3BAFC(a1, a2, a3, a4, a5, a6, a7, a8);
}

BOOL sub_1B6B3C2AC(const void *a1, const void *a2, uint64_t a3)
{
  return sub_1B6B3BB30(a1, a2, a3);
}

double sub_1B6B3C2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return nullsub_1(a3);
}

char *sub_1B6B3C2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45A10(a1, a3, a4, a6, a7);
}

double sub_1B6B3C300(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  double result = v6;
  *(void *)uint64_t v1 = v3;
  *(_WORD *)(v1 + 8) = v4;
  *(void *)(v1 + 12) = v5;
  *(double *)(v1 + 24) = v6;
  *(void *)(v1 + 32) = v7;
  *(_DWORD *)(v1 + 40) = v8;
  return result;
}

char *sub_1B6B3C378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45AA4(a1, a3, a4, a6, a7);
}

BOOL sub_1B6B3C3A0(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 != *(void *)a2
      || *(void *)(a1 + 8) != *(void *)(a2 + 8)
      || *(void *)(a1 + 16) != *(void *)(a2 + 16)
      || *(unsigned __int16 *)(a1 + 24) != (unint64_t)*(unsigned __int16 *)(a2 + 24);
}

float sub_1B6B3C3D0(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  float result = v6;
  *(unsigned char *)uint64_t v1 = v3;
  *(void *)(v1 + 4) = v4;
  *(void *)(v1 + 12) = v5;
  *(float *)(v1 + 20) = v6;
  *(unsigned char *)(v1 + 24) = v7;
  *(unsigned char *)(v1 + 25) = v8;
  return result;
}

char *sub_1B6B3C450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B4597C(a1, a3, a4, a6, a7);
}

double sub_1B6B3C478(uint64_t a1)
{
  swift_release();
  sub_1B62CAAD8(a1, (uint64_t)v19);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v4;
  *(unsigned char *)(v1 + 8) = v5;
  *(unsigned char *)(v1 + 9) = v6;
  *(_WORD *)(v1 + 10) = v7;
  *(void *)(v1 + 12) = v8;
  *(_DWORD *)(v1 + 20) = v9;
  double result = *(double *)&v10;
  *(_OWORD *)(v1 + 32) = v10;
  *(_OWORD *)(v1 + 48) = v11;
  *(unsigned char *)(v1 + 64) = v12;
  *(unsigned char *)(v1 + 65) = v13;
  *(unsigned char *)(v1 + 66) = v14;
  *(_DWORD *)(v1 + 68) = v15;
  *(unsigned char *)(v1 + 72) = v16;
  *(_DWORD *)(v1 + 76) = v17;
  *(unsigned char *)(v1 + 80) = v18;
  return result;
}

char *sub_1B6B3C550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B4544C(a1, a3, a4, a6, a7);
}

double sub_1B6B3C578(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v12);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v3;
  *(_WORD *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 12) = v5;
  *(_DWORD *)(v1 + 16) = v6;
  *(unsigned char *)(v1 + 20) = v7;
  *(_OWORD *)(v1 + 24) = v8;
  double result = *(double *)&v9;
  *(_OWORD *)(v1 + 40) = v9;
  *(void *)(v1 + 56) = v10;
  *(_DWORD *)(v1 + 64) = v11;
  return result;
}

BOOL sub_1B6B3C610(uint64_t a1, uint64_t a2)
{
  return (~(*(unsigned __int16 (**)(void))(a2 + 80))() & 0x6000) == 0;
}

BOOL sub_1B6B3C644(uint64_t a1, uint64_t a2)
{
  return (~(*(unsigned __int16 (**)(void))(a2 + 80))() & 0x1C00) == 0;
}

char *sub_1B6B3C678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B43CE8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B3C6A4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v9);
  uint64_t result = swift_dynamicCast();
  *(unsigned char *)uint64_t v1 = v4;
  *(unsigned char *)(v1 + 1) = v5;
  *(unsigned char *)(v1 + 2) = v6;
  *(void *)(v1 + 8) = v7;
  *(void *)(v1 + 16) = v8;
  return result;
}

uint64_t sub_1B6B3C72C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v10);
  uint64_t result = swift_dynamicCast();
  *(void *)uint64_t v1 = v4;
  *(unsigned char *)(v1 + 8) = v5;
  *(unsigned char *)(v1 + 9) = v6;
  *(unsigned char *)(v1 + 10) = v7;
  *(void *)(v1 + 16) = v8;
  *(void *)(v1 + 24) = v9;
  return result;
}

double sub_1B6B3C7C4(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B62CAAD8(a1, (uint64_t)v12);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v5;
  *(void *)(v1 + 16) = v6;
  *(void *)(v1 + 24) = v7;
  double result = *(double *)&v8;
  *(_OWORD *)(v1 + 32) = v8;
  *(unsigned char *)(v1 + 48) = v9;
  *(unsigned char *)(v1 + 49) = v10;
  *(unsigned char *)(v1 + 50) = v11;
  return result;
}

unint64_t sub_1B6B3C874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for MovieRuntime);
}

uint64_t sub_1B6B3C8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for MovieRuntime, type metadata accessor for MovieRuntime);
}

unint64_t sub_1B6B3C8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for AudioPlayerComponent);
}

uint64_t sub_1B6B3C91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for AudioPlayerComponent, type metadata accessor for AudioPlayerComponent);
}

uint64_t sub_1B6B3C948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  MEMORY[0x1F4188790](a1, a2);
  char v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B6B47510(v5, v10);
  sub_1B62CAAD8(a1, (uint64_t)v12);
  swift_dynamicCast();
  return sub_1B6B470C8((uint64_t)v9, v5, a5);
}

char *sub_1B6B3CA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B453B4(a1, a3, a4, a6, a7);
}

BOOL sub_1B6B3CA3C(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 != *a2 || *((unsigned __int8 *)a1 + 2) != *((unsigned __int8 *)a2 + 2);
}

char *sub_1B6B3CA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B43E14(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B3CA88(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v7);
  uint64_t result = swift_dynamicCast();
  unsigned char *v1 = v3;
  v1[1] = v4;
  _OWORD v1[2] = v5;
  v1[3] = v6;
  return result;
}

char *sub_1B6B3CAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45B38(a1, a3, a4, a6, a7);
}

double sub_1B6B3CB20(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v4;
  *(void *)(v1 + 16) = v5;
  *(_DWORD *)(v1 + 24) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(v1 + 32) = v7;
  *(void *)(v1 + 48) = v8;
  *(unsigned char *)(v1 + 56) = v9;
  return result;
}

char *sub_1B6B3CBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B454E0(a1, a3, a4, a6, a7);
}

double sub_1B6B3CC18(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  double result = v4;
  *(double *)(v1 + 16) = v4;
  return result;
}

char *sub_1B6B3CC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B451EC(a1, a3, a4, a6, a7);
}

double sub_1B6B3CCA4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v16);
  swift_dynamicCast();
  *(unsigned char *)uint64_t v1 = v4;
  *(_DWORD *)(v1 + 4) = v5;
  *(unsigned char *)(v1 + 8) = v6;
  *(_OWORD *)(v1 + 16) = v7;
  *(void *)(v1 + 32) = v8;
  *(unsigned char *)(v1 + 40) = v9;
  *(_OWORD *)(v1 + 48) = v10;
  *(void *)(v1 + 64) = v11;
  *(unsigned char *)(v1 + 72) = v12;
  double result = *(double *)&v13;
  *(_OWORD *)(v1 + 80) = v13;
  *(void *)(v1 + 96) = v14;
  *(unsigned char *)(v1 + 104) = v15;
  return result;
}

char *sub_1B6B3CDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45034(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B3CE00(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  uint64_t result = swift_dynamicCast();
  unsigned char *v1 = v3;
  v1[1] = v4;
  return result;
}

float sub_1B6B3CE60(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  float result = v6;
  *(void *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 8) = v4;
  *(void *)(v1 + 12) = v5;
  *(float *)(v1 + 20) = v6;
  *(unsigned char *)(v1 + 24) = v7;
  return result;
}

float sub_1B6B3CED8(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  float result = v7;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  *(_DWORD *)(v1 + 16) = v5;
  *(unsigned char *)(v1 + 20) = v6;
  *(float *)(v1 + 24) = v7;
  *(unsigned char *)(v1 + 28) = v8;
  return result;
}

float sub_1B6B3CF50(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  float result = v4;
  *(unsigned char *)uint64_t v1 = v3;
  *(float *)(v1 + 4) = v4;
  return result;
}

BOOL sub_1B6B3CFB0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 != *a2;
}

__n128 sub_1B6B3CFC4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  __n128 result = v6;
  *(_OWORD *)uint64_t v1 = v4;
  *(_OWORD *)(v1 + 16) = v5;
  *(__n128 *)(v1 + 32) = v6;
  *(void *)(v1 + 48) = v7;
  *(unsigned char *)(v1 + 56) = v8;
  return result;
}

double sub_1B6B3D0A0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  double result = *(double *)&v4;
  _OWORD *v1 = v4;
  return result;
}

uint64_t sub_1B6B3D118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B43780(a1, a2, a3, MEMORY[0x1E4FBC8D0]);
}

double sub_1B6B3D130(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v4;
  *(void *)(v1 + 8) = v5;
  double result = *(double *)&v6;
  *(_OWORD *)(v1 + 16) = v6;
  return result;
}

char *sub_1B6B3D1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44F9C(a1, a3, a4, a6, a7);
}

BOOL sub_1B6B3D1E0(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 != *(void *)a2
      || *(void *)(a1 + 8) != *(void *)(a2 + 8)
      || *(void *)(a1 + 16) != *(void *)(a2 + 16)
      || *(_DWORD *)(a1 + 24) != (unint64_t)*(unsigned int *)(a2 + 24);
}

float sub_1B6B3D210(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  float result = v7;
  *(unsigned char *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 1) = v4;
  *(unsigned char *)(v1 + 2) = v5;
  *(_OWORD *)(v1 + 4) = v6;
  *(float *)(v1 + 20) = v7;
  *(_DWORD *)(v1 + 24) = v8;
  return result;
}

__n128 sub_1B6B3D290(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  long long v2 = v7[0];
  *(_OWORD *)(v1 + 96) = v6[8];
  *(_OWORD *)(v1 + 112) = v2;
  *(_OWORD *)(v1 + 123) = *(_OWORD *)((char *)v7 + 11);
  long long v3 = v6[5];
  *(_OWORD *)(v1 + 32) = v6[4];
  *(_OWORD *)(v1 + 48) = v3;
  long long v4 = v6[7];
  *(_OWORD *)(v1 + 64) = v6[6];
  *(_OWORD *)(v1 + 80) = v4;
  __n128 result = (__n128)v6[3];
  *(_OWORD *)uint64_t v1 = v6[2];
  *(__n128 *)(v1 + 16) = result;
  return result;
}

double sub_1B6B3D308(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v4;
  *(void *)(v1 + 8) = v5;
  *(void *)(v1 + 16) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(v1 + 24) = v7;
  *(unsigned char *)(v1 + 40) = v8;
  *(unsigned char *)(v1 + 41) = v9;
  return result;
}

char *sub_1B6B3D3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B448E8(a1, a3, a4, a6, a7);
}

BOOL sub_1B6B3D3DC(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x71uLL) != 0;
}

double sub_1B6B3D400(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v12);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 16) = v4;
  *(_OWORD *)(v1 + 32) = v5;
  *(_OWORD *)(v1 + 48) = v6;
  *(_DWORD *)(v1 + 64) = v7;
  *(_OWORD *)(v1 + 72) = v8;
  double result = *(double *)&v9;
  *(_OWORD *)(v1 + 88) = v9;
  *(void *)(v1 + 104) = v10;
  *(unsigned char *)(v1 + 112) = v11;
  return result;
}

char *sub_1B6B3D498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45C80(a1, a3, a4, a6, a7);
}

float sub_1B6B3D4C0(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  float result = v3;
  *(float *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 4) = v4;
  *(unsigned char *)(v1 + 5) = v5;
  return result;
}

char *sub_1B6B3D52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44378(a1, a3, a4, a6, a7);
}

double sub_1B6B3D554(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v4;
  *(_OWORD *)(v1 + 8) = v5;
  *(_OWORD *)(v1 + 24) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(v1 + 40) = v7;
  *(void *)(v1 + 56) = v8;
  return result;
}

char *sub_1B6B3D640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44408(a1, a3, a4, a6, a7);
}

BOOL sub_1B6B3D668(void *a1, void *a2)
{
  return *a1 != *a2 || a1[1] != a2[1] || *(void *)((char *)a1 + 13) != *(void *)((char *)a2 + 13);
}

float sub_1B6B3D68C(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v11);
  swift_dynamicCast();
  float result = v4;
  *(void *)uint64_t v1 = v3;
  *(float *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 12) = v5;
  *(unsigned char *)(v1 + 13) = v6;
  *(unsigned char *)(v1 + 14) = v7;
  *(unsigned char *)(v1 + 15) = v8;
  *(_DWORD *)(v1 + 16) = v9;
  *(unsigned char *)(v1 + 20) = v10;
  return result;
}

float sub_1B6B3D71C(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v11);
  swift_dynamicCast();
  float result = v6;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 16) = v5;
  *(float *)(v1 + 20) = v6;
  *(unsigned char *)(v1 + 24) = v7;
  *(unsigned char *)(v1 + 25) = v8;
  *(unsigned char *)(v1 + 26) = v9;
  *(_DWORD *)(v1 + 28) = v10;
  return result;
}

uint64_t sub_1B6B3D7AC(uint64_t a1, uint64_t a2)
{
  return swift_dynamicCast();
}

BOOL sub_1B6B3D86C(const void *a1, uint64_t a2, uint64_t a3)
{
  _OWORD v9[2] = a2;
  void v9[3] = a3;
  uint64_t v6 = sub_1B6E316F8();
  sub_1B62FD7BC(v3, (uint64_t)sub_1B663246C, (uint64_t)v9, a2, MEMORY[0x1E4FBC248], v6, MEMORY[0x1E4FBC278], v7);
  return memcmp((const void *)v9[5], a1, *(void *)(*(void *)(a2 - 8) + 64)) == 0;
}

unint64_t sub_1B6B3D914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for ParticleInitScript);
}

uint64_t sub_1B6B3D950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for ParticleInitScript, type metadata accessor for ParticleInitScript);
}

unint64_t sub_1B6B3D97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for ParticleUpdateScript);
}

uint64_t sub_1B6B3D9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for ParticleUpdateScript, type metadata accessor for ParticleUpdateScript);
}

unint64_t sub_1B6B3D9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for GraphScript);
}

uint64_t sub_1B6B3DA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for GraphScript, type metadata accessor for GraphScript);
}

unint64_t sub_1B6B3DA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for EmitterScript);
}

uint64_t sub_1B6B3DA88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for EmitterScript, type metadata accessor for EmitterScript);
}

unint64_t sub_1B6B3DAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for SimpleScript);
}

uint64_t sub_1B6B3DAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for SimpleScript, type metadata accessor for SimpleScript);
}

unint64_t sub_1B6B3DB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for MetalFunctionScript);
}

uint64_t sub_1B6B3DB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for MetalFunctionScript, type metadata accessor for MetalFunctionScript);
}

unint64_t sub_1B6B3DB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for ShaderScript);
}

uint64_t sub_1B6B3DBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for ShaderScript, type metadata accessor for ShaderScript);
}

unint64_t sub_1B6B3DBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for TriggerScript);
}

uint64_t sub_1B6B3DC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for TriggerScript, type metadata accessor for TriggerScript);
}

uint64_t sub_1B6B3DC54(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v7);
  uint64_t result = swift_dynamicCast();
  *(void *)uint64_t v1 = v4;
  *(unsigned char *)(v1 + 8) = v5;
  *(void *)(v1 + 16) = v6;
  return result;
}

uint64_t sub_1B6B3DCDC(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2) {
    return (*(unsigned __int8 *)(a2 + 4) ^ *(unsigned __int8 *)(a1 + 4)) & 1;
  }
  else {
    return 1;
  }
}

uint64_t sub_1B6B3DD0C(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  uint64_t result = swift_dynamicCast();
  *(_DWORD *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 4) = v4;
  return result;
}

char *sub_1B6B3DD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B4466C(a1, a3, a4, a6, a7);
}

float sub_1B6B3DD94(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v23);
  swift_dynamicCast();
  float result = v22;
  *(_OWORD *)uint64_t v1 = v4;
  *(_OWORD *)(v1 + 16) = v5;
  *(void *)(v1 + 32) = v6;
  *(unsigned char *)(v1 + 40) = v7;
  *(unsigned char *)(v1 + 41) = v8;
  *(unsigned char *)(v1 + 42) = v9;
  *(unsigned char *)(v1 + 43) = v10;
  *(unsigned char *)(v1 + 44) = v11;
  *(unsigned char *)(v1 + 45) = v12;
  *(void *)(v1 + 48) = v13;
  *(unsigned char *)(v1 + 56) = v14;
  *(unsigned char *)(v1 + 57) = v15;
  *(unsigned char *)(v1 + 58) = v16;
  *(void *)(v1 + 64) = v17;
  *(unsigned char *)(v1 + 72) = v18;
  *(_WORD *)(v1 + 74) = v19;
  *(unsigned char *)(v1 + 76) = v20;
  *(unsigned char *)(v1 + 77) = v21;
  *(float *)(v1 + 80) = v22;
  return result;
}

char *sub_1B6B3DEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B43F3C(a1, a3, a4, a6, a7);
}

void *sub_1B6B3DED8(uint64_t a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  sub_1B62E20E8((uint64_t)__dst);
  sub_1B62CAAD8(a1, (uint64_t)&v4);
  swift_dynamicCast();
  return memcpy(v1, __src, 0x290uLL);
}

unint64_t sub_1B6B3DF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, (uint64_t (*)(void))type metadata accessor for ScriptingConfiguration);
}

uint64_t sub_1B6B3DF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for ScriptingConfiguration, (uint64_t (*)(void))type metadata accessor for ScriptingConfiguration);
}

char *sub_1B6B3DFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45D10(a1, a3, a4, a6, a7);
}

double sub_1B6B3DFF4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v17);
  swift_dynamicCast();
  *(unsigned char *)uint64_t v1 = v4;
  *(void *)(v1 + 8) = v5;
  *(void *)(v1 + 16) = v6;
  *(_OWORD *)(v1 + 24) = v7;
  *(_DWORD *)(v1 + 40) = v8;
  *(unsigned char *)(v1 + 44) = v9;
  *(_DWORD *)(v1 + 48) = v10;
  *(unsigned char *)(v1 + 52) = v11;
  *(unsigned char *)(v1 + 53) = v12;
  *(void *)(v1 + 56) = v13;
  *(unsigned char *)(v1 + 64) = v14;
  *(_OWORD *)(v1 + 72) = v15;
  double result = *(double *)&v16;
  *(_OWORD *)(v1 + 88) = v16;
  return result;
}

char *sub_1B6B3E0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B43EA4(a1, a3, a4, a6, a7);
}

double sub_1B6B3E114(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v14);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 12) = v5;
  *(_DWORD *)(v1 + 16) = v6;
  *(unsigned char *)(v1 + 20) = v7;
  *(unsigned char *)(v1 + 21) = v8;
  *(unsigned char *)(v1 + 22) = v9;
  *(_DWORD *)(v1 + 24) = v10;
  *(unsigned char *)(v1 + 28) = v11;
  *(unsigned char *)(v1 + 29) = v12;
  double result = *(double *)&v13;
  *(_OWORD *)(v1 + 32) = v13;
  return result;
}

char *sub_1B6B3E1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B456B8(a1, a3, a4, a6, a7);
}

double sub_1B6B3E1E4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  *(unsigned char *)uint64_t v1 = v4;
  *(_DWORD *)(v1 + 4) = v5;
  *(_OWORD *)(v1 + 8) = v6;
  *(unsigned char *)(v1 + 24) = v7;
  *(unsigned char *)(v1 + 25) = v8;
  double result = v9;
  *(double *)(v1 + 28) = v9;
  return result;
}

float sub_1B6B3E288(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  float result = v5;
  *(_OWORD *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 16) = v4;
  *(float *)(v1 + 20) = v5;
  *(unsigned char *)(v1 + 24) = v6;
  *(_DWORD *)(v1 + 28) = v7;
  return result;
}

float sub_1B6B3E300(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v14);
  swift_dynamicCast();
  float result = v6;
  *(void *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 12) = v5;
  *(float *)(v1 + 16) = v6;
  *(unsigned char *)(v1 + 20) = v7;
  *(_DWORD *)(v1 + 24) = v8;
  *(unsigned char *)(v1 + 28) = v9;
  *(unsigned char *)(v1 + 29) = v10;
  *(unsigned char *)(v1 + 30) = v11;
  *(unsigned char *)(v1 + 31) = v12;
  *(_DWORD *)(v1 + 32) = v13;
  return result;
}

float sub_1B6B3E3A8(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  float result = v4;
  *(_OWORD *)uint64_t v1 = v3;
  *(float *)(v1 + 16) = v4;
  *(_DWORD *)(v1 + 20) = v5;
  *(unsigned char *)(v1 + 24) = v6;
  return result;
}

char *sub_1B6B3E418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44BD4(a1, a3, a4, a6, a7);
}

BOOL sub_1B6B3E440(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v12 = a2[4];
  uint64_t v13 = a2[5];
  uint64_t v14 = a1[6];
  uint64_t v15 = a2[6];
  uint64_t v16 = *((unsigned __int16 *)a1 + 28);
  uint64_t v17 = *((unsigned __int16 *)a2 + 28);
  return v2 != v4 || v3 != v5 || v6 != v8 || v7 != v9 || v10 != v12 || v11 != v13 || v14 != v15 || v16 != v17;
}

double sub_1B6B3E490(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v14);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 16) = v4;
  *(unsigned char *)(v1 + 20) = v5;
  *(_WORD *)(v1 + 21) = v6;
  *(void *)(v1 + 24) = v7;
  *(_DWORD *)(v1 + 32) = v8;
  *(unsigned char *)(v1 + 36) = v9;
  double result = v10;
  *(double *)(v1 + 40) = v10;
  *(void *)(v1 + 48) = v11;
  *(unsigned char *)(v1 + 56) = v12;
  *(unsigned char *)(v1 + 57) = v13;
  return result;
}

uint64_t sub_1B6B3E538(uint64_t a1)
{
  swift_release();
  sub_1B62CAAD8(a1, (uint64_t)v5);
  uint64_t result = swift_dynamicCast();
  void *v1 = v4;
  return result;
}

char *sub_1B6B3E5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B43D80(a1, a3, a4, a6, a7);
}

double sub_1B6B3E5D0(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)&v9);
  swift_dynamicCast();
  long long v2 = v21;
  *(_OWORD *)(v1 + 160) = v20;
  *(_OWORD *)(v1 + 176) = v2;
  *(_OWORD *)(v1 + 192) = v22;
  *(unsigned char *)(v1 + 208) = v23;
  long long v3 = v17;
  *(_OWORD *)(v1 + 96) = v16;
  *(_OWORD *)(v1 + 112) = v3;
  long long v4 = v19;
  *(_OWORD *)(v1 + 128) = v18;
  *(_OWORD *)(v1 + 144) = v4;
  long long v5 = v13;
  *(_OWORD *)(v1 + 32) = v12;
  *(_OWORD *)(v1 + 48) = v5;
  long long v6 = v15;
  *(_OWORD *)(v1 + 64) = v14;
  *(_OWORD *)(v1 + 80) = v6;
  double result = *(double *)&v10;
  long long v8 = v11;
  *(_OWORD *)uint64_t v1 = v10;
  *(_OWORD *)(v1 + 16) = v8;
  return result;
}

float sub_1B6B3E664(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  float result = v4;
  *(unsigned char *)uint64_t v1 = v3;
  *(float *)(v1 + 4) = v4;
  *(unsigned char *)(v1 + 8) = v5;
  *(_OWORD *)(v1 + 16) = v6;
  *(unsigned char *)(v1 + 32) = v7;
  *(_DWORD *)(v1 + 36) = v8;
  return result;
}

float sub_1B6B3E6EC(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  float result = v3;
  *(float *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 16) = v4;
  *(_OWORD *)(v1 + 32) = v5;
  *(unsigned char *)(v1 + 48) = v6;
  return result;
}

double sub_1B6B3E754(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  double result = v4;
  *(double *)(v1 + 16) = v4;
  *(unsigned char *)(v1 + 24) = v5;
  return result;
}

__n128 sub_1B6B3E7BC(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 80);
  void v10[4] = *(_OWORD *)(v1 + 64);
  v11[0] = v3;
  *(_DWORD *)((char *)v11 + 15) = *(_DWORD *)(v1 + 95);
  long long v4 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v4;
  long long v5 = *(_OWORD *)(v1 + 48);
  v10[2] = *(_OWORD *)(v1 + 32);
  uint64_t v10[3] = v5;
  sub_1B62CA064((uint64_t)v10);
  sub_1B62CAAD8(a1, (uint64_t)&v9);
  swift_dynamicCast();
  long long v6 = v12[0];
  *(_OWORD *)(v1 + 64) = v11[6];
  *(_OWORD *)(v1 + 80) = v6;
  *(_DWORD *)(v1 + 95) = *(_DWORD *)((char *)v12 + 15);
  long long v7 = v11[3];
  *(_OWORD *)uint64_t v1 = v11[2];
  *(_OWORD *)(v1 + 16) = v7;
  __n128 result = (__n128)v11[5];
  *(_OWORD *)(v1 + 32) = v11[4];
  *(__n128 *)(v1 + 48) = result;
  return result;
}

BOOL sub_1B6B3E864(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 != *(void *)a2
      || *(void *)(a1 + 8) != *(void *)(a2 + 8)
      || *(unsigned __int8 *)(a1 + 16) != (unint64_t)*(unsigned __int8 *)(a2 + 16);
}

float sub_1B6B3E888(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  float result = v3;
  *(float *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 16) = v5;
  return result;
}

char *sub_1B6B3E8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B43FD4(a1, a3, a4, a6, a7);
}

double sub_1B6B3E918(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v4;
  *(_OWORD *)(v1 + 16) = v5;
  double result = *(double *)&v6;
  *(_OWORD *)(v1 + 32) = v6;
  *(unsigned char *)(v1 + 48) = v7;
  *(unsigned char *)(v1 + 49) = v8;
  *(unsigned char *)(v1 + 50) = v9;
  return result;
}

float sub_1B6B3E9B4(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  float result = v3;
  *(float *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 16) = v4;
  *(_DWORD *)(v1 + 32) = v5;
  *(unsigned char *)(v1 + 36) = v6;
  *(void *)(v1 + 40) = v7;
  *(unsigned char *)(v1 + 48) = v8;
  return result;
}

double sub_1B6B3EA34(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  _OWORD *v1 = v3;
  v1[1] = v4;
  double result = *(double *)&v5;
  _OWORD v1[2] = v5;
  return result;
}

uint64_t sub_1B6B3EA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  double v6 = MEMORY[0x1F4188790](a1, a2);
  char v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v9)
  {
    v13[3] = a3;
    long long v10 = sub_1B62C12C4(v13);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v10, a1, a3);
    uint64_t v11 = sub_1B6D2798C(v13);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v13);
  }
  else
  {
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, a3, v6);
    sub_1B6E33458();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a3);
    return v13[0];
  }
  return v11;
}

char *sub_1B6B3EBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44F08(a1, a3, a4, a6, a7);
}

void *sub_1B6B3EC04(uint64_t a1)
{
  memcpy(__dst, v1, 0x64BuLL);
  sub_1B6B4718C((uint64_t)__dst);
  sub_1B62CAAD8(a1, (uint64_t)&v4);
  swift_dynamicCast();
  return memcpy(v1, __src, 0x64BuLL);
}

BOOL sub_1B6B3EC8C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = a2[4];
  uint64_t v12 = *((unsigned __int8 *)a1 + 40);
  uint64_t v13 = *((unsigned __int8 *)a2 + 40);
  return v2 != v4 || v3 != v5 || v6 != v8 || v7 != v9 || v10 != v11 || v12 != v13;
}

double sub_1B6B3ECCC(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 16) = v4;
  double result = v5;
  *(double *)(v1 + 32) = v5;
  *(unsigned char *)(v1 + 40) = v6;
  return result;
}

double sub_1B6B3ED34(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  double result = *(double *)&v4;
  *(_OWORD *)uint64_t v1 = v4;
  *(unsigned char *)(v1 + 16) = v5;
  return result;
}

double sub_1B6B3EDB8(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v14);
  swift_dynamicCast();
  *(_DWORD *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 4) = v4;
  *(_DWORD *)(v1 + 8) = v5;
  *(unsigned char *)(v1 + 12) = v6;
  *(_DWORD *)(v1 + 16) = v7;
  *(unsigned char *)(v1 + 20) = v8;
  *(unsigned char *)(v1 + 21) = v9;
  *(void *)(v1 + 24) = v10;
  *(unsigned char *)(v1 + 32) = v11;
  *(unsigned char *)(v1 + 33) = v12;
  double result = v13;
  *(double *)(v1 + 36) = v13;
  return result;
}

char *sub_1B6B3EE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44190(a1, a3, a4, a6, a7);
}

double sub_1B6B3EE88(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v11);
  swift_dynamicCast();
  double result = *(double *)&v3;
  _OWORD *v1 = v3;
  v1[1] = v4;
  _OWORD v1[2] = v5;
  v1[3] = v6;
  v1[4] = v7;
  v1[5] = v8;
  v1[6] = v9;
  v1[7] = v10;
  return result;
}

BOOL sub_1B6B3EEFC(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 != *(void *)a2
      || *(void *)(a1 + 8) != *(void *)(a2 + 8)
      || *(void *)(a1 + 16) != *(void *)(a2 + 16)
      || *(unsigned __int8 *)(a1 + 24) != (unint64_t)*(unsigned __int8 *)(a2 + 24);
}

double sub_1B6B3EF2C(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  double result = v3;
  *(double *)uint64_t v1 = v3;
  *(_WORD *)(v1 + 8) = v4;
  *(void *)(v1 + 16) = v5;
  *(unsigned char *)(v1 + 24) = v6;
  return result;
}

char *sub_1B6B3EF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B4453C(a1, a3, a4, a6, a7);
}

double sub_1B6B3EFCC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  *(unsigned char *)uint64_t v1 = v4;
  *(void *)(v1 + 4) = v5;
  *(_DWORD *)(v1 + 12) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(v1 + 16) = v7;
  *(unsigned char *)(v1 + 32) = v8;
  return result;
}

char *sub_1B6B3F064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44978(a1, a3, a4, a6, a7);
}

__n128 sub_1B6B3F08C(uint64_t a1)
{
  long long v3 = v1[9];
  unsigned char v14[8] = v1[8];
  v15[0] = v3;
  *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)((char *)v1 + 153);
  long long v4 = v1[5];
  v14[4] = v1[4];
  v14[5] = v4;
  long long v5 = v1[7];
  v14[6] = v1[6];
  v14[7] = v5;
  long long v6 = v1[1];
  v14[0] = *v1;
  v14[1] = v6;
  long long v7 = v1[3];
  v14[2] = v1[2];
  void v14[3] = v7;
  sub_1B6AAC67C((uint64_t)v14);
  sub_1B62CAAD8(a1, (uint64_t)&v13);
  swift_dynamicCast();
  long long v8 = v16[0];
  v1[8] = v15[10];
  v1[9] = v8;
  *(_OWORD *)((char *)v1 + 153) = *(_OWORD *)((char *)v16 + 9);
  long long v9 = v15[7];
  v1[4] = v15[6];
  v1[5] = v9;
  long long v10 = v15[9];
  v1[6] = v15[8];
  v1[7] = v10;
  long long v11 = v15[3];
  _OWORD *v1 = v15[2];
  v1[1] = v11;
  __n128 result = (__n128)v15[5];
  _OWORD v1[2] = v15[4];
  v1[3] = result;
  return result;
}

BOOL sub_1B6B3F158(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v12 = a2[4];
  uint64_t v13 = a2[5];
  uint64_t v15 = a1[6];
  uint64_t v14 = a1[7];
  uint64_t v17 = a2[6];
  uint64_t v16 = a2[7];
  return v2 != v4 || v3 != v5 || v6 != v8 || v7 != v9 || v10 != v12 || v11 != v13 || v15 != v17 || v14 != v16;
}

BOOL sub_1B6B3F1A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 != *a2;
}

double sub_1B6B3F1B8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v4;
  *(void *)(v1 + 16) = v5;
  double result = *(double *)&v6;
  *(_OWORD *)(v1 + 24) = v6;
  *(void *)(v1 + 40) = v7;
  return result;
}

double sub_1B6B3F260(uint64_t a1)
{
  sub_1B6761C48(*(void *)(v1 + 8));
  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  *(_DWORD *)uint64_t v1 = v4;
  double result = *(double *)&v5;
  *(_OWORD *)(v1 + 8) = v5;
  *(void *)(v1 + 24) = v6;
  *(unsigned char *)(v1 + 32) = v7;
  return result;
}

char *sub_1B6B3F2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B450C4(a1, a3, a4, a6, a7);
}

double sub_1B6B3F31C(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  double result = v3;
  *(double *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 8) = v4;
  return result;
}

uint64_t sub_1B6B3F37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a1;
  uint64_t v6 = *(void *)(a3 - 8);
  v7.n128_f64[0] = MEMORY[0x1F4188790](a1, a2);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v10;
  if (v10)
  {
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(a4 + 24);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
    uint64_t v13 = v16;
    uint64_t v14 = v17;
    do
    {
      v12(v9, v14, a3, v7);
      v11(a3, a4);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
      ++v14;
      --v13;
    }
    while (v13);
  }
  return sub_1B6E32478();
}

void sub_1B6B3F4B0(void *a1@<X8>)
{
  *a1 = 0x4000;
}

uint64_t sub_1B6B3F4BC(uint64_t a1)
{
  unint64_t v2 = sub_1B6B473FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B3F4F8(uint64_t a1)
{
  unint64_t v2 = sub_1B6B473FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6B3F534(void *a1)
{
  sub_1B62AF7F4(0, &qword_1E9DD6098, (uint64_t (*)(void))sub_1B6B473FC, (uint64_t)&type metadata for NullEntityComponent.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  __n128 v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6B473FC();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B6B3F674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1B62C1550(v6, (uint64_t)v11);
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97FFF0);
  swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(a2, v8, a3);
}

uint64_t sub_1B6B3F768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  uint64_t result = MEMORY[0x1F4188790](a1, a2);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v9 - v12 >= 1)
  {
    uint64_t v13 = *(void *)(v7 + 72);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, a1 + v13 * v9 - v13, a4);
    sub_1B6E32498();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(a1 + v13 * a2, v11, a4);
  }
  return result;
}

uint64_t sub_1B6B3F880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v27 = a5;
  uint64_t v7 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B6E32EA8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = swift_conformsToProtocol2();
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = a3;
  if (!v15) {
    a3 = 0;
  }
  if (a3)
  {
    uint64_t v26 = v17;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v28, v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v29, a4);
    uint64_t v34 = a3;
    uint64_t v35 = v16;
    sub_1B62C12C4(&v32);
    uint64_t v18 = v36;
    sub_1B6AB3BF4((uint64_t)v14, (uint64_t)v9, a3, a4);
    if (v18) {
      return sub_1B6A4A85C((uint64_t)&v32);
    }
    sub_1B62C5560(0, (unint64_t *)&unk_1EB9803B8);
    sub_1B62C5560(0, (unint64_t *)&qword_1EB97FFF0);
    if (swift_dynamicCast()) {
      return sub_1B62C15C4(v30, v27);
    }
    uint64_t v31 = 0;
    memset(v30, 0, sizeof(v30));
    sub_1B6B47510((uint64_t)v30, (uint64_t (*)(void))sub_1B6B47570);
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v32 = 0xD000000000000010;
    unint64_t v33 = 0x80000001B6F4A420;
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v24 = v32;
    unint64_t v25 = v33;
    sub_1B67CD358();
    swift_allocError();
    *(void *)uint64_t v22 = v24;
    *(void *)(v22 + 8) = v25;
    char v23 = 32;
  }
  else
  {
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v32 = 0xD000000000000010;
    unint64_t v33 = 0x80000001B6F4A420;
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v20 = v32;
    unint64_t v21 = v33;
    sub_1B67CD358();
    swift_allocError();
    *(void *)uint64_t v22 = v20;
    *(void *)(v22 + 8) = v21;
    char v23 = 64;
  }
  *(unsigned char *)(v22 + 16) = v23;
  return swift_willThrow();
}

uint64_t sub_1B6B3FC30(void *a1, uint64_t a2)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_1B62C14BC(a1, v4);
  LODWORD(v4) = *(unsigned __int8 *)(sub_1B6C71584(v4, v5) + 85);
  swift_release();
  if (v4 == 1)
  {
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[4];
    sub_1B62C14BC(a1, v6);
    sub_1B6C71584(v6, v7);
    sub_1B6C734D0(a2);
    swift_release();
    sub_1B62C550C((uint64_t)v9, v10);
    sub_1B6E335D8();
  }
  else
  {
    sub_1B6C82C84();
    sub_1B62C550C((uint64_t)v9, v10);
    sub_1B6E33578();
    swift_bridgeObjectRelease();
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v9);
}

uint64_t sub_1B6B3FD88(void *a1)
{
  return sub_1B6B3FC30(a1, *v1);
}

uint64_t sub_1B6B3FDA4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t result = swift_conformsToProtocol2();
    if (result) {
      return v2 == v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B6B3FE14(void *a1)
{
  uint64_t v2 = *v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  uint64_t v6 = v2;
  sub_1B62C550C((uint64_t)v4, v5);
  sub_1B67CD420();
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

char *sub_1B6B3FEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44220(a1, a3, a4, a6, a7);
}

double sub_1B6B3FEE4(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 208);
  v19[12] = *(_OWORD *)(v1 + 192);
  v19[13] = v3;
  v19[14] = *(_OWORD *)(v1 + 224);
  uint64_t v20 = *(void *)(v1 + 240);
  long long v4 = *(_OWORD *)(v1 + 144);
  v19[8] = *(_OWORD *)(v1 + 128);
  v19[9] = v4;
  long long v5 = *(_OWORD *)(v1 + 176);
  v19[10] = *(_OWORD *)(v1 + 160);
  v19[11] = v5;
  long long v6 = *(_OWORD *)(v1 + 80);
  v19[4] = *(_OWORD *)(v1 + 64);
  v19[5] = v6;
  long long v7 = *(_OWORD *)(v1 + 112);
  v19[6] = *(_OWORD *)(v1 + 96);
  v19[7] = v7;
  long long v8 = *(_OWORD *)(v1 + 16);
  v19[0] = *(_OWORD *)v1;
  v19[1] = v8;
  long long v9 = *(_OWORD *)(v1 + 48);
  v19[2] = *(_OWORD *)(v1 + 32);
  uint64_t v19[3] = v9;
  sub_1B63427E4((uint64_t)v19);
  sub_1B62CAAD8(a1, (uint64_t)&v18);
  swift_dynamicCast();
  long long v10 = v34;
  *(_OWORD *)(v1 + 192) = v33;
  *(_OWORD *)(v1 + 208) = v10;
  *(_OWORD *)(v1 + 224) = v35;
  *(void *)(v1 + 240) = v36;
  long long v11 = v30;
  *(_OWORD *)(v1 + 128) = v29;
  *(_OWORD *)(v1 + 144) = v11;
  long long v12 = v32;
  *(_OWORD *)(v1 + 160) = v31;
  *(_OWORD *)(v1 + 176) = v12;
  long long v13 = v26;
  *(_OWORD *)(v1 + 64) = v25;
  *(_OWORD *)(v1 + 80) = v13;
  long long v14 = v28;
  *(_OWORD *)(v1 + 96) = v27;
  *(_OWORD *)(v1 + 112) = v14;
  long long v15 = v22;
  *(_OWORD *)uint64_t v1 = v21;
  *(_OWORD *)(v1 + 16) = v15;
  double result = *(double *)&v23;
  long long v17 = v24;
  *(_OWORD *)(v1 + 32) = v23;
  *(_OWORD *)(v1 + 48) = v17;
  return result;
}

double sub_1B6B3FFE0(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  double result = *(double *)&v3;
  *(_OWORD *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 16) = v4;
  return result;
}

char *sub_1B6B40040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44B3C(a1, a3, a4, a6, a7);
}

double sub_1B6B40068(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRelease();
  sub_1B62C6A50(v3);
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v13);
  swift_dynamicCast();
  double result = *(double *)&v5;
  *(_OWORD *)uint64_t v1 = v5;
  *(_OWORD *)(v1 + 16) = v6;
  *(_DWORD *)(v1 + 32) = v7;
  *(unsigned char *)(v1 + 36) = v8;
  *(unsigned char *)(v1 + 37) = v9;
  *(unsigned char *)(v1 + 38) = v10;
  *(void *)(v1 + 40) = v11;
  *(void *)(v1 + 48) = v12;
  return result;
}

unint64_t sub_1B6B40124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45570(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B401E4(a1, a2, a3, (void (*)(uint64_t))sub_1B6879308, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B46174);
}

unint64_t sub_1B6B40184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45570(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B401B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B401E4(a1, a2, a3, (void (*)(uint64_t))sub_1B6879214, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B46118);
}

uint64_t sub_1B6B401E4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t (*a5)(unsigned char *, uint64_t))
{
  a4(v5);
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  return a5(v9, v5);
}

unint64_t sub_1B6B40264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45570(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B40C58(a1, a2, a3, (void (*)(uint64_t))sub_1B6B463B8, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B4640C);
}

unint64_t sub_1B6B402C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45BC8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B402F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B407E0(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46468, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B464BC);
}

unint64_t sub_1B6B40324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45BC8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B407E0(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46518, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B4656C);
}

unint64_t sub_1B6B40384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45BC8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B403B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B407E0(a1, a2, a3, (void (*)(uint64_t))sub_1B6B465C8, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B4661C);
}

unint64_t sub_1B6B403E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45BC8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B407E0(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46678, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B466CC);
}

unint64_t sub_1B6B40444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45BC8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B407E0(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46728, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B4677C);
}

unint64_t sub_1B6B404A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45BC8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B404D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B407E0(a1, a2, a3, (void (*)(uint64_t))sub_1B6B467D8, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B4682C);
}

unint64_t sub_1B6B40504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45BC8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B407E0(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46888, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B468DC);
}

unint64_t sub_1B6B40564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45BC8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B407E0(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46938, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B4698C);
}

unint64_t sub_1B6B405C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45BC8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B405F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B407E0(a1, a2, a3, (void (*)(uint64_t))sub_1B6B469E8, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B46A3C);
}

unint64_t sub_1B6B40624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45BC8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B407E0(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46A98, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B46AEC);
}

unint64_t sub_1B6B40684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45800(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B406AC(uint64_t a1)
{
  sub_1B6B46B48(v1);
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  return sub_1B6B46B9C((uint64_t)v4, v1);
}

unint64_t sub_1B6B40720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45570(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B40C58(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46BF8, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B46C4C);
}

unint64_t sub_1B6B40780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45BC8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B407B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B407E0(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46CA8, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B46CFC);
}

uint64_t sub_1B6B407E0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t (*a5)(unsigned char *, uint64_t))
{
  a4(v5);
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  return a5(v9, v5);
}

unint64_t sub_1B6B40860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45570(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B40C58(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46D58, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B46DAC);
}

unint64_t sub_1B6B408C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44700(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B408E8(uint64_t a1)
{
  sub_1B6B45DA8(v1);
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  return sub_1B6B45DFC((uint64_t)&v4, v1);
}

unint64_t sub_1B6B4095C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B442B8(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40984(uint64_t a1)
{
  sub_1B6B45E58(v1);
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  return sub_1B6B45EAC((uint64_t)&v4, v1);
}

unint64_t sub_1B6B409F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B4574C(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B40B78(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46E08, (uint64_t (*)(uint64_t *, uint64_t))sub_1B6B46E5C);
}

unint64_t sub_1B6B40A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B4574C(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B40B78(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46EB8, (uint64_t (*)(uint64_t *, uint64_t))sub_1B6B46F0C);
}

unint64_t sub_1B6B40AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B4574C(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B40B78(a1, a2, a3, (void (*)(uint64_t))sub_1B6B46F68, (uint64_t (*)(uint64_t *, uint64_t))sub_1B6B46FBC);
}

unint64_t sub_1B6B40B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B4574C(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B40B78(a1, a2, a3, (void (*)(uint64_t))sub_1B6B47018, (uint64_t (*)(uint64_t *, uint64_t))sub_1B6B4706C);
}

uint64_t sub_1B6B40B78(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t *, uint64_t))
{
  a4(v5);
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  return a5(&v9, v5);
}

unint64_t sub_1B6B40BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45570(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B40C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B40C58(a1, a2, a3, (void (*)(uint64_t))sub_1B6B45F08, (uint64_t (*)(unsigned char *, uint64_t))sub_1B6B45F5C);
}

uint64_t sub_1B6B40C58(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t (*a5)(unsigned char *, uint64_t))
{
  a4(v5);
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  return a5(v9, v5);
}

float sub_1B6B40CD8(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v15);
  swift_dynamicCast();
  float result = v6;
  *(void *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 12) = v5;
  *(float *)(v1 + 16) = v6;
  *(unsigned char *)(v1 + 20) = v7;
  *(_DWORD *)(v1 + 24) = v8;
  *(unsigned char *)(v1 + 28) = v9;
  *(unsigned char *)(v1 + 29) = v10;
  *(unsigned char *)(v1 + 30) = v11;
  *(unsigned char *)(v1 + 31) = v12;
  *(_DWORD *)(v1 + 32) = v13;
  *(unsigned char *)(v1 + 36) = v14;
  return result;
}

double sub_1B6B40D88(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  double result = v3;
  *(double *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 8) = v4;
  *(_OWORD *)(v1 + 16) = v5;
  return result;
}

double sub_1B6B40DF0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  double result = v4;
  double *v1 = v4;
  *((void *)v1 + 1) = v5;
  return result;
}

char *sub_1B6B40E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44DBC(a1, a3, a4, a6, a7);
}

BOOL sub_1B6B40E90(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 != *(void *)a2
      || *(unsigned __int16 *)(a1 + 8) != (unint64_t)*(unsigned __int16 *)(a2 + 8);
}

uint64_t sub_1B6B40EB0(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  uint64_t result = swift_dynamicCast();
  *(void *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 9) = v5;
  return result;
}

double sub_1B6B40F18(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B62CAAD8(a1, (uint64_t)v11);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v5;
  *(void *)(v1 + 16) = v6;
  *(void *)(v1 + 24) = v7;
  double result = *(double *)&v8;
  *(_OWORD *)(v1 + 32) = v8;
  *(void *)(v1 + 48) = v9;
  *(void *)(v1 + 56) = v10;
  return result;
}

double sub_1B6B40FC4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v4;
  *(void *)(v1 + 16) = v5;
  *(void *)(v1 + 24) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(v1 + 32) = v7;
  *(void *)(v1 + 48) = v8;
  return result;
}

double sub_1B6B41064(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  double result = *(double *)&v4;
  *(_OWORD *)uint64_t v1 = v4;
  *(void *)(v1 + 16) = v5;
  *(void *)(v1 + 24) = v6;
  return result;
}

double sub_1B6B410E4(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 16) = v4;
  double result = v5;
  *(double *)(v1 + 20) = v5;
  *(_DWORD *)(v1 + 28) = v6;
  return result;
}

double sub_1B6B41154(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  *(unsigned char *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 4) = v4;
  double result = v5;
  *(double *)(v1 + 8) = v5;
  *(unsigned char *)(v1 + 16) = v6;
  *(void *)(v1 + 24) = v7;
  *(void *)(v1 + 32) = v8;
  *(_DWORD *)(v1 + 40) = v9;
  return result;
}

unint64_t sub_1B6B411D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, (uint64_t (*)(void))type metadata accessor for VFXObjectTag);
}

uint64_t sub_1B6B41210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for VFXObjectTag, (uint64_t (*)(void))type metadata accessor for VFXObjectTag);
}

double sub_1B6B4123C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  double result = *(double *)&v4;
  *(_OWORD *)uint64_t v1 = v4;
  *(void *)(v1 + 16) = v5;
  return result;
}

char *sub_1B6B412B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B4449C(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B412DC(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v10);
  uint64_t result = swift_dynamicCast();
  unsigned char *v1 = v3;
  v1[1] = v4;
  _OWORD v1[2] = v5;
  v1[3] = v6;
  v1[4] = v7;
  v1[5] = v8;
  v1[6] = v9;
  return result;
}

uint64_t sub_1B6B41364(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  uint64_t result = swift_dynamicCast();
  unsigned char *v1 = v3;
  v1[1] = v4;
  _OWORD v1[2] = v5;
  return result;
}

BOOL sub_1B6B413CC(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x61uLL) != 0;
}

double sub_1B6B413F0(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v10);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 16) = v4;
  *(_OWORD *)(v1 + 32) = v5;
  *(_OWORD *)(v1 + 48) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(v1 + 64) = v7;
  *(_OWORD *)(v1 + 80) = v8;
  *(unsigned char *)(v1 + 96) = v9;
  return result;
}

uint64_t sub_1B6B41460(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v4);
  uint64_t result = swift_dynamicCast();
  _DWORD *v1 = v3;
  return result;
}

uint64_t sub_1B6B414B8(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  uint64_t result = swift_dynamicCast();
  *(void *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 8) = v4;
  return result;
}

unint64_t sub_1B6B41518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B458C0(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B41540(uint64_t a1)
{
  sub_1B6B46068(v1);
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  return sub_1B6B460BC((uint64_t)&v4, v1);
}

double sub_1B6B415B4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  *(_WORD *)uint64_t v1 = v4;
  *(unsigned char *)(v1 + 4) = v5;
  *(_DWORD *)(v1 + 8) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(v1 + 16) = v7;
  *(unsigned char *)(v1 + 32) = v8;
  return result;
}

double sub_1B6B4164C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v4;
  *(void *)(v1 + 16) = v5;
  *(unsigned char *)(v1 + 24) = v6;
  double result = v7;
  *(double *)(v1 + 28) = v7;
  return result;
}

char *sub_1B6B416E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45158(a1, a3, a4, a6, a7);
}

BOOL sub_1B6B4170C(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x41uLL) != 0;
}

double sub_1B6B41730(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 16) = v4;
  double result = *(double *)&v5;
  *(_OWORD *)(v1 + 32) = v5;
  *(_OWORD *)(v1 + 48) = v6;
  *(unsigned char *)(v1 + 64) = v7;
  return result;
}

float sub_1B6B41798(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  float result = v4;
  *(_OWORD *)uint64_t v1 = v3;
  *(float *)(v1 + 16) = v4;
  *(_DWORD *)(v1 + 20) = v5;
  return result;
}

float sub_1B6B41800(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  float result = v4;
  *(float *)uint64_t v1 = v4;
  *(void *)(v1 + 8) = v5;
  return result;
}

char *sub_1B6B41878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B440F8(a1, a3, a4, a6, a7);
}

double sub_1B6B418A0(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v4;
  *(_OWORD *)(v1 + 8) = v5;
  double result = *(double *)&v6;
  *(_OWORD *)(v1 + 24) = v6;
  return result;
}

char *sub_1B6B41940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44A0C(a1, a3, a4, a6, a7);
}

BOOL sub_1B6B41968(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x50uLL) != 0;
}

__n128 sub_1B6B4198C(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  __n128 result = v4;
  *(void *)uint64_t v1 = v3;
  *(__n128 *)(v1 + 16) = v4;
  *(_OWORD *)(v1 + 32) = v5;
  *(_OWORD *)(v1 + 48) = v6;
  *(_OWORD *)(v1 + 64) = v7;
  return result;
}

double sub_1B6B419F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B41A0C(a1, a2, a3, MEMORY[0x1E4FBC8D0]);
}

double sub_1B6B41A0C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*((void *)v4 + 1));
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  double result = v7;
  *__n128 v4 = v7;
  *((void *)v4 + 1) = v8;
  return result;
}

float sub_1B6B41A88(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  float result = v5;
  *(_OWORD *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(float *)(v1 + 20) = v5;
  return result;
}

double sub_1B6B41AF0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v4;
  *(unsigned char *)(v1 + 8) = v5;
  double result = *(double *)&v6;
  *(_OWORD *)(v1 + 16) = v6;
  *(void *)(v1 + 32) = v7;
  *(unsigned char *)(v1 + 40) = v8;
  return result;
}

double sub_1B6B41B90(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  double result = *(double *)&v3;
  *(_OWORD *)uint64_t v1 = v3;
  *(void *)(v1 + 16) = v4;
  *(_OWORD *)(v1 + 32) = v5;
  return result;
}

double sub_1B6B41BF8(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  *(unsigned char *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 16) = v4;
  double result = v5;
  *(double *)(v1 + 32) = v5;
  *(_DWORD *)(v1 + 40) = v6;
  *(void *)(v1 + 48) = v7;
  *(_DWORD *)(v1 + 56) = v8;
  return result;
}

unint64_t sub_1B6B41C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for SceneKitAsset);
}

uint64_t sub_1B6B41CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for SceneKitAsset, type metadata accessor for SceneKitAsset);
}

unint64_t sub_1B6B41CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, type metadata accessor for SceneKitRenderer);
}

uint64_t sub_1B6B41D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for SceneKitRenderer, type metadata accessor for SceneKitRenderer);
}

double sub_1B6B41D48(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  double result = *(double *)&v5;
  *(_OWORD *)(v1 + 16) = v5;
  return result;
}

uint64_t sub_1B6B41DB0(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v4);
  uint64_t result = swift_dynamicCast();
  unsigned char *v1 = v3;
  return result;
}

double sub_1B6B41E08(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  double result = *(double *)&v4;
  _OWORD *v1 = v4;
  v1[1] = v5;
  return result;
}

BOOL sub_1B6B41E90(void *a1, void *a2)
{
  return *a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2] || a1[3] != a2[3];
}

float sub_1B6B41EB8(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  float result = v3;
  *(float *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 16) = v4;
  return result;
}

float sub_1B6B41F18(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  float result = v4;
  *(void *)uint64_t v1 = v3;
  *(float *)(v1 + 8) = v4;
  *(_OWORD *)(v1 + 16) = v5;
  return result;
}

BOOL sub_1B6B41F80(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 != *(void *)a2 || *(_DWORD *)(a1 + 8) != (unint64_t)*(unsigned int *)(a2 + 8);
}

float sub_1B6B41FA0(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  float result = v4;
  *(void *)uint64_t v1 = v3;
  *(float *)(v1 + 8) = v4;
  return result;
}

double sub_1B6B42000(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  double result = v4;
  *(double *)(v1 + 16) = v4;
  *(unsigned char *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 25) = v6;
  *(void *)(v1 + 28) = v7;
  *(unsigned char *)(v1 + 36) = v8;
  return result;
}

double sub_1B6B42080(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  double result = *(double *)&v4;
  *(_OWORD *)uint64_t v1 = v4;
  *(void *)(v1 + 16) = v5;
  *(void *)(v1 + 24) = v6;
  return result;
}

unint64_t sub_1B6B42100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44C68(a1, a3, a4, a6, a7);
}

uint64_t sub_1B6B42128(uint64_t a1)
{
  sub_1B6B45FB8(v1);
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  return sub_1B6B4600C((uint64_t)&v4, v1);
}

double sub_1B6B4219C(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  double result = v3;
  *(double *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 16) = v5;
  *(_WORD *)(v1 + 18) = v6;
  *(void *)(v1 + 24) = v7;
  return result;
}

double sub_1B6B42214(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v4;
  double result = *(double *)&v5;
  *(_OWORD *)(v1 + 8) = v5;
  return result;
}

BOOL sub_1B6B42294(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 != *(void *)a2
      || *(void *)(a1 + 8) != *(void *)(a2 + 8)
      || *(void *)(a1 + 16) != *(void *)(a2 + 16)
      || *(void *)(a1 + 24) != *(void *)(a2 + 24)
      || *(_DWORD *)(a1 + 32) != (unint64_t)*(unsigned int *)(a2 + 32);
}

float sub_1B6B422C8(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v12);
  swift_dynamicCast();
  float result = v11;
  *(_OWORD *)uint64_t v1 = v3;
  *(void *)(v1 + 16) = v4;
  *(unsigned char *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 25) = v6;
  *(unsigned char *)(v1 + 26) = v7;
  *(unsigned char *)(v1 + 27) = v8;
  *(unsigned char *)(v1 + 28) = v9;
  *(unsigned char *)(v1 + 29) = v10;
  *(float *)(v1 + 32) = v11;
  return result;
}

double sub_1B6B42360(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  double result = v3;
  *(double *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 9) = v5;
  *(unsigned char *)(v1 + 10) = v6;
  *(unsigned char *)(v1 + 11) = v7;
  return result;
}

BOOL sub_1B6B423D8(__n128 *a1, __n128 *a2)
{
  return !sub_1B684C608(*a1, a1[1], *a2, a2[1]);
}

double sub_1B6B42400(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  *(unsigned char *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 4) = v4;
  *(unsigned char *)(v1 + 8) = v5;
  *(_OWORD *)(v1 + 12) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(v1 + 28) = v7;
  return result;
}

__n128 sub_1B6B42478(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  long long v2 = v6[0];
  *(_OWORD *)(v1 + 64) = v5[6];
  *(_OWORD *)(v1 + 80) = v2;
  *(_OWORD *)(v1 + 89) = *(_OWORD *)((char *)v6 + 9);
  long long v3 = v5[3];
  *(_OWORD *)uint64_t v1 = v5[2];
  *(_OWORD *)(v1 + 16) = v3;
  __n128 result = (__n128)v5[5];
  *(_OWORD *)(v1 + 32) = v5[4];
  *(__n128 *)(v1 + 48) = result;
  return result;
}

uint64_t sub_1B6B424E8(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v6);
  uint64_t result = swift_dynamicCast();
  void *v1 = v4;
  v1[1] = v5;
  return result;
}

double sub_1B6B42560(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v3;
  double result = *(double *)&v4;
  *(_OWORD *)(v1 + 8) = v4;
  return result;
}

double sub_1B6B425C0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  double result = *(double *)&v4;
  *(_OWORD *)uint64_t v1 = v4;
  *(void *)(v1 + 16) = v5;
  *(unsigned char *)(v1 + 24) = v6;
  return result;
}

double sub_1B6B42650(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  double result = *(double *)&v4;
  _OWORD *v1 = v4;
  v1[1] = v5;
  return result;
}

double sub_1B6B426C8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  *(unsigned char *)uint64_t v1 = v4;
  double result = *(double *)&v5;
  *(_OWORD *)(v1 + 8) = v5;
  return result;
}

double sub_1B6B42748(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  *(void *)(v1 + 16) = v4;
  *(unsigned char *)(v1 + 24) = v5;
  double result = *(double *)&v6;
  *(_OWORD *)(v1 + 32) = v6;
  *(void *)(v1 + 48) = v7;
  *(_WORD *)(v1 + 56) = v8;
  return result;
}

BOOL sub_1B6B427C8(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 != *(void *)a2
      || *(unsigned __int8 *)(a1 + 8) != (unint64_t)*(unsigned __int8 *)(a2 + 8);
}

uint64_t sub_1B6B427E8(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  uint64_t result = swift_dynamicCast();
  *(_WORD *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 2) = v4;
  *(unsigned char *)(v1 + 3) = v5;
  return result;
}

double sub_1B6B42850(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  double result = *(double *)&v3;
  *(_OWORD *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 16) = v4;
  return result;
}

double sub_1B6B428B4(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  double result = *(double *)&v3;
  *(_OWORD *)uint64_t v1 = v3;
  *(void *)(v1 + 16) = v4;
  *(unsigned char *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 25) = v6;
  return result;
}

double sub_1B6B42924(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v4;
  *(void *)(v1 + 16) = v5;
  *(void *)(v1 + 24) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(v1 + 32) = v7;
  return result;
}

uint64_t sub_1B6B429B4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v5);
  uint64_t result = swift_dynamicCast();
  void *v1 = v4;
  return result;
}

double sub_1B6B42A24(uint64_t a1)
{
  sub_1B665D488(*(void *)v1, *(void *)(v1 + 8));
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  double result = *(double *)&v4;
  *(_OWORD *)uint64_t v1 = v4;
  return result;
}

char *sub_1B6B42A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B44AA4(a1, a3, a4, a6, a7);
}

__n128 sub_1B6B42ABC(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 144);
  unsigned char v14[8] = *(_OWORD *)(v1 + 128);
  _OWORD v14[9] = v3;
  uint64_t v15 = *(void *)(v1 + 160);
  long long v4 = *(_OWORD *)(v1 + 80);
  v14[4] = *(_OWORD *)(v1 + 64);
  v14[5] = v4;
  long long v5 = *(_OWORD *)(v1 + 112);
  v14[6] = *(_OWORD *)(v1 + 96);
  v14[7] = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  v14[0] = *(_OWORD *)v1;
  v14[1] = v6;
  long long v7 = *(_OWORD *)(v1 + 48);
  v14[2] = *(_OWORD *)(v1 + 32);
  void v14[3] = v7;
  sub_1B6AE9D64((uint64_t)v14);
  sub_1B62CAAD8(a1, (uint64_t)&v13);
  swift_dynamicCast();
  long long v8 = v25;
  *(_OWORD *)(v1 + 128) = v24;
  *(_OWORD *)(v1 + 144) = v8;
  *(void *)(v1 + 160) = v26;
  long long v9 = v21;
  *(_OWORD *)(v1 + 64) = v20;
  *(_OWORD *)(v1 + 80) = v9;
  long long v10 = v23;
  *(_OWORD *)(v1 + 96) = v22;
  *(_OWORD *)(v1 + 112) = v10;
  long long v11 = v17;
  *(_OWORD *)uint64_t v1 = v16;
  *(_OWORD *)(v1 + 16) = v11;
  __n128 result = v19;
  *(_OWORD *)(v1 + 32) = v18;
  *(__n128 *)(v1 + 48) = result;
  return result;
}

double sub_1B6B42B88(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v11);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v3;
  *(_WORD *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 10) = v5;
  *(_OWORD *)(v1 + 16) = v6;
  *(_OWORD *)(v1 + 32) = v7;
  double result = *(double *)&v8;
  *(_OWORD *)(v1 + 48) = v8;
  *(void *)(v1 + 64) = v9;
  *(_DWORD *)(v1 + 72) = v10;
  return result;
}

uint64_t sub_1B6B42C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B43780(a1, a2, a3, MEMORY[0x1E4FBC8F8]);
}

char *sub_1B6B42C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B445D4(a1, a3, a4, a6, a7);
}

double sub_1B6B42C50(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v16);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v4;
  *(void *)(v1 + 16) = v5;
  *(unsigned char *)(v1 + 24) = v6;
  *(void *)(v1 + 32) = v7;
  *(_WORD *)(v1 + 40) = v8;
  *(unsigned char *)(v1 + 42) = v9;
  *(_OWORD *)(v1 + 48) = v10;
  *(_OWORD *)(v1 + 64) = v11;
  double result = *(double *)&v12;
  *(_OWORD *)(v1 + 80) = v12;
  *(void *)(v1 + 96) = v13;
  *(_DWORD *)(v1 + 104) = v14;
  *(void *)(v1 + 112) = v15;
  return result;
}

double sub_1B6B42D1C(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  double result = *(double *)&v3;
  _OWORD *v1 = v3;
  v1[1] = v4;
  _OWORD v1[2] = v5;
  v1[3] = v6;
  return result;
}

BOOL sub_1B6B42D7C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v12 = a2[4];
  uint64_t v13 = a2[5];
  return v2 != v4 || v3 != v5 || v6 != v8 || v7 != v9 || v10 != v12 || v11 != v13;
}

double sub_1B6B42DB4(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v8);
  swift_dynamicCast();
  double result = v7;
  *(_OWORD *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 16) = v4;
  *(unsigned char *)(v1 + 32) = v5;
  *(unsigned char *)(v1 + 33) = v6;
  *(double *)(v1 + 40) = v7;
  return result;
}

char *sub_1B6B42E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B447BC(a1, a3, a4, a6, a7);
}

double sub_1B6B42E4C(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  *(_DWORD *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 4) = v4;
  double result = v5;
  *(double *)(v1 + 8) = v5;
  *(unsigned char *)(v1 + 16) = v6;
  return result;
}

double sub_1B6B42EBC(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v4);
  swift_dynamicCast();
  double result = v3;
  double *v1 = v3;
  return result;
}

BOOL sub_1B6B42F14(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v12 = a2[4];
  uint64_t v13 = a2[5];
  uint64_t v14 = a1[6];
  uint64_t v15 = a2[6];
  uint64_t v16 = *((unsigned __int8 *)a1 + 56);
  uint64_t v17 = *((unsigned __int8 *)a2 + 56);
  return v2 != v4 || v3 != v5 || v6 != v8 || v7 != v9 || v10 != v12 || v11 != v13 || v14 != v15 || v16 != v17;
}

double sub_1B6B42F64(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v9);
  swift_dynamicCast();
  *(_DWORD *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  *(void *)(v1 + 16) = v5;
  *(_OWORD *)(v1 + 32) = v6;
  double result = v7;
  *(double *)(v1 + 48) = v7;
  *(unsigned char *)(v1 + 56) = v8;
  return result;
}

float sub_1B6B42FE4(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  float result = v3;
  *(float *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 4) = v4;
  *(void *)(v1 + 8) = v5;
  return result;
}

BOOL sub_1B6B4304C(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x6CuLL) != 0;
}

double sub_1B6B43070(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v12);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 8) = v4;
  *(_OWORD *)(v1 + 16) = v5;
  *(_DWORD *)(v1 + 32) = v6;
  *(_OWORD *)(v1 + 48) = v7;
  *(_DWORD *)(v1 + 64) = v8;
  *(_OWORD *)(v1 + 80) = v9;
  double result = v10;
  *(double *)(v1 + 96) = v10;
  *(_DWORD *)(v1 + 104) = v11;
  return result;
}

BOOL sub_1B6B43108(_DWORD *a1, _DWORD *a2)
{
  return *a1 != *a2;
}

double sub_1B6B4311C(uint64_t a1)
{
  swift_release();
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  *(void *)uint64_t v1 = v4;
  *(_DWORD *)(v1 + 8) = v5;
  double result = *(double *)&v6;
  *(_OWORD *)(v1 + 16) = v6;
  return result;
}

BOOL sub_1B6B4319C(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 != *(void *)a2
      || *(void *)(a1 + 8) != *(void *)(a2 + 8)
      || *(_DWORD *)(a1 + 16) != (unint64_t)*(unsigned int *)(a2 + 16);
}

double sub_1B6B431C0(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  double result = *(double *)&v3;
  *(_OWORD *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 16) = v4;
  return result;
}

__n128 sub_1B6B43220(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  __n128 result = v4;
  *(void *)uint64_t v1 = v3;
  *(__n128 *)(v1 + 16) = v4;
  *(_OWORD *)(v1 + 32) = v5;
  return result;
}

unint64_t sub_1B6B43280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B45280(a1, a3, a4, a6, a7, (uint64_t (*)(void))type metadata accessor for SDFFileAsset);
}

uint64_t sub_1B6B432BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6B3C948(a1, a2, a3, (uint64_t)type metadata accessor for SDFFileAsset, (uint64_t (*)(void))type metadata accessor for SDFFileAsset);
}

double sub_1B6B432E8(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  double result = *(double *)&v4;
  *(_OWORD *)uint64_t v1 = v4;
  *(_OWORD *)(v1 + 16) = v5;
  *(void *)(v1 + 32) = v6;
  return result;
}

BOOL sub_1B6B43368(void *a1, void *a2)
{
  return *a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2];
}

float sub_1B6B4338C(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  float result = v4;
  *(void *)uint64_t v1 = v3;
  *(float *)(v1 + 8) = v4;
  *(void *)(v1 + 16) = v5;
  return result;
}

double sub_1B6B433F4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v13);
  swift_dynamicCast();
  *(unsigned char *)uint64_t v1 = v4;
  *(_DWORD *)(v1 + 4) = v5;
  *(_DWORD *)(v1 + 8) = v6;
  *(unsigned char *)(v1 + 12) = v7;
  *(_DWORD *)(v1 + 16) = v8;
  *(unsigned char *)(v1 + 20) = v9;
  double result = *(double *)&v10;
  *(_OWORD *)(v1 + 32) = v10;
  *(_OWORD *)(v1 + 48) = v11;
  *(unsigned char *)(v1 + 64) = v12;
  return result;
}

double sub_1B6B434A4(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 16) = v4;
  double result = *(double *)&v5;
  *(_OWORD *)(v1 + 24) = v5;
  return result;
}

char *sub_1B6B4350C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B6B43BC0(a1, a3, a4, a6, a7);
}

double sub_1B6B43534(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B62CAAD8(a1, (uint64_t)v14);
  swift_dynamicCast();
  *(_OWORD *)uint64_t v1 = v4;
  *(_OWORD *)(v1 + 16) = v5;
  *(_OWORD *)(v1 + 32) = v6;
  *(_DWORD *)(v1 + 48) = v7;
  *(unsigned char *)(v1 + 52) = v8;
  *(void *)(v1 + 56) = v9;
  *(unsigned char *)(v1 + 64) = v10;
  *(_OWORD *)(v1 + 72) = v11;
  double result = *(double *)&v12;
  *(_OWORD *)(v1 + 88) = v12;
  *(void *)(v1 + 104) = v13;
  return result;
}

float sub_1B6B43628(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  float result = v3;
  *(float *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 4) = v4;
  return result;
}

uint64_t sub_1B6B43688(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v6);
  uint64_t result = swift_dynamicCast();
  void *v1 = v4;
  v1[1] = v5;
  return result;
}

double sub_1B6B436F8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1B62CAAD8(a1, (uint64_t)v6);
  swift_dynamicCast();
  double result = *(double *)&v4;
  *(_OWORD *)uint64_t v1 = v4;
  *(void *)(v1 + 16) = v5;
  return result;
}

uint64_t sub_1B6B43780(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_1B62CAAD8(a1, (uint64_t)v8);
  uint64_t result = swift_dynamicCast();
  *long long v4 = v7;
  return result;
}

double sub_1B6B437F4(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v5);
  swift_dynamicCast();
  double result = v3;
  *(double *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 8) = v4;
  return result;
}

uint64_t sub_1B6B43854(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)&v2);
  return swift_dynamicCast();
}

float sub_1B6B438A0(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v7);
  swift_dynamicCast();
  float result = v6;
  *(unsigned char *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 4) = v4;
  *(void *)(v1 + 20) = v5;
  *(float *)(v1 + 28) = v6;
  return result;
}

uint64_t sub_1B6B43910(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v4);
  uint64_t result = swift_dynamicCast();
  void *v1 = v3;
  return result;
}

float sub_1B6B43968(uint64_t a1)
{
  sub_1B62CAAD8(a1, (uint64_t)v4);
  swift_dynamicCast();
  float result = v3;
  float *v1 = v3;
  return result;
}

BOOL sub_1B6B439C0(void *a1, void *a2)
{
  return *a1 != *a2 || a1[1] != a2[1];
}

unint64_t sub_1B6B439D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = a1 + 40 * a2;
    unint64_t result = a3 + 40 * a4;
    if (result < v6 || result >= v6 + 40 * a5)
    {
      return swift_arrayInitWithTakeFrontToBack();
    }
    else if (result != v6)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  return result;
}

char *sub_1B6B43A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 36 * a2);
    unint64_t result = (char *)(a3 + 36 * a4);
    if (result != v6 || result >= &v6[36 * a5])
    {
      return (char *)memmove(result, v6, 36 * a5);
    }
  }
  return result;
}

char *sub_1B6B43B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 8 * a2);
    unint64_t result = (char *)(a3 + 8 * a4);
    if (result != v6 || result >= &v6[8 * a5])
    {
      return (char *)memmove(result, v6, 8 * a5);
    }
  }
  return result;
}

char *sub_1B6B43BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 112 * a2);
    unint64_t result = (char *)(a3 + 112 * a4);
    if (result != v6 || result >= &v6[112 * a5])
    {
      return (char *)memmove(result, v6, 112 * a5);
    }
  }
  return result;
}

char *sub_1B6B43C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 16 * a2);
    unint64_t result = (char *)(a3 + 16 * a4);
    if (result != v6 || result >= &v6[16 * a5])
    {
      return (char *)memmove(result, v6, 16 * a5);
    }
  }
  return result;
}

char *sub_1B6B43CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 24 * a2);
    unint64_t result = (char *)(a3 + 24 * a4);
    if (result != v6 || result >= &v6[24 * a5])
    {
      return (char *)memmove(result, v6, 24 * a5);
    }
  }
  return result;
}

char *sub_1B6B43D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 224 * a2);
    unint64_t result = (char *)(a3 + 224 * a4);
    if (result != v6 || result >= &v6[224 * a5])
    {
      return (char *)memmove(result, v6, 224 * a5);
    }
  }
  return result;
}

char *sub_1B6B43E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 4 * a2);
    unint64_t result = (char *)(a3 + 4 * a4);
    if (result != v6 || result >= &v6[4 * a5])
    {
      return (char *)memmove(result, v6, 4 * a5);
    }
  }
  return result;
}

char *sub_1B6B43EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 48 * a2);
    unint64_t result = (char *)(a3 + 48 * a4);
    if (result != v6 || result >= &v6[48 * a5])
    {
      return (char *)memmove(result, v6, 48 * a5);
    }
  }
  return result;
}

char *sub_1B6B43F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 656 * a2);
    unint64_t result = (char *)(a3 + 656 * a4);
    if (result != v6 || result >= &v6[656 * a5])
    {
      return (char *)memmove(result, v6, 656 * a5);
    }
  }
  return result;
}

char *sub_1B6B43FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 56 * a2);
    unint64_t result = (char *)(a3 + 56 * a4);
    if (result != v6 || result >= &v6[56 * a5])
    {
      return (char *)memmove(result, v6, 56 * a5);
    }
  }
  return result;
}

char *sub_1B6B44068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 32 * a2);
    unint64_t result = (char *)(a3 + 32 * a4);
    if (result != v6 || result >= &v6[32 * a5])
    {
      return (char *)memmove(result, v6, 32 * a5);
    }
  }
  return result;
}

char *sub_1B6B440F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 40 * a2);
    unint64_t result = (char *)(a3 + 40 * a4);
    if (result != v6 || result >= &v6[40 * a5])
    {
      return (char *)memmove(result, v6, 40 * a5);
    }
  }
  return result;
}

char *sub_1B6B44190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + (a2 << 7));
    unint64_t result = (char *)(a3 + (a4 << 7));
    if (result != v6 || result >= &v6[128 * a5])
    {
      return (char *)memmove(result, v6, a5 << 7);
    }
  }
  return result;
}

char *sub_1B6B44220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 248 * a2);
    unint64_t result = (char *)(a3 + 248 * a4);
    if (result != v6 || result >= &v6[248 * a5])
    {
      return (char *)memmove(result, v6, 248 * a5);
    }
  }
  return result;
}

unint64_t sub_1B6B442B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = a1 + 48 * a2;
    unint64_t result = a3 + 48 * a4;
    if (result < v6 || result >= v6 + 48 * a5)
    {
      return swift_arrayInitWithTakeFrontToBack();
    }
    else if (result != v6)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  return result;
}

char *sub_1B6B44378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + (a2 << 6));
    unint64_t result = (char *)(a3 + (a4 << 6));
    if (result != v6 || result >= &v6[64 * a5])
    {
      return (char *)memmove(result, v6, a5 << 6);
    }
  }
  return result;
}

char *sub_1B6B44408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 24 * a2);
    unint64_t result = (char *)(a3 + 24 * a4);
    if (result != v6 || result >= &v6[24 * a5])
    {
      return (char *)memmove(result, v6, 24 * a5);
    }
  }
  return result;
}

char *sub_1B6B4449C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 - a2 + 8 * a2);
    unint64_t result = (char *)(a3 - a4 + 8 * a4);
    if (result != v6 || result >= &v6[8 * a5 - a5])
    {
      return (char *)memmove(result, v6, 7 * a5);
    }
  }
  return result;
}

char *sub_1B6B4453C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 12 * a2);
    unint64_t result = (char *)(a3 + 12 * a4);
    if (result != v6 || result >= &v6[12 * a5])
    {
      return (char *)memmove(result, v6, 12 * a5);
    }
  }
  return result;
}

char *sub_1B6B445D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 120 * a2);
    unint64_t result = (char *)(a3 + 120 * a4);
    if (result != v6 || result >= &v6[120 * a5])
    {
      return (char *)memmove(result, v6, 120 * a5);
    }
  }
  return result;
}

char *sub_1B6B4466C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 88 * a2);
    unint64_t result = (char *)(a3 + 88 * a4);
    if (result != v6 || result >= &v6[88 * a5])
    {
      return (char *)memmove(result, v6, 88 * a5);
    }
  }
  return result;
}

unint64_t sub_1B6B44700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = a1 + (a2 << 6);
    unint64_t result = a3 + (a4 << 6);
    if (result < v6 || result >= v6 + (a5 << 6))
    {
      return swift_arrayInitWithTakeFrontToBack();
    }
    else if (result != v6)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  return result;
}

char *sub_1B6B447BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 20 * a2);
    unint64_t result = (char *)(a3 + 20 * a4);
    if (result != v6 || result >= &v6[20 * a5])
    {
      return (char *)memmove(result, v6, 20 * a5);
    }
  }
  return result;
}

char *sub_1B6B44850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 44 * a2);
    unint64_t result = (char *)(a3 + 44 * a4);
    if (result != v6 || result >= &v6[44 * a5])
    {
      return (char *)memmove(result, v6, 44 * a5);
    }
  }
  return result;
}

char *sub_1B6B448E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + (a2 << 7));
    unint64_t result = (char *)(a3 + (a4 << 7));
    size_t v8 = a5 << 7;
    if (result != v6 || result >= &v6[v8])
    {
      return (char *)memmove(result, v6, v8);
    }
  }
  return result;
}

char *sub_1B6B44978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 176 * a2);
    unint64_t result = (char *)(a3 + 176 * a4);
    if (result != v6 || result >= &v6[176 * a5])
    {
      return (char *)memmove(result, v6, 176 * a5);
    }
  }
  return result;
}

char *sub_1B6B44A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 80 * a2);
    unint64_t result = (char *)(a3 + 80 * a4);
    if (result != v6 || result >= &v6[80 * a5])
    {
      return (char *)memmove(result, v6, 80 * a5);
    }
  }
  return result;
}

char *sub_1B6B44AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 168 * a2);
    unint64_t result = (char *)(a3 + 168 * a4);
    if (result != v6 || result >= &v6[168 * a5])
    {
      return (char *)memmove(result, v6, 168 * a5);
    }
  }
  return result;
}

char *sub_1B6B44B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 56 * a2);
    unint64_t result = (char *)(a3 + 56 * a4);
    if (result != v6 || result >= &v6[56 * a5])
    {
      return (char *)memmove(result, v6, 56 * a5);
    }
  }
  return result;
}

char *sub_1B6B44BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 60 * a2);
    unint64_t result = (char *)(a3 + 60 * a4);
    if (result != v6 || result >= &v6[60 * a5])
    {
      return (char *)memmove(result, v6, 60 * a5);
    }
  }
  return result;
}

unint64_t sub_1B6B44C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = a1 + 48 * a2;
    unint64_t result = a3 + 48 * a4;
    if (result < v6 || result >= v6 + 48 * a5)
    {
      return swift_arrayInitWithTakeFrontToBack();
    }
    else if (result != v6)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  return result;
}

char *sub_1B6B44D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 144 * a2);
    unint64_t result = (char *)(a3 + 144 * a4);
    if (result != v6 || result >= &v6[144 * a5])
    {
      return (char *)memmove(result, v6, 144 * a5);
    }
  }
  return result;
}

char *sub_1B6B44DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 16 * a2);
    unint64_t result = (char *)(a3 + 16 * a4);
    size_t v8 = 16 * a5;
    if (result != v6 || result >= &v6[v8])
    {
      return (char *)memmove(result, v6, v8);
    }
  }
  return result;
}

unint64_t sub_1B6B44E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = a1 + 32 * a2;
    unint64_t result = a3 + 32 * a4;
    if (result < v6 || result >= v6 + 32 * a5)
    {
      return swift_arrayInitWithTakeFrontToBack();
    }
    else if (result != v6)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  return result;
}

char *sub_1B6B44F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 1616 * a2);
    unint64_t result = (char *)(a3 + 1616 * a4);
    if (result != v6 || result >= &v6[1616 * a5])
    {
      return (char *)memmove(result, v6, 1616 * a5);
    }
  }
  return result;
}

char *sub_1B6B44F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 28 * a2);
    unint64_t result = (char *)(a3 + 28 * a4);
    if (result != v6 || result >= &v6[28 * a5])
    {
      return (char *)memmove(result, v6, 28 * a5);
    }
  }
  return result;
}

char *sub_1B6B45034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 2 * a2);
    unint64_t result = (char *)(a3 + 2 * a4);
    if (result != v6 || result >= &v6[2 * a5])
    {
      return (char *)memmove(result, v6, 2 * a5);
    }
  }
  return result;
}

char *sub_1B6B450C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 12 * a2);
    unint64_t result = (char *)(a3 + 12 * a4);
    if (result != v6 || result >= &v6[12 * a5])
    {
      return (char *)memmove(result, v6, 12 * a5);
    }
  }
  return result;
}

char *sub_1B6B45158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 80 * a2);
    unint64_t result = (char *)(a3 + 80 * a4);
    if (result != v6 || result >= &v6[80 * a5])
    {
      return (char *)memmove(result, v6, 80 * a5);
    }
  }
  return result;
}

char *sub_1B6B451EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 112 * a2);
    unint64_t result = (char *)(a3 + 112 * a4);
    if (result != v6 || result >= &v6[112 * a5])
    {
      return (char *)memmove(result, v6, 112 * a5);
    }
  }
  return result;
}

unint64_t sub_1B6B45280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v11 = *(void *)(*(void *)(a6(0) - 8) + 72);
  if (a5 < 0)
  {
    unint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v12 = a1 + v11 * a2;
    unint64_t result = a3 + v11 * a4;
    unint64_t v14 = v12 + v11 * a5;
    if (result < v12 || result >= v14)
    {
      return swift_arrayInitWithTakeFrontToBack();
    }
    else if (result != v12)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  return result;
}

char *sub_1B6B453B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 3 * a2);
    unint64_t result = (char *)(a3 + 3 * a4);
    size_t v8 = 3 * a5;
    if (result != v6 || result >= &v6[v8])
    {
      return (char *)memmove(result, v6, v8);
    }
  }
  return result;
}

char *sub_1B6B4544C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 72 * a2);
    unint64_t result = (char *)(a3 + 72 * a4);
    if (result != v6 || result >= &v6[72 * a5])
    {
      return (char *)memmove(result, v6, 72 * a5);
    }
  }
  return result;
}

char *sub_1B6B454E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 32 * a2);
    unint64_t result = (char *)(a3 + 32 * a4);
    size_t v8 = 32 * a5;
    if (result != v6 || result >= &v6[v8])
    {
      return (char *)memmove(result, v6, v8);
    }
  }
  return result;
}

unint64_t sub_1B6B45570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = a1 + 40 * a2;
    unint64_t result = a3 + 40 * a4;
    if (result < v6 || result >= v6 + 40 * a5)
    {
      return swift_arrayInitWithTakeFrontToBack();
    }
    else if (result != v6)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  return result;
}

char *sub_1B6B45628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, size_t __len)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + a2);
    unint64_t result = (char *)(a3 + a4);
    if ((char *)(a3 + a4) != v6 || result >= &v6[__len])
    {
      return (char *)memmove(result, v6, __len);
    }
  }
  return result;
}

char *sub_1B6B456B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 40 * a2);
    unint64_t result = (char *)(a3 + 40 * a4);
    if (result != v6 || result >= &v6[40 * a5])
    {
      return (char *)memmove(result, v6, 40 * a5);
    }
  }
  return result;
}

unint64_t sub_1B6B4574C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = a1 + 32 * a2;
    unint64_t result = a3 + 32 * a4;
    if (result < v6 || result >= v6 + 32 * a5)
    {
      return swift_arrayInitWithTakeFrontToBack();
    }
    else if (result != v6)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  return result;
}

unint64_t sub_1B6B45800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = a1 + 56 * a2;
    unint64_t result = a3 + 56 * a4;
    if (result < v6 || result >= v6 + 56 * a5)
    {
      return swift_arrayInitWithTakeFrontToBack();
    }
    else if (result != v6)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  return result;
}

unint64_t sub_1B6B458C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = a1 + 16 * a2;
    unint64_t result = a3 + 16 * a4;
    if (result < v6 || result >= v6 + 16 * a5)
    {
      return swift_arrayInitWithTakeFrontToBack();
    }
    else if (result != v6)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  return result;
}

char *sub_1B6B4597C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 96 * a2);
    unint64_t result = (char *)(a3 + 96 * a4);
    if (result != v6 || result >= &v6[96 * a5])
    {
      return (char *)memmove(result, v6, 96 * a5);
    }
  }
  return result;
}

char *sub_1B6B45A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 48 * a2);
    unint64_t result = (char *)(a3 + 48 * a4);
    if (result != v6 || result >= &v6[48 * a5])
    {
      return (char *)memmove(result, v6, 48 * a5);
    }
  }
  return result;
}

char *sub_1B6B45AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 28 * a2);
    unint64_t result = (char *)(a3 + 28 * a4);
    if (result != v6 || result >= &v6[28 * a5])
    {
      return (char *)memmove(result, v6, 28 * a5);
    }
  }
  return result;
}

char *sub_1B6B45B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + (a2 << 6));
    unint64_t result = (char *)(a3 + (a4 << 6));
    size_t v8 = a5 << 6;
    if (result != v6 || result >= &v6[v8])
    {
      return (char *)memmove(result, v6, v8);
    }
  }
  return result;
}

unint64_t sub_1B6B45BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = a1 + 56 * a2;
    unint64_t result = a3 + 56 * a4;
    if (result < v6 || result >= v6 + 56 * a5)
    {
      return swift_arrayInitWithTakeFrontToBack();
    }
    else if (result != v6)
    {
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  return result;
}

char *sub_1B6B45C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 8 * a2);
    unint64_t result = (char *)(a3 + 8 * a4);
    size_t v8 = 8 * a5;
    if (result != v6 || result >= &v6[v8])
    {
      return (char *)memmove(result, v6, v8);
    }
  }
  return result;
}

char *sub_1B6B45D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    unint64_t result = (char *)sub_1B6E32C88();
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)(a1 + 104 * a2);
    unint64_t result = (char *)(a3 + 104 * a4);
    if (result != v6 || result >= &v6[104 * a5])
    {
      return (char *)memmove(result, v6, 104 * a5);
    }
  }
  return result;
}

uint64_t sub_1B6B45DA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B45DFC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B45E58(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B45EAC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B45F08(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B45F5C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B45FB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B4600C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46068(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B460BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46118(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46174(uint64_t a1, uint64_t a2)
{
  return a2;
}

ValueMetadata *type metadata accessor for TypeCoder_pre2035()
{
  return &type metadata for TypeCoder_pre2035;
}

ValueMetadata *type metadata accessor for TypeCoder()
{
  return &type metadata for TypeCoder;
}

ValueMetadata *type metadata accessor for ClassSettings()
{
  return &type metadata for ClassSettings;
}

ValueMetadata *type metadata accessor for MonoChunk()
{
  return &type metadata for MonoChunk;
}

ValueMetadata *type metadata accessor for UnstableOrdering()
{
  return &type metadata for UnstableOrdering;
}

ValueMetadata *type metadata accessor for AnonymousEntity()
{
  return &type metadata for AnonymousEntity;
}

ValueMetadata *type metadata accessor for PropagateDirtiness()
{
  return &type metadata for PropagateDirtiness;
}

ValueMetadata *type metadata accessor for NullEntityComponent()
{
  return &type metadata for NullEntityComponent;
}

unint64_t sub_1B6B4625C()
{
  unint64_t result = qword_1E9DD6078;
  if (!qword_1E9DD6078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6078);
  }
  return result;
}

unint64_t sub_1B6B462B4()
{
  unint64_t result = qword_1E9DD6080;
  if (!qword_1E9DD6080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6080);
  }
  return result;
}

unint64_t sub_1B6B4630C()
{
  unint64_t result = qword_1E9DD6088;
  if (!qword_1E9DD6088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6088);
  }
  return result;
}

unint64_t sub_1B6B46364()
{
  unint64_t result = qword_1E9DD6090;
  if (!qword_1E9DD6090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6090);
  }
  return result;
}

uint64_t sub_1B6B463B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B4640C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46468(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B464BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46518(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B4656C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B465C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B4661C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46678(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B466CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46728(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B4677C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B467D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B4682C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46888(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B468DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46938(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B4698C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B469E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B46A3C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46A98(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B46AEC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46B48(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B46B9C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46BF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B46C4C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46CA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B46CFC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46D58(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B46DAC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46E08(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B46E5C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46EB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B46F0C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B46F68(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B46FBC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B47018(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B6B4706C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B470C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B6B47130(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B6B4718C(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 1336);
  uint64_t v18 = *(void *)(a1 + 1328);
  uint64_t v15 = *(void *)(a1 + 1352);
  uint64_t v16 = *(void *)(a1 + 1344);
  uint64_t v13 = *(void *)(a1 + 1368);
  uint64_t v14 = *(void *)(a1 + 1360);
  uint64_t v11 = *(void *)(a1 + 1384);
  uint64_t v12 = *(void *)(a1 + 1376);
  long long v3 = *(_OWORD *)(a1 + 1408);
  long long v4 = *(_OWORD *)(a1 + 1392);
  uint64_t v9 = *(void *)(a1 + 1440);
  uint64_t v10 = *(void *)(a1 + 1432);
  uint64_t v7 = *(void *)(a1 + 1456);
  uint64_t v8 = *(void *)(a1 + 1448);
  uint64_t v25 = *(void *)(a1 + 1496);
  uint64_t v26 = *(void *)(a1 + 1488);
  uint64_t v23 = *(void *)(a1 + 1512);
  uint64_t v24 = *(void *)(a1 + 1504);
  uint64_t v21 = *(void *)(a1 + 1528);
  uint64_t v22 = *(void *)(a1 + 1520);
  long long v5 = *(_OWORD *)(a1 + 1568);
  long long v6 = *(_OWORD *)(a1 + 1552);
  uint64_t v19 = *(void *)(a1 + 1536);
  uint64_t v20 = *(void *)(a1 + 1544);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1B6B473A4(v18, v17, v16, v15, v14, v13, v12, v11, v4, *((uint64_t *)&v4 + 1), v3);
  sub_1B6B47354(v10, v9, v8, v7);
  sub_1B6B473A4(v26, v25, v24, v23, v22, v21, v19, v20, v6, *((uint64_t *)&v6 + 1), v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B6B47354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B6B473A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result = a11;
  if (a11)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_1B6B473FC()
{
  unint64_t result = qword_1E9DD60A0;
  if (!qword_1E9DD60A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD60A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for NullEntityComponent.CodingKeys()
{
  return &type metadata for NullEntityComponent.CodingKeys;
}

unint64_t sub_1B6B47464()
{
  unint64_t result = qword_1E9DD60A8;
  if (!qword_1E9DD60A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD60A8);
  }
  return result;
}

unint64_t sub_1B6B474BC()
{
  unint64_t result = qword_1E9DD60B0;
  if (!qword_1E9DD60B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD60B0);
  }
  return result;
}

uint64_t sub_1B6B47510(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1B6B47570()
{
  if (!qword_1E9DD3AA0)
  {
    sub_1B62C5560(255, (unint64_t *)&qword_1EB97FFF0);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD3AA0);
    }
  }
}

uint64_t sub_1B6B47610(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x6C6174656DLL;
    }
    else {
      uint64_t v2 = 0x7466697773;
    }
    unint64_t v3 = 0xE500000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x6C6174656DLL;
      }
      else {
        uint64_t v5 = 0x7466697773;
      }
      unint64_t v6 = 0xE500000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE100000000000000;
    uint64_t v2 = 99;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE100000000000000;
  if (v2 != 99)
  {
LABEL_15:
    char v7 = sub_1B6E334B8();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6B47704(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 5459817;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 5459817;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x534F63616DLL;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x534F6863746177;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1397716596;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x534F63616DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x534F6863746177;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1397716596) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6B4786C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x34365F363878;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x34365F363878;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x34366D7261;
      break;
    case 2:
      uint64_t v5 = 0x6534366D7261;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x32335F34366D7261;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x34366D7261) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6534366D7261;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x32335F34366D7261) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6B479DC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E69746C697542;
    }
    else {
      uint64_t v3 = 1919251285;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E69746C697542;
      }
      else {
        uint64_t v6 = 1919251285;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x6C61636F4CLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x6C61636F4CLL)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6B47AE0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1852399949;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1852399949;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6E77617053;
      break;
    case 2:
      uint64_t v5 = 1953066569;
      break;
    case 3:
      uint64_t v5 = 0x656C636974726150;
      unint64_t v3 = 0xEC00000074696E49;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x657461647055;
      break;
    case 5:
      uint64_t v5 = 0x656C636974726150;
      unint64_t v3 = 0xEE00657461647055;
      break;
    case 6:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x7265646E6552;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6E77617053) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      if (v5 != 1953066569) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xEC00000074696E49;
      if (v5 != 0x656C636974726150) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x657461647055) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x656C636974726150;
      unint64_t v6 = 0xEE00657461647055;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x7265646E6552) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1B6B47D14(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E6F697469736F70;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E6F697469736F70;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x797469636F6C6576;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6C616D726F6ELL;
      break;
    case 3:
      uint64_t v5 = 0x7461746E6569726FLL;
      unint64_t v3 = 0xEB000000006E6F69;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x726F6C6F63;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1702521203;
      break;
    case 6:
      uint64_t v5 = 0x646E49746E696F6ALL;
      uint64_t v6 = 1936024425;
      goto LABEL_9;
    case 7:
      uint64_t v5 = 0x696557746E696F6ALL;
      uint64_t v6 = 1937008743;
LABEL_9:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x797469636F6C6576) {
        goto LABEL_23;
      }
      goto LABEL_26;
    case 2:
      unint64_t v7 = 0xE600000000000000;
      if (v5 != 0x6C616D726F6ELL) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 3:
      unint64_t v7 = 0xEB000000006E6F69;
      if (v5 != 0x7461746E6569726FLL) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 4:
      unint64_t v7 = 0xE500000000000000;
      if (v5 != 0x726F6C6F63) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 5:
      unint64_t v7 = 0xE400000000000000;
      if (v5 != 1702521203) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 6:
      uint64_t v2 = 0x646E49746E696F6ALL;
      unint64_t v7 = 0xEC00000073656369;
      goto LABEL_22;
    case 7:
      unint64_t v7 = 0xEC00000073746867;
      if (v5 != 0x696557746E696F6ALL) {
        goto LABEL_26;
      }
      goto LABEL_23;
    default:
LABEL_22:
      if (v5 != v2) {
        goto LABEL_26;
      }
LABEL_23:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_26:
      }
        char v8 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1B6B47FA4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x746E656D67617266;
    }
    else {
      uint64_t v3 = 0x657475706D6F63;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x746E656D67617266;
      }
      else {
        uint64_t v6 = 0x657475706D6F63;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x786574726576;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x786574726576)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B6B480B8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x676E696E726177;
    }
    else {
      uint64_t v3 = 1702129518;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x676E696E726177;
      }
      else {
        uint64_t v6 = 1702129518;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x726F727265;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x726F727265)
  {
LABEL_21:
    char v8 = sub_1B6E334B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t static Target.== infix(_:_:)(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 5459817;
  uint64_t v3 = *a1;
  unsigned __int8 v4 = a1[1];
  char v5 = a2[1];
  unint64_t v6 = 0xE300000000000000;
  uint64_t v7 = 5459817;
  switch(v3)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v7 = 0x534F63616DLL;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v7 = 0x534F6863746177;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v7 = 1397716596;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE300000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v8 = 0xE500000000000000;
      if (v7 == 0x534F63616DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v8 = 0xE700000000000000;
      uint64_t v2 = 0x534F6863746177;
      goto LABEL_9;
    case 3:
      unint64_t v8 = 0xE400000000000000;
      if (v7 == 1397716596) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v7 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_14:
        char v9 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v9 & 1) == 0) {
          return 0;
        }
      }
      return sub_1B6B4786C(v4, v5);
  }
}

uint64_t sub_1B6B4836C(unsigned __int8 *a1, char *a2)
{
  return sub_1B6B4786C(*a1, *a2);
}

uint64_t sub_1B6B48378@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B680E5A8();
  *a1 = result;
  return result;
}

void sub_1B6B483B0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x34365F363878;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x34366D7261;
      goto LABEL_3;
    case 2:
      *a1 = 0x6534366D7261;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x32335F34366D7261;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1B6B4843C()
{
  return sub_1B6E31B98();
}

uint64_t sub_1B6B4849C()
{
  return sub_1B6E31AF8();
}

uint64_t sub_1B6B484EC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B485B8()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B4866C()
{
  return sub_1B6E33988();
}

void sub_1B6B48734(void *a1@<X8>)
{
  *a1 = &unk_1F0FA1F60;
}

uint64_t sub_1B6B48744(unsigned __int8 *a1, char *a2)
{
  return sub_1B6B47704(*a1, *a2);
}

uint64_t sub_1B6B48750@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B680E5A8();
  *a1 = result;
  return result;
}

void sub_1B6B48788(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 5459817;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x534F63616DLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x534F6863746177;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 1397716596;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1B6B48810()
{
  return sub_1B6E31B98();
}

uint64_t sub_1B6B48870()
{
  return sub_1B6E31AF8();
}

uint64_t sub_1B6B488C0()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B48988()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B48A38()
{
  return sub_1B6E33988();
}

void sub_1B6B48AFC(void *a1@<X8>)
{
  *a1 = &unk_1F0FA20A8;
}

uint64_t Target.hash(into:)()
{
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t Target.hashValue.getter()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B48DC8()
{
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B48F1C()
{
  return sub_1B6E33988();
}

unint64_t sub_1B6B49080()
{
  unint64_t result = qword_1E9DD60B8;
  if (!qword_1E9DD60B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD60B8);
  }
  return result;
}

uint64_t sub_1B6B490D4(unsigned __int8 *a1, char *a2)
{
  unsigned __int8 v2 = a1[1];
  char v3 = a2[1];
  if ((sub_1B6B47704(*a1, *a2) & 1) == 0) {
    return 0;
  }

  return sub_1B6B4786C(v2, v3);
}

uint64_t getEnumTagSinglePayload for Target(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 65283 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65283 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65283;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65283;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65283;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Target(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65283 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65283 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 253;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B49290);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Target()
{
  return &type metadata for Target;
}

ValueMetadata *type metadata accessor for Target.Architecture()
{
  return &type metadata for Target.Architecture;
}

unsigned char *_s3VFX6TargetV8PlatformOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B493A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Target.Platform()
{
  return &type metadata for Target.Platform;
}

uint64_t sub_1B6B493E0()
{
  return sub_1B699C708(&qword_1E9DD60C0, &qword_1E9DD60C8);
}

unint64_t sub_1B6B49414()
{
  unint64_t result = qword_1E9DD60D0;
  if (!qword_1E9DD60D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD60D0);
  }
  return result;
}

uint64_t sub_1B6B49468()
{
  return sub_1B699C708(&qword_1E9DD60D8, &qword_1E9DD60E0);
}

unint64_t sub_1B6B4949C()
{
  unint64_t result = qword_1E9DD60E8;
  if (!qword_1E9DD60E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD60E8);
  }
  return result;
}

unint64_t sub_1B6B494F0()
{
  unint64_t result = qword_1E9DD60F0;
  if (!qword_1E9DD60F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD60F0);
  }
  return result;
}

unint64_t sub_1B6B49544()
{
  unint64_t result = qword_1E9DD60F8;
  if (!qword_1E9DD60F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD60F8);
  }
  return result;
}

uint64_t sub_1B6B49598()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6B49600()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B6B49660()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B6B49698()
{
  sub_1B6B49660();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TexturePool()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6B496E4()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6B4971C(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    if (*(void *)(result + 40))
    {
      vfx_counters.add(_:_:)(*(_DWORD *)(result + 136), -1);
      if (*(void *)(v4 + 40)) {
        vfx_counters.add(_:_:)(*(_DWORD *)(v4 + 140), -a2);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6B49794()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6B497CC()
{
  return sub_1B6B4971C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

float32x2_t sub_1B6B497D4(float32x2_t *a1, float32x2_t *a2, float32x2_t *a3, float32x2_t *a4, float32x2_t *a5, float a6)
{
  float32x2_t v6 = vmul_f32(*a5, (float32x2_t)0x3F0000003F000000);
  __asm { FMOV            V6.2S, #1.5 }
  float32x2_t v12 = vmul_f32(*a2, (float32x2_t)0x3F0000003F000000);
  __asm { FMOV            V16.2S, #-2.5 }
  float32x2_t result = vadd_f32(*a3, vadd_f32(vmul_n_f32(vsub_f32(vmul_f32(*a4, (float32x2_t)0x3F0000003F000000), v12), a6), vadd_f32(vmul_n_f32(vsub_f32(vadd_f32(vadd_f32(*a2, vadd_f32(*a4, *a4)), vmul_f32(*a3, _D16)), v6), a6 * a6), vmul_n_f32(vsub_f32(vadd_f32(vmul_f32(*a3, _D6), vsub_f32(v6, vmul_f32(*a4, _D6))), v12), (float)(a6 * a6) * a6))));
  *a1 = result;
  return result;
}

float32x4_t sub_1B6B49850(float32x4_t *a1, float32x4_t *a2, float32x4_t *a3, float32x4_t *a4, float32x4_t *a5, float a6)
{
  v6.i64[0] = 0x3F0000003F000000;
  v6.i64[1] = 0x3F0000003F000000;
  float32x4_t v7 = vmulq_f32(*a5, v6);
  __asm { FMOV            V6.4S, #1.5 }
  float32x4_t v13 = vmulq_f32(*a2, v6);
  __asm { FMOV            V16.4S, #-2.5 }
  float32x4_t result = vaddq_f32(*a3, vaddq_f32(vmulq_n_f32(vsubq_f32(vmulq_f32(*a4, v6), v13), a6), vaddq_f32(vmulq_n_f32(vsubq_f32(vaddq_f32(vmulq_f32(*a3, _Q6), vsubq_f32(v7, vmulq_f32(*a4, _Q6))), v13), (float)(a6 * a6) * a6), vmulq_n_f32(vsubq_f32(vaddq_f32(vaddq_f32(*a2, vaddq_f32(*a4, *a4)), vmulq_f32(*a3, _Q16)), v7), a6 * a6))));
  *a1 = result;
  return result;
}

float32x4_t sub_1B6B498CC(float32x4_t *a1, float32x4_t *a2, float32x4_t *a3, float32x4_t *a4, float32x4_t *a5, float a6)
{
  v6.i64[0] = 0x3F0000003F000000;
  v6.i64[1] = 0x3F0000003F000000;
  float32x4_t v7 = vmulq_f32(*a5, v6);
  __asm { FMOV            V6.4S, #1.5 }
  float32x4_t v13 = vmulq_f32(*a2, v6);
  __asm { FMOV            V16.4S, #-2.5 }
  float32x4_t result = vaddq_f32(*a3, vaddq_f32(vmulq_n_f32(vsubq_f32(vmulq_f32(*a4, v6), v13), a6), vaddq_f32(vmulq_n_f32(vsubq_f32(vaddq_f32(vaddq_f32(*a2, vaddq_f32(*a4, *a4)), vmulq_f32(*a3, _Q16)), v7), a6 * a6), vmulq_n_f32(vsubq_f32(vaddq_f32(vmulq_f32(*a3, _Q6), vsubq_f32(v7, vmulq_f32(*a4, _Q6))), v13), (float)(a6 * a6) * a6))));
  *a1 = result;
  return result;
}

float sub_1B6B49948(float *a1, float *a2, float *a3, float a4)
{
  float result = *a2 + (float)((float)(*a3 - *a2) * a4);
  *a1 = result;
  return result;
}

float32x2_t sub_1B6B49964(float32x2_t *a1, float32x2_t *a2, float32x2_t *a3, float a4)
{
  float32x2_t result = vadd_f32(*a2, vmul_n_f32(vsub_f32(*a3, *a2), a4));
  *a1 = result;
  return result;
}

float32x4_t sub_1B6B49980(float32x4_t *a1, float32x4_t *a2, float32x4_t *a3, float a4)
{
  float32x4_t result = vaddq_f32(*a2, vmulq_n_f32(vsubq_f32(*a3, *a2), a4));
  *a1 = result;
  return result;
}

float32x4_t sub_1B6B4999C(float32x4_t *a1, float32x4_t *a2, float32x4_t *a3, float a4)
{
  float32x4_t v6 = *a2;
  float32x4_t v7 = *a3;
  int8x16_t v8 = (int8x16_t)vmulq_f32(*a2, *a3);
  float32x4_t v61 = *a3;
  float32x4_t v63 = *a2;
  float v9 = 1.0;
  float v10 = 1.0 - a4;
  if (vaddv_f32(vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL))) >= 0.0)
  {
    float32x4_t v31 = vsubq_f32(v6, v7);
    int8x16_t v32 = (int8x16_t)vmulq_f32(v31, v31);
    float32x4_t v33 = vaddq_f32(v6, v7);
    int8x16_t v34 = (int8x16_t)vmulq_f32(v33, v33);
    float v35 = atan2f(sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v32.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v32, v32, 8uLL)))), sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v34.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v34, v34, 8uLL)))));
    float v36 = v35 + v35;
    _ZF = (float)(v35 + v35) == 0.0;
    float v37 = 1.0;
    if (!_ZF) {
      float v37 = sinf(v36) / v36;
    }
    float v38 = v37;
    float32x2_t v39 = vrecpe_f32((float32x2_t)LODWORD(v37));
    float32x2_t v40 = vmul_f32(v39, vrecps_f32((float32x2_t)LODWORD(v38), v39));
    LODWORD(v41) = vmul_f32(v40, vrecps_f32((float32x2_t)LODWORD(v38), v40)).u32[0];
    if ((float)(v10 * v36) != 0.0)
    {
      float v59 = v41;
      v40.f32[0] = sinf(v10 * v36);
      float v41 = v59;
      float v9 = v40.f32[0] / (float)(v10 * v36);
    }
    v40.f32[0] = v10 * (float)(v41 * v9);
    float32x4_t v42 = (float32x4_t)vdupq_lane_s32((int32x2_t)v40, 0);
    float v43 = v36 * a4;
    float v44 = 1.0;
    if (v43 != 0.0)
    {
      float32x4_t v56 = v42;
      float v60 = v41;
      float v45 = sinf(v43);
      float32x4_t v42 = v56;
      float v41 = v60;
      float v44 = v45 / v43;
    }
    float32x4_t v30 = vmlaq_f32(vmulq_n_f32(v61, (float)(v41 * v44) * a4), v63, v42);
  }
  else
  {
    float32x4_t v11 = vaddq_f32(v6, v7);
    int8x16_t v12 = (int8x16_t)vmulq_f32(v11, v11);
    float32x4_t v13 = vsubq_f32(v6, v7);
    int8x16_t v14 = (int8x16_t)vmulq_f32(v13, v13);
    float v15 = atan2f(sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v12.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)))), sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v14.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL)))));
    float v16 = v15 + v15;
    _ZF = (float)(v15 + v15) == 0.0;
    float v18 = 1.0;
    if (!_ZF) {
      float v18 = sinf(v16) / v16;
    }
    float v19 = v18;
    float32x2_t v20 = vrecpe_f32((float32x2_t)LODWORD(v18));
    float32x2_t v21 = vmul_f32(v20, vrecps_f32((float32x2_t)LODWORD(v19), v20));
    LODWORD(v22) = vmul_f32(v21, vrecps_f32((float32x2_t)LODWORD(v19), v21)).u32[0];
    if ((float)(v10 * v16) != 0.0)
    {
      float v57 = v22;
      float v23 = sinf(v10 * v16);
      float v22 = v57;
      float v9 = v23 / (float)(v10 * v16);
    }
    v24.i32[1] = v61.i32[1];
    float32x4_t v25 = vnegq_f32(v61);
    *(float *)v24.i32 = v10 * (float)(v22 * v9);
    float32x4_t v26 = (float32x4_t)vdupq_lane_s32(v24, 0);
    float v27 = v16 * a4;
    float v28 = 1.0;
    if (v27 != 0.0)
    {
      float v58 = v22;
      float32x4_t v62 = v25;
      float32x4_t v55 = v26;
      float v29 = sinf(v27);
      float32x4_t v26 = v55;
      float v22 = v58;
      float32x4_t v25 = v62;
      float v28 = v29 / v27;
    }
    float32x4_t v30 = vmlaq_f32(vmulq_n_f32(v25, (float)(v22 * v28) * a4), v63, v26);
  }
  int8x16_t v46 = (int8x16_t)vmulq_f32(v30, v30);
  *(float32x2_t *)v46.i8 = vadd_f32(*(float32x2_t *)v46.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v46, v46, 8uLL));
  float32x4_t v47 = (float32x4_t)vdupq_lane_s32((int32x2_t)vadd_f32(*(float32x2_t *)v46.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v46.i8, 1)), 0);
  float32x4_t v48 = vrsqrteq_f32(v47);
  float32x4_t v49 = vmulq_f32(v48, vrsqrtsq_f32(v47, vmulq_f32(v48, v48)));
  __asm { FMOV            V3.4S, #1.0 }
  float32x4_t result = vmulq_f32(v30, (float32x4_t)vbslq_s8((int8x16_t)vceqzq_f32(v47), _Q3, (int8x16_t)vmulq_f32(v49, vrsqrtsq_f32(v47, vmulq_f32(v49, v49)))));
  *a1 = result;
  return result;
}

char *sub_1B6B49C0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, float a5)
{
  uint64_t v10 = *(void *)(a2 + 16);
  if (v10) {
    float v11 = *(float *)(a2 + 4 * v10 + 28);
  }
  else {
    float v11 = 0.0;
  }
  BOOL v12 = v11 >= 0.0;
  if (a5 > 0.0) {
    BOOL v12 = v11 <= 0.0;
  }
  if (v12)
  {
    float32x4_t v13 = (char *)MEMORY[0x1E4FBC860];
    int8x16_t v14 = (char *)MEMORY[0x1E4FBC860];
  }
  else
  {
    int8x16_t v14 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v19 = 1;
    float32x4_t v13 = (char *)MEMORY[0x1E4FBC860];
    float v20 = 0.0;
    do
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        float32x4_t v13 = sub_1B6397840(0, *((void *)v13 + 2) + 1, 1, v13);
      }
      unint64_t v22 = *((void *)v13 + 2);
      unint64_t v21 = *((void *)v13 + 3);
      if (v22 >= v21 >> 1) {
        float32x4_t v13 = sub_1B6397840(v21 > 1, v22 + 1, 1, v13);
      }
      *((void *)v13 + 2) = v22 + 1;
      *(float *)&v13[4 * v22 + 32] = v20;
      sub_1B631A2E0(a1, a2, a3, a4, v20);
      int v24 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int8x16_t v14 = sub_1B6397840(0, *((void *)v14 + 2) + 1, 1, v14);
      }
      unint64_t v26 = *((void *)v14 + 2);
      unint64_t v25 = *((void *)v14 + 3);
      if (v26 >= v25 >> 1) {
        int8x16_t v14 = sub_1B6397840(v25 > 1, v26 + 1, 1, v14);
      }
      float v20 = (float)((float)v19 * a5) + 0.0;
      *((void *)v14 + 2) = v26 + 1;
      *(_DWORD *)&v14[4 * v26 + 32] = v24;
      BOOL v27 = v20 <= v11;
      if (a5 > 0.0) {
        BOOL v27 = v11 <= v20;
      }
      ++v19;
    }
    while (!v27);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    float32x4_t v13 = sub_1B6397840(0, *((void *)v13 + 2) + 1, 1, v13);
  }
  unint64_t v16 = *((void *)v13 + 2);
  unint64_t v15 = *((void *)v13 + 3);
  if (v16 >= v15 >> 1) {
    float32x4_t v13 = sub_1B6397840(v15 > 1, v16 + 1, 1, v13);
  }
  *((void *)v13 + 2) = v16 + 1;
  *(float *)&v13[4 * v16 + 32] = v11;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17) {
    int v18 = *(_DWORD *)(a1 + 4 * v17 + 28);
  }
  else {
    int v18 = 0;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int8x16_t v14 = sub_1B6397840(0, *((void *)v14 + 2) + 1, 1, v14);
  }
  unint64_t v29 = *((void *)v14 + 2);
  unint64_t v28 = *((void *)v14 + 3);
  if (v29 >= v28 >> 1) {
    int8x16_t v14 = sub_1B6397840(v28 > 1, v29 + 1, 1, v14);
  }
  *((void *)v14 + 2) = v29 + 1;
  *(_DWORD *)&v14[4 * v29 + 32] = v18;
  return v14;
}

uint64_t sub_1B6B49ED8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1) {
    MEMORY[0x1BA9B84C0](v1, -1, -1);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeyframeTimelineRuntime()
{
  return self;
}

uint64_t sub_1B6B49F58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB1708(*a1, *a2);
}

uint64_t sub_1B6B49F64()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B49FFC()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B4A080()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B4A114@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6B4A588();
  *a1 = result;
  return result;
}

void sub_1B6B4A144(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x7365756C6176;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6576727563;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x73656D6974;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B6B4A198()
{
  uint64_t v1 = 0x7365756C6176;
  if (*v0 != 1) {
    uint64_t v1 = 0x6576727563;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73656D6974;
  }
}

uint64_t sub_1B6B4A1E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6B4A588();
  *a1 = result;
  return result;
}

uint64_t sub_1B6B4A210(uint64_t a1)
{
  unint64_t v2 = sub_1B6B4B394();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B4A24C(uint64_t a1)
{
  unint64_t v2 = sub_1B6B4B394();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6B4A288(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v18 = a5;
  sub_1B6B4B440(0, &qword_1E9DD6100, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  int8x16_t v14 = (char *)v16 - v13;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6B4B394();
  sub_1B6E33A88();
  _OWORD v16[2] = a2;
  v16[3] = a3;
  v16[4] = a4;
  char v17 = v18;
  char v19 = 2;
  sub_1B665D590();
  sub_1B681F0D8((unint64_t *)&qword_1E9DD85D0);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B6B4A430@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B6B4B0BC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1B6B4A464(void *a1)
{
  return sub_1B6B4A288(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1B6B4A488(uint64_t a1, uint64_t a2)
{
  return sub_1B6B4A4AC(*(void *)a1, *(void *)(a1 + 8), *(float32x2_t **)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(float32x2_t **)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1B6B4A4AC(uint64_t a1, uint64_t a2, float32x2_t *a3, char a4, uint64_t a5, uint64_t a6, float32x2_t *a7, char a8)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8 != *(void *)(a5 + 16)) {
    return 0;
  }
  if (v8) {
    BOOL v13 = a1 == a5;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*(float *)(a1 + 32) != *(float *)(a5 + 32)) {
      return 0;
    }
    uint64_t v14 = v8 - 1;
    if (v14)
    {
      unint64_t v15 = (float *)(a5 + 36);
      unint64_t v16 = (float *)(a1 + 36);
      while (*v16 == *v15)
      {
        ++v15;
        ++v16;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      return 0;
    }
  }
LABEL_7:
  if (sub_1B634027C(a2, a6))
  {
    if (a3)
    {
      if (!a7 || (sub_1B69196E0(a3, a7) & 1) == 0) {
        return 0;
      }
    }
    else if (a7)
    {
      return 0;
    }
    if (a4 == a8) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1B6B4A588()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

char *sub_1B6B4A5D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = a1;
  if (!a3) {
    goto LABEL_9;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5)
  {
LABEL_8:
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (char *)v4;
  }
  if (*(unsigned char *)(a3 + 49) == 1)
  {
    uint64_t v6 = (unsigned __int8 *)(a3 + 73);
    while (--v5)
    {
      int v7 = *v6;
      v6 += 24;
      if (v7 != 1) {
        return sub_1B6B49C0C(a1, a2, a3, a4, 0.033333);
      }
    }
    goto LABEL_8;
  }
  return sub_1B6B49C0C(a1, a2, a3, a4, 0.033333);
}

char *sub_1B6B4A694(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v50 = *(void *)(a2 + 16);
  uint64_t v20 = *(void *)(a6 + 16);
  uint64_t v41 = a2 + 32;
  uint64_t v21 = *(void *)(a10 + 16);
  uint64_t v40 = a6 + 32;
  unint64_t v22 = (char *)MEMORY[0x1E4FBC860];
  int v23 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v51 = *(void *)(a14 + 16);
  while (1)
  {
    if (v19 < v50)
    {
      float v24 = *(float *)(v41 + 4 * v19);
      goto LABEL_7;
    }
    float v24 = 3.4028e38;
    if (v18 >= v20 && v17 >= v21 && v16 >= v51) {
      return v22;
    }
LABEL_7:
    if (v18 >= v20)
    {
      float v25 = 3.4028e38;
      if (v17 >= v21)
      {
LABEL_9:
        float v26 = 3.4028e38;
        goto LABEL_12;
      }
    }
    else
    {
      float v25 = *(float *)(v40 + 4 * v18);
      if (v17 >= v21) {
        goto LABEL_9;
      }
    }
    float v26 = *(float *)(a10 + 32 + 4 * v17);
LABEL_12:
    if (v16 >= v51) {
      float v27 = 3.4028e38;
    }
    else {
      float v27 = *(float *)(a14 + 32 + 4 * v16);
    }
    if (v25 >= v24) {
      float v28 = v24;
    }
    else {
      float v28 = v25;
    }
    if (v26 < v28) {
      float v28 = v26;
    }
    if (v27 >= v28) {
      float v29 = v28;
    }
    else {
      float v29 = v27;
    }
    sub_1B631A2E0(a1, a2, a3, a4, v29);
    unsigned int v55 = v30;
    sub_1B631A2E0(a5, a6, a7, a8, v29);
    unsigned int v54 = v31;
    sub_1B631A2E0(a9, a10, a11, a12, v29);
    unsigned int v53 = v32;
    sub_1B631A2E0(a13, a14, a15, a16, v29);
    unsigned int v52 = v33;
    if (v24 == v29) {
      ++v19;
    }
    if (v25 == v29) {
      ++v18;
    }
    if (v26 == v29) {
      ++v17;
    }
    if (v27 == v29) {
      ++v16;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v23 = sub_1B6397840(0, *((void *)v23 + 2) + 1, 1, v23);
    }
    unint64_t v35 = *((void *)v23 + 2);
    unint64_t v34 = *((void *)v23 + 3);
    if (v35 >= v34 >> 1) {
      int v23 = sub_1B6397840(v34 > 1, v35 + 1, 1, v23);
    }
    *((void *)v23 + 2) = v35 + 1;
    *(float *)&v23[4 * v35 + 32] = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v22 = sub_1B629CE28(0, *((void *)v22 + 2) + 1, 1, v22);
    }
    unint64_t v37 = *((void *)v22 + 2);
    unint64_t v36 = *((void *)v22 + 3);
    if (v37 >= v36 >> 1) {
      unint64_t v22 = sub_1B629CE28(v36 > 1, v37 + 1, 1, v22);
    }
    *(void *)&long long v38 = __PAIR64__(v54, v55);
    *((void *)&v38 + 1) = __PAIR64__(v52, v53);
    *((void *)v22 + 2) = v37 + 1;
    *(_OWORD *)&v22[16 * v37 + 32] = v38;
  }
}

uint64_t sub_1B6B4A9B8(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 80) = 1;
  *(void *)(v3 + 32) = 16;
  uint64_t v5 = sub_1B6B49980;
  if (a3 == 1) {
    uint64_t v5 = sub_1B6B4999C;
  }
  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 56) = 0;
  *(void *)(v3 + 64) = sub_1B6B498CC;
  *(void *)(v3 + 72) = 0;
  if (a3 == 1) {
    *(unsigned char *)(v3 + 80) = 0;
  }
  uint64_t v6 = 16 * *(void *)(a1 + 16);
  uint64_t v7 = swift_slowAlloc();
  sub_1B6E325A8();
  *(void *)(v3 + 16) = v7;
  *(void *)(v3 + 24) = v7 + v6;
  *(void *)(v3 + 40) = a2;
  return v3;
}

char *sub_1B6B4AA88(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v43 = *(void *)(a2 + 16);
  uint64_t v15 = *(void *)(a6 + 16);
  uint64_t v16 = *(void *)(a10 + 16);
  uint64_t v34 = a2 + 32;
  uint64_t v33 = a6 + 32;
  uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v14 < v43)
    {
      float v19 = *(float *)(v34 + 4 * v14);
      goto LABEL_6;
    }
    float v19 = 3.4028e38;
    if (v13 >= v15 && v12 >= v16) {
      return v17;
    }
LABEL_6:
    if (v13 >= v15)
    {
      float v20 = 3.4028e38;
      if (v12 >= v16)
      {
LABEL_8:
        float v21 = 3.4028e38;
        goto LABEL_11;
      }
    }
    else
    {
      float v20 = *(float *)(v33 + 4 * v13);
      if (v12 >= v16) {
        goto LABEL_8;
      }
    }
    float v21 = *(float *)(a10 + 32 + 4 * v12);
LABEL_11:
    if (v20 >= v19) {
      float v22 = v19;
    }
    else {
      float v22 = v20;
    }
    if (v21 >= v22) {
      float v23 = v22;
    }
    else {
      float v23 = v21;
    }
    sub_1B631A2E0(a1, a2, a3, a4, v23);
    unsigned int v46 = v24;
    sub_1B631A2E0(a5, a6, a7, a8, v23);
    unsigned int v45 = v25;
    sub_1B631A2E0(a9, a10, a11, a12, v23);
    unsigned int v44 = v26;
    if (v19 == v23) {
      ++v14;
    }
    if (v20 == v23) {
      ++v13;
    }
    if (v21 == v23) {
      ++v12;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = sub_1B6397840(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v28 = *((void *)v18 + 2);
    unint64_t v27 = *((void *)v18 + 3);
    if (v28 >= v27 >> 1) {
      uint64_t v18 = sub_1B6397840(v27 > 1, v28 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v28 + 1;
    *(float *)&v18[4 * v28 + 32] = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_1B68C0EA8(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v30 = *((void *)v17 + 2);
    unint64_t v29 = *((void *)v17 + 3);
    if (v30 >= v29 >> 1) {
      uint64_t v17 = sub_1B68C0EA8(v29 > 1, v30 + 1, 1, v17);
    }
    *(void *)&long long v31 = __PAIR64__(v45, v46);
    *((void *)&v31 + 1) = v44;
    *((void *)v17 + 2) = v30 + 1;
    *(_OWORD *)&v17[16 * v30 + 32] = v31;
  }
}

uint64_t sub_1B6B4AD24(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v2 + 80) = 1;
  *(void *)(v2 + 32) = 16;
  *(void *)(v2 + 48) = sub_1B6B49980;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = sub_1B6B49850;
  *(void *)(v2 + 72) = 0;
  uint64_t v4 = 16 * *(void *)(a1 + 16);
  uint64_t v5 = swift_slowAlloc();
  sub_1B6E325A8();
  *(void *)(v2 + 16) = v5;
  *(void *)(v2 + 24) = v5 + v4;
  *(void *)(v2 + 40) = a2;
  return v2;
}

char *sub_1B6B4ADCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, __n128 a7)
{
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a4 + 16);
  uint64_t v30 = a4 + 32;
  uint64_t v31 = a2 + 32;
  uint64_t v11 = a1 + 32;
  uint64_t v12 = a3 + 32;
  uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
  if (v9 <= 0) {
    goto LABEL_7;
  }
LABEL_2:
  float v15 = *(float *)(v31 + 4 * v8);
  if (v7 >= v10)
  {
    float v16 = 3.4028e38;
    BOOL v17 = v15 < 3.4028e38;
    if (v15 == 3.4028e38) {
      goto LABEL_10;
    }
    goto LABEL_4;
  }
  while (1)
  {
    float v16 = *(float *)(v30 + 4 * v7);
    BOOL v17 = v15 < v16;
    if (v15 == v16)
    {
LABEL_10:
      a7.n128_u32[0] = *(_DWORD *)(v11 + 4 * v8);
      a7.n128_u32[1] = *(_DWORD *)(v12 + 4 * v7);
      __n128 v33 = a7;
      ++v8;
      ++v7;
      goto LABEL_11;
    }
LABEL_4:
    if (v17)
    {
      a7.n128_u32[0] = *(_DWORD *)(v11 + 4 * v8);
      __n128 v32 = a7;
      sub_1B631A2E0(a3, a4, a5, a6, v15);
      __n128 v18 = v32;
      v18.n128_u32[1] = v19;
      __n128 v33 = v18;
      ++v8;
    }
    else
    {
      sub_1B631A2E0(a3, a4, a5, a6, v16);
      v20.n128_u32[1] = *(_DWORD *)(v11 + 4 * v8);
      __n128 v33 = v20;
      ++v7;
      float v15 = v16;
    }
LABEL_11:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_1B6397840(0, *((void *)v14 + 2) + 1, 1, v14);
    }
    unint64_t v22 = *((void *)v14 + 2);
    unint64_t v21 = *((void *)v14 + 3);
    if (v22 >= v21 >> 1) {
      uint64_t v14 = sub_1B6397840(v21 > 1, v22 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v22 + 1;
    *(float *)&v14[4 * v22 + 32] = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1B68C1F74(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v24 = *((void *)v13 + 2);
    unint64_t v23 = *((void *)v13 + 3);
    if (v24 >= v23 >> 1) {
      uint64_t v13 = sub_1B68C1F74(v23 > 1, v24 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v24 + 1;
    a7 = v33;
    *(void *)&v13[8 * v24 + 32] = v33.n128_u64[0];
    if (v8 < v9) {
      goto LABEL_2;
    }
LABEL_7:
    if (v7 >= v10) {
      return v13;
    }
    float v15 = 3.4028e38;
  }
}

uint64_t sub_1B6B4B004(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v2 + 80) = 1;
  *(void *)(v2 + 32) = 8;
  *(void *)(v2 + 48) = sub_1B6B49964;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = sub_1B6B497D4;
  *(void *)(v2 + 72) = 0;
  uint64_t v4 = 8 * *(void *)(a1 + 16);
  uint64_t v5 = swift_slowAlloc();
  sub_1B6E325A8();
  *(void *)(v2 + 16) = v5;
  *(void *)(v2 + 24) = v5 + v4;
  *(void *)(v2 + 40) = a2;
  return v2;
}

ValueMetadata *type metadata accessor for KeyframeTimeline()
{
  return &type metadata for KeyframeTimeline;
}

uint64_t sub_1B6B4B0BC(void *a1)
{
  sub_1B6B4B440(0, &qword_1EB980948, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = a1[3];
  sub_1B62C14BC(a1, v9);
  sub_1B6B4B394();
  sub_1B6E33A48();
  if (!v1)
  {
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    sub_1B62C14BC(a1, v10);
    if (sub_1B6C70F80(v10, v11) > 1093)
    {
      sub_1B665D590();
      char v14 = 2;
      sub_1B681F0D8((unint64_t *)&qword_1EB97FD90);
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      uint64_t v9 = v13;
    }
    else
    {
      sub_1B6B4B3E8();
      char v14 = 1;
      sub_1B6A4A980();
      sub_1B6E32DF8();
      uint64_t v9 = v13;
      char v14 = 0;
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

unint64_t sub_1B6B4B394()
{
  unint64_t result = qword_1EB97EC48;
  if (!qword_1EB97EC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EC48);
  }
  return result;
}

void sub_1B6B4B3E8()
{
  if (!qword_1EB980320)
  {
    unint64_t v0 = sub_1B6E31D18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980320);
    }
  }
}

void sub_1B6B4B440(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6B4B394();
    unint64_t v7 = a3(a1, &type metadata for KeyframeTimeline.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for KeyframeTimeline.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B4B570);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyframeTimeline.CodingKeys()
{
  return &type metadata for KeyframeTimeline.CodingKeys;
}

unint64_t sub_1B6B4B5AC()
{
  unint64_t result = qword_1E9DD6108;
  if (!qword_1E9DD6108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6108);
  }
  return result;
}

unint64_t sub_1B6B4B604()
{
  unint64_t result = qword_1EB97EC58;
  if (!qword_1EB97EC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EC58);
  }
  return result;
}

unint64_t sub_1B6B4B65C()
{
  unint64_t result = qword_1EB97EC50;
  if (!qword_1EB97EC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EC50);
  }
  return result;
}

uint64_t initializeWithCopy for RenderStates(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RenderStates(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  return a1;
}

uint64_t assignWithTake for RenderStates(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

ValueMetadata *type metadata accessor for RenderStates()
{
  return &type metadata for RenderStates;
}

uint64_t assignWithCopy for MaterialRuntime(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  long long v4 = *(void **)(a1 + 24);
  long long v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  id v6 = v5;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_WORD *)(a1 + 130) = *(_WORD *)(a2 + 130);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
  *(unsigned char *)(a1 + 226) = *(unsigned char *)(a2 + 226);
  *(unsigned char *)(a1 + 227) = *(unsigned char *)(a2 + 227);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  return a1;
}

__n128 initializeWithTake for MaterialRuntime(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(void *)(a1 + 240) = *((void *)a2 + 30);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for MaterialRuntime(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_release();
  long long v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v5;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
  *(unsigned char *)(a1 + 226) = *(unsigned char *)(a2 + 226);
  *(unsigned char *)(a1 + 227) = *(unsigned char *)(a2 + 227);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  return a1;
}

uint64_t getEnumTagSinglePayload for MaterialRuntime(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 248)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MaterialRuntime(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 248) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 248) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaterialRuntime()
{
  return &type metadata for MaterialRuntime;
}

void sub_1B6B4BD54(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a1;
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v13 = a2[7];
  uint64_t v14 = a2[8];
  uint64_t v15 = a2[9];
  uint64_t v16 = a2[10];
  if (a4)
  {
    uint64_t v17 = *a1;
    if (!*(void *)(*a1 + 16)) {
      return;
    }
    uint64_t v31 = a2[8];
    uint64_t v18 = a2[6];
    uint64_t v30 = *a2;
    unint64_t v19 = sub_1B62C1A30(a3);
    uint64_t v14 = v31;
    uint64_t v12 = v18;
    uint64_t v5 = a1;
    if ((v20 & 1) == 0) {
      return;
    }
    uint64_t v21 = *(void *)(*(void *)(v17 + 56) + 8 * v19);
    if (!*(void *)(v21 + 16)) {
      return;
    }
    v36.i32[0] = 0;
    v36.i64[1] = v30;
  }
  else
  {
    uint64_t v21 = a1[1];
    if (!*(void *)(v21 + 16)) {
      return;
    }
    v36.i32[0] = 0;
    v36.i64[1] = v6;
  }
  uint64_t v37 = v7;
  uint64_t v38 = v8;
  uint64_t v39 = v9;
  uint64_t v40 = v11;
  uint64_t v41 = v10;
  uint64_t v42 = v12;
  uint64_t v43 = v13;
  uint64_t v44 = v14;
  uint64_t v45 = v15;
  uint64_t v46 = v16;
  sub_1B6311200(&v36);
  if (v23)
  {
    unint64_t v24 = (uint64_t *)(*(void *)(v21 + 56) + 112 * v22);
    uint64_t v25 = v24[1];
    uint64_t v26 = *v24;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    objc_msgSend(v34, sel_setCullMode_, v5[27]);
    objc_msgSend(v34, sel_setFrontFacingWinding_, v5[26]);
    objc_msgSend(v34, sel_setDepthStencilState_, v25);
    objc_msgSend(v34, sel_setRenderPipelineState_, v26);
    long long v27 = *((_OWORD *)v5 + 7);
    v35[4] = *((_OWORD *)v5 + 6);
    v35[5] = v27;
    v35[6] = *((_OWORD *)v5 + 8);
    long long v28 = *((_OWORD *)v5 + 3);
    v35[0] = *((_OWORD *)v5 + 2);
    v35[1] = v28;
    long long v29 = *((_OWORD *)v5 + 5);
    v35[2] = *((_OWORD *)v5 + 4);
    v35[3] = v29;
    sub_1B62E5D0C(v35, v34, a5, 3);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
}

double sub_1B6B4BF30@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  long long v3 = sub_1B6303E64(MEMORY[0x1E4FBC860]);
  long long v4 = sub_1B6303CBC(v2);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v2;
  *(void *)(a1 + 48) = v2;
  *(void *)(a1 + 56) = v2;
  *(void *)(a1 + 64) = v2;
  *(void *)(a1 + 72) = v2;
  *(void *)(a1 + 80) = v2;
  *(void *)(a1 + 88) = v2;
  *(void *)(a1 + 96) = v2;
  *(void *)(a1 + 104) = v2;
  *(void *)(a1 + 112) = v2;
  *(void *)(a1 + 120) = v2;
  *(_DWORD *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = v2;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(void *)&double result = 1;
  *(_OWORD *)(a1 + 208) = xmmword_1B6E77050;
  *(_DWORD *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  return result;
}

uint64_t sub_1B6B4BFBC@<X0>(uint64_t a1@<X8>)
{
  v3[0] = 0xD000000000000013;
  v3[1] = 0x80000001B6F4A690;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = MEMORY[0x1E4FBC860];
  v3[5] = 0xD000000000000013;
  v3[6] = 0x80000001B6F4A6B0;
  v3[7] = 0;
  v3[8] = 0;
  v3[9] = MEMORY[0x1E4FBC860];
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  nullsub_1(v3);
  return sub_1B62CA210((uint64_t)v3, a1, &qword_1EB97EB68);
}

uint64_t sub_1B6B4C05C(void *a1, uint64_t a2)
{
  sub_1B6B4C7C0(0, &qword_1E9DD6120, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  long long v9 = (char *)v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6B4C76C();
  sub_1B6E33A88();
  v11[1] = a2;
  sub_1B6657A10();
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6B4C1B4()
{
  return 0x65727574786574;
}

uint64_t sub_1B6B4C1CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65727574786574 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6B4C264(uint64_t a1)
{
  unint64_t v2 = sub_1B6B4C76C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B4C2A0(uint64_t a1)
{
  unint64_t v2 = sub_1B6B4C76C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6B4C2DC()
{
  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v0 = sub_1B62FFCAC(4);
  *(void *)(v0 + 88) = sub_1B6B4BFBC;
  *(void *)(v0 + 96) = 0;
  swift_release();
  return v0;
}

uint64_t sub_1B6B4C33C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B6B4C3A0(a1, a3, *v3);
}

void *sub_1B6B4C348@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B6B4C5D4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6B4C374(void *a1)
{
  return sub_1B6B4C05C(a1, *v1);
}

ValueMetadata *type metadata accessor for ParticleDecalRenderer()
{
  return &type metadata for ParticleDecalRenderer;
}

uint64_t sub_1B6B4C3A0(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3 || !*(void *)(v3 + 168)) {
    return 0;
  }
  uint64_t v7 = *a2;
  uint64_t v8 = *(void *)(*a2 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  swift_retain();
  if (!v8)
  {
    swift_release();
    return 0;
  }
  unint64_t v26 = a3;
  uint64_t ObjectType = swift_getObjectType();
  swift_retain();
  swift_retain();
  id v10 = objc_msgSend((id)swift_unknownObjectRetain(), sel_encodedLength);
  uint64_t v11 = sub_1B62F1868(0, (uint64_t)v10);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_unknownObjectRetain();
  swift_release();
  sub_1B62EC494(v11, v13, v15, 0);
  uint64_t v16 = (void *)a2[1];
  swift_retain();
  sub_1B62E9D50(v16, (uint64_t)v28);
  swift_release();
  sub_1B62CA210((uint64_t)v28, (uint64_t)v29, qword_1EB97EA20);
  if (v30)
  {
    long long v17 = xmmword_1B6E4F370;
    long long v18 = xmmword_1B6E4F2E0;
    long long v19 = xmmword_1B6E4F320;
    long long v20 = xmmword_1B6E4F300;
  }
  else
  {
    long long v20 = v29[0];
    long long v19 = v29[1];
    long long v18 = v29[2];
    long long v17 = v29[3];
  }
  v27[0] = v20;
  v27[1] = v19;
  v27[2] = v18;
  void v27[3] = v17;
  type metadata accessor for particle_decal_material_constants(0);
  sub_1B62EC4C0((uint64_t)v27, 0, ObjectType, v21);
  swift_retain();
  uint64_t v22 = sub_1B696AD14(v8, v7, 1, v26);
  uint64_t v24 = v23;
  swift_release();
  sub_1B62EC578(v24, 200);
  sub_1B62EC1A8(v22, 201, (unint64_t *)(a1 + 136));
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v11;
}

void *sub_1B6B4C5D4(void *a1)
{
  sub_1B6B4C7C0(0, &qword_1E9DD6110, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)v11 - v7;
  long long v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6B4C76C();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B62B1EA8();
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    long long v9 = (void *)v11[1];
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

unint64_t sub_1B6B4C76C()
{
  unint64_t result = qword_1E9DD6118;
  if (!qword_1E9DD6118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6118);
  }
  return result;
}

void sub_1B6B4C7C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6B4C76C();
    unint64_t v7 = a3(a1, &type metadata for ParticleDecalRenderer.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleDecalRenderer.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6B4C8C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleDecalRenderer.CodingKeys()
{
  return &type metadata for ParticleDecalRenderer.CodingKeys;
}

unint64_t sub_1B6B4C8FC()
{
  unint64_t result = qword_1E9DD6128;
  if (!qword_1E9DD6128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6128);
  }
  return result;
}

unint64_t sub_1B6B4C954()
{
  unint64_t result = qword_1E9DD6130;
  if (!qword_1E9DD6130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6130);
  }
  return result;
}

unint64_t sub_1B6B4C9AC()
{
  unint64_t result = qword_1E9DD6138;
  if (!qword_1E9DD6138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6138);
  }
  return result;
}

uint64_t sub_1B6B4CA00(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = sub_1B6E321A8();
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1B6C3D7CC(0, v4, 0);
    uint64_t v5 = 0;
    uint64_t v6 = v13;
    unint64_t v7 = *(void *)(v13 + 16);
    do
    {
      double v8 = *(double *)(v3 + 8 * v5 + 32);
      unint64_t v9 = *(void *)(v13 + 24);
      if (v7 >= v9 >> 1) {
        sub_1B6C3D7CC(v9 > 1, v7 + 1, 1);
      }
      ++v5;
      float v10 = v8;
      *(void *)(v13 + 16) = v7 + 1;
      *(float *)(v13 + 4 * v7++ + 32) = v10;
    }
    while (v4 != v5);
    uint64_t v11 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  a2(v11);
  return v6;
}

unint64_t sub_1B6B4CB24(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = 0xD000000000000010;
  if (!a2) {
    return 0xD00000000000001ALL;
  }
  if (a2 != 1)
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    return 0xD000000000000021;
  }
  return v2;
}

unint64_t sub_1B6B4CBE0()
{
  return sub_1B6B4CB24(*v0, v0[1]);
}

void *sub_1B6B4CBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  v3[4] = sub_1B67DFFDC(MEMORY[0x1E4FBC860]);
  v3[5] = sub_1B67E00D4(v6);
  v3[6] = v6;
  v3[2] = a1;
  type metadata accessor for EntityManager();
  swift_allocObject();
  uint64_t v7 = sub_1B6299098(0x726F706D494C444DLL, 0xEB00000000726574, 1, 0);
  v3[3] = v7;
  *(void *)(v7 + OBJC_IVAR____TtC3VFX13EntityManager_renderer) = a2;
  swift_release();
  return v3;
}

uint64_t sub_1B6B4CCA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_msgSend(a1, sel_name);
  uint64_t v7 = sub_1B6E31798();
  uint64_t v9 = v8;

  if (v7 == a3 && v9 == a4) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1B6B4CD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1B638C100(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v9 = (char *)v42 - v8;
  uint64_t v10 = sub_1B6E30B68();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v48 = a1;
  *((void *)&v48 + 1) = a2;
  sub_1B633AF88();
  uint64_t v15 = (void *)sub_1B6E32688();
  uint64_t v16 = v15;
  unint64_t v17 = v15[2];
  if (v17 < 2)
  {
    swift_bridgeObjectRelease();
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v48 = 0;
    *((void *)&v48 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&long long v48 = 0xD000000000000015;
    *((void *)&v48 + 1) = 0x80000001B6F4A890;
    sub_1B6E31948();
    long long v32 = v48;
    int v33 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v48 = 0;
    swift_retain();
    sub_1B6B33E34(v33, (uint64_t *)&v48, v32, *((uint64_t *)&v32 + 1));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v34 = sub_1B6E30F48();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a3, 1, 1, v34);
  }
  else
  {
    uint64_t v45 = v11;
    uint64_t v46 = v10;
    v42[0] = a1;
    v42[1] = a2;
    uint64_t v47 = a3;
    uint64_t v18 = v15[4];
    uint64_t v19 = v15[5];
    uint64_t v20 = v15[6];
    uint64_t v21 = v15[7];
    swift_bridgeObjectRetain();
    uint64_t v44 = MEMORY[0x1BA9B34C0](v18, v19, v20, v21);
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t)&v16[4 * v17 + 4];
    long long v43 = *(_OWORD *)&v16[4 * v17];
    uint64_t v24 = *(void *)(v22 - 16);
    uint64_t v23 = *(void *)(v22 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v48 = v43;
    uint64_t v49 = v24;
    uint64_t v50 = v23;
    sub_1B6655408();
    uint64_t v25 = sub_1B6E32688();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      long long v27 = (uint64_t *)(v25 + 32 * v26);
      uint64_t v29 = *v27;
      uint64_t v28 = v27[1];
      uint64_t v31 = v27[2];
      uint64_t v30 = v27[3];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v29 = 0;
      uint64_t v28 = 0;
      uint64_t v31 = 0;
      uint64_t v30 = 0;
    }
    swift_bridgeObjectRelease();
    MEMORY[0x1BA9B34C0](v29, v28, v31, v30);
    swift_bridgeObjectRelease();
    sub_1B6E30B58();
    sub_1B6E30B38();
    sub_1B6E30B48();
    sub_1B6E30B28();
    uint64_t v36 = sub_1B6E30F48();
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v9, 1, v36) == 1)
    {
      sub_1B663ABE8((uint64_t)v9);
      uint64_t v38 = v45;
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      *(void *)&long long v48 = 0;
      *((void *)&v48 + 1) = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      *(void *)&long long v48 = 0xD000000000000015;
      *((void *)&v48 + 1) = 0x80000001B6F4A890;
      sub_1B6E31948();
      long long v39 = v48;
      int v40 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      *(void *)&long long v48 = 0;
      swift_retain();
      sub_1B6B33E34(v40, (uint64_t *)&v48, v39, *((uint64_t *)&v39 + 1));
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v46);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v47, 1, 1, v36);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v46);
      uint64_t v41 = v47;
      (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v47, v9, v36);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v41, 0, 1, v36);
    }
  }
}

unint64_t sub_1B6B4D30C(void *a1)
{
  sub_1B638C100(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = &v49[-v9];
  uint64_t v11 = (void *)sub_1B6E30F48();
  uint64_t v12 = *(v11 - 1);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v18 = MEMORY[0x1F4188790](v16, v17);
  uint64_t v20 = &v49[-v19];
  switch((unint64_t)objc_msgSend(a1, sel_type, v18))
  {
    case 1uLL:
      id v21 = objc_msgSend(a1, sel_stringValue);
      uint64_t v22 = sub_1B6E31798();
      uint64_t v24 = v23;

      sub_1B6B4CD3C(v22, v24, (uint64_t)v10);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, void *))(v12 + 48))(v10, 1, v11) == 1)
      {
        sub_1B663ABE8((uint64_t)v10);
        unint64_t v25 = 0;
        __asm { FMOV            V0.4S, #1.0 }
LABEL_10:
        LODWORD(v38) = -1;
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, void *))(v12 + 32))(v20, v10, v11);
        uint64_t v39 = *(void *)(v1 + 24);
        unint64_t v52 = 0;
        uint64_t v53 = 0;
        unint64_t v51 = 66;
        char v54 = -2;
        uint64_t v56 = 0;
        uint64_t v57 = 0;
        uint64_t v55 = 0;
        __int16 v58 = 768;
        uint64_t v40 = **(void **)(v39 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
        swift_retain();
        uint64_t v41 = sub_1B6CF2910();
        MEMORY[0x1F4188790](v41, v42);
        *(void *)&v49[-32] = v20;
        *(_WORD *)&v49[-24] = 0;
        uint64_t v47 = (uint64_t)&v51;
        char v50 = 1;
        uint64_t v38 = sub_1B6B6801C(v43, 0x100000000uLL, (uint64_t)sub_1B6B52D74, (uint64_t)&v49[-48], v40);
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v25 = v38 & 0xFFFFFFFF00000000;
        (*(void (**)(unsigned char *, void *))(v12 + 8))(v20, v11);
LABEL_12:
        __asm { FMOV            V0.4S, #1.0 }
      }
      return v38 | v25;
    case 2uLL:
      uint64_t v31 = *(void *)(v1 + 24);
      swift_retain();
      id v32 = objc_msgSend(a1, sel_URLValue);
      if (!v32) {
        goto LABEL_15;
      }
      int v33 = v32;
      sub_1B6E30EE8();

      (*(void (**)(unsigned char *, unsigned char *, void *))(v12 + 32))(v6, v15, v11);
      (*(void (**)(unsigned char *, void, uint64_t, void *))(v12 + 56))(v6, 0, 1, v11);
      (*(void (**)(unsigned char *, uint64_t, void *))(v12 + 48))(v6, 1, v11);
      unint64_t v52 = 0;
      uint64_t v53 = 0;
      unint64_t v51 = 66;
      char v54 = -2;
      uint64_t v56 = 0;
      uint64_t v57 = 0;
      uint64_t v55 = 0;
      __int16 v58 = 768;
      uint64_t v34 = **(void **)(v31 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      unint64_t v35 = sub_1B6CF2910();
      MEMORY[0x1F4188790](v35, v36);
      *(void *)&v49[-32] = v6;
      *(_WORD *)&v49[-24] = 0;
      uint64_t v47 = (uint64_t)&v51;
      char v50 = 1;
      uint64_t v38 = sub_1B6B6801C(v37, 0x100000000uLL, (uint64_t)sub_1B6B52D74, (uint64_t)&v49[-48], v34);
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v25 = v38 & 0xFFFFFFFF00000000;
      (*(void (**)(unsigned char *, void *))(v12 + 8))(v6, v11);
      goto LABEL_12;
    case 4uLL:
      sub_1B684C884((CGColor *)objc_msgSend(a1, sel_color));
      goto LABEL_9;
    case 7uLL:
      objc_msgSend(a1, sel_float3Value);
      unint64_t v25 = 0;
      goto LABEL_10;
    case 8uLL:
      objc_msgSend(a1, sel_float4Value);
LABEL_9:
      unint64_t v25 = 0;
      goto LABEL_10;
    default:
      unint64_t v51 = 0;
      unint64_t v52 = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v51 = 0xD000000000000023;
      unint64_t v52 = 0x80000001B6F4A860;
      uint64_t v11 = objc_msgSend(a1, sel_description);
      sub_1B6E31798();
      uint64_t v6 = v46;

      sub_1B6E31948();
      swift_bridgeObjectRelease();
      int v48 = 0;
      uint64_t v47 = 201;
      sub_1B6E32BE8();
      __break(1u);
LABEL_15:
      (*(void (**)(unsigned char *, uint64_t, uint64_t, void *))(v12 + 56))(v6, 1, 1, v11);
      __break(1u);
      JUMPOUT(0x1B6B4D8F4);
  }
}

unint64_t sub_1B6B4D914(void *a1)
{
  sub_1B638C100(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = &v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = &v46[-v9];
  uint64_t v11 = sub_1B6E30F48();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v18 = MEMORY[0x1F4188790](v16, v17);
  uint64_t v20 = &v46[-v19];
  id v21 = objc_msgSend(a1, sel_type, v18);
  LODWORD(v22) = 1.0;
  unint64_t v23 = (unint64_t)v21;
  LODWORD(v24) = -1;
  switch((unint64_t)v21)
  {
    case 0uLL:
      return v24 | v23;
    case 1uLL:
      id v32 = objc_msgSend(a1, sel_stringValue, v22);
      uint64_t v33 = sub_1B6E31798();
      uint64_t v35 = v34;

      sub_1B6B4CD3C(v33, v35, (uint64_t)v10);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      {
        sub_1B663ABE8((uint64_t)v10);
        goto LABEL_14;
      }
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v20, v10, v11);
      uint64_t v40 = *(void *)(v1 + 24);
      unint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v48 = 66;
      char v51 = -2;
      uint64_t v53 = 0;
      uint64_t v54 = 0;
      uint64_t v52 = 0;
      __int16 v55 = 768;
      uint64_t v41 = **(void **)(v40 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      swift_retain();
      uint64_t v42 = sub_1B6CF2910();
      MEMORY[0x1F4188790](v42, v43);
      *(void *)&v46[-32] = v20;
      *(_WORD *)&v46[-24] = 0;
      *(void *)&v46[-16] = &v48;
      char v47 = 1;
      uint64_t v24 = sub_1B6B6801C(v44, 0x100000000uLL, (uint64_t)sub_1B6B52D74, (uint64_t)&v46[-48], v41);
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v23 = v24 & 0xFFFFFFFF00000000;
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v20, v11);
      break;
    case 2uLL:
      uint64_t v25 = *(void *)(v1 + 24);
      swift_retain();
      id v26 = objc_msgSend(a1, sel_URLValue);
      if (!v26)
      {
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v6, 1, 1, v11);
        __break(1u);
        JUMPOUT(0x1B6B4DF70);
      }
      long long v27 = v26;
      sub_1B6E30EE8();

      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v6, v15, v11);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11);
      unint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v48 = 66;
      char v51 = -2;
      uint64_t v53 = 0;
      uint64_t v54 = 0;
      uint64_t v52 = 0;
      __int16 v55 = 768;
      uint64_t v28 = **(void **)(v25 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      uint64_t v29 = sub_1B6CF2910();
      MEMORY[0x1F4188790](v29, v30);
      *(void *)&v46[-32] = v6;
      *(_WORD *)&v46[-24] = 0;
      *(void *)&v46[-16] = &v48;
      char v47 = 1;
      uint64_t v24 = sub_1B6B6801C(v31, 0x100000000uLL, (uint64_t)sub_1B6835844, (uint64_t)&v46[-48], v28);
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v23 = v24 & 0xFFFFFFFF00000000;
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v6, v11);
      break;
    case 4uLL:
      sub_1B684C884((CGColor *)objc_msgSend(a1, sel_color, v22));
      goto LABEL_3;
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
      objc_msgSend(a1, sel_floatValue, v22);
LABEL_3:
      unint64_t v23 = 0;
      LODWORD(v24) = -1;
      break;
    default:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      id v36 = objc_msgSend(a1, sel_description);
      sub_1B6E31798();

      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v37 = v48;
      uint64_t v38 = v49;
      int v39 = sub_1B6E32168();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v48 = 0;
      swift_retain();
      sub_1B6B33E34(v39, &v48, v37, v38);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_14:
      unint64_t v23 = 0;
      LODWORD(v24) = -1;
      break;
  }
  return v24 | v23;
}

uint64_t sub_1B6B4DF94(void *a1)
{
  id v3 = objc_msgSend(a1, sel_scatteringFunction);
  type metadata accessor for PBRParameters();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = 0u;
  *(void *)(v4 + 32) = 0xFFFFFFFFLL;
  *(_DWORD *)(v4 + 40) = 16777473;
  *(unsigned char *)(v4 + 44) = 1;
  *(_OWORD *)(v4 + 48) = xmmword_1B6E4F490;
  *(_OWORD *)(v4 + 64) = 0u;
  *(void *)(v4 + 80) = 0xFFFFFFFFLL;
  *(_DWORD *)(v4 + 88) = 16777473;
  *(unsigned char *)(v4 + 92) = 1;
  *(_OWORD *)(v4 + 96) = xmmword_1B6E4F490;
  *(void *)(v4 + 112) = 0xFFFFFFFFLL;
  *(_DWORD *)(v4 + 120) = 16777473;
  *(unsigned char *)(v4 + 124) = 1;
  *(_DWORD *)(v4 + 128) = 0;
  *(_OWORD *)(v4 + 144) = xmmword_1B6E4F490;
  *(void *)(v4 + 160) = 0xFFFFFFFFLL;
  *(_DWORD *)(v4 + 168) = 16777473;
  *(unsigned char *)(v4 + 172) = 1;
  *(_DWORD *)(v4 + 176) = 0;
  *(_OWORD *)(v4 + 192) = xmmword_1B6E4F490;
  *(void *)(v4 + 208) = 0xFFFFFFFFLL;
  *(_DWORD *)(v4 + 216) = 16777473;
  *(unsigned char *)(v4 + 220) = 1;
  *(_DWORD *)(v4 + 224) = 1065353216;
  *(_OWORD *)(v4 + 240) = xmmword_1B6E4F490;
  *(void *)(v4 + 256) = 0xFFFFFFFFLL;
  *(_DWORD *)(v4 + 264) = 16777473;
  *(unsigned char *)(v4 + 268) = 1;
  *(_DWORD *)(v4 + 272) = 1065353216;
  *(_OWORD *)(v4 + 288) = xmmword_1B6E4F490;
  *(_WORD *)(v4 + 304) = 0;
  id v5 = objc_msgSend(a1, sel_propertyWithSemantic_, 0);
  if (v5) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)sub_1B6E31768();
  id v6 = objc_msgSend(a1, sel_propertyNamed_, v7);

  if (!v6)
  {
    id v5 = objc_msgSend(v3, sel_baseColor);
LABEL_2:
    id v6 = v5;
    goto LABEL_5;
  }
  id v5 = v6;
LABEL_5:
  unint64_t v8 = sub_1B6B4D30C(v5);
  long long v56 = v9;
  unint64_t v10 = v8;

  *(_OWORD *)(v4 + 16) = v56;
  *(void *)(v4 + 32) = v10;
  *(_DWORD *)(v4 + 40) = 16777473;
  *(unsigned char *)(v4 + 44) = 1;
  *(_OWORD *)(v4 + 48) = xmmword_1B6E4F490;
  id v11 = objc_msgSend(a1, sel_propertyWithSemantic_, 19);
  if (v11)
  {
LABEL_6:
    id v12 = v11;
    goto LABEL_9;
  }
  uint64_t v13 = (void *)sub_1B6E31768();
  id v12 = objc_msgSend(a1, sel_propertyNamed_, v13);

  if (!v12)
  {
    id v11 = objc_msgSend(v3, sel_normal);
    goto LABEL_6;
  }
  id v11 = v12;
LABEL_9:
  unint64_t v14 = sub_1B6B4D914(v11);
  int v16 = v15;

  *(void *)(v4 + 256) = v14;
  *(_DWORD *)(v4 + 264) = 16777473;
  *(unsigned char *)(v4 + 268) = 1;
  *(_DWORD *)(v4 + 272) = v16;
  *(_OWORD *)(v4 + 288) = xmmword_1B6E4F490;
  id v17 = objc_msgSend(a1, sel_propertyWithSemantic_, 22);
  if (v17)
  {
    double v18 = v17;
    unint64_t v19 = sub_1B6B4D914(v17);
    int v21 = v20;

    *(void *)(v4 + 208) = v19;
    *(_DWORD *)(v4 + 216) = 16777473;
    *(unsigned char *)(v4 + 220) = 1;
LABEL_13:
    *(_DWORD *)(v4 + 224) = v21;
    *(_OWORD *)(v4 + 240) = xmmword_1B6E4F490;
    goto LABEL_14;
  }
  double v22 = (void *)sub_1B6E31768();
  id v23 = objc_msgSend(a1, sel_propertyNamed_, v22);

  if (v23)
  {
    unint64_t v24 = sub_1B6B4D914(v23);
    int v21 = v25;

    *(void *)(v4 + 208) = v24;
    *(_DWORD *)(v4 + 216) = 16777473;
    *(unsigned char *)(v4 + 220) = 1;
    goto LABEL_13;
  }
  id v52 = objc_msgSend(v3, sel_ambientOcclusion);
  unint64_t v53 = sub_1B6B4D914(v52);
  float v55 = v54;

  *(void *)(v4 + 208) = v53;
  *(_DWORD *)(v4 + 216) = 16777473;
  *(unsigned char *)(v4 + 220) = 1;
  *(float *)(v4 + 224) = v55;
  *(_OWORD *)(v4 + 240) = xmmword_1B6E4F490;
  if (v55 == 0.0) {
    *(_DWORD *)(v4 + 224) = 1065353216;
  }
LABEL_14:
  id v26 = objc_msgSend(a1, sel_propertyWithSemantic_, 13, v56);
  if (v26)
  {
LABEL_15:
    id v27 = v26;
    goto LABEL_18;
  }
  uint64_t v28 = (void *)sub_1B6E31768();
  id v27 = objc_msgSend(a1, sel_propertyNamed_, v28);

  if (!v27)
  {
    id v26 = objc_msgSend(v3, sel_emission);
    goto LABEL_15;
  }
  id v26 = v27;
LABEL_18:
  unint64_t v29 = sub_1B6B4D30C(v26);
  long long v57 = v30;
  unint64_t v31 = v29;

  *(_OWORD *)(v4 + 64) = v57;
  *(void *)(v4 + 80) = v31;
  *(_DWORD *)(v4 + 88) = 16777473;
  *(unsigned char *)(v4 + 92) = 1;
  *(_OWORD *)(v4 + 96) = xmmword_1B6E4F490;
  id v32 = objc_msgSend(a1, sel_scatteringFunction);
  self;
  uint64_t v33 = (void *)swift_dynamicCastObjCClass();
  if (v33)
  {
    uint64_t v34 = v33;
    id v35 = objc_msgSend(v33, sel_metallic);
    unint64_t v36 = sub_1B6B4D914(v35);
    int v38 = v37;

    *(void *)(v4 + 160) = v36;
    *(_DWORD *)(v4 + 168) = 16777473;
    *(unsigned char *)(v4 + 172) = 1;
    *(_DWORD *)(v4 + 176) = v38;
    *(_OWORD *)(v4 + 192) = xmmword_1B6E4F490;
    id v39 = objc_msgSend(v34, sel_roughness);
    unint64_t v40 = sub_1B6B4D914(v39);
    int v42 = v41;

    *(void *)(v4 + 112) = v40;
    *(_DWORD *)(v4 + 120) = 16777473;
    *(unsigned char *)(v4 + 124) = 1;
    *(_DWORD *)(v4 + 128) = v42;
    *(_OWORD *)(v4 + 144) = xmmword_1B6E4F490;
  }
  else
  {
  }
  uint64_t v43 = *(void *)(v1 + 24);
  swift_retain();
  id v44 = objc_msgSend(a1, sel_name);
  uint64_t v45 = sub_1B6E31798();
  uint64_t v47 = v46;

  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v48 = sub_1B62FFCAC(140);
  *(void *)(v48 + 88) = sub_1B6D2EFB4;
  *(void *)(v48 + 96) = 0;
  swift_release();
  uint64_t v49 = **(void **)(v43 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_1B6D7FB60(0x100000000uLL, v49, 0, v48, 0x100000000uLL, v45, v47, -1.0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1B6C0327C(v50, v43, v4);

  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  return v50;
}

uint64_t sub_1B6B4E618(id a1, unint64_t a2, int a3)
{
  int v254 = a3;
  unint64_t v255 = a2;
  uint64_t v257 = sub_1B6E30D98();
  uint64_t v256 = *(void *)(v257 - 8);
  MEMORY[0x1F4188790](v257, v5);
  float32x4_t v259 = (char *)&v252 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(*(void *)(v3 + 24) + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  swift_retain();
  objc_msgSend(a1, sel_boundingBox);
  float32x4_t v261 = v8;
  objc_msgSend(a1, sel_boundingBox);
  float32x4_t v260 = v9;
  type metadata accessor for Mesh();
  unint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  uint64_t v10[3] = 0;
  id v11 = (char *)MEMORY[0x1E4FBC860];
  void v10[4] = MEMORY[0x1E4FBC860];
  _OWORD v10[5] = v11;
  v10[7] = 0;
  _DWORD v10[8] = 0;
  v10[6] = 0;
  float v296 = v10;
  id v262 = objc_msgSend(a1, sel_vertexDescriptor);
  uint64_t v287 = v3;
  if ((*(unsigned char *)(v3 + 16) & 2) != 0)
  {
    id v12 = sub_1B68C53F0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v14 = *((void *)v12 + 2);
    unint64_t v13 = *((void *)v12 + 3);
    int v15 = v12;
    if (v14 >= v13 >> 1) {
      int v15 = sub_1B68C53F0(v13 > 1, v14 + 1, 1, v12);
    }
    *((void *)v15 + 2) = v14 + 1;
    id v11 = v15;
    *(void *)&v15[8 * v14 + 32] = 4;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1B6B51FE0(v262, v11);
  id v17 = v11;
  uint64_t v18 = v16;
  float32x4_t v258 = v17;
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(a1, sel_vertexBuffers);
  v290.i64[0] = sub_1B62F3064(0, &qword_1E9DD6160);
  unint64_t v20 = sub_1B6E31C28();

  unint64_t v22 = v20;
  if (v20 >> 62)
  {
    unint64_t v250 = v20;
    swift_bridgeObjectRetain();
    uint64_t v251 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    id v23 = (void *)v251;
    unint64_t v22 = v250;
  }
  else
  {
    id v23 = *(void **)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  float32x4_t v24 = v261;
  v24.i32[3] = 0;
  float32x4_t v26 = v260;
  int v25 = &selRef_bufferIndex;
  v26.i32[3] = 0;
  uint64_t v291 = v7;
  id v288 = a1;
  float32x4_t v253 = v24;
  float32x4_t v252 = v26;
  if (!v23)
  {
LABEL_123:
    swift_bridgeObjectRelease();
    id v191 = objc_msgSend(a1, sel_submeshes);
    long long v192 = &selRef_lightBufferBindings;
    if (v191)
    {
      id v193 = v191;
      objc_msgSend(v191, sel_count);
      uint64_t v194 = v259;
      sub_1B6E32338();
      sub_1B6E30D88();
      uint64_t v195 = MEMORY[0x1E4FBC860];
      if (*((void *)&v301 + 1))
      {
        sub_1B63989B8(0, (unint64_t *)&unk_1E9DD6168);
        __n128 v279 = (__n128)vsubq_f32(v252, v253);
        float32x4_t v196 = v261;
        v196.i32[3] = 1.0;
        float32x4_t v197 = v260;
        unint64_t v278 = HIDWORD(v255);
        v197.i32[3] = 1.0;
        float32x4_t v292 = vaddq_f32(v196, v197);
        float32x4_t v290 = vsubq_f32(v197, v196);
        long long v277 = xmmword_1B6E77050;
        unint64_t v276 = 0xD000000000000019;
        float32x4_t v275 = (float32x4_t *)0x80000001B6F4A760;
        unint64_t v280 = 0x80000001B6F4A780;
        do
        {
          while ((swift_dynamicCast() & 1) == 0)
          {
            sub_1B6E30D88();
            if (!*((void *)&v301 + 1)) {
              goto LABEL_154;
            }
          }
          id v297 = v193;
          id v198 = (id)v298;
          id v199 = objc_msgSend((id)v298, sel_indexBuffer);
          id v200 = objc_msgSend(v199, sel_map);
          float32x4_t v201 = *(void **)(v291 + 16);
          id v286 = v200;
          id v202 = objc_msgSend(v200, sel_bytes);
          id v305 = v199;
          id v203 = objc_msgSend(v201, sel_newBufferWithBytes_length_options_, v202, objc_msgSend(v199, sel_length), 0);
          if (v203)
          {
            swift_unknownObjectRetain();
            v204 = (void *)sub_1B6E31768();
            objc_msgSend(v203, sel_setLabel_, v204);
            swift_unknownObjectRelease();
          }
          swift_unknownObjectRetain();
          id v205 = objc_msgSend(v305, sel_length);
          swift_unknownObjectRetain_n();
          id v284 = objc_msgSend(v198, sel_indexCount);
          id v206 = objc_msgSend(v198, sel_indexType);
          uint64_t v207 = 2;
          if (v206 == (id)32) {
            uint64_t v207 = 4;
          }
          uint64_t v283 = v207;
          float32x4_t v208 = v292;
          float32x4_t v209 = v290;
          if (*(unsigned char *)(v287 + 16))
          {
            *(float *)v210.i32 = sub_1B681B48C(v279);
            float32x4_t v211 = (float32x4_t)vdupq_lane_s32(v210, 0);
            float32x4_t v212 = vdivq_f32(v261, v211);
            float32x4_t v213 = vdivq_f32(v260, v211);
            v212.i32[3] = 1.0;
            v213.i32[3] = 1.0;
            float32x4_t v208 = vaddq_f32(v213, v212);
            float32x4_t v209 = vsubq_f32(v213, v212);
          }
          float32x4_t v281 = v209;
          float32x4_t v282 = v208;
          *(void *)&long long v289 = v198;
          unint64_t v285 = (unint64_t)v205;
          if (v254)
          {
            id v216 = objc_msgSend(v198, sel_material);
            if (!v216)
            {
              if (qword_1EB9852D0 != -1) {
                swift_once();
              }
              uint64_t v298 = 0;
              unint64_t v299 = 0xE000000000000000;
              uint64_t v274 = qword_1EB997FD0;
              swift_retain();
              sub_1B6E328C8();
              swift_bridgeObjectRelease();
              uint64_t v298 = 0x747261506873654DLL;
              unint64_t v299 = 0xE900000000000020;
              id v232 = [v198 v192[174]];
              sub_1B6E31798();

              sub_1B6E31948();
              swift_bridgeObjectRelease();
              sub_1B6E31948();
              uint64_t v233 = v298;
              uint64_t v234 = v299;
              int v235 = sub_1B6E32148();
              if (qword_1EB9854F8 != -1) {
                swift_once();
              }
              uint64_t v298 = 0;
              swift_retain();
              sub_1B6B33E34(v235, &v298, v233, v234);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRetain();
              float32x4_t v236 = v296;
              float32x4_t v222 = (void *)v296[5];
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v214 = 0;
              uint64_t v224 = 0;
              v236[5] = v222;
              if (isUniquelyReferenced_nonNull_native) {
                goto LABEL_144;
              }
LABEL_153:
              float32x4_t v222 = sub_1B68C5194(0, v222[2] + 1, 1, v222);
              v296[5] = v222;
              uint64_t v224 = v214;
              goto LABEL_144;
            }
            float32x4_t v217 = v216;
            uint64_t v218 = sub_1B6B4DF94(v216);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v195 = (uint64_t)sub_1B633F784(0, *(void *)(v195 + 16) + 1, 1, (char *)v195);
            }
            unint64_t v220 = *(void *)(v195 + 16);
            unint64_t v219 = *(void *)(v195 + 24);
            if (v220 >= v219 >> 1) {
              uint64_t v195 = (uint64_t)sub_1B633F784(v219 > 1, v220 + 1, 1, (char *)v195);
            }
            *(void *)(v195 + 16) = v220 + 1;
            *(void *)(v195 + 8 * v220 + 32) = v218;

            uint64_t v214 = *(void *)(v195 + 16) - 1;
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_1B68805E0(0, &qword_1EB980C50);
            uint64_t v195 = swift_allocObject();
            uint64_t v214 = 0;
            *(_OWORD *)(v195 + 16) = v277;
            int v215 = v278;
            *(_DWORD *)(v195 + 32) = v255;
            *(_DWORD *)(v195 + 36) = v215;
          }
          swift_bridgeObjectRetain();
          float32x4_t v221 = v296;
          float32x4_t v222 = (void *)v296[5];
          char v223 = swift_isUniquelyReferenced_nonNull_native();
          v221[5] = v222;
          uint64_t v224 = v214;
          if ((v223 & 1) == 0) {
            goto LABEL_153;
          }
LABEL_144:
          unint64_t v226 = v222[2];
          unint64_t v225 = v222[3];
          if (v226 >= v225 >> 1)
          {
            float32x4_t v222 = sub_1B68C5194(v225 > 1, v226 + 1, 1, v222);
            v296[5] = v222;
          }
          v227.i64[0] = 0x3F0000003F000000;
          v227.i64[1] = 0x3F0000003F000000;
          float32x4_t v228 = vmulq_f32(v281, v227);
          v222[2] = v226 + 1;
          float32x4_t v229 = vmulq_f32(v282, v227);
          v230 = (float32x4_t *)&v222[16 * v226];
          v230[2].i64[0] = 3;
          v230[2].i64[1] = 0;
          v230[3].i64[0] = 0;
          v230[3].i64[1] = v224;
          v230[4].i64[0] = (uint64_t)v203;
          v230[4].i64[1] = 0;
          v230[5].i64[0] = v285;
          v230[5].i64[1] = 0;
          v230[6].i8[0] = 1;
          uint64_t v231 = v283;
          v230[6].i64[1] = (uint64_t)v284;
          v230[7].i64[0] = v231;
          v230[7].i64[1] = MEMORY[0x1E4FBC860];
          v230[8] = v229;
          v230[9] = v228;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          swift_unknownObjectRelease_n();
          uint64_t v194 = v259;
          sub_1B6E30D88();
          long long v192 = &selRef_lightBufferBindings;
          id v193 = v297;
        }
        while (*((void *)&v301 + 1));
      }
LABEL_154:

      (*(void (**)(char *, uint64_t))(v256 + 8))(v194, v257);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v195 = MEMORY[0x1E4FBC860];
    }
    uint64_t v238 = sub_1B6A58824((_OWORD *)v18);
    uint64_t v239 = (uint64_t)v296;
    v296[2] = v238;
    *(void *)(v239 + 24) = v240;
    swift_release();
    id v241 = v288;
    *(void *)(v239 + 48) = objc_msgSend(v288, sel_vertexCount);
    uint64_t v242 = *(void *)(v287 + 24);
    swift_retain();
    id v243 = [v241 v192[174]];
    uint64_t v244 = sub_1B6E31798();
    uint64_t v246 = v245;

    uint64_t v247 = **(void **)(v242 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v300) = 1;
    uint64_t v248 = sub_1B6D7FE64(0x100000000uLL, v247, v239, v195, v244, v246);
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return v248;
  }
  id v27 = 0;
  v282.i64[0] = v18 + 16;
  unint64_t v285 = v22 & 0xC000000000000001;
  unint64_t v272 = v22;
  unint64_t v265 = v22 + 32;
  __n128 v263 = (__n128)vsubq_f32(v26, v24);
  float32x4_t v292 = (float32x4_t)v263;
  float32x4_t v293 = v26;
  long long v294 = v21;
  float32x4_t v295 = 0u;
  unint64_t v271 = 0xD000000000000014;
  unint64_t v270 = 0x80000001B6F4A740;
  uint64_t v264 = MEMORY[0x1E4FBC840] + 8;
  id v286 = v23;
  while (1)
  {
    if (v285)
    {
      id v28 = (id)MEMORY[0x1BA9B4580](v27, v272);
    }
    else
    {
      id v28 = *(id *)(v265 + 8 * (void)v27);
      swift_unknownObjectRetain();
    }
    id v29 = objc_msgSend(v28, sel_map, v252.i64[0], v252.i64[1], v253.i64[0], v253.i64[1]);
    id v30 = v29;
    BOOL v31 = v27 == (id)*(unsigned __int16 *)(v18 + 142) && *(_WORD *)(v18 + 140) == 31;
    id v305 = v29;
    id v297 = v28;
    if (!v31) {
      goto LABEL_42;
    }
    uint64_t v32 = *(unsigned __int16 *)(v18 + 102);
    v279.n128_u64[0] = *(unsigned int *)(v18 + 96);
    id v33 = objc_msgSend(a1, sel_vertexBuffers);
    uint64_t v34 = sub_1B6E31C28();

    if ((v34 & 0xC000000000000001) != 0)
    {
      id v35 = (void *)MEMORY[0x1BA9B4580](v32, v34);
    }
    else
    {
      id v35 = *(void **)(v34 + 8 * v32 + 32);
      swift_unknownObjectRetain();
    }
    swift_bridgeObjectRelease();
    uint64_t v283 = (uint64_t)v35;
    unint64_t v36 = a1;
    if (v27 == (id)v32)
    {
      unint64_t v278 = (unint64_t)[v305 v25[13]];
    }
    else
    {
      id v37 = objc_msgSend(v35, sel_map);
      unint64_t v278 = (unint64_t)[v37 v25[13]];
    }
    unint64_t v38 = *(unsigned __int16 *)(v18 + 110);
    *(void *)&long long v277 = *(unsigned int *)(v18 + 104);
    id v39 = objc_msgSend(v36, sel_vertexBuffers);
    uint64_t v40 = sub_1B6E31C28();

    if ((v40 & 0xC000000000000001) != 0)
    {
      *(void *)&long long v289 = MEMORY[0x1BA9B4580](v38, v40);
    }
    else
    {
      *(void *)&long long v289 = *(void *)(v40 + 8 * v38 + 32);
      swift_unknownObjectRetain();
    }
    swift_bridgeObjectRelease();
    unint64_t v280 = v38;
    id v41 = v305;
    v281.i64[0] = v32;
    if (v27 == (id)v38)
    {
      float32x4_t v275 = (float32x4_t *)[v305 v25[13]];
    }
    else
    {
      id v42 = objc_msgSend((id)v289, sel_map);
      float32x4_t v275 = (float32x4_t *)[v42 v25[13]];
    }
    unint64_t v43 = *(unsigned __int16 *)(v18 + 118);
    uint64_t v274 = *(unsigned int *)(v18 + 112);
    id v44 = v36;
    id v45 = objc_msgSend(v36, sel_vertexBuffers);
    uint64_t v46 = sub_1B6E31C28();

    uint64_t v7 = v291;
    if ((v46 & 0xC000000000000001) != 0)
    {
      uint64_t v47 = (void *)MEMORY[0x1BA9B4580](v43, v46);
    }
    else
    {
      uint64_t v47 = *(void **)(v46 + 8 * v43 + 32);
      swift_unknownObjectRetain();
    }
    swift_bridgeObjectRelease();
    if (v27 == (id)v43)
    {
      float32x4_t v273 = (char *)[v41 v25[13]];
    }
    else
    {
      id v48 = objc_msgSend(v47, sel_map);
      float32x4_t v273 = (char *)[v48 v25[13]];
    }
    uint64_t v49 = (char *)[v41 v25[13]];
    uint64_t v50 = *(unsigned int *)(v18 + 136);
    unint64_t v51 = (unint64_t)objc_msgSend(v44, sel_vertexCount);
    if ((v51 & 0x8000000000000000) != 0) {
      break;
    }
    id v284 = v27;
    unint64_t v276 = v51;
    if (HIDWORD(v51)) {
      break;
    }
    id v52 = objc_msgSend(v44, sel_submeshes);
    if (v52)
    {
      unint64_t v53 = v52;
      float32x4_t v268 = v47;
      unint64_t v269 = v43;
      objc_msgSend(v52, sel_count);
      id v267 = v53;
      id v54 = objc_msgSend(v53, sel_objectAtIndexedSubscript_, 0);
      sub_1B6E32718();
      swift_unknownObjectRelease();
      sub_1B63989B8(0, (unint64_t *)&unk_1E9DD6168);
      swift_dynamicCast();
      float v55 = (char *)v298;
      id v56 = objc_msgSend(objc_msgSend((id)v298, sel_indexBuffer), sel_map);
      swift_unknownObjectRelease();
      id v57 = [v56 v25[13]];

      uint64_t v58 = (uint64_t)objc_msgSend(v55, sel_indexCount);
      if (v58 <= -3 || v58 >= 0x300000000) {
        break;
      }
      uint64_t v59 = (uint64_t)v57;
      v279.n128_u64[0] += v278;
      unint64_t v278 = (unint64_t)v275 + v277;
      *(void *)&long long v277 = &v273[v274];
      float32x4_t v275 = (float32x4_t *)&v49[v50];
      uint64_t v274 = v58 / 3;
      id v60 = objc_msgSend(v55, sel_indexType);
      int v61 = *(_DWORD *)(v18 + 16);
      BOOL v266 = v60 == (id)16;
      __int16 v62 = *(_WORD *)(v18 + 20);
      BOOL v31 = v60 == (id)32;
      __int16 v63 = *(_WORD *)(v18 + 22);
      int v64 = *(_DWORD *)(v18 + 24);
      __int16 v65 = *(_WORD *)(v18 + 28);
      __int16 v66 = *(_WORD *)(v18 + 30);
      int v67 = *(_DWORD *)(v18 + 32);
      __int16 v68 = *(_WORD *)(v18 + 36);
      LOWORD(v60) = *(_WORD *)(v18 + 38);
      int v69 = *(_DWORD *)(v18 + 40);
      __int16 v70 = *(_WORD *)(v18 + 44);
      __int16 v71 = *(_WORD *)(v18 + 46);
      int v72 = *(_DWORD *)(v18 + 48);
      __int16 v73 = *(_WORD *)(v18 + 52);
      __int16 v74 = *(_WORD *)(v18 + 54);
      int v75 = *(_DWORD *)(v18 + 56);
      __int16 v76 = *(_WORD *)(v18 + 60);
      __int16 v77 = *(_WORD *)(v18 + 62);
      float32x4_t v273 = v55;
      int v78 = *(_DWORD *)(v18 + 64);
      __int16 v79 = *(_WORD *)(v18 + 68);
      __int16 v80 = *(_WORD *)(v18 + 70);
      int v81 = *(_DWORD *)(v18 + 72);
      int v82 = *(_DWORD *)(v18 + 80);
      int v83 = *(_DWORD *)(v18 + 88);
      LODWORD(v300) = v61;
      DWORD2(v300) = v64;
      LODWORD(v301) = v67;
      DWORD2(v301) = v69;
      LODWORD(v302) = v72;
      DWORD2(v302) = v75;
      LODWORD(v303) = v78;
      DWORD2(v303) = v81;
      LODWORD(v304) = v82;
      DWORD2(v304) = v83;
      int v84 = *((_DWORD *)&v300 + 2 * v281.i64[0]);
      LODWORD(v300) = v61;
      DWORD2(v300) = v64;
      LODWORD(v301) = v67;
      DWORD2(v301) = v69;
      LODWORD(v302) = v72;
      DWORD2(v302) = v75;
      LODWORD(v303) = v78;
      DWORD2(v303) = v81;
      LODWORD(v304) = v82;
      DWORD2(v304) = v83;
      int v85 = *((_DWORD *)&v300 + 2 * v280);
      LODWORD(v300) = v61;
      WORD2(v300) = v62;
      WORD3(v300) = v63;
      DWORD2(v300) = v64;
      WORD6(v300) = v65;
      HIWORD(v300) = v66;
      LODWORD(v301) = v67;
      WORD2(v301) = v68;
      WORD3(v301) = (_WORD)v60;
      DWORD2(v301) = v69;
      WORD6(v301) = v70;
      HIWORD(v301) = v71;
      LODWORD(v302) = v72;
      WORD2(v302) = v73;
      WORD3(v302) = v74;
      DWORD2(v302) = v75;
      WORD6(v302) = v76;
      HIWORD(v302) = v77;
      LODWORD(v303) = v78;
      WORD2(v303) = v79;
      WORD3(v303) = v80;
      DWORD2(v303) = v81;
      HIDWORD(v303) = *(_DWORD *)(v18 + 76);
      LODWORD(v304) = v82;
      DWORD1(v304) = *(_DWORD *)(v18 + 84);
      DWORD2(v304) = v83;
      if (v31) {
        unsigned int v86 = 4;
      }
      else {
        unsigned int v86 = 2 * v266;
      }
      computeTangents(v274, v276, v86, v59, v279.n128_i64[0], v84, v278, v85, v275, v277, *((_DWORD *)&v300 + 2 * v269));

      uint64_t v7 = v291;
      id v44 = v288;
      int v25 = &selRef_bufferIndex;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    id v27 = v284;
    id v30 = v305;
    a1 = v44;
    id v28 = v297;
LABEL_42:
    if (v27 == (id)*(unsigned __int16 *)(v18 + 166) && *(_WORD *)(v18 + 164) == 30)
    {
      uint64_t v87 = (uint64_t)objc_msgSend(v28, sel_length);
      long long v88 = *(_OWORD *)(v18 + 32);
      long long v89 = *(_OWORD *)(v18 + 48);
      long long v90 = *(_OWORD *)(v18 + 64);
      uint64_t v91 = *(void *)(v18 + 80);
      int v92 = *(_DWORD *)(v18 + 88);
      long long v300 = *(_OWORD *)(v18 + 16);
      long long v301 = v88;
      long long v302 = v89;
      long long v303 = v90;
      *(void *)&long long v304 = v91;
      DWORD2(v304) = v92;
      uint64_t v93 = (char *)v27;
      uint64_t v94 = 8 * (void)v27;
      unint64_t v95 = v87 / *(unsigned int *)((char *)&v300 + v94);
      uint64_t v96 = (const float *)[v30 v25[13]];
      id v97 = objc_msgSend(*(id *)(v7 + 16), sel_newBufferWithLength_options_, 16 * v95, 0);
      uint64_t v98 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v99 = v97;
      float32x4_t v100 = v292;
      float32x4_t v101 = v293;
      long long v102 = v294;
      float32x4_t v103 = v295;
      if (v95)
      {
        if (v95 >= 0x18
          && ((uint64_t v104 = 16 * (v95 - 1), &v98[v104] >= v98) ? (v105 = &v98[v104 + 4] >= v98 + 4) : (v105 = 0),
              v105 ? (BOOL v106 = &v98[v104 + 8] >= v98 + 8) : (BOOL v106 = 0),
              v106 ? (BOOL v107 = &v98[v104 + 12] >= v98 + 12) : (BOOL v107 = 0),
              v107 ? (BOOL v108 = (v95 - 1) >> 60 == 0) : (BOOL v108 = 0),
              v108 && (v98 < (char *)&v96[3 * v95] ? (BOOL v109 = v96 >= (const float *)&v98[16 * v95]) : (BOOL v109 = 1), v109)))
        {
          unint64_t v110 = v95 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v111 = (float *)(v98 + 64);
          unint64_t v112 = v95 & 0xFFFFFFFFFFFFFFF8;
          uint64_t v113 = v96;
          do
          {
            uint64_t v114 = v113;
            *(float32x4x3_t *)v100.f32 = vld3q_f32(v114);
            v114 += 12;
            *(float32x4x3_t *)v306.val[0].f32 = vld3q_f32(v114);
            v306.val[3] = v103;
            int v115 = v111 - 16;
            vst4q_f32(v115, *(float32x4x4_t *)v100.f32);
            vst4q_f32(v111, v306);
            v111 += 32;
            v113 += 24;
            v112 -= 8;
          }
          while (v112);
          if (v95 == v110) {
            goto LABEL_98;
          }
        }
        else
        {
          unint64_t v110 = 0;
        }
        uint64_t v144 = (char *)&v96[3 * v110 + 2];
        uint64_t v145 = &v98[16 * v110 + 8];
        unint64_t v146 = v95 - v110;
        do
        {
          int v147 = *(_DWORD *)v144;
          *((void *)v145 - 1) = *((void *)v144 - 1);
          *(_DWORD *)uint64_t v145 = v147;
          *((_DWORD *)v145 + 1) = 0;
          v144 += 12;
          v145 += 16;
          --v146;
        }
        while (v146);
      }
LABEL_98:
      long long v148 = *(_OWORD *)(v18 + 32);
      long long v149 = *(_OWORD *)(v18 + 48);
      long long v150 = *(_OWORD *)(v18 + 64);
      long long v151 = *(_OWORD *)(v18 + 80);
      long long v300 = *(_OWORD *)(v18 + 16);
      long long v301 = v148;
      long long v302 = v149;
      long long v303 = v150;
      long long v304 = v151;
      int v152 = *(_DWORD *)((char *)&v300 + v94 + 4);
      uint64_t v153 = (_DWORD *)(v282.i64[0] + v94);
      *uint64_t v153 = 16;
      v153[1] = v152;
      *(_WORD *)(v18 + 164) = 31;
LABEL_104:
      a1 = v288;
      goto LABEL_105;
    }
    long long v116 = *(_OWORD *)(v18 + 32);
    long long v117 = *(_OWORD *)(v18 + 48);
    long long v118 = *(_OWORD *)(v18 + 64);
    uint64_t v119 = *(void *)(v18 + 80);
    int v120 = *(_DWORD *)(v18 + 88);
    long long v300 = *(_OWORD *)(v18 + 16);
    long long v301 = v116;
    long long v302 = v117;
    long long v303 = v118;
    *(void *)&long long v304 = v119;
    DWORD2(v304) = v120;
    uint64_t v93 = (char *)v27;
    uint64_t v121 = 8 * (void)v27;
    if ((*(_DWORD *)((unsigned char *)&v300 + v121) & 3) != 0)
    {
      uint64_t v122 = (uint64_t)objc_msgSend(v297, sel_length);
      long long v123 = *(_OWORD *)(v18 + 32);
      long long v124 = *(_OWORD *)(v18 + 48);
      long long v125 = *(_OWORD *)(v18 + 64);
      uint64_t v126 = *(void *)(v18 + 80);
      int v127 = *(_DWORD *)(v18 + 88);
      long long v300 = *(_OWORD *)(v18 + 16);
      long long v301 = v123;
      long long v302 = v124;
      long long v303 = v125;
      *(void *)&long long v304 = v126;
      DWORD2(v304) = v127;
      unint64_t v128 = v122 / *(unsigned int *)((char *)&v300 + v121);
      uint64_t v129 = (const __int16 *)[v30 v25[13]];
      id v130 = objc_msgSend(*(id *)(v7 + 16), sel_newBufferWithLength_options_, 8 * v128, 0);
      uint64_t v131 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v99 = v130;
      float32x4_t v100 = v292;
      float32x4_t v101 = v293;
      long long v102 = v294;
      float32x4_t v103 = v295;
      if (v128)
      {
        if (v128 < 0x18
          || ((uint64_t v132 = 8 * (v128 - 1), &v131[v132] >= v131) ? (v133 = &v131[v132 + 2] >= v131 + 2) : (v133 = 0),
              v133 ? (BOOL v134 = &v131[v132 + 4] >= v131 + 4) : (BOOL v134 = 0),
              v134 ? (BOOL v135 = &v131[v132 + 6] >= v131 + 6) : (BOOL v135 = 0),
              v135 ? (BOOL v136 = (v128 - 1) >> 61 == 0) : (BOOL v136 = 0),
              !v136
           || (v131 < (char *)&v129[3 * v128] ? (BOOL v137 = v129 >= (const __int16 *)&v131[8 * v128]) : (BOOL v137 = 1), !v137)))
        {
          unint64_t v138 = 0;
          goto LABEL_101;
        }
        unint64_t v138 = v128 & 0xFFFFFFFFFFFFFFF0;
        long long v139 = (__int16 *)(v131 + 64);
        unint64_t v140 = v128 & 0xFFFFFFFFFFFFFFF0;
        uint64_t v141 = v129;
        do
        {
          uint64_t v142 = v141;
          *(int16x8x3_t *)v307.val[0].i8 = vld3q_s16(v142);
          v142 += 24;
          v307.val[3] = (int16x8_t)v103;
          *(int16x8x3_t *)v308.val[0].i8 = vld3q_s16(v142);
          v308.val[3] = (int16x8_t)v103;
          uint64_t v143 = v139 - 32;
          vst4q_s16(v143, v307);
          vst4q_s16(v139, v308);
          v139 += 64;
          v141 += 48;
          v140 -= 16;
        }
        while (v140);
        if (v128 != v138)
        {
LABEL_101:
          unint64_t v156 = v128 - v138;
          uint64_t v157 = &v131[8 * v138 + 4];
          uint64_t v158 = (char *)&v129[3 * v138 + 2];
          do
          {
            int v159 = *((_DWORD *)v158 - 1);
            __int16 v160 = *(_WORD *)v158;
            v158 += 6;
            *((_DWORD *)v157 - 1) = v159;
            *(_WORD *)uint64_t v157 = v160;
            *((_WORD *)v157 + 1) = 0;
            v157 += 8;
            --v156;
          }
          while (v156);
        }
      }
      long long v161 = *(_OWORD *)(v18 + 32);
      long long v162 = *(_OWORD *)(v18 + 48);
      long long v163 = *(_OWORD *)(v18 + 64);
      long long v164 = *(_OWORD *)(v18 + 80);
      long long v300 = *(_OWORD *)(v18 + 16);
      long long v301 = v161;
      long long v302 = v162;
      long long v303 = v163;
      long long v304 = v164;
      int v165 = *(_DWORD *)((char *)&v300 + v121 + 4);
      int v166 = (_DWORD *)(v282.i64[0] + v121);
      *int v166 = 8;
      v166[1] = v165;
      *(_WORD *)(v18 + 172) = 18;
      goto LABEL_104;
    }
    uint64_t v154 = *(void **)(v7 + 16);
    id v155 = [v30 v25[13]];
    id v99 = objc_msgSend(v154, sel_newBufferWithBytes_length_options_, v155, objc_msgSend(v297, sel_length), 0);
    float32x4_t v100 = v292;
    float32x4_t v101 = v293;
    long long v102 = v294;
    float32x4_t v103 = v295;
LABEL_105:
    float32x4_t v292 = v100;
    float32x4_t v293 = v101;
    long long v294 = v102;
    float32x4_t v295 = v103;
    char v167 = v93;
    if ((*(unsigned char *)(v287 + 16) & 1) != 0 && v93 == (char *)*(unsigned __int16 *)(v18 + 102))
    {
      uint64_t v168 = *(unsigned int *)(v18 + 96);
      long long v169 = *(_OWORD *)(v18 + 32);
      long long v170 = *(_OWORD *)(v18 + 48);
      long long v171 = *(_OWORD *)(v18 + 64);
      uint64_t v172 = *(void *)(v18 + 80);
      int v173 = *(_DWORD *)(v18 + 88);
      long long v300 = *(_OWORD *)(v18 + 16);
      long long v301 = v169;
      long long v302 = v170;
      long long v303 = v171;
      *(void *)&long long v304 = v172;
      DWORD2(v304) = v173;
      uint64_t v174 = *((unsigned int *)&v300 + 2 * (void)v93);
      uint64_t v175 = (char *)objc_msgSend(a1, sel_vertexCount);
      *(float *)&long long v176 = sub_1B681B48C(v263);
      id v177 = v297;
      if (v99)
      {
        long long v289 = v176;
        char v178 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
        id v179 = v99;
        float v180 = *(float *)&v289;
        if (v175)
        {
          float32x2_t v181 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)&v289, 0);
          uint64_t v182 = (float *)&v178[v168 + 8];
          do
          {
            *((float32x2_t *)v182 - 1) = vdiv_f32(*(float32x2_t *)(v182 - 2), v181);
            *uint64_t v182 = *v182 / v180;
            uint64_t v182 = (float *)((char *)v182 + v174);
            --v175;
          }
          while (v175);
        }
LABEL_113:
        *(void *)&long long v300 = 0;
        *((void *)&v300 + 1) = 0xE000000000000000;
        swift_unknownObjectRetain();
        sub_1B6E328C8();
        swift_bridgeObjectRelease();
        *(void *)&long long v300 = v271;
        *((void *)&v300 + 1) = v270;
        uint64_t v298 = (uint64_t)v167;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        int v183 = (void *)sub_1B6E31768();
        swift_bridgeObjectRelease();
        objc_msgSend(v99, sel_setLabel_, v183);
        swift_unknownObjectRelease();
      }
    }
    else
    {
      id v177 = v297;
      if (v99) {
        goto LABEL_113;
      }
    }
    swift_unknownObjectRetain();
    id v184 = objc_msgSend(v177, sel_length);
    uint64_t v185 = v296;
    char v186 = (void *)v296[4];
    char v187 = swift_isUniquelyReferenced_nonNull_native();
    _OWORD v185[4] = v186;
    if ((v187 & 1) == 0)
    {
      char v186 = sub_1B68C52AC(0, v186[2] + 1, 1, v186);
      v296[4] = v186;
    }
    unint64_t v189 = v186[2];
    unint64_t v188 = v186[3];
    if (v189 >= v188 >> 1) {
      char v186 = sub_1B68C52AC(v188 > 1, v189 + 1, 1, v186);
    }
    id v27 = v167 + 1;
    v186[2] = v189 + 1;
    long long v190 = &v186[5 * v189];
    v190[4] = v99;
    v190[5] = 0;
    v190[6] = v184;
    v190[7] = 0;
    *((unsigned char *)v190 + 64) = 1;
    v296[4] = v186;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    int v25 = &selRef_bufferIndex;
    uint64_t v7 = v291;
    if (v27 == v286) {
      goto LABEL_123;
    }
  }
  uint64_t result = sub_1B6E32BD8();
  __break(1u);
  return result;
}

void sub_1B6B5014C(void *a1, uint64_t a2, char a3)
{
  uint64_t v5 = **(void **)(*(void *)(v3 + 24) + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  id v6 = a1;
  LOBYTE(v153.f64[0]) = 1;
  uint64_t v140 = sub_1B6D7F8B4(0x100000000uLL, v5, v6);
  uint64_t v138 = v4;

  id v7 = objc_msgSend(v6, sel_components);
  sub_1B62F3064(0, &qword_1E9DD6150);
  unint64_t v8 = sub_1B6E31C28();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    long long v139 = v6;
    if (v9) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    long long v139 = v6;
    if (v9)
    {
LABEL_3:
      uint64_t v10 = 0;
      while (1)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1BA9B4580](v10, v8);
        }
        else {
          swift_unknownObjectRetain();
        }
        self;
        uint64_t v12 = swift_dynamicCastObjCClass();
        if (v12)
        {
          unint64_t v13 = (void *)v12;
          swift_unknownObjectRetain();
          objc_msgSend(v13, sel_geometryBindTransform);
          id v14 = objc_msgSend(v13, sel_skeleton);
          if (v14)
          {
            int v15 = v14;
            uint64_t v16 = v151[5];
            if (!*(void *)(v16 + 16)) {
              goto LABEL_18;
            }
            id v17 = v14;
            swift_bridgeObjectRetain();
            unint64_t v18 = sub_1B69FB538((uint64_t)v17);
            if ((v19 & 1) == 0)
            {
              swift_bridgeObjectRelease();

LABEL_18:
              swift_bridgeObjectRelease();
              sub_1B6B52BD4();
              swift_allocError();
              *unint64_t v22 = xmmword_1B6E4F270;
              swift_willThrow();
              swift_unknownObjectRelease_n();

              return;
            }
            float64_t v20 = *(double *)(*(void *)(v16 + 56) + 8 * v18);

            swift_bridgeObjectRelease();
            v167.f64[0] = v20;
            float32x4_t v168 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v153), v155);
            float32x4_t v169 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v157), v159);
            float32x4_t v170 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v160), v161);
            float32x4_t v171 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v162), v163);
            swift_retain();
            sub_1B68508A0((long long *)&v167, v140);
            swift_release();
            sub_1B68805E0(0, &qword_1EB980E00);
            uint64_t v21 = swift_allocObject();
            *(_OWORD *)(v21 + 16) = xmmword_1B6E77050;
            sub_1B6E328C8();
            sub_1B6E31948();
            float64x2_t v157 = (float64x2_t)v169;
            float64x2_t v159 = (float64x2_t)v170;
            float64x2_t v160 = (float64x2_t)v171;
            float64x2_t v153 = v167;
            float64x2_t v155 = (float64x2_t)v168;
            sub_1B6E32B18();
            *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v21 + 32) = 0;
            *(void *)(v21 + 40) = 0xE000000000000000;
            sub_1B6E338E8();

            swift_bridgeObjectRelease();
          }
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1B68805E0(0, &qword_1EB980E00);
          uint64_t v11 = swift_allocObject();
          *(_OWORD *)(v11 + 16) = xmmword_1B6E77050;
          v153.f64[0] = 0.0;
          v153.f64[1] = -2.68156159e154;
          sub_1B6E328C8();
          sub_1B6E31948();
          sub_1B6E32B18();
          *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v11 + 32) = 0;
          *(void *)(v11 + 40) = 0xE000000000000000;
          sub_1B6E338E8();
          swift_bridgeObjectRelease();
        }
        ++v10;
        swift_unknownObjectRelease();
        if (v9 == v10)
        {
          swift_bridgeObjectRelease();
          id v6 = v139;
          goto LABEL_21;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_21:
  self;
  uint64_t v23 = swift_dynamicCastObjCClass();
  uint64_t v24 = v4;
  int v25 = v151;
  if (v23)
  {
    float32x4_t v26 = (void *)v23;
    type metadata accessor for SkeletonData();
    id v27 = (float64_t *)swift_allocObject();
    float64_t v28 = MEMORY[0x1E4FBC860];
    *((void *)v27 + 2) = MEMORY[0x1E4FBC860];
    void v27[3] = v28;
    _OWORD v27[4] = v28;
    v27[5] = v28;
    v27[6] = v28;
    id v29 = v139;
    id v30 = objc_msgSend(v26, sel_jointPaths);
    uint64_t v31 = sub_1B6E31C28();

    *((void *)v27 + 2) = v31;
    id v32 = objc_msgSend(v26, sel_jointBindTransforms);
    uint64_t v33 = sub_1B6E321B8();

    *((void *)v27 + 3) = v33;
    id v34 = objc_msgSend(v26, sel_jointRestTransforms);
    uint64_t v35 = sub_1B6E321B8();

    *((void *)v27 + 4) = v35;
    sub_1B6C58C20();
    *(void *)&v154.f64[0] = v27;
    v154.f64[1] = v28;
    *(float64_t *)&long long v156 = v28;
    *((float64_t *)&v156 + 1) = v28;
    float64_t v158 = v28;
    int v25 = v151;
    swift_retain();
    sub_1B6C58B28();
    float64x2_t v164 = v154;
    long long v165 = v156;
    float64_t v166 = v158;
    sub_1B6B52C30((uint64_t)&v164, (uint64_t)v172);
    float64_t v173 = v164.f64[1];
    long long v174 = v165;
    *(float64_t *)uint64_t v175 = v166;
    swift_retain();
    sub_1B62CA090((uint64_t)v172);
    sub_1B6399A44((uint64_t)&v173);
    sub_1B6399A44((uint64_t)&v174);
    sub_1B6399A44((uint64_t)&v174 + 8);
    sub_1B6399A44((uint64_t)v175);
    sub_1B68509A0((uint64_t)&v164, v140);
    swift_release();
    sub_1B62CA064((uint64_t)v172);
    sub_1B62D8C3C((uint64_t)&v173);
    sub_1B62D8C3C((uint64_t)&v174);
    sub_1B62D8C3C((uint64_t)&v174 + 8);
    sub_1B62D8C3C((uint64_t)v175);
    id v36 = v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v152 = v151[5];
    v151[5] = 0x8000000000000000;
    sub_1B67E7868(v140, v26, isUniquelyReferenced_nonNull_native);
    v151[5] = v152;
    id v6 = v139;
    swift_release();

    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  id v38 = objc_msgSend(v6, sel_name);
  uint64_t v39 = sub_1B6E31798();
  uint64_t v41 = v40;

  if (v39 == 0x6F6974616D696E41 && v41 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  char v42 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if (v42)
  {
LABEL_27:
    unint64_t v43 = v139;
    id v44 = objc_msgSend(v139, sel_path);
    sub_1B6E31798();

    MEMORY[0x1F4188790](v45, v46);
    unint64_t v47 = swift_bridgeObjectRetain();
    id v48 = sub_1B6B51CD4(v47, (uint64_t (*)(id, void *))sub_1B6B52C28);
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v48) {
      goto LABEL_34;
    }

    id v51 = objc_msgSend(v139, sel_parent);
    if (v51)
    {
      id v52 = v51;
      self;
      uint64_t v53 = swift_dynamicCastObjCClass();
      if (v53)
      {
        uint64_t v54 = v25[5];
        if (*(void *)(v54 + 16))
        {
          uint64_t v55 = v53;
          id v56 = v52;
          swift_bridgeObjectRetain();
          unint64_t v57 = sub_1B69FB538(v55);
          if (v58)
          {
            uint64_t v59 = *(void *)(*(void *)(v54 + 56) + 8 * v57);

            swift_bridgeObjectRelease();
            uint64_t v60 = **(void **)(v25[3] + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
            swift_retain();
            sub_1B6D7F654(0x100000000uLL, v60, v59, v50);

            swift_release_n();
            goto LABEL_33;
          }

          swift_bridgeObjectRelease();
        }
        sub_1B6B52BD4();
        swift_allocError();
        *BOOL v105 = xmmword_1B6E4F270;
        swift_willThrow();
        swift_release();

        return;
      }
    }
    sub_1B6B52BD4();
    swift_allocError();
    *id v97 = xmmword_1B6E4F270;
    swift_willThrow();
    swift_release();
    return;
  }
LABEL_33:
  unint64_t v43 = v139;
LABEL_34:
  id v61 = objc_msgSend(v43, sel_transform);
  if (!v61) {
    goto LABEL_58;
  }
  objc_msgSend(v61, sel_matrix);
  float32x4_t v142 = v63;
  float32x4_t v143 = v62;
  float32x4_t v141 = v64;
  v65.n128_u32[3] = 1.0;
  __n128 v148 = v65;
  swift_retain();
  sub_1B684FFB0(v140, v148);
  swift_release();
  int32x4_t v66 = (int32x4_t)vmulq_f32(v143, v143);
  int32x4_t v67 = (int32x4_t)vmulq_f32(v142, v142);
  int32x4_t v68 = (int32x4_t)vmulq_f32(v141, v141);
  float32x4_t v69 = (float32x4_t)vzip1q_s32(vzip1q_s32(v66, v68), v67);
  float32x4_t v147 = (float32x4_t)v67;
  float32x4_t v149 = (float32x4_t)v68;
  float32x4_t v145 = (float32x4_t)v66;
  float32x4_t v146 = (float32x4_t)vdupq_laneq_s32(v67, 2);
  float32x4_t v70 = (float32x4_t)vtrn2q_s32(v66, v67);
  v70.i32[2] = v68.i32[1];
  float32x4_t v71 = vaddq_f32((float32x4_t)vzip1q_s32(vzip2q_s32(v66, v68), (int32x4_t)v146), vaddq_f32(v69, v70));
  v72.i64[0] = 0x80000000800000;
  v72.i64[1] = 0x80000000800000;
  int32x4_t v73 = vcgeq_f32(v72, v71);
  v71.i32[3] = 0;
  float32x4_t v74 = vrsqrteq_f32(v71);
  float32x4_t v75 = vmulq_f32(v74, vrsqrtsq_f32(v71, vmulq_f32(v74, v74)));
  int32x4_t v76 = v73;
  v76.i32[3] = 0;
  float32x4_t v77 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v76), (int8x16_t)v71, (int8x16_t)vmulq_f32(v75, vrsqrtsq_f32(v71, vmulq_f32(v75, v75))));
  float32x4_t v78 = vmulq_n_f32(v143, v77.f32[0]);
  float32x4_t v79 = vmulq_lane_f32(v142, *(float32x2_t *)v77.f32, 1);
  float32x4_t v80 = vmulq_laneq_f32(v141, v77, 2);
  int8x16_t v81 = (int8x16_t)vuzp1q_s32((int32x4_t)v80, (int32x4_t)v80);
  int8x16_t v82 = (int8x16_t)vuzp1q_s32((int32x4_t)v79, (int32x4_t)v79);
  int32x4_t v83 = (int32x4_t)v78;
  if (v73.i32[0])
  {
    int32x4_t v84 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v81, (int8x16_t)v80, 0xCuLL), vnegq_f32(v79)), v80, (float32x4_t)vextq_s8(v82, (int8x16_t)v79, 0xCuLL));
    int32x4_t v83 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v84, v84), (int8x16_t)v84, 0xCuLL);
  }
  int8x16_t v85 = (int8x16_t)vuzp1q_s32((int32x4_t)v78, (int32x4_t)v78);
  float32x4_t v86 = v79;
  if (v73.i32[1])
  {
    int32x4_t v87 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v85, (int8x16_t)v78, 0xCuLL), vnegq_f32(v80)), v78, (float32x4_t)vextq_s8(v81, (int8x16_t)v80, 0xCuLL));
    float32x4_t v86 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v87, v87), (int8x16_t)v87, 0xCuLL);
  }
  if (v73.i32[2])
  {
    int32x4_t v73 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v82, (int8x16_t)v79, 0xCuLL), vnegq_f32(v78)), v79, (float32x4_t)vextq_s8(v85, (int8x16_t)v78, 0xCuLL));
    float32x4_t v80 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v73, v73), (int8x16_t)v73, 0xCuLL);
  }
  float v88 = (float)(*(float *)v83.i32 + v86.f32[1]) + v80.f32[2];
  if (v88 > 0.0)
  {
    float32x4_t v89 = (float32x4_t)vzip2q_s32((int32x4_t)v86, vuzp1q_s32((int32x4_t)v86, (int32x4_t)v80));
    v89.i32[2] = v83.i32[1];
    float v90 = sqrtf(v88 + 1.0);
    float32x4_t v91 = (float32x4_t)vtrn2q_s32((int32x4_t)v80, vzip2q_s32((int32x4_t)v80, v83));
    v91.i32[2] = v86.i32[0];
    float32x4_t v93 = vsubq_f32(v89, v91);
    v89.f32[3] = v90;
    v91.f32[3] = v90;
    float32x4_t v92 = vmulq_f32(v89, v91);
    v93.i32[3] = v92.i32[3];
LABEL_56:
    v92.f32[0] = 0.5 / v90;
    float32x4_t v104 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v92.f32, 0);
    goto LABEL_57;
  }
  if (*(float *)v83.i32 < v86.f32[1] || *(float *)v83.i32 < v80.f32[2])
  {
    if (v86.f32[1] <= v80.f32[2])
    {
      float v90 = sqrtf((float)((float)(v80.f32[2] + 1.0) - *(float *)v83.i32) - v86.f32[1]);
      *(float32x2_t *)v93.f32 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32(v83, (int32x4_t)v86), *(float32x2_t *)v80.f32);
      float32x2_t v106 = (float32x2_t)__PAIR64__(v83.u32[1], LODWORD(v90));
      float32x2_t v107 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v86.f32, 0);
      *(float32x2_t *)v92.f32 = vsub_f32(*(float32x2_t *)v83.i8, v107);
      v107.f32[0] = v90;
      v107.i32[0] = vmul_f32(v106, v107).u32[0];
      v107.i32[1] = v92.i32[1];
      *(float32x2_t *)&v93.u32[2] = v107;
      goto LABEL_56;
    }
    float v98 = sqrtf((float)((float)(v86.f32[1] + 1.0) - *(float *)v83.i32) - v80.f32[2]);
    *(int32x2_t *)v73.i8 = vdup_laneq_s32((int32x4_t)v86, 2);
    int8x16_t v95 = (int8x16_t)v73;
    *(float *)v95.i32 = v98;
    v95.i32[0] = vmul_f32(*(float32x2_t *)v95.i8, (float32x2_t)__PAIR64__(v80.u32[1], LODWORD(v98))).u32[0];
    v95.i32[1] = vadd_f32(*(float32x2_t *)&v73, *(float32x2_t *)&v80).i32[1];
    int8x16_t v96 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v83.i8, 1), v86);
    int32x2_t v103 = (int32x2_t)vsubq_f32(v80, (float32x4_t)vdupq_laneq_s32(v83, 2)).u64[0];
    float32x4_t v104 = (float32x4_t)vextq_s8(vextq_s8(v96, v96, 4uLL), v95, 0xCuLL);
    v104.i32[3] = v103.i32[0];
  }
  else
  {
    float v98 = sqrtf((float)((float)(*(float *)v83.i32 + 1.0) - v86.f32[1]) - v80.f32[2]);
    float32x2_t v99 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v86.f32, 0);
    float32x2_t v100 = vadd_f32(*(float32x2_t *)v83.i8, v99);
    v99.f32[0] = v98;
    v104.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v83.u32[1], LODWORD(v98)), v99).u32[0];
    v104.i32[1] = v100.i32[1];
    float32x2_t v101 = (float32x2_t)vzip2q_s32(v83, (int32x4_t)v86).u64[0];
    LODWORD(v102) = vadd_f32(v101, *(float32x2_t *)v80.f32).u32[0];
    int32x2_t v103 = (int32x2_t)vsub_f32(v101, *(float32x2_t *)v80.f32);
    HIDWORD(v102) = v103.i32[1];
    v104.i64[1] = v102;
  }
  *(float *)v103.i32 = 0.5 / v98;
  float32x4_t v93 = (float32x4_t)vdupq_lane_s32(v103, 0);
LABEL_57:
  __n128 v144 = (__n128)vmulq_f32(v93, v104);
  swift_retain();
  sub_1B684FF98(v140, v144);
  swift_release();
  v108.n128_u64[0] = __PAIR64__(COERCE_UNSIGNED_INT(sqrtf(vaddq_f32(v146, vaddq_f32(v147, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v147.f32, 1))).f32[0])), COERCE_UNSIGNED_INT(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v145, 2), vaddq_f32(v145, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v145.f32, 1))).f32[0])));
  v108.n128_u64[1] = COERCE_UNSIGNED_INT(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v149, 2), vaddq_f32(v149, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v149.f32, 1))).f32[0]));
  __n128 v150 = v108;
  swift_retain();
  sub_1B6850AA0(v140, v150);
  swift_unknownObjectRelease();
  swift_release();
LABEL_58:
  if ((a3 & 1) == 0)
  {
    swift_retain();
    sub_1B6850B94(a2, v140);
    swift_release();
  }
  self;
  uint64_t v109 = swift_dynamicCastObjCClass();
  if (v109)
  {
    unint64_t v110 = (void *)v109;
    id v111 = v43;
    id v112 = objc_msgSend(v110, sel_vertexDescriptor);
    id v113 = objc_msgSend(v112, sel_attributeNamed_, *MEMORY[0x1E4F35BA0]);

    if (v113)
    {
      id v114 = objc_msgSend(v110, sel_vertexDescriptor);
      id v115 = objc_msgSend(v114, sel_attributeNamed_, *MEMORY[0x1E4F35B80]);

      if (v115)
      {
        long long v116 = (void *)sub_1B6E31768();
        long long v117 = (void *)sub_1B6E31768();
        long long v118 = (void *)sub_1B6E31768();
        objc_msgSend(v110, sel_addOrthTanBasisForTextureCoordinateAttributeNamed_normalAttributeNamed_tangentAttributeNamed_, v116, v117, v118);
      }
      uint64_t v119 = (void *)sub_1B6E31768();
      objc_msgSend(v110, sel_flipTextureCoordinatesInAttributeNamed_, v119);
    }
    unint64_t v120 = sub_1B6B4E618(v110, 0, 1);
    if (v138)
    {

      return;
    }
    unint64_t v121 = v120;
    unint64_t v122 = HIDWORD(v120);
    long long v123 = (char *)v25[6];
    char v124 = swift_isUniquelyReferenced_nonNull_native();
    v25[6] = v123;
    if ((v124 & 1) == 0)
    {
      long long v123 = sub_1B633F784(0, *((void *)v123 + 2) + 1, 1, v123);
      v25[6] = v123;
    }
    unint64_t v126 = *((void *)v123 + 2);
    unint64_t v125 = *((void *)v123 + 3);
    if (v126 >= v125 >> 1) {
      long long v123 = sub_1B633F784(v125 > 1, v126 + 1, 1, v123);
    }
    *((void *)v123 + 2) = v126 + 1;
    int v127 = &v123[8 * v126];
    *((_DWORD *)v127 + 8) = v121;
    *((_DWORD *)v127 + 9) = v122;
    v25[6] = v123;
    swift_retain();
    sub_1B6850CB4(v121, 0xFFFFFFFFuLL, v140);

    swift_release();
    unint64_t v43 = v139;
  }
  id v128 = objc_msgSend(v43, sel_safe_children);
  if (v128)
  {
    uint64_t v129 = v128;
    if ((uint64_t)objc_msgSend(v128, sel_count) < 1)
    {
      swift_unknownObjectRelease();
      return;
    }
    id v130 = objc_msgSend(v129, sel_objects);
    sub_1B63989B8(0, &qword_1E9DD0690);
    unint64_t v131 = sub_1B6E31C28();

    if (v131 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v132 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v132)
      {
LABEL_76:
        uint64_t v133 = 0;
        while (1)
        {
          id v134 = (v131 & 0xC000000000000001) != 0
               ? (id)MEMORY[0x1BA9B4580](v133, v131)
               : *(id *)(v131 + 8 * v133 + 32);
          BOOL v135 = v134;
          sub_1B6B5014C(v134, v140, 0);
          if (v24) {
            break;
          }

          if (v132 == ++v133) {
            goto LABEL_82;
          }
        }
        swift_unknownObjectRelease();

        goto LABEL_85;
      }
    }
    else
    {
      uint64_t v132 = *(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v132) {
        goto LABEL_76;
      }
    }
LABEL_82:
    swift_unknownObjectRelease();
LABEL_85:
    swift_bridgeObjectRelease();
  }
}

void sub_1B6B51288(void *a1)
{
  uint64_t v2 = v1;
  id v3 = objc_msgSend(objc_msgSend(a1, sel_animations), sel_objects);
  swift_unknownObjectRelease();
  sub_1B63989B8(0, &qword_1E9DD0690);
  unint64_t v4 = sub_1B6E31C28();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      uint64_t v6 = 0;
      unint64_t v49 = v4 & 0xC000000000000001;
      uint64_t v47 = v5;
      unint64_t v48 = v4;
      do
      {
        if (v49) {
          id v10 = (id)MEMORY[0x1BA9B4580](v6, v4);
        }
        else {
          id v10 = *(id *)(v4 + 8 * v6 + 32);
        }
        uint64_t v11 = v10;
        self;
        uint64_t v12 = swift_dynamicCastObjCClass();
        if (!v12)
        {
          swift_bridgeObjectRelease();
          id v41 = v11;
          id v42 = objc_msgSend(v41, sel_description);
          uint64_t v43 = sub_1B6E31798();
          uint64_t v45 = v44;

          sub_1B6B52BD4();
          swift_allocError();
          *uint64_t v46 = v43;
          v46[1] = v45;
          swift_willThrow();

          return;
        }
        unint64_t v13 = (void *)v12;
        uint64_t v14 = *(void *)(v2 + 32);
        if ((v14 & 0xC000000000000001) != 0)
        {
          id v15 = v11;
          swift_bridgeObjectRetain();
          if (!sub_1B6E32BB8()) {
            goto LABEL_19;
          }
          type metadata accessor for SkeletonAnimation();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          uint64_t v16 = v50;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v17 = *(void *)(v14 + 16);
          id v18 = v11;
          if (!v17) {
            goto LABEL_20;
          }
          id v15 = v18;
          swift_bridgeObjectRetain();
          unint64_t v19 = sub_1B69FB538((uint64_t)v13);
          if ((v20 & 1) == 0)
          {
LABEL_19:

            swift_bridgeObjectRelease();
LABEL_20:
            type metadata accessor for SkeletonAnimation();
            uint64_t v21 = (void *)swift_allocObject();
            uint64_t v22 = MEMORY[0x1E4FBC860];
            void v21[2] = MEMORY[0x1E4FBC860];
            void v21[3] = v22;
            v21[4] = v22;
            void v21[5] = v22;
            v21[6] = v22;
            v21[7] = v22;
            v21[8] = v22;
            id v23 = objc_msgSend(v13, sel_jointPaths);
            uint64_t v24 = sub_1B6E31C28();

            void v21[2] = v24;
            swift_bridgeObjectRelease();
            id v25 = objc_msgSend(v13, sel_translations);
            float32x4_t v26 = (void (*)(uint64_t))MEMORY[0x1E4FBCD08];
            uint64_t v27 = sub_1B6B4CA00((uint64_t)v25, MEMORY[0x1E4FBCD08]);
            uint64_t v29 = v28;

            void v21[3] = v27;
            v21[4] = v29;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v30 = objc_msgSend(v13, sel_rotations);
            uint64_t v31 = sub_1B6B4CA00((uint64_t)v30, MEMORY[0x1E4FBCD10]);
            uint64_t v33 = v32;

            void v21[5] = v31;
            v21[6] = v33;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v34 = objc_msgSend(v13, sel_scales);
            uint64_t v35 = sub_1B6B4CA00((uint64_t)v34, v26);
            uint64_t v37 = v36;

            v21[7] = v35;
            v21[8] = v37;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v38 = *(void *)(v2 + 32);
            if ((v38 & 0xC000000000000001) != 0)
            {
              if (v38 >= 0) {
                v38 &= 0xFFFFFFFFFFFFFF8uLL;
              }
              id v39 = v11;
              swift_retain();
              uint64_t v40 = sub_1B6E32818();
              *(void *)(v2 + 32) = sub_1B6B51AC0(v38, v40 + 1);
            }
            else
            {
              id v7 = v11;
              swift_retain();
            }
            uint64_t v8 = v47;
            unint64_t v4 = v48;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v50 = *(void *)(v2 + 32);
            *(void *)(v2 + 32) = 0x8000000000000000;
            sub_1B67E761C((uint64_t)v21, v13, isUniquelyReferenced_nonNull_native);
            *(void *)(v2 + 32) = v50;
            swift_release();

            swift_bridgeObjectRelease();
            goto LABEL_6;
          }
          uint64_t v16 = *(void *)(*(void *)(v14 + 56) + 8 * v19);
          swift_retain();
        }

        swift_bridgeObjectRelease();
        if (!v16) {
          goto LABEL_20;
        }

        swift_release();
        uint64_t v8 = v47;
        unint64_t v4 = v48;
LABEL_6:
        ++v6;
      }
      while (v8 != v6);
    }
  }
  swift_bridgeObjectRelease();
}

void sub_1B6B51774(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_1B638C100(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = *(void *)(*(void *)(v3 + 24) + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v9)
  {
    id v10 = *(void **)(v9 + 520);
    uint64_t v11 = sub_1B6E30F48();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v8, a1, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11);
    swift_retain();
    id v14 = v10;
    id v15 = 0;
    if (v13 != 1)
    {
      id v15 = (void *)sub_1B6E30E78();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    }
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35BB0]), sel_initWithURL_vertexDescriptor_bufferAllocator_, v15, 0, v14);

    sub_1B6B51288(v16);
    if (v2)
    {
      swift_release();
    }
    else
    {
      id v18 = (char *)objc_msgSend(v16, sel_count);
      id v23 = v14;
      if (v18)
      {
        unint64_t v19 = v18;
        for (uint64_t i = 0; i != v19; ++i)
        {
          id v21 = objc_msgSend(v16, sel_objectAtIndex_, i);
          sub_1B6B5014C(v21, 0, 1);
        }
      }

      swift_release();
    }
  }
  else
  {
    sub_1B6B52BD4();
    swift_allocError();
    *uint64_t v17 = 0;
    v17[1] = 0;
    swift_willThrow();
  }
}

uint64_t sub_1B6B51A4C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MDLImporter()
{
  return self;
}

uint64_t sub_1B6B51AC0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1B67F887C();
    uint64_t v2 = sub_1B6E32C48();
    uint64_t v17 = v2;
    sub_1B6E32B98();
    uint64_t v3 = sub_1B6E32BC8();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1B63989B8(0, &qword_1E9DD0690);
      do
      {
        swift_dynamicCast();
        type metadata accessor for SkeletonAnimation();
        swift_dynamicCast();
        uint64_t v2 = v17;
        unint64_t v12 = *(void *)(v17 + 16);
        if (*(void *)(v17 + 24) <= v12)
        {
          sub_1B6AC2270(v12 + 1, 1);
          uint64_t v2 = v17;
        }
        uint64_t v5 = sub_1B6E32348();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = v5 & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          unint64_t v13 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (v9 + 1 == v13) {
              unint64_t v9 = 0;
            }
            else {
              ++v9;
            }
            uint64_t v14 = *(void *)(v6 + 8 * v9);
          }
          while (v14 == -1);
          unint64_t v10 = __clz(__rbit64(~v14)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v16;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1B6E32BC8();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

id sub_1B6B51CD4(unint64_t a1, uint64_t (*a2)(id, void *))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v20 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    unint64_t v5 = sub_1B6E32B98() | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v3 = ~v6;
    unint64_t v20 = a1 + 64;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 64);
    unint64_t v5 = a1;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v19 = (unint64_t)(v3 + 64) >> 6;
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    uint64_t v10 = (v4 - 1) & v4;
    unint64_t v11 = __clz(__rbit64(v4)) | (v9 << 6);
    uint64_t v12 = v9;
    goto LABEL_28;
  }
  uint64_t v12 = v9 + 1;
  if (v9 + 1 >= v19) {
    goto LABEL_32;
  }
  unint64_t v15 = *(void *)(v20 + 8 * v12);
  if (v15) {
    goto LABEL_27;
  }
  uint64_t v12 = v9 + 2;
  if (v9 + 2 >= v19) {
    goto LABEL_32;
  }
  unint64_t v15 = *(void *)(v20 + 8 * v12);
  if (v15) {
    goto LABEL_27;
  }
  uint64_t v12 = v9 + 3;
  if (v9 + 3 >= v19) {
    goto LABEL_32;
  }
  unint64_t v15 = *(void *)(v20 + 8 * v12);
  if (v15) {
    goto LABEL_27;
  }
  uint64_t v12 = v9 + 4;
  if (v9 + 4 >= v19) {
    goto LABEL_32;
  }
  unint64_t v15 = *(void *)(v20 + 8 * v12);
  if (v15) {
    goto LABEL_27;
  }
  uint64_t v12 = v9 + 5;
  if (v9 + 5 >= v19)
  {
LABEL_32:
    id v13 = 0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v20 + 8 * v12);
  if (!v15)
  {
    uint64_t v16 = v9 + 6;
    while (v19 != v16)
    {
      unint64_t v15 = *(void *)(v20 + 8 * v16++);
      if (v15)
      {
        uint64_t v12 = v16 - 1;
        goto LABEL_27;
      }
    }
    goto LABEL_32;
  }
LABEL_27:
  uint64_t v10 = (v15 - 1) & v15;
  unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_28:
  uint64_t v17 = 8 * v11;
  uint64_t v14 = *(void **)(*(void *)(v5 + 56) + v17);
  id v13 = *(id *)(*(void *)(v5 + 48) + v17);
  swift_retain();
  if (v13)
  {
    while ((a2(v13, v14) & 1) == 0)
    {
      swift_release();

      uint64_t v9 = v12;
      unint64_t v4 = v10;
      if ((v5 & 0x8000000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_10:
      if (!sub_1B6E32BC8())
      {
        id v13 = 0;
        break;
      }
      sub_1B63989B8(0, &qword_1E9DD0690);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v13 = v21;
      swift_unknownObjectRelease();
      type metadata accessor for SkeletonAnimation();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v14 = v21;
      swift_unknownObjectRelease();
      uint64_t v12 = v9;
      uint64_t v10 = v4;
      if (!v21) {
        break;
      }
    }
  }
LABEL_34:
  sub_1B62BB588();
  return v13;
}

uint64_t sub_1B6B51FE0(void *a1, void *a2)
{
  type metadata accessor for VertexLayoutDescriptor();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0x1000100000000;
  *(void *)(v4 + 24) = 0x1000100000000;
  *(void *)(v4 + 32) = 0x1000100000000;
  *(void *)(v4 + 40) = 0x1000100000000;
  *(void *)(v4 + 48) = 0x1000100000000;
  *(void *)(v4 + 56) = 0x1000100000000;
  *(void *)(v4 + 64) = 0x1000100000000;
  *(void *)(v4 + 72) = 0x1000100000000;
  *(void *)(v4 + 80) = 0x1000100000000;
  *(void *)(v4 + 88) = 0x1000100000000;
  *(_OWORD *)(v4 + 96) = 0u;
  uint64_t v140 = v4 + 96;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  unint64_t v5 = sub_1B67E01E8((uint64_t)&unk_1F0F55AD0);
  id v6 = objc_msgSend(a1, sel_attributes);
  uint64_t v7 = (uint64_t)objc_msgSend(v6, sel_count);

  uint64_t v8 = 0;
  if (v7 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v7;
  }
  float32x4_t v142 = a2;
  long long v139 = a2 + 6;
  uint64_t v10 = v5;
  float32x4_t v143 = v5;
  do
  {
    id v11 = objc_msgSend(a1, sel_attributes);
    id v12 = objc_msgSend(v11, sel_objectAtIndexedSubscript_, v8);

    sub_1B6E32718();
    swift_unknownObjectRelease();
    sub_1B63989B8(0, &qword_1E9DD6178);
    if (swift_dynamicCast())
    {
      id v13 = v151;
      id v14 = objc_msgSend(v151, sel_name);
      uint64_t v15 = sub_1B6E31798();
      uint64_t v17 = v16;

      if (v15 || v17 != 0xE000000000000000)
      {
        char v18 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_5;
        }
        id v19 = objc_msgSend(v13, sel_name);
        uint64_t v20 = sub_1B6E31798();
        uint64_t v22 = v21;

        if (!v10[2] || (v23 = sub_1B62B2CE0(v20, v22), uint64_t v10 = v143, (v24 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          *(void *)&long long v144 = 0;
          *((void *)&v144 + 1) = 0xE000000000000000;
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          *(void *)&long long v144 = 0xD000000000000019;
          *((void *)&v144 + 1) = 0x80000001B6F4A7C0;
          id v138 = objc_msgSend(v13, sel_name);
          sub_1B6E31798();

          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          while (1)
          {
LABEL_49:
            sub_1B6E32BE8();
            __break(1u);
          }
        }
        uint64_t v25 = *(void *)(v143[7] + 8 * v23);
        swift_bridgeObjectRelease();
        uint64_t v26 = v142[2];
        if (v26)
        {
          if (v142[4] == v25) {
            goto LABEL_5;
          }
          if (v26 != 1)
          {
            if (v142[5] == v25) {
              goto LABEL_5;
            }
            uint64_t v86 = v26 - 2;
            if (v86)
            {
              int32x4_t v87 = v139;
              while (1)
              {
                uint64_t v88 = *v87++;
                if (v88 == v25) {
                  break;
                }
                if (!--v86) {
                  goto LABEL_17;
                }
              }
LABEL_5:

              goto LABEL_6;
            }
          }
        }
LABEL_17:
        id v27 = objc_msgSend(a1, sel_layouts);
        id v28 = objc_msgSend(v27, sel_objectAtIndexedSubscript_, objc_msgSend(v13, sel_bufferIndex));

        sub_1B6E32718();
        swift_unknownObjectRelease();
        sub_1B63989B8(0, qword_1E9DD6180);
        if (!swift_dynamicCast()) {
          goto LABEL_49;
        }
        id v29 = v151;
        id v30 = objc_msgSend(v13, sel_bufferIndex);
        unint64_t v31 = (unint64_t)objc_msgSend(v29, sel_stride);
        long long v32 = *(_OWORD *)(v4 + 32);
        long long v33 = *(_OWORD *)(v4 + 48);
        long long v34 = *(_OWORD *)(v4 + 64);
        uint64_t v35 = *(void *)(v4 + 80);
        int v36 = *(_DWORD *)(v4 + 92);
        long long v144 = *(_OWORD *)(v4 + 16);
        long long v145 = v32;
        long long v146 = v33;
        long long v147 = v34;
        uint64_t v148 = v35;
        int v150 = v36;
        if ((v31 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (HIDWORD(v31)) {
          goto LABEL_48;
        }
        uint64_t v37 = (char *)&v144 + 8 * (void)v30;
        __int16 v38 = *((_WORD *)v37 + 2);
        LOWORD(v37) = *((_WORD *)v37 + 3);
        uint64_t v39 = v4 + 16 + 8 * (void)v30;
        *(_DWORD *)uint64_t v39 = v31;
        *(_WORD *)(v39 + 4) = v38;
        *(_WORD *)(v39 + 6) = (_WORD)v37;
        unint64_t v40 = (unint64_t)objc_msgSend(v13, sel_bufferIndex);
        long long v41 = *(_OWORD *)(v4 + 112);
        long long v42 = *(_OWORD *)(v4 + 128);
        long long v43 = *(_OWORD *)(v4 + 144);
        uint64_t v44 = *(void *)(v4 + 160);
        int v45 = *(_DWORD *)(v4 + 168);
        __int16 v46 = *(_WORD *)(v4 + 172);
        long long v144 = *(_OWORD *)(v4 + 96);
        long long v145 = v41;
        long long v146 = v42;
        long long v147 = v43;
        uint64_t v148 = v44;
        int v149 = v45;
        LOWORD(v150) = v46;
        if ((v40 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        float32x4_t v141 = v29;
        if (v40 >= 0x10000) {
          goto LABEL_48;
        }
        uint64_t v47 = v9;
        unint64_t v48 = (char *)&v144 + 8 * v25;
        int v49 = *(_DWORD *)v48;
        LOWORD(v48) = *((_WORD *)v48 + 2);
        uint64_t v50 = v25;
        uint64_t v51 = 8 * v25;
        uint64_t v52 = v140 + v51;
        *(_DWORD *)uint64_t v52 = v49;
        *(_WORD *)(v52 + 4) = (_WORD)v48;
        uint64_t v53 = (__int16 *)(v140 + v51 + 4);
        *(_WORD *)(v52 + 6) = v40;
        uint64_t v54 = (_WORD *)(v140 + v51 + 6);
        unint64_t v55 = (unint64_t)objc_msgSend(v13, sel_offset);
        long long v56 = *(_OWORD *)(v4 + 112);
        long long v57 = *(_OWORD *)(v4 + 128);
        long long v58 = *(_OWORD *)(v4 + 144);
        uint64_t v59 = *(void *)(v4 + 160);
        int v60 = *(_DWORD *)(v4 + 172);
        long long v144 = *(_OWORD *)(v4 + 96);
        long long v145 = v56;
        long long v146 = v57;
        long long v147 = v58;
        uint64_t v148 = v59;
        int v150 = v60;
        if ((v55 & 0x8000000000000000) != 0 || HIDWORD(v55))
        {
LABEL_48:
          sub_1B6E32BD8();
          __break(1u);
          goto LABEL_49;
        }
        __int16 v61 = *(_WORD *)((char *)&v144 + v51 + 4);
        __int16 v62 = *(_WORD *)((char *)&v144 + v51 + 6);
        *(_DWORD *)uint64_t v52 = v55;
        __int16 *v53 = v61;
        _WORD *v54 = v62;
        uint64_t v63 = (uint64_t)objc_msgSend(v13, sel_format);
        if (v63 > 393216)
        {
          uint64_t v64 = v50;
          uint64_t v9 = v47;
          switch(v63)
          {
            case 786433:
              long long v65 = *(_OWORD *)(v4 + 112);
              long long v66 = *(_OWORD *)(v4 + 128);
              long long v67 = *(_OWORD *)(v4 + 144);
              uint64_t v68 = *(void *)(v4 + 160);
              int v69 = *(_DWORD *)(v4 + 168);
              int v70 = *(_DWORD *)(v4 + 172);
              long long v144 = *(_OWORD *)(v4 + 96);
              long long v145 = v65;
              long long v146 = v66;
              long long v147 = v67;
              uint64_t v148 = v68;
              int v149 = v69;
              int v150 = v70;
              float32x4_t v71 = (char *)&v144 + 8 * v64;
              int v72 = *(_DWORD *)v71;
              __int16 v73 = *((_WORD *)v71 + 3);
              *(_DWORD *)uint64_t v52 = v72;
              __int16 v74 = 28;
              goto LABEL_41;
            case 786434:
              long long v105 = *(_OWORD *)(v4 + 112);
              long long v106 = *(_OWORD *)(v4 + 128);
              long long v107 = *(_OWORD *)(v4 + 144);
              uint64_t v108 = *(void *)(v4 + 160);
              int v109 = *(_DWORD *)(v4 + 168);
              int v110 = *(_DWORD *)(v4 + 172);
              long long v144 = *(_OWORD *)(v4 + 96);
              long long v145 = v105;
              long long v146 = v106;
              long long v147 = v107;
              uint64_t v148 = v108;
              int v149 = v109;
              int v150 = v110;
              id v111 = (char *)&v144 + 8 * v64;
              int v112 = *(_DWORD *)v111;
              __int16 v73 = *((_WORD *)v111 + 3);
              *(_DWORD *)uint64_t v52 = v112;
              __int16 v74 = 29;
              goto LABEL_41;
            case 786435:
              long long v89 = *(_OWORD *)(v4 + 112);
              long long v90 = *(_OWORD *)(v4 + 128);
              long long v91 = *(_OWORD *)(v4 + 144);
              uint64_t v92 = *(void *)(v4 + 160);
              int v93 = *(_DWORD *)(v4 + 168);
              int v94 = *(_DWORD *)(v4 + 172);
              long long v144 = *(_OWORD *)(v4 + 96);
              long long v145 = v89;
              long long v146 = v90;
              long long v147 = v91;
              uint64_t v148 = v92;
              int v149 = v93;
              int v150 = v94;
              int8x16_t v95 = (char *)&v144 + 8 * v64;
              int v96 = *(_DWORD *)v95;
              __int16 v73 = *((_WORD *)v95 + 3);
              *(_DWORD *)uint64_t v52 = v96;
              __int16 v74 = 30;
              goto LABEL_41;
            case 786436:
              long long v113 = *(_OWORD *)(v4 + 112);
              long long v114 = *(_OWORD *)(v4 + 128);
              long long v115 = *(_OWORD *)(v4 + 144);
              uint64_t v116 = *(void *)(v4 + 160);
              int v117 = *(_DWORD *)(v4 + 168);
              int v118 = *(_DWORD *)(v4 + 172);
              long long v144 = *(_OWORD *)(v4 + 96);
              long long v145 = v113;
              long long v146 = v114;
              long long v147 = v115;
              uint64_t v148 = v116;
              int v149 = v117;
              int v150 = v118;
              uint64_t v119 = (char *)&v144 + 8 * v64;
              int v120 = *(_DWORD *)v119;
              __int16 v73 = *((_WORD *)v119 + 3);
              *(_DWORD *)uint64_t v52 = v120;
              __int16 v74 = 31;
LABEL_41:
              __int16 *v53 = v74;
              _WORD *v54 = v73;

              uint64_t v10 = v143;
              goto LABEL_6;
            default:
              goto LABEL_49;
          }
        }
        uint64_t v75 = v50;
        uint64_t v9 = v47;
        switch(v63)
        {
          case 327681:
            long long v76 = *(_OWORD *)(v4 + 112);
            long long v77 = *(_OWORD *)(v4 + 128);
            long long v78 = *(_OWORD *)(v4 + 144);
            uint64_t v79 = *(void *)(v4 + 160);
            int v80 = *(_DWORD *)(v4 + 168);
            int v81 = *(_DWORD *)(v4 + 172);
            long long v144 = *(_OWORD *)(v4 + 96);
            long long v145 = v76;
            long long v146 = v77;
            long long v147 = v78;
            uint64_t v148 = v79;
            int v149 = v80;
            int v150 = v81;
            int8x16_t v82 = (char *)&v144 + 8 * v75;
            int v83 = *(_DWORD *)v82;
            __int16 v84 = *((_WORD *)v82 + 3);
            *(_DWORD *)uint64_t v52 = v83;
            __int16 v85 = 49;
            goto LABEL_44;
          case 327682:
            long long v121 = *(_OWORD *)(v4 + 112);
            long long v122 = *(_OWORD *)(v4 + 128);
            long long v123 = *(_OWORD *)(v4 + 144);
            uint64_t v124 = *(void *)(v4 + 160);
            int v125 = *(_DWORD *)(v4 + 168);
            int v126 = *(_DWORD *)(v4 + 172);
            long long v144 = *(_OWORD *)(v4 + 96);
            long long v145 = v121;
            long long v146 = v122;
            long long v147 = v123;
            uint64_t v148 = v124;
            int v149 = v125;
            int v150 = v126;
            int v127 = (char *)&v144 + 8 * v75;
            int v128 = *(_DWORD *)v127;
            __int16 v84 = *((_WORD *)v127 + 3);
            *(_DWORD *)uint64_t v52 = v128;
            __int16 v85 = 13;
            goto LABEL_44;
          case 327683:
            long long v97 = *(_OWORD *)(v4 + 112);
            long long v98 = *(_OWORD *)(v4 + 128);
            long long v99 = *(_OWORD *)(v4 + 144);
            uint64_t v100 = *(void *)(v4 + 160);
            int v101 = *(_DWORD *)(v4 + 168);
            int v102 = *(_DWORD *)(v4 + 172);
            long long v144 = *(_OWORD *)(v4 + 96);
            long long v145 = v97;
            long long v146 = v98;
            long long v147 = v99;
            uint64_t v148 = v100;
            int v149 = v101;
            int v150 = v102;
            int32x2_t v103 = (char *)&v144 + 8 * v75;
            int v104 = *(_DWORD *)v103;
            __int16 v84 = *((_WORD *)v103 + 3);
            *(_DWORD *)uint64_t v52 = v104;
            __int16 v85 = 14;
            goto LABEL_44;
          case 327684:
            long long v129 = *(_OWORD *)(v4 + 112);
            long long v130 = *(_OWORD *)(v4 + 128);
            long long v131 = *(_OWORD *)(v4 + 144);
            uint64_t v132 = *(void *)(v4 + 160);
            int v133 = *(_DWORD *)(v4 + 168);
            int v134 = *(_DWORD *)(v4 + 172);
            long long v144 = *(_OWORD *)(v4 + 96);
            long long v145 = v129;
            long long v146 = v130;
            long long v147 = v131;
            uint64_t v148 = v132;
            int v149 = v133;
            int v150 = v134;
            BOOL v135 = (char *)&v144 + 8 * v75;
            int v136 = *(_DWORD *)v135;
            __int16 v84 = *((_WORD *)v135 + 3);
            *(_DWORD *)uint64_t v52 = v136;
            __int16 v85 = 15;
LABEL_44:
            __int16 *v53 = v85;
            _WORD *v54 = v84;
            goto LABEL_45;
          default:
            if (v63) {
              goto LABEL_49;
            }
            uint64_t v9 = v47;
LABEL_45:

            uint64_t v10 = v143;
            break;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
LABEL_6:
    ++v8;
  }
  while (v8 != v9);
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1B6B52A70()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F35BB0]);
  uint64_t v1 = (void *)sub_1B6E30E78();
  id v2 = objc_msgSend(v0, sel_initWithURL_, v1);

  uint64_t v3 = (char *)objc_msgSend(v2, sel_count);
  if (v3)
  {
    uint64_t v4 = v3;
    unint64_t v5 = 0;
    long long v10 = xmmword_1B6E77050;
    do
    {
      id v6 = v5 + 1;
      id v7 = objc_msgSend(v2, sel_objectAtIndex_, v10);
      sub_1B68805E0(0, &qword_1EB980E00);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = v10;
      *(void *)(v8 + 56) = sub_1B63989B8(0, &qword_1E9DD0690);
      *(void *)(v8 + 32) = v7;
      id v9 = v7;
      sub_1B6E338E8();

      swift_bridgeObjectRelease();
      unint64_t v5 = v6;
    }
    while (v4 != v6);
  }
}

unint64_t sub_1B6B52BD4()
{
  unint64_t result = qword_1E9DD6148;
  if (!qword_1E9DD6148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6148);
  }
  return result;
}

uint64_t sub_1B6B52C28(void *a1, uint64_t a2)
{
  return sub_1B6B4CCA0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1B6B52C30(uint64_t a1, uint64_t a2)
{
  sub_1B638C100(0, &qword_1E9DD6158, (void (*)(uint64_t))type metadata accessor for SkeletonData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for MDLImporter.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MDLImporter.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MDLImporter.Error()
{
  return &type metadata for MDLImporter.Error;
}

double sub_1B6B52D74(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  return sub_1B6835844(a1, a2, a3);
}

uint64_t sub_1B6B52D8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 88);
  uint64_t v4 = type metadata accessor for FutureStorage();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1B6B52E2C(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 88);
  uint64_t v4 = type metadata accessor for FutureStorage();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t sub_1B6B52ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v27 = a4;
  uint64_t v26 = sub_1B6E324B8();
  uint64_t v9 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26, v10);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.n128_f64[0] = MEMORY[0x1F4188790](v13, v14);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56))((char *)&v26 - v16, 1, 1, a3, v15);
  id v19 = *(void **)(v5 + *(void *)(*(void *)v5 + 96));
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a3;
  void v20[3] = v5;
  _OWORD v20[4] = v17;
  void v20[5] = a1;
  v20[6] = a2;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1B6B57B44;
  *(void *)(v21 + 24) = v20;
  aBlock[4] = sub_1B6377A84;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B691FFC8;
  aBlock[3] = &unk_1F0FBA248;
  uint64_t v22 = _Block_copy(aBlock);
  uint64_t v23 = v19;
  swift_retain();
  swift_release();
  dispatch_sync(v23, v22);

  _Block_release(v22);
  uint64_t v24 = v26;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v17, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v27, v12, a3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v24);
  return swift_release();
}

uint64_t sub_1B6B5318C(char *a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  uint64_t v26 = a3;
  uint64_t v28 = a2;
  uint64_t v6 = *(void *)a1;
  uint64_t v27 = sub_1B6E324B8();
  uint64_t v7 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27, v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for FutureStorage();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  __n128 v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = MEMORY[0x1F4188790](v16, v17);
  uint64_t v20 = (char *)&v25 - v19;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t, double))(v12 + 16);
  v21((char *)&v25 - v19, &a1[*(void *)(v6 + 88)], v11, v18);
  v26(v20);
  (*(void (**)(char *, void, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 0, 1);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v28, v10, v27);
  ((void (*)(char *, char *, uint64_t))v21)(v15, v20, v11);
  uint64_t v22 = &a1[*(void *)(*(void *)a1 + 88)];
  uint64_t v23 = type metadata accessor for FutureStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v22, v15, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
}

uint64_t sub_1B6B5343C@<X0>(uint64_t a1@<X8>)
{
  v5[2] = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = type metadata accessor for FutureState();
  return sub_1B6B52ECC((uint64_t)sub_1B6B57B04, (uint64_t)v5, v3, a1);
}

uint64_t sub_1B6B534A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for FutureStorage() + 28);
  uint64_t v4 = type metadata accessor for FutureState();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v3, v4);
}

uint64_t sub_1B6B53534(uint64_t a1)
{
  uint64_t v46 = a1;
  uint64_t v2 = *v1;
  sub_1B6B57AA8();
  uint64_t v45 = *(void *)(v2 + 80);
  uint64_t v3 = type metadata accessor for FutureResult();
  uint64_t v4 = MEMORY[0x1E4FBC848] + 8;
  swift_getFunctionTypeMetadata1();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1B6E31D18();
  uint64_t v44 = v3;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v7 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata3, v8);
  long long v43 = (NSObject **)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (dispatch_group_t *)((char *)&v41 - v12);
  uint64_t v14 = sub_1B6E324B8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16);
  double v18 = (NSObject **)((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v21 = MEMORY[0x1F4188790](v19, v20);
  uint64_t v23 = (char *)&v41 - v22;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v7 + 56))((char *)&v41 - v22, 1, 1, TupleTypeMetadata3, v21);
  uint64_t v48 = v45;
  int v49 = v23;
  uint64_t v50 = v46;
  sub_1B6B52ECC((uint64_t)sub_1B6B57AE8, (uint64_t)v47, v4, v46);
  uint64_t v24 = TupleTypeMetadata3;
  (*(void (**)(NSObject **, char *, uint64_t))(v15 + 16))(v18, v23, v14);
  if ((*(unsigned int (**)(NSObject **, uint64_t, uint64_t))(v7 + 48))(v18, 1, TupleTypeMetadata3) == 1)
  {
    uint64_t v25 = *(void (**)(NSObject **, uint64_t))(v15 + 8);
    v25(v18, v14);
    return ((uint64_t (*)(char *, uint64_t))v25)(v23, v14);
  }
  uint64_t v45 = v7;
  uint64_t v46 = v14;
  uint64_t v26 = *(int *)(TupleTypeMetadata3 + 64);
  uint64_t v27 = (char *)v13 + v26;
  uint64_t v28 = (char *)v18 + v26;
  id v30 = *v18;
  id v29 = v18[1];
  *uint64_t v13 = v30;
  v13[1] = v29;
  long long v42 = v13;
  uint64_t v31 = v44;
  uint64_t v32 = *(void *)(v44 - 8);
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))((char *)v13 + v26, v28, v44);
  uint64_t v41 = v24;
  long long v33 = v43;
  long long v34 = (char *)v43 + *(int *)(v24 + 64);
  void *v43 = v30;
  v33[1] = v29;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v34, v27, v31);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v32 + 8);
  swift_bridgeObjectRetain();
  v35(v34, v31);
  if (!MEMORY[0x1BA9B3960](v29, TupleTypeMetadata2))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v39 = v42;
    dispatch_group_leave(*v42);
    (*(void (**)(dispatch_group_t *, uint64_t))(v45 + 8))(v39, v41);
    uint64_t v25 = *(void (**)(NSObject **, uint64_t))(v15 + 8);
    uint64_t v14 = v46;
    return ((uint64_t (*)(char *, uint64_t))v25)(v23, v14);
  }
  uint64_t v36 = 0;
  uint64_t v37 = v29 + 6;
  while ((sub_1B6E31CB8() & 1) != 0)
  {
    _swift_isClassOrObjCExistentialType();
    isa = (void (*)(char *))v37[-1].isa;
    ++v36;
    swift_retain();
    isa(v27);
    swift_release();
    v37 += 3;
    if (v36 == MEMORY[0x1BA9B3960](v29, TupleTypeMetadata2)) {
      goto LABEL_7;
    }
  }
  uint64_t result = sub_1B6E32908();
  __break(1u);
  return result;
}

void sub_1B6B539B8(id *a1, id *a2, char *a3)
{
  long long v56 = a3;
  uint64_t v54 = a2;
  uint64_t v4 = type metadata accessor for FutureResult();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v50 = (id *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v51 = (id *)((char *)&v49 - v10);
  MEMORY[0x1F4188790](v11, v12);
  int v49 = (id *)((char *)&v49 - v13);
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (id *)((char *)&v49 - v16);
  MEMORY[0x1F4188790](v18, v19);
  double v21 = (id *)((char *)&v49 - v20);
  MEMORY[0x1F4188790](v22, v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = type metadata accessor for FutureState();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26, v28);
  id v30 = (char *)&v49 - v29;
  uint64_t v31 = type metadata accessor for FutureStorage();
  uint64_t v52 = (char *)a1 + *(int *)(v31 + 28);
  uint64_t v53 = v27;
  uint64_t v32 = *(void (**)(char *))(v27 + 16);
  uint64_t v55 = v26;
  v32(v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v30, 1, v4) == 1)
  {
    sub_1B6B57AA8();
    swift_getFunctionTypeMetadata1();
    swift_getTupleTypeMetadata2();
    sub_1B6E31D18();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v34 = sub_1B6E324B8();
    uint64_t v35 = v54;
    (*(void (**)(id *, uint64_t))(*(void *)(v34 - 8) + 8))(v54, v34);
    uint64_t v36 = (char *)v35 + *(int *)(TupleTypeMetadata3 + 64);
    id v37 = *a1;
    *uint64_t v35 = *a1;
    v35[1] = *(id *)((char *)a1 + *(int *)(v31 + 36));
    uint64_t v51 = (id *)v31;
    __int16 v38 = v56;
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v39(v36, (uint64_t)v56, v4);
    (*(void (**)(id *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 56))(v35, 0, 1, TupleTypeMetadata3);
    unint64_t v40 = *(void (**)(char *, uint64_t))(v53 + 8);
    id v41 = v37;
    swift_bridgeObjectRetain();
    long long v42 = v52;
    v40(v52, v55);
    v39(v42, (uint64_t)v38, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v42, 0, 1, v4);
    sub_1B6B54078();

    *a1 = 0;
    return;
  }
  long long v43 = v56;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v25, v30, v4);
  uint64_t v44 = *(void (**)(id *, char *, uint64_t))(v5 + 16);
  v44(v21, v25, v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1
      || (*v21, v44(v17, v43, v4), int v46 = swift_getEnumCaseMultiPayload(), v46 == 2))
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v25, v4);
      return;
    }
    if (v46) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v5 + 8))(v17, v4);
    }
    v44(v49, v43, v4);
    uint64_t v57 = 0;
    unint64_t v58 = 0xE000000000000000;
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E33458();
    sub_1B6E31948();
    sub_1B6E33458();
  }
  else
  {
    uint64_t v47 = *(void (**)(id *, uint64_t))(v5 + 8);
    v47(v21, v4);
    v44(v51, v43, v4);
    int v48 = swift_getEnumCaseMultiPayload();
    if (v48 == 2)
    {
      v47((id *)v25, v4);
      return;
    }
    if (v48) {

    }
    else {
      v47(v51, v4);
    }
    v44(v50, v43, v4);
    uint64_t v57 = 0;
    unint64_t v58 = 0xE000000000000000;
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E33458();
    sub_1B6E31948();
    sub_1B6E33458();
  }
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B6B54078()
{
  return sub_1B6E31D08();
}

BOOL sub_1B6B540FC()
{
  uint64_t v0 = type metadata accessor for FutureState();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2);
  uint64_t v4 = (char *)&v17 - v3;
  uint64_t v5 = type metadata accessor for FutureResult();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v17 - v12;
  sub_1B6B5343C((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
  else
  {
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v15(v13, v4, v5);
    v15(v9, v13, v5);
    BOOL v14 = swift_getEnumCaseMultiPayload() == 2;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return v14;
}

uint64_t sub_1B6B54314()
{
  uint64_t v0 = type metadata accessor for FutureResult();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2);
  uint64_t v4 = (char *)&v6 - v3;
  swift_storeEnumTagMultiPayload();
  sub_1B6B53534((uint64_t)v4);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t Future.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  uint64_t v2 = type metadata accessor for FutureStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t type metadata accessor for FutureStorage()
{
  return sub_1B62C36EC();
}

uint64_t Future.__deallocating_deinit()
{
  Future.deinit();

  return swift_deallocClassInstance();
}

BOOL sub_1B6B54508()
{
  return sub_1B6B540FC();
}

uint64_t sub_1B6B54530()
{
  return sub_1B6B54314();
}

uint64_t sub_1B6B54554()
{
  uint64_t result = type metadata accessor for FutureStorage();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Future()
{
  return sub_1B62C36EC();
}

uint64_t method lookup function for Future(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Future);
}

uint64_t sub_1B6B54624()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Promise()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6B54684()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1B6B54718(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)uint64_t v3 = *(void *)a2;
    uint64_t v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)uint64_t v3 = v14;
      v3[v5] = 1;
    }
    else if (v9)
    {
      memcpy(__dst, a2, v5 + 1);
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(__dst);
      v3[v5] = 0;
    }
  }
  return v3;
}

void sub_1B6B548B4(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1)
  {
  }
  else if (!v3)
  {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

unsigned char *sub_1B6B549BC(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *(void *)a2;
    id v11 = *(id *)a2;
    *(void *)__dst = v10;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_1B6B54B18(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = *((unsigned __int8 *)__src + v7);
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      id v18 = *__src;
      id v19 = v18;
      *__dst = v18;
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

unsigned char *sub_1B6B54D54(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_1B6B54EA0(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = *((unsigned __int8 *)__src + v7);
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *__dst = *__src;
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_1B6B550D4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1B6B55208(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1B6B553D0);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1B6B553F8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1B6B554B0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for FutureResult()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6B555A0()
{
  uint64_t result = type metadata accessor for FutureState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_1B6B55658(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6 & 0xF8 | 7;
  uint64_t v8 = ~v7;
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = *(void *)(v5 + 64);
  }
  uint64_t v10 = v9 + 8;
  int v11 = (char *)*a2;
  *a1 = *a2;
  if ((v6 & 0x1000F8) == 0
    && ((((v9 + 8 + (((v6 & 0xF8) + 15) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 <= 0x18)
  {
    unsigned int v13 = (void *)(((unint64_t)a1 + 15) & v8);
    unsigned int v14 = (unsigned __int8 *)(((unint64_t)a2 + 15) & v8);
    unsigned int v15 = v14[v9];
    int v16 = v11;
    if ((v15 ^ 0xFF) < 0xFD) {
      goto LABEL_26;
    }
    if (v15 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v17 = v9;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *v14;
          goto LABEL_20;
        case 2:
          int v18 = *(unsigned __int16 *)v14;
          goto LABEL_20;
        case 3:
          int v18 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_20;
        case 4:
          int v18 = *(_DWORD *)v14;
LABEL_20:
          int v19 = (v18 | ((v15 - 2) << (8 * v9))) + 2;
          unsigned int v20 = v18 + 2;
          if (v9 >= 4) {
            unsigned int v15 = v20;
          }
          else {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      uint64_t v24 = *(void *)v14;
      id v25 = *(id *)v14;
      *unsigned int v13 = v24;
      *((unsigned char *)v13 + v9) = 1;
      goto LABEL_27;
    }
    if (v15)
    {
LABEL_26:
      memcpy(v13, v14, v9 + 1);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(v13, v14, v4);
      *((unsigned char *)v13 + v9) = 0;
    }
LABEL_27:
    double v21 = (void *)(((unint64_t)v13 + v10) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = (void *)((unint64_t)&v14[v10] & 0xFFFFFFFFFFFFFFF8);
    *double v21 = *v22;
    *(void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    return a1;
  }
  a1 = (void **)&v11[(v7 + 16) & v8];
  swift_retain();
  return a1;
}

uint64_t sub_1B6B55888(id *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  int v6 = (unsigned __int8 *)(((unint64_t)a1 + v5 + 8) & ~v5);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(v4 + 64);
  }
  unsigned int v8 = v6[v7];
  if ((v8 ^ 0xFF) >= 0xFD)
  {
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *v6;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)v6;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)v6 | (v6[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)v6;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(unsigned __int8 *))(v4 + 8))(v6);
    }
  }

  return swift_bridgeObjectRelease();
}

void **sub_1B6B55A0C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = v7 + 15;
  unint64_t v9 = (unint64_t)a1 + v7 + 15;
  unint64_t v10 = ~v7 & 0xFFFFFFFFFFFFFFF8;
  int v11 = (void *)(v9 & v10);
  int v12 = (unsigned __int8 *)(((unint64_t)a2 + v8) & v10);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  unsigned int v14 = v12[v13];
  id v15 = v4;
  if ((v14 ^ 0xFF) < 0xFD) {
    goto LABEL_20;
  }
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_14;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_14;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_14;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_14:
        int v18 = (v17 | ((v14 - 2) << (8 * v13))) + 2;
        unsigned int v19 = v17 + 2;
        if (v13 >= 4) {
          unsigned int v14 = v19;
        }
        else {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    uint64_t v23 = *(void *)v12;
    id v24 = *(id *)v12;
    void *v11 = v23;
    *((unsigned char *)v11 + v13) = 1;
    goto LABEL_21;
  }
  if (v14)
  {
LABEL_20:
    memcpy(v11, v12, v13 + 1);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(v11, v12, v5);
    *((unsigned char *)v11 + v13) = 0;
  }
LABEL_21:
  unsigned int v20 = (void *)(((unint64_t)v11 + v13 + 8) & 0xFFFFFFFFFFFFFFF8);
  double v21 = (void *)((unint64_t)&v12[v13 + 8] & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v20 = *v21;
  *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_1B6B55BF0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  uint64_t v12 = v11 + 15;
  unint64_t v13 = (unint64_t)a1 + v11 + 15;
  unint64_t v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  id v15 = (unsigned __int8 *)(v13 & v14);
  uint64_t v16 = (unsigned __int8 *)(((unint64_t)a2 + v12) & v14);
  if (*(void *)(v10 + 64) <= 8uLL) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = *(void *)(v10 + 64);
  }
  unsigned int v18 = v15[v17];
  unsigned int v19 = v16[v17];
  if ((v18 ^ 0xFF) < 0xFD)
  {
    if ((v19 ^ 0xFF) < 0xFD) {
      goto LABEL_43;
    }
    if (v19 >= 2)
    {
      if (v17 <= 3) {
        uint64_t v23 = v17;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v16;
          goto LABEL_29;
        case 2:
          int v24 = *(unsigned __int16 *)v16;
          goto LABEL_29;
        case 3:
          int v24 = *(unsigned __int16 *)v16 | (v16[2] << 16);
          goto LABEL_29;
        case 4:
          int v24 = *(_DWORD *)v16;
LABEL_29:
          unsigned int v19 = (v24 | ((v19 - 2) << (8 * v17))) + 2;
          unsigned int v28 = v24 + 2;
          if (v17 >= 4) {
            unsigned int v19 = v28;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 1) {
      goto LABEL_66;
    }
LABEL_32:
    if (!v19)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v10 + 16))(v15, v16, v9);
      v15[v17] = 0;
      goto LABEL_44;
    }
LABEL_43:
    memcpy(v15, v16, v17 + 1);
    goto LABEL_44;
  }
  if (v19 > 2)
  {
    unsigned int v25 = v18 - 2;
    if (v18 >= 2)
    {
      if (v17 <= 3) {
        uint64_t v26 = v17;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v15;
          goto LABEL_37;
        case 2:
          int v27 = *(unsigned __int16 *)v15;
          goto LABEL_37;
        case 3:
          int v27 = *(unsigned __int16 *)(v13 & v14) | (*(unsigned __int8 *)((v13 & v14) + 2) << 16);
          goto LABEL_37;
        case 4:
          int v27 = *(_DWORD *)v15;
LABEL_37:
          int v29 = (v27 | (v25 << (8 * v17))) + 2;
          unsigned int v18 = v27 + 2;
          if (v17 < 4) {
            unsigned int v18 = v29;
          }
          break;
        default:
          break;
      }
    }
    if (v18 == 1)
    {
    }
    else if (!v18)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v15, v9);
    }
    goto LABEL_43;
  }
  if (v15 != v16)
  {
    unsigned int v20 = v18 - 2;
    if (v18 >= 2)
    {
      if (v17 <= 3) {
        uint64_t v21 = v17;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *v15;
          goto LABEL_48;
        case 2:
          int v22 = *(unsigned __int16 *)v15;
          goto LABEL_48;
        case 3:
          int v22 = *(unsigned __int16 *)(v13 & v14) | (*(unsigned __int8 *)((v13 & v14) + 2) << 16);
          goto LABEL_48;
        case 4:
          int v22 = *(_DWORD *)v15;
LABEL_48:
          int v33 = (v22 | (v20 << (8 * v17))) + 2;
          unsigned int v18 = v22 + 2;
          if (v17 < 4) {
            unsigned int v18 = v33;
          }
          break;
        default:
          break;
      }
    }
    if (v18 == 1)
    {
    }
    else if (!v18)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v15, v9);
    }
    unsigned int v19 = v16[v17];
    unsigned int v34 = v19 - 2;
    if (v19 >= 2)
    {
      if (v17 <= 3) {
        uint64_t v35 = v17;
      }
      else {
        uint64_t v35 = 4;
      }
      switch(v35)
      {
        case 1:
          int v36 = *v16;
          goto LABEL_63;
        case 2:
          int v36 = *(unsigned __int16 *)v16;
          goto LABEL_63;
        case 3:
          int v36 = *(unsigned __int16 *)v16 | (v16[2] << 16);
          goto LABEL_63;
        case 4:
          int v36 = *(_DWORD *)v16;
LABEL_63:
          int v37 = (v36 | (v34 << (8 * v17))) + 2;
          unsigned int v19 = v36 + 2;
          if (v17 < 4) {
            unsigned int v19 = v37;
          }
          break;
        default:
          break;
      }
    }
    if (v19 == 1)
    {
LABEL_66:
      uint64_t v38 = *(void *)v16;
      id v39 = *(id *)v16;
      *(void *)id v15 = v38;
      v15[v17] = 1;
      goto LABEL_44;
    }
    goto LABEL_32;
  }
LABEL_44:
  id v30 = (void *)((unint64_t)&v15[v17 + 8] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (void *)((unint64_t)&v16[v17 + 8] & 0xFFFFFFFFFFFFFFF8);
  *id v30 = *v31;
  *(void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1B6B56014(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v6 = v5 + 15;
  unint64_t v7 = (unint64_t)a1 + v5 + 15;
  unint64_t v8 = ~v5 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = (void *)(v7 & v8);
  uint64_t v10 = (unsigned __int8 *)(((unint64_t)a2 + v6) & v8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v12 = v10[v11];
  if ((v12 ^ 0xFF) < 0xFD) {
    goto LABEL_19;
  }
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *v10;
        goto LABEL_14;
      case 2:
        int v15 = *(unsigned __int16 *)v10;
        goto LABEL_14;
      case 3:
        int v15 = *(unsigned __int16 *)(((unint64_t)a2 + v6) & v8) | (*(unsigned __int8 *)((((unint64_t)a2 + v6) & v8)
                                                                                            + 2) << 16);
        goto LABEL_14;
      case 4:
        int v15 = *(_DWORD *)v10;
LABEL_14:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    *uint64_t v9 = *(void *)v10;
    *((unsigned char *)v9 + v11) = 1;
    goto LABEL_20;
  }
  if (v12)
  {
LABEL_19:
    memcpy(v9, v10, v11 + 1);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *))(v4 + 32))(v9, v10);
    *((unsigned char *)v9 + v11) = 0;
  }
LABEL_20:
  uint64_t v17 = (void *)(((unint64_t)v9 + v11 + 8) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v18 = (void *)((unint64_t)&v10[v11 + 8] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  *(void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void **sub_1B6B561D4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v10 = v9 + 15;
  unint64_t v11 = (unint64_t)a1 + v9 + 15;
  unint64_t v12 = ~v9 & 0xFFFFFFFFFFFFFFF8;
  unsigned int v13 = (unsigned __int8 *)(v11 & v12);
  uint64_t v14 = (unsigned __int8 *)(((unint64_t)a2 + v10) & v12);
  if (*(void *)(v8 + 64) <= 8uLL) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = *(void *)(v8 + 64);
  }
  unsigned int v16 = v13[v15];
  unsigned int v17 = v14[v15];
  if ((v16 ^ 0xFF) < 0xFD)
  {
    if ((v17 ^ 0xFF) < 0xFD) {
      goto LABEL_43;
    }
    if (v17 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v21 = v15;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *v14;
          goto LABEL_29;
        case 2:
          int v22 = *(unsigned __int16 *)v14;
          goto LABEL_29;
        case 3:
          int v22 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_29;
        case 4:
          int v22 = *(_DWORD *)v14;
LABEL_29:
          unsigned int v17 = (v22 | ((v17 - 2) << (8 * v15))) + 2;
          unsigned int v26 = v22 + 2;
          if (v15 >= 4) {
            unsigned int v17 = v26;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 1) {
      goto LABEL_66;
    }
LABEL_32:
    if (!v17)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(v13, v14, v7);
      v13[v15] = 0;
      goto LABEL_44;
    }
LABEL_43:
    memcpy(v13, v14, v15 + 1);
    goto LABEL_44;
  }
  if (v17 > 2)
  {
    unsigned int v23 = v16 - 2;
    if (v16 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v24 = v15;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *v13;
          goto LABEL_37;
        case 2:
          int v25 = *(unsigned __int16 *)v13;
          goto LABEL_37;
        case 3:
          int v25 = *(unsigned __int16 *)(v11 & v12) | (*(unsigned __int8 *)((v11 & v12) + 2) << 16);
          goto LABEL_37;
        case 4:
          int v25 = *(_DWORD *)v13;
LABEL_37:
          int v27 = (v25 | (v23 << (8 * v15))) + 2;
          unsigned int v16 = v25 + 2;
          if (v15 < 4) {
            unsigned int v16 = v27;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
    }
    else if (!v16)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v13, v7);
    }
    goto LABEL_43;
  }
  if (v13 != v14)
  {
    unsigned int v18 = v16 - 2;
    if (v16 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v19 = v15;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *v13;
          goto LABEL_48;
        case 2:
          int v20 = *(unsigned __int16 *)v13;
          goto LABEL_48;
        case 3:
          int v20 = *(unsigned __int16 *)(v11 & v12) | (*(unsigned __int8 *)((v11 & v12) + 2) << 16);
          goto LABEL_48;
        case 4:
          int v20 = *(_DWORD *)v13;
LABEL_48:
          int v31 = (v20 | (v18 << (8 * v15))) + 2;
          unsigned int v16 = v20 + 2;
          if (v15 < 4) {
            unsigned int v16 = v31;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
    }
    else if (!v16)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v13, v7);
    }
    unsigned int v17 = v14[v15];
    unsigned int v32 = v17 - 2;
    if (v17 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v33 = v15;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *v14;
          goto LABEL_63;
        case 2:
          int v34 = *(unsigned __int16 *)v14;
          goto LABEL_63;
        case 3:
          int v34 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_63;
        case 4:
          int v34 = *(_DWORD *)v14;
LABEL_63:
          int v35 = (v34 | (v32 << (8 * v15))) + 2;
          unsigned int v17 = v34 + 2;
          if (v15 < 4) {
            unsigned int v17 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 1)
    {
LABEL_66:
      *(void *)unsigned int v13 = *(void *)v14;
      v13[v15] = 1;
      goto LABEL_44;
    }
    goto LABEL_32;
  }
LABEL_44:
  unsigned int v28 = (void *)((unint64_t)&v13[v15 + 8] & 0xFFFFFFFFFFFFFFF8);
  int v29 = (void *)((unint64_t)&v14[v15 + 8] & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v28 = *v29;
  *(void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B6B565E4(int *a1, int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v5 = *(_DWORD *)(v3 + 80) & 0xF8;
  uint64_t v6 = v5 | 7;
  uint64_t v7 = v4 + 8;
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_5;
  }
  unint64_t v10 = ((((v7 + ((v5 + 15) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v11 = v10 & 0xFFFFFFF8;
  unsigned int v12 = a2 - 2147483646;
  if ((v10 & 0xFFFFFFF8) != 0) {
    unsigned int v12 = 2;
  }
  if (v12 >= 0x10000) {
    int v13 = 4;
  }
  else {
    int v13 = 2;
  }
  if (v12 < 0x100) {
    int v14 = 1;
  }
  else {
    int v14 = v13;
  }
  if (v14 == 4)
  {
    int v15 = *(int *)((char *)a1 + v10);
    if (!v15) {
      goto LABEL_5;
    }
  }
  else if (v14 == 2)
  {
    int v15 = *(unsigned __int16 *)((char *)a1 + v10);
    if (!v15) {
      goto LABEL_5;
    }
  }
  else
  {
    int v15 = *((unsigned __int8 *)a1 + v10);
    if (!v15)
    {
LABEL_5:
      unint64_t v8 = *(void *)((((v7 + (((unint64_t)a1 + v6 + 8) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v8 >= 0xFFFFFFFF) {
        LODWORD(v8) = -1;
      }
      return (v8 + 1);
    }
  }
  int v16 = v15 - 1;
  if (v11)
  {
    int v16 = 0;
    int v17 = *a1;
  }
  else
  {
    int v17 = 0;
  }
  return (v17 | v16) ^ 0x80000000;
}

void sub_1B6B5672C(unsigned char *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v6 = 8;
  if (*(void *)(v5 + 64) > 8uLL) {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = v7 | 7;
  uint64_t v9 = (v7 + 15) & ~(v7 | 7);
  uint64_t v10 = v6 + 8;
  size_t v11 = ((((v6 + 8 + v9) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (a3 < 0)
  {
    unsigned int v13 = a3 - 2147483646;
    if (v11) {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v12 = 1;
    }
    else {
      int v12 = v14;
    }
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    int v12 = 0;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_5:
      switch(v12)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          goto LABEL_25;
        case 3:
          goto LABEL_32;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_26;
        default:
LABEL_25:
          if (a2) {
LABEL_26:
          }
            *(void *)((((v10 + ((unint64_t)&a1[v8 + 8] & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) = (a2 - 1);
          break;
      }
      return;
    }
  }
  if (v11) {
    int v15 = 1;
  }
  else {
    int v15 = a2 - 0x7FFFFFFF;
  }
  if (v11)
  {
    unsigned int v16 = a2 ^ 0x80000000;
    bzero(a1, v11);
    *(_DWORD *)a1 = v16;
  }
  switch(v12)
  {
    case 1:
      a1[v11] = v15;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v15;
      break;
    case 3:
LABEL_32:
      __break(1u);
      JUMPOUT(0x1B6B568E8);
    case 4:
      *(_DWORD *)&a1[v11] = v15;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for FutureState()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B6B56928()
{
  uint64_t result = type metadata accessor for FutureResult();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

char *sub_1B6B569A4(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)uint64_t v3 = *(void *)a2;
    uint64_t v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    if ((v9 ^ 0xFF) < 0xFD) {
      goto LABEL_25;
    }
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_20;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_20;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_20;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_20:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v15 = *(void *)a2;
      id v16 = *(id *)a2;
      *(void *)uint64_t v3 = v15;
      v3[v5] = 1;
      return v3;
    }
    if (v9)
    {
LABEL_25:
      memcpy(__dst, a2, v5 + 1);
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(__dst);
      v3[v5] = 0;
    }
  }
  return v3;
}

void sub_1B6B56B4C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = 8;
  if (*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) > 8uLL) {
    uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v3 = a1[v2];
  if (v3 <= 2)
  {
    if (v3 == 2)
    {
      if (v2 <= 3) {
        uint64_t v4 = v2;
      }
      else {
        uint64_t v4 = 4;
      }
      switch(v4)
      {
        case 1:
          int v5 = *a1;
          goto LABEL_13;
        case 2:
          int v5 = *(unsigned __int16 *)a1;
          goto LABEL_13;
        case 3:
          int v5 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_13;
        case 4:
          int v5 = *(_DWORD *)a1;
LABEL_13:
          unsigned int v3 = v5 + 2;
          unsigned int v6 = v5 + 2;
          if (v2 >= 4) {
            unsigned int v3 = v6;
          }
          break;
        default:
          return;
      }
    }
    if (v3 == 1)
    {
    }
    else if (!v3)
    {
      (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
    }
  }
}

unsigned char *sub_1B6B56C5C(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  if ((v5 ^ 0xFF) < 0xFD) {
    goto LABEL_19;
  }
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_14;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_14;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_14;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_14:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v11 = *(void *)a2;
    id v12 = *(id *)a2;
    *(void *)__dst = v11;
    __dst[v4] = 1;
    return __dst;
  }
  if (v5)
  {
LABEL_19:
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1B6B56DC4(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = __dst[v7];
  unsigned int v9 = __src[v7];
  if ((v8 ^ 0xFF) < 0xFD)
  {
    if ((v9 ^ 0xFF) < 0xFD) {
      goto LABEL_43;
    }
    if (v9 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *__src;
          goto LABEL_29;
        case 2:
          int v14 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v14 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v14 = *(_DWORD *)__src;
LABEL_29:
          unsigned int v9 = (v14 | ((v9 - 2) << (8 * v7))) + 2;
          unsigned int v18 = v14 + 2;
          if (v7 >= 4) {
            unsigned int v9 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1) {
      goto LABEL_66;
    }
LABEL_32:
    if (!v9)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 0;
      return __dst;
    }
LABEL_43:
    memcpy(__dst, __src, v7 + 1);
    return __dst;
  }
  if (v9 > 2)
  {
    unsigned int v15 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *__dst;
          goto LABEL_37;
        case 2:
          int v17 = *(unsigned __int16 *)__dst;
          goto LABEL_37;
        case 3:
          int v17 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_37;
        case 4:
          int v17 = *(_DWORD *)__dst;
LABEL_37:
          int v19 = (v17 | (v15 << (8 * v7))) + 2;
          unsigned int v8 = v17 + 2;
          if (v7 < 4) {
            unsigned int v8 = v19;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    goto LABEL_43;
  }
  if (__dst != __src)
  {
    unsigned int v10 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v11 = v7;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *__dst;
          goto LABEL_48;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_48;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_48;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_48:
          int v21 = (v12 | (v10 << (8 * v7))) + 2;
          unsigned int v8 = v12 + 2;
          if (v7 < 4) {
            unsigned int v8 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v9 = __src[v7];
    unsigned int v22 = v9 - 2;
    if (v9 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v23 = v7;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *__src;
          goto LABEL_63;
        case 2:
          int v24 = *(unsigned __int16 *)__src;
          goto LABEL_63;
        case 3:
          int v24 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_63;
        case 4:
          int v24 = *(_DWORD *)__src;
LABEL_63:
          int v25 = (v24 | (v22 << (8 * v7))) + 2;
          unsigned int v9 = v24 + 2;
          if (v7 < 4) {
            unsigned int v9 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
LABEL_66:
      unsigned int v26 = *(void **)__src;
      id v27 = v26;
      *(void *)__dst = v26;
      __dst[v7] = 1;
      return __dst;
    }
    goto LABEL_32;
  }
  return __dst;
}

unsigned char *sub_1B6B57170(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  if ((v5 ^ 0xFF) < 0xFD) {
    goto LABEL_19;
  }
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_14;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_14;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_14;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_14:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 1;
    return __dst;
  }
  if (v5)
  {
LABEL_19:
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1B6B572C8(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = __dst[v7];
  unsigned int v9 = __src[v7];
  if ((v8 ^ 0xFF) < 0xFD)
  {
    if ((v9 ^ 0xFF) < 0xFD) {
      goto LABEL_43;
    }
    if (v9 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *__src;
          goto LABEL_29;
        case 2:
          int v14 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v14 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v14 = *(_DWORD *)__src;
LABEL_29:
          unsigned int v9 = (v14 | ((v9 - 2) << (8 * v7))) + 2;
          unsigned int v18 = v14 + 2;
          if (v7 >= 4) {
            unsigned int v9 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1) {
      goto LABEL_66;
    }
LABEL_32:
    if (!v9)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 0;
      return __dst;
    }
LABEL_43:
    memcpy(__dst, __src, v7 + 1);
    return __dst;
  }
  if (v9 > 2)
  {
    unsigned int v15 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *__dst;
          goto LABEL_37;
        case 2:
          int v17 = *(unsigned __int16 *)__dst;
          goto LABEL_37;
        case 3:
          int v17 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_37;
        case 4:
          int v17 = *(_DWORD *)__dst;
LABEL_37:
          int v19 = (v17 | (v15 << (8 * v7))) + 2;
          unsigned int v8 = v17 + 2;
          if (v7 < 4) {
            unsigned int v8 = v19;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    goto LABEL_43;
  }
  if (__dst != __src)
  {
    unsigned int v10 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v11 = v7;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *__dst;
          goto LABEL_48;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_48;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_48;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_48:
          int v21 = (v12 | (v10 << (8 * v7))) + 2;
          unsigned int v8 = v12 + 2;
          if (v7 < 4) {
            unsigned int v8 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v9 = __src[v7];
    unsigned int v22 = v9 - 2;
    if (v9 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v23 = v7;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *__src;
          goto LABEL_63;
        case 2:
          int v24 = *(unsigned __int16 *)__src;
          goto LABEL_63;
        case 3:
          int v24 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_63;
        case 4:
          int v24 = *(_DWORD *)__src;
LABEL_63:
          int v25 = (v24 | (v22 << (8 * v7))) + 2;
          unsigned int v9 = v24 + 2;
          if (v7 < 4) {
            unsigned int v9 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
LABEL_66:
      *(void *)__dst = *(void *)__src;
      __dst[v7] = 1;
      return __dst;
    }
    goto LABEL_32;
  }
  return __dst;
}

uint64_t sub_1B6B5766C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) > 3) {
    goto LABEL_6;
  }
  unsigned int v9 = ((a2 + ~(-1 << v6) - 252) >> v6) + 1;
  if (HIWORD(v9))
  {
    int v7 = *(_DWORD *)((char *)a1 + v5);
    if (v7) {
      goto LABEL_14;
    }
LABEL_22:
    unsigned int v11 = *((unsigned __int8 *)a1 + v4);
    if (v11 >= 3) {
      unsigned int v12 = (v11 ^ 0xFF) + 1;
    }
    else {
      unsigned int v12 = 0;
    }
    if (v12 >= 2) {
      return v12 - 1;
    }
    else {
      return 0;
    }
  }
  if (v9 > 0xFF)
  {
    int v7 = *(unsigned __int16 *)((char *)a1 + v5);
    if (*(unsigned __int16 *)((char *)a1 + v5)) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
  if (v9 < 2) {
    goto LABEL_22;
  }
LABEL_6:
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 253;
}

void sub_1B6B577AC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFD)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 252) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v8 = a2 - 253;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1B6B57974);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = ~(_BYTE)a2;
        break;
    }
  }
}

uint64_t sub_1B6B5799C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + v2);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_1B6B579D4(_WORD *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 0xFD)
  {
    unsigned int v5 = a2 - 254;
    if ((v4 + 1) < 4)
    {
      if (v4 != -1)
      {
        int v6 = v5 & ~(-1 << (8 * (v4 + 1)));
        bzero(a1, (v4 + 1));
        if (v4 == 2)
        {
          *a1 = v6;
          *((unsigned char *)a1 + 2) = BYTE2(v6);
        }
        else if (v4 == 1)
        {
          *a1 = v6;
        }
        else
        {
          *(unsigned char *)a1 = v6;
        }
      }
    }
    else
    {
      bzero(a1, (v4 + 1));
      *(_DWORD *)a1 = v5;
    }
  }
  else if (a2)
  {
    *((unsigned char *)a1 + v4) = -(char)a2;
  }
}

unint64_t sub_1B6B57AA8()
{
  unint64_t result = qword_1E9DD6408;
  if (!qword_1E9DD6408)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DD6408);
  }
  return result;
}

void sub_1B6B57AE8(id *a1)
{
  sub_1B6B539B8(a1, *(id **)(v1 + 24), *(char **)(v1 + 32));
}

uint64_t sub_1B6B57AF4(uint64_t result)
{
  if (result) {
    return _swift_isClassOrObjCExistentialType();
  }
  return result;
}

uint64_t sub_1B6B57B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B534A8(a1, a2);
}

uint64_t sub_1B6B57B0C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1B6B57B44()
{
  return sub_1B6B5318C(*(char **)(v0 + 24), *(void *)(v0 + 32), *(void (**)(char *))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16));
}

uint64_t sub_1B6B57B54()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unsigned char *storeEnumTagSinglePayload for Section(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B57C30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Section()
{
  return &type metadata for Section;
}

unint64_t sub_1B6B57C6C()
{
  unint64_t result = qword_1E9DD6410;
  if (!qword_1E9DD6410)
  {
    sub_1B6B57CC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6410);
  }
  return result;
}

void sub_1B6B57CC4()
{
  if (!qword_1E9DD6418)
  {
    unint64_t v0 = sub_1B6E31D18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD6418);
    }
  }
}

void sub_1B6B57D1C(void *a1@<X8>)
{
  *a1 = &unk_1F0FA2D00;
}

unint64_t sub_1B6B57D30()
{
  unint64_t result = qword_1E9DD6420;
  if (!qword_1E9DD6420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6420);
  }
  return result;
}

uint64_t sub_1B6B57D84(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (sub_1B6741358(0x6E77617073, 0xE500000000000000, a1, a2, a3, a4))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if ((sub_1B6741358(1953066601, 0xE400000000000000, a1, a2, a3, a4) & 1) != 0 {
         || (sub_1B6741358(0x696C616974696E69, 0xEA0000000000657ALL, a1, a2, a3, a4) & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (sub_1B6741358(0x657461647075, 0xE600000000000000, a1, a2, a3, a4))
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v9 = sub_1B6741358(0x7265646E6572, 0xE600000000000000, a1, a2, a3, a4);
    swift_bridgeObjectRelease();
    if (v9) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1B6B57EC8(char *a1, char *a2)
{
  return sub_1B6BAF708(*a1, *a2);
}

uint64_t sub_1B6B57ED4()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B57F44()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6B57F98()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B58004@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B6B58064(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6563726F66;
  if (*v1) {
    uint64_t v2 = 0x6563617073;
  }
  *a1 = v2;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1B6B58094()
{
  if (*v0) {
    return 0x6563617073;
  }
  else {
    return 0x6563726F66;
  }
}

uint64_t sub_1B6B580C0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B6B58124(uint64_t a1)
{
  unint64_t v2 = sub_1B6B591B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B58160(uint64_t a1)
{
  unint64_t v2 = sub_1B6B591B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6B5819C(void *a1, unsigned __int8 a2, __n128 a3)
{
  __n128 v13 = a3;
  sub_1B6B59204(0, &qword_1E9DD6438, (uint64_t (*)(void))sub_1B6B591B0, (uint64_t)&type metadata for ParticleForce.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  int v11 = (char *)&v13 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6B591B0();
  sub_1B6E33A88();
  __n128 v14 = v13;
  char v15 = 0;
  sub_1B6B59204(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  sub_1B62AF210((unint64_t *)&qword_1EB97D1D8);
  sub_1B6E32FA8();
  if (!v3)
  {
    v14.n128_u8[0] = a2;
    char v15 = 1;
    sub_1B66C6494();
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

double sub_1B6B583C0(uint64_t a1, char a2, float32x4_t a3)
{
  swift_retain();
  if (a2)
  {
    if (a2 == 1)
    {
      *(double *)v6.i64 = sub_1B6335378();
      goto LABEL_10;
    }
    if (a2 == 2 && (sub_1B6A81544() & 1) != 0)
    {
      *(double *)v6.i64 = sub_1B6A81DC4();
LABEL_10:
      a3 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v8, a3, 2), v7, *(float32x2_t *)a3.f32, 1), v6, a3.f32[0]);
    }
  }
  else
  {
    sub_1B633C690(*(void *)(a1 + 8), 0, 0, 1, 0, 0, 1, 0, (uint64_t)v20, v5, 0, 1);
    sub_1B62D7C10((uint64_t)v20, (uint64_t)v21, (uint64_t (*)(void))sub_1B68947DC);
    if (v22)
    {
      if ((sub_1B6A81544() & 1) == 0)
      {
        *(double *)v6.i64 = sub_1B6A81BC8();
        goto LABEL_10;
      }
    }
    else
    {
      float32x4_t v15 = (float32x4_t)v21[0];
      float32x4_t v16 = (float32x4_t)v21[1];
      float32x4_t v18 = (float32x4_t)v21[2];
      if (sub_1B6A81544())
      {
        a3 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(v18, a3, 2), v16, *(float32x2_t *)a3.f32, 1), v15, a3.f32[0]);
      }
      else
      {
        *(double *)v11.i64 = sub_1B6A81BC8();
        a3 = vmlaq_n_f32(vmlaq_lane_f32(vmulq_laneq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v11, v18.f32[0]), v12, *(float32x2_t *)v18.f32, 1), v13, v18, 2), v14, v18, 3), a3, 2), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v11, v16.f32[0]), v12, *(float32x2_t *)v16.f32, 1), v13, v16, 2),
                   v14,
                   v16,
                   3),
                 *(float32x2_t *)a3.f32,
                 1),
               vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v11, v15.f32[0]), v12, *(float32x2_t *)v15.f32, 1), v13, v15, 2), v14, v15, 3), a3.f32[0]);
      }
    }
  }
  sub_1B62F46E8();
  float v17 = v9;
  swift_release();
  *(void *)&double result = vmulq_n_f32(a3, v17).u64[0];
  return result;
}

uint64_t *sub_1B6B5857C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  swift_retain_n();
  uint64_t v6 = sub_1B695EAD0(v4);
  uint64_t v8 = v7;
  __int32 v10 = v9;
  int v11 = v9;
  swift_release();
  v12.i32[0] = v10;
  v13.i32[0] = 5;
  int8x16_t v14 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v12, v13), 0);
  v13.i64[0] = v6;
  v13.i64[1] = v8;
  float32x4_t v15 = (float32x4_t)vbslq_s8(v14, (int8x16_t)xmmword_1B6E4F300, v13);
  if (v11 == 5) {
    char v16 = 0;
  }
  else {
    char v16 = v10;
  }
  *(double *)v17.i64 = sub_1B6B583C0((uint64_t)a1, v16, v15);
  float32x4_t v87 = v17;
  long long v18 = *(_OWORD *)(v2 + 32);
  v113[0] = *(_OWORD *)(v2 + 16);
  v113[1] = v18;
  uint64_t v114 = *(void *)(v2 + 48);
  sub_1B62C9DA8(v5, (uint64_t)v113, 0x200000000, v107);
  sub_1B62D7C10((uint64_t)v107, (uint64_t)v108, (uint64_t (*)(void))sub_1B6309BA4);
  long long v106 = (unsigned __int16 *)v108[0];
  if (!v108[0]) {
    return (uint64_t *)swift_release();
  }
  if (v112 > 0)
  {
    uint64_t v91 = v109;
    if (v109)
    {
      uint64_t v19 = 0;
      uint64_t v90 = v108[5];
      int v20 = v111;
      uint64_t v21 = v111[4];
      int v22 = *(unsigned __int8 *)(v110 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v88 = v21;
      long long v89 = v111 + 8;
      uint64_t v105 = v108[0] + 41;
      int v92 = v22;
      do
      {
        uint64_t v23 = (unsigned int *)(v90 + 48 * v19);
        uint64_t v24 = *v23;
        uint64_t v98 = v23[1];
        uint64_t v25 = *((void *)v23 + 3);
        int v104 = (uint64_t *)*((void *)v23 + 2);
        uint64_t v27 = *((void *)v23 + 4);
        uint64_t v26 = *((void *)v23 + 5);
        if (v22)
        {
          unsigned int v28 = *(os_unfair_lock_s **)(v26 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v28);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v26 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        uint64_t v29 = v21;
        ecs_stack_allocator_push_snapshot(v21);
        uint64_t v97 = v20[6];
        uint64_t v101 = v20[8];
        uint64_t v102 = v20[7];
        uint64_t v99 = v20[10];
        uint64_t v100 = v20[9];
        uint64_t v30 = v20[4];
        uint64_t v31 = *(void *)(*(void *)(*(void *)(*(void *)(v26 + 40) + 16) + 32) + 16) + 1;
        uint64_t v32 = v26;
        swift_retain();
        v20[6] = ecs_stack_allocator_allocate(v30, 48 * v31, 8);
        v20[7] = v31;
        v89[1] = 0;
        v89[2] = 0;
        *long long v89 = 0;
        swift_release();
        uint64_t v33 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v104, v25, v27, (uint64_t)v20);
        uint64_t v103 = v32;
        uint64_t v34 = *(void *)(*(void *)(v32 + 40) + 16);
        uint64_t v35 = *(void *)(v34 + 128);
        if (*(void *)(v35 + 16)
          && (unint64_t v36 = sub_1B62C1A30((uint64_t)&type metadata for Mass), (v37 & 1) != 0)
          && *(ValueMetadata **)(*(void *)(v34 + 24) + 16 * *(void *)(*(void *)(v35 + 56) + 8 * v36) + 32) == &type metadata for Mass)
        {
          uint64_t v78 = sub_1B62C9024((uint64_t)&type metadata for Mass, (uint64_t)&off_1F0F9E398, v104, v25, v27, (uint64_t)v20);
          if (v24 != v98)
          {
            uint64_t v79 = v98 - v24;
            int v80 = (float32x4_t *)(v33 + 16 * v24);
            int v81 = (float *)(v78 + 4 * v24);
            v41.i32[3] = v93.i32[3];
            v40.i32[3] = v94.i32[3];
            do
            {
              __int32 v82 = v41.i32[3];
              __int32 v83 = v40.i32[3];
              float v84 = *v81++;
              float32x4_t v40 = *v80;
              float32x4_t v41 = vaddq_f32(*v80, vmulq_n_f32(v87, v84));
              v40.i32[3] = v83;
              v41.i32[3] = v82;
              float32x4_t v85 = v41;
              v85.i32[3] = 0;
              *v80++ = v85;
              --v79;
            }
            while (v79);
            float32x4_t v39 = v95;
            float32x4_t v38 = v96;
            uint64_t v21 = v29;
            goto LABEL_19;
          }
        }
        else if (v24 != v98)
        {
          uint64_t v42 = v98 - v24;
          long long v43 = (float32x4_t *)(v33 + 16 * v24);
          v39.i32[3] = v95.i32[3];
          v38.i32[3] = v96.i32[3];
          float32x4_t v41 = v93;
          float32x4_t v40 = v94;
          uint64_t v21 = v29;
          do
          {
            __int32 v44 = v39.i32[3];
            __int32 v45 = v38.i32[3];
            float32x4_t v38 = *v43;
            float32x4_t v39 = vaddq_f32(v87, *v43);
            v38.i32[3] = v45;
            v39.i32[3] = v44;
            float32x4_t v46 = v39;
            v46.i32[3] = 0;
            *v43++ = v46;
            --v42;
          }
          while (v42);
          goto LABEL_19;
        }
        float32x4_t v39 = v95;
        float32x4_t v38 = v96;
        float32x4_t v41 = v93;
        float32x4_t v40 = v94;
        uint64_t v21 = v29;
LABEL_19:
        int v22 = v92;
        float32x4_t v93 = v41;
        float32x4_t v94 = v40;
        float32x4_t v95 = v39;
        float32x4_t v96 = v38;
        unint64_t v47 = v20[6];
        uint64_t v48 = v20[8];
        if (!v48)
        {
          uint64_t v74 = v20[7];
          uint64_t v75 = (void *)v20[4];
          uint64_t v76 = v103;
          uint64_t v77 = v97;
          goto LABEL_57;
        }
        for (uint64_t i = 0; i != v48; ++i)
        {
          uint64_t v51 = (uint64_t *)(v47 + 48 * i);
          uint64_t v52 = *v51;
          uint64_t v53 = (void (*)(uint64_t))v51[4];
          uint64_t v54 = v20[9];
          if (v54) {
            BOOL v55 = v52 == v54;
          }
          else {
            BOOL v55 = 0;
          }
          if (v55 || !v106[11]) {
            goto LABEL_21;
          }
          unint64_t v56 = v106[9];
          uint64_t v57 = (void *)(v105 + v106[8]);
          uint64_t v58 = v51[2];
          uint64_t v59 = v57;
          unint64_t v60 = v56 >> 4;
          uint64_t v61 = v105;
          if (v56 >= 0x10)
          {
            while (*v59 != v52)
            {
              ++v61;
              v59 += 2;
              if (!--v60) {
                goto LABEL_36;
              }
            }
            unsigned int v62 = *(unsigned __int8 *)(v61 + v106[10]);
            BOOL v63 = v62 > 5;
            int v64 = (1 << v62) & 0x23;
            if (v63 || v64 == 0)
            {
LABEL_21:
              uint64_t v50 = swift_retain();
              v53(v50);
              swift_release();
              continue;
            }
          }
LABEL_36:
          if (swift_conformsToProtocol2()) {
            uint64_t v66 = v58;
          }
          else {
            uint64_t v66 = 0;
          }
          if (v66)
          {
            if (v56 < 0x10) {
              goto LABEL_21;
            }
            long long v67 = v57;
            unint64_t v68 = v56 >> 4;
            uint64_t v69 = v105;
            while (*v67 != v66)
            {
              ++v69;
              v67 += 2;
              if (!--v68) {
                goto LABEL_49;
              }
            }
            unsigned int v70 = *(unsigned __int8 *)(v69 + v106[10]);
            BOOL v63 = v70 > 5;
            int v71 = (1 << v70) & 0x23;
            if (v63 || v71 == 0) {
              goto LABEL_21;
            }
LABEL_49:
            uint64_t v73 = 16 * (v56 >> 4);
            while (*v57 != v66)
            {
              v57 += 2;
              v73 -= 16;
              if (!v73) {
                goto LABEL_21;
              }
            }
          }
        }
        uint64_t v74 = v20[7];
        unint64_t v47 = v20[6];
        uint64_t v75 = (void *)v20[4];
        uint64_t v76 = v103;
        uint64_t v77 = v97;
        if ((uint64_t)v20[8] >= 1) {
          swift_arrayDestroy();
        }
        uint64_t v21 = v88;
        int v22 = v92;
LABEL_57:
        ecs_stack_allocator_deallocate(v75, v47, 48 * v74);
        v20[6] = v77;
        v20[7] = v102;
        v20[8] = v101;
        v20[9] = v100;
        v20[10] = v99;
        sub_1B634507C((char *)v76);
        ecs_stack_allocator_pop_snapshot(v21);
        if (v22)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v76 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v76 + 376));
        }
        swift_release();
        ++v19;
      }
      while (v19 != v91);
    }
  }
  swift_release();
  return sub_1B632F170(v107);
}

uint64_t type metadata accessor for ParticleForce.CPUSystem()
{
  return self;
}

uint64_t sub_1B6B58BC8(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 104);
  long long v8 = *(_OWORD *)(a1 + 88);
  long long v9 = v3;
  uint64_t v10 = *(void *)(a1 + 120);
  sub_1B67CF480((uint64_t)v6);
  sub_1B62F648C(a1);
  long long v4 = v6[1];
  *(_OWORD *)(v2 + 16) = v6[0];
  *(_OWORD *)(v2 + 32) = v4;
  *(void *)(v2 + 48) = v7;
  return v2;
}

const char *sub_1B6B58C50()
{
  return "ParticleForce";
}

unint64_t sub_1B6B58C64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1B6B58F3C(a1);
  if (!v2)
  {
    *(_OWORD *)a2 = v5;
    *(unsigned char *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1B6B58C94(void *a1)
{
  return sub_1B6B5819C(a1, v1[1].n128_u8[0], *v1);
}

uint64_t sub_1B6B58CB4()
{
  return type metadata accessor for ParticleForce.CPUSystem();
}

double sub_1B6B58CD4@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 1065353216;
  *(_OWORD *)a1 = xmmword_1B6E4F300;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

uint64_t type metadata accessor for ParticleForce.GPUSystem()
{
  return self;
}

const char *sub_1B6B58D10()
{
  return "ParticleForce.GPU";
}

uint64_t sub_1B6B58D24()
{
  return type metadata accessor for ParticleForce.GPUSystem();
}

uint64_t sub_1B6B58D44(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 96);
  long long v32 = *(_OWORD *)(a1 + 80);
  long long v33 = v2;
  long long v3 = *(_OWORD *)(a1 + 128);
  long long v34 = *(_OWORD *)(a1 + 112);
  long long v35 = v3;
  long long v4 = *(_OWORD *)(a1 + 32);
  v29[0] = *(_OWORD *)(a1 + 16);
  v29[1] = v4;
  long long v5 = *(_OWORD *)(a1 + 64);
  long long v30 = *(_OWORD *)(a1 + 48);
  long long v31 = v5;
  uint64_t v6 = *(void *)&v29[0];
  swift_retain();
  uint64_t v7 = sub_1B695EAD0(*((unint64_t *)&v29[0] + 1));
  uint64_t v9 = v8;
  __int32 v11 = v10;
  int v12 = v10;
  swift_release();
  v13.i32[0] = v11;
  v14.i32[0] = 5;
  int8x16_t v15 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v13, v14), 0);
  v14.i64[0] = v7;
  v14.i64[1] = v9;
  float32x4_t v16 = (float32x4_t)vbslq_s8(v15, (int8x16_t)xmmword_1B6E4F300, v14);
  if (v12 == 5) {
    char v17 = 0;
  }
  else {
    char v17 = v11;
  }
  *(double *)&long long v18 = sub_1B6B583C0((uint64_t)v29, v17, v16);
  long long v28 = v18;
  uint64_t v19 = *(void *)a1;
  if (*(void *)a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for particle_force_uniforms(0);
    sub_1B6B594A8((uint64_t)&v28, 1, ObjectType, v21, v22, v23, v24, v25);
  }
  uint64_t v26 = v30;
  swift_retain();
  sub_1B6786A24(a1);
  sub_1B6BFF388(v26, v6, v19 == 0, 0, a1, 0x656C636974726170, 0xEE006563726F665FLL, 0);
  sub_1B6786A7C(a1);
  return swift_release();
}

uint64_t getEnumTagSinglePayload for ParticleForce(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 5;
  int v5 = v3 - 5;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleForce(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)double result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleForce()
{
  return &type metadata for ParticleForce;
}

unint64_t sub_1B6B58F3C(void *a1)
{
  sub_1B6B59204(0, &qword_1E9DD6428, (uint64_t (*)(void))sub_1B6B591B0, (uint64_t)&type metadata for ParticleForce.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6B591B0();
  unint64_t v10 = (unint64_t)v9;
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B6B59204(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    char v14 = 0;
    sub_1B62AF210((unint64_t *)&qword_1EB97D1F0);
    sub_1B6E32DF8();
    long long v12 = v13;
    char v14 = 1;
    sub_1B66C6440();
    sub_1B6E32D78();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    if (v13 == 5) {
      unint64_t v10 = 0;
    }
    else {
      unint64_t v10 = v13;
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v10;
}

unint64_t sub_1B6B591B0()
{
  unint64_t result = qword_1E9DD6430;
  if (!qword_1E9DD6430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6430);
  }
  return result;
}

void sub_1B6B59204(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleForce.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6B59338);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleForce.CodingKeys()
{
  return &type metadata for ParticleForce.CodingKeys;
}

unint64_t sub_1B6B59374()
{
  unint64_t result = qword_1E9DD6440;
  if (!qword_1E9DD6440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6440);
  }
  return result;
}

unint64_t sub_1B6B593CC()
{
  unint64_t result = qword_1E9DD6448;
  if (!qword_1E9DD6448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6448);
  }
  return result;
}

unint64_t sub_1B6B59424()
{
  unint64_t result = qword_1E9DD6450;
  if (!qword_1E9DD6450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6450);
  }
  return result;
}

id sub_1B6B59478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1) {
    return objc_msgSend(v4, sel_setBuffer_offset_atIndex_, a1, a4 + a2);
  }
  else {
    return objc_msgSend(v4, sel_setBuffer_offset_atIndex_, 0, 0);
  }
}

uint64_t sub_1B6B594A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _OWORD v9[2] = a3;
  void v9[3] = a4;
  uint64_t v9[5] = a2;
  return sub_1B6B5985C(a1, (uint64_t)sub_1B6B59950, (uint64_t)v9, a4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC278], a8);
}

id sub_1B6B59510(uint64_t a1)
{
  objc_msgSend(v1, sel_setComputePipelineState_, a1);
  sub_1B6389590(&v9);
  int64x2_t v6 = v9;
  uint64_t v2 = v10;
  sub_1B6389590(&v9);
  uint64_t v3 = v10;
  int64x2_t v4 = v9;
  int64x2_t v9 = v6;
  uint64_t v10 = v2;
  int64x2_t v7 = v4;
  uint64_t v8 = v3;
  return objc_msgSend(v1, sel_dispatchThreadgroups_threadsPerThreadgroup_, &v9, &v7);
}

uint64_t sub_1B6B59598(void *a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  uint64_t v5 = sub_1B6389254(a3);

  return sub_1B6B597AC(a1, v5);
}

uint64_t sub_1B6B595FC(void *a1, uint64_t a2, uint64_t a3)
{
  int64x2_t v4 = v3;
  swift_getObjectType();
  uint64_t v7 = sub_1B6389254(a3);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  objc_msgSend(v4, sel_setComputePipelineState_, a1);
  v13[0] = v7;
  v13[1] = v9;
  v13[2] = v11;
  return RGMTLComputeCommandEncoderDispatchOnGrid2D(v4, a1, (uint64_t)v13, 1);
}

uint64_t sub_1B6B59694(void *a1, uint64_t a2, uint64_t a3)
{
  int64x2_t v4 = v3;
  swift_getObjectType();
  uint64_t v7 = sub_1B6389254(a3);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  objc_msgSend(v4, sel_setComputePipelineState_, a1);
  v14[0] = v7;
  v14[1] = v9;
  v14[2] = v11;
  return RGMTLComputeCommandEncoderDispatchOnGrid3D(v4, a1, (uint64_t)v14, v12);
}

id sub_1B6B59728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_msgSend(v3, sel_setComputePipelineState_, a1);
  swift_getObjectType();
  v9[0] = sub_1B6BBC91C();
  v9[1] = v6;
  _OWORD v9[2] = v7;
  return objc_msgSend(v3, sel_dispatchThreadgroupsWithIndirectBuffer_indirectBufferOffset_threadsPerThreadgroup_, a2, a3, v9);
}

uint64_t sub_1B6B597AC(void *a1, uint64_t a2)
{
  objc_msgSend(v2, sel_setComputePipelineState_, a1);
  if (a2 < 0)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    return RGMTLComputeCommandEncoderDispatchOnGrid1D(v2, a1, a2, v5);
  }
  return result;
}

uint64_t sub_1B6B5985C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](a1, a2);
  char v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v12, v12 + *(void *)(*(void *)(v15 - 8) + 64), v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

id sub_1B6B59950(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = a2 - a1;
  }
  else {
    uint64_t v3 = 0;
  }
  return objc_msgSend(*(id *)(v2 + 32), sel_setBytes_length_atIndex_, a1, v3, *(void *)(v2 + 40));
}

uint64_t sub_1B6B59994(void *a1, uint64_t a2, uint64_t a3)
{
  int64x2_t v4 = v3;
  swift_getObjectType();
  uint64_t v7 = sub_1B6389254(a3);
  uint64_t v9 = v8;
  objc_msgSend(v4, sel_setComputePipelineState_, a1);
  v12[0] = v7;
  v12[1] = v9;
  _OWORD v12[2] = 6;
  return RGMTLComputeCommandEncoderDispatchOnGrid3D(v4, a1, (uint64_t)v12, v10);
}

id sub_1B6B59A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v9[0] = a5;
  v9[1] = a6;
  _OWORD v9[2] = a7;
  return objc_msgSend(v7, sel_dispatchThreadgroupsWithIndirectBuffer_indirectBufferOffset_threadsPerThreadgroup_, a1, a4 + a2, v9);
}

uint64_t sub_1B6B59A64(void *a1, uint64_t a2)
{
  sub_1B6B5A4EC(0, &qword_1E9DD6468, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6B5A498();
  sub_1B6E33A88();
  v11[1] = a2;
  sub_1B6657A10();
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B6B59BBC()
{
  return 0x746567726174;
}

uint64_t sub_1B6B59BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746567726174 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1B6E334B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1B6B59C60(uint64_t a1)
{
  unint64_t v2 = sub_1B6B5A498();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6B59C9C(uint64_t a1)
{
  unint64_t v2 = sub_1B6B5A498();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B6B59CD8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1B6B5A300(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6B59D04(void *a1)
{
  return sub_1B6B59A64(a1, *v1);
}

uint64_t *sub_1B6B59D20(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 32);
  v99[0] = *(_OWORD *)(v1 + 16);
  v99[1] = v2;
  uint64_t v100 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v99, 0x200000000, v88);
  uint64_t result = (uint64_t *)sub_1B62CA210((uint64_t)v88, (uint64_t)v89, (unint64_t *)&qword_1EB97DC50);
  if (*(void *)&v89[0])
  {
    if (v95 >= 1)
    {
      uint64_t v82 = v92;
      if (v92)
      {
        uint64_t v4 = v94;
        uint64_t v71 = v93;
        uint64_t v5 = v94[4];
        int v6 = *(unsigned __int8 *)(v93 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v96[0] = v89[0];
        v96[1] = v89[1];
        uint64_t v97 = v90;
        uint64_t v80 = (uint64_t)(v94 + 6);
        uint64_t v81 = v91;
        __int32 v83 = (void *)(v93 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v79 = v94 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        int v78 = v6;
        uint64_t v77 = v5;
        while (1)
        {
          uint64_t v85 = v8;
          uint64_t v87 = v7;
          uint64_t v9 = (unsigned int *)(v81 + 48 * v7);
          uint64_t v11 = *v9;
          uint64_t v10 = v9[1];
          uint64_t v13 = (uint64_t *)*((void *)v9 + 2);
          uint64_t v12 = *((void *)v9 + 3);
          uint64_t v14 = *((void *)v9 + 4);
          uint64_t v15 = *((void *)v9 + 5);
          if (v6)
          {
            float32x4_t v16 = *(os_unfair_lock_s **)(v15 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v16);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v5);
          sub_1B62CA210(v80, (uint64_t)v98, &qword_1EB97DE20);
          uint64_t v17 = v4[4];
          uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v15 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v4[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
          v4[7] = v18;
          v79[1] = 0;
          v79[2] = 0;
          void *v79 = 0;
          swift_release();
          uint64_t v84 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v13, v12, v14, (uint64_t)v4);
          uint64_t v19 = sub_1B62C9024((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, v13, v12, v14, (uint64_t)v4);
          uint64_t v20 = sub_1B62C9024((uint64_t)&type metadata for LookAt, (uint64_t)&off_1F0FA0038, v13, v12, v14, (uint64_t)v4);
          if (v13) {
            break;
          }
          if (v11 != v10)
          {
            int v6 = v78;
            __int32 v44 = v83;
            float32x4_t v45 = v67;
            float32x4_t v46 = v69;
            float32x4_t v47 = v65;
            do
            {
              uint64_t v54 = (int *)(v20 + 8 * v11);
              int v55 = *v54;
              int v56 = v54[1];
              BOOL v57 = v55 == -1 && v56 == 0;
              if (!v57 && (v55 & 0x80000000) == 0 && v44[1] > v55)
              {
                uint64_t v58 = *v44 + 12 * v55;
                if (v56 == -1 || *(_DWORD *)(v58 + 8) == v56)
                {
                  uint64_t v60 = *(void *)(*(void *)(v71 + 136) + 8 * *(int *)(*v44 + 12 * v55) + 32);
                  uint64_t v61 = *(void *)(v60 + 48);
                  uint64_t v62 = *(void *)(v61 + 16);
                  if (v62)
                  {
                    uint64_t v63 = *(__int16 *)(v58 + 4);
                    int v64 = (void *)(v61 + 56);
                    while ((ValueMetadata *)*(v64 - 3) != &type metadata for Position)
                    {
                      v64 += 5;
                      if (!--v62) {
                        goto LABEL_35;
                      }
                    }
                    float32x4_t v48 = *(float32x4_t *)(*(void *)(v60 + 128) + *v64 + 16 * v63);
                    v48.i32[3] = v47.i32[3];
                    float32x4_t v49 = *(float32x4_t *)(v84 + 16 * v11);
                    v49.i32[3] = v45.i32[3];
                    float32x4_t v68 = v49;
                    float32x4_t v70 = v48;
                    float32x4_t v50 = vsubq_f32(v48, v49);
                    int32x4_t v51 = (int32x4_t)vmulq_f32(v50, v50);
                    v51.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v51, 2), vadd_f32(*(float32x2_t *)v51.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v51.i8, 1))).u32[0];
                    *(float32x2_t *)v48.f32 = vrsqrte_f32((float32x2_t)v51.u32[0]);
                    *(float32x2_t *)v48.f32 = vmul_f32(*(float32x2_t *)v48.f32, vrsqrts_f32((float32x2_t)v51.u32[0], vmul_f32(*(float32x2_t *)v48.f32, *(float32x2_t *)v48.f32)));
                    float32x4_t v52 = vmulq_n_f32(v50, vmul_f32(*(float32x2_t *)v48.f32, vrsqrts_f32((float32x2_t)v51.u32[0], vmul_f32(*(float32x2_t *)v48.f32, *(float32x2_t *)v48.f32))).f32[0]);
                    v52.i32[3] = v46.i32[3];
                    float32x4_t v66 = v52;
                    *(double *)&long long v53 = sub_1B660B520((float32x4_t)xmmword_1B6E4F340, v52);
                    __int32 v44 = v83;
                    *(_OWORD *)(v19 + 16 * v11) = v53;
                    float32x4_t v46 = v66;
                    float32x4_t v45 = v68;
                    float32x4_t v47 = v70;
                  }
                }
              }
LABEL_35:
              ++v11;
            }
            while (v11 != v10);
            float32x4_t v65 = v47;
            float32x4_t v67 = v45;
            float32x4_t v69 = v46;
LABEL_53:
            uint64_t v5 = v77;
            goto LABEL_54;
          }
          uint64_t v5 = v77;
          int v6 = v78;
LABEL_54:
          uint64_t v43 = v87;
          uint64_t v8 = v85;
LABEL_55:
          sub_1B6345178(v4, (unsigned __int16 **)v96, (uint64_t)v98);
          sub_1B634507C((char *)v15);
          ecs_stack_allocator_pop_snapshot(v5);
          if (v6)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 376));
          }
          swift_release();
          uint64_t v7 = v43 + 1;
          if (v7 == v82)
          {
            sub_1B632F170(v88);
            return sub_1B632F170(v88);
          }
        }
        int v6 = v78;
        if (v14)
        {
          uint64_t v21 = 0;
          uint64_t v22 = v83;
          uint64_t v8 = v85;
          float32x4_t v23 = v73;
          float32x4_t v24 = v75;
          float32x4_t v25 = v72;
          do
          {
            long long v32 = (int *)(v20 + 8 * v21);
            int v33 = *v32;
            int v34 = v32[1];
            BOOL v35 = v33 == -1 && v34 == 0;
            if (!v35 && (v33 & 0x80000000) == 0 && v22[1] > v33)
            {
              uint64_t v36 = *v22 + 12 * v33;
              if (v34 == -1 || *(_DWORD *)(v36 + 8) == v34)
              {
                uint64_t v38 = *(void *)(*(void *)(v71 + 136) + 8 * *(int *)(*v22 + 12 * v33) + 32);
                uint64_t v39 = *(void *)(v38 + 48);
                uint64_t v40 = *(void *)(v39 + 16);
                if (v40)
                {
                  uint64_t v41 = *(__int16 *)(v36 + 4);
                  uint64_t v42 = (void *)(v39 + 56);
                  while ((ValueMetadata *)*(v42 - 3) != &type metadata for Position)
                  {
                    v42 += 5;
                    if (!--v40) {
                      goto LABEL_13;
                    }
                  }
                  float32x4_t v26 = *(float32x4_t *)(*(void *)(v38 + 128) + *v42 + 16 * v41);
                  v26.i32[3] = v25.i32[3];
                  float32x4_t v76 = v26;
                  float32x4_t v27 = *(float32x4_t *)(v84 + 16 * v21);
                  v27.i32[3] = v23.i32[3];
                  float32x4_t v86 = v27;
                  float32x4_t v28 = vsubq_f32(v26, v27);
                  int32x4_t v29 = (int32x4_t)vmulq_f32(v28, v28);
                  v29.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v29, 2), vadd_f32(*(float32x2_t *)v29.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v29.i8, 1))).u32[0];
                  *(float32x2_t *)v26.f32 = vrsqrte_f32((float32x2_t)v29.u32[0]);
                  *(float32x2_t *)v26.f32 = vmul_f32(*(float32x2_t *)v26.f32, vrsqrts_f32((float32x2_t)v29.u32[0], vmul_f32(*(float32x2_t *)v26.f32, *(float32x2_t *)v26.f32)));
                  float32x4_t v30 = vmulq_n_f32(v28, vmul_f32(*(float32x2_t *)v26.f32, vrsqrts_f32((float32x2_t)v29.u32[0], vmul_f32(*(float32x2_t *)v26.f32, *(float32x2_t *)v26.f32))).f32[0]);
                  v30.i32[3] = v24.i32[3];
                  float32x4_t v74 = v30;
                  *(double *)&long long v31 = sub_1B660B520((float32x4_t)xmmword_1B6E4F340, v30);
                  uint64_t v22 = v83;
                  *(_OWORD *)(v19 + 16 * v21) = v31;
                  float32x4_t v24 = v74;
                  float32x4_t v25 = v76;
                  float32x4_t v23 = v86;
                }
              }
            }
LABEL_13:
            ++v21;
          }
          while (v21 != v14);
          float32x4_t v72 = v25;
          float32x4_t v73 = v23;
          float32x4_t v75 = v24;
          uint64_t v5 = v77;
          uint64_t v43 = v87;
          goto LABEL_55;
        }
        goto LABEL_53;
      }
    }
    return sub_1B632F170(v88);
  }
  return result;
}

ValueMetadata *type metadata accessor for LookAt()
{
  return &type metadata for LookAt;
}

void *sub_1B6B5A300(void *a1)
{
  sub_1B6B5A4EC(0, &qword_1E9DD6458, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)v11 - v7;
  uint64_t v9 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6B5A498();
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B62B1EA8();
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t v9 = (void *)v11[1];
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v9;
}

unint64_t sub_1B6B5A498()
{
  unint64_t result = qword_1E9DD6460;
  if (!qword_1E9DD6460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6460);
  }
  return result;
}

void sub_1B6B5A4EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B6B5A498();
    unint64_t v7 = a3(a1, &type metadata for LookAt.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for LookAt.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6B5A5ECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LookAt.CodingKeys()
{
  return &type metadata for LookAt.CodingKeys;
}

unint64_t sub_1B6B5A628()
{
  unint64_t result = qword_1E9DD6470;
  if (!qword_1E9DD6470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6470);
  }
  return result;
}

unint64_t sub_1B6B5A680()
{
  unint64_t result = qword_1E9DD6478;
  if (!qword_1E9DD6478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6478);
  }
  return result;
}

unint64_t sub_1B6B5A6D8()
{
  unint64_t result = qword_1E9DD6480;
  if (!qword_1E9DD6480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6480);
  }
  return result;
}

uint64_t sub_1B6B5A72C(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v3 = *(_OWORD *)(a1 + 104);
  v11[0] = *(_OWORD *)(a1 + 88);
  v11[1] = v3;
  uint64_t v12 = *(void *)(a1 + 120);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Position;
  *(void *)(inited + 40) = &off_1F0FA6F58;
  *(void *)(inited + 48) = &type metadata for Velocity;
  *(void *)(inited + 56) = &off_1F0FA7C80;
  swift_retain();
  sub_1B62F75EC(inited, (uint64_t)v8);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v11);
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  *(void *)(v5 + 32) = &type metadata for Anchored;
  *(void *)(v5 + 40) = &off_1F0FA2E40;
  sub_1B628A080(v5, (uint64_t)v9);
  swift_setDeallocating();
  sub_1B62F648C(a1);
  sub_1B62CA064((uint64_t)v8);
  long long v6 = v9[1];
  *(_OWORD *)(v1 + 16) = v9[0];
  *(_OWORD *)(v1 + 32) = v6;
  *(void *)(v1 + 48) = v10;
  return v1;
}

double sub_1B6B5A888(void *a1, char a2, float32x4_t a3, float32x4_t a4)
{
  long long v6 = (uint64_t *)a1[11];
  uint64_t v7 = a1[12];
  uint64_t v8 = a1[13];
  uint64_t v9 = a1[2];
  uint64_t v10 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v6, v7, v8, v9);
  uint64_t v11 = v10;
  if (a2)
  {
    uint64_t v12 = a1[6];
    uint64_t v13 = a1[7] - v12;
    if (v13)
    {
      uint64_t v14 = (float32x4_t *)(v10 + 16 * v12);
      do
      {
        *uint64_t v14 = vaddq_f32(*v14, a3);
        ++v14;
        --v13;
      }
      while (v13);
    }
  }
  uint64_t v15 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v6, v7, v8, v9);
  uint64_t v16 = sub_1B67A85B0();
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[7] - v18;
  if (v20)
  {
    if (v19)
    {
      uint64_t v29 = 16 * v18;
      float32x4_t v30 = (float32x4_t *)(v15 + 16 * v18);
      long long v31 = (float32x4_t *)(v11 + v29);
      do
      {
        float32x4_t v32 = *v31++;
        double result = *(double *)v32.i64;
        *float32x4_t v30 = vmlaq_f32(*v30, a4, v32);
        ++v30;
        --v19;
      }
      while (v19);
    }
  }
  else if (v19)
  {
    uint64_t v21 = 16 * v18;
    uint64_t v22 = (float32x4_t *)(v15 + 16 * v18);
    float32x4_t v23 = (float32x4_t *)(v16 + v21);
    float32x4_t v24 = (float32x4_t *)(v11 + v21);
    LODWORD(result) = 1.0;
    do
    {
      float32x4_t v25 = *v24++;
      float32x4_t v26 = v25;
      float32x4_t v27 = *v23++;
      float32x4_t v28 = v27;
      v28.i32[3] = 1.0;
      *uint64_t v22 = vmlaq_f32(*v22, vmulq_f32(v28, a4), v26);
      ++v22;
      --v19;
    }
    while (v19);
  }
  return result;
}

uint64_t type metadata accessor for ParticleIntegrate.System()
{
  return self;
}

uint64_t sub_1B6B5AA00(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1B6B5A72C(a1);
  return v2;
}

const char *sub_1B6B5AA40()
{
  return "ParticleIntegrate.CPU";
}

uint64_t sub_1B6B5AA54()
{
  return type metadata accessor for ParticleIntegrate.System();
}

uint64_t type metadata accessor for ParticleIntegrate.GPUSystem()
{
  return self;
}

const char *sub_1B6B5AA9C()
{
  return "ParticleIntegrate.GPU";
}

uint64_t sub_1B6B5AAB0()
{
  return type metadata accessor for ParticleIntegrate.GPUSystem();
}

uint64_t sub_1B6B5AAD0(uint64_t a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v19 = *(_OWORD *)(a1 + 16);
  long long v20 = *(_OWORD *)(a1 + 48);
  sub_1B62EBAB4();
  BOOL v2 = sub_1B62FACF8((uint64_t)&type metadata for ParticleAffectedByGravity);
  swift_release();
  sub_1B62D853C(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77050;
  *(_OWORD *)(v3 + 32) = xmmword_1B6EAA750;
  *(unsigned char *)(v3 + 48) = 0;
  *(void *)(v3 + 64) = v2;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(unsigned char *)(v3 + 128) = 13;
  sub_1B62F46E8();
  float v5 = v4;
  *(double *)v6.i64 = sub_1B6335378();
  float32x4_t v18 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v7, (float32x4_t)0), v8, v5 * -9.8), (float32x4_t)0, v6);
  sub_1B6A81254();
  float32x4_t v21 = v18;
  int v22 = v9;
  uint64_t v10 = *(void *)a1;
  if (*(void *)a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for particle_integrate_uniforms(0);
    sub_1B6B594A8((uint64_t)&v21, 1, ObjectType, v12, v13, v14, v15, v16);
  }
  swift_retain();
  sub_1B6786A24(a1);
  sub_1B6BFF388(v20, v19, v10 == 0, v3, a1, 0xD000000000000012, 0x80000001B6F4AAF0, 0);
  sub_1B6786A7C(a1);
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for ParticleIntegrate()
{
  return &type metadata for ParticleIntegrate;
}

uint64_t sub_1B6B5AD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  float32x4_t v50 = sub_1B67F5DB8(MEMORY[0x1E4FBC860]);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_1EB997A18;
  int v64 = 0;
  char v65 = 2;
  uint64_t v66 = 0;
  char v67 = 2;
  uint64_t v68 = 0;
  swift_retain();
  sub_1B6780098(1, 1, (uint64_t)&v51);
  swift_release();
  uint64_t v57 = v51;
  int v58 = v52;
  char v59 = v53;
  uint64_t v60 = v54 | 1;
  char v61 = v55;
  uint64_t v62 = v56;
  swift_retain();
  sub_1B62CA090((uint64_t)&v51);
  uint64_t v6 = sub_1B69E3718(v3, v3, (uint64_t)&v57, a3 & 0xFFFFFFFFFFLL, &v50);
  sub_1B62CA064((uint64_t)&v51);
  swift_release();
  sub_1B62CA064((uint64_t)&v51);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = 0;
  uint64_t v48 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v7 + 64);
  int64_t v49 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        do
        {
          if (v11)
          {
            unint64_t v12 = __clz(__rbit64(v11));
            v11 &= v11 - 1;
            unint64_t v13 = v12 | (v8 << 6);
          }
          else
          {
            uint64_t v14 = v8 + 1;
            if (v8 + 1 >= v49) {
              goto LABEL_58;
            }
            unint64_t v15 = *(void *)(v48 + 8 * v14);
            if (!v15)
            {
              uint64_t v14 = v8 + 2;
              if (v8 + 2 >= v49) {
                goto LABEL_58;
              }
              unint64_t v15 = *(void *)(v48 + 8 * v14);
              if (!v15)
              {
                uint64_t v14 = v8 + 3;
                if (v8 + 3 >= v49) {
                  goto LABEL_58;
                }
                unint64_t v15 = *(void *)(v48 + 8 * v14);
                if (!v15)
                {
                  uint64_t v14 = v8 + 4;
                  if (v8 + 4 >= v49) {
                    goto LABEL_58;
                  }
                  unint64_t v15 = *(void *)(v48 + 8 * v14);
                  if (!v15)
                  {
                    while (v49 - 5 != v8)
                    {
                      unint64_t v15 = *(void *)(v7 + 8 * v8++ + 104);
                      if (v15)
                      {
                        uint64_t v14 = v8 + 4;
                        goto LABEL_25;
                      }
                    }
LABEL_58:
                    swift_release();
                    return 0;
                  }
                }
              }
            }
LABEL_25:
            unint64_t v11 = (v15 - 1) & v15;
            unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
            uint64_t v8 = v14;
          }
          uint64_t v16 = 8 * v13;
          uint64_t v17 = (unsigned int *)(*(void *)(v7 + 48) + v16);
          unsigned int v19 = *v17;
          unsigned int v18 = v17[1];
          unint64_t v20 = *(void *)(*(void *)(v7 + 56) + v16);
        }
        while (v19 == -1 && !v18);
        uint64_t v21 = (int)v18;
        if (v19 != -1) {
          break;
        }
        if (v18)
        {
          swift_retain();
          goto LABEL_11;
        }
      }
      uint64_t v22 = v19;
      uint64_t v23 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
      swift_retain();
      if ((v19 & 0x80000000) == 0 && *(void *)(v4 + v23 + 8) > (int)v19)
      {
        uint64_t v24 = *(void *)(v4 + v23);
        uint64_t v25 = v24 + 12 * (int)v19;
        if (v21 == -1 || *(_DWORD *)(v25 + 8) == v21)
        {
          uint64_t v27 = *(void *)(*(void *)(v4 + 136) + 8 * *(int *)(v24 + 12 * (int)v19) + 32);
          uint64_t v28 = *(void *)(v27 + 48);
          uint64_t v29 = *(void *)(v28 + 16);
          if (v29) {
            break;
          }
        }
      }
LABEL_11:
      swift_release();
    }
    uint64_t v30 = *(__int16 *)(v25 + 4);
    long long v31 = (void *)(v28 + 56);
    while ((ValueMetadata *)*(v31 - 3) != &type metadata for Name)
    {
      v31 += 5;
      if (!--v29) {
        goto LABEL_11;
      }
    }
    float32x4_t v32 = (uint64_t *)(*(void *)(v27 + 128) + *v31 + 16 * v30);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v45 = v4;
    swift_release();
    if (v20 >> 62) {
      break;
    }
    uint64_t v35 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v35) {
      goto LABEL_43;
    }
LABEL_57:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v45;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1B6E32C18();
  swift_bridgeObjectRelease();
  if (!v35) {
    goto LABEL_57;
  }
LABEL_43:
  uint64_t v43 = v33;
  uint64_t v44 = v34;
  uint64_t v36 = 0;
  while (1)
  {
    if ((v20 & 0xC000000000000001) != 0)
    {
      uint64_t v38 = MEMORY[0x1BA9B4580](v36, v20);
    }
    else
    {
      uint64_t v38 = *(void *)(v20 + 8 * v36 + 32);
      swift_retain();
    }
    BOOL v39 = *(void *)(v38 + 16) == a1 && *(void *)(v38 + 24) == a2;
    if (v39 || (sub_1B6E334B8() & 1) != 0)
    {
      type metadata accessor for BindingPropertyDescription();
      uint64_t v37 = swift_dynamicCastClass();
      if (v37) {
        break;
      }
    }
    ++v36;
    swift_release();
    if (v35 == v36) {
      goto LABEL_57;
    }
  }
  uint64_t v42 = v37;
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_1B6B5B944(v22 | (v21 << 32), v43, v44, v42);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  return v40;
}

uint64_t sub_1B6B5B228(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v75 = MEMORY[0x1E4FBC860];
  float32x4_t v74 = sub_1B67F5DB8(MEMORY[0x1E4FBC860]);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v88 = qword_1EB997A18;
  int v89 = 0;
  char v90 = 2;
  uint64_t v91 = 0;
  char v92 = 2;
  uint64_t v93 = 0;
  swift_retain();
  sub_1B6780098(1, 1, (uint64_t)&v76);
  swift_release();
  uint64_t v82 = v76;
  int v83 = v77;
  char v84 = v78;
  uint64_t v85 = v79 | 1;
  char v86 = v80;
  uint64_t v87 = v81;
  swift_retain();
  sub_1B62CA090((uint64_t)&v76);
  uint64_t v6 = sub_1B69E3718(v3, v3, (uint64_t)&v82, a1 & 0xFFFFFFFFFFLL, &v74);
  sub_1B62CA064((uint64_t)&v76);
  swift_release();
  sub_1B62CA064((uint64_t)&v76);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = 0;
  uint64_t v9 = v7 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v7 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  int64_t v55 = v13 - 5;
  uint64_t v60 = v3;
  while (v12)
  {
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v15 = v14 | (v8 << 6);
LABEL_26:
    uint64_t v18 = 8 * v15;
    unsigned int v19 = (unsigned int *)(*(void *)(v7 + 48) + v18);
    uint64_t v21 = *v19;
    signed int v20 = v19[1];
    unint64_t v22 = *(void *)(*(void *)(v7 + 56) + v18);
    if (__PAIR64__(v20, v21) != 0xFFFFFFFF)
    {
      uint64_t v23 = v20;
      if (v21 == -1)
      {
        if (v20)
        {
          swift_retain();
          goto LABEL_11;
        }
      }
      else
      {
        unint64_t v73 = v22;
        uint64_t v24 = OBJC_IVAR____TtC3VFX13EntityManager__entries;
        swift_retain();
        if ((v21 & 0x80000000) == 0
          && *(void *)(v4 + v24 + 8) > (int)v21
          && ((uint64_t v25 = *(void *)(v4 + v24), v26 = v25 + 12 * (int)v21, v23 != -1)
            ? (BOOL v27 = *(_DWORD *)(v26 + 8) == v23)
            : (BOOL v27 = 1),
              v27
           && (uint64_t v28 = *(void *)(*(void *)(v4 + 136) + 8 * *(int *)(v25 + 12 * (int)v21) + 32),
               uint64_t v29 = *(void *)(v28 + 48),
               (uint64_t v30 = *(void *)(v29 + 16)) != 0)))
        {
          uint64_t v61 = v21 | (v23 << 32);
          uint64_t v31 = *(__int16 *)(v26 + 4);
          float32x4_t v32 = (void *)(v29 + 56);
          unint64_t v33 = v73;
          while ((ValueMetadata *)*(v32 - 3) != &type metadata for Name)
          {
            v32 += 5;
            if (!--v30) {
              goto LABEL_11;
            }
          }
          uint64_t v34 = (uint64_t *)(*(void *)(v28 + 128) + *v32 + 16 * v31);
          uint64_t v35 = v34[1];
          uint64_t v58 = *v34;
          swift_bridgeObjectRetain();
          uint64_t v62 = v35;
          swift_bridgeObjectRetain();
          swift_release();
          if (v73 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v36 = sub_1B6E32C18();
            swift_bridgeObjectRelease();
            if (v36) {
              goto LABEL_42;
            }
LABEL_77:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v36 = *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (!v36) {
              goto LABEL_77;
            }
LABEL_42:
            int64_t v53 = v13;
            uint64_t v54 = v9;
            uint64_t v37 = 0;
            unint64_t v38 = v73 & 0xC000000000000001;
            uint64_t v57 = v36;
            uint64_t v56 = v8;
            do
            {
              if (v38) {
                MEMORY[0x1BA9B4580](v37, v33);
              }
              else {
                swift_retain();
              }
              type metadata accessor for BindingPropertyDescription();
              uint64_t v39 = swift_dynamicCastClass();
              if (v39 && ((uint64_t v40 = v39, (a3 & 1) != 0) || !*(unsigned char *)(v39 + 240)))
              {
                if (*(void *)(v39 + 216))
                {
                  uint64_t v72 = *(void *)(v39 + 216);
                }
                else
                {
                  swift_retain();
                  uint64_t v72 = v40;
                }
                uint64_t v42 = *(void *)(v40 + 224);
                uint64_t v41 = *(void *)(v40 + 232);
                uint64_t v67 = *(void *)(v40 + 24);
                unint64_t v43 = *(void *)(v40 + 176);
                uint64_t v66 = *(void *)(v40 + 16);
                if (v43)
                {
                  uint64_t v71 = *(void *)(v40 + 168);
                }
                else
                {
                  uint64_t v71 = 0;
                  unint64_t v43 = 0xE000000000000000;
                }
                unint64_t v70 = v43;
                uint64_t v65 = sub_1B665CC74();
                unint64_t v44 = *(void *)(v40 + 144) - 2;
                if (v44 > 0x13) {
                  uint64_t v64 = 0;
                }
                else {
                  uint64_t v64 = qword_1B6EAA8F8[v44];
                }
                if (*(unsigned char *)(v40 + 188)) {
                  double v45 = 2.22507386e-308;
                }
                else {
                  double v45 = *(float *)(v40 + 184);
                }
                if (*(unsigned char *)(v40 + 196)) {
                  double v46 = 1.79769313e308;
                }
                else {
                  double v46 = *(float *)(v40 + 192);
                }
                int v47 = *(unsigned __int8 *)(v40 + 240);
                uint64_t v48 = *(void *)(v40 + 256);
                if (v48)
                {
                  uint64_t v49 = *(void *)(v40 + 264);
                  uint64_t v68 = *(void *)(v40 + 248);
                  swift_bridgeObjectRetain();
                  uint64_t v69 = v49;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  uint64_t v68 = 0;
                  uint64_t v69 = 0;
                }
                type metadata accessor for BindingImpl();
                uint64_t v50 = swift_allocObject();
                swift_weakInit();
                *(void *)(v50 + 152) = 0;
                *(void *)(v50 + 24) = v42;
                *(void *)(v50 + 32) = v41;
                *(void *)(v50 + 40) = v61;
                *(void *)(v50 + 48) = v58;
                *(void *)(v50 + 56) = v62;
                *(void *)(v50 + 64) = v66;
                *(void *)(v50 + 72) = v67;
                *(void *)(v50 + 80) = v71;
                *(void *)(v50 + 88) = v70;
                *(void *)(v50 + 96) = v65;
                *(void *)(v50 + 104) = v64;
                *(double *)(v50 + 112) = v45;
                *(double *)(v50 + 120) = v46;
                *(unsigned char *)(v50 + 128) = v47 == 0;
                *(void *)(v50 + 136) = v68;
                *(void *)(v50 + 144) = v48;
                swift_bridgeObjectRetain();
                swift_retain();
                uint64_t v4 = v60;
                swift_bridgeObjectRetain();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)(v50 + 152) = v69;
                swift_bridgeObjectRelease();
                *(void *)(v50 + 160) = v72;
                swift_weakAssign();
                swift_release();
                if ((a2 & 1) != 0 || objc_msgSend((id)v50, sel_type) != (id)23)
                {
                  uint64_t v51 = swift_retain();
                  MEMORY[0x1BA9B3870](v51);
                  unint64_t v33 = v73;
                  uint64_t v8 = v56;
                  if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    sub_1B6E31C78();
                  }
                  sub_1B6E31CC8();
                  sub_1B6E31C48();
                  swift_release();
                  swift_release_n();
                  unint64_t v38 = v73 & 0xC000000000000001;
                  uint64_t v36 = v57;
                }
                else
                {
                  swift_release_n();
                  swift_release();
                  unint64_t v33 = v73;
                  unint64_t v38 = v73 & 0xC000000000000001;
                  uint64_t v36 = v57;
                  uint64_t v8 = v56;
                }
              }
              else
              {
                swift_release();
              }
              ++v37;
            }
            while (v36 != v37);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v9 = v54;
            int64_t v13 = v53;
          }
        }
        else
        {
LABEL_11:
          swift_release();
        }
      }
    }
  }
  uint64_t v16 = v8 + 1;
  if (v8 + 1 >= v13) {
    goto LABEL_78;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v16);
  if (v17) {
    goto LABEL_25;
  }
  uint64_t v16 = v8 + 2;
  if (v8 + 2 >= v13) {
    goto LABEL_78;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v16);
  if (v17) {
    goto LABEL_25;
  }
  uint64_t v16 = v8 + 3;
  if (v8 + 3 >= v13) {
    goto LABEL_78;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v16);
  if (v17) {
    goto LABEL_25;
  }
  uint64_t v16 = v8 + 4;
  if (v8 + 4 >= v13) {
    goto LABEL_78;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v16);
  if (v17)
  {
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v8 = v16;
    goto LABEL_26;
  }
  while (v55 != v8)
  {
    unint64_t v17 = *(void *)(v7 + 8 * v8++ + 104);
    if (v17)
    {
      uint64_t v16 = v8 + 4;
      goto LABEL_25;
    }
  }
LABEL_78:
  swift_release();
  return v75;
}

uint64_t sub_1B6B5B944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 216))
  {
    uint64_t v21 = *(void *)(a4 + 216);
  }
  else
  {
    swift_retain();
    uint64_t v21 = a4;
  }
  uint64_t v25 = *(void *)(a4 + 224);
  uint64_t v26 = *(void *)(a4 + 16);
  uint64_t v23 = *(void *)(a4 + 232);
  uint64_t v24 = *(void *)(a4 + 24);
  if (*(void *)(a4 + 176))
  {
    uint64_t v22 = *(void *)(a4 + 168);
    unint64_t v20 = *(void *)(a4 + 176);
  }
  else
  {
    uint64_t v22 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  uint64_t v19 = sub_1B665CC74();
  uint64_t v18 = sub_1B665D0A0(*(void *)(a4 + 144));
  float v5 = *(float *)(a4 + 184);
  int v6 = *(unsigned __int8 *)(a4 + 188);
  float v7 = *(float *)(a4 + 192);
  int v8 = *(unsigned __int8 *)(a4 + 196);
  int v9 = *(unsigned __int8 *)(a4 + 240);
  uint64_t v10 = *(void *)(a4 + 256);
  if (v10)
  {
    uint64_t v11 = *(void *)(a4 + 264);
    uint64_t v12 = *(void *)(a4 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  if (v8) {
    double v13 = 1.79769313e308;
  }
  else {
    double v13 = v7;
  }
  if (v6) {
    double v14 = 2.22507386e-308;
  }
  else {
    double v14 = v5;
  }
  type metadata accessor for BindingImpl();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *((void *)&v17 + 1) = v19;
  *(void *)&long long v17 = v20;
  uint64_t v15 = sub_1B665D0C4(v25, v23, a1, a2, a3, v26, v24, v22, v14, v13, v17, v18, v9 == 0, v12, v10, v11, v21);
  swift_release();
  return v15;
}

uint64_t sub_1B6B5BB30()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_entityObject);
  if (v1)
  {
    uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
    if (swift_weakLoadStrong())
    {
      uint64_t v3 = v1;
    }
    else if (*(void *)&v1[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager])
    {
      int v6 = v1;
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      float v7 = v1;
      sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }

    goto LABEL_12;
  }
  uint64_t v4 = MEMORY[0x1BA9B8670](v0 + OBJC_IVAR____TtC3VFX9VFXEffect_scene);
  if (v4)
  {
    float v5 = (void *)v4;
    swift_retain();

    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity + 8))
    {
      swift_release();
      return 0;
    }
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity);
LABEL_12:
    swift_release();
    return v2;
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6B5BD88()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
    return 0;
  }
  else {
    return *(int *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID);
  }
}

uint64_t sub_1B6B5BDDC()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity + 8)) {
    return 0;
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity) == 0xFFFFFFFFLL) {
    return 0;
  }
  return *(void *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity);
}

void sub_1B6B5BE40()
{
}

uint64_t sub_1B6B5BE98()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1B6B5BEF0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC3VFX9VFXEffect_delegate) = a1;
  return swift_unknownObjectRelease();
}

double (*sub_1B6B5BF08())(void)
{
  return nullsub_1;
}

uint64_t sub_1B6B5BF40()
{
  return *(void *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_version);
}

uint64_t sub_1B6B5BF60()
{
  uint64_t v1 = MEMORY[0x1E4FBCC28];
  uint64_t v2 = MEMORY[0x1E4FBB718];
  sub_1B6397CE8(0, &qword_1EB97D968, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8, v4);
  int v6 = (char *)v17 - v5;
  sub_1B6B5C208();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(id *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_onEffectRestartSubject);
  sub_1B63989B8(0, (unint64_t *)&qword_1EB97D1B0);
  swift_retain();
  v17[0] = (id)sub_1B6E32238();
  uint64_t v13 = sub_1B6E32208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  double v14 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AB88];
  sub_1B639AA44(0, (unint64_t *)&qword_1EB980098, MEMORY[0x1E4F1AB88]);
  sub_1B6B5D2B4((unint64_t *)&qword_1EB980FC0, (unint64_t *)&qword_1EB980098, v14);
  sub_1B6B5C2F4();
  sub_1B6E313B8();
  sub_1B63956DC((uint64_t)v6, (uint64_t)&qword_1EB97D968, v1, v2, (uint64_t (*)(void))sub_1B6397CE8);

  swift_release();
  sub_1B6B5C35C();
  uint64_t v15 = sub_1B6E313A8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return v15;
}

void sub_1B6B5C208()
{
  if (!qword_1EB980088)
  {
    uint64_t v0 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AB88];
    sub_1B639AA44(255, (unint64_t *)&qword_1EB980098, MEMORY[0x1E4F1AB88]);
    sub_1B63989B8(255, (unint64_t *)&qword_1EB97D1B0);
    sub_1B6B5D2B4((unint64_t *)&qword_1EB980FC0, (unint64_t *)&qword_1EB980098, v0);
    sub_1B6B5C2F4();
    unint64_t v1 = sub_1B6E31338();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB980088);
    }
  }
}

unint64_t sub_1B6B5C2F4()
{
  unint64_t result = qword_1EB980FC8;
  if (!qword_1EB980FC8)
  {
    sub_1B63989B8(255, (unint64_t *)&qword_1EB97D1B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980FC8);
  }
  return result;
}

unint64_t sub_1B6B5C35C()
{
  unint64_t result = qword_1EB980FB0;
  if (!qword_1EB980FB0)
  {
    sub_1B6B5C208();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980FB0);
  }
  return result;
}

uint64_t sub_1B6B5C3B4()
{
  uint64_t v1 = v0;
  v62[12] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = **(void **)(sub_1B639D66C() + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  swift_release();
  uint64_t v3 = (unsigned int *)(v1 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4))
  {
    uint64_t v4 = 0;
    BOOL v5 = 1;
  }
  else
  {
    uint64_t v4 = *v3;
    BOOL v5 = *v3 == 0;
  }
  LOBYTE(v62[0]) = v5;
  unint64_t v49 = sub_1B6D7CDB4(v4 | ((unint64_t)v5 << 32), v2);
  uint64_t v45 = sub_1B639D66C();
  swift_release();
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v55 = qword_1EB997A18;
  int v56 = 0;
  char v57 = 2;
  uint64_t v58 = 0;
  char v59 = 2;
  uint64_t v60 = 0;
  swift_retain();
  sub_1B67817AC(1, 1, (uint64_t)v50);
  swift_release();
  sub_1B6397CE8(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Parent;
  *(void *)(inited + 40) = &off_1F0FA04A8;
  *(void *)(inited + 48) = &type metadata for PointOfView;
  *(void *)(inited + 56) = &off_1F0F56610;
  sub_1B62AD184(v51);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v50);
  uint64_t v7 = sub_1B639D66C();
  if (v3[1]) {
    unint64_t v8 = 0x200000000;
  }
  else {
    unint64_t v8 = *v3 | ((unint64_t)(*v3 == 0) << 33);
  }
  v53[0] = v51[0];
  v53[1] = v51[1];
  uint64_t v54 = v52;
  sub_1B62C9DA8(v7, (uint64_t)v53, v8, v61);
  sub_1B62D7C78((uint64_t)v61, (uint64_t)v62, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!v62[0])
  {
    swift_release();
    uint64_t result = sub_1B62CA064((uint64_t)v51);
    goto LABEL_38;
  }
  uint64_t v9 = (unsigned int *)v62[5];
  uint64_t v10 = v62[7];
  uint64_t v11 = v62[8];
  uint64_t v12 = v62[10];
  swift_release();
  if (v12 < 1)
  {
    sub_1B62CA064((uint64_t)v51);
    uint64_t result = (uint64_t)sub_1B632F1C4(v61, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    goto LABEL_38;
  }
  uint64_t v44 = v1;
  uint64_t v14 = *(void *)(*(void *)(*(void *)(v11 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                              + 8 * *(void *)thread_worker_index(&thread_worker_index, v13)
                              + 8)
                  + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  ecs_stack_allocator_push_snapshot(v14);
  uint64_t v43 = v14;
  uint64_t v15 = ecs_stack_allocator_allocate(v14, 8 * v12, 4);
  if (!v10) {
    goto LABEL_36;
  }
  uint64_t v16 = (unsigned int *)v15;
  uint64_t v17 = 0;
  int v47 = (unsigned int *)v15;
  uint64_t v48 = &v9[12 * v10];
  double v46 = (char *)v15 + 4;
  do
  {
    uint64_t v18 = (uint64_t *)*((void *)v9 + 2);
    uint64_t v19 = *((void *)v9 + 5);
    if (v18)
    {
      uint64_t v20 = *((void *)v9 + 4);
      if (v20)
      {
        swift_retain();
        uint64_t v21 = &v46[8 * v17];
        do
        {
          uint64_t v23 = *v18++;
          uint64_t v22 = v23;
          uint64_t v24 = swift_retain();
          if (*(unsigned char *)(v19 + 184)) {
            goto LABEL_39;
          }
          int v25 = *(_DWORD *)(*(void *)(v19 + 168) + 4 * v22);
          int v26 = *(_DWORD *)(*(void *)(v24 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v25 + 8);
          swift_release();
          *((_DWORD *)v21 - 1) = v25;
          *(_DWORD *)uint64_t v21 = v26;
          ++v17;
          v21 += 8;
          --v20;
        }
        while (v20);
LABEL_13:
        swift_release();
        uint64_t v16 = v47;
      }
    }
    else
    {
      uint64_t v28 = *v9;
      uint64_t v27 = v9[1];
      if (v28 != v27)
      {
        swift_retain();
        uint64_t v29 = &v46[8 * v17];
        do
        {
          uint64_t v30 = swift_retain();
          if (*(unsigned char *)(v19 + 184)) {
            goto LABEL_39;
          }
          int v31 = *(_DWORD *)(*(void *)(v19 + 168) + 4 * v28);
          uint64_t v32 = v28 + 1;
          int v33 = *(_DWORD *)(*(void *)(v30 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v31 + 8);
          swift_release();
          *((_DWORD *)v29 - 1) = v31;
          *(_DWORD *)uint64_t v29 = v33;
          ++v17;
          v29 += 8;
          uint64_t v28 = v32;
        }
        while (v27 != v32);
        goto LABEL_13;
      }
    }
    v9 += 12;
  }
  while (v9 != v48);
  if (v17)
  {
    uint64_t v35 = &v16[2 * v17];
    uint64_t v36 = v1 + OBJC_IVAR____TtC3VFX9VFXEffect_scene;
    do
    {
      uint64_t v37 = *v16;
      uint64_t v38 = v16[1];
      if (v37 != v49 || v38 != HIDWORD(v49))
      {
        uint64_t v40 = (char *)MEMORY[0x1BA9B8670](v36);
        if (!v40)
        {
          while (1)
          {
            sub_1B6E328C8();
            sub_1B6E31948();
            sub_1B6E33098();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
LABEL_39:
            sub_1B6E32BE8();
            __break(1u);
          }
        }
        uint64_t v41 = *(void *)&v40[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];

        sub_1B6AADDB4(v49, v45, v37 | (v38 << 32), v41);
      }
      v16 += 2;
    }
    while (v16 != v35);
  }
LABEL_36:
  ecs_stack_allocator_pop_snapshot(v43);
  sub_1B632F1C4(v61, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B62CA064((uint64_t)v51);
  uint64_t result = (uint64_t)sub_1B632F1C4(v61, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  uint64_t v1 = v44;
LABEL_38:
  uint64_t v42 = v1 + OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity;
  *(void *)uint64_t v42 = v49;
  *(unsigned char *)(v42 + 8) = 0;
  return result;
}

uint64_t sub_1B6B5CA00()
{
  uint64_t v1 = v0;
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_1EB997A18;
  int v26 = 0;
  char v27 = 2;
  uint64_t v28 = 0;
  char v29 = 2;
  uint64_t v30 = 0;
  swift_retain();
  sub_1B67817AC(1, 1, (uint64_t)v14);
  swift_release();
  sub_1B6397CE8(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for Parent;
  *(void *)(inited + 40) = &off_1F0FA04A8;
  *(void *)(inited + 48) = &type metadata for PointOfView;
  *(void *)(inited + 56) = &off_1F0F56610;
  sub_1B62AD184(v15);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v14);
  uint64_t v3 = sub_1B639D66C();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
    unint64_t v4 = 0x200000000;
  }
  else {
    unint64_t v4 = *(unsigned int *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) | ((unint64_t)(*(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) == 0) << 33);
  }
  v23[0] = v15[0];
  v23[1] = v15[1];
  uint64_t v24 = v16;
  sub_1B62C9DA8(v3, (uint64_t)v23, v4, v31);
  sub_1B62D7C78((uint64_t)v31, (uint64_t)v32, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v32[0])
  {
    swift_release();
    return sub_1B62CA064((uint64_t)v15);
  }
  long long v19 = v32[2];
  long long v20 = v32[3];
  long long v21 = v32[4];
  long long v22 = v32[5];
  long long v17 = v32[0];
  long long v18 = v32[1];
  swift_release();
  if ((void)v22 != 1)
  {
    sub_1B6B5C3B4();
    sub_1B632F1C4(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    return sub_1B62CA064((uint64_t)v15);
  }
  sub_1B637BED0(0);
  uint64_t v6 = v5;
  sub_1B632F1C4(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
  swift_retain();
  uint64_t v7 = sub_1B62DE2C8(v6);
  swift_release();
  sub_1B632F1C4(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  sub_1B639D66C();
  swift_release();
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29128]), sel_init);
  id v9 = objc_msgSend(v8, sel_UUIDString);

  sub_1B6E31798();
  if (v7 != 0xFFFFFFFFLL)
  {
    uint64_t v11 = swift_retain();
    MEMORY[0x1F4188790](v11, v12);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6B657B0);
    swift_release();
  }
  sub_1B62CA064((uint64_t)v15);
  sub_1B632F1C4(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v13 = v1 + OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity;
  *(void *)uint64_t v13 = v7;
  *(unsigned char *)(v13 + 8) = 0;
  return result;
}

void sub_1B6B5CE4C()
{
  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v1 = *(void **)&Strong[OBJC_IVAR____TtC3VFX9VFXEffect_delegate];
  swift_unknownObjectRetain();

  if (v1)
  {
    uint64_t v2 = (void *)swift_unknownObjectUnownedLoadStrong();
    objc_msgSend(v1, sel_effectDidRestart_, v2);

    swift_unknownObjectRelease();
  }
}

id sub_1B6B5CEE4(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v9 = &v4[OBJC_IVAR____TtC3VFX9VFXEffect_effectID];
  *(_DWORD *)id v9 = 0;
  void v9[4] = 1;
  uint64_t v10 = &v4[OBJC_IVAR____TtC3VFX9VFXEffect_url];
  uint64_t v11 = sub_1B6E30F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = &v5[OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity];
  *(void *)uint64_t v12 = 0;
  unsigned char v12[8] = 1;
  *(void *)&v5[OBJC_IVAR____TtC3VFX9VFXEffect_entityObject] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC3VFX9VFXEffect_delegate] = 0;
  *(void *)&v5[OBJC_IVAR____TtC3VFX9VFXEffect_version] = 0;
  uint64_t v13 = OBJC_IVAR____TtC3VFX9VFXEffect_onEffectRestartSubject;
  sub_1B639AA44(0, (unint64_t *)&qword_1EB980098, MEMORY[0x1E4F1AB88]);
  swift_allocObject();
  uint64_t v14 = v5;
  *(void *)&v5[v13] = sub_1B6E31378();
  *(void *)&v14[OBJC_IVAR____TtC3VFX9VFXEffect_cancellables] = MEMORY[0x1E4FBC870];
  v14[OBJC_IVAR____TtC3VFX9VFXEffect__enabled] = 1;
  v14[OBJC_IVAR____TtC3VFX9VFXEffect__tombstoned] = 0;
  uint64_t v15 = a1;
  swift_unknownObjectWeakAssign();
  *(_DWORD *)id v9 = a2;
  void v9[4] = 0;
  uint64_t v16 = &v14[OBJC_IVAR____TtC3VFX9VFXEffect_name];
  *(void *)uint64_t v16 = a3;
  *((void *)v16 + 1) = a4;

  v23.receiver = v14;
  v23.super_class = (Class)type metadata accessor for VFXEffect();
  id v17 = objc_msgSendSuper2(&v23, sel_init);
  sub_1B6B5BF60();
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1B6B6587C;
  *(void *)(v19 + 24) = v18;
  long long v20 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1B639AA44(0, &qword_1EB980090, MEMORY[0x1E4F1AAE0]);
  sub_1B6B5D2B4(&qword_1EB980FB8, &qword_1EB980090, v20);
  sub_1B6E313C8();
  swift_release();
  swift_release();
  sub_1B6E31348();
  swift_release();
  sub_1B6B5CA00();

  return v17;
}

uint64_t sub_1B6B5D1D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AB88];
  sub_1B639AA44(0, (unint64_t *)&qword_1EB980098, MEMORY[0x1E4F1AB88]);
  sub_1B6B5D2B4((unint64_t *)&qword_1EB97D950, (unint64_t *)&qword_1EB980098, v2);
  sub_1B6E31398();
  uint64_t v3 = sub_1B639D66C();
  sub_1B69DC06C(v3, v1);

  return swift_release();
}

uint64_t sub_1B6B5D2B4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B639AA44(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6B5D408()
{
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  int v0 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v2 = 0;
  swift_retain();
  sub_1B6B33E34(v0, &v2, 0xD000000000000034, 0x80000001B6F4AB30);
  swift_release();

  return swift_release();
}

uint64_t (*sub_1B6B5D504(unsigned char *a1))()
{
  *a1 = 0;
  return sub_1B6B5D528;
}

uint64_t sub_1B6B5D528()
{
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  int v0 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  uint64_t v2 = 0;
  swift_retain();
  sub_1B6B33E34(v0, &v2, 0xD000000000000034, 0x80000001B6F4AB30);
  swift_release();
  return swift_release();
}

uint64_t sub_1B6B5D618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1B639D66C();
  id v10 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B69E6148(v9, v10, a1, a2, a3, a4);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B6B5D6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  sub_1B639D66C();
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
    unint64_t v12 = 0x200000000;
  }
  else {
    unint64_t v12 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) | ((unint64_t)(*(_DWORD *)(a1 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) == 0) << 33);
  }
  uint64_t v13 = sub_1B6C0A538(a2, a3, v12, 1);
  if ((v14 & 1) != 0 || v13 == 0xFFFFFFFFLL) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = sub_1B6B64914(v13, a2, a3, a4, a5);
  }
  uint64_t result = swift_release();
  *a6 = v15;
  return result;
}

uint64_t sub_1B6B5D87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1B639D66C();
  id v8 = v3;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B69E6494(v7, v8, a1, a2, a3);
  swift_release();

  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1B6B5D9C8(uint64_t a1, uint64_t a2)
{
  sub_1B639D66C();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
    unint64_t v5 = 0x200000000;
  }
  else {
    unint64_t v5 = *(unsigned int *)(v2 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) | ((unint64_t)(*(_DWORD *)(v2 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) == 0) << 33);
  }
  uint64_t v6 = sub_1B6B5AD30(a1, a2, v5);
  swift_release();
  return v6;
}

uint64_t sub_1B6B5DB20()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_entityObject);
  if (!v1)
  {
    sub_1B639D66C();
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
      unint64_t v8 = 0x200000000;
    }
    else {
      unint64_t v8 = *(unsigned int *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) | ((unint64_t)(*(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) == 0) << 33);
    }
    uint64_t v9 = sub_1B6B5B228(v8, 0, 0);
    swift_release();
    return v9;
  }
  uint64_t v31 = MEMORY[0x1E4FBC860];
  uint64_t v2 = &v1[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
  uint64_t v3 = *(unsigned int *)&v1[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
  int v4 = *(_DWORD *)&v1[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4];
  if (v3 == -1 && v4 == 0) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v6 = v3 | ((uint64_t)v4 << 32);
  if (swift_weakLoadStrong())
  {
    uint64_t v7 = v1;
  }
  else if (*(void *)&v1[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager])
  {
    id v10 = v1;
    swift_retain();
  }
  else
  {
    type metadata accessor for EntityManager();
    swift_allocObject();
    uint64_t v11 = v1;
    sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
  }
  swift_release();
  swift_retain();
  uint64_t v30 = sub_1B636A9A0(v6);
  uint64_t v13 = v12;
  swift_release();
  if (!v13)
  {

    return MEMORY[0x1E4FBC860];
  }
  uint64_t v15 = *(unsigned int *)v2;
  uint64_t v14 = *((unsigned int *)v2 + 1);
  if (!swift_weakLoadStrong())
  {
    if (*(void *)&v1[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager])
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for EntityManager();
      swift_allocObject();
      sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
    }
  }
  swift_release();
  BOOL v16 = v15 == -1 && v14 == 0;
  if (v16 || (swift_retain(), uint64_t v17 = sub_1B695FBD4(v15 | (v14 << 32)), swift_release(), !v17))
  {

    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v19 = (unint64_t)sub_1B69FEFE8(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if ((v19 & 0x8000000000000000) != 0 || (v19 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1B6E32C18();
    swift_release();
    if (v20) {
      goto LABEL_29;
    }
    goto LABEL_45;
  }
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20)
  {
LABEL_45:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_46:

    return v9;
  }
LABEL_29:
  uint64_t v29 = v6;
  uint64_t v21 = 0;
  uint64_t v28 = v0 + OBJC_IVAR____TtC3VFX9VFXEffect_scene;
  while (1)
  {
    if ((v19 & 0xC000000000000001) != 0) {
      MEMORY[0x1BA9B4580](v21, v19);
    }
    else {
      swift_retain();
    }
    type metadata accessor for BindingPropertyDescription();
    uint64_t v22 = swift_dynamicCastClass();
    if (!v22) {
      goto LABEL_31;
    }
    uint64_t v23 = v22;
    if (*(unsigned char *)(v22 + 240)) {
      goto LABEL_31;
    }
    uint64_t v24 = MEMORY[0x1BA9B8670](v28);
    if (!v24) {
      break;
    }
    uint64_t v25 = (void *)v24;
    swift_retain();
    swift_retain();

    sub_1B6B5B944(v29, v30, v13, v23);
    swift_release();
    uint64_t v26 = swift_unknownObjectRetain();
    MEMORY[0x1BA9B3870](v26);
    if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
    swift_unknownObjectRelease();
    swift_release();
LABEL_31:
    ++v21;
    swift_release();
    if (v20 == v21)
    {
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v9 = v31;
      goto LABEL_46;
    }
  }
  swift_retain();
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6B5E034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_1B639D66C();
  if (*(unsigned char *)(v5 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
    unint64_t v12 = 0x200000000;
  }
  else {
    unint64_t v12 = *(unsigned int *)(v5 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) | ((unint64_t)(*(_DWORD *)(v5 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) == 0) << 33);
  }
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B69DDA0C(v11, v11, a1, a2, v12, a3, a4, a5);

  return swift_release();
}

uint64_t sub_1B6B5E290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1B639D66C();
  MEMORY[0x1F4188790](v10, v11);
  _OWORD v15[2] = v10;
  v15[3] = a1;
  v15[4] = a2;
  int v16 = v12;
  char v17 = v13;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  sub_1B63BA2B0((void (*)(void))sub_1B688AA60, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_1B6B5E434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = MEMORY[0x1BA9B8670](v5 + OBJC_IVAR____TtC3VFX9VFXEffect_scene);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = *(void *)(v10 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
    swift_retain_n();

    swift_bridgeObjectRetain();
    sub_1B69DDF00(v12, v12, a1, a2, a3, a4);
    return swift_release();
  }
  else
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6B5E5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v9[2] = sub_1B639D66C();
  void v9[3] = a1;
  void v9[4] = a2;
  uint64_t v9[5] = a3;
  void v9[6] = a4;
  sub_1B63BA2B0((void (*)(void))sub_1B6B64C9C, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1B6B5E654()
{
  sub_1B639D66C();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1B6E31A68();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
    unint64_t v3 = 0x200000000;
  }
  else {
    unint64_t v3 = *(unsigned int *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) | ((unint64_t)(*(_DWORD *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) == 0) << 33);
  }
  uint64_t v4 = sub_1B6C0A538(v1, v2, v3, 1);
  char v6 = v5;
  swift_release();
  swift_bridgeObjectRelease();
  if (v6 & 1 | (v4 == 0xFFFFFFFFLL)) {
    return 0;
  }
  else {
    return v4;
  }
}

uint64_t sub_1B6B5E72C()
{
  uint64_t result = sub_1B6B5E654();
  if (v1) {
    return 0;
  }
  return result;
}

uint64_t sub_1B6B5E7B8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v10 = sub_1B639D66C();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B69DC250(v10, v10, a1, a2, a3, 23, a4, a5);

  return swift_release();
}

uint64_t sub_1B6B5E920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v12 = sub_1B639D66C();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B69DC250(v12, v12, a1, a2, a3, a4, a5, a6);

  return swift_release();
}

uint64_t sub_1B6B5EAA0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v10 = sub_1B639D66C();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B69DC480(v10, v10, a1, a2, a3, 23, 0, a4, a5);

  return swift_release();
}

uint64_t sub_1B6B5EC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t), uint64_t a7)
{
  uint64_t v14 = sub_1B639D66C();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B69DC480(v14, v14, a1, a2, a3, a4, a5, a6, a7);

  return swift_release();
}

uint64_t sub_1B6B5EDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = sub_1B6B5E654();
  if ((v11 & 1) == 0)
  {
    uint64_t v12 = result;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a5;
    *(void *)(v13 + 24) = a6;
    uint64_t v14 = sub_1B639D66C();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B69DC480(v14, v14, v12, a3, a4, 23, 0, (void (*)(uint64_t, uint64_t))sub_1B6B64CD0, v13);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6B5F028(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = sub_1B639D66C();
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
    unint64_t v8 = 0x200000000;
  }
  else {
    unint64_t v8 = *(unsigned int *)(v3 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) | ((unint64_t)(*(_DWORD *)(v3 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) == 0) << 33);
  }
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B69D750C(v7, v7, a1, a2, v8, a3 & 1);

  return swift_release();
}

uint64_t sub_1B6B5F14C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B639D66C();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
    unint64_t v6 = 0x200000000;
  }
  else {
    unint64_t v6 = *(unsigned int *)(v2 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) | ((unint64_t)(*(_DWORD *)(v2 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID) == 0) << 33);
  }
  swift_bridgeObjectRetain();
  char v7 = sub_1B69E39D8(v5, v5, a1, a2, v6);
  swift_release();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B6B5F25C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = MEMORY[0x1BA9B8670](&v3[OBJC_IVAR____TtC3VFX9VFXEffect_scene]);
  if (v6)
  {
    char v7 = (void *)v6;
    uint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC3VFX8VFXScene_entityManager);
    swift_retain();

    uint64_t v9 = v3;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1B69E2B30(v8, v9, a1, a2);
    swift_release();

    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
  else
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6B5F45C(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B639D66C();
  swift_unknownObjectRetain();
  sub_1B69DC6D0(v5, v2, a1, a2);

  return swift_release();
}

uint64_t sub_1B6B5F4D0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1B639D66C();
  if (a2) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = 0xFFFFFFFFLL;
  }
  sub_1B677EE24(v5, a3);
  return swift_release();
}

uint64_t sub_1B6B5F630()
{
  uint64_t v1 = sub_1B639D66C();
  id v2 = v0;
  char v3 = sub_1B69E3FC0(v1, v2);
  swift_release();

  return v3 & 1;
}

uint64_t sub_1B6B5F704(char a1)
{
  uint64_t v3 = sub_1B639D66C();
  sub_1B69DC8FC(v3, v1, a1);

  return swift_release();
}

void sub_1B6B5F768(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_1B639D66C();
  id v5 = v3;
  char v6 = sub_1B69E3FC0(v4, v5);
  swift_release();

  *a2 = v6 & 1;
}

uint64_t sub_1B6B5F7D4(char *a1, void **a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = sub_1B639D66C();
  sub_1B69DC8FC(v4, v3, v2);

  return swift_release();
}

uint64_t (*sub_1B6B5F83C(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  uint64_t v3 = sub_1B639D66C();
  id v4 = v1;
  char v5 = sub_1B69E3FC0(v3, v4);
  *(void *)(a1 + 8) = 0;

  swift_release();
  *(unsigned char *)(a1 + 16) = v5 & 1;
  return sub_1B6B5F8D0;
}

uint64_t sub_1B6B5F8D0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(a1 + 16);
  uint64_t v3 = sub_1B639D66C();
  sub_1B69DC8FC(v3, v1, v2);

  return swift_release();
}

void sub_1B6B5F934(uint64_t a1, char a2)
{
  id v4 = (void *)MEMORY[0x1BA9B8670](a1 + OBJC_IVAR____TtC3VFX9VFXEffect_scene);

  if (v4)
  {
    char v5 = a2 & 1;
    *(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX9VFXEffect__enabled) = v5;
    if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4) & 1) == 0)
    {
      unint64_t v6 = *(unsigned int *)(a1 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID);
      sub_1B639D66C();
      uint64_t v7 = swift_retain();
      sub_1B69DCB84(v7, v5, v7, v6);
      swift_release();
    }
  }
}

uint64_t sub_1B6B5FA04()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC3VFX9VFXEffect__tombstoned);
}

uint64_t sub_1B6B5FAAC(uint64_t result)
{
  if (v1[OBJC_IVAR____TtC3VFX9VFXEffect__tombstoned] != (result & 1))
  {
    v1[OBJC_IVAR____TtC3VFX9VFXEffect__tombstoned] = result & 1;
    uint64_t v2 = sub_1B639D66C();
    sub_1B69DCD2C(v2, v1);
    return swift_release();
  }
  return result;
}

unsigned __int8 *sub_1B6B5FB38(unsigned __int8 *result, void **a2)
{
  int v2 = *result;
  uint64_t v3 = *a2;
  if (v2 != *((unsigned __int8 *)*a2 + OBJC_IVAR____TtC3VFX9VFXEffect__tombstoned))
  {
    v3[OBJC_IVAR____TtC3VFX9VFXEffect__tombstoned] = v2;
    uint64_t v4 = sub_1B639D66C();
    sub_1B69DCD2C(v4, v3);
    return (unsigned __int8 *)swift_release();
  }
  return result;
}

uint64_t (*sub_1B6B5FBC8(uint64_t a1))(uint64_t result)
{
  uint64_t v2 = OBJC_IVAR____TtC3VFX9VFXEffect__tombstoned;
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v1 + v2);
  return sub_1B6B5FBFC;
}

uint64_t sub_1B6B5FBFC(uint64_t result)
{
  uint64_t v2 = *(unsigned char **)result;
  uint64_t v1 = *(void *)(result + 8);
  int v3 = *(unsigned __int8 *)(result + 16);
  if (v3 != *(unsigned __int8 *)(*(void *)result + v1))
  {
    v2[v1] = v3;
    uint64_t v4 = sub_1B639D66C();
    sub_1B69DCD2C(v4, v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6B5FD20()
{
  uint64_t v1 = sub_1B639D66C();
  id v2 = v0;
  sub_1B69E6724(v1, v2);
  uint64_t v4 = v3;
  swift_release();

  return v4;
}

uint64_t sub_1B6B5FD80@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v90 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EB997A18;
  sub_1B6397CE8(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for PointOfView;
  *(void *)(inited + 40) = &off_1F0F56610;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  uint64_t v75 = v6;
  int v76 = 0;
  char v77 = 2;
  uint64_t v78 = 0;
  char v79 = 2;
  uint64_t v80 = 0;
  swift_retain();
  sub_1B62F776C(inited, 1, (uint64_t)v69);
  swift_setDeallocating();
  swift_release();
  uint64_t v8 = sub_1B639D66C();
  uint64_t v9 = (int *)(a1 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
    unint64_t v10 = 0x200000000;
  }
  else {
    unint64_t v10 = *v9 | ((unint64_t)(*v9 == 0) << 33);
  }
  sub_1B62C9DA8(v8, (uint64_t)v69, v10, v81);
  swift_release();
  uint64_t v68 = MEMORY[0x1E4FBC860];
  sub_1B62D7C78((uint64_t)v81, (uint64_t)v82, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v82[0])
  {
    uint64_t result = sub_1B62CA064((uint64_t)v69);
LABEL_45:
    uint64_t v49 = MEMORY[0x1E4FBC860];
LABEL_47:
    *a2 = v49;
    return result;
  }
  long long v70 = v82[0];
  long long v71 = v82[1];
  uint64_t v72 = v83;
  if (v88 <= 0 || (uint64_t v57 = v85) == 0)
  {
    sub_1B62CA064((uint64_t)v69);
    uint64_t result = (uint64_t)sub_1B632F1C4(v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    goto LABEL_45;
  }
  uint64_t v51 = v9;
  uint64_t v52 = a2;
  uint64_t v56 = v84;
  uint64_t v61 = v87[4];
  int v60 = *(unsigned __int8 *)(v86 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v11 = a1 + OBJC_IVAR____TtC3VFX9VFXEffect_scene;
  int64_t v53 = v87 + 13;
  uint64_t v62 = v87;
  uint64_t v54 = v87 + 8;
  uint64_t v55 = (uint64_t)(v87 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v12 = 0;
  while (1)
  {
    uint64_t v58 = v12;
    uint64_t v59 = v3;
    uint64_t v13 = (unsigned int *)(v56 + 48 * v12);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    int v16 = (uint64_t *)*((void *)v13 + 2);
    uint64_t v17 = *((void *)v13 + 4);
    uint64_t v18 = *((void *)v13 + 5);
    if (v60)
    {
      uint64_t v19 = *(os_unfair_lock_s **)(v18 + 376);
      swift_retain();
      os_unfair_lock_lock(v19);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v61);
    sub_1B62D7C78(v55, (uint64_t)v89, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v20 = v62[4];
    uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v18 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v62[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
    v62[7] = v21;
    v54[1] = 0;
    v54[2] = 0;
    void *v54 = 0;
    swift_release();
    if (!v16) {
      break;
    }
    if (v17)
    {
      do
      {
        uint64_t v23 = *v16++;
        uint64_t v22 = v23;
        uint64_t v24 = swift_retain();
        if (*(unsigned char *)(v18 + 184)) {
          goto LABEL_51;
        }
        int v25 = *(_DWORD *)(*(void *)(v18 + 168) + 4 * v22);
        int v26 = *(_DWORD *)(*(void *)(v24 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v25 + 8);
        swift_release();
        char v27 = (char *)MEMORY[0x1BA9B8670](v11);
        if (!v27) {
          goto LABEL_48;
        }
        uint64_t v28 = *(void *)&v27[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];

        uint64_t v29 = (objc_class *)type metadata accessor for VFXCoreCamera();
        uint64_t v30 = (char *)objc_allocWithZone(v29);
        uint64_t v31 = &v30[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
        *(_DWORD *)uint64_t v31 = v25;
        *((_DWORD *)v31 + 1) = v26;
        *((void *)v31 + 1) = v28;
        v63.receiver = v30;
        v63.super_class = v29;
        objc_msgSendSuper2(&v63, sel_init);
        MEMORY[0x1BA9B3870]();
        if (*(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1B6E31C78();
        }
        sub_1B6E31CC8();
        sub_1B6E31C48();
      }
      while (--v17);
    }
LABEL_23:
    v73[0] = v70;
    v73[1] = v71;
    uint64_t v74 = v72;
    sub_1B6345178(v62, (unsigned __int16 **)v73, (uint64_t)v89);
    uint64_t v3 = v59;
    if (*(void *)(v62[13] + 16))
    {
      uint64_t v32 = swift_bridgeObjectRetain();
      sub_1B639147C(v32, v18);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = v62[13];
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1B6399BB8(0, *(void *)(v34 + 16));
      }
      else
      {
        uint64_t v43 = (void *)MEMORY[0x1E4FBC860];
        if (*(void *)(v34 + 24) >= 2uLL)
        {
          sub_1B6397CE8(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
          uint64_t v43 = (void *)swift_allocObject();
          size_t v44 = j__malloc_size(v43);
          v43[2] = 0;
          v43[3] = 2 * ((uint64_t)(v44 - 32) / 72);
        }
        void *v53 = v43;
        swift_bridgeObjectRelease();
      }
      if (*(unsigned __int8 *)(v62[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
      {
        uint64_t v45 = *(char **)(v18 + 232);
        double v46 = *(char **)(v18 + 256);
        if (v45 == v46)
        {
          int v47 = *(char **)(v18 + 240);
        }
        else
        {
          sub_1B666018C(v46, v45);
          double v46 = *(char **)(v18 + 232);
          int v47 = *(char **)(v18 + 240);
          if (v47 == v46)
          {
            int v47 = 0;
            double v46 = 0;
            *(void *)(v18 + 232) = 0;
            *(void *)(v18 + 240) = 0;
          }
        }
        *(void *)(v18 + 248) = v47;
        *(void *)(v18 + 256) = v46;
      }
    }
    ecs_stack_allocator_pop_snapshot(v61);
    if (v60)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 376));
    }
    swift_release();
    uint64_t v12 = v58 + 1;
    if (v58 + 1 == v57)
    {
      sub_1B632F1C4(v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B62CA064((uint64_t)v69);
      uint64_t result = (uint64_t)sub_1B632F1C4(v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      uint64_t v49 = v68;
      a2 = v52;
      goto LABEL_47;
    }
  }
  if (v15 == v14) {
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v35 = swift_retain();
    if (*(unsigned char *)(v18 + 184)) {
      break;
    }
    int v36 = *(_DWORD *)(*(void *)(v18 + 168) + 4 * v15);
    int v37 = *(_DWORD *)(*(void *)(v35 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v36 + 8);
    swift_release();
    uint64_t v38 = (char *)MEMORY[0x1BA9B8670](v11);
    if (!v38)
    {
LABEL_48:
      uint64_t v66 = 0;
      unint64_t v67 = 0xE000000000000000;
      sub_1B6E328C8();
      sub_1B6E31948();
      uint64_t v50 = 0;
      if ((v51[1] & 1) == 0) {
        uint64_t v50 = *v51;
      }
      uint64_t v65 = v50;
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      break;
    }
    uint64_t v39 = *(void *)&v38[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];

    uint64_t v40 = (objc_class *)type metadata accessor for VFXCoreCamera();
    uint64_t v41 = (char *)objc_allocWithZone(v40);
    uint64_t v42 = &v41[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
    *(_DWORD *)uint64_t v42 = v36;
    *((_DWORD *)v42 + 1) = v37;
    *((void *)v42 + 1) = v39;
    v64.receiver = v41;
    v64.super_class = v40;
    objc_msgSendSuper2(&v64, sel_init);
    MEMORY[0x1BA9B3870]();
    if (*(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    ++v15;
    sub_1B6E31CC8();
    sub_1B6E31C48();
    if (v14 == v15) {
      goto LABEL_23;
    }
  }
LABEL_51:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6B60648(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B639D66C();
  id v6 = v2;
  swift_bridgeObjectRetain();
  sub_1B69E6900(v5, v6, a1, a2);
  uint64_t v8 = v7;
  swift_release();

  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B6B606C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v109 = *MEMORY[0x1E4F143B8];
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v90 = qword_1EB997A18;
  int v91 = 0;
  char v92 = 2;
  uint64_t v93 = 0;
  char v94 = 2;
  uint64_t v95 = 0;
  swift_retain();
  sub_1B6A6DAE8(1, (uint64_t)v79);
  swift_release();
  sub_1B6397CE8(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = &type metadata for PointOfView;
  *(void *)(inited + 40) = &off_1F0F56610;
  *(void *)(inited + 48) = &type metadata for WorldTransform;
  *(void *)(inited + 56) = &off_1F0F67798;
  sub_1B63B9C40(inited, 1, (uint64_t)v80);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v79);
  uint64_t v10 = sub_1B639D66C();
  uint64_t v11 = (int *)(a1 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC3VFX9VFXEffect_effectID + 4)) {
    unint64_t v12 = 0x200000000;
  }
  else {
    unint64_t v12 = *v11 | ((unint64_t)(*v11 == 0) << 33);
  }
  v82[0] = v80[0];
  v82[1] = v80[1];
  uint64_t v83 = v81;
  sub_1B62C9DA8(v10, (uint64_t)v82, v12, v96);
  sub_1B62D7C78((uint64_t)v96, (uint64_t)&v97, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v65 = v97;
  if (!v97)
  {
    swift_release();
    uint64_t result = sub_1B62CA064((uint64_t)v80);
LABEL_46:
    uint64_t v53 = MEMORY[0x1E4FBC860];
    goto LABEL_49;
  }
  char v63 = v99;
  int v64 = v98;
  uint64_t v62 = v100;
  char v61 = v101;
  uint64_t v59 = v103;
  uint64_t v60 = v102;
  uint64_t v14 = v104;
  uint64_t v13 = v105;
  uint64_t v15 = v107;
  long long v70 = v106;
  swift_release();
  uint64_t v78 = MEMORY[0x1E4FBC860];
  if (v15 <= 0)
  {
    sub_1B62CA064((uint64_t)v80);
    uint64_t result = (uint64_t)sub_1B632F1C4(v96, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    goto LABEL_46;
  }
  if (!v14)
  {
    sub_1B632F1C4(v96, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
    sub_1B62CA064((uint64_t)v80);
    sub_1B632F1C4(v96, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
    uint64_t v53 = MEMORY[0x1E4FBC860];
LABEL_48:
    uint64_t result = (uint64_t)sub_1B632F1C4(v96, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
LABEL_49:
    *a4 = v53;
    return result;
  }
  uint64_t v55 = v11;
  uint64_t v56 = a4;
  uint64_t v69 = v70[4];
  char v16 = *(unsigned char *)(v13 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v71 = a1 + OBJC_IVAR____TtC3VFX9VFXEffect_scene;
  sub_1B632F1C4(v96, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
  sub_1B632F1C4(v96, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
  uint64_t v17 = 0;
  char v57 = v16;
  uint64_t v58 = v14;
  while (1)
  {
    uint64_t v67 = v17;
    uint64_t v68 = v5;
    uint64_t v18 = (unsigned int *)(v59 + 48 * v17);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = (uint64_t *)*((void *)v18 + 2);
    uint64_t v22 = *((void *)v18 + 4);
    uint64_t v23 = *((void *)v18 + 5);
    uint64_t v66 = *((void *)v18 + 3);
    if (v16)
    {
      uint64_t v24 = *(os_unfair_lock_s **)(v23 + 376);
      swift_retain();
      os_unfair_lock_lock(v24);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v69);
    sub_1B62D7C78((uint64_t)(v70 + 6), (uint64_t)v108, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v25 = v70[4];
    uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v70[6] = ecs_stack_allocator_allocate(v25, 48 * v26, 8);
    v70[7] = v26;
    v70[9] = 0;
    v70[10] = 0;
    v70[8] = 0;
    swift_release();
    uint64_t v27 = sub_1B62C9024((uint64_t)&type metadata for Name, (uint64_t)&off_1F0F9E630, v21, v66, v22, (uint64_t)v70);
    if (v21)
    {
      if (v22)
      {
        uint64_t v28 = (void *)(v27 + 8);
        while (1)
        {
          uint64_t v30 = *v21++;
          uint64_t v29 = v30;
          BOOL v31 = *(v28 - 1) == a2 && *v28 == a3;
          if (v31 || (sub_1B6E334B8() & 1) != 0)
          {
            char v32 = *(unsigned char *)(v23 + 184);
            uint64_t v33 = swift_retain();
            if (v32) {
              goto LABEL_54;
            }
            int v34 = *(_DWORD *)(*(void *)(v23 + 168) + 4 * v29);
            int v35 = *(_DWORD *)(*(void *)(v33 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v34 + 8);
            swift_release();
            int v36 = (char *)MEMORY[0x1BA9B8670](v71);
            if (!v36) {
              goto LABEL_51;
            }
            uint64_t v37 = *(void *)&v36[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];

            uint64_t v38 = (objc_class *)type metadata accessor for VFXCoreCamera();
            uint64_t v39 = (char *)objc_allocWithZone(v38);
            uint64_t v40 = &v39[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
            *(_DWORD *)uint64_t v40 = v34;
            *((_DWORD *)v40 + 1) = v35;
            *((void *)v40 + 1) = v37;
            v73.receiver = v39;
            v73.super_class = v38;
            objc_msgSendSuper2(&v73, sel_init);
            MEMORY[0x1BA9B3870]();
            if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1B6E31C78();
            }
            sub_1B6E31CC8();
            sub_1B6E31C48();
          }
          v28 += 2;
          if (!--v22) {
            goto LABEL_29;
          }
        }
      }
      goto LABEL_29;
    }
    if (v19 != v20) {
      break;
    }
LABEL_29:
    uint64_t v84 = v65;
    int v85 = v64;
    char v86 = v63;
    uint64_t v87 = v62;
    char v88 = v61;
    uint64_t v89 = v60;
    sub_1B6345178(v70, &v84, (uint64_t)v108);
    uint64_t v5 = v68;
    sub_1B634507C((char *)v23);
    ecs_stack_allocator_pop_snapshot(v69);
    char v16 = v57;
    if (v57)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 376));
    }
    swift_release();
    uint64_t v17 = v67 + 1;
    if (v67 + 1 == v58)
    {
      sub_1B632F1C4(v96, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      sub_1B62CA064((uint64_t)v80);
      sub_1B632F1C4(v96, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      uint64_t v53 = v78;
      a4 = v56;
      goto LABEL_48;
    }
  }
  uint64_t v41 = (void *)(v27 + 16 * v19 + 8);
  while (1)
  {
    BOOL v42 = *(v41 - 1) == a2 && *v41 == a3;
    if (v42 || (sub_1B6E334B8() & 1) != 0) {
      break;
    }
LABEL_33:
    ++v19;
    v41 += 2;
    if (v20 == v19) {
      goto LABEL_29;
    }
  }
  char v43 = *(unsigned char *)(v23 + 184);
  uint64_t v44 = swift_retain();
  if (v43) {
    goto LABEL_54;
  }
  int v45 = *(_DWORD *)(*(void *)(v23 + 168) + 4 * v19);
  int v46 = *(_DWORD *)(*(void *)(v44 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * v45 + 8);
  swift_release();
  int v47 = (char *)MEMORY[0x1BA9B8670](v71);
  if (v47)
  {
    uint64_t v48 = *(void *)&v47[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];

    uint64_t v49 = (objc_class *)type metadata accessor for VFXCoreCamera();
    uint64_t v50 = (char *)objc_allocWithZone(v49);
    uint64_t v51 = &v50[OBJC_IVAR____TtC3VFX13VFXCoreCamera_instance];
    *(_DWORD *)uint64_t v51 = v45;
    *((_DWORD *)v51 + 1) = v46;
    *((void *)v51 + 1) = v48;
    v74.receiver = v50;
    v74.super_class = v49;
    objc_msgSendSuper2(&v74, sel_init);
    MEMORY[0x1BA9B3870]();
    if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    sub_1B6E31CC8();
    sub_1B6E31C48();
    goto LABEL_33;
  }
LABEL_51:
  uint64_t v76 = 0;
  unint64_t v77 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  uint64_t v54 = 0;
  if ((v55[1] & 1) == 0) {
    uint64_t v54 = *v55;
  }
  uint64_t v75 = v54;
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
LABEL_54:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6B6107C()
{
  uint64_t v1 = v0;
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  v10[1] = 0xEF20746365666665;
  id v2 = objc_msgSend(v0, sel_description);
  sub_1B6E31798();

  sub_1B6E31948();
  swift_bridgeObjectRelease();
  int v3 = sub_1B6E32148();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  v10[0] = 0;
  swift_retain();
  sub_1B6B33E34(v3, v10, 0x20676E69706D7564, 0xEF20746365666665);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (v1[OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity + 8])
  {
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "effect ");
    v10[1] = 0xE700000000000000;
    id v4 = objc_msgSend(v1, sel_description);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
  }
  else
  {
    uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC3VFX9VFXEffect_rootEntity];
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "root entity: ");
    HIWORD(v10[1]) = -4864;
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B639D66C();
    sub_1B62EC0CC((uint64_t)&type metadata for Tombstone, (uint64_t)&off_1F0FAA160, v5);
    swift_release();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v10[0];
  uint64_t v7 = v10[1];
  int v8 = sub_1B6E32148();
  v10[0] = 0;
  swift_retain();
  sub_1B6B33E34(v8, v10, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

id VFXEffect.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VFXEffect();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B6B6156C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v6 = v5;
  long long v8 = *(_OWORD *)(a2 + 16);
  v105[0] = *(_OWORD *)a2;
  v105[1] = v8;
  uint64_t v106 = *(void *)(a2 + 32);
  sub_1B62C9DA8(a1, (uint64_t)v105, a3 & 0xFFFFFFFFFFLL, v92);
  sub_1B62D7C78((uint64_t)v92, (uint64_t)v93, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v93[0])
  {
    long long v100 = v93[0];
    long long v101 = v93[1];
    uint64_t v102 = v94;
    if (v99 >= 1)
    {
      uint64_t v79 = v96;
      if (v96)
      {
        uint64_t v72 = a5;
        uint64_t v77 = v95;
        uint64_t v9 = v98;
        uint64_t v10 = v98[4];
        int v11 = *(unsigned __int8 *)(v97 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        objc_super v73 = v98 + 8;
        uint64_t v74 = (uint64_t)(v98 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v12 = 0;
        uint64_t v82 = MEMORY[0x1E4FBC838] + 8;
        uint64_t v78 = v9;
        uint64_t v76 = v10;
        int v75 = v11;
        while (1)
        {
          uint64_t v80 = v12;
          uint64_t v81 = v6;
          uint64_t v13 = (unsigned int *)(v77 + 48 * v12);
          uint64_t v14 = *v13;
          uint64_t v85 = v13[1];
          uint64_t v15 = (uint64_t *)*((void *)v13 + 2);
          uint64_t v16 = *((void *)v13 + 3);
          uint64_t v18 = *((void *)v13 + 4);
          uint64_t v17 = *((void *)v13 + 5);
          if (v11)
          {
            uint64_t v19 = *(os_unfair_lock_s **)(v17 + 376);
            swift_retain();
            os_unfair_lock_lock(v19);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v10);
          sub_1B62D7C78(v74, (uint64_t)v107, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v20 = v9[4];
          uint64_t v21 = *(void *)(*(void *)(*(void *)(*(void *)(v17 + 40) + 16) + 32) + 16) + 1;
          uint64_t v84 = v17;
          swift_retain();
          void v9[6] = ecs_stack_allocator_allocate(v20, 48 * v21, 8);
          v9[7] = v21;
          v73[1] = 0;
          _OWORD v73[2] = 0;
          *objc_super v73 = 0;
          swift_release();
          uint64_t v22 = v15;
          sub_1B62C9024((uint64_t)&type metadata for Name, (uint64_t)&off_1F0F9E630, v15, v16, v18, (uint64_t)v9);
          uint64_t v23 = sub_1B62C9024((uint64_t)&type metadata for Bindings, (uint64_t)&off_1F0FA3490, v15, v16, v18, (uint64_t)v9);
          if (!v15) {
            break;
          }
          if (v18)
          {
            uint64_t v24 = (uint64_t *)(v23 + 16);
            uint64_t v25 = a4;
            while (1)
            {
              uint64_t v29 = *v22;
              uint64_t v28 = v22 + 1;
              uint64_t v27 = v29;
              uint64_t v30 = swift_retain();
              if (*(unsigned char *)(v17 + 184)) {
                break;
              }
              unsigned int v89 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v27);
              char v86 = v28;
              uint64_t v87 = *(unsigned int *)(*(void *)(v30 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                    + 12 * (int)v89
                                    + 8);
              swift_release();
              uint64_t v31 = *v24;
              uint64_t v32 = *(void *)(*v24 + 16);
              if (v32)
              {
                sub_1B62D8834(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
                uint64_t v33 = (void *)swift_allocObject();
                int64_t v34 = j__malloc_size(v33);
                uint64_t v35 = v34 - 32;
                if (v34 < 32) {
                  uint64_t v35 = v34 - 25;
                }
                v33[2] = v32;
                v33[3] = (2 * (v35 >> 3)) | 1;
                sub_1B6643654(&v91, v33 + 4, v32, v31);
                swift_bridgeObjectRetain_n();
                uint64_t v25 = a4;
                sub_1B62BB588();
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
              }
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              int v91 = (void *)*v25;
              uint64_t v37 = v91;
              *uint64_t v25 = 0x8000000000000000;
              unint64_t v38 = v89 | (unint64_t)(v87 << 32);
              unint64_t v39 = sub_1B62BE38C(v38);
              char v41 = v40;
              uint64_t v42 = v37[2] + ((v40 & 1) == 0);
              if (v37[3] >= v42)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  sub_1B6AD5EBC();
                }
              }
              else
              {
                sub_1B6AC613C(v42, isUniquelyReferenced_nonNull_native);
                uint64_t v43 = sub_1B62BE38C(v38);
                if ((v41 & 1) != (v44 & 1)) {
                  goto LABEL_56;
                }
                unint64_t v39 = v43;
              }
              uint64_t v22 = v86;
              int v45 = v91;
              if (v41)
              {
                uint64_t v46 = v91[7];
                swift_bridgeObjectRelease();
                *(void *)(v46 + 8 * v39) = v33;
              }
              else
              {
                v91[(v39 >> 6) + 8] |= 1 << v39;
                uint64_t v26 = (unsigned int *)(v45[6] + 8 * v39);
                *uint64_t v26 = v89;
                v26[1] = v87;
                *(void *)(v45[7] + 8 * v39) = v33;
                ++v45[2];
              }
              *uint64_t v25 = v45;
              swift_bridgeObjectRelease();
              v24 += 3;
              --v18;
              uint64_t v17 = v84;
              if (!v18) {
                goto LABEL_28;
              }
            }
LABEL_55:
            sub_1B6E32BE8();
            __break(1u);
LABEL_56:
            sub_1B6E33838();
            __break(1u);
            goto LABEL_57;
          }
LABEL_28:
          v103[0] = v100;
          v103[1] = v101;
          uint64_t v104 = v102;
          uint64_t v9 = v78;
          sub_1B6345178(v78, (unsigned __int16 **)v103, (uint64_t)v107);
          uint64_t v6 = v81;
          sub_1B634507C((char *)v17);
          uint64_t v10 = v76;
          ecs_stack_allocator_pop_snapshot(v76);
          int v11 = v75;
          if (v75)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 376));
          }
          swift_release();
          uint64_t v12 = v80 + 1;
          if (v80 + 1 == v79)
          {
            sub_1B632F1C4(v92, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
            a5 = v72;
            goto LABEL_49;
          }
        }
        if (v14 == v85) {
          goto LABEL_28;
        }
        uint64_t v47 = v23 + 24 * v14 + 16;
        uint64_t v48 = a4;
        while (1)
        {
          uint64_t v50 = swift_retain();
          if (*(unsigned char *)(v17 + 184)) {
            goto LABEL_55;
          }
          uint64_t v88 = *(unsigned int *)(*(void *)(v50 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                + 12 * *(int *)(*(void *)(v17 + 168) + 4 * v14)
                                + 8);
          unsigned int v90 = *(_DWORD *)(*(void *)(v17 + 168) + 4 * v14);
          swift_release();
          uint64_t v51 = *(void *)v47;
          uint64_t v52 = *(void *)(*(void *)v47 + 16);
          if (v52)
          {
            sub_1B62D8834(0, (unint64_t *)&qword_1EB980DF0, v82, MEMORY[0x1E4FBBE00]);
            uint64_t v53 = (void *)swift_allocObject();
            int64_t v54 = j__malloc_size(v53);
            uint64_t v55 = v54 - 32;
            if (v54 < 32) {
              uint64_t v55 = v54 - 25;
            }
            _OWORD v53[2] = v52;
            v53[3] = (2 * (v55 >> 3)) | 1;
            sub_1B6643654(&v91, v53 + 4, v52, v51);
            swift_bridgeObjectRetain_n();
            uint64_t v48 = a4;
            sub_1B62BB588();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v53 = (void *)MEMORY[0x1E4FBC860];
          }
          char v56 = swift_isUniquelyReferenced_nonNull_native();
          int v91 = (void *)*v48;
          char v57 = v91;
          *uint64_t v48 = 0x8000000000000000;
          unint64_t v58 = v90 | (unint64_t)(v88 << 32);
          unint64_t v60 = sub_1B62BE38C(v58);
          char v61 = v59;
          uint64_t v62 = v57[2] + ((v59 & 1) == 0);
          if (v57[3] >= v62)
          {
            if (v56)
            {
              uint64_t v65 = v91;
              if (v59) {
                goto LABEL_45;
              }
            }
            else
            {
              sub_1B6AD5EBC();
              uint64_t v65 = v91;
              if (v61) {
                goto LABEL_45;
              }
            }
          }
          else
          {
            sub_1B6AC613C(v62, v56);
            uint64_t v63 = sub_1B62BE38C(v58);
            if ((v61 & 1) != (v64 & 1)) {
              goto LABEL_56;
            }
            unint64_t v60 = v63;
            uint64_t v65 = v91;
            if (v61)
            {
LABEL_45:
              uint64_t v66 = v65[7];
              swift_bridgeObjectRelease();
              *(void *)(v66 + 8 * v60) = v53;
              goto LABEL_32;
            }
          }
          v65[(v60 >> 6) + 8] |= 1 << v60;
          uint64_t v49 = (unsigned int *)(v65[6] + 8 * v60);
          *uint64_t v49 = v90;
          v49[1] = v88;
          *(void *)(v65[7] + 8 * v60) = v53;
          ++v65[2];
LABEL_32:
          ++v14;
          *uint64_t v48 = v65;
          swift_bridgeObjectRelease();
          v47 += 24;
          uint64_t v17 = v84;
          if (v85 == v14) {
            goto LABEL_28;
          }
        }
      }
    }
LABEL_49:
    sub_1B632F1C4(v92, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  }
  uint64_t v67 = swift_bridgeObjectRetain();
  uint64_t v68 = sub_1B6B64AAC(v67, (uint64_t (*)(uint64_t, uint64_t))sub_1B6B65B54);
  swift_bridgeObjectRelease();
  if (*(void *)(v68 + 16))
  {
    sub_1B67FB740();
    uint64_t v69 = sub_1B6E32C58();
  }
  else
  {
    uint64_t v69 = MEMORY[0x1E4FBC868];
  }
  int v91 = (void *)v69;
  long long v70 = (void *)swift_bridgeObjectRetain();
  sub_1B6B64030(v70, 1, &v91);
  if (!v6)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a5 = v91;
    return result;
  }
LABEL_57:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_1B6B61E28(unint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v86 = MEMORY[0x1E4FBC860];
  if (qword_1EB97DC28 != -1) {
    goto LABEL_128;
  }
  while (1)
  {
    uint64_t v110 = qword_1EB997A18;
    int v111 = 0;
    char v112 = 2;
    uint64_t v113 = 0;
    char v114 = 2;
    uint64_t v115 = 0;
    swift_retain();
    sub_1B6A6E6E8(1, (uint64_t)&v87);
    swift_release();
    uint64_t v104 = v87;
    int v105 = v88;
    char v106 = v89;
    uint64_t v107 = v90 | 1;
    char v108 = v91;
    uint64_t v109 = v92;
    sub_1B62C9DA8((uint64_t)a3, (uint64_t)&v104, 0x200000000, v93);
    sub_1B62D7C78((uint64_t)v93, (uint64_t)v94, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (!*(void *)&v94[0]) {
      break;
    }
    if (v100 < 1 || (uint64_t v61 = v97) == 0)
    {
LABEL_122:
      sub_1B632F1C4(v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
      break;
    }
    unint64_t v85 = HIDWORD(a1);
    uint64_t v64 = v99[4];
    uint64_t v65 = v99;
    int v63 = *(unsigned __int8 *)(v98 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v101[0] = v94[0];
    v101[1] = v94[1];
    uint64_t v102 = v95;
    uint64_t v59 = (uint64_t)(v99 + 6);
    uint64_t v60 = v96;
    unint64_t v58 = v99 + 8;
    unint64_t v79 = a2 & 0xC000000000000001;
    unint64_t v71 = a2 + 32;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v5 = 0;
    unint64_t v57 = a2 >> 62;
    unint64_t v84 = a1;
    while (1)
    {
      uint64_t v62 = v5;
      uint64_t v6 = (unsigned int *)(v60 + 48 * v5);
      uint64_t v7 = *v6;
      uint64_t v9 = (uint64_t *)*((void *)v6 + 2);
      uint64_t v8 = *((void *)v6 + 3);
      uint64_t v10 = *((void *)v6 + 5);
      uint64_t v67 = v6[1];
      uint64_t v68 = *((void *)v6 + 4);
      uint64_t v66 = v10;
      if (v63)
      {
        int v11 = *(os_unfair_lock_s **)(v10 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v11);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v64);
      sub_1B62D7C78(v59, (uint64_t)v103, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v12 = v65[4];
      uint64_t v13 = *(void *)(*(void *)(*(void *)(*(void *)(v10 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v65[6] = ecs_stack_allocator_allocate(v12, 48 * v13, 8);
      void v65[7] = v13;
      v58[1] = 0;
      v58[2] = 0;
      *unint64_t v58 = 0;
      swift_release();
      uint64_t v14 = sub_1B62C9024((uint64_t)&type metadata for GraphScriptingConfig, (uint64_t)&off_1F0F80818, v9, v8, v68, (uint64_t)v65);
      if (!v9)
      {
        if (v7 != v67)
        {
          if (v57)
          {
            swift_bridgeObjectRetain();
            uint64_t v78 = sub_1B6E32C18();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v78 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          uint64_t v73 = v14 + 8;
          do
          {
            if (v78)
            {
              uint64_t v70 = v7;
              uint64_t v76 = 32 * v7;
              swift_bridgeObjectRetain();
              for (uint64_t i = 0; i != v78; uint64_t i = v38 + 1)
              {
                uint64_t v81 = i;
                if (v79)
                {
                  unint64_t v39 = (void *)MEMORY[0x1BA9B4580](i, a2);
                }
                else
                {
                  unint64_t v39 = *(void **)(v71 + 8 * i);
                  swift_retain();
                }
                uint64_t v40 = *(void *)(v73 + v76);
                uint64_t v83 = v40 + 64;
                uint64_t v41 = 1 << *(unsigned char *)(v40 + 32);
                if (v41 < 64) {
                  uint64_t v42 = ~(-1 << v41);
                }
                else {
                  uint64_t v42 = -1;
                }
                unint64_t v43 = v42 & *(void *)(v40 + 64);
                int64_t v44 = (unint64_t)(v41 + 63) >> 6;
                swift_bridgeObjectRetain_n();
                swift_retain();
                uint64_t v45 = 0;
                while (1)
                {
                  while (1)
                  {
                    do
                    {
                      if (v43)
                      {
                        unint64_t v46 = __clz(__rbit64(v43));
                        v43 &= v43 - 1;
                        unint64_t v47 = v46 | (v45 << 6);
                      }
                      else
                      {
                        uint64_t v48 = v45 + 1;
                        if (v45 + 1 >= v44) {
                          goto LABEL_73;
                        }
                        unint64_t v49 = *(void *)(v83 + 8 * v48);
                        if (!v49)
                        {
                          uint64_t v48 = v45 + 2;
                          if (v45 + 2 >= v44) {
                            goto LABEL_73;
                          }
                          unint64_t v49 = *(void *)(v83 + 8 * v48);
                          if (!v49)
                          {
                            uint64_t v48 = v45 + 3;
                            if (v45 + 3 >= v44) {
                              goto LABEL_73;
                            }
                            unint64_t v49 = *(void *)(v83 + 8 * v48);
                            if (!v49)
                            {
                              uint64_t v48 = v45 + 4;
                              if (v45 + 4 >= v44) {
                                goto LABEL_73;
                              }
                              unint64_t v49 = *(void *)(v83 + 8 * v48);
                              if (!v49)
                              {
                                uint64_t v48 = v45 + 5;
                                if (v45 + 5 >= v44) {
                                  goto LABEL_73;
                                }
                                unint64_t v49 = *(void *)(v83 + 8 * v48);
                                if (!v49)
                                {
                                  uint64_t v48 = v45 + 6;
                                  if (v45 + 6 >= v44) {
                                    goto LABEL_73;
                                  }
                                  unint64_t v49 = *(void *)(v83 + 8 * v48);
                                  if (!v49)
                                  {
                                    while (v44 - 7 != v45)
                                    {
                                      unint64_t v49 = *(void *)(v40 + 120 + 8 * v45++);
                                      if (v49)
                                      {
                                        uint64_t v48 = v45 + 6;
                                        goto LABEL_100;
                                      }
                                    }
LABEL_73:
                                    uint64_t v38 = v81;
                                    swift_release();
                                    swift_bridgeObjectRelease();
                                    goto LABEL_74;
                                  }
                                }
                              }
                            }
                          }
                        }
LABEL_100:
                        unint64_t v43 = (v49 - 1) & v49;
                        unint64_t v47 = __clz(__rbit64(v49)) + (v48 << 6);
                        uint64_t v45 = v48;
                      }
                      uint64_t v50 = *(void *)(v40 + 56) + 16 * v47;
                    }
                    while (*(_DWORD *)v50 != a1 || *(_DWORD *)(v50 + 4) != v85);
                    a3 = *(void **)(v50 + 8);
                    swift_bridgeObjectRetain();
                    swift_retain();
                    a1 = sub_1B6E32738();
                    if (!swift_conformsToProtocol2()) {
                      goto LABEL_126;
                    }
                    uint64_t v51 = sub_1B6E32738();
                    if (!swift_conformsToProtocol2()) {
                      goto LABEL_127;
                    }
                    if (a1 == v51 && a3[5] == v39[5]) {
                      break;
                    }
                    swift_release();
                    swift_bridgeObjectRelease();
                    a1 = v84;
                  }
                  BOOL v52 = a3[2] == v39[2] && a3[3] == v39[3];
                  a1 = v84;
                  if (v52) {
                    break;
                  }
                  char v53 = sub_1B6E334B8();
                  swift_release();
                  swift_bridgeObjectRelease();
                  if (v53)
                  {
                    swift_release();
                    goto LABEL_114;
                  }
                }
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
LABEL_114:
                swift_bridgeObjectRelease();
                uint64_t v54 = swift_retain();
                MEMORY[0x1BA9B3870](v54);
                uint64_t v38 = v81;
                if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_1B6E31C78();
                }
                sub_1B6E31CC8();
                sub_1B6E31C48();
LABEL_74:
                swift_release_n();
              }
              swift_bridgeObjectRelease();
              uint64_t v7 = v70;
            }
            ++v7;
          }
          while (v7 != v67);
        }
        goto LABEL_64;
      }
      if (v68) {
        break;
      }
LABEL_64:
      sub_1B6345178(v65, (unsigned __int16 **)v101, (uint64_t)v103);
      sub_1B634507C((char *)v66);
      ecs_stack_allocator_pop_snapshot(v64);
      if (v63)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v66 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v66 + 376));
      }
      swift_release();
      uint64_t v5 = v62 + 1;
      if (v62 + 1 == v61)
      {
        sub_1B632F1C4(v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
        goto LABEL_122;
      }
    }
    uint64_t v15 = v68;
    if (v57)
    {
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v77 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v16 = 0;
    uint64_t v72 = v14 + 8;
    while (!v77)
    {
LABEL_16:
      if (++v16 == v15) {
        goto LABEL_64;
      }
    }
    uint64_t v69 = v16;
    uint64_t v75 = 32 * v16;
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
LABEL_21:
    uint64_t v80 = v17;
    if (v79)
    {
      uint64_t v19 = (void *)MEMORY[0x1BA9B4580](v17, a2);
    }
    else
    {
      uint64_t v19 = *(void **)(v71 + 8 * v17);
      swift_retain();
    }
    uint64_t v20 = *(void *)(v72 + v75);
    uint64_t v82 = v20 + 64;
    uint64_t v21 = 1 << *(unsigned char *)(v20 + 32);
    if (v21 < 64) {
      uint64_t v22 = ~(-1 << v21);
    }
    else {
      uint64_t v22 = -1;
    }
    unint64_t v23 = v22 & *(void *)(v20 + 64);
    int64_t v24 = (unint64_t)(v21 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v25 = 0;
    while (1)
    {
      do
      {
        if (v23)
        {
          unint64_t v26 = __clz(__rbit64(v23));
          v23 &= v23 - 1;
          unint64_t v27 = v26 | (v25 << 6);
        }
        else
        {
          uint64_t v28 = v25 + 1;
          if (v25 + 1 >= v24) {
            goto LABEL_19;
          }
          unint64_t v29 = *(void *)(v82 + 8 * v28);
          if (!v29)
          {
            uint64_t v28 = v25 + 2;
            if (v25 + 2 >= v24) {
              goto LABEL_19;
            }
            unint64_t v29 = *(void *)(v82 + 8 * v28);
            if (!v29)
            {
              uint64_t v28 = v25 + 3;
              if (v25 + 3 >= v24) {
                goto LABEL_19;
              }
              unint64_t v29 = *(void *)(v82 + 8 * v28);
              if (!v29)
              {
                uint64_t v28 = v25 + 4;
                if (v25 + 4 >= v24) {
                  goto LABEL_19;
                }
                unint64_t v29 = *(void *)(v82 + 8 * v28);
                if (!v29)
                {
                  uint64_t v28 = v25 + 5;
                  if (v25 + 5 >= v24) {
                    goto LABEL_19;
                  }
                  unint64_t v29 = *(void *)(v82 + 8 * v28);
                  if (!v29)
                  {
                    uint64_t v28 = v25 + 6;
                    if (v25 + 6 >= v24) {
                      goto LABEL_19;
                    }
                    unint64_t v29 = *(void *)(v82 + 8 * v28);
                    if (!v29)
                    {
                      while (v24 - 7 != v25)
                      {
                        unint64_t v29 = *(void *)(v20 + 120 + 8 * v25++);
                        if (v29)
                        {
                          uint64_t v28 = v25 + 6;
                          goto LABEL_46;
                        }
                      }
LABEL_19:
                      uint64_t v18 = v80;
                      swift_release();
                      swift_bridgeObjectRelease();
LABEL_20:
                      swift_release_n();
                      uint64_t v17 = v18 + 1;
                      if (v17 == v77)
                      {
                        swift_bridgeObjectRelease();
                        uint64_t v15 = v68;
                        uint64_t v16 = v69;
                        goto LABEL_16;
                      }
                      goto LABEL_21;
                    }
                  }
                }
              }
            }
          }
LABEL_46:
          unint64_t v23 = (v29 - 1) & v29;
          unint64_t v27 = __clz(__rbit64(v29)) + (v28 << 6);
          uint64_t v25 = v28;
        }
        uint64_t v30 = 16 * v27;
        uint64_t v31 = *(void *)(v20 + 56) + v30;
      }
      while (*(_DWORD *)v31 != a1 || *(_DWORD *)(v31 + 4) != v85);
      a1 = *(void *)(*(void *)(v20 + 48) + v30 + 8);
      uint64_t v32 = *(void **)(v31 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      a3 = (void *)sub_1B6E32738();
      if (!swift_conformsToProtocol2()) {
        break;
      }
      uint64_t v33 = sub_1B6E32738();
      if (!swift_conformsToProtocol2()) {
        goto LABEL_125;
      }
      if (a3 == (void *)v33 && v32[5] == v19[5])
      {
        if (v32[2] == v19[2] && v32[3] == v19[3])
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          a1 = v84;
          goto LABEL_60;
        }
        char v35 = sub_1B6E334B8();
        swift_release();
        swift_bridgeObjectRelease();
        a1 = v84;
        if (v35)
        {
          swift_release();
          swift_bridgeObjectRelease();
LABEL_60:
          uint64_t v36 = swift_retain();
          MEMORY[0x1BA9B3870](v36);
          uint64_t v18 = v80;
          if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B6E31C78();
          }
          sub_1B6E31CC8();
          sub_1B6E31C48();
          goto LABEL_20;
        }
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        a1 = v84;
      }
    }
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    swift_once();
  }
  unint64_t v55 = swift_bridgeObjectRetain();
  sub_1B6B658BC(v55, &v86);
  swift_bridgeObjectRelease();
  sub_1B62CA064((uint64_t)&v87);
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1B6B62A60@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B62CAAD8(a1, (uint64_t)&v37);
  sub_1B63989B8(0, (unint64_t *)&qword_1EB9805E0);
  uint64_t v5 = MEMORY[0x1E4FBC840];
  if ((swift_dynamicCast() & 1) == 0) {
    return (_OWORD *)sub_1B62CAAD8(a1, (uint64_t)a2);
  }
  id v6 = v36[0];
  id v7 = objc_msgSend(v36[0], sel_values);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_1B6E31C28();

    uint64_t v10 = sub_1B6B62EBC(v9);
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  id v11 = objc_msgSend(v36[0], sel_values);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_1B6E31C28();

    uint64_t v14 = sub_1B6B62FD8(v13);
    swift_bridgeObjectRelease();
    if (v14)
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_1B6CD66D0();
      if (v15)
      {
        *((void *)&v38 + 1) = &type metadata for ColorRamp;
        *(void *)&long long v37 = v15;
        *((void *)&v37 + 1) = v16;
        LOBYTE(v38) = v17;

        sub_1B62CAAD8(a1, (uint64_t)v36);
LABEL_15:
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v36);
        return sub_1B62B57A8(&v37, a2);
      }
      goto LABEL_16;
    }
  }
  id v18 = objc_msgSend(v36[0], sel_values);
  if (v18)
  {

    id v19 = objc_msgSend(v36[0], sel_values);
    uint64_t v20 = sub_1B6E31C28();

    uint64_t v21 = *(void *)(v20 + 16);
    swift_bridgeObjectRelease();
    if (v21)
    {
      uint64_t v22 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager_logger);
      swift_retain();
      uint64_t v23 = sub_1B6E32168();
      *(void *)&long long v37 = 0;
      (*(void (**)(uint64_t, long long *, unint64_t, unint64_t))(*(void *)v22 + 88))(v23, &v37, 0xD000000000000050, 0x80000001B6F4AE00);
      swift_release();

      return (_OWORD *)sub_1B62CAAD8(a1, (uint64_t)a2);
    }
  }
LABEL_13:
  uint64_t v25 = sub_1B6CD63A8();
  if (!v25)
  {
LABEL_16:

    long long v37 = 0u;
    long long v38 = 0u;
    sub_1B62CAAD8(a1, (uint64_t)v36);
    goto LABEL_17;
  }
  uint64_t v29 = v25;
  uint64_t v30 = v26;
  uint64_t v31 = v27;
  char v32 = v28;
  sub_1B665D590();
  uint64_t v34 = v33;
  *((void *)&v38 + 1) = v33;
  uint64_t v35 = swift_allocObject();
  *(void *)&long long v37 = v35;
  *(void *)(v35 + 16) = v29;
  *(void *)(v35 + 24) = v30;
  *(void *)(v35 + 32) = v31;
  *(unsigned char *)(v35 + 40) = v32;

  sub_1B62CAAD8(a1, (uint64_t)v36);
  if (v34) {
    goto LABEL_15;
  }
LABEL_17:
  sub_1B62B57A8(v36, a2);
  return (_OWORD *)sub_1B63956DC((uint64_t)&v37, (uint64_t)&qword_1EB980F60, v5 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D8834);
}

uint64_t sub_1B6B62D74(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1B6C3D70C(0, v2, 0);
  if (!v2) {
    return v12;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_1B62CAAD8(i, (uint64_t)v11);
    sub_1B62AADE8();
    if (!swift_dynamicCast()) {
      break;
    }
    uint64_t v4 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B6C3D70C(0, *(void *)(v4 + 16) + 1, 1);
      uint64_t v4 = v12;
    }
    unint64_t v6 = *(void *)(v4 + 16);
    unint64_t v5 = *(void *)(v4 + 24);
    if (v6 >= v5 >> 1)
    {
      sub_1B6C3D70C(v5 > 1, v6 + 1, 1);
      uint64_t v4 = v12;
    }
    *(void *)(v4 + 16) = v6 + 1;
    uint64_t v7 = v4 + 16 * v6;
    *(void *)(v7 + 32) = v9;
    *(void *)(v7 + 40) = v10;
    if (!--v2) {
      return v4;
    }
  }
  swift_release();
  return 0;
}

uint64_t sub_1B6B62EBC(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B6E32A48();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_1B62CAAD8(i, (uint64_t)v5);
    sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_1B6E32A08();
    sub_1B6E32A68();
    sub_1B6E32A78();
    sub_1B6E32A28();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_1B6B62FD8(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B6E32A48();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_1B62CAAD8(i, (uint64_t)v5);
    type metadata accessor for CGColor(0);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_1B6E32A08();
    sub_1B6E32A68();
    sub_1B6E32A78();
    sub_1B6E32A28();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

void *sub_1B6B630D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1B62B31E8(a1, (uint64_t)v10);
  uint64_t v4 = MEMORY[0x1E4FBC840];
  if (v11)
  {
    if (swift_dynamicCast())
    {
      uint64_t v5 = sub_1B63989B8(0, (unint64_t *)&qword_1EB9805E0);
      uint64_t result = sub_1B6CD6A3C(v8, v9);
      a2[3] = v5;
      *a2 = result;
      return result;
    }
  }
  else
  {
    sub_1B63956DC((uint64_t)v10, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D8834);
  }
  sub_1B62B31E8(a1, (uint64_t)v10);
  if (v11)
  {
    sub_1B665D590();
    if (swift_dynamicCast())
    {
      uint64_t v7 = sub_1B63989B8(0, (unint64_t *)&qword_1EB9805E0);
      uint64_t result = sub_1B6CD6CD8(v8, v9);
      a2[3] = v7;
      *a2 = result;
      return result;
    }
  }
  else
  {
    sub_1B63956DC((uint64_t)v10, (uint64_t)&qword_1EB980F60, v4 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D8834);
  }
  return (void *)sub_1B62B31E8(a1, (uint64_t)a2);
}

uint64_t sub_1B6B63294(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t), uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  if ((a2 & 0xFFFFFFFFFFFFFFFELL) == 0x18)
  {
    swift_bridgeObjectRetain();
    sub_1B6BF96F4(a4, a3, a5, a6, v32);
    sub_1B6B630D4((uint64_t)v32, v31);
    sub_1B63956DC((uint64_t)v32, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D8834);
    sub_1B62B57A8(v31, v32);
    sub_1B63989B8(0, (unint64_t *)&qword_1EB9805E0);
    swift_dynamicCast();
    id v16 = objc_msgSend(v30, sel_serializedVFXBindingData);
    uint64_t v17 = sub_1B6E30FD8();
    unint64_t v19 = v18;

    switch(v19 >> 62)
    {
      case 1uLL:
        sub_1B62FFBB0(v17, v19);
        sub_1B62FFBB0(v17, v19);
        sub_1B62FFBB0(v17, v19);
        sub_1B6B647B0((int)v17, v17 >> 32, v19 & 0x3FFFFFFFFFFFFFFFLL, a7, a8, v17, v19);
        if (!v9) {
          goto LABEL_14;
        }
        goto LABEL_20;
      case 2uLL:
        uint64_t v28 = *(void *)(v17 + 16);
        uint64_t v29 = *(void *)(v17 + 24);
        sub_1B62FFBB0(v17, v19);
        sub_1B62FFBB0(v17, v19);
        sub_1B62FFBB0(v17, v19);
        swift_retain();
        swift_retain();
        sub_1B6B647B0(v28, v29, v19 & 0x3FFFFFFFFFFFFFFFLL, a7, a8, v17, v19);
        if (v9)
        {
          sub_1B62C2360(v17, v19);
          sub_1B62C2360(v17, v19);
          swift_release();
          swift_release();
          __break(1u);
LABEL_20:
          sub_1B62C2360(v17, v19);
          sub_1B62C2360(v17, v19);
          __break(1u);
          JUMPOUT(0x1B6B636A0);
        }

        swift_release();
        swift_release();
        break;
      case 3uLL:
        *(void *)((char *)v32 + 6) = 0;
        *(void *)&v32[0] = 0;
        uint64_t v20 = 0;
        goto LABEL_12;
      default:
        *(void *)&v32[0] = v17;
        WORD4(v32[0]) = v19;
        BYTE10(v32[0]) = BYTE2(v19);
        BYTE11(v32[0]) = BYTE3(v19);
        BYTE12(v32[0]) = BYTE4(v19);
        uint64_t v20 = BYTE6(v19);
        BYTE13(v32[0]) = BYTE5(v19);
LABEL_12:
        a7((uint64_t)v32, v20);
LABEL_14:

        break;
    }
    sub_1B62C2360(v17, v19);
    sub_1B62C2360(v17, v19);
    return sub_1B62C2360(v17, v19);
  }
  else
  {
    uint64_t v21 = *(void *)result;
    if (*(void *)(*(void *)result + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1B62B2CE0(a5, a6);
      if (v23)
      {
        uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v25 = *(void *)(v24 + 16);
        if (v25)
        {
          uint64_t v26 = *(void *)(v24 + 24);
          swift_release();
          uint64_t v27 = v26 - v25;
        }
        else
        {
          swift_release();
          uint64_t v27 = 0;
        }
        return ((uint64_t (*)(uint64_t, uint64_t))a7)(v25, v27);
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

unsigned char *sub_1B6B636B0(unsigned char *result, uint64_t a2, char a3, uint64_t a4, char a5, void (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if ((a3 & 1) != 0 || (a2 & 0xFFFFFFFFFFFFFFFELL) != 0x18)
  {
    result[8] = 1;
    uint64_t v16 = *(void *)result;
    if (*(void *)(*(void *)result + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1B62B2CE0(a10, a11);
      if (v18)
      {
        uint64_t v19 = *(void *)(*(void *)(v16 + 56) + 8 * v17);
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v20 = *(void *)(v19 + 16);
        if (v20)
        {
          uint64_t v21 = *(void *)(v19 + 24);
          swift_release();
          uint64_t v22 = v21 - v20;
        }
        else
        {
          swift_release();
          uint64_t v22 = 0;
        }
        return (unsigned char *)((uint64_t (*)(uint64_t, uint64_t))a6)(v20, v22);
      }
      else
      {
        return (unsigned char *)swift_bridgeObjectRelease();
      }
    }
  }
  else if ((a5 & 1) == 0)
  {
    uint64_t v23 = sub_1B6CD9DCC(a4);
    unint64_t v24 = v15;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6B6439C(&v23, a6, a7, a4, a8, a9, a10, a11);
    return (unsigned char *)sub_1B62C2360(v23, v24);
  }
  return result;
}

uint64_t sub_1B6B63810(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a5 < 0)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    a3(a1, a5);
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39BD8]), sel_initWithSerializedVFXBindingDataPointer_, a1);
    uint64_t v19[3] = sub_1B63989B8(0, (unint64_t *)&qword_1EB9805E0);
    v19[0] = v12;
    id v13 = v12;
    uint64_t v14 = sub_1B6B62A60((uint64_t)v19, v18);
    MEMORY[0x1F4188790](v14, v15);
    id v17[2] = a8;
    v17[3] = a9;
    _OWORD v17[4] = v18;
    sub_1B66C9068(a7, (uint64_t)sub_1B6B657E4, (uint64_t)v17);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v18);

    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v19);
  }
  return result;
}

uint64_t sub_1B6B63998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = sub_1B6C0A538(a2, a3, a4 & 0xFFFFFFFFFFLL, 1);
  if ((v11 & 1) == 0)
  {
    uint64_t v12 = result;
    id v13 = sub_1B6B62A60(a7, v16);
    MEMORY[0x1F4188790](v13, v14);
    _OWORD v15[2] = a5;
    v15[3] = a6;
    v15[4] = v16;
    sub_1B66C9068(v12, (uint64_t)sub_1B6B657E4, (uint64_t)v15);
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v16);
  }
  return result;
}

uint64_t sub_1B6B63A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = a2;
  if (!a2) {
    uint64_t v9 = 0xFFFFFFFFLL;
  }
  unint64_t v10 = v9 | a2 & 0xFFFFFFFF00000000;
  swift_bridgeObjectRetain();
  sub_1B6BF96F4(v10, a1, a3, a4, v12);
  sub_1B6B630D4((uint64_t)v12, a5);
  return sub_1B63956DC((uint64_t)v12, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62D8834);
}

uint64_t sub_1B6B63B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7 = a2 & 0xFFFFFFFF00000000;
  if (a2) {
    uint64_t v8 = a2;
  }
  else {
    uint64_t v8 = 0xFFFFFFFFLL;
  }
  sub_1B6B62A60(a5, v11);
  uint64_t v10[2] = a3;
  uint64_t v10[3] = a4;
  void v10[4] = v11;
  sub_1B66C9068(v8 | v7, (uint64_t)sub_1B6B657E4, (uint64_t)v10);
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v11);
}

uint64_t sub_1B6B63C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t), uint64_t a7)
{
  if (a2) {
    uint64_t v8 = a2;
  }
  else {
    uint64_t v8 = 0xFFFFFFFFLL;
  }
  BOOL v9 = v8 == -1 && HIDWORD(a2) == 0;
  if (!v9
    && (v8 & 0x80000000) == 0
    && *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)v8
    && ((uint64_t v15 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager__entries), HIDWORD(a2) == -1)
     || *(_DWORD *)(v15 + 12 * (int)v8 + 8) == HIDWORD(a2)))
  {
    uint64_t v17 = (int *)(v15 + 12 * (int)v8);
    uint64_t v18 = *(void *)(*(void *)(a1 + 136) + 8 * *v17 + 32);
    unint64_t v19 = a2 & 0xFFFFFFFF00000000 | v8;
    __int16 v20 = *((_WORD *)v17 + 2);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6BFEC98(v18, v20, 24, a5, a1, v19, a3, a4, a6, a7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_1B6B63D3C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t), uint64_t a8)
{
  if (a2) {
    uint64_t v8 = a2;
  }
  else {
    uint64_t v8 = 0xFFFFFFFFLL;
  }
  if ((v8 != -1 || HIDWORD(a2) != 0) && (v8 & 0x80000000) == 0)
  {
    uint64_t v10 = result;
    if (*(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)v8)
    {
      uint64_t v17 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if (HIDWORD(a2) == -1 || *(_DWORD *)(v17 + 12 * (int)v8 + 8) == HIDWORD(a2))
      {
        uint64_t v18 = (int *)(v17 + 12 * (int)v8);
        uint64_t v21 = *(void *)(*(void *)(result + 136) + 8 * *v18 + 32);
        unint64_t v19 = a2 & 0xFFFFFFFF00000000 | v8;
        __int16 v20 = *((_WORD *)v18 + 2);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1B6BFED34(v21, v20, 24, a5, 0, a6, 0, a7, a8, v10, v19, a3, a4);
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void *sub_1B6B63E74(char a1, uint64_t a2, unint64_t a3)
{
  unsigned int v3 = a3;
  if (a1) {
    return (void *)sub_1B69E1088(a3);
  }
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EB997A18;
  int v14 = 0;
  char v15 = 2;
  uint64_t v16 = 0;
  char v17 = 2;
  uint64_t v18 = 0;
  swift_retain();
  sub_1B62A068C(1, (uint64_t)v7);
  swift_release();
  v11[0] = v7[0];
  v11[1] = v7[1];
  uint64_t v12 = v8;
  swift_retain();
  sub_1B69E0984((uint64_t)v11, v3);
  sub_1B62CA064((uint64_t)v7);
  if (dword_1E9E49870 == v3) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v3;
  }
  sub_1B62C9DA8(a2, (uint64_t)v11, v6 | ((unint64_t)(dword_1E9E49870 == v3) << 33), v9);
  sub_1B62D7C78((uint64_t)v9, (uint64_t)v10, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v10[0]) {
    return (void *)sub_1B62CA064((uint64_t)v7);
  }
  _DWORD v10[8] = v10[2];
  v10[9] = v10[3];
  v10[10] = v10[4];
  v10[11] = v10[5];
  void v10[6] = v10[0];
  v10[7] = v10[1];
  sub_1B68458CC(0);
  sub_1B62CA064((uint64_t)v7);
  return sub_1B632F1C4(v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

void sub_1B6B64030(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  swift_bridgeObjectRetain();
  BOOL v9 = (void *)*a3;
  unint64_t v10 = sub_1B62BE38C(v7);
  char v12 = v11;
  uint64_t v13 = v9[2];
  uint64_t v14 = v9[3];
  uint64_t v15 = v13 + ((v11 & 1) == 0);
  swift_bridgeObjectRetain();
  if (v14 >= v15)
  {
    if (a2)
    {
      if (v12) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1B6AD5EBC();
      if (v12) {
        goto LABEL_9;
      }
    }
LABEL_12:
    __int16 v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    uint64_t v21 = 8 * v10;
    *(void *)(v20[6] + v21) = v7;
    *(void *)(v20[7] + v21) = v8;
    ++v20[2];
    uint64_t v22 = v4 - 1;
    if (v4 == 1)
    {
LABEL_19:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v23 = a1 + 7;
    while (1)
    {
      uint64_t v24 = *(v23 - 1);
      uint64_t v25 = *v23;
      uint64_t v26 = (void *)*a3;
      unint64_t v27 = sub_1B62BE38C(v24);
      char v29 = v28;
      uint64_t v30 = v26[3];
      uint64_t v31 = v26[2] + ((v28 & 1) == 0);
      swift_bridgeObjectRetain();
      if (v30 < v31)
      {
        sub_1B6AC613C(v31, 1);
        uint64_t v32 = sub_1B62BE38C(v24);
        if ((v29 & 1) != (v33 & 1)) {
          goto LABEL_20;
        }
        unint64_t v27 = v32;
      }
      if (v29) {
        goto LABEL_9;
      }
      uint64_t v34 = (void *)*a3;
      *(void *)(*a3 + 8 * (v27 >> 6) + 64) |= 1 << v27;
      uint64_t v35 = 8 * v27;
      *(void *)(v34[6] + v35) = v24;
      *(void *)(v34[7] + v35) = v25;
      ++v34[2];
      v23 += 2;
      if (!--v22) {
        goto LABEL_19;
      }
    }
  }
  sub_1B6AC613C(v15, a2 & 1);
  uint64_t v16 = sub_1B62BE38C(v7);
  if ((v12 & 1) == (v17 & 1))
  {
    unint64_t v10 = v16;
    if ((v12 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_9:
    uint64_t v18 = (void *)swift_allocError();
    swift_willThrow();
    id v19 = v18;
    sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_21;
  }
LABEL_20:
  sub_1B6E33838();
  __break(1u);
LABEL_21:
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E32B18();
  sub_1B6E31948();
  sub_1B6E32BE8();
  __break(1u);
}

uint64_t sub_1B6B6439C(uint64_t *a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = *a1;
  unint64_t v8 = a1[1];
  switch(v8 >> 62)
  {
    case 1uLL:
      uint64_t v31 = v8 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1B6E77700;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v32 = (v9 >> 32) - (int)v9;
        uint64_t v33 = v31;
      }
      else
      {
        if (sub_1B6E30B98()) {
          sub_1B6E30BC8();
        }
        uint64_t v32 = (v9 >> 32) - (int)v9;
        sub_1B6E30BD8();
        swift_allocObject();
        uint64_t v33 = sub_1B6E30B78();
        swift_release();
      }
      uint64_t v35 = sub_1B6E30B98();
      uint64_t v36 = sub_1B6E30BC8();
      uint64_t v37 = sub_1B6E30BB8();
      if (v37 >= v32) {
        uint64_t v38 = v32;
      }
      else {
        uint64_t v38 = v37;
      }
      sub_1B6B63810(v35 + (int)v9 - v36, v35 + (int)v9 - v36 + v38, a2, a3, a4, a5, a6, a7, a8);
      if (!v49)
      {
        *a1 = v9;
        a1[1] = v33 | 0x4000000000000000;
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *a1 = v9;
      a1[1] = v33 | 0x4000000000000000;
      break;
    case 2uLL:
      *(void *)&long long v50 = *a1;
      *((void *)&v50 + 1) = v8 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1B6E30F58();
      uint64_t v47 = a7;
      uint64_t v21 = *((void *)&v50 + 1);
      uint64_t v22 = a8;
      uint64_t v23 = a5;
      uint64_t v24 = *(void *)(v50 + 16);
      uint64_t v25 = *(void *)(v50 + 24);
      uint64_t v26 = sub_1B6E30B98();
      uint64_t v27 = sub_1B6E30BC8();
      uint64_t v28 = v25 - v24;
      uint64_t v29 = sub_1B6E30BB8();
      if (v29 >= v28) {
        uint64_t v30 = v28;
      }
      else {
        uint64_t v30 = v29;
      }
      sub_1B6B63810(v26 + v24 - v27, v26 + v24 - v27 + v30, a2, a3, a4, v23, a6, v47, v22);
      if (!v49)
      {
        *a1 = v50;
        a1[1] = v21 | 0x8000000000000000;
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *a1 = v50;
      a1[1] = v21 | 0x8000000000000000;
      break;
    case 3uLL:
      *(void *)((char *)&v50 + 7) = 0;
      *(void *)&long long v50 = 0;
      sub_1B6B63810((uint64_t)&v50, (uint64_t)&v50, a2, a3, a4, a5, a6, a7, a8);
      goto LABEL_23;
    default:
      *(void *)&long long v50 = *a1;
      WORD4(v50) = v8;
      BYTE10(v50) = BYTE2(v8);
      BYTE11(v50) = BYTE3(v8);
      BYTE12(v50) = BYTE4(v8);
      BYTE13(v50) = BYTE5(v8);
      BYTE14(v50) = BYTE6(v8);
      sub_1B6B63810((uint64_t)&v50, (uint64_t)&v50 + BYTE6(v8), a2, a3, a4, a5, a6, a7, a8);
      uint64_t v15 = v50;
      uint64_t v16 = DWORD2(v50);
      uint64_t v17 = BYTE12(v50);
      uint64_t v18 = BYTE13(v50);
      uint64_t v19 = BYTE14(v50);
      if (v49)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
        *a1 = v15;
        a1[1] = (v18 << 40) | (v17 << 32) | (v19 << 48) | v16;
      }
      else
      {
        unint64_t v34 = ((unint64_t)BYTE13(v50) << 40) | ((unint64_t)BYTE12(v50) << 32) | ((unint64_t)BYTE14(v50) << 48) | DWORD2(v50);
        *a1 = v50;
        a1[1] = v34;
LABEL_23:
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
      }
      break;
  }
  return result;
}

uint64_t sub_1B6B647B0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v11 = sub_1B6E30B98();
  if (v11) {
    uint64_t v12 = v11 + a1 - sub_1B6E30BC8();
  }
  else {
    uint64_t v12 = 0;
  }
  sub_1B6E30BB8();
  uint64_t v13 = 0;
  switch(a7 >> 62)
  {
    case 1uLL:
      uint64_t v13 = (uint64_t)(0xFFFFFFFF00000001 * a6) >> 32;
      goto LABEL_8;
    case 2uLL:
      uint64_t v13 = *(void *)(a6 + 24) - *(void *)(a6 + 16);
LABEL_8:
      if (v13 < 0)
      {
        sub_1B6E32BD8();
        __break(1u);
        JUMPOUT(0x1B6B648DCLL);
      }
      return result;
    case 3uLL:
      break;
    default:
      uint64_t v13 = BYTE6(a7);
      break;
  }
  a4(v12, v13);
  return sub_1B62C2360(a6, a7);
}

void *sub_1B6B648EC(void *a1, uint64_t *a2, unint64_t a3)
{
  return sub_1B6B70690(a1, *a2, a2[1], a3);
}

uint64_t sub_1B6B64914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = 0;
  if (a1) {
    uint64_t v8 = a1;
  }
  else {
    uint64_t v8 = 0xFFFFFFFFLL;
  }
  if (v8 != -1 || HIDWORD(a1) != 0)
  {
    uint64_t v7 = 0;
    if ((v8 & 0x80000000) == 0 && *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > (int)v8)
    {
      uint64_t v14 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      if ((HIDWORD(a1) == -1 || *(_DWORD *)(v14 + 12 * (int)v8 + 8) == HIDWORD(a1))
        && (uint64_t v15 = (int *)(v14 + 12 * (int)v8),
            uint64_t v16 = *(void *)(*(void *)(v5 + 136) + 8 * *v15 + 32),
            __int16 v17 = *((_WORD *)v15 + 2),
            swift_bridgeObjectRetain(),
            unint64_t v18 = sub_1B6BFEB5C(v16, v17, 24, a4, a5),
            swift_bridgeObjectRelease(),
            v18 >= 2))
      {
        type metadata accessor for BindingPropertyDescription();
        uint64_t v20 = swift_dynamicCastClass();
        if (v20)
        {
          uint64_t v21 = v20;
          unint64_t v22 = a1 & 0xFFFFFFFF00000000 | v8;
          if (a3)
          {
            uint64_t v23 = a3;
          }
          else
          {
            a2 = sub_1B6C0A280(v22);
            uint64_t v23 = v24;
          }
          swift_bridgeObjectRetain();
          uint64_t v7 = sub_1B6B5B944(v22, a2, v23, v21);
          swift_bridgeObjectRelease();
          sub_1B674DC34(v18);
        }
        else
        {
          sub_1B674DC34(v18);
          return 0;
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return v7;
}

uint64_t sub_1B6B64AAC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v4 = a1;
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1B6C3D8F8(0, v2, 0);
    uint64_t v3 = v27;
    unint64_t v5 = sub_1B6860A50(v4);
    uint64_t v6 = 0;
    uint64_t v26 = v4 + 64;
    uint64_t v23 = v4 + 88;
    int64_t v24 = v2;
    do
    {
      uint64_t v8 = *(void *)(v4 + 48);
      uint64_t v9 = v4;
      uint64_t v10 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
      uint64_t v11 = *(void *)(v8 + 8 * v5);
      swift_bridgeObjectRetain();
      uint64_t v12 = a2(v11, v10);
      uint64_t v14 = v13;
      swift_bridgeObjectRelease();
      unint64_t v16 = *(void *)(v27 + 16);
      unint64_t v15 = *(void *)(v27 + 24);
      if (v16 >= v15 >> 1) {
        sub_1B6C3D8F8(v15 > 1, v16 + 1, 1);
      }
      *(void *)(v27 + 16) = v16 + 1;
      uint64_t v17 = v27 + 16 * v16;
      *(void *)(v17 + 32) = v12;
      *(void *)(v17 + 40) = v14;
      unint64_t v18 = v5 >> 6;
      if ((*(void *)(v26 + 8 * (v5 >> 6)) & (-2 << v5)) != 0)
      {
        unint64_t v5 = __clz(__rbit64(*(void *)(v26 + 8 * (v5 >> 6)) & (-2 << v5))) | v5 & 0xFFFFFFFFFFFFFFC0;
        int64_t v7 = v24;
        uint64_t v4 = v9;
      }
      else
      {
        uint64_t v4 = v9;
        unint64_t v5 = 1 << *(unsigned char *)(v9 + 32);
        unint64_t v19 = v18 + 1;
        unint64_t v20 = (v5 + 63) >> 6;
        int64_t v7 = v24;
        if (v18 + 1 < v20)
        {
          unint64_t v21 = *(void *)(v26 + 8 * v19);
          if (!v21)
          {
            unint64_t v19 = v18 + 2;
            if (v18 + 2 >= v20) {
              goto LABEL_4;
            }
            unint64_t v21 = *(void *)(v26 + 8 * v19);
            if (!v21)
            {
              while (v20 - 3 != v18)
              {
                unint64_t v21 = *(void *)(v23 + 8 * v18++);
                if (v21)
                {
                  unint64_t v19 = v18 + 2;
                  goto LABEL_10;
                }
              }
              goto LABEL_4;
            }
          }
LABEL_10:
          unint64_t v5 = __clz(__rbit64(v21)) + (v19 << 6);
        }
      }
LABEL_4:
      ++v6;
    }
    while (v6 != v7);
  }
  return v3;
}

uint64_t sub_1B6B64C9C()
{
  return sub_1B6B63B4C(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1B6B64CC0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6B64CD0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B6B64CF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = MEMORY[0x1BA9B8670](*a1 + OBJC_IVAR____TtC3VFX9VFXEffect_scene);
  *a2 = result;
  return result;
}

uint64_t sub_1B6B64D30()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1B6B64D4C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*a1 + OBJC_IVAR____TtC3VFX9VFXEffect_delegate);
  return swift_unknownObjectRetain();
}

uint64_t sub_1B6B64D64(void *a1, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC3VFX9VFXEffect_delegate) = *a1;
  swift_unknownObjectRetain();

  return swift_unknownObjectRelease();
}

void *sub_1B6B64DB0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*result + OBJC_IVAR____TtC3VFX9VFXEffect_version);
  return result;
}

void *sub_1B6B64DC8(void *result, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC3VFX9VFXEffect_version) = *result;
  return result;
}

void sub_1B6B64DE0(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1B6B64DF4@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC3VFX9VFXEffect__tombstoned);
  return result;
}

uint64_t sub_1B6B64E10()
{
  return type metadata accessor for VFXEffect();
}

uint64_t method lookup function for VFXEffect(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VFXEffect);
}

uint64_t dispatch thunk of VFXEffect.id.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of VFXEffect.rootObjectID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of VFXEffect.scene.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of VFXEffect.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of VFXEffect.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of VFXEffect.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of VFXEffect.version.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of VFXEffect.onEffectRestart.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of VFXEffect.restart()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of VFXEffect.allowRemoteEdition.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of VFXEffect.allowRemoteEdition.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of VFXEffect.allowRemoteEdition.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of VFXEffect.binding(of:named:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of VFXEffect.binding(with:named:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of VFXEffect.firstBinding(named:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x228))();
}

uint64_t dispatch thunk of VFXEffect.bindings.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x230))();
}

uint64_t dispatch thunk of VFXEffect.parameter(of:named:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x238))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of VFXEffect.setParameter(of:named:_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x240))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of VFXEffect.lookupObjectID(byName:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of VFXEffect._objc_lookupObjectID(byName:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of VFXEffect.parameter(of:named:with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of VFXEffect.parameter(of:named:type:with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of VFXEffect.setParameter(of:named:with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of VFXEffect.setParameter(of:named:type:size:with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of VFXEffect.withPointerToParameter(of:named:block:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of VFXEffect.setEnabled(_:enabled:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of VFXEffect.isEnabled(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of VFXEffect.fetchClientTextureID(named:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of VFXEffect.setClientTexture(id:texture:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of VFXEffect.isEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of VFXEffect.isEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of VFXEffect.isEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D8))();
}

uint64_t dispatch thunk of VFXEffect.isTombstoned.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x308))();
}

uint64_t dispatch thunk of VFXEffect.isTombstoned.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x310))();
}

uint64_t dispatch thunk of VFXEffect.isTombstoned.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x318))();
}

uint64_t dispatch thunk of VFXEffect.cameras.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x320))();
}

uint64_t dispatch thunk of VFXEffect.allCameraNamed(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x328))();
}

uint64_t dispatch thunk of VFXEffect.dump()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x330))();
}

void *sub_1B6B657B0(void *a1)
{
  return sub_1B6B70690(a1, **(void **)(v1 + 16), *(void *)(*(void *)(v1 + 16) + 8), *(void *)(v1 + 24));
}

uint64_t sub_1B6B657D4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6B657E4()
{
  return sub_1B6B65AE8();
}

uint64_t sub_1B6B657FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1B6B65844()
{
  swift_unknownObjectUnownedDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1B6B6587C()
{
}

uint64_t sub_1B6B65884()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6B658BC(unint64_t a1, uint64_t *a2)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    uint64_t v4 = sub_1B6E32C18();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 0;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = MEMORY[0x1BA9B4580](v5, a1);
        }
        else
        {
          uint64_t v6 = *(void *)(a1 + 32 + 8 * v5);
          swift_retain();
        }
        uint64_t v7 = *a2;
        if ((unint64_t)*a2 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v8 = sub_1B6E32C18();
          if (!v8) {
            goto LABEL_4;
          }
        }
        else
        {
          uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (!v8) {
            goto LABEL_4;
          }
        }
        if ((v7 & 0xC000000000000001) != 0)
        {
          uint64_t v13 = MEMORY[0x1BA9B4580](0, v7);
          swift_unknownObjectRelease();
          if (v13 == v6) {
            goto LABEL_26;
          }
          if (v8 != 1)
          {
            uint64_t v10 = 1;
            do
            {
              uint64_t v12 = v10;
              uint64_t v14 = MEMORY[0x1BA9B4580]();
              swift_unknownObjectRelease();
              if (v14 == v6) {
                goto LABEL_26;
              }
              uint64_t v10 = v12 + 1;
            }
            while (v8 != v12 + 1);
          }
        }
        else
        {
          if (*(void *)(v7 + 32) == v6) {
            goto LABEL_26;
          }
          if (v8 != 1)
          {
            uint64_t v9 = 0;
            while (*(void *)(v7 + 8 * v9 + 40) != v6)
            {
              if (v8 - 1 == ++v9) {
                goto LABEL_4;
              }
            }
LABEL_26:
            swift_release();
            swift_bridgeObjectRelease_n();
            goto LABEL_5;
          }
        }
LABEL_4:
        swift_bridgeObjectRelease_n();
        sub_1B6E32A08();
        sub_1B6E32A68();
        sub_1B6E32A78();
        sub_1B6E32A28();
LABEL_5:
        if (++v5 == v4) {
          return v15;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1B6B65AE8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  sub_1B62CAAD8(v0[4], (uint64_t)v4);
  swift_bridgeObjectRetain();
  return sub_1B629DDDC(v4, v1, v2);
}

unint64_t sub_1B6B65B54(unint64_t a1, unint64_t a2)
{
  return sub_1B6B61E28(a1, a2, v2);
}

uint64_t sub_1B6B65B6C()
{
  unint64_t v1 = *(void *)(v0 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B6E32C18();
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v3 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = MEMORY[0x1BA9B4580](v3, v1);
    }
    else
    {
      uint64_t v4 = *(void *)(v1 + 8 * v3 + 32);
      swift_retain();
    }
    (*(void (**)(void *__return_ptr))(*(void *)v4 + 152))(v8);
    uint64_t v13 = v8[0];
    uint64_t v14 = v8[1];
    sub_1B62D8C3C((uint64_t)&v13);
    uint64_t v12 = v8[2];
    sub_1B62D8C3C((uint64_t)&v12);
    uint64_t v11 = v8[3];
    sub_1B62D8C3C((uint64_t)&v11);
    uint64_t v10 = v8[4];
    sub_1B62D8C3C((uint64_t)&v10);
    uint64_t v9 = v8[5];
    sub_1B62D8C3C((uint64_t)&v9);
    uint64_t v5 = *(void *)(v14 + 16);
    sub_1B62D8C3C((uint64_t)&v14);
    if (v5)
    {
      swift_release();
    }
    else
    {
      sub_1B6E32A08();
      sub_1B6E32A68();
      sub_1B6E32A78();
      sub_1B6E32A28();
    }
    ++v3;
  }
  while (v2 != v3);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t type metadata accessor for Graph()
{
  return self;
}

uint64_t sub_1B6B65D4C()
{
  return sub_1B6817658(*v0);
}

__n128 initializeWithCopy for Clock(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 93) = *(void *)((char *)a2 + 93);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Clock(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 101)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Clock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 100) = 0;
    *(_DWORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 101) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 101) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Clock()
{
  return &type metadata for Clock;
}

void sub_1B6B65E48()
{
  uint64_t v1 = *(void *)(v0 + 88);
  if (v1 >= 240) {
    uint64_t v1 = 240;
  }
  if (v1 <= 15) {
    uint64_t v1 = 15;
  }
  float v2 = 1.0 / (double)v1;
  *(float *)(v0 + 68) = v2;
  *(unsigned char *)(v0 + 98) = 0;
  ++*(void *)v0;
  *(void *)(v0 + 8) = 0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(CFTimeInterval *)(v0 + 32) = CACurrentMediaTime();
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 40) = 0;
  *(_DWORD *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 1;
}

uint64_t sub_1B6B65EBC(uint64_t a1)
{
  return sub_1B6B65F0C(a1, MEMORY[0x1E4FBB058], MEMORY[0x1E4FBB060], (void (*)(uint64_t *, void))sub_1B67E9934);
}

uint64_t sub_1B6B65EE4(uint64_t a1)
{
  return sub_1B6B65F0C(a1, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB560], (void (*)(uint64_t *, void))sub_1B637E330);
}

uint64_t sub_1B6B65F0C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, void))
{
  uint64_t v6 = 0;
  uint64_t v18 = sub_1B6E31EF8();
  uint64_t v7 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    uint64_t v14 = v6 + 1;
    if (v6 + 1 >= v11) {
      goto LABEL_21;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    if (!v15)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_21;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v14);
      if (!v15)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_21;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v14);
        if (!v15)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_21;
          }
          unint64_t v15 = *(void *)(v7 + 8 * v14);
          if (!v15)
          {
            uint64_t v14 = v6 + 5;
            if (v6 + 5 >= v11) {
              goto LABEL_21;
            }
            unint64_t v15 = *(void *)(v7 + 8 * v14);
            if (!v15) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    uint64_t v6 = v14;
LABEL_5:
    a4(&v17, *(void *)(*(void *)(a1 + 48) + 8 * v13));
  }
  while (v11 - 6 != v6)
  {
    unint64_t v15 = *(void *)(a1 + 112 + 8 * v6++);
    if (v15)
    {
      uint64_t v14 = v6 + 5;
      goto LABEL_20;
    }
  }
LABEL_21:
  swift_release();
  return v18;
}

id VFXREDrawCall.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

uint64_t sub_1B6B660AC()
{
  v3[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = 0;
  v3[0] = 0;
  objc_msgSend(v0, sel_viewports::, v3, &v2);
  return v2;
}

void sub_1B6B66114(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v5 = objc_msgSend(a1, sel_frontFaceTest);
  if (v5)
  {
    uint64_t v6 = v5;
    id v21 = objc_msgSend(v5, sel_stencilCompareFunction);
    id v20 = objc_msgSend(v6, sel_stencilFailureOperation);
    id v19 = objc_msgSend(v6, sel_depthFailureOperation);
    id v18 = objc_msgSend(v6, sel_depthStencilPassOperation);
    unsigned int v17 = objc_msgSend(v6, sel_readMask);
    unsigned int v16 = objc_msgSend(v6, sel_writeMask);
  }
  else
  {
    id v20 = *(id *)(v2 + 24);
    id v21 = *(id *)(v2 + 16);
    id v18 = *(id *)(v2 + 40);
    id v19 = *(id *)(v2 + 32);
    unsigned int v16 = *(_DWORD *)(v2 + 52);
    unsigned int v17 = *(_DWORD *)(v2 + 48);
  }
  id v7 = objc_msgSend(a1, sel_backFaceTest);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_stencilCompareFunction);
    id v10 = objc_msgSend(v8, (SEL)&selRef_pointerType);
    id v11 = objc_msgSend(v8, (SEL)&selRef__sceneWillEnterForeground_ + 7);
    id v12 = objc_msgSend(v8, (SEL)&selRef_setPreferredFrameRateRange_ + 3);
    unsigned int v13 = objc_msgSend(v8, (SEL)&selRef_constantData_ + 4);
    unsigned int v14 = objc_msgSend(v8, (SEL)&selRef_constantOffsetAndSize__::);
  }
  else
  {
    id v9 = *(id *)(v2 + 56);
    id v10 = *(id *)(v2 + 64);
    id v11 = *(id *)(v2 + 72);
    id v12 = *(id *)(v2 + 80);
    unsigned int v13 = *(_DWORD *)(v2 + 88);
    unsigned int v14 = *(_DWORD *)(v2 + 92);
  }
  char v15 = *(unsigned char *)(v2 + 8);
  *(void *)a2 = *(void *)v2;
  *(unsigned char *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v18;
  *(_DWORD *)(a2 + 48) = v17;
  *(_DWORD *)(a2 + 52) = v16;
  *(void *)(a2 + 56) = v9;
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v11;
  *(void *)(a2 + 80) = v12;
  *(_DWORD *)(a2 + 88) = v13;
  *(_DWORD *)(a2 + 92) = v14;
}

BOOL VFXREVersionCheckBridgeVersion(unint64_t a1)
{
  qword_1E9DD6490 = a1;
  return a1 > 0x2540BE402;
}

Swift::Bool __swiftcall VFXREVersionCheckBridgeVersion(_:_:)(Swift::UInt64 a1, Swift::UInt64 a2)
{
  qword_1E9DD6490 = a1;
  return a1 > 0x2540BE402;
}

void *sub_1B6B66358()
{
  __n128 result = sub_1B67DDFA4((uint64_t)&unk_1F0F7EFF8);
  qword_1E9E49628 = (uint64_t)result;
  return result;
}

void *sub_1B6B66380()
{
  __n128 result = sub_1B67DDFA4((uint64_t)&unk_1F0F7EF78);
  qword_1E9E49630 = (uint64_t)result;
  return result;
}

id sub_1B6B663A8(unsigned __int8 a1, uint64_t a2, uint64_t a3, void *a4)
{
  v14[1] = *MEMORY[0x1E4F143B8];
  uint64_t v13 = 0;
  v14[0] = 0;
  if (qword_1E9DCC590 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1E9E49630 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  sub_1B62B2CE0(a2, a3);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v9 = a1;
  id v10 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(a4, sel_buffer__::, v9, v10, v14, &v13);

  return v11;
}

id VFXREBindingMeshData.init()()
{
  *(void *)&v0[OBJC_IVAR___VFXREBindingMeshData_buffer] = 0;
  *(_DWORD *)&v0[OBJC_IVAR___VFXREBindingMeshData_length] = 0;
  *(void *)&v0[OBJC_IVAR___VFXREBindingMeshData_format] = 0;
  *(_WORD *)&v0[OBJC_IVAR___VFXREBindingMeshData_offset] = 0;
  *(_WORD *)&v0[OBJC_IVAR___VFXREBindingMeshData_stride] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VFXREBindingMeshData();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for VFXREBindingMeshData()
{
  return self;
}

id VFXREBindingMeshData.__deallocating_deinit()
{
  return sub_1B6B66EBC(type metadata accessor for VFXREBindingMeshData);
}

double sub_1B6B6673C@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 31) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  return result;
}

uint64_t sub_1B6B66754()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B6679C()
{
  return sub_1B6E33958();
}

uint64_t sub_1B6B667C8()
{
  return sub_1B6E33988();
}

unint64_t sub_1B6B6680C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1B6B67AA0(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

void sub_1B6B668D0(void *a1, int a2, uint64_t a3, void *aBlock)
{
  uint64_t v6 = _Block_copy(aBlock);
  _Block_copy(v6);
  id v7 = a1;
  sub_1B6B67BA0(a3, (uint64_t)v6);
  _Block_release(v6);
  _Block_release(v6);
}

uint64_t sub_1B6B66A00()
{
  uint64_t result = *(void *)(*(void *)(v0 + OBJC_IVAR___VFXREDrawCall_drawCall) + 32);
  if (result) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1B6B66BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B6B66DB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(__n128, __n128))
{
  return a3(*(__n128 *)(a1 + OBJC_IVAR___VFXREDrawCall_aabb), *(__n128 *)(a1 + OBJC_IVAR___VFXREDrawCall_aabb + 16));
}

id sub_1B6B66DEC()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1B6B66E54(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_1B6E31798();
  id v7 = (uint64_t *)(a1 + *a4);
  *id v7 = v6;
  v7[1] = v8;

  return swift_bridgeObjectRelease();
}

id VFXREDrawCall.__deallocating_deinit()
{
  return sub_1B6B66EBC(type metadata accessor for VFXREDrawCall);
}

id sub_1B6B66EBC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t *sub_1B6B66F8C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = v3;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v105 = qword_1EB997A18;
  int v106 = 0;
  char v107 = 2;
  uint64_t v108 = 0;
  char v109 = 2;
  uint64_t v110 = 0;
  swift_retain();
  sub_1B6664580(1, 1, 1, (uint64_t)v90);
  swift_release();
  v102[0] = v90[0];
  v102[1] = v90[1];
  uint64_t v103 = v91;
  uint64_t v111 = a1;
  sub_1B62C9DA8(a1, (uint64_t)v102, 0x200000000, v92);
  sub_1B62CA210((uint64_t)v92, (uint64_t)v93, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v93[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v90);
  }
  if (v99 > 0 && (uint64_t v69 = v96) != 0)
  {
    uint64_t v7 = v98[4];
    int v8 = *(unsigned __int8 *)(v97 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v100[0] = v93[0];
    v100[1] = v93[1];
    uint64_t v65 = v95;
    uint64_t v66 = (uint64_t)(v98 + 6);
    uint64_t v101 = v94;
    uint64_t v88 = OBJC_IVAR____TtC3VFX13EntityManager_renderer;
    unint64_t v85 = (void *)(a2 + OBJC_IVAR___VFXREDrawCall_renderPassName);
    uint64_t v86 = OBJC_IVAR___VFXREDrawCall_drawCall;
    unint64_t v84 = (uint64_t *)(a2 + OBJC_IVAR___VFXREDrawCall_handler);
    uint64_t v83 = (long long *)(a2 + OBJC_IVAR___VFXREDrawCall_aabb);
    uint64_t v81 = OBJC_IVAR___VFXREDrawCall__writesSeparateDepth;
    uint64_t v82 = OBJC_IVAR___VFXREDrawCall__writesColor;
    uint64_t v79 = OBJC_IVAR___VFXREDrawCall__needsLinearDepth;
    uint64_t v80 = OBJC_IVAR___VFXREDrawCall__materialType;
    uint64_t v77 = (void *)(a2 + OBJC_IVAR___VFXREDrawCall_emitterIdentifier);
    uint64_t v78 = OBJC_IVAR___VFXREDrawCall__isAdditive;
    uint64_t v74 = v98;
    uint64_t v64 = v98 + 8;
    uint64_t v76 = OBJC_IVAR___VFXREDrawCall_renderPassIdentifier;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v9 = 0;
    int v67 = v8;
    uint64_t v68 = v7;
    do
    {
      uint64_t v73 = v9;
      id v10 = (unsigned int *)(v65 + 48 * v9);
      uint64_t v11 = *v10;
      uint64_t v70 = v10[1];
      uint64_t v71 = v4;
      id v12 = (uint64_t *)*((void *)v10 + 2);
      uint64_t v13 = *((void *)v10 + 3);
      uint64_t v14 = *((void *)v10 + 4);
      uint64_t v15 = *((void *)v10 + 5);
      if (v8)
      {
        unsigned int v16 = *(os_unfair_lock_s **)(v15 + 376);
        swift_retain();
        os_unfair_lock_lock(v16);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 344));
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v7);
      sub_1B62CA210(v66, (uint64_t)v104, &qword_1EB97DE20);
      uint64_t v17 = v74[4];
      uint64_t v18 = *(void *)(*(void *)(*(void *)(*(void *)(v15 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v74[6] = ecs_stack_allocator_allocate(v17, 48 * v18, 8);
      v74[7] = v18;
      v64[1] = 0;
      v64[2] = 0;
      *uint64_t v64 = 0;
      swift_release();
      uint64_t v19 = v15;
      uint64_t v20 = sub_1B62C9024((uint64_t)&type metadata for DrawCallComponent, (uint64_t)&off_1F0F709E8, v12, v13, v14, (uint64_t)v74);
      uint64_t v21 = sub_1B62C9024((uint64_t)&type metadata for WorldAABB, (uint64_t)&off_1F0FAAB28, v12, v13, v14, (uint64_t)v74);
      uint64_t v72 = v19;
      uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for VFXDrawCallHandler, (uint64_t)&off_1F0F7B508, v12, v13, v14, (uint64_t)v74);
      if (v12)
      {
        uint64_t v23 = v111;
        uint64_t v24 = v88;
        if (v14)
        {
          uint64_t v25 = (void *)(v22 + 48);
          uint64_t v26 = (float32x4_t *)(v21 + 16);
          do
          {
            uint64_t v29 = *(void *)(v23 + v24);
            if (v29)
            {
              int v30 = *((_DWORD *)v25 - 4);
              uint64_t v31 = v30 == 1;
              if (v30 == 2) {
                uint64_t v31 = 2;
              }
              if (*(void *)(*(void *)(v29 + 792) + 8 * v31 + 32) == *(void *)(*(void *)(*(void *)v20 + 264)
                                                                                   + 16))
              {
                *(void *)(a2 + v86) = *(void *)v20;
                swift_retain();
                swift_retain();
                swift_release();
                if (*(v25 - 5))
                {
                  uint64_t v32 = *(v25 - 6);
                  unint64_t v33 = *(v25 - 5);
                }
                else
                {
                  uint64_t v32 = 0;
                  unint64_t v33 = 0xE000000000000000;
                }
                void *v85 = v32;
                v85[1] = v33;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v34 = *(v25 - 4);
                uint64_t v35 = *(v25 - 3);
                uint64_t v36 = *v84;
                *unint64_t v84 = v34;
                v84[1] = v35;
                sub_1B62C6A60(v34);
                sub_1B62C6A50(v36);
                float32x4_t v37 = *v26;
                v37.i32[3] = v89;
                int32x4_t v38 = vcltzq_f32(v37);
                int v39 = v38.i32[0];
                if (v38.i32[1] < v38.i32[0]) {
                  int v39 = v38.i32[1];
                }
                if (v38.i32[2] < v39) {
                  int v39 = v38.i32[2];
                }
                long long v40 = xmmword_1B6E4F370;
                long long v41 = xmmword_1B6E725A0;
                if ((v39 & 0x80000000) == 0)
                {
                  long long v40 = (__int128)v26[-1];
                  long long v41 = (__int128)*v26;
                }
                *uint64_t v83 = v40;
                v83[1] = v41;
                char v27 = *((unsigned char *)v25 - 12);
                *(unsigned char *)(a2 + v82) = v27 ^ 1;
                *(unsigned char *)(a2 + v81) = v27;
                *(_DWORD *)(a2 + v80) = v30;
                *(unsigned char *)(a2 + v79) = *((unsigned char *)v25 - 11);
                *(unsigned char *)(a2 + v78) = *((unsigned char *)v25 - 10);
                *(unsigned char *)(a2 + v76) = -1;
                uint64_t v28 = *v25;
                *uint64_t v77 = *(v25 - 1);
                v77[1] = v28;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                a3(a2);
                swift_release();
                uint64_t v23 = v111;
                uint64_t v24 = v88;
              }
            }
            v20 += 8;
            v25 += 7;
            v26 += 2;
            --v14;
          }
          while (v14);
        }
      }
      else
      {
        uint64_t v42 = v111;
        uint64_t v43 = v88;
        if (v11 != v70)
        {
          uint64_t v44 = v20 + 8 * v11;
          uint64_t v45 = (void *)(v22 + 56 * v11 + 48);
          unint64_t v46 = (float32x4_t *)(v21 + 32 * v11 + 16);
          uint64_t v47 = v70 - v11;
          do
          {
            uint64_t v50 = *(void *)(v42 + v43);
            if (v50)
            {
              int v51 = *((_DWORD *)v45 - 4);
              uint64_t v52 = v51 == 1;
              if (v51 == 2) {
                uint64_t v52 = 2;
              }
              if (*(void *)(*(void *)(v50 + 792) + 8 * v52 + 32) == *(void *)(*(void *)(*(void *)v44 + 264)
                                                                                   + 16))
              {
                *(void *)(a2 + v86) = *(void *)v44;
                swift_retain();
                swift_retain();
                swift_release();
                if (*(v45 - 5))
                {
                  uint64_t v53 = *(v45 - 6);
                  unint64_t v54 = *(v45 - 5);
                }
                else
                {
                  uint64_t v53 = 0;
                  unint64_t v54 = 0xE000000000000000;
                }
                void *v85 = v53;
                v85[1] = v54;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v55 = *(v45 - 4);
                uint64_t v56 = *(v45 - 3);
                uint64_t v57 = *v84;
                *unint64_t v84 = v55;
                v84[1] = v56;
                sub_1B62C6A60(v55);
                sub_1B62C6A50(v57);
                float32x4_t v58 = *v46;
                v58.i32[3] = v75;
                int32x4_t v59 = vcltzq_f32(v58);
                int v60 = v59.i32[0];
                if (v59.i32[1] < v59.i32[0]) {
                  int v60 = v59.i32[1];
                }
                if (v59.i32[2] < v60) {
                  int v60 = v59.i32[2];
                }
                long long v61 = xmmword_1B6E4F370;
                long long v62 = xmmword_1B6E725A0;
                if ((v60 & 0x80000000) == 0)
                {
                  long long v61 = (__int128)v46[-1];
                  long long v62 = (__int128)*v46;
                }
                *uint64_t v83 = v61;
                v83[1] = v62;
                char v48 = *((unsigned char *)v45 - 12);
                *(unsigned char *)(a2 + v82) = v48 ^ 1;
                *(unsigned char *)(a2 + v81) = v48;
                *(_DWORD *)(a2 + v80) = v51;
                *(unsigned char *)(a2 + v79) = *((unsigned char *)v45 - 11);
                *(unsigned char *)(a2 + v78) = *((unsigned char *)v45 - 10);
                *(unsigned char *)(a2 + v76) = -1;
                uint64_t v49 = *v45;
                *uint64_t v77 = *(v45 - 1);
                v77[1] = v49;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                a3(a2);
                swift_release();
                uint64_t v42 = v111;
                uint64_t v43 = v88;
              }
            }
            v44 += 8;
            v45 += 7;
            v46 += 2;
            --v47;
          }
          while (v47);
        }
      }
      sub_1B6345178(v74, (unsigned __int16 **)v100, (uint64_t)v104);
      uint64_t v4 = v71;
      sub_1B634507C((char *)v72);
      uint64_t v7 = v68;
      ecs_stack_allocator_pop_snapshot(v68);
      int v8 = v67;
      if (v67)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v72 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v72 + 376));
      }
      swift_release();
      uint64_t v9 = v73 + 1;
    }
    while (v73 + 1 != v69);
    sub_1B62CA064((uint64_t)v90);
    sub_1B632F170(v92);
  }
  else
  {
    sub_1B62CA064((uint64_t)v90);
  }
  return sub_1B632F170(v92);
}

void VFXREForEachDrawCall(uint64_t a1, void *a2, void *aBlock)
{
  id v5 = _Block_copy(aBlock);
  v8[2] = v5;
  id v6 = a2;
  uint64_t v7 = swift_retain_n();
  sub_1B69D93F8(v7, a1, v6, (void (*)(uint64_t))sub_1B6A027C4, (uint64_t)v8);
  swift_release();
  _Block_release(v5);
}

uint64_t forEachDrawCall(_:_:_:)(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  swift_retain_n();
  sub_1B69D93F8(a1, a1, a2, a3, a4);

  return swift_release();
}

uint64_t sub_1B6B67860(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B66507E8();
  uint64_t result = sub_1B6E31EF8();
  uint64_t v13 = result;
  if (v2)
  {
    uint64_t v4 = (int *)(a1 + 48);
    do
    {
      id v5 = (void *)*((void *)v4 - 2);
      id v6 = (void *)*((void *)v4 - 1);
      uint64_t v7 = *((unsigned __int8 *)v4 + 4);
      unsigned int v8 = *v4;
      v4 += 6;
      unint64_t v9 = v8 | (unint64_t)(v7 << 32);
      sub_1B6650588(v5, v6, v9);
      sub_1B67E9A30((uint64_t)v10, (unint64_t)v5, (unint64_t)v6, v9);
      sub_1B66505D0(v10[0], v10[1], v11 | ((unint64_t)v12 << 32));
      --v2;
    }
    while (v2);
    return v13;
  }
  return result;
}

uint64_t sub_1B6B67918(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B67CB1A4();
  uint64_t result = sub_1B6E31EF8();
  uint64_t v6 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 36;
    do
    {
      sub_1B67E9ED4(&v5, *(void *)(v4 - 4));
      v4 += 8;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t method lookup function for VFXREBindingMeshData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VFXREBindingMeshData);
}

uint64_t method lookup function for VFXREDrawCall(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VFXREDrawCall);
}

ValueMetadata *type metadata accessor for VFXMaterialType()
{
  return &type metadata for VFXMaterialType;
}

unint64_t sub_1B6B679D4()
{
  unint64_t result = qword_1E9DD6538;
  if (!qword_1E9DD6538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD6538);
  }
  return result;
}

uint64_t sub_1B6B67A28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B67F7B4C();
  uint64_t result = sub_1B6E31EF8();
  uint64_t v6 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 33;
    do
    {
      sub_1B67EA7AC(v5, *(unsigned __int16 *)(v4 - 1));
      v4 += 2;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

unint64_t sub_1B6B67AA0(unsigned int a1)
{
  unsigned __int8 v1 = 0;
  uint64_t v2 = a1;
  switch(a1)
  {
    case 0u:
      uint64_t v2 = 0;
      unsigned __int8 v1 = 0;
      break;
    case 1u:
      return v2 | ((unint64_t)v1 << 32);
    case 2u:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 2;
      break;
    case 3u:
      unsigned __int8 v1 = 0;
      uint64_t v2 = 3;
      break;
    default:
      uint64_t v2 = 0;
      unsigned __int8 v1 = 1;
      break;
  }
  return v2 | ((unint64_t)v1 << 32);
}

double sub_1B6B67B28(float32x4_t a1, float32x4_t a2)
{
  *(void *)&double result = vaddq_f32(a1, a2).u64[0];
  return result;
}

double sub_1B6B67B30(float32x4_t a1, float32x4_t a2)
{
  *(void *)&double result = vsubq_f32(a1, a2).u64[0];
  return result;
}

uint64_t sub_1B6B67B38()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6B67B70(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

uint64_t sub_1B6B67BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
  uint64_t v5 = *(void *)(**(void **)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues) + 32);
  swift_retain();
  ecs_stack_allocator_push_snapshot(v5);
  swift_getKeyPath();
  uint64_t v6 = *(void *)(a1 + 176);
  swift_retain();
  swift_retain();
  uint64_t v7 = sub_1B6B3B7D0((uint64_t)&type metadata for LightsUniforms, (uint64_t)&off_1F0F643E8, v6);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  swift_release();
  swift_release_n();
  if (v7)
  {
    swift_unknownObjectRetain();
    unsigned __int8 v12 = (void *)sub_1B6E31768();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t))(a2 + 16))(a2, v12, v7, v9, v11);
    swift_unknownObjectRelease_n();
  }
  ecs_stack_allocator_pop_snapshot(*(void *)(**(void **)(a1 + v4) + 32));

  return swift_release();
}

ValueMetadata *type metadata accessor for REExternalDataTable()
{
  return &type metadata for REExternalDataTable;
}

uint64_t destroy for VFXDrawCallHandler(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16)) {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VFXDrawCallHandler(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v6 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v6;
  }
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_WORD *)(a1 + 37) = *(_WORD *)(a2 + 37);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VFXDrawCallHandler(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  *(unsigned char *)(a1 + 38) = *(unsigned char *)(a2 + 38);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VFXDrawCallHandler(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = v7;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  swift_release();
LABEL_8:
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  *(unsigned char *)(a1 + 38) = *(unsigned char *)(a2 + 38);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptDiagnostic(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScriptDiagnostic(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFXDrawCallHandler()
{
  return &type metadata for VFXDrawCallHandler;
}

uint64_t sub_1B6B6801C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a5 + 32);
  ecs_stack_allocator_push_snapshot(v8);
  unint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = 16 * v9;
  uint64_t v11 = ecs_stack_allocator_allocate(v8, 16 * v9 + 48, 8);
  unsigned __int8 v12 = v11;
  void *v11 = &type metadata for TextureFileAsset;
  v11[1] = &off_1F0F6F8C8;
  _OWORD v11[2] = &type metadata for TextureLoadPolicy;
  v11[3] = &off_1F0F74E60;
  _OWORD v11[4] = &type metadata for TextureLoadingOptions;
  void v11[5] = &off_1F0F8B9D0;
  if (!v9)
  {
    uint64_t v20 = 3;
    goto LABEL_18;
  }
  if (v9 < 0x14
    || ((unint64_t v13 = (unint64_t)(v11 + 6),
         uint64_t v14 = 2 * (v9 - 1),
         unint64_t v15 = (unint64_t)&v11[v14 + 6],
         unint64_t v16 = (unint64_t)&v11[v14 + 7],
         v15 >= (unint64_t)(v11 + 6))
      ? (BOOL v17 = v16 >= (unint64_t)(v11 + 7))
      : (BOOL v17 = 0),
        v17 ? (BOOL v18 = (v9 - 1) >> 60 == 0) : (BOOL v18 = 0),
        !v18 || v13 < v10 + a1 + 32 && a1 + 32 < v13 + v10))
  {
    uint64_t v19 = 0;
    uint64_t v20 = 3;
LABEL_14:
    unint64_t v21 = v9 - v19;
    uint64_t v22 = (long long *)(a1 + 16 * v19 + 32);
    do
    {
      long long v23 = *v22++;
      *(_OWORD *)&v11[2 * v20++] = v23;
      --v21;
    }
    while (v21);
    goto LABEL_18;
  }
  uint64_t v19 = v9 & 0x7FFFFFFFFFFFFFFCLL;
  uint64_t v20 = v9 | 3;
  int v39 = (long long *)(a1 + 64);
  long long v40 = v11 + 10;
  uint64_t v41 = v9 & 0x7FFFFFFFFFFFFFFCLL;
  do
  {
    long long v43 = *(v39 - 2);
    long long v42 = *(v39 - 1);
    long long v45 = *v39;
    long long v44 = v39[1];
    v39 += 4;
    *(v40 - 2) = v43;
    *(v40 - 1) = v42;
    *long long v40 = v45;
    v40[1] = v44;
    v40 += 4;
    v41 -= 4;
  }
  while (v41);
  if (v9 != v19) {
    goto LABEL_14;
  }
LABEL_18:
  uint64_t v24 = *(void *)(a5 + 16);
  uint64_t v25 = v24 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  uint64_t v26 = *(os_unfair_lock_s **)(v24 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
  swift_retain();
  os_unfair_lock_lock(v26);
  uint64_t v27 = sub_1B69E2E04((uint64_t)v12, v20, MEMORY[0x1E4FBC860]);
  uint64_t v29 = v28;
  uint64_t v30 = sub_1B637FE60(v27);
  if ((v31 & 1) != 0 || (unint64_t v32 = sub_1B63581E4(v29, v30), v33 = v32, (v32 & 0x100000000) != 0))
  {
    uint64_t v34 = sub_1B6A00108(v12, v20);
    int v33 = sub_1B637C7BC(v27, v29, v34, MEMORY[0x1E4FBC860]);
    swift_release();
  }
  uint64_t v35 = *(void *)(*(void *)(v24 + 80) + 8 * v33 + 32);
  uint64_t v36 = *(os_unfair_lock_s **)(v25 + 24);
  swift_retain();
  os_unfair_lock_unlock(v36);
  swift_release();
  uint64_t v37 = sub_1B6B2358C(v35, 1, 1, a2 | ((HIDWORD(a2) & 1) << 32), a5, a3, a4);
  swift_release();
  ecs_stack_allocator_pop_snapshot(*(void *)(a5 + 32));
  return v37;
}

void *sub_1B6B68298(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v105 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_renderer)) {
    return 0;
  }
  uint64_t v86 = *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  swift_retain();
  id v6 = objc_msgSend(a1, sel_mesh);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v8 = v6;
    id v9 = objc_msgSend(v6, sel_meshElements);

    sub_1B63989B8(0, &qword_1E9DD6540);
    unint64_t v10 = sub_1B6E31C28();
  }
  else
  {
    unint64_t v10 = MEMORY[0x1E4FBC860];
  }
  id v87 = a1;
  if (!(v10 >> 62))
  {
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12) {
      goto LABEL_8;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v16 = *(void **)(v86 + 16);
    type metadata accessor for Mesh();
    uint64_t v11 = (void *)swift_allocObject();
    _OWORD v11[4] = v7;
    void v11[5] = v7;
    _OWORD v11[7] = 0;
    unsigned char v11[8] = 0;
    id v93 = v16;
    swift_unknownObjectRetain();
    BOOL v17 = v87;
    uint64_t v18 = sub_1B6B6D5F4(v87);
    uint64_t v20 = v19;
    _OWORD v11[2] = v18;
    v11[3] = v21;
    id v22 = objc_msgSend(v87, sel_mesh);
    id v23 = v22;
    if (!v22) {
      goto LABEL_25;
    }
    id v24 = objc_msgSend(v22, sel_meshSourcesForSemantic_, @"kGeometrySourceSemanticPosition");

    sub_1B63989B8(0, (unint64_t *)&qword_1E9DD1E48);
    unint64_t v25 = sub_1B6E31C28();

    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_17;
      }
    }
    else if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_17:
      if ((v25 & 0xC000000000000001) != 0) {
        id v26 = (id)MEMORY[0x1BA9B4580](0, v25);
      }
      else {
        id v26 = *(id *)(v25 + 32);
      }
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      id v23 = objc_msgSend(v27, sel_vectorCount);

LABEL_25:
      void v11[6] = v23;
      uint64_t v32 = *(void *)(v20 + 16);
      int v33 = &selRef_bufferIndex;
      uint64_t v88 = (uint64_t)v11;
      if (v32)
      {
        uint64_t v34 = v20 + 48;
        uint64_t v94 = (void *)MEMORY[0x1E4FBC860];
        while (2)
        {
          uint64_t v35 = *(void **)(v34 - 16);
          v34 += 24;
          id v36 = v35;
          swift_bridgeObjectRetain();
          id v37 = [v36 v33[259]];
          uint64_t v38 = sub_1B6E30FD8();
          unint64_t v40 = v39;

          switch(v40 >> 62)
          {
            case 1uLL:
              sub_1B62C2360(v38, v40);
              uint64_t v41 = (uint64_t)(0xFFFFFFFF00000001 * v38) >> 32;
              if (v41) {
                goto LABEL_35;
              }
              goto LABEL_28;
            case 2uLL:
              uint64_t v43 = *(void *)(v38 + 16);
              uint64_t v42 = *(void *)(v38 + 24);
              sub_1B62C2360(v38, v40);
              uint64_t v41 = v42 - v43;
              int v33 = &selRef_bufferIndex;
              if (!v41) {
                goto LABEL_28;
              }
              goto LABEL_35;
            case 3uLL:
              sub_1B62C2360(v38, v40);
              goto LABEL_28;
            default:
              sub_1B62C2360(v38, v40);
              uint64_t v41 = BYTE6(v40);
              if (BYTE6(v40))
              {
LABEL_35:
                id v44 = [v36 v33[259]];
                uint64_t v45 = sub_1B6E30FD8();
                unint64_t v47 = v46;

                switch(v47 >> 62)
                {
                  case 1uLL:
                    sub_1B62FFBB0(v45, v47);
                    uint64_t v51 = sub_1B6E30B98();
                    if (v51) {
                      uint64_t v52 = v51 - sub_1B6E30BC8() + (int)v45;
                    }
                    else {
                      uint64_t v52 = 0;
                    }
                    sub_1B6E30BB8();
                    id v49 = objc_msgSend(v93, sel_newBufferWithBytes_length_options_, v52, v41, 0);
                    sub_1B62C2360(v45, v47);
                    goto LABEL_47;
                  case 2uLL:
                    uint64_t v90 = *(void *)(v45 + 16);
                    swift_retain();
                    swift_retain();
                    uint64_t v48 = sub_1B6E30B98();
                    if (v48) {
                      v48 += v90 - sub_1B6E30BC8();
                    }
                    sub_1B6E30BB8();
                    id v49 = objc_msgSend(v93, sel_newBufferWithBytes_length_options_, v48, v41, 0);
                    swift_release();
                    swift_release();
LABEL_47:
                    sub_1B62C2360(v45, v47);
                    uint64_t v11 = (void *)v88;
                    int v33 = &selRef_bufferIndex;
                    if (!v49) {
                      goto LABEL_48;
                    }
                    goto LABEL_42;
                  case 3uLL:
                    *(void *)&v97[6] = 0;
                    *(void *)uint64_t v97 = 0;
                    goto LABEL_41;
                  default:
                    *(void *)uint64_t v97 = v45;
                    *(_WORD *)&v97[8] = v47;
                    v97[10] = BYTE2(v47);
                    v97[11] = BYTE3(v47);
                    v97[12] = BYTE4(v47);
                    v97[13] = BYTE5(v47);
LABEL_41:
                    id v49 = objc_msgSend(v93, sel_newBufferWithBytes_length_options_, v97, v41, 0);
                    sub_1B62C2360(v45, v47);
                    if (v49)
                    {
LABEL_42:
                      swift_unknownObjectRetain();
                      uint64_t v50 = (void *)sub_1B6E31768();
                      swift_bridgeObjectRelease();
                      objc_msgSend(v49, sel_setLabel_, v50);
                      swift_unknownObjectRelease();
                    }
                    else
                    {
LABEL_48:
                      swift_bridgeObjectRelease();
                    }
                    swift_unknownObjectRetain();
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      uint64_t v94 = sub_1B68C52AC(0, v94[2] + 1, 1, v94);
                    }
                    unint64_t v54 = v94[2];
                    unint64_t v53 = v94[3];
                    if (v54 >= v53 >> 1) {
                      uint64_t v94 = sub_1B68C52AC(v53 > 1, v54 + 1, 1, v94);
                    }
                    _OWORD v94[2] = v54 + 1;
                    uint64_t v55 = &v94[5 * v54];
                    v55[4] = v49;
                    v55[5] = 0;
                    v55[6] = v41;
                    v55[7] = 0;
                    *((unsigned char *)v55 + 64) = 1;
                    swift_unknownObjectRelease();

                    _OWORD v11[4] = v94;
                    if (!--v32) {
                      goto LABEL_54;
                    }
                    continue;
                }
              }
LABEL_28:
              swift_bridgeObjectRelease();

              if (--v32) {
                continue;
              }
LABEL_54:
              swift_bridgeObjectRelease();
              BOOL v17 = v87;
              break;
          }
          break;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v96 = 0;
      id v56 = objc_msgSend(v17, sel_mesh);
      uint64_t v57 = MEMORY[0x1E4FBC860];
      if (v56)
      {
        float32x4_t v58 = v56;
        id v59 = objc_msgSend(v56, sel_meshElements);

        sub_1B63989B8(0, &qword_1E9DD6540);
        unint64_t v60 = sub_1B6E31C28();

        if (!(v60 >> 62)) {
          goto LABEL_58;
        }
      }
      else
      {
        unint64_t v60 = MEMORY[0x1E4FBC860];
        if (!(MEMORY[0x1E4FBC860] >> 62))
        {
LABEL_58:
          uint64_t v61 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v61) {
            goto LABEL_59;
          }
LABEL_89:
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return v11;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v61)
      {
LABEL_59:
        uint64_t v62 = 0;
        unint64_t v89 = v60 & 0xC000000000000001;
        uint64_t v91 = v61;
        unint64_t v92 = v60;
        while (2)
        {
          if (v89) {
            id v64 = (id)MEMORY[0x1BA9B4580](v62, v60);
          }
          else {
            id v64 = *(id *)(v60 + 8 * v62 + 32);
          }
          uint64_t v65 = v64;
          ++v62;
          *(_OWORD *)&v97[8] = 0u;
          long long v98 = 0u;
          memset(v99, 0, sizeof(v99));
          uint64_t v100 = 0;
          uint64_t v101 = 0;
          *(void *)uint64_t v97 = 3;
          uint64_t v102 = v57;
          long long v103 = xmmword_1B6E4F370;
          long long v104 = xmmword_1B6E77AF0;
          id v66 = [v64 v33[259]];
          uint64_t v67 = sub_1B6E30FD8();
          unint64_t v69 = v68;

          switch(v69 >> 62)
          {
            case 1uLL:
              sub_1B62FFBB0(v67, v69);
              uint64_t v74 = sub_1B6E30B98();
              if (v74) {
                unint64_t v75 = v74 + (int)v67 - sub_1B6E30BC8();
              }
              else {
                unint64_t v75 = 0;
              }
              uint64_t v81 = sub_1B6E30BB8();
              uint64_t v82 = (v67 >> 32) - (int)v67;
              if (v81 < v82) {
                LODWORD(v82) = v81;
              }
              int v83 = v75 + v82;
              if (v75) {
                int v84 = v83;
              }
              else {
                int v84 = 0;
              }
              unint64_t v85 = v75;
              uint64_t v11 = (void *)v88;
              sub_1B6B6B0B4(v85, v84, v65, v93, &v96, (float32x4_t *)v97, v17, v88);
              sub_1B62C2360(v67, v69);

              sub_1B62C2360(v67, v69);
              int v33 = &selRef_bufferIndex;
              goto LABEL_63;
            case 2uLL:
              uint64_t v71 = *(void *)(v67 + 16);
              uint64_t v70 = *(void *)(v67 + 24);
              swift_retain();
              swift_retain();
              uint64_t v72 = sub_1B6E30B98();
              if (v72) {
                unint64_t v73 = v72 + v71 - sub_1B6E30BC8();
              }
              else {
                unint64_t v73 = 0;
              }
              uint64_t v76 = sub_1B6E30BB8();
              int v77 = v70 - v71;
              if (v76 < v70 - v71) {
                int v77 = v76;
              }
              int v78 = v73 + v77;
              if (v73) {
                int v79 = v78;
              }
              else {
                int v79 = 0;
              }
              unint64_t v80 = v73;
              BOOL v17 = v87;
              uint64_t v11 = (void *)v88;
              sub_1B6B6B0B4(v80, v79, v65, v93, &v96, (float32x4_t *)v97, v87, v88);
              int v33 = &selRef_bufferIndex;

              swift_release();
              swift_release();
              goto LABEL_62;
            case 3uLL:
              memset(v95, 0, 14);
              int v63 = (char *)v95;
              goto LABEL_61;
            default:
              v95[0] = v67;
              LOWORD(v95[1]) = v69;
              BYTE2(v95[1]) = BYTE2(v69);
              BYTE3(v95[1]) = BYTE3(v69);
              BYTE4(v95[1]) = BYTE4(v69);
              BYTE5(v95[1]) = BYTE5(v69);
              int v63 = (char *)v95 + BYTE6(v69);
LABEL_61:
              sub_1B6B6B0B4((unint64_t)v95, (int)v63, v65, v93, &v96, (float32x4_t *)v97, v17, (uint64_t)v11);

LABEL_62:
              sub_1B62C2360(v67, v69);
LABEL_63:
              uint64_t v57 = MEMORY[0x1E4FBC860];
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              unint64_t v60 = v92;
              if (v91 != v62) {
                continue;
              }
              goto LABEL_89;
          }
        }
      }
      goto LABEL_89;
    }
    swift_bridgeObjectRelease();
    id v23 = 0;
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1B6E32C18();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_14;
  }
LABEL_8:
  uint64_t v13 = 0;
  while (1)
  {
    id v14 = (v10 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x1BA9B4580](v13, v10)
        : *(id *)(v10 + 8 * v13 + 32);
    unint64_t v15 = v14;
    if (objc_msgSend(v14, sel_primitiveType) == (id)4) {
      break;
    }

    if (v12 == ++v13) {
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v87, sel__renderableCopy);
  uint64_t v29 = sub_1B6B68298(v28, a2, a3);

  swift_release();
  return (void *)v29;
}

uint64_t sub_1B6B68E18()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B6B68E58()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_1B6B68EB8(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_1B6E30F48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63989B8(0, &qword_1E9DD6560);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, a1, v4);
  sub_1B6B6F7E0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = @"kSceneSourceCheckConsistency";
  uint64_t v10 = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 40) = 0;
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = @"kSceneSourcePreserveOriginalTopology";
  *(void *)(inited + 104) = v10;
  *(unsigned char *)(inited + 80) = 0;
  uint64_t v11 = @"kSceneSourceCheckConsistency";
  uint64_t v12 = @"kSceneSourcePreserveOriginalTopology";
  uint64_t v13 = sub_1B67E0850(inited);
  id v14 = sub_1B6B691C0((uint64_t)v8, (uint64_t)v13);
  unint64_t v16 = v14;
  if (!v14) {
    return 0;
  }
  id v17 = objc_msgSend(v14, sel_rootNode);
  id v18 = objc_msgSend(v17, sel_name);
  if (!v18)
  {
    sub_1B6E30E58();
    uint64_t v19 = (void *)sub_1B6E31768();
    id v20 = objc_msgSend(v19, sel_stringByDeletingPathExtension);

    sub_1B6E31798();
    swift_bridgeObjectRelease();

    id v18 = (id)sub_1B6E31768();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setName_, v18);
  }

  type metadata accessor for VFXCoreImporter.VFXImporterContext();
  uint64_t v21 = (void *)swift_initStackObject();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  void v21[2] = sub_1B67E0310(MEMORY[0x1E4FBC860]);
  void v21[3] = sub_1B67E0424(v22);
  _OWORD v21[4] = sub_1B67E0538(v22);
  void v21[5] = sub_1B67E0638(v22);
  v21[6] = v22;
  v21[7] = 0;
  v21[8] = v22;
  id v26 = v21;
  unint64_t v15 = sub_1B6B69368(v17, a2, a1, (uint64_t *)&v26);
  uint64_t v23 = (uint64_t)v26;
  swift_retain();
  sub_1B6B699C4(a2, v23);
  swift_release();

  swift_bridgeObjectRetain();
  swift_release();
  return v15;
}

id sub_1B6B691C0(uint64_t a1, uint64_t a2)
{
  v14[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)sub_1B6E30E78();
  if (a2)
  {
    type metadata accessor for VFXWorldLoaderOption(0);
    sub_1B6B6F860();
    uint64_t v5 = (void *)sub_1B6E314B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  v14[0] = 0;
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_worldWithURL_options_error_, v4, v5, v14);

  id v7 = v14[0];
  if (v6)
  {
    uint64_t v8 = sub_1B6E30F48();
    id v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    id v10 = v7;
    v9(a1, v8);
  }
  else
  {
    id v11 = v14[0];
    sub_1B6E30D78();

    swift_willThrow();
    uint64_t v12 = sub_1B6E30F48();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

unint64_t sub_1B6B69368(void *a1, uint64_t a2, char *a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = **(void **)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  id v9 = a1;
  unint64_t v10 = sub_1B6D80198(0x100000000uLL, v8, v9);

  unint64_t v11 = HIDWORD(v10);
  id v12 = objc_msgSend(v9, sel_model);
  int v63 = a4;
  if (!v12) {
    goto LABEL_17;
  }
  uint64_t v13 = v12;
  uint64_t v14 = *a4;
  if (!*(void *)(*(void *)(*a4 + 16) + 16)) {
    goto LABEL_6;
  }
  unint64_t v15 = v12;
  id v16 = v12;
  swift_bridgeObjectRetain();
  sub_1B69FB604((uint64_t)v16);
  if ((v17 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    uint64_t v13 = v15;
LABEL_6:
    uint64_t v18 = sub_1B6B6AA6C(v9, v13, a2, a3, a4);
    unint64_t v15 = v13;
    id v19 = v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v64 = *(void *)(v14 + 16);
    *(void *)(v14 + 16) = 0x8000000000000000;
    sub_1B67E7D94(v18, v19, isUniquelyReferenced_nonNull_native);
    *(void *)(v14 + 16) = v64;

    swift_bridgeObjectRelease();
    uint64_t v21 = *a4;
    uint64_t v22 = *(char **)(*a4 + 64);
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v21 + 64) = v22;
    if ((v23 & 1) == 0)
    {
      uint64_t v22 = sub_1B633F784(0, *((void *)v22 + 2) + 1, 1, v22);
      *(void *)(v21 + 64) = v22;
    }
    unint64_t v25 = *((void *)v22 + 2);
    unint64_t v24 = *((void *)v22 + 3);
    if (v25 >= v24 >> 1) {
      uint64_t v22 = sub_1B633F784(v24 > 1, v25 + 1, 1, v22);
    }
    *((void *)v22 + 2) = v25 + 1;
    *(void *)&v22[8 * v25 + 32] = v18;
    *(void *)(v21 + 64) = v22;
    goto LABEL_11;
  }

  swift_bridgeObjectRelease();
LABEL_11:
  LODWORD(v11) = HIDWORD(v10);
  if (v10 == -1 && HIDWORD(v10) == 0)
  {
  }
  else
  {
    uint64_t v27 = swift_retain();
    MEMORY[0x1F4188790](v27, v28);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6B6F5B0);

    swift_release();
  }
LABEL_17:
  id v29 = objc_msgSend(v9, sel_light, v5);
  if (v29)
  {
    uint64_t v30 = v29;
    sub_1B6B6EF30(v29, v10);
  }
  id v31 = objc_msgSend(v9, sel_camera);
  if (v31)
  {
    uint64_t v32 = v31;
    sub_1B6B6F358(v31, v10);
  }
  if (objc_msgSend(v9, sel_isHidden))
  {
    swift_retain();
    BOOL v33 = sub_1B62EC0CC((uint64_t)&type metadata for Hidden, (uint64_t)&off_1F0F9FDE0, v10);
    swift_release();
    if (!v33)
    {
      if (v10 != -1 || v11 != 0)
      {
        uint64_t v35 = swift_retain();
        MEMORY[0x1F4188790](v35, v36);
        sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6B6EB60);
        swift_release();
      }
      sub_1B6D15234(v10, a2);
    }
  }
  id v37 = objc_msgSend(v9, sel_name);
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = sub_1B6E31798();
    uint64_t v41 = v40;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v41 = 0;
  }
  sub_1B6C0A394(v39, v41, v10, a2);
  id v42 = objc_msgSend(v9, sel_animationKeys);
  uint64_t v43 = sub_1B6E31C28();

  uint64_t v44 = *(void *)(v43 + 16);
  if (v44)
  {
    uint64_t v45 = v43 + 40;
    do
    {
      swift_bridgeObjectRetain();
      unint64_t v46 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      id v47 = objc_msgSend(v9, sel_animationPlayerForKey_, v46);

      if (v47)
      {
        type metadata accessor for VFXCoreImporter.AnimationInfo();
        uint64_t v48 = (void *)swift_allocObject();
        _OWORD v48[2] = v9;
        v48[4] = v47;
        v48[3] = v10;
        uint64_t v49 = *v63;
        id v50 = v9;
        id v51 = v47;
        uint64_t v52 = swift_retain();
        MEMORY[0x1BA9B3870](v52);
        if (*(void *)((*(void *)(v49 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v49 + 48) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_1B6E31C78();
        sub_1B6E31CC8();
        sub_1B6E31C48();
        swift_release();
      }
      v45 += 16;
      --v44;
    }
    while (v44);
  }
  swift_bridgeObjectRelease();
  id v53 = objc_msgSend(v9, sel_childNodes);
  sub_1B63989B8(0, (unint64_t *)&qword_1EB980620);
  unint64_t v54 = sub_1B6E31C28();

  if (v54 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v55)
  {
    uint64_t v56 = 0;
    do
    {
      if ((v54 & 0xC000000000000001) != 0) {
        id v57 = (id)MEMORY[0x1BA9B4580](v56, v54);
      }
      else {
        id v57 = *(id *)(v54 + 8 * v56 + 32);
      }
      float32x4_t v58 = v57;
      ++v56;
      unint64_t v59 = sub_1B6B69368(v57, a2, a3, v63);
      sub_1B6AADDB4(v10, a2, v59, v60);
    }
    while (v55 != v56);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B6B699C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 48);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1B6E32C18();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 0;
      while ((v3 & 0xC000000000000001) == 0)
      {
        uint64_t v6 = *(void *)(v3 + 8 * v5 + 32);
        swift_retain();
        id v7 = *(void **)(v6 + 32);
        if (v7) {
          goto LABEL_9;
        }
LABEL_4:
        ++v5;
        swift_release();
        if (v4 == v5) {
          goto LABEL_11;
        }
      }
      uint64_t v6 = MEMORY[0x1BA9B4580](v5, v3);
      id v7 = *(void **)(v6 + 32);
      if (!v7) {
        goto LABEL_4;
      }
LABEL_9:
      id v8 = v7;
      id v9 = objc_msgSend(v8, sel_animation);
      id v10 = objc_msgSend(v9, sel_caAnimation);

      sub_1B6B6A858(a1, v10, v6, a2);
      goto LABEL_4;
    }
  }
LABEL_11:

  return swift_bridgeObjectRelease();
}

void sub_1B6B69B1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))
{
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (!v12) {
    return;
  }
  uint64_t v13 = (void *)v12;
  id v57 = a1;
  id v14 = objc_msgSend(v13, sel_keyTimes);
  if (v14)
  {
    unint64_t v15 = v14;
    sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
    unint64_t v16 = sub_1B6E31C28();

    id v17 = objc_msgSend(v13, sel_values);
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = sub_1B6E31C28();

      unint64_t v20 = v16;
      unint64_t v60 = v16;
      uint64_t v55 = a4;
      uint64_t v56 = a5;
      uint64_t v53 = a3;
      unint64_t v54 = a6;
      uint64_t v52 = a2;
      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v20 = v16;
        uint64_t v21 = sub_1B6E32C18();
        swift_bridgeObjectRelease();
        if (v21)
        {
LABEL_6:
          uint64_t v22 = 0;
          unint64_t v23 = v20 & 0xC000000000000001;
          uint64_t v24 = v19 + 32;
          unint64_t v25 = (char *)MEMORY[0x1E4FBC860];
          id v26 = (char *)MEMORY[0x1E4FBC860];
          uint64_t v27 = (char *)MEMORY[0x1E4FBC860];
          uint64_t v28 = (char *)MEMORY[0x1E4FBC860];
          unint64_t v58 = v20 & 0xC000000000000001;
          uint64_t v59 = v21;
          do
          {
            if (v23) {
              id v29 = (id)MEMORY[0x1BA9B4580](v22, v20);
            }
            else {
              id v29 = *(id *)(v20 + 8 * v22 + 32);
            }
            uint64_t v30 = v29;
            sub_1B62CAAD8(v24, (uint64_t)v63);
            sub_1B63989B8(0, &qword_1E9DD4DA8);
            if (swift_dynamicCast())
            {
              objc_msgSend(v62, sel_VFXFloat3Value);
              long long v61 = v31;
              objc_msgSend(v30, sel_floatValue);
              int v33 = v32;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v25 = sub_1B6397840(0, *((void *)v25 + 2) + 1, 1, v25);
              }
              unint64_t v35 = *((void *)v25 + 2);
              unint64_t v34 = *((void *)v25 + 3);
              if (v35 >= v34 >> 1) {
                unint64_t v25 = sub_1B6397840(v34 > 1, v35 + 1, 1, v25);
              }
              *((void *)v25 + 2) = v35 + 1;
              *(_DWORD *)&v25[4 * v35 + 32] = v33;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                id v26 = sub_1B6397840(0, *((void *)v26 + 2) + 1, 1, v26);
              }
              unint64_t v37 = *((void *)v26 + 2);
              unint64_t v36 = *((void *)v26 + 3);
              if (v37 >= v36 >> 1) {
                id v26 = sub_1B6397840(v36 > 1, v37 + 1, 1, v26);
              }
              *((void *)v26 + 2) = v37 + 1;
              *(_DWORD *)&v26[4 * v37 + 32] = v61;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v27 = sub_1B6397840(0, *((void *)v27 + 2) + 1, 1, v27);
              }
              unint64_t v39 = *((void *)v27 + 2);
              unint64_t v38 = *((void *)v27 + 3);
              if (v39 >= v38 >> 1) {
                uint64_t v27 = sub_1B6397840(v38 > 1, v39 + 1, 1, v27);
              }
              *((void *)v27 + 2) = v39 + 1;
              *(_DWORD *)&v27[4 * v39 + 32] = DWORD1(v61);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v28 = sub_1B6397840(0, *((void *)v28 + 2) + 1, 1, v28);
              }
              unint64_t v41 = *((void *)v28 + 2);
              unint64_t v40 = *((void *)v28 + 3);
              if (v41 >= v40 >> 1) {
                uint64_t v28 = sub_1B6397840(v40 > 1, v41 + 1, 1, v28);
              }
              *((void *)v28 + 2) = v41 + 1;
              *(_DWORD *)&v28[4 * v41 + 32] = DWORD2(v61);

              uint64_t v21 = v59;
              unint64_t v20 = v60;
              unint64_t v23 = v58;
            }
            else
            {
            }
            ++v22;
            v24 += 32;
          }
          while (v21 != v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v21 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v21) {
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v25 = (char *)MEMORY[0x1E4FBC860];
      id v26 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v27 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v28 = (char *)MEMORY[0x1E4FBC860];
LABEL_39:
      uint64_t v42 = **(void **)(v52 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      sub_1B62F7F54(0, &qword_1E9DD6578, (uint64_t)&type metadata for KeyframeTimeline, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
      *(void *)(inited + 32) = v26;
      *(void *)(inited + 40) = v25;
      *(void *)(inited + 48) = 0;
      *(unsigned char *)(inited + 56) = 1;
      *(void *)(inited + 64) = v27;
      *(void *)(inited + 72) = v25;
      *(void *)(inited + 80) = 0;
      *(unsigned char *)(inited + 88) = 1;
      *(void *)(inited + 96) = v28;
      *(void *)(inited + 104) = v25;
      *(void *)(inited + 112) = 0;
      *(unsigned char *)(inited + 120) = 1;
      swift_bridgeObjectRetain_n();
      objc_msgSend(v57, sel_duration);
      float v45 = v44;
      swift_retain();
      v63[0] = 1;
      uint64_t v46 = v54(0x100000000, v42, 0, 0xFFFFFFFFLL, inited, v42, v53, v55, v45);
      swift_release();
      swift_setDeallocating();
      swift_arrayDestroy();
      id v47 = *(char **)(v56 + 64);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v56 + 64) = v47;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        id v47 = sub_1B633F784(0, *((void *)v47 + 2) + 1, 1, v47);
        *(void *)(v56 + 64) = v47;
      }
      unint64_t v50 = *((void *)v47 + 2);
      unint64_t v49 = *((void *)v47 + 3);
      id v51 = v57;
      if (v50 >= v49 >> 1)
      {
        id v47 = sub_1B633F784(v49 > 1, v50 + 1, 1, v47);
        id v51 = v57;
      }
      *((void *)v47 + 2) = v50 + 1;
      *(void *)&v47[8 * v50 + 32] = v46;
      *(void *)(v56 + 64) = v47;

      return;
    }

    swift_bridgeObjectRelease();
  }
  else
  {
  }
}

void sub_1B6B6A178(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (!v12) {
    return;
  }
  uint64_t v13 = (void *)v12;
  id v59 = a1;
  id v14 = objc_msgSend(v13, sel_keyTimes);
  if (v14)
  {
    unint64_t v15 = v14;
    sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
    unint64_t v16 = sub_1B6E31C28();

    id v17 = objc_msgSend(v13, sel_values);
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = sub_1B6E31C28();

      uint64_t v57 = a4;
      uint64_t v58 = a6;
      uint64_t v56 = a3;
      unsigned int v55 = a5;
      uint64_t v54 = a2;
      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1B6E32C18();
        swift_bridgeObjectRelease();
        unint64_t v21 = v16;
        if (v20)
        {
LABEL_6:
          uint64_t v22 = 0;
          unint64_t v62 = v21 & 0xC000000000000001;
          unint64_t v23 = (char *)MEMORY[0x1E4FBC860];
          uint64_t v24 = v19 + 32;
          unint64_t v25 = (char *)MEMORY[0x1E4FBC860];
          id v26 = (char *)MEMORY[0x1E4FBC860];
          uint64_t v27 = (char *)MEMORY[0x1E4FBC860];
          uint64_t v28 = (char *)MEMORY[0x1E4FBC860];
          uint64_t v60 = v20;
          unint64_t v61 = v21;
          do
          {
            if (v62) {
              id v29 = (id)MEMORY[0x1BA9B4580](v22, v21);
            }
            else {
              id v29 = *(id *)(v21 + 8 * v22 + 32);
            }
            uint64_t v30 = v29;
            sub_1B62CAAD8(v24, (uint64_t)v65);
            sub_1B63989B8(0, &qword_1E9DD4DA8);
            if (swift_dynamicCast())
            {
              objc_msgSend(v64, sel_VFXFloat4Value);
              long long v63 = v31;
              objc_msgSend(v30, sel_floatValue);
              int v33 = v32;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v23 = sub_1B6397840(0, *((void *)v23 + 2) + 1, 1, v23);
              }
              unint64_t v35 = *((void *)v23 + 2);
              unint64_t v34 = *((void *)v23 + 3);
              if (v35 >= v34 >> 1) {
                unint64_t v23 = sub_1B6397840(v34 > 1, v35 + 1, 1, v23);
              }
              *((void *)v23 + 2) = v35 + 1;
              *(_DWORD *)&v23[4 * v35 + 32] = v33;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v25 = sub_1B6397840(0, *((void *)v25 + 2) + 1, 1, v25);
              }
              unint64_t v37 = *((void *)v25 + 2);
              unint64_t v36 = *((void *)v25 + 3);
              if (v37 >= v36 >> 1) {
                unint64_t v25 = sub_1B6397840(v36 > 1, v37 + 1, 1, v25);
              }
              *((void *)v25 + 2) = v37 + 1;
              *(_DWORD *)&v25[4 * v37 + 32] = v63;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                id v26 = sub_1B6397840(0, *((void *)v26 + 2) + 1, 1, v26);
              }
              unint64_t v39 = *((void *)v26 + 2);
              unint64_t v38 = *((void *)v26 + 3);
              if (v39 >= v38 >> 1) {
                id v26 = sub_1B6397840(v38 > 1, v39 + 1, 1, v26);
              }
              *((void *)v26 + 2) = v39 + 1;
              *(_DWORD *)&v26[4 * v39 + 32] = DWORD1(v63);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v27 = sub_1B6397840(0, *((void *)v27 + 2) + 1, 1, v27);
              }
              unint64_t v41 = *((void *)v27 + 2);
              unint64_t v40 = *((void *)v27 + 3);
              if (v41 >= v40 >> 1) {
                uint64_t v27 = sub_1B6397840(v40 > 1, v41 + 1, 1, v27);
              }
              *((void *)v27 + 2) = v41 + 1;
              *(_DWORD *)&v27[4 * v41 + 32] = DWORD2(v63);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v28 = sub_1B6397840(0, *((void *)v28 + 2) + 1, 1, v28);
              }
              unint64_t v43 = *((void *)v28 + 2);
              unint64_t v42 = *((void *)v28 + 3);
              if (v43 >= v42 >> 1) {
                uint64_t v28 = sub_1B6397840(v42 > 1, v43 + 1, 1, v28);
              }
              *((void *)v28 + 2) = v43 + 1;
              *(_DWORD *)&v28[4 * v43 + 32] = HIDWORD(v63);

              uint64_t v20 = v60;
              unint64_t v21 = v61;
            }
            else
            {
            }
            ++v22;
            v24 += 32;
          }
          while (v20 != v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t v20 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        unint64_t v21 = v16;
        if (v20) {
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v23 = (char *)MEMORY[0x1E4FBC860];
      unint64_t v25 = (char *)MEMORY[0x1E4FBC860];
      id v26 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v27 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v28 = (char *)MEMORY[0x1E4FBC860];
LABEL_43:
      uint64_t v44 = **(void **)(v54 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
      sub_1B62F7F54(0, &qword_1E9DD6578, (uint64_t)&type metadata for KeyframeTimeline, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B6E85730;
      *(void *)(inited + 32) = v25;
      *(void *)(inited + 40) = v23;
      *(void *)(inited + 48) = 0;
      *(unsigned char *)(inited + 56) = 1;
      *(void *)(inited + 64) = v26;
      *(void *)(inited + 72) = v23;
      *(void *)(inited + 80) = 0;
      *(unsigned char *)(inited + 88) = 1;
      *(void *)(inited + 96) = v27;
      *(void *)(inited + 104) = v23;
      *(void *)(inited + 112) = 0;
      *(unsigned char *)(inited + 120) = 1;
      *(void *)(inited + 128) = v28;
      *(void *)(inited + 136) = v23;
      *(void *)(inited + 144) = 0;
      *(unsigned char *)(inited + 152) = 1;
      swift_bridgeObjectRetain_n();
      objc_msgSend(v59, sel_duration);
      float v47 = v46;
      swift_retain();
      v65[0] = 1;
      uint64_t v48 = sub_1B6D80864(0x100000000uLL, v44, v55, 0xFFFFFFFFLL, inited, v44, v56, v57, v47);
      swift_release();
      swift_setDeallocating();
      swift_arrayDestroy();
      unint64_t v49 = *(char **)(v58 + 64);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v58 + 64) = v49;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v49 = sub_1B633F784(0, *((void *)v49 + 2) + 1, 1, v49);
        *(void *)(v58 + 64) = v49;
      }
      unint64_t v52 = *((void *)v49 + 2);
      unint64_t v51 = *((void *)v49 + 3);
      uint64_t v53 = v59;
      if (v52 >= v51 >> 1)
      {
        unint64_t v49 = sub_1B633F784(v51 > 1, v52 + 1, 1, v49);
        uint64_t v53 = v59;
      }
      *((void *)v49 + 2) = v52 + 1;
      *(void *)&v49[8 * v52 + 32] = v48;
      *(void *)(v58 + 64) = v49;

      return;
    }

    swift_bridgeObjectRelease();
  }
  else
  {
  }
}

void sub_1B6B6A858(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    id v9 = (void *)v8;
    id v20 = a2;
    sub_1B6B6F8B8(a1, v9, a3, a4);

    return;
  }
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (!v10) {
    return;
  }
  unint64_t v11 = (void *)v10;
  id v12 = a2;
  id v13 = objc_msgSend(v11, sel_animations);
  if (v13)
  {
    id v14 = v13;
    sub_1B63989B8(0, &qword_1E9DD6570);
    unint64_t v15 = sub_1B6E31C28();

    if (!(v15 >> 62)) {
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v15 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62))
    {
LABEL_8:
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v16) {
        goto LABEL_17;
      }
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1B6E32C18();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_17;
  }
LABEL_9:
  for (uint64_t i = 0; i != v16; ++i)
  {
    if ((v15 & 0xC000000000000001) != 0) {
      id v18 = (id)MEMORY[0x1BA9B4580](i, v15);
    }
    else {
      id v18 = *(id *)(v15 + 8 * i + 32);
    }
    uint64_t v19 = v18;
    sub_1B6B6A858(a1, v18, a3, a4);
  }
LABEL_17:

  swift_bridgeObjectRelease();
}

uint64_t sub_1B6B6AA6C(void *a1, id a2, uint64_t a3, char *a4, uint64_t *a5)
{
  id v8 = objc_msgSend(a2, sel_name);
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = sub_1B6E31798();
    unint64_t v12 = v11;
  }
  else
  {
    id v13 = objc_msgSend(a1, sel_name);
    if (v13)
    {
      id v14 = v13;
      sub_1B6E31798();
    }
    else
    {
      sub_1B6E33098();
    }
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v10 = 0x2D6873656DLL;
    unint64_t v12 = 0xE500000000000000;
  }
  unint64_t v15 = sub_1B6B68298(a2, (uint64_t)a1, a3);
  if (v15)
  {
    uint64_t v16 = (uint64_t)v15;
    unint64_t v61 = a5;
    uint64_t v17 = *a5;
    ++*(void *)(*a5 + 56);
    id v18 = objc_msgSend(a2, sel_materials);
    sub_1B63989B8(0, &qword_1E9DD06B0);
    unint64_t v19 = sub_1B6E31C28();

    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      uint64_t v58 = v10;
      uint64_t v59 = v12;
      if (v20) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v58 = v10;
      uint64_t v59 = v12;
      if (v20)
      {
LABEL_10:
        id v60 = a2;
        uint64_t v21 = 0;
        unint64_t v63 = v19 & 0xC000000000000001;
        uint64_t v22 = (char *)MEMORY[0x1E4FBC860];
        unint64_t v65 = v19;
        uint64_t v66 = v16;
        uint64_t v64 = v20;
        while (1)
        {
          if (v63) {
            id v23 = (id)MEMORY[0x1BA9B4580](v21, v19);
          }
          else {
            id v23 = *(id *)(v19 + 8 * v21 + 32);
          }
          uint64_t v24 = v23;
          uint64_t v25 = *(void *)(v17 + 24);
          if (!*(void *)(v25 + 16)) {
            goto LABEL_18;
          }
          id v26 = v23;
          swift_bridgeObjectRetain();
          unint64_t v27 = sub_1B69FB5B4((uint64_t)v26);
          if ((v28 & 1) == 0) {
            break;
          }
          id v29 = (_DWORD *)(*(void *)(v25 + 56) + 8 * v27);
          LODWORD(v30) = *v29;
          LODWORD(v31) = v29[1];

          swift_bridgeObjectRelease();
LABEL_31:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v22 = sub_1B633F784(0, *((void *)v22 + 2) + 1, 1, v22);
          }
          unint64_t v46 = *((void *)v22 + 2);
          unint64_t v45 = *((void *)v22 + 3);
          if (v46 >= v45 >> 1) {
            uint64_t v22 = sub_1B633F784(v45 > 1, v46 + 1, 1, v22);
          }
          ++v21;
          *((void *)v22 + 2) = v46 + 1;
          float v47 = &v22[8 * v46];
          *((_DWORD *)v47 + 8) = v30;
          *((_DWORD *)v47 + 9) = v31;

          unint64_t v19 = v65;
          uint64_t v16 = v66;
          if (v64 == v21) {
            goto LABEL_40;
          }
        }

        swift_bridgeObjectRelease();
LABEL_18:
        unint64_t v30 = sub_1B6B6BA34(v24, a3, a4, v61);
        id v32 = objc_msgSend(v24, sel_name);
        if (v32)
        {
          int v33 = v32;
          sub_1B6E31798();
        }
        else
        {
          id v34 = objc_msgSend(v60, sel_name);
          if (v34)
          {
            unint64_t v35 = v34;
            sub_1B6E31798();
          }
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
        }
        unint64_t v31 = HIDWORD(v30);
        if (v30 == 0xFFFFFFFF)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v36 = swift_retain();
          MEMORY[0x1F4188790](v36, v37);
          sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6B6F5D4);
          swift_bridgeObjectRelease();
          swift_release();
        }
        uint64_t v38 = *v61;
        id v39 = v24;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v68 = *(void *)(v38 + 24);
        *(void *)(v38 + 24) = 0x8000000000000000;
        sub_1B67E7C64(v30, v39, isUniquelyReferenced_nonNull_native);
        *(void *)(v38 + 24) = v68;

        swift_bridgeObjectRelease();
        uint64_t v17 = *v61;
        unint64_t v41 = *(char **)(*v61 + 64);
        char v42 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 64) = v41;
        if ((v42 & 1) == 0)
        {
          unint64_t v41 = sub_1B633F784(0, *((void *)v41 + 2) + 1, 1, v41);
          *(void *)(v17 + 64) = v41;
        }
        unint64_t v44 = *((void *)v41 + 2);
        unint64_t v43 = *((void *)v41 + 3);
        if (v44 >= v43 >> 1) {
          unint64_t v41 = sub_1B633F784(v43 > 1, v44 + 1, 1, v41);
        }
        *((void *)v41 + 2) = v44 + 1;
        *(void *)&v41[8 * v44 + 32] = v30;
        *(void *)(v17 + 64) = v41;
        goto LABEL_31;
      }
    }
    uint64_t v22 = (char *)MEMORY[0x1E4FBC860];
LABEL_40:
    swift_bridgeObjectRelease();
    unint64_t v49 = *(void **)(v16 + 40);
    uint64_t v50 = v49[2];
    if (v50)
    {
      unint64_t v51 = 0;
      uint64_t v52 = *((void *)v22 + 2);
      uint64_t v53 = 7;
      do
      {
        if (v52)
        {
          unint64_t v54 = v51 % *((void *)v22 + 2);
          char v55 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v16 + 40) = v49;
          if ((v55 & 1) == 0) {
            goto LABEL_47;
          }
        }
        else
        {
          char v56 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v54 = 0;
          *(void *)(v16 + 40) = v49;
          if ((v56 & 1) == 0) {
LABEL_47:
          }
            unint64_t v49 = sub_1B6C168F0(v49);
        }
        ++v51;
        v49[v53] = v54;
        *(void *)(v16 + 40) = v49;
        v53 += 16;
      }
      while (v50 != v51);
    }
    uint64_t v48 = sub_1B6D7FE64(0x100000000uLL, **(void **)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues), v16, (uint64_t)v22, v58, v59);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v48 = 0xFFFFFFFFLL;
  }
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t sub_1B6B6B0B4(unint64_t a1, int a2, id a3, void *a4, id *a5, float32x4_t *a6, void *a7, uint64_t a8)
{
  id v13 = objc_msgSend(a3, sel_data);
  uint64_t v14 = sub_1B6E30FD8();
  unint64_t v16 = v15;

  switch(v16 >> 62)
  {
    case 1uLL:
      uint64_t result = sub_1B62C2360(v14, v16);
      uint64_t v18 = (uint64_t)(0xFFFFFFFF00000001 * v14) >> 32;
      if (!v18) {
        return result;
      }
      goto LABEL_7;
    case 2uLL:
      uint64_t v20 = *(void *)(v14 + 16);
      uint64_t v19 = *(void *)(v14 + 24);
      uint64_t result = sub_1B62C2360(v14, v16);
      uint64_t v18 = v19 - v20;
      if (v19 != v20) {
        goto LABEL_7;
      }
      return result;
    case 3uLL:
      return sub_1B62C2360(v14, v16);
    default:
      uint64_t result = sub_1B62C2360(v14, v16);
      uint64_t v18 = BYTE6(v16);
      if (!BYTE6(v16)) {
        return result;
      }
LABEL_7:
      id v21 = objc_msgSend(a3, sel_bytesPerIndex);
      if (v21 == (id)1)
      {
        int v22 = 1;
        uint64_t v23 = 49;
      }
      else if (v21 == (id)4)
      {
        int v22 = 0;
        uint64_t v23 = 33;
      }
      else
      {
        if (v21 != (id)2)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          swift_retain();
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          uint64_t v89 = 0xD00000000000001ELL;
          uint64_t v90 = 0x80000001B6F4B3E0;
          id v91 = objc_msgSend(a3, sel_bytesPerIndex);
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
LABEL_23:
          uint64_t v25 = v89;
          int v26 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v89 = 0;
          swift_retain();
          sub_1B6B33E34(v26, &v89, v25, v90);
          swift_release();
          swift_bridgeObjectRelease();
          return swift_release();
        }
        int v22 = 0;
        uint64_t v23 = 41;
      }
      switch((unint64_t)objc_msgSend(a3, sel_primitiveType))
      {
        case 0uLL:
          uint64_t v24 = 3 * (void)objc_msgSend(a3, sel_primitiveCount);
          if (v22) {
            goto LABEL_32;
          }
          goto LABEL_29;
        case 1uLL:
          uint64_t v24 = (uint64_t)objc_msgSend(a3, sel_primitiveCount) + 2;
          if (v22) {
            goto LABEL_32;
          }
          goto LABEL_29;
        case 2uLL:
          uint64_t v24 = 2 * (void)objc_msgSend(a3, sel_primitiveCount);
          if (!v22) {
            goto LABEL_29;
          }
          goto LABEL_32;
        case 3uLL:
          uint64_t v24 = (uint64_t)objc_msgSend(a3, sel_primitiveCount);
          if (v22)
          {
LABEL_32:
            uint64_t v82 = v24;
            id v28 = objc_msgSend(a3, sel_data);
            uint64_t v29 = sub_1B6E30FD8();
            unint64_t v31 = v30;

            unint64_t v80 = a1;
            switch(v31 >> 62)
            {
              case 1uLL:
                sub_1B62C2360(v29, v31);
                unint64_t v32 = (uint64_t)(0xFFFFFFFF00000001 * v29) >> 32;
                break;
              case 2uLL:
                uint64_t v33 = *(void *)(v29 + 16);
                uint64_t v34 = *(void *)(v29 + 24);
                sub_1B62C2360(v29, v31);
                unint64_t v32 = v34 - v33;
                break;
              case 3uLL:
                sub_1B62C2360(v29, v31);
                unint64_t v32 = 0;
                break;
              default:
                sub_1B62C2360(v29, v31);
                unint64_t v32 = BYTE6(v31);
                break;
            }
            uint64_t v35 = sub_1B6640DD0(0, v32);
            id v36 = objc_msgSend(a3, sel_data);
            uint64_t v37 = sub_1B6E30FD8();
            unint64_t v39 = v38;

            switch(v39 >> 62)
            {
              case 1uLL:
                sub_1B62C2360(v37, v39);
                unint64_t v40 = (uint64_t)(0xFFFFFFFF00000001 * v37) >> 32;
                goto LABEL_41;
              case 2uLL:
                uint64_t v88 = a4;
                unint64_t v41 = a7;
                uint64_t v43 = *(void *)(v37 + 16);
                uint64_t v42 = *(void *)(v37 + 24);
                sub_1B62C2360(v37, v39);
                unint64_t v40 = v42 - v43;
                a7 = v41;
                a4 = v88;
                goto LABEL_41;
              case 3uLL:
                sub_1B62C2360(v37, v39);
                goto LABEL_60;
              default:
                sub_1B62C2360(v37, v39);
                unint64_t v40 = BYTE6(v39);
LABEL_41:
                if (!v40) {
                  goto LABEL_60;
                }
                if (swift_isUniquelyReferenced_nonNull_native())
                {
                  if (v40 < 8)
                  {
LABEL_44:
                    unint64_t v44 = 0;
                    goto LABEL_59;
                  }
                }
                else
                {
                  uint64_t v35 = (uint64_t)sub_1B6C16828(v35);
                  if (v40 < 8) {
                    goto LABEL_44;
                  }
                }
                if (v35 + 32 < v80 + v40 && v35 + 2 * v40 + 32 > v80)
                {
                  unint64_t v44 = 0;
                  goto LABEL_59;
                }
                if (v40 >= 0x20)
                {
                  unint64_t v44 = v40 & 0xFFFFFFFFFFFFFFE0;
                  unint64_t v45 = (uint8x8_t *)(v80 + 16);
                  unint64_t v46 = (uint16x8_t *)(v35 + 64);
                  unint64_t v47 = v40 & 0xFFFFFFFFFFFFFFE0;
                  do
                  {
                    uint8x16_t v48 = *(uint8x16_t *)v45[-2].i8;
                    uint16x8_t v49 = vmovl_u8(*v45);
                    uint16x8_t v50 = vmovl_high_u8(*(uint8x16_t *)v45->i8);
                    v46[-2] = vmovl_u8(*(uint8x8_t *)v48.i8);
                    v46[-1] = vmovl_high_u8(v48);
                    *unint64_t v46 = v49;
                    v46[1] = v50;
                    v46 += 4;
                    v45 += 4;
                    v47 -= 32;
                  }
                  while (v47);
                  if (v40 == v44) {
                    goto LABEL_60;
                  }
                  if ((v40 & 0x18) == 0)
                  {
                    do
                    {
LABEL_59:
                      *(_WORD *)(v35 + 2 * v44 + 32) = *(unsigned __int8 *)(v80 + v44);
                      ++v44;
                    }
                    while (v40 != v44);
                    goto LABEL_60;
                  }
                }
                else
                {
                  unint64_t v44 = 0;
                }
                unint64_t v51 = v44;
                unint64_t v44 = v40 & 0xFFFFFFFFFFFFFFF8;
                uint64_t v52 = (uint8x8_t *)(v80 + v51);
                uint64_t v53 = 2 * v51 + 32;
                unint64_t v54 = v51 - (v40 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  uint8x8_t v55 = *v52++;
                  *(uint16x8_t *)(v35 + v53) = vmovl_u8(v55);
                  v53 += 16;
                  v54 += 8;
                }
                while (v54);
                if (v40 != v44) {
                  goto LABEL_59;
                }
LABEL_60:
                v18 *= 2;
                id v27 = objc_msgSend(a4, sel_newBufferWithBytes_length_options_, v35 + 32, v18, 0);
                swift_bridgeObjectRelease();
                uint64_t v23 = 41;
                uint64_t v24 = v82;
                id v87 = a5;
                if (v27) {
                  goto LABEL_61;
                }
                goto LABEL_62;
            }
          }
LABEL_29:
          id v27 = objc_msgSend(a4, sel_newBufferWithBytes_length_options_, a1, v18, 0);
          id v87 = a5;
          if (v27)
          {
LABEL_61:
            uint64_t v89 = 0x20746E656D656C65;
            uint64_t v90 = 0xE800000000000000;
            id v91 = *v87;
            swift_unknownObjectRetain();
            sub_1B6E33098();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            char v56 = (void *)sub_1B6E31768();
            swift_bridgeObjectRelease();
            objc_msgSend(v27, sel_setLabel_, v56);
            swift_unknownObjectRelease();
          }
LABEL_62:
          a6[2].i64[0] = (uint64_t)v27;
          a6[2].i64[1] = 0;
          a6[3].i64[0] = v18;
          a6[3].i64[1] = 0;
          a6[4].i8[0] = 0;
          swift_unknownObjectRetain_n();
          swift_unknownObjectRelease();
          uint64_t v57 = 4;
          if (v23 != 33) {
            uint64_t v57 = 2;
          }
          a6[4].i64[1] = v24;
          a6[5].i64[0] = v57;
          objc_msgSend(a7, sel_boundingBox);
          float32x4_t v83 = v58;
          objc_msgSend(a7, sel_boundingBox);
          float32x4_t v59 = v83;
          v59.i32[3] = 1.0;
          v60.i32[3] = 1.0;
          float32x4_t v61 = vaddq_f32(v59, v60);
          float32x4_t v62 = v59;
          v59.i64[0] = 0x3F0000003F000000;
          v59.i64[1] = 0x3F0000003F000000;
          float32x4_t v81 = vmulq_f32(vsubq_f32(v60, v62), v59);
          float32x4_t v84 = vmulq_f32(v61, v59);
          a6[6] = v84;
          a6[7] = v81;
          uint64_t v63 = a6->i64[1];
          uint64_t v64 = a6[1].i64[0];
          uint64_t v65 = a6[1].i64[1];
          uint64_t v66 = a6[2].i64[0];
          uint64_t v78 = a6[2].i64[1];
          uint64_t v79 = a6->i64[0];
          uint64_t v76 = a6[3].i64[1];
          uint64_t v77 = a6[3].i64[0];
          __int8 v75 = a6[4].i8[0];
          uint64_t v67 = a6[5].i64[1];
          uint64_t v73 = a6[5].i64[0];
          uint64_t v74 = a6[4].i64[1];
          uint64_t v68 = *(void **)(a8 + 40);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(a8 + 40) = v68;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v68 = sub_1B68C5194(0, v68[2] + 1, 1, v68);
            *(void *)(a8 + 40) = v68;
          }
          unint64_t v71 = v68[2];
          unint64_t v70 = v68[3];
          if (v71 >= v70 >> 1)
          {
            uint64_t v68 = sub_1B68C5194(v70 > 1, v71 + 1, 1, v68);
            *(void *)(a8 + 40) = v68;
          }
          void v68[2] = v71 + 1;
          uint64_t v72 = (float32x4_t *)&v68[16 * v71];
          v72[2].i64[0] = v79;
          v72[2].i64[1] = v63;
          v72[3].i64[0] = v64;
          v72[3].i64[1] = v65;
          v72[4].i64[0] = v66;
          v72[4].i64[1] = v78;
          v72[5].i64[0] = v77;
          v72[5].i64[1] = v76;
          v72[6].i8[0] = v75;
          v72[6].i64[1] = v74;
          v72[7].i64[0] = v73;
          v72[7].i64[1] = v67;
          v72[8] = v84;
          v72[9] = v81;
          swift_unknownObjectRelease();
          *id v87 = (char *)*v87 + 1;
          uint64_t result = swift_unknownObjectRelease();
          break;
        default:
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          uint64_t v89 = 0;
          uint64_t v90 = 0xE000000000000000;
          swift_retain();
          sub_1B6E328C8();
          sub_1B6E31948();
          id v91 = objc_msgSend(a3, sel_primitiveType);
          type metadata accessor for VFXMeshPrimitiveType(0);
          sub_1B6E32B18();
          goto LABEL_23;
      }
      return result;
  }
}

uint64_t sub_1B6B6BA34(void *a1, uint64_t a2, char *a3, uint64_t *a4)
{
  type metadata accessor for PBRParameters();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(void *)(v8 + 32) = 0xFFFFFFFFLL;
  *(_DWORD *)(v8 + 40) = 16777473;
  *(unsigned char *)(v8 + 44) = 1;
  *(_OWORD *)(v8 + 48) = xmmword_1B6E4F490;
  *(_OWORD *)(v8 + 64) = 0u;
  *(void *)(v8 + 80) = 0xFFFFFFFFLL;
  *(_DWORD *)(v8 + 88) = 16777473;
  *(unsigned char *)(v8 + 92) = 1;
  *(_OWORD *)(v8 + 96) = xmmword_1B6E4F490;
  *(void *)(v8 + 112) = 0xFFFFFFFFLL;
  *(_DWORD *)(v8 + 120) = 16777473;
  *(unsigned char *)(v8 + 124) = 1;
  *(_DWORD *)(v8 + 128) = 0;
  *(_OWORD *)(v8 + 144) = xmmword_1B6E4F490;
  *(void *)(v8 + 160) = 0xFFFFFFFFLL;
  *(_DWORD *)(v8 + 168) = 16777473;
  *(unsigned char *)(v8 + 172) = 1;
  *(_DWORD *)(v8 + 176) = 0;
  *(_OWORD *)(v8 + 192) = xmmword_1B6E4F490;
  *(void *)(v8 + 208) = 0xFFFFFFFFLL;
  *(_DWORD *)(v8 + 216) = 16777473;
  *(unsigned char *)(v8 + 220) = 1;
  *(_DWORD *)(v8 + 224) = 1065353216;
  *(_OWORD *)(v8 + 240) = xmmword_1B6E4F490;
  *(void *)(v8 + 256) = 0xFFFFFFFFLL;
  *(_DWORD *)(v8 + 264) = 16777473;
  *(unsigned char *)(v8 + 268) = 1;
  *(_DWORD *)(v8 + 272) = 1065353216;
  *(_OWORD *)(v8 + 288) = xmmword_1B6E4F490;
  *(_WORD *)(v8 + 304) = 0;
  id v9 = objc_msgSend(a1, sel_diffuse);
  unint64_t v10 = sub_1B6B6EB7C(v9, a2, a3, a4);
  long long v54 = v11;
  long long v55 = v12;
  unint64_t v13 = v10;
  uint64_t v15 = v14;

  *(_OWORD *)(v8 + 16) = v54;
  *(void *)(v8 + 32) = v13;
  *(unsigned char *)(v8 + 40) = v15 & 1;
  *(unsigned char *)(v8 + 41) = BYTE1(v15) & 1;
  *(unsigned char *)(v8 + 42) = BYTE2(v15);
  *(unsigned char *)(v8 + 43) = BYTE3(v15);
  *(unsigned char *)(v8 + 44) = BYTE4(v15);
  *(_OWORD *)(v8 + 48) = v55;
  id v16 = objc_msgSend(a1, sel_metalness);
  v58[1] = 0;
  v58[2] = 0;
  v58[0] = 70;
  char v59 = -2;
  uint64_t v61 = 0;
  uint64_t v62 = 0;
  uint64_t v60 = 0;
  __int16 v63 = 768;
  float v17 = sub_1B6B6BF1C(v16, a2, a3, (uint64_t)v58, a4);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  float v22 = v17;

  *(void *)(v8 + 160) = v19;
  *(unsigned char *)(v8 + 168) = v21 & 1;
  *(unsigned char *)(v8 + 169) = BYTE1(v21) & 1;
  *(unsigned char *)(v8 + 170) = BYTE2(v21);
  *(unsigned char *)(v8 + 171) = BYTE3(v21);
  *(unsigned char *)(v8 + 172) = BYTE4(v21);
  *(float *)(v8 + 176) = v22;
  *(_OWORD *)(v8 + 192) = xmmword_1B6E4F490;
  id v23 = objc_msgSend(a1, sel_roughness);
  float v24 = sub_1B6B6BF1C(v23, a2, a3, (uint64_t)v58, a4);
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  float v29 = v24;

  *(void *)(v8 + 112) = v26;
  *(unsigned char *)(v8 + 120) = v28 & 1;
  *(unsigned char *)(v8 + 121) = BYTE1(v28) & 1;
  *(unsigned char *)(v8 + 122) = BYTE2(v28);
  *(unsigned char *)(v8 + 123) = BYTE3(v28);
  *(unsigned char *)(v8 + 124) = BYTE4(v28);
  *(float *)(v8 + 128) = v29;
  *(_OWORD *)(v8 + 144) = xmmword_1B6E4F490;
  id v30 = objc_msgSend(a1, sel_normal);
  float v31 = sub_1B6B6BF1C(v30, a2, a3, (uint64_t)v58, a4);
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  float v36 = v31;

  *(void *)(v8 + 256) = v33;
  *(unsigned char *)(v8 + 264) = v35 & 1;
  *(unsigned char *)(v8 + 265) = BYTE1(v35) & 1;
  *(unsigned char *)(v8 + 266) = BYTE2(v35);
  *(unsigned char *)(v8 + 267) = BYTE3(v35);
  *(unsigned char *)(v8 + 268) = BYTE4(v35);
  *(float *)(v8 + 272) = v36;
  *(_OWORD *)(v8 + 288) = xmmword_1B6E4F490;
  id v37 = objc_msgSend(a1, sel_ambientOcclusion);
  float v38 = sub_1B6B6BF1C(v37, a2, a3, (uint64_t)v58, a4);
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  float v43 = v38;

  *(void *)(v8 + 208) = v40;
  *(unsigned char *)(v8 + 216) = v42 & 1;
  *(unsigned char *)(v8 + 217) = BYTE1(v42) & 1;
  *(unsigned char *)(v8 + 218) = BYTE2(v42);
  *(unsigned char *)(v8 + 219) = BYTE3(v42);
  *(unsigned char *)(v8 + 220) = BYTE4(v42);
  *(float *)(v8 + 224) = v43;
  *(_OWORD *)(v8 + 240) = xmmword_1B6E4F490;
  id v44 = objc_msgSend(a1, sel_emission);
  unint64_t v45 = sub_1B6B6EB7C(v44, a2, a3, a4);
  long long v56 = v46;
  long long v57 = v47;
  unint64_t v48 = v45;
  uint64_t v50 = v49;

  *(_OWORD *)(v8 + 64) = v56;
  *(void *)(v8 + 80) = v48;
  *(unsigned char *)(v8 + 88) = v50 & 1;
  *(unsigned char *)(v8 + 89) = BYTE1(v50) & 1;
  *(unsigned char *)(v8 + 90) = BYTE2(v50);
  *(unsigned char *)(v8 + 91) = BYTE3(v50);
  *(unsigned char *)(v8 + 92) = BYTE4(v50);
  *(_OWORD *)(v8 + 96) = v57;
  *(unsigned char *)(v8 + 305) = objc_msgSend(a1, sel_isDoubleSided);
  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v51 = sub_1B62FFCAC(140);
  *(void *)(v51 + 88) = sub_1B6D2EFB4;
  *(void *)(v51 + 96) = 0;
  swift_release();
  uint64_t v52 = sub_1B6D7F3F8(0x100000000uLL, **(void **)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues), 0, v51, 0x100000000uLL, -1.0);
  swift_release();
  swift_retain();
  sub_1B6C0327C(v52, a2, v8);
  swift_release_n();
  return v52;
}

float sub_1B6B6BF1C(void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t *a5)
{
  sub_1B6B6C560(a1, a2, a3, a4, a5);
  if (objc_msgSend(a1, sel_contents))
  {
    sub_1B6E32718();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  uint64_t v6 = MEMORY[0x1E4FBC840];
  uint64_t v7 = MEMORY[0x1E4FBC840] + 8;
  sub_1B6B6F60C((uint64_t)&v25, (uint64_t)v27, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62F7F54);
  if (v28)
  {
    sub_1B63989B8(0, &qword_1E9DD6558);
    if (swift_dynamicCast())
    {
      double v8 = sub_1B684C884((CGColor *)objc_msgSend(v24, sel_CGColor));
      float v23 = *(float *)&v8;
      objc_msgSend(a1, sel_intensity);
      float v10 = v9;

      float v11 = v10 * v23;
      goto LABEL_16;
    }
  }
  else
  {
    sub_1B639573C((uint64_t)v27, (uint64_t)&qword_1EB980F60, v7, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62F7F54);
  }
  if (objc_msgSend(a1, sel_contents))
  {
    sub_1B6E32718();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  sub_1B6B6F60C((uint64_t)&v25, (uint64_t)v27, (uint64_t)&qword_1EB980F60, v6 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62F7F54);
  if (v28)
  {
    if (swift_dynamicCast())
    {
      objc_msgSend(a1, sel_intensity);
      float v11 = *(float *)&v24 * v12;
      goto LABEL_16;
    }
  }
  else
  {
    sub_1B639573C((uint64_t)v27, (uint64_t)&qword_1EB980F60, v6 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62F7F54);
  }
  objc_msgSend(a1, sel_intensity);
  float v11 = v13;
LABEL_16:
  if (qword_1E9DCC598 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1E9E49638;
  id v15 = objc_msgSend(a1, sel_magnificationFilter);
  if (*(void *)(v14 + 16)) {
    sub_1B69FB654((uint64_t)v15);
  }
  id v16 = objc_msgSend(a1, sel_magnificationFilter);
  if (*(void *)(v14 + 16)) {
    sub_1B69FB654((uint64_t)v16);
  }
  if (qword_1E9DCC5A0 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1E9E49640;
  id v18 = objc_msgSend(a1, sel_magnificationFilter);
  if (*(void *)(v17 + 16)) {
    sub_1B69FB654((uint64_t)v18);
  }
  if (qword_1E9DCC5A8 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_1E9E49648;
  id v20 = objc_msgSend(a1, sel_wrapS);
  if (*(void *)(v19 + 16)) {
    sub_1B69FB654((uint64_t)v20);
  }
  id v21 = objc_msgSend(a1, sel_wrapT);
  if (*(void *)(v19 + 16)) {
    sub_1B69FB654((uint64_t)v21);
  }
  return v11;
}

uint64_t sub_1B6B6C394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1B6E30F48();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1B6E30DA8() & 1) == 0) {
    goto LABEL_3;
  }
  sub_1B6E30DD8();
  id v8 = objc_allocWithZone(NSString);
  float v9 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithString_, v9);

  LODWORD(v9) = objc_msgSend(v10, sel_isAbsolutePath);
  if (!v9)
  {
    sub_1B6E30EC8();
    sub_1B6E30DD8();
    sub_1B6E30EB8();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v7, v4);
  }
  else
  {
LABEL_3:
    float v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    return v11(a2, a1, v4);
  }
}

unint64_t sub_1B6B6C560(void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v111 = a5;
  uint64_t v107 = a4;
  uint64_t v108 = a2;
  char v109 = a3;
  uint64_t v6 = sub_1B6E30F48();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  int v106 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v112 = (uint64_t)&v104 - v12;
  MEMORY[0x1F4188790](v13, v14);
  id v16 = (char *)&v104 - v15;
  MEMORY[0x1F4188790](v17, v18);
  id v20 = (char *)&v104 - v19;
  MEMORY[0x1F4188790](v21, v22);
  id v24 = (char *)&v104 - v23;
  sub_1B6B6E340(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v25 - 8, v26);
  uint64_t v110 = (char *)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28, v29);
  uint64_t v105 = (void (*)(uint64_t, uint64_t))((char *)&v104 - v30);
  MEMORY[0x1F4188790](v31, v32);
  uint64_t v34 = (char *)&v104 - v33;
  double v37 = MEMORY[0x1F4188790](v35, v36);
  uint64_t v39 = (char *)&v104 - v38;
  char v114 = (void (**)(void, void, void))v7;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v7 + 56);
  v40((char *)&v104 - v38, 1, 1, v6, v37);
  id v113 = a1;
  if (objc_msgSend(a1, sel_contents))
  {
    sub_1B6E32718();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v117 = 0u;
    long long v118 = 0u;
  }
  uint64_t v41 = MEMORY[0x1E4FBC840] + 8;
  sub_1B6B6F60C((uint64_t)&v117, (uint64_t)v119, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62F7F54);
  if (v120)
  {
    int v42 = swift_dynamicCast();
    ((void (*)(char *, void, uint64_t, uint64_t))v40)(v34, v42 ^ 1u, 1, v6);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v114[6])(v34, 1, v6) != 1)
    {
      sub_1B639573C((uint64_t)v39, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6B6E340);
      float v43 = v40;
      id v44 = v16;
      unint64_t v45 = v24;
      long long v46 = v20;
      long long v47 = v39;
      unint64_t v48 = (void (*)(char *, char *, uint64_t))v114[4];
      v48(v45, v34, v6);
      v48(v47, v45, v6);
      uint64_t v39 = v47;
      id v20 = v46;
      id v16 = v44;
      uint64_t v40 = v43;
      ((void (*)(char *, void, uint64_t, uint64_t))v43)(v39, 0, 1, v6);
      goto LABEL_9;
    }
  }
  else
  {
    sub_1B639573C((uint64_t)v119, (uint64_t)&qword_1EB980F60, v41, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62F7F54);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v40)(v34, 1, 1, v6);
  }
  sub_1B639573C((uint64_t)v34, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6B6E340);
LABEL_9:
  if (objc_msgSend(v113, sel_contents))
  {
    sub_1B6E32718();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v117 = 0u;
    long long v118 = 0u;
  }
  uint64_t v49 = MEMORY[0x1E4FBC840] + 8;
  sub_1B6B6F60C((uint64_t)&v117, (uint64_t)v119, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62F7F54);
  if (v120)
  {
    if (swift_dynamicCast())
    {
      uint64_t v50 = v16;
      uint64_t v51 = v40;
      uint64_t v52 = (uint64_t)v105;
      sub_1B6E30E48();
      swift_bridgeObjectRelease();
      uint64_t v53 = MEMORY[0x1E4F276F0];
      uint64_t v54 = MEMORY[0x1E4FBB718];
      sub_1B639573C((uint64_t)v39, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6B6E340);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v51)(v52, 0, 1, v6);
      id v16 = v50;
      sub_1B6B6F60C(v52, (uint64_t)v39, (uint64_t)&qword_1EB9857F0, v53, v54, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B6B6E340);
    }
  }
  else
  {
    sub_1B639573C((uint64_t)v119, (uint64_t)&qword_1EB980F60, v49, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62F7F54);
  }
  uint64_t v55 = (uint64_t)v110;
  sub_1B663AB08((uint64_t)v39, (uint64_t)v110);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v114[6])(v55, 1, v6) != 1)
  {
    uint64_t v110 = v39;
    long long v56 = v114;
    ((void (**)(char *, uint64_t, uint64_t))v114)[4](v20, v55, v6);
    sub_1B6B6C394((uint64_t)v20, (uint64_t)v16);
    uint64_t v57 = *v111;
    float32x4_t v58 = (void (*)(uint64_t, char *, uint64_t))v56[2];
    id v113 = v16;
    v58(v112, v16, v6);
    uint64_t v59 = *(void *)(v57 + 40);
    if (*(void *)(v59 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_1B69FB364(v112);
      if (v61)
      {
        uint64_t v62 = (_DWORD *)(*(void *)(v59 + 56) + 8 * v60);
        LODWORD(v64) = *v62;
        unint64_t v63 = v62[1];
        swift_bridgeObjectRelease();
        uint64_t v65 = (void (*)(uint64_t, uint64_t))v114[1];
        v65(v112, v6);
        v65((uint64_t)v113, v6);
        v65((uint64_t)v20, v6);
LABEL_36:
        sub_1B639573C((uint64_t)v110, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6B6E340);
        return v64 | (v63 << 32);
      }
      swift_bridgeObjectRelease();
    }
    char v109 = v20;
    long long v104 = (void (*)(uint64_t, id, uint64_t))v58;
    uint64_t v105 = (void (*)(uint64_t, uint64_t))v114[1];
    v105(v112, v6);
    uint64_t v74 = v107;
    uint64_t v75 = **(void **)(v108 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    uint64_t v76 = sub_1B6CF2910();
    char v114 = (void (**)(void, void, void))&v104;
    MEMORY[0x1F4188790](v76, v77);
    id v78 = v113;
    *(&v104 - 4) = (void (*)(uint64_t, id, uint64_t))v113;
    *((_WORD *)&v104 - 12) = 0;
    *(&v104 - 2) = (void (*)(uint64_t, id, uint64_t))v74;
    LOBYTE(v119[0]) = 1;
    uint64_t v80 = sub_1B6B6801C(v79, 0x100000000uLL, (uint64_t)sub_1B6835844, (uint64_t)(&v104 - 6), v75);
    uint64_t v81 = (uint64_t)v106;
    unint64_t v82 = v80;
    swift_bridgeObjectRelease();
    unint64_t v63 = HIDWORD(v82);
    sub_1B6CF9FDC(v74, v82);
    float32x4_t v83 = v111;
    uint64_t v84 = *v111;
    v104(v81, v78, v6);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v119[0] = *(void *)(v84 + 40);
    *(void *)(v84 + 40) = 0x8000000000000000;
    char v114 = (void (**)(void, void, void))v82;
    sub_1B67E7ACC(v82, v81, isUniquelyReferenced_nonNull_native);
    *(void *)(v84 + 40) = v119[0];
    swift_bridgeObjectRelease();
    uint64_t v86 = v81;
    id v87 = (void (*)(id, uint64_t))v105;
    v105(v86, v6);
    uint64_t v88 = *v83;
    uint64_t v89 = *(char **)(*v83 + 64);
    char v90 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v88 + 64) = v89;
    if ((v90 & 1) == 0)
    {
      uint64_t v89 = sub_1B633F784(0, *((void *)v89 + 2) + 1, 1, v89);
      *(void *)(v88 + 64) = v89;
    }
    unint64_t v92 = *((void *)v89 + 2);
    unint64_t v91 = *((void *)v89 + 3);
    LODWORD(v64) = v114;
    if (v92 >= v91 >> 1) {
      uint64_t v89 = sub_1B633F784(v91 > 1, v92 + 1, 1, v89);
    }
    *((void *)v89 + 2) = v92 + 1;
    id v93 = &v89[8 * v92];
    *((_DWORD *)v93 + 8) = v64;
    *((_DWORD *)v93 + 9) = HIDWORD(v82);
    *(void *)(v88 + 64) = v89;
    v87(v113, v6);
    v87(v109, v6);
    goto LABEL_36;
  }
  sub_1B639573C(v55, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6B6E340);
  if (objc_msgSend(v113, sel_contents))
  {
    sub_1B6E32718();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v117 = 0u;
    long long v118 = 0u;
  }
  uint64_t v66 = MEMORY[0x1E4FBC840] + 8;
  sub_1B6B6F60C((uint64_t)&v117, (uint64_t)v119, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62F7F54);
  if (!v120)
  {
    sub_1B639573C((uint64_t)v119, (uint64_t)&qword_1EB980F60, v66, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62F7F54);
    goto LABEL_29;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    sub_1B639573C((uint64_t)v39, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6B6E340);
    unint64_t v63 = 0;
    LODWORD(v64) = -1;
    return v64 | (v63 << 32);
  }
  uint64_t v67 = v115;
  unint64_t v68 = v116;
  uint64_t v69 = *v111;
  uint64_t v70 = *(void *)(*v111 + 32);
  if (*(void *)(v70 + 16))
  {
    sub_1B62FFBB0(v115, v116);
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1B69FB588(v67, v68);
    if (v72)
    {
      uint64_t v73 = (_DWORD *)(*(void *)(v70 + 56) + 8 * v71);
      LODWORD(v64) = *v73;
      unint64_t v63 = v73[1];
      swift_bridgeObjectRelease();
      sub_1B62C2360(v67, v68);
      sub_1B639573C((uint64_t)v39, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6B6E340);
      sub_1B62C2360(v67, v68);
      return v64 | (v63 << 32);
    }
    swift_bridgeObjectRelease();
    sub_1B62C2360(v67, v68);
  }
  uint64_t v95 = v107;
  uint64_t v96 = **(void **)(v108 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  uint64_t v97 = sub_1B6CF2910();
  sub_1B62FFBB0(v67, v68);
  LOBYTE(v119[0]) = 1;
  unint64_t v64 = sub_1B6D8040C((uint64_t)v97, 0x100000000uLL, v96, v67, v68);
  unint64_t v63 = HIDWORD(v64);
  sub_1B62C2360(v67, v68);
  swift_bridgeObjectRelease();
  sub_1B6CF9FDC(v95, v64);
  sub_1B62FFBB0(v67, v68);
  char v98 = swift_isUniquelyReferenced_nonNull_native();
  v119[0] = *(void *)(v69 + 32);
  *(void *)(v69 + 32) = 0x8000000000000000;
  sub_1B67E7998(v64, v67, v68, v98);
  *(void *)(v69 + 32) = v119[0];
  swift_bridgeObjectRelease();
  sub_1B62C2360(v67, v68);
  uint64_t v99 = *v111;
  uint64_t v100 = *(char **)(*v111 + 64);
  char v101 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v99 + 64) = v100;
  if ((v101 & 1) == 0)
  {
    uint64_t v100 = sub_1B633F784(0, *((void *)v100 + 2) + 1, 1, v100);
    *(void *)(v99 + 64) = v100;
  }
  unint64_t v103 = *((void *)v100 + 2);
  unint64_t v102 = *((void *)v100 + 3);
  if (v103 >= v102 >> 1) {
    uint64_t v100 = sub_1B633F784(v102 > 1, v103 + 1, 1, v100);
  }
  *((void *)v100 + 2) = v103 + 1;
  *(void *)&v100[8 * v103 + 32] = v64;
  *(void *)(v99 + 64) = v100;
  sub_1B62C2360(v67, v68);
  sub_1B639573C((uint64_t)v39, (uint64_t)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B6B6E340);
  return v64 | (v63 << 32);
}

void *sub_1B6B6D360()
{
  uint64_t result = sub_1B67F612C((uint64_t)&unk_1F0F6AB88);
  qword_1E9E49638 = (uint64_t)result;
  return result;
}

void *sub_1B6B6D388()
{
  uint64_t result = sub_1B67F61EC((uint64_t)&unk_1F0F6ABD8);
  qword_1E9E49640 = (uint64_t)result;
  return result;
}

void *sub_1B6B6D3B0()
{
  uint64_t result = sub_1B67F6218((uint64_t)&unk_1F0F6AB28);
  qword_1E9E49648 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for VFXCoreImporter()
{
  return self;
}

uint64_t type metadata accessor for VFXCoreImporter.AnimationInfo()
{
  return self;
}

uint64_t type metadata accessor for VFXCoreImporter.VFXImporterContext()
{
  return self;
}

uint64_t sub_1B6B6D444(char *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_1B6B6E3A4((uint64_t)a1, a2);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = (void *)v5;
  type metadata accessor for VFXCoreImporter.VFXImporterContext();
  uint64_t inited = (void *)swift_initStackObject();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  inited[2] = sub_1B67E0310(MEMORY[0x1E4FBC860]);
  inited[3] = sub_1B67E0424(v8);
  inited[4] = sub_1B67E0538(v8);
  inited[5] = sub_1B67E0638(v8);
  inited[6] = v8;
  inited[7] = 0;
  inited[8] = v8;
  uint64_t v18 = inited;
  unint64_t v9 = sub_1B6B69368(v6, a3, a1, (uint64_t *)&v18);
  if (v9 == 0xFFFFFFFF
    || (unint64_t v10 = v9, swift_retain(), v11 = sub_1B6960378(v10), v13 = v12, swift_release(), (v13 & 1) != 0))
  {

    swift_release();
    return 0;
  }
  uint64_t v14 = sub_1B695E724(v11);
  uint64_t v16 = v15;

  swift_release();
  if (!v16) {
    return 0;
  }
  return v14;
}

uint64_t sub_1B6B6D570(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  return sub_1B685224C(*a2, a2[1], a3);
}

void *sub_1B6B6D5A0(void *a1, __n128 *a2, unint64_t a3)
{
  __n128 v4 = *a2;
  unsigned __int8 v5 = a2[1].n128_u8[0];
  return sub_1B6B70EE8(a1, &v4, a3);
}

void *sub_1B6B6D5D4(void *a1, uint64_t a2, unint64_t a3)
{
  return sub_1B6B7119C(a1, a3);
}

uint64_t sub_1B6B6D5F4(void *a1)
{
  long long v131 = a1;
  sub_1B62E17B4();
  int v128 = v1;
  MEMORY[0x1F4188790](v1, v2);
  int v127 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_1B6E31098();
  uint64_t v141 = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126, v4);
  int v125 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for VertexLayoutDescriptor();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = 0x1000100000000;
  uint64_t v134 = inited + 16;
  *(void *)(inited + 24) = 0x1000100000000;
  *(void *)(inited + 32) = 0x1000100000000;
  *(void *)(inited + 40) = 0x1000100000000;
  *(void *)(inited + 48) = 0x1000100000000;
  *(void *)(inited + 56) = 0x1000100000000;
  *(void *)(inited + 64) = 0x1000100000000;
  *(void *)(inited + 72) = 0x1000100000000;
  *(void *)(inited + 80) = 0x1000100000000;
  *(void *)(inited + 88) = 0x1000100000000;
  sub_1B6B6E340(0, &qword_1E9DD6548, (uint64_t (*)(uint64_t))sub_1B6B6E2AC, MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(inited + 96) = 0u;
  uint64_t v133 = inited + 96;
  *(_OWORD *)(inited + 112) = 0u;
  *(_OWORD *)(inited + 128) = 0u;
  *(_OWORD *)(inited + 144) = 0u;
  *(_OWORD *)(inited + 160) = 0u;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E96DA0;
  *(void *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = @"kGeometrySourceSemanticPosition";
  *(_OWORD *)(v7 + 48) = xmmword_1B6E4F270;
  *(void *)(v7 + 64) = @"kGeometrySourceSemanticNormal";
  *(_OWORD *)(v7 + 72) = xmmword_1B6E9E120;
  *(void *)(v7 + 88) = @"kGeometrySourceSemanticTangent";
  *(_OWORD *)(v7 + 96) = xmmword_1B6E95940;
  *(void *)(v7 + 112) = @"kGeometrySourceSemanticTexcoord";
  *(_OWORD *)(v7 + 120) = xmmword_1B6E95930;
  *(void *)(v7 + 136) = @"kGeometrySourceSemanticTexcoord";
  *(_OWORD *)(v7 + 144) = xmmword_1B6EAABC0;
  *(void *)(v7 + 160) = @"kGeometrySourceSemanticTexcoord";
  *(_OWORD *)(v7 + 168) = xmmword_1B6E500D0;
  *(void *)(v7 + 184) = @"kGeometrySourceSemanticTexcoord";
  *(_OWORD *)(v7 + 192) = xmmword_1B6EAABD0;
  *(void *)(v7 + 208) = @"kGeometrySourceSemanticColor";
  *(void *)(v7 + 216) = 0;
  BOOL v135 = sub_1B67F6064(v7);
  swift_setDeallocating();
  sub_1B6B6E2AC();
  uint64_t v8 = @"kGeometrySourceSemanticTexcoord";
  unint64_t v9 = @"kGeometrySourceSemanticPosition";
  unint64_t v10 = @"kGeometrySourceSemanticNormal";
  unint64_t v11 = @"kGeometrySourceSemanticTangent";
  char v12 = @"kGeometrySourceSemanticColor";
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v13 = qword_1F0FAD210;
  if (qword_1F0FAD210)
  {
    unint64_t v14 = 0;
    uint64_t v124 = (void (**)(char *, char *, uint64_t))(v141 + 32);
    uint64_t v15 = &qword_1F0FAD220;
    unint64_t v121 = 0x80000001B6F4B480;
    unint64_t v122 = 0x80000001B6F4B460;
    long long v123 = xmmword_1B6E77050;
    unint64_t v132 = 0x80000001B6F4B430;
    uint64_t v16 = &selRef_lightBufferBindings;
    BOOL v137 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v17 = v131;
    uint64_t v18 = v135;
    do
    {
      uint64_t v21 = *v15++;
      uint64_t v20 = v21;
      if (!v18[2]) {
        goto LABEL_5;
      }
      unint64_t v22 = sub_1B69FB654(v20);
      if ((v23 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v141 = v20;
      long long v139 = v15;
      uint64_t v24 = v18[7] + 16 * v22;
      uint64_t v25 = *(void *)(v24 + 8);
      id v26 = *(id *)v24;
      id v27 = objc_msgSend(v17, sel_mesh, v121, v122);
      id v138 = v26;
      if (v27)
      {
        uint64_t v28 = v27;
        id v29 = objc_msgSend(v27, v16[123], v26);

        sub_1B63989B8(0, (unint64_t *)&qword_1E9DD1E48);
        unint64_t v30 = sub_1B6E31C28();

        if (!(v30 >> 62)) {
          goto LABEL_10;
        }
      }
      else
      {
        unint64_t v30 = MEMORY[0x1E4FBC860];
        if (!(MEMORY[0x1E4FBC860] >> 62))
        {
LABEL_10:
          if (v25 < *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_11;
          }
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v25 < v67)
      {
LABEL_11:
        if ((v30 & 0xC000000000000001) != 0) {
          id v31 = (id)MEMORY[0x1BA9B4580](v25, v30);
        }
        else {
          id v31 = *(id *)(v30 + 8 * v25 + 32);
        }
        uint64_t v32 = v31;
        uint64_t v33 = v141;
        swift_bridgeObjectRelease();
        long long v34 = *(_OWORD *)(inited + 112);
        long long v35 = *(_OWORD *)(inited + 128);
        long long v36 = *(_OWORD *)(inited + 144);
        uint64_t v37 = *(void *)(inited + 160);
        int v38 = *(_DWORD *)(inited + 168);
        __int16 v39 = *(_WORD *)(inited + 172);
        long long v143 = *(_OWORD *)(inited + 96);
        long long v144 = v34;
        long long v145 = v35;
        long long v146 = v36;
        uint64_t v147 = v37;
        int v148 = v38;
        LOWORD(v149) = v39;
        if ((v14 & 0x8000000000000000) != 0) {
          goto LABEL_51;
        }
        id v140 = v32;
        if (v14 >= 0x10000) {
          goto LABEL_51;
        }
        uint64_t v40 = (char *)&v143 + 8 * v33;
        int v41 = *(_DWORD *)v40;
        LOWORD(v40) = *((_WORD *)v40 + 2);
        uint64_t v42 = v133 + 8 * v33;
        *(_DWORD *)uint64_t v42 = v41;
        *(_WORD *)(v42 + 4) = (_WORD)v40;
        float v43 = (__int16 *)(v42 + 4);
        unint64_t v136 = v14;
        *(_WORD *)(v42 + 6) = v14;
        id v44 = (_WORD *)(v42 + 6);
        unint64_t v45 = (unint64_t)objc_msgSend(v140, sel_dataOffset);
        long long v46 = *(_OWORD *)(inited + 112);
        long long v47 = *(_OWORD *)(inited + 128);
        long long v48 = *(_OWORD *)(inited + 144);
        uint64_t v49 = *(void *)(inited + 160);
        int v50 = *(_DWORD *)(inited + 172);
        long long v143 = *(_OWORD *)(inited + 96);
        long long v144 = v46;
        long long v145 = v47;
        long long v146 = v48;
        uint64_t v147 = v49;
        int v149 = v50;
        if ((v45 & 0x8000000000000000) != 0 || HIDWORD(v45)) {
          goto LABEL_51;
        }
        uint64_t v51 = (char *)&v143 + 8 * v33;
        __int16 v52 = *((_WORD *)v51 + 2);
        LOWORD(v51) = *((_WORD *)v51 + 3);
        *(_DWORD *)uint64_t v42 = v45;
        __int16 *v43 = v52;
        *id v44 = (_WORD)v51;
        id v53 = v140;
        if (objc_msgSend(v140, sel_floatComponents))
        {
          id v54 = objc_msgSend(v53, sel_componentsPerVector);
          unint64_t v55 = v136;
          long long v56 = &selRef_bufferIndex;
          switch((unint64_t)v54)
          {
            case 1uLL:
              long long v57 = *(_OWORD *)(inited + 112);
              long long v58 = *(_OWORD *)(inited + 128);
              long long v59 = *(_OWORD *)(inited + 144);
              uint64_t v60 = *(void *)(inited + 160);
              int v61 = *(_DWORD *)(inited + 168);
              int v62 = *(_DWORD *)(inited + 172);
              long long v143 = *(_OWORD *)(inited + 96);
              long long v144 = v57;
              long long v145 = v58;
              long long v146 = v59;
              uint64_t v147 = v60;
              int v148 = v61;
              int v149 = v62;
              unint64_t v63 = (char *)&v143 + 8 * v141;
              int v64 = *(_DWORD *)v63;
              __int16 v65 = *((_WORD *)v63 + 3);
              *(_DWORD *)uint64_t v42 = v64;
              __int16 v66 = 28;
              goto LABEL_33;
            case 2uLL:
              long long v77 = *(_OWORD *)(inited + 112);
              long long v78 = *(_OWORD *)(inited + 128);
              long long v79 = *(_OWORD *)(inited + 144);
              uint64_t v80 = *(void *)(inited + 160);
              int v81 = *(_DWORD *)(inited + 168);
              int v82 = *(_DWORD *)(inited + 172);
              long long v143 = *(_OWORD *)(inited + 96);
              long long v144 = v77;
              long long v145 = v78;
              long long v146 = v79;
              uint64_t v147 = v80;
              int v148 = v81;
              int v149 = v82;
              float32x4_t v83 = (char *)&v143 + 8 * v141;
              int v84 = *(_DWORD *)v83;
              __int16 v65 = *((_WORD *)v83 + 3);
              *(_DWORD *)uint64_t v42 = v84;
              __int16 v66 = 29;
              goto LABEL_33;
            case 3uLL:
              long long v85 = *(_OWORD *)(inited + 112);
              long long v86 = *(_OWORD *)(inited + 128);
              long long v87 = *(_OWORD *)(inited + 144);
              uint64_t v88 = *(void *)(inited + 160);
              int v89 = *(_DWORD *)(inited + 168);
              int v90 = *(_DWORD *)(inited + 172);
              long long v143 = *(_OWORD *)(inited + 96);
              long long v144 = v85;
              long long v145 = v86;
              long long v146 = v87;
              uint64_t v147 = v88;
              int v148 = v89;
              int v149 = v90;
              unint64_t v91 = (char *)&v143 + 8 * v141;
              int v92 = *(_DWORD *)v91;
              __int16 v65 = *((_WORD *)v91 + 3);
              *(_DWORD *)uint64_t v42 = v92;
              __int16 v66 = 30;
              goto LABEL_33;
            case 4uLL:
              long long v93 = *(_OWORD *)(inited + 112);
              long long v94 = *(_OWORD *)(inited + 128);
              long long v95 = *(_OWORD *)(inited + 144);
              uint64_t v96 = *(void *)(inited + 160);
              int v97 = *(_DWORD *)(inited + 168);
              int v98 = *(_DWORD *)(inited + 172);
              long long v143 = *(_OWORD *)(inited + 96);
              long long v144 = v93;
              long long v145 = v94;
              long long v146 = v95;
              uint64_t v147 = v96;
              int v148 = v97;
              int v149 = v98;
              uint64_t v99 = (char *)&v143 + 8 * v141;
              int v100 = *(_DWORD *)v99;
              __int16 v65 = *((_WORD *)v99 + 3);
              *(_DWORD *)uint64_t v42 = v100;
              __int16 v66 = 31;
LABEL_33:
              __int16 *v43 = v66;
              *id v44 = v65;
              break;
            default:
              if (qword_1EB9852D0 != -1) {
                swift_once();
              }
              *(void *)&long long v143 = 0;
              *((void *)&v143 + 1) = 0xE000000000000000;
              uint64_t v130 = qword_1EB997FD0;
              swift_retain();
              sub_1B6E328C8();
              sub_1B6E31948();
              id v142 = objc_msgSend(v140, sel_componentsPerVector);
              sub_1B6E33098();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              sub_1B6E31948();
              uint64_t v118 = *((void *)&v143 + 1);
              uint64_t v129 = v143;
              int v119 = sub_1B6E32148();
              if (qword_1EB9854F8 != -1) {
                swift_once();
              }
              *(void *)&long long v143 = 0;
              swift_retain();
              sub_1B6B33E34(v119, (uint64_t *)&v143, v129, v118);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              break;
          }
        }
        else
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          uint64_t v130 = qword_1EB997FD0;
          swift_retain();
          char v68 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          uint64_t v69 = qword_1EB997FF0;
          uint64_t v70 = qword_1EB985528;
          swift_retain();
          if (v70 != -1) {
            swift_once();
          }
          sub_1B6B6E340(0, (unint64_t *)&qword_1EB9855A0, (uint64_t (*)(uint64_t))sub_1B6816990, MEMORY[0x1E4FBBE00]);
          uint64_t v71 = swift_allocObject();
          *(_OWORD *)(v71 + 16) = v123;
          *(void *)(v71 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v71 + 64) = sub_1B678615C();
          *(void *)(v71 + 32) = 0xD000000000000025;
          *(void *)(v71 + 40) = v132;
          sub_1B6E31258();
          swift_bridgeObjectRelease();
          swift_retain();
          uint64_t v129 = v69;
          char v72 = v125;
          sub_1B6E31088();
          uint64_t v73 = (uint64_t)v127;
          uint64_t v74 = v128[12];
          uint64_t v75 = v128[16];
          uint64_t v76 = &v127[v128[20]];
          (*v124)(v127, v72, v126);
          *(unsigned char *)(v73 + v74) = v68;
          *(void *)(v73 + v75) = 0;
          *(void *)uint64_t v76 = 0xD000000000000025;
          *((void *)v76 + 1) = v132;
          sub_1B6E31368();
          swift_release();
          sub_1B67A3738(v73);
          swift_release();
          swift_release();
          uint64_t v17 = v131;
          unint64_t v55 = v136;
          long long v56 = &selRef_bufferIndex;
          uint64_t v16 = &selRef_lightBufferBindings;
        }
        id v101 = v140;
        unint64_t v102 = [v140 v56[267]]
             ? (unint64_t)[v101 v56[267]]
             : 4 * (void)objc_msgSend(v101, sel_componentsPerVector);
        long long v103 = *(_OWORD *)(inited + 32);
        long long v104 = *(_OWORD *)(inited + 48);
        long long v105 = *(_OWORD *)(inited + 64);
        uint64_t v106 = *(void *)(inited + 80);
        int v107 = *(_DWORD *)(inited + 92);
        long long v143 = *(_OWORD *)(inited + 16);
        long long v144 = v103;
        long long v145 = v104;
        long long v146 = v105;
        uint64_t v147 = v106;
        int v149 = v107;
        if ((v102 & 0x8000000000000000) != 0 || HIDWORD(v102))
        {
LABEL_51:
          sub_1B6E32BD8();
          __break(1u);
          JUMPOUT(0x1B6B6E29CLL);
        }
        uint64_t v108 = (char *)&v143 + 8 * v55;
        __int16 v109 = *((_WORD *)v108 + 2);
        LOWORD(v108) = *((_WORD *)v108 + 3);
        uint64_t v110 = v134 + 8 * v55;
        *(_DWORD *)uint64_t v110 = v102;
        *(_WORD *)(v110 + 4) = v109;
        *(_WORD *)(v110 + 6) = (_WORD)v108;
        *(void *)&long long v143 = 0;
        *((void *)&v143 + 1) = 0xE000000000000000;
        id v19 = v101;
        sub_1B6E31948();
        id v142 = (id)v141;
        type metadata accessor for vfx_vertex_attribute(0);
        sub_1B6E32B18();
        long long v111 = v143;
        uint64_t v112 = v137;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v112 = sub_1B68C5514(0, v112[2] + 1, 1, v112);
        }
        unint64_t v114 = v112[2];
        unint64_t v113 = v112[3];
        BOOL v137 = v112;
        if (v114 >= v113 >> 1) {
          BOOL v137 = sub_1B68C5514(v113 > 1, v114 + 1, 1, v137);
        }
        uint64_t v115 = v137;
        unint64_t v116 = v136 + 1;
        v137[2] = v114 + 1;
        long long v117 = &v115[3 * v114];
        unint64_t v14 = v116;
        v117[4] = v19;
        *(_OWORD *)(v117 + 5) = v111;

        uint64_t v18 = v135;
        goto LABEL_4;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      id v19 = v138;
LABEL_4:

      uint64_t v15 = v139;
LABEL_5:
      --v13;
    }
    while (v13);
  }
  swift_bridgeObjectRelease();
  return sub_1B6A58824((_OWORD *)inited);
}

void sub_1B6B6E2AC()
{
  if (!qword_1E9DD6550)
  {
    type metadata accessor for vfx_vertex_attribute(255);
    sub_1B6397C7C(255, &qword_1E9DD0650, type metadata accessor for VFXMeshSourceSemantic);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD6550);
    }
  }
}

void sub_1B6B6E340(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B6B6E3A4(uint64_t a1, void *a2)
{
  long long v59 = a2;
  sub_1B62E17B4();
  long long v56 = v3;
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B6E31098();
  long long v58 = *(uint64_t **)(v7 - 8);
  MEMORY[0x1F4188790](v7, v8);
  unint64_t v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B6E30F48();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = self;
  unint64_t v17 = (unint64_t)objc_msgSend(v16, sel_immediateMode);
  objc_msgSend(v16, sel_setImmediateMode_, 1);
  sub_1B63989B8(0, &qword_1E9DD6560);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  sub_1B6B6F7E0();
  uint64_t inited = swift_initStackObject();
  long long v55 = xmmword_1B6E77050;
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = @"kSceneSourceCheckConsistency";
  *(void *)(inited + 64) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 40) = 0;
  id v19 = @"kSceneSourceCheckConsistency";
  uint64_t v20 = sub_1B67E0850(inited);
  id v21 = sub_1B6B691C0((uint64_t)v15, (uint64_t)v20);
  uint64_t v25 = v58;
  uint64_t v24 = v59;
  uint64_t v60 = v10;
  uint64_t v54 = v7;
  if (v21)
  {
    unsigned int v50 = v17;
    uint64_t v51 = v16;
    id v49 = v21;
    id v26 = objc_msgSend(v21, sel_rootNode);
    id v27 = (void *)MEMORY[0x1E4FBC860];
    if (v24) {
      id v27 = v24;
    }
    uint64_t v28 = v27[2];
    v48[1] = v27;
    if (v28)
    {
      id v29 = v27 + 4;
      id v53 = (void (**)(char *, char *, uint64_t))(v25 + 4);
      swift_bridgeObjectRetain();
      unint64_t v52 = 0x80000001B6F4B4D0;
      unint64_t v30 = v56;
      do
      {
        uint64_t v37 = *v29++;
        uint64_t v36 = v37;
        id v38 = objc_msgSend(v26, sel_childNodes);
        sub_1B63989B8(0, (unint64_t *)&qword_1EB980620);
        unint64_t v39 = sub_1B6E31C28();

        if (v39 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_1B6E32C18();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v36 >= v40)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          long long v59 = v26;
          uint64_t v57 = qword_1EB997FD0;
          swift_retain();
          char v45 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          long long v58 = v29;
          uint64_t v46 = qword_1EB985528;
          swift_retain();
          if (v46 != -1) {
            swift_once();
          }
          sub_1B6B6E340(0, (unint64_t *)&qword_1EB9855A0, (uint64_t (*)(uint64_t))sub_1B6816990, MEMORY[0x1E4FBBE00]);
          uint64_t v31 = swift_allocObject();
          *(_OWORD *)(v31 + 16) = v55;
          *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v31 + 64) = sub_1B678615C();
          unint64_t v32 = v52;
          *(void *)(v31 + 32) = 0xD000000000000011;
          *(void *)(v31 + 40) = v32;
          sub_1B6E31258();
          swift_bridgeObjectRelease();
          swift_retain();
          sub_1B6E31088();
          uint64_t v33 = v30[12];
          uint64_t v34 = v30[16];
          long long v35 = &v6[v30[20]];
          (*v53)(v6, v60, v54);
          v6[v33] = v45;
          *(void *)&v6[v34] = 0;
          *(void *)long long v35 = 0xD000000000000011;
          *((void *)v35 + 1) = v32;
          unint64_t v30 = v56;
          sub_1B6E31368();
          swift_release();
          sub_1B67A3738((uint64_t)v6);
          swift_release();
          swift_release();
          id v29 = v58;
          id v26 = v59;
        }
        else
        {
          id v41 = objc_msgSend(v26, sel_childNodes);
          uint64_t v42 = sub_1B6E31C28();

          if ((v42 & 0xC000000000000001) != 0) {
            id v43 = (id)MEMORY[0x1BA9B4580](v36, v42);
          }
          else {
            id v43 = *(id *)(v42 + 8 * v36 + 32);
          }
          id v44 = v43;
          swift_bridgeObjectRelease();

          id v26 = v44;
        }
        --v28;
      }
      while (v28);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_flattenedCopy);
    sub_1B6E32718();
    swift_unknownObjectRelease();
    sub_1B63989B8(0, (unint64_t *)&qword_1EB980620);
    if (swift_dynamicCast())
    {

      uint64_t v22 = v61;
      uint64_t v16 = v51;
      unint64_t v17 = v50;
      goto LABEL_3;
    }
    uint64_t v16 = v51;
    unint64_t v17 = v50;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v47 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v62[0] = 0;
    swift_retain();
    sub_1B6B33E34(v47, v62, 0xD000000000000017, 0x80000001B6F4B4F0);
    swift_release();

    swift_release();
  }
  uint64_t v22 = 0;
LABEL_3:
  objc_msgSend(v16, sel_setImmediateMode_, v17);
  return v22;
}

void *sub_1B6B6EB60(void *a1)
{
  return sub_1B6B7119C(a1, *(void *)(v1 + 24));
}

unint64_t sub_1B6B6EB7C(void *a1, uint64_t a2, char *a3, uint64_t *a4)
{
  v22[1] = 0;
  v22[2] = 0;
  v22[0] = 66;
  char v23 = -2;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v24 = 0;
  __int16 v27 = 768;
  unint64_t v5 = sub_1B6B6C560(a1, a2, a3, (uint64_t)v22, a4);
  if (objc_msgSend(a1, sel_contents))
  {
    sub_1B6E32718();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  uint64_t v6 = MEMORY[0x1E4FBC840] + 8;
  sub_1B6B6F60C((uint64_t)v19, (uint64_t)v20, (uint64_t)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B62F7F54);
  if (v21)
  {
    sub_1B63989B8(0, &qword_1E9DD6558);
    if (swift_dynamicCast())
    {
      sub_1B684C884((CGColor *)objc_msgSend(v18, sel_CGColor));
      objc_msgSend(a1, sel_intensity);
      uint64_t v17 = v7;

      goto LABEL_9;
    }
  }
  else
  {
    sub_1B639573C((uint64_t)v20, (uint64_t)&qword_1EB980F60, v6, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B62F7F54);
  }
  objc_msgSend(a1, sel_intensity);
LABEL_9:
  if (qword_1E9DCC598 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1E9E49638;
  id v9 = objc_msgSend(a1, sel_magnificationFilter, v17);
  if (*(void *)(v8 + 16)) {
    sub_1B69FB654((uint64_t)v9);
  }
  id v10 = objc_msgSend(a1, sel_magnificationFilter);
  if (*(void *)(v8 + 16)) {
    sub_1B69FB654((uint64_t)v10);
  }
  if (qword_1E9DCC5A0 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1E9E49640;
  id v12 = objc_msgSend(a1, sel_magnificationFilter);
  if (*(void *)(v11 + 16)) {
    sub_1B69FB654((uint64_t)v12);
  }
  if (qword_1E9DCC5A8 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1E9E49648;
  id v14 = objc_msgSend(a1, sel_wrapS);
  if (*(void *)(v13 + 16)) {
    sub_1B69FB654((uint64_t)v14);
  }
  id v15 = objc_msgSend(a1, sel_wrapT);
  if (*(void *)(v13 + 16)) {
    sub_1B69FB654((uint64_t)v15);
  }
  return v5;
}

id sub_1B6B6EF30(void *a1, unint64_t a2)
{
  int v2 = a2;
  unint64_t v4 = HIDWORD(a2);
  switch((unint64_t)objc_msgSend(a1, sel_type))
  {
    case 0uLL:
      id result = objc_msgSend(a1, sel_intensity);
      LODWORD(v28) = v6;
      if (v2 != -1 || v4)
      {
        uint64_t v7 = swift_retain();
        MEMORY[0x1F4188790](v7, v8);
        id v9 = (void (*)(unsigned char *))sub_1B6B6F680;
        goto LABEL_19;
      }
      break;
    case 1uLL:
      objc_msgSend(a1, sel_intensity);
      unsigned int v12 = v11;
      id result = objc_msgSend(a1, sel_attenuationDistance);
      *(void *)&long long v28 = __PAIR64__(v13, v12);
      *((void *)&v28 + 1) = 0x42C800003C23D70ALL;
      if (v2 != -1 || v4)
      {
        uint64_t v14 = swift_retain();
        MEMORY[0x1F4188790](v14, v15);
        id v9 = (void (*)(unsigned char *))sub_1B6B6F70C;
        goto LABEL_19;
      }
      break;
    case 2uLL:
      id result = objc_msgSend(a1, sel_intensity);
      LODWORD(v28) = v16;
      *(void *)((char *)&v28 + 4) = 0xC120000041200000;
      HIDWORD(v28) = 1092616192;
      if (v2 != -1 || v4)
      {
        uint64_t v17 = swift_retain();
        MEMORY[0x1F4188790](v17, v18);
        id v9 = (void (*)(unsigned char *))sub_1B6B6F6A4;
        goto LABEL_19;
      }
      break;
    case 3uLL:
      objc_msgSend(a1, sel_intensity);
      unsigned int v20 = v19;
      objc_msgSend(a1, sel_attenuationDistance);
      unsigned int v22 = v21;
      objc_msgSend(a1, sel_spotInnerAngle);
      unsigned int v24 = v23;
      id result = objc_msgSend(a1, sel_spotOuterAngle);
      *(void *)&long long v28 = __PAIR64__(v22, v20);
      *((void *)&v28 + 1) = __PAIR64__(v24, v25);
      uint64_t v29 = 0x412000003C23D70ALL;
      if (v2 != -1 || v4)
      {
        uint64_t v26 = swift_retain();
        MEMORY[0x1F4188790](v26, v27);
        id v9 = (void (*)(unsigned char *))sub_1B6B6F6D0;
LABEL_19:
        sub_1B636C318(0, v9);
        id result = (id)swift_release();
      }
      break;
    default:
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      *(void *)&long long v28 = 0;
      *((void *)&v28 + 1) = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      sub_1B6E31948();
      id v30 = [a1 *(SEL *)(v4 + 3168)];
      type metadata accessor for VFXLightType(0);
      sub_1B6E32B18();
      int v10 = sub_1B6E32168();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      *(void *)&long long v28 = 0;
      swift_retain();
      sub_1B6B33E34(v10, (uint64_t *)&v28, 0, 0xE000000000000000);
      swift_release();
      swift_bridgeObjectRelease();
      id result = (id)swift_release();
      break;
  }
  return result;
}

void sub_1B6B6F358(void *a1, unint64_t a2)
{
  int v2 = a2;
  unint64_t v4 = HIDWORD(a2);
  if (objc_msgSend(a1, sel_usesOrthographicProjection))
  {
    objc_msgSend(a1, sel_orthographicScale);
    if (v2 != -1 || v4)
    {
      uint64_t v5 = swift_retain();
      MEMORY[0x1F4188790](v5, v6);
      uint64_t v7 = (void (*)(unsigned char *))sub_1B6B6F7A4;
LABEL_10:
      sub_1B636C318(0, v7);
      swift_release();
    }
  }
  else
  {
    id v8 = objc_msgSend(a1, sel_depthOfField);
    if (v8)
    {
      id v9 = v8;
      objc_msgSend(v8, sel_fStop);
    }
    objc_msgSend(a1, sel_focalLength);
    objc_msgSend(a1, sel_focusDistance);
    objc_msgSend(a1, sel_sensorHeight);
    float v11 = v10 * 0.5;
    objc_msgSend(a1, sel_fieldOfView);
    float v13 = tanf((float)((float)(v12 * 3.1416) / 180.0) * 0.5);
    atanf(v11 / (float)(v11 / v13));
    if (v2 != -1 || v4)
    {
      uint64_t v14 = swift_retain();
      MEMORY[0x1F4188790](v14, v15);
      uint64_t v7 = (void (*)(unsigned char *))sub_1B6B6F768;
      goto LABEL_10;
    }
  }
}

void *sub_1B6B6F5B0(void *a1)
{
  return sub_1B6B7141C(a1, **(void **)(v1 + 16), *(void *)(*(void *)(v1 + 16) + 8), *(void *)(v1 + 24));
}

uint64_t sub_1B6B6F5D4()
{
  return sub_1B685224C(**(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 8), *(void *)(v0 + 24));
}

uint64_t sub_1B6B6F60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

void *sub_1B6B6F680(void *a1)
{
  return sub_1B6B707EC(a1, *(void *)(v1 + 24), **(float **)(v1 + 16));
}

uint64_t sub_1B6B6F6A4(uint64_t a1)
{
  return sub_1B6B6F738(a1, (uint64_t (*)(uint64_t, void, void, float, float, float, float))sub_1B6B70938);
}

void *sub_1B6B6F6D0(void *a1)
{
  uint64_t v3 = *(__n128 **)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  __n128 v5 = *v3;
  unint64_t v6 = v3[1].n128_u64[0];
  return sub_1B6B70AA8(a1, &v5, v2);
}

uint64_t sub_1B6B6F70C(uint64_t a1)
{
  return sub_1B6B6F738(a1, (uint64_t (*)(uint64_t, void, void, float, float, float, float))sub_1B6B70C10);
}

uint64_t sub_1B6B6F738(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, float, float, float, float))
{
  return a2(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), **(float **)(v2 + 16), *(float *)(*(void *)(v2 + 16) + 4), *(float *)(*(void *)(v2 + 16) + 8), *(float *)(*(void *)(v2 + 16) + 12));
}

void *sub_1B6B6F768(void *a1)
{
  uint64_t v3 = *(long long **)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  long long v4 = v3[1];
  v6[0] = *v3;
  v6[1] = v4;
  _OWORD v6[2] = v3[2];
  return sub_1B6B70D80(a1, v6, v2);
}

void *sub_1B6B6F7A4(void *a1)
{
  uint64_t v3 = *(__n128 **)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  __n128 v5 = *v3;
  unsigned __int8 v6 = v3[1].n128_u8[0];
  return sub_1B6B70EE8(a1, &v5, v2);
}

void sub_1B6B6F7E0()
{
  if (!qword_1E9DD6568)
  {
    sub_1B6397C7C(255, &qword_1E9DD0728, type metadata accessor for VFXWorldLoaderOption);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD6568);
    }
  }
}

unint64_t sub_1B6B6F860()
{
  unint64_t result = qword_1E9DD0720;
  if (!qword_1E9DD0720)
  {
    type metadata accessor for VFXWorldLoaderOption(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0720);
  }
  return result;
}

uint64_t sub_1B6B6F8B8(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(a2, sel_keyPath);
  if (!v8) {
    goto LABEL_8;
  }
  id v9 = v8;
  uint64_t v10 = sub_1B6E31798();
  uint64_t v12 = v11;

  BOOL v13 = v10 == 0x6E6F697469736F70 && v12 == 0xE800000000000000;
  if (!v13 && (sub_1B6E334B8() & 1) == 0)
  {
    BOOL v20 = v10 == 0x7461746E6569726FLL && v12 == 0xEB000000006E6F69;
    if (v20 || (sub_1B6E334B8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(a3 + 24);
      uint64_t KeyPath = swift_getKeyPath();
      sub_1B6B6A178(a2, a1, v21, KeyPath, 1u, a4);
      goto LABEL_11;
    }
    if (v10 == 0x676E4172656C7565 && v12 == 0xEB0000000073656CLL || (sub_1B6E334B8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a3 + 24);
      uint64_t v18 = swift_getKeyPath();
      unsigned int v19 = sub_1B6D80900;
      goto LABEL_10;
    }
    if (v10 == 0x656C616373 && v12 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a3 + 24);
      uint64_t v18 = swift_getKeyPath();
      unsigned int v19 = sub_1B6D8099C;
      goto LABEL_10;
    }
LABEL_8:
    sub_1B62F7F54(0, &qword_1EB980E00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1B6E77050;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    sub_1B62F7F54(0, (unint64_t *)&qword_1EB980110, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    sub_1B6E31818();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    *(void *)(v14 + 56) = v15;
    *(void *)(v14 + 32) = 0xD00000000000001FLL;
    *(void *)(v14 + 40) = 0x80000001B6F4B510;
    sub_1B6E338E8();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a3 + 24);
  uint64_t v18 = swift_getKeyPath();
  unsigned int v19 = sub_1B6D806C8;
LABEL_10:
  sub_1B6B69B1C(a2, a1, v17, v18, a4, (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))v19);
LABEL_11:

  return swift_release();
}

uint64_t sub_1B6B6FCDC()
{
  id v1 = objc_msgSend(v0, sel_behaviorGraph);
  if (v1
    && (unint64_t v2 = v1,
        uint64_t v3 = (char *)objc_msgSend(v1, sel_entityObject),
        v2,
        v3))
  {
    uint64_t v4 = *(unsigned int *)&v3[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
    uint64_t v5 = *(unsigned int *)&v3[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity + 4];

    uint64_t v6 = v5 << 32;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v4 = 0xFFFFFFFFLL;
  }
  return v6 | v4;
}

uint64_t sub_1B6B6FD6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int16 a15)
{
  *(void *)(v15 + 96) = 0;
  *(void *)(v15 + 104) = 0;
  *(unsigned char *)(v15 + 112) = 1;
  *(void *)(v15 + 120) = 0;
  *(void *)(v15 + 128) = 0;
  *(_DWORD *)(v15 + 205) = 16777472;
  uint64_t v16 = MEMORY[0x1E4FBC860];
  *(void *)(v15 + 216) = 0;
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v17 = MEMORY[0x1E4FBB470];
  *(void *)(v15 + 32) = a9;
  *(void *)(v15 + 40) = v17;
  *(void *)(v15 + 48) = 0;
  *(unsigned char *)(v15 + 56) = 1;
  *(_WORD *)(v15 + 58) = a15 | 0x480;
  *(void *)(v15 + 64) = 0;
  *(void *)(v15 + 72) = 0;
  *(void *)(v15 + 136) = 0;
  *(void *)(v15 + 144) = a11;
  *(void *)(v15 + 152) = a12;
  *(void *)(v15 + 160) = v16;
  float v18 = *(double *)&a3;
  float v19 = v18;
  if (a4) {
    float v19 = 0.0;
  }
  *(float *)(v15 + 184) = v19;
  *(unsigned char *)(v15 + 188) = a4 & 1;
  float v20 = *(double *)&a5;
  float v21 = v20;
  if (a6) {
    float v21 = 0.0;
  }
  *(float *)(v15 + 192) = v21;
  *(unsigned char *)(v15 + 196) = a6 & 1;
  float v22 = *(double *)&a7;
  float v23 = v22;
  if (a8) {
    float v23 = 0.0;
  }
  *(float *)(v15 + 200) = v23;
  *(unsigned char *)(v15 + 204) = a8 & 1;
  *(_WORD *)(v15 + 210) = a15 | 0x480;
  *(void *)(v15 + 168) = a13;
  *(void *)(v15 + 176) = a14;
  *(void *)(v15 + 80) = a10;
  *(void *)(v15 + 88) = &off_1F0F5A050;
  uint64_t v24 = *(void *)(v15 + 64);
  *(void *)(v15 + 64) = sub_1B6B94E5C;
  *(void *)(v15 + 72) = a10;
  swift_retain();
  sub_1B62C6A50(v24);
  return v15;
}

uint64_t sub_1B6B6FE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __int16 a14)
{
  char v41 = a5 & 1;
  char v42 = a7 & 1;
  char v43 = a9 & 1;
  sub_1B62B31E8(a1, (uint64_t)&v46);
  if ((void)v48)
  {
    uint64_t v17 = sub_1B62B57A8(&v46, v51);
    MEMORY[0x1F4188790](v17, v18);
    uint64_t v19 = MEMORY[0x1E4FBB470];
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v40 = a8;
    MEMORY[0x1F4188790](KeyPath, v21);
    uint64_t v22 = swift_getKeyPath();
    sub_1B6B95068(0, &qword_1E9DD6608, MEMORY[0x1E4FBC840] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
    float v23 = (void *)swift_allocObject();
    v23[4] = sub_1B6B94DF0;
    v23[5] = v22;
    _OWORD v23[2] = sub_1B6B94DF8;
    void v23[3] = v22;
    v23[6] = v22;
    sub_1B6B95068(0, &qword_1EB97DF68, v19, (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
    uint64_t v24 = (void *)swift_allocObject();
    v24[4] = sub_1B6B94E00;
    uint64_t v24[5] = v23;
    void v24[2] = sub_1B6B94E08;
    void v24[3] = v23;
    v24[6] = v22;
    sub_1B62CAAD8((uint64_t)v51, (uint64_t)v50);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    swift_dynamicCast();
    unint64_t v26 = *((void *)&v46 + 1);
    unint64_t v25 = v46;
    LOBYTE(v23) = v47;
    long long v39 = v48;
    uint64_t v27 = v49;
    type metadata accessor for BindingPropertyDescription();
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 224) = __PAIR128__(v26, v25);
    *(unsigned char *)(v28 + 240) = (_BYTE)v23;
    *(_OWORD *)(v28 + 248) = v39;
    *(void *)(v28 + 264) = v27;
    uint64_t v29 = sub_1B6B6FD6C(a2, a3, a4, v41, a6, v42, v40, v43, KeyPath, (uint64_t)v24, a10, a11, a12, a13, a14);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v51);
  }
  else
  {
    uint64_t v30 = sub_1B62B32CC((uint64_t)&v46);
    MEMORY[0x1F4188790](v30, v31);
    uint64_t v32 = MEMORY[0x1E4FBB470];
    uint64_t v33 = swift_getKeyPath();
    MEMORY[0x1F4188790](v33, v34);
    uint64_t v35 = swift_getKeyPath();
    sub_1B6B95068(0, &qword_1E9DD6608, MEMORY[0x1E4FBC840] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
    uint64_t v36 = (void *)swift_allocObject();
    id v36[4] = sub_1B6B94DF0;
    v36[5] = v35;
    v36[2] = sub_1B6B94DF8;
    v36[3] = v35;
    v36[6] = v35;
    sub_1B6B95068(0, &qword_1EB97DF68, v32, (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
    uint64_t v37 = (void *)swift_allocObject();
    v37[4] = sub_1B6B94E00;
    void v37[5] = v36;
    v37[2] = sub_1B6B94E08;
    v37[3] = v36;
    v37[6] = v35;
    type metadata accessor for PropertyDescription();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain_n();
    return sub_1B6B6FD6C(a2, a3, a4, v41, a6, v42, a8, v43, v33, (uint64_t)v37, a10, a11, a12, a13, a14);
  }
  return v29;
}

void *sub_1B6B703A0(void *result, unint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  uint64_t v7 = result;
  unint64_t v8 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v9 = *result;
    swift_unownedRetainStrong();
    BOOL v10 = sub_1B62EC0CC((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67798, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B68500D0(a2, a3, a4, a5, a6);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v17[0] = a2;
      v17[1] = v8;
      uint64_t v18 = v9;
      sub_1B68795FC(0, &qword_1E9DD66D8);
      uint64_t v20 = v11;
      uint64_t v21 = &off_1F0F68360;
      uint64_t v12 = (__n128 *)swift_allocObject();
      uint64_t v19 = v12;
      v12[1] = a3;
      _OWORD v12[2] = a4;
      void v12[3] = a5;
      v12[4] = a6;
      v12[5].n128_u8[0] = !v10;
      char v22 = 12;
      sub_1B6A62610((uint64_t)v17);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v17);
    }
  }
  return result;
}

void *sub_1B6B70518(void *result, unint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  uint64_t v7 = result;
  unint64_t v8 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v9 = *result;
    swift_unownedRetainStrong();
    BOOL v10 = sub_1B62EC0CC((uint64_t)&type metadata for InverseWorldTransform, (uint64_t)&off_1F0F87E78, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B68500E8(a2, a3, a4, a5, a6);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v17[0] = a2;
      v17[1] = v8;
      uint64_t v18 = v9;
      sub_1B68795FC(0, &qword_1E9DD66D0);
      uint64_t v20 = v11;
      uint64_t v21 = &off_1F0F68360;
      uint64_t v12 = (__n128 *)swift_allocObject();
      uint64_t v19 = v12;
      v12[1] = a3;
      _OWORD v12[2] = a4;
      void v12[3] = a5;
      v12[4] = a6;
      v12[5].n128_u8[0] = !v10;
      char v22 = 12;
      sub_1B6A62610((uint64_t)v17);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v17);
    }
  }
  return result;
}

void *sub_1B6B70690(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  unint64_t v8 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    uint64_t v9 = *result;
    swift_unownedRetainStrong();
    BOOL v10 = sub_1B62EC0CC((uint64_t)&type metadata for VFXTag, (uint64_t)&off_1F0FA2180, a4);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B68505EC(a2, a3, a4);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v12[0] = a4;
      v12[1] = v8;
      uint64_t v13 = v9;
      sub_1B68795FC(0, (unint64_t *)&qword_1E9DD6698);
      uint64_t v17 = v11;
      uint64_t v18 = &off_1F0F68360;
      uint64_t v14 = a2;
      uint64_t v15 = a3;
      BOOL v16 = !v10;
      char v19 = 12;
      swift_bridgeObjectRetain();
      sub_1B6A62610((uint64_t)v12);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v12);
    }
  }
  return result;
}

void *sub_1B6B707EC(void *result, unint64_t a2, float a3)
{
  uint64_t v5 = result;
  unint64_t v6 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v7 = *result;
    swift_unownedRetainStrong();
    BOOL v8 = sub_1B62EC0CC((uint64_t)&type metadata for AmbientLight, (uint64_t)&off_1F0F58F60, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6850DBC(a2, a3);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v10[0] = a2;
      v10[1] = v6;
      uint64_t v11 = v7;
      sub_1B68795FC(0, &qword_1E9DD6640);
      uint64_t v14 = v9;
      uint64_t v15 = &off_1F0F68360;
      float v12 = a3;
      BOOL v13 = !v8;
      char v16 = 12;
      sub_1B6A62610((uint64_t)v10);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v10);
    }
  }
  return result;
}

void *sub_1B6B70938(void *result, unint64_t a2, float a3, float a4, float a5, float a6)
{
  uint64_t v11 = result;
  unint64_t v12 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v13 = *result;
    swift_unownedRetainStrong();
    BOOL v14 = sub_1B62EC0CC((uint64_t)&type metadata for DirectionalLight, (uint64_t)&off_1F0F6BC38, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6850DD4(a2, a3, a4, a5, a6);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v16[0] = a2;
      v16[1] = v12;
      uint64_t v17 = v13;
      sub_1B68795FC(0, &qword_1E9DD6638);
      uint64_t v23 = v15;
      uint64_t v24 = &off_1F0F68360;
      float v18 = a3;
      float v19 = a4;
      float v20 = a5;
      float v21 = a6;
      BOOL v22 = !v14;
      char v25 = 12;
      sub_1B6A62610((uint64_t)v16);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v16);
    }
  }
  return result;
}

void *sub_1B6B70AA8(void *result, __n128 *a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    uint64_t v7 = *result;
    swift_unownedRetainStrong();
    BOOL v8 = sub_1B62EC0CC((uint64_t)&type metadata for SpotLight, (uint64_t)&off_1F0FA9D60, a3);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6850DEC(a2, a3);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v11[0] = a3;
      v11[1] = v6;
      uint64_t v12 = v7;
      sub_1B68795FC(0, &qword_1E9DD6630);
      uint64_t v14 = v9;
      uint64_t v15 = &off_1F0F68360;
      uint64_t v10 = swift_allocObject();
      uint64_t v13 = v10;
      *(__n128 *)(v10 + 16) = *a2;
      *(void *)(v10 + 32) = a2[1].n128_u64[0];
      *(unsigned char *)(v10 + 40) = !v8;
      char v16 = 12;
      sub_1B6A62610((uint64_t)v11);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v11);
    }
  }
  return result;
}

void *sub_1B6B70C10(void *result, unint64_t a2, float a3, float a4, float a5, float a6)
{
  uint64_t v11 = result;
  unint64_t v12 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v13 = *result;
    swift_unownedRetainStrong();
    BOOL v14 = sub_1B62EC0CC((uint64_t)&type metadata for PointLight, (uint64_t)&off_1F0F536F0, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6850EEC(a2, a3, a4, a5, a6);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v16[0] = a2;
      v16[1] = v12;
      uint64_t v17 = v13;
      sub_1B68795FC(0, &qword_1E9DD6628);
      uint64_t v23 = v15;
      uint64_t v24 = &off_1F0F68360;
      float v18 = a3;
      float v19 = a4;
      float v20 = a5;
      float v21 = a6;
      BOOL v22 = !v14;
      char v25 = 12;
      sub_1B6A62610((uint64_t)v16);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v16);
    }
  }
  return result;
}

void *sub_1B6B70D80(void *result, long long *a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    uint64_t v7 = *result;
    swift_unownedRetainStrong();
    BOOL v8 = sub_1B62EC0CC((uint64_t)&type metadata for PerspectiveCamera, (uint64_t)&off_1F0F73990, a3);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B685103C(a2, a3);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v12[0] = a3;
      v12[1] = v6;
      uint64_t v13 = v7;
      sub_1B68795FC(0, &qword_1E9DD6650);
      uint64_t v15 = v9;
      char v16 = &off_1F0F68360;
      uint64_t v10 = swift_allocObject();
      uint64_t v14 = v10;
      long long v11 = a2[1];
      *(_OWORD *)(v10 + 16) = *a2;
      *(_OWORD *)(v10 + 32) = v11;
      *(_OWORD *)(v10 + 48) = a2[2];
      *(unsigned char *)(v10 + 64) = !v8;
      char v17 = 12;
      sub_1B6A62610((uint64_t)v12);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v12);
    }
  }
  return result;
}

void *sub_1B6B70EE8(void *result, __n128 *a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = HIDWORD(a3);
  unsigned __int32 v7 = a2->n128_u32[0];
  unsigned __int8 v8 = a2->n128_u8[4];
  unint64_t v9 = a2->n128_u64[1];
  unsigned __int8 v10 = a2[1].n128_u8[0];
  if (a3 != 0xFFFFFFFF)
  {
    uint64_t v11 = *result;
    swift_unownedRetainStrong();
    BOOL v23 = sub_1B62EC0CC((uint64_t)&type metadata for OrthographicCamera, (uint64_t)&off_1F0F78798, a3);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B685113C(a2, a3);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v13[0] = a3;
      v13[1] = v6;
      uint64_t v14 = v11;
      sub_1B68795FC(0, &qword_1E9DD6648);
      uint64_t v20 = v12;
      float v21 = &off_1F0F68360;
      unsigned __int32 v15 = v7;
      char v16 = v8 & 1;
      unint64_t v17 = v9;
      char v18 = v10 & 1;
      BOOL v19 = !v23;
      char v22 = 12;
      sub_1B6A62610((uint64_t)v13);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v13);
    }
  }
  return result;
}

void *sub_1B6B71064(void *result, unint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v5 = *result;
    swift_unownedRetainStrong();
    BOOL v6 = sub_1B62EC0CC((uint64_t)&type metadata for HiddenOrHasHiddenAncestor, (uint64_t)&off_1F0F51710, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B685123C(a2);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v3 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v8[0] = a2;
      v8[1] = v4;
      uint64_t v9 = v5;
      sub_1B68795FC(0, &qword_1E9DD6658);
      uint64_t v11 = v7;
      uint64_t v12 = &off_1F0F68360;
      BOOL v10 = !v6;
      char v13 = 12;
      sub_1B6A62610((uint64_t)v8);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v8);
    }
  }
  return result;
}

void *sub_1B6B7119C(void *result, unint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v5 = *result;
    swift_unownedRetainStrong();
    BOOL v6 = sub_1B62EC0CC((uint64_t)&type metadata for Hidden, (uint64_t)&off_1F0F9FDE0, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6851254(a2);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v3 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v8[0] = a2;
      v8[1] = v4;
      uint64_t v9 = v5;
      sub_1B68795FC(0, &qword_1E9DD6660);
      uint64_t v11 = v7;
      uint64_t v12 = &off_1F0F68360;
      BOOL v10 = !v6;
      char v13 = 12;
      sub_1B6A62610((uint64_t)v8);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v8);
    }
  }
  return result;
}

void *sub_1B6B712D4(void *result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    uint64_t v7 = *result;
    swift_unownedRetainStrong();
    BOOL v8 = sub_1B62EC0CC((uint64_t)&type metadata for Parent, (uint64_t)&off_1F0FA04A8, a3);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6850B94(a2, a3);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v10[0] = a3;
      v10[1] = v6;
      uint64_t v11 = v7;
      sub_1B68795FC(0, &qword_1E9DD6668);
      uint64_t v14 = v9;
      unsigned __int32 v15 = &off_1F0F68360;
      uint64_t v12 = a2;
      BOOL v13 = !v8;
      char v16 = 12;
      sub_1B6A62610((uint64_t)v10);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v10);
    }
  }
  return result;
}

void *sub_1B6B7141C(void *result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  unint64_t v8 = HIDWORD(a4);
  if (a4 != 0xFFFFFFFF)
  {
    uint64_t v9 = *result;
    swift_unownedRetainStrong();
    BOOL v10 = sub_1B62EC0CC((uint64_t)&type metadata for ModelRenderer, (uint64_t)&off_1F0F60300, a4);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6850CB4(a2, a3, a4);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v12[0] = a4;
      v12[1] = v8;
      uint64_t v13 = v9;
      sub_1B68795FC(0, &qword_1E9DD6620);
      uint64_t v17 = v11;
      char v18 = &off_1F0F68360;
      unint64_t v14 = a2;
      unint64_t v15 = a3;
      BOOL v16 = !v10;
      char v19 = 12;
      sub_1B6A62610((uint64_t)v12);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v12);
    }
  }
  return result;
}

void *sub_1B6B7157C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v11 = result;
  unint64_t v12 = HIDWORD(a6);
  if (a6 != 0xFFFFFFFF)
  {
    uint64_t v13 = *result;
    swift_unownedRetainStrong();
    BOOL v16 = sub_1B62EC0CC((uint64_t)&type metadata for MeshReferenceAsset, (uint64_t)&off_1F0F77318, a6);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B685126C(a2, a3, a4, a5, a6);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v11 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v17[0] = a6;
      v17[1] = v12;
      uint64_t v18 = v13;
      sub_1B68795FC(0, &qword_1E9DD6670);
      uint64_t v20 = v14;
      float v21 = &off_1F0F68360;
      uint64_t v15 = swift_allocObject();
      uint64_t v19 = v15;
      *(void *)(v15 + 16) = a2;
      *(void *)(v15 + 24) = a3;
      *(void *)(v15 + 32) = a4;
      *(void *)(v15 + 40) = a5;
      *(unsigned char *)(v15 + 48) = !v16;
      char v22 = 12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6A62610((uint64_t)v17);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v17);
    }
  }
  return result;
}

void *sub_1B6B71714(void *result, unint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v5 = *result;
    swift_unownedRetainStrong();
    BOOL v6 = sub_1B62EC0CC((uint64_t)&type metadata for Beamed, (uint64_t)&off_1F0F9FB80, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B68514C8(a2);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v3 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v8[0] = a2;
      v8[1] = v4;
      uint64_t v9 = v5;
      sub_1B68795FC(0, &qword_1E9DD66C8);
      uint64_t v11 = v7;
      unint64_t v12 = &off_1F0F68360;
      BOOL v10 = !v6;
      char v13 = 12;
      sub_1B6A62610((uint64_t)v8);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v8);
    }
  }
  return result;
}

void *sub_1B6B7184C(void *result, unint64_t a2, float a3)
{
  uint64_t v5 = result;
  unint64_t v6 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v7 = *result;
    swift_unownedRetainStrong();
    BOOL v8 = sub_1B62EC0CC((uint64_t)&type metadata for Opacity, (uint64_t)&off_1F0FA2BC8, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B68514E0(a2, a3);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v10[0] = a2;
      v10[1] = v6;
      uint64_t v11 = v7;
      sub_1B68795FC(0, &qword_1E9DD66C0);
      uint64_t v14 = v9;
      uint64_t v15 = &off_1F0F68360;
      float v12 = a3;
      BOOL v13 = !v8;
      char v16 = 12;
      sub_1B6A62610((uint64_t)v10);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v10);
    }
  }
  return result;
}

void *sub_1B6B71998(void *result, unint64_t a2, __n128 a3)
{
  unint64_t v4 = result;
  unint64_t v5 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v6 = *result;
    swift_unownedRetainStrong();
    BOOL v7 = sub_1B62EC0CC((uint64_t)&type metadata for Scale3, (uint64_t)&off_1F0FA1118, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6850AA0(a2, a3);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v4 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v11[0] = a2;
      v11[1] = v5;
      uint64_t v12 = v6;
      sub_1B68795FC(0, &qword_1E9DD66B8);
      uint64_t v14 = v8;
      uint64_t v15 = &off_1F0F68360;
      uint64_t v9 = (__n128 *)swift_allocObject();
      BOOL v13 = v9;
      v9[1] = a3;
      v9[2].n128_u8[0] = !v7;
      char v16 = 12;
      sub_1B6A62610((uint64_t)v11);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v11);
    }
  }
  return result;
}

void *sub_1B6B71AF8(void *result, unint64_t a2, __n128 a3, __n128 a4)
{
  unint64_t v5 = result;
  unint64_t v6 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v7 = *result;
    swift_unownedRetainStrong();
    BOOL v8 = sub_1B62EC0CC((uint64_t)&type metadata for LocalAABB, (uint64_t)&off_1F0FA8CF0, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B685160C(a2, a3, a4);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v13[0] = a2;
      v13[1] = v6;
      uint64_t v14 = v7;
      sub_1B68795FC(0, &qword_1E9DD6678);
      uint64_t v16 = v9;
      uint64_t v17 = &off_1F0F68360;
      BOOL v10 = (__n128 *)swift_allocObject();
      uint64_t v15 = v10;
      v10[1] = a3;
      _DWORD v10[2] = a4;
      v10[3].n128_u8[0] = !v8;
      char v18 = 12;
      sub_1B6A62610((uint64_t)v13);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v13);
    }
  }
  return result;
}

void *sub_1B6B71C5C(void *result, uint64_t a2, unint64_t a3)
{
  unint64_t v5 = result;
  unint64_t v6 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    uint64_t v7 = *result;
    swift_unownedRetainStrong();
    BOOL v8 = sub_1B62EC0CC((uint64_t)&type metadata for NodeVisibilityController, (uint64_t)&off_1F0F92398, a3);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6851700(a2, a3);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v10[0] = a3;
      v10[1] = v6;
      uint64_t v11 = v7;
      sub_1B68795FC(0, &qword_1E9DD66A8);
      uint64_t v13 = v9;
      uint64_t v14 = &off_1F0F68360;
      uint64_t v12 = swift_allocObject();
      sub_1B6879268(a2, v12 + 16);
      *(unsigned char *)(v12 + 56) = !v8;
      char v15 = 12;
      sub_1B6A62610((uint64_t)v10);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v10);
    }
  }
  return result;
}

void *sub_1B6B71DC4(void *result, uint64_t a2, unint64_t a3)
{
  unint64_t v5 = result;
  unint64_t v6 = HIDWORD(a3);
  if (a3 != 0xFFFFFFFF)
  {
    uint64_t v7 = *result;
    swift_unownedRetainStrong();
    BOOL v8 = sub_1B62EC0CC((uint64_t)&type metadata for NodeTransformController, (uint64_t)&off_1F0F8FAB0, a3);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6851718(a2, a3);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v5 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v10[0] = a3;
      v10[1] = v6;
      uint64_t v11 = v7;
      sub_1B68795FC(0, &qword_1E9DD66B0);
      uint64_t v13 = v9;
      uint64_t v14 = &off_1F0F68360;
      uint64_t v12 = swift_allocObject();
      sub_1B687935C(a2, v12 + 16);
      *(unsigned char *)(v12 + 56) = !v8;
      char v15 = 12;
      sub_1B6A62610((uint64_t)v10);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v10);
    }
  }
  return result;
}

void *sub_1B6B71F2C(void *result, unint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v5 = *result;
    swift_unownedRetainStrong();
    BOOL v6 = sub_1B62EC0CC((uint64_t)&type metadata for Authoring, (uint64_t)&off_1F0FA7FD8, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B6851838(a2);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v3 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v8[0] = a2;
      v8[1] = v4;
      uint64_t v9 = v5;
      sub_1B68795FC(0, (unint64_t *)&unk_1E9DD66E0);
      uint64_t v11 = v7;
      uint64_t v12 = &off_1F0F68360;
      BOOL v10 = !v6;
      char v13 = 12;
      sub_1B6A62610((uint64_t)v8);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v8);
    }
  }
  return result;
}

void *sub_1B6B72064(void *result, unint64_t a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  uint64_t v7 = result;
  unint64_t v8 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v9 = *result;
    swift_unownedRetainStrong();
    BOOL v10 = sub_1B62EC0CC((uint64_t)&type metadata for ProjectionMatrix, (uint64_t)&off_1F0F6EF58, a2);
    swift_release();
    swift_unownedRetainStrong();
    sub_1B685193C(a2, a3, a4, a5, a6);
    swift_release();
    swift_unownedRetainStrong();
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result) {
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v7 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v17[0] = a2;
      v17[1] = v8;
      uint64_t v18 = v9;
      sub_1B68795FC(0, &qword_1E9DD66A0);
      uint64_t v20 = v11;
      float v21 = &off_1F0F68360;
      uint64_t v12 = (__n128 *)swift_allocObject();
      uint64_t v19 = v12;
      v12[1] = a3;
      _DWORD v12[2] = a4;
      void v12[3] = a5;
      v12[4] = a6;
      v12[5].n128_u8[0] = !v10;
      char v22 = 12;
      sub_1B6A62610((uint64_t)v17);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v17);
    }
  }
  return result;
}

uint64_t sub_1B6B721DC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1B6D67280();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1B6B8C524(v6);
  return sub_1B6E32A28();
}

uint64_t sub_1B6B72258@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  int v6 = a1;
  unint64_t v8 = HIDWORD(a1);
  sub_1B6B95068(0, (unint64_t *)&unk_1E9DD6610, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityValueAccessors);
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 48) = v6;
  *(_DWORD *)(v11 + 52) = v8;
  *(void *)(v11 + 56) = a2;
  *(void *)(v11 + 64) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(_DWORD *)(v12 + 24) = v6;
  *(_DWORD *)(v12 + 28) = v8;
  *(void *)(v12 + 32) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(_DWORD *)(v13 + 24) = v6;
  *(_DWORD *)(v13 + 28) = v8;
  *(void *)(v13 + 32) = a2;
  *(void *)(v11 + 16) = sub_1B6B94E9C;
  *(void *)(v11 + 24) = v12;
  *(void *)(v11 + 32) = sub_1B67690DC;
  *(void *)(v11 + 40) = v13;
  a4[3] = v10;
  a4[4] = (uint64_t)&off_1F0F67590;
  *a4 = v11;
  return swift_retain_n();
}

uint64_t sub_1B6B72370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a1 + 32))(&v5, a2, a3);
  if ((v5 & 0x100000000) != 0) {
    return MEMORY[0x1E4FBC860];
  }
  int v4 = v5;
  sub_1B6B95068(0, (unint64_t *)&unk_1EB980D30, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B6E77050;
  *(_DWORD *)(result + 32) = v4;
  return result;
}

char *sub_1B6B72414()
{
  return aVisible_0;
}

uint64_t sub_1B6B72420(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for VFXBridgingRemapAndResolveContext();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  id v7 = a1;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1B6A61410(4, v3, v3, v6);
  if (a1)
  {
    id v8 = objc_msgSend(v7, sel_assetRegistry);
    id v9 = objc_msgSend(v8, sel_rootNode);

    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_1B6B95048;
    *(void *)(v10 + 24) = v6;
    aBlock[4] = sub_1B6B95060;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B69F0B50;
    aBlock[3] = &unk_1F0FBA298;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_enumerateHierarchyUsingBlock_, v11);

    swift_release();
    _Block_release(v11);
    return swift_release();
  }
  else
  {
    return swift_release();
  }
}

double sub_1B6B725EC()
{
  id v1 = (void *)MEMORY[0x1BA9B8670](v0 + 32);
  if (v1)
  {
    uint64_t v2 = v1;
    objc_msgSend(v1, sel_worldTransform);
    double v5 = v3;

    return v5;
  }
  else
  {
    *(void *)&double result = 1065353216;
  }
  return result;
}

uint64_t sub_1B6B7266C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B726B0()
{
  return sub_1B6E318B8();
}

uint64_t sub_1B6B726B8()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6B726F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  v8[1] = 0;
  swift_unknownObjectWeakInit();
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6C0C780();
  if (v2)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return sub_1B677E124((uint64_t)v8);
  }
  else
  {
    _DWORD v8[2] = v6;
    void v8[3] = v7;
    sub_1B6B96284(v8, a2);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return sub_1B6B47018((uint64_t)v8);
  }
}

uint64_t sub_1B6B727CC(void *a1)
{
  return sub_1B6C0C6E4();
}

uint64_t sub_1B6B7283C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1B6E334B8();
  }
}

void *sub_1B6B7286C()
{
  id v1 = objc_msgSend(v0, sel_behaviorGraph);
  uint64_t v2 = v1;
  if (v1)
  {
    double v3 = (char *)objc_msgSend(v1, sel_entityObject);

    if (v3)
    {
      uint64_t v2 = *(void **)&v3[OBJC_IVAR____TtC3VFX15VFXEntityObject_entity];
      if (!swift_weakLoadStrong())
      {
        if (*(void *)&v3[OBJC_IVAR____TtC3VFX15VFXEntityObject_localEntityManager])
        {
          swift_retain();
        }
        else
        {
          type metadata accessor for EntityManager();
          swift_allocObject();
          sub_1B6299098(0x746C7561666544, 0xE700000000000000, 1, 0);
        }
      }

      swift_release();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t *sub_1B6B72984(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v195 = qword_1EB997A18;
  int v196 = 0;
  char v197 = 2;
  uint64_t v198 = 0;
  char v199 = 2;
  uint64_t v200 = 0;
  swift_retain();
  sub_1B62C9DA8(v3, (uint64_t)&v195, 0x200000000, v181);
  swift_release();
  double result = (uint64_t *)sub_1B62CA57C((uint64_t)v181, (uint64_t)v182, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v182[0])
  {
    long long v189 = v182[0];
    long long v190 = v182[1];
    uint64_t v191 = v183;
    if (v188 >= 1)
    {
      uint64_t v152 = v185;
      if (v185)
      {
        uint64_t v5 = 0;
        uint64_t v151 = v184;
        uint64_t v154 = v187[4];
        int v6 = *(unsigned __int8 *)(v186 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v150 = (uint64_t)(v187 + 6);
        uint64_t v147 = v187 + 13;
        long long v174 = (void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v160 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
        float64x2_t v155 = v187;
        int v149 = v187 + 8;
        uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v163 = a2;
        uint64_t v173 = v3;
        int v148 = v6;
        do
        {
          id v8 = (unsigned int *)(v151 + 48 * v5);
          uint64_t v162 = *v8;
          uint64_t v158 = v8[1];
          uint64_t v9 = *((void *)v8 + 5);
          uint64_t v156 = *((void *)v8 + 4);
          uint64_t v157 = *((void *)v8 + 2);
          uint64_t v153 = v5;
          if (v6)
          {
            uint64_t v10 = *(os_unfair_lock_s **)(v9 + 376);
            swift_retain();
            os_unfair_lock_lock(v10);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v154);
          sub_1B62CA57C(v150, (uint64_t)v194, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v11 = v155[4];
          uint64_t v12 = *(void *)(*(void *)(*(void *)(*(void *)(v9 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v155[6] = ecs_stack_allocator_allocate(v11, 48 * v12, 8);
          v155[7] = v12;
          v149[1] = 0;
          _OWORD v149[2] = 0;
          *int v149 = 0;
          swift_release();
          uint64_t v164 = v9;
          if (v157)
          {
            uint64_t v13 = v174;
            if (v156)
            {
              uint64_t v14 = 0;
              while (1)
              {
                uint64_t v15 = *(void *)(v157 + 8 * v14);
                uint64_t v16 = swift_retain();
                if (*(unsigned char *)(v9 + 184)) {
                  break;
                }
                uint64_t v17 = *(int *)(*(void *)(v9 + 168) + 4 * v15);
                int v18 = *(_DWORD *)(*(void *)(v16 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v17 + 8);
                swift_release();
                BOOL v19 = v17 == -1 && v18 == 0;
                uint64_t v20 = (uint64_t)v7;
                if (!v19)
                {
                  if ((v17 & 0x80000000) != 0)
                  {
                    uint64_t v20 = (uint64_t)v7;
                  }
                  else
                  {
                    uint64_t v20 = (uint64_t)v7;
                    if (v13[1] > v17)
                    {
                      BOOL v21 = v18 == -1 || *(_DWORD *)(*v13 + 12 * (int)v17 + 8) == v18;
                      uint64_t v20 = (uint64_t)v7;
                      if (v21) {
                        uint64_t v20 = swift_retain();
                      }
                    }
                  }
                }
                uint64_t v167 = *(void *)(v20 + 16);
                if (v167)
                {
                  uint64_t v161 = v15;
                  uint64_t v159 = v14;
                  uint64_t v22 = 0;
                  uint64_t v165 = v20 + 32;
                  do
                  {
                    uint64_t v23 = *(void *)(*(void *)(v165 + 16 * v22 + 8) + 8);
                    long long v169 = *(_OWORD *)(v165 + 16 * v22);
                    uint64_t v24 = v169;
                    if (sub_1B62CD84C(v169) >= 1)
                    {
                      char v25 = *(unsigned char *)(v9 + 184);
                      uint64_t v26 = swift_retain();
                      if (v25) {
                        goto LABEL_177;
                      }
                      uint64_t v27 = *(int *)(*(void *)(v9 + 168) + 4 * v161);
                      int v28 = *(_DWORD *)(*(void *)(v26 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                      + 12 * (int)v27
                                      + 8);
                      swift_release();
                      BOOL v29 = v27 == -1 && v28 == 0;
                      if (v29 || (v27 & 0x80000000) != 0 || v13[1] <= v27) {
                        goto LABEL_176;
                      }
                      uint64_t v30 = *v13 + 12 * (int)v27;
                      if (v28 != -1 && *(_DWORD *)(v30 + 8) != v28) {
                        goto LABEL_176;
                      }
                      uint64_t v32 = *(void *)(*(void *)(v3 + 136) + 8 * *(int *)(*v13 + 12 * (int)v27) + 32);
                      uint64_t v33 = *(void *)(v32 + 48);
                      uint64_t v34 = *(void *)(v33 + 16);
                      if (!v34) {
                        goto LABEL_176;
                      }
                      uint64_t v35 = *(__int16 *)(v30 + 4);
                      uint64_t v36 = (uint64_t *)(v33 + 56);
                      while (*(v36 - 3) != (void)v169)
                      {
                        v36 += 5;
                        if (!--v34) {
                          goto LABEL_176;
                        }
                      }
                      uint64_t v37 = *v36;
                      if (*(v36 - 1) <= 1) {
                        uint64_t v38 = 1;
                      }
                      else {
                        uint64_t v38 = *(v36 - 1);
                      }
                      uint64_t v39 = *(void *)(v32 + 128);
                      if (sub_1B62CD034(v169))
                      {
                        uint64_t v40 = v39 + v37 + v38 * v35;
                        long long v180 = v169;
                        char v41 = sub_1B62C12C4(&v178);
                        sub_1B62C5E18(v40, v169, (uint64_t)v41);
                        char v42 = *(uint64_t (**)(void, uint64_t))(v23 + 48);
                        swift_retain();
                        if (v42(v169, v23))
                        {
                          uint64_t v43 = *(void *)(v173 + v160);
                          ecs_stack_allocator_push_snapshot(*(void *)(*(void *)v43 + 32));
                          uint64_t v170 = v43;
                          uint64_t v44 = *(void *)(*(void *)v43 + 32);
                          uint64_t v45 = v40;
                          uint64_t v46 = sub_1B62CD034(v24);
                          uint64_t v47 = sub_1B62CD004(v24);
                          long long v48 = ecs_stack_allocator_allocate(v44, v46, v47);
                          sub_1B62CD04C();
                          long long v49 = v180;
                          sub_1B62C550C((uint64_t)&v178, v180);
                          (*(void (**)(uint64_t, _UNKNOWN **, void))(*(void *)(*((void *)&v49 + 1) + 8)
                                                                               + 96))(v163, &off_1F0F9C088, v49);
                          if (v174[1] > v27 && (v28 == -1 || *(_DWORD *)(*v174 + 12 * (int)v27 + 8) == v28))
                          {
                            int v62 = (unsigned int *)(*v174 + 12 * (int)v27);
                            sub_1B62CD3E0(*(void *)(*(void *)(v173 + 136) + 8 * (int)*v62 + 32), v24, *v62 | ((unint64_t)*((unsigned __int16 *)v62 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v62 + 2) << 32), v173, v175);
                            uint64_t v50 = v175[0];
                          }
                          else
                          {
                            uint64_t v50 = 0;
                          }
                          long long v63 = v180;
                          int v64 = sub_1B62C14BC(&v178, v180);
                          uint64_t v176 = v63;
                          uint64_t v177 = *(void *)(*((void *)&v63 + 1) + 8);
                          __int16 v65 = sub_1B62C12C4(v175);
                          (*(void (**)(uint64_t *, void *, void))(*(void *)(v63 - 8) + 16))(v65, v64, v63);
                          sub_1B6B3F674((uint64_t)v175, v50, v24);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v175);
                          if (v174[1] <= v27) {
                            goto LABEL_177;
                          }
                          uint64_t v66 = *v174;
                          if (v28 != -1 && *(_DWORD *)(v66 + 12 * (int)v27 + 8) != v28) {
                            goto LABEL_177;
                          }
                          uint64_t v67 = (int *)(v66 + 12 * (int)v27);
                          uint64_t v68 = *((__int16 *)v67 + 2);
                          uint64_t v69 = *(uint64_t **)(*(void *)(v173 + 136) + 8 * *v67 + 32);
                          uint64_t v70 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 88);
                          swift_retain();
                          if (v70(v48, v45, v24, v23))
                          {
                            uint64_t v71 = v69[24];
                            uint64_t v9 = v164;
                            if (v71)
                            {
                              uint64_t v72 = v69[26];
                              uint64_t v73 = 8 * (v68 >> 6);
                              *(void *)(v71 + v73) |= 1 << v68;
                              *(void *)(v72 + v73) &= ~(1 << v68);
                            }
                            sub_1B635AD78(v69[5], (uint64_t)v69, v68);
                            swift_release();
                          }
                          else
                          {
                            swift_release();
                            uint64_t v9 = v164;
                          }
                          sub_1B633B0E8();
                          ecs_stack_allocator_pop_snapshot(*(void *)(*(void *)v170 + 32));
                        }
                        else
                        {
                          long long v51 = v180;
                          sub_1B62C550C((uint64_t)&v178, v180);
                          (*(void (**)(uint64_t, _UNKNOWN **, void))(*(void *)(*((void *)&v51 + 1) + 8)
                                                                               + 96))(v163, &off_1F0F9C088, v51);
                          if (v174[1] > v27
                            && ((uint64_t v52 = *v174 + 12 * (int)v27, v53 = *(__int16 *)(v52 + 4), v28 == -1)
                             || *(_DWORD *)(v52 + 8) == v28)
                            && (uint64_t v54 = *(void *)(*(void *)(v173 + 136) + 8 * *(int *)(*v174 + 12 * (int)v27) + 32),
                                uint64_t v55 = *(void *)(v54 + 48),
                                (uint64_t v56 = *(void *)(v55 + 16)) != 0))
                          {
                            uint64_t v57 = v55 + 56;
                            uint64_t v9 = v164;
                            while (*(void *)(v57 - 24) != (void)v169)
                            {
                              v57 += 40;
                              if (!--v56)
                              {
                                uint64_t v58 = 0;
                                goto LABEL_70;
                              }
                            }
                            uint64_t v76 = v57 - 8;
                            uint64_t v75 = *(void *)(v57 - 8);
                            uint64_t v74 = *(void *)(v76 + 8);
                            if (v75 <= 1) {
                              uint64_t v75 = 1;
                            }
                            uint64_t v58 = *(void *)(v54 + 128) + v74 + v75 * v53;
                          }
                          else
                          {
                            uint64_t v58 = 0;
                            uint64_t v9 = v164;
                          }
LABEL_70:
                          long long v59 = v180;
                          uint64_t v60 = sub_1B62C14BC(&v178, v180);
                          uint64_t v176 = v59;
                          uint64_t v177 = *(void *)(*((void *)&v59 + 1) + 8);
                          uint64_t v61 = sub_1B62C12C4(v175);
                          (*(void (**)(uint64_t *, void *, void))(*(void *)(v59 - 8) + 16))(v61, v60, v59);
                          sub_1B6B3F674((uint64_t)v175, v58, v169);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v175);
                        }
                        uint64_t v3 = v173;
                        uint64_t v13 = v174;
                        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v178);
                        swift_release();
                      }
                      else
                      {
                        uint64_t v3 = v173;
                        uint64_t v13 = v174;
                        uint64_t v9 = v164;
                      }
                    }
                    ++v22;
                  }
                  while (v22 != v167);
                  swift_bridgeObjectRelease();
                  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
                  uint64_t v14 = v159;
                }
                else
                {
                  swift_bridgeObjectRelease();
                }
                if (++v14 == v156) {
                  goto LABEL_87;
                }
              }
              while (1)
              {
LABEL_177:
                sub_1B6E32BE8();
                __break(1u);
              }
            }
          }
          else
          {
            long long v77 = v174;
            if (v162 != v158)
            {
              do
              {
                uint64_t v81 = swift_retain();
                if (*(unsigned char *)(v9 + 184)) {
                  goto LABEL_177;
                }
                uint64_t v82 = *(int *)(*(void *)(v9 + 168) + 4 * v162);
                int v83 = *(_DWORD *)(*(void *)(v81 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v82 + 8);
                swift_release();
                BOOL v84 = v82 == -1 && v83 == 0;
                uint64_t v85 = (uint64_t)v7;
                if (!v84)
                {
                  if ((v82 & 0x80000000) != 0)
                  {
                    uint64_t v85 = (uint64_t)v7;
                  }
                  else
                  {
                    uint64_t v85 = (uint64_t)v7;
                    if (v77[1] > v82)
                    {
                      BOOL v86 = v83 == -1 || *(_DWORD *)(*v77 + 12 * (int)v82 + 8) == v83;
                      uint64_t v85 = (uint64_t)v7;
                      if (v86) {
                        uint64_t v85 = swift_retain();
                      }
                    }
                  }
                }
                uint64_t v168 = *(void *)(v85 + 16);
                if (v168)
                {
                  uint64_t v87 = 0;
                  uint64_t v166 = v85 + 32;
                  do
                  {
                    uint64_t v88 = *(void *)(*(void *)(v166 + 16 * v87 + 8) + 8);
                    long long v171 = *(_OWORD *)(v166 + 16 * v87);
                    uint64_t v89 = v171;
                    if (sub_1B62CD84C(v171) >= 1)
                    {
                      char v90 = *(unsigned char *)(v9 + 184);
                      uint64_t v91 = swift_retain();
                      if (v90) {
                        goto LABEL_177;
                      }
                      uint64_t v92 = *(int *)(*(void *)(v9 + 168) + 4 * v162);
                      int v93 = *(_DWORD *)(*(void *)(v91 + OBJC_IVAR____TtC3VFX13EntityManager__entries)
                                      + 12 * (int)v92
                                      + 8);
                      swift_release();
                      BOOL v94 = v92 == -1 && v93 == 0;
                      if (v94
                        || (v92 & 0x80000000) != 0
                        || v77[1] <= v92
                        || ((v95 = *v77 + 12 * (int)v92, v93 != -1) ? (BOOL v96 = *(_DWORD *)(v95 + 8) == v93) : (BOOL v96 = 1),
                            !v96
                         || (uint64_t v97 = *(void *)(*(void *)(v3 + 136) + 8 * *(int *)(*v77 + 12 * (int)v92) + 32),
                             uint64_t v98 = *(void *)(v97 + 48),
                             (uint64_t v99 = *(void *)(v98 + 16)) == 0)))
                      {
LABEL_176:
                        uint64_t v178 = 0;
                        unint64_t v179 = 0xE000000000000000;
                        swift_retain_n();
                        sub_1B6E328C8();
                        swift_bridgeObjectRelease();
                        uint64_t v178 = 0x20797469746E45;
                        unint64_t v179 = 0xE700000000000000;
                        sub_1B681F698();
                        sub_1B6E31948();
                        swift_bridgeObjectRelease();
                        sub_1B6E31948();
                        sub_1B6E33B48();
                        sub_1B6E31948();
                        swift_release_n();
                        swift_bridgeObjectRelease();
                        goto LABEL_177;
                      }
                      uint64_t v100 = *(__int16 *)(v95 + 4);
                      id v101 = (uint64_t *)(v98 + 56);
                      while (*(v101 - 3) != (void)v171)
                      {
                        v101 += 5;
                        if (!--v99) {
                          goto LABEL_176;
                        }
                      }
                      uint64_t v102 = *v101;
                      if (*(v101 - 1) <= 1) {
                        uint64_t v103 = 1;
                      }
                      else {
                        uint64_t v103 = *(v101 - 1);
                      }
                      uint64_t v104 = *(void *)(v97 + 128);
                      if (sub_1B62CD034(v171))
                      {
                        uint64_t v105 = v104 + v102 + v103 * v100;
                        long long v180 = v171;
                        uint64_t v106 = sub_1B62C12C4(&v178);
                        sub_1B62C5E18(v105, v171, (uint64_t)v106);
                        int v107 = *(uint64_t (**)(void, uint64_t))(v88 + 48);
                        swift_retain();
                        if (v107(v171, v88))
                        {
                          uint64_t v108 = *(void *)(v173 + v160);
                          ecs_stack_allocator_push_snapshot(*(void *)(*(void *)v108 + 32));
                          uint64_t v172 = v108;
                          uint64_t v109 = *(void *)(*(void *)v108 + 32);
                          uint64_t v110 = v105;
                          uint64_t v111 = sub_1B62CD034(v89);
                          uint64_t v112 = sub_1B62CD004(v89);
                          unint64_t v113 = ecs_stack_allocator_allocate(v109, v111, v112);
                          sub_1B62CD04C();
                          long long v114 = v180;
                          sub_1B62C550C((uint64_t)&v178, v180);
                          (*(void (**)(uint64_t, _UNKNOWN **, void))(*(void *)(*((void *)&v114 + 1) + 8)
                                                                               + 96))(v163, &off_1F0F9C088, v114);
                          if (v174[1] > v92 && (v93 == -1 || *(_DWORD *)(*v174 + 12 * (int)v92 + 8) == v93))
                          {
                            int v127 = (unsigned int *)(*v174 + 12 * (int)v92);
                            sub_1B62CD3E0(*(void *)(*(void *)(v173 + 136) + 8 * (int)*v127 + 32), v89, *v127 | ((unint64_t)*((unsigned __int16 *)v127 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v127 + 2) << 32), v173, v175);
                            uint64_t v115 = v175[0];
                          }
                          else
                          {
                            uint64_t v115 = 0;
                          }
                          long long v128 = v180;
                          uint64_t v129 = sub_1B62C14BC(&v178, v180);
                          uint64_t v176 = v128;
                          uint64_t v177 = *(void *)(*((void *)&v128 + 1) + 8);
                          uint64_t v130 = sub_1B62C12C4(v175);
                          (*(void (**)(uint64_t *, void *, void))(*(void *)(v128 - 8) + 16))(v130, v129, v128);
                          sub_1B6B3F674((uint64_t)v175, v115, v89);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v175);
                          if (v174[1] <= v92) {
                            goto LABEL_177;
                          }
                          uint64_t v131 = *v174;
                          if (v93 != -1 && *(_DWORD *)(v131 + 12 * (int)v92 + 8) != v93) {
                            goto LABEL_177;
                          }
                          unint64_t v132 = (int *)(v131 + 12 * (int)v92);
                          uint64_t v133 = *((__int16 *)v132 + 2);
                          uint64_t v134 = *(uint64_t **)(*(void *)(v173 + 136) + 8 * *v132 + 32);
                          BOOL v135 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v88 + 88);
                          swift_retain();
                          if (v135(v113, v110, v89, v88))
                          {
                            uint64_t v136 = v134[24];
                            uint64_t v9 = v164;
                            if (v136)
                            {
                              uint64_t v137 = v134[26];
                              uint64_t v138 = 8 * (v133 >> 6);
                              *(void *)(v136 + v138) |= 1 << v133;
                              *(void *)(v137 + v138) &= ~(1 << v133);
                            }
                            sub_1B635AD78(v134[5], (uint64_t)v134, v133);
                            swift_release();
                          }
                          else
                          {
                            swift_release();
                            uint64_t v9 = v164;
                          }
                          sub_1B633B0E8();
                          ecs_stack_allocator_pop_snapshot(*(void *)(*(void *)v172 + 32));
                        }
                        else
                        {
                          long long v116 = v180;
                          sub_1B62C550C((uint64_t)&v178, v180);
                          (*(void (**)(uint64_t, _UNKNOWN **, void))(*(void *)(*((void *)&v116 + 1) + 8)
                                                                               + 96))(v163, &off_1F0F9C088, v116);
                          if (v174[1] > v92
                            && ((uint64_t v117 = *v174 + 12 * (int)v92, v118 = *(__int16 *)(v117 + 4), v93 == -1)
                             || *(_DWORD *)(v117 + 8) == v93)
                            && (uint64_t v119 = *(void *)(*(void *)(v173 + 136) + 8 * *(int *)(*v174 + 12 * (int)v92) + 32),
                                uint64_t v120 = *(void *)(v119 + 48),
                                (uint64_t v121 = *(void *)(v120 + 16)) != 0))
                          {
                            uint64_t v122 = v120 + 56;
                            uint64_t v9 = v164;
                            while (*(void *)(v122 - 24) != (void)v171)
                            {
                              v122 += 40;
                              if (!--v121)
                              {
                                uint64_t v123 = 0;
                                goto LABEL_146;
                              }
                            }
                            uint64_t v141 = v122 - 8;
                            uint64_t v140 = *(void *)(v122 - 8);
                            uint64_t v139 = *(void *)(v141 + 8);
                            if (v140 <= 1) {
                              uint64_t v140 = 1;
                            }
                            uint64_t v123 = *(void *)(v119 + 128) + v139 + v140 * v118;
                          }
                          else
                          {
                            uint64_t v123 = 0;
                            uint64_t v9 = v164;
                          }
LABEL_146:
                          long long v124 = v180;
                          int v125 = sub_1B62C14BC(&v178, v180);
                          uint64_t v176 = v124;
                          uint64_t v177 = *(void *)(*((void *)&v124 + 1) + 8);
                          uint64_t v126 = sub_1B62C12C4(v175);
                          (*(void (**)(uint64_t *, void *, void))(*(void *)(v124 - 8) + 16))(v126, v125, v124);
                          sub_1B6B3F674((uint64_t)v175, v123, v171);
                          _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v175);
                        }
                        uint64_t v3 = v173;
                        long long v77 = v174;
                        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v178);
                        swift_release();
                      }
                      else
                      {
                        uint64_t v3 = v173;
                        long long v77 = v174;
                        uint64_t v9 = v164;
                      }
                    }
                    ++v87;
                  }
                  while (v87 != v168);
                  swift_bridgeObjectRelease();
                  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
                }
                else
                {
                  swift_bridgeObjectRelease();
                }
                ++v162;
              }
              while (v162 != v158);
            }
          }
LABEL_87:
          v192[0] = v189;
          v192[1] = v190;
          uint64_t v193 = v191;
          sub_1B6345178(v155, (unsigned __int16 **)v192, (uint64_t)v194);
          if (*(void *)(v155[13] + 16))
          {
            uint64_t v78 = swift_bridgeObjectRetain();
            sub_1B639147C(v78, v9);
            swift_bridgeObjectRelease();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v80 = v155[13];
            if (isUniquelyReferenced_nonNull_native)
            {
              sub_1B6399BB8(0, *(void *)(v80 + 16));
            }
            else
            {
              id v142 = v7;
              if (*(void *)(v80 + 24) >= 2uLL)
              {
                sub_1B62D2D78(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
                id v142 = (void *)swift_allocObject();
                size_t v143 = j__malloc_size(v142);
                _OWORD v142[2] = 0;
                v142[3] = 2 * ((uint64_t)(v143 - 32) / 72);
              }
              *uint64_t v147 = v142;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v155[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              long long v144 = *(char **)(v9 + 232);
              long long v145 = *(char **)(v9 + 256);
              if (v144 == v145)
              {
                long long v146 = *(char **)(v9 + 240);
              }
              else
              {
                sub_1B666018C(v145, v144);
                long long v145 = *(char **)(v9 + 232);
                long long v146 = *(char **)(v9 + 240);
                if (v146 == v145)
                {
                  long long v146 = 0;
                  long long v145 = 0;
                  *(void *)(v9 + 232) = 0;
                  *(void *)(v9 + 240) = 0;
                }
              }
              *(void *)(v9 + 248) = v146;
              *(void *)(v9 + 256) = v145;
            }
          }
          ecs_stack_allocator_pop_snapshot(v154);
          int v6 = v148;
          if (v148)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 376));
          }
          swift_release();
          uint64_t v5 = v153 + 1;
        }
        while (v153 + 1 != v152);
      }
    }
    return sub_1B632F170(v181);
  }
  return result;
}

id sub_1B6B73CD0(void *a1, uint64_t a2, uint64_t a3)
{
  id result = objc_msgSend(a1, sel_asset);
  if (result)
  {
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      int v6 = v5;
      id v7 = objc_msgSend(v5, sel_authoringGraph);
      sub_1B6E32718();
      swift_unknownObjectRelease();
      type metadata accessor for AuthoringGraph();
      uint64_t v8 = swift_dynamicCast();
      MEMORY[0x1F4188790](v8, v9);
      _DWORD v13[2] = a3;
      void v13[3] = &off_1F0F9C088;
      uint64_t v10 = MEMORY[0x1E4FBC860];
      sub_1B68B708C((uint64_t)sub_1B66546B8, (uint64_t)v13, 0, 0x1000000000000000uLL, 1, MEMORY[0x1E4FBC860]);
      uint64_t v11 = sub_1B68C70AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = (void *)swift_allocObject();
      _DWORD v12[2] = 0;
      void v12[3] = v10;
      v12[4] = 0;
      void v12[5] = 0;
      void v12[6] = sub_1B67DD1F0(v10);
      void v12[3] = v11;
      swift_release();
      objc_msgSend(v6, sel_setAuthoringGraph_, v12);
      swift_unknownObjectRelease();
      return (id)swift_release();
    }
    else
    {
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t VFXNode.bridgedComponentNames.getter()
{
  unint64_t v1 = 0xEF72656C6C6F7274;
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E76B30;
  *(void *)(v2 + 32) = 0xD000000000000017;
  *(void *)(v2 + 40) = 0x80000001B6EAAD50;
  *(void *)(v2 + 48) = 0xD000000000000018;
  *(void *)(v2 + 56) = 0x80000001B6EAAD70;
  id v3 = objc_msgSend(v0, sel_light);

  if (v3)
  {
    uint64_t v2 = (uint64_t)sub_1B6335858(1, 3, 1, (void *)v2);
    *(void *)(v2 + 16) = 3;
    *(void *)(v2 + 64) = 0x6E6F43746867694CLL;
    *(void *)(v2 + 72) = 0xEF72656C6C6F7274;
  }
  id v4 = objc_msgSend(v0, sel_camera);

  if (v4)
  {
    unint64_t v6 = *(void *)(v2 + 16);
    unint64_t v5 = *(void *)(v2 + 24);
    if (v6 >= v5 >> 1) {
      uint64_t v2 = (uint64_t)sub_1B6335858(v5 > 1, v6 + 1, 1, (void *)v2);
    }
    *(void *)(v2 + 16) = v6 + 1;
    uint64_t v7 = v2 + 16 * v6;
    *(void *)(v7 + 32) = 0xD000000000000010;
    *(void *)(v7 + 40) = 0x80000001B6EAAE10;
    id v8 = objc_msgSend(v0, sel_camera);
    if (v8)
    {
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_motionBlur);

      if (v10)
      {

        unint64_t v12 = *(void *)(v2 + 16);
        unint64_t v11 = *(void *)(v2 + 24);
        if (v12 >= v11 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v11 > 1, v12 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v12 + 1;
        uint64_t v13 = v2 + 16 * v12;
        *(void *)(v13 + 32) = 0xD000000000000020;
        *(void *)(v13 + 40) = 0x80000001B6EAAE60;
      }
    }
    id v14 = objc_msgSend(v0, sel_camera);
    if (v14)
    {
      uint64_t v15 = v14;
      id v16 = objc_msgSend(v14, sel_depthOfField);

      if (v16)
      {

        unint64_t v18 = *(void *)(v2 + 16);
        unint64_t v17 = *(void *)(v2 + 24);
        if (v18 >= v17 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v17 > 1, v18 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v18 + 1;
        uint64_t v19 = v2 + 16 * v18;
        *(void *)(v19 + 32) = 0xD000000000000022;
        *(void *)(v19 + 40) = 0x80000001B6EAAF90;
      }
    }
    id v20 = objc_msgSend(v0, sel_camera);
    if (v20)
    {
      BOOL v21 = v20;
      id v22 = objc_msgSend(v20, sel_grain);

      if (v22)
      {

        unint64_t v24 = *(void *)(v2 + 16);
        unint64_t v23 = *(void *)(v2 + 24);
        if (v24 >= v23 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v23 > 1, v24 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v24 + 1;
        uint64_t v25 = v2 + 16 * v24;
        *(void *)(v25 + 32) = 0xD00000000000001BLL;
        *(void *)(v25 + 40) = 0x80000001B6EAAF70;
      }
    }
    id v26 = objc_msgSend(v0, sel_camera);
    if (v26)
    {
      uint64_t v27 = v26;
      id v28 = objc_msgSend(v26, sel_lensBlur);

      if (v28)
      {

        unint64_t v30 = *(void *)(v2 + 16);
        unint64_t v29 = *(void *)(v2 + 24);
        if (v30 >= v29 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v29 > 1, v30 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v30 + 1;
        uint64_t v31 = v2 + 16 * v30;
        *(void *)(v31 + 32) = 0xD00000000000001ELL;
        *(void *)(v31 + 40) = 0x80000001B6EAAF50;
      }
    }
    id v32 = objc_msgSend(v0, sel_camera);
    if (v32)
    {
      uint64_t v33 = v32;
      id v34 = objc_msgSend(v32, sel_bloom);

      if (v34)
      {

        unint64_t v36 = *(void *)(v2 + 16);
        unint64_t v35 = *(void *)(v2 + 24);
        if (v36 >= v35 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v35 > 1, v36 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v36 + 1;
        uint64_t v37 = v2 + 16 * v36;
        *(void *)(v37 + 32) = 0xD00000000000001BLL;
        *(void *)(v37 + 40) = 0x80000001B6EAAF30;
      }
    }
    id v38 = objc_msgSend(v0, sel_camera);
    if (v38)
    {
      uint64_t v39 = v38;
      id v40 = objc_msgSend(v38, sel_exposure);

      if (v40)
      {

        unint64_t v42 = *(void *)(v2 + 16);
        unint64_t v41 = *(void *)(v2 + 24);
        if (v42 >= v41 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v41 > 1, v42 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v42 + 1;
        uint64_t v43 = v2 + 16 * v42;
        *(void *)(v43 + 32) = 0xD00000000000001ELL;
        *(void *)(v43 + 40) = 0x80000001B6EAAF10;
      }
    }
    id v44 = objc_msgSend(v0, sel_camera);
    if (v44)
    {
      uint64_t v45 = v44;
      id v46 = objc_msgSend(v44, sel_chromaticTransform);

      if (v46)
      {

        unint64_t v48 = *(void *)(v2 + 16);
        unint64_t v47 = *(void *)(v2 + 24);
        if (v48 >= v47 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v47 > 1, v48 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v48 + 1;
        uint64_t v49 = v2 + 16 * v48;
        *(void *)(v49 + 32) = 0xD000000000000028;
        *(void *)(v49 + 40) = 0x80000001B6EAAEE0;
      }
    }
    id v50 = objc_msgSend(v0, sel_camera);
    if (v50)
    {
      long long v51 = v50;
      id v52 = objc_msgSend(v50, sel_doughnutBokeh);

      if (v52)
      {

        unint64_t v54 = *(void *)(v2 + 16);
        unint64_t v53 = *(void *)(v2 + 24);
        if (v54 >= v53 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v53 > 1, v54 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v54 + 1;
        uint64_t v55 = v2 + 16 * v54;
        *(void *)(v55 + 32) = 0xD000000000000023;
        *(void *)(v55 + 40) = 0x80000001B6EAAEB0;
      }
    }
    id v56 = objc_msgSend(v0, sel_camera);
    if (v56)
    {
      uint64_t v57 = v56;
      id v58 = objc_msgSend(v56, sel_ssao);

      if (v58)
      {

        unint64_t v60 = *(void *)(v2 + 16);
        unint64_t v59 = *(void *)(v2 + 24);
        if (v60 >= v59 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v59 > 1, v60 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v60 + 1;
        uint64_t v61 = v2 + 16 * v60;
        *(void *)(v61 + 32) = 0xD00000000000001ALL;
        *(void *)(v61 + 40) = 0x80000001B6EAAE90;
      }
    }
    id v62 = objc_msgSend(v0, sel_camera);
    if (v62)
    {
      long long v63 = v62;
      id v64 = objc_msgSend(v62, sel_motionBlur);

      if (v64)
      {

        unint64_t v66 = *(void *)(v2 + 16);
        unint64_t v65 = *(void *)(v2 + 24);
        if (v66 >= v65 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v65 > 1, v66 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v66 + 1;
        uint64_t v67 = v2 + 16 * v66;
        *(void *)(v67 + 32) = 0xD000000000000020;
        *(void *)(v67 + 40) = 0x80000001B6EAAE60;
      }
    }
    id v68 = objc_msgSend(v0, sel_camera);
    if (v68)
    {
      uint64_t v69 = v68;
      id v70 = objc_msgSend(v68, sel_toneMapping);

      if (v70)
      {

        unint64_t v72 = *(void *)(v2 + 16);
        unint64_t v71 = *(void *)(v2 + 24);
        if (v72 >= v71 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v71 > 1, v72 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v72 + 1;
        uint64_t v73 = v2 + 16 * v72;
        *(void *)(v73 + 32) = 0xD000000000000021;
        *(void *)(v73 + 40) = 0x80000001B6EAAE30;
      }
    }
    id v74 = objc_msgSend(v0, sel_camera);
    if (v74)
    {
      uint64_t v75 = v74;
      id v76 = objc_msgSend(v74, sel_vignetting);

      if (v76)
      {

        unint64_t v78 = *(void *)(v2 + 16);
        unint64_t v77 = *(void *)(v2 + 24);
        if (v78 >= v77 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v77 > 1, v78 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v78 + 1;
        uint64_t v79 = v2 + 16 * v78;
        *(void *)(v79 + 32) = 0xD000000000000020;
        *(void *)(v79 + 40) = 0x80000001B6F4B590;
      }
    }
    id v80 = objc_msgSend(v0, sel_camera);
    if (v80)
    {
      uint64_t v81 = v80;
      id v82 = objc_msgSend(v80, sel_colorFringe);

      if (v82)
      {

        unint64_t v84 = *(void *)(v2 + 16);
        unint64_t v83 = *(void *)(v2 + 24);
        if (v84 >= v83 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v83 > 1, v84 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v84 + 1;
        uint64_t v85 = v2 + 16 * v84;
        *(void *)(v85 + 32) = 0xD000000000000021;
        *(void *)(v85 + 40) = 0x80000001B6F4B560;
      }
    }
    id v86 = objc_msgSend(v0, sel_camera);
    if (v86)
    {
      uint64_t v87 = v86;
      id v88 = objc_msgSend(v86, sel_colorGrading);

      if (v88)
      {

        unint64_t v90 = *(void *)(v2 + 16);
        unint64_t v89 = *(void *)(v2 + 24);
        if (v90 >= v89 >> 1) {
          uint64_t v2 = (uint64_t)sub_1B6335858(v89 > 1, v90 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v90 + 1;
        uint64_t v91 = v2 + 16 * v90;
        *(void *)(v91 + 32) = 0xD000000000000022;
        *(void *)(v91 + 40) = 0x80000001B6F4B530;
      }
    }
  }
  id v92 = objc_msgSend(v0, sel_physicsBody);

  if (v92)
  {
    unint64_t v94 = *(void *)(v2 + 16);
    unint64_t v93 = *(void *)(v2 + 24);
    if (v94 >= v93 >> 1) {
      uint64_t v2 = (uint64_t)sub_1B6335858(v93 > 1, v94 + 1, 1, (void *)v2);
    }
    *(void *)(v2 + 16) = v94 + 1;
    uint64_t v95 = v2 + 16 * v94;
    *(void *)(v95 + 32) = 0xD000000000000015;
    *(void *)(v95 + 40) = 0x80000001B6EAADF0;
  }
  id v96 = objc_msgSend(v0, sel_forceField);

  if (v96)
  {
    unint64_t v98 = *(void *)(v2 + 16);
    unint64_t v97 = *(void *)(v2 + 24);
    if (v98 >= v97 >> 1) {
      uint64_t v2 = (uint64_t)sub_1B6335858(v97 > 1, v98 + 1, 1, (void *)v2);
    }
    *(void *)(v2 + 16) = v98 + 1;
    uint64_t v99 = v2 + 16 * v98;
    *(void *)(v99 + 32) = 0xD000000000000015;
    *(void *)(v99 + 40) = 0x80000001B6EAADD0;
  }
  id v100 = objc_msgSend(v0, sel_morpher);

  if (v100)
  {
    unint64_t v102 = *(void *)(v2 + 16);
    unint64_t v101 = *(void *)(v2 + 24);
    if (v102 >= v101 >> 1) {
      uint64_t v2 = (uint64_t)sub_1B6335858(v101 > 1, v102 + 1, 1, (void *)v2);
    }
    *(void *)(v2 + 16) = v102 + 1;
    uint64_t v103 = v2 + 16 * v102;
    *(void *)(v103 + 32) = 0xD000000000000011;
    *(void *)(v103 + 40) = 0x80000001B6EAADB0;
  }
  id v104 = objc_msgSend(v0, sel_model);

  if (v104)
  {
    id v105 = objc_msgSend(v0, sel_model);
    if (v105 && (uint64_t v106 = v105, self, v107 = swift_dynamicCastObjCClass(), v106, v107))
    {
      unint64_t v109 = *(void *)(v2 + 16);
      unint64_t v108 = *(void *)(v2 + 24);
      if (v109 >= v108 >> 1) {
        uint64_t v2 = (uint64_t)sub_1B6335858(v108 > 1, v109 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v109 + 1;
      uint64_t v110 = v2 + 16 * v109;
      *(void *)(v110 + 32) = 0xD000000000000019;
      uint64_t v111 = v110 + 32;
      unint64_t v1 = 0x80000001B6EAAD90;
    }
    else
    {
      unint64_t v113 = *(void *)(v2 + 16);
      unint64_t v112 = *(void *)(v2 + 24);
      if (v113 >= v112 >> 1) {
        uint64_t v2 = (uint64_t)sub_1B6335858(v112 > 1, v113 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v113 + 1;
      uint64_t v114 = v2 + 16 * v113;
      *(void *)(v114 + 32) = 0x6E6F436C65646F4DLL;
      uint64_t v111 = v114 + 32;
    }
    *(void *)(v111 + 8) = v1;
  }
  return v2;
}

id sub_1B6B74B0C()
{
  id v1 = objc_msgSend(v0, sel_presentationNode);

  return v1;
}

uint64_t sub_1B6B74B44()
{
  id v1 = objc_msgSend(v0, sel_name);
  uint64_t v2 = sub_1B6E31798();

  return v2;
}

id sub_1B6B74B9C()
{
  return v0;
}

double sub_1B6B74BA4()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v1 = (void *)MEMORY[0x1BA9B8670](v0 + 4);
    if (!v1) {
      return 0.0;
    }
LABEL_7:
    objc_msgSend(v1, sel_position);
    double v6 = v4;

    return v6;
  }
  sub_1B6B96284(v0, v7);
  uint64_t v2 = MEMORY[0x1BA9B8670](v7);
  sub_1B6B47018((uint64_t)v7);
  if (v2)
  {
    self;
    uint64_t v3 = swift_dynamicCastObjCClass();
    if (v3)
    {
      id v1 = (void *)v3;
      goto LABEL_7;
    }
    swift_unknownObjectRelease();
  }
  return 0.0;
}

double sub_1B6B74C68()
{
  uint64_t v0 = (void *)sub_1B6B759A0();
  if (!v0) {
    return 0.0;
  }
  id v1 = v0;
  objc_msgSend(v0, sel_orientation);
  double v4 = v2;

  return v4;
}

__n128 sub_1B6B74CBC()
{
  uint64_t v0 = (void *)sub_1B6B759A0();
  if (v0)
  {
    id v1 = v0;
    objc_msgSend(v0, sel_scale);
    long long v8 = v2;

    return (__n128)v8;
  }
  else
  {
    __asm { FMOV            V0.4S, #1.0 }
  }
  return result;
}

double sub_1B6B74D0C()
{
  uint64_t v0 = (void *)sub_1B6B759A0();
  if (v0)
  {
    id v1 = v0;
    objc_msgSend(v0, sel_transform);
    double v4 = v2;

    return v4;
  }
  else
  {
    *(void *)&double result = 1065353216;
  }
  return result;
}

double sub_1B6B74D88()
{
  id v1 = (void *)MEMORY[0x1BA9B8670](v0 + 32);
  if (!v1) {
    return 0.0;
  }
  double v2 = v1;
  objc_msgSend(v1, sel_eulerAngles);
  double v5 = v3;

  return v5;
}

uint64_t sub_1B6B74DDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6B94F18(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  id v10 = (char *)&v26 - v9;
  uint64_t v27 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v27 = 0;
  uint64_t v11 = swift_unknownObjectWeakAssign();
  uint64_t v28 = 0x3E6C6C756E3CLL;
  uint64_t v29 = 0xE600000000000000;
  sub_1B6649008(v11, (uint64_t)v34);
  swift_unknownObjectWeakInit();
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_1B62C14BC(a1, v12);
  if (sub_1B62B8F14(2037, v12, v13))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v2)
    {
      sub_1B62C14BC(&v26, v29);
      sub_1B6648FB4();
      sub_1B6E33518();
      sub_1B69CBCE8((uint64_t)&v30, (uint64_t)v34);
LABEL_9:
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v26);
LABEL_17:
      sub_1B687935C((uint64_t)v34, a2);
    }
  }
  else
  {
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_1B62C14BC(a1, v14);
    if (sub_1B62B8F14(2029, v14, v15))
    {
      sub_1B62C14BC(a1, a1[3]);
      sub_1B6E33A28();
      if (!v2)
      {
        sub_1B62C14BC(&v26, v29);
        uint64_t v18 = sub_1B6E334C8();
        unint64_t v20 = v19;
        sub_1B6B47018((uint64_t)v34);
        uint64_t v31 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v31 = 0;
        uint64_t v21 = swift_unknownObjectWeakAssign();
        unint64_t v32 = v18;
        unint64_t v33 = v20;
        sub_1B6649008(v21, (uint64_t)v34);
        goto LABEL_9;
      }
    }
    else
    {
      sub_1B62C14BC(a1, a1[3]);
      sub_1B62B1B2C();
      sub_1B6E33A48();
      if (!v2)
      {
        uint64_t v30 = 0;
        LOBYTE(v31) = 1;
        unint64_t v32 = 0xD000000000000017;
        unint64_t v33 = 0x80000001B6F4B810;
        uint64_t v16 = sub_1B6E32D28();
        if (v17) {
          unint64_t v22 = v16;
        }
        else {
          unint64_t v22 = 0;
        }
        if (v17) {
          unint64_t v23 = v17;
        }
        else {
          unint64_t v23 = 0xE000000000000000;
        }
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        uint64_t v31 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v31 = 0;
        uint64_t v24 = swift_unknownObjectWeakAssign();
        unint64_t v32 = v22;
        unint64_t v33 = v23;
        sub_1B6649008(v24, (uint64_t)&v26);
        sub_1B69CBCE8((uint64_t)&v26, (uint64_t)v34);
        goto LABEL_17;
      }
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B6B8C20C((uint64_t)v34);
}

uint64_t sub_1B6B751C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B74DDC(a1, a2);
}

uint64_t sub_1B6B751E0(void *a1)
{
  return sub_1B6B76250(a1);
}

void sub_1B6B751F8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B75214()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78220;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFD0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
  uint64_t v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B8DA38;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B8DA90;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B672CCA0(0x6E6F697469736F70, 0xE800000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B62D2D78(0, &qword_1EB97DF88, (uint64_t (*)(uint64_t))type metadata accessor for simd_quatf, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B8E91C;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6778A38;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B672D0D0(0x7461746E6569726FLL, 0xEB000000006E6F69, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 3, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B8DA38;
  uint64_t v9[5] = v8;
  _OWORD v9[2] = sub_1B6B8DA90;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B672CCA0(0x656C616373, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t v11 = swift_getKeyPath();
  sub_1B62D2D78(0, (unint64_t *)&unk_1EB97DFA0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v12 = (void *)swift_allocObject();
  v12[4] = sub_1B6B8EB24;
  void v12[5] = v11;
  _DWORD v12[2] = sub_1B6B8EB50;
  void v12[3] = v11;
  void v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = sub_1B672D160(0x726F66736E617274, 0xE90000000000006DLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v12, v11, 0, 0,
          2304,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 56) = v13;
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = (void *)swift_allocObject();
  v15[4] = sub_1B6B8EB24;
  void v15[5] = v14;
  _OWORD v15[2] = sub_1B6B8EB50;
  v15[3] = v14;
  void v15[6] = v14;
  swift_allocObject();
  swift_retain_n();
  uint64_t v16 = sub_1B672D160(0x617254646C726F77, 0xEE006D726F66736ELL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v15, v14, 0, 0,
          16,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 64) = v16;
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = (void *)swift_allocObject();
  v18[4] = sub_1B6B8DA38;
  v18[5] = v17;
  _OWORD v18[2] = sub_1B6B8DA90;
  uint64_t v18[3] = v17;
  v18[6] = v17;
  swift_allocObject();
  swift_retain_n();
  uint64_t v19 = sub_1B672CCA0(0x72656C7565, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v18, v17, 0, 0,
          16,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 72) = v19;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49650 = v0;
  return result;
}

uint64_t sub_1B6B758A0()
{
  return 0x726F66736E617254;
}

uint64_t sub_1B6B758BC(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC5B0);
}

uint64_t sub_1B6B758E0(uint64_t a1)
{
  sub_1B69CBDE4(a1, (uint64_t)v1);
  sub_1B6B96284(v1, v7);
  uint64_t v3 = MEMORY[0x1BA9B8670](v7);
  sub_1B6B47018((uint64_t)v7);
  if (!v3) {
    goto LABEL_5;
  }
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
  {
    swift_unknownObjectRelease();
LABEL_5:
    id v5 = 0;
    goto LABEL_6;
  }
  id v5 = objc_msgSend(v4, sel_presentationNode);
  swift_unknownObjectRelease();
LABEL_6:
  swift_unknownObjectWeakAssign();

  return sub_1B6B47018(a1);
}

uint64_t sub_1B6B759A0()
{
  if (objc_msgSend(self, sel_immediateMode)) {
    return MEMORY[0x1BA9B8670](v0 + 4);
  }
  sub_1B6B96284(v0, v3);
  uint64_t v2 = MEMORY[0x1BA9B8670](v3);
  sub_1B6B47018((uint64_t)v3);
  if (v2)
  {
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (result) {
      return result;
    }
    swift_unknownObjectRelease();
  }
  return 0;
}

uint64_t sub_1B6B75A38()
{
  return sub_1B6B75BE0((SEL *)&selRef_isHidden);
}

float sub_1B6B75A44()
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v0, v7);
    uint64_t v2 = MEMORY[0x1BA9B8670](v7);
    sub_1B6B47018((uint64_t)v7);
    if (v2)
    {
      self;
      uint64_t v3 = swift_dynamicCastObjCClass();
      if (v3)
      {
        id v1 = (void *)v3;
        goto LABEL_7;
      }
      swift_unknownObjectRelease();
    }
    return 1.0;
  }
  id v1 = (void *)MEMORY[0x1BA9B8670](v0 + 4);
  if (!v1) {
    return 1.0;
  }
LABEL_7:
  objc_msgSend(v1, sel_opacity);
  float v5 = v4;

  return v5;
}

id sub_1B6B75B10()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v1 = (void *)MEMORY[0x1BA9B8670](v0 + 4);
    if (!v1) {
      return 0;
    }
LABEL_7:
    id v2 = objc_msgSend(v1, sel_renderingOrder);

    return v2;
  }
  sub_1B6B96284(v0, v5);
  id v2 = (id)MEMORY[0x1BA9B8670](v5);
  sub_1B6B47018((uint64_t)v5);
  if (v2)
  {
    self;
    uint64_t v3 = swift_dynamicCastObjCClass();
    if (!v3)
    {
      swift_unknownObjectRelease();
      return 0;
    }
    id v1 = (void *)v3;
    goto LABEL_7;
  }
  return v2;
}

uint64_t sub_1B6B75BD4()
{
  return sub_1B6B75BE0((SEL *)&selRef_castsShadow);
}

uint64_t sub_1B6B75BE0(SEL *a1)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v3 = (void *)MEMORY[0x1BA9B8670](v1 + 4);
    if (!v3) {
      return 1;
    }
LABEL_7:
    unsigned int v6 = [v3 *a1];

    return v6 ^ 1;
  }
  sub_1B6B96284(v1, v8);
  uint64_t v4 = MEMORY[0x1BA9B8670](v8);
  sub_1B6B47018((uint64_t)v8);
  if (v4)
  {
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      uint64_t v3 = (void *)v5;
      goto LABEL_7;
    }
    swift_unknownObjectRelease();
  }
  return 1;
}

void sub_1B6B75CAC(char a1, SEL *a2)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v2, v8);
    uint64_t v6 = MEMORY[0x1BA9B8670](v8);
    sub_1B6B47018((uint64_t)v8);
    if (!v6) {
      return;
    }
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();
    if (!v7)
    {
      swift_unknownObjectRelease();
      return;
    }
    uint64_t v5 = (void *)v7;
LABEL_7:
    objc_msgSend(v5, *a2, (a1 & 1) == 0);

    return;
  }
  uint64_t v5 = (void *)MEMORY[0x1BA9B8670](v2 + 4);
  if (v5) {
    goto LABEL_7;
  }
}

uint64_t sub_1B6B75D78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B6B94F18(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v26[-v9];
  uint64_t v31 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v31 = 0;
  uint64_t v11 = swift_unknownObjectWeakAssign();
  uint64_t v32 = 0x3E6C6C756E3CLL;
  uint64_t v33 = 0xE600000000000000;
  sub_1B6649008(v11, (uint64_t)v38);
  swift_unknownObjectWeakInit();
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_1B62C14BC(a1, v12);
  if (sub_1B62B8F14(2037, v12, v13))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v2)
    {
      sub_1B62C14BC(&v30, v33);
      sub_1B6648FB4();
      sub_1B6E33518();
LABEL_9:
      sub_1B69CBCE8((uint64_t)&v34, (uint64_t)v38);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v30);
LABEL_17:
      sub_1B6879268((uint64_t)v38, a2);
    }
  }
  else
  {
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_1B62C14BC(a1, v14);
    if (sub_1B62B8F14(2029, v14, v15))
    {
      sub_1B62C14BC(a1, a1[3]);
      sub_1B6E33A28();
      if (!v2)
      {
        sub_1B62C14BC(&v30, v33);
        uint64_t v18 = sub_1B6E334C8();
        uint64_t v20 = v19;
        uint64_t v27 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v27 = 0;
        uint64_t v21 = swift_unknownObjectWeakAssign();
        uint64_t v28 = v18;
        uint64_t v29 = v20;
        sub_1B6649008(v21, (uint64_t)&v34);
        goto LABEL_9;
      }
    }
    else
    {
      sub_1B62C14BC(a1, a1[3]);
      sub_1B62B1B2C();
      sub_1B6E33A48();
      if (!v2)
      {
        uint64_t v34 = 0;
        LOBYTE(v35) = 1;
        unint64_t v36 = 0xD000000000000017;
        unint64_t v37 = 0x80000001B6F4B810;
        uint64_t v16 = sub_1B6E32D28();
        if (v17) {
          unint64_t v22 = v16;
        }
        else {
          unint64_t v22 = 0;
        }
        if (v17) {
          unint64_t v23 = v17;
        }
        else {
          unint64_t v23 = 0xE000000000000000;
        }
        (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
        uint64_t v35 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v35 = 0;
        uint64_t v24 = swift_unknownObjectWeakAssign();
        unint64_t v36 = v22;
        unint64_t v37 = v23;
        sub_1B6649008(v24, (uint64_t)&v30);
        sub_1B69CBCE8((uint64_t)&v30, (uint64_t)v38);
        goto LABEL_17;
      }
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B6B8C20C((uint64_t)v38);
}

void sub_1B6B7615C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t))(a2 + 16))(v2, ObjectType, a2);
  sub_1B6B96284(v2, v8);
  uint64_t v5 = MEMORY[0x1BA9B8670](v8);
  sub_1B6B47018((uint64_t)v8);
  if (!v5) {
    goto LABEL_5;
  }
  self;
  uint64_t v6 = (void *)swift_dynamicCastObjCClass();
  if (!v6)
  {
    swift_unknownObjectRelease();
LABEL_5:
    id v7 = 0;
    goto LABEL_6;
  }
  id v7 = objc_msgSend(v6, sel_presentationNode);
  swift_unknownObjectRelease();
LABEL_6:
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1B6B76238@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B75D78(a1, a2);
}

uint64_t sub_1B6B76250(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6649174();
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

uint64_t sub_1B6B762F4@<X0>(uint64_t a1@<X8>)
{
  swift_unknownObjectWeakInit();
  v3[1] = 0;
  swift_unknownObjectWeakAssign();
  void v3[2] = 0x3E6C6C756E3CLL;
  v3[3] = 0xE600000000000000;
  sub_1B6649008((uint64_t)v3, a1);
  return swift_unknownObjectWeakInit();
}

BOOL sub_1B6B7636C()
{
  sub_1B6B96284(v0, v5);
  uint64_t v1 = MEMORY[0x1BA9B8670](v5);
  sub_1B6B47018((uint64_t)v5);
  if (v1)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (!v2) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  id v3 = objc_msgSend(v2, sel_model);

  if (v3) {
  return v3 != 0;
  }
}

uint64_t sub_1B6B76414()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78190;
  uint64_t v1 = *(void *)aVisible_0;
  uint64_t v2 = unk_1E9DD6588;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v4 = (void *)swift_allocObject();
  void v4[4] = sub_1B6B8ED98;
  void v4[5] = KeyPath;
  v4[2] = sub_1B6B8EDC4;
  v4[3] = KeyPath;
  v4[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v6 = sub_1B672E690(v1, v2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v4, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)(v0 + 32) = v6;
  uint64_t v7 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[4] = sub_1B6B8EE58;
  v8[5] = v7;
  _DWORD v8[2] = sub_1B6B8EE84;
  void v8[3] = v7;
  void v8[6] = v7;
  swift_allocObject();
  swift_retain_n();
  uint64_t v9 = sub_1B672E70C(0x7974696361706FLL, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v8, v7, 0, 0,
         0,
         v5,
         0);
  swift_release();
  *(void *)(v0 + 40) = v9;
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF70, MEMORY[0x1E4FBB550], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v12 = (void *)swift_allocObject();
  v12[4] = sub_1B6B8EF40;
  void v12[5] = v10;
  _DWORD v12[2] = sub_1B6B8EF80;
  void v12[3] = v10;
  void v12[6] = v10;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v13 = sub_1B672E788(0x6E697265646E6572, 0xEE00726564724F67, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v11, 1, 0, (uint64_t)v12, v10, 0, 0,
          0,
          v5,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 48) = v13;
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = (void *)swift_allocObject();
  v16[4] = sub_1B6B8ED98;
  void v16[5] = v14;
  _DWORD v16[2] = sub_1B6B8EDC4;
  v16[3] = v14;
  v16[6] = v14;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v17 = sub_1B672E690(0x6168537374736163, 0xEB00000000776F64, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v15, 1, 0, (uint64_t)v16, v14, 0, 0,
          0,
          v5,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 56) = v17;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49658 = v0;
  return result;
}

void sub_1B6B76908(float *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1B6B759A0();
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_opacity);
    float v5 = v4;
  }
  else
  {
    float v5 = 1.0;
  }
  *a1 = v5;
}

void sub_1B6B76960(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1B6B759A0();
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel_renderingOrder);
  }
  else
  {
    id v4 = 0;
  }
  *a1 = v4;
}

void sub_1B6B769B8(SEL *a1@<X3>, char *a2@<X8>)
{
  id v4 = (void *)sub_1B6B759A0();
  if (v4)
  {
    float v5 = v4;
    unsigned __int8 v6 = [v4 *a1];

    char v7 = v6 ^ 1;
  }
  else
  {
    char v7 = 1;
  }
  *a2 = v7;
}

uint64_t sub_1B6B76A14()
{
  return 0x696C696269736956;
}

uint64_t sub_1B6B76A30(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC5B8);
}

uint64_t sub_1B6B76A54()
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v0, v7);
    uint64_t v4 = MEMORY[0x1BA9B8670](v7);
    sub_1B6B47018((uint64_t)v7);
    if (v4)
    {
      self;
      float v5 = (void *)swift_dynamicCastObjCClass();
      if (!v5) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      float v5 = 0;
    }
    id v1 = objc_msgSend(v5, sel_light);

    if (v1) {
      goto LABEL_3;
    }
    return 2;
  }
  id v1 = (id)v0[4];
  id v2 = v1;
  if (!v1) {
    return 2;
  }
LABEL_3:
  id v3 = objc_msgSend(v1, sel_type);

  return (uint64_t)v3;
}

double sub_1B6B76B3C()
{
  id v0 = sub_1B6B81AD4((SEL *)&selRef_light);
  if (!v0) {
    return 0.0;
  }
  id v1 = v0;
  objc_msgSend(v0, sel_extendedLinearSRGBColor);
  double v4 = v2;

  return v4;
}

void sub_1B6B76B9C(__n128 a1)
{
  __n128 v6 = a1;
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v2 = (id)v1[4];
    id v3 = v2;
    if (!v2) {
      return;
    }
LABEL_9:
    objc_msgSend(v2, sel_setExtendedLinearSRGBColor_, v6.n128_f64[0], *(_OWORD *)&v6);

    return;
  }
  sub_1B6B96284(v1, v7);
  uint64_t v4 = MEMORY[0x1BA9B8670](v7);
  sub_1B6B47018((uint64_t)v7);
  if (v4)
  {
    self;
    float v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    float v5 = 0;
  }
  id v2 = objc_msgSend(v5, sel_light, *(_OWORD *)&v6);

  if (v2) {
    goto LABEL_9;
  }
}

float sub_1B6B76C80()
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v0, v8);
    uint64_t v5 = MEMORY[0x1BA9B8670](v8);
    sub_1B6B47018((uint64_t)v8);
    if (v5)
    {
      self;
      __n128 v6 = (void *)swift_dynamicCastObjCClass();
      if (!v6) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      __n128 v6 = 0;
    }
    id v1 = objc_msgSend(v6, sel_light);

    if (v1) {
      goto LABEL_3;
    }
    return 1.0;
  }
  id v1 = (id)v0[4];
  id v2 = v1;
  if (!v1) {
    return 1.0;
  }
LABEL_3:
  objc_msgSend(v1, sel_intensity);
  float v4 = v3;

  return v4;
}

float sub_1B6B76D70()
{
  return sub_1B6B76EC4((SEL *)&selRef_temperature, (SEL *)&selRef_light);
}

double sub_1B6B76D84()
{
  return sub_1B6B839B8((SEL *)&selRef_areaExtents, (SEL *)&selRef_light);
}

id sub_1B6B76D98()
{
  return sub_1B6B76DC0((SEL *)&selRef_drawsArea, (SEL *)&selRef_light);
}

id sub_1B6B76DAC()
{
  return sub_1B6B76DC0((SEL *)&selRef_doubleSided, (SEL *)&selRef_light);
}

id sub_1B6B76DC0(SEL *a1, SEL *a2)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v2, v11);
    uint64_t v8 = MEMORY[0x1BA9B8670](v11);
    sub_1B6B47018((uint64_t)v11);
    if (v8)
    {
      self;
      uint64_t v9 = (void *)swift_dynamicCastObjCClass();
      if (!v9) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v9 = 0;
    }
    id v5 = [v9 *a2];

    if (v5) {
      goto LABEL_3;
    }
    return 0;
  }
  id v5 = (id)v2[4];
  id v6 = v5;
  if (!v5) {
    return 0;
  }
LABEL_3:
  id v7 = [v5 *a1];

  return v7;
}

float sub_1B6B76EB0()
{
  return sub_1B6B76EC4((SEL *)&selRef_spotInnerAngle, (SEL *)&selRef_light);
}

float sub_1B6B76EC4(SEL *a1, SEL *a2)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v2, v12);
    uint64_t v9 = MEMORY[0x1BA9B8670](v12);
    sub_1B6B47018((uint64_t)v12);
    if (v9)
    {
      self;
      uint64_t v10 = (void *)swift_dynamicCastObjCClass();
      if (!v10) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
    id v5 = [v10 *a2];

    if (v5) {
      goto LABEL_3;
    }
    return 0.0;
  }
  id v5 = (id)v2[4];
  id v6 = v5;
  if (!v5) {
    return 0.0;
  }
LABEL_3:
  [v5 *a1];
  float v8 = v7;

  return v8;
}

float sub_1B6B76FBC()
{
  return sub_1B6B76EC4((SEL *)&selRef_spotOuterAngle, (SEL *)&selRef_light);
}

float sub_1B6B76FD0()
{
  return sub_1B6B76EC4((SEL *)&selRef_attenuationDistance, (SEL *)&selRef_light);
}

id sub_1B6B76FE4()
{
  return sub_1B6B76DC0((SEL *)&selRef_castsShadow, (SEL *)&selRef_light);
}

float sub_1B6B76FF8()
{
  return sub_1B6B76EC4((SEL *)&selRef_shadowIntensity, (SEL *)&selRef_light);
}

id sub_1B6B7700C()
{
  return sub_1B6B83790((SEL *)&selRef_shadowSampleCount, (SEL *)&selRef_light);
}

float sub_1B6B77020()
{
  return sub_1B6B76EC4((SEL *)&selRef_shadowBias, (SEL *)&selRef_light);
}

uint64_t sub_1B6B77034@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7F77C(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B8F724, (uint64_t (*)(unsigned char *))sub_1B6B463B8, a2);
}

void sub_1B6B77074(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B77098()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6EAAD30;
  id v1 = (void *)v0;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62D2D78(0, &qword_1E9DCF890, (uint64_t (*)(uint64_t))type metadata accessor for VFXLightType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  float v3 = (void *)swift_allocObject();
  void v3[4] = sub_1B6B8F0A0;
  v3[5] = KeyPath;
  void v3[2] = sub_1B6B8F0E0;
  v3[3] = KeyPath;
  v3[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v5 = sub_1B671CA18(1701869940, 0xE400000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v3, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  v1[4] = v5;
  uint64_t v6 = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFE0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
  float v7 = (void *)swift_allocObject();
  void v7[4] = sub_1B6B8F1A8;
  void v7[5] = v6;
  _OWORD v7[2] = sub_1B6B8F1E8;
  v7[3] = v6;
  v7[6] = v6;
  swift_allocObject();
  swift_retain_n();
  uint64_t v8 = sub_1B671CAA8(0x726F6C6F63, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 6, 0, (uint64_t)v7, v6, 0, 0,
         0,
         v4,
         0);
  swift_release();
  uint64_t v9 = v1;
  v1[5] = v8;
  uint64_t v10 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[4] = sub_1B6B8F2A4;
  void v11[5] = v10;
  _DWORD v11[2] = sub_1B6B8F2D0;
  v11[3] = v10;
  void v11[6] = v10;
  swift_allocObject();
  swift_retain_n();
  uint64_t v12 = sub_1B671CED8(0x7469736E65746E69, 0xE900000000000079, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v11, v10, 0, 0,
          0,
          v4,
          0);
  swift_release();
  void v9[6] = v12;
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = (void *)swift_allocObject();
  v14[4] = sub_1B6B8F2A4;
  v14[5] = v13;
  id v14[2] = sub_1B6B8F2D0;
  void v14[3] = v13;
  v14[6] = v13;
  swift_allocObject();
  swift_retain_n();
  uint64_t v15 = v4;
  uint64_t v16 = sub_1B671CED8(0x74617265706D6574, 0xEB00000000657275, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v14, v13, 0, 0,
          0,
          v4,
          0);
  swift_release();
  v9[7] = v16;
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFD0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
  uint64_t v19 = (void *)swift_allocObject();
  void v19[4] = sub_1B6B8F368;
  v19[5] = v17;
  _OWORD v19[2] = sub_1B6B8F3A8;
  uint64_t v19[3] = v17;
  v19[6] = v17;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v20 = sub_1B671CF54(0x6574784561657261, 0xEB0000000073746ELL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v18, 1, 0, (uint64_t)v19, v17, 0, 0,
          256,
          v15,
          0);
  swift_release();
  swift_release();
  void v9[8] = v20;
  uint64_t v21 = swift_getKeyPath();
  uint64_t v22 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  unint64_t v23 = (void *)swift_allocObject();
  v23[4] = sub_1B6B8F414;
  v23[5] = v21;
  _OWORD v23[2] = sub_1B6B8F440;
  void v23[3] = v21;
  v23[6] = v21;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v24 = sub_1B671D384(0x6572417377617264, 0xE900000000000061, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v22, 1, 0, (uint64_t)v23, v21, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  v9[9] = v24;
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = (void *)swift_allocObject();
  _OWORD v27[4] = sub_1B6B8F414;
  v27[5] = v25;
  v27[2] = sub_1B6B8F440;
  void v27[3] = v25;
  v27[6] = v25;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v28 = sub_1B671D384(0x6953656C62756F64, 0xEB00000000646564, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v26, 1, 0, (uint64_t)v27, v25, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  v9[10] = v28;
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = (void *)swift_allocObject();
  v31[4] = sub_1B6B8F2A4;
  v31[5] = v29;
  _OWORD v31[2] = sub_1B6B8F2D0;
  void v31[3] = v29;
  v31[6] = v29;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v32 = sub_1B671CED8(0x656E6E49746F7073, 0xEE00656C676E4172, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v30, 1, 0, (uint64_t)v31, v29, 0, 0,
          256,
          v15,
          0);
  swift_release();
  swift_release();
  uint64_t v33 = (uint64_t)v9;
  v9[11] = v32;
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = swift_getKeyPath();
  unint64_t v36 = (void *)swift_allocObject();
  id v36[4] = sub_1B6B8F2A4;
  v36[5] = v34;
  v36[2] = sub_1B6B8F2D0;
  v36[3] = v34;
  v36[6] = v34;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v37 = sub_1B671CED8(0x6574754F746F7073, 0xEE00656C676E4172, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v35, 1, 0, (uint64_t)v36, v34, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  void v9[12] = v37;
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = swift_getKeyPath();
  id v40 = (void *)swift_allocObject();
  _OWORD v40[4] = sub_1B6B8F2A4;
  v40[5] = v38;
  v40[2] = sub_1B6B8F2D0;
  v40[3] = v38;
  v40[6] = v38;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v41 = sub_1B671CED8(0xD000000000000013, 0x80000001B6F4B650, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v39, 1, 0, (uint64_t)v40, v38, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  v9[13] = v41;
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = swift_getKeyPath();
  id v44 = (void *)swift_allocObject();
  _OWORD v44[4] = sub_1B6B8F414;
  v44[5] = v42;
  v44[2] = sub_1B6B8F440;
  v44[3] = v42;
  v44[6] = v42;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v45 = sub_1B671D384(0x6168537374736163, 0xEB00000000776F64, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v43, 1, 0, (uint64_t)v44, v42, 0, 0,
          256,
          v15,
          0);
  swift_release();
  swift_release();
  v9[14] = v45;
  uint64_t v46 = swift_getKeyPath();
  uint64_t v47 = swift_getKeyPath();
  unint64_t v48 = (void *)swift_allocObject();
  v48[4] = sub_1B6B8F2A4;
  v48[5] = v46;
  void v48[2] = sub_1B6B8F2D0;
  v48[3] = v46;
  v48[6] = v46;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v49 = sub_1B671CED8(0x6E49776F64616873, 0xEF797469736E6574, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v47, 1, 0, (uint64_t)v48, v46, 0, 0,
          0,
          v15,
          0);
  swift_release();
  swift_release();
  v9[15] = v49;
  uint64_t v50 = swift_getKeyPath();
  uint64_t v51 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF70, MEMORY[0x1E4FBB550], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v52 = (void *)swift_allocObject();
  v52[4] = sub_1B6B8F64C;
  v52[5] = v50;
  _OWORD v52[2] = sub_1B6B8F68C;
  v52[3] = v50;
  v52[6] = v50;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v53 = MEMORY[0x1E4FBC860];
  uint64_t v54 = sub_1B671D400(0xD000000000000011, 0x80000001B6F4B670, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v51, 1, 0, (uint64_t)v52, v50, 0, 0,
          0,
          MEMORY[0x1E4FBC860],
          0);
  swift_release();
  swift_release();
  v9[16] = v54;
  uint64_t v55 = swift_getKeyPath();
  uint64_t v56 = swift_getKeyPath();
  uint64_t v57 = (void *)swift_allocObject();
  v57[4] = sub_1B6B8F2A4;
  v57[5] = v55;
  _OWORD v57[2] = sub_1B6B8F2D0;
  v57[3] = v55;
  v57[6] = v55;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v58 = sub_1B671CED8(0x6942776F64616873, 0xEA00000000007361, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v56, 1, 0, (uint64_t)v57, v55, 0, 0,
          0,
          v53,
          0);
  swift_release();
  swift_release();
  *(void *)(v33 + 136) = v58;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49660 = v33;
  return result;
}

void sub_1B6B78010(uint64_t *a1@<X8>)
{
  id v2 = sub_1B6B81AD4((SEL *)&selRef_light);
  if (v2)
  {
    float v3 = v2;
    uint64_t v4 = (uint64_t)objc_msgSend(v2, sel_type);
  }
  else
  {
    uint64_t v4 = 2;
  }
  *a1 = v4;
}

void sub_1B6B78074(float *a1@<X8>)
{
  id v2 = sub_1B6B81AD4((SEL *)&selRef_light);
  if (v2)
  {
    float v3 = v2;
    objc_msgSend(v2, sel_intensity);
    float v5 = v4;
  }
  else
  {
    float v5 = 1.0;
  }
  *a1 = v5;
}

id sub_1B6B780D8()
{
  id result = sub_1B6B81AD4((SEL *)&selRef_light);
  if (result)
  {
    id v1 = result;
    id v2 = objc_msgSend(result, sel_type);

    return (id)(v2 == (id)5);
  }
  return result;
}

void sub_1B6B78124(BOOL *a1@<X8>)
{
  id v2 = sub_1B6B81AD4((SEL *)&selRef_light);
  if (v2)
  {
    float v3 = v2;
    id v4 = objc_msgSend(v2, sel_type);

    BOOL v5 = v4 == (id)5;
  }
  else
  {
    BOOL v5 = 0;
  }
  *a1 = v5;
}

id sub_1B6B78190()
{
  id result = sub_1B6B81AD4((SEL *)&selRef_light);
  if (result)
  {
    id v1 = result;
    id v2 = objc_msgSend(result, sel_type);

    return (id)(v2 == (id)3);
  }
  return result;
}

void sub_1B6B781DC(BOOL *a1@<X8>)
{
  id v2 = sub_1B6B81AD4((SEL *)&selRef_light);
  if (v2)
  {
    float v3 = v2;
    id v4 = objc_msgSend(v2, sel_type);

    BOOL v5 = v4 == (id)3;
  }
  else
  {
    BOOL v5 = 0;
  }
  *a1 = v5;
}

BOOL sub_1B6B78248()
{
  id v0 = sub_1B6B81AD4((SEL *)&selRef_light);
  if (!v0) {
    return 1;
  }
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_type);

  return v2 != 0;
}

void sub_1B6B7829C(BOOL *a1@<X8>)
{
  id v2 = sub_1B6B81AD4((SEL *)&selRef_light);
  if (v2)
  {
    float v3 = v2;
    id v4 = objc_msgSend(v2, sel_type);

    BOOL v5 = v4 != 0;
  }
  else
  {
    BOOL v5 = 1;
  }
  *a1 = v5;
}

uint64_t sub_1B6B78308()
{
  id v1 = sub_1B6B81AD4((SEL *)&selRef_light);
  if (!v1)
  {
    sub_1B6B8F724(v0, (uint64_t)v18);
    goto LABEL_8;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v1, sel_type);

  sub_1B6B8F724(v0, (uint64_t)v18);
  if (v3 == (id)2)
  {
LABEL_8:
    sub_1B6B463B8((uint64_t)v18);
    sub_1B6B8F724(v0, (uint64_t)v16);
    goto LABEL_9;
  }
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v4 = v19;
    id v5 = v19;
    if (v4) {
      goto LABEL_5;
    }
  }
  else
  {
    sub_1B6B96284(v18, v16);
    uint64_t v9 = MEMORY[0x1BA9B8670](v16);
    sub_1B6B47018((uint64_t)v16);
    if (v9)
    {
      self;
      uint64_t v10 = (void *)swift_dynamicCastObjCClass();
      if (!v10) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
    id v4 = objc_msgSend(v10, sel_light);

    if (v4)
    {
LABEL_5:
      id v6 = objc_msgSend(v4, sel_type);

      sub_1B6B463B8((uint64_t)v18);
      sub_1B6B8F724(v0, (uint64_t)v16);
      if (v6 != (id)3) {
        goto LABEL_17;
      }
LABEL_9:
      uint64_t v7 = 1;
      goto LABEL_10;
    }
  }
  sub_1B6B463B8((uint64_t)v18);
  sub_1B6B8F724(v0, (uint64_t)v16);
LABEL_17:
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v7 = (uint64_t)v17;
    id v11 = v17;
    if (!v7) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
  sub_1B6B96284(v16, v15);
  uint64_t v12 = MEMORY[0x1BA9B8670](v15);
  sub_1B6B47018((uint64_t)v15);
  if (v12)
  {
    self;
    uint64_t v13 = (void *)swift_dynamicCastObjCClass();
    if (!v13) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v7 = (uint64_t)objc_msgSend(v13, sel_light);

  if (v7)
  {
LABEL_25:
    id v14 = objc_msgSend((id)v7, sel_type);

    uint64_t v7 = v14 == (id)1;
  }
LABEL_10:
  sub_1B6B463B8((uint64_t)v16);
  return v7;
}

uint64_t sub_1B6B7854C()
{
  return 0x746867694CLL;
}

uint64_t sub_1B6B78560(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC5C0);
}

float sub_1B6B78584()
{
  return sub_1B6B7859C((SEL *)&selRef_orthographicScale);
}

float sub_1B6B78590()
{
  return sub_1B6B7859C((SEL *)&selRef_focalLength);
}

float sub_1B6B7859C(SEL *a1)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v1, v10);
    uint64_t v7 = MEMORY[0x1BA9B8670](v10);
    sub_1B6B47018((uint64_t)v10);
    if (v7)
    {
      self;
      uint64_t v8 = (void *)swift_dynamicCastObjCClass();
      if (!v8) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v8 = 0;
    }
    id v3 = objc_msgSend(v8, sel_camera);

    if (v3) {
      goto LABEL_3;
    }
    return 1.0;
  }
  id v3 = (id)v1[4];
  id v4 = v3;
  if (!v3) {
    return 1.0;
  }
LABEL_3:
  [v3 *a1];
  float v6 = v5;

  return v6;
}

float sub_1B6B78694()
{
  return sub_1B6B7859C((SEL *)&selRef_fieldOfView);
}

float sub_1B6B786A0()
{
  return sub_1B6B7859C((SEL *)&selRef_sensorHeight);
}

float sub_1B6B786AC()
{
  return sub_1B6B7859C((SEL *)&selRef_zNear);
}

float sub_1B6B786B8()
{
  return sub_1B6B7859C((SEL *)&selRef_zFar);
}

id sub_1B6B786C4()
{
  return sub_1B6B79848((SEL *)&selRef_wantsHDR);
}

float sub_1B6B786D0()
{
  return sub_1B6B76EC4((SEL *)&selRef_focusDistance, (SEL *)&selRef_camera);
}

double sub_1B6B786E4()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v1 = (id)v0[4];
    id v2 = v1;
    if (v1)
    {
LABEL_3:
      objc_msgSend(v1, sel_projectionTransform);
      double v7 = v3;

      return v7;
    }
  }
  else
  {
    sub_1B6B96284(v0, v8);
    uint64_t v5 = MEMORY[0x1BA9B8670](v8);
    sub_1B6B47018((uint64_t)v8);
    if (v5)
    {
      self;
      float v6 = (void *)swift_dynamicCastObjCClass();
      if (!v6) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      float v6 = 0;
    }
    id v1 = objc_msgSend(v6, sel_camera);

    if (v1) {
      goto LABEL_3;
    }
  }
  return 0.0;
}

double sub_1B6B787E0()
{
  id v0 = sub_1B6B81AD4((SEL *)&selRef_camera);
  if (v0)
  {
    id v1 = v0;
    objc_msgSend(v0, sel_projectionTransform);
    simd_float4 v11 = v2;
    simd_float4 v9 = v4;
    simd_float4 v10 = v3;
    simd_float4 v8 = v5;

    v6.columns[3] = v8;
    v6.columns[2] = v9;
    v6.columns[1] = v10;
    v6.columns[0] = v11;
  }
  else
  {
    v6.columns[0] = 0uLL;
    v6.columns[1] = 0uLL;
    v6.columns[2] = 0uLL;
    v6.columns[3] = 0uLL;
  }

  *(void *)&double result = (unint64_t)__invert_f4(v6);
  return result;
}

double sub_1B6B78864()
{
  sub_1B6B96284(v0, v6);
  uint64_t v1 = MEMORY[0x1BA9B8670](v6);
  sub_1B6B47018((uint64_t)v6);
  if (v1)
  {
    self;
    simd_float4 v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      objc_msgSend(v2, sel_worldTransform);
      double v5 = v3;
      swift_unknownObjectRelease();
      return v5;
    }
    swift_unknownObjectRelease();
  }
  return 0.0;
}

double sub_1B6B78908()
{
  sub_1B6B96284(v0, v13);
  uint64_t v1 = MEMORY[0x1BA9B8670](v13);
  sub_1B6B47018((uint64_t)v13);
  if (!v1) {
    goto LABEL_5;
  }
  self;
  simd_float4 v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
LABEL_5:
    v7.columns[0] = 0uLL;
    v7.columns[1] = 0uLL;
    v7.columns[2] = 0uLL;
    v7.columns[3] = 0uLL;
    goto LABEL_6;
  }
  objc_msgSend(v2, sel_worldTransform);
  simd_float4 v11 = v4;
  simd_float4 v12 = v3;
  simd_float4 v9 = v6;
  simd_float4 v10 = v5;
  swift_unknownObjectRelease();
  v7.columns[3] = v9;
  v7.columns[2] = v10;
  v7.columns[1] = v11;
  v7.columns[0] = v12;
LABEL_6:
  *(void *)&double result = (unint64_t)__invert_f4(v7);
  return result;
}

double sub_1B6B789B0()
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v0, v8);
    uint64_t v5 = MEMORY[0x1BA9B8670](v8);
    sub_1B6B47018((uint64_t)v8);
    if (v5)
    {
      self;
      simd_float4 v6 = (void *)swift_dynamicCastObjCClass();
      if (!v6) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      simd_float4 v6 = 0;
    }
    id v1 = objc_msgSend(v6, sel_camera);

    if (v1) {
      goto LABEL_3;
    }
    return 0.0;
  }
  id v1 = (id)v0[4];
  id v2 = v1;
  if (!v1) {
    return 0.0;
  }
LABEL_3:
  objc_msgSend(v1, sel_filmOffset);
  double v4 = v3;

  return v4;
}

uint64_t sub_1B6B78AA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B822A4(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B95F3C, (uint64_t (*)(unsigned char *))sub_1B6B46468, a2);
}

void sub_1B6B78AE0(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B78B04()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6EAAD40;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v2 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  double v3 = (void *)swift_allocObject();
  void v3[4] = sub_1B6B8F8BC;
  v3[5] = KeyPath;
  void v3[2] = sub_1B6B8F8E8;
  v3[3] = KeyPath;
  v3[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v5 = sub_1B671D870(0x656C616373, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v2, 1, 0, (uint64_t)v3, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  swift_release();
  *(void *)(v0 + 32) = v5;
  uint64_t v6 = swift_getKeyPath();
  uint64_t v7 = swift_getKeyPath();
  simd_float4 v8 = (void *)swift_allocObject();
  void v8[4] = sub_1B6B8F8BC;
  v8[5] = v6;
  _DWORD v8[2] = sub_1B6B8F8E8;
  void v8[3] = v6;
  void v8[6] = v6;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v9 = sub_1B671D870(0x6E654C6C61636F66, 0xEB00000000687467, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v7, 1, 0, (uint64_t)v8, v6, 0, 0,
         0,
         v4,
         0);
  swift_release();
  swift_release();
  *(void *)(v0 + 40) = v9;
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = swift_getKeyPath();
  simd_float4 v12 = (void *)swift_allocObject();
  void v12[4] = sub_1B6B8F8BC;
  void v12[5] = v10;
  _DWORD v12[2] = sub_1B6B8F8E8;
  void v12[3] = v10;
  void v12[6] = v10;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v13 = sub_1B671D870(0x56664F646C656966, 0xEB00000000776569, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v11, 1, 0, (uint64_t)v12, v10, 0, 0,
          0,
          v4,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 48) = v13;
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[4] = sub_1B6B8F8BC;
  void v15[5] = v14;
  _OWORD v15[2] = sub_1B6B8F8E8;
  v15[3] = v14;
  void v15[6] = v14;
  swift_allocObject();
  swift_retain_n();
  uint64_t v16 = sub_1B671D870(0x6548726F736E6573, 0xEC00000074686769, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v15, v14, 0, 0,
          0,
          v4,
          0);
  swift_release();
  *(void *)(v0 + 56) = v16;
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = (void *)swift_allocObject();
  void v18[4] = sub_1B6B8F8BC;
  v18[5] = v17;
  _OWORD v18[2] = sub_1B6B8F8E8;
  uint64_t v18[3] = v17;
  v18[6] = v17;
  swift_allocObject();
  swift_retain_n();
  uint64_t v19 = sub_1B671D870(0x7369447375636F66, 0xED000065636E6174, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v18, v17, 0, 0,
          0,
          v4,
          0);
  swift_release();
  *(void *)(v0 + 64) = v19;
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = (void *)swift_allocObject();
  _OWORD v21[4] = sub_1B6B8F8BC;
  void v21[5] = v20;
  void v21[2] = sub_1B6B8F8E8;
  void v21[3] = v20;
  v21[6] = v20;
  swift_allocObject();
  swift_retain_n();
  uint64_t v22 = sub_1B671D870(0x7261654E7ALL, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v21, v20, 0, 0,
          256,
          v4,
          0);
  swift_release();
  *(void *)(v0 + 72) = v22;
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = (void *)swift_allocObject();
  v24[4] = sub_1B6B8F8BC;
  uint64_t v24[5] = v23;
  void v24[2] = sub_1B6B8F8E8;
  void v24[3] = v23;
  v24[6] = v23;
  swift_allocObject();
  swift_retain_n();
  uint64_t v25 = v4;
  uint64_t v26 = sub_1B671D870(1918977658, 0xE400000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v24, v23, 0, 0,
          0,
          v4,
          0);
  swift_release();
  *(void *)(v0 + 80) = v26;
  uint64_t v27 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v28 = (void *)swift_allocObject();
  v28[4] = sub_1B6B8FB78;
  v28[5] = v27;
  uint64_t v28[2] = sub_1B6B8FBA4;
  v28[3] = v27;
  v28[6] = v27;
  swift_allocObject();
  swift_retain_n();
  uint64_t v29 = sub_1B671D8EC(0x52444873746E6177, 0xE800000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v28, v27, 0, 0,
          256,
          v4,
          0);
  swift_release();
  *(void *)(v0 + 88) = v29;
  uint64_t v30 = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFC0, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
  uint64_t v31 = (void *)swift_allocObject();
  v31[4] = sub_1B6B8FC24;
  v31[5] = v30;
  _OWORD v31[2] = sub_1B6B8FC64;
  void v31[3] = v30;
  v31[6] = v30;
  swift_allocObject();
  swift_retain_n();
  uint64_t v32 = sub_1B671D968(0x7366664F6D6C6966, 0xEA00000000007465, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v31, v30, 0, 0,
          0,
          v25,
          0);
  swift_release();
  *(void *)(v0 + 96) = v32;
  uint64_t v33 = swift_getKeyPath();
  sub_1B62D2D78(0, (unint64_t *)&unk_1EB97DFA0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v34 = (void *)swift_allocObject();
  v34[4] = sub_1B6B8FD9C;
  v34[5] = v33;
  v34[2] = sub_1B6B8FDC8;
  v34[3] = v33;
  v34[6] = v33;
  swift_allocObject();
  swift_retain_n();
  uint64_t v35 = sub_1B671DD98(0xD000000000000013, 0x80000001B6F4B690, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v34, v33, 0, 0,
          2048,
          v25,
          0);
  swift_release();
  *(void *)(v0 + 104) = v35;
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = (void *)swift_allocObject();
  v37[4] = sub_1B6B8FD9C;
  void v37[5] = v36;
  v37[2] = sub_1B6B8FDC8;
  v37[3] = v36;
  v37[6] = v36;
  swift_allocObject();
  swift_retain_n();
  uint64_t v38 = sub_1B671DD98(0xD00000000000001ALL, 0x80000001B6F4B6B0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v37, v36, 0, 0,
          16,
          v25,
          0);
  swift_release();
  *(void *)(v0 + 112) = v38;
  uint64_t v39 = swift_getKeyPath();
  id v40 = (void *)swift_allocObject();
  _OWORD v40[4] = sub_1B6B8FD9C;
  v40[5] = v39;
  v40[2] = sub_1B6B8FDC8;
  v40[3] = v39;
  v40[6] = v39;
  swift_allocObject();
  swift_retain_n();
  uint64_t v41 = sub_1B671DD98(0x617254646C726F77, 0xEE006D726F66736ELL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v40, v39, 0, 0,
          2048,
          v25,
          0);
  swift_release();
  *(void *)(v0 + 120) = v41;
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = (void *)swift_allocObject();
  v43[4] = sub_1B6B8FD9C;
  v43[5] = v42;
  v43[2] = sub_1B6B8FDC8;
  v43[3] = v42;
  v43[6] = v42;
  swift_allocObject();
  swift_retain_n();
  uint64_t v44 = sub_1B671DD98(0xD000000000000015, 0x80000001B6F4B6D0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v43, v42, 0, 0,
          16,
          v25,
          0);
  swift_release();
  *(void *)(v0 + 128) = v44;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49668 = v0;
  return result;
}

id sub_1B6B7983C()
{
  return sub_1B6B79848((SEL *)&selRef_usesOrthographicProjection);
}

id sub_1B6B79848(SEL *a1)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v1, v9);
    uint64_t v6 = MEMORY[0x1BA9B8670](v9);
    sub_1B6B47018((uint64_t)v9);
    if (v6)
    {
      self;
      uint64_t v7 = (void *)swift_dynamicCastObjCClass();
      if (!v7) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
    id v3 = objc_msgSend(v7, sel_camera);

    if (v3) {
      goto LABEL_3;
    }
    return 0;
  }
  id v3 = (id)v1[4];
  id v4 = v3;
  if (!v3) {
    return 0;
  }
LABEL_3:
  id v5 = [v3 *a1];

  return v5;
}

uint64_t sub_1B6B79938()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v1 = (id)v0[4];
    id v2 = v1;
    if (v1)
    {
LABEL_3:
      unsigned int v3 = objc_msgSend(v1, sel_usesOrthographicProjection);

      return v3 ^ 1;
    }
  }
  else
  {
    sub_1B6B96284(v0, v7);
    uint64_t v5 = MEMORY[0x1BA9B8670](v7);
    sub_1B6B47018((uint64_t)v7);
    if (v5)
    {
      self;
      uint64_t v6 = (void *)swift_dynamicCastObjCClass();
      if (!v6) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
    id v1 = objc_msgSend(v6, sel_camera);

    if (v1) {
      goto LABEL_3;
    }
  }
  return 1;
}

void sub_1B6B79A20(SEL *a1@<X3>, float *a2@<X8>)
{
  id v4 = sub_1B6B81AD4((SEL *)&selRef_camera);
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 *a1];
    float v7 = v6;
  }
  else
  {
    float v7 = 1.0;
  }
  *a2 = v7;
}

void sub_1B6B79A8C(simd_float4x4 *a1@<X8>)
{
  id v2 = sub_1B6B81AD4((SEL *)&selRef_camera);
  if (v2)
  {
    unsigned int v3 = v2;
    objc_msgSend(v2, sel_projectionTransform);
    simd_float4 v12 = v4;
    simd_float4 v10 = v6;
    simd_float4 v11 = v5;
    simd_float4 v9 = v7;

    v8.columns[3] = v9;
    v8.columns[2] = v10;
    v8.columns[1] = v11;
    v8.columns[0] = v12;
  }
  else
  {
    v8.columns[0] = 0uLL;
    v8.columns[1] = 0uLL;
    v8.columns[2] = 0uLL;
    v8.columns[3] = 0uLL;
  }
  *a1 = j____invert_f4(v8);
}

uint64_t sub_1B6B79B18@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6B96284(a1, v18);
  uint64_t v3 = MEMORY[0x1BA9B8670](v18);
  uint64_t result = sub_1B6B47018((uint64_t)v18);
  if (!v3) {
    goto LABEL_5;
  }
  self;
  simd_float4 v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {
    uint64_t result = swift_unknownObjectRelease();
LABEL_5:
    long long v12 = 0uLL;
    long long v13 = 0uLL;
    long long v10 = 0uLL;
    long long v11 = 0uLL;
    goto LABEL_6;
  }
  objc_msgSend(v5, sel_worldTransform);
  long long v16 = v7;
  long long v17 = v6;
  long long v14 = v9;
  long long v15 = v8;
  uint64_t result = swift_unknownObjectRelease();
  long long v11 = v14;
  long long v10 = v15;
  long long v13 = v16;
  long long v12 = v17;
LABEL_6:
  *a2 = v12;
  a2[1] = v13;
  a2[2] = v10;
  a2[3] = v11;
  return result;
}

void sub_1B6B79BC4(long long *a1, void *a2)
{
  long long v6 = a1[1];
  long long v7 = *a1;
  long long v4 = a1[3];
  long long v5 = a1[2];
  sub_1B6B96284(a2, v8);
  uint64_t v2 = MEMORY[0x1BA9B8670](v8);
  sub_1B6B47018((uint64_t)v8);
  if (v2)
  {
    self;
    uint64_t v3 = (void *)swift_dynamicCastObjCClass();
    if (!v3) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  objc_msgSend(v3, sel_setWorldTransform_, *(double *)&v7, *(double *)&v6, *(double *)&v5, *(double *)&v4, v4, v5, v6, v7);
}

void sub_1B6B79C74(void *a1@<X0>, simd_float4x4 *a2@<X8>)
{
  sub_1B6B96284(a1, v14);
  uint64_t v3 = MEMORY[0x1BA9B8670](v14);
  sub_1B6B47018((uint64_t)v14);
  if (!v3) {
    goto LABEL_5;
  }
  self;
  long long v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
  {
    swift_unknownObjectRelease();
LABEL_5:
    v9.columns[0] = 0uLL;
    v9.columns[1] = 0uLL;
    v9.columns[2] = 0uLL;
    v9.columns[3] = 0uLL;
    goto LABEL_6;
  }
  objc_msgSend(v4, sel_worldTransform);
  simd_float4 v12 = v6;
  simd_float4 v13 = v5;
  simd_float4 v10 = v8;
  simd_float4 v11 = v7;
  swift_unknownObjectRelease();
  v9.columns[3] = v10;
  v9.columns[2] = v11;
  v9.columns[1] = v12;
  v9.columns[0] = v13;
LABEL_6:
  *a2 = j____invert_f4(v9);
}

uint64_t sub_1B6B79D24()
{
  return 0x6172656D6143;
}

uint64_t sub_1B6B79D38(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC5C8);
}

float sub_1B6B79D5C()
{
  return sub_1B6B79D84((SEL *)&selRef_intensity, (SEL *)&selRef_bloom);
}

float sub_1B6B79D70()
{
  return sub_1B6B79D84((SEL *)&selRef_threshold, (SEL *)&selRef_bloom);
}

float sub_1B6B79D84(SEL *a1, SEL *a2)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v2, v13);
    uint64_t v9 = MEMORY[0x1BA9B8670](v13);
    sub_1B6B47018((uint64_t)v13);
    if (v9)
    {
      self;
      simd_float4 v10 = (void *)swift_dynamicCastObjCClass();
      if (!v10) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      simd_float4 v10 = 0;
    }
    id v11 = objc_msgSend(v10, sel_camera);

    id v5 = [v11 *a2];
    if (v5) {
      goto LABEL_3;
    }
    return 0.0;
  }
  id v5 = (id)v2[4];
  id v6 = v5;
  if (!v5) {
    return 0.0;
  }
LABEL_3:
  [v5 *a1];
  float v8 = v7;

  return v8;
}

float sub_1B6B79EA4()
{
  return sub_1B6B79D84((SEL *)&selRef_thresholdSmoothness, (SEL *)&selRef_bloom);
}

id sub_1B6B79EB8()
{
  return sub_1B6B7A070((SEL *)&selRef_useHighQuality, (SEL *)&selRef_bloom);
}

__n128 sub_1B6B79ECC()
{
  id v0 = sub_1B6B7ABA8((SEL *)&selRef_bloom);
  if (v0)
  {
    id v1 = v0;
    objc_msgSend(v0, sel_colorFilter);
    long long v8 = v2;

    return (__n128)v8;
  }
  else
  {
    __asm { FMOV            V0.4S, #1.0 }
  }
  return result;
}

float sub_1B6B79F24()
{
  return sub_1B6B79D84((SEL *)&selRef_contrast, (SEL *)&selRef_bloom);
}

float sub_1B6B79F38()
{
  return sub_1B6B79D84((SEL *)&selRef_saturation, (SEL *)&selRef_bloom);
}

id sub_1B6B79F4C()
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v0, v8);
    uint64_t v4 = MEMORY[0x1BA9B8670](v8);
    sub_1B6B47018((uint64_t)v8);
    if (v4)
    {
      self;
      id v5 = (void *)swift_dynamicCastObjCClass();
      if (!v5) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      id v5 = 0;
    }
    id v6 = objc_msgSend(v5, sel_camera);

    id v1 = objc_msgSend(v6, sel_bloom);
    if (v1) {
      goto LABEL_3;
    }
    return 0;
  }
  id v1 = (id)v0[4];
  id v2 = v1;
  if (!v1) {
    return 0;
  }
LABEL_3:
  id v3 = objc_msgSend(v1, sel_iterationCount);

  return v3;
}

id sub_1B6B7A05C()
{
  return sub_1B6B7A070((SEL *)&selRef_isEnabled, (SEL *)&selRef_bloom);
}

id sub_1B6B7A070(SEL *a1, SEL *a2)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v2, v12);
    uint64_t v8 = MEMORY[0x1BA9B8670](v12);
    sub_1B6B47018((uint64_t)v12);
    if (v8)
    {
      self;
      uint64_t v9 = (void *)swift_dynamicCastObjCClass();
      if (!v9) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v9 = 0;
    }
    id v10 = objc_msgSend(v9, sel_camera);

    id v5 = [v10 *a2];
    if (v5) {
      goto LABEL_3;
    }
    return 0;
  }
  id v5 = (id)v2[4];
  id v6 = v5;
  if (!v5) {
    return 0;
  }
LABEL_3:
  id v7 = [v5 *a1];

  return v7;
}

uint64_t sub_1B6B7A188@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7AF44(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B95F74, (uint64_t (*)(unsigned char *))sub_1B6B46518, a2);
}

void sub_1B6B7A1C8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B7A1E8()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78170;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B8FF30;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B8FF5C;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6733834(0x64656C62616E65, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B8FFF0;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B9001C;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B67338B0(0x7469736E65746E69, 0xE900000000000079, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B8FFF0;
  uint64_t v9[5] = v8;
  _OWORD v9[2] = sub_1B6B9001C;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B67338B0(0x6C6F687365726874, 0xE900000000000064, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t v11 = swift_getKeyPath();
  simd_float4 v12 = (void *)swift_allocObject();
  void v12[4] = sub_1B6B8FFF0;
  void v12[5] = v11;
  _DWORD v12[2] = sub_1B6B9001C;
  void v12[3] = v11;
  void v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = sub_1B67338B0(0xD000000000000013, 0x80000001B6F2E040, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v12, v11, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 56) = v13;
  uint64_t v14 = swift_getKeyPath();
  long long v15 = (void *)swift_allocObject();
  void v15[4] = sub_1B6B8FF30;
  void v15[5] = v14;
  _OWORD v15[2] = sub_1B6B8FF5C;
  v15[3] = v14;
  void v15[6] = v14;
  swift_allocObject();
  swift_retain_n();
  uint64_t v16 = sub_1B6733834(0x5168676948657375, 0xEE007974696C6175, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v15, v14, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 64) = v16;
  uint64_t v17 = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFD0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
  uint64_t v18 = (void *)swift_allocObject();
  void v18[4] = sub_1B6B90208;
  v18[5] = v17;
  _OWORD v18[2] = sub_1B6B90248;
  uint64_t v18[3] = v17;
  v18[6] = v17;
  swift_allocObject();
  swift_retain_n();
  uint64_t v19 = sub_1B673392C(0x6C6946726F6C6F63, 0xEB00000000726574, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v18, v17, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 72) = v19;
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = (void *)swift_allocObject();
  _OWORD v21[4] = sub_1B6B8FFF0;
  void v21[5] = v20;
  void v21[2] = sub_1B6B9001C;
  void v21[3] = v20;
  v21[6] = v20;
  swift_allocObject();
  swift_retain_n();
  uint64_t v22 = sub_1B67338B0(0x74736172746E6F63, 0xE800000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v21, v20, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 80) = v22;
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = (void *)swift_allocObject();
  v24[4] = sub_1B6B8FFF0;
  uint64_t v24[5] = v23;
  void v24[2] = sub_1B6B9001C;
  void v24[3] = v23;
  v24[6] = v23;
  swift_allocObject();
  swift_retain_n();
  uint64_t v25 = sub_1B67338B0(0x6974617275746173, 0xEA00000000006E6FLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v24, v23, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 88) = v25;
  uint64_t v26 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF70, MEMORY[0x1E4FBB550], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v27 = (void *)swift_allocObject();
  _OWORD v27[4] = sub_1B6B90358;
  v27[5] = v26;
  v27[2] = sub_1B6B90398;
  void v27[3] = v26;
  v27[6] = v26;
  swift_allocObject();
  swift_retain_n();
  uint64_t v28 = sub_1B6733D5C(0x6F69746172657469, 0xEE00746E756F436ELL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v27, v26, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 96) = v28;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49670 = v0;
  return result;
}

void sub_1B6B7AB20(void *a1@<X8>)
{
  id v2 = sub_1B6B7ABA8((SEL *)&selRef_bloom);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_iterationCount);
  }
  else
  {
    id v4 = 0;
  }
  *a1 = v4;
}

uint64_t sub_1B6B7AB84(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC5D0);
}

id sub_1B6B7ABA8(SEL *a1)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v3 = (id)v1[4];
    id v4 = v3;
  }
  else
  {
    sub_1B6B96284(v1, v9);
    uint64_t v5 = MEMORY[0x1BA9B8670](v9);
    sub_1B6B47018((uint64_t)v9);
    if (v5)
    {
      self;
      id v6 = (void *)swift_dynamicCastObjCClass();
      if (!v6) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      id v6 = 0;
    }
    id v7 = objc_msgSend(v6, sel_camera);

    id v3 = [v7 *a1];
  }
  return v3;
}

id sub_1B6B7AC94()
{
  return sub_1B6B7A070((SEL *)&selRef_isEnabled, (SEL *)&selRef_toneMapping);
}

void sub_1B6B7ACA8(char a1, SEL *a2)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v5 = (id)v2[4];
    id v6 = v5;
    if (!v5) {
      return;
    }
LABEL_9:
    objc_msgSend(v5, sel_setEnabled_, a1 & 1);

    return;
  }
  sub_1B6B96284(v2, v10);
  uint64_t v7 = MEMORY[0x1BA9B8670](v10);
  sub_1B6B47018((uint64_t)v10);
  if (v7)
  {
    self;
    uint64_t v8 = (void *)swift_dynamicCastObjCClass();
    if (!v8) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = objc_msgSend(v8, sel_camera);

  id v5 = [v9 *a2];
  if (v5) {
    goto LABEL_9;
  }
}

uint64_t sub_1B6B7ADBC()
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v0, v8);
    uint64_t v4 = MEMORY[0x1BA9B8670](v8);
    sub_1B6B47018((uint64_t)v8);
    if (v4)
    {
      self;
      id v5 = (void *)swift_dynamicCastObjCClass();
      if (!v5) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      id v5 = 0;
    }
    id v6 = objc_msgSend(v5, sel_camera);

    id v1 = objc_msgSend(v6, sel_toneMapping);
    if (v1) {
      goto LABEL_3;
    }
    return 1;
  }
  id v1 = (id)v0[4];
  id v2 = v1;
  if (!v1) {
    return 1;
  }
LABEL_3:
  id v3 = objc_msgSend(v1, sel_mode);

  return (uint64_t)v3;
}

float sub_1B6B7AECC()
{
  return sub_1B6B79D84((SEL *)&selRef_toeStrength, (SEL *)&selRef_toneMapping);
}

float sub_1B6B7AEE0()
{
  return sub_1B6B79D84((SEL *)&selRef_toeLength, (SEL *)&selRef_toneMapping);
}

float sub_1B6B7AEF4()
{
  return sub_1B6B79D84((SEL *)&selRef_shoulderStrength, (SEL *)&selRef_toneMapping);
}

float sub_1B6B7AF08()
{
  return sub_1B6B79D84((SEL *)&selRef_shoulderLength, (SEL *)&selRef_toneMapping);
}

float sub_1B6B7AF1C()
{
  return sub_1B6B79D84((SEL *)&selRef_shoulderAngle, (SEL *)&selRef_toneMapping);
}

float sub_1B6B7AF30()
{
  return sub_1B6B79D84((SEL *)&selRef_gamma, (SEL *)&selRef_toneMapping);
}

uint64_t sub_1B6B7AF44@<X0>(void *a1@<X0>, void (*a2)(unsigned char *, uint64_t)@<X1>, uint64_t (*a3)(unsigned char *)@<X2>, uint64_t a4@<X8>)
{
  swift_unknownObjectWeakInit();
  v11[1] = 0;
  swift_unknownObjectWeakAssign();
  _DWORD v11[2] = 0x3E6C6C756E3CLL;
  uint64_t v12 = 0xE600000000000000;
  sub_1B6649008((uint64_t)v11, (uint64_t)v13);
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v14 = 0;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (!v4)
  {
    sub_1B62C14BC(v11, v12);
    sub_1B6648FB4();
    sub_1B6E33518();
    sub_1B69CBCE8((uint64_t)&v10, (uint64_t)v13);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v11);
    a2(v13, a4);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return a3(v13);
}

void sub_1B6B7B098(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v5 = v3;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t))(a2 + 16))(v3, ObjectType, a2);
  sub_1B6B96284(v3, v13);
  uint64_t v8 = MEMORY[0x1BA9B8670](v13);
  sub_1B6B47018((uint64_t)v13);
  if (!v8) {
    goto LABEL_5;
  }
  self;
  id v9 = (void *)swift_dynamicCastObjCClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
LABEL_5:
    id v12 = 0;
    goto LABEL_6;
  }
  id v10 = objc_msgSend(v9, sel_presentationNode);
  swift_unknownObjectRelease();
  id v11 = objc_msgSend(v10, sel_camera);

  id v12 = [v11 *a3];
LABEL_6:

  void v5[4] = v12;
}

uint64_t sub_1B6B7B1B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7AF44(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B95FAC, (uint64_t (*)(unsigned char *))sub_1B6B465C8, a2);
}

void sub_1B6B7B1F8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B7B218()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78180;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B904E8;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B90514;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6738354(0x64656C62616E65, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B62D2D78(0, (unint64_t *)&unk_1E9DD65C0, (uint64_t (*)(uint64_t))type metadata accessor for VFXCameraToneMappingMode, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  id v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B9055C;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B9059C;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B67383D0(1701080941, 0xE400000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B90630;
  uint64_t v9[5] = v8;
  _OWORD v9[2] = sub_1B6B9065C;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B6738460(0x6E65727453656F74, 0xEB00000000687467, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t v11 = swift_getKeyPath();
  id v12 = (void *)swift_allocObject();
  void v12[4] = sub_1B6B90630;
  void v12[5] = v11;
  _DWORD v12[2] = sub_1B6B9065C;
  void v12[3] = v11;
  void v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = sub_1B6738460(0x74676E654C656F74, 0xE900000000000068, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v12, v11, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 56) = v13;
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[4] = sub_1B6B90630;
  void v15[5] = v14;
  _OWORD v15[2] = sub_1B6B9065C;
  v15[3] = v14;
  void v15[6] = v14;
  swift_allocObject();
  swift_retain_n();
  uint64_t v16 = sub_1B6738460(0xD000000000000010, 0x80000001B6F4B6F0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v15, v14, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 64) = v16;
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = (void *)swift_allocObject();
  void v18[4] = sub_1B6B90630;
  v18[5] = v17;
  _OWORD v18[2] = sub_1B6B9065C;
  uint64_t v18[3] = v17;
  v18[6] = v17;
  swift_allocObject();
  swift_retain_n();
  uint64_t v19 = sub_1B6738460(0x7265646C756F6873, 0xEE006874676E654CLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v18, v17, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 72) = v19;
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = (void *)swift_allocObject();
  _OWORD v21[4] = sub_1B6B90630;
  void v21[5] = v20;
  void v21[2] = sub_1B6B9065C;
  void v21[3] = v20;
  v21[6] = v20;
  swift_allocObject();
  swift_retain_n();
  uint64_t v22 = sub_1B6738460(0x7265646C756F6873, 0xED0000656C676E41, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v21, v20, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 80) = v22;
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = (void *)swift_allocObject();
  v24[4] = sub_1B6B90630;
  uint64_t v24[5] = v23;
  void v24[2] = sub_1B6B9065C;
  void v24[3] = v23;
  v24[6] = v23;
  swift_allocObject();
  swift_retain_n();
  uint64_t v25 = sub_1B6738460(0x616D6D6167, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v24, v23, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 88) = v25;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49678 = v0;
  return result;
}

void sub_1B6B7BA44(uint64_t *a1@<X8>)
{
  id v2 = sub_1B6B7ABA8((SEL *)&selRef_toneMapping);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = (uint64_t)objc_msgSend(v2, sel_mode);
  }
  else
  {
    uint64_t v4 = 1;
  }
  *a1 = v4;
}

uint64_t sub_1B6B7BAA8(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC5D8);
}

float sub_1B6B7BACC()
{
  return sub_1B6B79D84((SEL *)&selRef_value, (SEL *)&selRef_exposure);
}

id sub_1B6B7BAE0()
{
  return sub_1B6B7A070((SEL *)&selRef_isEnabled, (SEL *)&selRef_exposure);
}

uint64_t sub_1B6B7BAF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7AF44(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B95FE4, (uint64_t (*)(unsigned char *))sub_1B6B46678, a2);
}

void sub_1B6B7BB34(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B7BB54()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78140;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B90974;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B909A0;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6736BBC(0x64656C62616E65, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B90A34;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B90A60;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B6736C38(0x65756C6176, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49680 = v0;
  return result;
}

uint64_t sub_1B6B7BE00()
{
  return 0x657275736F707845;
}

uint64_t sub_1B6B7BE18(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC5E0);
}

float sub_1B6B7BE3C()
{
  return sub_1B6B79D84((SEL *)&selRef_radius, (SEL *)&selRef_lensBlur);
}

id sub_1B6B7BE50()
{
  return sub_1B6B7A070((SEL *)&selRef_isEnabled, (SEL *)&selRef_lensBlur);
}

uint64_t sub_1B6B7BE64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7AF44(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B9601C, (uint64_t (*)(unsigned char *))sub_1B6B46728, a2);
}

void sub_1B6B7BEA4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B7BEC4()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78140;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B90B58;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B90B84;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6736CB4(0x64656C62616E65, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B90C18;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B90C44;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B6736D30(0x737569646172, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49688 = v0;
  return result;
}

uint64_t sub_1B6B7C170(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC5E8);
}

float sub_1B6B7C194()
{
  return sub_1B6B79D84((SEL *)&selRef_intensity, (SEL *)&selRef_grain);
}

float sub_1B6B7C1A8()
{
  return sub_1B6B79D84((SEL *)&selRef_scale, (SEL *)&selRef_grain);
}

id sub_1B6B7C1BC()
{
  return sub_1B6B7A070((SEL *)&selRef_isColored, (SEL *)&selRef_grain);
}

id sub_1B6B7C1D0()
{
  return sub_1B6B7A070((SEL *)&selRef_isEnabled, (SEL *)&selRef_grain);
}

uint64_t sub_1B6B7C1E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7AF44(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B96054, (uint64_t (*)(unsigned char *))sub_1B6B467D8, a2);
}

void sub_1B6B7C224(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B7C244()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78190;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B90D3C;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B90D68;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6733DD8(0x64656C62616E65, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B90DFC;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B90E28;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B6733E54(0x7469736E65746E69, 0xE900000000000079, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  id v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B90DFC;
  uint64_t v9[5] = v8;
  _OWORD v9[2] = sub_1B6B90E28;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B6733E54(0x656C616373, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t v11 = swift_getKeyPath();
  id v12 = (void *)swift_allocObject();
  void v12[4] = sub_1B6B90D3C;
  void v12[5] = v11;
  _DWORD v12[2] = sub_1B6B90D68;
  void v12[3] = v11;
  void v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = sub_1B6733DD8(0x65726F6C6F437369, 0xE900000000000064, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v12, v11, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 56) = v13;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49690 = v0;
  return result;
}

uint64_t sub_1B6B7C6C4()
{
  return 0x6E69617247;
}

uint64_t sub_1B6B7C6D8(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC5F0);
}

float sub_1B6B7C6FC()
{
  return sub_1B6B79D84((SEL *)&selRef_intensity, (SEL *)&selRef_motionBlur);
}

id sub_1B6B7C710()
{
  return sub_1B6B7A070((SEL *)&selRef_isEnabled, (SEL *)&selRef_motionBlur);
}

uint64_t sub_1B6B7C724@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7AF44(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B9608C, (uint64_t (*)(unsigned char *))sub_1B6B46888, a2);
}

void sub_1B6B7C764(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B7C784()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78140;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B90FE8;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B91014;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6737604(0x64656C62616E65, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B910A8;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B910D4;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B6737680(0x7469736E65746E69, 0xE900000000000079, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49698 = v0;
  return result;
}

uint64_t sub_1B6B7CA38()
{
  return 0x42206E6F69746F4DLL;
}

uint64_t sub_1B6B7CA58(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC5F8);
}

float sub_1B6B7CA7C()
{
  return sub_1B6B79D84((SEL *)&selRef_fStop, (SEL *)&selRef_depthOfField);
}

uint64_t sub_1B6B7CA90()
{
  return sub_1B6B7CAA8((SEL *)&selRef_apertureBladeCount);
}

uint64_t sub_1B6B7CA9C()
{
  return sub_1B6B7CAA8((SEL *)&selRef_focalBlurSampleCount);
}

uint64_t sub_1B6B7CAA8(SEL *a1)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v1, v10);
    uint64_t v6 = MEMORY[0x1BA9B8670](v10);
    sub_1B6B47018((uint64_t)v10);
    if (v6)
    {
      self;
      uint64_t v7 = (void *)swift_dynamicCastObjCClass();
      if (!v7) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
    id v8 = objc_msgSend(v7, sel_camera);

    id v3 = objc_msgSend(v8, sel_depthOfField);
    if (v3) {
      goto LABEL_3;
    }
    return 5;
  }
  id v3 = (id)v1[4];
  id v4 = v3;
  if (!v3) {
    return 5;
  }
LABEL_3:
  id v5 = [v3 *a1];

  return (uint64_t)v5;
}

id sub_1B6B7CBB8()
{
  return sub_1B6B7A070((SEL *)&selRef_isEnabled, (SEL *)&selRef_depthOfField);
}

uint64_t sub_1B6B7CBCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7AF44(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B960C4, (uint64_t (*)(unsigned char *))sub_1B6B46938, a2);
}

void sub_1B6B7CC0C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B7CC2C()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78190;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B911CC;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B911F8;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B67384DC(0x64656C62616E65, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B9128C;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B912B8;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B6738558(0x706F745366, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF70, MEMORY[0x1E4FBB550], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B9131C;
  uint64_t v9[5] = v8;
  _OWORD v9[2] = sub_1B6B9135C;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B67385D4(0x756F436564616C62, 0xEA0000000000746ELL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t v11 = swift_getKeyPath();
  id v12 = (void *)swift_allocObject();
  void v12[4] = sub_1B6B9131C;
  void v12[5] = v11;
  _DWORD v12[2] = sub_1B6B9135C;
  void v12[3] = v11;
  void v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = sub_1B67385D4(0x6F43656C706D6173, 0xEB00000000746E75, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v12, v11, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 56) = v13;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E496A0 = v0;
  return result;
}

void sub_1B6B7D0B8(SEL *a1@<X3>, uint64_t *a2@<X8>)
{
  id v4 = sub_1B6B7ABA8((SEL *)&selRef_depthOfField);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (uint64_t)[v4 *a1];
  }
  else
  {
    uint64_t v6 = 5;
  }
  *a2 = v6;
}

uint64_t sub_1B6B7D11C()
{
  return 0x666F206874706544;
}

uint64_t sub_1B6B7D140(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC600);
}

float sub_1B6B7D164()
{
  return sub_1B6B79D84((SEL *)&selRef_intensity, (SEL *)&selRef_chromaticTransform);
}

double sub_1B6B7D178()
{
  return sub_1B6B7D1C8((SEL *)&selRef_center, (SEL *)&selRef_chromaticTransform);
}

float sub_1B6B7D18C()
{
  return sub_1B6B79D84((SEL *)&selRef_fromZ, (SEL *)&selRef_chromaticTransform);
}

float sub_1B6B7D1A0()
{
  return sub_1B6B79D84((SEL *)&selRef_fromAngle, (SEL *)&selRef_chromaticTransform);
}

double sub_1B6B7D1B4()
{
  return sub_1B6B7D1C8((SEL *)&selRef_fromShift, (SEL *)&selRef_chromaticTransform);
}

double sub_1B6B7D1C8(SEL *a1, SEL *a2)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v2, v13);
    uint64_t v9 = MEMORY[0x1BA9B8670](v13);
    sub_1B6B47018((uint64_t)v13);
    if (v9)
    {
      self;
      uint64_t v10 = (void *)swift_dynamicCastObjCClass();
      if (!v10) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
    id v11 = objc_msgSend(v10, sel_camera);

    id v5 = [v11 *a2];
    if (v5) {
      goto LABEL_3;
    }
    return 0.0;
  }
  id v5 = (id)v2[4];
  id v6 = v5;
  if (!v5) {
    return 0.0;
  }
LABEL_3:
  [v5 *a1];
  double v8 = v7;

  return v8;
}

float sub_1B6B7D2E8()
{
  return sub_1B6B79D84((SEL *)&selRef_toZ, (SEL *)&selRef_chromaticTransform);
}

float sub_1B6B7D2FC()
{
  return sub_1B6B79D84((SEL *)&selRef_toAngle, (SEL *)&selRef_chromaticTransform);
}

double sub_1B6B7D310()
{
  return sub_1B6B7D1C8((SEL *)&selRef_toShift, (SEL *)&selRef_chromaticTransform);
}

double sub_1B6B7D324()
{
  return sub_1B6B7D33C((SEL *)&selRef_color1);
}

double sub_1B6B7D330()
{
  return sub_1B6B7D33C((SEL *)&selRef_color2);
}

double sub_1B6B7D33C(SEL *a1)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v3 = (id)v1[4];
    id v4 = v3;
    if (v3)
    {
LABEL_3:
      [v3 *a1];
      double v10 = v5;

      return v10;
    }
  }
  else
  {
    sub_1B6B96284(v1, v11);
    uint64_t v7 = MEMORY[0x1BA9B8670](v11);
    sub_1B6B47018((uint64_t)v11);
    if (v7)
    {
      self;
      double v8 = (void *)swift_dynamicCastObjCClass();
      if (!v8) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      double v8 = 0;
    }
    id v9 = objc_msgSend(v8, sel_camera);

    id v3 = objc_msgSend(v9, sel_chromaticTransform);
    if (v3) {
      goto LABEL_3;
    }
  }
  return 0.0;
}

double sub_1B6B7D44C()
{
  return sub_1B6B7D33C((SEL *)&selRef_color3);
}

id sub_1B6B7D458()
{
  return sub_1B6B7A070((SEL *)&selRef_isEnabled, (SEL *)&selRef_chromaticTransform);
}

double sub_1B6B7D46C()
{
  return sub_1B6B7D1C8((SEL *)&selRef_maskCenter, (SEL *)&selRef_chromaticTransform);
}

float sub_1B6B7D480()
{
  return sub_1B6B79D84((SEL *)&selRef_maskRadius, (SEL *)&selRef_chromaticTransform);
}

id sub_1B6B7D494()
{
  return sub_1B6B7A070((SEL *)&selRef_maskEnabled, (SEL *)&selRef_chromaticTransform);
}

float sub_1B6B7D4A8()
{
  return sub_1B6B79D84((SEL *)&selRef_unMultBlending, (SEL *)&selRef_chromaticTransform);
}

uint64_t sub_1B6B7D4BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7AF44(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B960FC, (uint64_t (*)(unsigned char *))sub_1B6B469E8, a2);
}

void sub_1B6B7D4FC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B7D51C()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6EAAD50;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B91518;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B91544;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B67393A0(0x64656C62616E65, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B915C8;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B915F4;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B673941C(0x7469736E65746E69, 0xE900000000000079, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFC0, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
  id v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B91674;
  uint64_t v9[5] = v8;
  _OWORD v9[2] = sub_1B6B916B4;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B6739498(0x7265746E6563, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t v11 = swift_getKeyPath();
  id v12 = (void *)swift_allocObject();
  void v12[4] = sub_1B6B915C8;
  void v12[5] = v11;
  _DWORD v12[2] = sub_1B6B915F4;
  void v12[3] = v11;
  void v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = sub_1B673941C(0x5A6D6F7266, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v12, v11, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 56) = v13;
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[4] = sub_1B6B915C8;
  void v15[5] = v14;
  _OWORD v15[2] = sub_1B6B915F4;
  v15[3] = v14;
  void v15[6] = v14;
  swift_allocObject();
  swift_retain_n();
  uint64_t v16 = sub_1B673941C(0x6C676E416D6F7266, 0xE900000000000065, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v15, v14, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 64) = v16;
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = (void *)swift_allocObject();
  void v18[4] = sub_1B6B91674;
  v18[5] = v17;
  _OWORD v18[2] = sub_1B6B916B4;
  uint64_t v18[3] = v17;
  v18[6] = v17;
  swift_allocObject();
  swift_retain_n();
  uint64_t v19 = sub_1B6739498(0x666968536D6F7266, 0xE900000000000074, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v18, v17, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 72) = v19;
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = (void *)swift_allocObject();
  _OWORD v21[4] = sub_1B6B915C8;
  void v21[5] = v20;
  void v21[2] = sub_1B6B915F4;
  void v21[3] = v20;
  v21[6] = v20;
  swift_allocObject();
  swift_retain_n();
  uint64_t v22 = sub_1B673941C(5926772, 0xE300000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v21, v20, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 80) = v22;
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = (void *)swift_allocObject();
  v24[4] = sub_1B6B915C8;
  uint64_t v24[5] = v23;
  void v24[2] = sub_1B6B915F4;
  void v24[3] = v23;
  v24[6] = v23;
  swift_allocObject();
  swift_retain_n();
  uint64_t v25 = sub_1B673941C(0x656C676E416F74, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v24, v23, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 88) = v25;
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = (void *)swift_allocObject();
  _OWORD v27[4] = sub_1B6B91674;
  v27[5] = v26;
  v27[2] = sub_1B6B916B4;
  void v27[3] = v26;
  v27[6] = v26;
  swift_allocObject();
  swift_retain_n();
  uint64_t v28 = sub_1B6739498(0x74666968536F74, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v27, v26, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 96) = v28;
  uint64_t v29 = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFD0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
  uint64_t v30 = (void *)swift_allocObject();
  v30[4] = sub_1B6B91924;
  v30[5] = v29;
  long long v30[2] = sub_1B6B91964;
  v30[3] = v29;
  v30[6] = v29;
  swift_allocObject();
  swift_retain_n();
  uint64_t v31 = sub_1B67398C8(0x31726F6C6F63, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v30, v29, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 104) = v31;
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = (void *)swift_allocObject();
  v33[4] = sub_1B6B91924;
  v33[5] = v32;
  v33[2] = sub_1B6B91964;
  v33[3] = v32;
  v33[6] = v32;
  swift_allocObject();
  swift_retain_n();
  uint64_t v34 = sub_1B67398C8(0x32726F6C6F63, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v33, v32, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 112) = v34;
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = (void *)swift_allocObject();
  id v36[4] = sub_1B6B91924;
  v36[5] = v35;
  v36[2] = sub_1B6B91964;
  v36[3] = v35;
  v36[6] = v35;
  swift_allocObject();
  swift_retain_n();
  uint64_t v37 = sub_1B67398C8(0x33726F6C6F63, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v36, v35, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 120) = v37;
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = (void *)swift_allocObject();
  v39[4] = sub_1B6B91674;
  v39[5] = v38;
  v39[2] = sub_1B6B916B4;
  v39[3] = v38;
  v39[6] = v38;
  swift_allocObject();
  swift_retain_n();
  uint64_t v40 = v3;
  uint64_t v41 = sub_1B6739498(0x746E65436B73616DLL, 0xEA00000000007265, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v39, v38, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 128) = v41;
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = (void *)swift_allocObject();
  v43[4] = sub_1B6B915C8;
  v43[5] = v42;
  v43[2] = sub_1B6B915F4;
  v43[3] = v42;
  v43[6] = v42;
  swift_allocObject();
  swift_retain_n();
  uint64_t v44 = sub_1B673941C(0x696461526B73616DLL, 0xEA00000000007375, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v43, v42, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 136) = v44;
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = (void *)swift_allocObject();
  unsigned char v46[4] = sub_1B6B91518;
  v46[5] = v45;
  v46[2] = sub_1B6B91544;
  v46[3] = v45;
  v46[6] = v45;
  swift_allocObject();
  swift_retain_n();
  uint64_t v47 = sub_1B67393A0(0x62616E456B73616DLL, 0xEB0000000064656CLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v46, v45, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 144) = v47;
  uint64_t v48 = swift_getKeyPath();
  uint64_t v49 = (void *)swift_allocObject();
  unsigned char v49[4] = sub_1B6B915C8;
  v49[5] = v48;
  uint64_t v49[2] = sub_1B6B915F4;
  v49[3] = v48;
  v49[6] = v48;
  swift_allocObject();
  swift_retain_n();
  uint64_t v50 = sub_1B673941C(0x6C42746C754D6E75, 0xEE00676E69646E65, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v49, v48, 0, 0,
          0,
          v40,
          0);
  swift_release();
  *(void *)(v0 + 152) = v50;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E496A8 = v0;
  return result;
}

unint64_t sub_1B6B7E454()
{
  return 0xD000000000000013;
}

uint64_t sub_1B6B7E470(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC608);
}

float sub_1B6B7E494()
{
  return sub_1B6B79D84((SEL *)&selRef_radius, (SEL *)&selRef_doughnutBokeh);
}

double sub_1B6B7E4A8()
{
  return sub_1B6B7D1C8((SEL *)&selRef_maskCenter, (SEL *)&selRef_doughnutBokeh);
}

float sub_1B6B7E4BC()
{
  return sub_1B6B79D84((SEL *)&selRef_maskRadius, (SEL *)&selRef_doughnutBokeh);
}

id sub_1B6B7E4D0()
{
  return sub_1B6B7A070((SEL *)&selRef_maskEnabled, (SEL *)&selRef_doughnutBokeh);
}

id sub_1B6B7E4E4()
{
  return sub_1B6B7A070((SEL *)&selRef_isEnabled, (SEL *)&selRef_doughnutBokeh);
}

uint64_t sub_1B6B7E4F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7AF44(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B96134, (uint64_t (*)(unsigned char *))sub_1B6B46A98, a2);
}

void sub_1B6B7E538(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B7E558()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E781F0;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B91CC0;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B91CEC;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6738650(0x64656C62616E65, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B91D80;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B91DAC;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B67386CC(0x737569646172, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFC0, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
  id v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B91EFC;
  uint64_t v9[5] = v8;
  _OWORD v9[2] = sub_1B6B91F3C;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B6738748(0x746E65436B73616DLL, 0xEA00000000007265, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t v11 = swift_getKeyPath();
  id v12 = (void *)swift_allocObject();
  void v12[4] = sub_1B6B91D80;
  void v12[5] = v11;
  _DWORD v12[2] = sub_1B6B91DAC;
  void v12[3] = v11;
  void v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = sub_1B67386CC(0x696461526B73616DLL, 0xEA00000000007375, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v12, v11, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 56) = v13;
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[4] = sub_1B6B91CC0;
  void v15[5] = v14;
  _OWORD v15[2] = sub_1B6B91CEC;
  v15[3] = v14;
  void v15[6] = v14;
  swift_allocObject();
  swift_retain_n();
  uint64_t v16 = sub_1B6738650(0x62616E456B73616DLL, 0xEB0000000064656CLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v15, v14, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 64) = v16;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E496B0 = v0;
  return result;
}

void sub_1B6B7EAE8(uint64_t a1@<X3>, uint64_t (*a2)(uint64_t)@<X4>, SEL *a3@<X5>, unsigned __int8 *a4@<X8>)
{
  id v6 = (void *)a2(a1);
  if (v6)
  {
    uint64_t v7 = v6;
    unsigned __int8 v8 = [v6 *a3];
  }
  else
  {
    unsigned __int8 v8 = 0;
  }
  *a4 = v8;
}

uint64_t sub_1B6B7EB48()
{
  return 0x6B6F4220A98D9FF0;
}

uint64_t sub_1B6B7EB64(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC610);
}

id sub_1B6B7EB88()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v1 = (void *)MEMORY[0x1BA9B8670](v0 + 4);
    id v2 = objc_msgSend(v1, sel_camera);

    id v3 = objc_msgSend(v2, sel_ssao);
  }
  else
  {
    sub_1B6B96284(v0, v8);
    uint64_t v4 = MEMORY[0x1BA9B8670](v8);
    sub_1B6B47018((uint64_t)v8);
    if (v4)
    {
      self;
      uint64_t v5 = (void *)swift_dynamicCastObjCClass();
      if (!v5) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v5 = 0;
    }
    id v6 = objc_msgSend(v5, sel_camera);

    id v3 = objc_msgSend(v6, sel_ssao);
  }
  return v3;
}

void sub_1B6B7ECB4()
{
}

void sub_1B6B7ECC0()
{
}

void sub_1B6B7ECCC()
{
}

void sub_1B6B7ECD8(SEL *a1)
{
  id v2 = sub_1B6B7EB88();
  if (v2)
  {
    id v3 = v2;
    [v2 *a1];
  }
}

id sub_1B6B7ED30()
{
  id v0 = sub_1B6B7EB88();
  if (!v0) {
    return 0;
  }
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_isEnabled);

  return v2;
}

uint64_t sub_1B6B7ED78@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  swift_unknownObjectWeakInit();
  v7[1] = 0;
  swift_unknownObjectWeakAssign();
  _OWORD v7[2] = 0x3E6C6C756E3CLL;
  uint64_t v8 = 0xE600000000000000;
  sub_1B6649008((uint64_t)v7, (uint64_t)v9);
  swift_unknownObjectWeakInit();
  uint64_t v9[5] = 0;
  void v9[6] = 0;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (!v2)
  {
    sub_1B62C14BC(v7, v8);
    sub_1B6648FB4();
    sub_1B6E33518();
    sub_1B69CBCE8((uint64_t)&v6, (uint64_t)v9);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
    sub_1B6B9616C(v9, a2);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B6B46B48((uint64_t)v9);
}

uint64_t sub_1B6B7EEC0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B6B7ED78(a1, a2);
}

uint64_t sub_1B6B7EEDC@<X0>(uint64_t a1@<X8>)
{
  swift_unknownObjectWeakInit();
  v3[1] = 0;
  swift_unknownObjectWeakAssign();
  void v3[2] = 0x3E6C6C756E3CLL;
  v3[3] = 0xE600000000000000;
  sub_1B6649008((uint64_t)v3, a1);
  uint64_t result = swift_unknownObjectWeakInit();
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_1B6B7EF54()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78190;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B92154;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B92180;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6732EEC(0x64656C62616E65, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B921DC;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B92208;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B6732F68(0x7469736E65746E69, 0xE900000000000079, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  id v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B921DC;
  uint64_t v9[5] = v8;
  _OWORD v9[2] = sub_1B6B92208;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B6732F68(0x737569646172, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t v11 = swift_getKeyPath();
  id v12 = (void *)swift_allocObject();
  void v12[4] = sub_1B6B921DC;
  void v12[5] = v11;
  _DWORD v12[2] = sub_1B6B92208;
  void v12[3] = v11;
  void v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = sub_1B6732F68(0x66666F6C6C6166, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v12, v11, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 56) = v13;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E496B8 = v0;
  return result;
}

void sub_1B6B7F3C0(unsigned __int8 *a1@<X8>)
{
  id v2 = sub_1B6B7EB88();
  if (v2)
  {
    uint64_t v3 = v2;
    unsigned __int8 v4 = objc_msgSend(v2, sel_isEnabled);
  }
  else
  {
    unsigned __int8 v4 = 0;
  }
  *a1 = v4;
}

void sub_1B6B7F418(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  id v2 = sub_1B6B7EB88();
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_setEnabled_, v1);
  }
}

void sub_1B6B7F484(SEL *a1@<X3>, _DWORD *a2@<X8>)
{
  id v4 = sub_1B6B7EB88();
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 *a1];
    int v7 = v6;
  }
  else
  {
    int v7 = 0;
  }
  *a2 = v7;
}

uint64_t sub_1B6B7F4E4()
{
  return 1329681235;
}

uint64_t sub_1B6B7F4F4(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC618);
}

void *VFXParametricModel.bridgedComponentNames.getter()
{
  return &unk_1F0FACF58;
}

uint64_t sub_1B6B7F55C()
{
  sub_1B6B96284(v0, v5);
  uint64_t v1 = MEMORY[0x1BA9B8670](v5);
  sub_1B6B47018((uint64_t)v5);
  if (v1)
  {
    self;
    id v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      id v3 = objc_msgSend(v2, sel_model);
      swift_unknownObjectRelease();
      if (v3)
      {
        self;
        uint64_t result = swift_dynamicCastObjCClass();
        if (result) {
          return result;
        }
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

id sub_1B6B7F614()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v1 = *(void **)(v0 + 32);
    id v2 = v1;
    if (v1)
    {
LABEL_3:
      id v3 = objc_msgSend(v1, sel_parametricType);

      return v3;
    }
  }
  else
  {
    uint64_t v1 = (void *)sub_1B6B7F55C();
    if (v1) {
      goto LABEL_3;
    }
  }
  return 0;
}

void sub_1B6B7F688()
{
}

void sub_1B6B7F694()
{
}

void sub_1B6B7F6A0()
{
}

void sub_1B6B7F6AC()
{
}

void sub_1B6B7F6B8()
{
}

void sub_1B6B7F6C4()
{
}

void sub_1B6B7F6D0()
{
}

void sub_1B6B7F6DC()
{
}

void sub_1B6B7F6E8()
{
}

void sub_1B6B7F6F4()
{
}

void sub_1B6B7F700(SEL *a1)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v3 = *(void **)(v1 + 32);
    id v4 = v3;
    if (!v3) {
      return;
    }
    goto LABEL_3;
  }
  id v3 = (void *)sub_1B6B7F55C();
  if (v3)
  {
LABEL_3:
    [v3 *a1];
  }
}

uint64_t sub_1B6B7F77C@<X0>(void *a1@<X0>, void (*a2)(unsigned char *, uint64_t)@<X1>, uint64_t (*a3)(unsigned char *)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a4;
  sub_1B6B94F18(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v11);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v35 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v35 = 0;
  uint64_t v14 = swift_unknownObjectWeakAssign();
  uint64_t v36 = 0x3E6C6C756E3CLL;
  uint64_t v37 = 0xE600000000000000;
  sub_1B6649008(v14, (uint64_t)v42);
  uint64_t v43 = 0;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  sub_1B62C14BC(a1, v15);
  if (sub_1B62B8F14(2037, v15, v16))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v4)
    {
      sub_1B62C14BC(&v34, v37);
      sub_1B6648FB4();
      sub_1B6E33518();
LABEL_9:
      sub_1B69CBCE8((uint64_t)&v38, (uint64_t)v42);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v34);
LABEL_17:
      a2(v42, v44);
    }
  }
  else
  {
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_1B62C14BC(a1, v17);
    if (sub_1B62B8F14(2029, v17, v18))
    {
      sub_1B62C14BC(a1, a1[3]);
      sub_1B6E33A28();
      if (!v4)
      {
        sub_1B62C14BC(&v34, v37);
        uint64_t v21 = sub_1B6E334C8();
        uint64_t v23 = v22;
        uint64_t v31 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v31 = 0;
        uint64_t v24 = swift_unknownObjectWeakAssign();
        uint64_t v32 = v21;
        uint64_t v33 = v23;
        sub_1B6649008(v24, (uint64_t)&v38);
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v30 = a2;
      sub_1B62C14BC(a1, a1[3]);
      sub_1B62B1B2C();
      sub_1B6E33A48();
      if (!v4)
      {
        uint64_t v38 = 0;
        LOBYTE(v39) = 1;
        unint64_t v40 = 0xD000000000000017;
        unint64_t v41 = 0x80000001B6F4B810;
        uint64_t v19 = sub_1B6E32D28();
        if (v20) {
          unint64_t v25 = v19;
        }
        else {
          unint64_t v25 = 0;
        }
        if (v20) {
          unint64_t v26 = v20;
        }
        else {
          unint64_t v26 = 0xE000000000000000;
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
        uint64_t v39 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v39 = 0;
        uint64_t v27 = swift_unknownObjectWeakAssign();
        unint64_t v40 = v25;
        unint64_t v41 = v26;
        sub_1B6649008(v27, (uint64_t)&v34);
        sub_1B69CBCE8((uint64_t)&v34, (uint64_t)v42);
        a2 = v30;
        goto LABEL_17;
      }
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return a3(v42);
}

void sub_1B6B7FB6C(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t))(a2 + 16))(v2, ObjectType, a2);
  sub_1B6B96284(v2, v11);
  uint64_t v6 = MEMORY[0x1BA9B8670](v11);
  sub_1B6B47018((uint64_t)v11);
  if (!v6) {
    goto LABEL_10;
  }
  self;
  int v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7)
  {
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  id v8 = objc_msgSend(v7, sel_model);
  swift_unknownObjectRelease();
  if (!v8) {
    goto LABEL_11;
  }
  self;
  uint64_t v9 = (void *)swift_dynamicCastObjCClass();
  if (!v9)
  {

    goto LABEL_10;
  }
  id v10 = objc_msgSend(v9, sel_presentationModel);

  if (!v10)
  {
LABEL_10:
    id v8 = 0;
    goto LABEL_11;
  }
  self;
  id v8 = (id)swift_dynamicCastObjCClass();
  if (!v8) {

  }
LABEL_11:
  void v3[4] = v8;
}

uint64_t sub_1B6B7FCAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7F77C(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B9279C, (uint64_t (*)(unsigned char *))sub_1B6B46BF8, a2);
}

uint64_t sub_1B6B7FCF0()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E781A0;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B62D2D78(0, &qword_1E9DCF9C0, (uint64_t (*)(uint64_t))type metadata accessor for VFXParametricModelType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  id v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B92350;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B92390;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6730CB4(1701869940, 0xE400000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  uint64_t v6 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  int v7 = (void *)swift_allocObject();
  void v7[4] = sub_1B6B92430;
  void v7[5] = v5;
  _OWORD v7[2] = sub_1B6B9245C;
  void v7[3] = v5;
  v7[6] = v5;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v8 = sub_1B6730D44(0x737569646172, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v6, 1, 0, (uint64_t)v7, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  swift_release();
  *(void *)(v0 + 40) = v8;
  uint64_t v9 = swift_getKeyPath();
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[4] = sub_1B6B92430;
  void v11[5] = v9;
  _DWORD v11[2] = sub_1B6B9245C;
  void v11[3] = v9;
  void v11[6] = v9;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v12 = sub_1B6730D44(0x7569646152706F74, 0xE900000000000073, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v10, 1, 0, (uint64_t)v11, v9, 0, 0,
          0,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 48) = v12;
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[4] = sub_1B6B92430;
  void v15[5] = v13;
  _OWORD v15[2] = sub_1B6B9245C;
  v15[3] = v13;
  void v15[6] = v13;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v16 = sub_1B6730D44(0x6874646977, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v14, 1, 0, (uint64_t)v15, v13, 0, 0,
          0,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 56) = v16;
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = (void *)swift_allocObject();
  void v19[4] = sub_1B6B92430;
  v19[5] = v17;
  _OWORD v19[2] = sub_1B6B9245C;
  uint64_t v19[3] = v17;
  v19[6] = v17;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v20 = sub_1B6730D44(0x746867696568, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v18, 1, 0, (uint64_t)v19, v17, 0, 0,
          0,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 64) = v20;
  uint64_t v21 = swift_getKeyPath();
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = (void *)swift_allocObject();
  v23[4] = sub_1B6B92430;
  v23[5] = v21;
  _OWORD v23[2] = sub_1B6B9245C;
  void v23[3] = v21;
  v23[6] = v21;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v24 = sub_1B6730D44(0x6874676E656CLL, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v22, 1, 0, (uint64_t)v23, v21, 0, 0,
          0,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 72) = v24;
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = (void *)swift_allocObject();
  _OWORD v27[4] = sub_1B6B92430;
  v27[5] = v25;
  v27[2] = sub_1B6B9245C;
  void v27[3] = v25;
  v27[6] = v25;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v28 = sub_1B6730D44(0x527265666D616863, 0xED00007375696461, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v26, 1, 0, (uint64_t)v27, v25, 0, 0,
          0,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 80) = v28;
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = (void *)swift_allocObject();
  v31[4] = sub_1B6B92430;
  v31[5] = v29;
  _OWORD v31[2] = sub_1B6B9245C;
  void v31[3] = v29;
  v31[6] = v29;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v32 = sub_1B6730D44(0x615272656E726F63, 0xEC00000073756964, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v30, 1, 0, (uint64_t)v31, v29, 0, 0,
          0,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 88) = v32;
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = (void *)swift_allocObject();
  v35[4] = sub_1B6B92430;
  v35[5] = v33;
  v35[2] = sub_1B6B9245C;
  v35[3] = v33;
  v35[6] = v33;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v36 = sub_1B6730D44(0x64615272656E6E69, 0xEB00000000737569, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v34, 1, 0, (uint64_t)v35, v33, 0, 0,
          0,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 96) = v36;
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = (void *)swift_allocObject();
  v39[4] = sub_1B6B92430;
  v39[5] = v37;
  v39[2] = sub_1B6B9245C;
  v39[3] = v37;
  v39[6] = v37;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v40 = sub_1B6730D44(0x6964615265706970, 0xEA00000000007375, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v38, 1, 0, (uint64_t)v39, v37, 0, 0,
          0,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 104) = v40;
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = (void *)swift_allocObject();
  v43[4] = sub_1B6B92430;
  v43[5] = v41;
  v43[2] = sub_1B6B9245C;
  v43[3] = v41;
  v43[6] = v41;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v44 = sub_1B6730D44(0x70536C6169646172, 0xEA00000000006E61, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v42, 1, 0, (uint64_t)v43, v41, 0, 0,
          0,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 112) = v44;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E496C0 = v0;
  return result;
}

void sub_1B6B808D4(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v4 = (void *)sub_1B6B7F55C();
    if (v4) {
      goto LABEL_3;
    }
LABEL_5:
    id v6 = 0;
    goto LABEL_6;
  }
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = v4;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_3:
  id v6 = objc_msgSend(v4, sel_parametricType);

LABEL_6:
  *a2 = v6;
}

void sub_1B6B80958(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (objc_msgSend(self, sel_immediateMode)) {
    id v4 = *(id *)(a2 + 32);
  }
  else {
    id v4 = (id)sub_1B6B7F55C();
  }
  id v5 = v4;
  objc_msgSend(v4, sel_setParametricType_, v3);
}

uint64_t sub_1B6B809D8()
{
  uint64_t v1 = v0;
  id v2 = self;
  if (objc_msgSend(v2, sel_immediateMode))
  {
    uint64_t v3 = *(void **)(v0 + 32);
    id v4 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1B6B9279C(v1, (uint64_t)v30);
LABEL_7:
    if (objc_msgSend(v2, sel_immediateMode))
    {
      id v6 = v31;
      id v7 = v31;
      if (v6) {
        goto LABEL_9;
      }
    }
    else
    {
      id v6 = (id)sub_1B6B7F55C();
      if (v6)
      {
LABEL_9:
        id v8 = objc_msgSend(v6, sel_parametricType);

        sub_1B6B46BF8((uint64_t)v30);
        sub_1B6B9279C(v1, (uint64_t)v28);
        if (v8 == (id)6) {
          goto LABEL_10;
        }
LABEL_13:
        if (objc_msgSend(v2, sel_immediateMode))
        {
          id v9 = v29;
          id v10 = v29;
          if (v9) {
            goto LABEL_15;
          }
        }
        else
        {
          id v9 = (id)sub_1B6B7F55C();
          if (v9)
          {
LABEL_15:
            id v11 = objc_msgSend(v9, sel_parametricType);

            sub_1B6B46BF8((uint64_t)v28);
            sub_1B6B9279C(v1, (uint64_t)v26);
            if (v11 == (id)7) {
              goto LABEL_16;
            }
LABEL_22:
            if (objc_msgSend(v2, sel_immediateMode))
            {
              id v14 = v27;
              id v15 = v27;
              if (v14) {
                goto LABEL_24;
              }
            }
            else
            {
              id v14 = (id)sub_1B6B7F55C();
              if (v14)
              {
LABEL_24:
                id v16 = objc_msgSend(v14, sel_parametricType);

                sub_1B6B46BF8((uint64_t)v26);
                sub_1B6B9279C(v1, (uint64_t)v24);
                if (v16 == (id)5) {
                  goto LABEL_17;
                }
LABEL_28:
                if (objc_msgSend(v2, sel_immediateMode))
                {
                  id v17 = v25;
                  id v18 = v25;
                  if (v17) {
                    goto LABEL_30;
                  }
                }
                else
                {
                  id v17 = (id)sub_1B6B7F55C();
                  if (v17)
                  {
LABEL_30:
                    id v19 = objc_msgSend(v17, sel_parametricType);

                    sub_1B6B46BF8((uint64_t)v24);
                    sub_1B6B9279C(v1, (uint64_t)v22);
                    if (v19 == (id)4) {
                      goto LABEL_18;
                    }
LABEL_34:
                    if (objc_msgSend(v2, sel_immediateMode))
                    {
                      uint64_t v12 = (uint64_t)v23;
                      id v20 = v23;
                      if (!v12) {
                        goto LABEL_19;
                      }
                    }
                    else
                    {
                      uint64_t v12 = sub_1B6B7F55C();
                      if (!v12) {
                        goto LABEL_19;
                      }
                    }
                    id v21 = objc_msgSend((id)v12, sel_parametricType);

                    uint64_t v12 = v21 == (id)8;
                    goto LABEL_19;
                  }
                }
                sub_1B6B46BF8((uint64_t)v24);
                sub_1B6B9279C(v1, (uint64_t)v22);
                goto LABEL_34;
              }
            }
            sub_1B6B46BF8((uint64_t)v26);
            sub_1B6B9279C(v1, (uint64_t)v24);
            goto LABEL_28;
          }
        }
        sub_1B6B46BF8((uint64_t)v28);
        sub_1B6B9279C(v1, (uint64_t)v26);
        goto LABEL_22;
      }
    }
    sub_1B6B46BF8((uint64_t)v30);
    sub_1B6B9279C(v1, (uint64_t)v28);
    goto LABEL_13;
  }
  uint64_t v3 = (void *)sub_1B6B7F55C();
  if (!v3) {
    goto LABEL_6;
  }
LABEL_3:
  id v5 = objc_msgSend(v3, sel_parametricType);

  sub_1B6B9279C(v1, (uint64_t)v30);
  if (v5 != (id)1) {
    goto LABEL_7;
  }
  sub_1B6B46BF8((uint64_t)v30);
  sub_1B6B9279C(v1, (uint64_t)v28);
LABEL_10:
  sub_1B6B46BF8((uint64_t)v28);
  sub_1B6B9279C(v1, (uint64_t)v26);
LABEL_16:
  sub_1B6B46BF8((uint64_t)v26);
  sub_1B6B9279C(v1, (uint64_t)v24);
LABEL_17:
  sub_1B6B46BF8((uint64_t)v24);
  sub_1B6B9279C(v1, (uint64_t)v22);
LABEL_18:
  uint64_t v12 = 1;
LABEL_19:
  sub_1B6B46BF8((uint64_t)v22);
  return v12;
}

BOOL sub_1B6B80D10()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v1 = *(void **)(v0 + 32);
    id v2 = v1;
    if (v1)
    {
LABEL_3:
      id v3 = objc_msgSend(v1, sel_parametricType);

      return v3 == (id)5;
    }
  }
  else
  {
    uint64_t v1 = (void *)sub_1B6B7F55C();
    if (v1) {
      goto LABEL_3;
    }
  }
  return 0;
}

void sub_1B6B80D88(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    id v4 = (void *)sub_1B6B7F55C();
    if (v4) {
      goto LABEL_3;
    }
LABEL_5:
    BOOL v7 = 0;
    goto LABEL_6;
  }
  id v4 = *(void **)(a1 + 32);
  id v5 = v4;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_3:
  id v6 = objc_msgSend(v4, sel_parametricType);

  BOOL v7 = v6 == (id)5;
LABEL_6:
  *a2 = v7;
}

uint64_t sub_1B6B80E14()
{
  uint64_t v1 = v0;
  id v2 = self;
  if (objc_msgSend(v2, sel_immediateMode))
  {
    id v3 = *(void **)(v0 + 32);
    id v4 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_9:
    sub_1B6B9279C(v1, (uint64_t)v15);
    goto LABEL_10;
  }
  id v3 = (void *)sub_1B6B7F55C();
  if (!v3) {
    goto LABEL_9;
  }
LABEL_3:
  id v5 = objc_msgSend(v3, sel_parametricType);

  sub_1B6B9279C(v1, (uint64_t)v15);
  if (!v5)
  {
LABEL_10:
    sub_1B6B46BF8((uint64_t)v15);
    sub_1B6B9279C(v1, (uint64_t)v13);
    uint64_t v9 = 1;
    goto LABEL_18;
  }
  if (objc_msgSend(v2, sel_immediateMode))
  {
    id v6 = v16;
    id v7 = v16;
    if (v6) {
      goto LABEL_6;
    }
LABEL_12:
    sub_1B6B46BF8((uint64_t)v15);
    sub_1B6B9279C(v1, (uint64_t)v13);
LABEL_13:
    if (objc_msgSend(v2, sel_immediateMode))
    {
      uint64_t v9 = (uint64_t)v14;
      id v10 = v14;
      if (!v9) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v9 = sub_1B6B7F55C();
      if (!v9) {
        goto LABEL_18;
      }
    }
    id v11 = objc_msgSend((id)v9, sel_parametricType);

    uint64_t v9 = v11 == (id)2;
    goto LABEL_18;
  }
  id v6 = (id)sub_1B6B7F55C();
  if (!v6) {
    goto LABEL_12;
  }
LABEL_6:
  id v8 = objc_msgSend(v6, sel_parametricType);

  sub_1B6B46BF8((uint64_t)v15);
  sub_1B6B9279C(v1, (uint64_t)v13);
  if (v8 != (id)3) {
    goto LABEL_13;
  }
  uint64_t v9 = 1;
LABEL_18:
  sub_1B6B46BF8((uint64_t)v13);
  return v9;
}

uint64_t sub_1B6B80FA8()
{
  uint64_t v1 = v0;
  id v2 = self;
  if (objc_msgSend(v2, sel_immediateMode))
  {
    id v3 = *(void **)(v0 + 32);
    id v4 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_8:
    sub_1B6B9279C(v1, (uint64_t)v35);
    goto LABEL_9;
  }
  id v3 = (void *)sub_1B6B7F55C();
  if (!v3) {
    goto LABEL_8;
  }
LABEL_3:
  id v5 = objc_msgSend(v3, sel_parametricType);

  sub_1B6B9279C(v1, (uint64_t)v35);
  if (!v5)
  {
LABEL_9:
    sub_1B6B46BF8((uint64_t)v35);
    sub_1B6B9279C(v1, (uint64_t)v33);
LABEL_13:
    sub_1B6B46BF8((uint64_t)v33);
    sub_1B6B9279C(v1, (uint64_t)v31);
LABEL_14:
    sub_1B6B46BF8((uint64_t)v31);
    sub_1B6B9279C(v1, (uint64_t)v29);
LABEL_15:
    sub_1B6B46BF8((uint64_t)v29);
    sub_1B6B9279C(v1, (uint64_t)v27);
LABEL_16:
    sub_1B6B46BF8((uint64_t)v27);
    sub_1B6B9279C(v1, (uint64_t)v25);
LABEL_17:
    uint64_t v9 = 1;
    goto LABEL_18;
  }
  if (objc_msgSend(v2, sel_immediateMode))
  {
    id v6 = v36;
    id v7 = v36;
    if (v6)
    {
LABEL_6:
      id v8 = objc_msgSend(v6, sel_parametricType);

      goto LABEL_12;
    }
  }
  else
  {
    id v6 = (id)sub_1B6B7F55C();
    if (v6) {
      goto LABEL_6;
    }
  }
  id v8 = 0;
LABEL_12:
  sub_1B6B46BF8((uint64_t)v35);
  sub_1B6B9279C(v1, (uint64_t)v33);
  if (v8 == (id)6) {
    goto LABEL_13;
  }
  if (objc_msgSend(v2, sel_immediateMode))
  {
    id v11 = v34;
    id v12 = v34;
    if (v11) {
      goto LABEL_21;
    }
LABEL_24:
    sub_1B6B46BF8((uint64_t)v33);
    sub_1B6B9279C(v1, (uint64_t)v31);
    goto LABEL_25;
  }
  id v11 = (id)sub_1B6B7F55C();
  if (!v11) {
    goto LABEL_24;
  }
LABEL_21:
  id v13 = objc_msgSend(v11, sel_parametricType);

  sub_1B6B46BF8((uint64_t)v33);
  sub_1B6B9279C(v1, (uint64_t)v31);
  if (v13 == (id)7) {
    goto LABEL_14;
  }
LABEL_25:
  if (objc_msgSend(v2, sel_immediateMode))
  {
    id v14 = v32;
    id v15 = v32;
    if (v14) {
      goto LABEL_27;
    }
LABEL_30:
    sub_1B6B46BF8((uint64_t)v31);
    sub_1B6B9279C(v1, (uint64_t)v29);
    goto LABEL_31;
  }
  id v14 = (id)sub_1B6B7F55C();
  if (!v14) {
    goto LABEL_30;
  }
LABEL_27:
  id v16 = objc_msgSend(v14, sel_parametricType);

  sub_1B6B46BF8((uint64_t)v31);
  sub_1B6B9279C(v1, (uint64_t)v29);
  if (v16 == (id)3) {
    goto LABEL_15;
  }
LABEL_31:
  if (objc_msgSend(v2, sel_immediateMode))
  {
    id v17 = v30;
    id v18 = v30;
    if (v17) {
      goto LABEL_33;
    }
LABEL_36:
    sub_1B6B46BF8((uint64_t)v29);
    sub_1B6B9279C(v1, (uint64_t)v27);
    goto LABEL_37;
  }
  id v17 = (id)sub_1B6B7F55C();
  if (!v17) {
    goto LABEL_36;
  }
LABEL_33:
  id v19 = objc_msgSend(v17, sel_parametricType);

  sub_1B6B46BF8((uint64_t)v29);
  sub_1B6B9279C(v1, (uint64_t)v27);
  if (v19 == (id)5) {
    goto LABEL_16;
  }
LABEL_37:
  if (objc_msgSend(v2, sel_immediateMode))
  {
    id v20 = v28;
    id v21 = v28;
    if (v20) {
      goto LABEL_39;
    }
LABEL_42:
    sub_1B6B46BF8((uint64_t)v27);
    sub_1B6B9279C(v1, (uint64_t)v25);
    goto LABEL_43;
  }
  id v20 = (id)sub_1B6B7F55C();
  if (!v20) {
    goto LABEL_42;
  }
LABEL_39:
  id v22 = objc_msgSend(v20, sel_parametricType);

  sub_1B6B46BF8((uint64_t)v27);
  sub_1B6B9279C(v1, (uint64_t)v25);
  if (v22 == (id)4) {
    goto LABEL_17;
  }
LABEL_43:
  if (objc_msgSend(v2, sel_immediateMode))
  {
    uint64_t v9 = (uint64_t)v26;
    id v23 = v26;
  }
  else
  {
    uint64_t v9 = sub_1B6B7F55C();
  }
  if (v9)
  {
    id v24 = objc_msgSend((id)v9, sel_parametricType);

    uint64_t v9 = v24 == (id)2;
  }
LABEL_18:
  sub_1B6B46BF8((uint64_t)v25);
  return v9;
}

uint64_t sub_1B6B81350()
{
  uint64_t v1 = self;
  if (objc_msgSend(v1, sel_immediateMode))
  {
    id v2 = *(void **)(v0 + 32);
    id v3 = v2;
    if (v2) {
      goto LABEL_3;
    }
LABEL_8:
    sub_1B6B9279C(v0, (uint64_t)v9);
    goto LABEL_9;
  }
  id v2 = (void *)sub_1B6B7F55C();
  if (!v2) {
    goto LABEL_8;
  }
LABEL_3:
  id v4 = objc_msgSend(v2, sel_parametricType);

  sub_1B6B9279C(v0, (uint64_t)v9);
  if (!v4)
  {
LABEL_9:
    uint64_t v5 = 1;
    goto LABEL_12;
  }
  if (objc_msgSend(v1, sel_immediateMode))
  {
    uint64_t v5 = (uint64_t)v10;
    id v6 = v10;
    if (!v5) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v5 = sub_1B6B7F55C();
  if (v5)
  {
LABEL_11:
    id v7 = objc_msgSend((id)v5, sel_parametricType);

    uint64_t v5 = v7 == (id)3;
  }
LABEL_12:
  sub_1B6B46BF8((uint64_t)v9);
  return v5;
}

BOOL sub_1B6B81450()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v1 = *(void **)(v0 + 32);
    id v2 = v1;
    if (v1)
    {
LABEL_3:
      id v3 = objc_msgSend(v1, sel_parametricType);

      return v3 == 0;
    }
  }
  else
  {
    uint64_t v1 = (void *)sub_1B6B7F55C();
    if (v1) {
      goto LABEL_3;
    }
  }
  return 1;
}

void sub_1B6B814C8(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    id v4 = (void *)sub_1B6B7F55C();
    if (v4) {
      goto LABEL_3;
    }
LABEL_5:
    BOOL v7 = 1;
    goto LABEL_6;
  }
  id v4 = *(void **)(a1 + 32);
  id v5 = v4;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_3:
  id v6 = objc_msgSend(v4, sel_parametricType);

  BOOL v7 = v6 == 0;
LABEL_6:
  *a2 = v7;
}

BOOL sub_1B6B81554()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v1 = *(void **)(v0 + 32);
    id v2 = v1;
    if (v1)
    {
LABEL_3:
      id v3 = objc_msgSend(v1, sel_parametricType);

      return v3 == (id)2;
    }
  }
  else
  {
    uint64_t v1 = (void *)sub_1B6B7F55C();
    if (v1) {
      goto LABEL_3;
    }
  }
  return 0;
}

void sub_1B6B815CC(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    id v4 = (void *)sub_1B6B7F55C();
    if (v4) {
      goto LABEL_3;
    }
LABEL_5:
    BOOL v7 = 0;
    goto LABEL_6;
  }
  id v4 = *(void **)(a1 + 32);
  id v5 = v4;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_3:
  id v6 = objc_msgSend(v4, sel_parametricType);

  BOOL v7 = v6 == (id)2;
LABEL_6:
  *a2 = v7;
}

BOOL sub_1B6B81658()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v1 = *(void **)(v0 + 32);
    id v2 = v1;
    if (v1)
    {
LABEL_3:
      id v3 = objc_msgSend(v1, sel_parametricType);

      return v3 == (id)8;
    }
  }
  else
  {
    uint64_t v1 = (void *)sub_1B6B7F55C();
    if (v1) {
      goto LABEL_3;
    }
  }
  return 0;
}

void sub_1B6B816D0(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    id v4 = (void *)sub_1B6B7F55C();
    if (v4) {
      goto LABEL_3;
    }
LABEL_5:
    BOOL v7 = 0;
    goto LABEL_6;
  }
  id v4 = *(void **)(a1 + 32);
  id v5 = v4;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_3:
  id v6 = objc_msgSend(v4, sel_parametricType);

  BOOL v7 = v6 == (id)8;
LABEL_6:
  *a2 = v7;
}

void sub_1B6B8175C(uint64_t a1@<X0>, SEL *a2@<X3>, _DWORD *a3@<X8>)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    id v6 = (void *)sub_1B6B7F55C();
    if (v6) {
      goto LABEL_3;
    }
LABEL_5:
    int v9 = 0;
    goto LABEL_6;
  }
  id v6 = *(void **)(a1 + 32);
  id v7 = v6;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_3:
  [v6 *a2];
  int v9 = v8;

LABEL_6:
  *a3 = v9;
}

void sub_1B6B817E8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  int v7 = *a1;
  if (objc_msgSend(self, sel_immediateMode)) {
    id v8 = *(id *)(a2 + 32);
  }
  else {
    id v8 = (id)sub_1B6B7F55C();
  }
  id v10 = v8;
  LODWORD(v9) = v7;
  objc_msgSend(v8, *a5, v9);
}

uint64_t sub_1B6B81870()
{
  uint64_t v1 = v0;
  id v2 = self;
  if (objc_msgSend(v2, sel_immediateMode))
  {
    id v3 = *(void **)(v0 + 32);
    id v4 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1B6B9279C(v1, (uint64_t)v20);
LABEL_7:
    if (objc_msgSend(v2, sel_immediateMode))
    {
      id v6 = v21;
      id v7 = v21;
      if (v6) {
        goto LABEL_9;
      }
    }
    else
    {
      id v6 = (id)sub_1B6B7F55C();
      if (v6)
      {
LABEL_9:
        id v8 = objc_msgSend(v6, sel_parametricType);

        sub_1B6B46BF8((uint64_t)v20);
        sub_1B6B9279C(v1, (uint64_t)v18);
        if (v8 == (id)4) {
          goto LABEL_10;
        }
LABEL_13:
        if (objc_msgSend(v2, sel_immediateMode))
        {
          id v10 = v19;
          id v11 = v19;
          if (v10) {
            goto LABEL_15;
          }
        }
        else
        {
          id v10 = (id)sub_1B6B7F55C();
          if (v10)
          {
LABEL_15:
            id v12 = objc_msgSend(v10, sel_parametricType);

            sub_1B6B46BF8((uint64_t)v18);
            sub_1B6B9279C(v1, (uint64_t)v16);
            if (v12 == (id)6)
            {
              uint64_t v9 = 1;
              goto LABEL_24;
            }
LABEL_19:
            if (objc_msgSend(v2, sel_immediateMode))
            {
              uint64_t v9 = (uint64_t)v17;
              id v13 = v17;
              if (!v9) {
                goto LABEL_24;
              }
            }
            else
            {
              uint64_t v9 = sub_1B6B7F55C();
              if (!v9) {
                goto LABEL_24;
              }
            }
            id v14 = objc_msgSend((id)v9, sel_parametricType);

            uint64_t v9 = v14 == (id)8;
            goto LABEL_24;
          }
        }
        sub_1B6B46BF8((uint64_t)v18);
        sub_1B6B9279C(v1, (uint64_t)v16);
        goto LABEL_19;
      }
    }
    sub_1B6B46BF8((uint64_t)v20);
    sub_1B6B9279C(v1, (uint64_t)v18);
    goto LABEL_13;
  }
  id v3 = (void *)sub_1B6B7F55C();
  if (!v3) {
    goto LABEL_6;
  }
LABEL_3:
  id v5 = objc_msgSend(v3, sel_parametricType);

  sub_1B6B9279C(v1, (uint64_t)v20);
  if (v5 != (id)1) {
    goto LABEL_7;
  }
  sub_1B6B46BF8((uint64_t)v20);
  sub_1B6B9279C(v1, (uint64_t)v18);
LABEL_10:
  sub_1B6B46BF8((uint64_t)v18);
  sub_1B6B9279C(v1, (uint64_t)v16);
  uint64_t v9 = 1;
LABEL_24:
  sub_1B6B46BF8((uint64_t)v16);
  return v9;
}

unint64_t sub_1B6B81A94()
{
  return 0xD000000000000010;
}

uint64_t sub_1B6B81AB0(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC620);
}

id sub_1B6B81AD4(SEL *a1)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v3 = (id)v1[4];
    id v4 = v3;
  }
  else
  {
    sub_1B6B96284(v1, v8);
    uint64_t v5 = MEMORY[0x1BA9B8670](v8);
    sub_1B6B47018((uint64_t)v8);
    if (v5)
    {
      self;
      id v6 = (void *)swift_dynamicCastObjCClass();
      if (!v6) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      id v6 = 0;
    }
    id v3 = [v6 *a1];
  }
  return v3;
}

double sub_1B6B81BA0()
{
  return sub_1B6B82144((SEL *)&selRef_velocity);
}

double sub_1B6B81BAC()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v1 = (id)v0[4];
    id v2 = v1;
    if (v1)
    {
LABEL_3:
      objc_msgSend(v1, sel_angularVelocity);
      double v7 = v3;

      return v7;
    }
  }
  else
  {
    sub_1B6B96284(v0, v8);
    uint64_t v5 = MEMORY[0x1BA9B8670](v8);
    sub_1B6B47018((uint64_t)v8);
    if (v5)
    {
      self;
      id v6 = (void *)swift_dynamicCastObjCClass();
      if (!v6) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      id v6 = 0;
    }
    id v1 = objc_msgSend(v6, sel_physicsBody);

    if (v1) {
      goto LABEL_3;
    }
  }
  return 0.0;
}

id sub_1B6B81C94()
{
  return sub_1B6B81CCC();
}

id sub_1B6B81CB0()
{
  return sub_1B6B81CCC();
}

id sub_1B6B81CCC()
{
  sub_1B6B96284(v0, v9);
  uint64_t v1 = MEMORY[0x1BA9B8670](v9);
  sub_1B6B47018((uint64_t)v9);
  if (!v1) {
    goto LABEL_6;
  }
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
LABEL_6:
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_11:
    sub_1B62B32CC((uint64_t)&v11);
    return 0;
  }
  double v3 = (void *)v2;
  id v4 = (void *)sub_1B6E31768();
  id v5 = objc_msgSend(v3, sel_valueForKey_, v4);
  swift_unknownObjectRelease();

  if (v5)
  {
    sub_1B6E32718();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)uint64_t v9 = 0u;
    long long v10 = 0u;
  }
  sub_1B62CA57C((uint64_t)v9, (uint64_t)&v11, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_11;
  }
  sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v6 = v9[0];
  id v7 = objc_msgSend(v9[0], sel_BOOLValue);

  return v7;
}

void sub_1B6B81E48()
{
  sub_1B6B96284(v0, v6);
  uint64_t v1 = MEMORY[0x1BA9B8670](v6);
  sub_1B6B47018((uint64_t)v6);
  if (v1)
  {
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      double v3 = (void *)v2;
      id v4 = (void *)sub_1B6E31D88();
      id v5 = (void *)sub_1B6E31768();
      objc_msgSend(v3, sel_setValue_forKey_, v4, v5);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

double sub_1B6B81F20()
{
  return 0.0;
}

void sub_1B6B81F28(__n128 a1)
{
  __n128 v6 = a1;
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v2 = (id)v1[4];
    id v3 = v2;
    if (!v2) {
      return;
    }
LABEL_9:
    objc_msgSend(v2, sel_applyForce_impulse_, (unint64_t)sub_1B6B81C94() & 1, v6.n128_f64[0]);

    return;
  }
  sub_1B6B96284(v1, v7);
  uint64_t v4 = MEMORY[0x1BA9B8670](v7);
  sub_1B6B47018((uint64_t)v7);
  if (v4)
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v5 = 0;
  }
  id v2 = objc_msgSend(v5, sel_physicsBody, *(_OWORD *)&v6);

  if (v2) {
    goto LABEL_9;
  }
}

void sub_1B6B8201C(__n128 a1)
{
  __n128 v6 = a1;
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v2 = (id)v1[4];
    id v3 = v2;
    if (!v2) {
      return;
    }
LABEL_9:
    objc_msgSend(v2, sel_applyTorque_impulse_, (unint64_t)sub_1B6B81CB0() & 1, v6.n128_f64[0]);

    return;
  }
  sub_1B6B96284(v1, v7);
  uint64_t v4 = MEMORY[0x1BA9B8670](v7);
  sub_1B6B47018((uint64_t)v7);
  if (v4)
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v5 = 0;
  }
  id v2 = objc_msgSend(v5, sel_physicsBody, *(_OWORD *)&v6);

  if (v2) {
    goto LABEL_9;
  }
}

float sub_1B6B82110()
{
  return sub_1B6B76EC4((SEL *)&selRef_damping, (SEL *)&selRef_physicsBody);
}

float sub_1B6B82124()
{
  return sub_1B6B76EC4((SEL *)&selRef_angularDamping, (SEL *)&selRef_physicsBody);
}

double sub_1B6B82138()
{
  return sub_1B6B82144((SEL *)&selRef_velocityFactor);
}

double sub_1B6B82144(SEL *a1)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v3 = (id)v1[4];
    id v4 = v3;
    if (v3)
    {
LABEL_3:
      [v3 *a1];
      double v9 = v5;

      return v9;
    }
  }
  else
  {
    sub_1B6B96284(v1, v10);
    uint64_t v7 = MEMORY[0x1BA9B8670](v10);
    sub_1B6B47018((uint64_t)v10);
    if (v7)
    {
      self;
      id v8 = (void *)swift_dynamicCastObjCClass();
      if (!v8) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      id v8 = 0;
    }
    id v3 = objc_msgSend(v8, sel_physicsBody);

    if (v3) {
      goto LABEL_3;
    }
  }
  return 0.0;
}

double sub_1B6B82234()
{
  return sub_1B6B82144((SEL *)&selRef_angularVelocityFactor);
}

float sub_1B6B82240()
{
  return sub_1B6B76EC4((SEL *)&selRef_mass, (SEL *)&selRef_physicsBody);
}

float sub_1B6B82254()
{
  return sub_1B6B76EC4((SEL *)&selRef_charge, (SEL *)&selRef_physicsBody);
}

float sub_1B6B82268()
{
  return sub_1B6B76EC4((SEL *)&selRef_friction, (SEL *)&selRef_physicsBody);
}

float sub_1B6B8227C()
{
  return sub_1B6B76EC4((SEL *)&selRef_restitution, (SEL *)&selRef_physicsBody);
}

float sub_1B6B82290()
{
  return sub_1B6B76EC4((SEL *)&selRef_rollingFriction, (SEL *)&selRef_physicsBody);
}

uint64_t sub_1B6B822A4@<X0>(void *a1@<X0>, void (*a2)(unsigned char *, uint64_t)@<X1>, uint64_t (*a3)(unsigned char *)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v45 = a4;
  sub_1B6B94F18(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v11);
  id v13 = (char *)&v29 - v12;
  uint64_t v34 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v34 = 0;
  uint64_t v14 = swift_unknownObjectWeakAssign();
  uint64_t v35 = 0x3E6C6C756E3CLL;
  uint64_t v36 = 0xE600000000000000;
  sub_1B6649008(v14, (uint64_t)v41);
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  uint64_t v42 = 0;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  sub_1B62C14BC(a1, v15);
  if (sub_1B62B8F14(2037, v15, v16))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v4)
    {
      sub_1B62C14BC(&v33, v36);
      sub_1B6648FB4();
      sub_1B6E33518();
LABEL_9:
      sub_1B69CBCE8((uint64_t)&v37, (uint64_t)v41);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v33);
LABEL_17:
      a2(v41, v45);
    }
  }
  else
  {
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_1B62C14BC(a1, v17);
    if (sub_1B62B8F14(2029, v17, v18))
    {
      sub_1B62C14BC(a1, a1[3]);
      sub_1B6E33A28();
      if (!v4)
      {
        sub_1B62C14BC(&v33, v36);
        uint64_t v21 = sub_1B6E334C8();
        uint64_t v23 = v22;
        uint64_t v30 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v30 = 0;
        uint64_t v24 = swift_unknownObjectWeakAssign();
        uint64_t v31 = v21;
        uint64_t v32 = v23;
        sub_1B6649008(v24, (uint64_t)&v37);
        goto LABEL_9;
      }
    }
    else
    {
      id v29 = a2;
      sub_1B62C14BC(a1, a1[3]);
      sub_1B62B1B2C();
      sub_1B6E33A48();
      if (!v4)
      {
        uint64_t v37 = 0;
        LOBYTE(v38) = 1;
        unint64_t v39 = 0xD000000000000017;
        unint64_t v40 = 0x80000001B6F4B810;
        uint64_t v19 = sub_1B6E32D28();
        if (v20) {
          unint64_t v25 = v19;
        }
        else {
          unint64_t v25 = 0;
        }
        if (v20) {
          unint64_t v26 = v20;
        }
        else {
          unint64_t v26 = 0xE000000000000000;
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
        uint64_t v38 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v38 = 0;
        uint64_t v27 = swift_unknownObjectWeakAssign();
        unint64_t v39 = v25;
        unint64_t v40 = v26;
        sub_1B6649008(v27, (uint64_t)&v33);
        sub_1B69CBCE8((uint64_t)&v33, (uint64_t)v41);
        a2 = v29;
        goto LABEL_17;
      }
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return a3(v41);
}

void sub_1B6B82698(uint64_t a1, uint64_t a2, SEL *a3)
{
  double v5 = v3;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t))(a2 + 16))(v3, ObjectType, a2);
  sub_1B6B96284(v3, v12);
  uint64_t v8 = MEMORY[0x1BA9B8670](v12);
  sub_1B6B47018((uint64_t)v12);
  if (!v8) {
    goto LABEL_5;
  }
  self;
  uint64_t v9 = (void *)swift_dynamicCastObjCClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
LABEL_5:
    id v11 = 0;
    goto LABEL_6;
  }
  id v10 = objc_msgSend(v9, sel_presentationNode);
  swift_unknownObjectRelease();
  id v11 = [v10 *a3];

LABEL_6:
  void v5[4] = v11;
}

uint64_t sub_1B6B82790@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B822A4(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B961A4, (uint64_t (*)(unsigned char *))sub_1B6B46CA8, a2);
}

void sub_1B6B827D0(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B827F0@<X0>(void *a1@<X8>)
{
  swift_unknownObjectWeakInit();
  v3[1] = 0;
  swift_unknownObjectWeakAssign();
  void v3[2] = 0x3E6C6C756E3CLL;
  v3[3] = 0xE600000000000000;
  uint64_t result = sub_1B6649008((uint64_t)v3, (uint64_t)a1);
  a1[4] = 0;
  a1[5] = 0;
  a1[6] = 0;
  return result;
}

uint64_t sub_1B6B82860()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6EAAD60;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFD0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
  id v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B9285C;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B9289C;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B672A65C(0x6563726F66, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFE0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
  __n128 v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B928FC;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B9293C;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B672AA8C(0x657571726F74, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B929DC;
  uint64_t v9[5] = v8;
  id v9[2] = sub_1B6B92A08;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B672AEBC(0x4973416563726F66, 0xEE0065736C75706DLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[4] = sub_1B6B929DC;
  void v12[5] = v11;
  _DWORD v12[2] = sub_1B6B92A08;
  void v12[3] = v11;
  void v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = sub_1B672AEBC(0x7341657571726F74, 0xEF65736C75706D49, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v12, v11, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 56) = v13;
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[4] = sub_1B6B9285C;
  void v15[5] = v14;
  _OWORD v15[2] = sub_1B6B9289C;
  v15[3] = v14;
  void v15[6] = v14;
  swift_allocObject();
  swift_retain_n();
  uint64_t v16 = sub_1B672A65C(0x797469636F6C6576, 0xE800000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v15, v14, 0, 0,
          256,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 64) = v16;
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = (void *)swift_allocObject();
  void v18[4] = sub_1B6B928FC;
  v18[5] = v17;
  _OWORD v18[2] = sub_1B6B9293C;
  uint64_t v18[3] = v17;
  v18[6] = v17;
  swift_allocObject();
  swift_retain_n();
  uint64_t v19 = sub_1B672AA8C(0x5672616C75676E61, 0xEF797469636F6C65, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v18, v17, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 72) = v19;
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = (void *)swift_allocObject();
  _OWORD v21[4] = sub_1B6B9285C;
  void v21[5] = v20;
  void v21[2] = sub_1B6B9289C;
  void v21[3] = v20;
  v21[6] = v20;
  swift_allocObject();
  swift_retain_n();
  uint64_t v22 = sub_1B672A65C(0x797469636F6C6576, 0xEE00726F74636146, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v21, v20, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 80) = v22;
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = (void *)swift_allocObject();
  v24[4] = sub_1B6B9285C;
  uint64_t v24[5] = v23;
  void v24[2] = sub_1B6B9289C;
  void v24[3] = v23;
  v24[6] = v23;
  swift_allocObject();
  swift_retain_n();
  uint64_t v25 = sub_1B672A65C(0xD000000000000015, 0x80000001B6F4B750, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v24, v23, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 88) = v25;
  uint64_t v26 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v27 = (void *)swift_allocObject();
  _OWORD v27[4] = sub_1B6B92D98;
  v27[5] = v26;
  v27[2] = sub_1B6B92DC4;
  void v27[3] = v26;
  v27[6] = v26;
  swift_allocObject();
  swift_retain_n();
  uint64_t v28 = sub_1B672AF38(0x676E69706D6164, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v27, v26, 0, 0,
          256,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 96) = v28;
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = (void *)swift_allocObject();
  v30[4] = sub_1B6B92D98;
  v30[5] = v29;
  long long v30[2] = sub_1B6B92DC4;
  v30[3] = v29;
  v30[6] = v29;
  swift_allocObject();
  swift_retain_n();
  uint64_t v31 = sub_1B672AF38(0x4472616C75676E61, 0xEE00676E69706D61, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v30, v29, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 104) = v31;
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = (void *)swift_allocObject();
  v33[4] = sub_1B6B92D98;
  v33[5] = v32;
  v33[2] = sub_1B6B92DC4;
  v33[3] = v32;
  v33[6] = v32;
  swift_allocObject();
  swift_retain_n();
  uint64_t v34 = sub_1B672AF38(1936941421, 0xE400000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v33, v32, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 112) = v34;
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = (void *)swift_allocObject();
  id v36[4] = sub_1B6B92D98;
  v36[5] = v35;
  v36[2] = sub_1B6B92DC4;
  v36[3] = v35;
  v36[6] = v35;
  swift_allocObject();
  swift_retain_n();
  uint64_t v37 = sub_1B672AF38(0x656772616863, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v36, v35, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 120) = v37;
  uint64_t v38 = swift_getKeyPath();
  unint64_t v39 = (void *)swift_allocObject();
  v39[4] = sub_1B6B92D98;
  v39[5] = v38;
  v39[2] = sub_1B6B92DC4;
  v39[3] = v38;
  v39[6] = v38;
  swift_allocObject();
  swift_retain_n();
  uint64_t v40 = sub_1B672AF38(0x6E6F697463697266, 0xE800000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v39, v38, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 128) = v40;
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = (void *)swift_allocObject();
  v42[4] = sub_1B6B92D98;
  v42[5] = v41;
  void v42[2] = sub_1B6B92DC4;
  v42[3] = v41;
  v42[6] = v41;
  swift_allocObject();
  swift_retain_n();
  uint64_t v43 = sub_1B672AF38(0x7475746974736572, 0xEB000000006E6F69, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v42, v41, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 136) = v43;
  uint64_t v44 = swift_getKeyPath();
  uint64_t v45 = (void *)swift_allocObject();
  v45[4] = sub_1B6B92D98;
  v45[5] = v44;
  _OWORD v45[2] = sub_1B6B92DC4;
  v45[3] = v44;
  v45[6] = v44;
  swift_allocObject();
  swift_retain_n();
  uint64_t v46 = sub_1B672AF38(0x46676E696C6C6F72, 0xEF6E6F6974636972, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v45, v44, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 144) = v46;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E496C8 = v0;
  return result;
}

void sub_1B6B836F4(uint64_t a1@<X3>, uint64_t (*a2)(uint64_t)@<X4>, SEL *a3@<X5>, _DWORD *a4@<X8>)
{
  __n128 v6 = (void *)a2(a1);
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 *a3];
    int v9 = v8;
  }
  else
  {
    int v9 = 0;
  }
  *a4 = v9;
}

uint64_t sub_1B6B8375C()
{
  return 0x2073636973796850;
}

id sub_1B6B8377C()
{
  return sub_1B6B83790((SEL *)&selRef_fieldType, (SEL *)&selRef_forceField);
}

id sub_1B6B83790(SEL *a1, SEL *a2)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v2, v11);
    uint64_t v8 = MEMORY[0x1BA9B8670](v11);
    sub_1B6B47018((uint64_t)v11);
    if (v8)
    {
      self;
      int v9 = (void *)swift_dynamicCastObjCClass();
      if (!v9) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      int v9 = 0;
    }
    id v5 = [v9 *a2];

    if (v5) {
      goto LABEL_3;
    }
    return 0;
  }
  id v5 = (id)v2[4];
  id v6 = v5;
  if (!v5) {
    return 0;
  }
LABEL_3:
  id v7 = [v5 *a1];

  return v7;
}

float sub_1B6B83880()
{
  return sub_1B6B76EC4((SEL *)&selRef_strength, (SEL *)&selRef_forceField);
}

float sub_1B6B83894()
{
  return sub_1B6B76EC4((SEL *)&selRef_falloffExponent, (SEL *)&selRef_forceField);
}

id sub_1B6B838A8()
{
  return sub_1B6B76DC0((SEL *)&selRef_isActive, (SEL *)&selRef_forceField);
}

uint64_t sub_1B6B838BC()
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v0, v7);
    uint64_t v4 = MEMORY[0x1BA9B8670](v7);
    sub_1B6B47018((uint64_t)v7);
    if (v4)
    {
      self;
      id v5 = (void *)swift_dynamicCastObjCClass();
      if (!v5) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      id v5 = 0;
    }
    id v1 = objc_msgSend(v5, sel_forceField);

    if (v1) {
      goto LABEL_3;
    }
    return 1;
  }
  id v1 = (id)v0[4];
  id v2 = v1;
  if (!v1) {
    return 1;
  }
LABEL_3:
  id v3 = objc_msgSend(v1, sel_shape);

  return (uint64_t)v3;
}

double sub_1B6B839A4()
{
  return sub_1B6B839B8((SEL *)&selRef_halfExtent, (SEL *)&selRef_forceField);
}

double sub_1B6B839B8(SEL *a1, SEL *a2)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v5 = (id)v2[4];
    id v6 = v5;
    if (v5)
    {
LABEL_3:
      [v5 *a1];
      double v11 = v7;

      return v11;
    }
  }
  else
  {
    sub_1B6B96284(v2, v12);
    uint64_t v9 = MEMORY[0x1BA9B8670](v12);
    sub_1B6B47018((uint64_t)v12);
    if (v9)
    {
      self;
      uint64_t v10 = (void *)swift_dynamicCastObjCClass();
      if (!v10) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
    id v5 = [v10 *a2];

    if (v5) {
      goto LABEL_3;
    }
  }
  return 0.0;
}

id sub_1B6B83AA8()
{
  return sub_1B6B83790((SEL *)&selRef_scope, (SEL *)&selRef_forceField);
}

id sub_1B6B83ABC()
{
  return sub_1B6B83790((SEL *)&selRef_cullMode, (SEL *)&selRef_forceField);
}

double sub_1B6B83AD0()
{
  return sub_1B6B839B8((SEL *)&selRef_offset, (SEL *)&selRef_forceField);
}

id sub_1B6B83AE4()
{
  return sub_1B6B83790((SEL *)&selRef_categoryBitMask, (SEL *)&selRef_forceField);
}

float sub_1B6B83AF8()
{
  return sub_1B6B76EC4((SEL *)&selRef_smoothness, (SEL *)&selRef_forceField);
}

float sub_1B6B83B0C()
{
  return sub_1B6B76EC4((SEL *)&selRef_speed, (SEL *)&selRef_forceField);
}

uint64_t sub_1B6B83B20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B7F77C(a1, (void (*)(unsigned char *, uint64_t))sub_1B6B961DC, (uint64_t (*)(unsigned char *))sub_1B6B46D58, a2);
}

void sub_1B6B83B60(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B83B80()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78230;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v2 = swift_getKeyPath();
  sub_1B6B95068(0, (unint64_t *)&unk_1EB97DFB0, MEMORY[0x1E4FBC1C8], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v3 = (void *)swift_allocObject();
  void v3[4] = sub_1B6B931D0;
  v3[5] = v2;
  void v3[2] = sub_1B6B93210;
  v3[3] = v2;
  v3[6] = v2;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v5 = sub_1B6728DBC(0x707954646C656966, 0xEE007865646E4965, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v3, v2, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  sub_1B62D2D78(0, &qword_1E9DCFA70, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  id v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B93240;
  v6[5] = KeyPath;
  uint64_t v6[2] = sub_1B6B93280;
  long long v6[3] = KeyPath;
  v6[6] = KeyPath;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v7 = sub_1B6728E38(0x707954646C656966, 0xE900000000000065, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, KeyPath, 0, 0,
         0,
         v4,
         v5);
  swift_release();
  swift_release();
  *(void *)(v0 + 32) = v7;
  uint64_t v8 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B932EC;
  uint64_t v9[5] = v8;
  id v9[2] = sub_1B6B93318;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B6728EC8(0x6874676E65727473, 0xE800000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v4,
          0);
  swift_release();
  *(void *)(v0 + 40) = v10;
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[4] = sub_1B6B932EC;
  void v12[5] = v11;
  _DWORD v12[2] = sub_1B6B93318;
  void v12[3] = v11;
  void v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = v4;
  uint64_t v14 = sub_1B6728EC8(0x4566666F6C6C6166, 0xEF746E656E6F7078, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v12, v11, 0, 0,
          0,
          v4,
          0);
  swift_release();
  *(void *)(v0 + 48) = v14;
  uint64_t v15 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF60, MEMORY[0x1E4FBB390], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[4] = sub_1B6B93424;
  void v16[5] = v15;
  _DWORD v16[2] = sub_1B6B93450;
  v16[3] = v15;
  v16[6] = v15;
  swift_allocObject();
  swift_retain_n();
  uint64_t v17 = sub_1B6728F44(0x657669746361, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v16, v15, 0, 0,
          0,
          v4,
          0);
  swift_release();
  *(void *)(v0 + 56) = v17;
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = (void *)swift_allocObject();
  _OWORD v20[4] = sub_1B6B931D0;
  void v20[5] = v19;
  v20[2] = sub_1B6B93210;
  void v20[3] = v19;
  v20[6] = v19;
  swift_allocObject();
  swift_retain_n();
  uint64_t v21 = sub_1B6728DBC(0x646E496570616873, 0xEA00000000007865, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v20, v19, 0, 0,
          0,
          v13,
          0);
  swift_release();
  sub_1B62D2D78(0, (unint64_t *)&unk_1E9DD65D0, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldShape, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v22 = (void *)swift_allocObject();
  _OWORD v22[4] = sub_1B6B934D0;
  v22[5] = v18;
  v22[2] = sub_1B6B93510;
  void v22[3] = v18;
  v22[6] = v18;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v23 = sub_1B6728FC0(0x6570616873, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v22, v18, 0, 0,
          0,
          v13,
          v21);
  swift_release();
  swift_release();
  *(void *)(v0 + 64) = v23;
  uint64_t v24 = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFD0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
  uint64_t v25 = (void *)swift_allocObject();
  v25[4] = sub_1B6B93568;
  v25[5] = v24;
  void v25[2] = sub_1B6B935A8;
  void v25[3] = v24;
  v25[6] = v24;
  swift_allocObject();
  swift_retain_n();
  uint64_t v26 = v13;
  uint64_t v27 = sub_1B6729050(0x65747845666C6168, 0xEA0000000000746ELL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v25, v24, 0, 0,
          0,
          v13,
          0);
  swift_release();
  *(void *)(v0 + 72) = v27;
  uint64_t v28 = (void *)v0;
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = (void *)swift_allocObject();
  v31[4] = sub_1B6B931D0;
  v31[5] = v30;
  _OWORD v31[2] = sub_1B6B93210;
  void v31[3] = v30;
  v31[6] = v30;
  swift_allocObject();
  swift_retain_n();
  uint64_t v32 = sub_1B6728DBC(0x646E4965706F6373, 0xEA00000000007865, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v31, v30, 0, 0,
          0,
          v26,
          0);
  swift_release();
  sub_1B62D2D78(0, &qword_1E9DCFA20, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldScope, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v33 = (void *)swift_allocObject();
  v33[4] = sub_1B6B93644;
  v33[5] = v29;
  v33[2] = sub_1B6B93684;
  v33[3] = v29;
  v33[6] = v29;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v34 = sub_1B6729480(0x65706F6373, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v33, v29, 0, 0,
          0,
          v26,
          v32);
  swift_release();
  swift_release();
  *(void *)(v0 + 80) = v34;
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = (void *)swift_allocObject();
  v37[4] = sub_1B6B931D0;
  void v37[5] = v36;
  v37[2] = sub_1B6B93210;
  v37[3] = v36;
  v37[6] = v36;
  swift_allocObject();
  swift_retain_n();
  uint64_t v38 = sub_1B6728DBC(0x65646F4D6C6C7563, 0xED00007865646E49, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v37, v36, 0, 0,
          0,
          v26,
          0);
  swift_release();
  sub_1B62D2D78(0, (unint64_t *)&unk_1E9DD65E0, (uint64_t (*)(uint64_t))type metadata accessor for VFXForceFieldCullMode, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  unint64_t v39 = (void *)swift_allocObject();
  v39[4] = sub_1B6B93788;
  v39[5] = v35;
  v39[2] = sub_1B6B937C8;
  v39[3] = v35;
  v39[6] = v35;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v40 = sub_1B6729510(0x65646F4D6C6C7563, 0xE800000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v39, v35, 0, 0,
          0,
          v26,
          v38);
  swift_release();
  swift_release();
  v28[11] = v40;
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = (void *)swift_allocObject();
  v42[4] = sub_1B6B93568;
  v42[5] = v41;
  void v42[2] = sub_1B6B935A8;
  v42[3] = v41;
  v42[6] = v41;
  swift_allocObject();
  swift_retain_n();
  uint64_t v43 = sub_1B6729050(0x74657366666FLL, 0xE600000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v42, v41, 0, 0,
          0,
          v26,
          0);
  swift_release();
  v28[12] = v43;
  uint64_t v44 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1E9DCE768, MEMORY[0x1E4FBC538], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v45 = (void *)swift_allocObject();
  v45[4] = sub_1B6B93988;
  v45[5] = v44;
  _OWORD v45[2] = sub_1B6B939C8;
  v45[3] = v44;
  v45[6] = v44;
  swift_allocObject();
  swift_retain_n();
  uint64_t v46 = sub_1B67295A0(0x79726F6765746163, 0xEF6B73614D746942, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v45, v44, 0, 0,
          0,
          v26,
          0);
  swift_release();
  v28[13] = v46;
  uint64_t v47 = swift_getKeyPath();
  uint64_t v48 = (void *)swift_allocObject();
  v48[4] = sub_1B6B932EC;
  v48[5] = v47;
  void v48[2] = sub_1B6B93318;
  v48[3] = v47;
  v48[6] = v47;
  swift_allocObject();
  swift_retain_n();
  uint64_t v49 = sub_1B6728EC8(0x656E68746F6F6D73, 0xEA00000000007373, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v48, v47, 0, 0,
          0,
          v26,
          0);
  swift_release();
  v28[14] = v49;
  uint64_t v50 = swift_getKeyPath();
  uint64_t v51 = (void *)swift_allocObject();
  _OWORD v51[4] = sub_1B6B932EC;
  v51[5] = v50;
  _OWORD v51[2] = sub_1B6B93318;
  v51[3] = v50;
  v51[6] = v50;
  swift_allocObject();
  swift_retain_n();
  uint64_t v52 = sub_1B6728EC8(0x6465657073, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v51, v50, 0, 0,
          0,
          v26,
          0);
  swift_release();
  v28[15] = v52;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E496D0 = (uint64_t)v28;
  return result;
}

id sub_1B6B84BE0()
{
  return sub_1B6B84CB8((SEL *)&selRef_fieldType);
}

void sub_1B6B84BEC(SEL *a1@<X3>, SEL *a2@<X4>, unsigned __int8 *a3@<X8>)
{
  id v5 = sub_1B6B81AD4(a1);
  if (v5)
  {
    id v6 = v5;
    unsigned __int8 v7 = [v5 *a2];
  }
  else
  {
    unsigned __int8 v7 = 0;
  }
  *a3 = v7;
}

void sub_1B6B84C48(uint64_t *a1@<X8>)
{
  id v2 = sub_1B6B81AD4((SEL *)&selRef_forceField);
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = (uint64_t)objc_msgSend(v2, sel_shape);
  }
  else
  {
    uint64_t v4 = 1;
  }
  *a1 = v4;
}

id sub_1B6B84CAC()
{
  return sub_1B6B84CB8((SEL *)&selRef_scope);
}

id sub_1B6B84CB8(SEL *a1)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v1, v9);
    uint64_t v6 = MEMORY[0x1BA9B8670](v9);
    sub_1B6B47018((uint64_t)v9);
    if (v6)
    {
      self;
      unsigned __int8 v7 = (void *)swift_dynamicCastObjCClass();
      if (!v7) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      unsigned __int8 v7 = 0;
    }
    id v3 = objc_msgSend(v7, sel_forceField);

    if (v3) {
      goto LABEL_3;
    }
    return 0;
  }
  id v3 = (id)v1[4];
  id v4 = v3;
  if (!v3) {
    return 0;
  }
LABEL_3:
  id v5 = [v3 *a1];

  return v5;
}

void sub_1B6B84DA8(SEL *a1@<X3>, void *a2@<X8>)
{
  id v4 = sub_1B6B81AD4((SEL *)&selRef_forceField);
  if (v4)
  {
    id v5 = v4;
    id v6 = [v4 *a1];
  }
  else
  {
    id v6 = 0;
  }
  *a2 = v6;
}

id sub_1B6B84E0C()
{
  return sub_1B6B84CB8((SEL *)&selRef_cullMode);
}

void sub_1B6B84E18(SEL *a1@<X3>, SEL *a2@<X4>, void *a3@<X8>)
{
  id v5 = sub_1B6B81AD4(a1);
  if (v5)
  {
    id v6 = v5;
    id v7 = [v5 *a2];
  }
  else
  {
    id v7 = 0;
  }
  *a3 = v7;
}

void sub_1B6B84E74(SEL *a1@<X3>, SEL *a2@<X4>, _DWORD *a3@<X8>)
{
  id v5 = sub_1B6B81AD4(a1);
  if (v5)
  {
    id v6 = v5;
    [v5 *a2];
    int v8 = v7;
  }
  else
  {
    int v8 = 0;
  }
  *a3 = v8;
}

uint64_t sub_1B6B84ED8()
{
  return 0x6946206563726F46;
}

void *VFXMaterial.bridgedComponentNames.getter()
{
  return &unk_1F0FAB6D8;
}

id sub_1B6B84F3C()
{
  id v1 = objc_msgSend(v0, sel_presentationMaterial);

  return v1;
}

id sub_1B6B84F74()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC3VFX30ShadableShaderModifierObserver_shadable];
  swift_unknownObjectRetain();
  id v2 = (void *)sub_1B6E31768();
  objc_msgSend(v1, sel_removeObserver_forKeyPath_, v0, v2);
  swift_unknownObjectRelease();

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ShadableShaderModifierObserver();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1B6B85248()
{
  sub_1B6B96284((void *)(v0 + 8), v14);
  uint64_t v1 = MEMORY[0x1BA9B8670](v14);
  sub_1B6B47018((uint64_t)v14);
  if (v1)
  {
    self;
    id v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      id v3 = objc_msgSend(v2, sel_presentationMaterial);
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
    swift_unknownObjectRelease();
  }
  id v3 = 0;
LABEL_6:

  *(void *)(v0 + 40) = v3;
  sub_1B6B96284((void *)(v0 + 8), v14);
  uint64_t v4 = MEMORY[0x1BA9B8670](v14);
  sub_1B6B47018((uint64_t)v14);
  if (v4)
  {
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      uint64_t v6 = v5;
      int v7 = (objc_class *)type metadata accessor for ShadableShaderModifierObserver();
      int v8 = (char *)objc_allocWithZone(v7);
      *(void *)&v8[OBJC_IVAR____TtC3VFX30ShadableShaderModifierObserver_propertyCache] = MEMORY[0x1E4FBC860];
      *(void *)&v8[OBJC_IVAR____TtC3VFX30ShadableShaderModifierObserver_shadable] = v6;
      v13.receiver = v8;
      v13.super_class = v7;
      swift_unknownObjectRetain();
      uint64_t v9 = (char *)objc_msgSendSuper2(&v13, sel_init);
      uint64_t v10 = *(void **)&v9[OBJC_IVAR____TtC3VFX30ShadableShaderModifierObserver_shadable];
      uint64_t v11 = v9;
      uint64_t v12 = (void *)sub_1B6E31768();
      objc_msgSend(v10, sel_addObserver_forKeyPath_options_context_, v11, v12, 0, 0, v13.receiver, v13.super_class);
      swift_unknownObjectRelease();

      *(void *)uint64_t v0 = v11;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void *sub_1B6B85408()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v1 = *(void **)(v0 + 40);
    id v2 = v1;
  }
  else
  {
    sub_1B6B96284((void *)(v0 + 8), v5);
    uint64_t v3 = MEMORY[0x1BA9B8670](v5);
    sub_1B6B47018((uint64_t)v5);
    if (v3)
    {
      self;
      uint64_t v1 = (void *)swift_dynamicCastObjCClass();
      if (!v1) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

double sub_1B6B854AC()
{
  return sub_1B6B854C4((SEL *)&selRef_diffuse);
}

double sub_1B6B854B8()
{
  return sub_1B6B854C4((SEL *)&selRef_multiply);
}

double sub_1B6B854C4(SEL *a1)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v3 = *(void **)(v1 + 40);
    if (v3)
    {
      id v4 = v3;
LABEL_6:
      uint64_t v6 = v4;
      id v7 = [v4 *a1];

      objc_msgSend(v7, sel_linearExtendedSRGBColor);
      double v10 = v8;

      return v10;
    }
  }
  else
  {
    sub_1B6B96284((void *)(v1 + 8), v11);
    uint64_t v5 = MEMORY[0x1BA9B8670](v11);
    sub_1B6B47018((uint64_t)v11);
    if (v5)
    {
      self;
      id v4 = (id)swift_dynamicCastObjCClass();
      if (v4) {
        goto LABEL_6;
      }
      swift_unknownObjectRelease();
    }
  }
  return 0.0;
}

void sub_1B6B855A8(SEL *a1, __n128 a2)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v4 = *(void **)(v2 + 40);
    if (!v4) {
      return;
    }
    id v5 = v4;
LABEL_6:
    id v7 = v5;
    id v8 = objc_msgSend(v5, *a1, *(_OWORD *)&a2);

    objc_msgSend(v8, sel_setLinearExtendedSRGBColor_, v10);
    return;
  }
  sub_1B6B96284((void *)(v2 + 8), v11);
  uint64_t v6 = MEMORY[0x1BA9B8670](v11);
  sub_1B6B47018((uint64_t)v11);
  if (!v6) {
    return;
  }
  self;
  id v5 = (id)swift_dynamicCastObjCClass();
  if (v5) {
    goto LABEL_6;
  }
  swift_unknownObjectRelease();
}

double sub_1B6B85688()
{
  return sub_1B6B854C4((SEL *)&selRef_emission);
}

float sub_1B6B85694()
{
  return sub_1B6B859A4((SEL *)&selRef_metalness);
}

float sub_1B6B856A0()
{
  return sub_1B6B859A4((SEL *)&selRef_roughness);
}

void sub_1B6B856AC(SEL *a1, float a2)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v5 = *(void **)(v2 + 40);
    if (!v5) {
      return;
    }
    id v6 = v5;
LABEL_6:
    id v8 = v6;
    id v9 = [v6 *a1];

    id v10 = objc_allocWithZone(NSNumber);
    *(float *)&double v11 = a2;
    id v12 = objc_msgSend(v10, sel_initWithFloat_, v11);
    objc_msgSend(v9, sel_setContents_, v12);

    return;
  }
  sub_1B6B96284((void *)(v2 + 8), v13);
  uint64_t v7 = MEMORY[0x1BA9B8670](v13);
  sub_1B6B47018((uint64_t)v13);
  if (!v7) {
    return;
  }
  self;
  id v6 = (id)swift_dynamicCastObjCClass();
  if (v6) {
    goto LABEL_6;
  }
  swift_unknownObjectRelease();
}

float sub_1B6B857B8()
{
  return sub_1B6B857C4((SEL *)&selRef_normal);
}

float sub_1B6B857C4(SEL *a1)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284((void *)(v1 + 8), v11);
    uint64_t v5 = MEMORY[0x1BA9B8670](v11);
    sub_1B6B47018((uint64_t)v11);
    if (v5)
    {
      self;
      id v4 = (id)swift_dynamicCastObjCClass();
      if (v4) {
        goto LABEL_6;
      }
      swift_unknownObjectRelease();
    }
    return 0.0;
  }
  uint64_t v3 = *(void **)(v1 + 40);
  if (!v3) {
    return 0.0;
  }
  id v4 = v3;
LABEL_6:
  id v6 = v4;
  id v7 = [v4 *a1];

  objc_msgSend(v7, sel_intensity);
  float v9 = v8;

  return v9;
}

void sub_1B6B858B0(SEL *a1, float a2)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v5 = *(void **)(v2 + 40);
    if (!v5) {
      return;
    }
    id v6 = v5;
LABEL_6:
    float v8 = v6;
    id v9 = [v6 *a1];

    *(float *)&double v10 = a2;
    objc_msgSend(v9, sel_setIntensity_, v10);

    return;
  }
  sub_1B6B96284((void *)(v2 + 8), v11);
  uint64_t v7 = MEMORY[0x1BA9B8670](v11);
  sub_1B6B47018((uint64_t)v11);
  if (!v7) {
    return;
  }
  self;
  id v6 = (id)swift_dynamicCastObjCClass();
  if (v6) {
    goto LABEL_6;
  }
  swift_unknownObjectRelease();
}

float sub_1B6B85998()
{
  return sub_1B6B859A4((SEL *)&selRef_transparent);
}

float sub_1B6B859A4(SEL *a1)
{
  uint64_t v2 = sub_1B6B85408();
  if (!v2)
  {
    long long v12 = 0u;
    long long v13 = 0u;
LABEL_9:
    sub_1B62B32CC((uint64_t)&v12);
    return 0.0;
  }
  uint64_t v3 = v2;
  id v4 = [v2 *a1];

  id v5 = objc_msgSend(v4, sel_contents);
  if (v5)
  {
    sub_1B6E32718();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)double v10 = 0u;
    long long v11 = 0u;
  }
  sub_1B62CA57C((uint64_t)v10, (uint64_t)&v12, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
  if (!*((void *)&v13 + 1)) {
    goto LABEL_9;
  }
  sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0.0;
  }
  id v6 = v10[0];
  objc_msgSend(v10[0], sel_floatValue);
  float v8 = v7;

  return v8;
}

float sub_1B6B85AE0()
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284((void *)(v0 + 8), v8);
    uint64_t v3 = MEMORY[0x1BA9B8670](v8);
    sub_1B6B47018((uint64_t)v8);
    if (v3)
    {
      self;
      id v2 = (id)swift_dynamicCastObjCClass();
      if (v2) {
        goto LABEL_6;
      }
      swift_unknownObjectRelease();
    }
    return 0.0;
  }
  uint64_t v1 = *(void **)(v0 + 40);
  if (!v1) {
    return 0.0;
  }
  id v2 = v1;
LABEL_6:
  id v4 = v2;
  objc_msgSend(v2, sel_alphaCutoff);
  float v6 = v5;

  return v6;
}

float sub_1B6B85BA4()
{
  return sub_1B6B857C4((SEL *)&selRef_diffuse);
}

BOOL sub_1B6B85BB0()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v1 = *(void **)(v0 + 40);
    if (v1)
    {
      id v2 = v1;
LABEL_6:
      id v4 = v2;
      id v5 = objc_msgSend(v2, sel_shadingModel);

      return v5 == 0;
    }
  }
  else
  {
    sub_1B6B96284((void *)(v0 + 8), v7);
    uint64_t v3 = MEMORY[0x1BA9B8670](v7);
    sub_1B6B47018((uint64_t)v7);
    if (v3)
    {
      self;
      id v2 = (id)swift_dynamicCastObjCClass();
      if (v2) {
        goto LABEL_6;
      }
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

BOOL sub_1B6B85C70()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    uint64_t v1 = *(void **)(v0 + 40);
    if (v1)
    {
      id v2 = v1;
LABEL_6:
      id v4 = v2;
      id v5 = objc_msgSend(v2, sel_shadingModel);

      return v5 != (id)2;
    }
  }
  else
  {
    sub_1B6B96284((void *)(v0 + 8), v7);
    uint64_t v3 = MEMORY[0x1BA9B8670](v7);
    sub_1B6B47018((uint64_t)v7);
    if (v3)
    {
      self;
      id v2 = (id)swift_dynamicCastObjCClass();
      if (v2) {
        goto LABEL_6;
      }
      swift_unknownObjectRelease();
    }
  }
  return 1;
}

uint64_t sub_1B6B85D30@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B6B94F18(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  double v10 = &v26[-v9];
  uint64_t v38 = 0;
  uint64_t v31 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v31 = 0;
  uint64_t v11 = swift_unknownObjectWeakAssign();
  uint64_t v32 = 0x3E6C6C756E3CLL;
  uint64_t v33 = 0xE600000000000000;
  sub_1B6649008(v11, (uint64_t)v39);
  memset(&v39[32], 0, 24);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_1B62C14BC(a1, v12);
  if (sub_1B62B8F14(2037, v12, v13))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v2)
    {
      sub_1B62C14BC(&v30, v33);
      sub_1B6648FB4();
      sub_1B6E33518();
LABEL_9:
      sub_1B69CBCE8((uint64_t)&v34, (uint64_t)v39);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v30);
LABEL_17:
      sub_1B6B96214((uint64_t)&v38, a2);
    }
  }
  else
  {
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_1B62C14BC(a1, v14);
    if (sub_1B62B8F14(2029, v14, v15))
    {
      sub_1B62C14BC(a1, a1[3]);
      sub_1B6E33A28();
      if (!v2)
      {
        sub_1B62C14BC(&v30, v33);
        uint64_t v18 = sub_1B6E334C8();
        uint64_t v20 = v19;
        uint64_t v27 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v27 = 0;
        uint64_t v21 = swift_unknownObjectWeakAssign();
        uint64_t v28 = v18;
        uint64_t v29 = v20;
        sub_1B6649008(v21, (uint64_t)&v34);
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v40 = a2;
      sub_1B62C14BC(a1, a1[3]);
      sub_1B62B1B2C();
      sub_1B6E33A48();
      if (!v2)
      {
        uint64_t v34 = 0;
        LOBYTE(v35) = 1;
        unint64_t v36 = 0xD000000000000017;
        unint64_t v37 = 0x80000001B6F4B810;
        uint64_t v16 = sub_1B6E32D28();
        a2 = v40;
        if (v17) {
          unint64_t v22 = v16;
        }
        else {
          unint64_t v22 = 0;
        }
        if (v17) {
          unint64_t v23 = v17;
        }
        else {
          unint64_t v23 = 0xE000000000000000;
        }
        (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
        uint64_t v35 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v35 = 0;
        uint64_t v24 = swift_unknownObjectWeakAssign();
        unint64_t v36 = v22;
        unint64_t v37 = v23;
        sub_1B6649008(v24, (uint64_t)&v30);
        sub_1B69CBCE8((uint64_t)&v30, (uint64_t)v39);
        goto LABEL_17;
      }
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B6B45DA8((uint64_t)&v38);
}

void sub_1B6B86120()
{
  sub_1B6B96284((void *)(v0 + 8), v14);
  uint64_t v1 = MEMORY[0x1BA9B8670](v14);
  sub_1B6B47018((uint64_t)v14);
  if (v1)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      id v3 = objc_msgSend(v2, sel_presentationMaterial);
      swift_unknownObjectRelease();
      id v4 = v3;
      id v5 = objc_msgSend(v4, sel_materialRef);
      if (v5)
      {
        id v6 = v5;
        sub_1B64AF754((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13);
      }
      else
      {
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1B6B861E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B6B85D30(a1, a2);
}

uint64_t sub_1B6B86200(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6649174();
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

void sub_1B6B862AC(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(v2 + 8, ObjectType, a2);

  sub_1B6B85248();
}

uint64_t sub_1B6B86314@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = (uint64_t)(a1 + 1);
  swift_unknownObjectWeakInit();
  v4[1] = 0;
  swift_unknownObjectWeakAssign();
  v4[2] = 0x3E6C6C756E3CLL;
  v4[3] = 0xE600000000000000;
  uint64_t result = sub_1B6649008((uint64_t)v4, v2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  return result;
}

uint64_t sub_1B6B8638C()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E781E0;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFE0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
  uint64_t v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B9416C;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B941AC;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6722554(0x63206F6465626C61, 0xEC000000726F6C6FLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 6, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  id v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B9422C;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B94258;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B6722984(0xD000000000000010, 0x80000001B6F4B7B0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B9416C;
  uint64_t v9[5] = v8;
  id v9[2] = sub_1B6B941AC;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B6722554(0x6E6F697373696D65, 0xE800000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 6, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[4] = sub_1B6B9416C;
  void v12[5] = v11;
  _DWORD v12[2] = sub_1B6B941AC;
  void v12[3] = v11;
  void v12[6] = v11;
  swift_allocObject();
  swift_retain_n();
  uint64_t v13 = sub_1B6722554(0x796C7069746C756DLL, 0xE800000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 6, 0, (uint64_t)v12, v11, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 56) = v13;
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = (void *)swift_allocObject();
  void v16[4] = sub_1B6B9422C;
  void v16[5] = v14;
  _DWORD v16[2] = sub_1B6B94258;
  v16[3] = v14;
  v16[6] = v14;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v17 = sub_1B6722984(0x73656E6C6174656DLL, 0xE900000000000073, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v15, 1, 0, (uint64_t)v16, v14, 0, 0,
          0,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 64) = v17;
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = (void *)swift_allocObject();
  _OWORD v20[4] = sub_1B6B9422C;
  void v20[5] = v18;
  v20[2] = sub_1B6B94258;
  void v20[3] = v18;
  v20[6] = v18;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v21 = sub_1B6722984(0x73656E6867756F72, 0xE900000000000073, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v19, 1, 0, (uint64_t)v20, v18, 0, 0,
          0,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 72) = v21;
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = (void *)swift_allocObject();
  v24[4] = sub_1B6B9422C;
  uint64_t v24[5] = v22;
  void v24[2] = sub_1B6B94258;
  void v24[3] = v22;
  v24[6] = v22;
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v25 = sub_1B6722984(0xD000000000000010, 0x80000001B6F4B7D0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v23, 1, 0, (uint64_t)v24, v22, 0, 0,
          256,
          v3,
          0);
  swift_release();
  swift_release();
  *(void *)(v0 + 80) = v25;
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = (void *)swift_allocObject();
  _OWORD v27[4] = sub_1B6B9422C;
  v27[5] = v26;
  v27[2] = sub_1B6B94258;
  void v27[3] = v26;
  v27[6] = v26;
  swift_allocObject();
  swift_retain_n();
  uint64_t v28 = sub_1B6722984(0xD000000000000016, 0x80000001B6F4B7F0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v27, v26, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 88) = v28;
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = (void *)swift_allocObject();
  v30[4] = sub_1B6B9422C;
  v30[5] = v29;
  long long v30[2] = sub_1B6B94258;
  v30[3] = v29;
  v30[6] = v29;
  swift_allocObject();
  swift_retain_n();
  uint64_t v31 = sub_1B6722984(0x726170736E617274, 0xEB00000000746E65, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v30, v29, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 96) = v31;
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = (void *)swift_allocObject();
  v33[4] = sub_1B6B9422C;
  v33[5] = v32;
  v33[2] = sub_1B6B94258;
  v33[3] = v32;
  v33[6] = v32;
  swift_allocObject();
  swift_retain_n();
  uint64_t v34 = sub_1B6722984(0x7475436168706C61, 0xEB0000000066666FLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v33, v32, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 104) = v34;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E496D8 = v0;
  return result;
}

void sub_1B6B86DD0(SEL *a1@<X3>, _OWORD *a2@<X8>)
{
  uint64_t v4 = sub_1B6B85408();
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 *a1];

    objc_msgSend(v6, sel_linearExtendedSRGBColor);
    long long v9 = v7;

    long long v8 = v9;
  }
  else
  {
    long long v8 = 0uLL;
  }
  *a2 = v8;
}

void sub_1B6B86E54(SEL *a1@<X3>, _DWORD *a2@<X8>)
{
  uint64_t v4 = sub_1B6B85408();
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 *a1];

    objc_msgSend(v6, sel_intensity);
    int v8 = v7;
  }
  else
  {
    int v8 = 0;
  }
  *a2 = v8;
}

void sub_1B6B86ED4(_DWORD *a1@<X8>)
{
  uint64_t v2 = sub_1B6B85408();
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_alphaCutoff);
    int v5 = v4;
  }
  else
  {
    int v5 = 0;
  }
  *a1 = v5;
}

void *sub_1B6B86F2C()
{
  uint64_t v1 = sub_1B62A6F14(MEMORY[0x1E4FBC860]);
  sub_1B6B96284((void *)(v0 + 8), v38);
  uint64_t v2 = MEMORY[0x1BA9B8670](v38);
  sub_1B6B47018((uint64_t)v38);
  if (v2)
  {
    self;
    uint64_t v3 = (void *)swift_dynamicCastObjCClass();
    if (v3)
    {
      id v4 = objc_msgSend(v3, sel_shaderModifiersArguments);
      swift_unknownObjectRelease();
      if (v4)
      {
        sub_1B63989B8(0, (unint64_t *)&unk_1E9DD65F0);
        sub_1B6E314C8();

        uint64_t v5 = swift_bridgeObjectRetain();
        id v6 = sub_1B69FEFD0(v5);
        swift_bridgeObjectRelease();
        *(void *)&v38[0] = v6;
        sub_1B6B721DC((uint64_t *)v38);
        uint64_t v7 = *(void *)&v38[0];
        if ((*(void *)&v38[0] & 0x8000000000000000) != 0 || (*(void *)&v38[0] & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v8 = sub_1B6E32C18();
          swift_release();
          if (v8) {
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(*(void *)&v38[0] + 16);
          if (v8)
          {
LABEL_7:
            uint64_t v9 = 0;
            uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
            __int16 v11 = 256;
            uint64_t v37 = v8;
            while (1)
            {
              id v12 = (v7 & 0xC000000000000001) != 0
                  ? (id)MEMORY[0x1BA9B4580](v9, v7)
                  : *(id *)(v7 + 8 * v9 + 32);
              uint64_t v13 = v12;
              id v14 = objc_msgSend(v12, sel_type);
              uint64_t v15 = sub_1B6E31798();
              uint64_t v17 = v16;

              BOOL v18 = v15 == 0x74616F6C66 && v17 == 0xE500000000000000;
              if (v18 || (sub_1B6E334B8() & 1) != 0) {
                break;
              }
              BOOL v20 = v15 == 0x3274616F6C66 && v17 == 0xE600000000000000;
              if (v20 || (sub_1B6E334B8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
                uint64_t v22 = &qword_1EB980E90;
                goto LABEL_23;
              }
              if (v15 == 0x3374616F6C66 && v17 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
                uint64_t v22 = (unint64_t *)&qword_1EB980EB0;
                goto LABEL_23;
              }
              if (v15 == 0x3474616F6C66 && v17 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
                uint64_t v22 = (unint64_t *)&qword_1EB980EF0;
LABEL_23:
                sub_1B6B94F18(0, v22, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], v21);
LABEL_24:
                uint64_t v19 = v23;
LABEL_25:
                id v24 = objc_msgSend(v13, sel_name);
                uint64_t v25 = sub_1B6E31798();
                uint64_t v27 = v26;

                memset(v38, 0, sizeof(v38));
                uint64_t v28 = sub_1B62B2E34(v19, (uint64_t)v38, v25, v27, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, v11, (uint64_t)&type metadata for MaterialController, v19, (uint64_t)&off_1F0F76D70);
                swift_bridgeObjectRelease();
                sub_1B62B32CC((uint64_t)v38);
                uint64_t v30 = *(void *)(v28 + 16);
                uint64_t v29 = *(void *)(v28 + 24);
                swift_retain_n();
                swift_bridgeObjectRetain();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *(void *)&v38[0] = v1;
                uint64_t v32 = sub_1B6BA0F04(v28, v30, v29, isUniquelyReferenced_nonNull_native);
                uint64_t v1 = *(void **)&v38[0];
                swift_bridgeObjectRelease();
                if (v32)
                {

                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                }
                else
                {
                  swift_bridgeObjectRetain();
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v10 = sub_1B6335858(0, v10[2] + 1, 1, v10);
                  }
                  unint64_t v34 = v10[2];
                  unint64_t v33 = v10[3];
                  if (v34 >= v33 >> 1) {
                    uint64_t v10 = sub_1B6335858(v33 > 1, v34 + 1, 1, v10);
                  }
                  id v10[2] = v34 + 1;
                  uint64_t v35 = &v10[2 * v34];
                  v35[4] = v30;
                  v35[5] = v29;

                  swift_release();
                  swift_bridgeObjectRelease();
                }
                swift_release();
                __int16 v11 = 0;
                goto LABEL_33;
              }
              if (v15 == 0x34783474616F6C66 && v17 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                type metadata accessor for simd_float4x4(0);
                goto LABEL_24;
              }

              swift_bridgeObjectRelease();
LABEL_33:
              if (v37 == ++v9) {
                goto LABEL_50;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v19 = MEMORY[0x1E4FBB470];
            goto LABEL_25;
          }
        }
LABEL_50:
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return v1;
}

uint64_t sub_1B6B8753C()
{
  uint64_t v1 = (char *)*v0;
  if (!*v0) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = OBJC_IVAR____TtC3VFX30ShadableShaderModifierObserver_propertyCache;
  unint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC3VFX30ShadableShaderModifierObserver_propertyCache];
  if (v3 >> 62)
  {
    id v12 = v1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (v13 <= 0) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v1;
    if (v4 <= 0)
    {
LABEL_4:
      if (qword_1E9DCC638 != -1) {
        swift_once();
      }
      uint64_t v6 = qword_1E9E496D8;
      uint64_t v7 = sub_1B6B86F2C();
      uint64_t v9 = sub_1B68C75F8((uint64_t)v7, v8, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B6712824);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1B6641860((unint64_t)v9);
      *(void *)&v1[v2] = v6;
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v10 = *(void *)&v1[v2];
  swift_bridgeObjectRetain();

  return v10;
}

uint64_t sub_1B6B87694(uint64_t a1)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    unint64_t v3 = *(void **)(v1 + 40);
    if (v3)
    {
      id v4 = v3;
LABEL_6:
      uint64_t v6 = v4;
      sub_1B62CAAD8(a1, (uint64_t)v8);
      sub_1B6C213EC(v8);

      return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
    }
  }
  else
  {
    sub_1B6B96284((void *)(v1 + 8), v8);
    uint64_t v5 = MEMORY[0x1BA9B8670](v8);
    sub_1B6B47018((uint64_t)v8);
    if (v5)
    {
      self;
      id v4 = (id)swift_dynamicCastObjCClass();
      if (v4) {
        goto LABEL_6;
      }
      swift_unknownObjectRelease();
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
  return swift_bridgeObjectRelease();
}

_OWORD *sub_1B6B8778C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1B6B85408();
  if (result)
  {
    unint64_t v3 = result;
    sub_1B6C20CBC((uint64_t)v4);

    return sub_1B62B57A8(v4, (_OWORD *)a1);
  }
  else
  {
    *(void *)(a1 + 24) = MEMORY[0x1E4FBB470];
    *(_DWORD *)a1 = 0;
  }
  return result;
}

uint64_t sub_1B6B8780C(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC638);
}

void *VFXModel.bridgedComponentNames.getter()
{
  return &unk_1F0FAFC28;
}

uint64_t sub_1B6B87878()
{
  id v1 = objc_msgSend(v0, sel_name);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B6E31798();

  return v3;
}

id sub_1B6B878E0()
{
  id v1 = objc_msgSend(v0, sel_presentationModel);

  return v1;
}

void sub_1B6B87918()
{
  sub_1B6B96284((void *)(v0 + 8), v16);
  uint64_t v1 = MEMORY[0x1BA9B8670](v16);
  sub_1B6B47018((uint64_t)v16);
  if (v1)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      id v3 = objc_msgSend(v2, sel_presentationNode);
      swift_unknownObjectRelease();
      id v4 = objc_msgSend(v3, sel_model);

      goto LABEL_6;
    }
    swift_unknownObjectRelease();
  }
  id v4 = 0;
LABEL_6:

  *(void *)(v0 + 40) = v4;
  sub_1B6B96284((void *)(v0 + 8), v16);
  uint64_t v5 = MEMORY[0x1BA9B8670](v16);
  sub_1B6B47018((uint64_t)v16);
  if (v5)
  {
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    if (!v6) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(v6, sel_model);

  if (v7)
  {
    uint64_t v8 = (objc_class *)type metadata accessor for ShadableShaderModifierObserver();
    uint64_t v9 = (char *)objc_allocWithZone(v8);
    *(void *)&v9[OBJC_IVAR____TtC3VFX30ShadableShaderModifierObserver_propertyCache] = MEMORY[0x1E4FBC860];
    *(void *)&v9[OBJC_IVAR____TtC3VFX30ShadableShaderModifierObserver_shadable] = v7;
    v15.receiver = v9;
    v15.super_class = v8;
    id v10 = v7;
    __int16 v11 = (char *)objc_msgSendSuper2(&v15, sel_init);
    id v12 = *(void **)&v11[OBJC_IVAR____TtC3VFX30ShadableShaderModifierObserver_shadable];
    uint64_t v13 = v11;
    id v14 = (void *)sub_1B6E31768();
    objc_msgSend(v12, sel_addObserver_forKeyPath_options_context_, v13, v14, 0, 0, v15.receiver, v15.super_class);

    *(void *)uint64_t v0 = v13;
  }
}

id sub_1B6B87B18()
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v1 = *(id *)(v0 + 40);
    id v2 = v1;
  }
  else
  {
    sub_1B6B96284((void *)(v0 + 8), v6);
    uint64_t v3 = MEMORY[0x1BA9B8670](v6);
    sub_1B6B47018((uint64_t)v6);
    if (v3)
    {
      self;
      id v4 = (void *)swift_dynamicCastObjCClass();
      if (!v4) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      id v4 = 0;
    }
    id v1 = objc_msgSend(v4, sel_model);
  }
  return v1;
}

uint64_t sub_1B6B87BDC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1B6B94F18(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  id v10 = (char *)&v26 - v9;
  uint64_t v38 = 0;
  uint64_t v31 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v31 = 0;
  uint64_t v11 = swift_unknownObjectWeakAssign();
  uint64_t v32 = 0x3E6C6C756E3CLL;
  uint64_t v33 = 0xE600000000000000;
  sub_1B6649008(v11, (uint64_t)v39);
  v39[4] = 0;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_1B62C14BC(a1, v12);
  if (sub_1B62B8F14(2037, v12, v13))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v2)
    {
      sub_1B62C14BC(&v30, v33);
      sub_1B6648FB4();
      sub_1B6E33518();
LABEL_9:
      sub_1B69CBCE8((uint64_t)&v34, (uint64_t)v39);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v30);
LABEL_17:
      sub_1B6B9624C((uint64_t)&v38, a2);
    }
  }
  else
  {
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_1B62C14BC(a1, v14);
    if (sub_1B62B8F14(2029, v14, v15))
    {
      sub_1B62C14BC(a1, a1[3]);
      sub_1B6E33A28();
      if (!v2)
      {
        sub_1B62C14BC(&v30, v33);
        uint64_t v18 = sub_1B6E334C8();
        uint64_t v20 = v19;
        uint64_t v27 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v27 = 0;
        uint64_t v21 = swift_unknownObjectWeakAssign();
        uint64_t v28 = v18;
        uint64_t v29 = v20;
        sub_1B6649008(v21, (uint64_t)&v34);
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v40 = a2;
      sub_1B62C14BC(a1, a1[3]);
      sub_1B62B1B2C();
      sub_1B6E33A48();
      if (!v2)
      {
        uint64_t v34 = 0;
        LOBYTE(v35) = 1;
        unint64_t v36 = 0xD000000000000017;
        unint64_t v37 = 0x80000001B6F4B810;
        uint64_t v16 = sub_1B6E32D28();
        a2 = v40;
        if (v17) {
          unint64_t v22 = v16;
        }
        else {
          unint64_t v22 = 0;
        }
        if (v17) {
          unint64_t v23 = v17;
        }
        else {
          unint64_t v23 = 0xE000000000000000;
        }
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        uint64_t v35 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v35 = 0;
        uint64_t v24 = swift_unknownObjectWeakAssign();
        unint64_t v36 = v22;
        unint64_t v37 = v23;
        sub_1B6649008(v24, (uint64_t)&v30);
        sub_1B69CBCE8((uint64_t)&v30, (uint64_t)v39);
        goto LABEL_17;
      }
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B6B45E58((uint64_t)&v38);
}

uint64_t sub_1B6B87FC8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B6B87BDC(a1, a2);
}

void sub_1B6B87FE0(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(v2 + 8, ObjectType, a2);

  sub_1B6B87918();
}

uint64_t sub_1B6B88044@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = (uint64_t)(a1 + 1);
  swift_unknownObjectWeakInit();
  v4[1] = 0;
  swift_unknownObjectWeakAssign();
  _OWORD v4[2] = 0x3E6C6C756E3CLL;
  v4[3] = 0xE600000000000000;
  uint64_t result = sub_1B6649008((uint64_t)v4, v2);
  a1[5] = 0;
  return result;
}

void sub_1B6B880B8()
{
  qword_1E9E496E0 = MEMORY[0x1E4FBC860];
}

void *sub_1B6B880CC()
{
  id v1 = sub_1B62A6F14(MEMORY[0x1E4FBC860]);
  sub_1B6B96284((void *)(v0 + 8), v39);
  uint64_t v2 = MEMORY[0x1BA9B8670](v39);
  sub_1B6B47018((uint64_t)v39);
  if (v2)
  {
    self;
    uint64_t v3 = (void *)swift_dynamicCastObjCClass();
    if (!v3) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = objc_msgSend(v3, sel_model);

  if (v4)
  {
    id v5 = objc_msgSend(v4, sel_shaderModifiersArguments);

    if (v5)
    {
      sub_1B63989B8(0, (unint64_t *)&unk_1E9DD65F0);
      sub_1B6E314C8();

      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v7 = sub_1B69FEFD0(v6);
      swift_bridgeObjectRelease();
      *(void *)&v39[0] = v7;
      sub_1B6B721DC((uint64_t *)v39);
      uint64_t v8 = *(void *)&v39[0];
      if ((*(void *)&v39[0] & 0x8000000000000000) != 0 || (*(void *)&v39[0] & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_1B6E32C18();
        swift_release();
        if (v9) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v9 = *(void *)(*(void *)&v39[0] + 16);
        if (v9)
        {
LABEL_10:
          uint64_t v10 = 0;
          uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
          __int16 v12 = 256;
          uint64_t v38 = v9;
          while (1)
          {
            id v13 = (v8 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x1BA9B4580](v10, v8)
                : *(id *)(v8 + 8 * v10 + 32);
            uint64_t v14 = v13;
            id v15 = objc_msgSend(v13, sel_type);
            uint64_t v16 = sub_1B6E31798();
            uint64_t v18 = v17;

            BOOL v19 = v16 == 0x74616F6C66 && v18 == 0xE500000000000000;
            if (v19 || (sub_1B6E334B8() & 1) != 0) {
              break;
            }
            BOOL v21 = v16 == 0x3274616F6C66 && v18 == 0xE600000000000000;
            if (v21 || (sub_1B6E334B8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              unint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC280];
              unint64_t v23 = &qword_1EB980E90;
              goto LABEL_26;
            }
            if (v16 == 0x3374616F6C66 && v18 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              unint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
              unint64_t v23 = (unint64_t *)&qword_1EB980EB0;
              goto LABEL_26;
            }
            if (v16 == 0x3474616F6C66 && v18 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              unint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
              unint64_t v23 = (unint64_t *)&qword_1EB980EF0;
LABEL_26:
              sub_1B6B94F18(0, v23, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], v22);
LABEL_27:
              uint64_t v20 = v24;
LABEL_28:
              id v25 = objc_msgSend(v14, sel_name);
              uint64_t v26 = sub_1B6E31798();
              uint64_t v28 = v27;

              memset(v39, 0, sizeof(v39));
              uint64_t v29 = sub_1B62B2E34(v20, (uint64_t)v39, v26, v28, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, v12, (uint64_t)&type metadata for ModelController, v20, (uint64_t)&off_1F0F69070);
              swift_bridgeObjectRelease();
              sub_1B62B32CC((uint64_t)v39);
              uint64_t v31 = *(void *)(v29 + 16);
              uint64_t v30 = *(void *)(v29 + 24);
              swift_retain_n();
              swift_bridgeObjectRetain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&v39[0] = v1;
              uint64_t v33 = sub_1B6BA0F04(v29, v31, v30, isUniquelyReferenced_nonNull_native);
              id v1 = *(void **)&v39[0];
              swift_bridgeObjectRelease();
              if (v33)
              {

                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
              }
              else
              {
                swift_bridgeObjectRetain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v11 = sub_1B6335858(0, v11[2] + 1, 1, v11);
                }
                unint64_t v35 = v11[2];
                unint64_t v34 = v11[3];
                if (v35 >= v34 >> 1) {
                  uint64_t v11 = sub_1B6335858(v34 > 1, v35 + 1, 1, v11);
                }
                _DWORD v11[2] = v35 + 1;
                unint64_t v36 = &v11[2 * v35];
                id v36[4] = v31;
                v36[5] = v30;

                swift_release();
                swift_bridgeObjectRelease();
              }
              swift_release();
              __int16 v12 = 0;
              goto LABEL_36;
            }
            if (v16 == 0x34783474616F6C66 && v18 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              type metadata accessor for simd_float4x4(0);
              goto LABEL_27;
            }

            swift_bridgeObjectRelease();
LABEL_36:
            if (v38 == ++v10) {
              goto LABEL_53;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v20 = MEMORY[0x1E4FBB470];
          goto LABEL_28;
        }
      }
LABEL_53:
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return v1;
}

uint64_t sub_1B6B88708()
{
  id v1 = (char *)*v0;
  if (!*v0) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = OBJC_IVAR____TtC3VFX30ShadableShaderModifierObserver_propertyCache;
  unint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC3VFX30ShadableShaderModifierObserver_propertyCache];
  if (v3 >> 62)
  {
    __int16 v12 = v1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
    if (v13 <= 0) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v5 = v1;
    if (v4 <= 0)
    {
LABEL_4:
      if (qword_1E9DCC640 != -1) {
        swift_once();
      }
      uint64_t v6 = qword_1E9E496E0;
      uint64_t v7 = sub_1B6B880CC();
      uint64_t v9 = sub_1B68C75F8((uint64_t)v7, v8, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B6712824);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1B6641860((unint64_t)v9);
      *(void *)&v1[v2] = v6;
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v10 = *(void *)&v1[v2];
  swift_bridgeObjectRetain();

  return v10;
}

void sub_1B6B88860(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (objc_msgSend(self, sel_immediateMode))
  {
    id v7 = *(id *)(v3 + 40);
    id v8 = v7;
    if (!v7) {
      goto LABEL_17;
    }
  }
  else
  {
    sub_1B6B96284((void *)(v3 + 8), v89);
    uint64_t v9 = MEMORY[0x1BA9B8670](v89);
    sub_1B6B47018((uint64_t)v89);
    if (v9)
    {
      self;
      uint64_t v10 = (void *)swift_dynamicCastObjCClass();
      if (!v10) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
    id v7 = objc_msgSend(v10, sel_model);

    if (!v7) {
      goto LABEL_17;
    }
  }
  id v11 = objc_msgSend(v7, sel_shaderModifiersArguments);

  if (!v11) {
    goto LABEL_17;
  }
  sub_1B63989B8(0, (unint64_t *)&unk_1E9DD65F0);
  uint64_t v12 = sub_1B6E314C8();

  if (!*(void *)(v12 + 16))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1B62B2CE0(a1, a2);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  id v15 = *(id *)(*(void *)(v12 + 56) + 8 * v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v16 = sub_1B6B87B18();
  uint64_t v17 = MEMORY[0x1E4FBC840];
  if (v16)
  {
    uint64_t v18 = (void *)sub_1B6E31768();
    id v19 = objc_msgSend(v16, sel_valueForKey_, v18);

    if (v19)
    {
      sub_1B6E32718();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v87 = 0u;
      long long v88 = 0u;
    }
    sub_1B62CA57C((uint64_t)&v87, (uint64_t)v89, (unint64_t *)&qword_1EB980F60, v17 + 8);
  }
  else
  {
    memset(v89, 0, 32);
  }
  id v20 = objc_msgSend(v15, sel_type);
  uint64_t v21 = sub_1B6E31798();
  uint64_t v23 = v22;

  if (v21 == 0x74616F6C66 && v23 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v25 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      id v26 = objc_msgSend(v15, sel_type);
      uint64_t v27 = sub_1B6E31798();
      uint64_t v29 = v28;

      if (v27 == 0x3274616F6C66 && v29 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
      char v32 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if (v32)
      {
LABEL_37:
        sub_1B62B31E8((uint64_t)v89, (uint64_t)&v87);
        if (*((void *)&v88 + 1))
        {
          sub_1B63989B8(0, &qword_1E9DD4DA8);
          if (swift_dynamicCast())
          {
            objc_msgSend(v86, sel_VFXFloat2Value);
            uint64_t v34 = v33;

LABEL_42:
            sub_1B6B94F18(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
            a3[3] = v35;

            *a3 = v34;
            goto LABEL_70;
          }
        }
        else
        {
          sub_1B62B32CC((uint64_t)&v87);
        }
        uint64_t v34 = 0;
        goto LABEL_42;
      }
      id v36 = objc_msgSend(v15, sel_type);
      uint64_t v37 = sub_1B6E31798();
      uint64_t v39 = v38;

      if (v37 == 0x3374616F6C66 && v39 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      char v40 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if (v40)
      {
LABEL_47:
        sub_1B62B31E8((uint64_t)v89, (uint64_t)&v87);
        if (*((void *)&v88 + 1))
        {
          sub_1B63989B8(0, &qword_1E9DD4DA8);
          if (swift_dynamicCast())
          {
            objc_msgSend(v86, sel_VFXFloat3Value);
            long long v82 = v41;

            int v42 = 0;
            uint64_t v44 = *((void *)&v82 + 1);
            uint64_t v43 = v82;
LABEL_52:
            uint64_t v45 = &qword_1EB980EB0;
            uint64_t v46 = MEMORY[0x1E4FBB470];
            uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2A8];
LABEL_63:
            sub_1B6B94F18(0, (unint64_t *)v45, (uint64_t (*)(void))sub_1B6645830, v46, v47);
            a3[3] = v54;
            uint64_t v55 = swift_allocObject();
            *a3 = v55;

            if (v42) {
              uint64_t v56 = 0;
            }
            else {
              uint64_t v56 = v43;
            }
            if (v42) {
              uint64_t v57 = 0;
            }
            else {
              uint64_t v57 = v44;
            }
            *(void *)(v55 + 16) = v56;
            *(void *)(v55 + 24) = v57;
            goto LABEL_70;
          }
        }
        else
        {
          sub_1B62B32CC((uint64_t)&v87);
        }
        uint64_t v43 = 0;
        uint64_t v44 = 0;
        int v42 = 1;
        goto LABEL_52;
      }
      id v48 = objc_msgSend(v15, sel_type);
      uint64_t v49 = sub_1B6E31798();
      uint64_t v51 = v50;

      if (v49 == 0x3474616F6C66 && v51 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
      char v52 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if (v52)
      {
LABEL_57:
        sub_1B62B31E8((uint64_t)v89, (uint64_t)&v87);
        if (*((void *)&v88 + 1))
        {
          sub_1B63989B8(0, &qword_1E9DD4DA8);
          if (swift_dynamicCast())
          {
            objc_msgSend(v86, sel_VFXFloat4Value);
            long long v83 = v53;

            int v42 = 0;
            uint64_t v44 = *((void *)&v83 + 1);
            uint64_t v43 = v83;
LABEL_62:
            uint64_t v45 = &qword_1EB980EF0;
            uint64_t v46 = MEMORY[0x1E4FBB470];
            uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBC2F8];
            goto LABEL_63;
          }
        }
        else
        {
          sub_1B62B32CC((uint64_t)&v87);
        }
        uint64_t v43 = 0;
        uint64_t v44 = 0;
        int v42 = 1;
        goto LABEL_62;
      }
      id v58 = objc_msgSend(v15, sel_type);
      uint64_t v59 = sub_1B6E31798();
      uint64_t v61 = v60;

      if (v59 == 0x34783474616F6C66 && v61 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_75;
      }
      char v62 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if (v62)
      {
LABEL_75:
        sub_1B62B31E8((uint64_t)v89, (uint64_t)&v87);
        if (*((void *)&v88 + 1))
        {
          sub_1B63989B8(0, &qword_1E9DD4DA8);
          if (swift_dynamicCast())
          {
            objc_msgSend(v86, sel_VFXMatrix4Value);
            long long v80 = v64;
            long long v84 = v63;
            long long v78 = v65;
            long long v79 = v66;

            char v67 = 0;
            uint64_t v68 = v84;
            uint64_t v85 = *((void *)&v84 + 1);
            uint64_t v69 = v80;
            uint64_t v81 = *((void *)&v80 + 1);
            uint64_t v71 = *((void *)&v78 + 1);
            uint64_t v70 = v78;
            uint64_t v72 = *((void *)&v79 + 1);
            uint64_t v73 = v79;
LABEL_80:
            type metadata accessor for simd_float4x4(0);
            a3[3] = v74;
            uint64_t v75 = (void *)swift_allocObject();
            *a3 = (uint64_t)v75;

            if (v67)
            {
              uint64_t v76 = 0;
              uint64_t v77 = 0;
              uint64_t v70 = 0;
              uint64_t v73 = 0;
              uint64_t v69 = 0x3F80000000000000;
              uint64_t v68 = 1065353216;
              uint64_t v71 = 1065353216;
              uint64_t v72 = 0x3F80000000000000;
            }
            else
            {
              uint64_t v76 = v85;
              uint64_t v77 = v81;
            }
            _OWORD v75[2] = v68;
            v75[3] = v76;
            v75[4] = v69;
            v75[5] = v77;
            v75[6] = v70;
            v75[7] = v71;
            v75[8] = v73;
            v75[9] = v72;
            goto LABEL_70;
          }
        }
        else
        {
          sub_1B62B32CC((uint64_t)&v87);
        }
        uint64_t v68 = 0;
        uint64_t v85 = 0;
        uint64_t v69 = 0;
        uint64_t v81 = 0;
        uint64_t v70 = 0;
        uint64_t v71 = 0;
        uint64_t v73 = 0;
        uint64_t v72 = 0;
        char v67 = 1;
        goto LABEL_80;
      }
      sub_1B62B32CC((uint64_t)v89);

LABEL_17:
      a3[3] = MEMORY[0x1E4FBB470];
      *(_DWORD *)a3 = 0;
      return;
    }
  }
  sub_1B62B31E8((uint64_t)v89, (uint64_t)&v87);
  if (!*((void *)&v88 + 1))
  {
    sub_1B62B32CC((uint64_t)&v87);
    goto LABEL_34;
  }
  sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_34:
    int v31 = 0;
    goto LABEL_35;
  }
  objc_msgSend(v86, sel_floatValue);
  int v31 = v30;

LABEL_35:
  a3[3] = MEMORY[0x1E4FBB470];

  *(_DWORD *)a3 = v31;
LABEL_70:
  sub_1B62B32CC((uint64_t)v89);
}

uint64_t sub_1B6B891C4(long long *a1, uint64_t a2, uint64_t a3)
{
  id v6 = sub_1B6B87B18();
  if (!v6
    || (id v7 = v6,
        id v8 = objc_msgSend(v6, sel_shaderModifiersArguments),
        v7,
        !v8))
  {
LABEL_20:
    id v29 = sub_1B6B87B18();
    if (v29)
    {
      int v30 = v29;
      sub_1B62C14BC(a1, *((void *)a1 + 3));
      uint64_t v31 = sub_1B6E33498();
      char v32 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      objc_msgSend(v30, sel_setValue_forKey_, v31, v32);

      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v33 = a1;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v33);
  }
  sub_1B63989B8(0, (unint64_t *)&unk_1E9DD65F0);
  uint64_t v9 = sub_1B6E314C8();

  if (!*(void *)(v9 + 16))
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B62B2CE0(a2, a3);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  id v12 = *(id *)(*(void *)(v9 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memset(v67, 0, 32);
  id v13 = objc_msgSend(v12, sel_type);
  uint64_t v14 = sub_1B6E31798();
  uint64_t v16 = v15;

  if (v14 == 0x74616F6C66 && v16 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  char v18 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if (v18)
  {
LABEL_26:
    sub_1B62CAAD8((uint64_t)a1, (uint64_t)&v60);
    uint64_t v35 = MEMORY[0x1E4FBC840];
    uint64_t v36 = MEMORY[0x1E4FBC840] + 8;
    if (!swift_dynamicCast())
    {
      sub_1B62CAAD8((uint64_t)a1, (uint64_t)&v60);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_36;
      }
      id v42 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v65[0]);
      uint64_t v62 = sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
      *(void *)&long long v60 = v42;
      sub_1B62B32CC((uint64_t)v67);
      uint64_t v43 = v35 + 8;
      goto LABEL_35;
    }
    int v37 = LODWORD(v65[0]);
    id v38 = objc_allocWithZone(NSNumber);
    LODWORD(v39) = v37;
    id v40 = objc_msgSend(v38, sel_initWithFloat_, v39);
    long long v41 = (unint64_t *)&qword_1E9DD0780;
LABEL_34:
    uint64_t v62 = sub_1B63989B8(0, v41);
    *(void *)&long long v60 = v40;
    sub_1B62B32CC((uint64_t)v67);
    uint64_t v43 = v36;
LABEL_35:
    sub_1B62CA57C((uint64_t)&v60, (uint64_t)v67, (unint64_t *)&qword_1EB980F60, v43);
    goto LABEL_36;
  }
  id v19 = objc_msgSend(v12, sel_type);
  uint64_t v20 = sub_1B6E31798();
  uint64_t v22 = v21;

  if (v20 == 0x3274616F6C66 && v22 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  char v24 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if (v24)
  {
LABEL_31:
    sub_1B62CAAD8((uint64_t)a1, (uint64_t)&v60);
    sub_1B6B94F18(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    uint64_t v36 = MEMORY[0x1E4FBC840] + 8;
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_36;
    }
    id v44 = objc_msgSend(self, sel_valueWithVFXFloat2_, v65[0]);
    goto LABEL_33;
  }
  id v25 = objc_msgSend(v12, sel_type);
  uint64_t v26 = sub_1B6E31798();
  uint64_t v28 = v27;

  if (v26 == 0x3374616F6C66 && v28 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  char v49 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if (v49)
  {
LABEL_43:
    sub_1B62CAAD8((uint64_t)a1, (uint64_t)&v60);
    sub_1B6B94F18(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    uint64_t v36 = MEMORY[0x1E4FBC840] + 8;
    if (swift_dynamicCast())
    {
      id v44 = objc_msgSend(self, sel_valueWithVFXFloat3_, v65[0]);
LABEL_33:
      id v40 = v44;
      long long v41 = &qword_1E9DD4DA8;
      goto LABEL_34;
    }
    goto LABEL_36;
  }
  id v50 = objc_msgSend(v12, sel_type);
  uint64_t v51 = sub_1B6E31798();
  uint64_t v53 = v52;

  if (v51 == 0x3474616F6C66 && v53 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  char v54 = sub_1B6E334B8();
  swift_bridgeObjectRelease();
  if (v54)
  {
LABEL_49:
    sub_1B62CAAD8((uint64_t)a1, (uint64_t)&v60);
    sub_1B6B94F18(0, (unint64_t *)&qword_1EB980EF0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2F8]);
    uint64_t v36 = MEMORY[0x1E4FBC840] + 8;
    if (swift_dynamicCast())
    {
      id v44 = objc_msgSend(self, sel_valueWithVFXFloat4_, v65[0]);
      goto LABEL_33;
    }
    goto LABEL_36;
  }
  id v55 = objc_msgSend(v12, sel_type);
  uint64_t v56 = sub_1B6E31798();
  uint64_t v58 = v57;

  if (v56 == 0x34783474616F6C66 && v58 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v59 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if ((v59 & 1) == 0) {
      goto LABEL_36;
    }
  }
  sub_1B62CAAD8((uint64_t)a1, (uint64_t)v65);
  type metadata accessor for simd_float4x4(0);
  uint64_t v36 = MEMORY[0x1E4FBC840] + 8;
  if (swift_dynamicCast())
  {
    id v44 = objc_msgSend(self, sel_valueWithVFXMatrix4_, *(double *)&v60, v61, *(double *)&v63, *(double *)&v64);
    goto LABEL_33;
  }
LABEL_36:
  sub_1B62B31E8((uint64_t)v67, (uint64_t)v65);
  if (v66)
  {
    sub_1B62B57A8(v65, &v60);
    id v45 = sub_1B6B87B18();
    if (v45)
    {
      uint64_t v46 = v45;
      sub_1B62C14BC(&v60, v62);
      uint64_t v47 = sub_1B6E33498();
      id v48 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      objc_msgSend(v46, sel_setValue_forKey_, v47, v48);

      swift_unknownObjectRelease();
      sub_1B62B32CC((uint64_t)v67);
    }
    else
    {
      sub_1B62B32CC((uint64_t)v67);

      swift_bridgeObjectRelease();
    }
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    uint64_t v33 = &v60;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v33);
  }
  sub_1B62B32CC((uint64_t)v67);

  swift_bridgeObjectRelease();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B62B32CC((uint64_t)v65);
}

uint64_t sub_1B6B89A88(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC640);
}

uint64_t static VFXNode.addBridgeControllers(to:for:)(uint64_t a1, void *a2)
{
  sub_1B62CAAD8(a1, (uint64_t)v36);
  swift_dynamicCast();
  int v3 = v32[0];
  int v4 = v32[1];
  uint64_t v37 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v37 = 0;
  uint64_t v5 = swift_unknownObjectWeakAssign();
  uint64_t v38 = 0x3E6C6C756E3CLL;
  unint64_t v39 = 0xE600000000000000;
  sub_1B6649008(v5, (uint64_t)v32);
  swift_unknownObjectWeakInit();
  sub_1B6B8C19C((uint64_t)v32, (uint64_t)v36);
  swift_unknownObjectWeakInit();
  id v29 = &off_1F0FAFAB8;
  swift_unknownObjectWeakAssign();
  id v6 = a2;
  id v7 = objc_msgSend(v6, sel_identifier);
  uint64_t v8 = sub_1B6E31798();
  uint64_t v10 = v9;

  uint64_t v30 = v8;
  uint64_t v31 = v10;
  sub_1B6649008((uint64_t)v28, (uint64_t)v32);
  sub_1B6B758E0((uint64_t)v32);
  BOOL v11 = v3 == -1 && v4 == 0;
  char v12 = v11;
  if (!v11)
  {
    uint64_t v13 = swift_retain();
    MEMORY[0x1F4188790](v13, v14);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6B8C17C);
    swift_release();
  }
  uint64_t v33 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v33 = 0;
  uint64_t v15 = swift_unknownObjectWeakAssign();
  uint64_t v34 = 0x3E6C6C756E3CLL;
  unint64_t v35 = 0xE600000000000000;
  sub_1B6649008(v15, (uint64_t)v28);
  swift_unknownObjectWeakInit();
  sub_1B6B8C19C((uint64_t)v28, (uint64_t)v32);
  swift_unknownObjectWeakInit();
  id v25 = &off_1F0FAFAB8;
  swift_unknownObjectWeakAssign();
  id v16 = v6;
  id v17 = objc_msgSend(v16, sel_identifier);
  uint64_t v18 = sub_1B6E31798();
  uint64_t v20 = v19;

  uint64_t v26 = v18;
  uint64_t v27 = v20;
  sub_1B6649008((uint64_t)v24, (uint64_t)v28);
  sub_1B6B758E0((uint64_t)v28);
  if ((v12 & 1) == 0)
  {
    uint64_t v21 = swift_retain();
    MEMORY[0x1F4188790](v21, v22);
    sub_1B636C318(0, (void (*)(unsigned char *))sub_1B6B8C1EC);
    swift_release();
  }
  sub_1B6B8C20C((uint64_t)v32);
  return sub_1B6B8C20C((uint64_t)v36);
}

void *VFXWorld.bridgedComponentNames.getter()
{
  return &unk_1F0FAFD18;
}

uint64_t sub_1B6B89DF4()
{
  return 0x646C726F57;
}

uint64_t sub_1B6B89E08()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  uint64_t v2 = sub_1B6E31798();

  return v2;
}

float sub_1B6B89E60()
{
  return sub_1B6B8A1AC((SEL *)&selRef_background);
}

double sub_1B6B89E6C()
{
  return sub_1B6B8A334((SEL *)&selRef_background);
}

uint64_t sub_1B6B89E78@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B6B8A4CC(a1, (uint64_t (*)(void *))sub_1B6B46E08, a2);
}

uint64_t sub_1B6B89EAC()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78140;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B94644;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B94670;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6732DE0(0x7469736E65746E69, 0xE900000000000079, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B62D2D78(0, (unint64_t *)&unk_1EB97DFA0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  id v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B946EC;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B94718;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B6732E5C(0x726F66736E617274, 0xE90000000000006DLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         2048,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E496E8 = v0;
  return result;
}

uint64_t sub_1B6B8A184()
{
  return 0x756F72676B636142;
}

float sub_1B6B8A1A0()
{
  return sub_1B6B8A1AC((SEL *)&selRef_lightingEnvironment);
}

float sub_1B6B8A1AC(SEL *a1)
{
  sub_1B6B96284(v1, v9);
  uint64_t v3 = MEMORY[0x1BA9B8670](v9);
  sub_1B6B47018((uint64_t)v9);
  if (!v3) {
    return 0.0;
  }
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
  {
    swift_unknownObjectRelease();
    return 0.0;
  }
  id v5 = [v4 *a1];
  swift_unknownObjectRelease();
  objc_msgSend(v5, sel_intensity);
  float v7 = v6;

  return v7;
}

void sub_1B6B8A26C(SEL *a1, SEL *a2, float a3)
{
  sub_1B6B96284(v3, v11);
  uint64_t v7 = MEMORY[0x1BA9B8670](v11);
  sub_1B6B47018((uint64_t)v11);
  if (v7)
  {
    self;
    uint64_t v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
    {
      id v9 = [v8 *a1];
      swift_unknownObjectRelease();
      *(float *)&double v10 = a3;
      objc_msgSend(v9, *a2, v10);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

double sub_1B6B8A328()
{
  return sub_1B6B8A334((SEL *)&selRef_lightingEnvironment);
}

double sub_1B6B8A334(SEL *a1)
{
  sub_1B6B96284(v1, v9);
  uint64_t v3 = MEMORY[0x1BA9B8670](v9);
  sub_1B6B47018((uint64_t)v9);
  if (v3)
  {
    self;
    uint64_t v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
    {
      id v5 = [v4 *a1];
      swift_unknownObjectRelease();
      objc_msgSend(v5, sel_contentsTransform);
      double v8 = v6;

      return v8;
    }
    swift_unknownObjectRelease();
  }
  *(void *)&double result = 1065353216;
  return result;
}

void sub_1B6B8A410(SEL *a1, double a2, double a3, double a4, double a5)
{
  sub_1B6B96284(v5, v14);
  uint64_t v7 = MEMORY[0x1BA9B8670](v14);
  sub_1B6B47018((uint64_t)v14);
  if (v7)
  {
    self;
    double v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
    {
      id v9 = [v8 *a1];
      swift_unknownObjectRelease();
      objc_msgSend(v9, sel_setContentsTransform_, a2, a3, a4, a5);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1B6B8A4CC@<X0>(void *a1@<X0>, uint64_t (*a2)(void *)@<X1>, void *a3@<X8>)
{
  sub_1B6B94F18(0, &qword_1EB980960, (uint64_t (*)(void))sub_1B62B1B2C, (uint64_t)&type metadata for StringCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v10);
  char v12 = (char *)&v28 - v11;
  uint64_t v33 = 0;
  swift_unknownObjectWeakInit();
  uint64_t v33 = 0;
  uint64_t v13 = swift_unknownObjectWeakAssign();
  uint64_t v34 = 0x3E6C6C756E3CLL;
  uint64_t v35 = 0xE600000000000000;
  sub_1B6649008(v13, (uint64_t)v40);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_1B62C14BC(a1, v14);
  if (sub_1B62B8F14(2037, v14, v15))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6E33A28();
    if (!v3)
    {
      sub_1B62C14BC(&v32, v35);
      sub_1B6648FB4();
      sub_1B6E33518();
LABEL_9:
      sub_1B69CBCE8((uint64_t)&v36, (uint64_t)v40);
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v32);
LABEL_17:
      sub_1B6B96284(v40, a3);
    }
  }
  else
  {
    uint64_t v16 = a1[3];
    uint64_t v17 = a1[4];
    sub_1B62C14BC(a1, v16);
    if (sub_1B62B8F14(2029, v16, v17))
    {
      sub_1B62C14BC(a1, a1[3]);
      sub_1B6E33A28();
      if (!v3)
      {
        sub_1B62C14BC(&v32, v35);
        uint64_t v20 = sub_1B6E334C8();
        uint64_t v22 = v21;
        uint64_t v29 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v29 = 0;
        uint64_t v23 = swift_unknownObjectWeakAssign();
        uint64_t v30 = v20;
        uint64_t v31 = v22;
        sub_1B6649008(v23, (uint64_t)&v36);
        goto LABEL_9;
      }
    }
    else
    {
      long long v41 = a3;
      sub_1B62C14BC(a1, a1[3]);
      sub_1B62B1B2C();
      sub_1B6E33A48();
      if (!v3)
      {
        uint64_t v36 = 0;
        LOBYTE(v37) = 1;
        unint64_t v38 = 0xD000000000000017;
        unint64_t v39 = 0x80000001B6F4B810;
        uint64_t v18 = sub_1B6E32D28();
        a3 = v41;
        if (v19) {
          unint64_t v24 = v18;
        }
        else {
          unint64_t v24 = 0;
        }
        if (v19) {
          unint64_t v25 = v19;
        }
        else {
          unint64_t v25 = 0xE000000000000000;
        }
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
        uint64_t v37 = 0;
        swift_unknownObjectWeakInit();
        uint64_t v37 = 0;
        uint64_t v26 = swift_unknownObjectWeakAssign();
        unint64_t v38 = v24;
        unint64_t v39 = v25;
        sub_1B6649008(v26, (uint64_t)&v32);
        sub_1B69CBCE8((uint64_t)&v32, (uint64_t)v40);
        goto LABEL_17;
      }
    }
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return a2(v40);
}

uint64_t sub_1B6B8A8B0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B6B8A4CC(a1, (uint64_t (*)(void *))sub_1B6B46EB8, a2);
}

uint64_t sub_1B6B8A8DC()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78140;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  uint64_t v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B947FC;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B94828;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6724FE8(0x7469736E65746E69, 0xE900000000000079, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B62D2D78(0, (unint64_t *)&unk_1EB97DFA0, (uint64_t (*)(uint64_t))type metadata accessor for simd_float4x4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for EntityGetSet);
  double v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B948D8;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B94904;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B6725064(0x726F66736E617274, 0xE90000000000006DLL, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         2048,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E496F0 = v0;
  return result;
}

void sub_1B6B8ABB4(void *a1@<X0>, SEL *a2@<X3>, _DWORD *a3@<X8>)
{
  sub_1B6B96284(a1, v10);
  uint64_t v5 = MEMORY[0x1BA9B8670](v10);
  sub_1B6B47018((uint64_t)v10);
  if (!v5) {
    goto LABEL_5;
  }
  self;
  double v6 = (void *)swift_dynamicCastObjCClass();
  if (!v6)
  {
    swift_unknownObjectRelease();
LABEL_5:
    int v9 = 0;
    goto LABEL_6;
  }
  id v7 = [v6 *a2];
  swift_unknownObjectRelease();
  objc_msgSend(v7, sel_intensity);
  int v9 = v8;

LABEL_6:
  *a3 = v9;
}

double sub_1B6B8AC74()
{
  sub_1B6B96284(v0, v7);
  uint64_t v1 = MEMORY[0x1BA9B8670](v7);
  sub_1B6B47018((uint64_t)v7);
  if (v1)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      id v3 = objc_msgSend(v2, sel_physicsWorld);
      swift_unknownObjectRelease();
      objc_msgSend(v3, sel_gravity);
      double v6 = v4;

      return v6;
    }
    swift_unknownObjectRelease();
  }
  return 0.0;
}

void sub_1B6B8AD24(double a1)
{
  sub_1B6B96284(v1, v6);
  uint64_t v2 = MEMORY[0x1BA9B8670](v6);
  sub_1B6B47018((uint64_t)v6);
  if (v2)
  {
    self;
    id v3 = (void *)swift_dynamicCastObjCClass();
    if (v3)
    {
      id v4 = objc_msgSend(v3, sel_physicsWorld);
      swift_unknownObjectRelease();
      objc_msgSend(v4, sel_setGravity_, a1);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

float sub_1B6B8ADD0()
{
  sub_1B6B96284(v0, v7);
  uint64_t v1 = MEMORY[0x1BA9B8670](v7);
  sub_1B6B47018((uint64_t)v7);
  if (!v1) {
    return 1.0;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
    return 1.0;
  }
  id v3 = objc_msgSend(v2, sel_physicsWorld);
  swift_unknownObjectRelease();
  objc_msgSend(v3, sel_speed);
  float v5 = v4;

  return v5;
}

uint64_t sub_1B6B8AE88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B6B8A4CC(a1, (uint64_t (*)(void *))sub_1B6B46F68, a2);
}

uint64_t sub_1B6B8AEB4()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78140;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFD0, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
  uint64_t v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B94A10;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B94A50;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B672C3C4(0x79746976617267, 0xE700000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  double v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B94AC0;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B94AEC;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B672C7F4(0x6465657073, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E496F8 = v0;
  return result;
}

void sub_1B6B8B16C(void *a1@<X0>, float *a2@<X8>)
{
  sub_1B6B96284(a1, v8);
  uint64_t v3 = MEMORY[0x1BA9B8670](v8);
  sub_1B6B47018((uint64_t)v8);
  if (!v3) {
    goto LABEL_5;
  }
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
  {
    swift_unknownObjectRelease();
LABEL_5:
    float v7 = 1.0;
    goto LABEL_6;
  }
  id v5 = objc_msgSend(v4, sel_physicsWorld);
  swift_unknownObjectRelease();
  objc_msgSend(v5, sel_speed);
  float v7 = v6;

LABEL_6:
  *a2 = v7;
}

uint64_t sub_1B6B8B22C()
{
  return 0x73636973796850;
}

double sub_1B6B8B244()
{
  sub_1B6B96284(v0, v6);
  uint64_t v1 = MEMORY[0x1BA9B8670](v6);
  sub_1B6B47018((uint64_t)v6);
  if (v1)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      objc_msgSend(v2, sel_fogColor_linearExtendedSRGB);
      double v5 = v3;
      swift_unknownObjectRelease();
      return v5;
    }
    swift_unknownObjectRelease();
  }
  return 0.0;
}

float sub_1B6B8B2D4()
{
  return sub_1B6B8B2EC((SEL *)&selRef_fogStartDistance);
}

float sub_1B6B8B2E0()
{
  return sub_1B6B8B2EC((SEL *)&selRef_fogEndDistance);
}

float sub_1B6B8B2EC(SEL *a1)
{
  sub_1B6B96284(v1, v8);
  uint64_t v3 = MEMORY[0x1BA9B8670](v8);
  sub_1B6B47018((uint64_t)v8);
  if (!v3) {
    return 0.0;
  }
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
  {
    swift_unknownObjectRelease();
    return 0.0;
  }
  [v4 *a1];
  float v6 = v5;
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1B6B8B384@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B6B8A4CC(a1, (uint64_t (*)(void *))sub_1B6B47018, a2);
}

uint64_t sub_1B6B8B3B0(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(v2, ObjectType, a2);
}

uint64_t sub_1B6B8B404@<X0>(uint64_t a1@<X8>)
{
  swift_unknownObjectWeakInit();
  v3[1] = 0;
  swift_unknownObjectWeakAssign();
  void v3[2] = 0x3E6C6C756E3CLL;
  v3[3] = 0xE600000000000000;
  return sub_1B6649008((uint64_t)v3, a1);
}

uint64_t sub_1B6B8B46C()
{
  sub_1B6B95068(0, (unint64_t *)&qword_1EB980DF0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B6E78160;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1B6B8F218(0, (unint64_t *)&qword_1EB97DFE0, (unint64_t *)&qword_1EB980EF0, MEMORY[0x1E4FBC2F8]);
  uint64_t v2 = (void *)swift_allocObject();
  _DWORD v2[4] = sub_1B6B94B7C;
  v2[5] = KeyPath;
  v2[2] = sub_1B6B94BBC;
  v2[3] = KeyPath;
  v2[6] = KeyPath;
  type metadata accessor for PropertyDescription();
  swift_allocObject();
  swift_retain_n();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B6724B3C(0x726F6C6F63, 0xE500000000000000, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 6, 0, (uint64_t)v2, KeyPath, 0, 0,
         0,
         MEMORY[0x1E4FBC860],
         0);
  swift_release();
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = swift_getKeyPath();
  sub_1B6B95068(0, &qword_1EB97DF68, MEMORY[0x1E4FBB470], (uint64_t (*)(void, uint64_t))type metadata accessor for EntityGetSet);
  float v6 = (void *)swift_allocObject();
  void v6[4] = sub_1B6B94C2C;
  v6[5] = v5;
  uint64_t v6[2] = sub_1B6B94C58;
  long long v6[3] = v5;
  v6[6] = v5;
  swift_allocObject();
  swift_retain_n();
  uint64_t v7 = sub_1B6724F6C(0x6964207472617473, 0xEE0065636E617473, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v6, v5, 0, 0,
         0,
         v3,
         0);
  swift_release();
  *(void *)(v0 + 40) = v7;
  uint64_t v8 = swift_getKeyPath();
  int v9 = (void *)swift_allocObject();
  void v9[4] = sub_1B6B94C2C;
  uint64_t v9[5] = v8;
  id v9[2] = sub_1B6B94C58;
  void v9[3] = v8;
  void v9[6] = v8;
  swift_allocObject();
  swift_retain_n();
  uint64_t v10 = sub_1B6724F6C(0x7473696420646E65, 0xEC00000065636E61, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, (uint64_t)v9, v8, 0, 0,
          0,
          v3,
          0);
  swift_release();
  *(void *)(v0 + 48) = v10;
  uint64_t result = sub_1B6E31C48();
  qword_1E9E49700 = v0;
  return result;
}

uint64_t sub_1B6B8B81C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6B96284(a1, v9);
  uint64_t v3 = MEMORY[0x1BA9B8670](v9);
  uint64_t result = sub_1B6B47018((uint64_t)v9);
  if (!v3) {
    goto LABEL_5;
  }
  self;
  uint64_t v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {
    uint64_t result = swift_unknownObjectRelease();
LABEL_5:
    long long v7 = 0uLL;
    goto LABEL_6;
  }
  objc_msgSend(v5, sel_fogColor_linearExtendedSRGB);
  long long v8 = v6;
  uint64_t result = swift_unknownObjectRelease();
  long long v7 = v8;
LABEL_6:
  *a2 = v7;
  return result;
}

void sub_1B6B8B8B0(long long *a1, void *a2)
{
  long long v4 = *a1;
  sub_1B6B96284(a2, v5);
  uint64_t v2 = MEMORY[0x1BA9B8670](v5);
  sub_1B6B47018((uint64_t)v5);
  if (v2)
  {
    self;
    uint64_t v3 = (void *)swift_dynamicCastObjCClass();
    if (!v3) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  objc_msgSend(v3, sel_setFogColor_linearExtendedSRGB_, *(double *)&v4, v4);
}

uint64_t sub_1B6B8B94C@<X0>(void *a1@<X0>, SEL *a2@<X3>, _DWORD *a3@<X8>)
{
  sub_1B6B96284(a1, v10);
  uint64_t v5 = MEMORY[0x1BA9B8670](v10);
  uint64_t result = sub_1B6B47018((uint64_t)v10);
  if (!v5) {
    goto LABEL_5;
  }
  self;
  long long v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7)
  {
    uint64_t result = swift_unknownObjectRelease();
LABEL_5:
    int v9 = 0;
    goto LABEL_6;
  }
  [v7 *a2];
  int v9 = v8;
  uint64_t result = swift_unknownObjectRelease();
LABEL_6:
  *a3 = v9;
  return result;
}

void sub_1B6B8B9EC(int *a1, void *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  int v6 = *a1;
  sub_1B6B96284(a2, v10);
  uint64_t v7 = MEMORY[0x1BA9B8670](v10);
  sub_1B6B47018((uint64_t)v10);
  if (v7)
  {
    self;
    int v9 = (void *)swift_dynamicCastObjCClass();
    if (!v9) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    int v9 = 0;
  }
  LODWORD(v8) = v6;
  objc_msgSend(v9, *a5, v8);
}

uint64_t sub_1B6B8BA94()
{
  return 6778694;
}

uint64_t sub_1B6B8BAA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  swift_unknownObjectWeakInit();
  v7[1] = 0;
  swift_unknownObjectWeakAssign();
  _OWORD v7[2] = 0x3E6C6C756E3CLL;
  uint64_t v8 = 0xE600000000000000;
  sub_1B6649008((uint64_t)v7, (uint64_t)v9);
  uint64_t v10 = 0;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (!v2)
  {
    sub_1B62C14BC(v7, v8);
    sub_1B6648FB4();
    sub_1B6E33518();
    sub_1B69CBCE8((uint64_t)&v6, (uint64_t)v9);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v7);
    sub_1B6B962CC((uint64_t)v9, a2);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return sub_1B6B45F08((uint64_t)v9);
}

uint64_t sub_1B6B8BBDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6B8BAA4(a1, a2);
}

void sub_1B6B8BBF4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B6B8BC14@<X0>(uint64_t a1@<X8>)
{
  swift_unknownObjectWeakInit();
  v3[1] = 0;
  swift_unknownObjectWeakAssign();
  void v3[2] = 0x3E6C6C756E3CLL;
  v3[3] = 0xE600000000000000;
  uint64_t result = sub_1B6649008((uint64_t)v3, a1);
  *(void *)(a1 + 32) = 0;
  return result;
}

void sub_1B6B8BC80()
{
  qword_1E9E49708 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1B6B8BC94()
{
  if (qword_1E9DCC668 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E9E49708;
  unint64_t v1 = MEMORY[0x1E4FBC860];
  unint64_t v18 = MEMORY[0x1E4FBC860];
  id v2 = sub_1B6B81AD4((SEL *)&selRef_morpher);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_targets);

    sub_1B63989B8(0, &qword_1E9DD6600);
    unint64_t v1 = sub_1B6E31C28();
  }
  if (!(v1 >> 62))
  {
    uint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_7;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    unint64_t v15 = MEMORY[0x1E4FBC860];
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B6E32C18();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_19;
  }
LABEL_7:
  uint64_t v6 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1BA9B4580](v6, v1);
    }
    else {
      id v7 = *(id *)(v1 + 8 * v6 + 32);
    }
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_name);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_1B6E31798();
      uint64_t v13 = v12;
    }
    else
    {
      uint64_t v13 = 0xE800000000000000;
      uint64_t v11 = 0x64656C7469746E55;
    }
    memset(v17, 0, sizeof(v17));
    sub_1B6B6FE8C((uint64_t)v17, v11, v13, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0);
    swift_bridgeObjectRelease();
    sub_1B62B32CC((uint64_t)v17);
    uint64_t v14 = swift_retain();
    MEMORY[0x1BA9B3870](v14);
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1B6E31C78();
    }
    ++v6;
    sub_1B6E31CC8();
    sub_1B6E31C48();

    swift_release();
  }
  while (v5 != v6);
  swift_bridgeObjectRelease();
  unint64_t v15 = v18;
LABEL_20:
  *(void *)&v17[0] = v0;
  swift_bridgeObjectRetain();
  sub_1B6641860(v15);
  return *(void *)&v17[0];
}

uint64_t sub_1B6B8BF28(uint64_t a1)
{
  if (!objc_msgSend(self, sel_immediateMode))
  {
    sub_1B6B96284(v1, v12);
    uint64_t v9 = MEMORY[0x1BA9B8670](v12);
    sub_1B6B47018((uint64_t)v12);
    if (v9)
    {
      self;
      uint64_t v10 = (void *)swift_dynamicCastObjCClass();
      if (!v10) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
    id v3 = objc_msgSend(v10, sel_morpher);

    if (v3) {
      goto LABEL_3;
    }
LABEL_12:
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
    return swift_bridgeObjectRelease();
  }
  id v3 = (id)v1[4];
  id v4 = v3;
  if (!v3) {
    goto LABEL_12;
  }
LABEL_3:
  sub_1B62CAAD8(a1, (uint64_t)v12);
  if (swift_dynamicCast()) {
    float v5 = v11;
  }
  else {
    float v5 = 0.0;
  }
  uint64_t v6 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();
  *(float *)&double v7 = v5;
  objc_msgSend(v3, sel_setWeight_forTargetNamed_, v6, v7);

  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
}

void sub_1B6B8C0A4(uint64_t a1@<X8>)
{
  id v2 = sub_1B6B81AD4((SEL *)&selRef_morpher);
  if (v2)
  {
    id v3 = v2;
    id v4 = (void *)sub_1B6E31768();
    objc_msgSend(v3, sel_weightForTargetNamed_, v4);
    int v6 = v5;
  }
  else
  {
    int v6 = 0;
  }
  *(void *)(a1 + 24) = MEMORY[0x1E4FBB470];
  *(_DWORD *)a1 = v6;
}

uint64_t sub_1B6B8C13C()
{
  return 0x72656870726F4DLL;
}

uint64_t sub_1B6B8C158(uint64_t a1, uint64_t a2)
{
  return sub_1B6689CC4(a1, a2, &qword_1E9DCC668);
}

void *sub_1B6B8C17C(void *a1)
{
  return sub_1B6B71DC4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B6B8C19C(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  swift_unknownObjectWeakTakeInit();
  return a2;
}

void *sub_1B6B8C1EC(void *a1)
{
  return sub_1B6B71C5C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B6B8C20C(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for ShadableShaderModifierObserver()
{
  return self;
}

ValueMetadata *type metadata accessor for NodeVisibilityController()
{
  return &type metadata for NodeVisibilityController;
}

uint64_t _s3VFX24NodeVisibilityControllerVwxx_0()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_unknownObjectWeakDestroy();
}

uint64_t _s3VFX24NodeVisibilityControllerVwcp_0(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyInit();
  uint64_t v5 = a2[2];
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = v5;
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_unknownObjectWeakCopyInit();
  return a1;
}

uint64_t _s3VFX24NodeVisibilityControllerVwca_0(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v4 + 8) = a2[1];
  *(void *)(v4 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakCopyAssign();
  return a1;
}

uint64_t _s3VFX24NodeVisibilityControllerVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakTakeInit();
  *(void *)(v4 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectWeakTakeInit();
  return a1;
}

uint64_t _s3VFX24NodeVisibilityControllerVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(swift_unknownObjectWeakTakeAssign() + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakTakeAssign();
  return a1;
}

ValueMetadata *type metadata accessor for NodeTransformController()
{
  return &type metadata for NodeTransformController;
}

ValueMetadata *type metadata accessor for VFXBridgeableReference()
{
  return &type metadata for VFXBridgeableReference;
}

unint64_t sub_1B6B8C468()
{
  unint64_t result = qword_1E9DD65B0;
  if (!qword_1E9DD65B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD65B0);
  }
  return result;
}

void sub_1B6B8C4BC(_OWORD *a1@<X8>)
{
  id v2 = (void *)sub_1B6B759A0();
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_position);
    long long v6 = v4;

    long long v5 = v6;
  }
  else
  {
    long long v5 = 0uLL;
  }
  *a1 = v5;
}

void sub_1B6B8C518(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1B6B8C524(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1B6E33068();
  if (result >= v4)
  {
    if (v4) {
      return sub_1B6B8CCCC(0, v4, 1, a1);
    }
  }
  else
  {
    uint64_t v93 = result;
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 < -1)
    {
      uint64_t result = sub_1B6E32BD8();
      __break(1u);
    }
    else
    {
      uint64_t v98 = v4;
      unint64_t v90 = a1;
      if (v4 >= 2)
      {
        uint64_t v7 = v6 >> 1;
        sub_1B63989B8(0, (unint64_t *)&unk_1E9DD65F0);
        uint64_t v8 = sub_1B6E31C98();
        *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
        uint64_t v4 = v98;
        __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
        uint64_t v108 = v8;
        goto LABEL_11;
      }
      uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v108 = MEMORY[0x1E4FBC860];
      __dst = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
      if (v4 == 1)
      {
LABEL_11:
        uint64_t v10 = 0;
        uint64_t v91 = *a1 + 16;
        uint64_t v104 = *a1;
        uint64_t v92 = *a1 - 8;
        uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
        while (1)
        {
          uint64_t v12 = v10;
          uint64_t v13 = v10 + 1;
          uint64_t v101 = v10;
          if (v10 + 1 < v4)
          {
            unint64_t v94 = v9;
            uint64_t v96 = v2;
            uint64_t v14 = *(void **)(v104 + 8 * v10);
            id v15 = *(id *)(v104 + 8 * v13);
            id v16 = v14;
            id v17 = objc_msgSend(v15, sel_name);
            uint64_t v18 = sub_1B6E31798();
            uint64_t v20 = v19;

            id v21 = objc_msgSend(v16, sel_name);
            uint64_t v22 = sub_1B6E31798();
            uint64_t v24 = v23;

            if (v18 == v22 && v20 == v24) {
              int v102 = 0;
            }
            else {
              int v102 = sub_1B6E334B8();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            uint64_t v12 = v101;
            uint64_t v13 = v101 + 2;
            if (v101 + 2 < v4)
            {
              uint64_t v26 = (id *)(v91 + 8 * v101);
              do
              {
                uint64_t v105 = v13;
                uint64_t v27 = *(v26 - 1);
                id v28 = *v26;
                id v29 = v27;
                id v30 = objc_msgSend(v28, sel_name);
                uint64_t v31 = sub_1B6E31798();
                uint64_t v33 = v32;

                id v34 = objc_msgSend(v29, sel_name);
                uint64_t v35 = sub_1B6E31798();
                uint64_t v37 = v36;

                if (v31 == v35 && v33 == v37)
                {

                  swift_bridgeObjectRelease_n();
                  if (v102) {
                    goto LABEL_30;
                  }
                }
                else
                {
                  int v39 = sub_1B6E334B8();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v102 ^ v39))
                  {
LABEL_30:
                    uint64_t v4 = v98;
                    uint64_t v13 = v105;
                    goto LABEL_32;
                  }
                }
                uint64_t v13 = v105 + 1;
                ++v26;
              }
              while (v98 != v105 + 1);
              uint64_t v4 = v98;
              uint64_t v13 = v98;
LABEL_32:
              uint64_t v12 = v101;
            }
            uint64_t v9 = v94;
            uint64_t v2 = v96;
            if (v12 < v13 && (v102 & 1) != 0)
            {
              id v40 = (uint64_t *)(v92 + 8 * v13);
              uint64_t v41 = v13;
              uint64_t v42 = v12;
              uint64_t v43 = (uint64_t *)(v104 + 8 * v12);
              do
              {
                if (v42 != --v41)
                {
                  uint64_t v44 = *v43;
                  uint64_t *v43 = *v40;
                  *id v40 = v44;
                }
                ++v42;
                --v40;
                ++v43;
              }
              while (v42 < v41);
            }
          }
          if (v13 < v4 && v13 - v12 < v93)
          {
            uint64_t v45 = v12 + v93;
            if (v12 + v93 >= v4) {
              uint64_t v45 = v4;
            }
            uint64_t v99 = v45;
            if (v13 != v45)
            {
              uint64_t v95 = v9;
              uint64_t v97 = v2;
              uint64_t v46 = v92 + 8 * v13;
              do
              {
                id v48 = *(void **)(v104 + 8 * v13);
                uint64_t v49 = v12;
                uint64_t v103 = v46;
                uint64_t v106 = v13;
                while (1)
                {
                  id v50 = *(void **)v46;
                  id v51 = v48;
                  id v52 = v50;
                  id v53 = objc_msgSend(v51, sel_name);
                  uint64_t v54 = sub_1B6E31798();
                  uint64_t v56 = v55;

                  id v57 = objc_msgSend(v52, sel_name);
                  uint64_t v58 = sub_1B6E31798();
                  uint64_t v60 = v59;

                  if (v54 == v58 && v56 == v60) {
                    break;
                  }
                  char v62 = sub_1B6E334B8();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v62 & 1) == 0) {
                    goto LABEL_45;
                  }
                  long long v63 = *(void **)v46;
                  id v48 = *(void **)(v46 + 8);
                  *(void *)uint64_t v46 = v48;
                  *(void *)(v46 + 8) = v63;
                  v46 -= 8;
                  ++v49;
                  uint64_t v47 = v106;
                  if (v106 == v49) {
                    goto LABEL_46;
                  }
                }

                swift_bridgeObjectRelease_n();
LABEL_45:
                uint64_t v47 = v106;
LABEL_46:
                uint64_t v13 = v47 + 1;
                uint64_t v12 = v101;
                uint64_t v46 = v103 + 8;
              }
              while (v13 != v99);
              uint64_t v13 = v99;
              uint64_t v9 = v95;
              uint64_t v2 = v97;
            }
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1B62BD890(0, *((void *)v9 + 2) + 1, 1, v9);
          }
          unint64_t v65 = *((void *)v9 + 2);
          unint64_t v64 = *((void *)v9 + 3);
          unint64_t v11 = v65 + 1;
          uint64_t v107 = v13;
          if (v65 >= v64 >> 1) {
            uint64_t v9 = sub_1B62BD890(v64 > 1, v65 + 1, 1, v9);
          }
          *((void *)v9 + 2) = v11;
          uint64_t v66 = v9 + 32;
          char v67 = &v9[16 * v65 + 32];
          *(void *)char v67 = v12;
          *((void *)v67 + 1) = v13;
          if (v65) {
            break;
          }
          unint64_t v11 = 1;
LABEL_13:
          uint64_t v4 = v98;
          uint64_t v10 = v107;
          if (v107 >= v98) {
            goto LABEL_77;
          }
        }
        while (1)
        {
          uint64_t v68 = v11 - 1;
          if (v11 >= 4)
          {
            uint64_t v73 = &v66[16 * v11];
            uint64_t v74 = *((void *)v73 - 7) - *((void *)v73 - 8);
            uint64_t v71 = *((void *)v73 - 5) - *((void *)v73 - 6);
            uint64_t v72 = v11 - 2;
            uint64_t v75 = &v66[16 * v11 - 32];
            uint64_t v69 = *(void *)v75;
            uint64_t v70 = *((void *)v75 + 1);
            if (v71 - v69 + v70 >= v74)
            {
              BOOL v78 = v71 < *(void *)&v66[16 * v68 + 8] - *(void *)&v66[16 * v68];
              goto LABEL_71;
            }
          }
          else
          {
            if (v11 != 3)
            {
              uint64_t v76 = *(void *)&v66[16 * v11 - 24] - *(void *)&v9[16 * v11];
              uint64_t v77 = *(void *)&v66[16 * v68 + 8] - *(void *)&v66[16 * v68];
LABEL_68:
              if (v77 < v76) {
                goto LABEL_13;
              }
              goto LABEL_73;
            }
            uint64_t v69 = *((void *)v9 + 6);
            uint64_t v70 = *((void *)v9 + 7);
            uint64_t v71 = *((void *)v9 + 5) - *((void *)v9 + 4);
            uint64_t v72 = 1;
          }
          uint64_t v76 = v70 - v69;
          uint64_t v77 = *(void *)&v66[16 * v68 + 8] - *(void *)&v66[16 * v68];
          if (v76 + v77 < v71) {
            goto LABEL_68;
          }
          BOOL v78 = v71 < v77;
LABEL_71:
          if (v78) {
            uint64_t v68 = v72;
          }
LABEL_73:
          long long v79 = &v66[16 * v68 - 16];
          uint64_t v80 = *(void *)v79;
          uint64_t v81 = &v66[16 * v68];
          uint64_t v82 = *((void *)v81 + 1);
          sub_1B6B8CE3C((void **)(v104 + 8 * *(void *)v79), (id *)(v104 + 8 * *(void *)v81), (id *)(v104 + 8 * v82), __dst);
          if (v2) {
            goto LABEL_83;
          }
          *(void *)long long v79 = v80;
          *((void *)v79 + 1) = v82;
          unint64_t v83 = *((void *)v9 + 2);
          unint64_t v11 = v83 - 1;
          memmove(&v66[16 * v68], v81 + 16, 16 * (v83 - 1 - v68));
          *((void *)v9 + 2) = v83 - 1;
          if (v83 <= 2) {
            goto LABEL_13;
          }
        }
      }
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_77:
      if (v11 >= 2)
      {
        uint64_t v84 = *v90;
        do
        {
          uint64_t v85 = *(void *)&v9[16 * v11];
          id v86 = &v9[16 * v11 + 16];
          uint64_t v87 = *((void *)v86 + 1);
          sub_1B6B8CE3C((void **)(v84 + 8 * v85), (id *)(v84 + 8 * *(void *)v86), (id *)(v84 + 8 * v87), __dst);
          if (v2) {
            break;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1B6D671B8((uint64_t)v9);
          }
          long long v88 = &v9[16 * v11];
          *(void *)long long v88 = v85;
          *((void *)v88 + 1) = v87;
          unint64_t v89 = *((void *)v9 + 2);
          memmove(&v9[16 * v11 + 16], &v9[16 * v11 + 32], 16 * (v89 - v11));
          *((void *)v9 + 2) = v89 - 1;
          unint64_t v11 = v89 - 1;
        }
        while (v89 > 2);
      }
LABEL_83:
      swift_bridgeObjectRelease();
      *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1B6E31C48();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}