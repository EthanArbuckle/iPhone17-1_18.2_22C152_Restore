void sub_1B67BF05C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, void *a5, int a6, void **a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t inited;
  uint64_t v19;
  double v20;
  uint64_t v21;
  int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  _UNKNOWN **v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void **v71;
  uint64_t v72;
  uint64_t *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76[4];
  _UNKNOWN **v77;
  uint64_t v78;
  uint64_t v79;

  v70 = a1;
  v71 = a7;
  LODWORD(v72) = a6;
  sub_1B63BCE08(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  v17 = (uint64_t *)((char *)&v62 - v16);
  inited = type metadata accessor for ParticleInitScript(0);
  v20 = MEMORY[0x1F4188790](inited, v19);
  v75 = (uint64_t)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a4;
  v23 = (*(uint64_t (**)(double))(*a5 + 104))(v20);
  v24 = 0x6C6174656DLL;
  if (v22 != 1) {
    v24 = 0x7466697773;
  }
  if (v22) {
    v25 = v24;
  }
  else {
    v25 = 99;
  }
  if (v22) {
    v26 = 0xE500000000000000;
  }
  else {
    v26 = 0xE100000000000000;
  }
  v73 = v17;
  if (v23)
  {
    v27 = 0xE500000000000000;
    if (v23 == 1) {
      v28 = 0x6C6174656DLL;
    }
    else {
      v28 = 0x7466697773;
    }
  }
  else
  {
    v27 = 0xE100000000000000;
    v28 = 99;
  }
  if (v25 == v28 && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v29 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      return;
    }
  }
  sub_1B67C5C70((uint64_t)a4, v75, type metadata accessor for ParticleInitScript);
  v30 = a5[5];
  v68 = a5[6];
  v69 = v30;
  swift_retain();
  v31 = sub_1B62DE2C8(a3);
  swift_release();
  sub_1B67BA970((uint64_t)&a4[*(int *)(inited + 36)], (uint64_t)v13);
  v32 = type metadata accessor for ScriptIndex();
  v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v13, 1, v32) == 1)
  {
    swift_retain();
    v34 = sub_1B62DE2C8(a3);
    swift_release();
    v35 = v73;
    *v73 = v34;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v13);
  }
  else
  {
    v35 = v73;
    sub_1B67BAA90((uint64_t)v13, (uint64_t)v73);
  }
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v32);
  v37 = v74;
  v36 = v75;
  v38 = sub_1B68EF604(1u, v76);
  if (v37)
  {
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v36, type metadata accessor for ParticleInitScript);
    if (v72) {
      swift_willThrow();
    }
    else {
  }
    }
  else
  {
    v72 = a3;
    v64 = &v62;
    v40 = v76[0];
    v63 = v76[1];
    v41 = v76[2];
    v65 = v78;
    v66 = v79;
    v67 = v77;
    MEMORY[0x1F4188790](v38, v39);
    v42 = v68;
    v43 = v69;
    *(&v62 - 6) = v69;
    *(&v62 - 5) = v42;
    *((_DWORD *)&v62 - 8) = v31;
    *((_DWORD *)&v62 - 7) = v44;
    strcpy((char *)&v62 - 24, "particleInit");
    *((unsigned char *)&v62 - 11) = 0;
    *((_WORD *)&v62 - 5) = -5120;
    *(&v62 - 1) = (uint64_t)v35;
    swift_bridgeObjectRetain();
    v45 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)(&v62 - 8), v40);
    v74 = 0;
    swift_bridgeObjectRelease();
    v46 = sub_1B67AFBF8(v63, v41, v43, v42, v31, 0x656C636974726170uLL, 0xEC00000074696E49, (uint64_t)v35);
    v48 = v47;
    swift_bridgeObjectRelease();
    v49 = v45;
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v75, type metadata accessor for ParticleInitScript);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    v50 = sub_1B62DE2C8(v72);
    swift_release();
    v76[3] = (uint64_t)&type metadata for ParticleInitScript.Info;
    v77 = &off_1F0F79510;
    v51 = sub_1B62C12C4(v76);
    *v51 = sub_1B6904BC8(v50);
    v51[1] = v52;
    v53 = off_1F0F79528();
    v55 = v54;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v76);
    v56 = v71;
    v57 = *v71;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v56 = v57;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v57 = sub_1B68C33D4(0, v57[2] + 1, 1, v57);
      *v56 = v57;
    }
    v60 = v57[2];
    v59 = v57[3];
    if (v60 >= v59 >> 1)
    {
      v57 = sub_1B68C33D4(v59 > 1, v60 + 1, 1, v57);
      *v56 = v57;
    }
    v57[2] = v60 + 1;
    v61 = &v57[5 * v60];
    v61[4] = v49;
    v61[5] = v46;
    v61[6] = v48;
    v61[7] = v53;
    v61[8] = v55;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1B67BF6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, void **a7)
{
  uint64_t v70 = a1;
  v71 = a7;
  LODWORD(v72) = a6;
  sub_1B63BCE08(0, qword_1EB97DC70, (uint64_t (*)(uint64_t))type metadata accessor for ScriptIndex, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  v17 = (uint64_t *)((char *)&v62 - v16);
  uint64_t updated = type metadata accessor for ParticleUpdateScript(0);
  double v20 = MEMORY[0x1F4188790](updated, v19);
  uint64_t v75 = (uint64_t)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = *(unsigned __int8 *)(a4 + 24);
  char v23 = (*(uint64_t (**)(double))(*a5 + 104))(v20);
  uint64_t v24 = 0x6C6174656DLL;
  if (v22 != 1) {
    uint64_t v24 = 0x7466697773;
  }
  if (v22) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = 99;
  }
  if (v22) {
    unint64_t v26 = 0xE500000000000000;
  }
  else {
    unint64_t v26 = 0xE100000000000000;
  }
  v73 = v17;
  if (v23)
  {
    unint64_t v27 = 0xE500000000000000;
    if (v23 == 1) {
      uint64_t v28 = 0x6C6174656DLL;
    }
    else {
      uint64_t v28 = 0x7466697773;
    }
  }
  else
  {
    unint64_t v27 = 0xE100000000000000;
    uint64_t v28 = 99;
  }
  if (v25 == v28 && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v29 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      return;
    }
  }
  sub_1B67C5C70(a4, v75, type metadata accessor for ParticleUpdateScript);
  unint64_t v30 = a5[5];
  unint64_t v68 = a5[6];
  unint64_t v69 = v30;
  swift_retain();
  uint64_t v31 = sub_1B62DE2C8(a3);
  swift_release();
  sub_1B67BA970(a4 + *(int *)(updated + 36), (uint64_t)v13);
  uint64_t v32 = type metadata accessor for ScriptIndex();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v13, 1, v32) == 1)
  {
    swift_retain();
    uint64_t v34 = sub_1B62DE2C8(a3);
    swift_release();
    v35 = v73;
    uint64_t *v73 = v34;
    swift_storeEnumTagMultiPayload();
    sub_1B67BAA04((uint64_t)v13);
  }
  else
  {
    v35 = v73;
    sub_1B67BAA90((uint64_t)v13, (uint64_t)v73);
  }
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v32);
  v37 = v74;
  uint64_t v36 = v75;
  uint64_t v38 = sub_1B68EFC44(1u, v76);
  if (v37)
  {
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v36, type metadata accessor for ParticleUpdateScript);
    if (v72) {
      swift_willThrow();
    }
    else {
  }
    }
  else
  {
    uint64_t v72 = a3;
    v64 = &v62;
    uint64_t v40 = v76[0];
    uint64_t v63 = v76[1];
    unint64_t v41 = v76[2];
    uint64_t v65 = v78;
    uint64_t v66 = v79;
    v67 = v77;
    MEMORY[0x1F4188790](v38, v39);
    unint64_t v42 = v68;
    unint64_t v43 = v69;
    *(&v62 - 6) = v69;
    *(&v62 - 5) = v42;
    *((_DWORD *)&v62 - 8) = v31;
    *((_DWORD *)&v62 - 7) = v44;
    strcpy((char *)&v62 - 24, "particleUpdate");
    *((unsigned char *)&v62 - 9) = -18;
    *(&v62 - 1) = (uint64_t)v35;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1B6803C00((void (*)(void *__return_ptr, void *))sub_1B67C5C58, (uint64_t)(&v62 - 8), v40);
    v74 = 0;
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_1B67AFBF8(v63, v41, v43, v42, v31, 0x656C636974726170uLL, 0xEE00657461647055, (uint64_t)v35);
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    uint64_t v49 = v45;
    swift_bridgeObjectRelease();
    sub_1B67BAA04((uint64_t)v35);
    sub_1B633A03C(v75, type metadata accessor for ParticleUpdateScript);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v50 = sub_1B62DE2C8(v72);
    swift_release();
    v76[3] = (uint64_t)&type metadata for ParticleUpdateScript.Info;
    v77 = &off_1F0F82E20;
    v51 = sub_1B62C12C4(v76);
    uint64_t *v51 = sub_1B6904CD8(v50);
    v51[1] = v52;
    uint64_t v53 = off_1F0F82E38();
    uint64_t v55 = v54;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v76);
    v56 = v71;
    v57 = *v71;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v56 = v57;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v57 = sub_1B68C33D4(0, v57[2] + 1, 1, v57);
      void *v56 = v57;
    }
    unint64_t v60 = v57[2];
    unint64_t v59 = v57[3];
    if (v60 >= v59 >> 1)
    {
      v57 = sub_1B68C33D4(v59 > 1, v60 + 1, 1, v57);
      void *v56 = v57;
    }
    v57[2] = v60 + 1;
    v61 = &v57[5 * v60];
    v61[4] = v49;
    v61[5] = v46;
    v61[6] = v48;
    v61[7] = v53;
    v61[8] = v55;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B67BFD34()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1B67BFD80(unint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000018;
      goto LABEL_5;
    case 2:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B67BFEE0);
    case 4:
      unint64_t v5 = 0;
      sub_1B6E328C8();
      sub_1B6E31948();
LABEL_5:
      sub_1B6E31948();
      sub_1B6E31948();
      a1 = v5;
      break;
    default:
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

uint64_t sub_1B67BFEF4(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      a1 = 0;
      break;
    case 2:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B67C0170);
    case 4:
      swift_bridgeObjectRelease();
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      a1 = 0;
      break;
    default:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  return a1;
}

uint64_t sub_1B67C0184(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 2:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B67C03DCLL);
    case 4:
      swift_bridgeObjectRelease();
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      break;
    default:
      swift_bridgeObjectRelease();
      break;
  }
  return 0;
}

uint64_t sub_1B67C03F0(uint64_t a1, uint64_t a2, char a3)
{
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  strcpy((char *)v6, "is_local ? ");
  BYTE5(v6[1]) = 0;
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  uint64_t v3 = v6[0];
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  strcpy((char *)v6, "is_local ? (");
  HIWORD(v6[1]) = -5120;
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  switch(a3)
  {
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v6[0];
      break;
    case 2:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B67C073CLL);
    case 4:
      swift_bridgeObjectRelease();
      sub_1B6E328C8();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v3 = 0;
      break;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  return v3;
}

unint64_t sub_1B67C0750(unint64_t a1, uint64_t a2, char a3)
{
  unint64_t v3 = 0xD000000000000022;
  switch(a3)
  {
    case 1:
      return v3;
    case 2:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B67C0884);
    case 3:
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD00000000000003BLL;
      break;
    case 4:
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD00000000000004ALL;
      break;
    default:
      swift_bridgeObjectRetain();
      unint64_t v3 = a1;
      break;
  }
  return v3;
}

uint64_t sub_1B67C0898(unint64_t a1)
{
  if (a1 >> 60 != 7)
  {
    sub_1B6E32BE8();
    __break(1u);
    JUMPOUT(0x1B67C09D8);
  }
  uint64_t result = 0x3165727574786574;
  switch(*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x21))
  {
    case 1:
      uint64_t result = 0x3265727574786574;
      break;
    case 2:
      uint64_t result = 0x3365727574786574;
      break;
    case 3:
      uint64_t result = 0x4365727574786574;
      break;
    case 5:
      uint64_t result = 0x3265727574786574;
      break;
    case 6:
      uint64_t result = 0x64326874706564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B67C09F4(uint64_t a1, char a2)
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v351 = MEMORY[0x1E4FBC860];
  uint64_t v347 = sub_1B6355ED4(a1);
  if (v347)
  {
    char v341 = a2;
    swift_bridgeObjectRetain();
    unint64_t v5 = 0;
    v6 = (unsigned char *)(a1 + 56);
    while (2)
    {
      unint64_t v11 = *((void *)v6 - 3);
      if (*v6) {
        unint64_t v12 = v5;
      }
      else {
        unint64_t v12 = *((void *)v6 - 1);
      }
      switch(v11 >> 60)
      {
        case 0uLL:
          int v66 = *(unsigned __int8 *)(v11 + 16);
          sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
          uint64_t v67 = swift_allocObject();
          uint64_t v68 = sub_1B68C0624(v67, 1);
          unint64_t v70 = 0xD000000000000014;
          if (!v66) {
            unint64_t v70 = 0xD000000000000012;
          }
          unint64_t v71 = 0x80000001B6F36270;
          if (v66) {
            unint64_t v71 = 0x80000001B6F36250;
          }
          *unint64_t v69 = v70;
          v69[1] = v71;
          v69[2] = 0;
          v69[3] = 0;
          nullsub_1(v68);
          uint64_t v73 = v72;
          sub_1B67C5060();
          uint64_t v74 = swift_allocObject();
          uint64_t v75 = sub_1B68D6DD0(v74, 1);
          void *v76 = v73;
          nullsub_1(v75);
          uint64_t v78 = v77;
          swift_retain_n();
          uint64_t v79 = sub_1B67BB4AC(v78);
          swift_bridgeObjectRelease();
          uint64_t v80 = swift_allocObject();
          uint64_t v81 = sub_1B68D6DD0(v80, 1);
          uint64_t *v82 = v79;
          goto LABEL_93;
        case 3uLL:
        case 4uLL:
          unint64_t v349 = v12;
          v350[0] = 0xD000000000000012;
          v350[1] = 0x80000001B6F36290;
          sub_1B62C6AA8(v11);
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          uint64_t v13 = v350[0];
          uint64_t v14 = v350[1];
          sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
          uint64_t v15 = swift_allocObject();
          uint64_t v16 = sub_1B68C0624(v15, 1);
          void *v17 = v13;
          v17[1] = v14;
          v17[2] = 0;
          v17[3] = 0;
          nullsub_1(v16);
          uint64_t v19 = v18;
          sub_1B67C5060();
          uint64_t v20 = swift_allocObject();
          uint64_t v21 = sub_1B68D6DD0(v20, 1);
          *int v22 = v19;
          nullsub_1(v21);
          uint64_t v24 = v23;
          uint64_t v25 = (void *)sub_1B6964C68(0);
          v350[0] = v25;
          unint64_t v26 = *(void *)(v24 + 32);
          swift_bridgeObjectRetain();
          unint64_t v349 = v26;
          sub_1B6D48238(&v349, &v348);
          uint64_t v27 = v348;
          uint64_t v28 = sub_1B6355ECC(v348);
          uint64_t v29 = sub_1B6355ECC((uint64_t)v25) + v28;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v350[0] = v25;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v29 > v25[3] >> 1)
          {
            if (v25[2] <= v29) {
              uint64_t v31 = v29;
            }
            else {
              uint64_t v31 = v25[2];
            }
            uint64_t v25 = sub_1B68C3500(isUniquelyReferenced_nonNull_native, v31, 1, v25);
            v350[0] = v25;
          }
          uint64_t v32 = v25[2];
          if (!sub_1B6355ED4(v27)) {
            goto LABEL_20;
          }
          if (v28 < 0) {
            goto LABEL_169;
          }
          unint64_t v33 = (unint64_t)&v25[4 * v32 + 4];
          if (v27 + 32 < v33 + 32 * v28 && v33 < v27 + 32 + 32 * v28) {
            goto LABEL_169;
          }
          swift_arrayInitWithCopy();
          if (v28) {
            v25[2] += v28;
          }
LABEL_20:
          uint64_t v34 = swift_bridgeObjectRelease();
          nullsub_1(v34);
          swift_bridgeObjectRelease_n();
          goto LABEL_92;
        case 7uLL:
          unsigned __int8 v117 = *(unsigned char *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x21);
          sub_1B62C6AA8(*((void *)v6 - 3));
          swift_retain();
          sub_1B67B61C0(v117);
          v350[0] = 0;
          v350[1] = 0xE000000000000000;
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          strcpy((char *)v350, "vfx_sampler");
          HIDWORD(v350[1]) = -352321536;
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          unint64_t v349 = v12;
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          uint64_t v163 = v350[0];
          uint64_t v164 = v350[1];
          sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
          uint64_t v165 = swift_allocObject();
          uint64_t v166 = sub_1B68C0624(v165, 1);
          void *v167 = v163;
          v167[1] = v164;
          v167[2] = 0;
          v167[3] = 0;
          nullsub_1(v166);
          uint64_t v169 = v168;
          sub_1B67C5060();
          uint64_t v170 = swift_allocObject();
          uint64_t v81 = sub_1B68D6DD0(v170, 1);
          void *v171 = v169;
LABEL_93:
          nullsub_1(v81);
          uint64_t v162 = sub_1B67BB4AC(v172);
          goto LABEL_129;
        case 8uLL:
          if (*(unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x20) >= 2u)
          {
            sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
            uint64_t v138 = swift_allocObject();
            uint64_t v139 = sub_1B68C0624(v138, 1);
            void *v140 = 0x656C636974726170;
            v140[1] = 0xE900000000000073;
            v140[2] = 0;
            v140[3] = 0;
            nullsub_1(v139);
            uint64_t v142 = v141;
            sub_1B67C5060();
            uint64_t v143 = swift_allocObject();
            uint64_t v144 = sub_1B68D6DD0(v143, 1);
            void *v145 = v142;
            nullsub_1(v144);
            uint64_t v147 = v146;
            swift_retain_n();
            uint64_t v89 = sub_1B67BB4AC(v147);
            swift_bridgeObjectRelease();
          }
          else
          {
            v350[0] = 0;
            v350[1] = 0xE000000000000000;
            sub_1B62C6AA8(v11);
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            unint64_t v349 = v12;
            strcpy((char *)v350, "emitter_");
            BYTE1(v350[1]) = 0;
            WORD1(v350[1]) = 0;
            HIDWORD(v350[1]) = -402653184;
            sub_1B6E33098();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            uint64_t v90 = v350[0];
            uint64_t v91 = v350[1];
            sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
            uint64_t v92 = swift_allocObject();
            uint64_t v93 = sub_1B68C0624(v92, 1);
            void *v94 = v90;
            v94[1] = v91;
            v94[2] = 0;
            v94[3] = 0;
            nullsub_1(v93);
            uint64_t v96 = v95;
            sub_1B67C5060();
            uint64_t v97 = swift_allocObject();
            uint64_t v98 = sub_1B68D6DD0(v97, 1);
            void *v99 = v96;
            nullsub_1(v98);
            uint64_t v101 = v100;
            v102 = (void *)sub_1B6964C68(0);
            v350[0] = v102;
            unint64_t v103 = *(void *)(v101 + 32);
            swift_bridgeObjectRetain();
            unint64_t v349 = v103;
            sub_1B6D48238(&v349, &v348);
            uint64_t v104 = v348;
            uint64_t v105 = sub_1B6355ECC(v348);
            uint64_t v106 = sub_1B6355ECC((uint64_t)v102) + v105;
            char v107 = swift_isUniquelyReferenced_nonNull_native();
            v350[0] = v102;
            if ((v107 & 1) == 0 || v106 > v102[3] >> 1)
            {
              if (v102[2] <= v106) {
                uint64_t v108 = v106;
              }
              else {
                uint64_t v108 = v102[2];
              }
              v102 = sub_1B68C3500(v107, v108, 1, v102);
              v350[0] = v102;
            }
            uint64_t v109 = v102[2];
            if (sub_1B6355ED4(v104))
            {
              if (v105 < 0) {
                goto LABEL_169;
              }
              unint64_t v110 = (unint64_t)&v102[4 * v109 + 4];
              if (v104 + 32 < v110 + 32 * v105 && v110 < v104 + 32 + 32 * v105) {
                goto LABEL_169;
              }
              swift_arrayInitWithCopy();
              if (v105) {
                v102[2] += v105;
              }
            }
            uint64_t v111 = swift_bridgeObjectRelease();
            nullsub_1(v111);
            swift_bridgeObjectRelease_n();
            uint64_t v89 = v350[0];
          }
          sub_1B67C5060();
LABEL_77:
          uint64_t v148 = swift_allocObject();
          uint64_t v149 = sub_1B68D6DD0(v148, 1);
          uint64_t *v150 = v89;
          nullsub_1(v149);
          uint64_t v65 = v151;
LABEL_78:
          v152 = (void *)sub_1B6964C68(0);
          v350[0] = v152;
          unint64_t v153 = *(void *)(v65 + 32);
          swift_bridgeObjectRetain();
          unint64_t v349 = v153;
          sub_1B6D48238(&v349, &v348);
          uint64_t v154 = v348;
          uint64_t v155 = sub_1B6355ECC(v348);
          uint64_t v156 = sub_1B6355ECC((uint64_t)v152) + v155;
          char v157 = swift_isUniquelyReferenced_nonNull_native();
          v350[0] = v152;
          if ((v157 & 1) == 0 || v156 > v152[3] >> 1)
          {
            if (v152[2] <= v156) {
              uint64_t v158 = v156;
            }
            else {
              uint64_t v158 = v152[2];
            }
            v152 = sub_1B68C3500(v157, v158, 1, v152);
            v350[0] = v152;
          }
          uint64_t v159 = v152[2];
          if (sub_1B6355ED4(v154))
          {
            if (v155 < 0) {
              goto LABEL_169;
            }
            unint64_t v160 = (unint64_t)&v152[4 * v159 + 4];
            if (v154 + 32 < v160 + 32 * v155 && v160 < v154 + 32 + 32 * v155) {
              goto LABEL_169;
            }
            swift_arrayInitWithCopy();
            if (v155) {
              v152[2] += v155;
            }
          }
          uint64_t v161 = swift_bridgeObjectRelease();
          nullsub_1(v161);
          swift_bridgeObjectRelease_n();
          unint64_t v55 = v11;
          goto LABEL_91;
        case 9uLL:
          v350[0] = 0;
          v350[1] = 0xE000000000000000;
          sub_1B62C6AA8(v11);
          swift_retain();
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          unint64_t v349 = v12;
          strcpy((char *)v350, "particle_data_");
          HIBYTE(v350[1]) = -18;
          goto LABEL_43;
        case 0xBuLL:
          v350[0] = 0xD000000000000012;
          v350[1] = 0x80000001B6F36290;
          unint64_t v349 = v12;
          sub_1B62C6AA8(v11);
          swift_retain();
LABEL_43:
          sub_1B6E33098();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          uint64_t v83 = v350[0];
          uint64_t v84 = v350[1];
          sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
          uint64_t v85 = swift_allocObject();
          uint64_t v86 = sub_1B68C0624(v85, 1);
          void *v87 = v83;
          v87[1] = v84;
          v87[2] = 0;
          v87[3] = 0;
          nullsub_1(v86);
          uint64_t v89 = v88;
          sub_1B67C5060();
          goto LABEL_77;
        case 0xCuLL:
          sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
          uint64_t v56 = swift_allocObject();
          uint64_t v57 = sub_1B68C0624(v56, 1);
          void *v58 = 0x735F6D6F646E6172;
          v58[1] = 0xEB00000000646565;
          v58[2] = 0;
          v58[3] = 0;
          nullsub_1(v57);
          uint64_t v60 = v59;
          sub_1B67C5060();
          uint64_t v61 = swift_allocObject();
          uint64_t v62 = sub_1B68D6DD0(v61, 1);
          *uint64_t v63 = v60;
          nullsub_1(v62);
          uint64_t v65 = v64;
          swift_retain_n();
          goto LABEL_78;
        case 0xDuLL:
          unint64_t v112 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v113 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
          unint64_t v345 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v346 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          char v114 = *(unsigned char *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
          switch(v114)
          {
            case 1:
              uint64_t v344 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
              switch(v112)
              {
                case 0uLL:
                  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
                  uint64_t v213 = swift_allocObject();
                  uint64_t v214 = sub_1B68C0624(v213, 1);
                  void *v215 = 0xD000000000000013;
                  unint64_t v216 = 0x80000001B6F36230;
                  goto LABEL_117;
                case 1uLL:
                  unint64_t v340 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
                  if (v341)
                  {
                    char v240 = sub_1B6E334B8();
                    swift_retain_n();
                    swift_bridgeObjectRelease();
                    if (v240) {
                      unint64_t v241 = 0xD000000000000049;
                    }
                    else {
                      unint64_t v241 = 0xD00000000000007DLL;
                    }
                    if (v240) {
                      unint64_t v242 = 0x80000001B6F361E0;
                    }
                    else {
                      unint64_t v242 = 0x80000001B6F303C0;
                    }
                  }
                  else
                  {
                    swift_retain_n();
                    swift_bridgeObjectRelease();
                    unint64_t v241 = 0xD000000000000049;
                    unint64_t v242 = 0x80000001B6F361E0;
                  }
                  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
                  uint64_t v328 = swift_allocObject();
                  *(_OWORD *)(v328 + 16) = xmmword_1B6E77050;
                  *(void *)(v328 + 32) = v241;
                  *(void *)(v328 + 40) = v242;
                  sub_1B67C5060();
                  *(void *)(v328 + 48) = 0;
                  *(void *)(v328 + 56) = 0;
                  uint64_t v329 = swift_allocObject();
                  uint64_t v330 = sub_1B68D6DD0(v329, 1);
                  uint64_t *v331 = v328;
                  nullsub_1(v330);
                  uint64_t v268 = sub_1B6D48CF0(v332);
                  unint64_t v112 = v340;
                  goto LABEL_125;
                case 2uLL:
                  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
                  uint64_t v236 = swift_allocObject();
                  uint64_t v214 = sub_1B68C0624(v236, 1);
                  void *v215 = 0x69747265762E6F69;
                  uint64_t v237 = 0x3076752E6563;
                  goto LABEL_116;
                case 3uLL:
                  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
                  uint64_t v238 = swift_allocObject();
                  uint64_t v214 = sub_1B68C0624(v238, 1);
                  void *v215 = 0x69747265762E6F69;
                  uint64_t v237 = 0x3176752E6563;
                  goto LABEL_116;
                case 4uLL:
                  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
                  uint64_t v239 = swift_allocObject();
                  uint64_t v214 = sub_1B68C0624(v239, 1);
                  void *v215 = 0x69747265762E6F69;
                  uint64_t v237 = 0x3276752E6563;
                  goto LABEL_116;
                case 5uLL:
                  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
                  uint64_t v243 = swift_allocObject();
                  uint64_t v214 = sub_1B68C0624(v243, 1);
                  void *v215 = 0x69747265762E6F69;
                  uint64_t v237 = 0x3376752E6563;
LABEL_116:
                  unint64_t v216 = v237 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
LABEL_117:
                  v215[1] = v216;
                  v215[2] = 0;
                  v215[3] = 0;
                  nullsub_1(v214);
                  uint64_t v245 = v244;
                  sub_1B67C5060();
                  uint64_t v246 = swift_allocObject();
                  uint64_t v247 = sub_1B68D6DD0(v246, 1);
                  void *v248 = v245;
                  nullsub_1(v247);
                  uint64_t v250 = v249;
                  swift_retain_n();
                  uint64_t v251 = sub_1B67BB4AC(v250);
                  goto LABEL_124;
                case 6uLL:
                  sub_1B67C5060();
                  uint64_t v252 = swift_allocObject();
                  uint64_t v253 = sub_1B68D6DD0(v252, 1);
                  v255 = &unk_1F0F78090;
                  goto LABEL_121;
                case 7uLL:
                  sub_1B67C5060();
                  uint64_t v256 = swift_allocObject();
                  uint64_t v253 = sub_1B68D6DD0(v256, 1);
                  v255 = &unk_1F0F77850;
                  goto LABEL_121;
                case 8uLL:
                  sub_1B67C5060();
                  uint64_t v257 = swift_allocObject();
                  uint64_t v253 = sub_1B68D6DD0(v257, 1);
                  v255 = &unk_1F0F77B10;
LABEL_121:
                  void *v254 = v255;
                  nullsub_1(v253);
                  uint64_t v259 = v258;
                  sub_1B62C6AA8(v11);
                  swift_retain();
                  uint64_t v260 = v259;
                  break;
                default:
                  v350[0] = 0;
                  v350[1] = 0xE000000000000000;
                  sub_1B62C6AA8(v11);
                  sub_1B67C51E0(v346, v112, v345, v113, 1);
                  sub_1B62C6AA8(v11);
                  sub_1B67C51E0(v346, v112, v345, v113, 1);
                  sub_1B6E33468();
                  sub_1B665DE80();
                  sub_1B6E33468();
                  unint64_t v261 = v112;
                  uint64_t v262 = v350[0];
                  uint64_t v263 = v350[1];
                  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
                  uint64_t v264 = swift_allocObject();
                  *(_OWORD *)(v264 + 16) = xmmword_1B6E77050;
                  *(void *)(v264 + 32) = v262;
                  *(void *)(v264 + 40) = v263;
                  unint64_t v112 = v261;
                  sub_1B67C5060();
                  *(void *)(v264 + 48) = 0;
                  *(void *)(v264 + 56) = 0;
                  uint64_t v265 = swift_allocObject();
                  uint64_t v266 = sub_1B68D6DD0(v265, 1);
                  uint64_t *v267 = v264;
                  nullsub_1(v266);
                  break;
              }
              uint64_t v251 = sub_1B6D48CF0(v260);
LABEL_124:
              uint64_t v268 = v251;
LABEL_125:
              swift_bridgeObjectRelease();
              sub_1B67C5060();
              uint64_t v269 = swift_allocObject();
              uint64_t v270 = sub_1B68D6DD0(v269, 1);
              uint64_t *v271 = v268;
              nullsub_1(v270);
              uint64_t v196 = sub_1B67BB4AC(v272);
              unint64_t v210 = v345;
              uint64_t v208 = v346;
              unint64_t v209 = v112;
              uint64_t v113 = v344;
              uint64_t v211 = v344;
              char v212 = 1;
              goto LABEL_126;
            case 2:
              uint64_t v115 = (char)v346;
              v116 = &off_1E6145D40;
              goto LABEL_96;
            case 3:
              char v342 = *(unsigned char *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
              v350[0] = 0;
              v350[1] = 0xE000000000000000;
              sub_1B62C6AA8(v11);
              sub_1B67C51E0(v346, v112, v345, v113, 3);
              sub_1B62C6AA8(v11);
              sub_1B67C51E0(v346, v112, v345, v113, 3);
              swift_bridgeObjectRetain();
              sub_1B6E328C8();
              swift_bridgeObjectRelease();
              v350[0] = 0xD000000000000010;
              v350[1] = 0x80000001B6F36110;
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              uint64_t v197 = v350[0];
              uint64_t v198 = v350[1];
              sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
              uint64_t v199 = swift_allocObject();
              uint64_t v200 = sub_1B68C0624(v199, 1);
              void *v201 = v197;
              v201[1] = v198;
              v201[2] = 0;
              v201[3] = 0;
              nullsub_1(v200);
              uint64_t v203 = v202;
              sub_1B67C5060();
              uint64_t inited = swift_initStackObject();
              uint64_t v205 = sub_1B68D6DD0(inited, 1);
              void *v206 = v203;
              nullsub_1(v205);
              uint64_t v196 = sub_1B67BB4AC(v207);
              uint64_t v208 = v346;
              char v114 = v342;
              unint64_t v209 = v112;
              unint64_t v210 = v345;
              uint64_t v211 = v113;
              char v212 = 3;
LABEL_126:
              sub_1B67C511C(v208, v209, v210, v211, v212);
              goto LABEL_127;
            case 4:
              v350[0] = 0;
              v350[1] = 0xE000000000000000;
              sub_1B62C6AA8(v11);
              sub_1B62C6AA8(v11);
              sub_1B67C51E0(v346, v112, v345, v113, 4);
              sub_1B6E328C8();
              swift_bridgeObjectRelease();
              v350[0] = 0xD000000000000010;
              v350[1] = 0x80000001B6F36110;
              sub_1B6E31948();
              uint64_t v173 = v350[0];
              uint64_t v174 = v350[1];
              sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
              uint64_t v175 = swift_allocObject();
              uint64_t v176 = sub_1B68C0624(v175, 1);
              void *v177 = v173;
              v177[1] = v174;
              v177[2] = 0;
              v177[3] = 0;
              nullsub_1(v176);
              uint64_t v179 = v178;
              sub_1B67C5060();
              uint64_t v180 = swift_initStackObject();
              uint64_t v181 = sub_1B68D6DD0(v180, 1);
              void *v182 = v179;
              nullsub_1(v181);
              uint64_t v184 = sub_1B67BB4AC(v183);
              goto LABEL_97;
            case 5:
              switch((char)v346)
              {
                case 5:
                  sub_1B67C5060();
                  uint64_t v217 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v217, 1);
                  v220 = &unk_1F0F77A10;
                  goto LABEL_161;
                case 6:
                  sub_1B67C5060();
                  uint64_t v300 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v300, 1);
                  v220 = &unk_1F0F77A50;
                  goto LABEL_161;
                case 7:
                  sub_1B67C5060();
                  uint64_t v301 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v301, 1);
                  v220 = &unk_1F0F77A90;
                  goto LABEL_161;
                case 8:
                  sub_1B67C5060();
                  uint64_t v302 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v302, 1);
                  v220 = &unk_1F0F77AD0;
                  goto LABEL_161;
                case 9:
                  sub_1B67C5060();
                  uint64_t v303 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v303, 1);
                  v220 = &unk_1F0F77B50;
                  goto LABEL_161;
                case 10:
                  sub_1B67C5060();
                  uint64_t v304 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v304, 1);
                  v220 = &unk_1F0F77B90;
                  goto LABEL_161;
                case 11:
                  sub_1B67C5060();
                  uint64_t v305 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v305, 1);
                  v220 = &unk_1F0F77BD0;
                  goto LABEL_161;
                case 12:
                  sub_1B67C5060();
                  uint64_t v306 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v306, 1);
                  v220 = &unk_1F0F77C10;
                  goto LABEL_161;
                case 13:
                  sub_1B67C5060();
                  uint64_t v307 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v307, 1);
                  v220 = &unk_1F0F77CD0;
                  goto LABEL_161;
                case 14:
                  sub_1B67C5060();
                  uint64_t v308 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v308, 1);
                  v220 = &unk_1F0F77C50;
                  goto LABEL_161;
                case 15:
                  sub_1B67C5060();
                  uint64_t v309 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v309, 1);
                  v220 = &unk_1F0F77C90;
                  goto LABEL_161;
                case 16:
                  sub_1B67C5060();
                  uint64_t v310 = swift_initStackObject();
                  uint64_t v218 = sub_1B68D6DD0(v310, 1);
                  v220 = &unk_1F0F77D50;
                  goto LABEL_161;
                case 17:
                  sub_1B67C5060();
                  uint64_t v311 = swift_initStackObject();
                  uint64_t v218 = sub_1B68D6DD0(v311, 1);
                  v220 = &unk_1F0F77D90;
                  goto LABEL_161;
                case 18:
                  v350[0] = 0;
                  v350[1] = 0xE000000000000000;
                  sub_1B62C6AA8(v11);
                  swift_retain();
                  sub_1B6E328C8();
                  sub_1B6E33468();
                  sub_1B665DE80();
                  sub_1B6E33468();
                  unint64_t v312 = v112;
                  uint64_t v313 = v350[0];
                  uint64_t v314 = v350[1];
                  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
                  uint64_t v315 = swift_allocObject();
                  *(_OWORD *)(v315 + 16) = xmmword_1B6E77050;
                  *(void *)(v315 + 32) = v313;
                  *(void *)(v315 + 40) = v314;
                  unint64_t v112 = v312;
                  sub_1B67C5060();
                  *(void *)(v315 + 48) = 0;
                  *(void *)(v315 + 56) = 0;
                  uint64_t v316 = swift_initStackObject();
                  uint64_t v298 = sub_1B68D6DD0(v316, 1);
                  uint64_t *v317 = v315;
                  goto LABEL_158;
                case 19:
                  sub_1B67C5060();
                  uint64_t v291 = swift_allocObject();
                  uint64_t v218 = sub_1B68D6DD0(v291, 1);
                  v220 = &unk_1F0F77D10;
                  goto LABEL_161;
                case 20:
                  sub_1B67C5060();
                  uint64_t v319 = swift_initStackObject();
                  uint64_t v218 = sub_1B68D6DD0(v319, 1);
                  v220 = &unk_1F0F77E10;
                  goto LABEL_161;
                case 21:
                  sub_1B67C5060();
                  uint64_t v292 = swift_initStackObject();
                  uint64_t v218 = sub_1B68D6DD0(v292, 1);
                  v220 = &unk_1F0F77E50;
                  goto LABEL_161;
                case 22:
                  sub_1B67C5060();
                  uint64_t v320 = swift_initStackObject();
                  uint64_t v218 = sub_1B68D6DD0(v320, 1);
                  v220 = &unk_1F0F77E90;
LABEL_161:
                  void *v219 = v220;
                  nullsub_1(v218);
                  uint64_t v322 = v321;
                  sub_1B62C6AA8(v11);
                  swift_retain();
                  uint64_t v318 = v322;
                  break;
                default:
                  sub_1B62C6AA8(v11);
                  swift_retain();
                  unint64_t v293 = sub_1B67BFD80(0xD00000000000002DLL, 0x80000001B6F361B0, v346);
                  uint64_t v295 = v294;
                  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
                  uint64_t v296 = swift_allocObject();
                  *(_OWORD *)(v296 + 16) = xmmword_1B6E77050;
                  *(void *)(v296 + 32) = v293;
                  *(void *)(v296 + 40) = v295;
                  sub_1B67C5060();
                  *(void *)(v296 + 48) = 0;
                  *(void *)(v296 + 56) = 0;
                  uint64_t v297 = swift_allocObject();
                  uint64_t v298 = sub_1B68D6DD0(v297, 1);
                  uint64_t *v299 = v296;
LABEL_158:
                  nullsub_1(v298);
                  break;
              }
              uint64_t v323 = sub_1B6D48CF0(v318);
              swift_bridgeObjectRelease();
              sub_1B67C5060();
              uint64_t v324 = swift_initStackObject();
              uint64_t v325 = sub_1B68D6DD0(v324, 1);
              uint64_t *v326 = v323;
              nullsub_1(v325);
              uint64_t v196 = sub_1B6D48CF0(v327);
              swift_bridgeObjectRelease();
              break;
            case 6:
              char v343 = *(unsigned char *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
              if (!(v345 | v112 | v346 | v113)) {
                goto LABEL_168;
              }
              sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
              uint64_t v221 = swift_allocObject();
              uint64_t v222 = sub_1B68C0624(v221, 1);
              void *v223 = 0x6F6C6F632E74756FLL;
              v223[1] = 0xE900000000000072;
              v223[2] = 0;
              v223[3] = 0;
              nullsub_1(v222);
              uint64_t v225 = v224;
              sub_1B67C5060();
              uint64_t v226 = swift_allocObject();
              uint64_t v227 = sub_1B68D6DD0(v226, 1);
              void *v228 = v225;
              nullsub_1(v227);
              uint64_t v230 = v229;
              swift_retain_n();
              uint64_t v231 = sub_1B67BB4AC(v230);
              swift_bridgeObjectRelease();
              uint64_t v232 = swift_allocObject();
              uint64_t v233 = sub_1B68D6DD0(v232, 1);
              uint64_t *v234 = v231;
              nullsub_1(v233);
              uint64_t v196 = sub_1B67BB4AC(v235);
              swift_bridgeObjectRelease();
              char v114 = v343;
              break;
            default:
              uint64_t v115 = (char)v346;
              v116 = &off_1E6145D00;
LABEL_96:
              v185 = v116[v115];
              sub_1B67C5060();
              uint64_t v186 = swift_allocObject();
              uint64_t v187 = sub_1B68D6DD0(v186, 1);
              void *v188 = v185;
              nullsub_1(v187);
              uint64_t v190 = v189;
              sub_1B62C6AA8(v11);
              swift_retain();
              uint64_t v191 = sub_1B6D48CF0(v190);
              swift_bridgeObjectRelease();
              uint64_t v192 = swift_allocObject();
              uint64_t v193 = sub_1B68D6DD0(v192, 1);
              uint64_t *v194 = v191;
              nullsub_1(v193);
              uint64_t v184 = sub_1B6D48CF0(v195);
LABEL_97:
              uint64_t v196 = v184;
LABEL_127:
              swift_bridgeObjectRelease();
              break;
          }
          sub_1B67C5060();
          uint64_t v273 = swift_initStackObject();
          uint64_t v274 = sub_1B68D6DD0(v273, 1);
          uint64_t *v275 = v196;
          nullsub_1(v274);
          uint64_t v162 = sub_1B67BB4AC(v276);
          sub_1B67C511C(v346, v112, v345, v113, v114);
LABEL_129:
          swift_bridgeObjectRelease();
          sub_1B62C6A70(v11);
          goto LABEL_130;
        case 0xFuLL:
          if (v11 == 0xF000000000000000)
          {
            sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
            uint64_t v35 = swift_allocObject();
            uint64_t v36 = sub_1B68C0624(v35, 1);
            strcpy(v37, "script_context");
            v37[15] = -18;
            *((void *)v37 + 2) = 0;
            *((void *)v37 + 3) = 0;
            nullsub_1(v36);
            uint64_t v39 = v38;
            sub_1B67C5060();
            uint64_t v40 = swift_allocObject();
            uint64_t v41 = sub_1B68D6DD0(v40, 1);
            *unint64_t v42 = v39;
            nullsub_1(v41);
            uint64_t v44 = v43;
            uint64_t v45 = (void *)sub_1B6964C68(0);
            v350[0] = v45;
            unint64_t v46 = *(void *)(v44 + 32);
            swift_bridgeObjectRetain();
            unint64_t v349 = v46;
            sub_1B6D48238(&v349, &v348);
            uint64_t v47 = v348;
            uint64_t v48 = sub_1B6355ECC(v348);
            uint64_t v49 = sub_1B6355ECC((uint64_t)v45) + v48;
            char v50 = swift_isUniquelyReferenced_nonNull_native();
            v350[0] = v45;
            if ((v50 & 1) == 0 || v49 > v45[3] >> 1)
            {
              if (v45[2] <= v49) {
                uint64_t v51 = v49;
              }
              else {
                uint64_t v51 = v45[2];
              }
              uint64_t v45 = sub_1B68C3500(v50, v51, 1, v45);
              v350[0] = v45;
            }
            uint64_t v52 = v45[2];
            if (sub_1B6355ED4(v47))
            {
              if (v48 < 0) {
                goto LABEL_169;
              }
              unint64_t v53 = (unint64_t)&v45[4 * v52 + 4];
              if (v47 + 32 < v53 + 32 * v48 && v53 < v47 + 32 + 32 * v48) {
                goto LABEL_169;
              }
              swift_arrayInitWithCopy();
              if (v48) {
                v45[2] += v48;
              }
            }
            uint64_t v54 = swift_bridgeObjectRelease();
            nullsub_1(v54);
            swift_bridgeObjectRelease_n();
            unint64_t v55 = 0xF000000000000000;
          }
          else
          {
            if (v11 != 0xF000000000000008)
            {
LABEL_167:
              v350[0] = 0;
              v350[1] = 0xE000000000000000;
              sub_1B62C6AA8(v11);
              sub_1B62C6AA8(v11);
              sub_1B6E328C8();
              unint64_t v349 = v11;
              sub_1B6E32B18();
              sub_1B6E31948();
              goto LABEL_168;
            }
            sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
            uint64_t v118 = swift_allocObject();
            uint64_t v119 = sub_1B68C0624(v118, 1);
            void *v120 = 6580592;
            v120[1] = 0xE300000000000000;
            v120[2] = 0;
            v120[3] = 0;
            nullsub_1(v119);
            uint64_t v122 = v121;
            sub_1B67C5060();
            uint64_t v123 = swift_allocObject();
            uint64_t v124 = sub_1B68D6DD0(v123, 1);
            void *v125 = v122;
            nullsub_1(v124);
            uint64_t v127 = v126;
            v128 = (void *)sub_1B6964C68(0);
            v350[0] = v128;
            unint64_t v129 = *(void *)(v127 + 32);
            swift_bridgeObjectRetain();
            unint64_t v349 = v129;
            sub_1B6D48238(&v349, &v348);
            uint64_t v130 = v348;
            uint64_t v131 = sub_1B6355ECC(v348);
            uint64_t v132 = sub_1B6355ECC((uint64_t)v128) + v131;
            char v133 = swift_isUniquelyReferenced_nonNull_native();
            v350[0] = v128;
            if ((v133 & 1) == 0 || v132 > v128[3] >> 1)
            {
              if (v128[2] <= v132) {
                uint64_t v134 = v132;
              }
              else {
                uint64_t v134 = v128[2];
              }
              v128 = sub_1B68C3500(v133, v134, 1, v128);
              v350[0] = v128;
            }
            uint64_t v135 = v128[2];
            if (sub_1B6355ED4(v130))
            {
              if (v131 < 0
                || (unint64_t v136 = (unint64_t)&v128[4 * v135 + 4], v130 + 32 < v136 + 32 * v131)
                && v136 < v130 + 32 + 32 * v131)
              {
                while (1)
                {
LABEL_169:
                  sub_1B6E32C88();
                  __break(1u);
LABEL_168:
                  sub_1B6E32BE8();
                  __break(1u);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  __break(1u);
                }
              }
              swift_arrayInitWithCopy();
              if (v131) {
                v128[2] += v131;
              }
            }
            uint64_t v137 = swift_bridgeObjectRelease();
            nullsub_1(v137);
            swift_bridgeObjectRelease_n();
            unint64_t v55 = 0xF000000000000008;
          }
LABEL_91:
          sub_1B62C6A70(v55);
LABEL_92:
          uint64_t v162 = v350[0];
LABEL_130:
          sub_1B67C5060();
          uint64_t v277 = swift_initStackObject();
          uint64_t v278 = sub_1B68D6DD0(v277, 1);
          uint64_t *v279 = v162;
          nullsub_1(v278);
          uint64_t v281 = v280;
          v282 = (void *)sub_1B6964C68(0);
          v350[0] = v282;
          unint64_t v283 = *(void *)(v281 + 32);
          swift_bridgeObjectRetain();
          unint64_t v349 = v283;
          sub_1B6D48238(&v349, &v348);
          uint64_t v284 = v348;
          uint64_t v285 = sub_1B6355ECC(v348);
          uint64_t v286 = sub_1B6355ECC((uint64_t)v282) + v285;
          char v287 = swift_isUniquelyReferenced_nonNull_native();
          v350[0] = v282;
          if ((v287 & 1) == 0 || v286 > v282[3] >> 1)
          {
            if (v282[2] <= v286) {
              uint64_t v288 = v286;
            }
            else {
              uint64_t v288 = v282[2];
            }
            v282 = sub_1B68C3500(v287, v288, 1, v282);
            v350[0] = v282;
          }
          uint64_t v289 = v282[2];
          if (sub_1B6355ED4(v284))
          {
            if (v285 < 0) {
              goto LABEL_169;
            }
            unint64_t v290 = (unint64_t)&v282[4 * v289 + 4];
            if (v284 + 32 < v290 + 32 * v285 && v290 < v284 + 32 + 32 * v285) {
              goto LABEL_169;
            }
            swift_arrayInitWithCopy();
            if (v285) {
              v282[2] += v285;
            }
          }
          ++v5;
          uint64_t v7 = swift_bridgeObjectRelease();
          nullsub_1(v7);
          swift_bridgeObjectRelease_n();
          uint64_t v8 = v350[0];
          sub_1B69FFC1C();
          uint64_t v9 = *(void *)(v351 + 16);
          sub_1B69FFD20(v9);
          uint64_t v10 = sub_1B69FFE38(v9, v8);
          nullsub_1(v10);
          sub_1B62C6A70(v11);
          v6 += 32;
          if (v347 != v5) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v4 = v351;
          break;
        default:
          goto LABEL_167;
      }
      break;
    }
  }
  uint64_t v333 = sub_1B67BB4AC(v4);
  swift_bridgeObjectRelease();
  sub_1B67C5060();
  uint64_t v334 = swift_initStackObject();
  uint64_t v335 = sub_1B68D6DD0(v334, 1);
  uint64_t *v336 = v333;
  nullsub_1(v335);
  uint64_t v338 = sub_1B67BB4AC(v337);
  swift_bridgeObjectRelease();
  return v338;
}

uint64_t sub_1B67C2D6C(char a1, char a2, char a3, uint64_t a4, void *a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = sub_1B68C0624(v13, 1);
    *uint64_t v15 = 0xD000000000000038;
    v15[1] = 0x80000001B6F35DD0;
    v15[2] = 0;
    v15[3] = 0;
    nullsub_1(v14);
    uint64_t v17 = v16;
    sub_1B67C5060();
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = sub_1B68D6DD0(v18, 1);
    *uint64_t v20 = v17;
    nullsub_1(v19);
    uint64_t v22 = sub_1B67BB4AC(v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = sub_1B6964C68(0);
  }
  uint64_t v389 = v22;
  char v393 = a2;
  if (!a2)
  {
    sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = sub_1B68C0624(v39, 1);
    *uint64_t v41 = 0xD00000000000003ELL;
    v41[1] = 0x80000001B6F35CD0;
    v41[2] = 0;
    v41[3] = 0;
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = sub_1B68C0624(v42, 1);
    *uint64_t v44 = 0xD000000000000013;
    v44[1] = 0x80000001B6F35A30;
    v44[2] = 0;
    v44[3] = 0;
    if (a1)
    {
      uint64_t v45 = swift_allocObject();
      uint64_t v46 = sub_1B68C0624(v45, 1);
      *uint64_t v47 = 0xD00000000000004CLL;
      v47[1] = 0x80000001B6F35D10;
      v47[2] = 0;
      v47[3] = 0;
      nullsub_1(v46);
      uint64_t v49 = v48;
      sub_1B67C5060();
      uint64_t v50 = swift_allocObject();
      uint64_t v51 = sub_1B68D6DD0(v50, 1);
      *uint64_t v52 = v49;
      nullsub_1(v51);
      uint64_t v38 = sub_1B67BB4AC(v53);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = sub_1B6964C68(0);
    }
    nullsub_1(v40);
    uint64_t v75 = v79;
    nullsub_1(v43);
    uint64_t v77 = v80;
    sub_1B67C5060();
    uint64_t inited = swift_allocObject();
    goto LABEL_19;
  }
  if (a2 == 1)
  {
    sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = sub_1B68C0624(v23, 1);
    *uint64_t v25 = 0xD000000000000044;
    v25[1] = 0x80000001B6F359E0;
    v25[2] = 0;
    v25[3] = 0;
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = sub_1B68C0624(v26, 1);
    *uint64_t v28 = 0xD000000000000013;
    v28[1] = 0x80000001B6F35A30;
    v28[2] = 0;
    v28[3] = 0;
    if (a1)
    {
      uint64_t v29 = swift_allocObject();
      uint64_t v30 = sub_1B68C0624(v29, 1);
      *uint64_t v31 = 0xD00000000000002ALL;
      v31[1] = 0x80000001B6F35CA0;
      v31[2] = 0;
      v31[3] = 0;
      nullsub_1(v30);
      uint64_t v33 = v32;
      sub_1B67C5060();
      uint64_t v34 = swift_allocObject();
      uint64_t v35 = sub_1B68D6DD0(v34, 1);
      *uint64_t v36 = v33;
      nullsub_1(v35);
      uint64_t v38 = sub_1B67BB4AC(v37);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = sub_1B6964C68(0);
    }
    nullsub_1(v24);
    uint64_t v75 = v74;
    nullsub_1(v27);
    uint64_t v77 = v76;
    sub_1B67C5060();
    uint64_t inited = swift_initStackObject();
LABEL_19:
    uint64_t v72 = sub_1B68D6DD0(inited, 3);
    *uint64_t v81 = v75;
    v81[1] = v77;
    v81[2] = v38;
    goto LABEL_20;
  }
  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = sub_1B68C0624(v54, 1);
  unint64_t v57 = 0xD000000000000026;
  if (a3) {
    unint64_t v57 = 0xD000000000000035;
  }
  unint64_t v58 = 0x80000001B6F35D60;
  if (a3) {
    unint64_t v58 = 0x80000001B6F35D90;
  }
  unint64_t *v56 = v57;
  v56[1] = v58;
  v56[2] = 0;
  v56[3] = 0;
  nullsub_1(v55);
  uint64_t v60 = v59;
  sub_1B67C5060();
  uint64_t v61 = swift_allocObject();
  uint64_t v62 = sub_1B68D6DD0(v61, 1);
  *uint64_t v63 = v60;
  nullsub_1(v62);
  uint64_t v65 = sub_1B67BB4AC(v64);
  swift_bridgeObjectRelease();
  uint64_t v66 = swift_allocObject();
  uint64_t v67 = sub_1B68C0624(v66, 1);
  *uint64_t v68 = 0;
  v68[1] = 0xE000000000000000;
  v68[2] = 0;
  v68[3] = 0;
  nullsub_1(v67);
  uint64_t v70 = v69;
  uint64_t v71 = swift_allocObject();
  uint64_t v72 = sub_1B68D6DD0(v71, 2);
  uint64_t *v73 = v65;
  v73[1] = v70;
LABEL_20:
  nullsub_1(v72);
  uint64_t v391 = sub_1B67BB4AC(v82);
  swift_bridgeObjectRelease();
  uint64_t v83 = sub_1B6964D08(0);
  uint64_t v407 = v83;
  uint64_t v400 = sub_1B6355ED4(a4);
  uint64_t v392 = a4;
  if (!v400)
  {
LABEL_142:
    uint64_t v221 = sub_1B67BB4AC(v83);
    swift_bridgeObjectRelease();
    unsigned __int8 v222 = v393;
    uint64_t v399 = v221;
    if (v393 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v223 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if ((v223 & 1) == 0)
      {
        if (v393)
        {
          char v232 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          if ((v232 & 1) == 0)
          {
            uint64_t v397 = sub_1B6964C68(0);
            goto LABEL_152;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
        uint64_t v233 = swift_allocObject();
        uint64_t v234 = sub_1B68C0624(v233, 1);
        *uint64_t v235 = 0xD000000000000018;
        v235[1] = 0x80000001B6F35C00;
        v235[2] = 0;
        v235[3] = 0;
        nullsub_1(v234);
        uint64_t v237 = v236;
        uint64_t v238 = swift_allocObject();
        uint64_t v239 = sub_1B68C0624(v238, 1);
        *char v240 = 0xD000000000000018;
        v240[1] = 0x80000001B6F35C20;
        v240[2] = 0;
        v240[3] = 0;
        nullsub_1(v239);
        uint64_t v242 = v241;
        uint64_t v401 = (uint64_t)a5;
        unint64_t v402 = a6;
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        uint64_t v243 = swift_allocObject();
        uint64_t v244 = sub_1B68C0624(v243, 1);
        *uint64_t v245 = a5;
        v245[1] = a6;
        v245[2] = 0;
        v245[3] = 0;
        nullsub_1(v244);
        uint64_t v247 = v246;
        sub_1B67C5060();
        uint64_t v248 = swift_allocObject();
        uint64_t v230 = sub_1B68D6DD0(v248, 3);
        *uint64_t v249 = v237;
        v249[1] = v242;
        v249[2] = v247;
LABEL_151:
        nullsub_1(v230);
        uint64_t v397 = sub_1B67BB4AC(v250);
        swift_bridgeObjectRelease();
LABEL_152:
        swift_bridgeObjectRetain();
        sub_1B6D49008(a7, a8, a4, v393);
        uint64_t v252 = v251;
        swift_bridgeObjectRelease();
        sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
        uint64_t v253 = swift_allocObject();
        uint64_t v395 = sub_1B68C0624(v253, 1);
        uint64_t *v254 = a7;
        v254[1] = v252;
        v254[2] = 0;
        v254[3] = 0;
        uint64_t v255 = sub_1B6964D08(0);
        uint64_t v407 = v255;
        if (v400)
        {
          swift_bridgeObjectRetain();
          uint64_t v256 = a4;
          uint64_t v257 = 0;
          uint64_t v258 = (unsigned char *)(v256 + 40);
          do
          {
            unint64_t v262 = *((void *)v258 - 1);
            if (v262 >> 60 == 9)
            {
              char v263 = *v258;
              swift_retain_n();
              uint64_t v264 = sub_1B6964C68(0);
              if ((v263 & 2) != 0)
              {
                sub_1B6E328C8();
                swift_bridgeObjectRelease();
                unint64_t v402 = 0xEA00000000002E73;
                swift_retain();
                sub_1B68EB284(v262);
                sub_1B62C6A70(v262);
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                uint64_t v406 = v257;
                sub_1B6E33098();
                sub_1B6E31948();
                swift_bridgeObjectRelease();
                sub_1B6E31948();
                uint64_t v265 = swift_allocObject();
                uint64_t v266 = sub_1B68C0624(v265, 1);
                void *v267 = 0x656C636974726170;
                v267[1] = 0xEA00000000002E73;
                v267[2] = 0;
                v267[3] = 0;
                nullsub_1(v266);
                uint64_t v269 = v268;
                sub_1B67C5060();
                uint64_t v270 = swift_allocObject();
                uint64_t v271 = sub_1B68D6DD0(v270, 2);
                *uint64_t v272 = v264;
                v272[1] = v269;
                nullsub_1(v271);
                uint64_t v274 = v273;
                uint64_t v401 = sub_1B6964C68(0);
                swift_bridgeObjectRetain();
                uint64_t v406 = *(void *)(v274 + 32);
                sub_1B6D48238(&v406, &v405);
                uint64_t v275 = v405;
                uint64_t v276 = sub_1B6355ECC(v405);
                uint64_t v277 = (void *)v401;
                uint64_t v278 = sub_1B6355ECC(v401) + v276;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v278 > *(void *)(v401 + 24) >> 1)
                {
                  if (*(void *)(v401 + 16) <= v278) {
                    uint64_t v280 = v278;
                  }
                  else {
                    uint64_t v280 = *(void *)(v401 + 16);
                  }
                  uint64_t v277 = sub_1B68C3500(isUniquelyReferenced_nonNull_native, v280, 1, (void *)v401);
                  uint64_t v401 = (uint64_t)v277;
                }
                uint64_t v281 = v277[2];
                if (sub_1B6355ED4(v275))
                {
                  if (v276 < 0) {
                    goto LABEL_236;
                  }
                  unint64_t v282 = (unint64_t)&v277[4 * v281 + 4];
                  if (v275 + 32 < v282 + 32 * v276 && v282 < v275 + 32 + 32 * v276) {
                    goto LABEL_236;
                  }
                  swift_arrayInitWithCopy();
                  if (v276) {
                    v277[2] += v276;
                  }
                }
                uint64_t v283 = swift_bridgeObjectRelease();
                nullsub_1(v283);
                uint64_t v406 = *(void *)(v274 + 40);
                sub_1B6D48238(&v406, &v405);
                uint64_t v284 = v405;
                uint64_t v285 = sub_1B6355ECC(v405);
                uint64_t v286 = (void *)v401;
                uint64_t v287 = sub_1B6355ECC(v401) + v285;
                int v288 = swift_isUniquelyReferenced_nonNull_native();
                if (!v288 || v287 > *(void *)(v401 + 24) >> 1)
                {
                  if (*(void *)(v401 + 16) <= v287) {
                    uint64_t v289 = v287;
                  }
                  else {
                    uint64_t v289 = *(void *)(v401 + 16);
                  }
                  uint64_t v286 = sub_1B68C3500(v288, v289, 1, (void *)v401);
                  uint64_t v401 = (uint64_t)v286;
                }
                uint64_t v290 = v286[2];
                if (sub_1B6355ED4(v284))
                {
                  if (v285 < 0) {
                    goto LABEL_236;
                  }
                  unint64_t v291 = (unint64_t)&v286[4 * v290 + 4];
                  if (v284 + 32 < v291 + 32 * v285 && v291 < v284 + 32 + 32 * v285) {
                    goto LABEL_236;
                  }
                  swift_arrayInitWithCopy();
                  if (v285) {
                    v286[2] += v285;
                  }
                }
                uint64_t v292 = swift_bridgeObjectRelease();
                nullsub_1(v292);
                swift_bridgeObjectRelease_n();
                uint64_t v264 = v401;
              }
              sub_1B67C5060();
              uint64_t v293 = swift_allocObject();
              uint64_t v294 = sub_1B68D6DD0(v293, 1);
              *uint64_t v295 = v264;
              nullsub_1(v294);
              uint64_t v297 = sub_1B67BB4AC(v296);
              sub_1B62C6A70(v262);
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_1B62C6AA8(*((void *)v258 - 1));
              uint64_t v298 = sub_1B6964C68(0);
              sub_1B67C5060();
              uint64_t v299 = swift_initStackObject();
              uint64_t v300 = sub_1B68D6DD0(v299, 1);
              *uint64_t v301 = v298;
              nullsub_1(v300);
              uint64_t v303 = v302;
              uint64_t v304 = (void *)sub_1B6964C68(0);
              uint64_t v401 = (uint64_t)v304;
              uint64_t v305 = *(void *)(v303 + 32);
              swift_bridgeObjectRetain();
              uint64_t v406 = v305;
              sub_1B6D48238(&v406, &v405);
              uint64_t v306 = v405;
              uint64_t v307 = sub_1B6355ECC(v405);
              uint64_t v308 = sub_1B6355ECC((uint64_t)v304) + v307;
              char v309 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v401 = (uint64_t)v304;
              if ((v309 & 1) == 0 || v308 > v304[3] >> 1)
              {
                if (v304[2] <= v308) {
                  uint64_t v310 = v308;
                }
                else {
                  uint64_t v310 = v304[2];
                }
                uint64_t v304 = sub_1B68C3500(v309, v310, 1, v304);
                uint64_t v401 = (uint64_t)v304;
              }
              uint64_t v311 = v304[2];
              if (sub_1B6355ED4(v306))
              {
                if (v307 < 0) {
                  goto LABEL_236;
                }
                unint64_t v312 = (unint64_t)&v304[4 * v311 + 4];
                if (v306 + 32 < v312 + 32 * v307 && v312 < v306 + 32 + 32 * v307) {
                  goto LABEL_236;
                }
                swift_arrayInitWithCopy();
                if (v307) {
                  v304[2] += v307;
                }
              }
              uint64_t v313 = swift_bridgeObjectRelease();
              nullsub_1(v313);
              swift_bridgeObjectRelease_n();
              uint64_t v297 = v401;
            }
            sub_1B67C5060();
            uint64_t v314 = swift_initStackObject();
            uint64_t v315 = sub_1B68D6DD0(v314, 1);
            *uint64_t v316 = v297;
            nullsub_1(v315);
            uint64_t v318 = v317;
            uint64_t v319 = (void *)sub_1B6964C68(0);
            uint64_t v401 = (uint64_t)v319;
            uint64_t v320 = *(void *)(v318 + 32);
            swift_bridgeObjectRetain();
            uint64_t v406 = v320;
            sub_1B6D48238(&v406, &v405);
            uint64_t v321 = v405;
            uint64_t v322 = sub_1B6355ECC(v405);
            uint64_t v323 = sub_1B6355ECC((uint64_t)v319) + v322;
            char v324 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v401 = (uint64_t)v319;
            if ((v324 & 1) == 0 || v323 > v319[3] >> 1)
            {
              if (v319[2] <= v323) {
                uint64_t v325 = v323;
              }
              else {
                uint64_t v325 = v319[2];
              }
              uint64_t v319 = sub_1B68C3500(v324, v325, 1, v319);
              uint64_t v401 = (uint64_t)v319;
            }
            uint64_t v326 = v319[2];
            if (sub_1B6355ED4(v321))
            {
              if (v322 < 0) {
                goto LABEL_236;
              }
              unint64_t v327 = (unint64_t)&v319[4 * v326 + 4];
              if (v321 + 32 < v327 + 32 * v322 && v327 < v321 + 32 + 32 * v322) {
                goto LABEL_236;
              }
              swift_arrayInitWithCopy();
              if (v322) {
                v319[2] += v322;
              }
            }
            ++v257;
            uint64_t v259 = swift_bridgeObjectRelease();
            nullsub_1(v259);
            swift_bridgeObjectRelease_n();
            sub_1B69FFC1C();
            uint64_t v260 = *(void *)(v407 + 16);
            sub_1B69FFD20(v260);
            uint64_t v261 = sub_1B69FFE38(v260, v401);
            nullsub_1(v261);
            sub_1B62C6A70(v262);
            v258 += 32;
          }
          while (v400 != v257);
          a4 = v392;
          swift_bridgeObjectRelease();
          uint64_t v328 = v407;
          unsigned __int8 v222 = v393;
        }
        else
        {
          uint64_t v328 = v255;
        }
        uint64_t v329 = sub_1B67BB4AC(v328);
        swift_bridgeObjectRelease();
        if (v222)
        {
          char v330 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          if ((v330 & 1) == 0)
          {
            uint64_t v346 = sub_1B6964C68(0);
            int v347 = v222;
            if (!v222) {
              goto LABEL_226;
            }
LABEL_224:
            if (v347 == 1)
            {
              swift_bridgeObjectRelease();
              goto LABEL_227;
            }
LABEL_226:
            char v361 = sub_1B6E334B8();
            swift_bridgeObjectRelease();
            if ((v361 & 1) == 0)
            {
              uint64_t v369 = MEMORY[0x1E4FBC860];
              goto LABEL_229;
            }
LABEL_227:
            uint64_t v401 = 0;
            unint64_t v402 = 0xE000000000000000;
            sub_1B6E328C8();
            sub_1B6E33468();
            sub_1B665DE80();
            sub_1B6E33468();
            uint64_t v362 = v401;
            unint64_t v363 = v402;
            uint64_t v364 = swift_allocObject();
            *(_OWORD *)(v364 + 16) = xmmword_1B6E77050;
            *(void *)(v364 + 32) = v362;
            *(void *)(v364 + 40) = v363;
            sub_1B67C5060();
            *(void *)(v364 + 48) = 0;
            *(void *)(v364 + 56) = 0;
            uint64_t v365 = swift_initStackObject();
            uint64_t v366 = sub_1B68D6DD0(v365, 3);
            uint64_t *v367 = v364;
            v367[1] = (uint64_t)&unk_1F0F780D0;
            v367[2] = (uint64_t)&unk_1F0F78110;
            nullsub_1(v366);
            uint64_t v369 = sub_1B6D48CF0(v368);
            swift_bridgeObjectRelease();
LABEL_229:
            int v370 = v222;
            if (v222)
            {
              uint64_t v371 = v397;
              if (v370 == 1)
              {
                sub_1B67C5060();
                uint64_t v372 = swift_initStackObject();
                v373 = &unk_1F0F78190;
              }
              else
              {
                sub_1B67C5060();
                uint64_t v372 = swift_initStackObject();
                v373 = (void *)MEMORY[0x1E4FBC860];
              }
            }
            else
            {
              sub_1B67C5060();
              uint64_t v372 = swift_initStackObject();
              v373 = &unk_1F0F78150;
              uint64_t v371 = v397;
            }
            uint64_t v374 = sub_1B68D6DD0(v372, 1);
            void *v375 = v373;
            nullsub_1(v374);
            uint64_t v377 = sub_1B6D48CF0(v376);
            swift_bridgeObjectRelease();
            nullsub_1(v395);
            uint64_t v379 = v378;
            sub_1B67C5060();
            uint64_t v380 = swift_initStackObject();
            uint64_t v381 = sub_1B68D6DD0(v380, 9);
            uint64_t *v382 = v389;
            v382[1] = v391;
            v382[2] = v399;
            v382[3] = v371;
            v382[4] = v379;
            v382[5] = v329;
            v382[6] = v346;
            v382[7] = v369;
            v382[8] = v377;
            nullsub_1(v381);
            uint64_t v384 = sub_1B6D48CF0(v383);
            swift_bridgeObjectRelease();
            return v384;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v331 = swift_allocObject();
        uint64_t v332 = sub_1B68C0624(v331, 1);
        *uint64_t v333 = 0xD000000000000022;
        v333[1] = 0x80000001B6F35B20;
        v333[2] = 0;
        v333[3] = 0;
        uint64_t v334 = swift_allocObject();
        uint64_t v335 = sub_1B68C0624(v334, 1);
        void *v336 = 0xD000000000000029;
        v336[1] = 0x80000001B6F35B50;
        v336[2] = 0;
        v336[3] = 0;
        if (v400)
        {
          swift_bridgeObjectRetain();
          uint64_t v337 = (unsigned char *)(a4 + 56);
          while (1)
          {
            char v338 = *(v337 - 16);
            uint64_t v339 = *((void *)v337 - 1);
            char v340 = *v337;
            uint64_t v401 = *((void *)v337 - 3);
            LOBYTE(v402) = v338;
            uint64_t v403 = v339;
            char v404 = v340;
            if (sub_1B67B6290((unint64_t *)&v401)) {
              break;
            }
            v337 += 32;
            if (!--v400)
            {
              swift_bridgeObjectRelease();
              goto LABEL_219;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v345 = sub_1B6964C68(0);
        }
        else
        {
LABEL_219:
          sub_1B67C5060();
          uint64_t v341 = swift_initStackObject();
          uint64_t v342 = sub_1B68D6DD0(v341, 1);
          *char v343 = &unk_1F0F781D0;
          nullsub_1(v342);
          uint64_t v345 = sub_1B6D48CF0(v344);
          swift_bridgeObjectRelease();
        }
        nullsub_1(v332);
        uint64_t v349 = v348;
        nullsub_1(v335);
        uint64_t v351 = v350;
        uint64_t v352 = swift_allocObject();
        uint64_t v353 = sub_1B68C0624(v352, 1);
        void *v354 = 0xD000000000000052;
        v354[1] = 0x80000001B6F35B80;
        v354[2] = 0;
        v354[3] = 0;
        nullsub_1(v353);
        uint64_t v356 = v355;
        sub_1B67C5060();
        uint64_t v357 = swift_allocObject();
        uint64_t v358 = sub_1B68D6DD0(v357, 4);
        void *v359 = v349;
        v359[1] = v351;
        v359[2] = v345;
        v359[3] = v356;
        nullsub_1(v358);
        uint64_t v346 = sub_1B67BB4AC(v360);
        swift_bridgeObjectRelease();
        int v347 = v222;
        if (!v222) {
          goto LABEL_226;
        }
        goto LABEL_224;
      }
    }
    uint64_t v401 = (uint64_t)a5;
    unint64_t v402 = a6;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
    uint64_t v224 = swift_allocObject();
    uint64_t v225 = sub_1B68C0624(v224, 1);
    *uint64_t v226 = a5;
    v226[1] = a6;
    v226[2] = 0;
    v226[3] = 0;
    nullsub_1(v225);
    uint64_t v228 = v227;
    sub_1B67C5060();
    uint64_t v229 = swift_allocObject();
    uint64_t v230 = sub_1B68D6DD0(v229, 1);
    *uint64_t v231 = v228;
    goto LABEL_151;
  }
  uint64_t v386 = a8;
  swift_bridgeObjectRetain();
  uint64_t v84 = a4;
  uint64_t v85 = 0;
  uint64_t v86 = (unsigned char *)(v84 + 56);
  while (1)
  {
    unint64_t v90 = *((void *)v86 - 3);
    if (*v86) {
      uint64_t v91 = v85;
    }
    else {
      uint64_t v91 = *((void *)v86 - 1);
    }
    if (v90 >> 60 != 9)
    {
      if (v90 >> 60 == 12)
      {
        sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
        uint64_t v92 = swift_allocObject();
        uint64_t v93 = sub_1B68C0624(v92, 1);
        void *v94 = 0xD00000000000003ALL;
        v94[1] = 0x80000001B6F35C60;
        v94[2] = 0;
        v94[3] = 0;
        nullsub_1(v93);
        uint64_t v96 = v95;
        sub_1B67C5060();
        uint64_t v97 = swift_allocObject();
        uint64_t v98 = sub_1B68D6DD0(v97, 1);
        void *v99 = v96;
        nullsub_1(v98);
        uint64_t v101 = v100;
        swift_retain_n();
        v102 = (void *)sub_1B6964C68(0);
        uint64_t v401 = (uint64_t)v102;
        uint64_t v103 = *(void *)(v101 + 32);
        swift_bridgeObjectRetain();
        uint64_t v406 = v103;
        sub_1B6D48238(&v406, &v405);
        uint64_t v104 = v405;
        uint64_t v105 = sub_1B6355ECC(v405);
        uint64_t v106 = sub_1B6355ECC((uint64_t)v102) + v105;
        char v107 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v401 = (uint64_t)v102;
        if ((v107 & 1) == 0 || v106 > v102[3] >> 1)
        {
          if (v102[2] <= v106) {
            uint64_t v108 = v106;
          }
          else {
            uint64_t v108 = v102[2];
          }
          v102 = sub_1B68C3500(v107, v108, 1, v102);
          uint64_t v401 = (uint64_t)v102;
        }
        uint64_t v109 = v102[2];
        if (sub_1B6355ED4(v104))
        {
          if (v105 < 0) {
            goto LABEL_236;
          }
          unint64_t v110 = (unint64_t)&v102[4 * v109 + 4];
          if (v104 + 32 < v110 + 32 * v105 && v110 < v104 + 32 + 32 * v105) {
            goto LABEL_236;
          }
          swift_arrayInitWithCopy();
          if (v105) {
            v102[2] += v105;
          }
        }
        uint64_t v111 = swift_bridgeObjectRelease();
        nullsub_1(v111);
        swift_bridgeObjectRelease_n();
        sub_1B62C6A70(v90);
      }
      else
      {
        sub_1B62C6AA8(*((void *)v86 - 3));
        uint64_t v116 = sub_1B6964C68(0);
        sub_1B67C5060();
        uint64_t v117 = swift_initStackObject();
        uint64_t v118 = sub_1B68D6DD0(v117, 1);
        *uint64_t v119 = v116;
        nullsub_1(v118);
        uint64_t v121 = v120;
        uint64_t v122 = (void *)sub_1B6964C68(0);
        uint64_t v401 = (uint64_t)v122;
        uint64_t v123 = *(void *)(v121 + 32);
        swift_bridgeObjectRetain();
        uint64_t v406 = v123;
        sub_1B6D48238(&v406, &v405);
        uint64_t v124 = v405;
        uint64_t v125 = sub_1B6355ECC(v405);
        uint64_t v126 = sub_1B6355ECC((uint64_t)v122) + v125;
        char v127 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v401 = (uint64_t)v122;
        if ((v127 & 1) == 0 || v126 > v122[3] >> 1)
        {
          if (v122[2] <= v126) {
            uint64_t v128 = v126;
          }
          else {
            uint64_t v128 = v122[2];
          }
          uint64_t v122 = sub_1B68C3500(v127, v128, 1, v122);
          uint64_t v401 = (uint64_t)v122;
        }
        uint64_t v129 = v122[2];
        if (sub_1B6355ED4(v124))
        {
          if (v125 < 0) {
            goto LABEL_236;
          }
          unint64_t v130 = (unint64_t)&v122[4 * v129 + 4];
          if (v124 + 32 < v130 + 32 * v125 && v130 < v124 + 32 + 32 * v125) {
            goto LABEL_236;
          }
          swift_arrayInitWithCopy();
          if (v125) {
            v122[2] += v125;
          }
        }
        uint64_t v131 = swift_bridgeObjectRelease();
        nullsub_1(v131);
        swift_bridgeObjectRelease_n();
      }
      uint64_t v132 = v401;
      goto LABEL_127;
    }
    char v112 = *(v86 - 16);
    int v113 = *(unsigned __int8 *)((v90 & 0xFFFFFFFFFFFFFFFLL) + 0x3C);
    sub_1B62C6AA8(*((void *)v86 - 3));
    sub_1B62C6AA8(v90);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B68EC9E4(v90);
    uint64_t v394 = v91;
    if (sub_1B6A94630(v114, 1u)) {
      uint64_t v115 = (v112 & 2) != 0 ? MEMORY[0x1E4FBB870] : MEMORY[0x1E4FBB2A0];
    }
    else {
      sub_1B68EC9E4(v90);
    }
    uint64_t v133 = sub_1B67B03DC(v115, 1);
    unint64_t v396 = v134;
    uint64_t v398 = v133;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v401 = 0x656C636974726170;
    unint64_t v402 = 0xEA00000000002E73;
    swift_retain();
    sub_1B68EB284(v90);
    sub_1B62C6A70(v90);
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    if (v113 != 5) {
      break;
    }
    uint64_t v135 = sub_1B6964C68(0);
LABEL_102:
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    unint64_t v402 = v396;
    sub_1B6E31948();
    uint64_t v406 = v394;
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
    uint64_t v179 = swift_allocObject();
    uint64_t v180 = sub_1B68C0624(v179, 1);
    *uint64_t v181 = v398;
    v181[1] = v396;
    v181[2] = 0;
    v181[3] = 0;
    nullsub_1(v180);
    uint64_t v183 = v182;
    sub_1B67C5060();
    uint64_t v184 = swift_allocObject();
    uint64_t v185 = sub_1B68D6DD0(v184, 2);
    *uint64_t v186 = v135;
    v186[1] = v183;
    nullsub_1(v185);
    uint64_t v188 = v187;
    uint64_t v401 = sub_1B6964C68(0);
    swift_bridgeObjectRetain();
    uint64_t v406 = *(void *)(v188 + 32);
    sub_1B6D48238(&v406, &v405);
    uint64_t v189 = v405;
    uint64_t v190 = sub_1B6355ECC(v405);
    uint64_t v191 = (void *)v401;
    uint64_t v192 = sub_1B6355ECC(v401) + v190;
    char v193 = swift_isUniquelyReferenced_nonNull_native();
    if ((v193 & 1) == 0 || v192 > *(void *)(v401 + 24) >> 1)
    {
      if (*(void *)(v401 + 16) <= v192) {
        uint64_t v194 = v192;
      }
      else {
        uint64_t v194 = *(void *)(v401 + 16);
      }
      uint64_t v191 = sub_1B68C3500(v193, v194, 1, (void *)v401);
      uint64_t v401 = (uint64_t)v191;
    }
    uint64_t v195 = v191[2];
    if (sub_1B6355ED4(v189))
    {
      if (v190 < 0) {
        goto LABEL_236;
      }
      unint64_t v196 = (unint64_t)&v191[4 * v195 + 4];
      if (v189 + 32 < v196 + 32 * v190 && v196 < v189 + 32 + 32 * v190) {
        goto LABEL_236;
      }
      swift_arrayInitWithCopy();
      if (v190) {
        v191[2] += v190;
      }
    }
    uint64_t v197 = swift_bridgeObjectRelease();
    nullsub_1(v197);
    uint64_t v406 = *(void *)(v188 + 40);
    sub_1B6D48238(&v406, &v405);
    uint64_t v198 = v405;
    uint64_t v199 = sub_1B6355ECC(v405);
    uint64_t v200 = (void *)v401;
    uint64_t v201 = sub_1B6355ECC(v401) + v199;
    int v202 = swift_isUniquelyReferenced_nonNull_native();
    if (!v202 || v201 > *(void *)(v401 + 24) >> 1)
    {
      if (*(void *)(v401 + 16) <= v201) {
        uint64_t v203 = v201;
      }
      else {
        uint64_t v203 = *(void *)(v401 + 16);
      }
      uint64_t v200 = sub_1B68C3500(v202, v203, 1, (void *)v401);
      uint64_t v401 = (uint64_t)v200;
    }
    uint64_t v204 = v200[2];
    if (sub_1B6355ED4(v198))
    {
      if (v199 < 0) {
        goto LABEL_236;
      }
      unint64_t v205 = (unint64_t)&v200[4 * v204 + 4];
      if (v198 + 32 < v205 + 32 * v199 && v205 < v198 + 32 + 32 * v199) {
        goto LABEL_236;
      }
      swift_arrayInitWithCopy();
      if (v199) {
        v200[2] += v199;
      }
    }
    uint64_t v206 = swift_bridgeObjectRelease();
    nullsub_1(v206);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v132 = v401;
    sub_1B62C6A70(v90);
LABEL_127:
    sub_1B67C5060();
    uint64_t v207 = swift_initStackObject();
    uint64_t v208 = sub_1B68D6DD0(v207, 1);
    *unint64_t v209 = v132;
    nullsub_1(v208);
    uint64_t v211 = v210;
    char v212 = (void *)sub_1B6964C68(0);
    uint64_t v401 = (uint64_t)v212;
    uint64_t v213 = *(void *)(v211 + 32);
    swift_bridgeObjectRetain();
    uint64_t v406 = v213;
    sub_1B6D48238(&v406, &v405);
    uint64_t v214 = v405;
    uint64_t v215 = sub_1B6355ECC(v405);
    uint64_t v216 = sub_1B6355ECC((uint64_t)v212) + v215;
    char v217 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v401 = (uint64_t)v212;
    if ((v217 & 1) == 0 || v216 > v212[3] >> 1)
    {
      if (v212[2] <= v216) {
        uint64_t v218 = v216;
      }
      else {
        uint64_t v218 = v212[2];
      }
      char v212 = sub_1B68C3500(v217, v218, 1, v212);
      uint64_t v401 = (uint64_t)v212;
    }
    uint64_t v219 = v212[2];
    if (sub_1B6355ED4(v214))
    {
      if (v215 < 0) {
        goto LABEL_236;
      }
      unint64_t v220 = (unint64_t)&v212[4 * v219 + 4];
      if (v214 + 32 < v220 + 32 * v215 && v220 < v214 + 32 + 32 * v215) {
        goto LABEL_236;
      }
      swift_arrayInitWithCopy();
      if (v215) {
        v212[2] += v215;
      }
    }
    ++v85;
    uint64_t v87 = swift_bridgeObjectRelease();
    nullsub_1(v87);
    swift_bridgeObjectRelease_n();
    sub_1B69FFC1C();
    uint64_t v88 = *(void *)(v407 + 16);
    sub_1B69FFD20(v88);
    uint64_t v89 = sub_1B69FFE38(v88, v401);
    nullsub_1(v89);
    sub_1B62C6A70(v90);
    v86 += 32;
    if (v400 == v85)
    {
      a4 = v392;
      swift_bridgeObjectRelease();
      uint64_t v83 = v407;
      a8 = v386;
      goto LABEL_142;
    }
  }
  sub_1B6E32738();
  if (swift_conformsToProtocol2())
  {
    if (swift_dynamicCastMetatype())
    {
      sub_1B67BFEF4(0x656C636974726170, 0xEA00000000002E73, v113);
      swift_bridgeObjectRelease();
      uint64_t v136 = sub_1B6964C68(0);
      sub_1B67C5060();
      uint64_t v137 = swift_allocObject();
      uint64_t v138 = sub_1B68D6DD0(v137, 1);
      *uint64_t v139 = v136;
      nullsub_1(v138);
      uint64_t v141 = v140;
      uint64_t v142 = (void *)sub_1B6964C68(0);
      uint64_t v401 = (uint64_t)v142;
      uint64_t v143 = *(void *)(v141 + 32);
      swift_bridgeObjectRetain();
      uint64_t v406 = v143;
      sub_1B6D48238(&v406, &v405);
      uint64_t v144 = v405;
      uint64_t v145 = sub_1B6355ECC(v405);
      uint64_t v146 = sub_1B6355ECC((uint64_t)v142) + v145;
      char v147 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v401 = (uint64_t)v142;
      if ((v147 & 1) == 0 || v146 > v142[3] >> 1)
      {
        if (v142[2] <= v146) {
          uint64_t v148 = v146;
        }
        else {
          uint64_t v148 = v142[2];
        }
        uint64_t v142 = sub_1B68C3500(v147, v148, 1, v142);
        uint64_t v401 = (uint64_t)v142;
      }
      uint64_t v149 = v142[2];
      if (sub_1B6355ED4(v144))
      {
        if (v145 < 0) {
          goto LABEL_236;
        }
        unint64_t v150 = (unint64_t)&v142[4 * v149 + 4];
        if (v144 + 32 < v150 + 32 * v145 && v150 < v144 + 32 + 32 * v145) {
          goto LABEL_236;
        }
        swift_arrayInitWithCopy();
        if (v145) {
          v142[2] += v145;
        }
      }
      uint64_t v151 = swift_bridgeObjectRelease();
      nullsub_1(v151);
      swift_bridgeObjectRelease_n();
      uint64_t v152 = v401;
      goto LABEL_89;
    }
    if (swift_dynamicCastMetatype())
    {
      sub_1B67C0184(0x656C636974726170, 0xEA00000000002E73, v113);
      swift_bridgeObjectRelease();
      uint64_t v153 = sub_1B6964C68(0);
      sub_1B67C5060();
      uint64_t v154 = swift_allocObject();
      uint64_t v155 = sub_1B68D6DD0(v154, 1);
      *uint64_t v156 = v153;
      nullsub_1(v155);
      uint64_t v158 = sub_1B67BB4AC(v157);
LABEL_88:
      uint64_t v152 = v158;
      swift_bridgeObjectRelease();
LABEL_89:
      sub_1B67C5060();
      uint64_t v164 = swift_allocObject();
      uint64_t v165 = sub_1B68D6DD0(v164, 1);
      *uint64_t v166 = v152;
      nullsub_1(v165);
      uint64_t v168 = v167;
      uint64_t v169 = (void *)sub_1B6964C68(0);
      uint64_t v401 = (uint64_t)v169;
      uint64_t v170 = *(void *)(v168 + 32);
      swift_bridgeObjectRetain();
      uint64_t v406 = v170;
      sub_1B6D48238(&v406, &v405);
      uint64_t v171 = v405;
      uint64_t v172 = sub_1B6355ECC(v405);
      uint64_t v173 = sub_1B6355ECC((uint64_t)v169) + v172;
      char v174 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v401 = (uint64_t)v169;
      if ((v174 & 1) == 0 || v173 > v169[3] >> 1)
      {
        if (v169[2] <= v173) {
          uint64_t v175 = v173;
        }
        else {
          uint64_t v175 = v169[2];
        }
        uint64_t v169 = sub_1B68C3500(v174, v175, 1, v169);
        uint64_t v401 = (uint64_t)v169;
      }
      uint64_t v176 = v169[2];
      if (sub_1B6355ED4(v171))
      {
        if (v172 < 0) {
          goto LABEL_236;
        }
        unint64_t v177 = (unint64_t)&v169[4 * v176 + 4];
        if (v171 + 32 < v177 + 32 * v172 && v177 < v171 + 32 + 32 * v172) {
          goto LABEL_236;
        }
        swift_arrayInitWithCopy();
        if (v172) {
          v169[2] += v172;
        }
      }
      uint64_t v178 = swift_bridgeObjectRelease();
      nullsub_1(v178);
      swift_bridgeObjectRelease_n();
      uint64_t v135 = v401;
      goto LABEL_102;
    }
    if (swift_dynamicCastMetatype())
    {
      char v159 = v113;
    }
    else if (swift_dynamicCastMetatype())
    {
      char v159 = v113;
    }
    else
    {
      if (!swift_dynamicCastMetatype() && !swift_dynamicCastMetatype())
      {
        if (!swift_dynamicCastMetatype()) {
          goto LABEL_237;
        }
        sub_1B67C0750(0x656C636974726170uLL, 0xEA00000000002E73, v113);
        goto LABEL_87;
      }
      char v159 = v113;
    }
    sub_1B67C03F0(0x656C636974726170, 0xEA00000000002E73, v159);
LABEL_87:
    swift_bridgeObjectRelease();
    sub_1B67C5060();
    uint64_t v160 = swift_allocObject();
    uint64_t v161 = sub_1B68D6DD0(v160, 1);
    *uint64_t v162 = MEMORY[0x1E4FBC860];
    nullsub_1(v161);
    uint64_t v158 = sub_1B6D48CF0(v163);
    goto LABEL_88;
  }
  __break(1u);
LABEL_236:
  sub_1B6E32C88();
  __break(1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __break(1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __break(1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_237:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E328C8();
  sub_1B6E33468();
  sub_1B67AFBB4();
  sub_1B6E33468();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

void sub_1B67C5060()
{
  if (!qword_1E9DD1DD0)
  {
    sub_1B67C5C0C(255, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1DD0);
    }
  }
}

uint64_t sub_1B67C50DC()
{
  sub_1B67C511C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x1F4186498](v0, 49, 7);
}

void sub_1B67C511C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3:
      swift_release();
      break;
    case 1:
      sub_1B67C5198(a1, a2, a3);
      break;
  }
}

void sub_1B67C5198(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2 >= 9)
  {
    swift_bridgeObjectRelease();
    sub_1B678FC34(a3);
  }
}

void sub_1B67C51E0(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3:
      swift_retain();
      break;
    case 1:
      sub_1B67C525C(a1, a2, a3);
      break;
  }
}

void sub_1B67C525C(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2 >= 9)
  {
    swift_bridgeObjectRetain();
    sub_1B67C52A4(a3);
  }
}

unint64_t sub_1B67C52A4(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B67C5300(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 64;
  do
  {
    v2 += 40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B67C5420()
{
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B67C5C0C(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 32) = 0;
  unint64_t v1 = v0 + 32;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0xE000000000000000;
  sub_1B67C5060();
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v0;
  *(void *)(inited + 40) = v2;
  uint64_t v4 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B68C3500(0, v4, 1, MEMORY[0x1E4FBC860]);
  v6 = v5;
  if (*(void *)(v0 + 16))
  {
    unint64_t v7 = (unint64_t)&v5[4 * v5[2] + 4];
    if (v1 < v7 + 32 * v4 && v7 < v1 + 32 * v4) {
      goto LABEL_18;
    }
    swift_arrayInitWithCopy();
    if (v4) {
      v6[2] += v4;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(inited + 40);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = v6[2];
  unint64_t v11 = v6[3];
  swift_bridgeObjectRetain();
  if (v10 + v9 > (uint64_t)(v11 >> 1))
  {
    if (v10 <= v10 + v9) {
      uint64_t v14 = v10 + v9;
    }
    else {
      uint64_t v14 = v10;
    }
    v6 = sub_1B68C3500(1, v14, 1, v6);
    if (!*(void *)(v8 + 16)) {
      goto LABEL_12;
    }
  }
  else if (!v9)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1B67C5C0C(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
    return (uint64_t)v6;
  }
  unint64_t v12 = (unint64_t)&v6[4 * v6[2] + 4];
  if (v8 + 32 >= v12 + 32 * v9 || v12 >= v8 + 32 + 32 * v9)
  {
    swift_arrayInitWithCopy();
    if (v9) {
      v6[2] += v9;
    }
    goto LABEL_12;
  }
LABEL_18:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

unint64_t sub_1B67C57E0(uint64_t a1)
{
  unint64_t result = 0xD00000000000007DLL;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = a1 + 64;
    do
    {
      v4 += 40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      sub_1B6E31948();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return 0xD00000000000007DLL;
  }
  return result;
}

uint64_t sub_1B67C5914(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1B67BAAF4(0, a2, a3);
  if (a4 >= 1060)
  {
    if ((unint64_t)a4 >= 0x7D1)
    {
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
      return result;
    }
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
  }
  sub_1B633AF88();
  if (sub_1B6E32678())
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B67C5B68()
{
  unint64_t result = qword_1EB97D490;
  if (!qword_1EB97D490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97D490);
  }
  return result;
}

void sub_1B67C5BBC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1B67C5C0C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B67C5C58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B67C5CD8(a1, a2);
}

uint64_t sub_1B67C5C70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B67C5CD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B6CEDAE0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), a2);
}

unsigned char *storeEnumTagSinglePayload for MetalScriptCodeGen.FunctionKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67C5DCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetalScriptCodeGen.FunctionKind()
{
  return &type metadata for MetalScriptCodeGen.FunctionKind;
}

unint64_t sub_1B67C5E08()
{
  unint64_t result = qword_1E9DD01A8;
  if (!qword_1E9DD01A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD01A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleSphereRenderer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 36)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 29);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSphereRenderer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 36) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 36) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 29) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSphereRenderer()
{
  return &type metadata for ParticleSphereRenderer;
}

uint64_t sub_1B67C5F08@<X0>(__int16 a1@<W0>, uint64_t a2@<X8>)
{
  sub_1B6BA4978(a1, (uint64_t)v4);
  return sub_1B62CA210((uint64_t)v4, a2, &qword_1EB97EB68);
}

void *sub_1B67C5F58(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = (void *)a3[1];
  swift_retain();
  sub_1B62E9D50(v7, (uint64_t)v19);
  swift_release();
  sub_1B62CA210((uint64_t)v19, (uint64_t)v20, qword_1EB97EA20);
  if (v21)
  {
    long long v8 = xmmword_1B6E4F370;
    long long v9 = xmmword_1B6E4F2E0;
    long long v10 = xmmword_1B6E4F320;
    long long v11 = xmmword_1B6E4F300;
  }
  else
  {
    long long v11 = v20[0];
    long long v10 = v20[1];
    long long v9 = v20[2];
    long long v8 = v20[3];
  }
  unsigned int v12 = *(_DWORD *)(v3 + 24);
  if (v12 - 11 > 0xF4)
  {
    float v15 = *(float *)(v3 + 16);
    if (v15 > -1.0) {
      float v16 = *(float *)(v3 + 16);
    }
    else {
      float v16 = -1.0;
    }
    if (v15 >= 0.0) {
      float v13 = v16;
    }
    else {
      float v13 = -1.0;
    }
  }
  else
  {
    float v13 = 1.0 / (float)v12;
    float v14 = *(float *)(v3 + 16);
    if (v14 >= 0.0 && v14 > v13) {
      float v13 = *(float *)(v3 + 16);
    }
  }
  int v17 = *(_DWORD *)(v3 + 32);
  v22[0] = v11;
  v22[1] = v10;
  v22[2] = v9;
  v22[3] = v8;
  float v23 = v13;
  int v24 = v17;
  return sub_1B6969110(v22, a1, a2, a3, v3);
}

uint64_t sub_1B67C6088()
{
  return *(unsigned __int8 *)(v0 + 30);
}

uint64_t sub_1B67C6090(uint64_t result)
{
  *(unsigned char *)(v1 + 30) = result;
  return result;
}

uint64_t sub_1B67C6098()
{
  return *(unsigned __int8 *)(v0 + 31);
}

uint64_t sub_1B67C60A0(uint64_t result)
{
  *(unsigned char *)(v1 + 31) = result;
  return result;
}

uint64_t sub_1B67C60A8(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  *(unsigned char *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

double (*sub_1B67C60B8())(void)
{
  return nullsub_1;
}

void sub_1B67C60D8(float a1)
{
  *(float *)(v1 + 16) = a1;
}

uint64_t sub_1B67C60E0(uint64_t result)
{
  *(unsigned char *)(v1 + 20) = result;
  return result;
}

double (*sub_1B67C60E8())(void)
{
  return nullsub_1;
}

uint64_t sub_1B67C6108(uint64_t result)
{
  *(_DWORD *)(v1 + 24) = result;
  return result;
}

uint64_t sub_1B67C6110()
{
  return *(unsigned __int8 *)(v0 + 28);
}

uint64_t sub_1B67C6118(uint64_t result)
{
  *(unsigned char *)(v1 + 28) = result;
  return result;
}

double (*sub_1B67C6120())(void)
{
  return nullsub_1;
}

uint64_t sub_1B67C6140()
{
  return *(unsigned __int8 *)(v0 + 29);
}

uint64_t sub_1B67C6148(uint64_t result)
{
  *(unsigned char *)(v1 + 29) = result;
  return result;
}

float sub_1B67C6150()
{
  return *(float *)(v0 + 32);
}

void sub_1B67C6158(float a1)
{
  *(float *)(v1 + 32) = a1;
}

unint64_t sub_1B67C6160()
{
  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

float sub_1B67C6180()
{
  return *(float *)(v0 + 16);
}

uint64_t sub_1B67C6188()
{
  return *(unsigned __int8 *)(v0 + 20);
}

uint64_t sub_1B67C6190()
{
  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v0 = sub_1B62FFCAC(7);
  *(void *)(v0 + 88) = sub_1B67C5F08;
  *(void *)(v0 + 96) = 0;
  swift_release();
  return v0;
}

uint64_t sub_1B67C61F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = 4;
  *(void *)(a2 + 32) = 14;
  return result;
}

void *sub_1B67C6204(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B67C5F58(a1, a2, a3);
}

double sub_1B67C6240@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 12) = 1;
  *(_DWORD *)(a1 + 16) = -1082130432;
  *(unsigned char *)(a1 + 20) = 0;
  *(_DWORD *)(a1 + 24) = 256;
  *(void *)&double result = 16843008;
  *(void *)(a1 + 28) = 16843008;
  return result;
}

uint64_t sub_1B67C627C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A8444();
  sub_1B6E33A88();
  unsigned int v6 = *(_DWORD *)(v2 + 28);
  unsigned int v5 = *(_DWORD *)(v2 + 32);
  unint64_t v10 = __PAIR64__(v5, v6);
  sub_1B62A7DBC(0, (unint64_t *)&unk_1E9DD01B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (v3) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a2, v8);
  }
  if (v6 == -1 && !v5)
  {
    unint64_t v10 = *(void *)(v2 + 36);
    sub_1B6E32FA8();
  }
  sub_1B6E32F58();
  LOBYTE(v10) = 2;
  sub_1B6E32F58();
  sub_1B630C4C0(v2, (uint64_t)v11);
  sub_1B630C4C0((uint64_t)v11, (uint64_t)&v10);
  sub_1B66C6810();
  sub_1B6E32FA8();
  LOBYTE(v10) = 4;
  sub_1B6E32F78();
  LOBYTE(v10) = 8;
  sub_1B6E32F78();
  LOBYTE(v10) = *(unsigned char *)(v2 + 24);
  sub_1B66C5F1C();
  sub_1B6E32FA8();
  LOBYTE(v10) = 6;
  sub_1B6E33018();
  LOBYTE(v10) = *(unsigned char *)(v2 + 68);
  sub_1B66C5C48();
  sub_1B6E32FA8();
  LOBYTE(v10) = 9;
  return sub_1B6E32F58();
}

uint64_t sub_1B67C659C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A8444();
  sub_1B6E33A88();
  uint64_t v8 = 0xFFFFFFFFLL;
  sub_1B62A7DBC(0, (unint64_t *)&unk_1E9DD01B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (v3) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a2, v6);
  }
  uint64_t v8 = *(void *)v2;
  sub_1B6E32FA8();
  sub_1B6E32F58();
  LOBYTE(v8) = 2;
  sub_1B6E32F58();
  sub_1B630C4C0(v2 + 8, (uint64_t)v9);
  sub_1B630C4C0((uint64_t)v9, (uint64_t)&v8);
  sub_1B66C6810();
  sub_1B6E32FA8();
  LOBYTE(v8) = 4;
  sub_1B6E32F78();
  LOBYTE(v8) = 8;
  sub_1B6E32F78();
  LOBYTE(v8) = *(unsigned char *)(v2 + 22);
  sub_1B66C5F1C();
  sub_1B6E32FA8();
  LOBYTE(v8) = 6;
  sub_1B6E33018();
  LOBYTE(v8) = *(unsigned char *)(v2 + 28);
  sub_1B66C5C48();
  sub_1B6E32FA8();
  LOBYTE(v8) = 9;
  return sub_1B6E32F58();
}

uint64_t sub_1B67C68A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B67C68C0(a1, a2);
}

uint64_t sub_1B67C68C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A8444();
  sub_1B6E33A88();
  uint64_t v8 = 0xFFFFFFFFLL;
  sub_1B62A7DBC(0, (unint64_t *)&unk_1E9DD01B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (v3) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a2, v6);
  }
  uint64_t v8 = *(void *)v2;
  sub_1B6E32FA8();
  sub_1B6E32F58();
  LOBYTE(v8) = 2;
  sub_1B6E32F58();
  sub_1B630C4C0(v2 + 8, (uint64_t)v9);
  sub_1B630C4C0((uint64_t)v9, (uint64_t)&v8);
  sub_1B66C6810();
  sub_1B6E32FA8();
  LOBYTE(v8) = 4;
  sub_1B6E32F78();
  LOBYTE(v8) = 8;
  sub_1B6E32F78();
  LOBYTE(v8) = *(unsigned char *)(v2 + 20);
  sub_1B66C5F1C();
  sub_1B6E32FA8();
  LOBYTE(v8) = 6;
  sub_1B6E33018();
  LOBYTE(v8) = *(unsigned char *)(v2 + 28);
  sub_1B66C5C48();
  sub_1B6E32FA8();
  LOBYTE(v8) = 9;
  return sub_1B6E32F58();
}

uint64_t sub_1B67C6BCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A8444();
  sub_1B6E33A88();
  uint64_t v8 = 0xFFFFFFFFLL;
  sub_1B62A7DBC(0, (unint64_t *)&unk_1E9DD01B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (v3) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a2, v6);
  }
  uint64_t v8 = *(void *)(v2 + 36);
  sub_1B6E32FA8();
  sub_1B6E32F58();
  LOBYTE(v8) = 2;
  sub_1B6E32F58();
  sub_1B630C4C0(v2, (uint64_t)v9);
  sub_1B630C4C0((uint64_t)v9, (uint64_t)&v8);
  sub_1B66C6810();
  sub_1B6E32FA8();
  LOBYTE(v8) = 4;
  sub_1B6E32F78();
  LOBYTE(v8) = 8;
  sub_1B6E32F78();
  LOBYTE(v8) = *(unsigned char *)(v2 + 12);
  sub_1B66C5F1C();
  sub_1B6E32FA8();
  LOBYTE(v8) = 6;
  sub_1B6E33018();
  LOBYTE(v8) = *(unsigned char *)(v2 + 20);
  sub_1B66C5C48();
  sub_1B6E32FA8();
  LOBYTE(v8) = 9;
  return sub_1B6E32F58();
}

uint64_t sub_1B67C6ED8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A8444();
  sub_1B6E33A88();
  uint64_t v9 = 0xFFFFFFFFLL;
  sub_1B62A7DBC(0, (unint64_t *)&unk_1E9DD01B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (v3) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a2, v6);
  }
  uint64_t v9 = *(void *)v2;
  sub_1B6E32FA8();
  sub_1B6E32F58();
  LOBYTE(v9) = 2;
  sub_1B6E32F58();
  sub_1B630C4C0(v2 + 8, (uint64_t)v10);
  sub_1B630C4C0((uint64_t)v10, (uint64_t)&v9);
  sub_1B66C6810();
  sub_1B6E32FA8();
  LOBYTE(v9) = 4;
  sub_1B6E32F78();
  LOBYTE(v9) = 8;
  sub_1B6E32F78();
  char v7 = 5;
  if (*(uint64_t *)(v2 + 96) <= 1)
  {
    if (*(void *)(v2 + 88)) {
      char v7 = 5;
    }
    else {
      char v7 = *(unsigned char *)(v2 + 20);
    }
  }
  LOBYTE(v9) = v7;
  sub_1B66C5F1C();
  sub_1B6E32FA8();
  LOBYTE(v9) = 6;
  sub_1B6E33018();
  LOBYTE(v9) = *(unsigned char *)(v2 + 28);
  sub_1B66C5C48();
  sub_1B6E32FA8();
  LOBYTE(v9) = 9;
  return sub_1B6E32F58();
}

uint64_t sub_1B67C7204(void *a1)
{
  uint64_t v3 = v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A8444();
  uint64_t result = sub_1B6E33A48();
  if (!v2)
  {
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[4];
    sub_1B62C14BC(a1, v6);
    if (!sub_1B62BF5E0(2022, v6, v7))
    {
      sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
      sub_1B62B1EA8();
      sub_1B6E32DF8();
    }
    sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
    sub_1B62B1EA8();
    sub_1B6E32D78();
    int v8 = v25;
    if (v26) {
      int v9 = -1;
    }
    else {
      int v9 = v24;
    }
    if (v26) {
      int v8 = 0;
    }
    *(_DWORD *)uint64_t v3 = v9;
    *(_DWORD *)(v3 + 4) = v8;
    LOBYTE(v24) = 1;
    *(unsigned char *)(v3 + 20) = sub_1B6E32DA8() & 1;
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    sub_1B62C14BC(a1, v10);
    if (sub_1B62BF5E0(1075, v10, v11))
    {
      char v12 = 1;
    }
    else
    {
      LOBYTE(v24) = 2;
      char v12 = sub_1B6E32DA8() & 1;
    }
    *(unsigned char *)(v3 + 21) = v12;
    sub_1B62A83F0();
    sub_1B6E32DF8();
    *(_DWORD *)(v3 + 8) = v24;
    *(unsigned char *)(v3 + 12) = v25;
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    sub_1B62C14BC(a1, v13);
    if (sub_1B62BF5E0(2047, v13, v14))
    {
      if (v25)
      {
        *(_DWORD *)(v3 + 16) = -1082130432;
      }
      else
      {
        *(_DWORD *)(v3 + 16) = v24;
        *(_DWORD *)(v3 + 8) = 0;
        *(unsigned char *)(v3 + 12) = 1;
      }
    }
    else
    {
      LOBYTE(v24) = 4;
      sub_1B6E32DC8();
      *(_DWORD *)(v3 + 16) = v15;
    }
    sub_1B62A8594();
    sub_1B6E32D78();
    if (v24 == 7) {
      char v16 = 0;
    }
    else {
      char v16 = v24;
    }
    *(unsigned char *)(v3 + 22) = v16;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_1B62C14BC(a1, v17);
    if (sub_1B62BF5E0(2023, v17, v18))
    {
      if (((v16 - 3) & 0xFC) != 0) {
        char v19 = v16;
      }
      else {
        char v19 = 0x5060304u >> (8 * (v16 - 3));
      }
      *(unsigned char *)(v3 + 22) = v19;
    }
    *(_DWORD *)(v3 + 24) = sub_1B6E32E68();
    sub_1B62A84EC();
    sub_1B6E32DF8();
    *(unsigned char *)(v3 + 28) = 6;
    uint64_t v20 = a1[3];
    uint64_t v21 = a1[4];
    sub_1B62C14BC(a1, v20);
    if (sub_1B62BF5E0(1079, v20, v21)) {
      char v22 = 1;
    }
    else {
      char v22 = sub_1B6E32DA8() & 1;
    }
    *(unsigned char *)(v3 + 29) = v22;
    uint64_t result = sub_1B6E32DC8();
    *(_DWORD *)(v3 + 32) = v23;
  }
  return result;
}

uint64_t sub_1B67C76B8(void *a1)
{
  return sub_1B67C76D0(a1);
}

uint64_t sub_1B67C76D0(void *a1)
{
  uint64_t v3 = v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A8444();
  uint64_t result = sub_1B6E33A48();
  if (!v2)
  {
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[4];
    sub_1B62C14BC(a1, v6);
    if (!sub_1B62BF5E0(2022, v6, v7))
    {
      sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
      sub_1B62B1EA8();
      sub_1B6E32DF8();
    }
    sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
    sub_1B62B1EA8();
    sub_1B6E32D78();
    int v8 = v25;
    if (v26) {
      int v9 = -1;
    }
    else {
      int v9 = v24;
    }
    if (v26) {
      int v8 = 0;
    }
    *(_DWORD *)uint64_t v3 = v9;
    *(_DWORD *)(v3 + 4) = v8;
    LOBYTE(v24) = 1;
    *(unsigned char *)(v3 + 30) = sub_1B6E32DA8() & 1;
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    sub_1B62C14BC(a1, v10);
    if (sub_1B62BF5E0(1075, v10, v11))
    {
      char v12 = 1;
    }
    else
    {
      LOBYTE(v24) = 2;
      char v12 = sub_1B6E32DA8() & 1;
    }
    *(unsigned char *)(v3 + 31) = v12;
    sub_1B62A83F0();
    sub_1B6E32DF8();
    *(_DWORD *)(v3 + 8) = v24;
    *(unsigned char *)(v3 + 12) = v25;
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    sub_1B62C14BC(a1, v13);
    if (sub_1B62BF5E0(2047, v13, v14))
    {
      if (v25)
      {
        *(_DWORD *)(v3 + 16) = -1082130432;
      }
      else
      {
        *(_DWORD *)(v3 + 16) = v24;
        *(_DWORD *)(v3 + 8) = 0;
        *(unsigned char *)(v3 + 12) = 1;
      }
    }
    else
    {
      LOBYTE(v24) = 4;
      sub_1B6E32DC8();
      *(_DWORD *)(v3 + 16) = v15;
    }
    sub_1B62A8594();
    sub_1B6E32D78();
    if (v24 == 7) {
      char v16 = 0;
    }
    else {
      char v16 = v24;
    }
    *(unsigned char *)(v3 + 20) = v16;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_1B62C14BC(a1, v17);
    if (sub_1B62BF5E0(2023, v17, v18))
    {
      if (((v16 - 3) & 0xFC) != 0) {
        char v19 = v16;
      }
      else {
        char v19 = 0x5060304u >> (8 * (v16 - 3));
      }
      *(unsigned char *)(v3 + 20) = v19;
    }
    *(_DWORD *)(v3 + 24) = sub_1B6E32E68();
    sub_1B62A84EC();
    sub_1B6E32DF8();
    *(unsigned char *)(v3 + 28) = 6;
    uint64_t v20 = a1[3];
    uint64_t v21 = a1[4];
    sub_1B62C14BC(a1, v20);
    if (sub_1B62BF5E0(1079, v20, v21)) {
      char v22 = 1;
    }
    else {
      char v22 = sub_1B6E32DA8() & 1;
    }
    *(unsigned char *)(v3 + 29) = v22;
    uint64_t result = sub_1B6E32DC8();
    *(_DWORD *)(v3 + 32) = v23;
  }
  return result;
}

uint64_t sub_1B67C7B84(void *a1)
{
  uint64_t v3 = v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A8444();
  uint64_t result = sub_1B6E33A48();
  if (!v2)
  {
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[4];
    sub_1B62C14BC(a1, v6);
    if (!sub_1B62BF5E0(2022, v6, v7))
    {
      sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
      sub_1B62B1EA8();
      sub_1B6E32DF8();
    }
    sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
    sub_1B62B1EA8();
    sub_1B6E32D78();
    int v8 = v25;
    if (v26) {
      int v9 = -1;
    }
    else {
      int v9 = v24;
    }
    if (v26) {
      int v8 = 0;
    }
    *(_DWORD *)(v3 + 36) = v9;
    *(_DWORD *)(v3 + 40) = v8;
    LOBYTE(v24) = 1;
    *(unsigned char *)(v3 + 32) = sub_1B6E32DA8() & 1;
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    sub_1B62C14BC(a1, v10);
    if (sub_1B62BF5E0(1075, v10, v11))
    {
      char v12 = 1;
    }
    else
    {
      LOBYTE(v24) = 2;
      char v12 = sub_1B6E32DA8() & 1;
    }
    *(unsigned char *)(v3 + 33) = v12;
    sub_1B62A83F0();
    sub_1B6E32DF8();
    *(_DWORD *)uint64_t v3 = v24;
    *(unsigned char *)(v3 + 4) = v25;
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    sub_1B62C14BC(a1, v13);
    if (sub_1B62BF5E0(2047, v13, v14))
    {
      if (v25)
      {
        *(_DWORD *)(v3 + 8) = -1082130432;
      }
      else
      {
        *(_DWORD *)(v3 + 8) = v24;
        *(_DWORD *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 4) = 1;
      }
    }
    else
    {
      LOBYTE(v24) = 4;
      sub_1B6E32DC8();
      *(_DWORD *)(v3 + 8) = v15;
    }
    sub_1B62A8594();
    sub_1B6E32D78();
    if (v24 == 7) {
      char v16 = 0;
    }
    else {
      char v16 = v24;
    }
    *(unsigned char *)(v3 + 12) = v16;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_1B62C14BC(a1, v17);
    if (sub_1B62BF5E0(2023, v17, v18))
    {
      if (((v16 - 3) & 0xFC) != 0) {
        char v19 = v16;
      }
      else {
        char v19 = 0x5060304u >> (8 * (v16 - 3));
      }
      *(unsigned char *)(v3 + 12) = v19;
    }
    *(_DWORD *)(v3 + 16) = sub_1B6E32E68();
    sub_1B62A84EC();
    sub_1B6E32DF8();
    *(unsigned char *)(v3 + 20) = 6;
    uint64_t v20 = a1[3];
    uint64_t v21 = a1[4];
    sub_1B62C14BC(a1, v20);
    if (sub_1B62BF5E0(1079, v20, v21)) {
      char v22 = 1;
    }
    else {
      char v22 = sub_1B6E32DA8() & 1;
    }
    *(unsigned char *)(v3 + 21) = v22;
    uint64_t result = sub_1B6E32DC8();
    *(_DWORD *)(v3 + 24) = v23;
  }
  return result;
}

uint64_t sub_1B67C8038(void *a1)
{
  uint64_t v3 = v1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B62A8444();
  uint64_t result = sub_1B6E33A48();
  if (!v2)
  {
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[4];
    sub_1B62C14BC(a1, v6);
    if (!sub_1B62BF5E0(2022, v6, v7))
    {
      sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
      sub_1B62B1EA8();
      sub_1B6E32DF8();
    }
    sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
    sub_1B62B1EA8();
    sub_1B6E32D78();
    int v8 = v26;
    if (v27) {
      int v9 = -1;
    }
    else {
      int v9 = v25;
    }
    if (v27) {
      int v8 = 0;
    }
    *(_DWORD *)uint64_t v3 = v9;
    *(_DWORD *)(v3 + 4) = v8;
    LOBYTE(v25) = 1;
    *(unsigned char *)(v3 + 37) = sub_1B6E32DA8() & 1;
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    sub_1B62C14BC(a1, v10);
    if (sub_1B62BF5E0(1075, v10, v11))
    {
      char v12 = 1;
    }
    else
    {
      LOBYTE(v25) = 2;
      char v12 = sub_1B6E32DA8() & 1;
    }
    *(unsigned char *)(v3 + 38) = v12;
    sub_1B62A83F0();
    sub_1B6E32DF8();
    *(_DWORD *)(v3 + 8) = v25;
    *(unsigned char *)(v3 + 12) = v26;
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    sub_1B62C14BC(a1, v13);
    if (sub_1B62BF5E0(2047, v13, v14))
    {
      if (v26)
      {
        *(_DWORD *)(v3 + 16) = -1082130432;
      }
      else
      {
        *(_DWORD *)(v3 + 16) = v25;
        *(_DWORD *)(v3 + 8) = 0;
        *(unsigned char *)(v3 + 12) = 1;
      }
    }
    else
    {
      LOBYTE(v25) = 4;
      sub_1B6E32DC8();
      *(_DWORD *)(v3 + 16) = v15;
    }
    sub_1B62A8594();
    sub_1B6E32D78();
    if (v25 == 7) {
      char v16 = 0;
    }
    else {
      char v16 = v25;
    }
    *(unsigned char *)(v3 + 20) = v16;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_1B62C14BC(a1, v17);
    if (sub_1B62BF5E0(2023, v17, v18))
    {
      LOBYTE(v19) = 6;
      if (*(uint64_t *)(v3 + 96) <= 1 && !*(void *)(v3 + 88))
      {
        unsigned int v20 = (v16 - 3);
        LOBYTE(v19) = v16;
        if (v20 <= 3) {
          unsigned int v19 = 0x5060304u >> (8 * v20);
        }
      }
      *(unsigned char *)(v3 + 20) = v19;
    }
    *(_DWORD *)(v3 + 24) = sub_1B6E32E68();
    sub_1B62A84EC();
    sub_1B6E32DF8();
    *(unsigned char *)(v3 + 28) = 6;
    uint64_t v21 = a1[3];
    uint64_t v22 = a1[4];
    sub_1B62C14BC(a1, v21);
    if (sub_1B62BF5E0(1079, v21, v22)) {
      char v23 = 1;
    }
    else {
      char v23 = sub_1B6E32DA8() & 1;
    }
    *(unsigned char *)(v3 + 29) = v23;
    uint64_t result = sub_1B6E32DC8();
    *(_DWORD *)(v3 + 32) = v24;
  }
  return result;
}

double sub_1B67C8508@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(float *)&double result = sub_1B67C8664(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_DWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B67C8550(void *a1)
{
  sub_1B62A7DBC(0, (unint64_t *)&unk_1E9DD01B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  int v9 = (char *)v12 - v8;
  long long v10 = *(_OWORD *)(v1 + 16);
  v12[0] = *(_OWORD *)v1;
  v12[1] = v10;
  int v13 = *(_DWORD *)(v1 + 32);
  uint64_t result = sub_1B67C68C0(a1, (uint64_t)v12 - v8);
  if (!v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

float sub_1B67C8664@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62A7DBC(0, &qword_1EB980A78, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  long long v10 = (char *)&v21 - v9;
  uint64_t v22 = 0xFFFFFFFFLL;
  int v23 = 0;
  char v24 = 1;
  float v25 = -1.0;
  char v26 = 0;
  int v27 = 256;
  uint64_t v28 = 16843008;
  sub_1B67C76D0(a1);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  if (!v2)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    int v12 = v23;
    char v13 = v24;
    float result = v25;
    char v14 = v26;
    int v15 = v27;
    char v16 = v28;
    char v17 = BYTE1(v28);
    char v18 = BYTE2(v28);
    char v19 = BYTE3(v28);
    int v20 = HIDWORD(v28);
    *(void *)a2 = v22;
    *(_DWORD *)(a2 + 8) = v12;
    *(unsigned char *)(a2 + 12) = v13;
    *(float *)(a2 + 16) = result;
    *(unsigned char *)(a2 + 20) = v14;
    *(_DWORD *)(a2 + 24) = v15;
    *(unsigned char *)(a2 + 28) = v16;
    *(unsigned char *)(a2 + 29) = v17;
    *(unsigned char *)(a2 + 30) = v18;
    *(unsigned char *)(a2 + 31) = v19;
    *(_DWORD *)(a2 + 32) = v20;
  }
  return result;
}

id sub_1B67C880C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  v31[1] = *(id *)MEMORY[0x1E4F143B8];
  ObjectType = (objc_class *)swift_getObjectType();
  long long v10 = &v6[OBJC_IVAR____TtC3VFX13ShaderLibrary_reloadedNotificationBlock];
  *(void *)long long v10 = nullsub_1;
  *((void *)v10 + 1) = 0;
  char v26 = v10;
  *(void *)&v6[OBJC_IVAR____TtC3VFX13ShaderLibrary_device] = a2;
  uint64_t v11 = &v6[OBJC_IVAR____TtC3VFX13ShaderLibrary_libraryURL];
  uint64_t v12 = sub_1B6E30F48();
  uint64_t v13 = *(void *)(v12 - 8);
  float v25 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  char v14 = v6;
  swift_unknownObjectRetain();
  int v15 = (void *)sub_1B6E30E78();
  v31[0] = 0;
  id v16 = objc_msgSend(a2, sel_newLibraryWithURL_error_, v15, v31);

  id v17 = v31[0];
  if (v16)
  {
    *(void *)&v14[OBJC_IVAR____TtC3VFX13ShaderLibrary_library] = v16;
    char v18 = &v14[OBJC_IVAR____TtC3VFX13ShaderLibrary_label];
    *(void *)char v18 = a4;
    *((void *)v18 + 1) = a5;
    id v19 = v17;
    swift_unknownObjectRetain();
    if (a5)
    {
      swift_bridgeObjectRetain();
      int v20 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
    }
    else
    {
      int v20 = 0;
    }
    objc_msgSend(v16, sel_setLabel_, v20);
    swift_unknownObjectRelease();

    v30.receiver = v14;
    v30.super_class = ObjectType;
    id v23 = objc_msgSendSuper2(&v30, sel_init);
    swift_unknownObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  }
  else
  {
    id v21 = v31[0];
    swift_bridgeObjectRelease();
    sub_1B6E30D78();

    swift_willThrow();
    swift_unknownObjectRelease();

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v22(a1, v12);
    swift_unknownObjectRelease();
    v22((uint64_t)v25, v12);
    id v23 = (id)*((void *)v26 + 1);

    swift_release();
    swift_deallocPartialClassInstance();
  }
  return v23;
}

id sub_1B67C8B28()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B67C8C60()
{
  return type metadata accessor for ShaderLibrary();
}

uint64_t type metadata accessor for ShaderLibrary()
{
  uint64_t result = qword_1EB9852C0;
  if (!qword_1EB9852C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B67C8CE4()
{
  uint64_t result = sub_1B6E30F48();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

float sub_1B67C8D98(uint64_t a1)
{
  return 1.0;
}

uint64_t sub_1B67C8DC8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65676E6172 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B67C8E48(void *a1, float a2, float a3)
{
  type metadata accessor for ParticleFloatInit.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_1B6E33038();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  long long v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A88();
  float v13 = a2;
  float v14 = a3;
  sub_1B62AA858();
  sub_1B62AA5EC(qword_1E9DD02C8);
  sub_1B6E32FA8();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

float sub_1B67C8FEC(void *a1)
{
  type metadata accessor for ParticleFloatInit.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1B6E32EA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A48();
  if (!v1)
  {
    sub_1B62AA858();
    sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    float v2 = v11;
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1B67C91D4()
{
  swift_getWitnessTable();

  return sub_1B6B37010();
}

uint64_t sub_1B67C9240()
{
  return 0x65676E6172;
}

uint64_t sub_1B67C9254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B67C8DC8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B67C9288@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B62C9214();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B67C92B8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B67C930C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

void sub_1B67C9360(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v4 = sub_1B67C8FEC(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
  }
}

uint64_t sub_1B67C9394(void *a1)
{
  return sub_1B67C8E48(a1, *v1, v1[1]);
}

double sub_1B67C93B8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  sub_1B67C8D98(*(void *)(a1 + 16));
  __asm { FMOV            V0.2S, #1.0 }
  *a2 = result;
  return result;
}

uint64_t sub_1B67C93EC()
{
  return type metadata accessor for ParticleFloatInit.System();
}

uint64_t type metadata accessor for ParticleFloatInit.System()
{
  return sub_1B62C36EC();
}

uint64_t sub_1B67C9430()
{
  return sub_1B67C950C();
}

const char *sub_1B67C943C()
{
  return sub_1B67C9470();
}

uint64_t sub_1B67C9448()
{
  return sub_1B67C93EC();
}

const char *sub_1B67C9470()
{
  if (swift_dynamicCastMetatype()) {
    return "SetParticleAngle.CPU";
  }
  if (swift_dynamicCastMetatype()) {
    return "SetParticleAngleVelocity.CPU";
  }
  if (swift_dynamicCastMetatype()) {
    return "SetParticleTextureFrame.CPU";
  }
  return "Unsupported";
}

uint64_t sub_1B67C950C()
{
  uint64_t v0 = type metadata accessor for ParticleFloatInit();
  sub_1B6A80CC4(v0, (uint64_t)&off_1F0F72D90, (uint64_t)&v2);
  return sub_1B6A80EC4();
}

uint64_t type metadata accessor for ParticleFloatInit()
{
  return sub_1B62C36EC();
}

uint64_t type metadata accessor for ParticleFloatInit.CodingKeys()
{
  return sub_1B62C36EC();
}

unsigned char *sub_1B67C95A4(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B67C9640);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B67C9668()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B67C9684()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B67C96A0()
{
  return swift_getWitnessTable();
}

void sub_1B67C96F0()
{
}

uint64_t sub_1B67C9774()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC3VFX24VFXRemotePreviewEndpoint_name);
  swift_bridgeObjectRetain();
  return v1;
}

id VFXRemotePreviewEndpoint.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  swift_unknownObjectWeakInit();
  uint64_t v6 = &v5[OBJC_IVAR____TtC3VFX24VFXRemotePreviewEndpoint_name];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id VFXRemotePreviewEndpoint.init(name:)(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakInit();
  uint64_t v5 = &v2[OBJC_IVAR____TtC3VFX24VFXRemotePreviewEndpoint_name];
  *(void *)uint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for VFXRemotePreviewEndpoint();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for VFXRemotePreviewEndpoint()
{
  return self;
}

id VFXRemotePreviewEndpoint.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void VFXRemotePreviewEndpoint.init()()
{
}

id VFXRemotePreviewEndpoint.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VFXRemotePreviewEndpoint();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B67C9A50@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = MEMORY[0x1BA9B8670](*a1 + OBJC_IVAR____TtC3VFX24VFXRemotePreviewEndpoint_world);
  *a2 = result;
  return result;
}

uint64_t sub_1B67C9A88()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1B67C9AA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  objc_super v2 = (void *)(*a1 + OBJC_IVAR____TtC3VFX24VFXRemotePreviewEndpoint_name);
  uint64_t v3 = v2[1];
  *a2 = *v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67C9AC0(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unsigned int v4 = (void *)(*a2 + OBJC_IVAR____TtC3VFX24VFXRemotePreviewEndpoint_name);
  *unsigned int v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

uint64_t method lookup function for VFXRemotePreviewEndpoint(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VFXRemotePreviewEndpoint);
}

uint64_t dispatch thunk of VFXRemotePreviewEndpoint.world.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of VFXRemotePreviewEndpoint.name.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of VFXRemotePreviewEndpoint.__allocating_init(name:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

void sub_1B67C9BF4(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC870];
}

uint64_t sub_1B67C9C04(void *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *a1 = a2;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67C9C48(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  char v9 = sub_1B677FB18(a1, a2, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    sub_1B67EA4F8((uint64_t)v14, a1, a2);
    uint64_t v11 = sub_1B6AAD6A8(a1, a2);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      float v13 = (void *)(v11 + 40);
      do
      {
        sub_1B67C9C48(*(v13 - 1), *v13, a3, a4);
        v13 += 2;
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
    return sub_1B67E9ED4(v14, a1);
  }
  return result;
}

uint64_t sub_1B67C9D24(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v83 = qword_1EB997A18;
  int v84 = 0;
  char v85 = 2;
  uint64_t v86 = 0;
  char v87 = 2;
  uint64_t v88 = 0;
  swift_retain();
  sub_1B629AD2C(3, 3, (uint64_t)&v60);
  swift_release();
  uint64_t v77 = v60;
  int v78 = v61;
  char v79 = v62;
  uint64_t v80 = v63 | 1;
  char v81 = v64;
  uint64_t v82 = v65;
  uint64_t v8 = MEMORY[0x1E4FBC870];
  uint64_t v59 = MEMORY[0x1E4FBC870];
  sub_1B62C9DA8(v3, (uint64_t)&v77, a1 & 0xFFFFFFFFFFLL, v66);
  sub_1B62D7510((uint64_t)v66, (uint64_t)v67, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v67[0]) {
    goto LABEL_26;
  }
  if (v73 < 1 || (uint64_t v51 = v70) == 0)
  {
LABEL_25:
    sub_1B632F170(v66);
LABEL_26:
    if ((a3 & 1) == 0)
    {
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v8;
      swift_retain();
      sub_1B67CB230(a2, v4, v43, v4, (uint64_t)&v59);
      swift_release();
      swift_release();
    }
    sub_1B62CA064((uint64_t)&v60);
    return v59;
  }
  unint64_t v45 = a2;
  uint64_t v57 = v3;
  uint64_t v9 = v72[4];
  int v10 = *(unsigned __int8 *)(v71 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v74[0] = v67[0];
  v74[1] = v67[1];
  uint64_t v75 = v68;
  uint64_t v47 = (uint64_t)(v72 + 6);
  uint64_t v48 = v69;
  uint64_t v56 = v72;
  uint64_t v46 = v72 + 8;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v49 = v10;
  uint64_t v50 = v9;
  while (1)
  {
    uint64_t v54 = v12;
    uint64_t v55 = v11;
    float v13 = (unsigned int *)(v48 + 48 * v11);
    uint64_t v14 = *v13;
    int v15 = (uint64_t *)*((void *)v13 + 2);
    uint64_t v17 = *((void *)v13 + 4);
    uint64_t v16 = *((void *)v13 + 5);
    uint64_t v52 = v13[1];
    uint64_t v53 = *((void *)v13 + 3);
    if (v10)
    {
      char v18 = *(os_unfair_lock_s **)(v16 + 376);
      swift_retain();
      os_unfair_lock_lock(v18);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v9);
    sub_1B62D7510(v47, (uint64_t)v76, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v19 = v56[4];
    uint64_t v20 = *(void *)(*(void *)(*(void *)(*(void *)(v16 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v56[6] = ecs_stack_allocator_allocate(v19, 48 * v20, 8);
    v56[7] = v20;
    v46[1] = 0;
    v46[2] = 0;
    *uint64_t v46 = 0;
    swift_release();
    id v21 = (unsigned char *)sub_1B62C9024((uint64_t)&type metadata for EmitterDescription, (uint64_t)&off_1F0F76610, v15, v53, v17, (uint64_t)v56);
    uint64_t v22 = sub_1B62C9024((uint64_t)&type metadata for EmitterRuntime, (uint64_t)&off_1F0F63F30, v15, v53, v17, (uint64_t)v56);
    uint64_t v23 = v22;
    if (!v15) {
      break;
    }
    if (v17)
    {
      do
      {
        uint64_t v25 = *v15++;
        uint64_t v24 = v25;
        uint64_t v26 = swift_retain();
        if (*(unsigned char *)(v16 + 184)) {
          goto LABEL_29;
        }
        uint64_t v27 = *(unsigned int *)(*(void *)(v16 + 168) + 4 * v24);
        uint64_t v28 = *(unsigned int *)(*(void *)(v26 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v27 + 8);
        swift_release();
        uint64_t v29 = *(unsigned int *)(v16 + 28);
        LOBYTE(v58) = *(unsigned char *)(v16 + 32);
        sub_1B6919AD4(v27 | (v28 << 32), v29 | ((unint64_t)v58 << 32), v21, v23, v57, 1);
        LOBYTE(v27) = *(unsigned char *)(v16 + 184);
        uint64_t v30 = swift_retain();
        if (v27) {
          goto LABEL_29;
        }
        uint64_t v31 = *(unsigned int *)(*(void *)(v16 + 168) + 4 * v24);
        uint64_t v32 = *(unsigned int *)(*(void *)(v30 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v31 + 8);
        swift_release();
        sub_1B67EA674(&v58, v31 | (v32 << 32));
        v23 += 656;
        v21 += 88;
      }
      while (--v17);
    }
LABEL_22:
    uint64_t v12 = v54;
    sub_1B6345178(v56, (unsigned __int16 **)v74, (uint64_t)v76);
    sub_1B634507C((char *)v16);
    uint64_t v9 = v50;
    ecs_stack_allocator_pop_snapshot(v50);
    int v10 = v49;
    if (v49)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 376));
    }
    swift_release();
    uint64_t v11 = v55 + 1;
    if (v55 + 1 == v51)
    {
      sub_1B632F170(v66);
      uint64_t v4 = v57;
      a2 = v45;
      uint64_t v8 = MEMORY[0x1E4FBC870];
      goto LABEL_25;
    }
  }
  if (v14 == v52) {
    goto LABEL_22;
  }
  uint64_t v33 = v22 + 656 * v14;
  uint64_t v34 = &v21[88 * v14];
  while (1)
  {
    uint64_t v35 = swift_retain();
    if (*(unsigned char *)(v16 + 184)) {
      break;
    }
    uint64_t v36 = *(unsigned int *)(*(void *)(v16 + 168) + 4 * v14);
    uint64_t v37 = *(unsigned int *)(*(void *)(v35 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v36 + 8);
    swift_release();
    uint64_t v38 = *(unsigned int *)(v16 + 28);
    LOBYTE(v58) = *(unsigned char *)(v16 + 32);
    sub_1B6919AD4(v36 | (v37 << 32), v38 | ((unint64_t)v58 << 32), v34, v33, v57, 1);
    LOBYTE(v36) = *(unsigned char *)(v16 + 184);
    uint64_t v39 = swift_retain();
    if (v36) {
      break;
    }
    uint64_t v40 = *(unsigned int *)(*(void *)(v16 + 168) + 4 * v14);
    uint64_t v41 = v14 + 1;
    uint64_t v42 = *(unsigned int *)(*(void *)(v39 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v40 + 8);
    swift_release();
    sub_1B67EA674(&v58, v40 | (v42 << 32));
    v33 += 656;
    v34 += 88;
    uint64_t v14 = v41;
    if (v52 == v41) {
      goto LABEL_22;
    }
  }
LABEL_29:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B67CA2E4(unint64_t a1, unint64_t a2, char a3, char a4)
{
  uint64_t v6 = HIDWORD(a1) & 1;
  int v7 = a3 & 1;
  if (!a1) {
    LODWORD(v6) = 1;
  }
  if (v6) {
    uint64_t v8 = 0x200000000;
  }
  else {
    uint64_t v8 = a1;
  }
  sub_1B67C9D24(v8, a2, a3 & 1);
  swift_bridgeObjectRelease();
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v86 = qword_1EB997A18;
  int v87 = 0;
  char v88 = 2;
  uint64_t v89 = 1;
  char v90 = 2;
  uint64_t v91 = 0;
  swift_retain();
  uint64_t v78 = v4;
  sub_1B62C9DA8(v4, (uint64_t)&v86, v8, v84);
  sub_1B62D7510((uint64_t)v84, (uint64_t)v85, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v85[0])
  {
    v85[8] = v85[2];
    v85[9] = v85[3];
    v85[10] = v85[4];
    v85[11] = v85[5];
    v85[6] = v85[0];
    v85[7] = v85[1];
    uint64_t v9 = sub_1B6363800();
    sub_1B632F170(v84);
  }
  else
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  sub_1B67CB1A4();
  uint64_t v10 = sub_1B6E31EF8();
  v81[0] = v10;
  uint64_t v11 = *(void *)(v9 + 16);
  if (v11)
  {
    uint64_t v12 = v9 + 36;
    do
    {
      sub_1B67E9ED4(&v83, *(void *)(v12 - 4));
      v12 += 8;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v13 = v81[0];
    uint64_t v83 = v81[0];
    if (v7) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v13 = v10;
    swift_bridgeObjectRelease();
    uint64_t v83 = v13;
    if (v7) {
      goto LABEL_16;
    }
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = MEMORY[0x1E4FBC870];
  sub_1B67C9C48(a2, v4, v14, (uint64_t)&v83);
  swift_release();
  uint64_t v13 = v83;
LABEL_16:
  uint64_t v76 = v13 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v13 + 56);
  uint64_t v80 = (void *)(v4 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
  uint64_t v75 = OBJC_IVAR____TtC3VFX13EntityManager_commandQueues;
  unint64_t v18 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v20 = 0;
  int64_t v77 = v18;
  unint64_t v73 = v18 - 5;
  while (1)
  {
    while (1)
    {
      do
      {
        while (1)
        {
          if (v17)
          {
            unint64_t v21 = __clz(__rbit64(v17));
            v17 &= v17 - 1;
            unint64_t v22 = v21 | (v20 << 6);
          }
          else
          {
            uint64_t v23 = v20 + 1;
            if (v20 + 1 >= v77) {
              goto LABEL_96;
            }
            unint64_t v24 = *(void *)(v76 + 8 * v23);
            if (!v24)
            {
              uint64_t v23 = v20 + 2;
              if (v20 + 2 >= v77) {
                goto LABEL_96;
              }
              unint64_t v24 = *(void *)(v76 + 8 * v23);
              if (!v24)
              {
                uint64_t v23 = v20 + 3;
                if (v20 + 3 >= v77) {
                  goto LABEL_96;
                }
                unint64_t v24 = *(void *)(v76 + 8 * v23);
                if (!v24)
                {
                  uint64_t v23 = v20 + 4;
                  if (v20 + 4 >= v77) {
                    goto LABEL_96;
                  }
                  unint64_t v24 = *(void *)(v76 + 8 * v23);
                  if (!v24)
                  {
                    while (v73 != v20)
                    {
                      unint64_t v24 = *(void *)(v13 + 8 * v20++ + 96);
                      if (v24)
                      {
                        uint64_t v23 = v20 + 4;
                        goto LABEL_32;
                      }
                    }
LABEL_96:
                    swift_release();
                    swift_release();
                    return swift_bridgeObjectRelease();
                  }
                }
              }
            }
LABEL_32:
            unint64_t v17 = (v24 - 1) & v24;
            unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
            uint64_t v20 = v23;
          }
          uint64_t v25 = (unsigned int *)(*(void *)(v13 + 48) + 8 * v22);
          uint64_t v27 = *v25;
          uint64_t v26 = v25[1];
          uint64_t v28 = (int)v27;
          if ((a4 & 1) == 0) {
            break;
          }
          sub_1B62E364C((uint64_t)&type metadata for Tombstone, (uint64_t)&off_1F0FAA130, v27 | (v26 << 32));
          uint64_t v4 = v78;
LABEL_57:
          if (v27 != -1 || v26 != 0)
          {
LABEL_61:
            if ((v27 & 0x80000000) == 0) {
              goto LABEL_62;
            }
          }
        }
        BOOL v29 = v27 == -1 && v26 == 0;
        if (v29 || (v27 & 0x80000000) != 0 || v80[1] <= (int)v27) {
          goto LABEL_57;
        }
        if (v26 != -1 && *(_DWORD *)(*v80 + 12 * (int)v27 + 8) != v26) {
          goto LABEL_61;
        }
        uint64_t v31 = (int *)(*v80 + 12 * (int)v27);
        uint64_t v32 = *((__int16 *)v31 + 2);
        uint64_t v33 = *(void *)(*(void *)(v4 + 136) + 8 * *v31 + 32);
        if (*(void *)(v33 + 232) > v32 || *(void *)(v33 + 240) <= v32) {
          goto LABEL_61;
        }
        uint64_t v35 = **(void **)(v4 + v75);
        uint64_t v36 = *(os_unfair_lock_s **)(v33 + 344);
        swift_retain();
        os_unfair_lock_lock(v36);
        uint64_t v74 = v35;
        ecs_stack_allocator_push_snapshot(*(void *)(v35 + 32));
        uint64_t v37 = *(void *)(*(void *)(v33 + 40) + 16);
        uint64_t v38 = *(void *)(v37 + 128);
        if (*(void *)(v38 + 16)
          && (unint64_t v39 = sub_1B62C1A30((uint64_t)&type metadata for Tombstone), (v40 & 1) != 0)
          && *(ValueMetadata **)(*(void *)(v37 + 24) + 16 * *(void *)(*(void *)(v38 + 56) + 8 * v39) + 32) == &type metadata for Tombstone)
        {
          v81[0] = &type metadata for Tombstone;
          v81[1] = &off_1F0FAA130;
          char v82 = 1;
          swift_retain();
          uint64_t v41 = v74;
          sub_1B63B2A48(v74 + 104, (uint64_t)v81, v32, 0, v33, v74);
          sub_1B6391400((uint64_t)v81);
        }
        else
        {
          swift_retain();
          uint64_t v41 = v74;
        }
        uint64_t v42 = (void *)(v41 + 104);
        if (*(void *)(*(void *)(v41 + 104) + 16))
        {
          uint64_t v43 = swift_bridgeObjectRetain();
          sub_1B639147C(v43, v33);
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v45 = *(void *)(v41 + 104);
          if (isUniquelyReferenced_nonNull_native)
          {
            sub_1B6399BB8(0, *(void *)(v45 + 16));
          }
          else
          {
            uint64_t v67 = (void *)MEMORY[0x1E4FBC860];
            if (*(void *)(v45 + 24) >= 2uLL)
            {
              sub_1B62D2C6C(0, (unint64_t *)&qword_1EB980C00, (uint64_t (*)(uint64_t))sub_1B63B29DC, MEMORY[0x1E4FBBE00]);
              uint64_t v67 = (void *)swift_allocObject();
              size_t v68 = j__malloc_size(v67);
              _OWORD v67[2] = 0;
              v67[3] = 2 * ((uint64_t)(v68 - 32) / 72);
            }
            *uint64_t v42 = v67;
            swift_bridgeObjectRelease();
          }
          uint64_t v41 = v74;
          if (*(unsigned __int8 *)(*(void *)(v74 + 16)
                                                + OBJC_IVAR____TtC3VFX13EntityManager_currentState)
             - 1 >= 2)
          {
            uint64_t v69 = *(char **)(v33 + 256);
            uint64_t v70 = *(char **)(v33 + 232);
            if (v70 == v69)
            {
              uint64_t v71 = *(char **)(v33 + 240);
            }
            else
            {
              sub_1B666018C(v69, v70);
              uint64_t v69 = *(char **)(v33 + 232);
              uint64_t v71 = *(char **)(v33 + 240);
              if (v71 == v69)
              {
                uint64_t v71 = 0;
                uint64_t v69 = 0;
                *(void *)(v33 + 232) = 0;
                *(void *)(v33 + 240) = 0;
              }
              uint64_t v41 = v74;
            }
            *(void *)(v33 + 248) = v71;
            *(void *)(v33 + 256) = v69;
          }
        }
        swift_release();
        ecs_stack_allocator_pop_snapshot(*(void *)(v41 + 32));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 344));
        swift_release();
        uint64_t v4 = v78;
      }
      while ((v28 & 0x80000000) != 0);
LABEL_62:
      if (v80[1] > v28 && (v26 == -1 || *(_DWORD *)(*v80 + 12 * (int)v28 + 8) == v26))
      {
        uint64_t v48 = (int *)(*v80 + 12 * (int)v28);
        uint64_t v49 = *((__int16 *)v48 + 2);
        uint64_t v50 = *(void *)(*(void *)(v4 + 136) + 8 * *v48 + 32);
        thread_worker_index(&thread_worker_index, v19);
        uint64_t v51 = *(void *)(v50 + 192);
        if (v51)
        {
          uint64_t v52 = *(void *)(v50 + 208);
          uint64_t v53 = 8 * (v49 >> 6);
          *(void *)(v51 + v53) |= 1 << v49;
          *(void *)(v52 + v53) &= ~(1 << v49);
        }
        if (*(unsigned char *)(*(void *)(v50 + 40) + 213) == 1) {
          break;
        }
      }
    }
    uint64_t v54 = *(void *)(v50 + 48);
    uint64_t v55 = *(void *)(v54 + 16);
    if (v55)
    {
      uint64_t v56 = (uint64_t *)(v54 + 56);
      while ((ValueMetadata *)*(v56 - 3) != &type metadata for PropagateDirtiness)
      {
        v56 += 5;
        if (!--v55) {
          goto LABEL_75;
        }
      }
      uint64_t v57 = *v56;
    }
    else
    {
LABEL_75:
      uint64_t v57 = 0;
    }
    uint64_t v58 = *(void *)(v50 + 128);
    char v59 = *(unsigned char *)(v50 + 184);
    uint64_t v60 = swift_retain();
    if (v59) {
      break;
    }
    unsigned int v61 = *(_DWORD *)(*(void *)(v50 + 168) + 4 * v49);
    char v62 = (unsigned int *)(v58 + v57 + 8 * v49);
    uint64_t v63 = *(unsigned int *)(*(void *)(v60 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)v61 + 8);
    swift_release();
    uint64_t v64 = *v62;
    uint64_t v65 = v62[1];
    BOOL v66 = v64 == -1 && v65 == 0;
    uint64_t v4 = v78;
    if (!v66)
    {
      sub_1B6398CA0(v81, v61 | (unint64_t)(v63 << 32), v64 | (v65 << 32));
      uint64_t v4 = v78;
    }
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B67CAB18(unint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = HIDWORD(a1) & 1;
  int v8 = a3 & 1;
  sub_1B62D2C6C(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v52 = (char *)&v50 - v11;
  if (a1) {
    int v12 = v7;
  }
  else {
    int v12 = 1;
  }
  unint64_t v55 = a1;
  unint64_t v51 = a1;
  if (v12) {
    uint64_t v13 = 0x200000000;
  }
  else {
    uint64_t v13 = a1;
  }
  uint64_t v59 = sub_1B67C9D24(v13, a2, v8);
  swift_retain();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_1B67CB380(v14, v13, (uint64_t)v4);
  uint64_t v53 = 0;
  swift_bridgeObjectRelease();
  swift_release();
  v4[26] = v15;
  swift_bridgeObjectRelease();
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v67 = qword_1EB997A18;
  int v68 = 0;
  char v69 = 2;
  uint64_t v70 = 1;
  char v71 = 2;
  uint64_t v72 = 0;
  uint64_t v16 = *(void *)((char *)v4 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  uint64_t v54 = qword_1EB997A18;
  swift_retain();
  uint64_t v58 = v16;
  sub_1B62C9DA8((uint64_t)v4, (uint64_t)&v67, v13, v65);
  sub_1B62D7510((uint64_t)v65, (uint64_t)v66, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v66[0])
  {
    uint64_t v66[8] = v66[2];
    v66[9] = v66[3];
    v66[10] = v66[4];
    v66[11] = v66[5];
    v66[6] = v66[0];
    v66[7] = v66[1];
    sub_1B6365460(0);
    sub_1B632F170(v65);
  }
  if (!v8)
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = MEMORY[0x1E4FBC870];
    swift_retain();
    sub_1B67CB620(a2, (uint64_t)v4, v17, (uint64_t)v4);
    swift_release();
    swift_release();
  }
  uint64_t v18 = 0;
  uint64_t v19 = *(void *)(v59 + 56);
  uint64_t v56 = v59 + 56;
  uint64_t v20 = 1 << *(unsigned char *)(v59 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v57 = (unint64_t)(v20 + 63) >> 6;
  int64_t v50 = v57 - 5;
  while (1)
  {
    if (v22)
    {
      unint64_t v23 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v24 = v23 | (v18 << 6);
      goto LABEL_32;
    }
    uint64_t v25 = v18 + 1;
    if (v18 + 1 >= v57) {
      goto LABEL_37;
    }
    unint64_t v26 = *(void *)(v56 + 8 * v25);
    if (!v26)
    {
      uint64_t v25 = v18 + 2;
      if (v18 + 2 >= v57) {
        goto LABEL_37;
      }
      unint64_t v26 = *(void *)(v56 + 8 * v25);
      if (!v26)
      {
        uint64_t v25 = v18 + 3;
        if (v18 + 3 >= v57) {
          goto LABEL_37;
        }
        unint64_t v26 = *(void *)(v56 + 8 * v25);
        if (!v26)
        {
          uint64_t v25 = v18 + 4;
          if (v18 + 4 >= v57) {
            goto LABEL_37;
          }
          unint64_t v26 = *(void *)(v56 + 8 * v25);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_31:
    unint64_t v22 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    uint64_t v18 = v25;
LABEL_32:
    uint64_t v27 = *(void *)(*(void *)(v59 + 48) + 8 * v24);
    uint64_t v63 = &type metadata for EmitterReference;
    uint64_t v64 = &off_1F0F6BD40;
    v62[0] = v27;
    sub_1B62C14BC(v62, (uint64_t)&type metadata for EmitterReference);
    uint64_t DynamicType = swift_getDynamicType();
    BOOL v29 = v63;
    uint64_t v30 = v64;
    sub_1B62C14BC(v62, (uint64_t)v63);
    uint64_t v31 = ((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v30[2])(v29, v30);
    uint64_t v32 = (os_unfair_lock_s *)v4[16];
    os_unfair_lock_lock(v32);
    uint64_t v33 = v4[10];
    uint64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      uint64_t v60 = v18;
      swift_retain();
      swift_retain();
      for (uint64_t i = 0; i != v34; ++i)
      {
        if (*(void *)(v33 + 8 * i + 32))
        {
          uint64_t v61 = *(void *)(v33 + 8 * i + 32);
          sub_1B69E05B8((unint64_t)&v61, DynamicType, v31, v4);
        }
      }
      swift_release();
      swift_release();
      uint64_t v18 = v60;
    }
    os_unfair_lock_unlock(v32);
    sub_1B6AB4A00(v62);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v62);
  }
  while (v50 != v18)
  {
    unint64_t v26 = *(void *)(v59 + 8 * v18++ + 96);
    if (v26)
    {
      uint64_t v25 = v18 + 4;
      goto LABEL_31;
    }
  }
LABEL_37:
  swift_release();
  if ((v55 & 0x100000000) != 0) {
    return swift_release();
  }
  swift_getKeyPath();
  uint64_t v37 = v4[22];
  swift_retain();
  uint64_t v38 = (void *)sub_1B6B3A580((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1F0F7FB58, v37, (void (*)(void *__return_ptr, uint64_t))sub_1B67CB5C0);
  swift_release();
  swift_release();
  if (v38)
  {
    uint64_t v39 = sub_1B6E30F48();
    uint64_t v40 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v52, 1, 1, v39);
    LOBYTE(v62[0]) = 0;
    sub_1B6CE0AD8(v40, v51);
  }
  uint64_t v41 = (void *)v4[22];
  swift_retain();
  uint64_t v42 = sub_1B6304AB4((uint64_t)&type metadata for EffectsRegistry, (uint64_t)&off_1F0F685A0, v41);
  swift_release();
  v62[0] = v42;
  unint64_t v43 = sub_1B6801D34(v55);
  int64_t v44 = v62[0];
  MEMORY[0x1F4188790](v43, v45);
  *(&v50 - 2) = v44;
  uint64_t v46 = (void *)v4[22];
  MEMORY[0x1F4188790](v47, v48);
  *(&v50 - 2) = (int64_t)sub_1B67CB5DC;
  *(&v50 - 1) = v49;
  swift_retain();
  sub_1B636E6CC((uint64_t)&type metadata for EffectsRegistry, (uint64_t)&off_1F0F685A0, v46, (void (*)(uint64_t))sub_1B63957FC);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_1B67CB1A4()
{
  unint64_t result = qword_1EB97FDB0;
  if (!qword_1EB97FDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FDB0);
  }
  return result;
}

uint64_t sub_1B67CB1F8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B67CB230(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a3 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  char v11 = sub_1B677FB18(a1, a2, v10);
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
    sub_1B67EA4F8((uint64_t)v18, a1, a2);
    uint64_t v12 = sub_1B6AAD6A8(a1, a2);
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      uint64_t v14 = (uint64_t *)(v12 + 40);
      do
      {
        uint64_t v15 = *(v14 - 1);
        uint64_t v16 = *v14;
        swift_retain();
        sub_1B67CB230(v15, v16, a3, a4, a5);
        swift_release();
        v14 += 2;
        --v13;
      }
      while (v13);
    }
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1B6BFE9A0(a1, a4, a4, a1, HIDWORD(a1));
    swift_release();
    sub_1B67EA674(v18, a1);
  }

  return swift_release();
}

void *sub_1B67CB380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  sub_1B67CB72C();
  uint64_t v6 = sub_1B6E32C28();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = 0;
  uint64_t v27 = a1;
  uint64_t v9 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a1 + 64);
  unint64_t v28 = a2 & 0xFFFFFFFFFFLL;
  uint64_t v13 = v6 + 64;
  uint64_t v25 = v9;
  int64_t v26 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v24 = v9 + 40;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  unint64_t v15 = v14 | (v8 << 6);
  while (1)
  {
    uint64_t v18 = *(void *)(*(void *)(v27 + 48) + 8 * v15);
    uint64_t v19 = *(void *)(v27 + 56) + 24 * v15;
    uint64_t v20 = *(void *)(v19 + 16);
    long long v31 = *(_OWORD *)v19;
    uint64_t v32 = v20;
    swift_bridgeObjectRetain();
    sub_1B6C31738((uint64_t)&v31, v28, v33, (uint64_t)&v29);
    swift_bridgeObjectRelease();
    if (v3)
    {
      swift_release();
      return v7;
    }
    *(void *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(v7[6] + 8 * v15) = v18;
    uint64_t v21 = v7[7] + 24 * v15;
    uint64_t v22 = v30;
    *(_OWORD *)uint64_t v21 = v29;
    *(void *)(v21 + 16) = v22;
    ++v7[2];
    if (v12) {
      goto LABEL_4;
    }
LABEL_5:
    uint64_t v16 = v8 + 1;
    if (v8 + 1 >= v26) {
      return v7;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v16);
    if (!v17)
    {
      uint64_t v16 = v8 + 2;
      if (v8 + 2 >= v26) {
        return v7;
      }
      unint64_t v17 = *(void *)(v25 + 8 * v16);
      if (!v17)
      {
        uint64_t v16 = v8 + 3;
        if (v8 + 3 >= v26) {
          return v7;
        }
        unint64_t v17 = *(void *)(v25 + 8 * v16);
        if (!v17)
        {
          uint64_t v16 = v8 + 4;
          if (v8 + 4 >= v26) {
            return v7;
          }
          unint64_t v17 = *(void *)(v25 + 8 * v16);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_16:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v8 = v16;
  }
  while (v26 - 5 != v8)
  {
    unint64_t v17 = *(void *)(v24 + 8 * v8++);
    if (v17)
    {
      uint64_t v16 = v8 + 4;
      goto LABEL_16;
    }
  }
  return v7;
}

uint64_t sub_1B67CB5C0@<X0>(void *a1@<X8>)
{
  return sub_1B67F4264(a1);
}

uint64_t sub_1B67CB5DC(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRelease();
  *a1 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67CB620(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  char v9 = sub_1B677FB18(a1, a2, v8);
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    sub_1B67EA4F8((uint64_t)&v16, a1, a2);
    uint64_t v10 = sub_1B6AAD6A8(a1, a2);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      unint64_t v12 = (uint64_t *)(v10 + 40);
      do
      {
        uint64_t v13 = *(v12 - 1);
        uint64_t v14 = *v12;
        swift_retain();
        sub_1B67CB620(v13, v14, a3, a4);
        swift_release();
        v12 += 2;
        --v11;
      }
      while (v11);
    }
    swift_bridgeObjectRelease();
    sub_1B69DE144(a1);
  }

  return swift_release();
}

void sub_1B67CB72C()
{
  if (!qword_1EB9807C0)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9807C0);
    }
  }
}

ValueMetadata *type metadata accessor for EffectsRegistry()
{
  return &type metadata for EffectsRegistry;
}

uint64_t sub_1B67CB7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v20 = a5;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *(void *)(v8 + v10 + 32);
      uint64_t v12 = *(void *)(v8 + v10 + 40);
      long long v21 = *(_OWORD *)(v8 + v10 + 48);
      uint64_t v13 = *(void *)(v8 + v10 + 64);
      int v14 = *(unsigned __int8 *)(v8 + v10 + 72);
      int v15 = *(unsigned __int16 *)(v8 + v10 + 74);
      if (v11 == a1 && v12 == a2) {
        break;
      }
      if (sub_1B6E334B8()) {
        goto LABEL_12;
      }
      v10 += 48;
      if (!--v9)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        int v18 = 0;
        long long v19 = 0uLL;
        goto LABEL_13;
      }
    }
    uint64_t v11 = a1;
    uint64_t v12 = a2;
LABEL_12:
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t result = swift_bridgeObjectRelease();
    long long v19 = v21;
    int v18 = v14 | (v15 << 16);
LABEL_13:
    a5 = v20;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    int v18 = 0;
    long long v19 = 0uLL;
  }
  *(void *)a5 = v11;
  *(void *)(a5 + 8) = v12;
  *(_OWORD *)(a5 + 16) = v19;
  *(void *)(a5 + 32) = v13;
  *(_DWORD *)(a5 + 40) = v18;
  return result;
}

uint64_t sub_1B67CB8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9 = a2;
  uint64_t v10 = a1;
  sub_1B67CB7A4(a1, a2, a4, a5, (uint64_t)v30);
  uint64_t v11 = v30[2];
  uint64_t v27 = v30[1];
  uint64_t v29 = v30[0];
  uint64_t v13 = v30[3];
  uint64_t v12 = v30[4];
  LODWORD(v14) = v31;
  uint64_t result = sub_1B67CD3AC((uint64_t)v30, (uint64_t)v34);
  if (v35)
  {
    uint64_t v16 = a6;
    uint64_t v18 = v27;
    uint64_t v17 = v29;
  }
  else
  {
    long long v19 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
    swift_bridgeObjectRetain();
    uint64_t v20 = v19(a4, a5);
    uint64_t v14 = *(void *)(v20 + 16);
    if (v14)
    {
      uint64_t v28 = 0;
      uint64_t v21 = v20 + 80;
      do
      {
        uint64_t v22 = *(void *)(v21 - 48);
        if (v22 > a3)
        {
          uint64_t v23 = *(void *)(v21 - 24);
          uint64_t v24 = *(void *)(v21 - 16);
          BOOL v25 = v10 == *(void *)(v21 - 40) && v9 == *(void *)(v21 - 32);
          if (v25 || (sub_1B6E334B8() & 1) != 0)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v28 = v22;
            uint64_t v10 = v23;
            uint64_t v9 = v24;
          }
        }
        v21 += 56;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      if (v28)
      {
        sub_1B67CB8F4(v32, v10, v9);
        uint64_t v17 = v32[0];
        uint64_t v18 = v32[1];
        uint64_t v11 = v32[2];
        uint64_t v13 = v32[3];
        uint64_t v12 = v32[4];
        LODWORD(v14) = v33;
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v17 = 0;
        uint64_t v18 = 0;
        uint64_t v11 = 0;
        uint64_t v13 = 0;
        uint64_t v12 = 0;
        LODWORD(v14) = 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v11 = 0;
      uint64_t v13 = 0;
      uint64_t v12 = 0;
    }
    uint64_t v16 = a6;
  }
  *(void *)uint64_t v16 = v17;
  *(void *)(v16 + 8) = v18;
  *(void *)(v16 + 16) = v11;
  *(void *)(v16 + 24) = v13;
  *(void *)(v16 + 32) = v12;
  *(_DWORD *)(v16 + 40) = v14;
  return result;
}

uint64_t sub_1B67CBAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  if (ObjectType == sub_1B6E32738())
  {
    swift_retain();
  }
  else if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 8))(a2, a3, a4))
  {
    sub_1B6E32768();
    a1 = sub_1B6E32CB8();
    swift_release();
  }
  else
  {
    return 0;
  }
  return a1;
}

uint64_t ScriptKeyPathReference.hash(into:)()
{
  if ((*(void *)(v0 + 24) & 0x8000000000000000) != 0)
  {
    sub_1B6E33928();
    sub_1B6E32768();
    swift_retain();
    sub_1B6E315B8();
    sub_1B6E318B8();
    sub_1B6E33928();
    return swift_release();
  }
  else
  {
    sub_1B6E33928();
    sub_1B6E32768();
    return sub_1B6E315B8();
  }
}

uint64_t ScriptKeyPathReference.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1B6E33918();
  sub_1B6E33928();
  sub_1B6E32768();
  if (v1 < 0)
  {
    swift_retain();
    sub_1B6E315B8();
    sub_1B6E318B8();
    sub_1B6E33928();
    swift_release();
  }
  else
  {
    sub_1B6E315B8();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B67CBDB0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1B6E33918();
  sub_1B6E33928();
  sub_1B6E32768();
  if (v1 < 0)
  {
    swift_retain();
    sub_1B6E315B8();
    sub_1B6E318B8();
    sub_1B6E33928();
    swift_release();
  }
  else
  {
    sub_1B6E315B8();
  }
  return sub_1B6E33988();
}

uint64_t sub_1B67CBE9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *a3;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B6E32748();
  uint64_t v12 = *(void *)(*MEMORY[0x1E4FBC5F0] + v10 + 8);
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = v12;
  *(void *)(a5 + 32) = v11;
  *(unsigned char *)(a5 + 40) = v13 & 1;
  *(_WORD *)(a5 + 42) = a4;

  return swift_retain();
}

uint64_t sub_1B67CBF50()
{
  return sub_1B6E33988();
}

uint64_t sub_1B67CBFEC()
{
  sub_1B6E32738();
  sub_1B6E33928();
  swift_bridgeObjectRetain();
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B67CC07C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B67CC114()
{
  sub_1B6E32738();
  uint64_t v1 = sub_1B6E33B48();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B67CC1B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = sub_1B6E32738();
  if (v6 != sub_1B6E32738()) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }

  return sub_1B6E334B8();
}

uint64_t sub_1B67CC2B0(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A58();
  sub_1B62C550C((uint64_t)v4, v5);
  sub_1B6E33268();
  if (!v2)
  {
    sub_1B6E32738();
    sub_1B62C550C((uint64_t)v4, v5);
    sub_1B67CD420();
    sub_1B6E332B8();
    if ((*(_WORD *)(v1 + 42) & 0x400) != 0)
    {
      sub_1B62C550C((uint64_t)v4, v5);
      sub_1B6E332B8();
    }
  }
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v4);
}

double sub_1B67CC414@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B67CCD30(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 12);
    *(_OWORD *)((char *)a2 + 28) = *(_OWORD *)((char *)v7 + 12);
  }
  return result;
}

uint64_t sub_1B67CC458(void *a1)
{
  return sub_1B67CC2B0(a1);
}

double sub_1B67CC470@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 28) = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

BOOL _s3VFX22ScriptKeyPathReferenceO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((v8 & 0x8000000000000000) == 0)
    {
      sub_1B6E32768();
      sub_1B67CC71C(v6, v7, v9, v8);
      sub_1B67CC71C(v3, v2, v5, v4);
      char v10 = MEMORY[0x1BA9B43C0](v3, v6);
      sub_1B67CC778(v3, v2, v5, v4);
      sub_1B67CC778(v6, v7, v9, v8);
      return v10 & 1;
    }
    goto LABEL_5;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
LABEL_5:
    sub_1B67CC71C(*a2, a2[1], v9, v8);
    sub_1B67CC71C(v3, v2, v5, v4);
LABEL_6:
    sub_1B67CC778(v3, v2, v5, v4);
    sub_1B67CC778(v6, v7, v9, v8);
    return 0;
  }
  sub_1B6E32768();
  sub_1B67CC71C(v6, v7, v9, v8);
  sub_1B67CC71C(v3, v2, v5, v4);
  swift_retain();
  swift_retain();
  if ((MEMORY[0x1BA9B43C0](v3, v6) & 1) == 0)
  {
    swift_release();
    swift_release();
    goto LABEL_6;
  }
  if (v2 == v7 && v5 == v9)
  {
    swift_release();
    swift_release();
    sub_1B67CC778(v3, v2, v5, v4);
    sub_1B67CC778(v6, v2, v5, v8);
    return (v4 & 0x7FFFFFFFFFFFFFFFLL) == (v8 & 0x7FFFFFFFFFFFFFFFLL);
  }
  char v12 = sub_1B6E334B8();
  swift_release();
  swift_release();
  sub_1B67CC778(v3, v2, v5, v4);
  sub_1B67CC778(v6, v7, v9, v8);
  BOOL result = 0;
  if (v12) {
    return (v4 & 0x7FFFFFFFFFFFFFFFLL) == (v8 & 0x7FFFFFFFFFFFFFFFLL);
  }
  return result;
}

unint64_t sub_1B67CC6C8()
{
  unint64_t result = qword_1E9DD0360;
  if (!qword_1E9DD0360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0360);
  }
  return result;
}

uint64_t sub_1B67CC71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 < 0)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    return swift_retain();
  }
}

uint64_t destroy for ScriptKeyPathReference(uint64_t *a1)
{
  return sub_1B67CC778(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1B67CC778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = swift_release();
  if (a4 < 0)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *initializeWithCopy for ScriptKeyPathReference(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_1B67CC71C(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for ScriptKeyPathReference(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_1B67CC71C(*a2, v4, v5, v6);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_1B67CC778(v7, v8, v9, v10);
  return a1;
}

uint64_t *assignWithTake for ScriptKeyPathReference(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  long long v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v7;
  sub_1B67CC778(v3, v5, v4, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptKeyPathReference(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x3FFF);
  }
  unsigned int v3 = (((*(void *)(a1 + 24) >> 50) >> 13) | (2
                                                            * ((*(void *)(a1 + 24) >> 50) & 0x1C00 | ((*(void *)(a1 + 24) & 7) << 7) | (*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ScriptKeyPathReference(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x3FFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B67CC9B0(uint64_t a1)
{
  return *(void *)(a1 + 24) >> 63;
}

uint64_t sub_1B67CC9BC(uint64_t result)
{
  *(void *)(result + 24) &= ~0x8000000000000000;
  return result;
}

void *sub_1B67CC9CC(void *result, uint64_t a2)
{
  uint64_t v2 = result[3] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *result &= 0xFFFFFFFFFFFFFF8uLL;
  result[3] = v2;
  return result;
}

ValueMetadata *type metadata accessor for ScriptKeyPathReference()
{
  return &type metadata for ScriptKeyPathReference;
}

uint64_t destroy for ScriptKeyPath()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for ScriptKeyPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ScriptKeyPath(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  return a1;
}

__n128 initializeWithTake for ScriptKeyPath(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 28) = *(_OWORD *)(a2 + 28);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ScriptKeyPath(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptKeyPath(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 44)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScriptKeyPath(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 44) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 44) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptKeyPath()
{
  return &type metadata for ScriptKeyPath;
}

unint64_t sub_1B67CCC44()
{
  unint64_t result = qword_1E9DD0368;
  if (!qword_1E9DD0368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0368);
  }
  return result;
}

uint64_t sub_1B67CCC98()
{
  sub_1B633AF88();
  uint64_t v0 = sub_1B6E325F8();
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B67CCD30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A18();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C550C((uint64_t)v47, v48);
  uint64_t v5 = sub_1B6E33108();
  uint64_t v7 = v6;
  sub_1B62C550C((uint64_t)v47, v48);
  sub_1B62BFBD8();
  sub_1B6E33168();
  uint64_t v9 = swift_conformsToProtocol2();
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v9) {
    uint64_t v11 = v44;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v42 = v5;
  if (!v11)
  {
    uint64_t v19 = swift_conformsToProtocol2();
    if (v19) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = 0;
    }
    if (v19) {
      uint64_t v21 = v44;
    }
    else {
      uint64_t v21 = 0;
    }
    if (v21)
    {
      *((void *)&v45 + 1) = v21;
      uint64_t v46 = v20;
      sub_1B62C12C4((uint64_t *)&v44);
      sub_1B6A5DD6C(v21, v20);
      uint64_t v22 = sub_1B6A5DDA4(v5, v7, v21, v20);
      if (v22)
      {
        uint64_t v23 = v22;
        swift_bridgeObjectRelease();
        uint64_t v24 = *(void *)(v23 + 16);
        uint64_t v14 = *(void *)(v23 + 24);
        long long v43 = *(_OWORD *)(v23 + 32);
        uint64_t v16 = *(void *)(v23 + 48);
        char v17 = *(unsigned char *)(v23 + 56);
        __int16 v18 = *(_WORD *)(v23 + 58);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v15 = v24;
        swift_release();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v44);
        goto LABEL_21;
      }
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v44);
      *(void *)&long long v44 = 0;
      *((void *)&v44 + 1) = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v33 = 0xD00000000000001DLL;
      uint64_t v34 = "invalid property identifier: ";
    }
    else
    {
      uint64_t v25 = swift_conformsToProtocol2();
      if (v25) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 0;
      }
      if (v25) {
        uint64_t v27 = v44;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v27)
      {
        uint64_t v41 = v26;
        sub_1B62C14BC(v47, v48);
        uint64_t v28 = sub_1B6E330F8();
        if ((v29 & 1) != 0 || v28 != 3)
        {
          uint64_t v37 = a1[3];
          uint64_t v38 = a1[4];
          sub_1B62C14BC(a1, v37);
          uint64_t v39 = sub_1B6C70F80(v37, v38);
          sub_1B67CB8F4(v42, v7, v39, v27, v41, (uint64_t)v50);
          sub_1B67CD3AC((uint64_t)v50, (uint64_t)&v58);
          uint64_t v14 = v59;
          if (v59)
          {
            uint64_t v15 = v58;
            long long v43 = v60;
            uint64_t v16 = v61;
            char v64 = v62;
            __int16 v18 = v63;
            swift_bridgeObjectRelease();
            char v17 = v64;
            goto LABEL_21;
          }
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          *(void *)&long long v44 = 0xD00000000000001CLL;
          *((void *)&v44 + 1) = 0x80000001B6F37040;
        }
        else
        {
          sub_1B62C550C((uint64_t)v47, v48);
          sub_1B6E33168();
          uint64_t v30 = a1[3];
          uint64_t v31 = a1[4];
          sub_1B62C14BC(a1, v30);
          uint64_t v32 = sub_1B6C70F80(v30, v31);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t, void, uint64_t, void, uint64_t))(v41 + 24))(v49, v5, v7, v44, v32, 0, v27);
          sub_1B67CD3AC((uint64_t)v49, (uint64_t)&v51);
          uint64_t v14 = v52;
          if (v52)
          {
            uint64_t v15 = v51;
            long long v43 = v53;
            uint64_t v16 = v54;
            char v57 = v55;
            __int16 v18 = v56;
            swift_bridgeObjectRelease();
            char v17 = v57;
            goto LABEL_21;
          }
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          *(void *)&long long v44 = 0xD000000000000023;
          *((void *)&v44 + 1) = 0x80000001B6F37060;
        }
        goto LABEL_36;
      }
      *(void *)&long long v44 = 0;
      *((void *)&v44 + 1) = 0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v33 = 0xD000000000000022;
      uint64_t v34 = "invalid ScriptKeyPath identifier: ";
    }
    *(void *)&long long v44 = v33;
    *((void *)&v44 + 1) = (unint64_t)(v34 - 32) | 0x8000000000000000;
LABEL_36:
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v35 = v44;
    sub_1B67CD358();
    swift_allocError();
    *(_OWORD *)uint64_t v36 = v35;
    *(unsigned char *)(v36 + 16) = 32;
    swift_willThrow();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v47);
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v40 = v10;
  sub_1B62C550C((uint64_t)v47, v48);
  sub_1B6E33168();
  uint64_t v12 = v44;
  long long v44 = 0u;
  long long v45 = 0u;
  uint64_t v13 = sub_1B666ED2C(v5, v7, v12, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, (uint64_t)&v44, 0, v11, v40);
  swift_bridgeObjectRelease();
  sub_1B62B32CC((uint64_t)&v44);
  uint64_t v15 = *(void *)(v13 + 16);
  uint64_t v14 = *(void *)(v13 + 24);
  long long v43 = *(_OWORD *)(v13 + 32);
  uint64_t v16 = *(void *)(v13 + 48);
  char v17 = *(unsigned char *)(v13 + 56);
  __int16 v18 = *(_WORD *)(v13 + 58);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
LABEL_21:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v47);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v14;
  *(_OWORD *)(a2 + 16) = v43;
  *(void *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 40) = v17;
  *(_WORD *)(a2 + 42) = v18;
  return result;
}

unint64_t sub_1B67CD358()
{
  unint64_t result = qword_1E9DD0370;
  if (!qword_1E9DD0370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0370);
  }
  return result;
}

uint64_t sub_1B67CD3AC(uint64_t a1, uint64_t a2)
{
  sub_1B62D82E0(0, (unint64_t *)&unk_1EB97E6F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B67CD420()
{
  unint64_t result = qword_1E9DD0378;
  if (!qword_1E9DD0378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0378);
  }
  return result;
}

uint64_t destroy for ScriptKeyPathMigration()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScriptKeyPathMigration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScriptKeyPathMigration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for ScriptKeyPathMigration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for ScriptKeyPathMigration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScriptKeyPathMigration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScriptKeyPathMigration()
{
  return &type metadata for ScriptKeyPathMigration;
}

__n128 _s8MetadataVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RenderPassFormat(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 88)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RenderPassFormat(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 88) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RenderPassFormat()
{
  return &type metadata for RenderPassFormat;
}

uint64_t sub_1B67CD728()
{
  return sub_1B6E33988();
}

uint64_t sub_1B67CD7B0()
{
  return sub_1B6E33928();
}

uint64_t sub_1B67CD824()
{
  return sub_1B6E33988();
}

BOOL sub_1B67CD8A8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1B67CD970((uint64_t)v7, (uint64_t)v9);
}

unint64_t sub_1B67CD918()
{
  unint64_t result = qword_1E9DD0380;
  if (!qword_1E9DD0380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0380);
  }
  return result;
}

BOOL sub_1B67CD970(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 8), *(int64x2_t *)(a2 + 8)), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 24), *(int64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0&& *(void *)(a1 + 40) == *(void *)(a2 + 40)&& *(void *)(a1 + 48) == *(void *)(a2 + 48)&& *(void *)(a1 + 56) == *(void *)(a2 + 56))
  {
    if (*(void *)(a1 + 64) == *(void *)(a2 + 64) && *(void *)(a1 + 72) == *(void *)(a2 + 72)) {
      return *(void *)(a1 + 80) == *(void *)(a2 + 80);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B67CDA28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 96);
  uint64_t v32 = (void *)(v1 + 96);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v5 + 32;
    uint64_t v8 = *(void *)(v1 + 16) + 56;
    uint64_t v30 = *(void *)(v1 + 16);
    swift_retain();
    uint64_t v9 = 0;
    do
    {
      uint64_t v11 = (uint64_t *)(v7 + 40 * v9);
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      ++v9;
      uint64_t v14 = (uint64_t *)v8;
      uint64_t v15 = v6;
      do
      {
        if (*(v14 - 3) == v12)
        {
          uint64_t v10 = *v14;
          goto LABEL_4;
        }
        v14 += 5;
        --v15;
      }
      while (v15);
      uint64_t v10 = 0;
LABEL_4:
      sub_1B6B3BE48(v4 + v10, a1, (uint64_t)&off_1F0F5B0A0, v12, v13);
    }
    while (v9 != v6);
    uint64_t v5 = v30;
    swift_release();
  }
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = 0xFFFFFFFFLL;
  if (*(void *)(v16 + 16))
  {
    uint64_t v18 = sub_1B62BE38C(*(void *)(v2 + 84));
    if (v19) {
      uint64_t v17 = *(void *)(*(void *)(v16 + 56) + 8 * v18);
    }
  }
  uint64_t v20 = *(void *)(v2 + 24);
  uint64_t v21 = *(void *)(v2 + 32);
  long long v29 = *(_OWORD *)(v2 + 56);
  long long v31 = *(_OWORD *)(v2 + 40);
  uint64_t v22 = *(void *)(v2 + 72);
  char v23 = *(unsigned char *)(v2 + 80);
  uint64_t v24 = *(void *)(v2 + 96);
  uint64_t v25 = *(void *)(v2 + 104);
  char v26 = *(unsigned char *)(v2 + 112);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 84) = v17;
  *(void *)(v27 + 16) = v5;
  *(void *)(v27 + 24) = v20;
  *(void *)(v27 + 32) = v21;
  *(_OWORD *)(v27 + 40) = v31;
  *(_OWORD *)(v27 + 56) = v29;
  *(void *)(v27 + 72) = v22;
  *(unsigned char *)(v27 + 80) = v23;
  *(void *)(v27 + 96) = v24;
  *(void *)(v27 + 104) = v25;
  *(unsigned char *)(v27 + 112) = v26;
  *(void *)(v2 + 84) = 0xFFFFFFFFLL;
  *uint64_t v32 = 0;
  v32[1] = 0;
  *(unsigned char *)(v2 + 112) = 1;
  swift_retain();
  swift_retain();
  swift_retain();
  return v27;
}

uint64_t sub_1B67CDC04(uint64_t a1)
{
  uint64_t v39 = *(void *)(v1 + 96);
  unint64_t v33 = (void *)(v1 + 96);
  uint64_t v34 = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v37 = v2 + 32;
    uint64_t v35 = OBJC_IVAR____TtC3VFX15DefaultRemapper_isReversed;
    uint64_t v4 = (uint64_t *)(v2 + 56);
    uint64_t v32 = *(void *)(v1 + 16);
    swift_retain();
    uint64_t v5 = 0;
    do
    {
      uint64_t v13 = (uint64_t *)(v37 + 40 * v5);
      uint64_t v14 = *v13;
      uint64_t v15 = v13[1];
      ++v5;
      uint64_t v16 = v4;
      uint64_t v17 = v3;
      while (*(v16 - 3) != v14)
      {
        v16 += 5;
        if (!--v17)
        {
          uint64_t v18 = 0;
          goto LABEL_12;
        }
      }
      uint64_t v18 = *v16;
LABEL_12:
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v6 = Strong;
        int v7 = *(unsigned __int8 *)(a1 + v35);
        uint64_t v8 = *(void **)(Strong + 16);
        objc_msgSend(v8, sel_lock);
        uint64_t v9 = 24;
        if (v7) {
          uint64_t v9 = 32;
        }
        uint64_t v10 = *(void *)(v6 + v9);
        swift_bridgeObjectRetain();
        objc_msgSend(v8, sel_unlock);
        swift_release();
        uint64_t v11 = MEMORY[0x1E4FBC868];
      }
      else
      {
        uint64_t v11 = MEMORY[0x1E4FBC868];
        uint64_t v10 = MEMORY[0x1E4FBC868];
      }
      type metadata accessor for RemapContext();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 24) = v10;
      *(void *)(v12 + 32) = v11;
      *(unsigned char *)(v12 + 16) = 0;
      sub_1B6B3BE48(v39 + v18, v12, (uint64_t)&off_1F0F5B0A0, v14, v15);
      swift_release();
    }
    while (v5 != v3);
    uint64_t v2 = v32;
    swift_release();
  }
  v42[3] = &type metadata for Entity;
  v42[4] = &off_1F0F9FC58;
  v42[0] = *(void *)(v34 + 84);
  uint64_t v20 = sub_1B62C14BC(v42, (uint64_t)&type metadata for Entity);
  v41[3] = (uint64_t)&type metadata for Entity;
  v41[4] = (uint64_t)&off_1F0F9FC58;
  uint64_t v21 = sub_1B62C12C4(v41);
  *uint64_t v21 = sub_1B6A69610(*v20);
  sub_1B67CE3C8();
  swift_dynamicCast();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v42);
  uint64_t v22 = v42[5];
  uint64_t v23 = *(void *)(v34 + 24);
  uint64_t v24 = *(void *)(v34 + 32);
  long long v38 = *(_OWORD *)(v34 + 56);
  long long v40 = *(_OWORD *)(v34 + 40);
  uint64_t v25 = *(void *)(v34 + 72);
  char v26 = *(unsigned char *)(v34 + 80);
  uint64_t v27 = *(void *)(v34 + 96);
  uint64_t v28 = *(void *)(v34 + 104);
  char v29 = *(unsigned char *)(v34 + 112);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 84) = v22;
  *(void *)(v30 + 16) = v2;
  *(void *)(v30 + 24) = v23;
  *(void *)(v30 + 32) = v24;
  *(_OWORD *)(v30 + 40) = v40;
  *(_OWORD *)(v30 + 56) = v38;
  *(void *)(v30 + 72) = v25;
  *(unsigned char *)(v30 + 80) = v26;
  *(void *)(v30 + 96) = v27;
  *(void *)(v30 + 104) = v28;
  *(unsigned char *)(v30 + 112) = v29;
  *(void *)(v34 + 84) = 0xFFFFFFFFLL;
  *unint64_t v33 = 0;
  v33[1] = 0;
  *(unsigned char *)(v34 + 112) = 1;
  swift_retain();
  swift_retain();
  swift_retain();
  return v30;
}

uint64_t sub_1B67CDF10()
{
  if ((*(unsigned char *)(v0 + 112) & 1) == 0)
  {
    uint64_t v1 = *(void *)(v0 + 96);
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      uint64_t v4 = v2 + 32;
      swift_retain();
      swift_retain_n();
      swift_retain();
      do
      {
        sub_1B633B0E8();
        v4 += 40;
        --v3;
      }
      while (v3);
      swift_release();
      swift_release();
      swift_release_n();
    }
    if (v1) {
      MEMORY[0x1BA9B84C0](v1, -1, -1);
    }
  }
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntitySnapshot()
{
  return self;
}

uint64_t sub_1B67CE038@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B67CDC04(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B67CE064(unint64_t a1)
{
  uint64_t v1 = sub_1B69DE568(a1);
  if ((v2 & 0x100000000) != 0)
  {
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  else
  {
    uint64_t v3 = v1;
    swift_retain();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1B637ED68(v4);
    swift_release();
    sub_1B62CEB80(v5, 0, 256, 0, (uint64_t)&v17);
    uint64_t v7 = v18;
    uint64_t v6 = v19;
    uint64_t v8 = v20;
    long long v15 = v21;
    uint64_t v9 = v22;
    char v14 = v23;
    long long v13 = v17;
    uint64_t v10 = swift_slowAlloc();
    type metadata accessor for EntitySnapshot();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 84) = a1;
    *(_OWORD *)(v11 + 16) = v13;
    *(void *)(v11 + 32) = v7;
    *(void *)(v11 + 40) = v6;
    *(void *)(v11 + 48) = v8;
    *(_OWORD *)(v11 + 56) = v15;
    *(void *)(v11 + 72) = v9;
    *(unsigned char *)(v11 + 80) = v14;
    *(void *)(v11 + 96) = v10;
    *(void *)(v11 + 104) = v10 + v6;
    *(unsigned char *)(v11 + 112) = 0;
    swift_retain();
    sub_1B66609DC(v11, v3 << 16 >> 48);
    swift_release();
    swift_release();
    return v11;
  }
  return result;
}

uint64_t sub_1B67CE21C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (!a2)
  {
    uint64_t v8 = (unsigned int *)(a1 + 84);
    uint64_t v9 = (unsigned int *)(a1 + 88);
    goto LABEL_6;
  }
  uint64_t v4 = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = sub_1B62BE38C(*(void *)(a1 + 84));
    if (v7)
    {
      uint64_t v8 = (unsigned int *)(*(void *)(v4 + 56) + 8 * v6);
      uint64_t v9 = v8 + 1;
LABEL_6:
      uint64_t v10 = *v8;
      unint64_t v5 = (unint64_t)*v9 << 32;
      goto LABEL_9;
    }
    unint64_t v5 = 0;
  }
  uint64_t v10 = 0xFFFFFFFFLL;
LABEL_9:
  uint64_t v11 = sub_1B69DE568(v5 | v10);
  if ((v12 & 0x100000000) != 0)
  {
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B681F698();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  else
  {
    uint64_t v13 = v11 << 16 >> 48;
    swift_retain();
    if (a2)
    {
      uint64_t v14 = swift_retain();
      uint64_t v3 = sub_1B67CDA28(v14);
      sub_1B6660B44(v13, v3);
      swift_release();
    }
    else
    {
      sub_1B6660B44(v13, v3);
      swift_retain();
    }
    swift_release();
    return v3;
  }
  return result;
}

unint64_t sub_1B67CE3C8()
{
  unint64_t result = qword_1E9DCFCD0;
  if (!qword_1E9DCFCD0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DCFCD0);
  }
  return result;
}

uint64_t sub_1B67CE420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Position;
  *(void *)(inited + 40) = &off_1F0FA6F58;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CE62C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for GraphScriptingConfig;
  *(void *)(inited + 40) = &off_1F0F80890;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CE838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for CodeGenerationInitialized;
  *(void *)(inited + 40) = &off_1F0F94368;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CEA44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for CodeGenerationComponent;
  *(void *)(inited + 40) = &off_1F0F8ECE8;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CEC50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for DoNotExport;
  *(void *)(inited + 40) = &off_1F0F54D58;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CEE5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for DoNotSave;
  *(void *)(inited + 40) = &off_1F0FA8658;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CF068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Bindings;
  *(void *)(inited + 40) = &off_1F0FA3538;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CF274@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Particle;
  *(void *)(inited + 40) = &off_1F0FA6CF0;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CF480@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Velocity;
  *(void *)(inited + 40) = &off_1F0FA7C80;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CF68C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for ParticleLifetime;
  *(void *)(inited + 40) = &off_1F0F6DCC0;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CF898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for ParticleTextureFrame;
  *(void *)(inited + 40) = &off_1F0F82C30;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CFAA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for DebugInfoWireframePrimitive;
  *(void *)(inited + 40) = &off_1F0F97518;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CFCB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for ParticleAngle;
  *(void *)(inited + 40) = &off_1F0F60948;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67CFEBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Color;
  *(void *)(inited + 40) = &off_1F0F9ED50;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67D00C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for Children;
  *(void *)(inited + 40) = &off_1F0FA3910;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t sub_1B67D02D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = (uint64_t)*v1 + 41;
  uint64_t v6 = (*v1)[8];
  unint64_t v7 = v4[9];
  sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for SubEntity;
  *(void *)(inited + 40) = &off_1F0FAA030;
  if (v7 > 0xF)
  {
    uint64_t v25 = sub_1B62F79D4((char *)(v5 + v6), v7 >> 4);
    sub_1B62F8084(inited);
    uint64_t inited = v25;
  }
  uint64_t v9 = v4[10];
  int64_t v10 = v4[11];
  unint64_t v11 = 1;
  uint64_t v12 = sub_1B6E31C98();
  *(void *)(v12 + 16) = 1;
  *(unsigned char *)(v12 + 32) = 3;
  if (v10)
  {
    uint64_t v25 = sub_1B62F7C94((char *)(v5 + v9), v10);
    sub_1B62F81D8(v12);
    uint64_t v12 = v25;
    unint64_t v11 = *(void *)(v25 + 16);
  }
  uint64_t v13 = (uint64_t)*v2 + 41;
  uint64_t v14 = (char *)(v13 + (*v2)[12]);
  unint64_t v15 = (unint64_t)(*v2)[13] >> 4;
  uint64_t v16 = (char *)(v13 + (*v2)[14]);
  uint64_t v17 = (*v2)[15] / 0x18u;
  int v18 = *((_DWORD *)v2 + 2);
  char v19 = *((unsigned char *)v2 + 12);
  uint64_t v20 = v2[4];
  long long v21 = v2[2];
  char v22 = *((unsigned char *)v2 + 24);
  uint64_t v23 = sub_1B62C8668((char *)(inited + 32), *(void *)(inited + 16), (char *)(v12 + 32), v11, v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v23;
  *(_DWORD *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 12) = v19;
  *(_WORD *)(a1 + 13) = v26;
  *(unsigned char *)(a1 + 15) = v27;
  *(void *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 24) = v22;
  *(_DWORD *)(a1 + 25) = v25;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)((char *)&v25 + 3);
  *(void *)(a1 + 32) = v20;
  return result;
}

uint64_t type metadata accessor for ParticlePositionOverTexture.System()
{
  return self;
}

uint64_t sub_1B67D0504(void *a1)
{
  uint64_t v3 = v1;
  sub_1B67D1A64(0, &qword_1E9DD0398, (uint64_t (*)(void))sub_1B67D1A10, (uint64_t)&type metadata for ParticlePositionOverTexture.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  int64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B67D1A10();
  sub_1B6E33A88();
  uint64_t v14 = *v3;
  char v13 = 0;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (!v2)
  {
    LOBYTE(v14) = *((unsigned char *)v3 + 8);
    char v13 = 1;
    sub_1B66C522C();
    sub_1B6E32FA8();
    LOBYTE(v14) = *((unsigned char *)v3 + 9);
    char v13 = 2;
    sub_1B66C63C0();
    sub_1B6E32FA8();
    uint64_t v14 = *(uint64_t *)((char *)v3 + 12);
    char v13 = 3;
    sub_1B62AA858();
    sub_1B62AA5EC(qword_1E9DD02C8);
    sub_1B6E32FA8();
    uint64_t v14 = v3[3];
    char v13 = 4;
    sub_1B67D1A64(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    sub_1B67D1ACC((unint64_t *)&qword_1EB97D1B8);
    sub_1B6E32FA8();
    uint64_t v14 = v3[4];
    char v13 = 5;
    sub_1B6E32FA8();
    LOBYTE(v14) = 6;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

const char *sub_1B67D087C()
{
  return "ParticlePositionOverTexture";
}

uint64_t sub_1B67D0890(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB8680(*a1, *a2);
}

uint64_t sub_1B67D089C()
{
  uint64_t result = 0x65727574786574;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C656E6E616863;
      break;
    case 2:
      uint64_t result = 0x4D73736572646461;
      break;
    case 3:
      uint64_t result = 0x65676E6172;
      break;
    case 4:
      uint64_t result = 0x656C616373;
      break;
    case 5:
      uint64_t result = 1935763810;
      break;
    case 6:
      uint64_t result = 0x656C676E61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B67D0970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B67D0AC8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B67D0998(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1B67D09A4(uint64_t a1)
{
  unint64_t v2 = sub_1B67D1A10();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67D09E0(uint64_t a1)
{
  unint64_t v2 = sub_1B67D1A10();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B67D0A1C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B67D15F8(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 12);
    *(_OWORD *)((char *)a2 + 28) = *(_OWORD *)((char *)v7 + 12);
  }
  return result;
}

uint64_t sub_1B67D0A60(void *a1)
{
  return sub_1B67D0504(a1);
}

uint64_t sub_1B67D0A78()
{
  return type metadata accessor for ParticlePositionOverTexture.System();
}

double sub_1B67D0A98@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xFFFFFFFFLL;
  *(_WORD *)(a1 + 8) = 512;
  *(void *)(a1 + 12) = 0x3F80000000000000;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(a1 + 24) = result;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1B67D0AC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65727574786574 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D73736572646461 && a2 == 0xEB0000000065646FLL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65676E6172 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1935763810 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C676E61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void *sub_1B67D0DA0(uint64_t a1)
{
  uint64_t v101 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)a1;
  swift_retain();
  uint64_t v3 = *(void *)(a1 + 8);
  swift_retain();
  sub_1B695DD24(v3, (uint64_t)&v92);
  swift_release();
  unsigned __int8 v4 = BYTE8(v92);
  if ((WORD4(v92) & 0xFF00) == 0x400)
  {
    uint64_t v5 = 0;
    unsigned __int8 v4 = 0;
    double v6 = 0.0;
    __asm { FMOV            V9.2S, #1.0 }
    float v12 = 1.0;
    float v13 = 0.0;
    LOBYTE(v14) = 2;
    unsigned int v15 = -1;
    float v16 = 0.0;
    goto LABEL_4;
  }
  float v16 = *((float *)&v94 + 2);
  double v6 = *(double *)&v94;
  _D9 = *((double *)&v93 + 1);
  unsigned int v15 = v92;
  uint64_t v5 = DWORD1(v92);
  uint64_t v14 = *((void *)&v92 + 1) >> 8;
  float v13 = *((float *)&v92 + 3);
  float v12 = *(float *)&v93;
  if (v92 == -1)
  {
LABEL_4:
    if (!v5)
    {
      return (void *)swift_release();
    }
  }
  sub_1B6CEE8E8(v15 | (unint64_t)(v5 << 32), v77);
  sub_1B62CA210((uint64_t)v77, (uint64_t)v90, (unint64_t *)&unk_1EB97EFD0);
  if (!v91) {
    return (void *)swift_release();
  }
  long long v96 = v90[4];
  long long v97 = v90[5];
  long long v98 = v90[6];
  uint64_t v99 = v91;
  long long v92 = v90[0];
  long long v93 = v90[1];
  long long v94 = v90[2];
  long long v95 = v90[3];
  sub_1B6AFEFC8((uint64_t)&v92, v14, 1, (uint64_t)v78);
  sub_1B6657630((uint64_t)v78, (uint64_t)v87);
  if (*((void *)&v88 + 1) == 1)
  {
    sub_1B66576EC(v77[0].i64);
    return (void *)swift_release();
  }
  v74[0] = v87[0];
  v74[1] = v87[1];
  long long v75 = v88;
  uint64_t v76 = v89;
  long long v18 = *(_OWORD *)(a1 + 104);
  long long v71 = *(_OWORD *)(a1 + 88);
  long long v72 = v18;
  uint64_t v73 = *(void *)(a1 + 120);
  sub_1B67CE420((uint64_t)v65);
  sub_1B688CF80(&v62, _D9, v16, v6);
  v69[0] = v65[0];
  v69[1] = v65[1];
  uint64_t v70 = v66;
  sub_1B62C9DA8(v2, (uint64_t)v69, 0x200000000, &v79);
  sub_1B62CA210((uint64_t)&v79, (uint64_t)v80, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v80[0])
  {
    sub_1B66576EC(v77[0].i64);
    sub_1B62CA064((uint64_t)v65);
    return (void *)swift_release();
  }
  if (v86 <= 0 || (uint64_t v51 = v83) == 0)
  {
    sub_1B6657794(&v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F2C8);
    sub_1B66576EC(v77[0].i64);
    sub_1B62CA064((uint64_t)v65);
    goto LABEL_45;
  }
  float v19 = v12 - v13;
  uint64_t v20 = v85[4];
  char v54 = *(unsigned char *)(v84 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  v67[0] = v80[0];
  v67[1] = v80[1];
  uint64_t v68 = v81;
  uint64_t v48 = (uint64_t)(v85 + 6);
  uint64_t v49 = v82;
  char v55 = v85;
  uint64_t v47 = v85 + 8;
  float32x2_t v57 = (float32x2_t)v63;
  float32x2_t v58 = *(float32x2_t *)v62.f32;
  float32x2_t v56 = (float32x2_t)v64;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v45 = v4;
  uint64_t v23 = v4;
  uint64_t v50 = v20;
  do
  {
    uint64_t v24 = (unsigned int *)(v49 + 48 * v21);
    uint64_t v53 = *v24;
    uint64_t v52 = v24[1];
    __int16 v26 = (uint64_t *)*((void *)v24 + 2);
    uint64_t v25 = *((void *)v24 + 3);
    uint64_t v27 = *((void *)v24 + 4);
    uint64_t v28 = *((void *)v24 + 5);
    uint64_t v59 = v22;
    if (v54)
    {
      char v29 = *(os_unfair_lock_s **)(v28 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v29);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v28 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v20);
    sub_1B62CA210(v48, (uint64_t)v100, &qword_1EB97DE20);
    uint64_t v30 = v55[4];
    uint64_t v31 = *(void *)(*(void *)(*(void *)(*(void *)(v28 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v55[6] = ecs_stack_allocator_allocate(v30, 48 * v31, 8);
    v55[7] = v31;
    v47[1] = 0;
    v47[2] = 0;
    *uint64_t v47 = 0;
    swift_release();
    uint64_t v32 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v26, v25, v27, (uint64_t)v55);
    unint64_t v33 = (float32x4_t *)v32;
    if (v26)
    {
      uint64_t v22 = v59;
      if (!v27) {
        goto LABEL_30;
      }
      uint64_t v20 = v50;
      v34.i32[3] = v46;
      do
      {
        __int32 v60 = v34.i32[3];
        (*((void (**)(_OWORD *, double))&v75 + 1))(v74, COERCE_DOUBLE(vadd_f32(vmul_laneq_f32(v57, *v33, 2), vadd_f32(v56, vmul_n_f32(v58, COERCE_FLOAT(*v33))))));
        switch(v23)
        {
          case 1:
            v36.i32[0] = v36.i32[1];
            break;
          case 2:
            v36.i32[0] = v36.i32[2];
            break;
          case 3:
            v36.i32[0] = v36.i32[3];
            break;
          case 4:
            float v35 = 0.2126 * *(float *)v36.i32;
            v36.i32[0] = vextq_s8(v36, v36, 8uLL).u32[0];
            *(float32x2_t *)v36.i8 = vmul_f32(*(float32x2_t *)v36.i8, (float32x2_t)0x3F3717593D93DD98);
            *(float *)v36.i32 = *(float *)v36.i32 + (float)(v35 + *(float *)&v36.i32[1]);
            break;
          default:
            break;
        }
        float32x4_t v34 = *v33;
        v34.i32[3] = v60;
        float32x4_t v37 = v34;
        v37.f32[1] = v13 + (float)(v19 * *(float *)v36.i32);
        v37.i32[3] = 1.0;
        *v33++ = v37;
        --v27;
      }
      while (v27);
      __int32 v46 = v60;
    }
    else
    {
      uint64_t v22 = v59;
      if (v53 == v52)
      {
LABEL_30:
        uint64_t v20 = v50;
        goto LABEL_39;
      }
      uint64_t v38 = v52 - v53;
      uint64_t v39 = (float32x4_t *)(v32 + 16 * v53);
      uint64_t v20 = v50;
      v40.i32[3] = v44;
      do
      {
        __int32 v61 = v40.i32[3];
        (*((void (**)(_OWORD *, double))&v75 + 1))(v74, COERCE_DOUBLE(vadd_f32(vmul_laneq_f32(v57, *v39, 2), vadd_f32(v56, vmul_n_f32(v58, COERCE_FLOAT(*v39))))));
        switch(v45)
        {
          case 1:
            v42.i32[0] = v42.i32[1];
            break;
          case 2:
            v42.i32[0] = v42.i32[2];
            break;
          case 3:
            v42.i32[0] = v42.i32[3];
            break;
          case 4:
            float v41 = 0.2126 * *(float *)v42.i32;
            v42.i32[0] = vextq_s8(v42, v42, 8uLL).u32[0];
            *(float32x2_t *)v42.i8 = vmul_f32(*(float32x2_t *)v42.i8, (float32x2_t)0x3F3717593D93DD98);
            *(float *)v42.i32 = *(float *)v42.i32 + (float)(v41 + *(float *)&v42.i32[1]);
            break;
          default:
            break;
        }
        float32x4_t v40 = *v39;
        v40.i32[3] = v61;
        float32x4_t v43 = v40;
        v43.f32[1] = v13 + (float)(v19 * *(float *)v42.i32);
        v43.i32[3] = 1.0;
        *v39++ = v43;
        --v38;
      }
      while (v38);
      __int32 v44 = v61;
    }
LABEL_39:
    sub_1B6345178(v55, (unsigned __int16 **)v67, (uint64_t)v100);
    sub_1B634507C((char *)v28);
    ecs_stack_allocator_pop_snapshot(v20);
    if (v54)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 376));
    }
    swift_release();
    ++v21;
  }
  while (v21 != v51);
  sub_1B66576EC(v77[0].i64);
  sub_1B62CA064((uint64_t)v65);
LABEL_45:
  swift_release();
  sub_1B6657794(&v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
  return sub_1B6657794(&v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1B632F27C);
}

uint64_t getEnumTagSinglePayload for ParticlePositionOverTexture(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 44)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticlePositionOverTexture(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(void *)double result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 44) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 44) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticlePositionOverTexture()
{
  return &type metadata for ParticlePositionOverTexture;
}

uint64_t sub_1B67D15F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B67D1A64(0, &qword_1E9DD0388, (uint64_t (*)(void))sub_1B67D1A10, (uint64_t)&type metadata for ParticlePositionOverTexture.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  int64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = a1[3];
  uint64_t v24 = a1;
  sub_1B62C14BC(a1, v11);
  sub_1B67D1A10();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v24);
  }
  uint64_t v12 = v7;
  char v25 = 0;
  sub_1B62B1EA8();
  uint64_t v13 = v6;
  sub_1B6E32DF8();
  uint64_t v14 = v26;
  char v25 = 1;
  sub_1B62A85E8();
  sub_1B6E32DF8();
  char v15 = v26;
  char v25 = 2;
  sub_1B62AAB40();
  sub_1B6E32DF8();
  int v16 = v26;
  sub_1B62AA858();
  char v25 = 3;
  sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
  sub_1B6E32DF8();
  HIDWORD(v23) = v16;
  uint64_t v17 = v26;
  sub_1B67D1A64(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  char v25 = 4;
  sub_1B67D1ACC((unint64_t *)&qword_1EB97D1D0);
  sub_1B6E32DF8();
  uint64_t v18 = v26;
  char v25 = 5;
  sub_1B6E32DF8();
  uint64_t v19 = v26;
  LOBYTE(v26) = 6;
  sub_1B6E32DC8();
  int v21 = v20;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v13);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v24);
  *(void *)a2 = v14;
  *(unsigned char *)(a2 + 8) = v15;
  *(unsigned char *)(a2 + 9) = BYTE4(v23);
  *(void *)(a2 + 12) = v17;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v19;
  *(_DWORD *)(a2 + 40) = v21;
  return result;
}

unint64_t sub_1B67D1A10()
{
  unint64_t result = qword_1E9DD0390;
  if (!qword_1E9DD0390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0390);
  }
  return result;
}

void sub_1B67D1A64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B67D1ACC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B67D1A64(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ParticlePositionOverTexture.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67D1C14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticlePositionOverTexture.CodingKeys()
{
  return &type metadata for ParticlePositionOverTexture.CodingKeys;
}

unint64_t sub_1B67D1C50()
{
  unint64_t result = qword_1E9DD03A0;
  if (!qword_1E9DD03A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD03A0);
  }
  return result;
}

unint64_t sub_1B67D1CA8()
{
  unint64_t result = qword_1E9DD03A8;
  if (!qword_1E9DD03A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD03A8);
  }
  return result;
}

unint64_t sub_1B67D1D00()
{
  unint64_t result = qword_1E9DD03B0;
  if (!qword_1E9DD03B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD03B0);
  }
  return result;
}

uint64_t sub_1B67D1D54()
{
  return 0x200000000;
}

uint64_t sub_1B67D1D5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  int v5 = *(_DWORD *)(v1 + 8);
  int v4 = *(_DWORD *)(v1 + 12);
  swift_retain();
  _ZF = v5 == -1 && v4 == 0;
  if (!_ZF
    && (v5 & 0x80000000) == 0
    && *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v5
    && ((uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v4 == -1)
     || *(_DWORD *)(v7 + 12 * v5 + 8) == v4))
  {
    uint64_t v17 = (unsigned int *)(v7 + 12 * v5);
    sub_1B69638F4(*(void *)(*(void *)(v3 + 136) + 8 * (int)*v17 + 32), *v17 | ((unint64_t)*((unsigned __int16 *)v17 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v17 + 2) << 32), 96, v3, (uint64_t)&v30);
    uint64_t result = swift_release();
    if (v30 != 1)
    {
      int v10 = v40;
      int v18 = v37;
      int v9 = v38;
      int v20 = v35;
      int v19 = v36;
      __int16 v22 = v31;
      int v21 = v32;
      uint64_t result = v31 >> 16;
      unint64_t v23 = v31 >> 24;
      unint64_t v24 = HIDWORD(v31);
      unint64_t v25 = HIDWORD(v32);
      uint64_t v26 = v33;
      uint64_t v27 = v34;
      unint64_t v28 = HIDWORD(v35);
      unint64_t v29 = HIDWORD(v36);
      char v15 = v39 & 1;
      char v16 = v41 & 1;
      *(void *)a1 = v30;
      *(unsigned char *)(a1 + 8) = v22 & 1;
      *(unsigned char *)(a1 + 9) = HIBYTE(v22) & 1;
      *(unsigned char *)(a1 + 10) = result;
      *(unsigned char *)(a1 + 11) = v23;
      *(_DWORD *)(a1 + 12) = v24;
      *(_DWORD *)(a1 + 16) = v21;
      *(_DWORD *)(a1 + 20) = v25;
      *(void *)(a1 + 32) = v26;
      *(void *)(a1 + 40) = v27;
      *(_DWORD *)(a1 + 48) = v20;
      *(_DWORD *)(a1 + 52) = v28;
      *(_DWORD *)(a1 + 56) = v19;
      *(_DWORD *)(a1 + 60) = v29;
      *(unsigned char *)(a1 + 64) = v18 & 1;
      *(unsigned char *)(a1 + 65) = BYTE1(v18) & 1;
      *(unsigned char *)(a1 + 66) = BYTE2(v18) & 1;
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = swift_release();
  }
  int v9 = 0;
  int v10 = 0;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 65793;
  __asm { FMOV            V0.2S, #1.0 }
  *(void *)(a1 + 12) = _D0;
  *(_DWORD *)(a1 + 20) = 0;
  *(_OWORD *)(a1 + 32) = xmmword_1B6E86150;
  *(_OWORD *)(a1 + 48) = xmmword_1B6E4F2C0;
  char v15 = 1;
  *(_WORD *)(a1 + 64) = 1;
  *(unsigned char *)(a1 + 66) = 0;
  char v16 = 1;
LABEL_11:
  *(_DWORD *)(a1 + 68) = v9;
  *(unsigned char *)(a1 + 72) = v15;
  *(_DWORD *)(a1 + 76) = v10;
  *(unsigned char *)(a1 + 80) = v16;
  return result;
}

double sub_1B67D1F1C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  int v5 = *(_DWORD *)(v1 + 8);
  int v4 = *(_DWORD *)(v1 + 12);
  swift_retain();
  BOOL v6 = v5 == -1 && v4 == 0;
  if (!v6
    && (v5 & 0x80000000) == 0
    && *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v5
    && ((uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v4 == -1)
     || *(_DWORD *)(v7 + 12 * v5 + 8) == v4))
  {
    int v9 = (unsigned int *)(v7 + 12 * v5);
    sub_1B6964598(*(void *)(*(void *)(v3 + 136) + 8 * (int)*v9 + 32), *v9 | ((unint64_t)*((unsigned __int16 *)v9 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v9 + 2) << 32), 112, v3, (uint64_t)&v13);
    swift_release();
    if (v13 != 1)
    {
      __int16 v10 = v20;
      char v11 = v21;
      uint64_t v12 = v19;
      *(void *)a1 = v13;
      *(_OWORD *)(a1 + 8) = v14;
      *(_OWORD *)(a1 + 24) = v15;
      *(_OWORD *)(a1 + 40) = v16;
      *(_OWORD *)(a1 + 56) = v17;
      double result = *(double *)&v18;
      *(_OWORD *)(a1 + 72) = v18;
      *(void *)(a1 + 88) = v12;
      *(unsigned char *)(a1 + 98) = v11;
      *(_WORD *)(a1 + 96) = v10;
      return result;
    }
  }
  else
  {
    swift_release();
  }
  *(void *)a1 = 0;
  *(_OWORD *)(a1 + 8) = xmmword_1B6E86160;
  *(void *)(a1 + 24) = 8;
  *(unsigned char *)(a1 + 32) = 2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 1;
  *(_OWORD *)(a1 + 68) = xmmword_1B6E86170;
  double result = 4294968350.0;
  *(void *)(a1 + 84) = 0x41F0000041A00000;
  *(_DWORD *)(a1 + 92) = 1065353216;
  *(_WORD *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 98) = 0;
  return result;
}

uint64_t sub_1B67D20A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  int v5 = *(_DWORD *)(v1 + 8);
  int v4 = *(_DWORD *)(v1 + 12);
  swift_retain();
  BOOL v6 = v5 == -1 && v4 == 0;
  if (!v6
    && (v5 & 0x80000000) == 0
    && *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v5
    && ((uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v4 == -1)
     || *(_DWORD *)(v7 + 12 * v5 + 8) == v4))
  {
    sub_1B6966740(*(void *)(*(void *)(v3 + 136) + 8 * *(int *)(v7 + 12 * v5) + 32), *(_DWORD *)(v7 + 12 * v5), *(_WORD *)(v7 + 12 * v5 + 4), 40, v3, (uint64_t)v16);
    uint64_t v9 = v16[0];
    uint64_t v11 = v16[1];
    uint64_t v12 = v16[2];
    unint64_t v15 = v16[3];
    float v14 = v17;
    swift_release();
    uint64_t result = sub_1B62CA210((uint64_t)v16, (uint64_t)v18, &qword_1E9DD03C0);
    if (v18[0])
    {
      unint64_t v13 = HIDWORD(v15);
      goto LABEL_11;
    }
  }
  else
  {
    swift_release();
  }
  uint64_t result = (uint64_t)sub_1B6D3EC54((uint64_t)&unk_1F0F9B408);
  uint64_t v9 = result;
  uint64_t v11 = v10;
  uint64_t v12 = 0;
  LODWORD(v13) = 0;
  float v14 = 1.0;
  LOBYTE(v15) = 1;
LABEL_11:
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 24) = v15;
  *(_DWORD *)(a1 + 28) = v13;
  *(float *)(a1 + 32) = v14;
  return result;
}

uint64_t sub_1B67D21EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  int v5 = *(_DWORD *)(v1 + 8);
  int v4 = *(_DWORD *)(v1 + 12);
  swift_retain();
  BOOL v6 = v5 == -1 && v4 == 0;
  if (!v6
    && (v5 & 0x80000000) == 0
    && *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) > v5
    && ((uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v4 == -1)
     || *(_DWORD *)(v7 + 12 * v5 + 8) == v4))
  {
    sub_1B6966900(*(void *)(*(void *)(v3 + 136) + 8 * *(int *)(v7 + 12 * v5) + 32), *(_DWORD *)(v7 + 12 * v5), *(_WORD *)(v7 + 12 * v5 + 4), 48, v3, (uint64_t)&v16);
    uint64_t v12 = v16;
    char v15 = v17;
    uint64_t v9 = v18;
    uint64_t v11 = v19;
    uint64_t v13 = v20;
    char v14 = v21;
    swift_release();
    uint64_t result = sub_1B62CA210((uint64_t)&v16, (uint64_t)v22, &qword_1E9DD03C8);
    if (v23) {
      goto LABEL_11;
    }
  }
  else
  {
    swift_release();
  }
  uint64_t result = (uint64_t)sub_1B6D3EC54((uint64_t)&unk_1F0F9B3C8);
  uint64_t v9 = result;
  uint64_t v11 = v10;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  char v14 = 1;
  char v15 = 2;
LABEL_11:
  *(void *)a1 = v12;
  *(unsigned char *)(a1 + 8) = v15;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v13;
  *(unsigned char *)(a1 + 40) = v14;
  return result;
}

uint64_t sub_1B67D2338(uint64_t a1)
{
  unint64_t v2 = sub_1B67DC54C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67D2374(uint64_t a1)
{
  unint64_t v2 = sub_1B67DC54C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B67D23B0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67D24DC(a1, a2, a3, &qword_1E9DD0450, (uint64_t (*)(void))sub_1B67DC54C, (uint64_t)&type metadata for ParticleAffectedByGlobalFluidSolver2DEmitter.CodingKeys, (void (*)(void))sub_1B67DC54C);
}

uint64_t sub_1B67D2400(uint64_t a1)
{
  unint64_t v2 = sub_1B67DC4F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67D243C(uint64_t a1)
{
  unint64_t v2 = sub_1B67DC4F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B67D2478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B67D2F34(a1, a2, a3, a4, (uint64_t)&type metadata for ParticleAffectedByGlobalFluidSolver2DEmitter, (uint64_t)&off_1F0F9E050);
}

uint64_t sub_1B67D248C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67D24DC(a1, a2, a3, &qword_1E9DD0440, (uint64_t (*)(void))sub_1B67DC4F8, (uint64_t)&type metadata for ParticleGlobalFluidSolver2DEmitter.CodingKeys, (void (*)(void))sub_1B67DC4F8);
}

uint64_t sub_1B67D24DC(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(void))
{
  sub_1B67DC5A0(0, a4, a5, a6, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  char v14 = (char *)&v16 - v13;
  sub_1B62C14BC(a1, a1[3]);
  a7();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B67D2618(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB8AA8(*a1, *a2);
}

uint64_t sub_1B67D2624()
{
  return sub_1B69EA950();
}

uint64_t sub_1B67D2630()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B67D2748()
{
  return sub_1B69EA950();
}

uint64_t sub_1B67D2750@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B67D9270();
  *a1 = result;
  return result;
}

void sub_1B67D2780(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1953066341;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x656372756F73;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x737569646172;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      *(void *)a1 = 0x797469736E6564;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 4:
      *(void *)a1 = 0x797469636F6C6576;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 5:
      *(void *)a1 = 0x74696D45776F6873;
      *(void *)(a1 + 8) = 0xEB00000000726574;
      break;
    case 6:
      strcpy((char *)a1, "showVelocity");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1B67D287C()
{
  uint64_t result = 1953066341;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656372756F73;
      break;
    case 2:
      uint64_t result = 0x737569646172;
      break;
    case 3:
      uint64_t result = 0x797469736E6564;
      break;
    case 4:
      uint64_t result = 0x797469636F6C6576;
      break;
    case 5:
      uint64_t result = 0x74696D45776F6873;
      break;
    case 6:
      uint64_t result = 0x6F6C6556776F6873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B67D2960@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B67D9270();
  *a1 = result;
  return result;
}

uint64_t sub_1B67D2988(uint64_t a1)
{
  unint64_t v2 = sub_1B67DBF68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67D29C4(uint64_t a1)
{
  unint64_t v2 = sub_1B67DBF68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B67D2A00(void *a1)
{
  uint64_t v3 = v1;
  sub_1B67DC5A0(0, &qword_1E9DD03F8, (uint64_t (*)(void))sub_1B67DBF68, (uint64_t)&type metadata for ParticleFluidSolver2DEmitter.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B67DBF68();
  sub_1B6E33A88();
  char v19 = 0;
  sub_1B6E32F58();
  if (!v2)
  {
    v12[1] = *(void *)(v3 + 4);
    char v18 = 1;
    sub_1B6657A10();
    sub_1B6E32FA8();
    char v17 = 2;
    sub_1B6E32F78();
    char v16 = 3;
    sub_1B6E32F78();
    char v15 = 4;
    sub_1B6E32F78();
    char v14 = 5;
    sub_1B6E32F58();
    char v13 = 6;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B67D2C78()
{
  return type metadata accessor for ParticleFluidSolver2DEmitterSystem();
}

double sub_1B67D2C98@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B67D92BC(a1, (uint64_t)v5);
  if (!v2)
  {
    *a2 = *(_OWORD *)v5;
    double result = *(double *)&v5[10];
    *(_OWORD *)((char *)a2 + 10) = *(_OWORD *)&v5[10];
  }
  return result;
}

uint64_t sub_1B67D2CDC(void *a1)
{
  return sub_1B67D2A00(a1);
}

uint64_t sub_1B67D2CF4(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(a2 + 8))(v2 + 4, 0, ObjectType, a2);
}

double sub_1B67D2D4C@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 4) = 0xFFFFFFFFLL;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(a1 + 12) = result;
  *(_DWORD *)(a1 + 20) = 1065353216;
  *(_WORD *)(a1 + 24) = 1;
  return result;
}

uint64_t type metadata accessor for ParticleFluidSolver2DEmitterSystem()
{
  return self;
}

const char *sub_1B67D2D9C()
{
  return "ParticleFluidSolver2DEmitter";
}

uint64_t sub_1B67D2DB0(uint64_t a1)
{
  unint64_t v2 = sub_1B67DC608();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67D2DEC(uint64_t a1)
{
  unint64_t v2 = sub_1B67DC608();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B67D2E28(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67D24DC(a1, a2, a3, &qword_1E9DD0460, (uint64_t (*)(void))sub_1B67DC608, (uint64_t)&type metadata for ParticleAffectedByGlobalFluidSolver2DSolver.CodingKeys, (void (*)(void))sub_1B67DC608);
}

uint64_t sub_1B67D2E78@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1B67D2EA8(uint64_t a1)
{
  unint64_t v2 = sub_1B67DC4A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67D2EE4(uint64_t a1)
{
  unint64_t v2 = sub_1B67DC4A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1B67D2F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B67D2F34(a1, a2, a3, a4, (uint64_t)&type metadata for ParticleAffectedByGlobalFluidSolver2DSolver, (uint64_t)&off_1F0F9DF60);
}

double sub_1B67D2F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1B62F7B24(0, (unint64_t *)&qword_1EB980BA0, 255, (uint64_t (*)(uint64_t))sub_1B663C11C, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a6;
  return result;
}

uint64_t sub_1B67D2FB0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B67D24DC(a1, a2, a3, &qword_1E9DD0430, (uint64_t (*)(void))sub_1B67DC4A4, (uint64_t)&type metadata for ParticleGlobalFluidSolver2DSolver.CodingKeys, (void (*)(void))sub_1B67DC4A4);
}

void sub_1B67D3000()
{
  v0[3] = 0u;
  v0[4] = 0u;
  v0[1] = 0u;
  v0[2] = 0u;
  sub_1B6DA45B4();
}

void **sub_1B67D30C4()
{
  sub_1B6DA4618(v0[2]);
  sub_1B6DA4618(v0[3]);
  sub_1B6DA4618(v0[4]);
  sub_1B6DA4618(v0[5]);
  sub_1B6DA4618(v0[6]);
  sub_1B6DA4618(v0[7]);
  sub_1B6DA4618(v0[8]);
  sub_1B6DA4618(v0[9]);
  return v0;
}

uint64_t sub_1B67D311C()
{
  sub_1B67D30C4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ParticleFluidSolver2DSolverData()
{
  return self;
}

uint64_t sub_1B67D3174(uint64_t result, char a2, float32x4_t a3, float a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, __n128 a8)
{
  uint64_t v9 = v8;
  int32x4_t v12 = (int32x4_t)vmulq_f32(a5, a5);
  float32x4_t v13 = vmulq_f32(a6, a6);
  int32x4_t v14 = (int32x4_t)vmulq_f32(a7, a7);
  int32x4_t v15 = vzip2q_s32(v12, v14);
  float32x4_t v16 = (float32x4_t)vzip1q_s32(vzip1q_s32(v12, v14), (int32x4_t)v13);
  float32x4_t v17 = (float32x4_t)vtrn2q_s32(v12, (int32x4_t)v13);
  v17.i32[2] = v14.i32[1];
  float32x4_t v18 = vaddq_f32((float32x4_t)vzip1q_s32(v15, vdupq_laneq_s32((int32x4_t)v13, 2)), vaddq_f32(v16, v17));
  v13.i64[0] = 0x80000000800000;
  v13.i64[1] = 0x80000000800000;
  int32x4_t v19 = vcgeq_f32(v13, v18);
  v18.i32[3] = 0;
  float32x4_t v20 = vrsqrteq_f32(v18);
  float32x4_t v21 = vmulq_f32(v20, vrsqrtsq_f32(v18, vmulq_f32(v20, v20)));
  int32x4_t v22 = v19;
  v22.i32[3] = 0;
  float32x4_t v23 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v22), (int8x16_t)v18, (int8x16_t)vmulq_f32(v21, vrsqrtsq_f32(v18, vmulq_f32(v21, v21))));
  float32x4_t v24 = vmulq_n_f32(a5, v23.f32[0]);
  float32x4_t v25 = vmulq_lane_f32(a6, *(float32x2_t *)v23.f32, 1);
  float32x4_t v26 = vmulq_laneq_f32(a7, v23, 2);
  int8x16_t v27 = (int8x16_t)vuzp1q_s32((int32x4_t)v26, (int32x4_t)v26);
  int8x16_t v28 = (int8x16_t)vuzp1q_s32((int32x4_t)v25, (int32x4_t)v25);
  int32x4_t v29 = (int32x4_t)v24;
  if (v19.i32[0])
  {
    int8x16_t v30 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v27, (int8x16_t)v26, 0xCuLL), vnegq_f32(v25)), v26, (float32x4_t)vextq_s8(v28, (int8x16_t)v25, 0xCuLL));
    int32x4_t v29 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v30, (int32x4_t)v30), v30, 0xCuLL);
  }
  int8x16_t v31 = (int8x16_t)vuzp1q_s32((int32x4_t)v24, (int32x4_t)v24);
  float32x4_t v32 = v25;
  if (v19.i32[1])
  {
    int8x16_t v33 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v31, (int8x16_t)v24, 0xCuLL), vnegq_f32(v26)), v24, (float32x4_t)vextq_s8(v27, (int8x16_t)v26, 0xCuLL));
    float32x4_t v32 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v33, (int32x4_t)v33), v33, 0xCuLL);
  }
  if (v19.i32[2])
  {
    int8x16_t v34 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v28, (int8x16_t)v25, 0xCuLL), vnegq_f32(v24)), v25, (float32x4_t)vextq_s8(v31, (int8x16_t)v24, 0xCuLL));
    float32x4_t v26 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v34, (int32x4_t)v34), v34, 0xCuLL);
  }
  float v35 = (float)(*(float *)v29.i32 + v32.f32[1]) + v26.f32[2];
  if (v35 > 0.0)
  {
    float32x4_t v36 = (float32x4_t)vzip2q_s32((int32x4_t)v32, vuzp1q_s32((int32x4_t)v32, (int32x4_t)v26));
    v36.i32[2] = v29.i32[1];
    float v37 = sqrtf(v35 + 1.0);
    float32x4_t v38 = (float32x4_t)vtrn2q_s32((int32x4_t)v26, vzip2q_s32((int32x4_t)v26, v29));
    v38.i32[2] = v32.i32[0];
    float32x4_t v40 = vsubq_f32(v36, v38);
    v36.f32[3] = v37;
    v38.f32[3] = v37;
    float32x4_t v39 = vmulq_f32(v36, v38);
    v40.i32[3] = v39.i32[3];
LABEL_9:
    v39.f32[0] = 0.5 / v37;
    float32x4_t v41 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v39.f32, 0);
    goto LABEL_18;
  }
  if (*(float *)v29.i32 < v32.f32[1] || *(float *)v29.i32 < v26.f32[2])
  {
    if (v32.f32[1] <= v26.f32[2])
    {
      float v37 = sqrtf((float)((float)(v26.f32[2] + 1.0) - *(float *)v29.i32) - v32.f32[1]);
      *(float32x2_t *)v40.f32 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32(v29, (int32x4_t)v32), *(float32x2_t *)v26.f32);
      float32x2_t v123 = (float32x2_t)__PAIR64__(v29.u32[1], LODWORD(v37));
      float32x2_t v124 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v32.f32, 0);
      *(float32x2_t *)v39.f32 = vsub_f32(*(float32x2_t *)v29.i8, v124);
      v124.f32[0] = v37;
      v124.i32[0] = vmul_f32(v123, v124).u32[0];
      v124.i32[1] = v39.i32[1];
      *(float32x2_t *)&v40.u32[2] = v124;
      goto LABEL_9;
    }
    float v45 = sqrtf((float)((float)(v32.f32[1] + 1.0) - *(float *)v29.i32) - v26.f32[2]);
    *(int32x2_t *)v25.f32 = vdup_laneq_s32((int32x4_t)v32, 2);
    int8x16_t v43 = (int8x16_t)v25;
    *(float *)v43.i32 = v45;
    v43.i32[0] = vmul_f32(*(float32x2_t *)v43.i8, (float32x2_t)__PAIR64__(v26.u32[1], LODWORD(v45))).u32[0];
    v43.i32[1] = vadd_f32(*(float32x2_t *)&v25, *(float32x2_t *)&v26).i32[1];
    int8x16_t v44 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v29.i8, 1), v32);
    int32x2_t v50 = (int32x2_t)vsubq_f32(v26, (float32x4_t)vdupq_laneq_s32(v29, 2)).u64[0];
    float32x4_t v41 = (float32x4_t)vextq_s8(vextq_s8(v44, v44, 4uLL), v43, 0xCuLL);
    v41.i32[3] = v50.i32[0];
  }
  else
  {
    float v45 = sqrtf((float)((float)(*(float *)v29.i32 + 1.0) - v32.f32[1]) - v26.f32[2]);
    float32x2_t v46 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v32.f32, 0);
    float32x2_t v47 = vadd_f32(*(float32x2_t *)v29.i8, v46);
    v46.f32[0] = v45;
    v41.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v29.u32[1], LODWORD(v45)), v46).u32[0];
    v41.i32[1] = v47.i32[1];
    float32x2_t v48 = (float32x2_t)vzip2q_s32(v29, (int32x4_t)v32).u64[0];
    LODWORD(v49) = vadd_f32(v48, *(float32x2_t *)v26.f32).u32[0];
    int32x2_t v50 = (int32x2_t)vsub_f32(v48, *(float32x2_t *)v26.f32);
    HIDWORD(v49) = v50.i32[1];
    v41.i64[1] = v49;
  }
  *(float *)v50.i32 = 0.5 / v45;
  float32x4_t v40 = (float32x4_t)vdupq_lane_s32(v50, 0);
LABEL_18:
  float32x4_t v493 = vmulq_f32(v40, v41);
  switch((char)result)
  {
    case 1:
      uint64_t v51 = *(__n128 **)(v8 + 16);
      if (!v51) {
        goto LABEL_223;
      }
      if (sub_1B6DA4658(*(float **)(v8 + 16), a3.f32[0], a3.f32[1], a4)) {
        sub_1B6DA465C(v51, *(double *)a3.i64, a3.f32[1], a4);
      }
      sub_1B6DA4724(v51, a8);
      sub_1B6DA4728((float32x4_t *)v51, v493);
      if (((1 << a2) & 0x13) != 0)
      {
        sub_1B6DA4678((uint64_t)v51, 0, 0, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v51, 2u, 0, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v51, 1u, 0, 0, 0, 0);
        uint64_t v52 = (uint64_t)v51;
        int v53 = 0;
      }
      else if (((1 << a2) & 0x24) != 0)
      {
        sub_1B6DA4678((uint64_t)v51, 0, 1, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v51, 2u, 1, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v51, 1u, 1, 0, 0, 0);
        uint64_t v52 = (uint64_t)v51;
        int v53 = 1;
      }
      else
      {
        sub_1B6DA4678((uint64_t)v51, 0, 2, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v51, 2u, 2, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v51, 1u, 2, 0, 0, 0);
        uint64_t v52 = (uint64_t)v51;
        int v53 = 2;
      }
      return sub_1B6DA4678(v52, 3u, v53, 0, 0, 0);
    case 2:
      uint64_t v80 = sub_1B68C1F74(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v82 = *((void *)v80 + 2);
      unint64_t v81 = *((void *)v80 + 3);
      int64_t v83 = v81 >> 1;
      unint64_t v84 = v82 + 1;
      if (v81 >> 1 <= v82)
      {
        uint64_t v80 = sub_1B68C1F74(v81 > 1, v82 + 1, 1, v80);
        unint64_t v81 = *((void *)v80 + 3);
        int64_t v83 = v81 >> 1;
      }
      *((void *)v80 + 2) = v84;
      int8x16_t v85 = (int8x16_t)a3;
      *(void *)&v80[8 * v82 + 32] = a3.i64[0];
      if (v83 < (uint64_t)(v82 + 2))
      {
        uint64_t v398 = sub_1B68C1F74(v81 > 1, v82 + 2, 1, v80);
        int8x16_t v85 = (int8x16_t)a3;
        uint64_t v80 = v398;
      }
      v85.i32[0] = vextq_s8(v85, v85, 8uLL).u32[0];
      *((void *)v80 + 2) = v82 + 2;
      uint64_t v86 = (double *)(v80 + 32);
      *(void *)&v80[8 * v84 + 32] = v85.i64[0];
      int v87 = (float32x4_t *)sub_1B68C384C(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v89 = v87[1].u64[0];
      unint64_t v88 = v87[1].u64[1];
      int64_t v90 = v88 >> 1;
      uint64_t v91 = v89 + 1;
      if (v88 >> 1 <= v89)
      {
        int v87 = (float32x4_t *)sub_1B68C384C(v88 > 1, v89 + 1, 1, (char *)v87);
        unint64_t v88 = v87[1].u64[1];
        int64_t v90 = v88 >> 1;
      }
      v87[1].i64[0] = v91;
      float32x4_t v92 = v493;
      v87[v89 + 2] = v493;
      if (v90 < (uint64_t)(v89 + 2))
      {
        uint64_t v399 = sub_1B68C384C(v88 > 1, v89 + 2, 1, (char *)v87);
        float32x4_t v92 = v493;
        int v87 = (float32x4_t *)v399;
      }
      v87[1].i64[0] = v89 + 2;
      v87[v91 + 2] = vaddq_f32(vmlaq_n_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E86370, *(float32x2_t *)v92.f32, 1), (float32x4_t)xmmword_1B6E86380, v92.f32[0]), vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E86390, v92, 3), (float32x4_t)xmmword_1B6E863A0, v92, 2));
      long long v93 = *(__n128 **)(v9 + 16);
      if (!v93) {
        goto LABEL_223;
      }
      if (sub_1B6DA4658(*(float **)(v9 + 16), COERCE_FLOAT(*(void *)v86), COERCE_FLOAT(HIDWORD(*(void *)v86)), a4)) {
        sub_1B6DA465C(v93, *v86, COERCE_FLOAT(HIDWORD(*(void *)v86)), a4);
      }
      sub_1B6DA4724(v93, a8);
      sub_1B6DA4728((float32x4_t *)v93, v87[2]);
      int v94 = dword_1B6E86DF0[a2];
      sub_1B6DA4678((uint64_t)v93, 0, v94, 0, 0, 0);
      sub_1B6DA4678((uint64_t)v93, 2u, v94, 0, 0, 0);
      sub_1B6DA4678((uint64_t)v93, 1u, v94, 0, 0, 0);
      sub_1B6DA4678((uint64_t)v93, 3u, v94, 0, 0, 0);
      long long v95 = *(__n128 **)(v9 + 24);
      if (!v95) {
        goto LABEL_223;
      }
      if (sub_1B6DA4658((float *)v95, COERCE_FLOAT(*((void *)v80 + 5)), COERCE_FLOAT(HIDWORD(*((void *)v80 + 5))), a4))
      {
        sub_1B6DA465C(v95, *((double *)v80 + 5), COERCE_FLOAT(HIDWORD(*((void *)v80 + 5))), a4);
      }
      sub_1B6DA4724(v95, a8);
      sub_1B6DA4728((float32x4_t *)v95, v87[3]);
      int v96 = dword_1B6E86DF0[a2];
      sub_1B6DA4678((uint64_t)v95, 0, v96, 0, 0, 0);
      sub_1B6DA4678((uint64_t)v95, 2u, v96, 0, 0, 0);
      sub_1B6DA4678((uint64_t)v95, 1u, v96, 0, 0, 0);
      sub_1B6DA4678((uint64_t)v95, 3u, v96, 0, 0, 0);
      goto LABEL_57;
    case 3:
      long long v97 = sub_1B68C1F74(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v99 = *((void *)v97 + 2);
      unint64_t v98 = *((void *)v97 + 3);
      int64_t v100 = v98 >> 1;
      unint64_t v101 = v99 + 1;
      if (v98 >> 1 <= v99)
      {
        long long v97 = sub_1B68C1F74(v98 > 1, v99 + 1, 1, v97);
        unint64_t v98 = *((void *)v97 + 3);
        int64_t v100 = v98 >> 1;
      }
      int8x16_t v102 = (int8x16_t)a3;
      LODWORD(v103) = a3.i32[0];
      *((void *)v97 + 2) = v101;
      *(void *)&v97[8 * v99 + 32] = a3.i64[0];
      unint64_t v104 = v99 + 2;
      if (v100 < (uint64_t)(v99 + 2))
      {
        uint64_t v400 = sub_1B68C1F74(v98 > 1, v99 + 2, 1, v97);
        LODWORD(v103) = a3.i32[0];
        int8x16_t v102 = (int8x16_t)a3;
        long long v97 = v400;
      }
      __int32 v105 = v102.i32[2];
      v102.i32[0] = vextq_s8(v102, v102, 8uLL).u32[0];
      *((void *)v97 + 2) = v104;
      *(void *)&v97[8 * v101 + 32] = v102.i64[0];
      unint64_t v106 = *((void *)v97 + 3);
      if ((uint64_t)(v99 + 3) > (uint64_t)(v106 >> 1))
      {
        int v487 = v103;
        __int32 v498 = v102.i32[2];
        uint64_t v401 = sub_1B68C1F74(v106 > 1, v99 + 3, 1, v97);
        __int32 v105 = v498;
        LODWORD(v103) = v487;
        long long v97 = v401;
      }
      HIDWORD(v103) = v105;
      *((void *)v97 + 2) = v99 + 3;
      *(void *)&v97[8 * v104 + 32] = v103;
      char v107 = sub_1B68C384C(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v109 = *((void *)v107 + 2);
      unint64_t v108 = *((void *)v107 + 3);
      int64_t v110 = v108 >> 1;
      unint64_t v111 = v109 + 1;
      if (v108 >> 1 <= v109)
      {
        char v107 = sub_1B68C384C(v108 > 1, v109 + 1, 1, v107);
        unint64_t v108 = *((void *)v107 + 3);
        int64_t v110 = v108 >> 1;
      }
      *((void *)v107 + 2) = v111;
      float32x4_t v112 = v493;
      *(float32x4_t *)&v107[16 * v109 + 32] = v493;
      unint64_t v113 = v109 + 2;
      if (v110 < (uint64_t)(v109 + 2))
      {
        unint64_t v402 = sub_1B68C384C(v108 > 1, v109 + 2, 1, v107);
        float32x4_t v112 = v493;
        char v107 = v402;
      }
      float32x4_t v114 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v112.f32, 0);
      float32x4_t v115 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v112, 2);
      *((void *)v107 + 2) = v113;
      *(float32x4_t *)&v107[16 * v111 + 32] = vaddq_f32(vmlaq_n_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E86370, *(float32x2_t *)v112.f32, 1), (float32x4_t)xmmword_1B6E86380, v112.f32[0]), vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E86390, v112, 3), (float32x4_t)xmmword_1B6E863A0, v112, 2));
      unint64_t v116 = *((void *)v107 + 3);
      if ((uint64_t)(v109 + 3) > (uint64_t)(v116 >> 1))
      {
        float32x4_t v499 = v114;
        float32x4_t v488 = v115;
        uint64_t v403 = sub_1B68C384C(v116 > 1, v109 + 3, 1, v107);
        float32x4_t v115 = v488;
        float32x4_t v112 = v493;
        float32x4_t v114 = v499;
        char v107 = v403;
      }
      uint64_t v117 = 0;
      *((void *)v107 + 2) = v109 + 3;
      *(float32x4_t *)&v107[16 * v113 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E862B0, *(float32x2_t *)v112.f32, 1), (float32x4_t)xmmword_1B6E862C0, v114), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E862D0, v112, 3), (float32x4_t)xmmword_1B6E862E0, v115));
      while (1)
      {
        long long v119 = *(_OWORD *)(v9 + 32);
        long long v501 = *(_OWORD *)(v9 + 16);
        long long v502 = v119;
        long long v120 = *(_OWORD *)(v9 + 64);
        long long v503 = *(_OWORD *)(v9 + 48);
        long long v504 = v120;
        uint64_t v121 = (__n128 *)*((void *)&v501 + v117);
        if (!v121) {
          goto LABEL_223;
        }
        uint64_t v122 = &v97[8 * v117];
        if (sub_1B6DA4658(*((float **)&v501 + v117), COERCE_FLOAT(*((void *)v122 + 4)), COERCE_FLOAT(HIDWORD(*((void *)v122 + 4))), a4))
        {
          sub_1B6DA465C(v121, *((double *)v122 + 4), COERCE_FLOAT(HIDWORD(*((void *)v122 + 4))), a4);
        }
        sub_1B6DA4724(v121, a8);
        sub_1B6DA4728((float32x4_t *)v121, *(float32x4_t *)&v107[16 * v117 + 32]);
        int v118 = dword_1B6E86DF0[a2];
        sub_1B6DA4678((uint64_t)v121, 0, v118, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v121, 2u, v118, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v121, 1u, v118, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v121, 3u, v118, 0, 0, 0);
        if (++v117 == 3) {
          goto LABEL_57;
        }
      }
    case 4:
      char v54 = sub_1B68C1F74(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v56 = *((void *)v54 + 2);
      unint64_t v55 = *((void *)v54 + 3);
      int64_t v57 = v55 >> 1;
      unint64_t v58 = v56 + 1;
      if (v55 >> 1 <= v56)
      {
        char v54 = sub_1B68C1F74(v55 > 1, v56 + 1, 1, v54);
        unint64_t v55 = *((void *)v54 + 3);
        int64_t v57 = v55 >> 1;
      }
      float32x4_t v59 = a3;
      unsigned __int32 v60 = a3.u32[1];
      *((void *)v54 + 2) = v58;
      *(void *)&v54[8 * v56 + 32] = a3.i64[0];
      if (v57 < (uint64_t)(v56 + 2))
      {
        uint64_t v394 = sub_1B68C1F74(v55 > 1, v56 + 2, 1, v54);
        unsigned __int32 v60 = a3.u32[1];
        float32x4_t v59 = a3;
        char v54 = v394;
      }
      *(float *)&uint64_t v61 = 0.5 * vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v59, 2), v59).f32[0];
      HIDWORD(v61) = v60;
      *((void *)v54 + 2) = v56 + 2;
      *(void *)&v54[8 * v58 + 32] = v61;
      unint64_t v63 = *((void *)v54 + 2);
      unint64_t v62 = *((void *)v54 + 3);
      if (v63 >= v62 >> 1)
      {
        uint64_t v495 = v61;
        uint64_t v395 = sub_1B68C1F74(v62 > 1, v63 + 1, 1, v54);
        uint64_t v61 = v495;
        char v54 = v395;
      }
      *((void *)v54 + 2) = v63 + 1;
      *(void *)&v54[8 * v63 + 32] = v61;
      long long v64 = sub_1B68C384C(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v66 = *((void *)v64 + 2);
      unint64_t v65 = *((void *)v64 + 3);
      int64_t v67 = v65 >> 1;
      unint64_t v68 = v66 + 1;
      if (v65 >> 1 <= v66)
      {
        long long v64 = sub_1B68C384C(v65 > 1, v66 + 1, 1, v64);
        unint64_t v65 = *((void *)v64 + 3);
        int64_t v67 = v65 >> 1;
      }
      float32x4_t v69 = v493;
      float32x4_t v70 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v493.f32, 0);
      float32x4_t v71 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v493, 2);
      *((void *)v64 + 2) = v68;
      *(float32x4_t *)&v64[16 * v66 + 32] = vaddq_f32(vmlaq_n_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E86180, *(float32x2_t *)v493.f32, 1), (float32x4_t)xmmword_1B6E86190, v493.f32[0]), vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E4F370, v493, 3), (float32x4_t)xmmword_1B6E861A0, v493, 2));
      if (v67 < (uint64_t)(v66 + 2))
      {
        float32x4_t v496 = v70;
        float32x4_t v485 = v71;
        unint64_t v396 = sub_1B68C384C(v65 > 1, v66 + 2, 1, v64);
        float32x4_t v71 = v485;
        float32x4_t v69 = v493;
        float32x4_t v70 = v496;
        long long v64 = v396;
      }
      *((void *)v64 + 2) = v66 + 2;
      *(float32x4_t *)&v64[16 * v68 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E862F0, *(float32x2_t *)v69.f32, 1), (float32x4_t)xmmword_1B6E86300, v70), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E86310, v69, 3), (float32x4_t)xmmword_1B6E86320, v71));
      unint64_t v73 = *((void *)v64 + 2);
      unint64_t v72 = *((void *)v64 + 3);
      if (v73 >= v72 >> 1)
      {
        float32x4_t v497 = v70;
        float32x4_t v486 = v71;
        uint64_t v397 = sub_1B68C384C(v72 > 1, v73 + 1, 1, v64);
        float32x4_t v71 = v486;
        float32x4_t v69 = v493;
        float32x4_t v70 = v497;
        long long v64 = v397;
      }
      uint64_t v74 = 0;
      *((void *)v64 + 2) = v73 + 1;
      *(float32x4_t *)&v64[16 * v73 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E86330, *(float32x2_t *)v69.f32, 1), (float32x4_t)xmmword_1B6E86340, v70), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E86350, v69, 3), (float32x4_t)xmmword_1B6E86360, v71));
      do
      {
        long long v76 = *(_OWORD *)(v9 + 32);
        long long v501 = *(_OWORD *)(v9 + 16);
        long long v502 = v76;
        long long v77 = *(_OWORD *)(v9 + 64);
        long long v503 = *(_OWORD *)(v9 + 48);
        long long v504 = v77;
        uint64_t v78 = (__n128 *)*((void *)&v501 + v74);
        if (!v78) {
          goto LABEL_223;
        }
        uint64_t v79 = &v54[8 * v74];
        if (sub_1B6DA4658(*((float **)&v501 + v74), COERCE_FLOAT(*((void *)v79 + 4)), COERCE_FLOAT(HIDWORD(*((void *)v79 + 4))), a4))
        {
          sub_1B6DA465C(v78, *((double *)v79 + 4), COERCE_FLOAT(HIDWORD(*((void *)v79 + 4))), a4);
        }
        sub_1B6DA4724(v78, a8);
        sub_1B6DA4728((float32x4_t *)v78, *(float32x4_t *)&v64[16 * v74 + 32]);
        int v75 = dword_1B6E86DF0[a2];
        sub_1B6DA4678((uint64_t)v78, 0, v75, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v78, 2u, v75, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v78, 1u, v75, 0, 0, 0);
        sub_1B6DA4678((uint64_t)v78, 3u, v75, 0, 0, 0);
        ++v74;
      }
      while (v74 != 3);
LABEL_57:
      swift_bridgeObjectRelease();
      goto LABEL_215;
    case 5:
      uint64_t v189 = sub_1B68C1F74(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v191 = *((void *)v189 + 2);
      unint64_t v190 = *((void *)v189 + 3);
      v483 = v189;
      int64_t v192 = v190 >> 1;
      unint64_t v193 = v191 + 1;
      if (v190 >> 1 <= v191)
      {
        v483 = sub_1B68C1F74(v190 > 1, v191 + 1, 1, v189);
        unint64_t v190 = *((void *)v483 + 3);
        int64_t v192 = v190 >> 1;
      }
      *((void *)v483 + 2) = v193;
      int8x16_t v194 = (int8x16_t)a3;
      *(void *)&v483[8 * v191 + 32] = a3.i64[0];
      unint64_t v195 = v191 + 2;
      if (v192 < (uint64_t)(v191 + 2))
      {
        v410 = sub_1B68C1F74(v190 > 1, v191 + 2, 1, v483);
        int8x16_t v194 = (int8x16_t)a3;
        v483 = v410;
      }
      HIDWORD(v196) = v194.i32[1];
      LODWORD(v196) = vextq_s8(v194, v194, 8uLL).u32[0];
      *((void *)v483 + 2) = v195;
      *(void *)&v483[8 * v193 + 32] = v196;
      unint64_t v197 = *((void *)v483 + 3);
      unint64_t v198 = v191 + 3;
      if ((uint64_t)(v191 + 3) > (uint64_t)(v197 >> 1))
      {
        uint64_t v479 = v196;
        v411 = sub_1B68C1F74(v197 > 1, v191 + 3, 1, v483);
        uint64_t v196 = v479;
        int8x16_t v194 = (int8x16_t)a3;
        v483 = v411;
      }
      *((void *)v483 + 2) = v198;
      *(void *)&v483[8 * v195 + 32] = v194.i64[0];
      unint64_t v199 = *((void *)v483 + 3);
      if ((uint64_t)(v191 + 4) > (uint64_t)(v199 >> 1))
      {
        uint64_t v480 = v196;
        v412 = sub_1B68C1F74(v199 > 1, v191 + 4, 1, v483);
        uint64_t v196 = v480;
        v194.i32[2] = a3.i32[2];
        v483 = v412;
      }
      float v200 = *(float *)&v194.i32[2];
      uint64_t v201 = v483 + 32;
      *((void *)v483 + 2) = v191 + 4;
      *(void *)&v483[8 * v198 + 32] = v196;
      int v202 = sub_1B68C0EA8(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v204 = *((void *)v202 + 2);
      unint64_t v203 = *((void *)v202 + 3);
      int64_t v205 = v203 >> 1;
      unint64_t v206 = v204 + 1;
      if (v203 >> 1 <= v204)
      {
        int v202 = sub_1B68C0EA8(v203 > 1, v204 + 1, 1, v202);
        unint64_t v203 = *((void *)v202 + 3);
        int64_t v205 = v203 >> 1;
      }
      float v207 = 0.5;
      float32x4_t v208 = v493;
      float32x4_t v209 = vmulq_f32(v493, (float32x4_t)xmmword_1B6E4F550);
      int8x16_t v210 = (int8x16_t)vnegq_f32(v209);
      int8x16_t v211 = (int8x16_t)vtrn2q_s32((int32x4_t)v209, vtrn1q_s32((int32x4_t)v209, (int32x4_t)v210));
      float32x4_t v212 = (float32x4_t)vextq_s8(v211, v211, 8uLL);
      float32x4_t v213 = 0uLL;
      float32x4_t v214 = vmulq_f32((float32x4_t)vextq_s8((int8x16_t)v209, v210, 8uLL), (float32x4_t)0);
      float32x4_t v216 = (float32x4_t)vrev64q_s32((int32x4_t)v209);
      v216.i32[0] = v210.i32[1];
      float32x4_t v215 = vmlaq_f32(v214, (float32x4_t)0, v212);
      v216.i32[3] = v210.i32[2];
      float32x4_t v217 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v493.f32, 0);
      float32x4_t v218 = vmlaq_n_f32(v215, v216, v200 * 0.5);
      int8x16_t v219 = (int8x16_t)vnegq_f32(v218);
      int8x16_t v220 = (int8x16_t)vtrn2q_s32((int32x4_t)v218, vtrn1q_s32((int32x4_t)v218, (int32x4_t)v219));
      float32x4_t v221 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v493, 2);
      float32x4_t v222 = (float32x4_t)vrev64q_s32((int32x4_t)v218);
      v222.i32[0] = v219.i32[1];
      v222.i32[3] = v219.i32[2];
      *((void *)v202 + 2) = v206;
      *(float32x4_t *)&v202[16 * v204 + 32] = vaddq_f32(vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v218, v493, 3), v222, v493, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v218, v219, 8uLL), *(float32x2_t *)v493.f32, 1), (float32x4_t)vextq_s8(v220, v220, 8uLL), v493.f32[0])), (float32x4_t)a8);
      unint64_t v223 = v204 + 2;
      float v224 = a3.f32[0];
      float32x4_t v470 = v221;
      float32x4_t v477 = v217;
      if (v205 < (uint64_t)(v204 + 2))
      {
        float32x4_t v456 = v212;
        float32x4_t v466 = v214;
        float32x4_t v439 = v215;
        float32x4_t v447 = v216;
        v413 = sub_1B68C0EA8(v203 > 1, v204 + 2, 1, v202);
        float32x4_t v213 = 0uLL;
        float32x4_t v215 = v439;
        float32x4_t v216 = v447;
        float32x4_t v212 = v456;
        float32x4_t v214 = v466;
        float32x4_t v221 = v470;
        float32x4_t v217 = v477;
        float32x4_t v208 = v493;
        float v224 = a3.f32[0];
        float v207 = 0.5;
        int v202 = v413;
      }
      float32x4_t v225 = vmlaq_f32(vmlaq_n_f32(v214, v212, v224 * v207), v213, v216);
      int8x16_t v226 = (int8x16_t)vnegq_f32(v225);
      int8x16_t v227 = (int8x16_t)vtrn2q_s32((int32x4_t)v225, vtrn1q_s32((int32x4_t)v225, (int32x4_t)v226));
      float32x4_t v228 = vmlaq_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v225, v226, 8uLL), *(float32x2_t *)v208.f32, 1), (float32x4_t)vextq_s8(v227, v227, 8uLL), v217);
      float32x4_t v229 = (float32x4_t)vrev64q_s32((int32x4_t)v225);
      v229.i32[0] = v226.i32[1];
      v229.i32[3] = v226.i32[2];
      *((void *)v202 + 2) = v223;
      *(float32x4_t *)&v202[16 * v206 + 32] = vaddq_f32(vaddq_f32(vmlaq_f32(vmulq_laneq_f32(v225, v208, 3), v229, v221), v228), (float32x4_t)a8);
      unint64_t v230 = *((void *)v202 + 3);
      unint64_t v231 = v204 + 3;
      if ((uint64_t)(v204 + 3) > (uint64_t)(v230 >> 1))
      {
        float32x4_t v457 = v212;
        float32x4_t v467 = v214;
        float32x4_t v440 = v215;
        float32x4_t v448 = v216;
        v414 = sub_1B68C0EA8(v230 > 1, v204 + 3, 1, v202);
        float32x4_t v215 = v440;
        float32x4_t v216 = v448;
        float32x4_t v212 = v457;
        float32x4_t v214 = v467;
        float32x4_t v221 = v470;
        float32x4_t v217 = v477;
        float32x4_t v208 = v493;
        float v224 = a3.f32[0];
        int v202 = v414;
      }
      float v232 = -0.5;
      float32x4_t v233 = vmlaq_n_f32(v215, v216, v200 * -0.5);
      int8x16_t v234 = (int8x16_t)vnegq_f32(v233);
      int8x16_t v235 = (int8x16_t)vtrn2q_s32((int32x4_t)v233, vtrn1q_s32((int32x4_t)v233, (int32x4_t)v234));
      float32x4_t v236 = vmlaq_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v233, v234, 8uLL), *(float32x2_t *)v208.f32, 1), (float32x4_t)vextq_s8(v235, v235, 8uLL), v217);
      float32x4_t v237 = (float32x4_t)vrev64q_s32((int32x4_t)v233);
      v237.i32[0] = v234.i32[1];
      v237.i32[3] = v234.i32[2];
      *((void *)v202 + 2) = v231;
      *(float32x4_t *)&v202[16 * v223 + 32] = vaddq_f32(vaddq_f32(vmlaq_f32(vmulq_laneq_f32(v233, v208, 3), v237, v221), v236), (float32x4_t)a8);
      unint64_t v238 = *((void *)v202 + 3);
      char v469 = a2;
      if ((uint64_t)(v204 + 4) > (uint64_t)(v238 >> 1))
      {
        float32x4_t v458 = v212;
        float32x4_t v468 = v214;
        float32x4_t v449 = v216;
        v415 = sub_1B68C0EA8(v238 > 1, v204 + 4, 1, v202);
        float32x4_t v216 = v449;
        float32x4_t v212 = v458;
        float32x4_t v214 = v468;
        float32x4_t v221 = v470;
        float32x4_t v217 = v477;
        float32x4_t v208 = v493;
        float v224 = a3.f32[0];
        float v232 = -0.5;
        int v202 = v415;
      }
      float32x4_t v239 = vmlaq_f32(vmlaq_n_f32(v214, v212, v224 * v232), (float32x4_t)0, v216);
      int8x16_t v240 = (int8x16_t)vnegq_f32(v239);
      int8x16_t v241 = (int8x16_t)vtrn2q_s32((int32x4_t)v239, vtrn1q_s32((int32x4_t)v239, (int32x4_t)v240));
      float32x4_t v242 = vmlaq_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v239, v240, 8uLL), *(float32x2_t *)v208.f32, 1), (float32x4_t)vextq_s8(v241, v241, 8uLL), v217);
      float32x4_t v243 = (float32x4_t)vrev64q_s32((int32x4_t)v239);
      v243.i32[0] = v240.i32[1];
      v243.i32[3] = v240.i32[2];
      *((void *)v202 + 2) = v204 + 4;
      *(float32x4_t *)&v202[16 * v231 + 32] = vaddq_f32(vaddq_f32(vmlaq_f32(vmulq_laneq_f32(v239, v208, 3), v243, v221), v242), (float32x4_t)a8);
      uint64_t v244 = sub_1B68C384C(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v246 = *((void *)v244 + 2);
      unint64_t v245 = *((void *)v244 + 3);
      int64_t v247 = v245 >> 1;
      unint64_t v248 = v246 + 1;
      if (v245 >> 1 <= v246)
      {
        uint64_t v244 = sub_1B68C384C(v245 > 1, v246 + 1, 1, v244);
        unint64_t v245 = *((void *)v244 + 3);
        int64_t v247 = v245 >> 1;
      }
      float32x4_t v249 = v493;
      float32x4_t v251 = v470;
      float32x4_t v250 = v477;
      *((void *)v244 + 2) = v248;
      *(float32x4_t *)&v244[16 * v246 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E86180, *(float32x2_t *)v493.f32, 1), (float32x4_t)xmmword_1B6E86190, v477), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E4F370, v493, 3), (float32x4_t)xmmword_1B6E861A0, v470));
      unint64_t v252 = v246 + 2;
      if (v247 < (uint64_t)(v246 + 2))
      {
        v416 = sub_1B68C384C(v245 > 1, v246 + 2, 1, v244);
        float32x4_t v251 = v470;
        float32x4_t v250 = v477;
        float32x4_t v249 = v493;
        uint64_t v244 = v416;
      }
      *((void *)v244 + 2) = v252;
      *(float32x4_t *)&v244[16 * v248 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E861B0, *(float32x2_t *)v249.f32, 1), (float32x4_t)xmmword_1B6E861C0, v250), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E861D0, v249, 3), (float32x4_t)xmmword_1B6E861E0, v251));
      unint64_t v253 = *((void *)v244 + 3);
      unint64_t v254 = v246 + 3;
      if ((uint64_t)(v246 + 3) > (uint64_t)(v253 >> 1))
      {
        v417 = sub_1B68C384C(v253 > 1, v246 + 3, 1, v244);
        float32x4_t v251 = v470;
        float32x4_t v250 = v477;
        float32x4_t v249 = v493;
        uint64_t v244 = v417;
      }
      *((void *)v244 + 2) = v254;
      *(float32x4_t *)&v244[16 * v252 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E861F0, *(float32x2_t *)v249.f32, 1), (float32x4_t)xmmword_1B6E86200, v250), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E86210, v249, 3), (float32x4_t)xmmword_1B6E86220, v251));
      unint64_t v255 = *((void *)v244 + 3);
      unint64_t v256 = v246 + 4;
      if ((uint64_t)(v246 + 4) > (uint64_t)(v255 >> 1))
      {
        v418 = sub_1B68C384C(v255 > 1, v246 + 4, 1, v244);
        float32x4_t v251 = v470;
        float32x4_t v250 = v477;
        float32x4_t v249 = v493;
        uint64_t v244 = v418;
      }
      uint64_t v257 = 0;
      *((void *)v244 + 2) = v256;
      *(float32x4_t *)&v244[16 * v254 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E86230, *(float32x2_t *)v249.f32, 1), (float32x4_t)xmmword_1B6E86240, v250), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E86250, v249, 3), (float32x4_t)xmmword_1B6E86260, v251));
      do
      {
        long long v260 = *(_OWORD *)(v9 + 32);
        long long v501 = *(_OWORD *)(v9 + 16);
        long long v502 = v260;
        long long v261 = *(_OWORD *)(v9 + 64);
        long long v503 = *(_OWORD *)(v9 + 48);
        long long v504 = v261;
        unint64_t v262 = (__n128 *)*((void *)&v501 + v257);
        if (!v262) {
          goto LABEL_223;
        }
        if (sub_1B6DA4658(*((float **)&v501 + v257), COERCE_FLOAT(*(void *)&v201[8 * v257]), COERCE_FLOAT(HIDWORD(*(void *)&v201[8 * v257])), a4))
        {
          sub_1B6DA465C(v262, *(double *)&v201[8 * v257], COERCE_FLOAT(HIDWORD(*(void *)&v201[8 * v257])), a4);
        }
        uint64_t v258 = v257 + 1;
        uint64_t v259 = 16 * v257;
        sub_1B6DA4724(v262, *(__n128 *)&v202[v259 + 32]);
        sub_1B6DA4728((float32x4_t *)v262, *(float32x4_t *)&v244[v259 + 32]);
        uint64_t v257 = v258;
      }
      while (v258 != 4);
      uint64_t v365 = *(void *)(v9 + 16);
      if (!v365) {
        goto LABEL_223;
      }
      uint64_t v366 = *(void *)(v9 + 24);
      if (!v366) {
        goto LABEL_223;
      }
      uint64_t v367 = *(void *)(v9 + 32);
      if (!v367) {
        goto LABEL_223;
      }
      uint64_t v368 = *(void *)(v9 + 40);
      if (!v368) {
        goto LABEL_223;
      }
      switch(v469)
      {
        case 1:
          sub_1B6DA4678(v365, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v365, 2u, 0, 0, 0, 0);
          sub_1B6DA4678(v365, 1u, 0, 0, 0, 0);
          sub_1B6DA4678(v365, 3u, 0, 0, 0, 0);
          sub_1B6DA4678(v366, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v366, 2u, 0, 0, 0, 0);
          sub_1B6DA4678(v366, 1u, 0, 0, 0, 0);
          sub_1B6DA4678(v366, 3u, 0, 0, 0, 0);
          sub_1B6DA4678(v367, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v367, 2u, 0, 0, 0, 0);
          sub_1B6DA4678(v367, 1u, 0, 0, 0, 0);
          sub_1B6DA4678(v367, 3u, 0, 0, 0, 0);
          sub_1B6DA4678(v368, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v368, 2u, 0, 0, 0, 0);
          sub_1B6DA4678(v368, 1u, 0, 0, 0, 0);
          uint64_t v390 = v368;
          int v391 = 0;
          goto LABEL_213;
        case 2:
          sub_1B6DA4678(v365, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v365, 2u, 1, 0, 0, 0);
          sub_1B6DA4678(v365, 1u, 1, 0, 0, 0);
          sub_1B6DA4678(v365, 3u, 1, 0, 0, 0);
          sub_1B6DA4678(v366, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v366, 2u, 1, 0, 0, 0);
          sub_1B6DA4678(v366, 1u, 1, 0, 0, 0);
          sub_1B6DA4678(v366, 3u, 1, 0, 0, 0);
          sub_1B6DA4678(v367, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v367, 2u, 1, 0, 0, 0);
          sub_1B6DA4678(v367, 1u, 1, 0, 0, 0);
          sub_1B6DA4678(v367, 3u, 1, 0, 0, 0);
          sub_1B6DA4678(v368, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v368, 2u, 1, 0, 0, 0);
          sub_1B6DA4678(v368, 1u, 1, 0, 0, 0);
          uint64_t v390 = v368;
          int v391 = 1;
          goto LABEL_213;
        case 3:
          sub_1B6DA4678(v365, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v365, 2u, 2, 0, 0, 0);
          sub_1B6DA4678(v365, 1u, 2, 0, 0, 0);
          sub_1B6DA4678(v365, 3u, 2, 0, 0, 0);
          sub_1B6DA4678(v366, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v366, 2u, 2, 0, 0, 0);
          sub_1B6DA4678(v366, 1u, 2, 0, 0, 0);
          sub_1B6DA4678(v366, 3u, 2, 0, 0, 0);
          sub_1B6DA4678(v367, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v367, 2u, 2, 0, 0, 0);
          sub_1B6DA4678(v367, 1u, 2, 0, 0, 0);
          sub_1B6DA4678(v367, 3u, 2, 0, 0, 0);
          sub_1B6DA4678(v368, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v368, 2u, 2, 0, 0, 0);
          sub_1B6DA4678(v368, 1u, 2, 0, 0, 0);
          uint64_t v390 = v368;
          int v391 = 2;
LABEL_213:
          uint64_t v392 = 0;
          int v393 = 0;
          goto LABEL_214;
        case 4:
          sub_1B6DA4678(v365, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v365, 2u, 0, 0, 0, 0);
          sub_1B6DA4678(v365, 1u, 1, v368, 3, 0);
          sub_1B6DA4678(v365, 3u, 1, v366, 1, 0);
          sub_1B6DA4678(v366, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v366, 2u, 0, 0, 0, 0);
          sub_1B6DA4678(v366, 1u, 1, v365, 3, 0);
          sub_1B6DA4678(v366, 3u, 1, v367, 1, 0);
          sub_1B6DA4678(v367, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v367, 2u, 0, 0, 0, 0);
          sub_1B6DA4678(v367, 1u, 1, v366, 3, 0);
          sub_1B6DA4678(v367, 3u, 1, v368, 1, 0);
          sub_1B6DA4678(v368, 0, 0, 0, 0, 0);
          uint64_t v369 = v368;
          int v370 = 0;
          goto LABEL_211;
        case 6:
          sub_1B6DA4678(v365, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v365, 2u, 2, 0, 0, 0);
          sub_1B6DA4678(v365, 1u, 1, v368, 3, 0);
          sub_1B6DA4678(v365, 3u, 1, v366, 1, 0);
          sub_1B6DA4678(v366, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v366, 2u, 2, 0, 0, 0);
          sub_1B6DA4678(v366, 1u, 1, v365, 3, 0);
          sub_1B6DA4678(v366, 3u, 1, v367, 1, 0);
          sub_1B6DA4678(v367, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v367, 2u, 2, 0, 0, 0);
          sub_1B6DA4678(v367, 1u, 1, v366, 3, 0);
          sub_1B6DA4678(v367, 3u, 1, v368, 1, 0);
          sub_1B6DA4678(v368, 0, 2, 0, 0, 0);
          uint64_t v369 = v368;
          int v370 = 2;
          goto LABEL_211;
        default:
          sub_1B6DA4678(v365, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v365, 2u, 1, 0, 0, 0);
          sub_1B6DA4678(v365, 1u, 1, v368, 3, 0);
          sub_1B6DA4678(v365, 3u, 1, v366, 1, 0);
          sub_1B6DA4678(v366, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v366, 2u, 1, 0, 0, 0);
          sub_1B6DA4678(v366, 1u, 1, v365, 3, 0);
          sub_1B6DA4678(v366, 3u, 1, v367, 1, 0);
          sub_1B6DA4678(v367, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v367, 2u, 1, 0, 0, 0);
          sub_1B6DA4678(v367, 1u, 1, v366, 3, 0);
          sub_1B6DA4678(v367, 3u, 1, v368, 1, 0);
          sub_1B6DA4678(v368, 0, 1, 0, 0, 0);
          uint64_t v369 = v368;
          int v370 = 1;
LABEL_211:
          sub_1B6DA4678(v369, 2u, v370, 0, 0, 0);
          sub_1B6DA4678(v368, 1u, 1, v367, 3, 0);
          uint64_t v390 = v368;
          int v391 = 1;
          uint64_t v392 = v365;
          int v393 = 1;
LABEL_214:
          sub_1B6DA4678(v390, 3u, v391, v392, v393, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
      }
LABEL_215:
      return swift_bridgeObjectRelease();
    case 6:
      char v263 = sub_1B68C1F74(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v265 = *((void *)v263 + 2);
      unint64_t v264 = *((void *)v263 + 3);
      int64_t v266 = v264 >> 1;
      unint64_t v267 = v265 + 1;
      if (v264 >> 1 <= v265)
      {
        char v263 = sub_1B68C1F74(v264 > 1, v265 + 1, 1, v263);
        unint64_t v264 = *((void *)v263 + 3);
        int64_t v266 = v264 >> 1;
      }
      int8x16_t v268 = (int8x16_t)a3;
      LODWORD(v269) = a3.i32[0];
      unint64_t v270 = a3.i64[0];
      *((void *)v263 + 2) = v267;
      *(void *)&v263[8 * v265 + 32] = a3.i64[0];
      if (v266 < (uint64_t)(v265 + 2))
      {
        v419 = sub_1B68C1F74(v264 > 1, v265 + 2, 1, v263);
        unint64_t v270 = a3.i64[0];
        LODWORD(v269) = a3.i32[0];
        int8x16_t v268 = (int8x16_t)a3;
        char v263 = v419;
      }
      HIDWORD(v271) = v268.i32[1];
      LODWORD(v271) = vextq_s8(v268, v268, 8uLL).u32[0];
      *((void *)v263 + 2) = v265 + 2;
      *(void *)&v263[8 * v267 + 32] = v271;
      unint64_t v273 = *((void *)v263 + 2);
      unint64_t v272 = *((void *)v263 + 3);
      int64_t v274 = v272 >> 1;
      unint64_t v275 = v273 + 1;
      if (v272 >> 1 <= v273)
      {
        unint64_t v481 = v270;
        int v489 = v269;
        uint64_t v474 = v271;
        v420 = sub_1B68C1F74(v272 > 1, v273 + 1, 1, v263);
        uint64_t v271 = v474;
        unint64_t v270 = v481;
        LODWORD(v269) = v489;
        v268.i32[2] = a3.i32[2];
        char v263 = v420;
        unint64_t v272 = *((void *)v420 + 3);
        int64_t v274 = v272 >> 1;
      }
      *((void *)v263 + 2) = v275;
      *(void *)&v263[8 * v273 + 32] = v270;
      if (v274 < (uint64_t)(v273 + 2))
      {
        int v490 = v269;
        uint64_t v475 = v271;
        v421 = sub_1B68C1F74(v272 > 1, v273 + 2, 1, v263);
        uint64_t v271 = v475;
        LODWORD(v269) = v490;
        v268.i32[2] = a3.i32[2];
        char v263 = v421;
      }
      float v276 = *(float *)&v268.i32[2];
      *((void *)v263 + 2) = v273 + 2;
      *(void *)&v263[8 * v275 + 32] = v271;
      unint64_t v278 = *((void *)v263 + 2);
      unint64_t v277 = *((void *)v263 + 3);
      int64_t v279 = v277 >> 1;
      unint64_t v280 = v278 + 1;
      float v471 = *(float *)&v268.i32[2];
      if (v277 >> 1 <= v278)
      {
        int v491 = v269;
        v422 = sub_1B68C1F74(v277 > 1, v278 + 1, 1, v263);
        LODWORD(v269) = v491;
        float v276 = v471;
        char v263 = v422;
        unint64_t v277 = *((void *)v422 + 3);
        int64_t v279 = v277 >> 1;
      }
      *((float *)&v269 + 1) = v276;
      *((void *)v263 + 2) = v280;
      *(void *)&v263[8 * v278 + 32] = v269;
      if (v279 < (uint64_t)(v278 + 2))
      {
        uint64_t v492 = v269;
        v423 = sub_1B68C1F74(v277 > 1, v278 + 2, 1, v263);
        uint64_t v269 = v492;
        char v263 = v423;
      }
      uint64_t v281 = v263 + 32;
      *((void *)v263 + 2) = v278 + 2;
      *(void *)&v263[8 * v280 + 32] = v269;
      unint64_t v282 = sub_1B68C0EA8(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v284 = *((void *)v282 + 2);
      unint64_t v283 = *((void *)v282 + 3);
      int64_t v285 = v283 >> 1;
      unint64_t v286 = v284 + 1;
      if (v283 >> 1 <= v284)
      {
        unint64_t v282 = sub_1B68C0EA8(v283 > 1, v284 + 1, 1, v282);
        unint64_t v283 = *((void *)v282 + 3);
        int64_t v285 = v283 >> 1;
      }
      float v287 = v471;
      float32x4_t v288 = v493;
      float32x4_t v289 = vmulq_f32(v493, (float32x4_t)xmmword_1B6E4F550);
      int8x16_t v290 = (int8x16_t)vnegq_f32(v289);
      int8x16_t v291 = (int8x16_t)vtrn2q_s32((int32x4_t)v289, vtrn1q_s32((int32x4_t)v289, (int32x4_t)v290));
      float32x4_t v292 = (float32x4_t)vextq_s8(v291, v291, 8uLL);
      float32x4_t v293 = (float32x4_t)vextq_s8((int8x16_t)v289, v290, 8uLL);
      float32x4_t v294 = 0uLL;
      float32x4_t v295 = vmulq_f32(v293, (float32x4_t)0);
      float32x4_t v297 = (float32x4_t)vrev64q_s32((int32x4_t)v289);
      v297.i32[0] = v290.i32[1];
      float32x4_t v296 = vmlaq_f32(v295, (float32x4_t)0, v292);
      v297.i32[3] = v290.i32[2];
      float32x4_t v298 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v493.f32, 0);
      float32x4_t v299 = vmlaq_n_f32(v296, v297, v471 * 0.5);
      int8x16_t v300 = (int8x16_t)vnegq_f32(v299);
      int8x16_t v301 = (int8x16_t)vtrn2q_s32((int32x4_t)v299, vtrn1q_s32((int32x4_t)v299, (int32x4_t)v300));
      float32x4_t v302 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v493, 2);
      float32x4_t v303 = (float32x4_t)vrev64q_s32((int32x4_t)v299);
      v303.i32[0] = v300.i32[1];
      v303.i32[3] = v300.i32[2];
      *((void *)v282 + 2) = v286;
      *(float32x4_t *)&v282[16 * v284 + 32] = vaddq_f32(vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v299, v493, 3), v303, v493, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v299, v300, 8uLL), *(float32x2_t *)v493.f32, 1), (float32x4_t)vextq_s8(v301, v301, 8uLL), v493.f32[0])), (float32x4_t)a8);
      uint64_t v304 = v284 + 2;
      unint64_t v305 = a3.i64[0];
      float32x4_t v478 = v302;
      float32x4_t v484 = v298;
      if (v285 < v304)
      {
        float32x4_t v450 = v293;
        float32x4_t v459 = v292;
        float32x4_t v436 = v295;
        float32x4_t v441 = v297;
        float32x4_t v434 = v296;
        v424 = sub_1B68C0EA8(v283 > 1, v304, 1, v282);
        float32x4_t v294 = 0uLL;
        float32x4_t v296 = v434;
        float32x4_t v295 = v436;
        float v287 = v471;
        float32x4_t v302 = v478;
        float32x4_t v297 = v441;
        float32x4_t v293 = v450;
        float32x4_t v292 = v459;
        float32x4_t v298 = v484;
        float32x4_t v288 = v493;
        unint64_t v305 = a3.i64[0];
        unint64_t v282 = v424;
      }
      float32x4_t v306 = vmlaq_f32(vmlaq_n_f32(v295, v292, *(float *)&v305 * 0.5), v294, v297);
      int8x16_t v307 = (int8x16_t)vnegq_f32(v306);
      int8x16_t v308 = (int8x16_t)vtrn2q_s32((int32x4_t)v306, vtrn1q_s32((int32x4_t)v306, (int32x4_t)v307));
      float32x4_t v309 = vmlaq_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v306, v307, 8uLL), *(float32x2_t *)v288.f32, 1), (float32x4_t)vextq_s8(v308, v308, 8uLL), v298);
      float32x4_t v310 = (float32x4_t)vrev64q_s32((int32x4_t)v306);
      v310.i32[0] = v307.i32[1];
      v310.i32[3] = v307.i32[2];
      *((void *)v282 + 2) = v304;
      *(float32x4_t *)&v282[16 * v286 + 32] = vaddq_f32(vaddq_f32(vmlaq_f32(vmulq_laneq_f32(v306, v288, 3), v310, v302), v309), (float32x4_t)a8);
      unint64_t v312 = *((void *)v282 + 2);
      unint64_t v311 = *((void *)v282 + 3);
      int64_t v313 = v311 >> 1;
      unint64_t v314 = v312 + 1;
      if (v311 >> 1 <= v312)
      {
        float32x4_t v451 = v293;
        float32x4_t v460 = v292;
        float32x4_t v437 = v295;
        float32x4_t v442 = v297;
        float32x4_t v435 = v296;
        v425 = sub_1B68C0EA8(v311 > 1, v312 + 1, 1, v282);
        float32x4_t v296 = v435;
        float32x4_t v295 = v437;
        float v287 = v471;
        float32x4_t v302 = v478;
        float32x4_t v297 = v442;
        float32x4_t v293 = v451;
        float32x4_t v292 = v460;
        float32x4_t v298 = v484;
        float32x4_t v288 = v493;
        unint64_t v305 = a3.i64[0];
        unint64_t v282 = v425;
        unint64_t v311 = *((void *)v425 + 3);
        int64_t v313 = v311 >> 1;
      }
      float v315 = -0.5;
      float32x4_t v316 = vmlaq_n_f32(v296, v297, v287 * -0.5);
      int8x16_t v317 = (int8x16_t)vnegq_f32(v316);
      int8x16_t v318 = (int8x16_t)vtrn2q_s32((int32x4_t)v316, vtrn1q_s32((int32x4_t)v316, (int32x4_t)v317));
      float32x4_t v319 = (float32x4_t)vrev64q_s32((int32x4_t)v316);
      v319.i32[0] = v317.i32[1];
      v319.i32[3] = v317.i32[2];
      *((void *)v282 + 2) = v314;
      *(float32x4_t *)&v282[16 * v312 + 32] = vaddq_f32(vaddq_f32(vmlaq_f32(vmulq_laneq_f32(v316, v288, 3), v319, v302), vmlaq_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v316, v317, 8uLL), *(float32x2_t *)v288.f32, 1), (float32x4_t)vextq_s8(v318, v318, 8uLL), v298)), (float32x4_t)a8);
      if (v313 < (uint64_t)(v312 + 2))
      {
        float32x4_t v452 = v293;
        float32x4_t v461 = v292;
        float32x4_t v438 = v295;
        float32x4_t v443 = v297;
        v426 = sub_1B68C0EA8(v311 > 1, v312 + 2, 1, v282);
        float32x4_t v295 = v438;
        float32x4_t v297 = v443;
        float32x4_t v293 = v452;
        float32x4_t v292 = v461;
        float32x4_t v302 = v478;
        float32x4_t v298 = v484;
        float32x4_t v288 = v493;
        unint64_t v305 = a3.i64[0];
        float v315 = -0.5;
        unint64_t v282 = v426;
      }
      float v320 = *((float *)&v305 + 1);
      float32x4_t v321 = 0uLL;
      float32x4_t v322 = vmlaq_f32(vmlaq_n_f32(v295, v292, *(float *)&v305 * v315), (float32x4_t)0, v297);
      int8x16_t v323 = (int8x16_t)vnegq_f32(v322);
      int8x16_t v324 = (int8x16_t)vtrn2q_s32((int32x4_t)v322, vtrn1q_s32((int32x4_t)v322, (int32x4_t)v323));
      float32x4_t v325 = vmlaq_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v322, v323, 8uLL), *(float32x2_t *)v288.f32, 1), (float32x4_t)vextq_s8(v324, v324, 8uLL), v298);
      float32x4_t v326 = (float32x4_t)vrev64q_s32((int32x4_t)v322);
      v326.i32[0] = v323.i32[1];
      v326.i32[3] = v323.i32[2];
      *((void *)v282 + 2) = v312 + 2;
      *(float32x4_t *)&v282[16 * v314 + 32] = vaddq_f32(vaddq_f32(vmlaq_f32(vmulq_laneq_f32(v322, v288, 3), v326, v302), v325), (float32x4_t)a8);
      unint64_t v328 = *((void *)v282 + 2);
      unint64_t v327 = *((void *)v282 + 3);
      int64_t v329 = v327 >> 1;
      unint64_t v330 = v328 + 1;
      if (v327 >> 1 <= v328)
      {
        float32x4_t v453 = v293;
        float32x4_t v462 = v292;
        float32x4_t v444 = v297;
        v427 = sub_1B68C0EA8(v327 > 1, v328 + 1, 1, v282);
        float32x4_t v321 = 0uLL;
        float32x4_t v297 = v444;
        float32x4_t v293 = v453;
        float32x4_t v292 = v462;
        float32x4_t v302 = v478;
        float32x4_t v298 = v484;
        float32x4_t v288 = v493;
        unint64_t v282 = v427;
        unint64_t v327 = *((void *)v427 + 3);
        int64_t v329 = v327 >> 1;
      }
      float32x4_t v331 = vmlaq_f32(vmlaq_f32(vmulq_n_f32(v293, v320 * 0.5), v321, v292), v321, v297);
      int8x16_t v332 = (int8x16_t)vnegq_f32(v331);
      int8x16_t v333 = (int8x16_t)vtrn2q_s32((int32x4_t)v331, vtrn1q_s32((int32x4_t)v331, (int32x4_t)v332));
      float32x4_t v334 = (float32x4_t)vrev64q_s32((int32x4_t)v331);
      v334.i32[0] = v332.i32[1];
      v334.i32[3] = v332.i32[2];
      *((void *)v282 + 2) = v330;
      *(float32x4_t *)&v282[16 * v328 + 32] = vaddq_f32(vaddq_f32(vmlaq_f32(vmulq_laneq_f32(v331, v288, 3), v334, v302), vmlaq_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v331, v332, 8uLL), *(float32x2_t *)v288.f32, 1), (float32x4_t)vextq_s8(v333, v333, 8uLL), v298)), (float32x4_t)a8);
      if (v329 < (uint64_t)(v328 + 2))
      {
        float32x4_t v454 = v293;
        float32x4_t v463 = v292;
        float32x4_t v445 = v297;
        v428 = sub_1B68C0EA8(v327 > 1, v328 + 2, 1, v282);
        float32x4_t v297 = v445;
        float32x4_t v293 = v454;
        float32x4_t v292 = v463;
        float32x4_t v302 = v478;
        float32x4_t v298 = v484;
        float32x4_t v288 = v493;
        unint64_t v282 = v428;
      }
      float32x4_t v335 = vmlaq_f32(vmlaq_f32(vmulq_n_f32(v293, v320 * -0.5), (float32x4_t)0, v292), (float32x4_t)0, v297);
      int8x16_t v336 = (int8x16_t)vnegq_f32(v335);
      int8x16_t v337 = (int8x16_t)vtrn2q_s32((int32x4_t)v335, vtrn1q_s32((int32x4_t)v335, (int32x4_t)v336));
      float32x4_t v338 = vmlaq_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v335, v336, 8uLL), *(float32x2_t *)v288.f32, 1), (float32x4_t)vextq_s8(v337, v337, 8uLL), v298);
      float32x4_t v339 = (float32x4_t)vrev64q_s32((int32x4_t)v335);
      v339.i32[0] = v336.i32[1];
      v339.i32[3] = v336.i32[2];
      *((void *)v282 + 2) = v328 + 2;
      *(float32x4_t *)&v282[16 * v330 + 32] = vaddq_f32(vaddq_f32(vmlaq_f32(vmulq_laneq_f32(v335, v288, 3), v339, v302), v338), (float32x4_t)a8);
      char v340 = sub_1B68C384C(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v342 = *((void *)v340 + 2);
      unint64_t v341 = *((void *)v340 + 3);
      int64_t v343 = v341 >> 1;
      unint64_t v344 = v342 + 1;
      if (v341 >> 1 <= v342)
      {
        char v340 = sub_1B68C384C(v341 > 1, v342 + 1, 1, v340);
        unint64_t v341 = *((void *)v340 + 3);
        int64_t v343 = v341 >> 1;
      }
      float32x4_t v346 = v484;
      float32x4_t v345 = v493;
      float32x4_t v347 = v478;
      *((void *)v340 + 2) = v344;
      *(float32x4_t *)&v340[16 * v342 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E86180, *(float32x2_t *)v493.f32, 1), (float32x4_t)xmmword_1B6E86190, v484), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E4F370, v493, 3), (float32x4_t)xmmword_1B6E861A0, v478));
      if (v343 < (uint64_t)(v342 + 2))
      {
        v429 = sub_1B68C384C(v341 > 1, v342 + 2, 1, v340);
        float32x4_t v347 = v478;
        float32x4_t v346 = v484;
        float32x4_t v345 = v493;
        char v340 = v429;
      }
      *((void *)v340 + 2) = v342 + 2;
      *(float32x4_t *)&v340[16 * v344 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E861B0, *(float32x2_t *)v345.f32, 1), (float32x4_t)xmmword_1B6E861C0, v346), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E861D0, v345, 3), (float32x4_t)xmmword_1B6E861E0, v347));
      unint64_t v349 = *((void *)v340 + 2);
      unint64_t v348 = *((void *)v340 + 3);
      int64_t v350 = v348 >> 1;
      unint64_t v351 = v349 + 1;
      if (v348 >> 1 <= v349)
      {
        v430 = sub_1B68C384C(v348 > 1, v349 + 1, 1, v340);
        float32x4_t v347 = v478;
        float32x4_t v346 = v484;
        float32x4_t v345 = v493;
        char v340 = v430;
        unint64_t v348 = *((void *)v430 + 3);
        int64_t v350 = v348 >> 1;
      }
      *((void *)v340 + 2) = v351;
      *(float32x4_t *)&v340[16 * v349 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E861F0, *(float32x2_t *)v345.f32, 1), (float32x4_t)xmmword_1B6E86200, v346), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E86210, v345, 3), (float32x4_t)xmmword_1B6E86220, v347));
      if (v350 < (uint64_t)(v349 + 2))
      {
        v431 = sub_1B68C384C(v348 > 1, v349 + 2, 1, v340);
        float32x4_t v347 = v478;
        float32x4_t v346 = v484;
        float32x4_t v345 = v493;
        char v340 = v431;
      }
      *((void *)v340 + 2) = v349 + 2;
      *(float32x4_t *)&v340[16 * v351 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E86230, *(float32x2_t *)v345.f32, 1), (float32x4_t)xmmword_1B6E86240, v346), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E86250, v345, 3), (float32x4_t)xmmword_1B6E86260, v347));
      unint64_t v353 = *((void *)v340 + 2);
      unint64_t v352 = *((void *)v340 + 3);
      int64_t v354 = v352 >> 1;
      uint64_t v355 = v353 + 1;
      if (v352 >> 1 <= v353)
      {
        v432 = sub_1B68C384C(v352 > 1, v353 + 1, 1, v340);
        float32x4_t v347 = v478;
        float32x4_t v346 = v484;
        float32x4_t v345 = v493;
        char v340 = v432;
        unint64_t v352 = *((void *)v432 + 3);
        int64_t v354 = v352 >> 1;
      }
      char v356 = a2;
      *((void *)v340 + 2) = v355;
      *(float32x4_t *)&v340[16 * v353 + 32] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E86270, *(float32x2_t *)v345.f32, 1), (float32x4_t)xmmword_1B6E86280, v346), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E86290, v345, 3), (float32x4_t)xmmword_1B6E862A0, v347));
      v505 = v340;
      if (v354 < (uint64_t)(v353 + 2))
      {
        v433 = sub_1B68C384C(v352 > 1, v353 + 2, 1, v340);
        float32x4_t v347 = v478;
        float32x4_t v346 = v484;
        float32x4_t v345 = v493;
        v505 = v433;
      }
      uint64_t v357 = sub_1B69FFE50(v355, (__n128)vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E862B0, *(float32x2_t *)v345.f32, 1), (float32x4_t)xmmword_1B6E862C0, v346), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E862D0, v345, 3), (float32x4_t)xmmword_1B6E862E0, v347)));
      nullsub_1(v357);
      uint64_t v358 = 0;
      v359 = v505 + 32;
      break;
    case 7:
      uint64_t v125 = sub_1B68C1F74(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v127 = *((void *)v125 + 2);
      unint64_t v126 = *((void *)v125 + 3);
      int64_t v128 = v126 >> 1;
      unint64_t v129 = v127 + 1;
      if (v126 >> 1 <= v127)
      {
        uint64_t v125 = sub_1B68C1F74(v126 > 1, v127 + 1, 1, v125);
        unint64_t v126 = *((void *)v125 + 3);
        int64_t v128 = v126 >> 1;
      }
      *((void *)v125 + 2) = v129;
      int8x16_t v130 = (int8x16_t)a3;
      *(void *)&v125[8 * v127 + 32] = a3.i64[0];
      if (v128 < (uint64_t)(v127 + 2))
      {
        char v404 = sub_1B68C1F74(v126 > 1, v127 + 2, 1, v125);
        int8x16_t v130 = (int8x16_t)a3;
        uint64_t v125 = v404;
      }
      HIDWORD(v131) = v130.i32[1];
      LODWORD(v131) = vextq_s8(v130, v130, 8uLL).u32[0];
      *((void *)v125 + 2) = v127 + 2;
      *(void *)&v125[8 * v129 + 32] = v131;
      unint64_t v133 = *((void *)v125 + 2);
      unint64_t v132 = *((void *)v125 + 3);
      if (v133 >= v132 >> 1)
      {
        uint64_t v405 = sub_1B68C1F74(v132 > 1, v133 + 1, 1, v125);
        int8x16_t v130 = (int8x16_t)a3;
        uint64_t v125 = v405;
      }
      float v134 = *(float *)&v130.i32[2];
      *((void *)v125 + 2) = v133 + 1;
      uint64_t v135 = (double *)(v125 + 32);
      *(void *)&v125[8 * v133 + 32] = v130.i64[0];
      uint64_t v136 = (__n128 *)sub_1B68C0EA8(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v138 = v136[1].n128_u64[0];
      unint64_t v137 = v136[1].n128_u64[1];
      int64_t v139 = v137 >> 1;
      unint64_t v140 = v138 + 1;
      if (v137 >> 1 <= v138)
      {
        uint64_t v136 = (__n128 *)sub_1B68C0EA8(v137 > 1, v138 + 1, 1, (char *)v136);
        unint64_t v137 = v136[1].n128_u64[1];
        int64_t v139 = v137 >> 1;
      }
      float v141 = 0.5;
      float32x4_t v142 = v493;
      float32x4_t v143 = vmulq_f32(v493, (float32x4_t)xmmword_1B6E4F550);
      int8x16_t v144 = (int8x16_t)vnegq_f32(v143);
      int8x16_t v145 = (int8x16_t)vtrn2q_s32((int32x4_t)v143, vtrn1q_s32((int32x4_t)v143, (int32x4_t)v144));
      float32x4_t v146 = (float32x4_t)vextq_s8(v145, v145, 8uLL);
      float32x4_t v147 = 0uLL;
      float32x4_t v148 = vmulq_f32((float32x4_t)vextq_s8((int8x16_t)v143, v144, 8uLL), (float32x4_t)0);
      float32x4_t v150 = (float32x4_t)vrev64q_s32((int32x4_t)v143);
      v150.i32[0] = v144.i32[1];
      float32x4_t v149 = vmlaq_f32(v148, (float32x4_t)0, v146);
      v150.i32[3] = v144.i32[2];
      float32x4_t v151 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v493.f32, 0);
      float32x4_t v152 = vmlaq_n_f32(v149, v150, v134 * 0.5);
      int8x16_t v153 = (int8x16_t)vnegq_f32(v152);
      int8x16_t v154 = (int8x16_t)vtrn2q_s32((int32x4_t)v152, vtrn1q_s32((int32x4_t)v152, (int32x4_t)v153));
      float32x4_t v155 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v493, 2);
      float32x4_t v156 = (float32x4_t)vrev64q_s32((int32x4_t)v152);
      v156.i32[0] = v153.i32[1];
      v156.i32[3] = v153.i32[2];
      v136[1].n128_u64[0] = v140;
      v136[v138 + 2] = (__n128)vaddq_f32(vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v152, v493, 3), v156, v493, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v152, v153, 8uLL), *(float32x2_t *)v493.f32, 1), (float32x4_t)vextq_s8(v154, v154, 8uLL), v493.f32[0])), (float32x4_t)a8);
      uint64_t v157 = v138 + 2;
      float v158 = a3.f32[0];
      float32x4_t v476 = v155;
      float32x4_t v482 = v151;
      if (v139 < v157)
      {
        float32x4_t v472 = v149;
        float32x4_t v455 = v148;
        float32x4_t v464 = v150;
        float32x4_t v446 = v146;
        uint64_t v406 = sub_1B68C0EA8(v137 > 1, v157, 1, (char *)v136);
        float32x4_t v147 = 0uLL;
        float32x4_t v146 = v446;
        float32x4_t v148 = v455;
        float32x4_t v150 = v464;
        float32x4_t v149 = v472;
        float32x4_t v155 = v476;
        float32x4_t v151 = v482;
        float32x4_t v142 = v493;
        float v158 = a3.f32[0];
        float v141 = 0.5;
        uint64_t v136 = (__n128 *)v406;
      }
      float32x4_t v159 = vmlaq_f32(vmlaq_n_f32(v148, v146, v158 * v141), v147, v150);
      int8x16_t v160 = (int8x16_t)vnegq_f32(v159);
      int8x16_t v161 = (int8x16_t)vtrn2q_s32((int32x4_t)v159, vtrn1q_s32((int32x4_t)v159, (int32x4_t)v160));
      float32x4_t v162 = (float32x4_t)vrev64q_s32((int32x4_t)v159);
      v162.i32[0] = v160.i32[1];
      v162.i32[3] = v160.i32[2];
      v136[1].n128_u64[0] = v157;
      v136[v140 + 2] = (__n128)vaddq_f32(vaddq_f32(vmlaq_f32(vmulq_laneq_f32(v159, v142, 3), v162, v155), vmlaq_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v159, v160, 8uLL), *(float32x2_t *)v142.f32, 1), (float32x4_t)vextq_s8(v161, v161, 8uLL), v151)), (float32x4_t)a8);
      unint64_t v164 = v136[1].n128_u64[0];
      unint64_t v163 = v136[1].n128_u64[1];
      if (v164 >= v163 >> 1)
      {
        float32x4_t v473 = v149;
        float32x4_t v465 = v150;
        uint64_t v407 = sub_1B68C0EA8(v163 > 1, v164 + 1, 1, (char *)v136);
        float32x4_t v150 = v465;
        float32x4_t v149 = v473;
        float32x4_t v155 = v476;
        float32x4_t v151 = v482;
        float32x4_t v142 = v493;
        uint64_t v136 = (__n128 *)v407;
      }
      float32x4_t v165 = vmlaq_n_f32(v149, v150, v134 * -0.5);
      int8x16_t v166 = (int8x16_t)vnegq_f32(v165);
      int8x16_t v167 = (int8x16_t)vtrn2q_s32((int32x4_t)v165, vtrn1q_s32((int32x4_t)v165, (int32x4_t)v166));
      float32x4_t v168 = vmlaq_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v165, v166, 8uLL), *(float32x2_t *)v142.f32, 1), (float32x4_t)vextq_s8(v167, v167, 8uLL), v151);
      float32x4_t v169 = (float32x4_t)vrev64q_s32((int32x4_t)v165);
      v169.i32[0] = v166.i32[1];
      v169.i32[3] = v166.i32[2];
      v136[1].n128_u64[0] = v164 + 1;
      v136[v164 + 2] = (__n128)vaddq_f32(vaddq_f32(vmlaq_f32(vmulq_laneq_f32(v165, v142, 3), v169, v155), v168), (float32x4_t)a8);
      uint64_t v170 = (float32x4_t *)sub_1B68C384C(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v172 = v170[1].u64[0];
      unint64_t v171 = v170[1].u64[1];
      int64_t v173 = v171 >> 1;
      uint64_t v174 = v172 + 1;
      if (v171 >> 1 <= v172)
      {
        uint64_t v170 = (float32x4_t *)sub_1B68C384C(v171 > 1, v172 + 1, 1, (char *)v170);
        unint64_t v171 = v170[1].u64[1];
        int64_t v173 = v171 >> 1;
      }
      float32x4_t v176 = v482;
      float32x4_t v175 = v493;
      float32x4_t v177 = v476;
      v170[1].i64[0] = v174;
      v170[v172 + 2] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E86180, *(float32x2_t *)v493.f32, 1), (float32x4_t)xmmword_1B6E86190, v482), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E4F370, v493, 3), (float32x4_t)xmmword_1B6E861A0, v476));
      if (v173 < (uint64_t)(v172 + 2))
      {
        v408 = sub_1B68C384C(v171 > 1, v172 + 2, 1, (char *)v170);
        float32x4_t v177 = v476;
        float32x4_t v176 = v482;
        float32x4_t v175 = v493;
        uint64_t v170 = (float32x4_t *)v408;
      }
      v170[1].i64[0] = v172 + 2;
      v170[v174 + 2] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E861B0, *(float32x2_t *)v175.f32, 1), (float32x4_t)xmmword_1B6E861C0, v176), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E861D0, v175, 3), (float32x4_t)xmmword_1B6E861E0, v177));
      unint64_t v179 = v170[1].u64[0];
      unint64_t v178 = v170[1].u64[1];
      if (v179 >= v178 >> 1)
      {
        v409 = sub_1B68C384C(v178 > 1, v179 + 1, 1, (char *)v170);
        float32x4_t v177 = v476;
        float32x4_t v176 = v482;
        float32x4_t v175 = v493;
        uint64_t v170 = (float32x4_t *)v409;
      }
      v170[1].i64[0] = v179 + 1;
      v170[v179 + 2] = vaddq_f32(vmlaq_f32(vmulq_lane_f32((float32x4_t)xmmword_1B6E861F0, *(float32x2_t *)v175.f32, 1), (float32x4_t)xmmword_1B6E86200, v176), vmlaq_f32(vmulq_laneq_f32((float32x4_t)xmmword_1B6E86210, v175, 3), (float32x4_t)xmmword_1B6E86220, v177));
      uint64_t v180 = *(__n128 **)(v9 + 16);
      if (!v180) {
        goto LABEL_223;
      }
      if (sub_1B6DA4658(*(float **)(v9 + 16), COERCE_FLOAT(*(void *)v135), COERCE_FLOAT(HIDWORD(*(void *)v135)), a4))
      {
        sub_1B6DA465C(v180, *v135, COERCE_FLOAT(HIDWORD(*(void *)v135)), a4);
      }
      sub_1B6DA4724(v180, v136[2]);
      sub_1B6DA4728((float32x4_t *)v180, v170[2]);
      uint64_t v181 = *(__n128 **)(v9 + 24);
      if (!v181) {
        goto LABEL_223;
      }
      if (sub_1B6DA4658(*(float **)(v9 + 24), COERCE_FLOAT(*((void *)v125 + 5)), COERCE_FLOAT(HIDWORD(*((void *)v125 + 5))), a4))
      {
        sub_1B6DA465C(v181, *((double *)v125 + 5), COERCE_FLOAT(HIDWORD(*((void *)v125 + 5))), a4);
      }
      sub_1B6DA4724(v181, v136[3]);
      sub_1B6DA4728((float32x4_t *)v181, v170[3]);
      uint64_t v182 = *(__n128 **)(v9 + 32);
      if (!v182) {
        goto LABEL_223;
      }
      if (sub_1B6DA4658(*(float **)(v9 + 32), COERCE_FLOAT(*((void *)v125 + 6)), COERCE_FLOAT(HIDWORD(*((void *)v125 + 6))), a4))
      {
        sub_1B6DA465C(v182, *((double *)v125 + 6), COERCE_FLOAT(HIDWORD(*((void *)v125 + 6))), a4);
      }
      sub_1B6DA4724(v182, v136[4]);
      sub_1B6DA4728((float32x4_t *)v182, v170[4]);
      uint64_t v183 = *(void *)(v9 + 16);
      if (!v183) {
        goto LABEL_223;
      }
      uint64_t v184 = *(void *)(v9 + 24);
      if (!v184) {
        goto LABEL_223;
      }
      uint64_t v185 = *(void *)(v9 + 32);
      if (!v185) {
        goto LABEL_223;
      }
      switch(a2)
      {
        case 1:
          sub_1B6DA4678(v183, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v183, 2u, 0, 0, 0, 0);
          sub_1B6DA4678(v183, 1u, 0, 0, 0, 0);
          sub_1B6DA4678(v183, 3u, 0, 0, 0, 0);
          sub_1B6DA4678(v184, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v184, 2u, 0, 0, 0, 0);
          sub_1B6DA4678(v184, 1u, 0, 0, 0, 0);
          sub_1B6DA4678(v184, 3u, 0, 0, 0, 0);
          sub_1B6DA4678(v185, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v185, 2u, 0, 0, 0, 0);
          uint64_t v384 = v185;
          int v385 = 0;
          uint64_t v386 = 0;
          int v387 = 0;
          goto LABEL_200;
        case 2:
          int v186 = 1;
          sub_1B6DA4678(v183, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v183, 2u, 1, 0, 0, 0);
          sub_1B6DA4678(v183, 1u, 1, 0, 0, 0);
          sub_1B6DA4678(v183, 3u, 1, 0, 0, 0);
          sub_1B6DA4678(v184, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v184, 2u, 1, 0, 0, 0);
          sub_1B6DA4678(v184, 1u, 1, 0, 0, 0);
          sub_1B6DA4678(v184, 3u, 1, 0, 0, 0);
          sub_1B6DA4678(v185, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v185, 2u, 1, 0, 0, 0);
          uint64_t v382 = v185;
          int v383 = 1;
          goto LABEL_204;
        case 3:
          int v186 = 2;
          sub_1B6DA4678(v183, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v183, 2u, 2, 0, 0, 0);
          sub_1B6DA4678(v183, 1u, 2, 0, 0, 0);
          sub_1B6DA4678(v183, 3u, 2, 0, 0, 0);
          sub_1B6DA4678(v184, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v184, 2u, 2, 0, 0, 0);
          sub_1B6DA4678(v184, 1u, 2, 0, 0, 0);
          sub_1B6DA4678(v184, 3u, 2, 0, 0, 0);
          sub_1B6DA4678(v185, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v185, 2u, 2, 0, 0, 0);
          uint64_t v382 = v185;
          int v383 = 2;
LABEL_204:
          uint64_t v388 = 0;
          int v389 = 0;
          goto LABEL_205;
        case 4:
          sub_1B6DA4678(v183, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v183, 2u, 0, 0, 0, 0);
          sub_1B6DA4678(v183, 1u, 0, 0, 0, 0);
          sub_1B6DA4678(v183, 3u, 1, v184, 1, 0);
          sub_1B6DA4678(v184, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v184, 2u, 0, 0, 0, 0);
          sub_1B6DA4678(v184, 1u, 1, v183, 3, 0);
          sub_1B6DA4678(v184, 3u, 1, v185, 1, 0);
          sub_1B6DA4678(v185, 0, 0, 0, 0, 0);
          sub_1B6DA4678(v185, 2u, 0, 0, 0, 0);
          uint64_t v384 = v185;
          int v385 = 1;
          uint64_t v386 = v184;
          int v387 = 3;
LABEL_200:
          sub_1B6DA4678(v384, 1u, v385, v386, v387, 0);
          int v186 = 0;
          goto LABEL_206;
        case 6:
          int v186 = 2;
          sub_1B6DA4678(v183, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v183, 2u, 2, 0, 0, 0);
          sub_1B6DA4678(v183, 1u, 2, 0, 0, 0);
          sub_1B6DA4678(v183, 3u, 1, v184, 1, 0);
          sub_1B6DA4678(v184, 0, 2, 0, 0, 0);
          sub_1B6DA4678(v184, 2u, 2, 0, 0, 0);
          sub_1B6DA4678(v184, 1u, 1, v183, 3, 0);
          sub_1B6DA4678(v184, 3u, 1, v185, 1, 0);
          sub_1B6DA4678(v185, 0, 2, 0, 0, 0);
          uint64_t v187 = v185;
          int v188 = 2;
          goto LABEL_202;
        default:
          int v186 = 1;
          sub_1B6DA4678(v183, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v183, 2u, 1, 0, 0, 0);
          sub_1B6DA4678(v183, 1u, 1, 0, 0, 0);
          sub_1B6DA4678(v183, 3u, 1, v184, 1, 0);
          sub_1B6DA4678(v184, 0, 1, 0, 0, 0);
          sub_1B6DA4678(v184, 2u, 1, 0, 0, 0);
          sub_1B6DA4678(v184, 1u, 1, v183, 3, 0);
          sub_1B6DA4678(v184, 3u, 1, v185, 1, 0);
          sub_1B6DA4678(v185, 0, 1, 0, 0, 0);
          uint64_t v187 = v185;
          int v188 = 1;
LABEL_202:
          sub_1B6DA4678(v187, 2u, v188, 0, 0, 0);
          uint64_t v382 = v185;
          int v383 = 1;
          uint64_t v388 = v184;
          int v389 = 3;
LABEL_205:
          sub_1B6DA4678(v382, 1u, v383, v388, v389, 0);
LABEL_206:
          sub_1B6DA4678(v185, 3u, v186, 0, 0, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
      }
      goto LABEL_215;
    default:
      return result;
  }
  do
  {
    long long v362 = *(_OWORD *)(v9 + 32);
    long long v501 = *(_OWORD *)(v9 + 16);
    long long v502 = v362;
    long long v363 = *(_OWORD *)(v9 + 64);
    long long v503 = *(_OWORD *)(v9 + 48);
    long long v504 = v363;
    uint64_t v364 = (__n128 *)*((void *)&v501 + v358);
    if (!v364) {
      goto LABEL_223;
    }
    if (sub_1B6DA4658(*((float **)&v501 + v358), COERCE_FLOAT(*(void *)&v281[8 * v358]), COERCE_FLOAT(HIDWORD(*(void *)&v281[8 * v358])), a4))
    {
      sub_1B6DA465C(v364, *(double *)&v281[8 * v358], COERCE_FLOAT(HIDWORD(*(void *)&v281[8 * v358])), a4);
    }
    uint64_t v360 = v358 + 1;
    uint64_t v361 = 16 * v358;
    sub_1B6DA4724(v364, *(__n128 *)&v282[v361 + 32]);
    sub_1B6DA4728((float32x4_t *)v364, *(float32x4_t *)&v359[v361]);
    uint64_t v358 = v360;
  }
  while (v360 != 6);
  uint64_t v371 = *(void *)(v9 + 16);
  if (!v371
    || (uint64_t v372 = *(void *)(v9 + 24)) == 0
    || (uint64_t v373 = *(void *)(v9 + 32)) == 0
    || (uint64_t v374 = *(void *)(v9 + 40)) == 0
    || (uint64_t v375 = *(void *)(v9 + 48)) == 0
    || (uint64_t v376 = *(void *)(v9 + 56)) == 0)
  {
    while (1)
    {
LABEL_223:
      sub_1B6E32BE8();
      __break(1u);
    }
  }
  switch(v356)
  {
    case 1:
      sub_1B6DA4678(v371, 0, 0, 0, 0, 0);
      sub_1B6DA4678(v371, 2u, 0, 0, 0, 0);
      sub_1B6DA4678(v371, 1u, 0, 0, 0, 0);
      sub_1B6DA4678(v371, 3u, 0, 0, 0, 0);
      sub_1B6DA4678(v372, 0, 0, 0, 0, 0);
      sub_1B6DA4678(v372, 2u, 0, 0, 0, 0);
      sub_1B6DA4678(v372, 1u, 0, 0, 0, 0);
      sub_1B6DA4678(v372, 3u, 0, 0, 0, 0);
      sub_1B6DA4678(v373, 0, 0, 0, 0, 0);
      sub_1B6DA4678(v373, 2u, 0, 0, 0, 0);
      sub_1B6DA4678(v373, 1u, 0, 0, 0, 0);
      sub_1B6DA4678(v373, 3u, 0, 0, 0, 0);
      sub_1B6DA4678(v374, 0, 0, 0, 0, 0);
      sub_1B6DA4678(v374, 2u, 0, 0, 0, 0);
      sub_1B6DA4678(v374, 1u, 0, 0, 0, 0);
      sub_1B6DA4678(v374, 3u, 0, 0, 0, 0);
      sub_1B6DA4678(v375, 0, 0, 0, 0, 0);
      sub_1B6DA4678(v375, 2u, 0, 0, 0, 0);
      sub_1B6DA4678(v375, 1u, 0, 0, 0, 0);
      sub_1B6DA4678(v375, 3u, 0, 0, 0, 0);
      sub_1B6DA4678(v376, 0, 0, 0, 0, 0);
      sub_1B6DA4678(v376, 2u, 0, 0, 0, 0);
      sub_1B6DA4678(v376, 1u, 0, 0, 0, 0);
      uint64_t v377 = v376;
      int v378 = 0;
      goto LABEL_221;
    case 2:
      sub_1B6DA4678(v371, 0, 1, 0, 0, 0);
      sub_1B6DA4678(v371, 2u, 1, 0, 0, 0);
      sub_1B6DA4678(v371, 1u, 1, 0, 0, 0);
      sub_1B6DA4678(v371, 3u, 1, 0, 0, 0);
      sub_1B6DA4678(v372, 0, 1, 0, 0, 0);
      sub_1B6DA4678(v372, 2u, 1, 0, 0, 0);
      sub_1B6DA4678(v372, 1u, 1, 0, 0, 0);
      sub_1B6DA4678(v372, 3u, 1, 0, 0, 0);
      sub_1B6DA4678(v373, 0, 1, 0, 0, 0);
      sub_1B6DA4678(v373, 2u, 1, 0, 0, 0);
      sub_1B6DA4678(v373, 1u, 1, 0, 0, 0);
      sub_1B6DA4678(v373, 3u, 1, 0, 0, 0);
      sub_1B6DA4678(v374, 0, 1, 0, 0, 0);
      sub_1B6DA4678(v374, 2u, 1, 0, 0, 0);
      sub_1B6DA4678(v374, 1u, 1, 0, 0, 0);
      sub_1B6DA4678(v374, 3u, 1, 0, 0, 0);
      sub_1B6DA4678(v375, 0, 1, 0, 0, 0);
      sub_1B6DA4678(v375, 2u, 1, 0, 0, 0);
      sub_1B6DA4678(v375, 1u, 1, 0, 0, 0);
      sub_1B6DA4678(v375, 3u, 1, 0, 0, 0);
      sub_1B6DA4678(v376, 0, 1, 0, 0, 0);
      sub_1B6DA4678(v376, 2u, 1, 0, 0, 0);
      sub_1B6DA4678(v376, 1u, 1, 0, 0, 0);
      uint64_t v377 = v376;
      int v378 = 1;
      goto LABEL_221;
    case 3:
      sub_1B6DA4678(v371, 0, 2, 0, 0, 0);
      sub_1B6DA4678(v371, 2u, 2, 0, 0, 0);
      sub_1B6DA4678(v371, 1u, 2, 0, 0, 0);
      sub_1B6DA4678(v371, 3u, 2, 0, 0, 0);
      sub_1B6DA4678(v372, 0, 2, 0, 0, 0);
      sub_1B6DA4678(v372, 2u, 2, 0, 0, 0);
      sub_1B6DA4678(v372, 1u, 2, 0, 0, 0);
      sub_1B6DA4678(v372, 3u, 2, 0, 0, 0);
      sub_1B6DA4678(v373, 0, 2, 0, 0, 0);
      sub_1B6DA4678(v373, 2u, 2, 0, 0, 0);
      sub_1B6DA4678(v373, 1u, 2, 0, 0, 0);
      sub_1B6DA4678(v373, 3u, 2, 0, 0, 0);
      sub_1B6DA4678(v374, 0, 2, 0, 0, 0);
      sub_1B6DA4678(v374, 2u, 2, 0, 0, 0);
      sub_1B6DA4678(v374, 1u, 2, 0, 0, 0);
      sub_1B6DA4678(v374, 3u, 2, 0, 0, 0);
      sub_1B6DA4678(v375, 0, 2, 0, 0, 0);
      sub_1B6DA4678(v375, 2u, 2, 0, 0, 0);
      sub_1B6DA4678(v375, 1u, 2, 0, 0, 0);
      sub_1B6DA4678(v375, 3u, 2, 0, 0, 0);
      sub_1B6DA4678(v376, 0, 2, 0, 0, 0);
      sub_1B6DA4678(v376, 2u, 2, 0, 0, 0);
      sub_1B6DA4678(v376, 1u, 2, 0, 0, 0);
      uint64_t v377 = v376;
      int v378 = 2;
LABEL_221:
      uint64_t v379 = 0;
      int v380 = 0;
      char v381 = 0;
      break;
    default:
      sub_1B6DA4678(v371, 0, 1, v375, 2, 0);
      sub_1B6DA4678(v371, 2u, 1, v376, 0, 0);
      sub_1B6DA4678(v371, 1u, 1, v374, 3, 0);
      sub_1B6DA4678(v371, 3u, 1, v372, 1, 0);
      sub_1B6DA4678(v372, 0, 1, v375, 3, 0);
      sub_1B6DA4678(v372, 2u, 1, v376, 3, 1);
      sub_1B6DA4678(v372, 1u, 1, v371, 3, 0);
      sub_1B6DA4678(v372, 3u, 1, v373, 1, 0);
      sub_1B6DA4678(v373, 0, 1, v375, 0, 1);
      sub_1B6DA4678(v373, 2u, 1, v376, 2, 1);
      sub_1B6DA4678(v373, 1u, 1, v372, 3, 0);
      sub_1B6DA4678(v373, 3u, 1, v374, 1, 0);
      sub_1B6DA4678(v374, 0, 1, v375, 1, 1);
      sub_1B6DA4678(v374, 2u, 1, v376, 1, 0);
      sub_1B6DA4678(v374, 1u, 1, v373, 3, 0);
      sub_1B6DA4678(v374, 3u, 1, v371, 1, 0);
      sub_1B6DA4678(v375, 0, 1, v373, 0, 1);
      sub_1B6DA4678(v375, 2u, 1, v371, 0, 0);
      sub_1B6DA4678(v375, 1u, 1, v374, 0, 1);
      sub_1B6DA4678(v375, 3u, 1, v372, 0, 0);
      sub_1B6DA4678(v376, 0, 1, v371, 2, 0);
      sub_1B6DA4678(v376, 2u, 1, v373, 2, 1);
      sub_1B6DA4678(v376, 1u, 1, v374, 2, 0);
      uint64_t v377 = v376;
      int v378 = 1;
      uint64_t v379 = v372;
      int v380 = 2;
      char v381 = 1;
      break;
  }
  sub_1B6DA4678(v377, 3u, v378, v379, v380, v381);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B67D7544(char a1)
{
  uint64_t result = 0x766C6F5370657473;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6150746365766461;
      break;
    case 2:
      uint64_t result = 0x7075746573;
      break;
    case 3:
      uint64_t result = 0x726564726F62;
      break;
    case 4:
      uint64_t result = 0x636E65756C666E69;
      break;
    case 5:
      uint64_t result = 0x70537265766C6F73;
      break;
    case 6:
      uint64_t result = 0x66666F6C6C6166;
      break;
    case 7:
      uint64_t result = 0x746E65747865;
      break;
    case 8:
      uint64_t result = 0x657A69536C6C6563;
      break;
    case 9:
      uint64_t v3 = 0x736F63736976;
      goto LABEL_12;
    case 10:
      uint64_t v3 = 0x636974726F76;
LABEL_12:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7469000000000000;
      break;
    case 11:
      uint64_t result = 0x797469636F6C6576;
      break;
    case 12:
      uint64_t result = 0x64697247776F6873;
      break;
    case 13:
      uint64_t result = 0x6F6C6556776F6873;
      break;
    case 14:
      uint64_t result = 0x736E6544776F6873;
      break;
    case 15:
      uint64_t result = 0xD000000000000010;
      break;
    case 16:
      uint64_t result = 0x49797469736E6564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B67D7790(char a1)
{
  uint64_t result = 0x766C6F5370657473;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6150746365766461;
      break;
    case 2:
      uint64_t result = 0x7075746573;
      break;
    case 3:
      uint64_t result = 0x726564726F62;
      break;
    case 4:
      uint64_t result = 0x636E65756C666E69;
      break;
    case 5:
      uint64_t result = 0x70537265766C6F73;
      break;
    case 6:
      uint64_t result = 0x66666F6C6C6166;
      break;
    case 7:
      uint64_t result = 0x746E65747865;
      break;
    case 8:
      uint64_t result = 0x657A69536C6C6563;
      break;
    case 9:
      uint64_t v3 = 0x736F63736976;
      goto LABEL_12;
    case 10:
      uint64_t v3 = 0x636974726F76;
LABEL_12:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7469000000000000;
      break;
    case 11:
      uint64_t result = 0x797469636F6C6576;
      break;
    case 12:
      uint64_t result = 0x64697247776F6873;
      break;
    case 13:
      uint64_t result = 0x6F6C6556776F6873;
      break;
    case 14:
      uint64_t result = 0x736E6544776F6873;
      break;
    case 15:
      uint64_t result = 0xD000000000000010;
      break;
    case 16:
      uint64_t result = 0x49797469736E6564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B67D79DC(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1B67D7790(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B67D7790(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B67D7A68()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B67D7544(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B67D7ACC()
{
  sub_1B67D7544(*v0);
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B67D7B20()
{
  char v1 = *v0;
  sub_1B6E33918();
  sub_1B67D7544(v1);
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  return sub_1B6E33988();
}

uint64_t sub_1B67D7B80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B67D921C();
  *a1 = result;
  return result;
}

uint64_t sub_1B67D7BB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B67D7544(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B67D7BDC()
{
  return sub_1B67D7790(*v0);
}

uint64_t sub_1B67D7BE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B67D921C();
  *a1 = result;
  return result;
}

void sub_1B67D7C0C(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_1B67D7C18(uint64_t a1)
{
  unint64_t v2 = sub_1B67DBF14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67D7C54(uint64_t a1)
{
  unint64_t v2 = sub_1B67DBF14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B67D7C90(void *a1)
{
  uint64_t v3 = v1;
  sub_1B67DC5A0(0, &qword_1E9DD03E0, (uint64_t (*)(void))sub_1B67DBF14, (uint64_t)&type metadata for ParticleFluidSolver2DSolver.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v14 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B67DBF14();
  sub_1B6E33A88();
  LOBYTE(v14) = 0;
  sub_1B6E32F58();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1B6E32F58();
    LOBYTE(v14) = *(unsigned char *)(v3 + 10);
    char v15 = 2;
    sub_1B66C5724();
    sub_1B6E32FA8();
    LOBYTE(v14) = *(unsigned char *)(v3 + 11);
    char v15 = 3;
    sub_1B66C5650();
    sub_1B6E32FA8();
    LOBYTE(v14) = 4;
    sub_1B6E32F78();
    LOBYTE(v14) = 5;
    sub_1B6E32F78();
    LOBYTE(v14) = 6;
    sub_1B6E32F78();
    long long v14 = *(_OWORD *)(v3 + 32);
    char v15 = 7;
    sub_1B67DC5A0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
    sub_1B62AEFBC((unint64_t *)&qword_1EB97D1D8);
    sub_1B6E32FA8();
    LOBYTE(v14) = 8;
    sub_1B6E32F78();
    LOBYTE(v14) = 9;
    sub_1B6E32F78();
    LOBYTE(v14) = 10;
    sub_1B6E32F78();
    LOBYTE(v14) = 11;
    sub_1B6E32F78();
    LOBYTE(v14) = 12;
    sub_1B6E32F58();
    LOBYTE(v14) = 13;
    sub_1B6E32F58();
    LOBYTE(v14) = 14;
    sub_1B6E32F58();
    char v11 = *(unsigned char *)(v3 + 72);
    LOBYTE(v14) = 15;
    char v15 = v11;
    sub_1B6E32F18();
    char v12 = *(unsigned char *)(v3 + 80);
    LOBYTE(v14) = 16;
    char v15 = v12;
    sub_1B6E32F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B67D8144()
{
  return type metadata accessor for ParticleFluidSolver2DSolverSystem();
}

double sub_1B67D8164@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B67D9C30(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(unsigned char *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B67D81B8(void *a1)
{
  return sub_1B67D7C90(a1);
}

double sub_1B67D81D0@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 65793;
  __asm { FMOV            V0.2S, #1.0 }
  *(void *)(a1 + 12) = _D0;
  *(_DWORD *)(a1 + 20) = 0;
  double result = 33554440.2;
  *(_OWORD *)(a1 + 32) = xmmword_1B6E86150;
  *(_OWORD *)(a1 + 48) = xmmword_1B6E4F2C0;
  *(_WORD *)(a1 + 64) = 1;
  *(unsigned char *)(a1 + 66) = 0;
  *(_DWORD *)(a1 + 68) = 0;
  *(unsigned char *)(a1 + 72) = 1;
  *(_DWORD *)(a1 + 76) = 0;
  *(unsigned char *)(a1 + 80) = 1;
  return result;
}

uint64_t sub_1B67D8220(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  sub_1B67D1D5C((uint64_t)&v86);
  unint64_t v66 = a1;
  uint64_t v3 = (void *)a1[1];
  uint64_t v83 = v2;
  sub_1B62E9D50(v3, (uint64_t)v101);
  uint64_t v4 = v101[0];
  uint64_t v5 = v101[1];
  uint64_t v7 = v101[2];
  uint64_t v6 = v101[3];
  uint64_t v9 = v101[4];
  uint64_t v8 = v101[5];
  uint64_t v11 = v101[6];
  uint64_t v10 = v101[7];
  sub_1B62CA210((uint64_t)v101, (uint64_t)v115, qword_1EB97EA20);
  if (v115[64])
  {
    __n128 v77 = (__n128)xmmword_1B6E4F370;
    float32x4_t v79 = (float32x4_t)xmmword_1B6E4F2E0;
    float32x4_t v81 = (float32x4_t)xmmword_1B6E4F320;
    float32x4_t v84 = (float32x4_t)xmmword_1B6E4F300;
  }
  else
  {
    v12.i64[0] = v4;
    v12.i64[1] = v5;
    float32x4_t v84 = v12;
    v12.i64[0] = v7;
    v12.i64[1] = v6;
    float32x4_t v81 = v12;
    v12.i64[0] = v9;
    v12.i64[1] = v8;
    float32x4_t v79 = v12;
    v12.i64[0] = v11;
    v12.i64[1] = v10;
    __n128 v77 = (__n128)v12;
  }
  uint64_t i = v86;
  uint64_t v14 = v83;
  if (!v86)
  {
    sub_1B6BF0FE8((uint64_t)v3, v83);
    uint64_t i = v86;
    if (!v86) {
      goto LABEL_64;
    }
  }
  if (*(void *)(v83 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8) == 1
    && *(void *)(v83 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 16) == 0)
  {
    uint64_t v23 = i[2];
    swift_retain();
    sub_1B6DA4668(v23);
    sub_1B6DA466C(v23);
    uint64_t v24 = i[3];
    sub_1B6DA4668(v24);
    sub_1B6DA466C(v24);
    uint64_t v25 = i[4];
    sub_1B6DA4668(v25);
    sub_1B6DA466C(v25);
    uint64_t v26 = i[5];
    sub_1B6DA4668(v26);
    sub_1B6DA466C(v26);
    uint64_t v27 = i[6];
    sub_1B6DA4668(v27);
    sub_1B6DA466C(v27);
    uint64_t v28 = i[7];
    sub_1B6DA4668(v28);
    sub_1B6DA466C(v28);
    uint64_t v29 = i[8];
    sub_1B6DA4668(v29);
    sub_1B6DA466C(v29);
    uint64_t v30 = i[9];
    sub_1B6DA4668(v30);
    sub_1B6DA466C(v30);
LABEL_63:
    swift_release();
LABEL_64:
    swift_release();
    return swift_release();
  }
  uint64_t v16 = v89;
  float32x4_t v73 = v92;
  float v17 = *(float *)&v93;
  char v18 = HIBYTE(v89);
  swift_retain();
  sub_1B67D3174(v16, v18, v73, v17, v84, v81, v79, v77);
  switch(v16)
  {
    case 1:
      if (v87 != 1) {
        goto LABEL_60;
      }
      char v20 = 0;
      char v64 = 0;
      char v21 = 0;
      char v19 = 1;
      uint64_t v22 = 1;
      break;
    case 2:
      if ((v87 & 1) == 0) {
        goto LABEL_60;
      }
      char v19 = 0;
      char v64 = 0;
      char v21 = 0;
      char v20 = 1;
      uint64_t v22 = 2;
      break;
    case 3:
    case 4:
    case 7:
      if ((v87 & 1) == 0) {
        goto LABEL_60;
      }
      char v19 = 0;
      char v20 = 0;
      char v21 = 0;
      char v64 = 1;
      uint64_t v22 = 3;
      break;
    case 5:
      if ((v87 & 1) == 0) {
        goto LABEL_60;
      }
      char v19 = 0;
      char v20 = 0;
      char v64 = 0;
      char v21 = 1;
      uint64_t v22 = 4;
      break;
    case 6:
      if ((v87 & 1) == 0) {
        goto LABEL_60;
      }
      char v19 = 0;
      char v20 = 0;
      char v64 = 0;
      char v21 = 0;
      uint64_t v22 = 6;
      break;
    default:
      goto LABEL_63;
  }
  uint64_t v85 = v22;
  sub_1B62F46E8();
  float v32 = v31;
  sub_1B6DA4660(i[2]);
  char v65 = v19;
  if ((v19 & 1) == 0)
  {
    sub_1B6DA4660(i[3]);
    if ((v20 & 1) == 0)
    {
      sub_1B6DA4660(i[4]);
      if ((v64 & 1) == 0)
      {
        sub_1B6DA4660(i[5]);
        if ((v21 & 1) == 0)
        {
          sub_1B6DA4660(i[6]);
          sub_1B6DA4660(i[7]);
        }
      }
    }
  }
  char v63 = v21;
  uint64_t v33 = 0;
  uint64_t v34 = *(void *)((char *)&v93 + 4);
  float v35 = *((float *)&v93 + 3);
  do
  {
    uint64_t v36 = v33 + 1;
    long long v37 = *((_OWORD *)i + 2);
    long long v105 = *((_OWORD *)i + 1);
    long long v106 = v37;
    long long v38 = *((_OWORD *)i + 4);
    long long v107 = *((_OWORD *)i + 3);
    long long v108 = v38;
    uint64_t v39 = *((void *)&v105 + v33);
    sub_1B6DA467C(v39, *(float *)&v34);
    sub_1B6DA46AC(v39, 0.0);
    sub_1B6DA4694(v39, *((float *)&v34 + 1));
    sub_1B6DA46C4(v39, v35);
    sub_1B6DA46DC(v39, 0.02);
    sub_1B6DA46F4(v39, 0.75);
    sub_1B6DA470C(v39, 0.333);
    uint64_t v33 = v36;
  }
  while (v85 != v36);
  float v40 = fminf(v32, 0.033333);
  long long v41 = *(_OWORD *)(v75 + 32);
  v139[0] = *(_OWORD *)(v75 + 16);
  v139[1] = v41;
  uint64_t v140 = *(void *)(v75 + 48);
  sub_1B62C9DA8(v83, (uint64_t)v139, 0x200000000, v102);
  sub_1B62CA210((uint64_t)v102, (uint64_t)&v105, (unint64_t *)&qword_1EB97DC50);
  float32x4_t v71 = i;
  if ((void)v105)
  {
    long long v112 = v105;
    long long v113 = v106;
    uint64_t v114 = v107;
    if (v111 >= 1)
    {
      uint64_t v70 = *((void *)&v108 + 1);
      if (*((void *)&v108 + 1))
      {
        uint64_t v69 = *((void *)&v107 + 1);
        uint64_t v80 = v110[4];
        int v78 = *(unsigned __int8 *)(v109 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        unint64_t v82 = v110;
        int64_t v67 = v110 + 8;
        uint64_t v68 = (uint64_t)(v110 + 6);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v42 = 0;
        do
        {
          int8x16_t v43 = (unsigned int *)(v69 + 48 * v42);
          uint64_t v44 = *v43;
          float v45 = (uint64_t *)*((void *)v43 + 2);
          uint64_t v47 = *((void *)v43 + 4);
          uint64_t v46 = *((void *)v43 + 5);
          uint64_t v76 = v42;
          uint64_t v72 = v43[1];
          uint64_t v74 = *((void *)v43 + 3);
          if (v78)
          {
            float32x2_t v48 = *(os_unfair_lock_s **)(v46 + 376);
            swift_retain();
            os_unfair_lock_lock(v48);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v46 + 344));
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v80);
          sub_1B62CA210(v68, (uint64_t)v138, &qword_1EB97DE20);
          uint64_t v49 = v82[4];
          uint64_t v50 = *(void *)(*(void *)(*(void *)(*(void *)(v46 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v82[6] = ecs_stack_allocator_allocate(v49, 48 * v50, 8);
          v82[7] = v50;
          v67[1] = 0;
          _OWORD v67[2] = 0;
          *int64_t v67 = 0;
          swift_release();
          uint64_t v51 = sub_1B62C9024((uint64_t)&type metadata for ParticleFluidSolver2DEmitter, (uint64_t)&off_1F0F99250, v45, v74, v47, (uint64_t)v82);
          uint64_t v52 = v51;
          if (v45)
          {
            uint64_t v14 = v83;
            for (uint64_t i = v71; v47; --v47)
            {
              uint64_t v53 = *v45++;
              sub_1B67DB814(v40, v46, v53, v52, v83, v85, v71);
              v52 += 28;
            }
          }
          else
          {
            uint64_t i = v71;
            uint64_t v14 = v83;
            if (v44 != v72)
            {
              uint64_t v54 = v51 + 28 * v44;
              do
              {
                sub_1B67DB814(v40, v46, v44++, v54, v83, v85, v71);
                v54 += 28;
              }
              while (v72 != v44);
            }
          }
          v116[0] = v112;
          v116[1] = v113;
          uint64_t v117 = v114;
          sub_1B6345178(v82, (unsigned __int16 **)v116, (uint64_t)v138);
          sub_1B634507C((char *)v46);
          ecs_stack_allocator_pop_snapshot(v80);
          if (v78)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 376));
          }
          swift_release();
          uint64_t v42 = v76 + 1;
        }
        while (v76 + 1 != v70);
        sub_1B632F170(v102);
      }
    }
    sub_1B632F170(v102);
  }
  if (*(float *)&v91 > 0.0)
  {
    unint64_t v55 = sub_1B6299DFC();
    MEMORY[0x1F4188790](v55, v56);
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v57 = qword_1EB9854F8;
    swift_retain();
    if (v57 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v58 = swift_release();
    MEMORY[0x1F4188790](v58, v59);
    sub_1B6E32218();
    swift_release();
    uint64_t i = v71;
  }
  j_nullsub_1(i[2]);
  if ((v65 & 1) == 0)
  {
    j_nullsub_1(i[3]);
    if ((v20 & 1) == 0)
    {
      j_nullsub_1(i[4]);
      if ((v64 & 1) == 0)
      {
        j_nullsub_1(i[5]);
        if ((v63 & 1) == 0)
        {
          j_nullsub_1(i[6]);
          j_nullsub_1(i[7]);
        }
      }
    }
  }
LABEL_60:
  if (v88 != 1) {
    goto LABEL_63;
  }
  float v60 = v90;
  if (v90 <= 0.0) {
    goto LABEL_63;
  }
  long long v61 = *(_OWORD *)(v66 + 13);
  long long v120 = *(_OWORD *)(v66 + 11);
  long long v121 = v61;
  uint64_t v122 = v66[15];
  sub_1B663C898((uint64_t)v103);
  v118[0] = v103[0];
  v118[1] = v103[1];
  uint64_t v119 = v104;
  float32x2_t v123 = v86;
  char v124 = v87;
  char v125 = 1;
  __int16 v126 = v89;
  float v127 = v60;
  uint64_t v128 = v91;
  float32x4_t v129 = v92;
  long long v130 = v93;
  char v131 = v94;
  char v132 = v95;
  char v133 = v96;
  int v134 = v97;
  char v135 = v98;
  int v136 = v99;
  char v137 = v100;
  sub_1B62CA090((uint64_t)v103);
  swift_retain();
  sub_1B67DA568((uint64_t)v118, v14, (uint64_t)&v123);
  swift_release();
  swift_release();
  swift_release();
  sub_1B62CA064((uint64_t)v103);
  sub_1B62CA064((uint64_t)v103);
  return swift_release();
}

void sub_1B67D8C98()
{
}

uint64_t sub_1B67D8D70(uint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, float a5)
{
  uint64_t v9 = a2 * result;
  if (a2 * result < a3)
  {
    uint64_t v17 = v8;
    uint64_t v18 = v7;
    uint64_t v19 = v5;
    uint64_t v20 = v6;
    if (a2 + a2 * result >= a3) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a2 + a2 * result;
    }
    if (v9 != v10)
    {
      do
      {
        uint64_t v13 = v9 + 1;
        long long v14 = a4[2];
        v16[0] = a4[1];
        v16[1] = v14;
        long long v15 = a4[4];
        v16[2] = a4[3];
        v16[3] = v15;
        double result = sub_1B6DA4664(*((void *)v16 + v9), 0, 0, 0, 0, 0, a5);
        uint64_t v9 = v13;
      }
      while (v10 != v13);
    }
  }
  return result;
}

uint64_t sub_1B67D8E14()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t initializeWithCopy for ParticleFluidSolver2DSolver(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  long long v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  int v4 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v4;
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ParticleFluidSolver2DSolver(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  int v4 = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v4;
  int v5 = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_DWORD *)(a1 + 76) = v5;
  return a1;
}

__n128 initializeWithTake for ParticleFluidSolver2DSolver(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ParticleFluidSolver2DSolver(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticleFluidSolver2DSolver(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 81)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleFluidSolver2DSolver(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleFluidSolver2DSolver()
{
  return &type metadata for ParticleFluidSolver2DSolver;
}

__n128 initializeWithCopy for ParticleFluidSolver2DEmitter(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleFluidSolver2DEmitter(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[26]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleFluidSolver2DEmitter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleFluidSolver2DEmitter()
{
  return &type metadata for ParticleFluidSolver2DEmitter;
}

uint64_t sub_1B67D921C()
{
  unint64_t v0 = sub_1B6E337B8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11) {
    return 17;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B67D9270()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B67D92BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v24[0] = a2;
  sub_1B67DC5A0(0, &qword_1E9DD03E8, (uint64_t (*)(void))sub_1B67DBF68, (uint64_t)&type metadata for ParticleFluidSolver2DEmitter.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v24 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B67DBF68();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v11 = v24[0];
  char v31 = 0;
  uint64_t v12 = v5;
  char v13 = sub_1B6E32DA8();
  char v30 = 1;
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  uint64_t v14 = v24[1];
  char v29 = 2;
  sub_1B6E32DC8();
  int v16 = v15;
  char v28 = 3;
  sub_1B6E32DC8();
  int v18 = v17;
  char v27 = 4;
  sub_1B6E32DC8();
  int v20 = v19;
  char v26 = 5;
  char v21 = sub_1B6E32DA8();
  char v25 = 6;
  char v22 = sub_1B6E32DA8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v12);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(unsigned char *)uint64_t v11 = v13 & 1;
  *(void *)(v11 + 4) = v14;
  *(_DWORD *)(v11 + 12) = v16;
  *(_DWORD *)(v11 + 16) = v18;
  *(_DWORD *)(v11 + 20) = v20;
  *(unsigned char *)(v11 + 24) = v21 & 1;
  *(unsigned char *)(v11 + 25) = v22 & 1;
  return result;
}

uint64_t *sub_1B67D95B4(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  swift_retain();
  unsigned int v4 = *(_DWORD *)(a1 + 8);
  uint64_t v3 = *(unsigned int *)(a1 + 12);
  swift_retain();
  BOOL v5 = v4 == -1 && v3 == 0;
  if (v5
    || (v4 & 0x80000000) != 0
    || *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= (int)v4
    || ((uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC3VFX13EntityManager__entries), v3 != -1)
      ? (BOOL v7 = *(_DWORD *)(v6 + 12 * (int)v4 + 8) == v3)
      : (BOOL v7 = 1),
        !v7))
  {
    swift_release();
    goto LABEL_17;
  }
  uint64_t v8 = (unsigned int *)(v6 + 12 * (int)v4);
  sub_1B6963854(*(void *)(*(void *)(v2 + 136) + 8 * (int)*v8 + 32), *v8 | ((unint64_t)*((unsigned __int16 *)v8 + 3) << 48) | ((unint64_t)*((unsigned __int16 *)v8 + 2) << 32), 28, v2, (uint64_t)&v34);
  swift_release();
  if (v34 == 2)
  {
LABEL_17:
    int v9 = 0;
    LODWORD(v10) = -1;
    goto LABEL_18;
  }
  if ((v34 & 1) == 0 || (WORD4(v35) & 0x101) == 0)
  {
    return (uint64_t *)swift_release();
  }
  int v9 = DWORD2(v34);
  unint64_t v10 = DWORD1(v34);
LABEL_18:
  if (v10 == -1 && !v9)
  {
    sub_1B62E9D50((void *)(v4 | (unint64_t)(v3 << 32)), (uint64_t)&v33);
    sub_1B62CA210((uint64_t)&v33, (uint64_t)&v34, qword_1EB97EA20);
    sub_1B688ABDC((float32x4_t)xmmword_1B6E4F540);
    return (uint64_t *)swift_release();
  }
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1B66626C0(1, 1, 1, (uint64_t)v30);
  swift_release();
  sub_1B62F6E08();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 56) = &type metadata for EmitterReference;
  *(void *)(inited + 64) = &off_1F0F6BD40;
  *(_DWORD *)(inited + 32) = v10;
  *(_DWORD *)(inited + 36) = v9;
  sub_1B62A1250(inited, (uint64_t)v31);
  swift_setDeallocating();
  sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
  swift_arrayDestroy();
  sub_1B62CA064((uint64_t)v30);
  v44[0] = v31[0];
  v44[1] = v31[1];
  uint64_t v45 = v32;
  sub_1B62C9DA8(v2, (uint64_t)v44, 0x200000000, &v33);
  sub_1B62CA210((uint64_t)&v33, (uint64_t)&v34, (unint64_t *)&qword_1EB97DC50);
  if (!(void)v34)
  {
    sub_1B62CA064((uint64_t)v31);
    return (uint64_t *)swift_release();
  }
  if (v41 > 0 && (uint64_t v12 = v38) != 0)
  {
    char v13 = v40;
    uint64_t v29 = v40[4];
    int v14 = *(unsigned __int8 *)(v39 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v42[0] = v34;
    v42[1] = v35;
    uint64_t v15 = v37;
    uint64_t v43 = v36;
    char v25 = v40 + 8;
    uint64_t v26 = (uint64_t)(v40 + 6);
    swift_retain();
    swift_retain();
    swift_retain();
    int v16 = (uint64_t *)(v15 + 40);
    int v27 = v14;
    do
    {
      int v17 = (uint64_t *)*(v16 - 3);
      uint64_t v18 = *(v16 - 2);
      uint64_t v19 = *(v16 - 1);
      uint64_t v20 = *v16;
      uint64_t v28 = v12;
      if (v14)
      {
        char v21 = *(os_unfair_lock_s **)(v20 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v21);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v20 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v29);
      sub_1B62CA210(v26, (uint64_t)v46, &qword_1EB97DE20);
      uint64_t v22 = v13[4];
      uint64_t v23 = *(void *)(*(void *)(*(void *)(*(void *)(v20 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v13[6] = ecs_stack_allocator_allocate(v22, 48 * v23, 8);
      v13[7] = v23;
      v25[1] = 0;
      v25[2] = 0;
      *char v25 = 0;
      swift_release();
      sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v17, v18, v19, (uint64_t)v13);
      sub_1B62C9024((uint64_t)&type metadata for Scale1, (uint64_t)&off_1F0FA0DD0, v17, v18, v19, (uint64_t)v13);
      sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v17, v18, v19, (uint64_t)v13);
      sub_1B6345178(v13, (unsigned __int16 **)v42, (uint64_t)v46);
      sub_1B634507C((char *)v20);
      ecs_stack_allocator_pop_snapshot(v29);
      LOBYTE(v14) = v27;
      if (v27)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 376));
      }
      swift_release();
      v16 += 6;
      uint64_t v12 = v28 - 1;
    }
    while (v28 != 1);
    sub_1B62CA064((uint64_t)v31);
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B62CA064((uint64_t)v31);
  }
  swift_release();
  sub_1B632F170(&v33);
  return sub_1B632F170(&v33);
}

uint64_t sub_1B67D9C30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B67DC5A0(0, &qword_1E9DD03D0, (uint64_t (*)(void))sub_1B67DBF14, (uint64_t)&type metadata for ParticleFluidSolver2DSolver.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  unint64_t v10 = (char *)&v36 - v9;
  char v50 = 1;
  char v49 = 1;
  char v48 = 1;
  __int16 v47 = 0;
  unsigned __int8 v46 = 1;
  unsigned __int8 v45 = 1;
  uint64_t v11 = a1[3];
  uint64_t v42 = a1;
  sub_1B62C14BC(a1, v11);
  sub_1B67DBF14();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v42);
  }
  uint64_t v12 = v7;
  LOBYTE(v43) = 0;
  char v50 = sub_1B6E32DA8() & 1;
  LOBYTE(v43) = 1;
  char v49 = sub_1B6E32DA8() & 1;
  char v44 = 2;
  sub_1B66C56D0();
  sub_1B6E32DF8();
  char v13 = v43;
  char v44 = 3;
  sub_1B66C55FC();
  sub_1B6E32DF8();
  char v14 = v43;
  LOBYTE(v43) = 4;
  sub_1B6E32DC8();
  int v16 = v15;
  LOBYTE(v43) = 5;
  uint64_t v17 = sub_1B6E32D58();
  if ((v17 & 0x100000000) != 0) {
    float v18 = 1.0;
  }
  else {
    float v18 = *(float *)&v17;
  }
  LOBYTE(v43) = 6;
  sub_1B6E32DC8();
  int v20 = v19;
  sub_1B67DC5A0(0, (unint64_t *)&qword_1EB980EB0, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC2A8]);
  char v44 = 7;
  sub_1B62AEFBC((unint64_t *)&qword_1EB97D1F0);
  sub_1B6E32DF8();
  long long v41 = v43;
  LOBYTE(v43) = 8;
  sub_1B6E32DC8();
  int v23 = v22;
  LOBYTE(v43) = 9;
  sub_1B6E32DC8();
  int v25 = v24;
  LOBYTE(v43) = 10;
  sub_1B6E32DC8();
  int v27 = v26;
  LOBYTE(v43) = 11;
  sub_1B6E32DC8();
  int v29 = v28;
  LOBYTE(v43) = 12;
  char v48 = sub_1B6E32DA8() & 1;
  LOBYTE(v43) = 13;
  HIBYTE(v47) = sub_1B6E32DA8() & 1;
  LOBYTE(v43) = 14;
  LOBYTE(v47) = sub_1B6E32DA8() & 1;
  unsigned __int8 v46 = 1;
  LOBYTE(v43) = 15;
  uint64_t v40 = sub_1B6E32D58();
  if ((v40 & 0x100000000) != 0) {
    uint64_t v40 = 0;
  }
  else {
    unsigned __int8 v46 = 0;
  }
  unsigned __int8 v45 = 1;
  LOBYTE(v43) = 16;
  uint64_t v30 = sub_1B6E32D58();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v6);
  int v31 = ((v30 & 0x100000000uLL) >> 32) & v45;
  if ((v30 & 0x100000000) != 0) {
    int v32 = 0;
  }
  else {
    int v32 = v30;
  }
  char v33 = v50;
  char v34 = v49;
  char v35 = v48;
  int v38 = HIBYTE(v47);
  int v37 = v47;
  int v39 = v46;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v42);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v33;
  *(unsigned char *)(a2 + 9) = v34;
  *(unsigned char *)(a2 + 10) = v13;
  *(unsigned char *)(a2 + 11) = v14;
  *(_DWORD *)(a2 + 12) = v16;
  *(float *)(a2 + 16) = v18;
  *(_DWORD *)(a2 + 20) = v20;
  *(_OWORD *)(a2 + 32) = v41;
  *(_DWORD *)(a2 + 48) = v23;
  *(_DWORD *)(a2 + 52) = v25;
  *(_DWORD *)(a2 + 56) = v27;
  *(_DWORD *)(a2 + 60) = v29;
  *(unsigned char *)(a2 + 64) = v35;
  *(unsigned char *)(a2 + 65) = v38;
  *(unsigned char *)(a2 + 66) = v37;
  *(_DWORD *)(a2 + 68) = v40;
  *(unsigned char *)(a2 + 72) = v39;
  *(_DWORD *)(a2 + 76) = v32;
  *(unsigned char *)(a2 + 80) = v31 & 1;
  return result;
}

float32x4_t sub_1B67DA260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, float32x4_t *a5, float32x4_t *a6, float32x4_t *a7, uint64_t *a8, float32x4_t result, __n128 a10, double a11, float32x4_t a12, __n128 a13)
{
  float v17 = result.f32[0] / (float)a4;
  float v71 = v17;
  switch(a4)
  {
    case 3:
      uint64_t v27 = *(void *)(a1 + 48);
      uint64_t v28 = *(void *)(a1 + 56);
      uint64_t v29 = v28 - v27;
      if (v28 != v27)
      {
        uint64_t v31 = 16 * v27;
        int v32 = (__n128 *)(a3 + v31);
        char v33 = (float32x4_t *)(a2 + v31);
        do
        {
          float32x4_t v34 = *v33;
          v34.i32[3] = a10.n128_i32[3];
          unsigned __int32 v73 = a10.n128_u32[3];
          *(double *)v35.i64 = sub_1B6DA472C(a5, v34);
          v35.i32[3] = v78.i32[3];
          float32x4_t v78 = v35;
          float32x4_t v36 = *v33;
          v36.i32[3] = v68;
          *(double *)v37.i64 = sub_1B6DA472C(a6, v36);
          float32x4_t v38 = v37;
          v38.i32[3] = v66;
          float32x4_t v65 = vaddq_f32(v78, v38);
          float32x4_t v39 = *v33++;
          float32x4_t v40 = v39;
          v40.i32[3] = v69;
          *(double *)result.i64 = sub_1B6DA472C(a7, v40);
          a10 = (__n128)vmulq_n_f32(vaddq_f32(v65, result), v71);
          a10.n128_u32[3] = 0;
          *v32++ = a10;
          a10.n128_u32[3] = v73;
          result.i32[3] = v76;
          --v29;
        }
        while (v29);
      }
      break;
    case 2:
      uint64_t v41 = *(void *)(a1 + 48);
      uint64_t v42 = *(void *)(a1 + 56);
      uint64_t v43 = v42 - v41;
      if (v42 != v41)
      {
        uint64_t v44 = 16 * v41;
        unsigned __int8 v45 = (__n128 *)(a3 + v44);
        unsigned __int8 v46 = (float32x4_t *)(a2 + v44);
        do
        {
          float32x4_t v47 = *v46;
          v47.i32[3] = a10.n128_i32[3];
          unsigned __int32 v75 = a10.n128_u32[3];
          *(double *)v48.i64 = sub_1B6DA472C(a5, v47);
          float32x4_t v67 = v48;
          float32x4_t v49 = *v46++;
          float32x4_t v50 = v49;
          v50.i32[3] = v69;
          *(double *)result.i64 = sub_1B6DA472C(a6, v50);
          a10 = (__n128)vmulq_n_f32(vaddq_f32(v67, result), v71);
          a10.n128_u32[3] = 0;
          *v45++ = a10;
          a10.n128_u32[3] = v75;
          result.i32[3] = v78.i32[3];
          --v43;
        }
        while (v43);
      }
      break;
    case 1:
      uint64_t v18 = *(void *)(a1 + 48);
      uint64_t v19 = *(void *)(a1 + 56);
      uint64_t v20 = v19 - v18;
      if (v19 != v18)
      {
        uint64_t v21 = 16 * v18;
        int v22 = (__n128 *)(a3 + v21);
        int v23 = (float32x4_t *)(a2 + v21);
        do
        {
          float32x4_t v24 = *v23++;
          float32x4_t v25 = v24;
          v25.i32[3] = a10.n128_i32[3];
          unsigned __int32 v77 = a10.n128_u32[3];
          *(double *)v26.i64 = sub_1B6DA472C(a5, v25);
          uint64_t result = vmulq_n_f32(v26, v71);
          result.i32[3] = 0;
          *v22++ = (__n128)result;
          a10.n128_u32[3] = v77;
          --v20;
        }
        while (v20);
      }
      break;
    default:
      uint64_t v51 = *(void *)(a1 + 48);
      for (uint64_t i = *(void *)(a1 + 56); v51 != i; ++v51)
      {
        unsigned __int32 v56 = a12.u32[3];
        a12 = *(float32x4_t *)(a2 + 16 * v51);
        a12.i32[3] = v56;
        uint64_t v57 = *a8;
        uint64_t v58 = *(void *)(*a8 + 16);
        if (v58)
        {
          unsigned __int32 v70 = a13.n128_u32[3];
          float32x4_t v72 = a12;
          swift_bridgeObjectRetain();
          uint64_t v59 = 0;
          float32x4_t v60 = 0uLL;
          unsigned __int32 v61 = v76;
          v62.i32[3] = v78.i32[3];
          do
          {
            float32x4_t v74 = v60;
            unsigned __int32 v76 = v61;
            __int32 v79 = v62.i32[3];
            char v63 = *(float32x4_t **)(v57 + 8 * v59++ + 32);
            *(double *)v64.i64 = sub_1B6DA472C(v63, v72);
            float32x4_t v62 = vaddq_f32(v74, v64);
            unsigned __int32 v61 = v76;
            v62.i32[3] = v79;
            float32x4_t v60 = v62;
          }
          while (v58 != v59);
          float32x4_t v78 = v62;
          swift_bridgeObjectRelease();
          float32x4_t v54 = v78;
          float v17 = v71;
          a12.i32[3] = v72.i32[3];
          a13.n128_u32[3] = v70;
        }
        else
        {
          float32x4_t v54 = 0uLL;
        }
        uint64_t result = vmulq_n_f32(v54, v17);
        result.i32[3] = a13.n128_i32[3];
        float32x4_t v55 = result;
        v55.i32[3] = 0;
        *(float32x4_t *)(a3 + 16 * v51) = v55;
      }
      break;
  }
  return result;
}

uint64_t sub_1B67DA568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B67DB770(a3, (uint64_t)v313, a3);
  uint64_t result = sub_1B67DB770((uint64_t)v313, (uint64_t)&v325, v6);
  uint64_t v8 = v325;
  if (!v325) {
    return result;
  }
  uint64_t v9 = *(unsigned __int8 *)(a3 + 10);
  int v10 = 1;
  char v244 = 0;
  uint64_t v229 = 0;
  switch(*(unsigned char *)(a3 + 10))
  {
    case 1:
      goto LABEL_7;
    case 2:
      int v10 = 0;
      char v244 = 0;
      uint64_t v229 = 0x100000000;
      uint64_t v9 = 2;
      goto LABEL_7;
    case 3:
    case 4:
    case 7:
      int v10 = 0;
      uint64_t v229 = 0;
      char v244 = 1;
      uint64_t v9 = 3;
      goto LABEL_7;
    case 5:
      int v10 = 0;
      char v244 = 0;
      uint64_t v229 = 1;
      uint64_t v9 = 4;
      goto LABEL_7;
    case 6:
      int v10 = 0;
      uint64_t v229 = 0;
      char v244 = 0;
      uint64_t v9 = 6;
LABEL_7:
      uint64_t v296 = v9;
      unint64_t v238 = (float32x4_t *)v325[2];
      int8x16_t v226 = (float32x4_t *)v325[4];
      int8x16_t v227 = (float32x4_t *)v325[3];
      uint64_t v11 = a3;
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
      float32x4_t v302 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v225 = v11;
      sub_1B62CA090(v11);
      uint64_t v13 = 0;
      do
      {
        long long v14 = v8[2];
        long long v315 = v8[1];
        long long v316 = v14;
        long long v15 = v8[4];
        long long v317 = v8[3];
        long long v318 = v15;
        uint64_t v16 = *((void *)&v315 + v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = sub_1B68C3970(0, *((void *)v12 + 2) + 1, 1, v12);
        }
        unint64_t v19 = *((void *)v12 + 2);
        unint64_t v18 = *((void *)v12 + 3);
        uint64_t v20 = v296;
        if (v19 >= v18 >> 1)
        {
          uint64_t v21 = sub_1B68C3970(v18 > 1, v19 + 1, 1, v12);
          uint64_t v20 = v296;
          uint64_t v12 = v21;
        }
        ++v13;
        *((void *)v12 + 2) = v19 + 1;
        *(void *)&v12[8 * v19 + 32] = v16;
      }
      while (v20 != v13);
      float32x4_t v302 = v12;
      v17.i32[0] = *(_DWORD *)(v225 + 12);
      if (v17.f32[0] >= 1.0)
      {
        float32x4_t v264 = v17;
      }
      else
      {
        float v22 = cosf(fmaxf(v17.f32[0], 0.0) * 3.1416);
        v23.f32[0] = (float)(0.5 - (float)(v22 * 0.5))
                   * (float)((float)(0.5 - (float)(v22 * 0.5)) * (float)(0.5 - (float)(v22 * 0.5)));
        float32x4_t v264 = v23;
      }
      float v24 = *(float *)(v225 + 20);
      if (v24 <= 0.0) {
        float v25 = 1.0;
      }
      else {
        float v25 = 1.0 / v24;
      }
      sub_1B62C9DA8(a2, a1, 0x200000000, v303);
      sub_1B62CA210((uint64_t)v303, (uint64_t)v304, (unint64_t *)&qword_1EB97DC50);
      if (!*(void *)&v304[0])
      {
        uint64_t v218 = v225;
        goto LABEL_134;
      }
      uint64_t v237 = v310;
      if (v310 <= 0 || (uint64_t v236 = v307) == 0)
      {
        sub_1B632F170(v303);
        uint64_t v218 = v225;
LABEL_134:
        sub_1B62CA064(v218);
        return swift_bridgeObjectRelease();
      }
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      char v28 = *(unsigned char *)(v308 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v29 = v309[4];
      v30.i32[1] = DWORD1(v304[0]);
      v311[0] = v304[0];
      v311[1] = v304[1];
      uint64_t v234 = v306;
      uint64_t v235 = v308;
      uint64_t v312 = v305;
      long long v261 = v309;
      float v232 = v309 + 8;
      uint64_t v233 = (uint64_t)(v309 + 6);
      *(float *)v30.i32 = v264.f32[0] / (float)v296;
      float32x4_t v295 = (float32x4_t)vdupq_lane_s32(v30, 0);
      float v299 = 1.0 - v264.f32[0];
      float32x4_t v263 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v264.f32, 0);
      int v228 = v10;
      char v231 = v28;
      uint64_t v230 = v29;
      do
      {
        uint64_t v245 = v27;
        uint64_t v246 = v26;
        uint64_t v31 = (unsigned int *)(v234 + 48 * v26);
        uint64_t v33 = *v31;
        uint64_t v32 = v31[1];
        uint64_t v34 = v31[2];
        float32x4_t v35 = (uint64_t *)*((void *)v31 + 2);
        uint64_t v36 = *((void *)v31 + 3);
        uint64_t v38 = *((void *)v31 + 4);
        uint64_t v37 = *((void *)v31 + 5);
        if (v28)
        {
          float32x4_t v39 = *(os_unfair_lock_s **)(v37 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v39);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v37 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v29);
        sub_1B62CA210(v233, (uint64_t)v314, &qword_1EB97DE20);
        uint64_t v40 = v261[4];
        uint64_t v292 = v37;
        uint64_t v41 = *(void *)(*(void *)(*(void *)(*(void *)(v37 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v261[6] = ecs_stack_allocator_allocate(v40, 48 * v41, 8);
        v261[7] = v41;
        v232[1] = 0;
        v232[2] = 0;
        *float v232 = 0;
        swift_release();
        *(void *)&long long v315 = v235;
        *((void *)&v315 + 1) = v292;
        *(void *)&long long v316 = v261;
        *((void *)&v316 + 1) = v34;
        *(void *)&long long v317 = (v32 - v33 + v34);
        *((void *)&v317 + 1) = v237;
        *(void *)&long long v318 = v33;
        *((void *)&v318 + 1) = v32;
        uint64_t v319 = 0;
        uint64_t v320 = 0;
        char v321 = 1;
        float32x4_t v322 = v35;
        uint64_t v323 = v36;
        uint64_t v324 = v38;
        uint64_t v42 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v35, v36, v38, (uint64_t)v261);
        uint64_t v43 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v35, v36, v38, (uint64_t)v261);
        uint64_t v48 = v43;
        if (v24 > 0.0)
        {
          if (v264.f32[0] < 1.0)
          {
            __int32 v49 = v301.i32[3];
            if (v228)
            {
              if (v33 != v32)
              {
                uint64_t v50 = v32 - v33;
                uint64_t v51 = (float32x4_t *)(v43 + 16 * v33);
                uint64_t v52 = (float32x4_t *)(v42 + 16 * v33);
                char v28 = v231;
                uint64_t v29 = v230;
                __int32 v53 = v298.i32[3];
                uint64_t v54 = v292;
                do
                {
                  __int32 v55 = v53;
                  float32x4_t v56 = *v52;
                  v56.i32[3] = v55;
                  float32x4_t v298 = v56;
                  float v57 = sub_1B6DA4730(v238, 1);
                  if (v57 < v24)
                  {
                    float v276 = (float)(1.0 - (float)(v25 * v57)) * (float)(1.0 - (float)(v25 * v57));
                    *(double *)v58.i64 = sub_1B6DA472C(v238, v298);
                    float32x4_t v59 = vmlaq_f32(vmulq_n_f32(*v51, 1.0 - (float)(v264.f32[0] * v276)), v263, vmulq_n_f32(v58, v276));
                    v59.i32[3] = 0;
                    float32x4_t *v51 = v59;
                  }
                  ++v51;
                  ++v52;
                  --v50;
                  __int32 v53 = v298.i32[3];
                }
                while (v50);
LABEL_110:
                uint64_t v27 = v245;
                uint64_t v70 = v246;
                goto LABEL_122;
              }
              goto LABEL_120;
            }
            if (v33 != v32)
            {
              uint64_t v80 = v302;
              uint64_t v81 = v32 - v33;
              unint64_t v82 = (float32x4_t *)(v43 + 16 * v33);
              uint64_t v83 = (float32x4_t *)(v42 + 16 * v33);
              do
              {
                __int32 v86 = v49;
                float32x4_t v87 = *v83;
                v87.i32[3] = v86;
                float32x4_t v301 = v87;
                char v88 = (float32x4_t *)*((void *)v80 + 4);
                float v89 = sub_1B6DA4730(v88, 1);
                if (v89 >= v24)
                {
                  float32x4_t v92 = 0uLL;
                  float v91 = 0.0;
                }
                else
                {
                  *(double *)v90.i64 = sub_1B6DA472C(v88, v301);
                  float v91 = (float)(1.0 - (float)(v25 * v89)) * (float)(1.0 - (float)(v25 * v89));
                  float32x4_t v92 = vaddq_f32(vmulq_n_f32(v90, v91), (float32x4_t)0);
                  v92.i32[3] = v294;
                }
                float v265 = v91;
                float32x4_t v278 = v92;
                long long v93 = (float32x4_t *)*((void *)v80 + 5);
                float v94 = sub_1B6DA4730(v93, 1);
                if (v94 >= v24)
                {
                  float v99 = v265;
                  float32x4_t v98 = v278;
                  if ((v229 & 0x100000000) != 0) {
                    goto LABEL_75;
                  }
                }
                else
                {
                  float v95 = v94;
                  *(double *)v96.i64 = sub_1B6DA472C(v93, v301);
                  float v97 = (float)(1.0 - (float)(v25 * v95)) * (float)(1.0 - (float)(v25 * v95));
                  float32x4_t v98 = vaddq_f32(v278, vmulq_n_f32(v96, v97));
                  v98.i32[3] = v294;
                  float v99 = v265 + v97;
                  if ((v229 & 0x100000000) != 0) {
                    goto LABEL_75;
                  }
                }
                float v266 = v99;
                float32x4_t v279 = v98;
                char v100 = (float32x4_t *)*((void *)v80 + 6);
                float v101 = sub_1B6DA4730(v100, 1);
                if (v101 >= v24)
                {
                  float v99 = v266;
                  float32x4_t v98 = v279;
                  if (v244) {
                    goto LABEL_75;
                  }
                }
                else
                {
                  float v102 = v101;
                  *(double *)v103.i64 = sub_1B6DA472C(v100, v301);
                  float v104 = (float)(1.0 - (float)(v25 * v102)) * (float)(1.0 - (float)(v25 * v102));
                  float32x4_t v98 = vaddq_f32(v279, vmulq_n_f32(v103, v104));
                  v98.i32[3] = v294;
                  float v99 = v266 + v104;
                  if (v244) {
                    goto LABEL_75;
                  }
                }
                float v267 = v99;
                float32x4_t v280 = v98;
                long long v105 = (float32x4_t *)*((void *)v80 + 7);
                float v106 = sub_1B6DA4730(v105, 1);
                if (v106 >= v24)
                {
                  float v110 = 1.0 - v264.f32[0];
                  float v99 = v267;
                  float32x4_t v98 = v280;
                  if (v229) {
                    goto LABEL_76;
                  }
                }
                else
                {
                  float v107 = v106;
                  *(double *)v108.i64 = sub_1B6DA472C(v105, v301);
                  float v109 = (float)(1.0 - (float)(v25 * v107)) * (float)(1.0 - (float)(v25 * v107));
                  float32x4_t v98 = vaddq_f32(v280, vmulq_n_f32(v108, v109));
                  v98.i32[3] = v294;
                  float v99 = v267 + v109;
                  float v110 = 1.0 - v264.f32[0];
                  if (v229) {
                    goto LABEL_76;
                  }
                }
                float v268 = v99;
                float32x4_t v281 = v98;
                uint64_t v111 = (float32x4_t *)*((void *)v80 + 8);
                float v112 = sub_1B6DA4730(v111, 1);
                if (v112 < v24)
                {
                  float v113 = v112;
                  *(double *)v114.i64 = sub_1B6DA472C(v111, v301);
                  float v115 = (float)(1.0 - (float)(v25 * v113)) * (float)(1.0 - (float)(v25 * v113));
                  float32x4_t v116 = vaddq_f32(v281, vmulq_n_f32(v114, v115));
                  v116.i32[3] = v294;
                  float v268 = v268 + v115;
                  float32x4_t v281 = v116;
                }
                uint64_t v117 = (float32x4_t *)*((void *)v80 + 9);
                float v118 = sub_1B6DA4730(v117, 1);
                if (v118 < v24)
                {
                  float v119 = v118;
                  *(double *)v120.i64 = sub_1B6DA472C(v117, v301);
                  float v121 = (float)(1.0 - (float)(v25 * v119)) * (float)(1.0 - (float)(v25 * v119));
                  float32x4_t v98 = vaddq_f32(v281, vmulq_n_f32(v120, v121));
                  v98.i32[3] = v294;
                  float v99 = v268 + v121;
LABEL_75:
                  float v110 = 1.0 - v264.f32[0];
LABEL_76:
                  if (v99 > 0.0) {
                    goto LABEL_77;
                  }
                  goto LABEL_55;
                }
                float v110 = 1.0 - v264.f32[0];
                float v99 = v268;
                float32x4_t v98 = v281;
                if (v268 > 0.0)
                {
LABEL_77:
                  if (v99 <= 1.0)
                  {
                    float32x4_t v84 = (float32x4_t *)(v48 + 16 * v33);
                    float32x4_t v85 = vmlaq_f32(vmulq_n_f32(*v82, 1.0 - (float)(v264.f32[0] * v99)), v263, v98);
                  }
                  else
                  {
                    float32x4_t v85 = vmlaq_n_f32(vmulq_n_f32(*v82, v110), v98, v264.f32[0] / v99);
                    float32x4_t v84 = v82;
                  }
                  v85.i32[3] = 0;
                  *float32x4_t v84 = v85;
                }
LABEL_55:
                __int32 v49 = v301.i32[3];
                ++v82;
                ++v83;
                ++v33;
                --v81;
              }
              while (v81);
            }
LABEL_120:
            uint64_t v27 = v245;
            uint64_t v70 = v246;
            char v28 = v231;
            uint64_t v29 = v230;
LABEL_121:
            uint64_t v54 = v292;
            goto LABEL_122;
          }
          if (v228)
          {
            if (v33 != v32)
            {
              uint64_t v71 = v32 - v33;
              float32x4_t v72 = (float32x4_t *)(v43 + 16 * v33);
              unsigned __int32 v73 = (float32x4_t *)(v42 + 16 * v33);
              char v28 = v231;
              uint64_t v29 = v230;
              __int32 v74 = v297.i32[3];
              uint64_t v54 = v292;
              do
              {
                __int32 v75 = v74;
                float32x4_t v76 = *v73;
                v76.i32[3] = v75;
                float32x4_t v297 = v76;
                float v77 = sub_1B6DA4730(v238, 1);
                if (v77 < v24)
                {
                  float v277 = (float)(1.0 - (float)(v25 * v77)) * (float)(1.0 - (float)(v25 * v77));
                  *(double *)v78.i64 = sub_1B6DA472C(v238, v297);
                  float32x4_t v79 = vmlaq_f32(vmulq_n_f32(*v72, 1.0 - v277), v263, vmulq_n_f32(v78, v277));
                  v79.i32[3] = 0;
                  *float32x4_t v72 = v79;
                }
                ++v72;
                ++v73;
                --v71;
                __int32 v74 = v297.i32[3];
              }
              while (v71);
              goto LABEL_110;
            }
            goto LABEL_120;
          }
          if (v33 == v32) {
            goto LABEL_120;
          }
          uint64_t v122 = v302;
          uint64_t v123 = v32 - v33;
          char v124 = (float32x4_t *)(v43 + 16 * v33);
          char v125 = (float32x4_t *)(v42 + 16 * v33);
          __int32 v126 = v300.i32[3];
          while (1)
          {
            __int32 v129 = v126;
            float32x4_t v130 = *v125;
            v130.i32[3] = v129;
            float32x4_t v300 = v130;
            char v131 = (float32x4_t *)*((void *)v122 + 4);
            float v132 = sub_1B6DA4730(v131, 1);
            if (v132 >= v24)
            {
              float32x4_t v135 = 0uLL;
              float v134 = 0.0;
            }
            else
            {
              *(double *)v133.i64 = sub_1B6DA472C(v131, v300);
              float v134 = (float)(1.0 - (float)(v25 * v132)) * (float)(1.0 - (float)(v25 * v132));
              float32x4_t v135 = vaddq_f32(vmulq_n_f32(v133, v134), (float32x4_t)0);
              v135.i32[3] = v293;
            }
            float v269 = v134;
            float32x4_t v282 = v135;
            int v136 = (float32x4_t *)*((void *)v122 + 5);
            float v137 = sub_1B6DA4730(v136, 1);
            if (v137 >= v24)
            {
              float v142 = v269;
              float32x4_t v141 = v282;
              if ((v229 & 0x100000000) != 0) {
                goto LABEL_105;
              }
            }
            else
            {
              float v138 = v137;
              *(double *)v139.i64 = sub_1B6DA472C(v136, v300);
              float v140 = (float)(1.0 - (float)(v25 * v138)) * (float)(1.0 - (float)(v25 * v138));
              float32x4_t v141 = vaddq_f32(v282, vmulq_n_f32(v139, v140));
              v141.i32[3] = v293;
              float v142 = v269 + v140;
              if ((v229 & 0x100000000) != 0) {
                goto LABEL_105;
              }
            }
            float v270 = v142;
            float32x4_t v283 = v141;
            float32x4_t v143 = (float32x4_t *)*((void *)v122 + 6);
            float v144 = sub_1B6DA4730(v143, 1);
            if (v144 >= v24)
            {
              float v142 = v270;
              float32x4_t v141 = v283;
              if (v244) {
                goto LABEL_105;
              }
            }
            else
            {
              float v145 = v144;
              *(double *)v146.i64 = sub_1B6DA472C(v143, v300);
              float v147 = (float)(1.0 - (float)(v25 * v145)) * (float)(1.0 - (float)(v25 * v145));
              float32x4_t v141 = vaddq_f32(v283, vmulq_n_f32(v146, v147));
              v141.i32[3] = v293;
              float v142 = v270 + v147;
              if (v244) {
                goto LABEL_105;
              }
            }
            float v271 = v142;
            float32x4_t v284 = v141;
            float32x4_t v148 = (float32x4_t *)*((void *)v122 + 7);
            float v149 = sub_1B6DA4730(v148, 1);
            if (v149 >= v24)
            {
              float v142 = v271;
              float32x4_t v141 = v284;
              if (v229) {
                goto LABEL_105;
              }
            }
            else
            {
              float v150 = v149;
              *(double *)v151.i64 = sub_1B6DA472C(v148, v300);
              float v152 = (float)(1.0 - (float)(v25 * v150)) * (float)(1.0 - (float)(v25 * v150));
              float32x4_t v141 = vaddq_f32(v284, vmulq_n_f32(v151, v152));
              v141.i32[3] = v293;
              float v142 = v271 + v152;
              if (v229) {
                goto LABEL_105;
              }
            }
            float v272 = v142;
            float32x4_t v285 = v141;
            int8x16_t v153 = (float32x4_t *)*((void *)v122 + 8);
            float v154 = sub_1B6DA4730(v153, 1);
            if (v154 < v24)
            {
              float v155 = v154;
              *(double *)v156.i64 = sub_1B6DA472C(v153, v300);
              float v157 = (float)(1.0 - (float)(v25 * v155)) * (float)(1.0 - (float)(v25 * v155));
              float32x4_t v158 = vaddq_f32(v285, vmulq_n_f32(v156, v157));
              v158.i32[3] = v293;
              float v272 = v272 + v157;
              float32x4_t v285 = v158;
            }
            float32x4_t v159 = (float32x4_t *)*((void *)v122 + 9);
            float v160 = sub_1B6DA4730(v159, 1);
            if (v160 < v24)
            {
              float v161 = v160;
              *(double *)v162.i64 = sub_1B6DA472C(v159, v300);
              float v163 = (float)(1.0 - (float)(v25 * v161)) * (float)(1.0 - (float)(v25 * v161));
              float32x4_t v141 = vaddq_f32(v285, vmulq_n_f32(v162, v163));
              v141.i32[3] = v293;
              float v142 = v272 + v163;
LABEL_105:
              if (v142 > 0.0) {
                goto LABEL_106;
              }
              goto LABEL_85;
            }
            float v142 = v272;
            float32x4_t v141 = v285;
            if (v272 > 0.0)
            {
LABEL_106:
              if (v142 <= 1.0)
              {
                float v127 = (float32x4_t *)(v48 + 16 * v33);
                float32x4_t v128 = vmlaq_f32(vmulq_n_f32(*v124, 1.0 - v142), v263, v141);
              }
              else
              {
                float32x4_t v128 = vmulq_n_f32(v141, v264.f32[0] / v142);
                float v127 = v124;
              }
              v128.i32[3] = 0;
              *float v127 = v128;
            }
LABEL_85:
            __int32 v126 = v300.i32[3];
            ++v124;
            ++v125;
            ++v33;
            if (!--v123) {
              goto LABEL_120;
            }
          }
        }
        if (v264.f32[0] >= 1.0)
        {
          sub_1B67DA260((uint64_t)&v315, v42, v43, v296, v238, v227, v226, (uint64_t *)&v302, v264, v44, v45, v46, v47);
          goto LABEL_120;
        }
        if (v296 == 3)
        {
          if (v33 != v32)
          {
            uint64_t v164 = v32 - v33;
            float32x4_t v165 = (float32x4_t *)(v43 + 16 * v33);
            int8x16_t v166 = (float32x4_t *)(v42 + 16 * v33);
            __int32 v167 = v260;
            int v168 = v258;
            __int32 v169 = v256;
            int v171 = v252;
            int v170 = v253;
            __int32 v172 = v251;
            v174.i32[3] = v220;
            int v173 = v221;
            do
            {
              int v273 = v173;
              __int32 v289 = v174.i32[3];
              __int32 v251 = v172;
              int v252 = v171;
              int v253 = v170;
              __int32 v256 = v169;
              int v258 = v168;
              float32x4_t v175 = *v166;
              v175.i32[3] = v167;
              __int32 v260 = v167;
              *(double *)v176.i64 = sub_1B6DA472C(v238, v175);
              float32x4_t v247 = v176;
              float32x4_t v177 = *v166;
              v177.i32[3] = v256;
              *(double *)v178.i64 = sub_1B6DA472C(v227, v177);
              float32x4_t v248 = vaddq_f32(v247, v178);
              float32x4_t v179 = *v166++;
              float32x4_t v180 = v179;
              v180.i32[3] = v251;
              *(double *)v181.i64 = sub_1B6DA472C(v226, v180);
              __int32 v172 = v251;
              int v171 = v252;
              int v170 = v253;
              __int32 v169 = v256;
              float32x4_t v182 = vaddq_f32(v248, v181);
              int v173 = v273;
              float32x4_t v174 = vmlaq_f32(vmulq_n_f32(*v165, v299), v295, v182);
              int v168 = v258;
              v174.i32[3] = v289;
              float32x4_t v183 = v174;
              v183.i32[3] = 0;
              *v165++ = v183;
              __int32 v167 = v260;
              --v164;
            }
            while (v164);
            __int32 v220 = v289;
            int v221 = v273;
          }
          goto LABEL_120;
        }
        if (v296 == 2)
        {
          if (v33 != v32)
          {
            uint64_t v184 = v32 - v33;
            uint64_t v185 = (float32x4_t *)(v43 + 16 * v33);
            int v186 = (float32x4_t *)(v42 + 16 * v33);
            __int32 v187 = v259;
            __int32 v189 = v254;
            int v188 = v255;
            v191.i32[3] = v222;
            int v190 = v223;
            do
            {
              int v274 = v190;
              __int32 v290 = v191.i32[3];
              __int32 v254 = v189;
              int v255 = v188;
              float32x4_t v192 = *v186;
              v192.i32[3] = v187;
              __int32 v259 = v187;
              *(double *)v193.i64 = sub_1B6DA472C(v238, v192);
              float32x4_t v249 = v193;
              float32x4_t v194 = *v186++;
              float32x4_t v195 = v194;
              v195.i32[3] = v254;
              *(double *)v196.i64 = sub_1B6DA472C(v227, v195);
              float32x4_t v197 = vaddq_f32(v249, v196);
              int v190 = v274;
              float32x4_t v191 = vmlaq_f32(vmulq_n_f32(*v185, v299), v295, v197);
              __int32 v189 = v254;
              int v188 = v255;
              v191.i32[3] = v290;
              float32x4_t v198 = v191;
              v198.i32[3] = 0;
              *v185++ = v198;
              __int32 v187 = v259;
              --v184;
            }
            while (v184);
            __int32 v222 = v290;
            int v223 = v274;
          }
          goto LABEL_120;
        }
        if (v296 != 1)
        {
          if (v33 != v32)
          {
            unint64_t v199 = (float32x4_t **)v302;
            uint64_t v200 = v32 - v33;
            uint64_t v201 = 16 * v33;
            int v202 = (float32x4_t *)(v43 + 16 * v33);
            unint64_t v203 = (float32x4_t *)(v42 + v201);
            char v28 = v231;
            uint64_t v29 = v230;
            __int32 v204 = v262.i32[3];
            v206.i32[3] = v241;
            v205.i32[3] = v243;
            v207.i32[3] = v219;
            do
            {
              __int32 v250 = v207.i32[3];
              __int32 v275 = v205.i32[3];
              __int32 v291 = v206.i32[3];
              float32x4_t v209 = *v203;
              v209.i32[3] = v204;
              float32x4_t v262 = v209;
              *(double *)v210.i64 = sub_1B6DA472C(v199[4], v209);
              float32x4_t v205 = v210;
              v205.i32[3] = v275;
              float32x4_t v211 = vaddq_f32(v205, (float32x4_t)0);
              float32x4_t v206 = v211;
              v206.i32[3] = v291;
              if (!v228)
              {
                float32x4_t v239 = v206;
                *(double *)v212.i64 = sub_1B6DA472C(v199[5], v262);
                float32x4_t v205 = v212;
                v205.i32[3] = v275;
                float32x4_t v211 = vaddq_f32(v239, v205);
                float32x4_t v206 = v211;
                v206.i32[3] = v239.i32[3];
                if ((v229 & 0x100000000) == 0)
                {
                  float32x4_t v286 = v206;
                  *(double *)v213.i64 = sub_1B6DA472C(v199[6], v262);
                  float32x4_t v205 = v213;
                  v205.i32[3] = v275;
                  float32x4_t v211 = vaddq_f32(v286, v205);
                  float32x4_t v206 = v211;
                  v206.i32[3] = v286.i32[3];
                  if ((v244 & 1) == 0)
                  {
                    float32x4_t v240 = v206;
                    *(double *)v214.i64 = sub_1B6DA472C(v199[7], v262);
                    float32x4_t v205 = v214;
                    v205.i32[3] = v275;
                    float32x4_t v211 = vaddq_f32(v240, v205);
                    float32x4_t v206 = v211;
                    v206.i32[3] = v240.i32[3];
                    if ((v229 & 1) == 0)
                    {
                      float32x4_t v287 = v206;
                      *(double *)v215.i64 = sub_1B6DA472C(v199[8], v262);
                      float32x4_t v216 = vaddq_f32(v287, v215);
                      v216.i32[3] = v287.i32[3];
                      float32x4_t v242 = v216;
                      *(double *)v217.i64 = sub_1B6DA472C(v199[9], v262);
                      float32x4_t v205 = v217;
                      v205.i32[3] = v275;
                      float32x4_t v211 = vaddq_f32(v242, v205);
                      v206.i32[3] = v287.i32[3];
                    }
                  }
                }
              }
              __int32 v204 = v262.i32[3];
              float32x4_t v207 = vmlaq_f32(vmulq_n_f32(*v202, v299), v295, v211);
              v207.i32[3] = v250;
              float32x4_t v208 = v207;
              v208.i32[3] = 0;
              *v202++ = v208;
              ++v203;
              --v200;
            }
            while (v200);
            __int32 v219 = v250;
            __int32 v241 = v206.i32[3];
            __int32 v243 = v205.i32[3];
            uint64_t v27 = v245;
            uint64_t v70 = v246;
            goto LABEL_121;
          }
          goto LABEL_120;
        }
        uint64_t v54 = v292;
        if (v33 != v32)
        {
          uint64_t v60 = v32 - v33;
          unsigned __int32 v61 = (float32x4_t *)(v43 + 16 * v33);
          float32x4_t v62 = (float32x4_t *)(v42 + 16 * v33);
          __int32 v63 = v257;
          v64.i32[3] = v224;
          do
          {
            __int32 v288 = v64.i32[3];
            __int32 v65 = v63;
            float32x4_t v66 = *v62++;
            float32x4_t v67 = v66;
            v67.i32[3] = v65;
            __int32 v257 = v65;
            *(double *)v68.i64 = sub_1B6DA472C(v238, v67);
            float32x4_t v64 = vmlaq_f32(vmulq_n_f32(*v61, v299), v295, v68);
            v64.i32[3] = v288;
            float32x4_t v69 = v64;
            v69.i32[3] = 0;
            *v61++ = v69;
            __int32 v63 = v257;
            --v60;
          }
          while (v60);
          __int32 v224 = v288;
        }
        uint64_t v27 = v245;
        uint64_t v70 = v246;
        char v28 = v231;
        uint64_t v29 = v230;
LABEL_122:
        sub_1B6345178(v261, (unsigned __int16 **)v311, (uint64_t)v314);
        sub_1B634507C((char *)v54);
        ecs_stack_allocator_pop_snapshot(v29);
        if (v28)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v54 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v54 + 376));
        }
        swift_release();
        uint64_t v26 = v70 + 1;
      }
      while (v26 != v236);
      sub_1B632F170(v303);
      sub_1B62CA064(v225);
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

uint64_t sub_1B67DB770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B62F7B24(0, &qword_1E9DD03B8, a3, (uint64_t (*)(uint64_t))type metadata accessor for ParticleFluidSolver2DSolverData, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B67DB804(uint64_t a1)
{
  return sub_1B67D8D70(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(_OWORD **)(v1 + 32), *(float *)(v1 + 40));
}

void sub_1B67DB814(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7)
{
  uint64_t v8 = v7;
  if (*(unsigned char *)a4 == 1)
  {
    int v12 = *(_DWORD *)(a4 + 4);
    int v13 = *(_DWORD *)(a4 + 8);
    if (v12 == -1 && v13 == 0)
    {
      uint64_t v46 = sub_1B62C91B8((uint64_t)&type metadata for WorldTransform);
      if (v47)
      {
        long long v51 = xmmword_1B6E4F370;
        float32x4_t v52 = (float32x4_t)xmmword_1B6E4F2E0;
        float32x4_t v49 = (float32x4_t)xmmword_1B6E4F320;
        float32x4_t v50 = (float32x4_t)xmmword_1B6E4F300;
      }
      else
      {
        uint64_t v48 = (float32x4_t *)(v46 + (a3 << 6));
        float32x4_t v50 = *v48;
        float32x4_t v49 = v48[1];
        float32x4_t v52 = v48[2];
        long long v51 = (__int128)v48[3];
      }
      int32x4_t v53 = (int32x4_t)vmulq_f32(v50, v50);
      v53.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v53, 2), vadd_f32(*(float32x2_t *)v53.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v53.i8, 1))).u32[0];
      float32x2_t v54 = vrsqrte_f32((float32x2_t)v53.u32[0]);
      float32x2_t v55 = vmul_f32(v54, vrsqrts_f32((float32x2_t)v53.u32[0], vmul_f32(v54, v54)));
      float32x4_t v56 = vmulq_n_f32(v50, vmul_f32(v55, vrsqrts_f32((float32x2_t)v53.u32[0], vmul_f32(v55, v55))).f32[0]);
      v56.i32[3] = v50.i32[3];
      int32x4_t v57 = (int32x4_t)vmulq_f32(v49, v49);
      v57.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v57, 2), vadd_f32(*(float32x2_t *)v57.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v57.i8, 1))).u32[0];
      float32x2_t v58 = vrsqrte_f32((float32x2_t)v57.u32[0]);
      float32x2_t v59 = vmul_f32(v58, vrsqrts_f32((float32x2_t)v57.u32[0], vmul_f32(v58, v58)));
      float32x4_t v60 = vmulq_n_f32(v49, vmul_f32(v59, vrsqrts_f32((float32x2_t)v57.u32[0], vmul_f32(v59, v59))).f32[0]);
      v60.i32[3] = v49.i32[3];
      float32x4_t v96 = v56;
      float32x4_t v97 = v60;
      int32x4_t v61 = (int32x4_t)vmulq_f32(v52, v52);
      v61.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v61, 2), vadd_f32(*(float32x2_t *)v61.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v61.i8, 1))).u32[0];
      *(float32x2_t *)v60.f32 = vrsqrte_f32((float32x2_t)v61.u32[0]);
      *(float32x2_t *)v60.f32 = vmul_f32(*(float32x2_t *)v60.f32, vrsqrts_f32((float32x2_t)v61.u32[0], vmul_f32(*(float32x2_t *)v60.f32, *(float32x2_t *)v60.f32)));
      float32x4_t v62 = vmulq_n_f32(v52, vmul_f32(*(float32x2_t *)v60.f32, vrsqrts_f32((float32x2_t)v61.u32[0], vmul_f32(*(float32x2_t *)v60.f32, *(float32x2_t *)v60.f32))).f32[0]);
      v62.i32[3] = v52.i32[3];
      float32x4_t v98 = v62;
      long long v99 = v51;
      sub_1B688ABDC((float32x4_t)xmmword_1B6E4F540);
      if (a6)
      {
        uint64_t v63 = 0;
        float v64 = *(float *)(a4 + 16);
        __n128 v87 = (__n128)vmlaq_f32(vmlaq_n_f32(vmulq_f32(v98, (float32x4_t)0), v97, *(float *)(a4 + 20)), (float32x4_t)0, v96);
        __n128 v90 = (__n128)v99;
        float v65 = *(float *)(a4 + 12);
        do
        {
          uint64_t v66 = v63 + 1;
          long long v67 = a7[2];
          v95[0] = a7[1];
          v95[1] = v67;
          long long v68 = a7[4];
          v95[2] = a7[3];
          v95[3] = v68;
          uint64_t v69 = *((void *)v95 + v63);
          sub_1B6DA4670(v69, 1, v90, v65, v87, a1);
          sub_1B6DA4674(v69, 1, v90, v65, v64, a1);
          uint64_t v63 = v66;
        }
        while (a6 != v66);
      }
    }
    else
    {
      if (qword_1EB97DC28 != -1) {
        swift_once();
      }
      uint64_t v108 = qword_1EB997A18;
      int v109 = 0;
      char v110 = 2;
      uint64_t v111 = 0;
      char v112 = 2;
      uint64_t v113 = 0;
      swift_retain();
      sub_1B66626C0(1, 1, 1, (uint64_t)v92);
      swift_release();
      sub_1B62F6E08();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
      *(void *)(inited + 56) = &type metadata for EmitterReference;
      *(void *)(inited + 64) = &off_1F0F6BD40;
      *(_DWORD *)(inited + 32) = v12;
      *(_DWORD *)(inited + 36) = v13;
      sub_1B62A1250(inited, (uint64_t)v93);
      swift_setDeallocating();
      sub_1B62C5560(0, (unint64_t *)&qword_1EB97E840);
      swift_arrayDestroy();
      sub_1B62CA064((uint64_t)v92);
      v105[0] = v93[0];
      v105[1] = v93[1];
      uint64_t v106 = v94;
      sub_1B62C9DA8(a5, (uint64_t)v105, 0x200000000, v95);
      sub_1B62CA210((uint64_t)v95, (uint64_t)&v96, (unint64_t *)&qword_1EB97DC50);
      if (v96.i64[0])
      {
        if (v102 > 0 && (uint64_t v75 = *((void *)&v99 + 1)) != 0)
        {
          float32x4_t v17 = v101;
          uint64_t v18 = v101[4];
          int v81 = *(unsigned __int8 *)(v100 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          v103[0] = v96;
          v103[1] = v97;
          uint64_t v71 = v98.i64[1];
          uint64_t v72 = (uint64_t)(v101 + 6);
          uint64_t v104 = v98.i64[0];
          uint64_t v70 = v101 + 8;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v19 = 0;
          uint64_t v73 = v18;
          __int32 v74 = v17;
          do
          {
            uint64_t v20 = v17;
            uint64_t v79 = v19;
            uint64_t v80 = v8;
            uint64_t v21 = (unsigned int *)(v71 + 48 * v19);
            uint64_t v22 = *v21;
            uint64_t v114 = v21[1];
            uint64_t v23 = *((void *)v21 + 3);
            float v77 = (uint64_t *)*((void *)v21 + 2);
            uint64_t v24 = *((void *)v21 + 5);
            uint64_t v83 = *((void *)v21 + 4);
            if (v81)
            {
              float v25 = *(os_unfair_lock_s **)(v24 + 376);
              swift_retain();
              os_unfair_lock_lock(v25);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 344));
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v18);
            sub_1B62CA210(v72, (uint64_t)v107, &qword_1EB97DE20);
            uint64_t v26 = v20[4];
            uint64_t v27 = *(void *)(*(void *)(*(void *)(*(void *)(v24 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v20[6] = ecs_stack_allocator_allocate(v26, 48 * v27, 8);
            v20[7] = v27;
            v70[1] = 0;
            v70[2] = 0;
            *uint64_t v70 = 0;
            swift_release();
            char v28 = v77;
            uint64_t v29 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v77, v23, v83, (uint64_t)v20);
            uint64_t v76 = sub_1B62C9024((uint64_t)&type metadata for Scale1, (uint64_t)&off_1F0FA0DD0, v77, v23, v83, (uint64_t)v20);
            uint64_t v78 = v24;
            uint64_t v30 = sub_1B62C9024((uint64_t)&type metadata for Velocity, (uint64_t)&off_1F0FA7C08, v28, v23, v83, (uint64_t)v20);
            if (v22 == v114)
            {
              __n128 v31 = v85;
              float32x4_t v32 = v88;
            }
            else
            {
              uint64_t v33 = v30;
              float v34 = *(float *)(a4 + 12);
              float32x4_t v35 = (const float *)(a4 + 20);
              __n128 v31 = (__n128)vld1q_dup_f32(v35);
              float32x4_t v84 = (float32x4_t)v31;
              v31.n128_u32[3] = v85.n128_u32[3];
              v32.i32[3] = v88.i32[3];
              do
              {
                unsigned __int32 v36 = v31.n128_u32[3];
                __n128 v31 = *(__n128 *)(v29 + 16 * v22);
                v31.n128_u32[3] = v36;
                __int32 v37 = v32.i32[3];
                float32x4_t v32 = vmulq_f32(v84, *(float32x4_t *)(v33 + 16 * v22));
                v32.i32[3] = v37;
                if (a6)
                {
                  uint64_t v38 = 0;
                  float v39 = v34 * *(float *)(v76 + 4 * v22);
                  float v40 = *(float *)(a4 + 16);
                  __n128 v86 = v31;
                  __n128 v89 = (__n128)v32;
                  do
                  {
                    uint64_t v41 = v38 + 1;
                    long long v42 = a7[2];
                    v91[0] = a7[1];
                    v91[1] = v42;
                    long long v43 = a7[4];
                    v91[2] = a7[3];
                    v91[3] = v43;
                    uint64_t v44 = *((void *)v91 + v38);
                    sub_1B6DA4670(v44, 1, v31, v39, v89, a1);
                    sub_1B6DA4674(v44, 1, v86, v39, v40, a1);
                    __n128 v31 = v86;
                    float32x4_t v32 = (float32x4_t)v89;
                    uint64_t v38 = v41;
                  }
                  while (a6 != v41);
                }
                ++v22;
              }
              while (v22 != v114);
            }
            __n128 v85 = v31;
            float32x4_t v88 = v32;
            float32x4_t v17 = v74;
            sub_1B6345178(v74, (unsigned __int16 **)v103, (uint64_t)v107);
            uint64_t v8 = v80;
            sub_1B634507C((char *)v78);
            uint64_t v18 = v73;
            ecs_stack_allocator_pop_snapshot(v73);
            if (v81)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v78 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v78 + 376));
            }
            swift_release();
            uint64_t v19 = v79 + 1;
          }
          while (v79 + 1 != v75);
          sub_1B62CA064((uint64_t)v93);
          sub_1B632F170((uint64_t *)v95);
        }
        else
        {
          sub_1B62CA064((uint64_t)v93);
        }
        sub_1B632F170((uint64_t *)v95);
      }
      else
      {
        sub_1B62CA064((uint64_t)v93);
      }
    }
  }
}

unint64_t sub_1B67DBF14()
{
  unint64_t result = qword_1E9DD03D8;
  if (!qword_1E9DD03D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD03D8);
  }
  return result;
}

unint64_t sub_1B67DBF68()
{
  unint64_t result = qword_1E9DD03F0;
  if (!qword_1E9DD03F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD03F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleGlobalFluidSolver2DSolver()
{
  return &type metadata for ParticleGlobalFluidSolver2DSolver;
}

ValueMetadata *type metadata accessor for ParticleGlobalFluidSolver2DEmitter()
{
  return &type metadata for ParticleGlobalFluidSolver2DEmitter;
}

ValueMetadata *type metadata accessor for ParticleAffectedByGlobalFluidSolver2DEmitter()
{
  return &type metadata for ParticleAffectedByGlobalFluidSolver2DEmitter;
}

unsigned char *storeEnumTagSinglePayload for ParticleFluidSolver2DEmitter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67DC0B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleFluidSolver2DEmitter.CodingKeys()
{
  return &type metadata for ParticleFluidSolver2DEmitter.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ParticleFluidSolver2DSolver.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ParticleFluidSolver2DSolver.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67DC24CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleFluidSolver2DSolver.CodingKeys()
{
  return &type metadata for ParticleFluidSolver2DSolver.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleAffectedByGlobalFluidSolver2DSolver()
{
  return &type metadata for ParticleAffectedByGlobalFluidSolver2DSolver;
}

unint64_t sub_1B67DC298()
{
  unint64_t result = qword_1E9DD0400;
  if (!qword_1E9DD0400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0400);
  }
  return result;
}

unint64_t sub_1B67DC2F0()
{
  unint64_t result = qword_1E9DD0408;
  if (!qword_1E9DD0408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0408);
  }
  return result;
}

unint64_t sub_1B67DC348()
{
  unint64_t result = qword_1E9DD0410;
  if (!qword_1E9DD0410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0410);
  }
  return result;
}

unint64_t sub_1B67DC3A0()
{
  unint64_t result = qword_1E9DD0418;
  if (!qword_1E9DD0418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0418);
  }
  return result;
}

unint64_t sub_1B67DC3F8()
{
  unint64_t result = qword_1E9DD0420;
  if (!qword_1E9DD0420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0420);
  }
  return result;
}

unint64_t sub_1B67DC450()
{
  unint64_t result = qword_1E9DD0428;
  if (!qword_1E9DD0428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0428);
  }
  return result;
}

unint64_t sub_1B67DC4A4()
{
  unint64_t result = qword_1E9DD0438;
  if (!qword_1E9DD0438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0438);
  }
  return result;
}

unint64_t sub_1B67DC4F8()
{
  unint64_t result = qword_1E9DD0448;
  if (!qword_1E9DD0448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0448);
  }
  return result;
}

unint64_t sub_1B67DC54C()
{
  unint64_t result = qword_1E9DD0458;
  if (!qword_1E9DD0458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0458);
  }
  return result;
}

void sub_1B67DC5A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B67DC608()
{
  unint64_t result = qword_1E9DD0468;
  if (!qword_1E9DD0468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0468);
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleAffectedByGlobalFluidSolver2DSolver.CodingKeys()
{
  return &type metadata for ParticleAffectedByGlobalFluidSolver2DSolver.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleAffectedByGlobalFluidSolver2DEmitter.CodingKeys()
{
  return &type metadata for ParticleAffectedByGlobalFluidSolver2DEmitter.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleGlobalFluidSolver2DEmitter.CodingKeys()
{
  return &type metadata for ParticleGlobalFluidSolver2DEmitter.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleGlobalFluidSolver2DSolver.CodingKeys()
{
  return &type metadata for ParticleGlobalFluidSolver2DSolver.CodingKeys;
}

unint64_t sub_1B67DC6A0()
{
  unint64_t result = qword_1E9DD0470;
  if (!qword_1E9DD0470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0470);
  }
  return result;
}

unint64_t sub_1B67DC6F8()
{
  unint64_t result = qword_1E9DD0478;
  if (!qword_1E9DD0478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0478);
  }
  return result;
}

unint64_t sub_1B67DC750()
{
  unint64_t result = qword_1E9DD0480;
  if (!qword_1E9DD0480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0480);
  }
  return result;
}

unint64_t sub_1B67DC7A8()
{
  unint64_t result = qword_1E9DD0488;
  if (!qword_1E9DD0488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0488);
  }
  return result;
}

unint64_t sub_1B67DC800()
{
  unint64_t result = qword_1E9DD0490;
  if (!qword_1E9DD0490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0490);
  }
  return result;
}

unint64_t sub_1B67DC858()
{
  unint64_t result = qword_1E9DD0498;
  if (!qword_1E9DD0498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0498);
  }
  return result;
}

unint64_t sub_1B67DC8B0()
{
  unint64_t result = qword_1E9DD04A0;
  if (!qword_1E9DD04A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD04A0);
  }
  return result;
}

unint64_t sub_1B67DC908()
{
  unint64_t result = qword_1E9DD04A8;
  if (!qword_1E9DD04A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD04A8);
  }
  return result;
}

uint64_t sub_1B67DC960(uint64_t *a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  sub_1B62C14BC(a1, a1[3]);
  uint64_t DynamicType = (uint64_t *)swift_getDynamicType();
  int v3 = sub_1B67DCB48(DynamicType);
  if (!v3) {
    return 0;
  }
  unsigned int v4 = v3;
  *((void *)&v22 + 1) = &type metadata for Extensions;
  *(void *)&long long v23 = &off_1F0F59030;
  sub_1B67DCBF4((uint64_t *)&v21, a1);
  sub_1B62C15C4(&v21, (uint64_t)v24);
  uint64_t v5 = v25;
  uint64_t v6 = v26;
  sub_1B62C550C((uint64_t)v24, v25);
  uint64_t v7 = sub_1B6B190FC(v5, v6);
  int64_t v8 = v4[2];
  if (v8)
  {
    uint64_t v9 = v7;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1B6C3C4B0(0, v8, 0);
    uint64_t v10 = v20;
    uint64_t v11 = v4 + 7;
    do
    {
      uint64_t v12 = *(v11 - 3);
      uint64_t v13 = *(v11 - 2);
      sub_1B633D260(v9 + *v11, *(v11 - 1), (uint64_t *)&v22);
      *(void *)&long long v21 = v12;
      *((void *)&v21 + 1) = v13;
      unint64_t v14 = *(void *)(v20 + 16);
      unint64_t v15 = *(void *)(v20 + 24);
      swift_bridgeObjectRetain();
      if (v14 >= v15 >> 1) {
        sub_1B6C3C4B0(v15 > 1, v14 + 1, 1);
      }
      v11 += 4;
      *(void *)(v20 + 16) = v14 + 1;
      uint64_t v16 = (_OWORD *)(v20 + 48 * v14);
      long long v17 = v21;
      long long v18 = v23;
      v16[3] = v22;
      _OWORD v16[4] = v18;
      v16[2] = v17;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v24);
  return v10;
}

void *sub_1B67DCB48(uint64_t *a1)
{
  uint64_t v1 = a1;
  for (uint64_t i = *a1; sub_1B6805D0C(i); uint64_t i = *v1)
  {
    if (sub_1B6805D0C(*v1) == 14)
    {
      return sub_1B6805330(v1);
    }
    if (sub_1B6805D0C(*v1) == 9)
    {
      uint64_t v1 = (uint64_t *)v1[1];
      if (v1) {
        continue;
      }
    }
    return 0;
  }

  return sub_1B6804E54(v1);
}

uint64_t *sub_1B67DCBF4(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *int v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t initializeWithCopy for Property.Description(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Property.Description(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for Property.Description(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for Property.Description()
{
  return &type metadata for Property.Description;
}

uint64_t destroy for Property(uint64_t a1)
{
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 16);
}

void *initializeWithCopy for Property(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2 + 2;
  uint64_t v5 = a2[5];
  a1[5] = v5;
  uint64_t v6 = **(void (***)(void *, void *, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 2, v4, v5);
  return a1;
}

void *assignWithCopy for Property(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B67DCBF4(a1 + 2, a2 + 2);
  return a1;
}

uint64_t assignWithTake for Property(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for Property()
{
  return &type metadata for Property;
}

void *sub_1B67DD080(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F77C8();
    int v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      uint64_t v4 = a1 + 32;
      swift_retain();
      do
      {
        sub_1B67F7830(v4, (uint64_t)&v15, &qword_1E9DD0538);
        uint64_t v5 = v15;
        uint64_t v6 = v16;
        unint64_t v7 = sub_1B62B2CE0(v15, v16);
        *(void *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
        uint64_t v8 = (uint64_t *)(v2[6] + 16 * v7);
        *uint64_t v8 = v5;
        v8[1] = v6;
        uint64_t v9 = v2[7] + 88 * v7;
        long long v10 = v18;
        *(_OWORD *)uint64_t v9 = v17;
        long long v11 = v19;
        long long v12 = v20;
        long long v13 = v21;
        *(void *)(v9 + 80) = v22;
        *(_OWORD *)(v9 + 48) = v12;
        *(_OWORD *)(v9 + 64) = v13;
        *(_OWORD *)(v9 + 16) = v10;
        *(_OWORD *)(v9 + 32) = v11;
        ++v2[2];
        v4 += 104;
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    int v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DD1D8(uint64_t a1)
{
  return sub_1B67DE64C(a1, (void (*)(void))sub_1B67FB174);
}

void *sub_1B67DD1F0(uint64_t a1)
{
  return sub_1B67DF728(a1, &qword_1E9DD0A18, (void (*)(uint64_t))type metadata accessor for AuthoringNode, (unint64_t *)&qword_1E9DD0A20, (void (*)(uint64_t))type metadata accessor for AuthoringNode);
}

void *sub_1B67DD22C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67FBD08();
    int v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 56);
      do
      {
        uint64_t v5 = (void *)*(v4 - 3);
        uint64_t v6 = (void *)*(v4 - 2);
        uint64_t v7 = *((unsigned __int8 *)v4 - 4);
        uint64_t v8 = *((unsigned int *)v4 - 2);
        uint64_t v9 = *v4;
        v4 += 4;
        sub_1B6650588(v5, v6, v8 | (v7 << 32));
        swift_bridgeObjectRetain();
        unint64_t v10 = sub_1B69FA920(v5, v6, v8 | (v7 << 32));
        *(void *)((char *)v2 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
        uint64_t v11 = v2[6] + 24 * v10;
        *(void *)uint64_t v11 = v5;
        *(void *)(v11 + 8) = v6;
        *(unsigned char *)(v11 + 20) = v7;
        *(_DWORD *)(v11 + 16) = v8;
        *(void *)(v2[7] + 8 * v10) = v9;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    int v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DD364(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67FBA88();
    int v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = a1 + 40;
      do
      {
        unint64_t v5 = *(void *)(v4 - 8);
        uint64_t v6 = *(void *)(v4 + 8);
        char v7 = *(unsigned char *)(v4 + 16);
        uint64_t v8 = *(void *)(v4 + 24);
        uint64_t v9 = *(void *)(v4 + 32);
        unsigned __int8 v10 = *(unsigned char *)v4;
        v4 += 48;
        sub_1B62C6AA8(v5);
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_1B69FA9B0(v5, v10, v6, v7);
        *(void *)((char *)v2 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v11;
        uint64_t v12 = v2[6] + 32 * v11;
        *(void *)uint64_t v12 = v5;
        *(unsigned char *)(v12 + 8) = v10;
        *(void *)(v12 + 16) = v6;
        *(unsigned char *)(v12 + 24) = v7;
        long long v13 = (void *)(v2[7] + 16 * v11);
        void *v13 = v8;
        v13[1] = v9;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    int v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DD49C(uint64_t a1)
{
  return sub_1B633A7FC(a1, (void (*)(void))sub_1B67F76A8);
}

void *sub_1B67DD4B4(uint64_t a1)
{
  sub_1B67FA9CC(0, &qword_1E9DD0920, (void (*)(uint64_t))sub_1B67FAA44);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  char v7 = (char *)v22 - v6;
  if (*(void *)(a1 + 16))
  {
    sub_1B67FAAD4(0, (unint64_t *)&qword_1E9DD0928, (void (*)(uint64_t))sub_1B67FAA44);
    uint64_t v8 = sub_1B6E32C58();
    uint64_t v9 = (void *)v8;
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      unint64_t v11 = &v7[*(int *)(v3 + 48)];
      uint64_t v12 = v8 + 64;
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v22[1] = a1;
      uint64_t v14 = a1 + v13;
      uint64_t v15 = *(void *)(v4 + 72);
      swift_retain();
      do
      {
        sub_1B67FB6D4(v14, (uint64_t)v7, &qword_1E9DD0920, (void (*)(uint64_t))sub_1B67FAA44);
        unint64_t v16 = sub_1B69FA874((uint64_t)v7);
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        uint64_t v17 = v9[6];
        uint64_t v18 = sub_1B6E31118();
        (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v7, v18);
        uint64_t v19 = v9[7] + 16 * v16;
        char v20 = v11[8];
        *(void *)uint64_t v19 = *(void *)v11;
        *(unsigned char *)(v19 + 8) = v20;
        ++v9[2];
        v14 += v15;
        --v10;
      }
      while (v10);
      swift_release();
    }
  }
  else
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1B67DD6E8(uint64_t a1)
{
  sub_1B6397C10(0, (unint64_t *)&unk_1E9DD0910, MEMORY[0x1E4F27990]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  char v7 = (char *)v20 - v6;
  if (*(void *)(a1 + 16))
  {
    sub_1B67FA8C0();
    uint64_t v8 = sub_1B6E32C58();
    uint64_t v9 = (void *)v8;
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      uint64_t v11 = *(int *)(v3 + 48);
      uint64_t v12 = v8 + 64;
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v20[1] = a1;
      uint64_t v14 = a1 + v13;
      uint64_t v15 = *(void *)(v4 + 72);
      swift_retain();
      do
      {
        sub_1B67FA95C(v14, (uint64_t)v7, (unint64_t *)&unk_1E9DD0910, MEMORY[0x1E4F27990]);
        unint64_t v16 = sub_1B69FA874((uint64_t)v7);
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        uint64_t v17 = v9[6];
        uint64_t v18 = sub_1B6E31118();
        (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v7, v18);
        *(unsigned char *)(v9[7] + v16) = v7[v11];
        ++v9[2];
        v14 += v15;
        --v10;
      }
      while (v10);
      swift_release();
    }
  }
  else
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1B67DD900(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67FB10C();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (unsigned char *)(a1 + 64);
      do
      {
        uint64_t v5 = *((void *)v4 - 4);
        uint64_t v6 = *((void *)v4 - 3);
        uint64_t v8 = *((void *)v4 - 2);
        uint64_t v7 = *((void *)v4 - 1);
        char v9 = *v4;
        v4 += 40;
        swift_bridgeObjectRetain();
        unint64_t v10 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
        uint64_t v11 = (uint64_t *)(v2[6] + 16 * v10);
        *uint64_t v11 = v5;
        v11[1] = v6;
        uint64_t v12 = v2[7] + 24 * v10;
        *(void *)uint64_t v12 = v8;
        *(void *)(v12 + 8) = v7;
        *(unsigned char *)(v12 + 16) = v9;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DDA1C(uint64_t a1)
{
  return sub_1B67DE774(a1, &qword_1E9DD09B0, (void (*)(uint64_t))sub_1B67FB0A0);
}

void *sub_1B67DDA3C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F8F1C();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (void *)(a1 + 72);
      do
      {
        uint64_t v5 = *(v4 - 5);
        uint64_t v6 = *(v4 - 4);
        uint64_t v7 = *(v4 - 3);
        long long v13 = *((_OWORD *)v4 - 1);
        uint64_t v8 = *v4;
        v4 += 6;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        unint64_t v9 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
        unint64_t v10 = (uint64_t *)(v2[6] + 16 * v9);
        *unint64_t v10 = v5;
        v10[1] = v6;
        uint64_t v11 = v2[7] + 32 * v9;
        *(void *)uint64_t v11 = v7;
        *(_OWORD *)(v11 + 8) = v13;
        *(void *)(v11 + 24) = v8;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DDB64(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F8264();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (_OWORD *)(a1 + 64);
      do
      {
        uint64_t v5 = *((void *)v4 - 4);
        uint64_t v6 = *((void *)v4 - 3);
        swift_bridgeObjectRetain();
        long long v12 = *(v4 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v7 = *v4;
        v4 += 3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v8 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
        unint64_t v9 = (uint64_t *)(v2[6] + 16 * v8);
        *unint64_t v9 = v5;
        v9[1] = v6;
        unint64_t v10 = (_OWORD *)(v2[7] + 32 * v8);
        *unint64_t v10 = v12;
        v10[1] = v7;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DDCA0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B63966C0(0, &qword_1E9DD07B0, (void (*)(uint64_t))type metadata accessor for VFXREBindingMeshData, (void (*)(void))sub_1B67F92C4);
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (id *)(a1 + 40);
      do
      {
        unsigned __int8 v5 = *((unsigned char *)v4 - 8);
        id v6 = *v4;
        unint64_t v7 = sub_1B69FAB00(v5);
        *(void *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
        *(unsigned char *)(v2[6] + v7) = v5;
        *(void *)(v2[7] + 8 * v7) = v6;
        ++v2[2];
        v4 += 2;
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DDDC8(uint64_t a1)
{
  return sub_1B67DDE04(a1, &qword_1E9DD52D0, &qword_1E9DD0570, MEMORY[0x1E4FBC840] + 8);
}

void *sub_1B67DDDE8(uint64_t a1)
{
  return sub_1B67DDE04(a1, (unint64_t *)&unk_1E9DD0550, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0]);
}

void *sub_1B67DDE04(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F79C4(0, a2, a3, a4);
    unsigned __int8 v5 = (void *)sub_1B6E32C58();
    uint64_t v6 = *(void *)(a1 + 16);
    if (v6)
    {
      swift_retain();
      unint64_t v7 = (void *)(a1 + 104);
      do
      {
        uint64_t v8 = *(v7 - 8);
        uint64_t v9 = *(v7 - 7);
        uint64_t v10 = *(v7 - 6);
        uint64_t v11 = *(v7 - 5);
        uint64_t v12 = *(v7 - 2);
        int v13 = *((_DWORD *)v7 - 2);
        char v14 = *((unsigned char *)v7 - 4);
        uint64_t v15 = *v7;
        *(void *)&long long v21 = *(v7 - 9);
        *((void *)&v21 + 1) = v8;
        *(void *)&long long v22 = v9;
        *((void *)&v22 + 1) = v10;
        *(void *)long long v23 = v11;
        *(_OWORD *)&v23[8] = *((_OWORD *)v7 - 2);
        *(void *)&v23[24] = v12;
        *(_DWORD *)&v23[32] = v13;
        v23[36] = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v16 = sub_1B69FAB44((uint64_t *)&v21);
        *(void *)((char *)v5 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v16;
        uint64_t v17 = v5[6] + 72 * v16;
        long long v18 = *(_OWORD *)&v23[16];
        *(_OWORD *)(v17 + 32) = *(_OWORD *)v23;
        *(_OWORD *)(v17 + 48) = v18;
        *(void *)(v17 + 61) = *(void *)&v23[29];
        long long v19 = v22;
        *(_OWORD *)uint64_t v17 = v21;
        *(_OWORD *)(v17 + 16) = v19;
        *(void *)(v5[7] + 8 * v16) = v15;
        ++v5[2];
        v7 += 10;
        --v6;
      }
      while (v6);
      swift_release();
    }
  }
  else
  {
    unsigned __int8 v5 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v5;
}

void *sub_1B67DDF84(uint64_t a1)
{
  return sub_1B62A6D54(a1, (unint64_t *)&unk_1E9DD04F0, (void (*)(uint64_t))_s11TemplateSetCMa);
}

void *sub_1B67DDFA4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F7710();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 56);
      do
      {
        uint64_t v5 = *(v4 - 3);
        uint64_t v6 = *(v4 - 2);
        uint64_t v8 = *(v4 - 1);
        uint64_t v7 = *v4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v9 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
        uint64_t v10 = (uint64_t *)(v2[6] + 16 * v9);
        *uint64_t v10 = v5;
        v10[1] = v6;
        uint64_t v11 = (void *)(v2[7] + 16 * v9);
        *uint64_t v11 = v8;
        v11[1] = v7;
        ++v2[2];
        v4 += 4;
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DE0B4(uint64_t a1)
{
  return sub_1B67DE64C(a1, (void (*)(void))sub_1B67FA500);
}

void *sub_1B67DE0CC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67FA6EC();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (_OWORD *)(a1 + 40);
      do
      {
        long long v8 = *v4;
        unsigned __int8 v5 = *((unsigned char *)v4 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v6 = sub_1B69FA7C0(v5);
        *(void *)((char *)v2 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
        *(unsigned char *)(v2[6] + v6) = v5;
        *(_OWORD *)(v2[7] + 16 * v6) = v8;
        ++v2[2];
        uint64_t v4 = (_OWORD *)((char *)v4 + 24);
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DE1D8(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD0838, (void (*)(uint64_t))_s12ContextEntryCMa);
}

void *sub_1B67DE1F8(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD0830, (void (*)(uint64_t))_s11ContextExitCMa);
}

void *sub_1B67DE218(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD0828, (void (*)(uint64_t))_s10SubContextCMa);
}

void *sub_1B67DE238(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD0820, (void (*)(uint64_t))_s20ArraySequenceSnippetCMa);
}

void *sub_1B67DE258(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD0818, (void (*)(uint64_t))_s11CodeSnippetCMa);
}

void *sub_1B67DE278(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD0810, (void (*)(uint64_t))_s17CustomCodeSnippetCMa);
}

void *sub_1B67DE298(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD0808, (void (*)(uint64_t))_s17TypedArraySnippetCMa);
}

void *sub_1B67DE2B8(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD0800, (void (*)(uint64_t))_s19StaticSwitchSnippetCMa);
}

void *sub_1B67DE2D8(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD07F8, (void (*)(uint64_t))type metadata accessor for GraphV1CodeGeneration.BaseObject);
}

void *sub_1B67DE2F8(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD07F0, (void (*)(uint64_t))_s15VariableSnippetCMa);
}

void *sub_1B67DE318(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD5230, (void (*)(uint64_t))_s24VariableReferenceSnippetCMa);
}

void *sub_1B67DE338(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F78A0(0, &qword_1E9DD07D0, (void (*)(uint64_t))sub_1B67F9380);
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 64);
      do
      {
        uint64_t v5 = *(v4 - 4);
        uint64_t v6 = *(v4 - 3);
        uint64_t v8 = *(v4 - 2);
        uint64_t v7 = *(v4 - 1);
        uint64_t v9 = *v4;
        v4 += 5;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v10 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
        uint64_t v11 = (uint64_t *)(v2[6] + 16 * v10);
        *uint64_t v11 = v5;
        v11[1] = v6;
        uint64_t v12 = (void *)(v2[7] + 24 * v10);
        *uint64_t v12 = v8;
        v12[1] = v7;
        void v12[2] = v9;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DE490(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD07C8, (void (*)(uint64_t))_s13ParameterBaseCMa);
}

void *sub_1B67DE4B0(uint64_t a1)
{
  return sub_1B62A6D54(a1, (unint64_t *)&unk_1E9DD5220, (void (*)(uint64_t))_s7ContextCMa);
}

void *sub_1B67DE4D0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F9318();
    uint64_t v2 = sub_1B6E32C58();
    uint64_t v3 = (void *)v2;
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      uint64_t v17 = v2 + 64;
      swift_retain();
      uint64_t v5 = (uint64_t *)(a1 + 48);
      do
      {
        uint64_t v6 = *(v5 - 2);
        uint64_t v7 = *(v5 - 1);
        uint64_t v9 = *v5;
        uint64_t v8 = v5[1];
        uint64_t v10 = v5[3];
        uint64_t v11 = v5[5];
        uint64_t v18 = v5[4];
        uint64_t v19 = v5[2];
        uint64_t v12 = v5[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v13 = sub_1B62B2CE0(v6, v7);
        *(void *)(v17 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        char v14 = (uint64_t *)(v3[6] + 16 * v13);
        *char v14 = v6;
        v14[1] = v7;
        uint64_t v15 = (void *)(v3[7] + 56 * v13);
        *uint64_t v15 = v9;
        v15[1] = v8;
        v15[2] = v19;
        v15[3] = v10;
        v15[4] = v18;
        v15[5] = v11;
        v15[6] = v12;
        ++v3[2];
        v5 += 9;
        --v4;
      }
      while (v4);
      swift_release();
    }
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1B67DE634(uint64_t a1)
{
  return sub_1B67DE64C(a1, (void (*)(void))sub_1B67F941C);
}

void *sub_1B67DE64C(uint64_t a1, void (*a2)(void))
{
  if (*(void *)(a1 + 16))
  {
    a2(0);
    uint64_t v3 = (void *)sub_1B6E32C58();
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      swift_retain();
      uint64_t v5 = (uint64_t *)(a1 + 48);
      do
      {
        uint64_t v6 = *(v5 - 2);
        uint64_t v7 = *(v5 - 1);
        uint64_t v8 = *v5;
        v5 += 3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v9 = sub_1B62B2CE0(v6, v7);
        *(void *)((char *)v3 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
        uint64_t v10 = (uint64_t *)(v3[6] + 16 * v9);
        *uint64_t v10 = v6;
        v10[1] = v7;
        *(void *)(v3[7] + 8 * v9) = v8;
        ++v3[2];
        --v4;
      }
      while (v4);
      swift_release();
    }
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1B67DE754(uint64_t a1)
{
  return sub_1B67DE774(a1, (unint64_t *)&unk_1E9DD51D0, (void (*)(uint64_t))sub_1B67F8344);
}

void *sub_1B67DE774(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F78A0(0, a2, a3);
    uint64_t v4 = (void *)sub_1B6E32C58();
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      swift_retain();
      uint64_t v6 = (uint64_t *)(a1 + 48);
      do
      {
        uint64_t v7 = *(v6 - 2);
        uint64_t v8 = *(v6 - 1);
        uint64_t v9 = *v6;
        v6 += 3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v10 = sub_1B62B2CE0(v7, v8);
        *(void *)((char *)v4 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
        uint64_t v11 = (uint64_t *)(v4[6] + 16 * v10);
        *uint64_t v11 = v7;
        v11[1] = v8;
        *(void *)(v4[7] + 8 * v10) = v9;
        ++v4[2];
        --v5;
      }
      while (v5);
      swift_release();
    }
  }
  else
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v4;
}

void *sub_1B67DE888(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F82CC();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 48);
      do
      {
        uint64_t v5 = *(v4 - 2);
        uint64_t v6 = *(v4 - 1);
        uint64_t v7 = *v4;
        v4 += 3;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        unint64_t v8 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
        uint64_t v9 = (uint64_t *)(v2[6] + 16 * v8);
        *uint64_t v9 = v5;
        v9[1] = v6;
        *(void *)(v2[7] + 8 * v8) = v7;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DE98C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67FB61C();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (unint64_t *)(a1 + 48);
      do
      {
        uint64_t v5 = *(v4 - 2);
        uint64_t v6 = *(v4 - 1);
        unint64_t v7 = *v4;
        v4 += 3;
        swift_retain();
        sub_1B67C52A4(v7);
        unint64_t v8 = sub_1B69FAD64(v5, v6);
        *(void *)((char *)v2 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
        uint64_t v9 = (uint64_t *)(v2[6] + 16 * v8);
        *uint64_t v9 = v5;
        v9[1] = v6;
        *(void *)(v2[7] + 8 * v8) = v7;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DEA90(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F7E30();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (unsigned char *)(a1 + 40);
      do
      {
        unint64_t v5 = *((void *)v4 - 1);
        char v6 = *v4;
        v4 += 16;
        sub_1B62C6AA8(v5);
        unint64_t v7 = sub_1B69FAEA8(v5);
        *(void *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
        *(void *)(v2[6] + 8 * v7) = v5;
        *(unsigned char *)(v2[7] + v7) = v6;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DEB7C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F7DCC();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 40);
      do
      {
        unint64_t v5 = *(v4 - 1);
        uint64_t v6 = *v4;
        sub_1B62C6AA8(v5);
        unint64_t v7 = sub_1B69FAEA8(v5);
        *(void *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
        uint64_t v8 = 8 * v7;
        *(void *)(v2[6] + v8) = v5;
        *(void *)(v2[7] + v8) = v6;
        ++v2[2];
        v4 += 2;
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DEC6C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F7D64();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (unsigned char *)(a1 + 72);
      do
      {
        uint64_t v5 = *((void *)v4 - 5);
        uint64_t v6 = *((void *)v4 - 4);
        unint64_t v7 = *((void *)v4 - 3);
        char v8 = *(v4 - 16);
        uint64_t v9 = *((void *)v4 - 1);
        char v10 = *v4;
        v4 += 48;
        swift_bridgeObjectRetain();
        sub_1B62C6AA8(v7);
        unint64_t v11 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v11;
        uint64_t v12 = (uint64_t *)(v2[6] + 16 * v11);
        *uint64_t v12 = v5;
        v12[1] = v6;
        uint64_t v13 = v2[7] + 32 * v11;
        *(void *)uint64_t v13 = v7;
        *(unsigned char *)(v13 + 8) = v8;
        *(void *)(v13 + 16) = v9;
        *(unsigned char *)(v13 + 24) = v10;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DED9C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B63966C0(0, &qword_1E9DD0578, (void (*)(uint64_t))type metadata accessor for XcodeInfo, (void (*)(void))sub_1B67F7B4C);
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      uint64_t v4 = (unsigned __int8 *)(a1 + 32);
      swift_retain();
      do
      {
        __int16 v5 = *v4;
        uint64_t v6 = *((void *)v4 + 1);
        __int16 v7 = v4[1];
        swift_retain();
        unint64_t v8 = sub_1B69FAF14(v5 | (unsigned __int16)(v7 << 8));
        *(void *)((char *)v2 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
        uint64_t v9 = (unsigned char *)(v2[6] + 2 * v8);
        *uint64_t v9 = v5;
        v9[1] = v7;
        *(void *)(v2[7] + 8 * v8) = v6;
        ++v2[2];
        v4 += 16;
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DEEDC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F9C44(0, (unint64_t *)&qword_1E9DD0B10, (uint64_t)&unk_1EB9804F0, 0x1E4F28CF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B63989B8);
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (void **)(a1 + 48);
      do
      {
        uint64_t v5 = (uint64_t)*(v4 - 2);
        uint64_t v6 = (uint64_t)*(v4 - 1);
        __int16 v7 = *v4;
        v4 += 3;
        swift_bridgeObjectRetain();
        id v8 = v7;
        unint64_t v9 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
        char v10 = (uint64_t *)(v2[6] + 16 * v9);
        *char v10 = v5;
        v10[1] = v6;
        *(void *)(v2[7] + 8 * v9) = v8;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DF00C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67FB854();
    uint64_t v2 = sub_1B6E32C58();
    uint64_t v3 = (void *)v2;
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      uint64_t v5 = v2 + 64;
      uint64_t v6 = a1 + 32;
      swift_retain();
      do
      {
        sub_1B67F7830(v6, (uint64_t)v12, &qword_1E9DD0A50);
        unint64_t v7 = sub_1B69FB094((uint64_t)v12);
        *(void *)(v5 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v7;
        uint64_t v8 = v3[6] + 40 * v7;
        uint64_t v9 = v13;
        long long v10 = v12[1];
        *(_OWORD *)uint64_t v8 = v12[0];
        *(_OWORD *)(v8 + 16) = v10;
        *(void *)(v8 + 32) = v9;
        sub_1B62B57A8(&v14, (_OWORD *)(v3[7] + 32 * v7));
        ++v3[2];
        v6 += 72;
        --v4;
      }
      while (v4);
      swift_release();
    }
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1B67DF160(uint64_t a1)
{
  sub_1B6397C10(0, &qword_1EB9806A8, MEMORY[0x1E4FBBC50]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  unint64_t v7 = (char *)v20 - v6;
  if (*(void *)(a1 + 16))
  {
    sub_1B62FF184();
    uint64_t v8 = sub_1B6E32C58();
    uint64_t v9 = (void *)v8;
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      unint64_t v11 = &v7[*(int *)(v3 + 48)];
      uint64_t v12 = v8 + 64;
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v20[1] = a1;
      uint64_t v14 = a1 + v13;
      uint64_t v15 = *(void *)(v4 + 72);
      swift_retain();
      do
      {
        sub_1B67FA95C(v14, (uint64_t)v7, &qword_1EB9806A8, MEMORY[0x1E4FBBC50]);
        unint64_t v16 = sub_1B62FECE4((uint64_t)v7);
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        uint64_t v17 = v9[6];
        uint64_t v18 = sub_1B6E32B48();
        (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v7, v18);
        sub_1B62B57A8(v11, (_OWORD *)(v9[7] + 32 * v16));
        ++v9[2];
        v14 += v15;
        --v10;
      }
      while (v10);
      swift_release();
    }
  }
  else
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1B67DF384(uint64_t a1)
{
  sub_1B6397C10(0, &qword_1EB985410, (void (*)(uint64_t))type metadata accessor for TextureCache.TextureKey);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  unint64_t v7 = (unsigned __int8 *)v20 - v6;
  if (*(void *)(a1 + 16))
  {
    sub_1B63968D0();
    uint64_t v8 = sub_1B6E32C58();
    uint64_t v9 = (void *)v8;
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      uint64_t v11 = (uint64_t)&v7[*(int *)(v3 + 48)];
      uint64_t v12 = v8 + 64;
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v20[1] = a1;
      uint64_t v14 = a1 + v13;
      uint64_t v15 = *(void *)(v4 + 72);
      swift_retain();
      do
      {
        sub_1B67FA95C(v14, (uint64_t)v7, &qword_1EB985410, (void (*)(uint64_t))type metadata accessor for TextureCache.TextureKey);
        unint64_t v16 = sub_1B6367070(v7);
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        uint64_t v17 = v9[6];
        uint64_t v18 = type metadata accessor for TextureCache.TextureKey();
        sub_1B67FA020((uint64_t)v7, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for TextureCache.TextureKey);
        sub_1B6366650(v11, v9[7] + 160 * v16);
        ++v9[2];
        v14 += v15;
        --v10;
      }
      while (v10);
      swift_release();
    }
  }
  else
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1B67DF5A8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F763C();
    uint64_t v2 = sub_1B6E32C58();
    uint64_t v3 = (void *)v2;
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      uint64_t v5 = v2 + 64;
      uint64_t v6 = a1 + 32;
      swift_retain();
      do
      {
        sub_1B67F7830(v6, (uint64_t)&v12, (unint64_t *)&qword_1EB9801B0);
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        unint64_t v9 = sub_1B62B2CE0(v12, v13);
        *(void *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        uint64_t v10 = (uint64_t *)(v3[6] + 16 * v9);
        *uint64_t v10 = v7;
        v10[1] = v8;
        sub_1B62B57A8(&v14, (_OWORD *)(v3[7] + 32 * v9));
        ++v3[2];
        v6 += 48;
        --v4;
      }
      while (v4);
      swift_release();
    }
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1B67DF6EC(uint64_t a1)
{
  return sub_1B67DF728(a1, (unint64_t *)&unk_1E9DD0930, (void (*)(uint64_t))type metadata accessor for Node, (unint64_t *)&qword_1E9DD5320, (void (*)(uint64_t))type metadata accessor for Node);
}

void *sub_1B67DF728(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v7 = a3;
  uint64_t v8 = a2;
  sub_1B67FA9CC(0, a2, a3);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = (char *)&v31 - v14;
  if (*(void *)(a1 + 16))
  {
    sub_1B67FAAD4(0, a4, a5);
    uint64_t v16 = sub_1B6E32C58();
    uint64_t v17 = (void *)v16;
    uint64_t v18 = *(void *)(a1 + 16);
    if (v18)
    {
      uint64_t v19 = *(int *)(v11 + 48);
      uint64_t v31 = a1;
      uint64_t v32 = v19;
      uint64_t v20 = v16 + 64;
      uint64_t v21 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
      uint64_t v22 = *(void *)(v12 + 72);
      swift_retain();
      do
      {
        sub_1B67FB6D4(v21, (uint64_t)v15, v8, v7);
        unint64_t v23 = sub_1B69FA874((uint64_t)v15);
        *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
        uint64_t v24 = v8;
        uint64_t v25 = v7;
        uint64_t v26 = v17[6];
        uint64_t v27 = sub_1B6E31118();
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v29 = v26 + *(void *)(v28 + 72) * v23;
        uint64_t v7 = v25;
        uint64_t v8 = v24;
        (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v29, v15, v27);
        *(void *)(v17[7] + 8 * v23) = *(void *)&v15[v32];
        ++v17[2];
        v21 += v22;
        --v18;
      }
      while (v18);
      swift_release();
    }
  }
  else
  {
    uint64_t v17 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v17;
}

void *sub_1B67DF928(uint64_t a1)
{
  return sub_1B62A6D54(a1, &qword_1E9DD0540, (void (*)(uint64_t))_s12ParameterOutCMa);
}

void *sub_1B67DF948(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B63966C0(0, (unint64_t *)&unk_1E9DD0968, (void (*)(uint64_t))sub_1B67FACD4, (void (*)(void))sub_1B67FAD14);
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 72);
      do
      {
        sub_1B629C37C((uint64_t)(v4 - 5), (uint64_t)v8);
        uint64_t v5 = *v4;
        v4 += 6;
        sub_1B67FA6B8((uint64_t)v8);
        unint64_t v6 = sub_1B69FACD8((uint64_t)v8);
        *(void *)((char *)v2 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
        sub_1B629C37C((uint64_t)v8, v2[6] + 40 * v6);
        *(void *)(v2[7] + 8 * v6) = v5;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DFA94(uint64_t a1)
{
  sub_1B63931C4(0, &qword_1E9DD0A28, MEMORY[0x1E4F276F0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (void *)((char *)v23 - v6);
  if (*(void *)(a1 + 16))
  {
    sub_1B67F78A0(0, &qword_1E9DD0A30, MEMORY[0x1E4F276F0]);
    uint64_t v8 = sub_1B6E32C58();
    unint64_t v9 = (void *)v8;
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      uint64_t v11 = (char *)v7 + *(int *)(v3 + 48);
      uint64_t v12 = v8 + 64;
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v23[1] = a1;
      uint64_t v14 = a1 + v13;
      uint64_t v15 = *(void *)(v4 + 72);
      swift_retain();
      do
      {
        sub_1B67FBEA8(v14, (uint64_t)v7, (uint64_t)&qword_1E9DD0A28, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB1A0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B63931C4);
        uint64_t v16 = *v7;
        uint64_t v17 = v7[1];
        unint64_t v18 = sub_1B62B2CE0(*v7, v17);
        *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        uint64_t v19 = (uint64_t *)(v9[6] + 16 * v18);
        *uint64_t v19 = v16;
        v19[1] = v17;
        uint64_t v20 = v9[7];
        uint64_t v21 = sub_1B6E30F48();
        (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v11, v21);
        ++v9[2];
        v14 += v15;
        --v10;
      }
      while (v10);
      swift_release();
    }
  }
  else
  {
    unint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1B67DFCF8(uint64_t a1)
{
  sub_1B67FB3BC();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    sub_1B67FB450();
    uint64_t v8 = sub_1B6E32C58();
    unint64_t v9 = (void *)v8;
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      uint64_t v11 = *(int *)(v3 + 48);
      uint64_t v12 = v8 + 64;
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v20[1] = a1;
      uint64_t v14 = a1 + v13;
      uint64_t v15 = *(void *)(v4 + 72);
      swift_retain();
      do
      {
        sub_1B67FB520(v14, (uint64_t)v7, (uint64_t (*)(void))sub_1B67FB3BC);
        unint64_t v16 = sub_1B69FA874((uint64_t)v7);
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        uint64_t v17 = v9[6];
        uint64_t v18 = sub_1B6E31118();
        (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v7, v18);
        *(void *)(v9[7] + 8 * v16) = *(void *)&v7[v11];
        ++v9[2];
        v14 += v15;
        --v10;
      }
      while (v10);
      swift_release();
    }
  }
  else
  {
    unint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1B67DFEE0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F86C0();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 48);
      do
      {
        uint64_t v5 = *(v4 - 2);
        uint64_t v6 = *(v4 - 1);
        swift_bridgeObjectRetain();
        uint64_t v7 = *v4;
        v4 += 3;
        unint64_t v8 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
        unint64_t v9 = (uint64_t *)(v2[6] + 16 * v8);
        *unint64_t v9 = v5;
        v9[1] = v6;
        *(void *)(v2[7] + 8 * v8) = v7;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67DFFDC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F887C();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 40);
      do
      {
        uint64_t v5 = *v4;
        id v6 = (id)*(v4 - 1);
        swift_retain();
        unint64_t v7 = sub_1B69FB538((uint64_t)v6);
        *(void *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
        uint64_t v8 = 8 * v7;
        *(void *)(v2[6] + v8) = v6;
        *(void *)(v2[7] + v8) = v5;
        ++v2[2];
        v4 += 2;
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67E00D4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F8C50(0, &qword_1E9DD51E0, &qword_1E9DD0690, 0x1E4F35BF8, &qword_1E9DD0698);
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 40);
      do
      {
        id v5 = (id)*(v4 - 1);
        uint64_t v6 = *v4;
        v4 += 2;
        unint64_t v7 = sub_1B69FB538((uint64_t)v5);
        *(void *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
        uint64_t v8 = 8 * v7;
        *(void *)(v2[6] + v8) = v5;
        *(void *)(v2[7] + v8) = v6;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67E01E8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F78A0(0, (unint64_t *)&unk_1E9DD08B0, type metadata accessor for vfx_vertex_attribute);
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 48);
      do
      {
        uint64_t v5 = *(v4 - 2);
        uint64_t v6 = *(v4 - 1);
        uint64_t v7 = *v4;
        v4 += 3;
        swift_bridgeObjectRetain();
        unint64_t v8 = sub_1B62B2CE0(v5, v6);
        *(void *)((char *)v2 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
        unint64_t v9 = (uint64_t *)(v2[6] + 16 * v8);
        *unint64_t v9 = v5;
        v9[1] = v6;
        *(void *)(v2[7] + 8 * v8) = v7;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67E0310(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F8C50(0, &qword_1E9DD0708, (unint64_t *)&unk_1E9DD5160, (uint64_t)off_1E6140460, &qword_1E9DD0710);
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 40);
      do
      {
        id v5 = (id)*(v4 - 1);
        uint64_t v6 = *v4;
        v4 += 2;
        unint64_t v7 = sub_1B69FB604((uint64_t)v5);
        *(void *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
        uint64_t v8 = 8 * v7;
        *(void *)(v2[6] + v8) = v5;
        *(void *)(v2[7] + v8) = v6;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67E0424(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F8C50(0, (unint64_t *)&unk_1E9DD5170, &qword_1E9DD06B0, (uint64_t)off_1E6140438, &qword_1E9DD0700);
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 40);
      do
      {
        id v5 = (id)*(v4 - 1);
        uint64_t v6 = *v4;
        v4 += 2;
        unint64_t v7 = sub_1B69FB5B4((uint64_t)v5);
        *(void *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
        uint64_t v8 = 8 * v7;
        *(void *)(v2[6] + v8) = v5;
        *(void *)(v2[7] + v8) = v6;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67E0538(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F8B98();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 48);
      do
      {
        uint64_t v5 = *(v4 - 2);
        unint64_t v6 = *(v4 - 1);
        uint64_t v7 = *v4;
        v4 += 3;
        sub_1B62FFBB0(v5, v6);
        unint64_t v8 = sub_1B69FB588(v5, v6);
        *(void *)((char *)v2 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
        unint64_t v9 = (uint64_t *)(v2[6] + 16 * v8);
        *unint64_t v9 = v5;
        v9[1] = v6;
        *(void *)(v2[7] + 8 * v8) = v7;
        ++v2[2];
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67E0638(uint64_t a1)
{
  sub_1B6397C10(0, &qword_1E9DD06E0, MEMORY[0x1E4F276F0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)v20 - v6;
  if (*(void *)(a1 + 16))
  {
    sub_1B67F8AFC();
    uint64_t v8 = sub_1B6E32C58();
    unint64_t v9 = (void *)v8;
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      uint64_t v11 = *(int *)(v3 + 48);
      uint64_t v12 = v8 + 64;
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v20[1] = a1;
      uint64_t v14 = a1 + v13;
      uint64_t v15 = *(void *)(v4 + 72);
      swift_retain();
      do
      {
        sub_1B67FA95C(v14, (uint64_t)v7, &qword_1E9DD06E0, MEMORY[0x1E4F276F0]);
        unint64_t v16 = sub_1B69FB364((uint64_t)v7);
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        uint64_t v17 = v9[6];
        uint64_t v18 = sub_1B6E30F48();
        (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v7, v18);
        *(void *)(v9[7] + 8 * v16) = *(void *)&v7[v11];
        ++v9[2];
        v14 += v15;
        --v10;
      }
      while (v10);
      swift_release();
    }
  }
  else
  {
    unint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1B67E0850(uint64_t a1)
{
  return sub_1B67E0C68(a1, (void (*)(void))sub_1B67F8CE4, &qword_1E9DD0728, type metadata accessor for VFXWorldLoaderOption, sub_1B69FAD60);
}

void *sub_1B67E0898(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67FA44C();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (uint64_t *)(a1 + 56);
      do
      {
        uint64_t v5 = *(v4 - 2);
        char v6 = *((unsigned char *)v4 - 8);
        uint64_t v7 = *v4;
        uint64_t v8 = v4[1];
        uint64_t v10 = v4[2];
        uint64_t v9 = v4[3];
        char v11 = *((unsigned char *)v4 + 32);
        uint64_t v13 = v4[5];
        uint64_t v12 = v4[6];
        *(void *)&long long v19 = *(v4 - 3);
        *((void *)&v19 + 1) = v5;
        LOBYTE(v20) = v6;
        *((void *)&v20 + 1) = v7;
        uint64_t v21 = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v14 = sub_1B69FB6E8((uint64_t)&v19);
        *(void *)((char *)v2 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
        uint64_t v15 = v2[6] + 40 * v14;
        long long v16 = v20;
        *(_OWORD *)uint64_t v15 = v19;
        *(_OWORD *)(v15 + 16) = v16;
        *(void *)(v15 + 32) = v21;
        uint64_t v17 = v2[7] + 40 * v14;
        *(void *)uint64_t v17 = v10;
        *(void *)(v17 + 8) = v9;
        *(unsigned char *)(v17 + 16) = v11;
        *(void *)(v17 + 24) = v13;
        *(void *)(v17 + 32) = v12;
        ++v2[2];
        v4 += 10;
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_1B67E09F8(uint64_t a1)
{
  sub_1B67FA38C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    sub_1B67FB1F8(0, (unint64_t *)&unk_1EB9806C0, MEMORY[0x1E4FBBD58]);
    uint64_t v8 = sub_1B6E32C58();
    uint64_t v9 = (void *)v8;
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      unint64_t v23 = &v7[*(int *)(v3 + 48)];
      uint64_t v11 = v8 + 64;
      uint64_t v12 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      uint64_t v13 = *(void *)(v4 + 72);
      v21[1] = a1;
      uint64_t v22 = v13;
      swift_retain();
      do
      {
        sub_1B67FB520(v12, (uint64_t)v7, (uint64_t (*)(void))sub_1B67FA38C);
        unint64_t v14 = sub_1B69FA874((uint64_t)v7);
        *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        uint64_t v15 = v9[6];
        uint64_t v16 = sub_1B6E31118();
        uint64_t v17 = *(void *)(v16 - 8);
        uint64_t v18 = *(void (**)(unint64_t, char *, uint64_t))(v17 + 32);
        unint64_t v19 = *(void *)(v17 + 72) * v14;
        v18(v15 + v19, v7, v16);
        v18(v9[7] + v19, v23, v16);
        ++v9[2];
        v12 += v22;
        --v10;
      }
      while (v10);
      swift_release();
    }
  }
  else
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1B67E0C20(uint64_t a1)
{
  return sub_1B67E0C68(a1, (void (*)(void))sub_1B67F8E7C, (unint64_t *)&qword_1E9DD0760, type metadata accessor for LoadingOption, sub_1B69FAD60);
}

void *sub_1B67E0C68(uint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  if (*(void *)(a1 + 16))
  {
    a2(0);
    uint64_t v9 = sub_1B6E32C58();
    uint64_t v10 = (void *)v9;
    uint64_t v11 = *(void *)(a1 + 16);
    if (v11)
    {
      uint64_t v12 = v9 + 64;
      uint64_t v13 = a1 + 32;
      swift_retain();
      do
      {
        sub_1B67FA95C(v13, (uint64_t)&v17, a3, a4);
        uint64_t v14 = v17;
        unint64_t v15 = a5(v17);
        *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(void *)(v10[6] + 8 * v15) = v14;
        sub_1B62B57A8(&v18, (_OWORD *)(v10[7] + 32 * v15));
        ++v10[2];
        v13 += 40;
        --v11;
      }
      while (v11);
      swift_release();
    }
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1B67E0DAC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B67F9068();
    uint64_t v2 = (void *)sub_1B6E32C58();
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (void **)(a1 + 40);
      do
      {
        uint64_t v5 = *v4;
        id v6 = *(v4 - 1);
        id v7 = v5;
        unint64_t v8 = sub_1B69FAD60(v6);
        *(void *)((char *)v2 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
        uint64_t v9 = 8 * v8;
        *(void *)(v2[6] + v9) = v6;
        *(void *)(v2[7] + v9) = v7;
        ++v2[2];
        v4 += 2;
        --v3;
      }
      while (v3);
      swift_release();
    }
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1B67E0EA4(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

double (*sub_1B67E0EAC())(void)
{
  return nullsub_1;
}

BOOL static VFXSaver.Layout.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t VFXSaver.Layout.hash(into:)()
{
  return sub_1B6E33928();
}

uint64_t VFXSaver.Layout.hashValue.getter()
{
  return sub_1B6E33988();
}

BOOL sub_1B67E0F58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_1B67E0F70(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 25);
}

unsigned char *sub_1B67E0F7C(unsigned char *result)
{
  *(unsigned char *)(v1 + 25) = *result;
  return result;
}

double (*sub_1B67E0F88())(void)
{
  return nullsub_1;
}

uint64_t sub_1B67E0FA8()
{
  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t sub_1B67E0FB0(uint64_t result)
{
  *(unsigned char *)(v1 + 26) = result;
  return result;
}

double (*sub_1B67E0FB8())(void)
{
  return nullsub_1;
}

uint64_t sub_1B67E0FD8()
{
  return *(unsigned __int8 *)(v0 + 27);
}

uint64_t sub_1B67E0FE0(uint64_t result)
{
  *(unsigned char *)(v1 + 27) = result;
  return result;
}

double (*sub_1B67E0FE8())(void)
{
  return nullsub_1;
}

uint64_t sub_1B67E1008()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67E1010(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

double (*sub_1B67E1020())(void)
{
  return nullsub_1;
}

double VFXSaver.__allocating_init(world:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)&double result = 0x1000000010000;
  *(_DWORD *)(v2 + 24) = 0x10000;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 16) = a1;
  return result;
}

uint64_t VFXSaver.init(world:)(uint64_t a1)
{
  *(_DWORD *)(v1 + 24) = 0x10000;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 16) = a1;
  return v1;
}

char *sub_1B67E1098(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  id v7 = sub_1B67E10D0(a1, a2, a3, a4, a5);
  if (!v5) {

  }
  return v7;
}

char *sub_1B67E10D0(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  LODWORD(v98) = a4;
  uint64_t v102 = a1;
  unint64_t v9 = 0xEB00000000747369;
  uint64_t v99 = sub_1B6E309A8();
  MEMORY[0x1F4188790](v99, v10);
  uint64_t v12 = (char *)v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for BundleInfo();
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (void *)((char *)v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v110 = sub_1B67DEEDC(MEMORY[0x1E4FBC860]);
  char v17 = *(unsigned char *)(v5 + 27);
  uint64_t v103 = v5;
  if (v17)
  {
    LODWORD(v96) = 1;
    uint64_t v101 = 0x6C702E656E656373;
  }
  else
  {
    BOOL v18 = *(unsigned char *)(v5 + 24) == 0;
    uint64_t v19 = 0x736A2E656E656373;
    if (*(unsigned char *)(v5 + 24)) {
      uint64_t v19 = 0x66762E656E656373;
    }
    uint64_t v101 = v19;
    if (v18) {
      unint64_t v9 = 0xEA00000000006E6FLL;
    }
    else {
      unint64_t v9 = 0xEC0000006E696278;
    }
    if (v18) {
      int v20 = 3;
    }
    else {
      int v20 = 2;
    }
    LODWORD(v96) = v20;
  }
  unint64_t v97 = v9;
  uint64_t v109 = a5;
  swift_bridgeObjectRetain();
  sub_1B637E330((uint64_t *)&v107, 2048);
  uint64_t v21 = (char *)v16 + v13[5];
  uint64_t v22 = sub_1B6E31118();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, a3, v22);
  char v23 = *(unsigned char *)(v103 + 24);
  uint64_t v24 = v109;
  uint64_t v25 = v13[10];
  *uint64_t v16 = v102;
  v16[1] = a2;
  *(void *)((char *)v16 + v13[6]) = 2048;
  *((unsigned char *)v16 + v13[7]) = v23;
  *((unsigned char *)v16 + v13[8]) = v98 & 1;
  uint64_t v26 = (void *)((char *)v16 + v25);
  *(void *)((char *)v16 + v13[9]) = v24;
  *uint64_t v26 = v101;
  v26[1] = v9;
  sub_1B6E30A08();
  swift_allocObject();
  uint64_t v98 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1B6E309F8();
  uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26CD0];
  sub_1B67FBF1C(0, &qword_1E9DD04B0, MEMORY[0x1E4F26CD0], MEMORY[0x1E4FBBE00]);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1B6E76B30;
  sub_1B6E30998();
  sub_1B6E30988();
  *(void *)&long long v107 = v29;
  sub_1B67E9628(&qword_1E9DD04B8, MEMORY[0x1E4F26CD0]);
  sub_1B67FBF1C(0, &qword_1E9DD04C0, v28, MEMORY[0x1E4FBB320]);
  sub_1B67E95A0();
  sub_1B6E327B8();
  sub_1B6E309B8();
  sub_1B67E9628((unint64_t *)&unk_1E9DD04D0, (void (*)(uint64_t))type metadata accessor for BundleInfo);
  uint64_t v30 = v100;
  uint64_t v31 = sub_1B6E309C8();
  if (v30)
  {
    sub_1B67E9670((uint64_t)v16);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = v31;
    unint64_t v34 = v32;
    uint64_t v100 = v27;
    id v35 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
    sub_1B62FFBB0(v33, v34);
    unsigned __int32 v36 = (void *)sub_1B6E30FC8();
    id v37 = objc_msgSend(v35, sel_initRegularFileWithContents_, v36);
    sub_1B62C2360(v33, v34);

    id v38 = v37;
    float v39 = v110;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v107 = v39;
    uint64_t v99 = v33;
    id v95 = v38;
    sub_1B67E5968((uint64_t)v38, 0x6F736A2E6F666E69, 0xE90000000000006ELL, isUniquelyReferenced_nonNull_native);
    char v110 = (void *)v107;
    swift_bridgeObjectRelease();
    uint64_t v108 = MEMORY[0x1E4FBC870];
    long long v107 = xmmword_1B6E77700;
    uint64_t v41 = v103;
    id v94 = *(id *)(v103 + 16);
    long long v42 = (char *)objc_msgSend(v94, sel_scene);
    uint64_t v43 = *(void *)&v42[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
    swift_retain();

    swift_getKeyPath();
    uint64_t v44 = *(void *)(v43 + 176);
    swift_retain();
    double v45 = (char *)sub_1B6B3A580((uint64_t)&type metadata for AssetManagerInstance, (uint64_t)&off_1F0F7FB58, v44, (void (*)(void *__return_ptr, uint64_t))sub_1B67F42A4);
    swift_release();
    swift_release();
    uint64_t v106 = 0;
    uint64_t v46 = v98;
    swift_bridgeObjectRetain();
    swift_retain();
    id v48 = sub_1B67F65E4(v43, v45, v41, v41, v102, v46, &v110, &v108, (uint64_t *)&v107, &v106, v96);
    id v49 = v94;
    uint64_t v93 = v43;
    unint64_t v91 = v34;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v50 = v106;
    float32x4_t v96 = v45;
    float32x4_t v92 = v16;
    if (v106)
    {
      *(void *)(v106 + 112) = v48;
      swift_bridgeObjectRelease();
      swift_retain();
      long long v51 = (char *)objc_msgSend(v49, sel_scene);
      uint64_t v52 = *(void *)&v51[OBJC_IVAR____TtC3VFX8VFXScene_entityManager];
      swift_retain();

      *(void *)(v50 + 16) = v52;
      swift_release();
      swift_release();
      uint64_t v53 = v101;
      float32x2_t v54 = &selRef_initWithTextGeometryRef_;
      uint64_t v55 = v50;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v55 = 0;
      uint64_t v53 = v101;
      float32x2_t v54 = &selRef_initWithTextGeometryRef_;
    }
    long long v56 = v107;
    id v57 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
    sub_1B62FFBB0(v56, *((unint64_t *)&v56 + 1));
    float32x2_t v58 = (void *)sub_1B6E30FC8();
    id v59 = objc_msgSend(v57, v54[192], v58);
    v90[0] = *((void *)&v56 + 1);
    v90[1] = v56;
    sub_1B62C2360(v56, *((unint64_t *)&v56 + 1));

    float32x4_t v60 = v54;
    id v61 = v59;
    uint64_t v62 = (uint64_t)v110;
    char v63 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v104 = (void *)v62;
    uint64_t v101 = (uint64_t)v61;
    sub_1B67E5968((uint64_t)v61, v53, v97, v63);
    uint64_t v64 = (uint64_t)v104;
    char v110 = v104;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    float v65 = self;
    swift_retain();
    uint64_t v66 = (void *)sub_1B6E31768();
    objc_msgSend(v65, sel_setValue_forKey_, v55, v66);
    swift_release();

    sub_1B67DF00C(MEMORY[0x1E4FBC860]);
    long long v67 = (void *)sub_1B6E314B8();
    swift_bridgeObjectRelease();
    id v68 = objc_msgSend(v94, sel_dataRepresentationWithOptions_, v67);

    uint64_t v69 = sub_1B6E30FD8();
    unint64_t v71 = v70;

    id v72 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
    sub_1B62FFBB0(v69, v71);
    uint64_t v73 = (void *)sub_1B6E30FC8();
    id v74 = objc_msgSend(v72, (SEL)v60 + 2052, v73);
    sub_1B62C2360(v69, v71);

    if (v74)
    {
      char v75 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v104 = (void *)v64;
      sub_1B67E5968((uint64_t)v74, 0x6C702E646C726F77, 0xEB00000000747369, v75);
      char v110 = v104;
      swift_bridgeObjectRelease();
    }
    else
    {
    }
    if (v96 && *(void *)&v96[OBJC_IVAR____TtC3VFX12AssetManager_authoringFileManager])
    {
      uint64_t v76 = swift_retain();
      sub_1B69913F8(v76, &v108);
      swift_release();
      id v85 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
      sub_1B63989B8(0, &qword_1EB9804F0);
      __n128 v86 = (void *)sub_1B6E314B8();
      swift_bridgeObjectRelease();
      id v87 = objc_msgSend(v85, sel_initDirectoryWithFileWrappers_, v86);

      if (v87)
      {
        uint64_t v88 = (uint64_t)v110;
        char v89 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v104 = (void *)v88;
        sub_1B67E5968((uint64_t)v87, 0x737465737361, 0xE600000000000000, v89);
        char v110 = v104;
        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    else
    {
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      uint64_t v104 = 0;
      unint64_t v105 = 0xE000000000000000;
      swift_retain();
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      uint64_t v104 = (void *)0xD000000000000015;
      unint64_t v105 = 0x80000001B6F372E0;
      sub_1B6E31948();
      uint64_t v77 = (uint64_t)v104;
      uint64_t v78 = v105;
      int v79 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      uint64_t v104 = 0;
      swift_retain();
      sub_1B6B33E34(v79, (uint64_t *)&v104, v77, v78);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    uint64_t v80 = v99;
    int v81 = v95;
    id v82 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
    sub_1B63989B8(0, &qword_1EB9804F0);
    swift_bridgeObjectRetain();
    uint64_t v83 = (void *)sub_1B6E314B8();
    swift_bridgeObjectRelease();
    id v84 = objc_msgSend(v82, sel_initDirectoryWithFileWrappers_, v83);

    if (*(unsigned char *)(v103 + 25))
    {
      uint64_t v12 = (char *)sub_1B67F68F0(v84, (uint64_t)v102, v98);
      swift_release();
      swift_release();

      sub_1B62C2360(v69, v71);
      sub_1B62C2360(v80, v91);
      sub_1B67E9670((uint64_t)v92);
    }
    else
    {
      sub_1B67E9670((uint64_t)v92);
      sub_1B62C2360(v80, v91);

      sub_1B62C2360(v69, v71);
      swift_release();
      swift_release();

      uint64_t v12 = (char *)v84;
    }
    swift_release();
    sub_1B62C2360(v107, *((unint64_t *)&v107 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1B67E1E90(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t *a6, uint64_t *a7, void *a8, unsigned __int8 a9)
{
  uint64_t v10 = v9;
  char v131 = a6;
  float v132 = a8;
  float32x4_t v130 = a7;
  float v134 = a5;
  sub_1B67FBF1C(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8, v16);
  uint64_t v126 = (uint64_t)&v117 - v17;
  uint64_t v18 = sub_1B6E30F48();
  uint64_t v128 = *(void *)(v18 - 8);
  uint64_t v129 = v18;
  MEMORY[0x1F4188790](v18, v19);
  char v125 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21, v22);
  float v127 = (char *)&v117 - v23;
  uint64_t v24 = sub_1B6E31808();
  uint64_t v135 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = a2;
  int v28 = *(unsigned __int8 *)(a2 + 24);
  type metadata accessor for SwiftScriptCodeGen();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  float32x4_t v151 = a3;
  uint64_t v29 = sub_1B67BB6D0(a1, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_1B67BA894(v28);
  if (!v9)
  {
    LODWORD(v121) = v28;
    uint64_t v122 = v27;
    uint64_t v123 = a4;
    uint64_t v119 = v29;
    uint64_t v120 = v24;
    uint64_t v124 = a1;
    if (v30 < 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = v124;
      id v38 = v134;
    }
    else
    {
      uint64_t v118 = 0;
      uint64_t v31 = v122;
      sub_1B6E317E8();
      uint64_t v32 = sub_1B6E317A8();
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v135 + 8))(v31, v120);
      id v35 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
      unsigned __int32 v36 = (void *)sub_1B6E30FC8();
      id v37 = objc_msgSend(v35, sel_initRegularFileWithContents_, v36);
      sub_1B665D488(v32, v34);

      id v38 = v134;
      if (v37)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v136[0] = *v38;
        *id v38 = 0x8000000000000000;
        sub_1B67E5968((uint64_t)v37, 0x6977732E65646F63, 0xEA00000000007466, isUniquelyReferenced_nonNull_native);
        *id v38 = v136[0];
        swift_bridgeObjectRelease();
      }
      else
      {
      }
      uint64_t v10 = v118;
      uint64_t v40 = v124;
    }
    uint64_t v41 = v123;
    long long v42 = v151;
    type metadata accessor for CScriptCodeGen();
    swift_initStackObject();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1B67BB6D0(v40, v42, v41);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B67B93D4(v121);
    if (v10)
    {
      swift_release();
    }
    else
    {
      uint64_t v118 = 0;
      double v45 = v122;
      sub_1B6E317E8();
      uint64_t v46 = sub_1B6E317A8();
      unint64_t v48 = v47;
      swift_bridgeObjectRelease();
      id v49 = v45;
      uint64_t v50 = v135 + 8;
      uint64_t v117 = *(void (**)(char *, uint64_t))(v135 + 8);
      v117(v49, v120);
      id v51 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
      uint64_t v52 = (void *)sub_1B6E30FC8();
      id v53 = objc_msgSend(v51, sel_initRegularFileWithContents_, v52);
      sub_1B665D488(v46, v48);

      if (v53)
      {
        char v54 = swift_isUniquelyReferenced_nonNull_native();
        v136[0] = *v38;
        *id v38 = 0x8000000000000000;
        sub_1B67E5968((uint64_t)v53, 0x7070632E65646F63, 0xE800000000000000, v54);
        *id v38 = v136[0];
        swift_bridgeObjectRelease();
      }
      else
      {
      }
      uint64_t v55 = v118;
      uint64_t v57 = v123;
      uint64_t v56 = v124;
      float32x2_t v58 = v151;
      uint64_t v59 = type metadata accessor for MetalScriptCodeGen();
      swift_initStackObject();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_1B67BB6D0(v56, v58, v57);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v61 = sub_1B67B1DFC(v121);
      uint64_t v62 = v50;
      char v63 = v122;
      if (v55)
      {
        swift_release();
        swift_release();
      }
      else
      {
        uint64_t v64 = v61;
        uint64_t v135 = v62;
        uint64_t v118 = v59;
        uint64_t v121 = v60;
        v136[0] = sub_1B67B0EFC();
        v136[1] = v65;
        if (qword_1E9DCC498 != -1) {
          swift_once();
        }
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B67C52FC(v64);
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E317E8();
        uint64_t v66 = sub_1B6E317A8();
        unint64_t v68 = v67;
        swift_bridgeObjectRelease();
        v117(v63, v120);
        id v69 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
        unint64_t v70 = (void *)sub_1B6E30FC8();
        id v71 = objc_msgSend(v69, sel_initRegularFileWithContents_, v70);
        sub_1B665D488(v66, v68);

        uint64_t v135 = v43;
        if (v71)
        {
          id v72 = v134;
          char v73 = swift_isUniquelyReferenced_nonNull_native();
          v136[0] = *v72;
          *id v72 = 0x8000000000000000;
          sub_1B67E5968((uint64_t)v71, 0x74656D2E65646F63, 0xEA00000000006C61, v73);
          *id v72 = v136[0];
          swift_bridgeObjectRelease();
        }
        else
        {
        }
        id v74 = v132;
        uint64_t v75 = *(void *)(v133 + 32);
        uint64_t v76 = v124;
        if (v75 && *(void *)(v75 + 16))
        {
          uint64_t v77 = swift_bridgeObjectRetain();
          uint64_t v78 = sub_1B6B67A28(v77);
          sub_1B6D15C3C(v76, v151, v123, v78, 1);
          swift_bridgeObjectRelease();
          float32x4_t v92 = v127;
          sub_1B6E30E48();
          swift_bridgeObjectRelease();
          uint64_t v93 = sub_1B6E30F68();
          unint64_t v95 = v94;
          float v127 = *(char **)(v128 + 8);
          ((void (*)(char *, uint64_t))v127)(v92, v129);
          id v96 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
          sub_1B62FFBB0(v93, v95);
          unint64_t v97 = (void *)sub_1B6E30FC8();
          id v98 = objc_msgSend(v96, sel_initRegularFileWithContents_, v97);
          sub_1B62C2360(v93, v95);

          if (v98)
          {
            uint64_t v99 = v134;
            char v100 = swift_isUniquelyReferenced_nonNull_native();
            v136[0] = *v99;
            void *v99 = 0x8000000000000000;
            sub_1B67E5968((uint64_t)v98, 0x2E73747069726373, 0xEE00656C646E7562, v100);
            void *v99 = v136[0];
            swift_bridgeObjectRelease();
          }
          else
          {
          }
          swift_initStackObject();
          uint64_t v101 = v124;
          swift_retain();
          uint64_t v102 = v123;
          swift_bridgeObjectRetain();
          sub_1B67BB6D0(v101, v151, v102);
          swift_release();
          swift_bridgeObjectRelease();
          __int16 v103 = *(_WORD *)(v75 + 32);
          swift_bridgeObjectRelease();
          LOWORD(v136[0]) = v103;
          uint64_t v104 = v126;
          sub_1B67B635C((char *)v136, v126);
          uint64_t v105 = v128;
          uint64_t v106 = v129;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v104, 1, v129) == 1)
          {
            sub_1B62C2360(v93, v95);
            swift_release();
            sub_1B663ABE8(v104);
            int v79 = v130;
            uint64_t v80 = v133;
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v105 + 32))(v125, v104, v106);
            uint64_t v107 = sub_1B6E30F68();
            uint64_t v118 = 0;
            unint64_t v109 = v108;
            uint64_t v110 = v107;
            id v111 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
            char v112 = (void *)sub_1B6E30FC8();
            id v113 = objc_msgSend(v111, sel_initRegularFileWithContents_, v112);
            sub_1B62C2360(v110, v109);

            if (v113)
            {
              uint64_t v114 = v134;
              char v115 = swift_isUniquelyReferenced_nonNull_native();
              v136[0] = *v114;
              *uint64_t v114 = 0x8000000000000000;
              sub_1B67E5968((uint64_t)v113, 0xD000000000000010, 0x80000001B6F373E0, v115);
              *uint64_t v114 = v136[0];
              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              float32x4_t v116 = (void *)sub_1B67E367C(0xD000000000000010, 0x80000001B6F373E0, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6ACFB60);
              swift_release();
            }
            sub_1B62C2360(v93, v95);
            int v79 = v130;
            uint64_t v80 = v133;
            ((void (*)(char *, uint64_t))v127)(v125, v129);
          }
          id v74 = v132;
          uint64_t v76 = v124;
        }
        else
        {
          int v79 = v130;
          uint64_t v80 = v133;
        }
        sub_1B687543C(v76);
        if (*(unsigned char *)(v80 + 24) == 1)
        {
          sub_1B6C9CFF8();
          sub_1B6C9D5A4();
          sub_1B6C9D868();
          sub_1B6C9E3B4();
          sub_1B6C9E910();
          sub_1B6C9ED8C();
          char v81 = *(unsigned char *)(v80 + 24);
        }
        else
        {
          char v81 = 0;
        }
        id v82 = v131;
        uint64_t *v82 = sub_1B69940EC(v76, v81);
        swift_bridgeObjectRelease();
        sub_1B636E080();
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
        *(void *)(inited + 32) = &type metadata for DoNotSave;
        *(void *)(inited + 40) = &off_1F0FA8658;
        id v84 = (char *)MEMORY[0x1E4FBC860];
        sub_1B6A82404(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], inited, MEMORY[0x1E4FBC860], 0x200000000uLL, 0, 0, 2, (uint64_t)&v137);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v145 = v137;
        int v146 = v138;
        char v147 = v139;
        uint64_t v148 = v140 | 1;
        char v149 = v141;
        uint64_t v150 = v142;
        sub_1B62C9DA8(v76, (uint64_t)&v145, 0x200000000, v143);
        sub_1B67FBF80((uint64_t)v143, (uint64_t)v144, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult, MEMORY[0x1E4FBB718]);
        if (*(void *)&v144[0])
        {
          v144[8] = v144[2];
          v144[9] = v144[3];
          v144[10] = v144[4];
          v144[11] = v144[5];
          v144[6] = v144[0];
          v144[7] = v144[1];
          id v84 = (char *)sub_1B6363800();
          sub_1B632F170(v143);
        }
        uint64_t v85 = sub_1B6C70FC4(v84, a9, *(unsigned __int8 *)(v80 + 26));
        uint64_t v87 = v86;
        uint64_t v89 = v88;
        sub_1B62CA064((uint64_t)&v137);
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v90 = *v79;
        unint64_t v91 = v79[1];
        *int v79 = v85;
        v79[1] = v87;
        sub_1B62C2360(v90, v91);
        void *v74 = v89;
      }
    }
  }
  return swift_release();
}

uint64_t VFXSaver.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VFXSaver.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

double sub_1B67E2E04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1B62B2CE0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v16 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1B6ACB8DC();
      uint64_t v11 = v16;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56) + 88 * v8;
    long long v13 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(a3 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a3 + 48) = v13;
    *(_OWORD *)(a3 + 64) = *(_OWORD *)(v12 + 64);
    *(void *)(a3 + 80) = *(void *)(v12 + 80);
    long long v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(_OWORD *)(a3 + 16) = v14;
    sub_1B6AC8328(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 80) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

uint64_t sub_1B67E2F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  int64_t v6 = sub_1B69FA874(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1B6ACC0D4();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1B6E31118();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v20 = v12;
    int64_t v13 = *(void *)(v12 + 72) * v6;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10 + v13, v11);
    (*(void (**)(uint64_t, int64_t, uint64_t))(v20 + 32))(a2, *(void *)(v9 + 56) + v13, v11);
    sub_1B6AC86D4(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v11;
  }
  else
  {
    uint64_t v18 = sub_1B6E31118();
    long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_1B67E30F8(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  int64_t v4 = sub_1B69FA874(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B6ACD920();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_1B6AC8B88(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1B67E3204@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1B62FECE4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1B62FEEE0();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1B6E32B48();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_1B62B57A8((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1B6AC8E78(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1B67E3330(uint64_t a1, uint64_t a2)
{
  return sub_1B67E367C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6AD1344);
}

uint64_t sub_1B67E335C(uint64_t a1, uint64_t a2)
{
  return sub_1B67E367C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6AD20CC);
}

uint64_t sub_1B67E3388(uint64_t a1, uint64_t a2)
{
  return sub_1B67E367C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6AD20E4);
}

double sub_1B67E33B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int64_t v4 = v3;
  unint64_t v6 = sub_1B69FABB0(a1, a2);
  if (v7)
  {
    unint64_t v8 = v6;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v3;
    uint64_t v12 = *v4;
    *int64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1B6AD26CC();
      uint64_t v10 = v12;
    }
    sub_1B67F7AF0(*(void *)(v10 + 56) + 96 * v8, a3);
    sub_1B6ACA0C0(v8, v10);
    *int64_t v4 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 80) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
    *(unsigned char *)(a3 + 88) = -1;
  }
  return result;
}

uint64_t sub_1B67E3470(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B62BE38C(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  unint64_t v5 = v3;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B6ACF9E4();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v5);
  sub_1B6ACA2B4(v5, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B67E351C(uint64_t a1, uint64_t a2)
{
  return sub_1B67E367C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6AD50B4);
}

uint64_t sub_1B67E3548(uint64_t a1, uint64_t a2)
{
  return sub_1B67E367C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6AD50CC);
}

uint64_t sub_1B67E3574(uint64_t a1, uint64_t a2)
{
  return sub_1B67E367C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6AD50E4);
}

uint64_t sub_1B67E35A0(uint64_t a1, uint64_t a2)
{
  return sub_1B67E367C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6AD50FC);
}

uint64_t sub_1B67E35CC(uint64_t a1, uint64_t a2)
{
  return sub_1B67E367C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6AD5114);
}

uint64_t sub_1B67E35F8(uint64_t a1, uint64_t a2)
{
  return sub_1B67E367C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6AD512C);
}

uint64_t sub_1B67E3624(uint64_t a1, uint64_t a2)
{
  return sub_1B67E367C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6AD5144);
}

uint64_t sub_1B67E3650(uint64_t a1, uint64_t a2)
{
  return sub_1B67E367C(a1, a2, (void (*)(uint64_t, uint64_t))sub_1B6AC9868, (void (*)(void))sub_1B6AD515C);
}

uint64_t sub_1B67E367C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), void (*a4)(void))
{
  uint64_t v7 = v4;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1B62B2CE0(a1, a2);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v7;
  uint64_t v16 = *v7;
  *uint64_t v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    uint64_t v13 = v16;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(*(void *)(v13 + 56) + 8 * v10);
  a3(v10, v13);
  *uint64_t v7 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1B67E3764(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1B69FAB00(a1);
  char v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v2;
  uint64_t v11 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B6AD554C();
    uint64_t v8 = v11;
  }
  uint64_t v9 = *(void *)(*(void *)(v8 + 56) + 8 * v4);
  sub_1B6ACA7DC(v4, v8);
  *uint64_t v2 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1B67E381C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1B62B2CE0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B6AD5EF0();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 32 * v6);
  sub_1B6ACADE0(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B67E391C(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t result = v8[2] + ((v10 & 1) == 0);
  if (v12 >= result && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      *(void *)(v14[7] + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= result && (a3 & 1) == 0)
  {
    uint64_t result = sub_1B6ACB3D8();
    goto LABEL_6;
  }
  sub_1B6AB4EA0(result, a3 & 1);
  uint64_t result = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v15 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = result;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B636A59C(v9, a2, a1, v14);
}

uint64_t sub_1B67E3A2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B62B2CE0(a2, a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 < v15 || (a4 & 1) == 0)
  {
    if (v14 < v15 || (a4 & 1) != 0)
    {
      sub_1B6AB5694(v15, a4 & 1);
      uint64_t v19 = sub_1B62B2CE0(a2, a3);
      if ((v13 & 1) != (v20 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v11 = v19;
      uint64_t v16 = *v5;
      if (v13) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    sub_1B6ACB8DC();
  }
  uint64_t v16 = *v5;
  if (v13)
  {
LABEL_7:
    uint64_t v17 = v16[7] + 88 * v11;
    return sub_1B678C464(a1, v17);
  }
LABEL_12:
  sub_1B6AD74B4(v11, a2, a3, a1, v16);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67E3B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  char v12 = (void *)*v5;
  unint64_t v13 = sub_1B62B2CE0(a3, a4);
  char v15 = v14;
  uint64_t v16 = v12[3];
  uint64_t v17 = v12[2] + ((v14 & 1) == 0);
  if (v16 >= v17 && (a5 & 1) != 0)
  {
LABEL_6:
    uint64_t v18 = *v6;
    if (v15)
    {
LABEL_7:
      uint64_t v19 = (uint64_t *)(v18[7] + 16 * v13);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_10;
  }
  if (v16 >= v17 && (a5 & 1) == 0)
  {
    sub_1B6ACBEF0();
    goto LABEL_6;
  }
  sub_1B6AB6018(v17, a5 & 1);
  uint64_t v21 = sub_1B62B2CE0(a3, a4);
  if ((v15 & 1) != (v22 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v13 = v21;
  uint64_t v18 = *v6;
  if (v15) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B6AD7518(v13, a3, a4, a1, a2, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67E3CB4(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1B6E31118();
  uint64_t v25 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v9);
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (void *)*v3;
  unint64_t v13 = sub_1B69FA874(a2);
  char v15 = v14;
  uint64_t v16 = v12[3];
  uint64_t v17 = v12[2] + ((v14 & 1) == 0);
  if (v16 < v17 || (a3 & 1) == 0)
  {
    if (v16 < v17 || (a3 & 1) != 0)
    {
      sub_1B6AB65B8(v17, a3 & 1);
      uint64_t v18 = sub_1B69FA874(a2);
      if ((v15 & 1) != (v19 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v13 = v18;
    }
    else
    {
      sub_1B6ACC0D4();
    }
  }
  char v20 = *v4;
  if (v15)
  {
    uint64_t v21 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v25 + 40);
    unint64_t v22 = v20[7] + *(void *)(v25 + 72) * v13;
    return v21(v22, a1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v11, a2, v8);
    return sub_1B6AD7560(v13, (uint64_t)v11, a1, v20);
  }
}

uint64_t sub_1B67E3E8C(char a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t result = v8[2] + ((v10 & 1) == 0);
  if (v12 < result || (a3 & 1) == 0)
  {
    if (v12 < result || (a3 & 1) != 0)
    {
      sub_1B6AB6D08(result, a3 & 1);
      uint64_t result = sub_1B62C1A30(a2);
      if ((v11 & 1) != (v14 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v9 = result;
    }
    else
    {
      uint64_t result = sub_1B6ACC5B8();
    }
  }
  char v15 = a1 & 1;
  uint64_t v16 = *v4;
  if (v11)
  {
    *(unsigned char *)(v16[7] + v9) = v15;
  }
  else
  {
    return sub_1B62BBDC0(v9, a2, v15, v16);
  }
  return result;
}

unint64_t sub_1B67E3F98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B62C1A30(a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 >= v15 && (a4 & 1) != 0)
  {
LABEL_6:
    uint64_t v16 = *v5;
    if (v13)
    {
LABEL_7:
      uint64_t v17 = (uint64_t *)(v16[7] + 16 * v11);
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t *v17 = a1;
      v17[1] = a2;
      return result;
    }
    goto LABEL_10;
  }
  if (v14 >= v15 && (a4 & 1) == 0)
  {
    sub_1B6ACC5F4();
    goto LABEL_6;
  }
  sub_1B6AB6FB0(v15, a4 & 1);
  unint64_t v19 = sub_1B62C1A30(a3);
  if ((v13 & 1) != (v20 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v11 = v19;
  uint64_t v16 = *v5;
  if (v13) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B6378C68(v11, a3, a1, a2, v16);
}

unint64_t sub_1B67E40C4(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6ACC7CC();
    goto LABEL_6;
  }
  sub_1B6AB7260(v13, a3 & 1);
  unint64_t v17 = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B636A59C(v9, a2, a1, v14);
}

uint64_t sub_1B67E41E0(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11) {
      return sub_1B6313300(a1, v14[7] + 88 * v9, &qword_1E9DD0950, (uint64_t)&type metadata for GraphCodeGen.CodeGenAtom, MEMORY[0x1E4FBB718]);
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6ACC9C0();
    goto LABEL_6;
  }
  sub_1B6AB76DC(v13, a3 & 1);
  unint64_t v16 = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v17 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v16;
  uint64_t v14 = *v4;
  if (v11) {
    return sub_1B6313300(a1, v14[7] + 88 * v9, &qword_1E9DD0950, (uint64_t)&type metadata for GraphCodeGen.CodeGenAtom, MEMORY[0x1E4FBB718]);
  }
LABEL_10:

  return sub_1B6AD7668(v9, a2, a1, v14);
}

unint64_t sub_1B67E4320(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      unint64_t result = swift_release();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6ACCBD0();
    goto LABEL_6;
  }
  sub_1B6AB7D08(v13, a3 & 1);
  unint64_t v17 = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B636A59C(v9, a2, a1, v14);
}

uint64_t sub_1B67E443C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  char v7 = (void **)v6;
  uint64_t v14 = (void *)*v6;
  unint64_t v15 = sub_1B62B2CE0(a4, a5);
  char v17 = v16;
  uint64_t v18 = v14[3];
  uint64_t result = v14[2] + ((v16 & 1) == 0);
  if (v18 < result || (a6 & 1) == 0)
  {
    if (v18 < result || (a6 & 1) != 0)
    {
      sub_1B6AB83F8(result, a6 & 1);
      uint64_t result = sub_1B62B2CE0(a4, a5);
      if ((v17 & 1) != (v20 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v15 = result;
    }
    else
    {
      uint64_t result = sub_1B6ACD0AC();
    }
  }
  int v21 = a3 & 1;
  unint64_t v22 = *v7;
  if (v17)
  {
    uint64_t v23 = v22[7] + 24 * v15;
    *(void *)uint64_t v23 = a1;
    *(void *)(v23 + 8) = a2;
    *(unsigned char *)(v23 + 16) = v21 != 0;
  }
  else
  {
    sub_1B6AD76F4(v15, a4, a5, a1, a2, v21, v22);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1B67E4590(uint64_t a1, char a2, char a3, __n128 a4)
{
  char v5 = (void **)v4;
  unint64_t v9 = (void *)*v4;
  unint64_t v10 = sub_1B638403C(a4);
  char v12 = v11;
  uint64_t v13 = v9[3];
  uint64_t v14 = v9[2] + ((v11 & 1) == 0);
  if (v13 >= v14 && (a3 & 1) != 0)
  {
LABEL_6:
    unint64_t v15 = *v5;
    if (v12)
    {
LABEL_7:
      uint64_t v16 = v15[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v16 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v13 >= v14 && (a3 & 1) == 0)
  {
    sub_1B6ACD284();
    goto LABEL_6;
  }
  sub_1B6AB870C(v14, a3 & 1);
  uint64_t v19 = sub_1B638403C(v18);
  if ((v12 & 1) != (v20 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  unint64_t v15 = *v5;
  if (v12) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B6396BFC(v10, a2, a1, v15);
}

uint64_t sub_1B67E46AC(uint64_t a1, char a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B6383F34(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t result = v8[2] + ((v10 & 1) == 0);
  if (v12 >= result && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      *(void *)(v14[7] + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= result && (a3 & 1) == 0)
  {
    uint64_t result = sub_1B6ACD608();
    goto LABEL_6;
  }
  sub_1B6AB8CA4(result, a3 & 1);
  uint64_t result = sub_1B6383F34(a2);
  if ((v11 & 1) != (v15 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = result;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B6396BFC(v9, a2, a1, v14);
}

unint64_t sub_1B67E47C4(uint64_t a1, uint64_t a2, char a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B69FA7C0(a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 >= v15 && (a4 & 1) != 0)
  {
LABEL_6:
    uint64_t v16 = *v5;
    if (v13)
    {
LABEL_7:
      char v17 = (uint64_t *)(v16[7] + 16 * v11);
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t *v17 = a1;
      v17[1] = a2;
      return result;
    }
    goto LABEL_10;
  }
  if (v14 >= v15 && (a4 & 1) == 0)
  {
    sub_1B6ACDBC4();
    goto LABEL_6;
  }
  sub_1B6AB95F4(v15, a4 & 1);
  unint64_t v19 = sub_1B69FA7C0(a3);
  if ((v13 & 1) != (v20 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v11 = v19;
  uint64_t v16 = *v5;
  if (v13) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B6AD7744(v11, a3, a1, a2, v16);
}

uint64_t sub_1B67E48F0(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B69FACD8(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6ACDD78();
    goto LABEL_6;
  }
  sub_1B6AB98F4(v13, a3 & 1);
  unint64_t v17 = sub_1B69FACD8(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B6AD7784(v9, a2, a1, v14);

  return sub_1B67FA6B8(a2);
}

uint64_t sub_1B67E4A14(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  uint64_t v27 = a1;
  uint64_t v9 = sub_1B6E31118();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)*v4;
  unint64_t v15 = sub_1B69FA874(a3);
  char v17 = v16;
  uint64_t v18 = v14[3];
  uint64_t v19 = v14[2] + ((v16 & 1) == 0);
  if (v18 < v19 || (a4 & 1) == 0)
  {
    if (v18 < v19 || (a4 & 1) != 0)
    {
      sub_1B6AB91E0(v19, a4 & 1);
      uint64_t v20 = sub_1B69FA874(a3);
      if ((v17 & 1) != (v21 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v15 = v20;
    }
    else
    {
      sub_1B6ACD920();
    }
  }
  uint64_t v22 = v27;
  uint64_t v23 = *v5;
  if (v17)
  {
    uint64_t v24 = (uint64_t *)(v23[7] + 16 * v15);
    uint64_t result = swift_release();
    *uint64_t v24 = v22;
    v24[1] = a2;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a3, v9);
    return sub_1B6AD77FC(v15, (uint64_t)v13, v22, a2, v23);
  }
  return result;
}

uint64_t sub_1B67E4BBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6ACDF38, (void (*)(void))sub_1B6AB9C20, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E4BFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6ACDF50, (void (*)(void))sub_1B6ABA020, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E4C3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B67E4D3C(a1, a2, a3, a4, (void (*)(void))sub_1B6ACDF68, (void (*)(void))sub_1B6ABA038, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E4C7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6ACDF80, (void (*)(void))sub_1B6ABA050, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E4CBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B67E4D3C(a1, a2, a3, a4, (void (*)(void))sub_1B6ACDFB0, (void (*)(void))sub_1B6ABA080, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E4CFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B67E4D3C(a1, a2, a3, a4, (void (*)(void))sub_1B6ACDFC8, (void (*)(void))sub_1B6ABA098, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E4D3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = v7;
  uint64_t v15 = *v7;
  uint64_t v16 = sub_1B62B2CE0(a2, a3);
  char v18 = v17;
  uint64_t v19 = *(void *)(v15 + 24);
  uint64_t v20 = *(void *)(v15 + 16) + ((v17 & 1) == 0);
  if (v19 >= v20 && (a4 & 1) != 0)
  {
LABEL_6:
    uint64_t v21 = *v10;
    if (v18)
    {
LABEL_7:
      uint64_t v22 = *(void *)(v21 + 56);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v22 + 8 * v16) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v19 >= v20 && (a4 & 1) == 0)
  {
    a5();
    goto LABEL_6;
  }
  a6();
  uint64_t v24 = sub_1B62B2CE0(a2, a3);
  if ((v18 & 1) != (v25 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  uint64_t v16 = v24;
  uint64_t v21 = *v10;
  if (v18) {
    goto LABEL_7;
  }
LABEL_10:
  a7(v16, a2, a3, a1, v21);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67E4EA4(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t result = v8[2] + ((v10 & 1) == 0);
  if (v12 >= result && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      *(void *)(v14[7] + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= result && (a3 & 1) == 0)
  {
    uint64_t result = sub_1B6ACD784();
    goto LABEL_6;
  }
  sub_1B6AB8F44(result, a3 & 1);
  uint64_t result = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v15 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = result;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B636A55C(v9, a2, a1, v14);
}

uint64_t sub_1B67E4FBC(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 < v13 || (a3 & 1) == 0)
  {
    if (v12 < v13 || (a3 & 1) != 0)
    {
      sub_1B6ABA390(v13, a3 & 1);
      unint64_t v17 = sub_1B62C1A30(a2);
      if ((v11 & 1) != (v18 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v9 = v17;
      uint64_t v14 = *v4;
      if (v11) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    sub_1B6ACE194();
  }
  uint64_t v14 = *v4;
  if (v11)
  {
LABEL_7:
    uint64_t v15 = v14[7] + 80 * v9;
    return sub_1B634F71C(a1, v15);
  }
LABEL_12:

  return sub_1B6AD796C(v9, a2, a1, v14);
}

uint64_t sub_1B67E50E4(char a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t result = v8[2] + ((v10 & 1) == 0);
  if (v12 >= result && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      *(unsigned char *)(v14[7] + v9) = a1 & 1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= result && (a3 & 1) == 0)
  {
    uint64_t result = sub_1B6ACE530();
    goto LABEL_6;
  }
  sub_1B6ABA9C8(result, a3 & 1);
  uint64_t result = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v15 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = result;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B6AD79D0(v9, a2, a1 & 1, v14);
}

uint64_t sub_1B67E51F8(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11) {
      return sub_1B6313300(a1, v14[7] + 80 * v9, (unint64_t *)&unk_1E9DD0030, (uint64_t)&type metadata for ShaderCache.ComputePipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6ACE6E0();
    goto LABEL_6;
  }
  sub_1B6ABAC58(v13, a3 & 1);
  unint64_t v16 = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v17 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v16;
  uint64_t v14 = *v4;
  if (v11) {
    return sub_1B6313300(a1, v14[7] + 80 * v9, (unint64_t *)&unk_1E9DD0030, (uint64_t)&type metadata for ShaderCache.ComputePipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
  }
LABEL_10:

  return sub_1B6AD7A0C(v9, a2, a1, v14);
}

id sub_1B67E5338(uint64_t a1, void *a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  unint64_t v8 = sub_1B69FAD60(a2);
  char v10 = v9;
  uint64_t v11 = v7[3];
  uint64_t v12 = v7[2] + ((v9 & 1) == 0);
  if (v11 >= v12 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v13 = *v4;
    if (v10)
    {
LABEL_7:
      uint64_t v14 = v13[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v14 + 8 * v8) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v11 >= v12 && (a3 & 1) == 0)
  {
    sub_1B6ACE8C0();
    goto LABEL_6;
  }
  sub_1B6ABAF94(v12, a3 & 1);
  uint64_t v16 = sub_1B69FAD60(a2);
  if ((v10 & 1) != (v17 & 1))
  {
    type metadata accessor for VFXTriggerType(0);
    id result = (id)sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v8 = v16;
  uint64_t v13 = *v4;
  if (v10) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B636A59C(v8, (uint64_t)a2, a1, v13);

  return a2;
}

void sub_1B67E545C(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62BE38C(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7] + 40 * v9;
      uint64_t v16 = *(void **)v15;
      swift_release();

      long long v17 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)a1;
      *(_OWORD *)(v15 + 16) = v17;
      *(void *)(v15 + 32) = *(void *)(a1 + 32);
      return;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6ACEA60();
    goto LABEL_6;
  }
  sub_1B6ABB290(v13, a3 & 1);
  uint64_t v18 = sub_1B62BE38C(a2);
  if ((v11 & 1) != (v19 & 1))
  {
    sub_1B6E33838();
    __break(1u);
    return;
  }
  unint64_t v9 = v18;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  sub_1B6AD7A98(v9, a2, a1, v14);
}

uint64_t sub_1B67E5590(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 < v13 || (a3 & 1) == 0)
  {
    if (v12 < v13 || (a3 & 1) != 0)
    {
      sub_1B6ABB5C0(v13, a3 & 1);
      unint64_t v17 = sub_1B62C1A30(a2);
      if ((v11 & 1) != (v18 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v9 = v17;
      uint64_t v14 = *v4;
      if (v11) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    sub_1B6ACEC40();
  }
  uint64_t v14 = *v4;
  if (v11)
  {
LABEL_7:
    uint64_t v15 = v14[7] + 8 * v9;
    return sub_1B67F94B4(a1, v15);
  }
LABEL_12:

  return sub_1B6AD7AE8(v9, a2, a1, v14);
}

unint64_t sub_1B67E56B4(uint64_t a1, __int16 a2, char a3)
{
  unint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B69FAF14(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      unint64_t result = swift_release();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6ACF558();
    goto LABEL_6;
  }
  sub_1B6ABC498(v13, a3 & 1);
  unint64_t v17 = sub_1B69FAF14(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B6AD7B8C(v9, a2, a1, v14);
}

uint64_t sub_1B67E57D0(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  uint64_t v8 = HIDWORD(a2) & 1;
  uint64_t v9 = a2;
  unint64_t v10 = sub_1B69FAC48(a2 | (unint64_t)(v8 << 32));
  char v12 = v11;
  uint64_t v13 = v7[3];
  uint64_t v14 = v7[2] + ((v11 & 1) == 0);
  if (v13 < v14 || (a3 & 1) == 0)
  {
    if (v13 < v14 || (a3 & 1) != 0)
    {
      sub_1B6ABC6C4(v14, a3 & 1);
      unint64_t v23 = sub_1B69FAC48(v9 | (v8 << 32));
      if ((v12 & 1) != (v24 & 1))
      {
        sub_1B6313370(0, &qword_1EB980E58, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBB718]);
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v10 = v23;
      uint64_t v15 = *v4;
      if (v12) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    sub_1B6ACF72C();
  }
  uint64_t v15 = *v4;
  if (v12)
  {
LABEL_7:
    uint64_t v16 = v15[7];
    uint64_t v17 = sub_1B6E30F48();
    uint64_t v18 = *(void *)(v17 - 8);
    char v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
    uint64_t v20 = v17;
    uint64_t v21 = v16 + *(void *)(v18 + 72) * v10;
    return v19(v21, a1, v20);
  }
LABEL_12:

  return sub_1B6AD7BC8(v10, v9 | (v8 << 32), a1, v15);
}

void sub_1B67E5968(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_1B62B2CE0(a2, a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 >= v15 && (a4 & 1) != 0)
  {
LABEL_6:
    uint64_t v16 = *v5;
    if (v13)
    {
LABEL_7:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v11) = a1;
      return;
    }
    goto LABEL_10;
  }
  if (v14 >= v15 && (a4 & 1) == 0)
  {
    sub_1B6ACFB60();
    goto LABEL_6;
  }
  sub_1B6ABCD5C(v15, a4 & 1);
  uint64_t v18 = sub_1B62B2CE0(a2, a3);
  if ((v13 & 1) != (v19 & 1))
  {
    sub_1B6E33838();
    __break(1u);
    return;
  }
  unint64_t v11 = v18;
  uint64_t v16 = *v5;
  if (v13) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B62B3510(v11, a2, a3, a1, v16);

  swift_bridgeObjectRetain();
}

uint64_t sub_1B67E5A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  char v12 = (void *)*v5;
  unint64_t v13 = sub_1B62C1A30(a4);
  char v15 = v14;
  uint64_t v16 = v12[3];
  uint64_t result = v12[2] + ((v14 & 1) == 0);
  if (v16 >= result && (a5 & 1) != 0)
  {
LABEL_6:
    uint64_t v18 = *v6;
    if (v15)
    {
LABEL_7:
      char v19 = (uint64_t *)(v18[7] + 24 * v13);
      *char v19 = a1;
      v19[1] = a2;
      v19[2] = a3;
      return result;
    }
    goto LABEL_10;
  }
  if (v16 >= result && (a5 & 1) == 0)
  {
    uint64_t result = sub_1B6ACFD08();
    goto LABEL_6;
  }
  sub_1B6ABD034(result, a5 & 1);
  uint64_t result = sub_1B62C1A30(a4);
  if ((v15 & 1) != (v20 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v13 = result;
  uint64_t v18 = *v6;
  if (v15) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B62B6EFC(v13, a4, a1, a2, a3, v18);
}

uint64_t sub_1B67E5BD4(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    char v14 = *v4;
    if (v11) {
      return sub_1B67F9CB0(a1, v14[7] + 8 * v9, (unint64_t *)&unk_1EB9854C0, (uint64_t (*)(uint64_t))type metadata accessor for TextureCache);
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD009C();
    goto LABEL_6;
  }
  sub_1B6ABD64C(v13, a3 & 1);
  unint64_t v16 = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v17 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v16;
  char v14 = *v4;
  if (v11) {
    return sub_1B67F9CB0(a1, v14[7] + 8 * v9, (unint64_t *)&unk_1EB9854C0, (uint64_t (*)(uint64_t))type metadata accessor for TextureCache);
  }
LABEL_10:

  return sub_1B6AD7C78(v9, a2, a1, v14);
}

uint64_t sub_1B67E5D08(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    char v14 = *v4;
    if (v11) {
      return sub_1B67F9CB0(a1, v14[7] + 8 * v9, (unint64_t *)&unk_1EB9854E0, (uint64_t (*)(uint64_t))type metadata accessor for DepthStencilCache);
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD02BC();
    goto LABEL_6;
  }
  sub_1B6ABD95C(v13, a3 & 1);
  unint64_t v16 = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v17 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v16;
  char v14 = *v4;
  if (v11) {
    return sub_1B67F9CB0(a1, v14[7] + 8 * v9, (unint64_t *)&unk_1EB9854E0, (uint64_t (*)(uint64_t))type metadata accessor for DepthStencilCache);
  }
LABEL_10:

  return sub_1B6AD7C90(v9, a2, a1, v14);
}

unint64_t sub_1B67E5E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v13 = sub_1B62BE38C(a4);
  char v15 = v14;
  uint64_t v16 = v12[3];
  uint64_t v17 = v12[2] + ((v14 & 1) == 0);
  if (v16 >= v17 && (a5 & 1) != 0)
  {
LABEL_6:
    uint64_t v18 = *v6;
    if (v15)
    {
LABEL_7:
      char v19 = (uint64_t *)(v18[7] + 24 * v13);
      unint64_t result = swift_unknownObjectRelease();
      *char v19 = a1;
      v19[1] = a2;
      v19[2] = a3;
      return result;
    }
    goto LABEL_10;
  }
  if (v16 >= v17 && (a5 & 1) == 0)
  {
    sub_1B6AD02FC();
    goto LABEL_6;
  }
  sub_1B6ABD99C(v17, a5 & 1);
  uint64_t v21 = sub_1B62BE38C(a4);
  if ((v15 & 1) != (v22 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v13 = v21;
  uint64_t v18 = *v6;
  if (v15) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B62B6EFC(v13, a4, a1, a2, a3, v18);
}

uint64_t sub_1B67E5F7C(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B69FB2A8(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    char v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7] + 40 * v9;
      uint64_t result = swift_unknownObjectRelease();
      long long v17 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)a1;
      *(_OWORD *)(v15 + 16) = v17;
      *(unsigned char *)(v15 + 32) = *(unsigned char *)(a1 + 32);
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD04E4();
    goto LABEL_6;
  }
  sub_1B6ABDCD4(v13, a3 & 1);
  unint64_t v18 = sub_1B69FB2A8(a2);
  if ((v11 & 1) != (v19 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  char v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B6AD7D10(v9, a2, a1, v14);

  return swift_unknownObjectRetain();
}

uint64_t sub_1B67E60B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B62B2CE0(a2, a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t result = v10[2] + ((v12 & 1) == 0);
  if (v14 >= result && (a4 & 1) != 0)
  {
LABEL_6:
    uint64_t v16 = *v5;
    if (v13)
    {
LABEL_7:
      *(void *)(v16[7] + 8 * v11) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v14 >= result && (a4 & 1) == 0)
  {
    uint64_t result = sub_1B6AD0878();
    goto LABEL_6;
  }
  sub_1B6ABE318(result, a4 & 1);
  uint64_t result = sub_1B62B2CE0(a2, a3);
  if ((v13 & 1) != (v17 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v11 = result;
  uint64_t v16 = *v5;
  if (v13) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B62B3490(v11, a2, a3, a1, v16);

  return swift_bridgeObjectRetain();
}

unint64_t sub_1B67E61D8(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, char a6, char a7)
{
  uint64_t v8 = (void **)v7;
  uint64_t v14 = (void *)*v7;
  char v15 = a6 & 1;
  unint64_t v16 = sub_1B69FA9B0(a3, a4, a5, a6 & 1);
  char v18 = v17;
  uint64_t v19 = v14[3];
  uint64_t v20 = v14[2] + ((v17 & 1) == 0);
  if (v19 < v20 || (a7 & 1) == 0)
  {
    if (v19 < v20 || (a7 & 1) != 0)
    {
      sub_1B6ABE32C(v20, a7 & 1);
      unint64_t v21 = sub_1B69FA9B0(a3, a4, a5, v15);
      if ((v18 & 1) != (v22 & 1))
      {
        unint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v16 = v21;
    }
    else
    {
      sub_1B6AD088C();
    }
  }
  unint64_t v23 = *v8;
  if (v18)
  {
    char v24 = (uint64_t *)(v23[7] + 16 * v16);
    unint64_t result = swift_bridgeObjectRelease();
    *char v24 = a1;
    v24[1] = a2;
  }
  else
  {
    sub_1B6AD7D74(v16, a3, a4, a5, v15, a1, a2, v23);
    return sub_1B62C6AA8(a3);
  }
  return result;
}

uint64_t sub_1B67E634C(char a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1B6E31118();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  char v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (void *)*v3;
  unint64_t v14 = sub_1B69FA874(a2);
  char v16 = v15;
  uint64_t v17 = v13[3];
  uint64_t result = v13[2] + ((v15 & 1) == 0);
  if (v17 < result || (a3 & 1) == 0)
  {
    if (v17 < result || (a3 & 1) != 0)
    {
      sub_1B6ABE664(result, a3 & 1);
      uint64_t result = sub_1B69FA874(a2);
      if ((v16 & 1) != (v19 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v14 = result;
    }
    else
    {
      uint64_t result = sub_1B6AD0A58();
    }
  }
  uint64_t v20 = *v4;
  if (v16)
  {
    *(unsigned char *)(v20[7] + v14) = a1 & 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
    return sub_1B6AD7DC8(v14, (uint64_t)v12, a1 & 1, v20);
  }
  return result;
}

void sub_1B67E64DC(uint64_t a1, int a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  int v27 = a2;
  uint64_t v9 = sub_1B6E31118();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  char v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (void *)*v4;
  unint64_t v15 = sub_1B69FA874(a3);
  char v17 = v16;
  uint64_t v18 = v14[3];
  uint64_t v19 = v14[2] + ((v16 & 1) == 0);
  if (v18 < v19 || (a4 & 1) == 0)
  {
    if (v18 < v19 || (a4 & 1) != 0)
    {
      sub_1B6ABEA60(v19, a4 & 1);
      uint64_t v20 = sub_1B69FA874(a3);
      if ((v17 & 1) != (v21 & 1))
      {
        sub_1B6E33838();
        __break(1u);
        return;
      }
      unint64_t v15 = v20;
    }
    else
    {
      sub_1B6AD0CF0();
    }
  }
  uint64_t v22 = a1;
  int v23 = v27 & 1;
  char v24 = *v5;
  if (v17)
  {
    uint64_t v25 = v24[7] + 16 * v15;
    sub_1B67FAAC8(*(id *)v25, *(unsigned char *)(v25 + 8));
    *(void *)uint64_t v25 = v22;
    *(unsigned char *)(v25 + 8) = v23 != 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a3, v9);
    sub_1B6AD7E78(v15, (uint64_t)v13, v22, v23, v24);
  }
}

unint64_t sub_1B67E669C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_1B62C1A30(a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 >= v15 && (a4 & 1) != 0)
  {
LABEL_6:
    char v16 = *v5;
    if (v13)
    {
LABEL_7:
      char v17 = (uint64_t *)(v16[7] + 16 * v11);
      unint64_t result = sub_1B678FC34(v17[1]);
      uint64_t *v17 = a1;
      v17[1] = a2;
      return result;
    }
    goto LABEL_10;
  }
  if (v14 >= v15 && (a4 & 1) == 0)
  {
    sub_1B6AD0FCC();
    goto LABEL_6;
  }
  sub_1B6ABEE88(v15, a4 & 1);
  unint64_t v19 = sub_1B62C1A30(a3);
  if ((v13 & 1) != (v20 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v11 = v19;
  char v16 = *v5;
  if (v13) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B6378C68(v11, a3, a1, a2, v16);
}

uint64_t sub_1B67E67C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD1344, (void (*)(void))sub_1B6ABF534, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E6800(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  uint64_t v8 = HIDWORD(a2) & 1;
  uint64_t v9 = a2;
  unint64_t v10 = sub_1B69FAA7C(a2 | (unint64_t)(v8 << 32));
  char v12 = v11;
  uint64_t v13 = v7[3];
  uint64_t v14 = v7[2] + ((v11 & 1) == 0);
  if (v13 < v14 || (a3 & 1) == 0)
  {
    if (v13 < v14 || (a3 & 1) != 0)
    {
      sub_1B6ABF54C(v14, a3 & 1);
      unint64_t v19 = sub_1B69FAA7C(v9 | (v8 << 32));
      if ((v12 & 1) != (v20 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v10 = v19;
      uint64_t v15 = *v4;
      if (v12) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    sub_1B6AD135C();
  }
  uint64_t v15 = *v4;
  if (v12)
  {
LABEL_7:
    uint64_t v16 = v15[7];
    uint64_t v17 = v16 + *(void *)(*(void *)(type metadata accessor for GraphScriptingConfig.ScriptInfo() - 8) + 72) * v10;
    return sub_1B67F790C(a1, v17);
  }
LABEL_12:

  return sub_1B6AD7F38(v10, v9 | (v8 << 32), a1, v15);
}

uint64_t sub_1B67E6958(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD1628, (void (*)(void))sub_1B6ABF960, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E6998(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1B6E31118();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  char v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v3;
  unint64_t v14 = sub_1B69FA874(a2);
  char v16 = v15;
  uint64_t v17 = v13[3];
  uint64_t v18 = v13[2] + ((v15 & 1) == 0);
  if (v17 >= v18 && (a3 & 1) != 0)
  {
LABEL_6:
    unint64_t v19 = *v4;
    if (v16)
    {
LABEL_7:
      uint64_t v20 = v19[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v17 >= v18 && (a3 & 1) == 0)
  {
    sub_1B6AD183C();
    goto LABEL_6;
  }
  sub_1B6ABFC34(v18, a3 & 1);
  uint64_t v22 = sub_1B69FA874(a2);
  if ((v16 & 1) != (v23 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v14 = v22;
  unint64_t v19 = *v4;
  if (v16) {
    goto LABEL_7;
  }
LABEL_10:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  return sub_1B6AD7FE4(v14, (uint64_t)v12, a1, v19);
}

uint64_t sub_1B67E6B34(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B69FACD8(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    unint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      uint64_t result = swift_release();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD1EBC();
    goto LABEL_6;
  }
  sub_1B6AC0628(v13, a3 & 1);
  unint64_t v17 = sub_1B69FACD8(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  unint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B6AD7784(v9, a2, a1, v14);

  return sub_1B67FA6B8(a2);
}

uint64_t sub_1B67E6C58(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD20B4, (void (*)(void))sub_1B6AC098C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E6C98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD20CC, (void (*)(void))sub_1B6AC09A4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E6CD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD20E4, (void (*)(void))sub_1B6AC09BC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E6D18(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B69FABB0(a2, a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 < v15 || (a4 & 1) == 0)
  {
    if (v14 < v15 || (a4 & 1) != 0)
    {
      sub_1B6AC09D4(v15, a4 & 1);
      unint64_t v19 = sub_1B69FABB0(a2, a3);
      if ((v13 & 1) != (v20 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v11 = v19;
      char v16 = *v5;
      if (v13) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    sub_1B6AD20FC();
  }
  char v16 = *v5;
  if (v13)
  {
LABEL_7:
    uint64_t v17 = v16[7] + 48 * v11;
    return sub_1B67F7CB4(a1, v17);
  }
LABEL_12:

  return sub_1B6AD812C(v11, a2, a3, a1, v16);
}

void sub_1B67E6E50(uint64_t *a1, char a2, uint64_t a3, char a4)
{
  char v5 = v4;
  uint64_t v9 = *a1;
  uint64_t v28 = a1[1];
  uint64_t v29 = a1[2];
  char v30 = *((unsigned char *)a1 + 24);
  __int16 v31 = *((_WORD *)a1 + 16);
  __int16 v32 = *((_WORD *)a1 + 17);
  __int16 v33 = *((_WORD *)a1 + 18);
  __int16 v34 = *((_WORD *)a1 + 19);
  char v35 = *((unsigned char *)a1 + 40);
  char v36 = *((unsigned char *)a1 + 41);
  char v37 = *((unsigned char *)a1 + 42);
  uint64_t v38 = a1[6];
  uint64_t v39 = a1[7];
  uint64_t v40 = a1[8];
  uint64_t v41 = a1[9];
  uint64_t v42 = a1[10];
  uint64_t v43 = a1[11];
  uint64_t v44 = a1[12];
  char v45 = *((unsigned char *)a1 + 104);
  char v46 = *((unsigned char *)a1 + 105);
  char v47 = *((unsigned char *)a1 + 106);
  char v48 = *((unsigned char *)a1 + 107);
  uint64_t v11 = a1[14];
  uint64_t v10 = a1[15];
  uint64_t v12 = *v4;
  unint64_t v13 = sub_1B69FB0D8(a2, a3);
  char v15 = v14;
  uint64_t v16 = *(void *)(v12 + 24);
  uint64_t v17 = *(void *)(v12 + 16) + ((v14 & 1) == 0);
  if (v16 >= v17 && (a4 & 1) != 0)
  {
LABEL_6:
    if (v15)
    {
LABEL_7:
      unint64_t v18 = *(void *)(*v5 + 56) + (v13 << 7);
      long long v19 = *(_OWORD *)(v18 + 48);
      long long v21 = *(_OWORD *)v18;
      long long v20 = *(_OWORD *)(v18 + 16);
      v49[2] = *(_OWORD *)(v18 + 32);
      v49[3] = v19;
      v49[0] = v21;
      v49[1] = v20;
      long long v22 = *(_OWORD *)(v18 + 112);
      long long v24 = *(_OWORD *)(v18 + 64);
      long long v23 = *(_OWORD *)(v18 + 80);
      void v49[6] = *(_OWORD *)(v18 + 96);
      v49[7] = v22;
      v49[4] = v24;
      v49[5] = v23;
      sub_1B67F7A4C((uint64_t)v49);
      *(void *)unint64_t v18 = v9;
      *(void *)(v18 + 8) = v28;
      *(void *)(v18 + 16) = v29;
      *(unsigned char *)(v18 + 24) = v30;
      *(_WORD *)(v18 + 32) = v31;
      *(_WORD *)(v18 + 34) = v32;
      *(_WORD *)(v18 + 36) = v33;
      *(_WORD *)(v18 + 38) = v34;
      *(unsigned char *)(v18 + 40) = v35;
      *(unsigned char *)(v18 + 41) = v36;
      *(unsigned char *)(v18 + 42) = v37;
      *(void *)(v18 + 48) = v38;
      *(void *)(v18 + 56) = v39;
      *(void *)(v18 + 64) = v40;
      *(void *)(v18 + 72) = v41;
      *(void *)(v18 + 80) = v42;
      *(void *)(v18 + 88) = v43;
      *(void *)(v18 + 96) = v44;
      *(unsigned char *)(v18 + 104) = v45;
      *(unsigned char *)(v18 + 105) = v46;
      *(unsigned char *)(v18 + 106) = v47;
      *(unsigned char *)(v18 + 107) = v48;
      *(void *)(v18 + 112) = v11;
      *(void *)(v18 + 120) = v10;
      return;
    }
    goto LABEL_10;
  }
  if (v16 >= v17 && (a4 & 1) == 0)
  {
    sub_1B6AD22DC();
    goto LABEL_6;
  }
  sub_1B6AC0CDC(v17, a4 & 1);
  unint64_t v25 = sub_1B69FB0D8(a2, a3);
  if ((v15 & 1) != (v26 & 1))
  {
    sub_1B6E33838();
    __break(1u);
    return;
  }
  unint64_t v13 = v25;
  if (v15) {
    goto LABEL_7;
  }
LABEL_10:
  int v27 = (void *)*v5;
  v50[0] = v9;
  v50[1] = v28;
  v50[2] = v29;
  char v51 = v30;
  __int16 v52 = v31;
  __int16 v53 = v32;
  __int16 v54 = v33;
  __int16 v55 = v34;
  char v56 = v35;
  char v57 = v36;
  char v58 = v37;
  uint64_t v59 = v38;
  uint64_t v60 = v39;
  uint64_t v61 = v40;
  uint64_t v62 = v41;
  uint64_t v63 = v42;
  uint64_t v64 = v43;
  uint64_t v65 = v44;
  char v66 = v45;
  char v67 = v46;
  char v68 = v47;
  char v69 = v48;
  uint64_t v70 = v11;
  uint64_t v71 = v10;
  sub_1B6AD819C(v13, a2, a3, (uint64_t)v50, v27);
}

uint64_t sub_1B67E7148(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(v8 + 16) + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = *(void *)(v14 + 56);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD2504();
    goto LABEL_6;
  }
  sub_1B6AC1174(v13, a3 & 1);
  unint64_t v17 = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B636A6BC(v9, a2, a1, v14);
}

uint64_t sub_1B67E7264(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B69FABB0(a2, a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 < v15 || (a4 & 1) == 0)
  {
    if (v14 < v15 || (a4 & 1) != 0)
    {
      sub_1B6AC1498(v15, a4 & 1);
      unint64_t v19 = sub_1B69FABB0(a2, a3);
      if ((v13 & 1) != (v20 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v11 = v19;
      uint64_t v16 = *v5;
      if (v13) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    sub_1B6AD26CC();
  }
  uint64_t v16 = *v5;
  if (v13)
  {
LABEL_7:
    uint64_t v17 = v16[7] + 96 * v11;
    return sub_1B67F7A94(a1, v17);
  }
LABEL_12:

  return sub_1B6AD8238(v11, a2, a3, a1, v16);
}

int64_t sub_1B67E739C(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62BE38C(a2);
  char v11 = v10;
  int64_t v12 = v8[3];
  int64_t result = v8[2] + ((v10 & 1) == 0);
  if (v12 >= result && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      *(void *)(v14[7] + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= result && (a3 & 1) == 0)
  {
    int64_t result = sub_1B6ACF9E4();
    goto LABEL_6;
  }
  sub_1B6ABCA9C(result, a3 & 1);
  int64_t result = sub_1B62BE38C(a2);
  if ((v11 & 1) != (v15 & 1))
  {
    int64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = result;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B636A55C(v9, a2, a1, v14);
}

uint64_t sub_1B67E74B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD2CBC, (void (*)(void))sub_1B6AC1A94, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

void sub_1B67E74F4(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 < v13 || (a3 & 1) == 0)
  {
    if (v12 < v13 || (a3 & 1) != 0)
    {
      sub_1B6AC1AAC(v13, a3 & 1);
      unint64_t v16 = sub_1B62C1A30(a2);
      if ((v11 & 1) != (v17 & 1))
      {
        sub_1B6E33838();
        __break(1u);
        return;
      }
      unint64_t v9 = v16;
      uint64_t v14 = *v4;
      if (v11) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    sub_1B6AD2CD4();
  }
  uint64_t v14 = *v4;
  if (v11)
  {
LABEL_7:
    uint64_t v15 = v14[7] + 120 * v9;
    sub_1B67F8208(a1, v15);
    return;
  }
LABEL_12:

  sub_1B6AD82A8(v9, a2, a1, v14);
}

id sub_1B67E761C(uint64_t a1, void *a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  unint64_t v8 = sub_1B69FB538((uint64_t)a2);
  char v10 = v9;
  uint64_t v11 = v7[3];
  uint64_t v12 = v7[2] + ((v9 & 1) == 0);
  if (v11 >= v12 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v13 = *v4;
    if (v10)
    {
LABEL_7:
      uint64_t v14 = v13[7];
      id result = (id)swift_release();
      *(void *)(v14 + 8 * v8) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v11 >= v12 && (a3 & 1) == 0)
  {
    sub_1B6AD31E0();
    goto LABEL_6;
  }
  sub_1B6AC2270(v12, a3 & 1);
  unint64_t v16 = sub_1B69FB538((uint64_t)a2);
  if ((v10 & 1) != (v17 & 1))
  {
    sub_1B63989B8(0, &qword_1E9DD0690);
    id result = (id)sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v8 = v16;
  uint64_t v13 = *v4;
  if (v10) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B636A55C(v8, (uint64_t)a2, a1, v13);

  return a2;
}

uint64_t sub_1B67E7750(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B69FB4CC(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t result = v8[2] + ((v10 & 1) == 0);
  if (v12 >= result && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      *(void *)(v14[7] + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= result && (a3 & 1) == 0)
  {
    uint64_t result = sub_1B6AD3380();
    goto LABEL_6;
  }
  sub_1B6AC2510(result, a3 & 1);
  uint64_t result = sub_1B69FB4CC(a2);
  if ((v11 & 1) != (v15 & 1))
  {
    type metadata accessor for VertexLayoutDescriptor();
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = result;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B636A55C(v9, a2, a1, v14);

  return swift_retain();
}

id sub_1B67E7868(uint64_t a1, void *a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  unint64_t v8 = sub_1B69FB538((uint64_t)a2);
  char v10 = v9;
  uint64_t v11 = v7[3];
  id result = (id)(v7[2] + ((v9 & 1) == 0));
  if (v11 >= (uint64_t)result && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v13 = *v4;
    if (v10)
    {
LABEL_7:
      *(void *)(v13[7] + 8 * v8) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v11 >= (uint64_t)result && (a3 & 1) == 0)
  {
    id result = (id)sub_1B6AD3518();
    goto LABEL_6;
  }
  sub_1B6AC27D8((uint64_t)result, a3 & 1);
  id result = (id)sub_1B69FB538((uint64_t)a2);
  if ((v10 & 1) != (v14 & 1))
  {
    sub_1B63989B8(0, &qword_1E9DD0690);
    id result = (id)sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v8 = (unint64_t)result;
  uint64_t v13 = *v4;
  if (v10) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B636A59C(v8, (uint64_t)a2, a1, v13);

  return a2;
}

uint64_t sub_1B67E7998(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B69FB588(a2, a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t result = v10[2] + ((v12 & 1) == 0);
  if (v14 >= result && (a4 & 1) != 0)
  {
LABEL_6:
    unint64_t v16 = *v5;
    if (v13)
    {
LABEL_7:
      *(void *)(v16[7] + 8 * v11) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v14 >= result && (a4 & 1) == 0)
  {
    uint64_t result = sub_1B6AD353C();
    goto LABEL_6;
  }
  sub_1B6AC27FC(result, a4 & 1);
  uint64_t result = sub_1B69FB588(a2, a3);
  if ((v13 & 1) != (v17 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v11 = result;
  unint64_t v16 = *v5;
  if (v13) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B62B3490(v11, a2, a3, a1, v16);

  return sub_1B62FFBB0(a2, a3);
}

uint64_t sub_1B67E7ACC(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1B6E30F48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  char v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (void *)*v3;
  unint64_t v14 = sub_1B69FB364(a2);
  char v16 = v15;
  uint64_t v17 = v13[3];
  uint64_t result = v13[2] + ((v15 & 1) == 0);
  if (v17 >= result && (a3 & 1) != 0)
  {
LABEL_6:
    unint64_t v19 = *v4;
    if (v16)
    {
LABEL_7:
      *(void *)(v19[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = sub_1B6AD36E0();
    goto LABEL_6;
  }
  sub_1B6AC2AC8(result, a3 & 1);
  uint64_t result = sub_1B69FB364(a2);
  if ((v16 & 1) != (v20 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  unint64_t v19 = *v4;
  if (v16) {
    goto LABEL_7;
  }
LABEL_10:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  return sub_1B6AD8310(v14, (uint64_t)v12, a1, v19);
}

id sub_1B67E7C64(uint64_t a1, void *a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  unint64_t v8 = sub_1B69FB5B4((uint64_t)a2);
  char v10 = v9;
  uint64_t v11 = v7[3];
  id result = (id)(v7[2] + ((v9 & 1) == 0));
  if (v11 >= (uint64_t)result && (a3 & 1) != 0)
  {
LABEL_6:
    char v13 = *v4;
    if (v10)
    {
LABEL_7:
      *(void *)(v13[7] + 8 * v8) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v11 >= (uint64_t)result && (a3 & 1) == 0)
  {
    id result = (id)sub_1B6AD397C();
    goto LABEL_6;
  }
  sub_1B6AC2ECC((uint64_t)result, a3 & 1);
  id result = (id)sub_1B69FB5B4((uint64_t)a2);
  if ((v10 & 1) != (v14 & 1))
  {
    sub_1B63989B8(0, &qword_1E9DD06B0);
    id result = (id)sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v8 = (unint64_t)result;
  char v13 = *v4;
  if (v10) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B636A59C(v8, (uint64_t)a2, a1, v13);

  return a2;
}

id sub_1B67E7D94(uint64_t a1, void *a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  unint64_t v8 = sub_1B69FB604((uint64_t)a2);
  char v10 = v9;
  uint64_t v11 = v7[3];
  id result = (id)(v7[2] + ((v9 & 1) == 0));
  if (v11 >= (uint64_t)result && (a3 & 1) != 0)
  {
LABEL_6:
    char v13 = *v4;
    if (v10)
    {
LABEL_7:
      *(void *)(v13[7] + 8 * v8) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v11 >= (uint64_t)result && (a3 & 1) == 0)
  {
    id result = (id)sub_1B6AD3B48();
    goto LABEL_6;
  }
  sub_1B6AC319C((uint64_t)result, a3 & 1);
  id result = (id)sub_1B69FB604((uint64_t)a2);
  if ((v10 & 1) != (v14 & 1))
  {
    sub_1B63989B8(0, (unint64_t *)&unk_1E9DD5160);
    id result = (id)sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v8 = (unint64_t)result;
  char v13 = *v4;
  if (v10) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B636A59C(v8, (uint64_t)a2, a1, v13);

  return a2;
}

unint64_t sub_1B67E7EC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B62BE38C(a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 >= v15 && (a4 & 1) != 0)
  {
LABEL_6:
    char v16 = *v5;
    if (v13)
    {
LABEL_7:
      uint64_t v17 = (uint64_t *)(v16[7] + 16 * v11);
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t *v17 = a1;
      v17[1] = a2;
      return result;
    }
    goto LABEL_10;
  }
  if (v14 >= v15 && (a4 & 1) == 0)
  {
    sub_1B6AD3B6C();
    goto LABEL_6;
  }
  sub_1B6AC31C0(v15, a4 & 1);
  uint64_t v19 = sub_1B62BE38C(a3);
  if ((v13 & 1) != (v20 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v11 = v19;
  char v16 = *v5;
  if (v13) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B6378C68(v11, a3, a1, a2, v16);
}

uint64_t sub_1B67E7FE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B62B2CE0(a2, a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t result = v10[2] + ((v12 & 1) == 0);
  if (v14 >= result && (a4 & 1) != 0)
  {
LABEL_6:
    char v16 = *v5;
    if (v13)
    {
LABEL_7:
      *(void *)(v16[7] + 8 * v11) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v14 >= result && (a4 & 1) == 0)
  {
    uint64_t result = sub_1B6AD3D10();
    goto LABEL_6;
  }
  sub_1B6AC34A4(result, a4 & 1);
  uint64_t result = sub_1B62B2CE0(a2, a3);
  if ((v13 & 1) != (v17 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v11 = result;
  char v16 = *v5;
  if (v13) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B62B3490(v11, a2, a3, a1, v16);

  return swift_bridgeObjectRetain();
}

unint64_t sub_1B67E8118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  char v7 = (void **)v6;
  uint64_t v14 = (void *)*v6;
  unint64_t v15 = sub_1B62BE38C(a5);
  char v17 = v16;
  uint64_t v18 = v14[3];
  uint64_t v19 = v14[2] + ((v16 & 1) == 0);
  if (v18 >= v19 && (a6 & 1) != 0)
  {
LABEL_6:
    char v20 = *v7;
    if (v17)
    {
LABEL_7:
      uint64_t v21 = (uint64_t *)(v20[7] + 32 * v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      void v21[2] = a3;
      v21[3] = a4;
      return result;
    }
    goto LABEL_10;
  }
  if (v18 >= v19 && (a6 & 1) == 0)
  {
    sub_1B6AD40A0();
    goto LABEL_6;
  }
  sub_1B6AC3794(v19, a6 & 1);
  uint64_t v23 = sub_1B62BE38C(a5);
  if ((v17 & 1) != (v24 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v15 = v23;
  char v20 = *v7;
  if (v17) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B6AD83C0(v15, a5, a1, a2, a3, a4, v20);
}

uint64_t sub_1B67E8278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  unint64_t v8 = (void **)v7;
  unint64_t v15 = (void *)*v7;
  unint64_t v16 = sub_1B62B2CE0(a5, a6);
  char v18 = v17;
  uint64_t v19 = v15[3];
  uint64_t v20 = v15[2] + ((v17 & 1) == 0);
  if (v19 >= v20 && (a7 & 1) != 0)
  {
LABEL_6:
    uint64_t v21 = *v8;
    if (v18)
    {
LABEL_7:
      long long v22 = (uint64_t *)(v21[7] + 32 * v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *long long v22 = a1;
      v22[1] = a2;
      void v22[2] = a3;
      v22[3] = a4;
      return result;
    }
    goto LABEL_10;
  }
  if (v19 >= v20 && (a7 & 1) == 0)
  {
    sub_1B6AD4278();
    goto LABEL_6;
  }
  sub_1B6AC3A90(v20, a7 & 1);
  uint64_t v24 = sub_1B62B2CE0(a5, a6);
  if ((v18 & 1) != (v25 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v16 = v24;
  uint64_t v21 = *v8;
  if (v18) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B6AD8404(v16, a5, a6, a1, a2, a3, a4, v21);

  return swift_bridgeObjectRetain();
}

unint64_t sub_1B67E8400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  char v12 = (void *)*v5;
  unint64_t v13 = sub_1B62C1A30(a4);
  char v15 = v14;
  uint64_t v16 = v12[3];
  uint64_t v17 = v12[2] + ((v14 & 1) == 0);
  if (v16 >= v17 && (a5 & 1) != 0)
  {
LABEL_6:
    char v18 = *v6;
    if (v15)
    {
LABEL_7:
      uint64_t v19 = (uint64_t *)(v18[7] + 24 * v13);
      unint64_t result = swift_unknownObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      v19[2] = a3;
      return result;
    }
    goto LABEL_10;
  }
  if (v16 >= v17 && (a5 & 1) == 0)
  {
    sub_1B6AD4650();
    goto LABEL_6;
  }
  sub_1B6AC3DC0(v17, a5 & 1);
  unint64_t v21 = sub_1B62C1A30(a4);
  if ((v15 & 1) != (v22 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v13 = v21;
  char v18 = *v6;
  if (v15) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B62B6EFC(v13, a4, a1, a2, a3, v18);
}

uint64_t sub_1B67E8540(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(v8 + 16) + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = *(void *)(v14 + 56);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD4820();
    goto LABEL_6;
  }
  sub_1B6AC4094(v13, a3 & 1);
  unint64_t v17 = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B636A6BC(v9, a2, a1, v14);
}

unint64_t sub_1B67E865C(uint64_t a1, unsigned int a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C5AB0(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v15 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD4B78();
    goto LABEL_6;
  }
  sub_1B6AC4344(v13, a3 & 1);
  unint64_t v17 = sub_1B62C5AB0(a2);
  if ((v11 & 1) != (v18 & 1))
  {
    unint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = v17;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B62B8158(v9, a2, a1, v14);
}

uint64_t sub_1B67E8778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  char v7 = (void **)v6;
  uint64_t v14 = (void *)*v6;
  unint64_t v15 = sub_1B62B2CE0(a4, a5);
  char v17 = v16;
  uint64_t v18 = v14[3];
  uint64_t v19 = v14[2] + ((v16 & 1) == 0);
  if (v18 >= v19 && (a6 & 1) != 0)
  {
LABEL_6:
    uint64_t v20 = *v7;
    if (v17)
    {
LABEL_7:
      unint64_t v21 = (uint64_t *)(v20[7] + 24 * v15);
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *unint64_t v21 = a1;
      v21[1] = a2;
      void v21[2] = a3;
      return result;
    }
    goto LABEL_10;
  }
  if (v18 >= v19 && (a6 & 1) == 0)
  {
    sub_1B6AD4EB0();
    goto LABEL_6;
  }
  sub_1B6AC48A8(v19, a6 & 1);
  uint64_t v23 = sub_1B62B2CE0(a4, a5);
  if ((v17 & 1) != (v24 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v15 = v23;
  uint64_t v20 = *v7;
  if (v17) {
    goto LABEL_7;
  }
LABEL_10:
  sub_1B6AD844C(v15, a4, a5, a1, a2, a3, v20);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67E88D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD50B4, (void (*)(void))sub_1B6AC4BD8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E8918(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD50CC, (void (*)(void))sub_1B6AC4BF0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E8958(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD50E4, (void (*)(void))sub_1B6AC4C08, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E8998(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD50FC, (void (*)(void))sub_1B6AC4C20, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E89D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD5114, (void (*)(void))sub_1B6AC4C38, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E8A18(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD512C, (void (*)(void))sub_1B6AC4C50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E8A58(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD5144, (void (*)(void))sub_1B6AC4C68, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E8A98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1B62B3328(a1, a2, a3, a4, (void (*)(void))sub_1B6AD515C, (void (*)(void))sub_1B6AC4C80, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B62B3510);
}

uint64_t sub_1B67E8AD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1B62B2CE0(a2, a3);
  char v13 = v12;
  uint64_t v14 = v10[3];
  uint64_t v15 = v10[2] + ((v12 & 1) == 0);
  if (v14 < v15 || (a4 & 1) == 0)
  {
    if (v14 < v15 || (a4 & 1) != 0)
    {
      sub_1B6AC4C98(v15, a4 & 1);
      uint64_t v19 = sub_1B62B2CE0(a2, a3);
      if ((v13 & 1) != (v20 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v11 = v19;
      char v16 = *v5;
      if (v13) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
    sub_1B6AD5328();
  }
  char v16 = *v5;
  if (v13)
  {
LABEL_7:
    uint64_t v17 = v16[7] + 56 * v11;
    return sub_1B67FA3F0(a1, v17);
  }
LABEL_12:
  sub_1B6AD8498(v11, a2, a3, a1, v16);

  return swift_bridgeObjectRetain();
}

void sub_1B67E8C18(uint64_t a1, char a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B69FAB00(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];

      *(void *)(v15 + 8 * v9) = a1;
      return;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD554C();
    goto LABEL_6;
  }
  sub_1B6AC4FF0(v13, a3 & 1);
  unint64_t v16 = sub_1B69FAB00(a2);
  if ((v11 & 1) != (v17 & 1))
  {
    sub_1B6E33838();
    __break(1u);
    return;
  }
  unint64_t v9 = v16;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  sub_1B6396BFC(v9, a2, a1, v14);
}

uint64_t sub_1B67E8D34(uint64_t a1, uint64_t *a2, char a3)
{
  return sub_1B67E8DB4(a1, a2, a3, (void (*)(void))sub_1B6AD571C, (void (*)(void))sub_1B6AC53E4, (void (*)(unint64_t, uint64_t *, uint64_t, uint64_t))sub_1B6AD84F4);
}

uint64_t sub_1B67E8D74(uint64_t a1, uint64_t *a2, char a3)
{
  return sub_1B67E8DB4(a1, a2, a3, (void (*)(void))sub_1B6AD573C, (void (*)(void))sub_1B6AC5404, (void (*)(unint64_t, uint64_t *, uint64_t, uint64_t))sub_1B6AD84F4);
}

uint64_t sub_1B67E8DB4(uint64_t a1, uint64_t *a2, char a3, void (*a4)(void), void (*a5)(void), void (*a6)(unint64_t, uint64_t *, uint64_t, uint64_t))
{
  char v10 = v6;
  uint64_t v14 = *v6;
  unint64_t v15 = sub_1B69FAB44(a2);
  char v17 = v16;
  uint64_t v18 = *(void *)(v14 + 24);
  uint64_t v19 = *(void *)(v14 + 16) + ((v16 & 1) == 0);
  if (v18 >= v19 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v20 = *v10;
    if (v17)
    {
LABEL_7:
      uint64_t v21 = *(void *)(v20 + 56);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v18 >= v19 && (a3 & 1) == 0)
  {
    a4();
    goto LABEL_6;
  }
  a5();
  unint64_t v23 = sub_1B69FAB44(a2);
  if ((v17 & 1) != (v24 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v15 = v23;
  uint64_t v20 = *v10;
  if (v17) {
    goto LABEL_7;
  }
LABEL_10:
  a6(v15, a2, a1, v20);

  return sub_1B67FAC7C((uint64_t)a2);
}

uint64_t sub_1B67E8EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v8 = (void **)v7;
  uint64_t v14 = (void *)*v7;
  char v15 = a6 & 1;
  unint64_t v16 = sub_1B69FB84C(a3, a4, a5, a6 & 1);
  char v18 = v17;
  uint64_t v19 = v14[3];
  uint64_t v20 = v14[2] + ((v17 & 1) == 0);
  if (v19 < v20 || (a7 & 1) == 0)
  {
    if (v19 < v20 || (a7 & 1) != 0)
    {
      sub_1B6AC5E1C(v20, a7 & 1);
      unint64_t v21 = sub_1B69FB84C(a3, a4, a5, v15);
      if ((v18 & 1) != (v22 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v16 = v21;
    }
    else
    {
      sub_1B6AD5CF0();
    }
  }
  unint64_t v23 = *v8;
  if (v18)
  {
    char v24 = (uint64_t *)(v23[7] + 16 * v16);
    uint64_t result = swift_unknownObjectRelease();
    *char v24 = a1;
    v24[1] = a2;
  }
  else
  {
    sub_1B6AD8550(v16, a3, a4, a5, v15, a1, a2, v23);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B67E9070(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B62C1A30(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t result = v8[2] + ((v10 & 1) == 0);
  if (v12 >= result && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      *(void *)(v14[7] + 8 * v9) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v12 >= result && (a3 & 1) == 0)
  {
    uint64_t result = sub_1B6AD5ED4();
    goto LABEL_6;
  }
  sub_1B6AC6154(result, a3 & 1);
  uint64_t result = sub_1B62C1A30(a2);
  if ((v11 & 1) != (v15 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v9 = result;
  uint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  return sub_1B636A59C(v9, a2, a1, v14);
}

uint64_t sub_1B67E9180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = (void **)v7;
  char v15 = (void *)*v7;
  unint64_t v16 = sub_1B62B2CE0(a5, a6);
  char v18 = v17;
  uint64_t v19 = v15[3];
  uint64_t v20 = v15[2] + ((v17 & 1) == 0);
  if (v19 < v20 || (a7 & 1) == 0)
  {
    if (v19 < v20 || (a7 & 1) != 0)
    {
      sub_1B6AC63EC(v20, a7 & 1);
      uint64_t v21 = sub_1B62B2CE0(a5, a6);
      if ((v18 & 1) != (v22 & 1))
      {
        uint64_t result = sub_1B6E33838();
        __break(1u);
        return result;
      }
      unint64_t v16 = v21;
    }
    else
    {
      sub_1B6AD5EF0();
    }
  }
  unint64_t v23 = *v8;
  if (v18)
  {
    char v24 = (uint64_t *)(v23[7] + 32 * v16);
    uint64_t result = swift_unknownObjectRelease();
    *char v24 = a1;
    v24[1] = a2;
    void v24[2] = a3;
    v24[3] = a4;
  }
  else
  {
    sub_1B6AD8404(v16, a5, a6, a1, a2, a3, a4, v23);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B67E92E8(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1B6E31118();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v3;
  unint64_t v14 = sub_1B69FA874(a2);
  char v16 = v15;
  uint64_t v17 = v13[3];
  uint64_t v18 = v13[2] + ((v15 & 1) == 0);
  if (v17 >= v18 && (a3 & 1) != 0)
  {
LABEL_6:
    uint64_t v19 = *v4;
    if (v16)
    {
LABEL_7:
      uint64_t v20 = v19[7];
      uint64_t result = swift_release();
      *(void *)(v20 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_10;
  }
  if (v17 >= v18 && (a3 & 1) == 0)
  {
    sub_1B6AD7038();
    goto LABEL_6;
  }
  sub_1B6AC7534(v18, a3 & 1);
  uint64_t v22 = sub_1B69FA874(a2);
  if ((v16 & 1) != (v23 & 1))
  {
    uint64_t result = sub_1B6E33838();
    __break(1u);
    return result;
  }
  unint64_t v14 = v22;
  uint64_t v19 = *v4;
  if (v16) {
    goto LABEL_7;
  }
LABEL_10:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  return sub_1B6AD7FE4(v14, (uint64_t)v12, a1, v19);
}

void sub_1B67E9484(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B69FB158(a2);
  char v11 = v10;
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[2] + ((v10 & 1) == 0);
  if (v12 >= v13 && (a3 & 1) != 0)
  {
LABEL_6:
    unint64_t v14 = *v4;
    if (v11)
    {
LABEL_7:
      uint64_t v15 = v14[7];
      swift_unknownObjectRelease();
      *(void *)(v15 + 8 * v9) = a1;
      return;
    }
    goto LABEL_10;
  }
  if (v12 >= v13 && (a3 & 1) == 0)
  {
    sub_1B6AD72DC();
    goto LABEL_6;
  }
  sub_1B6AC7944(v13, a3 & 1);
  unint64_t v16 = sub_1B69FB158(a2);
  if ((v11 & 1) != (v17 & 1))
  {
    sub_1B6E33838();
    __break(1u);
    return;
  }
  unint64_t v9 = v16;
  unint64_t v14 = *v4;
  if (v11) {
    goto LABEL_7;
  }
LABEL_10:

  sub_1B6AD85A0(v9, a2, a1, v14);
}

unint64_t sub_1B67E95A0()
{
  unint64_t result = qword_1E9DD04C8;
  if (!qword_1E9DD04C8)
  {
    sub_1B67FBF1C(255, &qword_1E9DD04C0, MEMORY[0x1E4F26CD0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD04C8);
  }
  return result;
}

uint64_t sub_1B67E9628(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B67E9670(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BundleInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B67E96CC(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4, char a5)
{
  int v30 = a5 & 1;
  uint64_t v11 = *v5;
  sub_1B6E33918();
  swift_bridgeObjectRetain();
  sub_1B68ED020((uint64_t)v32, a2);
  unsigned __int8 v31 = a3;
  sub_1B6E33938();
  sub_1B6E33938();
  if ((a5 & 1) == 0) {
    sub_1B6E33928();
  }
  uint64_t v12 = sub_1B6E33988();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  uint64_t v28 = v5;
  uint64_t v29 = a4;
  if ((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v15 = ~v13;
    do
    {
      uint64_t v16 = *(void *)(v11 + 48) + 32 * v14;
      unint64_t v17 = *(void *)v16;
      int v18 = *(unsigned __int8 *)(v16 + 8);
      uint64_t v19 = *(void *)(v16 + 16);
      char v20 = *(unsigned char *)(v16 + 24);
      sub_1B62C6AA8(*(void *)v16);
      char v21 = sub_1B690176C(v17, a2);
      sub_1B62C6A70(v17);
      if ((v21 & 1) != 0 && v18 == v31)
      {
        if (v20)
        {
          if (v30) {
            goto LABEL_12;
          }
        }
        else if (!v30 && v19 == v29)
        {
LABEL_12:
          swift_bridgeObjectRelease();
          sub_1B62C6A70(a2);
          uint64_t v22 = *(void *)(*v28 + 48) + 32 * v14;
          unint64_t v23 = *(void *)v22;
          char v24 = *(unsigned char *)(v22 + 8);
          uint64_t v25 = *(void *)(v22 + 16);
          LOBYTE(v22) = *(unsigned char *)(v22 + 24);
          *(void *)a1 = v23;
          *(unsigned char *)(a1 + 8) = v24;
          *(void *)(a1 + 16) = v25;
          *(unsigned char *)(a1 + 24) = v22;
          sub_1B62C6AA8(v23);
          return 0;
        }
      }
      unint64_t v14 = (v14 + 1) & v15;
    }
    while (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32[0] = *v28;
  *uint64_t v28 = 0x8000000000000000;
  sub_1B62C6AA8(a2);
  sub_1B67EE168(a2, v31, v29, v30, v14, isUniquelyReferenced_nonNull_native);
  *uint64_t v28 = v32[0];
  swift_bridgeObjectRelease();
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = v31;
  *(void *)(a1 + 16) = v29;
  uint64_t result = 1;
  *(unsigned char *)(a1 + 24) = v30 != 0;
  return result;
}

uint64_t sub_1B67E9934(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1B6E33908();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1B67EE380(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1B67E9A30(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9 = *v4;
  sub_1B6E33918();
  swift_bridgeObjectRetain();
  sub_1B6CD2720((uint64_t)v64, (void *)a2, (void *)a3, a4 & 0xFFFFFFFFFFLL);
  uint64_t v10 = sub_1B6E33988();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9 + 56;
  uint64_t v63 = (void *)a2;
  __int16 v55 = v4;
  uint64_t v56 = a1;
  uint64_t v53 = a4 & 0xFFFFFFFFFFLL;
  if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v64[0] = *v55;
    *__int16 v55 = 0x8000000000000000;
    sub_1B6650588(v63, (void *)a3, a4);
    sub_1B67EE4B4((unint64_t)v63, a3, v53, v12, isUniquelyReferenced_nonNull_native);
    *__int16 v55 = v64[0];
    swift_bridgeObjectRelease();
    *(void *)uint64_t v56 = v63;
    *(void *)(v56 + 8) = a3;
    *(unsigned char *)(v56 + 20) = BYTE4(a4);
    *(_DWORD *)(v56 + 16) = a4;
    return 1;
  }
  uint64_t v14 = ~v11;
  uint64_t v15 = a4 & 0xC000000000;
  BOOL v16 = a2 == 1;
  BOOL v17 = (a3 | a2) != 0;
  if ((a4 & 0xFFFFFFFFFFLL) != 0x8000000000)
  {
    BOOL v16 = 0;
    BOOL v17 = 1;
  }
  if (a3) {
    BOOL v16 = 0;
  }
  BOOL v18 = v15 == 0x8000000000;
  int v61 = a2;
  BOOL v19 = v15 == 0x8000000000 && v16;
  BOOL v60 = v19;
  char v20 = !v18 || v17;
  char v59 = v20;
  uint64_t v21 = a4 & 0xC000000000;
  unint64_t v62 = a4;
  uint64_t v58 = ~v11;
  uint64_t v57 = a4 & 0xC000000000;
  while (1)
  {
    uint64_t v22 = *(void *)(v9 + 48) + 24 * v12;
    unint64_t v23 = *(void *)v22;
    unsigned int v24 = *(unsigned __int8 *)(v22 + 20);
    if (!(v24 >> 6)) {
      break;
    }
    unint64_t v25 = *(void *)(v22 + 8);
    unint64_t v26 = *(unsigned int *)(v22 + 16) | ((unint64_t)*(unsigned __int8 *)(v22 + 20) << 32);
    if (v24 >> 6 != 1)
    {
      if (v25 | v23) {
        BOOL v35 = 0;
      }
      else {
        BOOL v35 = v26 == 0x8000000000;
      }
      if (v35)
      {
        if ((v59 & 1) == 0) {
          goto LABEL_51;
        }
      }
      else if (v60)
      {
        goto LABEL_51;
      }
      goto LABEL_14;
    }
    if (v21 != 0x4000000000) {
      goto LABEL_14;
    }
    uint64_t v27 = sub_1B6E31798();
    uint64_t v29 = v28;
    if (v27 == sub_1B6E31798() && v29 == v30)
    {
      sub_1B6650588((id)v23, (void *)v25, v26);
      id v36 = (id)v25;
      id v37 = (id)a3;
      id v38 = (id)v23;
      id v39 = v63;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v54 = sub_1B6E334B8();
      sub_1B6650588((id)v23, (void *)v25, v26);
      id v51 = (id)v25;
      id v52 = (id)a3;
      id v50 = (id)v23;
      id v32 = v63;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v54 & 1) == 0)
      {

        a4 = v62;
        __int16 v34 = v51;
        __int16 v33 = v52;
LABEL_45:

        goto LABEL_46;
      }
    }
    a4 = v62;
    if (!v25)
    {

      if (a3)
      {
        unint64_t v25 = 0;
        __int16 v33 = (void *)a3;
LABEL_46:

        sub_1B66505D0((void *)v23, (void *)v25, v26);
        uint64_t v14 = v58;
        uint64_t v13 = v9 + 56;
        uint64_t v21 = v57;
        goto LABEL_14;
      }
      sub_1B66505D0((void *)v23, 0, v26);
      uint64_t v14 = v58;
      uint64_t v13 = v9 + 56;
      uint64_t v21 = v57;
      if ((v26 & 0x100000000) != 0)
      {
LABEL_48:
        if ((a4 & 0x100000000) != 0) {
          goto LABEL_49;
        }
        goto LABEL_14;
      }
      goto LABEL_39;
    }
    if (!a3)
    {
      id v32 = (id)v25;
      __int16 v34 = (void *)v23;
      __int16 v33 = v63;
      goto LABEL_45;
    }
    sub_1B63989B8(0, (unint64_t *)&qword_1EB980620);
    id v40 = (id)v25;
    id v41 = (id)a3;
    char v42 = sub_1B6E32358();

    a4 = v62;
    sub_1B66505D0((void *)v23, (void *)v25, v26);
    uint64_t v14 = v58;
    uint64_t v13 = v9 + 56;
    uint64_t v21 = v57;
    if (v42)
    {
      if ((v26 & 0x100000000) != 0) {
        goto LABEL_48;
      }
LABEL_39:
      if ((a4 & 0x100000000) == 0 && v26 == a4)
      {
LABEL_49:
        swift_bridgeObjectRelease();
        sub_1B66505D0(v63, (void *)a3, a4);
        goto LABEL_52;
      }
    }
LABEL_14:
    unint64_t v12 = (v12 + 1) & v14;
    if (((*(void *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_50;
    }
  }
  if (((a4 >> 38) & 3) != 0 || *(void *)v22 != v61) {
    goto LABEL_14;
  }
LABEL_51:
  swift_bridgeObjectRelease();
LABEL_52:
  uint64_t v45 = *(void *)(*v55 + 48) + 24 * v12;
  char v46 = *(void **)v45;
  char v47 = *(void **)(v45 + 8);
  uint64_t v48 = *(unsigned __int8 *)(v45 + 20);
  uint64_t v49 = *(unsigned int *)(v45 + 16);
  *(void *)uint64_t v56 = v46;
  *(void *)(v56 + 8) = v47;
  *(unsigned char *)(v56 + 20) = v48;
  *(_DWORD *)(v56 + 16) = v49;
  sub_1B6650588(v46, v47, v49 | (v48 << 32));
  return 0;
}

uint64_t sub_1B67E9ED4(_DWORD *a1, unint64_t a2)
{
  unint64_t v3 = a2;
  unint64_t v5 = HIDWORD(a2);
  uint64_t v6 = *v2;
  sub_1B6E33918();
  sub_1B6E33958();
  sub_1B6E33958();
  uint64_t v7 = sub_1B6E33988();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (1)
    {
      uint64_t v11 = (int *)(*(void *)(v6 + 48) + 8 * v9);
      int v13 = *v11;
      int v12 = v11[1];
      if (v13 == v3 && v12 == v5) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t result = 0;
    BOOL v17 = (_DWORD *)(*(void *)(*v2 + 48) + 8 * v9);
    LODWORD(v3) = *v17;
    LODWORD(v5) = v17[1];
  }
  else
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1B67EE918(v3, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t sub_1B67EA00C(void *a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1B6E31798();
  sub_1B6E33918();
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  uint64_t v7 = sub_1B6E33988();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    id v24 = a2;
    sub_1B67EEA70((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = sub_1B6E31798();
  uint64_t v12 = v11;
  if (v10 == sub_1B6E31798() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = sub_1B6E31798();
        uint64_t v19 = v18;
        if (v17 == sub_1B6E31798() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  unint64_t v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_1B67EA238(unint64_t *a1, unint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1B6E33918();
  swift_bridgeObjectRetain();
  sub_1B68ED020((uint64_t)v18, a2);
  uint64_t v7 = sub_1B6E33988();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    unint64_t v10 = *(void *)(*(void *)(v6 + 48) + 8 * v9);
    sub_1B62C6AA8(v10);
    char v11 = sub_1B690176C(v10, a2);
    sub_1B62C6A70(v10);
    if (v11)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      sub_1B62C6A70(a2);
      unint64_t v15 = *(void *)(*(void *)(*v3 + 48) + 8 * v9);
      *a1 = v15;
      sub_1B62C6AA8(v15);
      return 0;
    }
    uint64_t v12 = ~v8;
    while (1)
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        break;
      }
      unint64_t v13 = *(void *)(*(void *)(v6 + 48) + 8 * v9);
      sub_1B62C6AA8(v13);
      char v14 = sub_1B690176C(v13, a2);
      sub_1B62C6A70(v13);
      if (v14) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18[0] = *v3;
  *unint64_t v3 = 0x8000000000000000;
  sub_1B62C6AA8(a2);
  sub_1B67EEC98(a2, v9, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v18[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1B67EA3D8(_DWORD *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1B6E33918();
  sub_1B6E33958();
  uint64_t v6 = sub_1B6E33988();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1B67EEE24(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(_DWORD *)(v9 + 4 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v9 + 4 * v8) != a2);
  }
  uint64_t result = 0;
  LODWORD(a2) = *(_DWORD *)(*(void *)(*v2 + 48) + 4 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1B67EA4F8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v5 = a2;
  unint64_t v7 = HIDWORD(a2);
  uint64_t v8 = *v3;
  sub_1B6E33918();
  sub_1B6E33958();
  sub_1B6E33958();
  swift_bridgeObjectRetain();
  sub_1B6E33928();
  uint64_t v9 = sub_1B6E33988();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v10;
    while (1)
    {
      uint64_t v13 = *(void *)(v8 + 48) + 16 * v11;
      BOOL v14 = *(_DWORD *)v13 == v5 && *(_DWORD *)(v13 + 4) == v7;
      if (v14 && *(void *)(v13 + 8) == a3) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
      if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    uint64_t v16 = *(void *)(*v3 + 48) + 16 * v11;
    LODWORD(v5) = *(_DWORD *)v16;
    LODWORD(v7) = *(_DWORD *)(v16 + 4);
    a3 = *(void *)(v16 + 8);
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1B67EEF6C(v5, a3, v11, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *(_DWORD *)a1 = v5;
  *(_DWORD *)(a1 + 4) = v7;
  *(void *)(a1 + 8) = a3;
  return result;
}

uint64_t sub_1B67EA674(_DWORD *a1, unint64_t a2)
{
  unint64_t v3 = a2;
  unint64_t v5 = HIDWORD(a2);
  uint64_t v6 = *v2;
  sub_1B6E33918();
  sub_1B6E33958();
  sub_1B6E33958();
  uint64_t v7 = sub_1B6E33988();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (1)
    {
      unint64_t v11 = (int *)(*(void *)(v6 + 48) + 8 * v9);
      int v13 = *v11;
      int v12 = v11[1];
      if (v13 == v3 && v12 == v5) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t result = 0;
    uint64_t v17 = (_DWORD *)(*(void *)(*v2 + 48) + 8 * v9);
    LODWORD(v3) = *v17;
    LODWORD(v5) = v17[1];
  }
  else
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1B67EF0F0(v3, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t sub_1B67EA7AC(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_1B6E33918();
  char v5 = BYTE1(a2);
  swift_bridgeObjectRetain();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1B6E33988();
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v27 = a2;
  if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v28;
    *uint64_t v28 = 0x8000000000000000;
    char v24 = v27;
    sub_1B67EF248(v27, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v28 = v30;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_34;
  }
  uint64_t v9 = ~v7;
  uint64_t v10 = a2;
  while (2)
  {
    int v12 = (unsigned char *)(*(void *)(v4 + 48) + 2 * v8);
    uint64_t v13 = v12[1];
    unint64_t v14 = 0xE300000000000000;
    uint64_t v15 = 5459817;
    switch(*v12)
    {
      case 1:
        unint64_t v14 = 0xE500000000000000;
        uint64_t v15 = 0x534F63616DLL;
        break;
      case 2:
        unint64_t v14 = 0xE700000000000000;
        uint64_t v15 = 0x534F6863746177;
        break;
      case 3:
        unint64_t v14 = 0xE400000000000000;
        uint64_t v15 = 1397716596;
        break;
      default:
        break;
    }
    unint64_t v16 = 0xE300000000000000;
    uint64_t v17 = 5459817;
    switch(v10)
    {
      case 1:
        unint64_t v16 = 0xE500000000000000;
        if (v15 != 0x534F63616DLL) {
          goto LABEL_18;
        }
        goto LABEL_16;
      case 2:
        unint64_t v16 = 0xE700000000000000;
        uint64_t v17 = 0x534F6863746177;
        goto LABEL_13;
      case 3:
        unint64_t v16 = 0xE400000000000000;
        if (v15 == 1397716596) {
          goto LABEL_16;
        }
        goto LABEL_18;
      default:
LABEL_13:
        if (v15 != v17) {
          goto LABEL_18;
        }
LABEL_16:
        if (v14 != v16)
        {
LABEL_18:
          char v18 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v18) {
            goto LABEL_19;
          }
LABEL_4:
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_32;
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_19:
        unint64_t v19 = 0xE600000000000000;
        uint64_t v20 = 0x34365F363878;
        switch(v13)
        {
          case 1:
            unint64_t v19 = 0xE500000000000000;
            uint64_t v20 = 0x34366D7261;
            break;
          case 2:
            uint64_t v20 = 0x6534366D7261;
            break;
          case 3:
            unint64_t v19 = 0xE800000000000000;
            uint64_t v20 = 0x32335F34366D7261;
            break;
          default:
            break;
        }
        unint64_t v21 = 0xE600000000000000;
        uint64_t v22 = 0x34365F363878;
        switch(BYTE1(a2))
        {
          case 1:
            unint64_t v21 = 0xE500000000000000;
            if (v20 == 0x34366D7261) {
              goto LABEL_30;
            }
            goto LABEL_3;
          case 2:
            uint64_t v22 = 0x6534366D7261;
            goto LABEL_27;
          case 3:
            unint64_t v21 = 0xE800000000000000;
            if (v20 == 0x32335F34366D7261) {
              goto LABEL_30;
            }
            goto LABEL_3;
          default:
LABEL_27:
            if (v20 != v22) {
              goto LABEL_3;
            }
LABEL_30:
            if (v19 != v21)
            {
LABEL_3:
              char v11 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v11) {
                goto LABEL_33;
              }
              goto LABEL_4;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_33:
            swift_bridgeObjectRelease();
            uint64_t result = 0;
            unint64_t v26 = (char *)(*(void *)(*v28 + 48) + 2 * v8);
            char v24 = *v26;
            char v5 = v26[1];
LABEL_34:
            *a1 = v24;
            a1[1] = v5;
            return result;
        }
    }
  }
}

uint64_t sub_1B67EACC8(uint64_t a1, char *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = sub_1B6E31118();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_1B67E9628((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  __int16 v34 = a2;
  uint64_t v12 = sub_1B6E315A8();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  uint64_t v33 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v13;
    uint64_t v28 = v7;
    uint64_t v17 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v16 = v7 + 16;
    uint64_t v15 = v17;
    uint64_t v32 = *(void *)(v16 + 56);
    char v18 = (void (**)(char *, uint64_t))(v16 - 8);
    v27[1] = v16 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v19 = v11;
      unint64_t v20 = v32 * v14;
      unint64_t v21 = v15;
      v15(v10, *(void *)(v11 + 48) + v32 * v14, v6);
      sub_1B67E9628(&qword_1EB97D9B0, MEMORY[0x1E4F27990]);
      char v22 = sub_1B6E31708();
      unint64_t v23 = *v18;
      (*v18)(v10, v6);
      if (v22) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v31;
      uint64_t v11 = v19;
      uint64_t v15 = v21;
      if (((*(void *)(v33 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v20, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v25 = v34;
    v15(v10, v34, v6);
    uint64_t v35 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1B67EF750((uint64_t)v10, v14, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1B67EAFEC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1B6E33918();
  sub_1B6E33928();
  uint64_t v8 = sub_1B6E33988();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    if (*(void *)(v11 + 16 * v10) == a2)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v14 = v13[1];
      *a1 = *v13;
      a1[1] = v14;
      swift_retain();
      return 0;
    }
    uint64_t v12 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      if (*(void *)(v11 + 16 * v10) == a2) {
        goto LABEL_6;
      }
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  swift_retain();
  sub_1B67EF9E8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v17;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1B67EB144()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBBE8(0, &qword_1EB980678, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB560], MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  uint64_t v5 = 0;
  uint64_t v6 = (uint64_t *)(v2 + 56);
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v25 = -1 << v7;
  unint64_t v26 = v1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v5 + 1;
    if (v5 + 1 >= v10) {
      goto LABEL_29;
    }
    unint64_t v16 = v6[v15];
    if (!v16)
    {
      uint64_t v15 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_29;
      }
      unint64_t v16 = v6[v15];
      if (!v16)
      {
        uint64_t v15 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_29;
        }
        unint64_t v16 = v6[v15];
        if (!v16)
        {
          uint64_t v15 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_29;
          }
          unint64_t v16 = v6[v15];
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v5 = v15;
LABEL_22:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t v18 = sub_1B6E33908();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v11 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v12 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v17;
    ++*(void *)(v4 + 16);
  }
  while (v10 - 5 != v5)
  {
    unint64_t v16 = *(void *)(v2 + 96 + 8 * v5++);
    if (v16)
    {
      uint64_t v15 = v5 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  if (v27 >= 64) {
    bzero((void *)(v2 + 56), 8 * v10);
  }
  else {
    uint64_t *v6 = v25;
  }
  uint64_t v1 = v26;
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67EB3C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1EB980640, (uint64_t (*)(void))sub_1B67F72A8, (uint64_t)&type metadata for CommandQueue.DirtyPropagation, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v5 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  uint64_t v6 = 0;
  uint64_t v7 = (void *)(v2 + 56);
  uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v2 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v3 + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v6 << 6);
      goto LABEL_22;
    }
    uint64_t v17 = v6 + 1;
    if (v6 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v18 = v7[v17];
    if (!v18)
    {
      uint64_t v17 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v18 = v7[v17];
      if (!v18)
      {
        uint64_t v17 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v18 = v7[v17];
        if (!v18)
        {
          uint64_t v17 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_29;
          }
          unint64_t v18 = v7[v17];
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v10 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v6 = v17;
LABEL_22:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v16);
    uint64_t v20 = *v19;
    *(void *)&long long v4 = v19[1];
    long long v29 = v4;
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v21 = sub_1B6E33988();
    uint64_t v22 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (v24 + 1 == v25) {
          unint64_t v24 = 0;
        }
        else {
          ++v24;
        }
        uint64_t v26 = *(void *)(v12 + 8 * v24);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v24 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    unint64_t v14 = (void *)(*(void *)(v5 + 48) + 16 * v13);
    *((void *)&v4 + 1) = *((void *)&v29 + 1);
    *unint64_t v14 = v20;
    v14[1] = v29;
    ++*(void *)(v5 + 16);
  }
  while (v11 - 5 != v6)
  {
    unint64_t v18 = *(void *)(v2 + 96 + 8 * v6++);
    if (v18)
    {
      uint64_t v17 = v6 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v7 = -1 << v27;
  }
  uint64_t v1 = v0;
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v5;
  return result;
}

uint64_t sub_1B67EB6A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1E9DD0940, (uint64_t (*)(void))sub_1B67FAB80, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_35;
  }
  uint64_t v30 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v31 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  uint64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v10 + 1;
    if (v10 + 1 >= v8) {
      goto LABEL_31;
    }
    unint64_t v16 = v31[v15];
    if (!v16)
    {
      uint64_t v15 = v10 + 2;
      if (v10 + 2 >= v8) {
        goto LABEL_31;
      }
      unint64_t v16 = v31[v15];
      if (!v16)
      {
        uint64_t v15 = v10 + 3;
        if (v10 + 3 >= v8) {
          goto LABEL_31;
        }
        unint64_t v16 = v31[v15];
        if (!v16)
        {
          uint64_t v15 = v10 + 4;
          if (v10 + 4 >= v8) {
            goto LABEL_31;
          }
          unint64_t v16 = v31[v15];
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v10 = v15;
LABEL_22:
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v14;
    unint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    int v21 = *(unsigned __int8 *)(v17 + 24);
    sub_1B6E33918();
    sub_1B68ED020((uint64_t)v32, v18);
    sub_1B6E33938();
    sub_1B6E33938();
    if (v21 != 1) {
      sub_1B6E33928();
    }
    uint64_t v22 = sub_1B6E33988();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v9 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 32 * v11;
    *(void *)uint64_t v12 = v18;
    *(unsigned char *)(v12 + 8) = v19;
    *(void *)(v12 + 16) = v20;
    *(unsigned char *)(v12 + 24) = v21;
    ++*(void *)(v4 + 16);
  }
  while (v8 - 5 != v10)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v10++ + 96);
    if (v16)
    {
      uint64_t v15 = v10 + 4;
      goto LABEL_21;
    }
  }
LABEL_31:
  swift_release();
  uint64_t v1 = v30;
  uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
  if (v28 > 63) {
    bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v31 = -1 << v28;
  }
  *(void *)(v2 + 16) = 0;
LABEL_35:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67EB9F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBBE8(0, &qword_1E9DD0660, MEMORY[0x1E4FBB058], MEMORY[0x1E4FBB060], MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  uint64_t v5 = 0;
  uint64_t v6 = (uint64_t *)(v2 + 56);
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v25 = -1 << v7;
  unint64_t v26 = v1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v5 + 1;
    if (v5 + 1 >= v10) {
      goto LABEL_29;
    }
    unint64_t v16 = v6[v15];
    if (!v16)
    {
      uint64_t v15 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_29;
      }
      unint64_t v16 = v6[v15];
      if (!v16)
      {
        uint64_t v15 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_29;
        }
        unint64_t v16 = v6[v15];
        if (!v16)
        {
          uint64_t v15 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_29;
          }
          unint64_t v16 = v6[v15];
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v5 = v15;
LABEL_22:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t v18 = sub_1B6E33908();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v11 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v12 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v17;
    ++*(void *)(v4 + 16);
  }
  while (v10 - 5 != v5)
  {
    unint64_t v16 = *(void *)(v2 + 96 + 8 * v5++);
    if (v16)
    {
      uint64_t v15 = v5 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  if (v27 >= 64) {
    bzero((void *)(v2 + 56), 8 * v10);
  }
  else {
    uint64_t *v6 = v25;
  }
  uint64_t v1 = v26;
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67EBC78()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1E9DD0AB0, (uint64_t (*)(void))sub_1B66507E8, (uint64_t)&type metadata for GraphScheduling, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_42;
  }
  uint64_t v33 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  id v36 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  uint64_t v10 = 0;
  uint64_t v34 = v2;
  int64_t v35 = v8;
  unint64_t v32 = v8 - 5;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      uint64_t v14 = v10;
      unint64_t v15 = v13 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v14 = v10 + 1;
    if (v10 + 1 >= v35) {
      goto LABEL_38;
    }
    unint64_t v16 = v36[v14];
    if (!v16)
    {
      uint64_t v14 = v10 + 2;
      if (v10 + 2 >= v35) {
        goto LABEL_38;
      }
      unint64_t v16 = v36[v14];
      if (!v16)
      {
        uint64_t v14 = v10 + 3;
        if (v10 + 3 >= v35) {
          goto LABEL_38;
        }
        unint64_t v16 = v36[v14];
        if (!v16)
        {
          uint64_t v14 = v10 + 4;
          if (v10 + 4 >= v35) {
            goto LABEL_38;
          }
          unint64_t v16 = v36[v14];
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v15 = __clz(__rbit64(v16)) + (v14 << 6);
LABEL_22:
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v19 = *(void **)v17;
    uint64_t v18 = *(void **)(v17 + 8);
    unsigned int v20 = *(unsigned __int8 *)(v17 + 20);
    unint64_t v21 = *(unsigned int *)(v17 + 16) | ((unint64_t)*(unsigned __int8 *)(v17 + 20) << 32);
    sub_1B6E33918();
    if (v20 >> 6)
    {
      if (v20 >> 6 == 1)
      {
        sub_1B6E33928();
        sub_1B6E31798();
        id v22 = v18;
        id v37 = v19;
        sub_1B6E318B8();
        swift_bridgeObjectRelease();
        sub_1B6E33938();
        if (v18)
        {
          id v23 = v22;
          sub_1B6E32368();
        }
        uint64_t v2 = v34;
        sub_1B6E33938();
        if ((v21 & 0x100000000) == 0) {
          sub_1B6E33958();
        }
      }
      else
      {
        sub_1B6E33928();
      }
    }
    else
    {
      sub_1B6E33928();
      sub_1B6E33938();
    }
    uint64_t v24 = sub_1B6E33988();
    uint64_t v25 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v28 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (v27 + 1 == v28) {
          unint64_t v27 = 0;
        }
        else {
          ++v27;
        }
        uint64_t v29 = *(void *)(v9 + 8 * v27);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v27 << 6);
    }
    uint64_t v10 = v14;
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v18;
    *(unsigned char *)(v12 + 20) = BYTE4(v21);
    *(_DWORD *)(v12 + 16) = v21;
    ++*(void *)(v4 + 16);
  }
  while (v32 != v10)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v10++ + 96);
    if (v16)
    {
      uint64_t v14 = v10 + 4;
      goto LABEL_21;
    }
  }
LABEL_38:
  swift_release();
  uint64_t v1 = v33;
  uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
  if (v30 > 63) {
    bzero(v36, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v36 = -1 << v30;
  }
  *(void *)(v2 + 16) = 0;
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67EC090()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1EB97D870, (uint64_t (*)(void))sub_1B67CB1A4, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v5 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  uint64_t v6 = 0;
  unint64_t v7 = (void *)(v2 + 56);
  uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v2 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v3 + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v6 << 6);
      goto LABEL_22;
    }
    uint64_t v16 = v6 + 1;
    if (v6 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v17 = v7[v16];
    if (!v17)
    {
      uint64_t v16 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v17 = v7[v16];
      if (!v17)
      {
        uint64_t v16 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v17 = v7[v16];
        if (!v17)
        {
          uint64_t v16 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_29;
          }
          unint64_t v17 = v7[v16];
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v6 = v16;
LABEL_22:
    *(void *)&long long v4 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    long long v26 = v4;
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v18 = sub_1B6E33988();
    uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v12 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v13 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *((void *)&v4 + 1) = *((void *)&v26 + 1);
    *(void *)(*(void *)(v5 + 48) + 8 * v13) = v26;
    ++*(void *)(v5 + 16);
  }
  while (v11 - 5 != v6)
  {
    unint64_t v17 = *(void *)(v2 + 96 + 8 * v6++);
    if (v17)
    {
      uint64_t v16 = v6 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t v24 = 1 << *(unsigned char *)(v2 + 32);
  if (v24 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v7 = -1 << v24;
  }
  uint64_t v1 = v0;
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v5;
  return result;
}

uint64_t sub_1B67EC360()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67F7498();
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  long long v26 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  unint64_t v28 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  uint64_t v10 = 0;
  int64_t v27 = v8;
  unint64_t v25 = v8 - 5;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v14 = v10 + 1;
    if (v10 + 1 >= v27) {
      goto LABEL_29;
    }
    unint64_t v15 = v28[v14];
    if (!v15)
    {
      uint64_t v14 = v10 + 2;
      if (v10 + 2 >= v27) {
        goto LABEL_29;
      }
      unint64_t v15 = v28[v14];
      if (!v15)
      {
        uint64_t v14 = v10 + 3;
        if (v10 + 3 >= v27) {
          goto LABEL_29;
        }
        unint64_t v15 = v28[v14];
        if (!v15)
        {
          uint64_t v14 = v10 + 4;
          if (v10 + 4 >= v27) {
            goto LABEL_29;
          }
          unint64_t v15 = v28[v14];
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    uint64_t v10 = v14;
LABEL_22:
    uint64_t v16 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    sub_1B6E31798();
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v17 = sub_1B6E33988();
    swift_bridgeObjectRelease();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v21 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (v20 + 1 == v21) {
          unint64_t v20 = 0;
        }
        else {
          ++v20;
        }
        uint64_t v22 = *(void *)(v9 + 8 * v20);
      }
      while (v22 == -1);
      unint64_t v11 = __clz(__rbit64(~v22)) + (v20 << 6);
    }
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v16;
    ++*(void *)(v4 + 16);
  }
  while (v25 != v10)
  {
    unint64_t v15 = *(void *)(v2 + 8 * v10++ + 96);
    if (v15)
    {
      uint64_t v14 = v10 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v1 = v26;
  uint64_t v23 = 1 << *(unsigned char *)(v2 + 32);
  if (v23 > 63) {
    bzero(v28, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v28 = -1 << v23;
  }
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67EC63C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBBE8(0, (unint64_t *)&unk_1EB980668, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  unint64_t v28 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  uint64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v10 + 1;
    if (v10 + 1 >= v8) {
      goto LABEL_29;
    }
    unint64_t v16 = v28[v15];
    if (!v16)
    {
      uint64_t v15 = v10 + 2;
      if (v10 + 2 >= v8) {
        goto LABEL_29;
      }
      unint64_t v16 = v28[v15];
      if (!v16)
      {
        uint64_t v15 = v10 + 3;
        if (v10 + 3 >= v8) {
          goto LABEL_29;
        }
        unint64_t v16 = v28[v15];
        if (!v16)
        {
          uint64_t v15 = v10 + 4;
          if (v10 + 4 >= v8) {
            goto LABEL_29;
          }
          unint64_t v16 = v28[v15];
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v10 = v15;
LABEL_22:
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v20 = sub_1B6E33988();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v24 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (v23 + 1 == v24) {
          unint64_t v23 = 0;
        }
        else {
          ++v23;
        }
        uint64_t v25 = *(void *)(v9 + 8 * v23);
      }
      while (v25 == -1);
      unint64_t v11 = __clz(__rbit64(~v25)) + (v23 << 6);
    }
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v18;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
  }
  while (v8 - 5 != v10)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v10++ + 96);
    if (v16)
    {
      uint64_t v15 = v10 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
  if (v26 > 63) {
    bzero(v28, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v28 = -1 << v26;
  }
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67EC914()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1E9DD0598, (uint64_t (*)(void))sub_1B67F7D10, (uint64_t)&type metadata for ScriptLocation, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  uint64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v11 + 1;
    if (v11 + 1 >= v9) {
      goto LABEL_29;
    }
    unint64_t v16 = v6[v15];
    if (!v16)
    {
      uint64_t v15 = v11 + 2;
      if (v11 + 2 >= v9) {
        goto LABEL_29;
      }
      unint64_t v16 = v6[v15];
      if (!v16)
      {
        uint64_t v15 = v11 + 3;
        if (v11 + 3 >= v9) {
          goto LABEL_29;
        }
        unint64_t v16 = v6[v15];
        if (!v16)
        {
          uint64_t v15 = v11 + 4;
          if (v11 + 4 >= v9) {
            goto LABEL_29;
          }
          unint64_t v16 = v6[v15];
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v11 = v15;
LABEL_22:
    unint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_1B6E33918();
    sub_1B68ED020((uint64_t)v26, v17);
    uint64_t v18 = sub_1B6E33988();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v10 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v12 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v17;
    ++*(void *)(v4 + 16);
  }
  while (v9 - 5 != v11)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v11++ + 96);
    if (v16)
    {
      uint64_t v15 = v11 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v24 = 1 << *(unsigned char *)(v2 + 32);
  if (v24 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v6 = -1 << v24;
  }
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67ECBD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1EB980650, (uint64_t (*)(void))sub_1B67FB04C, (uint64_t)&type metadata for EffectID, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  uint64_t v5 = 0;
  uint64_t v6 = (void *)(v2 + 56);
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v5 + 1;
    if (v5 + 1 >= v10) {
      goto LABEL_29;
    }
    unint64_t v16 = v6[v15];
    if (!v16)
    {
      uint64_t v15 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_29;
      }
      unint64_t v16 = v6[v15];
      if (!v16)
      {
        uint64_t v15 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_29;
        }
        unint64_t v16 = v6[v15];
        if (!v16)
        {
          uint64_t v15 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_29;
          }
          unint64_t v16 = v6[v15];
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v5 = v15;
LABEL_22:
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    sub_1B6E33918();
    sub_1B6E33958();
    uint64_t v18 = sub_1B6E33988();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v11 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v12 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v17;
    ++*(void *)(v4 + 16);
  }
  while (v10 - 5 != v5)
  {
    unint64_t v16 = *(void *)(v2 + 96 + 8 * v5++);
    if (v16)
    {
      uint64_t v15 = v5 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t v24 = 1 << *(unsigned char *)(v2 + 32);
  if (v24 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v6 = -1 << v24;
  }
  uint64_t v1 = v0;
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67ECE90()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1E9DD0958, (uint64_t (*)(void))sub_1B67FABD4, (uint64_t)&type metadata for EntityInstance, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  uint64_t v29 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  uint64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v10 + 1;
    if (v10 + 1 >= v8) {
      goto LABEL_29;
    }
    unint64_t v16 = v30[v15];
    if (!v16)
    {
      uint64_t v15 = v10 + 2;
      if (v10 + 2 >= v8) {
        goto LABEL_29;
      }
      unint64_t v16 = v30[v15];
      if (!v16)
      {
        uint64_t v15 = v10 + 3;
        if (v10 + 3 >= v8) {
          goto LABEL_29;
        }
        unint64_t v16 = v30[v15];
        if (!v16)
        {
          uint64_t v15 = v10 + 4;
          if (v10 + 4 >= v8) {
            goto LABEL_29;
          }
          unint64_t v16 = v30[v15];
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v10 = v15;
LABEL_22:
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v14;
    int v18 = *(_DWORD *)v17;
    int v19 = *(_DWORD *)(v17 + 4);
    uint64_t v20 = *(void *)(v17 + 8);
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    sub_1B6E33928();
    uint64_t v21 = sub_1B6E33988();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (v24 + 1 == v25) {
          unint64_t v24 = 0;
        }
        else {
          ++v24;
        }
        uint64_t v26 = *(void *)(v9 + 8 * v24);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v24 << 6);
    }
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
    *(_DWORD *)uint64_t v12 = v18;
    *(_DWORD *)(v12 + 4) = v19;
    *(void *)(v12 + 8) = v20;
    ++*(void *)(v4 + 16);
  }
  while (v8 - 5 != v10)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v10++ + 96);
    if (v16)
    {
      uint64_t v15 = v10 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v1 = v29;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero(v30, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v30 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67ED1A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1EB94A1A8, (uint64_t (*)(void))sub_1B67FAC28, (uint64_t)&type metadata for EmitterReference, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v5 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  uint64_t v6 = 0;
  unint64_t v7 = (void *)(v2 + 56);
  uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v2 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v3 + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v6 << 6);
      goto LABEL_22;
    }
    uint64_t v16 = v6 + 1;
    if (v6 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v17 = v7[v16];
    if (!v17)
    {
      uint64_t v16 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v17 = v7[v16];
      if (!v17)
      {
        uint64_t v16 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v17 = v7[v16];
        if (!v17)
        {
          uint64_t v16 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_29;
          }
          unint64_t v17 = v7[v16];
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v6 = v16;
LABEL_22:
    *(void *)&long long v4 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    long long v26 = v4;
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v18 = sub_1B6E33988();
    uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v12 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v13 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *((void *)&v4 + 1) = *((void *)&v26 + 1);
    *(void *)(*(void *)(v5 + 48) + 8 * v13) = v26;
    ++*(void *)(v5 + 16);
  }
  while (v11 - 5 != v6)
  {
    unint64_t v17 = *(void *)(v2 + 96 + 8 * v6++);
    if (v17)
    {
      uint64_t v16 = v6 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t v24 = 1 << *(unsigned char *)(v2 + 32);
  if (v24 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v7 = -1 << v24;
  }
  uint64_t v1 = v0;
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v5;
  return result;
}

uint64_t sub_1B67ED478()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1E9DD0848, (uint64_t (*)(void))sub_1B67F7B4C, (uint64_t)&type metadata for Target, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  if (!*(void *)(v2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = (void *)(v2 + 56);
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  uint64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    uint64_t v12 = v9 + 1;
    if (v9 + 1 >= v8) {
      goto LABEL_20;
    }
    unint64_t v13 = v5[v12];
    if (!v13)
    {
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v8) {
        goto LABEL_20;
      }
      unint64_t v13 = v5[v12];
      if (!v13)
      {
        uint64_t v12 = v9 + 3;
        if (v9 + 3 >= v8) {
          goto LABEL_20;
        }
        unint64_t v13 = v5[v12];
        if (!v13)
        {
          uint64_t v12 = v9 + 4;
          if (v9 + 4 >= v8) {
            goto LABEL_20;
          }
          unint64_t v13 = v5[v12];
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    uint64_t v9 = v12;
LABEL_6:
    sub_1B67EDFB0(*(_WORD *)(*(void *)(v2 + 48) + 2 * v11), v3);
  }
  while (v8 - 5 != v9)
  {
    unint64_t v13 = *(void *)(v2 + 96 + 8 * v9++);
    if (v13)
    {
      uint64_t v12 = v9 + 4;
      goto LABEL_19;
    }
  }
LABEL_20:
  swift_release();
  uint64_t v14 = 1 << *(unsigned char *)(v2 + 32);
  if (v14 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v5 = -1 << v14;
  }
  *(void *)(v2 + 16) = 0;
LABEL_24:
  uint64_t result = swift_release();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_1B67ED670()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1EB980658, (uint64_t (*)(void))sub_1B67F7774, (uint64_t)&type metadata for Renderer.UnscheduledCommandBuffer, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  uint64_t v5 = 0;
  uint64_t v6 = (void *)(v2 + 56);
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v5 + 1;
    if (v5 + 1 >= v10) {
      goto LABEL_29;
    }
    unint64_t v16 = v6[v15];
    if (!v16)
    {
      uint64_t v15 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_29;
      }
      unint64_t v16 = v6[v15];
      if (!v16)
      {
        uint64_t v15 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_29;
        }
        unint64_t v16 = v6[v15];
        if (!v16)
        {
          uint64_t v15 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_29;
          }
          unint64_t v16 = v6[v15];
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v5 = v15;
LABEL_22:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v18 = sub_1B6E33988();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v11 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v12 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v17;
    ++*(void *)(v4 + 16);
  }
  while (v10 - 5 != v5)
  {
    unint64_t v16 = *(void *)(v2 + 96 + 8 * v5++);
    if (v16)
    {
      uint64_t v15 = v5 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t v24 = 1 << *(unsigned char *)(v2 + 32);
  if (v24 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v6 = -1 << v24;
  }
  uint64_t v1 = v0;
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67ED928()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v0;
  sub_1B67FB588();
  uint64_t v8 = sub_1B6E32868();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_33;
  }
  int64_t v35 = v0;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 56);
  id v37 = (void *)(v7 + 56);
  uint64_t v38 = v3;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  unint64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v39 = v3 + 32;
  uint64_t v15 = v8 + 56;
  swift_retain();
  uint64_t v16 = 0;
  int64_t v36 = v14;
  unint64_t v34 = v14 - 5;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_22;
    }
    uint64_t v20 = v16 + 1;
    if (v16 + 1 >= v36) {
      goto LABEL_29;
    }
    unint64_t v21 = v37[v20];
    if (!v21)
    {
      uint64_t v20 = v16 + 2;
      if (v16 + 2 >= v36) {
        goto LABEL_29;
      }
      unint64_t v21 = v37[v20];
      if (!v21)
      {
        uint64_t v20 = v16 + 3;
        if (v16 + 3 >= v36) {
          goto LABEL_29;
        }
        unint64_t v21 = v37[v20];
        if (!v21)
        {
          uint64_t v20 = v16 + 4;
          if (v16 + 4 >= v36) {
            goto LABEL_29;
          }
          unint64_t v21 = v37[v20];
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v16 = v20;
LABEL_22:
    uint64_t v22 = v7;
    uint64_t v23 = *(void *)(v38 + 72);
    unint64_t v24 = *(void *)(v7 + 48) + v23 * v19;
    unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 32);
    v25(v6, v24, v2);
    sub_1B67E9628((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    uint64_t v26 = sub_1B6E315A8();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = v26 & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v15 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v28) & ~*(void *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v30 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (v29 + 1 == v30) {
          unint64_t v29 = 0;
        }
        else {
          ++v29;
        }
        uint64_t v31 = *(void *)(v15 + 8 * v29);
      }
      while (v31 == -1);
      unint64_t v17 = __clz(__rbit64(~v31)) + (v29 << 6);
    }
    *(void *)(v15 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v25((char *)(*(void *)(v9 + 48) + v17 * v23), (unint64_t)v6, v2);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v22;
  }
  while (v34 != v16)
  {
    unint64_t v21 = *(void *)(v7 + 8 * v16++ + 96);
    if (v21)
    {
      uint64_t v20 = v16 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v1 = v35;
  uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
  if (v32 > 63) {
    bzero(v37, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v37 = -1 << v32;
  }
  *(void *)(v7 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_1B67EDCD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1E9DD0730, (uint64_t (*)(void))sub_1B67F8D84, (uint64_t)&type metadata for VertexLayout, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_33;
  }
  uint64_t v5 = 0;
  uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  unint64_t v28 = (void *)(v2 + 56);
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v5 + 1;
    if (v5 + 1 >= v9) {
      goto LABEL_29;
    }
    unint64_t v16 = v28[v15];
    if (!v16)
    {
      uint64_t v15 = v5 + 2;
      if (v5 + 2 >= v9) {
        goto LABEL_29;
      }
      unint64_t v16 = v28[v15];
      if (!v16)
      {
        uint64_t v15 = v5 + 3;
        if (v5 + 3 >= v9) {
          goto LABEL_29;
        }
        unint64_t v16 = v28[v15];
        if (!v16)
        {
          uint64_t v15 = v5 + 4;
          if (v5 + 4 >= v9) {
            goto LABEL_29;
          }
          unint64_t v16 = v28[v15];
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v5 = v15;
LABEL_22:
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v20 = sub_1B6E33988();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v24 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (v23 + 1 == v24) {
          unint64_t v23 = 0;
        }
        else {
          ++v23;
        }
        uint64_t v25 = *(void *)(v10 + 8 * v23);
      }
      while (v25 == -1);
      unint64_t v11 = __clz(__rbit64(~v25)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *uint64_t v12 = v19;
    v12[1] = v18;
    ++*(void *)(v4 + 16);
  }
  while (v9 - 5 != v5)
  {
    unint64_t v16 = *(void *)(v2 + 96 + 8 * v5++);
    if (v16)
    {
      uint64_t v15 = v5 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
  if (v26 > 63) {
    bzero(v28, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v28 = -1 << v26;
  }
  uint64_t v1 = v0;
  *(void *)(v2 + 16) = 0;
LABEL_33:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1B67EDFB0(__int16 a1, uint64_t a2)
{
  sub_1B6E33918();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B6E318B8();
  swift_bridgeObjectRelease();
  sub_1B6E33988();
  unint64_t result = sub_1B6E327D8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_WORD *)(*(void *)(a2 + 48) + 2 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1B67EE168(unint64_t result, unsigned __int8 a2, uint64_t a3, char a4, unint64_t a5, char a6)
{
  unint64_t v8 = result;
  unint64_t v9 = *(void *)(*v6 + 16);
  unint64_t v10 = *(void *)(*v6 + 24);
  if (v10 <= v9 || (a6 & 1) == 0)
  {
    if (a6)
    {
      sub_1B67EB6A8();
    }
    else
    {
      if (v10 > v9)
      {
        unint64_t result = sub_1B67EFD18();
        goto LABEL_20;
      }
      sub_1B67F1C10();
    }
    uint64_t v11 = *v6;
    sub_1B6E33918();
    sub_1B68ED020((uint64_t)v26, v8);
    sub_1B6E33938();
    sub_1B6E33938();
    if ((a4 & 1) == 0) {
      sub_1B6E33928();
    }
    unint64_t result = sub_1B6E33988();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    a5 = result & ~v12;
    if ((*(void *)(v11 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
    {
      uint64_t v13 = ~v12;
      do
      {
        uint64_t v14 = *(void *)(v11 + 48) + 32 * a5;
        unint64_t v15 = *(void *)v14;
        int v16 = *(unsigned __int8 *)(v14 + 8);
        uint64_t v17 = *(void *)(v14 + 16);
        char v18 = *(unsigned char *)(v14 + 24);
        sub_1B62C6AA8(*(void *)v14);
        char v19 = sub_1B690176C(v15, v8);
        unint64_t result = sub_1B62C6A70(v15);
        if ((v19 & 1) != 0 && v16 == a2)
        {
          if (v18)
          {
            if (a4) {
              goto LABEL_19;
            }
          }
          else if ((a4 & 1) == 0 && v17 == a3)
          {
LABEL_19:
            unint64_t result = sub_1B6E33828();
            __break(1u);
            break;
          }
        }
        a5 = (a5 + 1) & v13;
      }
      while (((*(void *)(v11 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
    }
  }
LABEL_20:
  uint64_t v20 = *v22;
  *(void *)(*v22 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  uint64_t v21 = *(void *)(v20 + 48) + 32 * a5;
  *(void *)uint64_t v21 = v8;
  *(unsigned char *)(v21 + 8) = a2;
  *(void *)(v21 + 16) = a3;
  *(unsigned char *)(v21 + 24) = a4 & 1;
  ++*(void *)(v20 + 16);
  return result;
}

uint64_t sub_1B67EE380(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1B67EB9F4();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = sub_1B67EFF10(&qword_1E9DD0660, MEMORY[0x1E4FBB058], MEMORY[0x1E4FBB060]);
        goto LABEL_14;
      }
      sub_1B67F1F28();
    }
    uint64_t v8 = *v3;
    unint64_t result = sub_1B6E33908();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = *(void *)(v8 + 48);
      if (*(void *)(v10 + 8 * a2) == v5)
      {
LABEL_13:
        unint64_t result = sub_1B6E33828();
        __break(1u);
      }
      else
      {
        uint64_t v11 = ~v9;
        while (1)
        {
          a2 = (a2 + 1) & v11;
          if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
            break;
          }
          if (*(void *)(v10 + 8 * a2) == v5) {
            goto LABEL_13;
          }
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  ++*(void *)(v12 + 16);
  return result;
}

void sub_1B67EE4B4(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  unint64_t v10 = a3 & 0xFFFFFFFFFFLL;
  unint64_t v11 = *(void *)(*v5 + 16);
  unint64_t v12 = *(void *)(*v5 + 24);
  if (v12 <= v11 || (a5 & 1) == 0)
  {
    if (a5)
    {
      sub_1B67EBC78();
    }
    else
    {
      if (v12 > v11)
      {
        sub_1B67F00B4();
        goto LABEL_56;
      }
      sub_1B67F2188();
    }
    uint64_t v13 = *v5;
    sub_1B6E33918();
    sub_1B6CD2720((uint64_t)v60, (void *)a1, (void *)a2, a3 & 0xFFFFFFFFFFLL);
    uint64_t v14 = sub_1B6E33988();
    uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
    a4 = v14 & ~v15;
    uint64_t v16 = v13 + 56;
    if ((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
    {
      int v46 = a3;
      uint64_t v17 = ~v15;
      uint64_t v18 = v10 & 0xC000000000;
      BOOL v19 = a1 == 1;
      BOOL v20 = (a2 | a1) != 0;
      if (v10 != 0x8000000000)
      {
        BOOL v19 = 0;
        BOOL v20 = 1;
      }
      if (a2) {
        BOOL v19 = 0;
      }
      if (v18 != 0x8000000000) {
        BOOL v19 = 0;
      }
      BOOL v53 = v19;
      int v54 = a1;
      char v21 = v18 != 0x8000000000 || v20;
      char v52 = v21;
      unint64_t v22 = v10 >> 38;
      uint64_t v57 = (void *)a1;
      unint64_t v58 = v10;
      uint64_t v56 = v17;
      uint64_t v55 = v10 & 0xC000000000;
      unint64_t v51 = v10 >> 38;
      do
      {
        uint64_t v23 = *(void *)(v13 + 48) + 24 * a4;
        unint64_t v24 = *(void *)v23;
        unsigned int v25 = *(unsigned __int8 *)(v23 + 20);
        if (v25 >> 6)
        {
          unint64_t v26 = *(void *)(v23 + 8);
          unint64_t v27 = *(unsigned int *)(v23 + 16) | ((unint64_t)*(unsigned __int8 *)(v23 + 20) << 32);
          if (v25 >> 6 != 1)
          {
            if (v26 | v24) {
              BOOL v36 = 0;
            }
            else {
              BOOL v36 = v27 == 0x8000000000;
            }
            if (v36)
            {
              if ((v52 & 1) == 0) {
                goto LABEL_55;
              }
            }
            else if (v53)
            {
              goto LABEL_55;
            }
            goto LABEL_20;
          }
          if (v18 != 0x4000000000) {
            goto LABEL_20;
          }
          uint64_t v28 = sub_1B6E31798();
          uint64_t v30 = v29;
          if (v28 == sub_1B6E31798() && v30 == v31)
          {
            sub_1B6650588((id)v24, (void *)v26, v27);
            id v37 = (id)v26;
            id v38 = (id)a2;
            id v39 = (id)v24;
            id v40 = (id)a1;
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v50 = sub_1B6E334B8();
            sub_1B6650588((id)v24, (void *)v26, v27);
            id v48 = (id)v26;
            id v49 = (id)a2;
            id v47 = (id)v24;
            id v33 = (id)a1;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v50 & 1) == 0)
            {

              a1 = (unint64_t)v57;
              int64_t v35 = v48;
              unint64_t v34 = v49;
LABEL_51:

              unint64_t v10 = v58;
              goto LABEL_52;
            }
          }
          if (!v26)
          {

            a1 = (unint64_t)v57;
            unint64_t v10 = v58;
            if (a2)
            {
              unint64_t v26 = 0;
              unint64_t v34 = (void *)a2;
LABEL_52:

              sub_1B66505D0((void *)v24, (void *)v26, v27);
              uint64_t v17 = v56;
              uint64_t v16 = v13 + 56;
              uint64_t v18 = v55;
              unint64_t v22 = v51;
              goto LABEL_20;
            }
            sub_1B66505D0((void *)v24, 0, v27);
            uint64_t v17 = v56;
            uint64_t v16 = v13 + 56;
            uint64_t v18 = v55;
            unint64_t v22 = v51;
            if ((v27 & 0x100000000) != 0)
            {
LABEL_54:
              if ((v10 & 0x100000000) != 0) {
                goto LABEL_55;
              }
              goto LABEL_20;
            }
            goto LABEL_45;
          }
          if (!a2)
          {
            id v33 = (id)v26;
            int64_t v35 = (void *)v24;
            a1 = (unint64_t)v57;
            unint64_t v34 = v57;
            goto LABEL_51;
          }
          sub_1B63989B8(0, (unint64_t *)&qword_1EB980620);
          id v41 = (id)v26;
          id v42 = (id)a2;
          char v43 = sub_1B6E32358();

          a1 = (unint64_t)v57;
          sub_1B66505D0((void *)v24, (void *)v26, v27);
          unint64_t v10 = v58;
          uint64_t v17 = v56;
          uint64_t v16 = v13 + 56;
          uint64_t v18 = v55;
          unint64_t v22 = v51;
          if (v43)
          {
            if ((v27 & 0x100000000) != 0) {
              goto LABEL_54;
            }
LABEL_45:
            if ((v10 & 0x100000000) == 0 && v27 == v46) {
              goto LABEL_55;
            }
          }
        }
        else if (!v22 && *(void *)v23 == v54)
        {
LABEL_55:
          sub_1B6E33828();
          __break(1u);
          break;
        }
LABEL_20:
        a4 = (a4 + 1) & v17;
      }
      while (((*(void *)(v16 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
    }
  }
LABEL_56:
  uint64_t v44 = *v59;
  *(void *)(*v59 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v45 = *(void *)(v44 + 48) + 24 * a4;
  *(void *)uint64_t v45 = a1;
  *(void *)(v45 + 8) = a2;
  *(unsigned char *)(v45 + 20) = BYTE4(v10);
  *(_DWORD *)(v45 + 16) = v10;
  ++*(void *)(v44 + 16);
}

unint64_t sub_1B67EE918(unint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = HIDWORD(result);
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_15;
  }
  if (a3)
  {
    sub_1B67EC090();
  }
  else
  {
    if (v8 > v7)
    {
      unint64_t result = sub_1B67F02AC();
LABEL_15:
      uint64_t v16 = *v3;
      *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      uint64_t v17 = (_DWORD *)(*(void *)(v16 + 48) + 8 * a2);
      _DWORD *v17 = v5;
      v17[1] = v6;
      ++*(void *)(v16 + 16);
      return result;
    }
    sub_1B67F257C();
  }
  uint64_t v9 = *v3;
  sub_1B6E33918();
  sub_1B6E33958();
  sub_1B6E33958();
  unint64_t result = sub_1B6E33988();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v11 = ~v10;
  while (1)
  {
    unint64_t v12 = (int *)(*(void *)(v9 + 48) + 8 * a2);
    int v14 = *v12;
    int v13 = v12[1];
    if (v14 == v5 && v13 == v6) {
      break;
    }
    a2 = (a2 + 1) & v11;
    if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
      goto LABEL_15;
    }
  }
  unint64_t result = sub_1B6E33828();
  __break(1u);
  return result;
}

uint64_t sub_1B67EEA70(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1B67EC360();
  }
  else
  {
    if (v8 > v7)
    {
      unint64_t result = sub_1B67F0468();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      ++*(void *)(v25 + 16);
      return result;
    }
    sub_1B67F2818();
  }
  uint64_t v9 = *v3;
  sub_1B6E31798();
  sub_1B6E33918();
  sub_1B6E318B8();
  uint64_t v10 = sub_1B6E33988();
  unint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = sub_1B6E31798();
  uint64_t v14 = v13;
  if (v12 == sub_1B6E31798() && v14 == v15)
  {
LABEL_23:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      uint64_t v18 = ~v11;
      do
      {
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_22;
        }
        uint64_t v19 = sub_1B6E31798();
        uint64_t v21 = v20;
        if (v19 == sub_1B6E31798() && v21 == v22) {
          goto LABEL_23;
        }
        char v24 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
      }
      while ((v24 & 1) == 0);
    }
  }
  type metadata accessor for VFXTriggerType(0);
  unint64_t result = sub_1B6E33828();
  __break(1u);
  return result;
}

unint64_t sub_1B67EEC98(unint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1B67EC914();
    }
    else
    {
      if (v8 > v7)
      {
        unint64_t result = sub_1B67F07DC();
        goto LABEL_14;
      }
      sub_1B67F2D68();
    }
    uint64_t v9 = *v3;
    sub_1B6E33918();
    sub_1B68ED020((uint64_t)v17, v6);
    unint64_t result = sub_1B6E33988();
    uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      unint64_t v11 = *(void *)(*(void *)(v9 + 48) + 8 * a2);
      sub_1B62C6AA8(v11);
      char v12 = sub_1B690176C(v11, v6);
      unint64_t result = sub_1B62C6A70(v11);
      if (v12)
      {
LABEL_13:
        unint64_t result = sub_1B6E33828();
        __break(1u);
      }
      else
      {
        uint64_t v13 = ~v10;
        while (1)
        {
          a2 = (a2 + 1) & v13;
          if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
            break;
          }
          unint64_t v14 = *(void *)(*(void *)(v9 + 48) + 8 * a2);
          sub_1B62C6AA8(v14);
          char v15 = sub_1B690176C(v14, v6);
          unint64_t result = sub_1B62C6A70(v14);
          if (v15) {
            goto LABEL_13;
          }
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = v6;
  ++*(void *)(v16 + 16);
  return result;
}

uint64_t sub_1B67EEE24(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1B67ECBD8();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = sub_1B67F09B4();
        goto LABEL_14;
      }
      sub_1B67F3000();
    }
    uint64_t v8 = *v3;
    sub_1B6E33918();
    sub_1B6E33958();
    unint64_t result = sub_1B6E33988();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = *(void *)(v8 + 48);
      if (*(_DWORD *)(v10 + 4 * a2) == v5)
      {
LABEL_13:
        unint64_t result = sub_1B6E33828();
        __break(1u);
      }
      else
      {
        uint64_t v11 = ~v9;
        while (1)
        {
          a2 = (a2 + 1) & v11;
          if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
            break;
          }
          if (*(_DWORD *)(v10 + 4 * a2) == v5) {
            goto LABEL_13;
          }
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  ++*(void *)(v12 + 16);
  return result;
}

unint64_t sub_1B67EEF6C(unint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int v7 = result;
  unint64_t v8 = HIDWORD(result);
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1B67ECE90();
    }
    else
    {
      if (v10 > v9)
      {
        unint64_t result = sub_1B67F0B70();
        goto LABEL_18;
      }
      sub_1B67F3284();
    }
    uint64_t v11 = *v4;
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    sub_1B6E33928();
    unint64_t result = sub_1B6E33988();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    a3 = result & ~v12;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v13 = ~v12;
      while (1)
      {
        uint64_t v14 = *(void *)(v11 + 48) + 16 * a3;
        BOOL v15 = *(_DWORD *)v14 == v7 && *(_DWORD *)(v14 + 4) == v8;
        if (v15 && *(void *)(v14 + 8) == a2) {
          break;
        }
        a3 = (a3 + 1) & v13;
        if (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          goto LABEL_18;
        }
      }
      unint64_t result = sub_1B6E33828();
      __break(1u);
    }
  }
LABEL_18:
  uint64_t v16 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v17 = *(void *)(v16 + 48) + 16 * a3;
  *(_DWORD *)uint64_t v17 = v7;
  *(_DWORD *)(v17 + 4) = v8;
  *(void *)(v17 + 8) = a2;
  ++*(void *)(v16 + 16);
  return result;
}

unint64_t sub_1B67EF0F0(unint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = HIDWORD(result);
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_15;
  }
  if (a3)
  {
    sub_1B67ED1A8();
  }
  else
  {
    if (v8 > v7)
    {
      unint64_t result = sub_1B67F0D3C();
LABEL_15:
      uint64_t v16 = *v3;
      *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      uint64_t v17 = (_DWORD *)(*(void *)(v16 + 48) + 8 * a2);
      _DWORD *v17 = v5;
      v17[1] = v6;
      ++*(void *)(v16 + 16);
      return result;
    }
    sub_1B67F3560();
  }
  uint64_t v9 = *v3;
  sub_1B6E33918();
  sub_1B6E33958();
  sub_1B6E33958();
  unint64_t result = sub_1B6E33988();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v11 = ~v10;
  while (1)
  {
    uint64_t v12 = (int *)(*(void *)(v9 + 48) + 8 * a2);
    int v14 = *v12;
    int v13 = v12[1];
    if (v14 == v5 && v13 == v6) {
      break;
    }
    a2 = (a2 + 1) & v11;
    if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
      goto LABEL_15;
    }
  }
  unint64_t result = sub_1B6E33828();
  __break(1u);
  return result;
}

uint64_t sub_1B67EF248(uint64_t result, unint64_t a2, char a3)
{
  __int16 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1B67ED478();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = sub_1B67F0EF8();
        goto LABEL_38;
      }
      sub_1B67F37FC();
    }
    uint64_t v8 = *v3;
    sub_1B6E33918();
    uint64_t v9 = HIBYTE(v5);
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    sub_1B6E318B8();
    swift_bridgeObjectRelease();
    unint64_t result = sub_1B6E33988();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      uint64_t v12 = v5;
      while (2)
      {
        int v14 = (unsigned char *)(*(void *)(v8 + 48) + 2 * a2);
        uint64_t v15 = v14[1];
        unint64_t v16 = 0xE300000000000000;
        uint64_t v17 = 5459817;
        switch(*v14)
        {
          case 1:
            unint64_t v16 = 0xE500000000000000;
            uint64_t v17 = 0x534F63616DLL;
            break;
          case 2:
            unint64_t v16 = 0xE700000000000000;
            uint64_t v17 = 0x534F6863746177;
            break;
          case 3:
            unint64_t v16 = 0xE400000000000000;
            uint64_t v17 = 1397716596;
            break;
          default:
            break;
        }
        unint64_t v18 = 0xE300000000000000;
        uint64_t v19 = 5459817;
        switch(v12)
        {
          case 1:
            unint64_t v18 = 0xE500000000000000;
            if (v17 != 0x534F63616DLL) {
              goto LABEL_24;
            }
            goto LABEL_21;
          case 2:
            unint64_t v18 = 0xE700000000000000;
            uint64_t v19 = 0x534F6863746177;
            goto LABEL_20;
          case 3:
            unint64_t v18 = 0xE400000000000000;
            if (v17 != 1397716596) {
              goto LABEL_24;
            }
            goto LABEL_21;
          default:
LABEL_20:
            if (v17 != v19) {
              goto LABEL_24;
            }
LABEL_21:
            if (v16 == v18)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
LABEL_24:
              char v20 = sub_1B6E334B8();
              swift_bridgeObjectRelease();
              unint64_t result = swift_bridgeObjectRelease();
              if ((v20 & 1) == 0) {
                goto LABEL_11;
              }
            }
            unint64_t v21 = 0xE600000000000000;
            uint64_t v22 = 0x34365F363878;
            switch(v15)
            {
              case 1:
                unint64_t v21 = 0xE500000000000000;
                uint64_t v22 = 0x34366D7261;
                break;
              case 2:
                uint64_t v22 = 0x6534366D7261;
                break;
              case 3:
                unint64_t v21 = 0xE800000000000000;
                uint64_t v22 = 0x32335F34366D7261;
                break;
              default:
                break;
            }
            unint64_t v23 = 0xE600000000000000;
            uint64_t v24 = 0x34365F363878;
            switch(v9)
            {
              case 1:
                unint64_t v23 = 0xE500000000000000;
                if (v22 == 0x34366D7261) {
                  goto LABEL_34;
                }
                goto LABEL_10;
              case 2:
                uint64_t v24 = 0x6534366D7261;
                goto LABEL_33;
              case 3:
                unint64_t v23 = 0xE800000000000000;
                if (v22 == 0x32335F34366D7261) {
                  goto LABEL_34;
                }
                goto LABEL_10;
              default:
LABEL_33:
                if (v22 != v24) {
                  goto LABEL_10;
                }
LABEL_34:
                if (v21 == v23)
                {
                  swift_bridgeObjectRelease_n();
LABEL_39:
                  sub_1B6E33828();
                  __break(1u);
                  JUMPOUT(0x1B67EF6F0);
                }
LABEL_10:
                char v13 = sub_1B6E334B8();
                swift_bridgeObjectRelease();
                unint64_t result = swift_bridgeObjectRelease();
                if (v13) {
                  goto LABEL_39;
                }
                break;
            }
LABEL_11:
            a2 = (a2 + 1) & v11;
            if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2)) {
              continue;
            }
            goto LABEL_38;
        }
      }
    }
  }
LABEL_38:
  uint64_t v25 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_WORD *)(*(void *)(v25 + 48) + 2 * a2) = v27;
  ++*(void *)(v25 + 16);
  return result;
}

uint64_t sub_1B67EF750(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v30 = a1;
  uint64_t v6 = sub_1B6E31118();
  uint64_t v7 = *(void *)(v6 - 8);
  v9.n128_f64[0] = MEMORY[0x1F4188790](v6, v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v3 + 16);
  unint64_t v13 = *(void *)(*v3 + 24);
  __int16 v27 = v3;
  uint64_t v28 = v7;
  if (v13 > v12 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1B67ED928();
  }
  else
  {
    if (v13 > v12)
    {
      sub_1B67F128C();
LABEL_12:
      uint64_t v24 = v28;
      uint64_t v25 = *v27;
      *(void *)(v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v24 + 32))(*(void *)(v25 + 48) + *(void *)(v24 + 72) * a2, v30, v6, v9);
      ++*(void *)(v25 + 16);
      return result;
    }
    sub_1B67F3C44();
  }
  uint64_t v14 = *v3;
  sub_1B67E9628((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
  uint64_t v15 = sub_1B6E315A8();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  uint64_t v29 = v14;
  uint64_t v17 = v14 + 56;
  if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v18 = ~v16;
  unint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
  uint64_t v20 = v7 + 16;
  uint64_t v19 = v21;
  uint64_t v22 = *(void *)(v20 + 56);
  while (1)
  {
    v19(v11, *(void *)(v29 + 48) + v22 * a2, v6);
    sub_1B67E9628(&qword_1EB97D9B0, MEMORY[0x1E4F27990]);
    char v23 = sub_1B6E31708();
    (*(void (**)(char *, uint64_t))(v20 - 8))(v11, v6);
    if (v23) {
      break;
    }
    a2 = (a2 + 1) & v18;
    if (((*(void *)(v17 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
      goto LABEL_12;
    }
  }
  uint64_t result = sub_1B6E33828();
  __break(1u);
  return result;
}

uint64_t sub_1B67EF9E8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1B67EDCD8();
    }
    else
    {
      if (v9 > v8)
      {
        uint64_t result = sub_1B67F1524();
        goto LABEL_14;
      }
      sub_1B67F3FBC();
    }
    uint64_t v10 = *v4;
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t result = sub_1B6E33988();
    uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
    a3 = result & ~v11;
    if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v12 = *(void *)(v10 + 48);
      if (*(void *)(v12 + 16 * a3) == v7)
      {
LABEL_13:
        uint64_t result = sub_1B6E33828();
        __break(1u);
      }
      else
      {
        uint64_t v13 = ~v11;
        while (1)
        {
          a3 = (a3 + 1) & v13;
          if (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
            break;
          }
          if (*(void *)(v12 + 16 * a3) == v7) {
            goto LABEL_13;
          }
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v15 = (uint64_t *)(*(void *)(v14 + 48) + 16 * a3);
  *uint64_t v15 = v7;
  v15[1] = a2;
  ++*(void *)(v14 + 16);
  return result;
}

uint64_t sub_1B67EFB40()
{
  return sub_1B67EFF10(&qword_1EB980678, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB560]);
}

uint64_t sub_1B67EFB5C()
{
  uint64_t v1 = v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1EB980640, (uint64_t (*)(void))sub_1B67F72A8, (uint64_t)&type metadata for CommandQueue.DirtyPropagation, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  __int16 v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v16 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    if (!v17)
    {
      uint64_t v16 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v16);
      if (!v17)
      {
        uint64_t v16 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v16);
        if (!v17)
        {
          uint64_t v16 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v17 = *(void *)(v6 + 8 * v16);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v18 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v18 + (v16 << 6);
    uint64_t v9 = v16;
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
  }
  while (v13 - 5 != v9)
  {
    unint64_t v17 = *(void *)(v2 + 96 + 8 * v9++);
    if (v17)
    {
      uint64_t v16 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67EFD18()
{
  uint64_t v1 = v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1E9DD0940, (uint64_t (*)(void))sub_1B67FAB80, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  __int16 v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v22 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    if (!v23)
    {
      uint64_t v22 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v22);
      if (!v23)
      {
        uint64_t v22 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v22);
        if (!v23)
        {
          uint64_t v22 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v23 = *(void *)(v6 + 8 * v22);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v22 << 6);
    uint64_t v9 = v22;
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    unint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    LOBYTE(v17) = *(unsigned char *)(v17 + 24);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(unsigned char *)(v21 + 8) = v19;
    *(void *)(v21 + 16) = v20;
    *(unsigned char *)(v21 + 24) = v17;
    sub_1B62C6AA8(v18);
  }
  while (v13 - 5 != v9)
  {
    unint64_t v23 = *(void *)(v2 + 96 + 8 * v9++);
    if (v23)
    {
      uint64_t v22 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67EFF10(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1B67FBBE8(0, a1, a2, a3, MEMORY[0x1E4FBB9A8]);
  uint64_t v5 = *v3;
  uint64_t v6 = sub_1B6E32858();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_26;
  }
  unint64_t v8 = (void *)(v6 + 56);
  uint64_t v9 = v5 + 56;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 56 + 8 * v10) {
    memmove(v8, (const void *)(v5 + 56), 8 * v10);
  }
  uint64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    uint64_t v19 = v12 + 1;
    if (v12 + 1 >= v16) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v9 + 8 * v19);
    if (!v20)
    {
      uint64_t v19 = v12 + 2;
      if (v12 + 2 >= v16) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v9 + 8 * v19);
      if (!v20)
      {
        uint64_t v19 = v12 + 3;
        if (v12 + 3 >= v16) {
          goto LABEL_26;
        }
        unint64_t v20 = *(void *)(v9 + 8 * v19);
        if (!v20)
        {
          uint64_t v19 = v12 + 4;
          if (v12 + 4 >= v16) {
            goto LABEL_26;
          }
          unint64_t v20 = *(void *)(v9 + 8 * v19);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v20));
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v18 = v21 + (v19 << 6);
    uint64_t v12 = v19;
LABEL_12:
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = *(void *)(*(void *)(v5 + 48) + 8 * v18);
  }
  while (v16 - 5 != v12)
  {
    unint64_t v20 = *(void *)(v5 + 96 + 8 * v12++);
    if (v20)
    {
      uint64_t v19 = v12 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v4 = v7;
  return result;
}

uint64_t sub_1B67F00B4()
{
  uint64_t v1 = v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1E9DD0AB0, (uint64_t (*)(void))sub_1B66507E8, (uint64_t)&type metadata for GraphScheduling, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v23 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    if (!v24)
    {
      uint64_t v23 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v23);
      if (!v24)
      {
        uint64_t v23 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v23);
        if (!v24)
        {
          uint64_t v23 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v24 = *(void *)(v6 + 8 * v23);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v23 << 6);
    uint64_t v9 = v23;
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    unint64_t v18 = *(void **)v17;
    uint64_t v19 = *(void **)(v17 + 8);
    uint64_t v20 = *(unsigned __int8 *)(v17 + 20);
    uint64_t v21 = *(unsigned int *)(v17 + 16);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v22 = v18;
    *(void *)(v22 + 8) = v19;
    *(_DWORD *)(v22 + 16) = v21;
    *(unsigned char *)(v22 + 20) = v20;
    sub_1B6650588(v18, v19, v21 | (v20 << 32));
  }
  while (v13 - 5 != v9)
  {
    unint64_t v24 = *(void *)(v2 + 96 + 8 * v9++);
    if (v24)
    {
      uint64_t v23 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F02AC()
{
  uint64_t v1 = v0;
  sub_1B67FBCA0(0, &qword_1EB97D870, (uint64_t (*)(void))sub_1B67CB1A4, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v16 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    if (!v17)
    {
      uint64_t v16 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v16);
      if (!v17)
      {
        uint64_t v16 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v16);
        if (!v17)
        {
          uint64_t v16 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v17 = *(void *)(v6 + 8 * v16);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v18 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v18 + (v16 << 6);
    uint64_t v9 = v16;
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  while (v13 - 5 != v9)
  {
    unint64_t v17 = *(void *)(v2 + 96 + 8 * v9++);
    if (v17)
    {
      uint64_t v16 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F0468()
{
  uint64_t v1 = v0;
  sub_1B67F7498();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v19 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    if (!v20)
    {
      uint64_t v19 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v19);
      if (!v20)
      {
        uint64_t v19 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v19);
        if (!v20)
        {
          uint64_t v19 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v19);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v19 << 6);
    uint64_t v9 = v19;
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id v18 = v17;
  }
  while (v13 - 5 != v9)
  {
    unint64_t v20 = *(void *)(v2 + 96 + 8 * v9++);
    if (v20)
    {
      uint64_t v19 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F0608()
{
  uint64_t v1 = v0;
  sub_1B67FBBE8(0, (unint64_t *)&unk_1EB980668, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v21 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    if (!v22)
    {
      uint64_t v21 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v21);
      if (!v22)
      {
        uint64_t v21 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v21);
        if (!v22)
        {
          uint64_t v21 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v22 = *(void *)(v6 + 8 * v21);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v9 = v21;
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v20 = v19;
    v20[1] = v18;
    swift_bridgeObjectRetain();
  }
  while (v13 - 5 != v9)
  {
    unint64_t v22 = *(void *)(v2 + 96 + 8 * v9++);
    if (v22)
    {
      uint64_t v21 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F07DC()
{
  uint64_t v1 = v0;
  sub_1B67FBCA0(0, &qword_1E9DD0598, (uint64_t (*)(void))sub_1B67F7D10, (uint64_t)&type metadata for ScriptLocation, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v18 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    if (!v19)
    {
      uint64_t v18 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v18);
      if (!v19)
      {
        uint64_t v18 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v18);
        if (!v19)
        {
          uint64_t v18 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v19 = *(void *)(v6 + 8 * v18);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v18 << 6);
    uint64_t v9 = v18;
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1B62C6AA8(v17);
  }
  while (v13 - 5 != v9)
  {
    unint64_t v19 = *(void *)(v2 + 96 + 8 * v9++);
    if (v19)
    {
      uint64_t v18 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F09B4()
{
  uint64_t v1 = v0;
  sub_1B67FBCA0(0, &qword_1EB980650, (uint64_t (*)(void))sub_1B67FB04C, (uint64_t)&type metadata for EffectID, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v16 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    if (!v17)
    {
      uint64_t v16 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v16);
      if (!v17)
      {
        uint64_t v16 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v16);
        if (!v17)
        {
          uint64_t v16 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v17 = *(void *)(v6 + 8 * v16);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v18 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v18 + (v16 << 6);
    uint64_t v9 = v16;
LABEL_12:
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
  }
  while (v13 - 5 != v9)
  {
    unint64_t v17 = *(void *)(v2 + 96 + 8 * v9++);
    if (v17)
    {
      uint64_t v16 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F0B70()
{
  uint64_t v1 = v0;
  sub_1B67FBCA0(0, &qword_1E9DD0958, (uint64_t (*)(void))sub_1B67FABD4, (uint64_t)&type metadata for EntityInstance, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    if (!v21)
    {
      uint64_t v20 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v20);
      if (!v21)
      {
        uint64_t v20 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v20);
        if (!v21)
        {
          uint64_t v20 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v21 = *(void *)(v6 + 8 * v20);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v22 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v22 + (v20 << 6);
    uint64_t v9 = v20;
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
  }
  while (v13 - 5 != v9)
  {
    unint64_t v21 = *(void *)(v2 + 96 + 8 * v9++);
    if (v21)
    {
      uint64_t v20 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F0D3C()
{
  uint64_t v1 = v0;
  sub_1B67FBCA0(0, &qword_1EB94A1A8, (uint64_t (*)(void))sub_1B67FAC28, (uint64_t)&type metadata for EmitterReference, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v16 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    if (!v17)
    {
      uint64_t v16 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v16);
      if (!v17)
      {
        uint64_t v16 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v16);
        if (!v17)
        {
          uint64_t v16 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v17 = *(void *)(v6 + 8 * v16);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v18 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v18 + (v16 << 6);
    uint64_t v9 = v16;
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  while (v13 - 5 != v9)
  {
    unint64_t v17 = *(void *)(v2 + 96 + 8 * v9++);
    if (v17)
    {
      uint64_t v16 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F0EF8()
{
  uint64_t v1 = v0;
  sub_1B67FBCA0(0, &qword_1E9DD0848, (uint64_t (*)(void))sub_1B67F7B4C, (uint64_t)&type metadata for Target, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v16 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    if (!v17)
    {
      uint64_t v16 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v16);
      if (!v17)
      {
        uint64_t v16 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v16);
        if (!v17)
        {
          uint64_t v16 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v17 = *(void *)(v6 + 8 * v16);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v18 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v18 + (v16 << 6);
    uint64_t v9 = v16;
LABEL_12:
    *(_WORD *)(*(void *)(v4 + 48) + 2 * v15) = *(_WORD *)(*(void *)(v2 + 48) + 2 * v15);
  }
  while (v13 - 5 != v9)
  {
    unint64_t v17 = *(void *)(v2 + 96 + 8 * v9++);
    if (v17)
    {
      uint64_t v16 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F10B4()
{
  uint64_t v1 = v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1EB980658, (uint64_t (*)(void))sub_1B67F7774, (uint64_t)&type metadata for Renderer.UnscheduledCommandBuffer, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v16 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    if (!v17)
    {
      uint64_t v16 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v16);
      if (!v17)
      {
        uint64_t v16 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v16);
        if (!v17)
        {
          uint64_t v16 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v17 = *(void *)(v6 + 8 * v16);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v9 = v16;
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    swift_unknownObjectRetain();
  }
  while (v13 - 5 != v9)
  {
    unint64_t v17 = *(void *)(v2 + 96 + 8 * v9++);
    if (v17)
    {
      uint64_t v16 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F128C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B67FB588();
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1B6E32858();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_28;
  }
  uint64_t v10 = (void *)(v8 + 56);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  unint64_t v24 = v1;
  uint64_t v25 = (const void *)(v7 + 56);
  if (v9 != v7 || (unint64_t)v10 >= v7 + 56 + 8 * v11) {
    memmove(v10, v25, 8 * v11);
  }
  uint64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 56);
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  int64_t v23 = v26 - 5;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    uint64_t v20 = v13 + 1;
    if (v13 + 1 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *((void *)v25 + v20);
    if (!v21)
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *((void *)v25 + v20);
      if (!v21)
      {
        uint64_t v20 = v13 + 3;
        if (v13 + 3 >= v26) {
          goto LABEL_26;
        }
        unint64_t v21 = *((void *)v25 + v20);
        if (!v21)
        {
          uint64_t v20 = v13 + 4;
          if (v13 + 4 >= v26) {
            goto LABEL_26;
          }
          unint64_t v21 = *((void *)v25 + v20);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v16 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    uint64_t v13 = v20;
LABEL_12:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v19, v2);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v9 + 48) + v19, v6, v2);
  }
  while (v23 != v13)
  {
    unint64_t v21 = *(void *)(v7 + 8 * v13++ + 96);
    if (v21)
    {
      uint64_t v20 = v13 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  uint64_t v1 = v24;
LABEL_28:
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_1B67F1524()
{
  uint64_t v1 = v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1E9DD0730, (uint64_t (*)(void))sub_1B67F8D84, (uint64_t)&type metadata for VertexLayout, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B6E32858();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_26;
  }
  uint64_t v5 = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  }
  uint64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    uint64_t v21 = v9 + 1;
    if (v9 + 1 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    if (!v22)
    {
      uint64_t v21 = v9 + 2;
      if (v9 + 2 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v21);
      if (!v22)
      {
        uint64_t v21 = v9 + 3;
        if (v9 + 3 >= v13) {
          goto LABEL_26;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v21);
        if (!v22)
        {
          uint64_t v21 = v9 + 4;
          if (v9 + 4 >= v13) {
            goto LABEL_26;
          }
          unint64_t v22 = *(void *)(v6 + 8 * v21);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v9 = v21;
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v20 = v19;
    v20[1] = v18;
    swift_retain();
  }
  while (v13 - 5 != v9)
  {
    unint64_t v22 = *(void *)(v2 + 96 + 8 * v9++);
    if (v22)
    {
      uint64_t v21 = v9 + 4;
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F1704()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBBE8(0, &qword_1EB980678, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB560], MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v25 = v1;
  uint64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v5 + 1;
    if (v5 + 1 >= v10) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    if (!v16)
    {
      uint64_t v15 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v15);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v5 = v15;
LABEL_22:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t v18 = sub_1B6E33908();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v11 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v12 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v17;
    ++*(void *)(v4 + 16);
  }
  while (v10 - 5 != v5)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v5++ + 96);
    if (v16)
    {
      uint64_t v15 = v5 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release();
  uint64_t v1 = v25;
LABEL_31:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F1964()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1EB980640, (uint64_t (*)(void))sub_1B67F72A8, (uint64_t)&type metadata for CommandQueue.DirtyPropagation, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v5 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v2 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v3 + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v6 << 6);
      goto LABEL_22;
    }
    uint64_t v17 = v6 + 1;
    if (v6 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    if (!v18)
    {
      uint64_t v17 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v17);
      if (!v18)
      {
        uint64_t v17 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v17);
        if (!v18)
        {
          uint64_t v17 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_29;
          }
          unint64_t v18 = *(void *)(v7 + 8 * v17);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v10 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    uint64_t v6 = v17;
LABEL_22:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v16);
    uint64_t v20 = *v19;
    *(void *)&long long v4 = v19[1];
    long long v28 = v4;
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v21 = sub_1B6E33988();
    uint64_t v22 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (v24 + 1 == v25) {
          unint64_t v24 = 0;
        }
        else {
          ++v24;
        }
        uint64_t v26 = *(void *)(v12 + 8 * v24);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v24 << 6);
    }
    *((void *)&v4 + 1) = *((void *)&v28 + 1);
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    unint64_t v14 = (void *)(*(void *)(v5 + 48) + 16 * v13);
    *unint64_t v14 = v20;
    v14[1] = v28;
    ++*(void *)(v5 + 16);
  }
  while (v11 - 5 != v6)
  {
    unint64_t v18 = *(void *)(v2 + 8 * v6++ + 96);
    if (v18)
    {
      uint64_t v17 = v6 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release();
  uint64_t v1 = v0;
LABEL_31:
  *uint64_t v1 = v5;
  return result;
}

uint64_t sub_1B67F1C10()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1E9DD0940, (uint64_t (*)(void))sub_1B67FAB80, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_33;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v29 = v0;
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  uint64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v10 + 1;
    if (v10 + 1 >= v8) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    if (!v16)
    {
      uint64_t v15 = v10 + 2;
      if (v10 + 2 >= v8) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v10 + 3;
        if (v10 + 3 >= v8) {
          goto LABEL_31;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v10 + 4;
          if (v10 + 4 >= v8) {
            goto LABEL_31;
          }
          unint64_t v16 = *(void *)(v30 + 8 * v15);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v10 = v15;
LABEL_22:
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v14;
    unint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    int v21 = *(unsigned __int8 *)(v17 + 24);
    sub_1B6E33918();
    sub_1B62C6AA8(v18);
    sub_1B68ED020((uint64_t)v31, v18);
    sub_1B6E33938();
    sub_1B6E33938();
    if (v21 != 1) {
      sub_1B6E33928();
    }
    uint64_t v22 = sub_1B6E33988();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v26 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (v25 + 1 == v26) {
          unint64_t v25 = 0;
        }
        else {
          ++v25;
        }
        uint64_t v27 = *(void *)(v9 + 8 * v25);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v25 << 6);
    }
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 32 * v11;
    *(void *)uint64_t v12 = v18;
    *(unsigned char *)(v12 + 8) = v19;
    *(void *)(v12 + 16) = v20;
    *(unsigned char *)(v12 + 24) = v21;
    ++*(void *)(v4 + 16);
  }
  while (v8 - 5 != v10)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v10++ + 96);
    if (v16)
    {
      uint64_t v15 = v10 + 4;
      goto LABEL_21;
    }
  }
LABEL_31:
  uint64_t result = swift_release_n();
  uint64_t v1 = v29;
LABEL_33:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F1F28()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBBE8(0, &qword_1E9DD0660, MEMORY[0x1E4FBB058], MEMORY[0x1E4FBB060], MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  unint64_t v25 = v1;
  uint64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v5 + 1;
    if (v5 + 1 >= v10) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    if (!v16)
    {
      uint64_t v15 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v15);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v5 = v15;
LABEL_22:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t v18 = sub_1B6E33908();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v11 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v12 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v17;
    ++*(void *)(v4 + 16);
  }
  while (v10 - 5 != v5)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v5++ + 96);
    if (v16)
    {
      uint64_t v15 = v5 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release();
  uint64_t v1 = v25;
LABEL_31:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F2188()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1E9DD0AB0, (uint64_t (*)(void))sub_1B66507E8, (uint64_t)&type metadata for GraphScheduling, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_40;
  }
  uint64_t v32 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v34 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  uint64_t v10 = 0;
  int64_t v35 = v8;
  unint64_t v31 = v8 - 5;
  uint64_t v33 = v2;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      uint64_t v14 = v10;
      unint64_t v15 = v13 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v14 = v10 + 1;
    if (v10 + 1 >= v35) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v34 + 8 * v14);
    if (!v16)
    {
      uint64_t v14 = v10 + 2;
      if (v10 + 2 >= v35) {
        goto LABEL_38;
      }
      unint64_t v16 = *(void *)(v34 + 8 * v14);
      if (!v16)
      {
        uint64_t v14 = v10 + 3;
        if (v10 + 3 >= v35) {
          goto LABEL_38;
        }
        unint64_t v16 = *(void *)(v34 + 8 * v14);
        if (!v16)
        {
          uint64_t v14 = v10 + 4;
          if (v10 + 4 >= v35) {
            goto LABEL_38;
          }
          unint64_t v16 = *(void *)(v34 + 8 * v14);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v15 = __clz(__rbit64(v16)) + (v14 << 6);
LABEL_22:
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void **)v17;
    uint64_t v19 = *(void **)(v17 + 8);
    unsigned int v20 = *(unsigned __int8 *)(v17 + 20);
    unint64_t v21 = *(unsigned int *)(v17 + 16) | ((unint64_t)*(unsigned __int8 *)(v17 + 20) << 32);
    sub_1B6E33918();
    if (v20 >> 6)
    {
      if (v20 >> 6 == 1)
      {
        sub_1B6E33928();
        sub_1B6E31798();
        id v36 = v18;
        sub_1B6650588(v18, v19, v21);
        id v22 = v19;
        sub_1B6E318B8();
        swift_bridgeObjectRelease();
        sub_1B6E33938();
        if (v19)
        {
          id v23 = v22;
          sub_1B6E32368();
        }
        uint64_t v2 = v33;
        sub_1B6E33938();
        if ((v21 & 0x100000000) == 0) {
          sub_1B6E33958();
        }
      }
      else
      {
        sub_1B6E33928();
      }
    }
    else
    {
      sub_1B6E33928();
      sub_1B6E33938();
    }
    uint64_t v24 = sub_1B6E33988();
    uint64_t v25 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v28 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (v27 + 1 == v28) {
          unint64_t v27 = 0;
        }
        else {
          ++v27;
        }
        uint64_t v29 = *(void *)(v9 + 8 * v27);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v27 << 6);
    }
    uint64_t v10 = v14;
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
    *(void *)uint64_t v12 = v18;
    *(void *)(v12 + 8) = v19;
    *(unsigned char *)(v12 + 20) = BYTE4(v21);
    *(_DWORD *)(v12 + 16) = v21;
    ++*(void *)(v4 + 16);
  }
  while (v31 != v10)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v10++ + 96);
    if (v16)
    {
      uint64_t v14 = v10 + 4;
      goto LABEL_21;
    }
  }
LABEL_38:
  uint64_t result = swift_release_n();
  uint64_t v1 = v32;
LABEL_40:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F257C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1EB97D870, (uint64_t (*)(void))sub_1B67CB1A4, (uint64_t)&type metadata for Entity, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v5 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v2 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v3 + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v6 << 6);
      goto LABEL_22;
    }
    uint64_t v16 = v6 + 1;
    if (v6 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v16);
    if (!v17)
    {
      uint64_t v16 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v17 = *(void *)(v7 + 8 * v16);
      if (!v17)
      {
        uint64_t v16 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v7 + 8 * v16);
        if (!v17)
        {
          uint64_t v16 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_29;
          }
          unint64_t v17 = *(void *)(v7 + 8 * v16);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v6 = v16;
LABEL_22:
    *(void *)&long long v4 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    long long v25 = v4;
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v18 = sub_1B6E33988();
    uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v12 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v13 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *((void *)&v4 + 1) = *((void *)&v25 + 1);
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v5 + 48) + 8 * v13) = v25;
    ++*(void *)(v5 + 16);
  }
  while (v11 - 5 != v6)
  {
    unint64_t v17 = *(void *)(v2 + 8 * v6++ + 96);
    if (v17)
    {
      uint64_t v16 = v6 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release();
  uint64_t v1 = v0;
LABEL_31:
  *uint64_t v1 = v5;
  return result;
}

uint64_t sub_1B67F2818()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67F7498();
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  unint64_t v26 = v0;
  uint64_t v27 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  unint64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  uint64_t v10 = 0;
  int64_t v28 = v8;
  unint64_t v25 = v8 - 5;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v14 = v10 + 1;
    if (v10 + 1 >= v28) {
      goto LABEL_29;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v14);
    if (!v15)
    {
      uint64_t v14 = v10 + 2;
      if (v10 + 2 >= v28) {
        goto LABEL_29;
      }
      unint64_t v15 = *(void *)(v27 + 8 * v14);
      if (!v15)
      {
        uint64_t v14 = v10 + 3;
        if (v10 + 3 >= v28) {
          goto LABEL_29;
        }
        unint64_t v15 = *(void *)(v27 + 8 * v14);
        if (!v15)
        {
          uint64_t v14 = v10 + 4;
          if (v10 + 4 >= v28) {
            goto LABEL_29;
          }
          unint64_t v15 = *(void *)(v27 + 8 * v14);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    uint64_t v10 = v14;
LABEL_22:
    uint64_t v16 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    sub_1B6E31798();
    sub_1B6E33918();
    id v17 = v16;
    sub_1B6E318B8();
    uint64_t v18 = sub_1B6E33988();
    swift_bridgeObjectRelease();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v9 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v11 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  while (v25 != v10)
  {
    unint64_t v15 = *(void *)(v2 + 8 * v10++ + 96);
    if (v15)
    {
      uint64_t v14 = v10 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release_n();
  uint64_t v1 = v26;
LABEL_31:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F2AC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBBE8(0, (unint64_t *)&unk_1EB980668, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v27 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  uint64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v10 + 1;
    if (v10 + 1 >= v8) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v27 + 8 * v15);
    if (!v16)
    {
      uint64_t v15 = v10 + 2;
      if (v10 + 2 >= v8) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v27 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v10 + 3;
        if (v10 + 3 >= v8) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v27 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v10 + 4;
          if (v10 + 4 >= v8) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v27 + 8 * v15);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v10 = v15;
LABEL_22:
    id v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1B6E33918();
    swift_bridgeObjectRetain();
    sub_1B6E318B8();
    uint64_t v20 = sub_1B6E33988();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v24 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (v23 + 1 == v24) {
          unint64_t v23 = 0;
        }
        else {
          ++v23;
        }
        uint64_t v25 = *(void *)(v9 + 8 * v23);
      }
      while (v25 == -1);
      unint64_t v11 = __clz(__rbit64(~v25)) + (v23 << 6);
    }
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v18;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
  }
  while (v8 - 5 != v10)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v10++ + 96);
    if (v16)
    {
      uint64_t v15 = v10 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_31:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F2D68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1E9DD0598, (uint64_t (*)(void))sub_1B67F7D10, (uint64_t)&type metadata for ScriptLocation, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  uint64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v11 + 1;
    if (v11 + 1 >= v9) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    if (!v16)
    {
      uint64_t v15 = v11 + 2;
      if (v11 + 2 >= v9) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v11 + 3;
        if (v11 + 3 >= v9) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v11 + 4;
          if (v11 + 4 >= v9) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v15);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v11 = v15;
LABEL_22:
    unint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_1B6E33918();
    sub_1B62C6AA8(v17);
    sub_1B68ED020((uint64_t)v25, v17);
    uint64_t v18 = sub_1B6E33988();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v10 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v12 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v17;
    ++*(void *)(v4 + 16);
  }
  while (v9 - 5 != v11)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v11++ + 96);
    if (v16)
    {
      uint64_t v15 = v11 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_31:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F3000()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1EB980650, (uint64_t (*)(void))sub_1B67FB04C, (uint64_t)&type metadata for EffectID, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v5 + 1;
    if (v5 + 1 >= v10) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    if (!v16)
    {
      uint64_t v15 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v15);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v5 = v15;
LABEL_22:
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    sub_1B6E33918();
    sub_1B6E33958();
    uint64_t v18 = sub_1B6E33988();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v11 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v12 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v17;
    ++*(void *)(v4 + 16);
  }
  while (v10 - 5 != v5)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v5++ + 96);
    if (v16)
    {
      uint64_t v15 = v5 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release();
  uint64_t v1 = v0;
LABEL_31:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F3284()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1E9DD0958, (uint64_t (*)(void))sub_1B67FABD4, (uint64_t)&type metadata for EntityInstance, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  int64_t v28 = v0;
  uint64_t v29 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  swift_retain();
  uint64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v10 + 1;
    if (v10 + 1 >= v8) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v15);
    if (!v16)
    {
      uint64_t v15 = v10 + 2;
      if (v10 + 2 >= v8) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v29 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v10 + 3;
        if (v10 + 3 >= v8) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v29 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v10 + 4;
          if (v10 + 4 >= v8) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v29 + 8 * v15);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v10 = v15;
LABEL_22:
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v14;
    int v18 = *(_DWORD *)v17;
    int v19 = *(_DWORD *)(v17 + 4);
    uint64_t v20 = *(void *)(v17 + 8);
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    sub_1B6E33928();
    uint64_t v21 = sub_1B6E33988();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v25 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (v24 + 1 == v25) {
          unint64_t v24 = 0;
        }
        else {
          ++v24;
        }
        uint64_t v26 = *(void *)(v9 + 8 * v24);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v24 << 6);
    }
    *(void *)(v9 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
    *(_DWORD *)uint64_t v12 = v18;
    *(_DWORD *)(v12 + 4) = v19;
    *(void *)(v12 + 8) = v20;
    ++*(void *)(v4 + 16);
  }
  while (v8 - 5 != v10)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v10++ + 96);
    if (v16)
    {
      uint64_t v15 = v10 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release_n();
  uint64_t v1 = v28;
LABEL_31:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F3560()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1EB94A1A8, (uint64_t (*)(void))sub_1B67FAC28, (uint64_t)&type metadata for EmitterReference, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v5 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v2 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v3 + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v6 << 6);
      goto LABEL_22;
    }
    uint64_t v16 = v6 + 1;
    if (v6 + 1 >= v11) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v16);
    if (!v17)
    {
      uint64_t v16 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_29;
      }
      unint64_t v17 = *(void *)(v7 + 8 * v16);
      if (!v17)
      {
        uint64_t v16 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v7 + 8 * v16);
        if (!v17)
        {
          uint64_t v16 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_29;
          }
          unint64_t v17 = *(void *)(v7 + 8 * v16);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v6 = v16;
LABEL_22:
    *(void *)&long long v4 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    long long v25 = v4;
    sub_1B6E33918();
    sub_1B6E33958();
    sub_1B6E33958();
    uint64_t v18 = sub_1B6E33988();
    uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v12 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v13 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *((void *)&v4 + 1) = *((void *)&v25 + 1);
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v5 + 48) + 8 * v13) = v25;
    ++*(void *)(v5 + 16);
  }
  while (v11 - 5 != v6)
  {
    unint64_t v17 = *(void *)(v2 + 8 * v6++ + 96);
    if (v17)
    {
      uint64_t v16 = v6 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release();
  uint64_t v1 = v0;
LABEL_31:
  *uint64_t v1 = v5;
  return result;
}

uint64_t sub_1B67F37FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, &qword_1E9DD0848, (uint64_t (*)(void))sub_1B67F7B4C, (uint64_t)&type metadata for Target, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  if (!*(void *)(v2 + 16)) {
    goto LABEL_21;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  uint64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    uint64_t v12 = v9 + 1;
    if (v9 + 1 >= v8) {
      goto LABEL_20;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    if (!v13)
    {
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v8) {
        goto LABEL_20;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v12);
      if (!v13)
      {
        uint64_t v12 = v9 + 3;
        if (v9 + 3 >= v8) {
          goto LABEL_20;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v12);
        if (!v13)
        {
          uint64_t v12 = v9 + 4;
          if (v9 + 4 >= v8) {
            goto LABEL_20;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v12);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    uint64_t v9 = v12;
LABEL_6:
    sub_1B67EDFB0(*(_WORD *)(*(void *)(v2 + 48) + 2 * v11), v3);
  }
  while (v8 - 5 != v9)
  {
    unint64_t v13 = *(void *)(v2 + 96 + 8 * v9++);
    if (v13)
    {
      uint64_t v12 = v9 + 4;
      goto LABEL_19;
    }
  }
LABEL_20:
  swift_release();
LABEL_21:
  uint64_t result = swift_release();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_1B67F39B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1EB980658, (uint64_t (*)(void))sub_1B67F7774, (uint64_t)&type metadata for Renderer.UnscheduledCommandBuffer, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v5 + 1;
    if (v5 + 1 >= v10) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    if (!v16)
    {
      uint64_t v15 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v15);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v5 = v15;
LABEL_22:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v18 = sub_1B6E33988();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (v21 + 1 == v22) {
          unint64_t v21 = 0;
        }
        else {
          ++v21;
        }
        uint64_t v23 = *(void *)(v11 + 8 * v21);
      }
      while (v23 == -1);
      unint64_t v12 = __clz(__rbit64(~v23)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v17;
    ++*(void *)(v4 + 16);
    swift_unknownObjectRetain();
  }
  while (v10 - 5 != v5)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v5++ + 96);
    if (v16)
    {
      uint64_t v15 = v5 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release();
  uint64_t v1 = v0;
LABEL_31:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F3C44()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v0;
  sub_1B67FB588();
  uint64_t v8 = sub_1B6E32868();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  unint64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v38 = v3;
  uint64_t v15 = v8 + 56;
  unint64_t v16 = (void (**)(unint64_t, char *, uint64_t))(v3 + 32);
  swift_retain();
  uint64_t v17 = 0;
  int64_t v36 = v14;
  unint64_t v33 = v14 - 5;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    uint64_t v21 = v17 + 1;
    if (v17 + 1 >= v36) {
      goto LABEL_29;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v21);
    if (!v22)
    {
      uint64_t v21 = v17 + 2;
      if (v17 + 2 >= v36) {
        goto LABEL_29;
      }
      unint64_t v22 = *(void *)(v35 + 8 * v21);
      if (!v22)
      {
        uint64_t v21 = v17 + 3;
        if (v17 + 3 >= v36) {
          goto LABEL_29;
        }
        unint64_t v22 = *(void *)(v35 + 8 * v21);
        if (!v22)
        {
          uint64_t v21 = v17 + 4;
          if (v17 + 4 >= v36) {
            goto LABEL_29;
          }
          unint64_t v22 = *(void *)(v35 + 8 * v21);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    uint64_t v17 = v21;
LABEL_22:
    uint64_t v23 = v7;
    uint64_t v24 = *(void *)(v7 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v6, v24 + v25 * v20, v2);
    sub_1B67E9628((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    uint64_t v26 = sub_1B6E315A8();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = v26 & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v15 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v30 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (v29 + 1 == v30) {
          unint64_t v29 = 0;
        }
        else {
          ++v29;
        }
        uint64_t v31 = *(void *)(v15 + 8 * v29);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v29 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*v16)(*(void *)(v9 + 48) + v18 * v25, v6, v2);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v23;
  }
  while (v33 != v17)
  {
    unint64_t v22 = *(void *)(v7 + 8 * v17++ + 96);
    if (v22)
    {
      uint64_t v21 = v17 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release_n();
  uint64_t v1 = v34;
LABEL_31:
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_1B67F3FBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1B67FBCA0(0, (unint64_t *)&unk_1E9DD0730, (uint64_t (*)(void))sub_1B67F8D84, (uint64_t)&type metadata for VertexLayout, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1B6E32868();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_31;
  }
  uint64_t v5 = 0;
  uint64_t v27 = v2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    uint64_t v15 = v5 + 1;
    if (v5 + 1 >= v9) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v27 + 8 * v15);
    if (!v16)
    {
      uint64_t v15 = v5 + 2;
      if (v5 + 2 >= v9) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v27 + 8 * v15);
      if (!v16)
      {
        uint64_t v15 = v5 + 3;
        if (v5 + 3 >= v9) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v27 + 8 * v15);
        if (!v16)
        {
          uint64_t v15 = v5 + 4;
          if (v5 + 4 >= v9) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v27 + 8 * v15);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    uint64_t v5 = v15;
LABEL_22:
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1B6E33918();
    sub_1B6E33928();
    uint64_t v20 = sub_1B6E33988();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v24 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (v23 + 1 == v24) {
          unint64_t v23 = 0;
        }
        else {
          ++v23;
        }
        uint64_t v25 = *(void *)(v10 + 8 * v23);
      }
      while (v25 == -1);
      unint64_t v11 = __clz(__rbit64(~v25)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *uint64_t v12 = v19;
    v12[1] = v18;
    ++*(void *)(v4 + 16);
    swift_retain();
  }
  while (v9 - 5 != v5)
  {
    unint64_t v16 = *(void *)(v2 + 8 * v5++ + 96);
    if (v16)
    {
      uint64_t v15 = v5 + 4;
      goto LABEL_21;
    }
  }
LABEL_29:
  uint64_t result = swift_release();
  uint64_t v1 = v0;
LABEL_31:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1B67F4264@<X0>(void *a1@<X8>)
{
  uint64_t result = swift_getAtKeyPath();
  *a1 = v3;
  return result;
}

uint64_t sub_1B67F42A4@<X0>(void *a1@<X8>)
{
  uint64_t result = swift_getAtKeyPath();
  *a1 = v3;
  return result;
}

void *sub_1B67F42E8(uint64_t a1)
{
  return sub_1B67F640C(a1, (void (*)(void))sub_1B67F8F84, (uint64_t (*)(void))sub_1B638403C);
}

void *sub_1B67F4314(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FB914();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (void *)(a1 + 36);
  do
  {
    uint64_t v5 = *v4;
    unsigned __int8 v6 = *((unsigned char *)v4 - 4);
    unint64_t v7 = sub_1B6383F34(v6);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    *(unsigned char *)(v3[6] + v7) = v6;
    *(void *)(v3[7] + 8 * v7) = v5;
    ++v3[2];
    uint64_t v4 = (void *)((char *)v4 + 12);
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F43D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F81A0();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = a1 + 56;
  do
  {
    uint64_t v5 = *(void *)(v4 - 24);
    long long v13 = *(_OWORD *)(v4 + 8);
    long long v14 = *(_OWORD *)(v4 - 8);
    long long v12 = *(_OWORD *)(v4 + 24);
    uint64_t v6 = *(void *)(v4 + 40);
    uint64_t v7 = *(void *)(v4 + 48);
    char v8 = *(unsigned char *)(v4 + 56);
    unint64_t v9 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
    *(void *)(v3[6] + 8 * v9) = v5;
    uint64_t v10 = v3[7] + 80 * v9;
    *(_OWORD *)uint64_t v10 = v14;
    *(_OWORD *)(v10 + 16) = v13;
    *(_OWORD *)(v10 + 32) = v12;
    *(void *)(v10 + 48) = v6;
    *(void *)(v10 + 56) = v7;
    *(unsigned char *)(v10 + 64) = v8;
    ++v3[2];
    v4 += 96;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F44E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F918C();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    v4 += 2;
    unint64_t v7 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    uint64_t v8 = 8 * v7;
    *(void *)(v3[6] + v8) = v5;
    *(void *)(v3[7] + v8) = v6;
    ++v3[2];
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F45A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FBFF0();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (char *)(a1 + 32);
  do
  {
    memcpy(v8, v4, sizeof(v8));
    uint64_t v5 = v8[0];
    unint64_t v6 = sub_1B62C1A30(v8[0]);
    *(void *)((char *)v3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
    *(void *)(v3[6] + 8 * v6) = v5;
    memcpy((void *)(v3[7] + 808 * v6), &v8[1], 0x328uLL);
    ++v3[2];
    sub_1B67FC058(v8);
    v4 += 816;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F46A8(uint64_t a1)
{
  return sub_1B62BDDD4(a1, (void (*)(void))sub_1B67F858C, (uint64_t (*)(uint64_t))sub_1B62C1A30);
}

void *sub_1B67F46D4(uint64_t a1)
{
  return sub_1B67F4EF0(a1, (unint64_t *)&unk_1E9DD5330, (void (*)(uint64_t))type metadata accessor for AuthoringNode);
}

void *sub_1B67F46F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F73CC();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  do
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    v4 += 3;
    unint64_t v8 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
    *(void *)(v3[6] + 8 * v8) = v5;
    unint64_t v9 = (void *)(v3[7] + 16 * v8);
    *unint64_t v9 = v6;
    v9[1] = v7;
    ++v3[2];
    swift_bridgeObjectRetain();
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F47C0(uint64_t a1)
{
  return sub_1B67F4820(a1, (unint64_t *)&qword_1E9DD0630, (unint64_t *)&qword_1E9DD0638, &qword_1EB980E90, MEMORY[0x1E4FBC280]);
}

void *sub_1B67F47F0(uint64_t a1)
{
  return sub_1B67F4820(a1, (unint64_t *)&qword_1E9DD0620, (unint64_t *)&qword_1E9DD0628, (unint64_t *)&qword_1EB980EB0, MEMORY[0x1E4FBC2A8]);
}

void *sub_1B67F4820(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F8450(0, a2, a3, a4, a5);
  uint64_t v7 = (void *)sub_1B6E32C58();
  unint64_t v8 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v9 = *(v8 - 1);
    uint64_t v10 = *v8;
    unint64_t v11 = sub_1B62C1A30(v9);
    *(void *)((char *)v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v11;
    uint64_t v12 = 8 * v11;
    *(void *)(v7[6] + v12) = v9;
    *(void *)(v7[7] + v12) = v10;
    ++v7[2];
    swift_bridgeObjectRetain();
    v8 += 2;
    --v5;
  }
  while (v5);
  return v7;
}

void *sub_1B67F48EC(uint64_t a1)
{
  return sub_1B67F494C(a1, &qword_1E9DD0AE8, (unint64_t *)&unk_1E9DD0AF0, type metadata accessor for GraphScript, (unint64_t *)&qword_1E9DCDBE8);
}

void *sub_1B67F491C(uint64_t a1)
{
  return sub_1B67F494C(a1, (unint64_t *)&unk_1E9DD0AD0, (unint64_t *)&unk_1E9DD5350, type metadata accessor for TriggerScript, (unint64_t *)&qword_1E9DD0AE0);
}

void *sub_1B67F494C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  uint64_t v8 = (uint64_t)a2;
  sub_1B67FBE2C(0, a2, a3, a4);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v13);
  unint64_t v30 = (unsigned __int8 *)&v27 - v14;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FBDA4(0, a5, a3, a4);
  unint64_t v16 = (void *)sub_1B6E32C58();
  unint64_t v29 = &v30[*(int *)(v11 + 48)];
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v28 = *(void *)(v12 + 72);
  do
  {
    uint64_t v18 = v30;
    sub_1B67FBEA8(v17, (uint64_t)v30, v8, (uint64_t)a3, (uint64_t)a4, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B67FBE2C);
    unsigned __int8 v19 = *v18;
    unint64_t v20 = sub_1B6383F34(*v18);
    uint64_t v21 = v8;
    unint64_t v22 = v20;
    *(void *)((char *)v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    *(unsigned char *)(v16[6] + v20) = v19;
    uint64_t v23 = v16[7];
    sub_1B67FBF1C(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff);
    uint64_t v25 = v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22;
    uint64_t v8 = v21;
    sub_1B67F9E98((uint64_t)v29, v25, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff);
    ++v16[2];
    v17 += v28;
    --v15;
  }
  while (v15);
  return v16;
}

void *sub_1B67F4B64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FBC38();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  do
  {
    uint64_t v5 = *((void *)v4 - 1);
    long long v6 = *v4;
    uint64_t v4 = (_OWORD *)((char *)v4 + 24);
    unint64_t v7 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    *(void *)(v3[6] + 8 * v7) = v5;
    *(_OWORD *)(v3[7] + 16 * v7) = v6;
    ++v3[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F4C40(uint64_t a1)
{
  return sub_1B629A284(a1, (void (*)(void))sub_1B67FBB54, (uint64_t (*)(uint64_t))sub_1B62C1A30);
}

void *sub_1B67F4C6C(uint64_t a1)
{
  return sub_1B67F4C9C(a1, (unint64_t *)&qword_1E9DD0A78, (unint64_t *)&unk_1E9DD0A80, &qword_1E9DD0FA0, (void (*)(uint64_t))type metadata accessor for Node);
}

void *sub_1B67F4C9C(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FB2F8(0, a2, a3, a4, a5);
  unint64_t v7 = (void *)sub_1B6E32C58();
  uint64_t v8 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v9 = *(v8 - 1);
    uint64_t v10 = *v8;
    unint64_t v11 = sub_1B62C1A30(v9);
    *(void *)((char *)v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v11;
    uint64_t v12 = 8 * v11;
    *(void *)(v7[6] + v12) = v9;
    *(void *)(v7[7] + v12) = v10;
    ++v7[2];
    swift_bridgeObjectRetain();
    v8 += 2;
    --v5;
  }
  while (v5);
  return v7;
}

void *sub_1B67F4D68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FB978();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (uint64_t *)(a1 + 64);
  do
  {
    uint64_t v5 = *(v4 - 4);
    uint64_t v18 = *(v4 - 2);
    uint64_t v19 = *(v4 - 3);
    uint64_t v6 = v4[1];
    uint64_t v16 = *v4;
    uint64_t v17 = *(v4 - 1);
    uint64_t v7 = v4[2];
    uint64_t v8 = v4[3];
    uint64_t v9 = v4[5];
    uint64_t v15 = v4[4];
    uint64_t v10 = v4[6];
    uint64_t v11 = v4[7];
    unint64_t v12 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
    *(void *)(v3[6] + 8 * v12) = v5;
    uint64_t v13 = (uint64_t *)(v3[7] + 88 * v12);
    uint64_t *v13 = v19;
    v13[1] = v18;
    v13[2] = v17;
    v13[3] = v16;
    v13[4] = v6;
    v13[5] = v7;
    v13[6] = v8;
    v13[7] = v15;
    v13[8] = v9;
    v13[9] = v10;
    v13[10] = v11;
    ++v3[2];
    sub_1B67FBA04(v19);
    v4 += 12;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F4EA0(uint64_t a1)
{
  return sub_1B67F4C9C(a1, (unint64_t *)&qword_1E9DD09C0, (unint64_t *)&unk_1E9DD0F70, (unint64_t *)&unk_1E9DD09D0, (void (*)(uint64_t))type metadata accessor for AuthoringNode);
}

void *sub_1B67F4ED0(uint64_t a1)
{
  return sub_1B67F4EF0(a1, (unint64_t *)&unk_1E9DD0B00, (void (*)(uint64_t))type metadata accessor for Node);
}

void *sub_1B67F4EF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F78A0(0, a2, a3);
  uint64_t v5 = (void *)sub_1B6E32C58();
  uint64_t v6 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v7 = *(v6 - 1);
    uint64_t v8 = *v6;
    unint64_t v9 = sub_1B62C1A30(v7);
    *(void *)((char *)v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
    uint64_t v10 = 8 * v9;
    *(void *)(v5[6] + v10) = v7;
    *(void *)(v5[7] + v10) = v8;
    ++v5[2];
    swift_retain();
    v6 += 2;
    --v3;
  }
  while (v3);
  return v5;
}

void *sub_1B67F4FCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F7434();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (_OWORD *)(a1 + 64);
  do
  {
    int v5 = *((_DWORD *)v4 - 2);
    char v6 = *((unsigned char *)v4 - 4);
    uint64_t v7 = *((void *)v4 - 4);
    uint64_t v8 = (void *)*((void *)v4 - 3);
    uint64_t v9 = *((void *)v4 - 2);
    long long v10 = *v4;
    v4 += 3;
    unint64_t v11 = sub_1B62BE38C(v7);
    *(void *)((char *)v3 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v11;
    *(void *)(v3[6] + 8 * v11) = v7;
    uint64_t v12 = v3[7] + 40 * v11;
    *(void *)uint64_t v12 = v8;
    *(void *)(v12 + 8) = v9;
    *(_DWORD *)(v12 + 16) = v5;
    *(unsigned char *)(v12 + 20) = v6;
    *(_OWORD *)(v12 + 24) = v10;
    ++v3[2];
    id v13 = v8;
    swift_retain();
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F50E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F9944();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = a1 + 32;
  do
  {
    sub_1B67F7830(v4, (uint64_t)&v8, &qword_1E9DD0860);
    uint64_t v5 = v8;
    unint64_t v6 = sub_1B62C1A30(v8);
    *(void *)((char *)v3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
    *(void *)(v3[6] + 8 * v6) = v5;
    sub_1B67F99AC((uint64_t)&v9, v3[7] + 8 * v6);
    ++v3[2];
    v4 += 16;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F51F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F96D4();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (char *)(a1 + 32);
  do
  {
    memcpy(v8, v4, 0x341uLL);
    uint64_t v5 = v8[0];
    unint64_t v6 = sub_1B62C1A30(v8[0]);
    *(void *)((char *)v3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
    *(void *)(v3[6] + 8 * v6) = v5;
    sub_1B67FBF80((uint64_t)&v8[1], v3[7] + 832 * v6, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    ++v3[2];
    sub_1B67F9760((uint64_t)v8);
    v4 += 840;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F531C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F9648();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = a1 + 56;
  do
  {
    uint64_t v5 = *(void *)(v4 - 24);
    uint64_t v17 = *(void *)(v4 - 8);
    uint64_t v18 = *(void **)(v4 - 16);
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t v7 = *(void *)(v4 + 16);
    uint64_t v8 = *(void *)(v4 + 24);
    uint64_t v9 = *(void *)(v4 + 32);
    uint64_t v15 = *(void *)(v4 + 40);
    uint64_t v16 = *(void *)v4;
    long long v10 = *(void **)(v4 + 48);
    char v11 = *(unsigned char *)(v4 + 56);
    unint64_t v12 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
    *(void *)(v3[6] + 8 * v12) = v5;
    uint64_t v13 = v3[7] + 80 * v12;
    *(void *)uint64_t v13 = v18;
    *(void *)(v13 + 8) = v17;
    *(void *)(v13 + 16) = v16;
    *(void *)(v13 + 24) = v6;
    *(void *)(v13 + 32) = v7;
    *(void *)(v13 + 40) = v8;
    *(void *)(v13 + 48) = v9;
    *(void *)(v13 + 56) = v15;
    *(void *)(v13 + 64) = v10;
    *(unsigned char *)(v13 + 72) = v11;
    ++v3[2];
    sub_1B67A2324(v18, v17, v16, v6, v7, v8, v9, v15, v10, v11);
    v4 += 88;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F5454(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F95E0();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = a1 + 48;
  do
  {
    uint64_t v5 = *(void *)(v4 - 16);
    uint64_t v15 = *(void *)(v4 - 8);
    uint64_t v6 = *(void *)v4;
    uint64_t v7 = *(void *)(v4 + 8);
    uint64_t v8 = *(void *)(v4 + 16);
    uint64_t v9 = *(void *)(v4 + 24);
    uint64_t v10 = *(void *)(v4 + 32);
    char v11 = *(unsigned char *)(v4 + 40);
    unint64_t v12 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
    *(void *)(v3[6] + 8 * v12) = v5;
    uint64_t v13 = v3[7] + 56 * v12;
    *(void *)uint64_t v13 = v15;
    *(void *)(v13 + 8) = v6;
    *(void *)(v13 + 16) = v7;
    *(void *)(v13 + 24) = v8;
    *(void *)(v13 + 32) = v9;
    *(void *)(v13 + 40) = v10;
    *(unsigned char *)(v13 + 48) = v11;
    ++v3[2];
    sub_1B629EBB8(v15, v6, v7, v8, v9, v10, v11);
    v4 += 64;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F5574(uint64_t a1)
{
  return sub_1B62BDDD4(a1, (void (*)(void))sub_1B67F9578, (uint64_t (*)(uint64_t))sub_1B62C1A30);
}

void *sub_1B67F55A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F9510();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (long long *)(a1 + 40);
  do
  {
    uint64_t v5 = *((void *)v4 - 1);
    long long v17 = v4[8];
    long long v18 = v4[9];
    int v19 = *((_DWORD *)v4 + 40);
    long long v13 = v4[4];
    long long v14 = v4[5];
    long long v15 = v4[6];
    long long v16 = v4[7];
    long long v9 = *v4;
    long long v10 = v4[1];
    long long v11 = v4[2];
    long long v12 = v4[3];
    unint64_t v6 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
    *(void *)(v3[6] + 8 * v6) = v5;
    uint64_t v7 = v3[7] + 164 * v6;
    *(_OWORD *)uint64_t v7 = v9;
    *(_OWORD *)(v7 + 16) = v10;
    *(_OWORD *)(v7 + 64) = v13;
    *(_OWORD *)(v7 + 80) = v14;
    *(_OWORD *)(v7 + 32) = v11;
    *(_OWORD *)(v7 + 48) = v12;
    *(_DWORD *)(v7 + 160) = v19;
    *(_OWORD *)(v7 + 128) = v17;
    *(_OWORD *)(v7 + 144) = v18;
    *(_OWORD *)(v7 + 96) = v15;
    *(_OWORD *)(v7 + 112) = v16;
    ++v3[2];
    v4 += 11;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F56CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F78A0(0, &qword_1EB980748, (void (*)(uint64_t))sub_1B67F8728);
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (void *)(a1 + 56);
  do
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *v4;
    long long v10 = *((_OWORD *)v4 - 1);
    unint64_t v7 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    *(void *)(v3[6] + 8 * v7) = v5;
    uint64_t v8 = v3[7] + 24 * v7;
    *(_OWORD *)uint64_t v8 = v10;
    *(void *)(v8 + 16) = v6;
    ++v3[2];
    v4 += 4;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F57DC(uint64_t a1)
{
  return sub_1B67F5A8C(a1, (void (*)(void))sub_1B67FA0F0, (uint64_t)&unk_1E9DD0878, (unint64_t *)&unk_1EB9854C0, (uint64_t (*)(uint64_t))type metadata accessor for TextureCache);
}

void *sub_1B67F5818(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FA088();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    unint64_t v7 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    uint64_t v8 = 8 * v7;
    *(void *)(v3[6] + v8) = v5;
    *(void *)(v3[7] + v8) = v6;
    ++v3[2];
    swift_bridgeObjectRetain();
    v4 += 2;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F58E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B63966C0(0, (unint64_t *)&unk_1E9DD50E0, (void (*)(uint64_t))sub_1B67F9F08, (void (*)(void))sub_1B67F9F84);
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (long long *)(a1 + 32);
  do
  {
    long long v5 = v4[7];
    long long v27 = v4[6];
    long long v28 = v5;
    long long v29 = v4[8];
    long long v6 = v4[1];
    long long v21 = *v4;
    long long v22 = v6;
    long long v7 = v4[3];
    long long v23 = v4[2];
    long long v24 = v7;
    long long v8 = v4[5];
    long long v25 = v4[4];
    long long v26 = v8;
    uint64_t v9 = *((void *)&v21 + 1);
    char v10 = v21;
    unint64_t v11 = sub_1B69FB0D8(v21, *((uint64_t *)&v21 + 1));
    *(void *)((char *)v3 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v11;
    uint64_t v12 = v3[6] + 16 * v11;
    *(unsigned char *)uint64_t v12 = v10;
    *(void *)(v12 + 8) = v9;
    long long v13 = (_OWORD *)(v3[7] + (v11 << 7));
    long long v14 = v24;
    long long v15 = v25;
    long long v16 = v23;
    _OWORD *v13 = v22;
    long long v17 = v26;
    long long v18 = v27;
    long long v19 = v29;
    v13[6] = v28;
    v13[7] = v19;
    v13[4] = v17;
    v13[5] = v18;
    v13[2] = v14;
    v13[3] = v15;
    v13[1] = v16;
    ++v3[2];
    sub_1B67F9FD8((uint64_t)&v21);
    v4 += 9;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F5A50(uint64_t a1)
{
  return sub_1B67F5A8C(a1, (void (*)(void))sub_1B67F9E00, (uint64_t)&unk_1E9DD0868, (unint64_t *)&unk_1EB9854E0, (uint64_t (*)(uint64_t))type metadata accessor for DepthStencilCache);
}

void *sub_1B67F5A8C(uint64_t a1, void (*a2)(void), uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  a2(0);
  char v10 = (void *)sub_1B6E32C58();
  uint64_t v11 = a1 + 32;
  do
  {
    sub_1B67FBEA8(v11, (uint64_t)&v15, a3, (uint64_t)a4, (uint64_t)a5, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1B67FA188);
    uint64_t v12 = v15;
    unint64_t v13 = sub_1B62C1A30(v15);
    *(void *)((char *)v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v13;
    *(void *)(v10[6] + 8 * v13) = v12;
    sub_1B67F9E98((uint64_t)&v16, v10[7] + 8 * v13, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
    ++v10[2];
    v11 += 16;
    --v5;
  }
  while (v5);
  return v10;
}

void *sub_1B67F5BC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F9D30();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (long long *)(a1 + 64);
  do
  {
    char v5 = *((unsigned char *)v4 - 24);
    uint64_t v6 = *((void *)v4 + 8);
    *(void *)&long long v14 = *((void *)v4 - 4);
    BYTE8(v14) = v5;
    long long v7 = *v4;
    long long v15 = *(v4 - 1);
    long long v16 = v7;
    *(void *)long long v17 = *((void *)v4 + 2);
    *(_OWORD *)&v17[8] = *(long long *)((char *)v4 + 24);
    *(_OWORD *)&v17[24] = *(long long *)((char *)v4 + 40);
    *(void *)&v17[40] = *((void *)v4 + 7);
    unint64_t v8 = sub_1B69FB158((uint64_t)&v14);
    *(void *)((char *)v3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
    uint64_t v9 = (_OWORD *)(v3[6] + 96 * v8);
    long long v10 = *(_OWORD *)v17;
    v9[2] = v16;
    v9[3] = v10;
    long long v11 = *(_OWORD *)&v17[32];
    v9[4] = *(_OWORD *)&v17[16];
    _OWORD v9[5] = v11;
    long long v12 = v15;
    *uint64_t v9 = v14;
    v9[1] = v12;
    *(void *)(v3[7] + 8 * v8) = v6;
    ++v3[2];
    swift_unknownObjectRetain();
    uint64_t v4 = (long long *)((char *)v4 + 104);
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F5CEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FA840();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (unint64_t *)(a1 + 48);
  do
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    unint64_t v7 = *v4;
    v4 += 3;
    unint64_t v8 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
    *(void *)(v3[6] + 8 * v8) = v5;
    uint64_t v9 = (void *)(v3[7] + 16 * v8);
    *uint64_t v9 = v6;
    v9[1] = v7;
    ++v3[2];
    sub_1B67C52A4(v7);
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F5DB8(uint64_t a1)
{
  return sub_1B634DE2C(a1, (void (*)(void))sub_1B67FB740);
}

void *sub_1B67F5DD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F7BA0();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (unint64_t *)(a1 + 56);
  do
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    unint64_t v7 = *v4;
    uint64_t v8 = *((unsigned int *)v4 - 6);
    uint64_t v9 = *((unsigned int *)v4 - 5);
    unint64_t v10 = sub_1B69FB434(v8 | (v9 << 32), v5);
    *(void *)((char *)v3 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
    uint64_t v11 = v3[6] + 16 * v10;
    *(_DWORD *)uint64_t v11 = v8;
    *(_DWORD *)(v11 + 4) = v9;
    *(void *)(v11 + 8) = v5;
    long long v12 = (uint64_t *)(v3[7] + 16 * v10);
    *long long v12 = v6;
    v12[1] = v7;
    ++v3[2];
    sub_1B67F7C58(v6, v7);
    v4 += 4;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F5EC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F8044();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    unint64_t v7 = sub_1B69FB4CC(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    uint64_t v8 = 8 * v7;
    *(void *)(v3[6] + v8) = v5;
    *(void *)(v3[7] + v8) = v6;
    ++v3[2];
    swift_retain();
    v4 += 2;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F5F8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F865C();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  do
  {
    uint64_t v6 = *(v4 - 1);
    uint64_t v5 = *v4;
    uint64_t v7 = *(v4 - 2);
    unint64_t v8 = sub_1B62BE38C(v7);
    *(void *)((char *)v3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
    *(void *)(v3[6] + 8 * v8) = v7;
    uint64_t v9 = (void *)(v3[7] + 16 * v8);
    *uint64_t v9 = v6;
    v9[1] = v5;
    ++v3[2];
    swift_bridgeObjectRetain();
    v4 += 3;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F6064(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F84BC();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  do
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = (void *)*(v4 - 1);
    uint64_t v7 = *v4;
    v4 += 3;
    unint64_t v8 = sub_1B69FB654(v5);
    *(void *)((char *)v3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
    *(void *)(v3[6] + 8 * v8) = v5;
    uint64_t v9 = (void *)(v3[7] + 16 * v8);
    *uint64_t v9 = v6;
    v9[1] = v7;
    ++v3[2];
    id v10 = v6;
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F612C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F8A60();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (unsigned char *)(a1 + 40);
  do
  {
    uint64_t v5 = *((void *)v4 - 1);
    char v6 = *v4;
    v4 += 16;
    unint64_t v7 = sub_1B69FB654(v5);
    *(void *)((char *)v3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
    *(void *)(v3[6] + 8 * v7) = v5;
    *(unsigned char *)(v3[7] + v7) = v6;
    ++v3[2];
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F61EC(uint64_t a1)
{
  return sub_1B67F6244(a1, (void (*)(void))sub_1B67F89C4, (uint64_t (*)(uint64_t))sub_1B69FB654);
}

void *sub_1B67F6218(uint64_t a1)
{
  return sub_1B67F6244(a1, (void (*)(void))sub_1B67F8928, (uint64_t (*)(uint64_t))sub_1B69FB654);
}

void *sub_1B67F6244(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  a2(0);
  char v6 = (void *)sub_1B6E32C58();
  unint64_t v7 = (unsigned char *)(a1 + 40);
  do
  {
    uint64_t v8 = *((void *)v7 - 1);
    char v9 = *v7;
    v7 += 16;
    unint64_t v10 = a3(v8);
    *(void *)((char *)v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
    *(void *)(v6[6] + 8 * v10) = v8;
    *(unsigned char *)(v6[7] + v10) = v9;
    ++v6[2];
    --v3;
  }
  while (v3);
  return v6;
}

void *sub_1B67F6310(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67FAFE4();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (unint64_t *)(a1 + 48);
  do
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    unint64_t v7 = *v4;
    v4 += 3;
    unint64_t v8 = sub_1B6378C64(v5);
    *(void *)((char *)v3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
    *(void *)(v3[6] + 8 * v8) = v5;
    char v9 = (uint64_t *)(v3[7] + 16 * v8);
    *char v9 = v6;
    v9[1] = v7;
    ++v3[2];
    sub_1B62FFBB0(v6, v7);
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F63E0(uint64_t a1)
{
  return sub_1B67F640C(a1, (void (*)(void))sub_1B67FC220, (uint64_t (*)(void))sub_1B638403C);
}

void *sub_1B67F640C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  a2(0);
  uint64_t v6 = (void *)sub_1B6E32C58();
  unint64_t v7 = (void *)(a1 + 40);
  do
  {
    uint64_t v8 = *v7;
    unsigned __int8 v9 = *((unsigned char *)v7 - 8);
    unint64_t v10 = a3(v9);
    *(void *)((char *)v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
    *(unsigned char *)(v6[6] + v10) = v9;
    *(void *)(v6[7] + 8 * v10) = v8;
    ++v6[2];
    swift_bridgeObjectRetain();
    v7 += 2;
    --v3;
  }
  while (v3);
  return v6;
}

void *sub_1B67F64E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC868];
  }
  sub_1B67F9124();
  uint64_t v3 = (void *)sub_1B6E32C58();
  uint64_t v4 = (unsigned char *)(a1 + 64);
  do
  {
    uint64_t v5 = *((void *)v4 - 4);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = *((void *)v4 - 1);
    char v8 = *v4;
    v4 += 48;
    unint64_t v9 = sub_1B62C1A30(v5);
    *(void *)((char *)v3 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v9;
    *(void *)(v3[6] + 8 * v9) = v5;
    uint64_t v10 = v3[7] + 32 * v9;
    *(void *)uint64_t v10 = v6;
    *(void *)(v10 + 8) = v7;
    *(unsigned char *)(v10 + 16) = v8;
    ++v3[2];
    --v1;
  }
  while (v1);
  return v3;
}

void *sub_1B67F65B8(uint64_t a1)
{
  return sub_1B62BC3B4(a1, (void (*)(void))sub_1B67F85F4, (uint64_t (*)(uint64_t))sub_1B62C1A30);
}

id sub_1B67F65E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t *a8, uint64_t *a9, void *a10, unsigned __int8 a11)
{
  type metadata accessor for EntityManager();
  swift_allocObject();
  uint64_t v14 = sub_1B6299098(0x53726F46706D6554, 0xED0000676E697661, 1, 0);
  uint64_t v15 = **(void **)(v14 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  long long v17 = sub_1B62FF544(MEMORY[0x1E4FBC860]);
  type metadata accessor for RemapContext();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 24) = sub_1B62FF544(v16);
  long long v19 = sub_1B67DE64C(v16, (void (*)(void))sub_1B67FB174);
  swift_bridgeObjectRelease();
  *(void *)(v18 + 24) = v17;
  *(void *)(v18 + 32) = v19;
  *(unsigned char *)(v18 + 16) = 0;
  swift_retain();
  swift_retain();
  sub_1B69E2F54(a1, a1, v18);
  swift_release();
  swift_release();
  char v45 = 1;
  sub_1B6B1FB1C(v18, a1, 0x100000000uLL, 0, v15);
  if (*(unsigned char *)(a3 + 24) != 1) {
    goto LABEL_8;
  }
  id v20 = a2;
  if (a2)
  {
    type metadata accessor for ShaderFileSystem();
    uint64_t inited = swift_initStackObject();
    uint64_t v22 = qword_1EB97DC28;
    id v20 = a2;
    if (v22 != -1) {
      swift_once();
    }
    uint64_t v39 = qword_1EB997A18;
    int v40 = 0;
    char v41 = 2;
    uint64_t v42 = 0;
    char v43 = 2;
    uint64_t v44 = 0;
    swift_retain();
    sub_1B63AA054(1, (uint64_t)&v34);
    swift_release();
    int v23 = v35;
    char v24 = v36;
    uint64_t v25 = v38;
    uint64_t v26 = v37 | 4;
    *(void *)(inited + 16) = v34;
    *(_DWORD *)(inited + 24) = v23;
    *(unsigned char *)(inited + 28) = v24;
    *(void *)(inited + 32) = v26;
    *(unsigned char *)(inited + 40) = 2;
    *(void *)(inited + 48) = v25;
    sub_1B6981D7C(v14);
    sub_1B62CA064((uint64_t)&v34);
  }
  sub_1B664CCC0();
  if (v11)
  {
    swift_release();
  }
  else
  {
LABEL_8:
    id v20 = a10;
    sub_1B6872640(v14, 1);
    sub_1B6874F74(v14, 1, 1);
    sub_1B67E1E90(v14, a4, a5, a6, a7, a8, a9, a10, a11);
    swift_release();
    if (!v11)
    {
      id v20 = *(id *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      return v20;
    }
  }
  swift_release();
  return v20;
}

id sub_1B67F68F0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B67FBF1C(0, &qword_1E9DD0A38, (uint64_t (*)(uint64_t))sub_1B67FB7DC, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  *(void *)(inited + 32) = a2;
  *(void *)(inited + 40) = a3;
  *(void *)(inited + 48) = a1;
  id v7 = a1;
  sub_1B67DEEDC(inited);
  id v8 = objc_allocWithZone(MEMORY[0x1E4F28CF0]);
  sub_1B63989B8(0, &qword_1EB9804F0);
  unint64_t v9 = (void *)sub_1B6E314B8();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initDirectoryWithFileWrappers_, v9);

  id v11 = objc_msgSend(v7, sel_fileWrappers);
  if (v11)
  {
    long long v12 = v11;
    uint64_t v13 = sub_1B6E314C8();

    if (*(void *)(v13 + 16) && (uint64_t v14 = sub_1B62B2CE0(0x6977732E65646F63, 0xEA00000000007466), (v15 & 1) != 0))
    {
      id v16 = *(id *)(*(void *)(v13 + 56) + 8 * v14);
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_removeFileWrapper_, v16);
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      long long v17 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_setPreferredFilename_, v17);

      id v18 = objc_msgSend(v10, sel_addFileWrapper_, v16);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  id v19 = objc_msgSend(v7, sel_fileWrappers);
  if (v19)
  {
    id v20 = v19;
    uint64_t v21 = sub_1B6E314C8();

    if (*(void *)(v21 + 16) && (uint64_t v22 = sub_1B62B2CE0(0x7070632E65646F63, 0xE800000000000000), (v23 & 1) != 0))
    {
      id v24 = *(id *)(*(void *)(v21 + 56) + 8 * v22);
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_removeFileWrapper_, v24);
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      uint64_t v25 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_setPreferredFilename_, v25);

      id v26 = objc_msgSend(v10, sel_addFileWrapper_, v24);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  id v27 = objc_msgSend(v7, sel_fileWrappers);
  if (v27)
  {
    long long v28 = v27;
    uint64_t v29 = sub_1B6E314C8();

    if (*(void *)(v29 + 16) && (uint64_t v30 = sub_1B62B2CE0(0x74656D2E65646F63, 0xEA00000000006C61), (v31 & 1) != 0))
    {
      id v32 = *(id *)(*(void *)(v29 + 56) + 8 * v30);
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_removeFileWrapper_, v32);
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      unint64_t v33 = (void *)sub_1B6E31768();
      swift_bridgeObjectRelease();
      objc_msgSend(v32, sel_setPreferredFilename_, v33);

      id v34 = objc_msgSend(v10, sel_addFileWrapper_, v32);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v10;
}

unint64_t sub_1B67F6D90()
{
  unint64_t result = qword_1E9DD04E0;
  if (!qword_1E9DD04E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD04E0);
  }
  return result;
}

uint64_t sub_1B67F6DE4@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 24);
  return result;
}

unsigned char *sub_1B67F6DF4(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 24) = *result;
  return result;
}

uint64_t sub_1B67F6E04@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 25);
  return result;
}

unsigned char *sub_1B67F6E14(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 25) = *result;
  return result;
}

uint64_t sub_1B67F6E24@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 26);
  return result;
}

unsigned char *sub_1B67F6E34(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 26) = *result;
  return result;
}

uint64_t sub_1B67F6E44@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 27);
  return result;
}

unsigned char *sub_1B67F6E54(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(*(void *)a2 + 27) = *result;
  return result;
}

uint64_t sub_1B67F6E64@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B67F6E74(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 32) = *a1;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for VFXSaver()
{
  return self;
}

uint64_t method lookup function for VFXSaver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VFXSaver);
}

uint64_t dispatch thunk of VFXSaver.isSavingForExport.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of VFXSaver.isSavingForExport.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of VFXSaver.isSavingForExport.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of VFXSaver.layout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of VFXSaver.layout.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of VFXSaver.layout.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of VFXSaver.saveBindingsMetadata.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of VFXSaver.saveBindingsMetadata.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of VFXSaver.saveBindingsMetadata.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of VFXSaver.saveAsPlist.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of VFXSaver.saveAsPlist.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of VFXSaver.saveAsPlist.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of VFXSaver.targetsToPrecompile.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of VFXSaver.targetsToPrecompile.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of VFXSaver.targetsToPrecompile.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of VFXSaver.__allocating_init(world:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of VFXSaver.save(projectName:documentUUID:isVFX2:versionHistory:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of VFXSaver.save2(projectName:documentUUID:isVFX2:versionHistory:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

unsigned char *storeEnumTagSinglePayload for VFXSaver.Layout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67F7270);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFXSaver.Layout()
{
  return &type metadata for VFXSaver.Layout;
}

unint64_t sub_1B67F72A8()
{
  unint64_t result = qword_1EB97DE08;
  if (!qword_1EB97DE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DE08);
  }
  return result;
}

void sub_1B67F72FC()
{
  if (!qword_1EB9807F8)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9807F8);
    }
  }
}

void sub_1B67F7364()
{
  if (!qword_1EB980778)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980778);
    }
  }
}

void sub_1B67F73CC()
{
  if (!qword_1EB9807E0)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9807E0);
    }
  }
}

void sub_1B67F7434()
{
  if (!qword_1E9DD0500)
  {
    sub_1B67CB1A4();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0500);
    }
  }
}

void sub_1B67F7498()
{
  if (!qword_1E9DD0508)
  {
    type metadata accessor for VFXTriggerType(255);
    sub_1B67E9628(&qword_1E9DCD230, type metadata accessor for VFXTriggerType);
    unint64_t v0 = sub_1B6E32888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0508);
    }
  }
}

void sub_1B67F752C()
{
  if (!qword_1E9DD50B0)
  {
    type metadata accessor for VFXTriggerType(255);
    sub_1B67F75D8();
    sub_1B67E9628(&qword_1E9DCD230, type metadata accessor for VFXTriggerType);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD50B0);
    }
  }
}

void sub_1B67F75D8()
{
  if (!qword_1E9DD0510)
  {
    sub_1B67CB1A4();
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0510);
    }
  }
}

void sub_1B67F763C()
{
  if (!qword_1E9DD0EB0)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0EB0);
    }
  }
}

void sub_1B67F76A8()
{
  if (!qword_1E9DD0518)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0518);
    }
  }
}

void sub_1B67F7710()
{
  if (!qword_1E9DD0520)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0520);
    }
  }
}

unint64_t sub_1B67F7774()
{
  unint64_t result = qword_1EB97FF80;
  if (!qword_1EB97FF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FF80);
  }
  return result;
}

void sub_1B67F77C8()
{
  if (!qword_1E9DD0530)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0530);
    }
  }
}

uint64_t sub_1B67F7830(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1B67FB8C0(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1B67F78A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B6E32C68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B67F790C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GraphScriptingConfig.ScriptInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B67F7970()
{
  unint64_t result = qword_1E9DD0560;
  if (!qword_1E9DD0560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0560);
  }
  return result;
}

void sub_1B67F79C4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1B6313370(255, a3, a4, MEMORY[0x1E4FBB320]);
    sub_1B67F7970();
    unint64_t v5 = sub_1B6E32C68();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B67F7A4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B67F7A94(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B67F7AF0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B67F7B4C()
{
  unint64_t result = qword_1E9DD0580;
  if (!qword_1E9DD0580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0580);
  }
  return result;
}

void sub_1B67F7BA0()
{
  if (!qword_1E9DD0588)
  {
    sub_1B67F7C04();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0588);
    }
  }
}

unint64_t sub_1B67F7C04()
{
  unint64_t result = qword_1E9DD0590;
  if (!qword_1E9DD0590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0590);
  }
  return result;
}

void sub_1B67F7C58(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 == 1)
  {
    int v3 = (void *)(a2 & 0x3FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRetain();
    id v4 = v3;
  }
  else if (!(a2 >> 62))
  {
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_1B67F7CB4(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B67F7D10()
{
  unint64_t result = qword_1E9DD05A0;
  if (!qword_1E9DD05A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD05A0);
  }
  return result;
}

void sub_1B67F7D64()
{
  if (!qword_1E9DD5100)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5100);
    }
  }
}

void sub_1B67F7DCC()
{
  if (!qword_1E9DD05B0)
  {
    sub_1B67F7D10();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD05B0);
    }
  }
}

void sub_1B67F7E30()
{
  if (!qword_1E9DD05B8)
  {
    sub_1B67F7D10();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD05B8);
    }
  }
}

void sub_1B67F7E94()
{
  if (!qword_1EB980710)
  {
    sub_1B67F7EF8();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980710);
    }
  }
}

unint64_t sub_1B67F7EF8()
{
  unint64_t result = qword_1EB97F500;
  if (!qword_1EB97F500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F500);
  }
  return result;
}

uint64_t sub_1B67F7F4C(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1B67F7FA8()
{
  if (!qword_1E9DD05C8)
  {
    sub_1B67F7EF8();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD05C8);
    }
  }
}

uint64_t sub_1B67F800C(uint64_t a1)
{
  return a1;
}

void sub_1B67F8044()
{
  if (!qword_1E9DD05D8)
  {
    type metadata accessor for VertexLayoutDescriptor();
    sub_1B67E9628((unint64_t *)&unk_1E9DD05E0, (void (*)(uint64_t))type metadata accessor for VertexLayoutDescriptor);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD05D8);
    }
  }
}

uint64_t sub_1B67F80E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1B67F813C()
{
  if (!qword_1E9DD05F0)
  {
    sub_1B63AE588();
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD05F0);
    }
  }
}

void sub_1B67F81A0()
{
  if (!qword_1E9DD5140)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5140);
    }
  }
}

uint64_t sub_1B67F8208(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1B67F8264()
{
  if (!qword_1E9DD0600)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0600);
    }
  }
}

void sub_1B67F82CC()
{
  if (!qword_1E9DD0608)
  {
    sub_1B62F3064(255, (unint64_t *)&qword_1EB980440);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0608);
    }
  }
}

void sub_1B67F8344()
{
  if (!qword_1E9DD0610)
  {
    sub_1B67FBF1C(255, &qword_1E9DCD9D0, (uint64_t (*)(uint64_t))type metadata accessor for PropertyDescription, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0610);
    }
  }
}

void sub_1B67F83DC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1B67FBCA0(255, a3, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], a4);
    unint64_t v5 = sub_1B6E31D18();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B67F8450(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1B67F83DC(255, a3, a4, a5);
    unint64_t v6 = sub_1B6E32C68();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1B67F84BC()
{
  if (!qword_1E9DD0648)
  {
    type metadata accessor for vfx_vertex_attribute(255);
    sub_1B6397C10(255, &qword_1E9DD0650, type metadata accessor for VFXMeshSourceSemantic);
    sub_1B67E9628(&qword_1E9DD0658, type metadata accessor for vfx_vertex_attribute);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0648);
    }
  }
}

void sub_1B67F858C()
{
  if (!qword_1E9DD0668)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0668);
    }
  }
}

void sub_1B67F85F4()
{
  if (!qword_1E9DD0670)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0670);
    }
  }
}

void sub_1B67F865C()
{
  if (!qword_1E9DD0678)
  {
    sub_1B67CB1A4();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0678);
    }
  }
}

void sub_1B67F86C0()
{
  if (!qword_1E9DD0680)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0680);
    }
  }
}

unint64_t sub_1B67F8728()
{
  unint64_t result = qword_1EB9803B0;
  if (!qword_1EB9803B0)
  {
    sub_1B67F8764();
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB9803B0);
  }
  return result;
}

unint64_t sub_1B67F8764()
{
  unint64_t result = qword_1EB9803A8;
  if (!qword_1EB9803A8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB9803A8);
  }
  return result;
}

void sub_1B67F87C4()
{
  if (!qword_1EB980830)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980830);
    }
  }
}

uint64_t sub_1B67F882C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B63989B8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B67F887C()
{
  if (!qword_1E9DD06A0)
  {
    sub_1B63989B8(255, &qword_1E9DD0690);
    type metadata accessor for SkeletonAnimation();
    sub_1B67F882C(&qword_1E9DD0698, &qword_1E9DD0690);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD06A0);
    }
  }
}

void sub_1B67F8928()
{
  if (!qword_1E9DD06B8)
  {
    type metadata accessor for VFXWrapMode(255);
    sub_1B67E9628(&qword_1E9DD06C0, type metadata accessor for VFXWrapMode);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD06B8);
    }
  }
}

void sub_1B67F89C4()
{
  if (!qword_1E9DD06C8)
  {
    type metadata accessor for VFXFilterMode(255);
    sub_1B67E9628(&qword_1E9DD06D0, type metadata accessor for VFXFilterMode);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD06C8);
    }
  }
}

void sub_1B67F8A60()
{
  if (!qword_1E9DD06D8)
  {
    type metadata accessor for VFXFilterMode(255);
    sub_1B67E9628(&qword_1E9DD06D0, type metadata accessor for VFXFilterMode);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD06D8);
    }
  }
}

void sub_1B67F8AFC()
{
  if (!qword_1E9DD06E8)
  {
    sub_1B6E30F48();
    sub_1B67E9628((unint64_t *)&unk_1EB97D970, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD06E8);
    }
  }
}

void sub_1B67F8B98()
{
  if (!qword_1E9DD5180)
  {
    sub_1B67F8BFC();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5180);
    }
  }
}

unint64_t sub_1B67F8BFC()
{
  unint64_t result = qword_1E9DD06F0;
  if (!qword_1E9DD06F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD06F0);
  }
  return result;
}

void sub_1B67F8C50(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1B63989B8(255, a3);
    sub_1B67F882C(a5, a3);
    unint64_t v8 = sub_1B6E32C68();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B67F8CE4()
{
  if (!qword_1E9DD0718)
  {
    type metadata accessor for VFXWorldLoaderOption(255);
    sub_1B67E9628((unint64_t *)&qword_1E9DD0720, type metadata accessor for VFXWorldLoaderOption);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0718);
    }
  }
}

unint64_t sub_1B67F8D84()
{
  unint64_t result = qword_1E9DD5190;
  if (!qword_1E9DD5190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5190);
  }
  return result;
}

void sub_1B67F8DD8()
{
  if (!qword_1E9DD0740)
  {
    sub_1B67FBCA0(255, &qword_1E9DD0748, (uint64_t (*)(void))sub_1B67F8D84, (uint64_t)&type metadata for VertexLayout, MEMORY[0x1E4FBB510]);
    sub_1B67CB1A4();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0740);
    }
  }
}

void sub_1B67F8E7C()
{
  if (!qword_1E9DD0750)
  {
    type metadata accessor for LoadingOption(255);
    sub_1B67E9628(&qword_1E9DCD728, type metadata accessor for LoadingOption);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0750);
    }
  }
}

void sub_1B67F8F1C()
{
  if (!qword_1E9DD0770)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0770);
    }
  }
}

void sub_1B67F8F84()
{
  if (!qword_1EB9806D0)
  {
    sub_1B6313370(255, &qword_1EB980388, MEMORY[0x1E4FBC450], MEMORY[0x1E4FBB320]);
    sub_1B67F9014();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9806D0);
    }
  }
}

unint64_t sub_1B67F9014()
{
  unint64_t result = qword_1EB97DBD0;
  if (!qword_1EB97DBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97DBD0);
  }
  return result;
}

void sub_1B67F9068()
{
  if (!qword_1E9DD0778)
  {
    type metadata accessor for Option(255);
    sub_1B63989B8(255, (unint64_t *)&qword_1E9DD0780);
    sub_1B67E9628((unint64_t *)&qword_1E9DD0EC0, type metadata accessor for Option);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0778);
    }
  }
}

void sub_1B67F9124()
{
  if (!qword_1E9DD0790)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0790);
    }
  }
}

void sub_1B67F918C()
{
  if (!qword_1E9DD51B0)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD51B0);
    }
  }
}

void sub_1B67F91F4()
{
  if (!qword_1E9DD07A0)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD07A0);
    }
  }
}

void sub_1B67F925C()
{
  if (!qword_1EB980760)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980760);
    }
  }
}

unint64_t sub_1B67F92C4()
{
  unint64_t result = qword_1E9DD07B8;
  if (!qword_1E9DD07B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD07B8);
  }
  return result;
}

void sub_1B67F9318()
{
  if (!qword_1E9DD07C0)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD07C0);
    }
  }
}

void sub_1B67F9380()
{
  if (!qword_1E9DD07D8)
  {
    sub_1B67FBF1C(255, (unint64_t *)&unk_1E9DD07E0, (uint64_t (*)(uint64_t))_s11MetadataSetCMa, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD07D8);
    }
  }
}

void sub_1B67F941C()
{
  if (!qword_1E9DD0840)
  {
    sub_1B67FBF1C(255, &qword_1E9DCD9D0, (uint64_t (*)(uint64_t))type metadata accessor for PropertyDescription, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0840);
    }
  }
}

uint64_t sub_1B67F94B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1B67F9510()
{
  if (!qword_1E9DD0850)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0850);
    }
  }
}

void sub_1B67F9578()
{
  if (!qword_1E9DD0858)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0858);
    }
  }
}

void sub_1B67F95E0()
{
  if (!qword_1EB980790)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980790);
    }
  }
}

void sub_1B67F9648()
{
  if (!qword_1E9DD50A0)
  {
    sub_1B6313370(255, (unint64_t *)&unk_1E9DD0030, (uint64_t)&type metadata for ShaderCache.ComputePipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD50A0);
    }
  }
}

void sub_1B67F96D4()
{
  if (!qword_1EB9807A0)
  {
    sub_1B6313370(255, &qword_1EB97DD00, (uint64_t)&type metadata for ShaderCache.RenderPipeline, (uint64_t (*)(void, uint64_t))type metadata accessor for ShaderCache.Status);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9807A0);
    }
  }
}

uint64_t sub_1B67F9760(uint64_t a1)
{
  return a1;
}

void sub_1B67F9944()
{
  if (!qword_1EB985550)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB985550);
    }
  }
}

uint64_t sub_1B67F99AC(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1B67F9A08()
{
  if (!qword_1EB980810)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980810);
    }
  }
}

void sub_1B67F9A70()
{
  if (!qword_1EB97D8B0)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D8B0);
    }
  }
}

unint64_t sub_1B67F9AD8()
{
  unint64_t result = qword_1EB9852E8;
  if (!qword_1EB9852E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB9852E8);
  }
  return result;
}

void sub_1B67F9B2C()
{
  if (!qword_1EB9807F0)
  {
    sub_1B62F3064(255, (unint64_t *)&qword_1EB97D7F0);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9807F0);
    }
  }
}

void sub_1B67F9BA4()
{
  if (!qword_1EB9807D0)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9807D0);
    }
  }
}

uint64_t sub_1B67F9C0C(uint64_t a1)
{
  return a1;
}

void sub_1B67F9C44(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1B6E32C68();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1B67F9CB0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1B67FBF1C(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

void sub_1B67F9D30()
{
  if (!qword_1E9DD5110)
  {
    sub_1B62F3064(255, (unint64_t *)&unk_1EB97D850);
    sub_1B67F9DAC();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5110);
    }
  }
}

unint64_t sub_1B67F9DAC()
{
  unint64_t result = qword_1E9DD5120;
  if (!qword_1E9DD5120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD5120);
  }
  return result;
}

void sub_1B67F9E00()
{
  if (!qword_1EB985570)
  {
    sub_1B67FBF1C(255, (unint64_t *)&unk_1EB9854E0, (uint64_t (*)(uint64_t))type metadata accessor for DepthStencilCache, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB985570);
    }
  }
}

uint64_t sub_1B67F9E98(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_1B67FBF1C(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1B67F9F08()
{
  if (!qword_1E9DD0870)
  {
    sub_1B62F3064(255, (unint64_t *)&qword_1EB97D7F0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD0870);
    }
  }
}

unint64_t sub_1B67F9F84()
{
  unint64_t result = qword_1E9DD50F0;
  if (!qword_1E9DD50F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD50F0);
  }
  return result;
}

uint64_t sub_1B67F9FD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B67FA020(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1B67FA088()
{
  if (!qword_1EB97D8A8)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D8A8);
    }
  }
}

void sub_1B67FA0F0()
{
  if (!qword_1EB985560)
  {
    sub_1B67FBF1C(255, (unint64_t *)&unk_1EB9854C0, (uint64_t (*)(uint64_t))type metadata accessor for TextureCache, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB985560);
    }
  }
}

void sub_1B67FA188(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1B67FBF1C(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for WeakReference);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1B67FA204()
{
  if (!qword_1E9DD0880)
  {
    sub_1B67FA264();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0880);
    }
  }
}

unint64_t sub_1B67FA264()
{
  unint64_t result = qword_1E9DD51A0;
  if (!qword_1E9DD51A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD51A0);
  }
  return result;
}

void sub_1B67FA2B8()
{
  if (!qword_1E9DD0898)
  {
    sub_1B62F3064(255, (unint64_t *)&qword_1EB97D860);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1E9DD0898);
    }
  }
}

unint64_t sub_1B67FA338()
{
  unint64_t result = qword_1E9DD08A8;
  if (!qword_1E9DD08A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD08A8);
  }
  return result;
}

void sub_1B67FA38C()
{
  if (!qword_1EB97D9C8)
  {
    sub_1B6E31118();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB97D9C8);
    }
  }
}

uint64_t sub_1B67FA3F0(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1B67FA44C()
{
  if (!qword_1E9DD08C0)
  {
    sub_1B67FA4AC();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD08C0);
    }
  }
}

unint64_t sub_1B67FA4AC()
{
  unint64_t result = qword_1E9DD08C8;
  if (!qword_1E9DD08C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD08C8);
  }
  return result;
}

void sub_1B67FA500()
{
  if (!qword_1E9DD08D0)
  {
    sub_1B6313370(255, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD08D0);
    }
  }
}

void sub_1B67FA58C()
{
  if (!qword_1EB980840)
  {
    sub_1B6313370(255, &qword_1EB980E58, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBB718]);
    sub_1B6E30F48();
    sub_1B67FA62C();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980840);
    }
  }
}

unint64_t sub_1B67FA62C()
{
  unint64_t result = qword_1EB980E70;
  if (!qword_1EB980E70)
  {
    sub_1B6313370(255, &qword_1EB980E58, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBB718]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB980E70);
  }
  return result;
}

uint64_t sub_1B67FA6B8(uint64_t a1)
{
  return a1;
}

void sub_1B67FA6EC()
{
  if (!qword_1E9DD08D8)
  {
    sub_1B67FA750();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD08D8);
    }
  }
}

unint64_t sub_1B67FA750()
{
  unint64_t result = qword_1E9DD08E0;
  if (!qword_1E9DD08E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD08E0);
  }
  return result;
}

void sub_1B67FA7A4()
{
  if (!qword_1E9DD08F0)
  {
    sub_1B6E30F48();
    sub_1B67E9628((unint64_t *)&unk_1EB97D970, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD08F0);
    }
  }
}

void sub_1B67FA840()
{
  if (!qword_1E9DD0900)
  {
    sub_1B67FB8C0(255, (unint64_t *)&qword_1E9DD5280);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0900);
    }
  }
}

void sub_1B67FA8C0()
{
  if (!qword_1E9DD52A0)
  {
    sub_1B6E31118();
    sub_1B67E9628((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD52A0);
    }
  }
}

uint64_t sub_1B67FA95C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1B6397C10(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1B67FA9CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_1B6E31118();
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1B67FAA44()
{
  if (!qword_1E9DD5290)
  {
    type metadata accessor for Node();
    sub_1B62C55B0(255, (unint64_t *)&qword_1EB980E40);
    unint64_t v0 = sub_1B6E33A08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5290);
    }
  }
}

void sub_1B67FAAC8(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

void sub_1B67FAAD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_1B6E31118();
    a3(255);
    sub_1B67E9628((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    unint64_t v5 = sub_1B6E32C68();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1B67FAB80()
{
  unint64_t result = qword_1E9DD52C0;
  if (!qword_1E9DD52C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD52C0);
  }
  return result;
}

unint64_t sub_1B67FABD4()
{
  unint64_t result = qword_1E9DD0960;
  if (!qword_1E9DD0960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0960);
  }
  return result;
}

unint64_t sub_1B67FAC28()
{
  unint64_t result = qword_1EB94A160;
  if (!qword_1EB94A160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB94A160);
  }
  return result;
}

uint64_t sub_1B67FAC7C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B67FACD4()
{
  unint64_t result = qword_1EB980F80;
  if (!qword_1EB980F80)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB980F80);
  }
  return result;
}

unint64_t sub_1B67FAD14()
{
  unint64_t result = qword_1E9DD0978;
  if (!qword_1E9DD0978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0978);
  }
  return result;
}

void sub_1B67FAD68()
{
  if (!qword_1EB980850)
  {
    sub_1B6313370(255, &qword_1EB980688, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBB30]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980850);
    }
  }
}

void sub_1B67FADF4()
{
  if (!qword_1EB9807B0)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB9807B0);
    }
  }
}

void sub_1B67FAE5C()
{
  if (!qword_1E9DD0988)
  {
    sub_1B67FBF1C(255, (unint64_t *)&qword_1E9DD0990, (uint64_t (*)(uint64_t))sub_1B67FAEF4, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0988);
    }
  }
}

void sub_1B67FAEF4()
{
  if (!qword_1E9DD0998)
  {
    sub_1B62C55B0(255, &qword_1E9DD09A0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD0998);
    }
  }
}

void sub_1B67FAF70()
{
  if (!qword_1EB980230)
  {
    sub_1B637EC90(255, (unint64_t *)&qword_1EB97EAD8, &qword_1EB97EAD0);
    unint64_t v0 = sub_1B6E31D18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980230);
    }
  }
}

void sub_1B67FAFE4()
{
  if (!qword_1E9DD09A8)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD09A8);
    }
  }
}

unint64_t sub_1B67FB04C()
{
  unint64_t result = qword_1EB97FEE8;
  if (!qword_1EB97FEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FEE8);
  }
  return result;
}

void sub_1B67FB0A0()
{
  if (!qword_1E9DD09B8)
  {
    unint64_t v0 = sub_1B6E31568();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD09B8);
    }
  }
}

void sub_1B67FB10C()
{
  if (!qword_1EB980750)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980750);
    }
  }
}

void sub_1B67FB174()
{
  if (!qword_1EB97D8A0)
  {
    sub_1B67FB1F8(255, (unint64_t *)&qword_1EB9800C0, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D8A0);
    }
  }
}

void sub_1B67FB1F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1B6E31118();
    uint64_t v7 = sub_1B67E9628((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    unint64_t v8 = a3(a1, v6, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B67FB298()
{
  if (!qword_1EB980730)
  {
    sub_1B67CB1A4();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980730);
    }
  }
}

void sub_1B67FB2F8(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    sub_1B67FB364(255, a3, a4, a5);
    unint64_t v6 = sub_1B6E32C68();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1B67FB364(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1B67FBAEC(255, a3, a4);
    unint64_t v5 = sub_1B6E31D18();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B67FB3BC()
{
  if (!qword_1E9DD09E0)
  {
    sub_1B6E31118();
    sub_1B6313370(255, (unint64_t *)&unk_1E9DD5270, (uint64_t)&type metadata for TexturePreview, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD09E0);
    }
  }
}

void sub_1B67FB450()
{
  if (!qword_1E9DD09F0)
  {
    sub_1B6E31118();
    sub_1B6313370(255, (unint64_t *)&unk_1E9DD5270, (uint64_t)&type metadata for TexturePreview, MEMORY[0x1E4FBB320]);
    sub_1B67E9628((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD09F0);
    }
  }
}

uint64_t sub_1B67FB520(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1B67FB588()
{
  if (!qword_1E9DD0A00)
  {
    sub_1B6E31118();
    sub_1B67E9628((unint64_t *)&qword_1EB97D9A0, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1B6E32888();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0A00);
    }
  }
}

void sub_1B67FB61C()
{
  if (!qword_1E9DD0A08)
  {
    sub_1B67FB680();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0A08);
    }
  }
}

unint64_t sub_1B67FB680()
{
  unint64_t result = qword_1E9DD0A10;
  if (!qword_1E9DD0A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0A10);
  }
  return result;
}

uint64_t sub_1B67FB6D4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1B67FA9CC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1B67FB740()
{
  if (!qword_1E9DD5340)
  {
    sub_1B67FBF1C(255, &qword_1E9DCD9D0, (uint64_t (*)(uint64_t))type metadata accessor for PropertyDescription, MEMORY[0x1E4FBB320]);
    sub_1B67CB1A4();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD5340);
    }
  }
}

void sub_1B67FB7DC()
{
  if (!qword_1E9DD0A40)
  {
    sub_1B63989B8(255, &qword_1EB9804F0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD0A40);
    }
  }
}

void sub_1B67FB854()
{
  if (!qword_1E9DD0A48)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0A48);
    }
  }
}

void sub_1B67FB8C0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1B67FB914()
{
  if (!qword_1E9DD0A58)
  {
    sub_1B6654918();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0A58);
    }
  }
}

void sub_1B67FB978()
{
  if (!qword_1E9DD0A68)
  {
    sub_1B6313370(255, &qword_1E9DD0950, (uint64_t)&type metadata for GraphCodeGen.CodeGenAtom, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0A68);
    }
  }
}

uint64_t sub_1B67FBA04(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1B67FBA88()
{
  if (!qword_1E9DD0A70)
  {
    sub_1B67FAB80();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0A70);
    }
  }
}

void sub_1B67FBAEC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v5) {
      atomic_store(TupleTypeMetadata3, a2);
    }
  }
}

void sub_1B67FBB54()
{
  if (!qword_1E9DD0A90)
  {
    sub_1B67FBBE8(255, (unint64_t *)&qword_1E9DD0A98, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB560], MEMORY[0x1E4FBB510]);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0A90);
    }
  }
}

void sub_1B67FBBE8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1B67FBC38()
{
  if (!qword_1E9DD0AA0)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0AA0);
    }
  }
}

void sub_1B67FBCA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1B67FBD08()
{
  if (!qword_1E9DD0AC0)
  {
    sub_1B67FBF1C(255, &qword_1E9DCD9F0, (uint64_t (*)(uint64_t))type metadata accessor for Node, MEMORY[0x1E4FBB320]);
    sub_1B66507E8();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0AC0);
    }
  }
}

void sub_1B67FBDA4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1B67FBF1C(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff);
    sub_1B6654918();
    unint64_t v5 = sub_1B6E32C68();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1B67FBE2C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1B67FBF1C(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VFXObjectScriptsDiff.Diff);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1B67FBEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

void sub_1B67FBF1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B67FBF80(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  sub_1B6313370(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1B67FBFF0()
{
  if (!qword_1E9DD0B18)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0B18);
    }
  }
}

uint64_t *sub_1B67FC058(uint64_t *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[7];
  uint64_t v4 = a1[11];
  uint64_t v5 = a1[12];
  uint64_t v7 = a1[17];
  uint64_t v8 = a1[16];
  sub_1B6312ABC(a1[1], a1[2]);
  sub_1B6312ABC(v2, v3);
  sub_1B6312ABC(v4, v5);
  sub_1B6312ABC(v8, v7);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1B67FC164()
{
  unint64_t result = qword_1EB97F360;
  if (!qword_1EB97F360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F360);
  }
  return result;
}

void sub_1B67FC1B8()
{
  if (!qword_1E9DD0B28)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0B28);
    }
  }
}

void sub_1B67FC220()
{
  if (!qword_1E9DD0B30)
  {
    sub_1B6313370(255, &qword_1E9DD0B38, (uint64_t)&type metadata for GraphNodeLibrary.Entry, MEMORY[0x1E4FBB320]);
    sub_1B67FC2B0();
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0B30);
    }
  }
}

unint64_t sub_1B67FC2B0()
{
  unint64_t result = qword_1E9DD0B40;
  if (!qword_1E9DD0B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0B40);
  }
  return result;
}

uint64_t type metadata accessor for ParticleSizeOverTexture.System()
{
  return self;
}

uint64_t sub_1B67FC328(char a1)
{
  uint64_t result = 0x65727574786574;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C656E6E616863;
      break;
    case 2:
      uint64_t result = 0x4D73736572646461;
      break;
    case 3:
      uint64_t result = 0x7469736F706D6F63;
      break;
    case 4:
      uint64_t result = 1701080941;
      break;
    case 5:
      uint64_t result = 0x65676E615278;
      break;
    case 6:
      uint64_t result = 0x65676E615279;
      break;
    case 7:
      uint64_t result = 0x65676E61527ALL;
      break;
    case 8:
      uint64_t result = 0x656C616373;
      break;
    case 9:
      uint64_t result = 1935763810;
      break;
    case 10:
      uint64_t result = 0x656C676E61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B67FC470(void *a1)
{
  uint64_t v3 = v1;
  sub_1B67FEC14(0, &qword_1E9DD0B60, (uint64_t (*)(void))sub_1B67FEBC0, (uint64_t)&type metadata for ParticleSizeOverTexture.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  unint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B67FEBC0();
  sub_1B6E33A88();
  uint64_t v14 = *v3;
  char v13 = 0;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (!v2)
  {
    LOBYTE(v14) = *((unsigned char *)v3 + 8);
    char v13 = 1;
    sub_1B66C522C();
    sub_1B6E32FA8();
    LOBYTE(v14) = *((unsigned char *)v3 + 9);
    char v13 = 2;
    sub_1B66C63C0();
    sub_1B6E32FA8();
    uint64_t v14 = *(uint64_t *)((char *)v3 + 12);
    char v13 = 3;
    sub_1B67FEC7C();
    sub_1B6E32FA8();
    LOBYTE(v14) = *((unsigned char *)v3 + 20);
    char v13 = 4;
    sub_1B66C60C4();
    sub_1B6E32FA8();
    uint64_t v14 = v3[3];
    char v13 = 5;
    sub_1B62AA858();
    sub_1B62AA5EC(qword_1E9DD02C8);
    sub_1B6E32FA8();
    uint64_t v14 = v3[4];
    char v13 = 6;
    sub_1B6E32FA8();
    uint64_t v14 = v3[5];
    char v13 = 7;
    sub_1B6E32FA8();
    uint64_t v14 = v3[6];
    char v13 = 8;
    sub_1B67FEC14(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    sub_1B67FECD0((unint64_t *)&qword_1EB97D1B8);
    sub_1B6E32FA8();
    uint64_t v14 = v3[7];
    char v13 = 9;
    sub_1B6E32FA8();
    LOBYTE(v14) = 10;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

const char *sub_1B67FC8DC()
{
  return "ParticleSizeOverTexture";
}

uint64_t sub_1B67FC8F0(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1B67FC328(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1B67FC328(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1B6E334B8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B67FC97C()
{
  return sub_1B67FC328(*v0);
}

uint64_t sub_1B67FC984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B67FCAF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B67FC9AC(uint64_t a1)
{
  unint64_t v2 = sub_1B67FEBC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B67FC9E8(uint64_t a1)
{
  unint64_t v2 = sub_1B67FEBC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1B67FCA24@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B67FE678(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_DWORD *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1B67FCA78(void *a1)
{
  return sub_1B67FC470(a1);
}

uint64_t sub_1B67FCA90()
{
  return type metadata accessor for ParticleSizeOverTexture.System();
}

double sub_1B67FCAB0@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xFFFFFFFFLL;
  *(_WORD *)(a1 + 8) = 512;
  *(unsigned char *)(a1 + 12) = 0;
  *(_DWORD *)(a1 + 16) = 1065353216;
  *(unsigned char *)(a1 + 20) = 0;
  *(_OWORD *)(a1 + 24) = xmmword_1B6E4F3A0;
  double result = 0.0078125;
  __asm { FMOV            V1.2S, #1.0 }
  *(void *)(a1 + 40) = 0x3F80000000000000;
  *(void *)(a1 + 48) = _D1;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  return result;
}

uint64_t sub_1B67FCAF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65727574786574 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D73736572646461 && a2 == 0xEB0000000065646FLL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7469736F706D6F63 && a2 == 0xEB000000006E6F69 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65676E615278 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x65676E615279 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65676E61527ALL && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1935763810 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656C676E61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t *sub_1B67FCF38(uint64_t a1)
{
  uint64_t v234 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)a1;
  swift_retain();
  uint64_t v3 = *(void *)(a1 + 8);
  swift_retain();
  sub_1B695DDF4(v3, (uint64_t)&v226);
  swift_release();
  if ((*(void *)v227 & 0xFF00000000) == 0x300000000)
  {
    unint64_t v5 = 0;
    unsigned __int8 v6 = 0;
    unsigned int v7 = 0;
    LOBYTE(v8) = 0;
    double v9 = 0.0;
    __asm { FMOV            V9.2S, #1.0 }
    float v15 = 0.0;
    v4.i32[0] = 1.0;
    int32x2_t v188 = v4;
    LOBYTE(v16) = 2;
    unsigned int v17 = -1;
    float v18 = 1.0;
    float v19 = 1.0;
    float v20 = 1.0;
    float v21 = 0.0;
    float32x2_t v189 = 0;
  }
  else
  {
    float v21 = *(float *)&v229;
    double v9 = *((double *)&v228 + 1);
    _D9 = *(double *)&v228;
    unsigned __int8 v6 = BYTE8(v226);
    unsigned int v17 = v226;
    unint64_t v5 = v226 & 0xFFFFFFFF00000000;
    uint64_t v16 = *((void *)&v226 + 1) >> 8;
    float v18 = *(float *)&v227[12];
    unsigned int v7 = BYTE12(v226);
    int32x2_t v188 = (int32x2_t)__PAIR64__(*(unsigned int *)&v227[12], *(unsigned int *)v227);
    float32x2_t v189 = (float32x2_t)vmovn_s64(*(int64x2_t *)&v227[8]);
    uint64_t v8 = HIDWORD(*(void *)v227);
    float v19 = *(float *)&v227[20];
    float v15 = *(float *)&v227[24];
    float v20 = *(float *)&v227[28];
  }
  sub_1B6CEE8E8(v5 | v17, v210);
  sub_1B62CA210((uint64_t)v210, (uint64_t)v224, (unint64_t *)&unk_1EB97EFD0);
  if (!v225) {
    return (uint64_t *)swift_release();
  }
  long long v229 = v224[4];
  long long v230 = v224[5];
  long long v231 = v224[6];
  uint64_t v232 = v225;
  long long v226 = v224[0];
  *(_OWORD *)int8x16_t v227 = v224[1];
  *(_OWORD *)&v227[16] = v224[2];
  long long v228 = v224[3];
  sub_1B6AFEFC8((uint64_t)&v226, v16, 1, (uint64_t)v211);
  sub_1B6657630((uint64_t)v211, (uint64_t)v221);
  if (*((void *)&v222 + 1) == 1)
  {
LABEL_126:
    sub_1B66576EC(v210[0].i64);
    return (uint64_t *)swift_release();
  }
  v207[0] = v221[0];
  v207[1] = v221[1];
  long long v208 = v222;
  uint64_t v209 = v223;
  long long v22 = *(_OWORD *)(a1 + 104);
  long long v198 = *(_OWORD *)(a1 + 88);
  long long v199 = v22;
  uint64_t v200 = *(void *)(a1 + 120);
  char v23 = v193;
  sub_1B663CAB8((uint64_t)v193);
  if (v7)
  {
    sub_1B636D998(0, (unint64_t *)&qword_1EB980C70, (uint64_t (*)(uint64_t))sub_1B6642FC0, MEMORY[0x1E4FBBE00]);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1B6E77050;
    *(void *)(v24 + 32) = &type metadata for TransientOriginScale;
    *(void *)(v24 + 40) = &off_1F0F843D8;
    char v23 = v194;
    sub_1B63B9C40(v24, 1, (uint64_t)v194);
    swift_setDeallocating();
    swift_deallocClassInstance();
    sub_1B62CA064((uint64_t)v193);
  }
  int v25 = *((_DWORD *)v23 + 2);
  char v26 = v23[12];
  uint64_t v27 = *((void *)v23 + 2);
  char v28 = v23[24];
  uint64_t v29 = *((void *)v23 + 4);
  uint64_t v201 = *(void *)v23;
  int v202 = v25;
  char v203 = v26;
  uint64_t v204 = v27;
  char v205 = v28;
  uint64_t v206 = v29;
  sub_1B688CF80(&v190, _D9, v21, v9);
  float v185 = v18 - v189.f32[0];
  if (!(_BYTE)v8)
  {
    sub_1B62C9DA8(v2, (uint64_t)&v201, 0x200000000, &v212);
    sub_1B62CA210((uint64_t)&v212, (uint64_t)&v213, (unint64_t *)&qword_1EB97DC50);
    if ((void)v213)
    {
      if (v220 > 0)
      {
        uint64_t v157 = v217;
        if (v217)
        {
          uint64_t v60 = v219[4];
          char v167 = *(unsigned char *)(v218 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          long long v195 = v213;
          long long v196 = v214;
          uint64_t v197 = v215;
          uint64_t v149 = (uint64_t)(v219 + 6);
          uint64_t v152 = v216;
          int v170 = v219;
          int v146 = v219 + 8;
          float32x2_t v180 = (float32x2_t)v191;
          float32x2_t v183 = *(float32x2_t *)v190.f32;
          float32x2_t v177 = (float32x2_t)v192;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v61 = 0;
          uint64_t i = 0;
          uint64_t v143 = v6;
          uint64_t v63 = v6;
          uint64_t v64 = v7;
          uint64_t v154 = v60;
          do
          {
            uint64_t v165 = v61;
            uint64_t v65 = (unsigned int *)(v152 + 48 * v61);
            uint64_t v161 = *v65;
            uint64_t v159 = v65[1];
            char v66 = (uint64_t *)*((void *)v65 + 2);
            uint64_t v67 = *((void *)v65 + 3);
            uint64_t v68 = *((void *)v65 + 4);
            uint64_t v69 = *((void *)v65 + 5);
            uint64_t v163 = i;
            if (v167)
            {
              uint64_t v70 = *(os_unfair_lock_s **)(v69 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v70);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v69 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v60);
            sub_1B62CA210(v149, (uint64_t)v233, &qword_1EB97DE20);
            uint64_t v71 = v170[4];
            uint64_t v72 = *(void *)(*(void *)(*(void *)(*(void *)(v69 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v170[6] = ecs_stack_allocator_allocate(v71, 48 * v72, 8);
            v170[7] = v72;
            v146[1] = 0;
            v146[2] = 0;
            *int v146 = 0;
            swift_release();
            char v73 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v66, v67, v68, (uint64_t)v170);
            uint64_t v74 = sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v66, v67, v68, (uint64_t)v170);
            uint64_t v75 = (float32x4_t *)v74;
            if (v66)
            {
              for (uint64_t i = v163; v68; --v68)
              {
                (*((void (**)(_OWORD *, double))&v208 + 1))(v207, COERCE_DOUBLE(vadd_f32(vmul_laneq_f32(v180, *v73, 2), vadd_f32(v177, vmul_n_f32(v183, COERCE_FLOAT(*v73))))));
                switch(v63)
                {
                  case 1:
                    v77.i32[0] = v77.i32[1];
                    break;
                  case 2:
                    v77.i32[0] = v77.i32[2];
                    break;
                  case 3:
                    v77.i32[0] = v77.i32[3];
                    break;
                  case 4:
                    float v78 = 0.2126 * *(float *)v77.i32;
                    v77.i32[0] = vextq_s8(v77, v77, 8uLL).u32[0];
                    *(float32x2_t *)v77.i8 = vmul_f32(*(float32x2_t *)v77.i8, (float32x2_t)0x3F3717593D93DD98);
                    *(float *)v77.i32 = *(float *)v77.i32 + (float)(v78 + *(float *)&v77.i32[1]);
                    break;
                  default:
                    break;
                }
                *(float *)v77.i32 = v189.f32[0] + (float)(v185 * *(float *)v77.i32);
                switch(v64)
                {
                  case 1:
                    *(float *)v77.i32 = *(float *)v188.i32 * *(float *)v77.i32;
                    float32x4_t v76 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v77.i8, 0), *v75);
                    v76.i32[3] = v174;
                    break;
                  case 2:
                    float32x4_t v76 = vmulq_n_f32(*v75, *(float *)v188.i32 * *(float *)v77.i32);
                    v76.i32[3] = v175;
                    break;
                  case 3:
                    float v79 = v75->f32[2];
                    float v80 = *(float *)v188.i32 * (float)(*(float *)v77.i32 - v79);
                    *(float32x2_t *)v76.f32 = vadd_f32(*(float32x2_t *)v75->f32, vmul_n_f32(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v77.i8, 0), *(float32x2_t *)v75->f32), *(float *)v188.i32));
                    v76.f32[2] = v79 + v80;
                    v76.i32[3] = 0;
                    break;
                  default:
                    *(float *)v77.i32 = *(float *)v188.i32 * *(float *)v77.i32;
                    float32x4_t v76 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v77.i8, 0);
                    v76.i32[3] = 0;
                    break;
                }
                *v75++ = v76;
                ++v73;
              }
            }
            else
            {
              uint64_t i = v163;
              if (v161 != v159)
              {
                uint64_t v81 = v159 - v161;
                id v82 = (float32x4_t *)(v74 + 16 * v161);
                uint64_t v83 = &v73[v161];
                do
                {
                  (*((void (**)(_OWORD *, double))&v208 + 1))(v207, COERCE_DOUBLE(vadd_f32(vmul_laneq_f32(v180, *v83, 2), vadd_f32(v177, vmul_n_f32(v183, COERCE_FLOAT(*v83))))));
                  switch(v143)
                  {
                    case 1:
                      v85.i32[0] = v85.i32[1];
                      break;
                    case 2:
                      v85.i32[0] = v85.i32[2];
                      break;
                    case 3:
                      v85.i32[0] = v85.i32[3];
                      break;
                    case 4:
                      float v86 = 0.2126 * *(float *)v85.i32;
                      v85.i32[0] = vextq_s8(v85, v85, 8uLL).u32[0];
                      *(float32x2_t *)v85.i8 = vmul_f32(*(float32x2_t *)v85.i8, (float32x2_t)0x3F3717593D93DD98);
                      *(float *)v85.i32 = *(float *)v85.i32 + (float)(v86 + *(float *)&v85.i32[1]);
                      break;
                    default:
                      break;
                  }
                  *(float *)v85.i32 = v189.f32[0] + (float)(v185 * *(float *)v85.i32);
                  switch(v64)
                  {
                    case 1:
                      *(float *)v85.i32 = *(float *)v188.i32 * *(float *)v85.i32;
                      float32x4_t v84 = vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v85.i8, 0), *v82);
                      v84.i32[3] = v172;
                      break;
                    case 2:
                      float32x4_t v84 = vmulq_n_f32(*v82, *(float *)v188.i32 * *(float *)v85.i32);
                      v84.i32[3] = v173;
                      break;
                    case 3:
                      float v87 = v82->f32[2];
                      float v88 = *(float *)v188.i32 * (float)(*(float *)v85.i32 - v87);
                      *(float32x2_t *)v84.f32 = vadd_f32(*(float32x2_t *)v82->f32, vmul_n_f32(vsub_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v85.i8, 0), *(float32x2_t *)v82->f32), *(float *)v188.i32));
                      v84.f32[2] = v87 + v88;
                      v84.i32[3] = 0;
                      break;
                    default:
                      *(float *)v85.i32 = *(float *)v188.i32 * *(float *)v85.i32;
                      float32x4_t v84 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v85.i8, 0);
                      v84.i32[3] = 0;
                      break;
                  }
                  *v82++ = v84;
                  ++v83;
                  --v81;
                }
                while (v81);
              }
            }
            sub_1B6345178(v170, (unsigned __int16 **)&v195, (uint64_t)v233);
            sub_1B634507C((char *)v69);
            uint64_t v60 = v154;
            ecs_stack_allocator_pop_snapshot(v154);
            if (v167)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v69 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v69 + 376));
            }
            swift_release();
            uint64_t v61 = v165 + 1;
          }
          while (v165 + 1 != v157);
LABEL_128:
          swift_release();
          sub_1B66576EC(v210[0].i64);
          goto LABEL_129;
        }
      }
      goto LABEL_124;
    }
LABEL_125:
    swift_release();
    goto LABEL_126;
  }
  if (v8 == 1)
  {
    sub_1B62C9DA8(v2, (uint64_t)&v201, 0x200000000, &v212);
    sub_1B62CA210((uint64_t)&v212, (uint64_t)&v213, (unint64_t *)&qword_1EB97DC50);
    if ((void)v213)
    {
      if (v220 > 0)
      {
        uint64_t v136 = v217;
        if (v217)
        {
          uint64_t v30 = v219[4];
          char v148 = *(unsigned char *)(v218 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          long long v195 = v213;
          long long v196 = v214;
          uint64_t v197 = v215;
          uint64_t v130 = (uint64_t)(v219 + 6);
          uint64_t v132 = v216;
          float32x4_t v151 = v219;
          uint64_t v128 = v219 + 8;
          float32x2_t v179 = (float32x2_t)v191;
          float32x2_t v182 = *(float32x2_t *)v190.f32;
          float32x2_t v176 = (float32x2_t)v192;
          float32x2_t v164 = (float32x2_t)vdupq_lane_s32(v188, 0).u64[0];
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          v33.f32[0] = v18 - v189.f32[0];
          v33.f32[1] = v19 - v189.f32[1];
          float32x2_t v186 = v33;
          uint64_t v127 = v6;
          uint64_t v34 = v6;
          uint64_t v35 = v7;
          uint64_t v134 = v30;
          while (1)
          {
            uint64_t v142 = v32;
            uint64_t v145 = v31;
            char v36 = (unsigned int *)(v132 + 48 * v31);
            uint64_t v140 = *v36;
            uint64_t v138 = v36[1];
            uint64_t v37 = (uint64_t *)*((void *)v36 + 2);
            uint64_t v38 = *((void *)v36 + 3);
            uint64_t v39 = *((void *)v36 + 4);
            uint64_t v40 = *((void *)v36 + 5);
            if (v148)
            {
              char v41 = *(os_unfair_lock_s **)(v40 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v41);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v40 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v30);
            sub_1B62CA210(v130, (uint64_t)v233, &qword_1EB97DE20);
            uint64_t v42 = v151[4];
            uint64_t v43 = *(void *)(*(void *)(*(void *)(*(void *)(v40 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v151[6] = ecs_stack_allocator_allocate(v42, 48 * v43, 8);
            v151[7] = v43;
            v128[1] = 0;
            v128[2] = 0;
            void *v128 = 0;
            swift_release();
            uint64_t v44 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v37, v38, v39, (uint64_t)v151);
            uint64_t v45 = sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v37, v38, v39, (uint64_t)v151);
            int v46 = (float32x4_t *)v45;
            if (v37)
            {
              uint64_t v32 = v142;
              if (v39)
              {
                uint64_t v30 = v134;
                do
                {
                  (*((void (**)(_OWORD *, double))&v208 + 1))(v207, COERCE_DOUBLE(vadd_f32(vmul_laneq_f32(v179, *v44, 2), vadd_f32(v176, vmul_n_f32(v182, COERCE_FLOAT(*v44))))));
                  switch(v34)
                  {
                    case 1:
                      v48.i32[0] = v48.i32[1];
                      break;
                    case 2:
                      v48.i32[0] = v48.i32[2];
                      break;
                    case 3:
                      v48.i32[0] = v48.i32[3];
                      break;
                    case 4:
                      float v49 = 0.2126 * *(float *)v48.i32;
                      v48.i32[0] = vextq_s8(v48, v48, 8uLL).u32[0];
                      *(float32x2_t *)v48.i8 = vmul_f32(*(float32x2_t *)v48.i8, (float32x2_t)0x3F3717593D93DD98);
                      *(float *)v48.i32 = *(float *)v48.i32 + (float)(v49 + *(float *)&v48.i32[1]);
                      break;
                    default:
                      break;
                  }
                  float32x2_t v50 = vadd_f32(v189, vmul_n_f32(v186, *(float *)v48.i32));
                  *(float32x2_t *)v51.f32 = v50;
                  v51.i64[1] = 1065353216;
                  switch(v35)
                  {
                    case 1:
                      float32x4_t v47 = vaddq_f32(vmulq_n_f32(v51, *(float *)v188.i32), *v46);
                      v47.i32[3] = v171;
                      break;
                    case 2:
                      float32x4_t v47 = vmulq_f32(vmulq_n_f32(v51, *(float *)v188.i32), *v46);
                      v47.i32[3] = v173;
                      break;
                    case 3:
                      *(float32x2_t *)v47.f32 = vadd_f32(*(float32x2_t *)v46->f32, vmul_f32(v164, vsub_f32(v50, *(float32x2_t *)v46->f32)));
                      v47.f32[2] = v46->f32[2] + (float)(*(float *)v188.i32 * (float)(1.0 - v46->f32[2]));
                      v47.i32[3] = 0;
                      break;
                    default:
                      float32x4_t v47 = vmulq_n_f32(v51, *(float *)v188.i32);
                      v47.i32[3] = v169;
                      break;
                  }
                  *v46++ = v47;
                  ++v44;
                  --v39;
                }
                while (v39);
                goto LABEL_34;
              }
            }
            else
            {
              uint64_t v32 = v142;
              if (v140 != v138)
              {
                uint64_t v52 = v138 - v140;
                BOOL v53 = (float32x4_t *)(v45 + 16 * v140);
                int v54 = &v44[v140];
                uint64_t v30 = v134;
                do
                {
                  (*((void (**)(_OWORD *, double))&v208 + 1))(v207, COERCE_DOUBLE(vadd_f32(vmul_laneq_f32(v179, *v54, 2), vadd_f32(v176, vmul_n_f32(v182, COERCE_FLOAT(*v54))))));
                  switch(v127)
                  {
                    case 1:
                      v56.i32[0] = v56.i32[1];
                      break;
                    case 2:
                      v56.i32[0] = v56.i32[2];
                      break;
                    case 3:
                      v56.i32[0] = v56.i32[3];
                      break;
                    case 4:
                      float v57 = 0.2126 * *(float *)v56.i32;
                      v56.i32[0] = vextq_s8(v56, v56, 8uLL).u32[0];
                      *(float32x2_t *)v56.i8 = vmul_f32(*(float32x2_t *)v56.i8, (float32x2_t)0x3F3717593D93DD98);
                      *(float *)v56.i32 = *(float *)v56.i32 + (float)(v57 + *(float *)&v56.i32[1]);
                      break;
                    default:
                      break;
                  }
                  float32x2_t v58 = vadd_f32(v189, vmul_n_f32(v186, *(float *)v56.i32));
                  *(float32x2_t *)v59.f32 = v58;
                  v59.i64[1] = 1065353216;
                  switch(v35)
                  {
                    case 1:
                      float32x4_t v55 = vaddq_f32(vmulq_n_f32(v59, *(float *)v188.i32), *v53);
                      v55.i32[3] = v158;
                      break;
                    case 2:
                      float32x4_t v55 = vmulq_f32(vmulq_n_f32(v59, *(float *)v188.i32), *v53);
                      v55.i32[3] = v162;
                      break;
                    case 3:
                      *(float32x2_t *)v55.f32 = vadd_f32(*(float32x2_t *)v53->f32, vmul_f32(v164, vsub_f32(v58, *(float32x2_t *)v53->f32)));
                      v55.f32[2] = v53->f32[2] + (float)(*(float *)v188.i32 * (float)(1.0 - v53->f32[2]));
                      v55.i32[3] = 0;
                      break;
                    default:
                      float32x4_t v55 = vmulq_n_f32(v59, *(float *)v188.i32);
                      v55.i32[3] = v156;
                      break;
                  }
                  *v53++ = v55;
                  ++v54;
                  --v52;
                }
                while (v52);
                goto LABEL_34;
              }
            }
            uint64_t v30 = v134;
LABEL_34:
            sub_1B6345178(v151, (unsigned __int16 **)&v195, (uint64_t)v233);
            sub_1B634507C((char *)v40);
            ecs_stack_allocator_pop_snapshot(v30);
            if (v148)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v40 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v40 + 376));
            }
            swift_release();
            uint64_t v31 = v145 + 1;
            if (v145 + 1 == v136) {
              goto LABEL_128;
            }
          }
        }
      }
      goto LABEL_124;
    }
    goto LABEL_125;
  }
  sub_1B62C9DA8(v2, (uint64_t)&v201, 0x200000000, &v212);
  sub_1B62CA210((uint64_t)&v212, (uint64_t)&v213, (unint64_t *)&qword_1EB97DC50);
  if (!(void)v213) {
    goto LABEL_125;
  }
  if (v220 > 0)
  {
    uint64_t v139 = v217;
    if (v217)
    {
      float v89 = v20 - v15;
      uint64_t v90 = v219[4];
      char v153 = *(unsigned char *)(v218 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      long long v195 = v213;
      long long v196 = v214;
      uint64_t v197 = v215;
      uint64_t v135 = (uint64_t)(v219 + 6);
      uint64_t v137 = v216;
      float v155 = v219;
      uint64_t v133 = v219 + 8;
      float32x2_t v181 = (float32x2_t)v191;
      float32x2_t v184 = *(float32x2_t *)v190.f32;
      float32x2_t v178 = (float32x2_t)v192;
      float32x2_t v168 = (float32x2_t)vdupq_lane_s32(v188, 0).u64[0];
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v91 = 0;
      uint64_t v92 = 0;
      uint64_t v129 = v6;
      uint64_t v131 = v90;
      float32x2_t v187 = (float32x2_t)__PAIR64__(v19 - v189.f32[1], LODWORD(v185));
      uint64_t v93 = v6;
      uint64_t v94 = v7;
      while (1)
      {
        unint64_t v95 = (unsigned int *)(v137 + 48 * v91);
        uint64_t v144 = *v95;
        uint64_t v147 = v91;
        uint64_t v141 = v95[1];
        id v96 = (uint64_t *)*((void *)v95 + 2);
        uint64_t v97 = *((void *)v95 + 3);
        uint64_t v99 = *((void *)v95 + 4);
        uint64_t v98 = *((void *)v95 + 5);
        uint64_t v150 = v92;
        if (v153)
        {
          char v100 = *(os_unfair_lock_s **)(v98 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v100);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v98 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v90);
        sub_1B62CA210(v135, (uint64_t)v233, &qword_1EB97DE20);
        uint64_t v101 = v155[4];
        uint64_t v102 = *(void *)(*(void *)(*(void *)(*(void *)(v98 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v155[6] = ecs_stack_allocator_allocate(v101, 48 * v102, 8);
        v155[7] = v102;
        v133[1] = 0;
        v133[2] = 0;
        *uint64_t v133 = 0;
        swift_release();
        __int16 v103 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v96, v97, v99, (uint64_t)v155);
        uint64_t v104 = sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v96, v97, v99, (uint64_t)v155);
        uint64_t v105 = (float32x4_t *)v104;
        if (v96)
        {
          uint64_t v92 = v150;
          if (v99)
          {
            uint64_t v90 = v131;
            uint64_t v106 = v147;
            do
            {
              (*((void (**)(_OWORD *, double))&v208 + 1))(v207, COERCE_DOUBLE(vadd_f32(vmul_laneq_f32(v181, *v103, 2), vadd_f32(v178, vmul_n_f32(v184, COERCE_FLOAT(*v103))))));
              switch(v93)
              {
                case 1:
                  v108.i32[0] = v108.i32[1];
                  break;
                case 2:
                  v108.i32[0] = v108.i32[2];
                  break;
                case 3:
                  v108.i32[0] = v108.i32[3];
                  break;
                case 4:
                  float v109 = 0.2126 * *(float *)v108.i32;
                  v108.i32[0] = vextq_s8(v108, v108, 8uLL).u32[0];
                  *(float32x2_t *)v108.i8 = vmul_f32(*(float32x2_t *)v108.i8, (float32x2_t)0x3F3717593D93DD98);
                  *(float *)v108.i32 = *(float *)v108.i32 + (float)(v109 + *(float *)&v108.i32[1]);
                  break;
                default:
                  break;
              }
              float32x2_t v110 = vadd_f32(v189, vmul_n_f32(v187, *(float *)v108.i32));
              float v111 = v15 + (float)(v89 * *(float *)v108.i32);
              *(float32x2_t *)v112.f32 = v110;
              v112.i64[1] = LODWORD(v111);
              switch(v94)
              {
                case 1:
                  float32x4_t v107 = vaddq_f32(vmulq_n_f32(v112, *(float *)v188.i32), *v105);
                  v107.i32[3] = v172;
                  break;
                case 2:
                  float32x4_t v107 = vmulq_f32(vmulq_n_f32(v112, *(float *)v188.i32), *v105);
                  v107.i32[3] = v174;
                  break;
                case 3:
                  float v113 = v105->f32[2];
                  float v114 = *(float *)v188.i32 * (float)(v111 - v113);
                  *(float32x2_t *)v107.f32 = vadd_f32(*(float32x2_t *)v105->f32, vmul_f32(v168, vsub_f32(v110, *(float32x2_t *)v105->f32)));
                  v107.f32[2] = v113 + v114;
                  v107.i32[3] = 0;
                  break;
                default:
                  float32x4_t v107 = vmulq_n_f32(v112, *(float *)v188.i32);
                  v107.i32[3] = v171;
                  break;
              }
              *v105++ = v107;
              ++v103;
              --v99;
            }
            while (v99);
            goto LABEL_110;
          }
        }
        else
        {
          uint64_t v92 = v150;
          if (v144 != v141)
          {
            uint64_t v115 = v141 - v144;
            float32x4_t v116 = (float32x4_t *)(v104 + 16 * v144);
            uint64_t v117 = &v103[v144];
            uint64_t v90 = v131;
            do
            {
              (*((void (**)(_OWORD *, double))&v208 + 1))(v207, COERCE_DOUBLE(vadd_f32(vmul_laneq_f32(v181, *v117, 2), vadd_f32(v178, vmul_n_f32(v184, COERCE_FLOAT(*v117))))));
              switch(v129)
              {
                case 1:
                  v119.i32[0] = v119.i32[1];
                  break;
                case 2:
                  v119.i32[0] = v119.i32[2];
                  break;
                case 3:
                  v119.i32[0] = v119.i32[3];
                  break;
                case 4:
                  float v120 = 0.2126 * *(float *)v119.i32;
                  v119.i32[0] = vextq_s8(v119, v119, 8uLL).u32[0];
                  *(float32x2_t *)v119.i8 = vmul_f32(*(float32x2_t *)v119.i8, (float32x2_t)0x3F3717593D93DD98);
                  *(float *)v119.i32 = *(float *)v119.i32 + (float)(v120 + *(float *)&v119.i32[1]);
                  break;
                default:
                  break;
              }
              float32x2_t v121 = vadd_f32(v189, vmul_n_f32(v187, *(float *)v119.i32));
              float v122 = v15 + (float)(v89 * *(float *)v119.i32);
              *(float32x2_t *)v123.f32 = v121;
              v123.i64[1] = LODWORD(v122);
              switch(v94)
              {
                case 1:
                  float32x4_t v118 = vaddq_f32(vmulq_n_f32(v123, *(float *)v188.i32), *v116);
                  v118.i32[3] = v162;
                  break;
                case 2:
                  float32x4_t v118 = vmulq_f32(vmulq_n_f32(v123, *(float *)v188.i32), *v116);
                  v118.i32[3] = v166;
                  break;
                case 3:
                  float v124 = v116->f32[2];
                  float v125 = *(float *)v188.i32 * (float)(v122 - v124);
                  *(float32x2_t *)v118.f32 = vadd_f32(*(float32x2_t *)v116->f32, vmul_f32(v168, vsub_f32(v121, *(float32x2_t *)v116->f32)));
                  v118.f32[2] = v124 + v125;
                  v118.i32[3] = 0;
                  break;
                default:
                  float32x4_t v118 = vmulq_n_f32(v123, *(float *)v188.i32);
                  v118.i32[3] = v160;
                  break;
              }
              *v116++ = v118;
              ++v117;
              --v115;
            }
            while (v115);
            goto LABEL_109;
          }
        }
        uint64_t v90 = v131;
LABEL_109:
        uint64_t v106 = v147;
LABEL_110:
        sub_1B6345178(v155, (unsigned __int16 **)&v195, (uint64_t)v233);
        sub_1B634507C((char *)v98);
        ecs_stack_allocator_pop_snapshot(v90);
        if (v153)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v98 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v98 + 376));
        }
        swift_release();
        uint64_t v91 = v106 + 1;
        if (v91 == v139) {
          goto LABEL_128;
        }
      }
    }
  }
LABEL_124:
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  sub_1B66576EC(v210[0].i64);
LABEL_129:
  swift_release();
  sub_1B632F170(&v212);
  return sub_1B632F170(&v212);
}

__n128 initializeWithCopy for ParticleSizeOverTexture(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleSizeOverTexture(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 68)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 20);
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSizeOverTexture(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 68) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 68) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 20) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSizeOverTexture()
{
  return &type metadata for ParticleSizeOverTexture;
}

uint64_t sub_1B67FE678@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B67FEC14(0, &qword_1E9DD0B50, (uint64_t (*)(void))sub_1B67FEBC0, (uint64_t)&type metadata for ParticleSizeOverTexture.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v27 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  double v9 = (char *)&v23 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B67FEBC0();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  char v28 = 0;
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  uint64_t v10 = v29;
  char v28 = 1;
  sub_1B62A85E8();
  sub_1B6E32DF8();
  int v11 = v29;
  char v28 = 2;
  sub_1B62AAB40();
  sub_1B6E32DF8();
  int v26 = v11;
  int v12 = v29;
  char v28 = 3;
  sub_1B63BD348();
  sub_1B6E32DF8();
  int v25 = v12;
  int v13 = v29;
  int v14 = HIDWORD(v29);
  char v28 = 4;
  sub_1B66C6070();
  sub_1B6E32DF8();
  int v23 = v13;
  int v24 = v29;
  sub_1B62AA858();
  char v28 = 5;
  sub_1B62AA5EC((unint64_t *)&qword_1EB980418);
  sub_1B6E32DF8();
  uint64_t v15 = v29;
  char v28 = 6;
  sub_1B6E32DF8();
  uint64_t v16 = v29;
  char v28 = 7;
  sub_1B6E32DF8();
  uint64_t v17 = v29;
  sub_1B67FEC14(0, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
  char v28 = 8;
  sub_1B67FECD0((unint64_t *)&qword_1EB97D1D0);
  sub_1B6E32DF8();
  uint64_t v18 = v29;
  char v28 = 9;
  sub_1B6E32DF8();
  uint64_t v19 = v29;
  LOBYTE(v29) = 10;
  sub_1B6E32DC8();
  int v21 = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v27);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(void *)a2 = v10;
  *(unsigned char *)(a2 + 8) = v26;
  *(unsigned char *)(a2 + 9) = v25;
  *(unsigned char *)(a2 + 12) = v23;
  *(_DWORD *)(a2 + 16) = v14;
  *(unsigned char *)(a2 + 20) = v24;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = v18;
  *(void *)(a2 + 56) = v19;
  *(_DWORD *)(a2 + 64) = v21;
  return result;
}

unint64_t sub_1B67FEBC0()
{
  unint64_t result = qword_1E9DD0B58;
  if (!qword_1E9DD0B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0B58);
  }
  return result;
}

void sub_1B67FEC14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B67FEC7C()
{
  unint64_t result = qword_1E9DD0B68;
  if (!qword_1E9DD0B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0B68);
  }
  return result;
}

uint64_t sub_1B67FECD0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B67FEC14(255, &qword_1EB980E90, (uint64_t (*)(void))sub_1B6645830, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBC280]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ParticleSizeOverTexture.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B67FEE18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSizeOverTexture.CodingKeys()
{
  return &type metadata for ParticleSizeOverTexture.CodingKeys;
}

unint64_t sub_1B67FEE54()
{
  unint64_t result = qword_1E9DD0B70;
  if (!qword_1E9DD0B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0B70);
  }
  return result;
}

unint64_t sub_1B67FEEAC()
{
  unint64_t result = qword_1E9DD0B78;
  if (!qword_1E9DD0B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0B78);
  }
  return result;
}

unint64_t sub_1B67FEF04()
{
  unint64_t result = qword_1E9DD0B80;
  if (!qword_1E9DD0B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0B80);
  }
  return result;
}

uint64_t sub_1B67FEF58()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  int v4 = 0;
  size_t v3 = 4;
  uint64_t result = sysctlbyname("kern.hv_vmm_present", &v4, &v3, 0, 0);
  if (result) {
    BOOL v1 = 1;
  }
  else {
    BOOL v1 = v4 == 0;
  }
  char v2 = v1;
  byte_1EB99799C = v2;
  return result;
}

uint64_t sub_1B67FEFE0()
{
  return sub_1B6E31BD8();
}

uint64_t sub_1B67FF040()
{
  return sub_1B6E31B38();
}

void sub_1B67FF090(void *a1@<X8>)
{
  *a1 = &unk_1F0F53DB0;
}

uint64_t sub_1B67FF0A0(uint64_t a1)
{
  *(void *)(v1 + 24) = 0xFFFFFFFFLL;
  *(void *)(v1 + 32) = 2;
  *(double *)(v1 + 40) = nullsub_1(a1);
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 56) = v4;
  *(void *)(v1 + 64) = v5;
  *(_DWORD *)(v1 + 72) = 0;
  *(unsigned char *)(v1 + 76) = 2;
  *(void *)(v1 + 80) = 0;
  *(unsigned char *)(v1 + 88) = 1;
  *(_WORD *)(v1 + 89) = 0;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(unsigned char *)(v1 + 144) = 1;
  *(void *)(v1 + 152) = -1;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(v1 + 160) = _Q0;
  *(unsigned char *)(v1 + 176) = 0;
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1B67FF138()
{
  sub_1B62C6A50(*(void *)(v0 + 96));
  sub_1B62C6A50(*(void *)(v0 + 112));
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

double (*sub_1B67FF188())(void)
{
  return nullsub_1;
}

uint64_t sub_1B67FF1A8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = 2;
  *(double *)(v2 + 40) = nullsub_1(a1);
  *(void *)(v2 + 48) = v5;
  *(void *)(v2 + 56) = v6;
  *(void *)(v2 + 64) = v7;
  *(_DWORD *)(v2 + 72) = 0;
  *(unsigned char *)(v2 + 76) = 2;
  *(void *)(v2 + 80) = 0xFFFFFFFFLL;
  *(unsigned char *)(v2 + 88) = 0;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(void *)(v2 + 128) = -1;
  *(unsigned char *)(v2 + 136) = 1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_1B67FF22C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1B62C6A50(*(void *)(v0 + 96));
  sub_1B62C6A50(*(void *)(v0 + 112));

  return swift_deallocClassInstance();
}

uint64_t sub_1B67FF27C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1B67FF284()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1B67FF28C()
{
  return *(void *)(v0 + 128);
}

double (*sub_1B67FF294())(void)
{
  return nullsub_1;
}

double sub_1B67FF2B4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_width);
  objc_msgSend(v1, sel_height);
  return (double)(uint64_t)v2;
}

uint64_t sub_1B67FF300()
{
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_1B67FF308()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_1B67FF310(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  *(void *)(v5 + 16) = 0xFFFFFFFFLL;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(v5 + 24) = _Q0;
  *(void *)(v5 + 56) = 0x3FF0000000000000;
  *(_DWORD *)(v5 + 64) = 0;
  *(unsigned char *)(v5 + 68) = 2;
  *(_OWORD *)(v5 + 72) = xmmword_1B6E87130;
  *(double *)(v5 + 88) = nullsub_1(a1);
  *(void *)(v5 + 96) = v16;
  *(void *)(v5 + 104) = v17;
  *(void *)(v5 + 112) = v18;
  *(_WORD *)(v5 + 121) = 0;
  if (a3) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = a2;
  }
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = v19;
  *(unsigned char *)(v5 + 120) = a5;
  *(void *)(v5 + 128) = a4;
  *(void *)(v5 + 136) = 0;
  return v5;
}

uint64_t sub_1B67FF3B8()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

double (*sub_1B67FF3F0())(void)
{
  return nullsub_1;
}

double sub_1B67FF410()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_1B67FF418()
{
  return *(void *)(v0 + 40);
}

double sub_1B67FF420()
{
  return *(double *)(v0 + 88);
}

uint64_t sub_1B67FF42C()
{
  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t sub_1B67FF434()
{
  return *(unsigned __int8 *)(v0 + 121);
}

unint64_t sub_1B67FF43C()
{
  return *(unsigned int *)(v0 + 64) | ((unint64_t)*(unsigned __int8 *)(v0 + 68) << 32);
}

uint64_t sub_1B67FF44C()
{
  return *(unsigned __int8 *)(v0 + 122);
}

uint64_t sub_1B67FF454()
{
  return 0;
}

uint64_t PixelFormatDepth.description.getter(char a1)
{
  switch(a1)
  {
    case 0:
      return 0x7469622038;
    case 2:
      return 0x746962203031;
    case 1:
      return 0x746962203631;
  }
  uint64_t result = sub_1B6E337C8();
  __break(1u);
  return result;
}

uint64_t sub_1B67FF4EC()
{
  int v1 = *v0;
  if (!*v0) {
    return 0x7469622038;
  }
  if (v1 == 2) {
    return 0x746962203031;
  }
  if (v1 == 1) {
    return 0x746962203631;
  }
  uint64_t result = sub_1B6E337C8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CAMetalLayerRenderOutput()
{
  return self;
}

uint64_t type metadata accessor for MTLTextureRenderOutput()
{
  return self;
}

uint64_t type metadata accessor for MockRenderOutput()
{
  return self;
}

void sub_1B67FF5E4()
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 352));
  id v2 = *(os_unfair_lock_s **)(v0 + 352);
  uint64_t v1 = *(void *)(v0 + 360);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  uint64_t v3 = 0;
  uint64_t v4 = v1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    uint64_t v11 = v3 + 1;
    if (v3 + 1 >= v8) {
      goto LABEL_19;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    if (!v12)
    {
      uint64_t v11 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_19;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v11);
      if (!v12)
      {
        uint64_t v11 = v3 + 3;
        if (v3 + 3 >= v8) {
          goto LABEL_19;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v11);
        if (!v12)
        {
          uint64_t v11 = v3 + 4;
          if (v3 + 4 >= v8) {
            goto LABEL_19;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v11);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_18:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v11 << 6);
    uint64_t v3 = v11;
LABEL_5:
    objc_msgSend(*(id *)(*(void *)(v1 + 48) + 8 * v10), sel_waitUntilScheduled);
  }
  while (v8 - 5 != v3)
  {
    unint64_t v12 = *(void *)(v1 + 96 + 8 * v3++);
    if (v12)
    {
      uint64_t v11 = v3 + 4;
      goto LABEL_18;
    }
  }
LABEL_19:
  swift_release();
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 352));
  int v13 = *(os_unfair_lock_s **)(v0 + 352);

  os_unfair_lock_unlock(v13);
}

uint64_t sub_1B67FF750(uint64_t a1)
{
  return sub_1B68004A0(a1, (uint64_t)&unk_1F0FA7160);
}

uint64_t sub_1B67FF778(uint64_t a1)
{
  RGTextureDescriptorMakeDefault((uint64_t)&v18);
  char v2 = BYTE10(v18);
  long long v15 = v21;
  uint64_t v3 = v22;
  int v4 = v23;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  *(void *)&long long v18 = 0x1000100010001;
  WORD4(v18) = 257;
  BYTE10(v18) = v2;
  long long v19 = xmmword_1B6E871C0;
  long long v20 = xmmword_1B6E4F270;
  long long v21 = v15;
  uint64_t v22 = v3;
  int v23 = v4;
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v18, v5);
  id v6 = objc_msgSend(*(id *)(a1 + 16), sel_newTextureWithDescriptor_, v5);
  if (v6)
  {
    unint64_t v7 = v6;
    sub_1B6331FD0((uint64_t)v6);
    swift_getObjectType();
    objc_msgSend(v7, sel_setLabel_, 0);

    __int16 v17 = 31743;
    sub_1B6801D20((uint64_t)objc_msgSend(v7, sel_width), (uint64_t)objc_msgSend(v7, sel_height), &v18);
    long long v14 = v19;
    long long v16 = v18;
    long long v8 = v20;
    uint64_t v9 = sub_1B6BBAFE8();
    long long v18 = v16;
    long long v19 = v14;
    long long v20 = v8;
    objc_msgSend(v7, sel_replaceRegion_mipmapLevel_withBytes_bytesPerRow_, &v18, 0, &v17, v9);
    return (uint64_t)v7;
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v18 = 0;
    *((void *)&v18 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&long long v18 = 0xD000000000000023;
    *((void *)&v18 + 1) = 0x80000001B6F379E0;
    id v11 = objc_msgSend(v5, sel_description);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v12 = v18;
    int v13 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v18 = 0;
    swift_retain();
    sub_1B6B33E34(v13, (uint64_t *)&v18, v12, *((uint64_t *)&v12 + 1));

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B67FFA8C(uint64_t a1)
{
  return sub_1B68004A0(a1, (uint64_t)&unk_1F0FA7190);
}

uint64_t sub_1B67FFAB4(uint64_t a1)
{
  return sub_1B6800158(a1, (uint64_t)&unk_1F0FA72D8);
}

uint64_t sub_1B67FFAD4(uint64_t a1)
{
  RGTextureDescriptorMakeDefault((uint64_t)&v18);
  char v2 = BYTE10(v18);
  long long v16 = v22;
  uint64_t v3 = v23;
  int v4 = v24;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  *(void *)&long long v18 = 0x1000100010001;
  WORD4(v18) = 257;
  BYTE10(v18) = v2;
  long long v19 = 0x46uLL;
  uint64_t v20 = 0;
  uint64_t v21 = 1;
  long long v22 = v16;
  uint64_t v23 = v3;
  int v24 = v4;
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v18, v5);
  id v6 = objc_msgSend(*(id *)(a1 + 16), sel_newTextureWithDescriptor_, v5);
  if (v6)
  {
    unint64_t v7 = v6;
    sub_1B6331FD0((uint64_t)v6);
    swift_getObjectType();
    objc_msgSend(v7, sel_setLabel_, 0);

    sub_1B680338C((uint64_t)objc_msgSend(v7, sel_width), (uint64_t)objc_msgSend(v7, sel_height), (uint64_t)objc_msgSend(v7, sel_depth), &v18);
    long long v15 = v19;
    long long v17 = v18;
    uint64_t v8 = v20;
    uint64_t v9 = v21;
    uint64_t v10 = sub_1B6BBAFE8();
    long long v18 = v17;
    long long v19 = v15;
    uint64_t v20 = v8;
    uint64_t v21 = v9;
    objc_msgSend(v7, sel_replaceRegion_mipmapLevel_withBytes_bytesPerRow_, &v18, 0, &unk_1F0FA7250, v10);
    return (uint64_t)v7;
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v18 = 0;
    *((void *)&v18 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&long long v18 = 0xD000000000000023;
    *((void *)&v18 + 1) = 0x80000001B6F379E0;
    id v12 = objc_msgSend(v5, sel_description);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v13 = v18;
    int v14 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v18 = 0;
    swift_retain();
    sub_1B6B33E34(v14, (uint64_t *)&v18, v13, *((uint64_t *)&v13 + 1));

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B67FFDF0(uint64_t a1)
{
  return sub_1B68004A0(a1, (uint64_t)&unk_1F0FA7278);
}

uint64_t sub_1B67FFE18(uint64_t a1)
{
  RGTextureDescriptorMakeDefault((uint64_t)&v17);
  char v2 = BYTE10(v17);
  long long v15 = v20;
  uint64_t v3 = v21;
  int v4 = v22;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  *(void *)&long long v17 = 0x1000100010001;
  WORD4(v17) = 257;
  BYTE10(v17) = v2;
  long long v18 = xmmword_1B6E871D0;
  long long v19 = xmmword_1B6E4F270;
  long long v20 = v15;
  uint64_t v21 = v3;
  int v22 = v4;
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v17, v5);
  id v6 = objc_msgSend(*(id *)(a1 + 16), sel_newTextureWithDescriptor_, v5);
  if (v6)
  {
    unint64_t v7 = v6;
    sub_1B6331FD0((uint64_t)v6);
    swift_getObjectType();
    objc_msgSend(v7, sel_setLabel_, 0);

    sub_1B680338C((uint64_t)objc_msgSend(v7, sel_width), (uint64_t)objc_msgSend(v7, sel_height), (uint64_t)objc_msgSend(v7, sel_depth), &v17);
    long long v14 = v18;
    long long v16 = v17;
    long long v8 = v19;
    uint64_t v9 = sub_1B6BBAFE8();
    long long v17 = v16;
    long long v18 = v14;
    long long v19 = v8;
    objc_msgSend(v7, sel_replaceRegion_mipmapLevel_withBytes_bytesPerRow_, &v17, 0, &unk_1F0FA72A8, v9);
    return (uint64_t)v7;
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v17 = 0;
    *((void *)&v17 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&long long v17 = 0xD000000000000023;
    *((void *)&v17 + 1) = 0x80000001B6F379E0;
    id v11 = objc_msgSend(v5, sel_description);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v12 = v17;
    int v13 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v17 = 0;
    swift_retain();
    sub_1B6B33E34(v13, (uint64_t *)&v17, v12, *((uint64_t *)&v12 + 1));

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6800138(uint64_t a1)
{
  return sub_1B6800158(a1, (uint64_t)&unk_1F0FA7330);
}

uint64_t sub_1B6800158(uint64_t a1, uint64_t a2)
{
  RGTextureDescriptorMakeDefault((uint64_t)&v19);
  char v4 = BYTE10(v19);
  long long v17 = v22;
  uint64_t v5 = v23;
  int v6 = v24;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  *(void *)&long long v19 = 0x1000100010001;
  WORD4(v19) = 257;
  BYTE10(v19) = v4;
  long long v20 = xmmword_1B6E871E0;
  long long v21 = xmmword_1B6E4F270;
  long long v22 = v17;
  uint64_t v23 = v5;
  int v24 = v6;
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v19, v7);
  id v8 = objc_msgSend(*(id *)(a1 + 16), sel_newTextureWithDescriptor_, v7);
  if (v8)
  {
    uint64_t v9 = v8;
    sub_1B6331FD0((uint64_t)v8);
    swift_getObjectType();
    objc_msgSend(v9, sel_setLabel_, 0);

    sub_1B680338C((uint64_t)objc_msgSend(v9, sel_width), (uint64_t)objc_msgSend(v9, sel_height), (uint64_t)objc_msgSend(v9, sel_depth), &v19);
    long long v16 = v20;
    long long v18 = v19;
    long long v10 = v21;
    uint64_t v11 = sub_1B6BBAFE8();
    long long v19 = v18;
    long long v20 = v16;
    long long v21 = v10;
    objc_msgSend(v9, sel_replaceRegion_mipmapLevel_withBytes_bytesPerRow_, &v19, 0, a2, v11);
    return (uint64_t)v9;
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v19 = 0;
    *((void *)&v19 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&long long v19 = 0xD000000000000023;
    *((void *)&v19 + 1) = 0x80000001B6F379E0;
    id v13 = objc_msgSend(v7, sel_description);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v14 = v19;
    int v15 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v19 = 0;
    swift_retain();
    sub_1B6B33E34(v15, (uint64_t *)&v19, v14, *((uint64_t *)&v14 + 1));

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6800478(uint64_t a1)
{
  return sub_1B68004A0(a1, (uint64_t)&unk_1F0FA7308);
}

uint64_t sub_1B68004A0(uint64_t a1, uint64_t a2)
{
  RGTextureDescriptorMakeDefault((uint64_t)&v19);
  char v4 = BYTE10(v19);
  long long v17 = v22;
  uint64_t v5 = v23;
  int v6 = v24;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F35330]), sel_init);
  *(void *)&long long v19 = 0x1000100010001;
  WORD4(v19) = 257;
  BYTE10(v19) = v4;
  long long v20 = xmmword_1B6E871F0;
  long long v21 = xmmword_1B6E4F270;
  long long v22 = v17;
  uint64_t v23 = v5;
  int v24 = v6;
  RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v19, v7);
  id v8 = objc_msgSend(*(id *)(a1 + 16), sel_newTextureWithDescriptor_, v7);
  if (v8)
  {
    uint64_t v9 = v8;
    sub_1B6331FD0((uint64_t)v8);
    swift_getObjectType();
    objc_msgSend(v9, sel_setLabel_, 0);

    sub_1B6801D20((uint64_t)objc_msgSend(v9, sel_width), (uint64_t)objc_msgSend(v9, sel_height), &v19);
    long long v16 = v20;
    long long v18 = v19;
    long long v10 = v21;
    uint64_t v11 = sub_1B6BBAFE8();
    long long v19 = v18;
    long long v20 = v16;
    long long v21 = v10;
    objc_msgSend(v9, sel_replaceRegion_mipmapLevel_withBytes_bytesPerRow_, &v19, 0, a2, v11);
    return (uint64_t)v9;
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    *(void *)&long long v19 = 0;
    *((void *)&v19 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    *(void *)&long long v19 = 0xD000000000000023;
    *((void *)&v19 + 1) = 0x80000001B6F379E0;
    id v13 = objc_msgSend(v7, sel_description);
    sub_1B6E31798();

    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v14 = v19;
    int v15 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    *(void *)&long long v19 = 0;
    swift_retain();
    sub_1B6B33E34(v15, (uint64_t *)&v19, v14, *((uint64_t *)&v14 + 1));

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

void *sub_1B68007AC(uint64_t a1, uint64_t a2)
{
  if (a1 < 1) {
    return 0;
  }
  uint64_t v5 = *(void **)(v2 + 16);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(v5, sel_newBufferWithLength_options_, a1, a2);
  if (!v6)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    v11[1] = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    type metadata accessor for MTLResourceOptions(0);
    sub_1B6E32B18();
    int v9 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v11[0] = 0;
    swift_retain();
    sub_1B6B33E34(v9, v11, 0, 0xE000000000000000);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  id v7 = v6;
  id v8 = (void *)sub_1B6E31768();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setLabel_, v8);

  return v7;
}

BOOL sub_1B6800A38(void *a1, uint64_t a2)
{
  return *a1 == a2;
}

void sub_1B6800A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 176));
  uint64_t v11 = *(void *)(v4 + 216);
  int v9 = (void *)(v4 + 216);
  long long v10 = (void *)v11;
  uint64_t v12 = sub_1B6A806E4(v11, a1);
  if (v13)
  {
    if (a3)
    {
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *int v9 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        long long v10 = sub_1B68C3A9C(0, v10[2] + 1, 1, v10);
        *int v9 = v10;
      }
      unint64_t v19 = v10[2];
      unint64_t v18 = v10[3];
      if (v19 >= v18 >> 1)
      {
        long long v10 = sub_1B68C3A9C(v18 > 1, v19 + 1, 1, v10);
        *int v9 = v10;
      }
      v10[2] = v19 + 1;
      long long v20 = &v10[2 * v19];
      _OWORD v20[4] = a3;
      v20[5] = a4;
    }
  }
  else
  {
    uint64_t v14 = v12;
    if (a3)
    {
      swift_unknownObjectRetain_n();
      char v15 = swift_isUniquelyReferenced_nonNull_native();
      *int v9 = v10;
      if ((v15 & 1) == 0)
      {
        long long v10 = sub_1B6C16800(v10);
        *int v9 = v10;
      }
      long long v16 = &v10[2 * v14];
      _OWORD v16[4] = a3;
      v16[5] = a4;
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1B69F019C(v12);
    }
    swift_unknownObjectRelease();
  }
  long long v21 = *(os_unfair_lock_s **)(v5 + 176);

  os_unfair_lock_unlock(v21);
}

void sub_1B6800BB4(void *a1)
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (uint64_t *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager_counters);
    unsigned int v4 = *(_DWORD *)(Strong + OBJC_IVAR____TtC3VFX13EntityManager_counters + 20);
    objc_msgSend(a1, sel_GPUEndTime);
    double v6 = v5;
    objc_msgSend(a1, sel_GPUStartTime);
    if (*v3) {
      vfx_counters_update(*v3, v4, v6 - v7);
    }
    swift_release();
  }
  objc_msgSend(a1, sel_kernelStartTime);
  objc_msgSend(a1, sel_kernelEndTime);
  objc_msgSend(a1, sel_GPUStartTime);
  objc_msgSend(a1, sel_GPUEndTime);

  prof_commit();
}

uint64_t sub_1B6800C98()
{
  if (*(void *)(v0 + 496))
  {
    sub_1B6803454();
    swift_arrayDestroy();
    uint64_t v1 = *(void *)(v0 + 496);
    if (v1) {
      MEMORY[0x1BA9B84C0](v1, -1, -1);
    }
  }
  MEMORY[0x1BA9B84C0](*(void *)(v0 + 176), -1, -1);
  MEMORY[0x1BA9B84C0](*(void *)(v0 + 352), -1, -1);
  MEMORY[0x1BA9B84C0](*(void *)(v0 + 208), -1, -1);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1B6388B3C(v0 + 624, (uint64_t)v3);
  sub_1B637B268(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B6800E28()
{
  sub_1B6800C98();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6800E5C()
{
  return sub_1B6E33958();
}

uint64_t sub_1B6800E98()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6800EF0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 >= a2) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = a1;
  }
  if (v4 <= 1) {
    unint64_t v5 = 1;
  }
  else {
    unint64_t v5 = v4;
  }
  if ((a3 & 0x8000000000000000) == 0 && !HIDWORD(a3) && !HIDWORD(v5))
  {
    uint64_t v7 = v3;
    uint64_t v10 = *(void *)(v3 + 840);
    uint64_t v11 = a3 | (v5 << 32);
    if (*(void *)(v10 + 16)
      && (uint64_t v12 = sub_1B62BE38C(a3 | (v5 << 32)), (v13 & 1) != 0)
      && (uint64_t v14 = *(void *)(v10 + 56), *(void *)(v14 + 24 * v12) >= a1))
    {
      id v20 = *(id *)(v14 + 24 * v12 + 8);
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v15 = a1 - 1 + a2;
      uint64_t v16 = v15 / a2;
      if (a3) {
        uint64_t v17 = a3;
      }
      else {
        uint64_t v17 = v15 / a2;
      }
      if (v17 >= v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = v17;
      }
      if (v18 < 1) {
        int64_t v19 = 2 * a1;
      }
      else {
        int64_t v19 = 2 * ((a1 - 1 + v18) / v18 + a1) - 2;
      }
      if (v19 >= 0x10000)
      {
        id v20 = sub_1B6801228(v19, a1, v16, v5, v18, v7);
        uint64_t v21 = 4;
        if (!v20) {
          return (uint64_t)v20;
        }
      }
      else
      {
        id v20 = sub_1B6801100(v19, a1, v16, v5, v18, v7);
        uint64_t v21 = 2;
        if (!v20) {
          return (uint64_t)v20;
        }
      }
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = *(void *)(v7 + 840);
      *(void *)(v7 + 840) = 0x8000000000000000;
      sub_1B67E5E3C(a1, (uint64_t)v20, v21, v11, isUniquelyReferenced_nonNull_native);
      *(void *)(v7 + 840) = v24;
      swift_bridgeObjectRelease();
    }
    return (uint64_t)v20;
  }
  uint64_t result = sub_1B6E32BD8();
  __break(1u);
  return result;
}

id sub_1B6801100(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1B6640DD0(0, a1);
  if (a2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = (uint64_t)sub_1B6C16828(v12);
    }
    uint64_t v13 = 0;
    BOOL v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = v12 + 32;
    do
    {
      int v19 = 2 * (v13 % (a4 * a3) + v16 / a3);
      if (v14)
      {
        id v20 = (_WORD *)(v17 + 2 * v15);
        *id v20 = *(v20 - 1);
        v20[1] = v19;
        v15 += 2;
      }
      ++v16;
      uint64_t v18 = (_WORD *)(v17 + 2 * v15);
      *uint64_t v18 = v19;
      v18[1] = v19 | 1;
      v15 += 2;
      BOOL v14 = v16 % a5 == 0;
      v13 += a4;
    }
    while (a2 != v16);
  }
  id v21 = objc_msgSend(*(id *)(a6 + 16), sel_newBufferWithBytes_length_options_, v12 + 32, 2 * a1, 0);
  swift_bridgeObjectRelease();
  return v21;
}

id sub_1B6801228(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1B6640CE4(0, a1);
  if (a2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = (uint64_t)sub_1B6C16814(v12);
    }
    uint64_t v13 = 0;
    BOOL v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = v12 + 32;
    do
    {
      int v19 = 2 * (v13 % (a4 * a3) + v16 / a3);
      if (v14)
      {
        id v20 = (_DWORD *)(v17 + 4 * v15);
        *id v20 = *(v20 - 1);
        v20[1] = v19;
        v15 += 2;
      }
      ++v16;
      uint64_t v18 = (_DWORD *)(v17 + 4 * v15);
      *uint64_t v18 = v19;
      v18[1] = v19 | 1;
      v15 += 2;
      BOOL v14 = v16 % a5 == 0;
      v13 += a4;
    }
    while (a2 != v16);
  }
  id v21 = objc_msgSend(*(id *)(a6 + 16), sel_newBufferWithBytes_length_options_, v12 + 32, 4 * a1, 0);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1B6801348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + 848);
  if (*(void *)(v6 + 16))
  {
    unint64_t v7 = sub_1B69FB2A8(a1);
    if (v8)
    {
      uint64_t v9 = *(void *)(v6 + 56) + 40 * v7;
      uint64_t v11 = *(void **)v9;
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t v12 = *(void *)(v9 + 16);
      uint64_t v13 = *(void *)(v9 + 24);
      char v14 = *(unsigned char *)(v9 + 32);
      uint64_t result = swift_unknownObjectRetain();
LABEL_6:
      *(void *)a2 = v11;
      *(void *)(a2 + 8) = v10;
      *(void *)(a2 + 16) = v12;
      *(void *)(a2 + 24) = v13;
      *(unsigned char *)(a2 + 32) = v14;
      return result;
    }
  }
  uint64_t v16 = sub_1B68007AC(*(void *)(a1 + 16), 32);
  if (v16)
  {
    uint64_t v11 = v16;
    uint64_t v12 = v17;
    uint64_t v13 = *(void *)(a1 + 24);
    char v14 = *(unsigned char *)(a1 + 32);
    v20[0] = v16;
    v20[1] = 0;
    void v20[2] = v17;
    v20[3] = v13;
    char v21 = v14;
    swift_unknownObjectRetain_n();
    sub_1B63846D0(a1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *(void *)(v3 + 848);
    *(void *)(v3 + 848) = 0x8000000000000000;
    sub_1B67E5F7C((uint64_t)v20, a1, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 848) = v19;
    swift_bridgeObjectRelease();
    sub_1B62D8C10(a1);
    uint64_t result = swift_unknownObjectRelease();
    uint64_t v10 = 0;
    goto LABEL_6;
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for Renderer.StripDesc()
{
  return &type metadata for Renderer.StripDesc;
}

uint64_t destroy for Renderer.CurrentRenderContext()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for Renderer.CurrentRenderContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  long long v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v7;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Renderer.CurrentRenderContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  return a1;
}

__n128 initializeWithTake for Renderer.CurrentRenderContext(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for Renderer.CurrentRenderContext(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for Renderer.CurrentRenderContext(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 153)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Renderer.CurrentRenderContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 152) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 153) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 153) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Renderer.CurrentRenderContext()
{
  return &type metadata for Renderer.CurrentRenderContext;
}

uint64_t destroy for Renderer.Options()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Renderer.Options(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Renderer.Options(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Renderer.Options(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Renderer.Options(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Renderer.Options(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 72) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Renderer.Options()
{
  return &type metadata for Renderer.Options;
}

ValueMetadata *type metadata accessor for Renderer.UnscheduledCommandBuffer()
{
  return &type metadata for Renderer.UnscheduledCommandBuffer;
}

unsigned char *storeEnumTagSinglePayload for StereoMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6801B5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StereoMode()
{
  return &type metadata for StereoMode;
}

unint64_t sub_1B6801B98()
{
  unint64_t result = qword_1E9DD0B90;
  if (!qword_1E9DD0B90)
  {
    sub_1B6388BC4(255, &qword_1E9DD0B98, (uint64_t)&type metadata for StereoMode, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0B90);
  }
  return result;
}

unint64_t sub_1B6801C18()
{
  unint64_t result = qword_1E9DD0BA0;
  if (!qword_1E9DD0BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0BA0);
  }
  return result;
}

unint64_t sub_1B6801C70()
{
  unint64_t result = qword_1EB97FF88;
  if (!qword_1EB97FF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FF88);
  }
  return result;
}

unint64_t sub_1B6801CC8()
{
  unint64_t result = qword_1E9DD0BB0;
  if (!qword_1E9DD0BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0BB0);
  }
  return result;
}

uint64_t sub_1B6801D20@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  a3[3] = result;
  a3[4] = a2;
  a3[5] = 1;
  return result;
}

unint64_t sub_1B6801D34(int a1)
{
  uint64_t v3 = *v1;
  sub_1B6E33918();
  sub_1B6E33958();
  uint64_t v4 = sub_1B6E33988();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_9:
    uint64_t v11 = 0;
    unsigned __int8 v12 = 1;
    return v11 | ((unint64_t)v12 << 32);
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if (*(_DWORD *)(v7 + 4 * v6) != a1)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_9;
      }
    }
    while (*(_DWORD *)(v7 + 4 * v6) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v14 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B67F09B4();
    uint64_t v10 = v14;
  }
  uint64_t v11 = *(unsigned int *)(*(void *)(v10 + 48) + 4 * v6);
  sub_1B6801F70(v6);
  *uint64_t v1 = v14;
  swift_bridgeObjectRelease();
  unsigned __int8 v12 = 0;
  return v11 | ((unint64_t)v12 << 32);
}

uint64_t sub_1B6801E64(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1B6E33908();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B67EFB40();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_1B6802114(v7);
  *uint64_t v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_1B6801F70(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1B6E33918();
        sub_1B6E33958();
        unint64_t v10 = sub_1B6E33988() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (_DWORD *)(v11 + 4 * v2);
          uint64_t v13 = (_DWORD *)(v11 + 4 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    unint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  --*(void *)(v3 + 16);
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1B6802114(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1B6E327C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_1B6E33908() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9 || v2 < v12) {
            goto LABEL_5;
          }
        }
        else if (v12 < v9 && v2 < v12)
        {
          goto LABEL_5;
        }
        uint64_t v15 = (void *)(v10 + 8 * v2);
        if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
        {
          *uint64_t v15 = *v11;
          int64_t v2 = v6;
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    unint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  --*(void *)(v3 + 16);
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_1B6802298(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    uint64_t v5 = a3;
  }
  else
  {
    if (*(void *)(v3 + 376))
    {
      uint64_t v6 = swift_dynamicCastObjCProtocolConditional();
      if (v6)
      {
        id v7 = (id)v6;
        swift_unknownObjectRetain();
        return (uint64_t)v7;
      }
    }
    sub_1B6388C28();
    uint64_t v5 = (void *)sub_1B6388D70();
  }
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v5, sel_computeCommandEncoder);
  if (v8)
  {
    unint64_t v9 = v8;
    uint64_t v10 = (void *)sub_1B6E31768();
    objc_msgSend(v9, sel_setLabel_, v10);

    id v7 = objc_msgSend(objc_allocWithZone((Class)RGCachedComputeCommandEncoder), sel_initWithEncoder_, v9);
    if (a3)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return (uint64_t)v7;
    }
    *(void *)(v3 + 376) = v9;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    *(void *)(v3 + 384) = v7;
    id v12 = v7;
    swift_unknownObjectRelease();
    return (uint64_t)v12;
  }
  else
  {
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B680243C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, a3);
  uint64_t v14 = (void *)sub_1B6E31768();
  objc_msgSend(v13, sel_pushDebugGroup_, v14);

  if (a3)
  {
    uint64_t v15 = a3;
  }
  else
  {
    uint64_t v15 = *(void **)(a4 + 368);
    swift_unknownObjectRetain();
  }
  swift_unknownObjectRetain();
  sub_1B66483DC(&aBlock);
  long long v24 = aBlock;
  uint64_t v16 = v28;
  swift_getObjectType();
  sub_1B638955C((uint64_t)objc_msgSend(a5, sel_width), (uint64_t)objc_msgSend(a5, sel_height), (uint64_t)objc_msgSend(a5, sel_depth), &aBlock);
  long long v23 = aBlock;
  uint64_t v17 = v28;
  uint64_t v18 = sub_1B6BBAFE8();
  uint64_t v19 = sub_1B6BBD5E4();
  long long aBlock = v24;
  char v28 = v16;
  long long v32 = v23;
  float32x2_t v33 = v17;
  objc_msgSend(v13, sel_copyFromTexture_sourceSlice_sourceLevel_sourceOrigin_sourceSize_toBuffer_destinationOffset_destinationBytesPerRow_destinationBytesPerImage_, a5, 0, 0, &aBlock, &v32, a6, a7, v18, v19);
  if (a8)
  {
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a8;
    *(void *)(v20 + 24) = a9;
    uint64_t v30 = sub_1B68033D4;
    uint64_t v31 = v20;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    char v28 = sub_1B638F0B8;
    uint64_t v29 = &unk_1F0FB8048;
    char v21 = _Block_copy(&aBlock);
    swift_retain_n();
    swift_release();
    objc_msgSend(v15, sel_addCompletedHandler_, v21);
    _Block_release(v21);
    sub_1B62C6A50(a8);
  }
  swift_unknownObjectRelease();
  if (a3) {
    objc_msgSend(v13, sel_endEncoding);
  }
  objc_msgSend(v13, sel_popDebugGroup);
  return swift_unknownObjectRelease();
}

uint64_t sub_1B68026C8()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B6802700(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = *(void *)(a2 + 112);
  uint64_t v7 = *(void *)(result + 16);
  if (v7)
  {
    uint64_t v11 = swift_bridgeObjectRetain() + 48;
    do
    {
      uint64_t v20 = *(void *)v11;
      uint64_t v21 = *(void *)(v11 - 8);
      uint64_t v12 = a5;
      uint64_t v14 = *(void *)(v11 + 24);
      uint64_t v13 = *(void *)(v11 + 32);
      uint64_t v15 = *(void *)(v11 + 40);
      uint64_t v16 = *(void *)(v11 - 16) + a4;
      sub_1B66483DC(&v24);
      uint64_t v17 = v25;
      long long v18 = v24;
      long long v24 = *(_OWORD *)(v11 + 8);
      uint64_t v25 = v14;
      long long v22 = v18;
      uint64_t v23 = v17;
      uint64_t v19 = v13;
      a5 = v12;
      objc_msgSend(a1, sel_copyFromBuffer_sourceOffset_sourceBytesPerRow_sourceBytesPerImage_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin_, a3, v16, v21, v20, &v24, v12, v19, v15, &v22);
      v11 += 64;
      --v7;
    }
    while (v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B68027F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v11 = objc_msgSend(*(id *)(a3 + 312), sel_commandBuffer);
  if (v11)
  {
    sub_1B6E328F8();
    uint64_t v12 = (void *)sub_1B6E31768();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setLabel_, v12);

    sub_1B637AE10(v11);
  }
  swift_unknownObjectRetain();
  uint64_t v13 = (void *)sub_1B634EF94(1953066050, 0xE400000000000000, v11);
  uint64_t v14 = (void *)sub_1B6E31768();
  objc_msgSend(v13, sel_pushDebugGroup_, v14);

  swift_unknownObjectRetain();
  sub_1B6802700(v13, a4, a5, a6, a7);
  swift_unknownObjectRelease();
  objc_msgSend(v13, sel_endEncoding);
  objc_msgSend(v13, sel_popDebugGroup);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  objc_msgSend(v11, sel_commit);

  return swift_unknownObjectRelease();
}

uint64_t sub_1B6802978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&long long v39 = a3;
  sub_1B638BF80(0, (unint64_t *)&qword_1EB9857F0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8, v7);
  unint64_t v9 = (char *)&v35 - v8;
  *(void *)&long long v40 = sub_1B6E30F48();
  uint64_t v10 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40, v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)sub_1B6E31768();
  id v15 = objc_msgSend(self, sel_bundleWithIdentifier_, v14);

  uint64_t v41 = a1;
  uint64_t v16 = (void *)sub_1B6E31768();
  uint64_t v17 = (void *)sub_1B6E31768();
  id v18 = objc_msgSend(v15, sel_pathForResource_ofType_, v16, v17);

  if (!v18)
  {

    return 0;
  }
  id v36 = v15;
  uint64_t v37 = a2;
  sub_1B6E31798();

  RGTextureDescriptor.init()((uint64_t)&v63);
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  uint64_t v50 = 0;
  char v53 = 0;
  uint64_t v54 = v63;
  __int16 v55 = v64;
  char v56 = v65;
  long long v57 = v66;
  long long v58 = v67;
  long long v59 = v68;
  uint64_t v60 = v69;
  int v61 = v70;
  uint64_t v62 = MEMORY[0x1E4FBC860];
  sub_1B6E30E48();
  swift_bridgeObjectRelease();
  uint64_t v38 = v3;
  size_t v19 = *(void *)(v3 + 16);
  uint64_t v20 = sub_1B6E30F68();
  unint64_t v22 = v21;
  uint64_t v23 = v40;
  (*(void (**)(char *, char *, void))(v10 + 16))(v9, v13, v40);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v23);
  sub_1B6C346E0(v20, v22, (uint64_t)v9, (unsigned char *)v39, v19);
  sub_1B663ABE8((uint64_t)v9);
  sub_1B62C2360(v20, v22);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v23);
  uint64_t v24 = v50;
  if (v50)
  {
    uint64_t v25 = v51;
    __int16 v26 = v55;
    char v27 = v56;
    long long v39 = v58;
    long long v40 = v57;
    long long v35 = v59;
    uint64_t v28 = v60;
    id v29 = objc_allocWithZone(MEMORY[0x1E4F35330]);
    swift_unknownObjectRetain();
    id v30 = objc_msgSend(v29, sel_init);
    uint64_t v42 = v54;
    __int16 v43 = v26;
    char v44 = v27;
    long long v45 = v40;
    long long v46 = v39;
    long long v47 = v35;
    uint64_t v48 = v28;
    int v49 = v61;
    RGTextureDescriptorFillMTLDescriptor((unsigned __int16 *)&v42, v30);
    uint64_t v31 = v38;
    long long v32 = sub_1B639E4E4(v30, v41, v37);

    float32x2_t v33 = v36;
    if (v32)
    {
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      sub_1B68027F4(0xD000000000000014, 0x80000001B6F37C20, v31, (uint64_t)&v50, v24, v25, (uint64_t)v32);

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return (uint64_t)v32;
    }
  }
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6802F14()
{
  v1[1] = 0;
  v1[2] = 0;
  v1[0] = 66;
  char v2 = -2;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v3 = 0;
  __int16 v6 = 768;
  uint64_t result = sub_1B6802978(0xD000000000000014, 0x80000001B6F37B30, (uint64_t)v1);
  if (!result)
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6802FF0()
{
  v1[1] = 0;
  v1[2] = 0;
  v1[0] = 66;
  char v2 = -2;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v3 = 0;
  __int16 v6 = 768;
  uint64_t result = sub_1B6802978(0xD000000000000012, 0x80000001B6F37CA0, (uint64_t)v1);
  if (!result)
  {
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B68030CC(uint64_t a1)
{
  uint64_t v3 = 4 * a1;
  if (v1[102])
  {
    if (v1[104] >= v3) {
      return v1[102];
    }
  }
  else if (v3 < 1)
  {
    return v1[102];
  }
  uint64_t v4 = sub_1B68007AC(v3, 0);
  if (v4)
  {
    __int16 v6 = v4;
    uint64_t v7 = v5;
    if (objc_msgSend(v4, sel_storageMode) == (id)2)
    {
      uint64_t v8 = 0;
      if (!a1) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v8 = (int32x4_t *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v9 = v6;
      if (!a1)
      {
LABEL_23:
        v1[102] = v6;
        v1[103] = 0;
        v1[104] = v7;
        swift_unknownObjectRelease();
        return v1[102];
      }
    }
    unint64_t v10 = a1 - 1;
    if ((unint64_t)(a1 - 1) >= 0xFFFFFFFF) {
      unint64_t v10 = 0xFFFFFFFFLL;
    }
    if (v10 > 7)
    {
      unint64_t v13 = v10 + 1;
      uint64_t v14 = v13 & 7;
      if ((v13 & 7) == 0) {
        uint64_t v14 = 8;
      }
      uint64_t v11 = v13 - v14;
      uint64_t v12 = v11 + 1;
      int32x4_t v15 = (int32x4_t)xmmword_1B6E4B1A0;
      uint64_t v16 = v8 + 1;
      v17.i64[0] = 0x400000004;
      v17.i64[1] = 0x400000004;
      v18.i64[0] = 0x800000008;
      v18.i64[1] = 0x800000008;
      uint64_t v19 = v11;
      do
      {
        v16[-1] = v15;
        *uint64_t v16 = vaddq_s32(v15, v17);
        int32x4_t v15 = vaddq_s32(v15, v18);
        v16 += 2;
        v19 -= 8;
      }
      while (v19);
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 1;
    }
    uint64_t v20 = v12 - 0x100000001;
    uint64_t v21 = a1 - v12;
    while (1)
    {
      v8->i32[v11] = v11;
      if (!v21) {
        goto LABEL_23;
      }
      uint64_t v11 = v12++;
      --v21;
      if (__CFADD__(v20++, 1))
      {
        sub_1B6E32BD8();
        __break(1u);
        goto LABEL_23;
      }
    }
  }
  return v1[102];
}

uint64_t sub_1B6803294(uint64_t result)
{
  uint64_t v1 = OBJC_IVAR____TtC3VFX13EntityManager_renderer;
  uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v2)
  {
    uint64_t v3 = *(void **)(v2 + 368);
    if (!v3) {
      goto LABEL_10;
    }
    uint64_t v4 = result;
    swift_retain();
    swift_unknownObjectRetain();
    sub_1B6388C28();
    objc_msgSend(v3, sel_commit);
    swift_unknownObjectRelease();
    *(void *)(v2 + 368) = 0;
    swift_unknownObjectRelease();
    *(unsigned char *)(v2 + 32) = 0;
    uint64_t result = swift_release();
    uint64_t v2 = *(void *)(v4 + v1);
    if (v2)
    {
LABEL_10:
      if (*(void *)(v2 + 368))
      {
        swift_getObjectType();
        swift_retain();
        swift_unknownObjectRetain();
        sub_1B6BBB94C();
        swift_release();
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1B680338C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  a4[3] = result;
  a4[4] = a2;
  a4[5] = a3;
  return result;
}

uint64_t sub_1B680339C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B68033D4(uint64_t a1)
{
  return sub_1B6980464(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1B68033DC()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B680341C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B6803454()
{
  if (!qword_1EB984DC0)
  {
    sub_1B62F3064(255, &qword_1EB984DB8);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB984DC0);
    }
  }
}

unint64_t sub_1B68034BC()
{
  unint64_t result = qword_1E9DD0C90;
  if (!qword_1E9DD0C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0C90);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetalDeviceFeatures()
{
  return &type metadata for MetalDeviceFeatures;
}

unint64_t sub_1B6803530()
{
  unint64_t result = qword_1E9DD0D00;
  if (!qword_1E9DD0D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0D00);
  }
  return result;
}

unint64_t sub_1B6803588()
{
  unint64_t result = qword_1E9DD0D08;
  if (!qword_1E9DD0D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0D08);
  }
  return result;
}

unint64_t sub_1B68035E0()
{
  unint64_t result = qword_1E9DD0D10;
  if (!qword_1E9DD0D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0D10);
  }
  return result;
}

unint64_t sub_1B6803638()
{
  unint64_t result = qword_1E9DD0D18;
  if (!qword_1E9DD0D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0D18);
  }
  return result;
}

id sub_1B6803690(void *a1, id a2, unsigned __int8 a3)
{
  if (a3 >> 5 == 7) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void destroy for SerializationError(uint64_t a1)
{
}

void sub_1B68036F0(void *a1, id a2, unsigned __int8 a3)
{
  if (a3 >> 5 == 7) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t _s3VFX18SerializationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B6803690(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SerializationError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B6803690(*(void **)a2, v4, v5);
  __int16 v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B68036F0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SerializationError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  unsigned __int8 v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B68036F0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SerializationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x79 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 121);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0xF))) ^ 0x7F;
  if (v3 >= 0x78) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SerializationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x78)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 121;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x79) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x79) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1B68038D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 5;
}

uint64_t sub_1B68038E0(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x1Fu;
  return result;
}

uint64_t sub_1B68038F0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (32 * a2);
  return result;
}

ValueMetadata *type metadata accessor for SerializationError()
{
  return &type metadata for SerializationError;
}

unint64_t sub_1B6803918(id a1, void *a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 1:
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000011;
      goto LABEL_8;
    case 2:
      unint64_t v5 = 0x61646F6320746F4ELL;
      goto LABEL_8;
    case 3:
    case 4:
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0x74276E646C756F43;
      goto LABEL_8;
    case 5:
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000012;
      goto LABEL_8;
    case 6:
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000015;
      goto LABEL_8;
    case 7:
      unint64_t v9 = 0;
      id v8 = a1;
      sub_1B6E328C8();
      sub_1B6E31948();
      sub_1B666BD6C();
      sub_1B6E32B18();
      sub_1B68036F0(a1, a2, a3);
      return v9;
    default:
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD00000000000001CLL;
LABEL_8:
      unint64_t v9 = v5;
      sub_1B6E31948();
      return v9;
  }
}

unint64_t sub_1B6803BA8()
{
  return sub_1B6803918(*(id *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1B6803BB4()
{
  return sub_1B6E33868();
}

uint64_t sub_1B6803C00(void (*a1)(void *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v5, 0);
    uint64_t v6 = v19;
    id v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v9 = *v8;
      v17[0] = *(v8 - 1);
      v17[1] = v9;
      swift_bridgeObjectRetain();
      a1(v18, v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v11 = v18[0];
      uint64_t v10 = v18[1];
      uint64_t v19 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1B6C3C3B8(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v19;
      }
      v8 += 2;
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1B6803D28(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (a4 != a3)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1B62B7EB4(0, (a4 - a3) & ~((a4 - a3) >> 63), 0);
    uint64_t v5 = v18;
    uint64_t v16 = a3;
    a1(&v17, &v16);
    if (v4)
    {
      swift_release();
    }
    else
    {
      for (uint64_t i = a3 + 1; ; ++i)
      {
        uint64_t v11 = a2;
        uint64_t v12 = v17;
        uint64_t v18 = v5;
        unint64_t v14 = *(void *)(v5 + 16);
        unint64_t v13 = *(void *)(v5 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_1B62B7EB4(v13 > 1, v14 + 1, 1);
          uint64_t v5 = v18;
        }
        *(void *)(v5 + 16) = v14 + 1;
        *(void *)(v5 + 8 * v14 + 32) = v12;
        if (a4 == i) {
          break;
        }
        uint64_t v16 = i;
        a2 = v11;
        a1(&v17, &v16);
      }
    }
  }
  return v5;
}

uint64_t sub_1B6803E6C(void (*a1)(void *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v5, 0);
    uint64_t v6 = v18;
    for (uint64_t i = (char *)(a3 + 32); ; ++i)
    {
      char v16 = *i;
      a1(v17, &v16);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v17[0];
      uint64_t v9 = v17[1];
      uint64_t v18 = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v11 = *(void *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1B6C3C3B8(v11 > 1, v12 + 1, 1);
        uint64_t v6 = v18;
      }
      *(void *)(v6 + 16) = v12 + 1;
      uint64_t v13 = v6 + 16 * v12;
      *(void *)(v13 + 32) = v10;
      *(void *)(v13 + 40) = v9;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1B6803F7C(void (*a1)(void *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  return sub_1B6803FDC(a1, a2, a3);
}

uint64_t sub_1B6803F94(void (*a1)(void *__return_ptr, __int16 *), uint64_t a2, uint64_t a3)
{
  return sub_1B68040E8(a1, a2, a3);
}

uint64_t sub_1B6803FAC(void (*a1)(void *__return_ptr, int *), uint64_t a2, uint64_t a3)
{
  return sub_1B68041F4(a1, a2, a3);
}

uint64_t sub_1B6803FC4(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1B6804300(a1, a2, a3);
}

uint64_t sub_1B6803FDC(void (*a1)(void *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v5, 0);
    uint64_t v6 = v19;
    id v8 = (char *)(a3 + 32);
    while (1)
    {
      char v9 = *v8++;
      char v17 = v9;
      a1(v18, &v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v11 = v18[0];
      uint64_t v10 = v18[1];
      uint64_t v19 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1B6C3C3B8(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1B68040E8(void (*a1)(void *__return_ptr, __int16 *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v5, 0);
    uint64_t v6 = v19;
    id v8 = (__int16 *)(a3 + 32);
    while (1)
    {
      __int16 v9 = *v8++;
      __int16 v17 = v9;
      a1(v18, &v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v11 = v18[0];
      uint64_t v10 = v18[1];
      uint64_t v19 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1B6C3C3B8(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1B68041F4(void (*a1)(void *__return_ptr, int *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v5, 0);
    uint64_t v6 = v19;
    id v8 = (int *)(a3 + 32);
    while (1)
    {
      int v9 = *v8++;
      int v17 = v9;
      a1(v18, &v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v11 = v18[0];
      uint64_t v10 = v18[1];
      uint64_t v19 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1B6C3C3B8(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1B6804300(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v5, 0);
    uint64_t v6 = v19;
    id v8 = (uint64_t *)(a3 + 32);
    while (1)
    {
      uint64_t v9 = *v8++;
      uint64_t v17 = v9;
      a1(v18, &v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v11 = v18[0];
      uint64_t v10 = v18[1];
      uint64_t v19 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1B6C3C3B8(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(void *)(v14 + 40) = v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1B680440C(void (*a1)(void *__return_ptr, int *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v5, 0);
    uint64_t v6 = v18;
    for (uint64_t i = (int *)(a3 + 32); ; ++i)
    {
      int v16 = *i;
      a1(v17, &v16);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v17[0];
      uint64_t v9 = v17[1];
      uint64_t v18 = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v11 = *(void *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1B6C3C3B8(v11 > 1, v12 + 1, 1);
        uint64_t v6 = v18;
      }
      *(void *)(v6 + 16) = v12 + 1;
      uint64_t v13 = v6 + 16 * v12;
      *(void *)(v13 + 32) = v10;
      *(void *)(v13 + 40) = v9;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1B680451C(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v5, 0);
    uint64_t v6 = v18;
    for (uint64_t i = (uint64_t *)(a3 + 32); ; ++i)
    {
      uint64_t v16 = *i;
      a1(v17, &v16);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v17[0];
      uint64_t v9 = v17[1];
      uint64_t v18 = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v11 = *(void *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1B6C3C3B8(v11 > 1, v12 + 1, 1);
        uint64_t v6 = v18;
      }
      *(void *)(v6 + 16) = v12 + 1;
      uint64_t v13 = v6 + 16 * v12;
      *(void *)(v13 + 32) = v10;
      *(void *)(v13 + 40) = v9;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1B680462C(void (*a1)(void *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  return sub_1B6804644(a1, a2, a3);
}

uint64_t sub_1B6804644(void (*a1)(void *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v5, 0);
    uint64_t v6 = v18;
    for (uint64_t i = (long long *)(a3 + 32); ; ++i)
    {
      long long v16 = *i;
      a1(v17, &v16);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v17[0];
      uint64_t v9 = v17[1];
      uint64_t v18 = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v11 = *(void *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1B6C3C3B8(v11 > 1, v12 + 1, 1);
        uint64_t v6 = v18;
      }
      *(void *)(v6 + 16) = v12 + 1;
      uint64_t v13 = v6 + 16 * v12;
      *(void *)(v13 + 32) = v10;
      *(void *)(v13 + 40) = v9;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1B6804754(void (*a1)(long long *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1B6C3D8B8(0, v5, 0);
    uint64_t v6 = v20;
    for (uint64_t i = (long long *)(a3 + 32); ; ++i)
    {
      long long v17 = *i;
      a1(&v18, &v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      long long v10 = v18;
      uint64_t v11 = v19;
      uint64_t v20 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        long long v16 = v18;
        sub_1B6C3D8B8(v12 > 1, v13 + 1, 1);
        long long v10 = v16;
        uint64_t v6 = v20;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 24 * v13;
      *(_OWORD *)(v14 + 32) = v10;
      *(void *)(v14 + 48) = v11;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1B680487C(uint64_t *a1)
{
  uint64_t v2 = a1 + 1;
  if (a1[1])
  {
    ptr_auth_strip();
    uint64_t v4 = v3 - (void)v2;
    if (sub_1B6805D0C(*a1) == 14) {
      int64_t v5 = (unint64_t *)&unk_1E9DD0D38;
    }
    else {
      int64_t v5 = (unint64_t *)&unk_1E9DD0D30;
    }
    sub_1B6805E24(0, v5);
    uint64_t v8 = v7;
    *((void *)&v11 + 1) = v7;
    unint64_t v12 = &off_1F0F70650;
    *(void *)&long long v10 = (char *)v2 + v4;
    sub_1B62C14BC(&v10, v7);
    uint64_t v6 = ((uint64_t (*)(uint64_t))off_1F0F70660[0])(v8);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v10);
  }
  else
  {
    unint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    sub_1B6805C00((uint64_t)&v10);
    return 0;
  }
  return v6;
}

uint64_t sub_1B6804980(uint64_t *a1)
{
  uint64_t v2 = a1 + 8;
  if (a1[8])
  {
    ptr_auth_strip();
    uint64_t v4 = v3 - (void)v2;
    if (sub_1B6805D0C(*a1) == 14) {
      int64_t v5 = (unint64_t *)&unk_1E9DD0D38;
    }
    else {
      int64_t v5 = (unint64_t *)&unk_1E9DD0D30;
    }
    sub_1B6805E24(0, v5);
    uint64_t v8 = v7;
    *((void *)&v11 + 1) = v7;
    unint64_t v12 = &off_1F0F70650;
    *(void *)&long long v10 = (char *)v2 + v4;
    sub_1B62C14BC(&v10, v7);
    uint64_t v6 = ((uint64_t (*)(uint64_t))off_1F0F70660[0])(v8);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v10);
  }
  else
  {
    unint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    sub_1B6805C00((uint64_t)&v10);
    return 0;
  }
  return v6;
}

uint64_t sub_1B6804A84(uint64_t *a1)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v18;
  void v20[5];
  long long v21;
  long long v22;
  _UNKNOWN **v23;
  void v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;

  char v27 = a1;
  uint64_t v2 = a1 + 1;
  if (!a1[1])
  {
    uint64_t v23 = 0;
    uint64_t v21 = 0u;
    unint64_t v22 = 0u;
    sub_1B6805C00((uint64_t)&v21);
    return 0;
  }
  ptr_auth_strip();
  uint64_t v4 = v3 - (void)v2;
  if (sub_1B6805D0C(*a1) == 14) {
    int64_t v5 = (unint64_t *)&unk_1E9DD0D38;
  }
  else {
    int64_t v5 = (unint64_t *)&unk_1E9DD0D30;
  }
  sub_1B6805E24(0, v5);
  *((void *)&v22 + 1) = v6;
  uint64_t v23 = &off_1F0F70650;
  *(void *)&uint64_t v21 = (char *)v2 + v4;
  sub_1B62C15C4(&v21, (uint64_t)v24);
  uint64_t v7 = v25;
  uint64_t v8 = v26;
  sub_1B62C14BC(v24, v25);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  if (!v9)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v24);
    return 0;
  }
  uint64_t v10 = v9;
  int v11 = sub_1B6805D0C(*a1);
  uint64_t v12 = v25;
  uint64_t v13 = v26;
  sub_1B62C14BC(v24, v25);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  MEMORY[0x1F4188790](v14, v15);
  void v20[2] = &v27;
  v20[3] = v10;
  if (v11 == 14) {
    long long v17 = (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B6805E88;
  }
  else {
    long long v17 = (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B6805E70;
  }
  long long v18 = sub_1B6803D28(v17, (uint64_t)v20, 0, v16);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v24);
  return v18;
}

uint64_t sub_1B6804C6C(uint64_t *a1)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v18;
  void v20[5];
  long long v21;
  long long v22;
  _UNKNOWN **v23;
  void v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;

  char v27 = a1;
  uint64_t v2 = a1 + 8;
  if (!a1[8])
  {
    uint64_t v23 = 0;
    uint64_t v21 = 0u;
    unint64_t v22 = 0u;
    sub_1B6805C00((uint64_t)&v21);
    return 0;
  }
  ptr_auth_strip();
  uint64_t v4 = v3 - (void)v2;
  if (sub_1B6805D0C(*a1) == 14) {
    int64_t v5 = (unint64_t *)&unk_1E9DD0D38;
  }
  else {
    int64_t v5 = (unint64_t *)&unk_1E9DD0D30;
  }
  sub_1B6805E24(0, v5);
  *((void *)&v22 + 1) = v6;
  uint64_t v23 = &off_1F0F70650;
  *(void *)&uint64_t v21 = (char *)v2 + v4;
  sub_1B62C15C4(&v21, (uint64_t)v24);
  uint64_t v7 = v25;
  uint64_t v8 = v26;
  sub_1B62C14BC(v24, v25);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  if (!v9)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v24);
    return 0;
  }
  uint64_t v10 = v9;
  int v11 = sub_1B6805D0C(*a1);
  uint64_t v12 = v25;
  uint64_t v13 = v26;
  sub_1B62C14BC(v24, v25);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  MEMORY[0x1F4188790](v14, v15);
  void v20[2] = &v27;
  v20[3] = v10;
  if (v11 == 14) {
    long long v17 = (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B6805E88;
  }
  else {
    long long v17 = (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B6805E70;
  }
  long long v18 = sub_1B6803D28(v17, (uint64_t)v20, 0, v16);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v24);
  return v18;
}

void *sub_1B6804E54(uint64_t *a1)
{
  uint64_t v2 = sub_1B6804A84(a1);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = v2;
  uint64_t v51 = sub_1B680487C(a1);
  if (v51)
  {
    uint64_t v5 = 0;
    uint64_t v6 = a1 + 1;
    uint64_t v7 = a1 + 2;
    uint64_t v49 = v4 + 32;
    uint64_t v50 = v3;
    while (!*v6)
    {
      uint64_t v54 = 0;
      long long v52 = 0u;
      long long v53 = 0u;
      sub_1B6805C00((uint64_t)&v52);
LABEL_5:
      if (++v5 == v51)
      {
        swift_bridgeObjectRelease();
        return v50;
      }
    }
    ptr_auth_strip();
    uint64_t v9 = v8;
    if (sub_1B6805D0C(*a1) == 14) {
      uint64_t v10 = (unint64_t *)&unk_1E9DD0D38;
    }
    else {
      uint64_t v10 = (unint64_t *)&unk_1E9DD0D30;
    }
    sub_1B6805E24(0, v10);
    *((void *)&v53 + 1) = v11;
    uint64_t v54 = &off_1F0F70650;
    *(void *)&long long v52 = v9;
    sub_1B62C15C4(&v52, (uint64_t)v55);
    uint64_t v12 = v56;
    uint64_t v13 = v57;
    sub_1B62C14BC(v55, v56);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
    ptr_auth_strip();
    uint64_t v16 = v15 + v14;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v55);
    uint64_t v17 = *(int *)(v16 + 28);
    if (v17)
    {
      v55[0] = v3;
      sub_1B6C3C470(0, v17 & ~(v17 >> 63), 0);
      long long v18 = (void *)v55[0];
      uint64_t v19 = v16 + 32;
      unint64_t v20 = *(void *)(v55[0] + 16);
      do
      {
        v55[0] = v18;
        unint64_t v21 = v18[3];
        if (v20 >= v21 >> 1)
        {
          sub_1B6C3C470(v21 > 1, v20 + 1, 1);
          long long v18 = (void *)v55[0];
        }
        void v18[2] = v20 + 1;
        v18[v20 + 4] = v19;
        v19 += 12;
        ++v20;
        --v17;
      }
      while (v17);
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v7 = a1 + 2;
    }
    else
    {
      long long v18 = v3;
    }
    uint64_t v22 = v18[v5 + 4];
    swift_bridgeObjectRelease();
    if (v22 + 8 + *(int *)(v22 + 8))
    {
      uint64_t v23 = sub_1B6E31978();
      unint64_t v25 = v24;
      if (*v6) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v23 = 0;
      unint64_t v25 = 0xE000000000000000;
      if (*v6)
      {
LABEL_19:
        ptr_auth_strip();
        uint64_t v27 = v26;
        if (sub_1B6805D0C(*a1) == 14) {
          uint64_t v28 = (unint64_t *)&unk_1E9DD0D38;
        }
        else {
          uint64_t v28 = (unint64_t *)&unk_1E9DD0D30;
        }
        sub_1B6805E24(0, v28);
        *((void *)&v53 + 1) = v29;
        uint64_t v54 = &off_1F0F70650;
        *(void *)&long long v52 = v27;
        sub_1B62C15C4(&v52, (uint64_t)v55);
        uint64_t v31 = v56;
        uint64_t v30 = v57;
        sub_1B62C14BC(v55, v56);
        uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 32))(v31, v30);
        ptr_auth_strip();
        uint64_t v34 = v33 + v32;
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v55);
        uint64_t v35 = *(int *)(v34 + 28);
        if (v35)
        {
          v55[0] = v3;
          sub_1B6C3C470(0, v35 & ~(v35 >> 63), 0);
          id v36 = (void *)v55[0];
          uint64_t v37 = v34 + 32;
          unint64_t v38 = *(void *)(v55[0] + 16);
          do
          {
            v55[0] = v36;
            unint64_t v39 = v36[3];
            if (v38 >= v39 >> 1)
            {
              sub_1B6C3C470(v39 > 1, v38 + 1, 1);
              id v36 = (void *)v55[0];
            }
            v36[2] = v38 + 1;
            v36[v38 + 4] = v37;
            v37 += 12;
            ++v38;
            --v35;
          }
          while (v35);
          uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v7 = a1 + 2;
        }
        else
        {
          id v36 = v3;
        }
        uint64_t v40 = v36[v5 + 4];
        swift_bridgeObjectRelease();
        if (v40 + 4 + *(int *)(v40 + 4))
        {
          if (*v6)
          {
            ptr_auth_strip();
            if (!*v7) {
              goto LABEL_36;
            }
          }
          else if (!*v7)
          {
LABEL_36:
            uint64_t TypeByMangledNameInContext = swift_getTypeByMangledNameInContext();
            if (TypeByMangledNameInContext)
            {
              uint64_t v42 = TypeByMangledNameInContext;
              uint64_t v43 = *(void *)(v49 + 8 * v5);
              if (swift_isUniquelyReferenced_nonNull_native()) {
                char v44 = v50;
              }
              else {
                char v44 = sub_1B68C0B40(0, v50[2] + 1, 1, v50);
              }
              unint64_t v46 = v44[2];
              unint64_t v45 = v44[3];
              if (v46 >= v45 >> 1) {
                char v44 = sub_1B68C0B40(v45 > 1, v46 + 1, 1, v44);
              }
              _OWORD v44[2] = v46 + 1;
              uint64_t v50 = v44;
              long long v47 = &v44[4 * v46];
              v47[4] = v23;
              v47[5] = v25;
              v47[6] = v42;
              v47[7] = v43;
              uint64_t v7 = a1 + 2;
              goto LABEL_5;
            }
            goto LABEL_42;
          }
          ptr_auth_strip();
          goto LABEL_36;
        }
LABEL_42:
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
    }
    uint64_t v54 = 0;
    long long v52 = 0u;
    long long v53 = 0u;
    sub_1B6805C00((uint64_t)&v52);
    goto LABEL_42;
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

void *sub_1B6805330(uint64_t *a1)
{
  uint64_t v1 = sub_1B680544C(a1);
  uint64_t v3 = v1;
  if (v1)
  {
    int v4 = v2;
    if ((v2 & 0x100000000) == 0)
    {
      int64_t v5 = v1[2];
      if (v5)
      {
        uint64_t v6 = v1 + 7;
        uint64_t v7 = v1[7];
        uint64_t v16 = MEMORY[0x1E4FBC860];
        sub_1B6C3C490(0, v5, 0);
        uint64_t v8 = v4 - v7;
        do
        {
          uint64_t v9 = *(v6 - 3);
          uint64_t v10 = *v6;
          unint64_t v11 = *(void *)(v16 + 16);
          unint64_t v12 = *(void *)(v16 + 24);
          long long v15 = *((_OWORD *)v6 - 1);
          swift_bridgeObjectRetain();
          if (v11 >= v12 >> 1) {
            sub_1B6C3C490(v12 > 1, v11 + 1, 1);
          }
          *(void *)(v16 + 16) = v11 + 1;
          uint64_t v13 = v16 + 32 * v11;
          *(void *)(v13 + 32) = v9;
          v6 += 4;
          *(_OWORD *)(v13 + 40) = v15;
          *(void *)(v13 + 56) = v8 + v10;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease();
        return (void *)v16;
      }
    }
  }
  return v3;
}

void *sub_1B680544C(uint64_t *a1)
{
  uint64_t v2 = sub_1B6804C6C(a1);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (!v2)
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v48 = (uint64_t *)a1[1];
    if (!v48) {
      return v7;
    }
    goto LABEL_49;
  }
  uint64_t v4 = v2;
  uint64_t v58 = sub_1B6804980(a1);
  if (!v58)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v48 = (uint64_t *)a1[1];
    if (v48) {
      goto LABEL_49;
    }
    return v7;
  }
  uint64_t v5 = 0;
  uint64_t v6 = a1 + 8;
  uint64_t v57 = v4 + 32;
  uint64_t v7 = v3;
  do
  {
    if (!*v6)
    {
      int v61 = 0;
      long long v59 = 0u;
      long long v60 = 0u;
      sub_1B6805C00((uint64_t)&v59);
      goto LABEL_5;
    }
    ptr_auth_strip();
    uint64_t v9 = v8;
    if (sub_1B6805D0C(*a1) == 14) {
      uint64_t v10 = (unint64_t *)&unk_1E9DD0D38;
    }
    else {
      uint64_t v10 = (unint64_t *)&unk_1E9DD0D30;
    }
    sub_1B6805E24(0, v10);
    *((void *)&v60 + 1) = v11;
    int v61 = &off_1F0F70650;
    *(void *)&long long v59 = v9;
    sub_1B62C15C4(&v59, (uint64_t)v62);
    uint64_t v12 = v63;
    uint64_t v13 = v64;
    sub_1B62C14BC(v62, v63);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
    ptr_auth_strip();
    uint64_t v16 = v15 + v14;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v62);
    uint64_t v17 = *(int *)(v16 + 28);
    if (v17)
    {
      v62[0] = v3;
      sub_1B6C3C470(0, v17 & ~(v17 >> 63), 0);
      long long v18 = (void *)v62[0];
      uint64_t v19 = v16 + 32;
      unint64_t v20 = *(void *)(v62[0] + 16);
      do
      {
        v62[0] = v18;
        unint64_t v21 = v18[3];
        if (v20 >= v21 >> 1)
        {
          sub_1B6C3C470(v21 > 1, v20 + 1, 1);
          long long v18 = (void *)v62[0];
        }
        void v18[2] = v20 + 1;
        v18[v20 + 4] = v19;
        v19 += 12;
        ++v20;
        --v17;
      }
      while (v17);
    }
    else
    {
      long long v18 = v3;
    }
    uint64_t v22 = v18[v5 + 4];
    swift_bridgeObjectRelease();
    if (v22 + 8 + *(int *)(v22 + 8))
    {
      uint64_t v23 = sub_1B6E31978();
      unint64_t v25 = v24;
      if (!*v6) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v23 = 0;
      unint64_t v25 = 0xE000000000000000;
      if (!*v6)
      {
LABEL_22:
        int v61 = 0;
        long long v59 = 0u;
        long long v60 = 0u;
        sub_1B6805C00((uint64_t)&v59);
LABEL_43:
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
    }
    ptr_auth_strip();
    uint64_t v27 = v26;
    if (sub_1B6805D0C(*a1) == 14) {
      uint64_t v28 = (unint64_t *)&unk_1E9DD0D38;
    }
    else {
      uint64_t v28 = (unint64_t *)&unk_1E9DD0D30;
    }
    sub_1B6805E24(0, v28);
    *((void *)&v60 + 1) = v29;
    int v61 = &off_1F0F70650;
    *(void *)&long long v59 = v27;
    sub_1B62C15C4(&v59, (uint64_t)v62);
    uint64_t v30 = v63;
    uint64_t v31 = v64;
    sub_1B62C14BC(v62, v63);
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31);
    ptr_auth_strip();
    uint64_t v34 = v33 + v32;
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v62);
    uint64_t v35 = *(int *)(v34 + 28);
    if (v35)
    {
      v62[0] = MEMORY[0x1E4FBC860];
      sub_1B6C3C470(0, v35 & ~(v35 >> 63), 0);
      uint64_t v36 = v62[0];
      uint64_t v37 = v34 + 32;
      unint64_t v38 = *(void *)(v62[0] + 16);
      do
      {
        v62[0] = v36;
        unint64_t v39 = *(void *)(v36 + 24);
        if (v38 >= v39 >> 1)
        {
          sub_1B6C3C470(v39 > 1, v38 + 1, 1);
          uint64_t v36 = v62[0];
        }
        *(void *)(v36 + 16) = v38 + 1;
        *(void *)(v36 + 8 * v38 + 32) = v37;
        v37 += 12;
        ++v38;
        --v35;
      }
      while (v35);
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v36 = MEMORY[0x1E4FBC860];
    }
    uint64_t v40 = *(void *)(v36 + 8 * v5 + 32);
    swift_bridgeObjectRelease();
    if (!(v40 + 4 + *(int *)(v40 + 4))) {
      goto LABEL_43;
    }
    if (!*v6)
    {
      uint64_t v41 = (uint64_t *)a1[1];
      if (!v41) {
        goto LABEL_37;
      }
LABEL_36:
      sub_1B6805D0C(*v41);
      goto LABEL_37;
    }
    ptr_auth_strip();
    uint64_t v41 = (uint64_t *)a1[1];
    if (v41) {
      goto LABEL_36;
    }
LABEL_37:
    uint64_t TypeByMangledNameInContext = swift_getTypeByMangledNameInContext();
    if (!TypeByMangledNameInContext) {
      goto LABEL_43;
    }
    uint64_t v43 = TypeByMangledNameInContext;
    uint64_t v44 = *(void *)(v57 + 8 * v5);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_1B68C0B40(0, v7[2] + 1, 1, v7);
    }
    unint64_t v46 = v7[2];
    unint64_t v45 = v7[3];
    if (v46 >= v45 >> 1) {
      uint64_t v7 = sub_1B68C0B40(v45 > 1, v46 + 1, 1, v7);
    }
    _OWORD v7[2] = v46 + 1;
    long long v47 = &v7[4 * v46];
    v47[4] = v23;
    v47[5] = v25;
    v47[6] = v43;
    v47[7] = v44;
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_5:
    ++v5;
  }
  while (v5 != v58);
  swift_bridgeObjectRelease();
  uint64_t v48 = (uint64_t *)a1[1];
  if (!v48) {
    return v7;
  }
LABEL_49:
  if (sub_1B6805D0C(*v48) == 14)
  {
    v62[0] = v48;
    sub_1B67FACD4();
    if (sub_1B6E31818() == 0x6A624F7466697753 && v49 == 0xEB00000000746365)
    {
LABEL_52:
      swift_bridgeObjectRelease();
    }
    else
    {
      char v50 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if ((v50 & 1) == 0)
      {
        v62[0] = v48;
        if (sub_1B6E31818() == 0xD000000000000012 && v52 == 0x80000001B6F38050) {
          goto LABEL_52;
        }
        char v53 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if ((v53 & 1) == 0)
        {
          v62[0] = v48;
          if (sub_1B6E31818() == 0xD000000000000013 && v54 == 0x80000001B6F38070) {
            goto LABEL_52;
          }
          char v55 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          if ((v55 & 1) == 0)
          {
            uint64_t v56 = sub_1B680544C(v48);
            if (v56)
            {
              if (!*(void *)(v56 + 16)) {
                goto LABEL_52;
              }
              v62[0] = v56;
              sub_1B6641468((uint64_t)v7);
              return (void *)v62[0];
            }
          }
        }
      }
    }
  }
  return v7;
}

uint64_t type metadata accessor for Metadata.Class.NameAndType()
{
  return self;
}

uint64_t sub_1B6805BA4()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Metadata.Struct.NameAndType()
{
  return self;
}

uint64_t sub_1B6805C00(uint64_t a1)
{
  sub_1B6805C5C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B6805C5C()
{
  if (!qword_1E9DD0D20)
  {
    sub_1B6805CB4();
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0D20);
    }
  }
}

unint64_t sub_1B6805CB4()
{
  unint64_t result = qword_1E9DD0D28;
  if (!qword_1E9DD0D28)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DD0D28);
  }
  return result;
}

uint64_t sub_1B6805D0C(uint64_t a1)
{
  if (a1 <= 1023)
  {
    switch(a1)
    {
      case 768:
        uint64_t result = 3;
        break;
      case 769:
        uint64_t result = 5;
        break;
      case 770:
        uint64_t result = 6;
        break;
      case 771:
        uint64_t result = 7;
        break;
      case 772:
        uint64_t result = 8;
        break;
      case 773:
        uint64_t result = 9;
        break;
      case 774:
        uint64_t result = 10;
        break;
      default:
        uint64_t v2 = a1 - 512;
        uint64_t result = 0;
        switch(v2)
        {
          case 0:
            return result;
          case 1:
            uint64_t result = 1;
            break;
          case 2:
            uint64_t result = 2;
            break;
          case 3:
            uint64_t result = 4;
            break;
          default:
            return 14;
        }
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 1024:
        return 11;
      case 1280:
        return 12;
      case 1281:
        return 13;
      default:
        return 14;
    }
  }
  return result;
}

void sub_1B6805E24(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for ContextDescriptor();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void *sub_1B6805E70@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B6805EA0(a1, a2);
}

void *sub_1B6805E88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B6805EBC(a1, a2);
}

void *sub_1B6805EA0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(int *)(**(void **)(v2 + 16) + 4 * (*result + 2 * *(void *)(v2 + 24)));
  return result;
}

void *sub_1B6805EBC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(**(void **)(v2 + 16) + 8 * (*result + *(void *)(v2 + 24)));
  return result;
}

ValueMetadata *type metadata accessor for _Metadata._Struct()
{
  return &type metadata for _Metadata._Struct;
}

ValueMetadata *type metadata accessor for _Metadata()
{
  return &type metadata for _Metadata;
}

uint64_t getEnumTagSinglePayload for _Metadata._Class(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _Metadata._Class(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _Metadata._Class()
{
  return &type metadata for _Metadata._Class;
}

ValueMetadata *type metadata accessor for Metadata()
{
  return &type metadata for Metadata;
}

unint64_t sub_1B6805FDC(uint64_t a1)
{
  unint64_t result = sub_1B6806004();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B6806004()
{
  unint64_t result = qword_1E9DD0D40;
  if (!qword_1E9DD0D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0D40);
  }
  return result;
}

unint64_t sub_1B6806058(uint64_t a1)
{
  unint64_t result = sub_1B6806080();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B6806080()
{
  unint64_t result = qword_1E9DD0D48;
  if (!qword_1E9DD0D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0D48);
  }
  return result;
}

uint64_t sub_1B68060D4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[4];
  swift_retain();
  uint64_t v5 = 0;
  sub_1B6BFA254(v4, v3);
  float v7 = v6;
  sub_1B62F0E60(v4, (uint64_t)v39);
  sub_1B62CA210((uint64_t)v39, (uint64_t)v51, &qword_1EB980080);
  if (v52) {
    unsigned int v8 = -1;
  }
  else {
    unsigned int v8 = 0;
  }
  float32x4_t v9 = (float32x4_t)vbslq_s8((int8x16_t)vdupq_n_s32(v8), (int8x16_t)xmmword_1B6E87B90, v51[1]);
  int32x4_t v10 = vcltzq_f32(v9);
  int v11 = v10.i32[1];
  if (v10.i32[1] >= v10.i32[0]) {
    int v11 = v10.i32[0];
  }
  if (v10.i32[2] < v11) {
    int v11 = v10.i32[2];
  }
  if (v11 < 0) {
    return swift_release();
  }
  float32x4_t v37 = v9;
  if (v52) {
    unsigned int v12 = -1;
  }
  else {
    unsigned int v12 = 0;
  }
  float32x4_t v35 = (float32x4_t)vbslq_s8((int8x16_t)vdupq_n_s32(v12), (int8x16_t)xmmword_1B6E4F370, v51[0]);
  uint64_t v13 = *(void *)(sub_1B6A810DC() + 16);
  swift_release();
  uint64_t v32 = v13;
  vfx_uniform_grid_init(v13, (__n128)vsubq_f32(v35, v37), (__n128)vaddq_f32(v37, v35), v7);
  long long v14 = *(_OWORD *)(v2 + 32);
  v56[0] = *(_OWORD *)(v2 + 16);
  v56[1] = v14;
  uint64_t v57 = *(void *)(v2 + 48);
  sub_1B62C9DA8(v3, (uint64_t)v56, 0x200000000, v40);
  sub_1B62CA210((uint64_t)v40, (uint64_t)v41, (unint64_t *)&qword_1EB97DC50);
  if (!*(void *)&v41[0])
  {
LABEL_25:
    vfx_uniform_grid_finalize(v32);
    return swift_release();
  }
  long long v48 = v41[0];
  long long v49 = v41[1];
  uint64_t v50 = v42;
  if (v47 < 1 || (uint64_t v15 = v44) == 0)
  {
LABEL_24:
    sub_1B632F170(v40);
    goto LABEL_25;
  }
  uint64_t v16 = v46;
  uint64_t v17 = v43;
  uint64_t v18 = v46[4];
  int v19 = *(unsigned __int8 *)(v45 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v29 = v46 + 8;
  uint64_t v30 = (uint64_t)(v46 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v20 = (uint64_t *)(v17 + 24);
  int v31 = v19;
  while (1)
  {
    uint64_t v38 = v5;
    uint64_t v21 = *((unsigned int *)v20 - 6);
    uint64_t v22 = (uint64_t *)*(v20 - 1);
    uint64_t v23 = v20[2];
    uint64_t v34 = *v20;
    uint64_t v36 = *((unsigned int *)v20 - 5);
    uint64_t v33 = v20[1];
    if (v19)
    {
      unint64_t v24 = *(os_unfair_lock_s **)(v23 + 376);
      swift_retain_n();
      os_unfair_lock_lock(v24);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 344));
      swift_release();
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v18);
    sub_1B62CA210(v30, (uint64_t)v55, &qword_1EB97DE20);
    uint64_t v25 = v16[4];
    uint64_t v26 = *(void *)(*(void *)(*(void *)(*(void *)(v23 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v16[6] = ecs_stack_allocator_allocate(v25, 48 * v26, 8);
    v16[7] = v26;
    v29[1] = 0;
    v29[2] = 0;
    *uint64_t v29 = 0;
    swift_release();
    uint64_t v27 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v22, v34, v33, (uint64_t)v16);
    if (v36 - v21 < 0) {
      break;
    }
    vfx_uniform_grid_add_points(v32, (char *)(v27 + 16 * v21), v36 - v21);
    v53[0] = v48;
    v53[1] = v49;
    uint64_t v54 = v50;
    uint64_t v5 = v38;
    sub_1B6345178(v16, (unsigned __int16 **)v53, (uint64_t)v55);
    sub_1B634507C((char *)v23);
    ecs_stack_allocator_pop_snapshot(v18);
    int v19 = v31;
    if (v31)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 376));
    }
    swift_release();
    v20 += 6;
    if (!--v15)
    {
      sub_1B632F170(v40);
      goto LABEL_24;
    }
  }
  uint64_t result = sub_1B6E32BD8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ParticleGenerateGrid.System()
{
  return self;
}

uint64_t sub_1B68064EC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 64);
  long long v8 = *(_OWORD *)(a1 + 48);
  long long v9 = v3;
  uint64_t v10 = *(void *)(a1 + 80);
  sub_1B6A6ED00(1, (uint64_t)v6);
  sub_1B62F648C(a1);
  long long v4 = v6[1];
  *(_OWORD *)(v2 + 16) = v6[0];
  *(_OWORD *)(v2 + 32) = v4;
  *(void *)(v2 + 48) = v7;
  return v2;
}

const char *sub_1B6806574()
{
  return "ComputeNN.CPU";
}

uint64_t sub_1B6806588()
{
  return type metadata accessor for ParticleGenerateGrid.System();
}

ValueMetadata *type metadata accessor for ParticleGenerateGrid()
{
  return &type metadata for ParticleGenerateGrid;
}

uint64_t sub_1B68065B8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B68065C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B68065C8()
{
  return swift_bridgeObjectRetain();
}

float sub_1B68065D0()
{
  return *(float *)(v0 + 24);
}

id sub_1B68065D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B680986C(&OBJC_IVAR____TtC3VFX19VideoCaptureSession_session, (SEL *)&selRef_stopRunning, a3, (uint64_t (*)(uint64_t))type metadata accessor for VideoCaptureSession);
}

char *sub_1B6806694(void *a1, void *a2, int a3)
{
  cacheOut[1] = *(CVMetalTextureCacheRef *)MEMORY[0x1E4F143B8];
  uint64_t v5 = &v3[OBJC_IVAR____TtC3VFX19VideoCaptureSession_frameTime];
  uint64_t v6 = MEMORY[0x1E4F1F9F8];
  uint64_t v7 = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
  *(void *)uint64_t v5 = *MEMORY[0x1E4F1F9F8];
  *((void *)v5 + 1) = *(void *)(v6 + 8);
  *((void *)v5 + 2) = v7;
  *(void *)&v3[OBJC_IVAR____TtC3VFX19VideoCaptureSession_outputTexture] = 0;
  *(void *)&v3[OBJC_IVAR____TtC3VFX19VideoCaptureSession_sampleBuffer] = 0;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F16498]);
  long long v9 = v3;
  id v10 = objc_msgSend(v8, sel_init);
  *(void *)&v9[OBJC_IVAR____TtC3VFX19VideoCaptureSession_session] = v10;
  cacheOut[0] = 0;
  CVMetalTextureCacheCreate(0, 0, a1, 0, cacheOut);
  CVMetalTextureCacheRef v11 = cacheOut[0];
  *(CVMetalTextureCacheRef *)&v9[OBJC_IVAR____TtC3VFX19VideoCaptureSession_metalTextureCache] = cacheOut[0];
  uint64_t v56 = v11;

  v60.receiver = v9;
  v60.super_class = (Class)type metadata accessor for VideoCaptureSession();
  unsigned int v12 = (char *)objc_msgSendSuper2(&v60, sel_init);
  uint64_t v58 = OBJC_IVAR____TtC3VFX19VideoCaptureSession_session;
  uint64_t v13 = *(void **)&v12[OBJC_IVAR____TtC3VFX19VideoCaptureSession_session];
  long long v14 = v12;
  objc_msgSend(v13, sel_beginConfiguration);
  uint64_t v15 = self;
  uint64_t v16 = *MEMORY[0x1E4F15C18];
  id v17 = objc_msgSend(v15, sel_defaultDeviceWithMediaType_, *MEMORY[0x1E4F15C18]);
  uint64_t v54 = v14;
  if (v17)
  {
    id v18 = objc_allocWithZone(MEMORY[0x1E4F16450]);
    v59[0] = 0;
    id v19 = v17;
    id v20 = objc_msgSend(v18, sel_initWithDevice_error_, v19, v59);
    if (v20)
    {
      uint64_t v21 = v20;
      id v22 = (id)v59[0];
      id v23 = v13;
      objc_msgSend(v23, sel_addInput_, v21);
    }
    else
    {
      id v25 = (id)v59[0];
      uint64_t v26 = (void *)sub_1B6E30D78();

      swift_willThrow();
      if (qword_1EB9852D0 != -1) {
        swift_once();
      }
      swift_retain();
      int v27 = sub_1B6E32148();
      if (qword_1EB9854F8 != -1) {
        swift_once();
      }
      v59[0] = 0;
      swift_retain();
      sub_1B6B33E34(v27, v59, 0xD000000000000019, 0x80000001B6F38420);
      swift_release();

      swift_release();
    }
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v24 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v59[0] = 0;
    swift_retain();
    sub_1B6B33E34(v24, v59, 0xD000000000000019, 0x80000001B6F38330);
    swift_release();
    swift_release();
  }
  uint64_t v28 = v58;
  if (qword_1EB9852D0 != -1) {
    swift_once();
  }
  strcpy((char *)v59, "videoDevice ");
  BYTE5(v59[1]) = 0;
  HIWORD(v59[1]) = -5120;
  id v61 = v17;
  sub_1B680F0BC();
  id v55 = v17;
  swift_retain();
  sub_1B6E31818();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v29 = v59[0];
  uint64_t v30 = v59[1];
  int v31 = sub_1B6E32168();
  if (qword_1EB9854F8 != -1) {
    swift_once();
  }
  v59[0] = 0;
  swift_retain();
  sub_1B6B33E34(v31, v59, v29, v30);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F164C0]), sel_init);
  objc_msgSend(v32, sel_setAlwaysDiscardsLateVideoFrames_, 1);
  sub_1B67426AC();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = sub_1B6E31798();
  *(void *)(inited + 40) = v34;
  *(void *)(inited + 72) = MEMORY[0x1E4FBC4C0];
  *(_DWORD *)(inited + 48) = 1111970369;
  sub_1B67DF5A8(inited);
  float32x4_t v35 = (void *)sub_1B6E314B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_setVideoSettings_, v35);

  uint64_t v36 = v54;
  float32x4_t v37 = a2;
  objc_msgSend(v32, sel_setSampleBufferDelegate_queue_, v54, a2);
  uint64_t v38 = *(void **)&v12[v58];
  if (objc_msgSend(v38, sel_canAddOutput_, v32))
  {
    objc_msgSend(v38, sel_addOutput_, v32);
    swift_retain();
    int v39 = sub_1B6E32168();
    v59[0] = 0;
    swift_retain();
    uint64_t v40 = 0xD00000000000001BLL;
    uint64_t v41 = "session.addOutput succeeded";
  }
  else
  {
    swift_retain();
    int v39 = sub_1B6E32148();
    v59[0] = 0;
    swift_retain();
    uint64_t v40 = 0xD00000000000002ELL;
    uint64_t v41 = "Could not add video output to capture session.";
  }
  sub_1B6B33E34(v39, v59, v40, (unint64_t)(v41 - 32) | 0x8000000000000000);
  swift_release();
  swift_release();
  objc_msgSend(*(id *)&v12[v58], sel_commitConfiguration);
  id v42 = objc_msgSend(v32, sel_connectionWithMediaType_, v16);
  if (v42)
  {
    uint64_t v43 = v42;
    swift_retain();
    int v44 = sub_1B6E32168();
    v59[0] = 0;
    swift_retain();
    sub_1B6B33E34(v44, v59, 0xD00000000000001CLL, 0x80000001B6F383C0);
    swift_release();
    swift_release();
    if (objc_msgSend(v43, sel_isVideoOrientationSupported)) {
      objc_msgSend(v43, sel_setVideoOrientation_, BYTE1(a3) + 1);
    }
    if (objc_msgSend(v43, sel_isVideoMirroringSupported))
    {
      strcpy((char *)v59, "mirroring : ");
      BYTE5(v59[1]) = 0;
      HIWORD(v59[1]) = -5120;
      swift_retain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v45 = v59[0];
      uint64_t v46 = v59[1];
      int v47 = sub_1B6E32168();
      v59[0] = 0;
      swift_retain();
      int v48 = v47;
      uint64_t v36 = v54;
      sub_1B6B33E34(v48, v59, v45, v46);
      swift_release();
      float32x4_t v37 = a2;
      swift_bridgeObjectRelease();
      swift_release();
      objc_msgSend(v43, sel_setAutomaticallyAdjustsVideoMirroring_, 0);
      objc_msgSend(v43, sel_setVideoMirrored_, (a3 & 0x10000u) >> 16);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_retain();
      int v50 = sub_1B6E32168();
      v59[0] = 0;
      swift_retain();
      sub_1B6B33E34(v50, v59, 0xD000000000000017, 0x80000001B6F383E0);

      swift_release();
      swift_release();
    }
    uint64_t v28 = v58;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_retain();
    int v49 = sub_1B6E32148();
    v59[0] = 0;
    swift_retain();
    sub_1B6B33E34(v49, v59, 0xD000000000000032, 0x80000001B6F38380);
    swift_release();
    swift_release();
  }
  objc_msgSend(*(id *)&v12[v28], sel_startRunning);
  swift_retain();
  int v51 = sub_1B6E32168();
  v59[0] = 0;
  swift_retain();
  sub_1B6B33E34(v51, v59, 0x6E75527472617473, 0xEC000000676E696ELL);

  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  return v36;
}

uint64_t type metadata accessor for VideoCaptureSession()
{
  return self;
}

void sub_1B68070F8(uint64_t a1, opaqueCMSampleBuffer *a2, uint64_t a3)
{
  image[1] = *(CVMetalTextureRef *)MEMORY[0x1E4F143B8];
  self;
  if (swift_dynamicCastObjCClass())
  {
    uint64_t v5 = CMSampleBufferGetImageBuffer(a2);
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void **)(a3 + OBJC_IVAR____TtC3VFX19VideoCaptureSession_metalTextureCache);
      if (v7)
      {
        id v8 = v7;
        size_t Width = CVPixelBufferGetWidth(v6);
        size_t Height = CVPixelBufferGetHeight(v6);
        image[0] = 0;
        CVReturn TextureFromImage = CVMetalTextureCacheCreateTextureFromImage((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v8, v6, 0, MTLPixelFormatBGRA8Unorm_sRGB, Width, Height, 0, image);
        CVMetalTextureRef v12 = image[0];
        if (TextureFromImage)
        {
          if (qword_1EB9852D0 != -1) {
            swift_once();
          }
          swift_retain();
          int v13 = sub_1B6E32148();
          if (qword_1EB9854F8 != -1) {
            swift_once();
          }
          v21.CMTimeValue value = 0;
          swift_retain();
          sub_1B6B33E34(v13, &v21.value, 0xD00000000000002DLL, 0x80000001B6F385A0);

          swift_release();
          swift_release();
        }
        else
        {
          id v14 = CVMetalTextureGetTexture(image[0]);
          uint64_t v15 = *(void **)(a3 + OBJC_IVAR____TtC3VFX19VideoCaptureSession_sampleBuffer);
          *(void *)(a3 + OBJC_IVAR____TtC3VFX19VideoCaptureSession_sampleBuffer) = a2;
          uint64_t v16 = a2;

          *(void *)(a3 + OBJC_IVAR____TtC3VFX19VideoCaptureSession_outputTexture) = v14;
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          CMSampleBufferGetPresentationTimeStamp(&v21, v16);
          CMTimeValue value = v21.value;
          CMTimeEpoch epoch = v21.epoch;
          CMTimeValue v19 = *(void *)&v21.timescale;

          swift_unknownObjectRelease();
          id v20 = (CMTimeValue *)(a3 + OBJC_IVAR____TtC3VFX19VideoCaptureSession_frameTime);
          *id v20 = value;
          v20[1] = v19;
          void v20[2] = epoch;
        }
      }
      else
      {
      }
    }
  }
}

unint64_t sub_1B6807430@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1B680F058(*a1);
  *a2 = result;
  return result;
}

void sub_1B680745C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1B6807468()
{
  return sub_1B6E31BA8();
}

uint64_t sub_1B68074C8()
{
  return sub_1B6E31B08();
}

void sub_1B6807518(void *a1@<X8>)
{
  *a1 = &unk_1F0F5D570;
}

uint64_t sub_1B6807528(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  v13[1] = a3;
  v13[2] = a4;
  int v14 = a2;
  sub_1B681223C(0, &qword_1E9DD0F48, (uint64_t (*)(void))sub_1B68112A4, (uint64_t)&type metadata for VideoCapture.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v9);
  CVMetalTextureCacheRef v11 = (char *)v13 - v10;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68112A4();
  sub_1B6E33A88();
  char v19 = 0;
  sub_1B6E32F58();
  if (!v4)
  {
    char v18 = BYTE1(v14);
    char v17 = 1;
    sub_1B66C4D88();
    sub_1B6E32FA8();
    char v16 = 2;
    sub_1B6E32F58();
    char v15 = 3;
    sub_1B6E32F48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B680773C(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BAEA9C(*a1, *a2);
}

uint64_t sub_1B6807750()
{
  uint64_t result = 0x65727574706163;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7461746E6569726FLL;
      break;
    case 2:
      uint64_t result = 0x6465726F7272696DLL;
      break;
    case 3:
      uint64_t result = 0x696669746E656469;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B68077F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B680E1F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B6807818(uint64_t a1)
{
  unint64_t v2 = sub_1B68112A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6807854(uint64_t a1)
{
  unint64_t v2 = sub_1B68112A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6807890@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B680F124(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result & 1;
    *(unsigned char *)(a2 + 1) = BYTE1(result);
    *(unsigned char *)(a2 + 2) = BYTE2(result) & 1;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1B68078D4(void *a1)
{
  if (v1[2]) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  return sub_1B6807528(a1, *v1 | (v1[1] << 8) | v2, *((void *)v1 + 1), *((void *)v1 + 2));
}

uint64_t sub_1B6807910(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1[2]) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  if (a2[2]) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  return sub_1B680E1A4(*a1 | (a1[1] << 8) | v2, *((void *)a1 + 1), *((void *)a1 + 2), *a2 | (a2[1] << 8) | v3, *((void *)a2 + 1), *((void *)a2 + 2));
}

uint64_t sub_1B680795C()
{
  return 15;
}

uint64_t sub_1B6807964@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6E31108();
  uint64_t v7 = sub_1B6E310B8();
  uint64_t v9 = v8;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 1;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v9;
  return result;
}

uint64_t sub_1B6807A4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1B6E31118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6E31108();
  uint64_t v7 = sub_1B6E310B8();
  uint64_t v9 = v8;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 10) = 1;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v9;
  return result;
}

uint64_t *sub_1B6807B38(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 32);
  v54[0] = *(_OWORD *)(v1 + 16);
  v54[1] = v3;
  uint64_t v55 = *(void *)(v1 + 48);
  sub_1B62C9DA8(a1, (uint64_t)v54, 0x200000000, v6);
  sub_1B62D7590((uint64_t)v6, (uint64_t)&v19, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v19)
  {
    uint64_t v43 = v19;
    int v44 = v20;
    char v45 = v21;
    uint64_t v46 = v22;
    char v47 = v23;
    uint64_t v48 = v24;
    uint64_t v49 = v25;
    long long v50 = v26;
    long long v51 = v27;
    uint64_t v52 = v28;
    uint64_t v53 = v29;
    swift_retain();
    sub_1B6D97104((uint64_t)&v43, a1);
    swift_release();
    sub_1B632F170(v6);
  }
  long long v4 = *(_OWORD *)(v1 + 72);
  v41[0] = *(_OWORD *)(v1 + 56);
  v41[1] = v4;
  uint64_t v42 = *(void *)(v1 + 88);
  sub_1B62C9DA8(a1, (uint64_t)v41, 0x200000000, v7);
  uint64_t result = (uint64_t *)sub_1B62D7590((uint64_t)v7, (uint64_t)&v8, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v8)
  {
    uint64_t v30 = v8;
    int v31 = v9;
    char v32 = v10;
    uint64_t v33 = v11;
    char v34 = v12;
    uint64_t v35 = v13;
    uint64_t v36 = v14;
    long long v37 = v15;
    long long v38 = v16;
    uint64_t v39 = v17;
    uint64_t v40 = v18;
    sub_1B6D866BC((uint64_t)&v30);
    return sub_1B632F170(v7);
  }
  return result;
}

uint64_t sub_1B6807CD0(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BAFEF0(*a1, *a2);
}

uint64_t sub_1B6807CDC()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6807D9C()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6807E44()
{
  return sub_1B6E33988();
}

uint64_t sub_1B6807F00@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B680E5A8();
  *a1 = result;
  return result;
}

void sub_1B6807F38(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x7465737361;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 2036427888;
      goto LABEL_3;
    case 2:
      *a1 = 1702131053;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x73706F6F6CLL;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1B6807FB8()
{
  uint64_t result = 0x7465737361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 2036427888;
      break;
    case 2:
      uint64_t result = 1702131053;
      break;
    case 3:
      uint64_t result = 0x73706F6F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B680802C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B680E5A8();
  *a1 = result;
  return result;
}

uint64_t sub_1B680805C(uint64_t a1)
{
  unint64_t v2 = sub_1B6811188();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6808098(uint64_t a1)
{
  unint64_t v2 = sub_1B6811188();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68080D4(void *a1)
{
  uint64_t v3 = v1;
  sub_1B681223C(0, &qword_1E9DD0F28, (uint64_t (*)(void))sub_1B6811188, (uint64_t)&type metadata for MovieFileAsset.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  char v10 = (char *)v13 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6811188();
  sub_1B6E33A88();
  long long v11 = v3[1];
  long long v14 = *v3;
  long long v15 = v11;
  long long v16 = v3[2];
  sub_1B674C934((uint64_t)&v16, (uint64_t)v19);
  long long v17 = v14;
  long long v18 = v15;
  v13[0] = v14;
  v13[1] = v15;
  v13[2] = v16;
  char v20 = 0;
  sub_1B6811230((uint64_t)v3);
  sub_1B6811134();
  sub_1B6E32FA8();
  if (v2)
  {
    sub_1B62C7BF4((uint64_t)&v17);
    sub_1B62C7BF4((uint64_t)&v18);
    sub_1B6811278(v19);
  }
  else
  {
    sub_1B62C7BF4((uint64_t)&v17);
    sub_1B62C7BF4((uint64_t)&v18);
    sub_1B6811278(v19);
    LOBYTE(v13[0]) = 1;
    sub_1B6E32F58();
    LOBYTE(v13[0]) = 2;
    sub_1B6E32F58();
    LOBYTE(v13[0]) = 3;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

id sub_1B6808338@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  long long v5 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  id v7 = (id)v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return v7;
}

double sub_1B680839C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B680F43C(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = v7[0];
    *(_OWORD *)(a2 + 32) = *(_OWORD *)v7;
    *(_DWORD *)(a2 + 47) = *(_DWORD *)((char *)&v7[1] + 7);
  }
  return result;
}

uint64_t sub_1B68083EC(void *a1)
{
  return sub_1B68080D4(a1);
}

void sub_1B6808430(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  *(_WORD *)(a1 + 49) = 257;
}

uint64_t sub_1B6808450()
{
  uint64_t v1 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = 0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOSurfaceWrapper()
{
  return self;
}

uint64_t sub_1B68084B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1B6E30F48();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  uint64_t v3 = (int *)type metadata accessor for MovieRuntime(0);
  *(void *)(a1 + v3[5]) = 0;
  *(void *)(a1 + v3[6]) = 0;
  uint64_t v4 = a1 + v3[7];
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  *(unsigned char *)(a1 + v3[8]) = 0;
  *(void *)(a1 + v3[9]) = 0;
  *(void *)(a1 + v3[10]) = 0;
  uint64_t v5 = v3[11];
  type metadata accessor for IOSurfaceWrapper();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(a1 + v5) = result;
  *(void *)(a1 + v3[12]) = 0;
  return result;
}

id sub_1B680858C()
{
  uint64_t v1 = *(int *)(type metadata accessor for MovieRuntime(0) + 48);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
  }
  else
  {
    sub_1B680FE7C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
    *(void *)(inited + 32) = sub_1B6E31798();
    *(void *)(inited + 40) = v5;
    *(void *)(inited + 48) = 1111970369;
    uint64_t v6 = sub_1B67DD49C(inited);
    sub_1B6808DAC((uint64_t)v6);
    swift_bridgeObjectRelease();
    id v7 = objc_allocWithZone(MEMORY[0x1E4F16648]);
    uint64_t v8 = (void *)sub_1B6E314B8();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v7, sel_initWithPixelBufferAttributes_, v8);

    *(void *)(v0 + v1) = v9;
    id v3 = v9;
    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

uint64_t sub_1B68086AC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B681139C(0, &qword_1E9DD0F80, &qword_1E9DD0F88, (uint64_t)&unk_1E9DD0F90, (uint64_t)type metadata accessor for Node);
    uint64_t v2 = sub_1B6E32C58();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v24 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(63 - v3) >> 6;
  uint64_t v7 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_27;
    }
    uint64_t v13 = v8 + 1;
    if (v8 + 1 >= v6) {
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v13);
    if (!v14)
    {
      uint64_t v13 = v8 + 2;
      if (v8 + 2 >= v6) {
        goto LABEL_34;
      }
      unint64_t v14 = *(void *)(v24 + 8 * v13);
      if (!v14)
      {
        uint64_t v13 = v8 + 3;
        if (v8 + 3 >= v6) {
          goto LABEL_34;
        }
        unint64_t v14 = *(void *)(v24 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v8 + 4;
          if (v8 + 4 >= v6) {
            goto LABEL_34;
          }
          unint64_t v14 = *(void *)(v24 + 8 * v13);
          if (!v14)
          {
            uint64_t v13 = v8 + 5;
            if (v8 + 5 >= v6) {
              goto LABEL_34;
            }
            unint64_t v14 = *(void *)(v24 + 8 * v13);
            if (!v14) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v8 = v13;
LABEL_27:
    uint64_t v16 = *(void *)(*(void *)(a1 + 48) + 8 * v12);
    sub_1B6811340(0, (unint64_t *)&unk_1E9DD0A80, (uint64_t)&qword_1E9DD0FA0, (uint64_t)type metadata accessor for Node, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B67FBAEC);
    sub_1B6811340(0, &qword_1E9DD0F88, (uint64_t)&unk_1E9DD0F90, (uint64_t)type metadata accessor for Node, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B681141C);
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t v17 = sub_1B6E33908();
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v7 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v19) & ~*(void *)(v7 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v21 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (v20 + 1 == v21) {
          unint64_t v20 = 0;
        }
        else {
          ++v20;
        }
        uint64_t v22 = *(void *)(v7 + 8 * v20);
      }
      while (v22 == -1);
      unint64_t v9 = __clz(__rbit64(~v22)) + (v20 << 6);
    }
    *(void *)(v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = 8 * v9;
    *(void *)(*(void *)(v2 + 48) + v10) = v16;
    *(void *)(*(void *)(v2 + 56) + v10) = v25;
    ++*(void *)(v2 + 16);
  }
  uint64_t v15 = v8;
  while (v6 - 6 != v15)
  {
    unint64_t v14 = *(void *)(a1 + 112 + 8 * v15++);
    if (v14)
    {
      uint64_t v13 = v15 + 5;
      goto LABEL_26;
    }
  }
LABEL_34:
  swift_release();
  sub_1B62BB588();
  return v2;
}

uint64_t sub_1B6808A2C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B681139C(0, &qword_1E9DD0F58, &qword_1E9DD0F60, (uint64_t)&unk_1E9DD0F68, (uint64_t)type metadata accessor for AuthoringNode);
    uint64_t v2 = sub_1B6E32C58();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v24 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(63 - v3) >> 6;
  uint64_t v7 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_27;
    }
    uint64_t v13 = v8 + 1;
    if (v8 + 1 >= v6) {
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v13);
    if (!v14)
    {
      uint64_t v13 = v8 + 2;
      if (v8 + 2 >= v6) {
        goto LABEL_34;
      }
      unint64_t v14 = *(void *)(v24 + 8 * v13);
      if (!v14)
      {
        uint64_t v13 = v8 + 3;
        if (v8 + 3 >= v6) {
          goto LABEL_34;
        }
        unint64_t v14 = *(void *)(v24 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v8 + 4;
          if (v8 + 4 >= v6) {
            goto LABEL_34;
          }
          unint64_t v14 = *(void *)(v24 + 8 * v13);
          if (!v14)
          {
            uint64_t v13 = v8 + 5;
            if (v8 + 5 >= v6) {
              goto LABEL_34;
            }
            unint64_t v14 = *(void *)(v24 + 8 * v13);
            if (!v14) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v8 = v13;
LABEL_27:
    uint64_t v16 = *(void *)(*(void *)(a1 + 48) + 8 * v12);
    sub_1B6811340(0, (unint64_t *)&unk_1E9DD0F70, (uint64_t)&unk_1E9DD09D0, (uint64_t)type metadata accessor for AuthoringNode, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B67FBAEC);
    sub_1B6811340(0, &qword_1E9DD0F60, (uint64_t)&unk_1E9DD0F68, (uint64_t)type metadata accessor for AuthoringNode, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B681141C);
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t v17 = sub_1B6E33908();
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v7 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v19) & ~*(void *)(v7 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v21 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (v20 + 1 == v21) {
          unint64_t v20 = 0;
        }
        else {
          ++v20;
        }
        uint64_t v22 = *(void *)(v7 + 8 * v20);
      }
      while (v22 == -1);
      unint64_t v9 = __clz(__rbit64(~v22)) + (v20 << 6);
    }
    *(void *)(v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = 8 * v9;
    *(void *)(*(void *)(v2 + 48) + v10) = v16;
    *(void *)(*(void *)(v2 + 56) + v10) = v25;
    ++*(void *)(v2 + 16);
  }
  uint64_t v15 = v8;
  while (v6 - 6 != v15)
  {
    unint64_t v14 = *(void *)(a1 + 112 + 8 * v15++);
    if (v14)
    {
      uint64_t v13 = v15 + 5;
      goto LABEL_26;
    }
  }
LABEL_34:
  swift_release();
  sub_1B62BB588();
  return v2;
}

void *sub_1B6808DAC(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1B67F763C();
    uint64_t v2 = (void *)sub_1B6E32C58();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  unint64_t v6 = (unint64_t)(63 - v3) >> 6;
  uint64_t v7 = &v37;
  uint64_t v8 = &v39;
  swift_bridgeObjectRetain();
  uint64_t i = 0;
  int64_t v31 = v6;
  uint64_t v29 = v1 + 112;
  unint64_t v30 = v6 - 6;
  uint64_t v10 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v11 = MEMORY[0x1E4FBB550];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  uint64_t v20 = i + 1;
  if (i + 1 < v31)
  {
    unint64_t v21 = *(void *)(v32 + 8 * v20);
    if (v21) {
      goto LABEL_25;
    }
    uint64_t v20 = i + 2;
    if (i + 2 < v31)
    {
      unint64_t v21 = *(void *)(v32 + 8 * v20);
      if (v21) {
        goto LABEL_25;
      }
      uint64_t v20 = i + 3;
      if (i + 3 < v31)
      {
        unint64_t v21 = *(void *)(v32 + 8 * v20);
        if (v21) {
          goto LABEL_25;
        }
        uint64_t v20 = i + 4;
        if (i + 4 < v31)
        {
          unint64_t v21 = *(void *)(v32 + 8 * v20);
          if (v21) {
            goto LABEL_25;
          }
          uint64_t v20 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v20);
            if (!v21)
            {
              uint64_t v22 = i;
              do
              {
                if (v30 == v22) {
                  goto LABEL_29;
                }
                unint64_t v21 = *(void *)(v29 + 8 * v22++);
              }
              while (!v21);
              uint64_t v20 = v22 + 5;
            }
LABEL_25:
            uint64_t v34 = (v21 - 1) & v21;
            unint64_t v19 = __clz(__rbit64(v21)) + (v20 << 6);
            for (i = v20; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
            {
              char v23 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
              uint64_t v35 = *v23;
              uint64_t v36 = v23[1];
              swift_bridgeObjectRetain();
              swift_dynamicCast();
              sub_1B62B57A8(v7, v8);
              sub_1B62B57A8(v8, v40);
              sub_1B62B57A8(v40, &v38);
              unint64_t v24 = sub_1B62B2CE0(v35, v36);
              unint64_t v25 = v24;
              if (v26)
              {
                uint64_t v33 = i;
                unint64_t v12 = v8;
                uint64_t v13 = v7;
                uint64_t v14 = v1;
                uint64_t v15 = v11;
                uint64_t v16 = v10;
                uint64_t v17 = (uint64_t *)(v2[6] + 16 * v24);
                swift_bridgeObjectRelease();
                uint64_t *v17 = v35;
                v17[1] = v36;
                uint64_t v10 = v16;
                uint64_t v11 = v15;
                uint64_t v1 = v14;
                uint64_t v7 = v13;
                uint64_t v8 = v12;
                uint64_t i = v33;
                uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
                _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v18);
                sub_1B62B57A8(&v38, v18);
                unint64_t v5 = v34;
                if (!v34) {
                  goto LABEL_11;
                }
              }
              else
              {
                *(void *)((char *)v2 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v24;
                long long v27 = (uint64_t *)(v2[6] + 16 * v24);
                *long long v27 = v35;
                v27[1] = v36;
                sub_1B62B57A8(&v38, (_OWORD *)(v2[7] + 32 * v24));
                ++v2[2];
                unint64_t v5 = v34;
                if (!v34) {
                  goto LABEL_11;
                }
              }
LABEL_10:
              uint64_t v34 = (v5 - 1) & v5;
            }
          }
        }
      }
    }
  }
LABEL_29:
  sub_1B62BB588();
  return v2;
}

uint64_t sub_1B68090E4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B6810B3C();
    uint64_t v2 = sub_1B6E32C58();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  unint64_t v6 = (unint64_t)(63 - v3) >> 6;
  uint64_t v7 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v29 = 0;
  unint64_t v26 = v6 - 6;
  int64_t v27 = v6;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v29 << 6);
      goto LABEL_27;
    }
    uint64_t v11 = v29 + 1;
    if (v29 + 1 >= v27) {
      goto LABEL_34;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v11);
    if (!v12)
    {
      uint64_t v11 = v29 + 2;
      if (v29 + 2 >= v27) {
        goto LABEL_34;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v11);
      if (!v12)
      {
        uint64_t v11 = v29 + 3;
        if (v29 + 3 >= v27) {
          goto LABEL_34;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v11);
        if (!v12)
        {
          uint64_t v11 = v29 + 4;
          if (v29 + 4 >= v27) {
            goto LABEL_34;
          }
          unint64_t v12 = *(void *)(v28 + 8 * v11);
          if (!v12)
          {
            uint64_t v11 = v29 + 5;
            if (v29 + 5 >= v27) {
              goto LABEL_34;
            }
            unint64_t v12 = *(void *)(v28 + 8 * v11);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v11 << 6);
    uint64_t v29 = v11;
LABEL_27:
    uint64_t v15 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v32[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    uint64_t v14 = *(void **)&v32[0];
    *(void *)&v31[0] = v15;
    sub_1B63989B8(0, (unint64_t *)&qword_1E9DD0780);
    id v16 = v14;
    id v17 = v15;
    swift_dynamicCast();
    uint64_t v18 = *(void *)&v32[0];
    sub_1B62B57A8((_OWORD *)((char *)v32 + 8), v30);
    sub_1B62B57A8(v30, v32);
    sub_1B62B57A8(v32, v31);
    sub_1B6E31798();
    sub_1B6E33918();
    sub_1B6E318B8();
    uint64_t v19 = sub_1B6E33988();
    swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v7 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v21) & ~*(void *)(v7 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v23 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (v22 + 1 == v23) {
          unint64_t v22 = 0;
        }
        else {
          ++v22;
        }
        uint64_t v24 = *(void *)(v7 + 8 * v22);
      }
      while (v24 == -1);
      unint64_t v8 = __clz(__rbit64(~v24)) + (v22 << 6);
    }
    *(void *)(v7 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v18;
    sub_1B62B57A8(v31, (_OWORD *)(*(void *)(v2 + 56) + 32 * v8));
    ++*(void *)(v2 + 16);
  }
  uint64_t v13 = v29;
  while (v26 != v13)
  {
    unint64_t v12 = *(void *)(a1 + 112 + 8 * v13++);
    if (v12)
    {
      uint64_t v11 = v13 + 5;
      goto LABEL_26;
    }
  }
LABEL_34:
  swift_release();
  sub_1B62BB588();
  return v2;
}

uint64_t *sub_1B680947C(uint64_t *result)
{
  uint64_t v2 = *(uint64_t *)((char *)result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v2)
  {
    uint64_t v3 = (uint64_t)result;
    long long v4 = *(_OWORD *)(v1 + 32);
    v54[0] = *(_OWORD *)(v1 + 16);
    v54[1] = v4;
    uint64_t v55 = *(void *)(v1 + 48);
    swift_retain();
    sub_1B62C9DA8(v3, (uint64_t)v54, 0x200000000, v6);
    sub_1B62D7590((uint64_t)v6, (uint64_t)&v19, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (v19)
    {
      uint64_t v43 = v19;
      int v44 = v20;
      char v45 = v21;
      uint64_t v46 = v22;
      char v47 = v23;
      uint64_t v48 = v24;
      uint64_t v49 = v25;
      long long v50 = v26;
      long long v51 = v27;
      uint64_t v52 = v28;
      uint64_t v53 = v29;
      swift_retain();
      sub_1B6D97638((uint64_t)&v43, v2);
      swift_release();
      sub_1B632F170(v6);
    }
    long long v5 = *(_OWORD *)(v1 + 72);
    v41[0] = *(_OWORD *)(v1 + 56);
    v41[1] = v5;
    uint64_t v42 = *(void *)(v1 + 88);
    sub_1B62C9DA8(v3, (uint64_t)v41, 0x200000000, v7);
    sub_1B62D7590((uint64_t)v7, (uint64_t)&v8, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    if (v8)
    {
      uint64_t v30 = v8;
      int v31 = v9;
      char v32 = v10;
      uint64_t v33 = v11;
      char v34 = v12;
      uint64_t v35 = v13;
      uint64_t v36 = v14;
      long long v37 = v15;
      long long v38 = v16;
      uint64_t v39 = v17;
      uint64_t v40 = v18;
      swift_retain();
      sub_1B6DA0868((uint64_t)&v30, v3);
      swift_release();
      swift_release();
      return sub_1B632F170(v7);
    }
    else
    {
      return (uint64_t *)swift_release();
    }
  }
  return result;
}

uint64_t sub_1B680965C()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1B68096A0(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC3VFX11AudioPlayer_player);
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = a1;
  v9[4] = sub_1B6811338;
  _OWORD v9[5] = v5;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1B639AA00;
  v9[3] = &unk_1F0FB7EB8;
  unint64_t v6 = _Block_copy(v9);
  id v7 = v3;
  id v8 = a1;
  swift_release();
  objc_msgSend(v7, sel_scheduleFile_atTime_completionHandler_, v8, 0, v6);
  _Block_release(v6);
}

void sub_1B68097C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = MEMORY[0x1BA9B8670](a1 + 16);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC3VFX11AudioPlayer_loops) == 1)
    {
      uint64_t v5 = (void *)v3;
      sub_1B68096A0(a2);
      uint64_t v4 = v5;
    }
  }
}

id sub_1B6809840()
{
  return sub_1B680986C(&OBJC_IVAR____TtC3VFX11AudioPlayer_player, (SEL *)&selRef_stop, 0, type metadata accessor for AudioPlayer);
}

id sub_1B680986C(void *a1, SEL *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  [*(id *)&v4[*a1] *a2];
  v8.receiver = v4;
  v8.super_class = (Class)a4(a3);
  return objc_msgSendSuper2(&v8, sel_dealloc);
}

id sub_1B68098FC(char *a1, uint64_t a2, void *a3, SEL *a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  int v9 = *(void **)&a1[*a3];
  char v10 = a1;
  [v9 *a4];
  v12.receiver = v10;
  v12.super_class = (Class)a6(a5);
  return objc_msgSendSuper2(&v12, sel_dealloc);
}

uint64_t sub_1B6809A28()
{
  return type metadata accessor for AudioPlayer(0);
}

uint64_t type metadata accessor for AudioPlayer(uint64_t a1)
{
  return sub_1B633A29C(a1, qword_1E9DD0E58);
}

char *sub_1B6809A50(uint64_t a1)
{
  uint64_t v41 = a1;
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1B6E30F48();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  long long v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC3VFX11AudioPlayer_loops] = 1;
  uint64_t v35 = OBJC_IVAR____TtC3VFX11AudioPlayer_isValid;
  v1[OBJC_IVAR____TtC3VFX11AudioPlayer_isValid] = 1;
  uint64_t v37 = OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRaw;
  *(void *)&v1[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRaw] = 0;
  uint64_t v36 = OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawCount;
  *(void *)&v1[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawCount] = 0;
  uint64_t v6 = OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawTime;
  *(void *)&v1[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawTime] = 0;
  uint64_t v7 = OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawSampleRate;
  *(void *)&v1[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawSampleRate] = 0x40E5888000000000;
  uint64_t v8 = OBJC_IVAR____TtC3VFX11AudioPlayer__lock;
  id v9 = objc_allocWithZone(MEMORY[0x1E4F28E08]);
  char v10 = v1;
  id v11 = objc_msgSend(v9, sel_init);
  objc_super v12 = (void *)sub_1B6E31768();
  objc_msgSend(v11, sel_setName_, v12);

  *(void *)&v1[v8] = v11;
  uint64_t v39 = v3;
  uint64_t v40 = v2;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v13(&v10[OBJC_IVAR____TtC3VFX11AudioPlayer_url], v41, v2);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F15380]), sel_init);
  uint64_t v15 = OBJC_IVAR____TtC3VFX11AudioPlayer_engine;
  *(void *)&v10[OBJC_IVAR____TtC3VFX11AudioPlayer_engine] = v14;
  id v16 = objc_msgSend(v14, sel_mainMixerNode);
  *(void *)&v10[OBJC_IVAR____TtC3VFX11AudioPlayer_mixer] = v16;
  *(void *)&v1[v37] = 0;
  *(void *)&v1[v36] = 0;
  *(void *)&v1[v6] = 0;
  *(void *)&v1[v7] = 0x40E5888000000000;
  objc_msgSend(*(id *)&v10[v15], sel_prepare);
  uint64_t v17 = *(void **)&v10[v15];
  id v44 = 0;
  if (objc_msgSend(v17, sel_startAndReturnError_, &v44))
  {
    id v18 = v44;
  }
  else
  {
    uint64_t v37 = (uint64_t)v13;
    id v19 = v44;
    int v20 = (void *)sub_1B6E30D78();

    swift_willThrow();
    v1[v35] = 0;
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    id v44 = 0;
    unint64_t v45 = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    uint64_t v43 = v20;
    sub_1B62C55B0(0, (unint64_t *)&qword_1EB980E40);
    sub_1B6E32B18();
    uint64_t v21 = (uint64_t)v44;
    uint64_t v22 = v45;
    int v23 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    id v44 = 0;
    swift_retain();
    sub_1B6B33E34(v23, (uint64_t *)&v44, v21, v22);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    uint64_t v13 = (void (*)(char *, uint64_t, uint64_t))v37;
  }
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153D0]), sel_init);
  *(void *)&v10[OBJC_IVAR____TtC3VFX11AudioPlayer_player] = v24;

  uint64_t v25 = (objc_class *)type metadata accessor for AudioPlayer(0);
  v42.receiver = v10;
  v42.super_class = v25;
  id v26 = objc_msgSendSuper2(&v42, sel_init);
  uint64_t v27 = (uint64_t)v38;
  uint64_t v28 = v41;
  v13(v38, v41, v40);
  objc_allocWithZone(MEMORY[0x1E4F15390]);
  uint64_t v29 = (char *)v26;
  id v30 = sub_1B680DFC0(v27);
  id v31 = objc_msgSend(v30, sel_processingFormat);
  uint64_t v32 = OBJC_IVAR____TtC3VFX11AudioPlayer_engine;
  uint64_t v33 = OBJC_IVAR____TtC3VFX11AudioPlayer_player;
  objc_msgSend(*(id *)&v29[OBJC_IVAR____TtC3VFX11AudioPlayer_engine], sel_attachNode_, *(void *)&v29[OBJC_IVAR____TtC3VFX11AudioPlayer_player]);
  objc_msgSend(*(id *)&v29[v32], sel_connect_to_format_, *(void *)&v29[v33], *(void *)&v29[OBJC_IVAR____TtC3VFX11AudioPlayer_mixer], v31);
  sub_1B68096A0(v30);

  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v28, v40);
  return v29;
}

void sub_1B680A0B4(void *a1, void *a2, uint64_t a3)
{
  kern_return_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  mach_timebase_info info;
  uint64_t v15;
  uint64_t vars8;

  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = MEMORY[0x1BA9B8670](a3 + 16);
  if (v5)
  {
    uint64_t v13 = (char *)v5;
    uint64_t v6 = (uint64_t *)objc_msgSend(a1, sel_floatChannelData);
    if (v6)
    {
      uint64_t v7 = *v6;
      unsigned int v8 = objc_msgSend(a1, sel_frameLength);
      id v9 = *(void **)&v13[OBJC_IVAR____TtC3VFX11AudioPlayer__lock];
      objc_msgSend(v9, sel_lock);
      *(void *)&v13[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRaw] = v7;
      *(void *)&v13[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawCount] = v8;
      info = 0;
      char v10 = mach_timebase_info(&info);
      id v11 = -1.0;
      if (!v10) {
        id v11 = (double)(mach_absolute_time() * info.numer / info.denom) * 0.000000001;
      }
      *(double *)&v13[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawTime] = v11;
      objc_msgSend(a2, sel_sampleRate);
      *(void *)&v13[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawSampleRate] = v12;
      objc_msgSend(v9, sel_unlock);
    }
    else
    {
    }
  }
}

void sub_1B680A24C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, v6);
  swift_release();
}

uint64_t sub_1B680A300()
{
  uint64_t result = sub_1B6E30F48();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B680A3C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  uint64_t v2 = (char *)a2 + *(int *)(a1 + 20);
  uint64_t v3 = sub_1B6E30F48();
  uint64_t v4 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(v2, 1, 1, v3);
}

double sub_1B680A43C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B680DE64(a1, (void (*)(void))sub_1B63AE428, a2);
}

uint64_t sub_1B680A468(void *a1)
{
  return sub_1B680DEFC(a1);
}

uint64_t sub_1B680A480(void *a1, int a2)
{
  int v12 = a2;
  sub_1B681223C(0, &qword_1E9DD0EF8, (uint64_t (*)(void))sub_1B68110E0, (uint64_t)&type metadata for AudioController.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  id v9 = (char *)&v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68110E0();
  sub_1B6E33A88();
  char v15 = 0;
  sub_1B6E32F58();
  if (!v2)
  {
    char v14 = 1;
    sub_1B6E32F58();
    char v13 = 2;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B680A644(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB0C20(*a1, *a2);
}

uint64_t sub_1B680A650()
{
  uint64_t v1 = 1702131053;
  if (*v0 != 1) {
    uint64_t v1 = 0x73706F6F6CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 2036427888;
  }
}

uint64_t sub_1B680A698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B680E5F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B680A6C0(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1B680A6CC(uint64_t a1)
{
  unint64_t v2 = sub_1B68110E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B680A708(uint64_t a1)
{
  unint64_t v2 = sub_1B68110E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B680A744@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B6810C24(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
    a2[2] = BYTE2(result) & 1;
  }
  return result;
}

uint64_t sub_1B680A784(void *a1)
{
  if (v1[2]) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  if (v1[1]) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return sub_1B680A480(a1, v3 | *v1 | v2);
}

void sub_1B680A7C8(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 1;
}

uint64_t sub_1B680A7D8(void *a1, int a2)
{
  int v12 = a2;
  sub_1B681223C(0, &qword_1E9DD0EE0, (uint64_t (*)(void))sub_1B681108C, (uint64_t)&type metadata for AudioAnalyzer.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  id v9 = (char *)&v11 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B681108C();
  sub_1B6E33A88();
  char v16 = 0;
  sub_1B6E32F58();
  if (!v2)
  {
    char v15 = 1;
    sub_1B6E32F58();
    char v14 = 2;
    sub_1B6E32F58();
    char v13 = 3;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B680A9C4(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BAEC4C(*a1, *a2);
}

uint64_t sub_1B680A9D0()
{
  uint64_t result = 0x6D726F6665766177;
  switch(*v0)
  {
    case 1:
    case 2:
      uint64_t result = 0x6D75727463657073;
      break;
    case 3:
      uint64_t result = 7564658;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B680AA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B680E3E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B680AA74(uint64_t a1)
{
  unint64_t v2 = sub_1B681108C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B680AAB0(uint64_t a1)
{
  unint64_t v2 = sub_1B681108C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B680AAEC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B6810E3C(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
    a2[2] = BYTE2(result) & 1;
    a2[3] = BYTE3(result) & 1;
  }
  return result;
}

uint64_t sub_1B680AB34(void *a1)
{
  if (v1[3]) {
    int v2 = 0x1000000;
  }
  else {
    int v2 = 0;
  }
  if (v1[2]) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  if (v1[1]) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return sub_1B680A7D8(a1, v4 | *v1 | v3 | v2);
}

void sub_1B680AB8C(_DWORD *a1@<X8>)
{
  *a1 = 16843009;
}

vDSP_DFT_Setup sub_1B680AB98()
{
  if (*(unsigned char *)(v0 + 56) != 1) {
    return *(vDSP_DFT_Setup *)(v0 + 48);
  }
  vDSP_DFT_Setup result = vDSP_DFT_zop_CreateSetup(0, 0x800uLL, vDSP_DFT_FORWARD);
  *(void *)(v0 + 48) = result;
  *(unsigned char *)(v0 + 56) = 0;
  return result;
}

uint64_t sub_1B680ABDC(const vDSP_DFT_SetupStruct *a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1B6E31C98();
  *(void *)(v3 + 16) = 2048;
  int v4 = (const float *)(v3 + 32);
  bzero((void *)(v3 + 32), 0x2000uLL);
  uint64_t v5 = sub_1B6E31C98();
  *(void *)(v5 + 16) = 2048;
  uint64_t v6 = (const float *)(v5 + 32);
  bzero((void *)(v5 + 32), 0x2000uLL);
  uint64_t v7 = *v1;
  if ((unint64_t)(v3 - *v1) >= 0x20)
  {
    for (uint64_t i = 0; i != 0x2000; i += 32)
    {
      long long v11 = *(_OWORD *)(v7 + i + 48);
      uint64_t v12 = v3 + i;
      *(_OWORD *)(v12 + 32) = *(_OWORD *)(v7 + i + 32);
      *(_OWORD *)(v12 + 48) = v11;
    }
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = v7 + 32;
    do
    {
      v4[v8] = *(const float *)(v9 + v8 * 4);
      ++v8;
    }
    while (v8 != 2048);
  }
  char v13 = (char *)v1[5];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v13 = sub_1B6397840(0, *((void *)v13 + 2), 0, v13);
  }
  char v14 = (char *)v1[4];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v14 = sub_1B6397840(0, *((void *)v14 + 2), 0, v14);
  }
  v1[4] = (uint64_t)v14;
  vDSP_DFT_Execute(a1, v4, v6, (float *)v13 + 8, (float *)v14 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v1[5] = (uint64_t)v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v13 = sub_1B6C1683C((uint64_t)v13);
    v1[5] = (uint64_t)v13;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v14 = sub_1B6C1683C((uint64_t)v14);
  }
  v1[4] = (uint64_t)v14;
  v1[5] = (uint64_t)v13;
  swift_bridgeObjectRelease();
  __A.realp = (float *)(v13 + 32);
  __A.imagp = (float *)(v14 + 32);
  uint64_t v16 = sub_1B6E31C98();
  *(void *)(v16 + 16) = 1024;
  bzero((void *)(v16 + 32), 0x1000uLL);
  vDSP_zvabs(&__A, 1, (float *)(v16 + 32), 1, 0x400uLL);
  uint64_t v17 = sub_1B6E31C98();
  *(void *)(v17 + 16) = 720;
  bzero((void *)(v17 + 32), 0xB40uLL);
  if ((unint64_t)(v17 - v16 - 24) >= 0x20)
  {
    uint64_t v19 = 0;
    float32x4_t v20 = (float32x4_t)vdupq_n_s32(0x3CC80000u);
    do
    {
      float32x4_t v21 = vmulq_f32(*(float32x4_t *)(v16 + v19 + 72), v20);
      uint64_t v22 = (float32x4_t *)(v17 + v19);
      void v22[2] = vmulq_f32(*(float32x4_t *)(v16 + v19 + 56), v20);
      v22[3] = v21;
      v19 += 32;
    }
    while (v19 != 2880);
  }
  else
  {
    for (uint64_t j = 0; j != 2880; j += 4)
      *(float *)(v17 + 32 + j) = *(float *)(v16 + 56 + j) * 0.024414;
  }
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1B680AED0(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BAEDDC(*a1, *a2);
}

uint64_t sub_1B680AEDC()
{
  return sub_1B6BCF04C();
}

uint64_t sub_1B680AEE4()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B680AFA8()
{
  return sub_1B69EBD28();
}

uint64_t sub_1B680AFB0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B680E5A8();
  *a1 = result;
  return result;
}

void sub_1B680AFE8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x6D726F6665766177;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007365;
      uint64_t v3 = 0x647574696E67616DLL;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000010;
      a1[1] = 0x80000001B6F2E620;
      break;
    case 3:
      *a1 = 7564658;
      a1[1] = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1B680B084()
{
  unint64_t result = 0x6D726F6665766177;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x647574696E67616DLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 7564658;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B680B114@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B680E5A8();
  *a1 = result;
  return result;
}

uint64_t sub_1B680B144(uint64_t a1)
{
  unint64_t v2 = sub_1B68121E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B680B180(uint64_t a1)
{
  unint64_t v2 = sub_1B68121E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B680B1BC(void *a1)
{
  uint64_t v3 = v1;
  sub_1B681223C(0, (unint64_t *)&unk_1E9DD1030, (uint64_t (*)(void))sub_1B68121E8, (uint64_t)&type metadata for AudioSpectrum.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  char v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68121E8();
  sub_1B6E33A88();
  uint64_t v14 = *v3;
  char v13 = 0;
  sub_1B62D84A4(0, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
  sub_1B63997F4((unint64_t *)&qword_1E9DCDD98);
  sub_1B6E32FA8();
  if (!v2)
  {
    uint64_t v14 = v3[1];
    char v13 = 1;
    sub_1B6E32FA8();
    uint64_t v14 = v3[2];
    char v13 = 2;
    sub_1B6E32FA8();
    LOBYTE(v14) = 3;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B680B430@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6811E24(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1B680B47C(void *a1)
{
  return sub_1B680B1BC(a1);
}

double sub_1B680B494@<D0>(_OWORD *a1@<X8>)
{
  sub_1B680E10C((uint64_t)v4);
  long long v2 = v4[1];
  *a1 = v4[0];
  a1[1] = v2;
  a1[2] = v5[0];
  double result = *(double *)((char *)v5 + 9);
  *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)v5 + 9);
  return result;
}

uint64_t *sub_1B680B4DC(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1B63BE100();
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v89 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v8);
  char v10 = (char *)&v78 - v9;
  uint64_t v82 = sub_1B6E30F48();
  uint64_t v11 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82, v12);
  float v88 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v15);
  unint64_t v95 = (char *)&v78 - v16;
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v102 = (char *)&v78 - v19;
  long long v20 = *(_OWORD *)(v1 + 32);
  v165[0] = *(_OWORD *)(v1 + 16);
  v165[1] = v20;
  uint64_t v166 = *(void *)(v1 + 48);
  uint64_t v21 = *(void *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_queryManager);
  sub_1B62C9DA8(a1, (uint64_t)v165, 0x200000000, v105);
  sub_1B62D7590((uint64_t)v105, (uint64_t)&v126, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v126)
  {
    uint64_t v154 = v126;
    int v155 = v127;
    char v156 = v128;
    uint64_t v157 = v129;
    char v158 = v130;
    uint64_t v159 = v131;
    uint64_t v160 = v132;
    long long v161 = v133;
    long long v162 = v134;
    uint64_t v163 = v135;
    uint64_t v164 = v136;
    sub_1B6D873D0((uint64_t)&v154);
    sub_1B632F170(v105);
  }
  long long v22 = *(_OWORD *)(v2 + 72);
  v152[0] = *(_OWORD *)(v2 + 56);
  v152[1] = v22;
  uint64_t v153 = *(void *)(v2 + 88);
  uint64_t v80 = v21;
  sub_1B62C9DA8(a1, (uint64_t)v152, 0x200000000, v106);
  sub_1B62D7590((uint64_t)v106, (uint64_t)v119, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v119[0])
  {
    if (v125 >= 1)
    {
      uint64_t v87 = v122;
      if (v122)
      {
        uint64_t v100 = 0;
        uint64_t v101 = v10;
        uint64_t v78 = v2;
        uint64_t v79 = a1;
        int v23 = v124;
        uint64_t v86 = v121;
        uint64_t v24 = v124[4];
        int v98 = *(unsigned __int8 *)(v123 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        uint64_t v25 = type metadata accessor for AudioPlayerComponent(0);
        v137[0] = v119[0];
        v137[1] = v119[1];
        uint64_t v138 = v120;
        uint64_t v99 = v23;
        uint64_t v83 = v23 + 8;
        float32x4_t v84 = v23 + 6;
        uint64_t v81 = v25 - 8;
        __int16 v103 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
        uint64_t v104 = v25;
        uint64_t v93 = (void (**)(char *, char *, uint64_t))(v11 + 16);
        uint64_t v94 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
        uint64_t v91 = (void (**)(char *, uint64_t))(v11 + 8);
        uint64_t v92 = &v141;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v26 = 0;
        uint64_t v85 = v24;
        while (1)
        {
          uint64_t v97 = v26;
          uint64_t v27 = (unsigned int *)(v86 + 48 * v26);
          uint64_t v28 = *v27;
          uint64_t v90 = v27[1];
          id v30 = (uint64_t *)*((void *)v27 + 2);
          uint64_t v29 = *((void *)v27 + 3);
          uint64_t v32 = *((void *)v27 + 4);
          uint64_t v31 = *((void *)v27 + 5);
          if (v98)
          {
            uint64_t v33 = *(os_unfair_lock_s **)(v31 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v33);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v31 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v24);
          sub_1B62D7590((uint64_t)v84, (uint64_t)v151, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          char v34 = v99;
          uint64_t v35 = v99[4];
          uint64_t v36 = *(void *)(*(void *)(*(void *)(*(void *)(v31 + 40) + 16) + 32) + 16) + 1;
          uint64_t v37 = (char *)v31;
          swift_retain();
          v34[6] = ecs_stack_allocator_allocate(v35, 48 * v36, 8);
          v34[7] = v36;
          long long v38 = v83;
          v83[1] = 0;
          v38[2] = 0;
          *long long v38 = 0;
          swift_release();
          uint64_t v39 = (void **)sub_1B62C9024(v104, (uint64_t)&off_1F0F7FC88, v30, v29, v32, (uint64_t)v34);
          id v96 = v37;
          uint64_t v40 = sub_1B62C9024((uint64_t)&type metadata for AudioController, (uint64_t)&off_1F0F67FB0, v30, v29, v32, (uint64_t)v34);
          if (!v30) {
            break;
          }
          if (v32)
          {
            uint64_t v42 = v82;
            uint64_t v43 = *(void *)(*(void *)v81 + 72);
            id v44 = (unsigned char *)(v40 + 1);
            unint64_t v45 = &qword_1E9E49000;
            while (1)
            {
              uint64_t v46 = (char *)*v39;
              if (*(v44 - 1) != 1)
              {
                if (v46)
                {
                  objc_msgSend(*(id *)&v46[v45[94]], sel_stop);
                }
                *uint64_t v39 = 0;
                goto LABEL_15;
              }
              if (v46) {
                goto LABEL_18;
              }
              uint64_t v48 = (uint64_t)v101;
              sub_1B663AB08((uint64_t)v39 + *(int *)(v104 + 20), (uint64_t)v101);
              if ((*v103)(v48, 1, v42) != 1) {
                break;
              }
              sub_1B680FE1C(v48, (uint64_t (*)(void))sub_1B63BE100);
              uint64_t v46 = (char *)*v39;
              if (*v39) {
                goto LABEL_18;
              }
LABEL_19:
              char v47 = (char *)*v39;
              if (*v44 == 1)
              {
                if (v47) {
                  objc_msgSend(*(id *)&v47[OBJC_IVAR____TtC3VFX11AudioPlayer_mixer], sel_setOutputVolume_, 0.0);
                }
              }
              else if (v47)
              {
                LODWORD(v41) = 1.0;
                objc_msgSend(*(id *)&v47[OBJC_IVAR____TtC3VFX11AudioPlayer_mixer], sel_setOutputVolume_, v41);
              }
LABEL_15:
              v44 += 3;
              uint64_t v39 = (void **)((char *)v39 + v43);
              if (!--v32) {
                goto LABEL_34;
              }
            }
            uint64_t v49 = v102;
            (*v94)(v102, v48, v42);
            uint64_t v50 = (uint64_t)v95;
            (*v93)(v95, v49, v42);
            id v51 = objc_allocWithZone((Class)type metadata accessor for AudioPlayer(0));
            uint64_t v52 = sub_1B6809A50(v50);
            *uint64_t v39 = v52;
            uint64_t v90 = v45[94];
            uint64_t v53 = *(void **)&v52[v90];
            uint64_t v54 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v143 = sub_1B680FF1C;
            uint64_t v144 = v54;
            uint64_t v139 = MEMORY[0x1E4F143A8];
            uint64_t v140 = 1107296256;
            uint64_t v141 = sub_1B680A24C;
            uint64_t v142 = &unk_1F0FB7E90;
            uint64_t v55 = _Block_copy(&v139);
            id v56 = v53;
            swift_release();
            objc_msgSend(v56, sel_installTapOnBus_bufferSize_format_block_, 0, 4192, 0, v55);
            _Block_release(v55);

            if (v52[OBJC_IVAR____TtC3VFX11AudioPlayer_isValid] == 1) {
              objc_msgSend(*(id *)&v52[v90], sel_play);
            }
            (*v91)(v102, v42);
            unint64_t v45 = &qword_1E9E49000;
            uint64_t v46 = (char *)*v39;
            if (!*v39) {
              goto LABEL_19;
            }
LABEL_18:
            v46[OBJC_IVAR____TtC3VFX11AudioPlayer_loops] = v44[1];
            goto LABEL_19;
          }
LABEL_34:
          uint64_t v57 = v100;
          sub_1B6345178(v99, (unsigned __int16 **)v137, (uint64_t)v151);
          uint64_t v100 = v57;
          uint64_t v58 = v96;
          sub_1B634507C(v96);
          uint64_t v24 = v85;
          ecs_stack_allocator_pop_snapshot(v85);
          if (v98)
          {
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v58 + 43));
            os_unfair_lock_unlock(*((os_unfair_lock_t *)v58 + 47));
          }
          swift_release();
          uint64_t v26 = v97 + 1;
          if (v97 + 1 == v87)
          {
            sub_1B632F170(v106);
            uint64_t v2 = v78;
            a1 = v79;
            goto LABEL_59;
          }
        }
        if (v28 == v90) {
          goto LABEL_34;
        }
        uint64_t v59 = v82;
        uint64_t v60 = *(void *)(*(void *)v81 + 72);
        id v61 = (unsigned char *)(v40 + 3 * v28 + 1);
        uint64_t v62 = v90 - v28;
        uint64_t v63 = (void **)((char *)v39 + v60 * v28);
        uint64_t v64 = &qword_1E9E49000;
        while (1)
        {
          char v65 = (char *)*v63;
          if (*(v61 - 1) != 1)
          {
            if (v65)
            {
              objc_msgSend(*(id *)&v65[v64[94]], sel_stop);
            }
            *uint64_t v63 = 0;
            goto LABEL_38;
          }
          if (v65) {
            goto LABEL_41;
          }
          uint64_t v67 = v89;
          sub_1B663AB08((uint64_t)v63 + *(int *)(v104 + 20), v89);
          if ((*v103)(v67, 1, v59) != 1) {
            break;
          }
          sub_1B680FE1C(v67, (uint64_t (*)(void))sub_1B63BE100);
          char v65 = (char *)*v63;
          if (*v63) {
            goto LABEL_41;
          }
LABEL_42:
          long long v66 = (char *)*v63;
          if (*v61 == 1)
          {
            if (v66) {
              objc_msgSend(*(id *)&v66[OBJC_IVAR____TtC3VFX11AudioPlayer_mixer], sel_setOutputVolume_, 0.0);
            }
          }
          else if (v66)
          {
            LODWORD(v41) = 1.0;
            objc_msgSend(*(id *)&v66[OBJC_IVAR____TtC3VFX11AudioPlayer_mixer], sel_setOutputVolume_, v41);
          }
LABEL_38:
          v61 += 3;
          uint64_t v63 = (void **)((char *)v63 + v60);
          if (!--v62) {
            goto LABEL_34;
          }
        }
        long long v68 = v88;
        (*v94)(v88, v67, v59);
        uint64_t v69 = (uint64_t)v95;
        (*v93)(v95, v68, v59);
        id v70 = objc_allocWithZone((Class)type metadata accessor for AudioPlayer(0));
        uint64_t v71 = sub_1B6809A50(v69);
        *uint64_t v63 = v71;
        uint64_t v90 = v64[94];
        uint64_t v72 = *(void **)&v71[v90];
        uint64_t v73 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v143 = sub_1B680FF1C;
        uint64_t v144 = v73;
        uint64_t v139 = MEMORY[0x1E4F143A8];
        uint64_t v140 = 1107296256;
        uint64_t v141 = sub_1B680A24C;
        uint64_t v142 = &unk_1F0FBA040;
        uint64_t v74 = _Block_copy(&v139);
        id v75 = v72;
        swift_release();
        objc_msgSend(v75, sel_installTapOnBus_bufferSize_format_block_, 0, 4192, 0, v74);
        _Block_release(v74);

        if (v71[OBJC_IVAR____TtC3VFX11AudioPlayer_isValid] == 1) {
          objc_msgSend(*(id *)&v71[v90], sel_play);
        }
        (*v91)(v88, v59);
        uint64_t v64 = &qword_1E9E49000;
        char v65 = (char *)*v63;
        if (!*v63) {
          goto LABEL_42;
        }
LABEL_41:
        v65[OBJC_IVAR____TtC3VFX11AudioPlayer_loops] = v61[1];
        goto LABEL_42;
      }
    }
LABEL_59:
    sub_1B632F170(v106);
  }
  long long v76 = *(_OWORD *)(v2 + 112);
  v149[0] = *(_OWORD *)(v2 + 96);
  v149[1] = v76;
  uint64_t v150 = *(void *)(v2 + 128);
  sub_1B62C9DA8(a1, (uint64_t)v149, 0x200000000, v107);
  double result = (uint64_t *)sub_1B62D7590((uint64_t)v107, (uint64_t)&v108, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (v108)
  {
    uint64_t v139 = v108;
    LODWORD(v140) = v109;
    BYTE4(v140) = v110;
    uint64_t v141 = v111;
    LOBYTE(v142) = v112;
    uint64_t v143 = v113;
    uint64_t v144 = v114;
    long long v145 = v115;
    long long v146 = v116;
    uint64_t v147 = v117;
    uint64_t v148 = v118;
    sub_1B6D873FC((uint64_t)&v139);
    return sub_1B632F170(v107);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AudioAnalyzer(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[4]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioAnalyzer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)double result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)double result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioAnalyzer()
{
  return &type metadata for AudioAnalyzer;
}

void **sub_1B680C0F8(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  BOOL v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    int v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1B6E30F48();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v12 = v4;
    if (v11(v8, 1, v9))
    {
      sub_1B63BE100();
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_1B680C274(id *a1, uint64_t a2)
{
  BOOL v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1B6E30F48();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void **sub_1B680C344(void **a1, void **a2, uint64_t a3)
{
  BOOL v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1B6E30F48();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  id v11 = v4;
  if (v10(v7, 1, v8))
  {
    sub_1B63BE100();
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void **sub_1B680C460(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  *a1 = *a2;
  id v8 = v7;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1B6E30F48();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1B63BE100();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

void *sub_1B680C5E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1B6E30F48();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1B63BE100();
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void **sub_1B680C6F8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B6E30F48();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1B63BE100();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1B680C87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B680C890);
}

uint64_t sub_1B680C890(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1B63BE100();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1B680C94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B680C960);
}

void *sub_1B680C960(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    sub_1B63BE100();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1B680CA08()
{
  sub_1B63BE100();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for AudioController(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioController(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)uint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioController()
{
  return &type metadata for AudioController;
}

ValueMetadata *type metadata accessor for AudioFileAsset()
{
  return &type metadata for AudioFileAsset;
}

uint64_t *sub_1B680CBD8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B6E30F48();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1B63BE100();
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    int v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    int v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)a1 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v19 = a3[9];
    uint64_t v20 = a3[10];
    uint64_t v21 = *(void **)((char *)a2 + v19);
    *(uint64_t *)((char *)a1 + v19) = (uint64_t)v21;
    long long v22 = *(void **)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + v20) = (uint64_t)v22;
    uint64_t v23 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    uint64_t v24 = *(void **)((char *)a2 + v23);
    *(uint64_t *)((char *)a1 + v23) = (uint64_t)v24;
    id v25 = v13;
    id v26 = v14;
    id v27 = v21;
    id v28 = v22;
    swift_retain();
    id v29 = v24;
  }
  return a1;
}

void sub_1B680CDBC(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1B6E30F48();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }

  swift_release();
  int v6 = *(void **)(a1 + a2[12]);
}

char *sub_1B680CEC4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1B6E30F48();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1B63BE100();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)&a2[v9];
  *(void *)&a1[v9] = v11;
  uint64_t v12 = *(void **)&a2[v10];
  *(void *)&a1[v10] = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  a1[v14] = a2[v14];
  uint64_t v17 = a3[9];
  uint64_t v18 = a3[10];
  uint64_t v19 = *(void **)&a2[v17];
  *(void *)&a1[v17] = v19;
  uint64_t v20 = *(void **)&a2[v18];
  *(void *)&a1[v18] = v20;
  uint64_t v21 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  long long v22 = *(void **)&a2[v21];
  *(void *)&a1[v21] = v22;
  id v23 = v11;
  id v24 = v12;
  id v25 = v19;
  id v26 = v20;
  swift_retain();
  id v27 = v22;
  return a1;
}

char *sub_1B680D058(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1B6E30F48();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1B63BE100();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = *(void **)&a1[v12];
  uint64_t v14 = *(void **)&a2[v12];
  *(void *)&a1[v12] = v14;
  id v15 = v14;

  uint64_t v16 = a3[6];
  uint64_t v17 = *(void **)&a1[v16];
  uint64_t v18 = *(void **)&a2[v16];
  *(void *)&a1[v16] = v18;
  id v19 = v18;

  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  long long v22 = &a2[v20];
  uint64_t v23 = *(void *)v22;
  v21[8] = v22[8];
  *(void *)uint64_t v21 = v23;
  a1[a3[8]] = a2[a3[8]];
  uint64_t v24 = a3[9];
  id v25 = *(void **)&a1[v24];
  id v26 = *(void **)&a2[v24];
  *(void *)&a1[v24] = v26;
  id v27 = v26;

  uint64_t v28 = a3[10];
  id v29 = *(void **)&a1[v28];
  id v30 = *(void **)&a2[v28];
  *(void *)&a1[v28] = v30;
  id v31 = v30;

  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_retain();
  swift_release();
  uint64_t v32 = a3[12];
  uint64_t v33 = *(void **)&a1[v32];
  char v34 = *(void **)&a2[v32];
  *(void *)&a1[v32] = v34;
  id v35 = v34;

  return a1;
}

char *sub_1B680D290(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1B6E30F48();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1B63BE100();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  a1[v11] = a2[v11];
  uint64_t v14 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  return a1;
}

char *sub_1B680D408(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1B6E30F48();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1B63BE100();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  uint64_t v14 = a3[6];
  uint64_t v15 = *(void **)&a1[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];

  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v16];
  id v19 = &a2[v16];
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  a1[v17] = a2[v17];
  uint64_t v20 = a3[9];
  uint64_t v21 = *(void **)&a1[v20];
  *(void *)&a1[v20] = *(void *)&a2[v20];

  uint64_t v22 = a3[10];
  uint64_t v23 = *(void **)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];

  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_release();
  uint64_t v24 = a3[12];
  id v25 = *(void **)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];

  return a1;
}

uint64_t sub_1B680D620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B680D634);
}

uint64_t sub_1B680D634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B63BE100();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1B680D6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B680D708);
}

void sub_1B680D708(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1B63BE100();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
}

void sub_1B680D7C4()
{
  sub_1B63BE100();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t initializeWithCopy for MovieFileAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = (id)v7;
  return a1;
}

uint64_t assignWithCopy for MovieFileAsset(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v4;
  id v7 = v4;

  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  return a1;
}

__n128 initializeWithTake for MovieFileAsset(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MovieFileAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  return a1;
}

uint64_t getEnumTagSinglePayload for MovieFileAsset(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 51)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MovieFileAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 51) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 51) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MovieFileAsset()
{
  return &type metadata for MovieFileAsset;
}

uint64_t destroy for VideoCaptureRuntime(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VideoCaptureRuntime(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VideoCaptureRuntime(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VideoCaptureRuntime(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoCaptureRuntime(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoCaptureRuntime(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoCaptureRuntime()
{
  return &type metadata for VideoCaptureRuntime;
}

uint64_t sub_1B680DCE0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VideoCapture(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VideoCapture(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoCapture(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoCapture(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoCapture()
{
  return &type metadata for VideoCapture;
}

double sub_1B680DE64@<D0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  *(void *)&long long v7 = 0;
  *((void *)&v7 + 1) = 0xE000000000000000;
  a2();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(a1);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = *(double *)&v7;
    *(_OWORD *)a3 = v7;
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = 0xE000000000000000;
    *(_OWORD *)(a3 + 32) = 0uLL;
  }
  return result;
}

uint64_t sub_1B680DEFC(void *a1)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  sub_1B62C550C((uint64_t)v2, v3);
  sub_1B6811134();
  sub_1B6E335C8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
}

id sub_1B680DFC0(uint64_t a1)
{
  unint64_t v2 = v1;
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)sub_1B6E30E78();
  v13[0] = 0;
  id v5 = objc_msgSend(v2, sel_initForReading_error_, v4, v13);

  id v6 = v13[0];
  if (v5)
  {
    uint64_t v7 = sub_1B6E30F48();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    id v9 = v6;
    v8(a1, v7);
  }
  else
  {
    id v10 = v13[0];
    sub_1B6E30D78();

    swift_willThrow();
    uint64_t v11 = sub_1B6E30F48();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

void sub_1B680E10C(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1B6E31C98();
  *(void *)(v2 + 16) = 2048;
  bzero((void *)(v2 + 32), 0x2000uLL);
  uint64_t v3 = sub_1B6E31C98();
  *(void *)(v3 + 16) = 2048;
  bzero((void *)(v3 + 32), 0x2000uLL);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
}

uint64_t sub_1B680E1A4(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = 0;
  int v8 = a4 ^ a1;
  if ((v8 & 1) == 0 && (v8 & 0xFF00) == 0 && (v8 & 0x10000) == 0)
  {
    if (a2 == a5 && a3 == a6) {
      return 1;
    }
    else {
      return sub_1B6E334B8();
    }
  }
  return result;
}

uint64_t sub_1B680E1F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65727574706163 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF65646F4D6E6F69 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465726F7272696DLL && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1B680E3E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D726F6665766177 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D75727463657073 && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D75727463657073 && a2 == 0xEE00736552776F4CLL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7564658 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1B680E5A8()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B680E5F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 2036427888 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702131053 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73706F6F6CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void sub_1B680E720(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v78 = a3;
  uint64_t v88 = *MEMORY[0x1E4F143B8];
  sub_1B680FDB8();
  uint64_t v79 = v5;
  MEMORY[0x1F4188790](v5, v6);
  int v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63BE100();
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v72 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v82 = (uint64_t)&v70 - v14;
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v18 = (char *)&v70 - v17;
  uint64_t v19 = sub_1B6E30F48();
  uint64_t v83 = *(void *)(v19 - 8);
  uint64_t v84 = v19;
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v71 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22, v23);
  id v25 = (char *)&v70 - v24;
  uint64_t v26 = a1[2];
  uint64_t v27 = a1[3];
  uint64_t v28 = (void *)a1[4];
  int8x16_t v77 = a1;
  uint64_t v80 = v18;
  if (v28)
  {
    uint64_t v29 = a1[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v81 = (uint64_t)v8;
    uint64_t v31 = a2;
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8);
    swift_bridgeObjectRetain();
    id v33 = v28;
    v32(v26, v27, ObjectType, v29);
    a2 = v31;
    int v8 = (char *)v81;
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    CVMetalTextureCacheRef cacheOut = 0;
    unint64_t v87 = 0xE000000000000000;
    uint64_t v81 = qword_1EB997FD0;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    CVMetalTextureCacheRef v34 = cacheOut;
    uint64_t v35 = v87;
    int v36 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    CVMetalTextureCacheRef cacheOut = 0;
    swift_retain();
    sub_1B6B33E34(v36, (uint64_t *)&cacheOut, (uint64_t)v34, v35);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1B6E30E48();
  }
  swift_bridgeObjectRelease();
  uint64_t v81 = a2;
  uint64_t v37 = (uint64_t)v80;
  sub_1B663AB08(a2, (uint64_t)v80);
  uint64_t v38 = v82;
  uint64_t v39 = v83;
  uint64_t v40 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  uint64_t v41 = v84;
  uint64_t v75 = v83 + 16;
  uint64_t v73 = v40;
  v40(v82, v25, v84);
  uint64_t v42 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56);
  uint64_t v76 = v39 + 56;
  uint64_t v74 = v42;
  v42(v38, 0, 1, v41);
  uint64_t v43 = (uint64_t)&v8[*(int *)(v79 + 48)];
  sub_1B663AB08(v37, (uint64_t)v8);
  sub_1B663AB08(v38, v43);
  id v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  if (v44((uint64_t)v8, 1, v41) != 1)
  {
    uint64_t v45 = v72;
    sub_1B663AB08((uint64_t)v8, v72);
    if (v44(v43, 1, v84) != 1)
    {
      uint64_t v46 = v83;
      uint64_t v47 = v84;
      uint64_t v48 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 32))(v71, v43, v84);
      sub_1B6810BDC((unint64_t *)&qword_1E9DD2A10, MEMORY[0x1E4F276F0]);
      char v49 = sub_1B6E31708();
      uint64_t v50 = *(void (**)(char *, uint64_t))(v46 + 8);
      v50(v48, v47);
      sub_1B680FE1C(v82, (uint64_t (*)(void))sub_1B63BE100);
      sub_1B680FE1C(v37, (uint64_t (*)(void))sub_1B63BE100);
      v50((char *)v45, v47);
      sub_1B680FE1C((uint64_t)v8, (uint64_t (*)(void))sub_1B63BE100);
      if ((v49 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_15;
    }
    sub_1B680FE1C(v82, (uint64_t (*)(void))sub_1B63BE100);
    sub_1B680FE1C(v37, (uint64_t (*)(void))sub_1B63BE100);
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v45, v84);
LABEL_13:
    sub_1B680FE1C((uint64_t)v8, (uint64_t (*)(void))sub_1B680FDB8);
    goto LABEL_17;
  }
  sub_1B680FE1C(v38, (uint64_t (*)(void))sub_1B63BE100);
  sub_1B680FE1C(v37, (uint64_t (*)(void))sub_1B63BE100);
  if (v44(v43, 1, v84) != 1) {
    goto LABEL_13;
  }
  sub_1B680FE1C((uint64_t)v8, (uint64_t (*)(void))sub_1B63BE100);
LABEL_15:
  if (*(void *)(v81 + *(int *)(type metadata accessor for MovieRuntime(0) + 20)))
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v84);
    return;
  }
LABEL_17:
  id v51 = (void *)sub_1B6E30E78();
  id v52 = objc_msgSend(self, sel_assetWithURL_, v51);

  id v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F16620]), sel_initWithAsset_, v52);
  id v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F16608]), sel_initWithPlayerItem_, v53);
  objc_msgSend(v54, sel_setMuted_, *((unsigned __int8 *)v77 + 49));
  uint64_t v55 = (int *)type metadata accessor for MovieRuntime(0);
  uint64_t v56 = v55[5];
  uint64_t v57 = v81;
  uint64_t v58 = *(void **)(v81 + v56);
  id v59 = v54;

  *(void *)(v57 + v56) = v54;
  uint64_t v60 = v55[6];
  id v61 = *(void **)(v57 + v60);
  id v62 = v53;

  *(void *)(v57 + v60) = v53;
  sub_1B680FE1C(v57, (uint64_t (*)(void))sub_1B63BE100);
  uint64_t v63 = v84;
  v73(v57, v25, v84);
  v74(v57, 0, 1, v63);
  id v64 = sub_1B680858C();
  objc_msgSend(v62, sel_addOutput_, v64);

  CVMetalTextureCacheRef cacheOut = 0;
  if (CVMetalTextureCacheCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, *(id *)(v78 + 16), 0, &cacheOut))
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v65 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v85 = 0;
    swift_retain();
    sub_1B6B33E34(v65, &v85, 0xD000000000000021, 0x80000001B6F38440);

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v84);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v25, v84);

    CVMetalTextureCacheRef v66 = cacheOut;
    uint64_t v67 = v55[10];
    long long v68 = *(void **)(v57 + v67);
    uint64_t v69 = cacheOut;

    *(void *)(v57 + v67) = v66;
  }
}

unint64_t sub_1B680F058(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unint64_t sub_1B680F068()
{
  unint64_t result = qword_1E9DD0E70;
  if (!qword_1E9DD0E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0E70);
  }
  return result;
}

void sub_1B680F0BC()
{
  if (!qword_1E9DD0E80)
  {
    sub_1B63989B8(255, &qword_1E9DD0E88);
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0E80);
    }
  }
}

uint64_t sub_1B680F124(void *a1)
{
  sub_1B681223C(0, &qword_1E9DD0F30, (uint64_t (*)(void))sub_1B68112A4, (uint64_t)&type metadata for VideoCapture.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  int v8 = &v20[-v7];
  uint64_t v9 = sub_1B6E31118();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B6E31108();
  sub_1B6E310B8();
  uint64_t v22 = v14;
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68112A4();
  sub_1B6E33A48();
  if (v1)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v5;
    char v27 = 0;
    char v16 = sub_1B6E32DA8();
    char v25 = 1;
    sub_1B66C4D34();
    sub_1B6E32DF8();
    int v17 = v26;
    char v24 = 2;
    int v21 = sub_1B6E32DA8();
    char v23 = 3;
    sub_1B6E32D98();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v8, v4);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    if (v21) {
      int v19 = 0x10000;
    }
    else {
      int v19 = 0;
    }
    return v19 | v16 & 1 | (v17 << 8);
  }
}

void sub_1B680F43C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  CVMetalTextureCacheRef v34 = a2;
  uint64_t v3 = sub_1B6E30F48();
  uint64_t v35 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B681223C(0, &qword_1E9DD0F08, (uint64_t (*)(void))sub_1B6811188, (uint64_t)&type metadata for MovieFileAsset.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v11 = (char *)&v32 - v10;
  char v44 = 0;
  unsigned __int8 v46 = 1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6811188();
  uint64_t v12 = (uint64_t)v37;
  sub_1B6E33A48();
  if (v12)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v35;
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    uint64_t v37 = a1;
    sub_1B62C14BC(a1, v14);
    if (sub_1B62BF5E0(2031, v14, v15))
    {
      LOBYTE(v38) = 0;
      sub_1B6810BDC((unint64_t *)&qword_1EB97D980, MEMORY[0x1E4F276F0]);
      char v16 = v6;
      uint64_t v17 = v3;
      uint64_t v18 = v8;
      sub_1B6E32DF8();
      uint64_t v19 = sub_1B6E30E58();
      uint64_t v21 = v20;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      uint64_t v22 = 0;
      uint64_t v35 = 0;
      uint64_t v23 = v21;
      uint64_t v24 = v19;
      uint64_t v25 = v19;
    }
    else
    {
      char v45 = 0;
      sub_1B68111DC();
      uint64_t v18 = v8;
      sub_1B6E32DF8();
      uint64_t v25 = v38;
      uint64_t v23 = v39;
      uint64_t v24 = v40;
      uint64_t v21 = v41;
      uint64_t v22 = v42;
      uint64_t v35 = v43;
    }
    LOBYTE(v38) = 1;
    unsigned __int8 v26 = v11;
    char v44 = sub_1B6E32DA8() & 1;
    LOBYTE(v38) = 2;
    unsigned __int8 v46 = sub_1B6E32DA8() & 1;
    LOBYTE(v38) = 3;
    char v27 = sub_1B6E32DA8();
    uint64_t v33 = v25;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v18);
    char v28 = v44;
    LODWORD(v36) = v46;
    id v29 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v37);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v30 = v34;
    *CVMetalTextureCacheRef v34 = v33;
    v30[1] = v23;
    v30[2] = v24;
    v30[3] = v21;
    uint64_t v31 = v35;
    _OWORD v30[4] = (uint64_t)v22;
    void v30[5] = v31;
    *((unsigned char *)v30 + 48) = v28;
    *((unsigned char *)v30 + 49) = v36;
    *((unsigned char *)v30 + 50) = v27 & 1;
  }
}

void sub_1B680F8C8(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = type metadata accessor for MovieRuntime(0);
  uint64_t v12 = *(void **)(a4 + *(int *)(v11 + 20));
  if (v12)
  {
    uint64_t v13 = (int *)v11;
    id v52 = a5;
    uint64_t v14 = a3[49];
    id v15 = v12;
    if (v14 != objc_msgSend(v15, sel_isMuted)) {
      objc_msgSend(v15, sel_setMuted_, v14);
    }
    char v16 = *(void **)(a4 + v13[6]);
    if (!v16) {
      goto LABEL_33;
    }
    id v17 = v16;
    objc_msgSend(v17, sel_duration);
    sub_1B6E32328();
    if (a3[48] == 1)
    {
      long double v19 = v18;
      if (v18 > 0.0)
      {
        long double v20 = *(double *)(a6 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 48);
        if (a3[50] == 1)
        {
          long double v20 = fmod(v20, v19);
        }
        else if (v19 < v20)
        {
          long double v20 = v19;
        }
        CMTimeMake(&textureOut, (uint64_t)(v20 * 1000.0), 1000);
        uint64_t v21 = *MEMORY[0x1E4F1FA48];
        int v22 = *(_DWORD *)(MEMORY[0x1E4F1FA48] + 8);
        int v23 = *(_DWORD *)(MEMORY[0x1E4F1FA48] + 12);
        uint64_t v57 = *(void *)(MEMORY[0x1E4F1FA48] + 16);
        uint64_t v58 = v21;
        int v59 = v22;
        int v60 = v23;
        uint64_t v61 = v57;
        uint64_t v54 = v21;
        int v55 = v22;
        int v56 = v23;
        objc_msgSend(v15, sel_seekToTime_toleranceBefore_toleranceAfter_, &textureOut, &v58, &v54);
      }
    }
    uint64_t v51 = a2;
    id v53 = v15;
    objc_msgSend(v17, sel_currentTime);
    CMTimeValue value = textureOut.value;
    CMTimeScale timescale = textureOut.timescale;
    CMTimeFlags flags = textureOut.flags;
    char v27 = v17;
    CMTimeEpoch epoch = textureOut.epoch;
    id v29 = sub_1B680858C();
    textureOut.CMTimeValue value = value;
    textureOut.CMTimeScale timescale = timescale;
    textureOut.CMTimeFlags flags = flags;
    textureOut.CMTimeEpoch epoch = epoch;
    unsigned int v30 = objc_msgSend(v29, sel_hasNewPixelBufferForItemTime_, &textureOut);

    if (!v30
      || (id v31 = sub_1B680858C(),
          textureOut.CMTimeValue value = value,
          textureOut.CMTimeScale timescale = timescale,
          textureOut.CMTimeFlags flags = flags,
          textureOut.CMTimeEpoch epoch = epoch,
          id v32 = objc_msgSend(v31, sel_copyPixelBufferForItemTime_itemTimeForDisplay_, &textureOut, 0),
          v31,
          !v32))
    {

      return;
    }
    uint64_t v33 = *(void **)(a4 + v13[10]);
    CVMetalTextureCacheRef v34 = v27;
    id v15 = v53;
    if (!v33)
    {

      return;
    }
    uint64_t v35 = v33;
    size_t Width = CVPixelBufferGetWidth((CVPixelBufferRef)v32);
    size_t Height = CVPixelBufferGetHeight((CVPixelBufferRef)v32);
    textureOut.CMTimeValue value = 0;
    CVMetalTextureCacheCreateTextureFromImage((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v35, (CVImageBufferRef)v32, 0, MTLPixelFormatBGRA8Unorm_sRGB, Width, Height, 0, (CVMetalTextureRef *)&textureOut);
    uint64_t v38 = (void *)textureOut.value;
    if (textureOut.value)
    {
      uint64_t v39 = (__CVBuffer *)(id)textureOut.value;
      id v40 = CVMetalTextureGetTexture(v39);
      if (v40)
      {
        id v41 = v40;
        uint64_t v50 = v32;
        swift_unknownObjectRelease();
        *id v52 = v41;
        uint64_t v42 = (__IOSurface *)objc_msgSend((id)swift_unknownObjectRetain(), sel_iosurface);
        if (v42)
        {
          uint64_t v43 = v42;
          uint64_t v44 = *(void *)(a4 + v13[11]);
          char v45 = *(__IOSurface **)(v44 + 16);
          *(void *)(v44 + 16) = v42;
          unsigned __int8 v46 = v42;
          if (v45)
          {
            IOSurfaceDecrementUseCount(v45);
            uint64_t v47 = *(__IOSurface **)(v44 + 16);
          }
          else
          {
            uint64_t v47 = v43;
          }
          if (v47) {
            IOSurfaceIncrementUseCount(v47);
          }
        }
        swift_retain();
        uint64_t v49 = sub_1B62DE2C8(v51);
        swift_release();
        sub_1B63BAF34(v49);

        swift_unknownObjectRelease();
LABEL_33:

        return;
      }
    }
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    swift_retain();
    int v48 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v58 = 0;
    swift_retain();
    sub_1B6B33E34(v48, &v58, 0xD00000000000001ELL, 0x80000001B6F384C0);

    swift_release();
    swift_release();
  }
}

void sub_1B680FDB8()
{
  if (!qword_1E9DD0E90)
  {
    sub_1B63BE100();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD0E90);
    }
  }
}

uint64_t sub_1B680FE1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1B680FE7C()
{
  if (!qword_1E9DD0EA0)
  {
    sub_1B677C76C(255, &qword_1E9DD0EA8);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0EA0);
    }
  }
}

uint64_t sub_1B680FEE4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1B680FF1C(void *a1, void *a2)
{
  sub_1B680A0B4(a1, a2, v2);
}

uint64_t sub_1B680FF24(void *a1, uint64_t a2, id *a3)
{
  uint64_t v67 = a3;
  sub_1B680FDB8();
  uint64_t v63 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B63BE100();
  MEMORY[0x1F4188790](v8 - 8, v9);
  id v62 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v64 = (uint64_t)&v56 - v13;
  MEMORY[0x1F4188790](v14, v15);
  CVMetalTextureCacheRef v66 = (char *)&v56 - v16;
  MEMORY[0x1F4188790](v17, v18);
  long double v20 = (char *)&v56 - v19;
  uint64_t v71 = sub_1B6E30F48();
  uint64_t v68 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71, v21);
  int v56 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v24);
  unsigned __int8 v26 = (char *)&v56 - v25;
  uint64_t v28 = a1[2];
  uint64_t v27 = a1[3];
  id v29 = (void *)a1[4];
  int v65 = v20;
  if (v29)
  {
    uint64_t v30 = a1[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v61 = v7;
    id v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8);
    swift_bridgeObjectRetain();
    id v33 = v29;
    uint64_t v34 = ObjectType;
    long double v20 = v65;
    v32(v28, v27, v34, v30);
    uint64_t v7 = v61;
  }
  else
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    uint64_t v69 = 0;
    unint64_t v70 = 0xE000000000000000;
    uint64_t v61 = (char *)qword_1EB997FD0;
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v36 = v69;
    uint64_t v35 = v70;
    int v37 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    uint64_t v69 = 0;
    swift_retain();
    sub_1B6B33E34(v37, &v69, v36, v35);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1B6E30E48();
  }
  swift_bridgeObjectRelease();
  uint64_t v61 = (char *)v67 + *(int *)(type metadata accessor for AudioPlayerComponent(0) + 20);
  sub_1B663AB08((uint64_t)v61, (uint64_t)v20);
  uint64_t v38 = v68;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  uint64_t v40 = (uint64_t)v66;
  uint64_t v41 = v71;
  uint64_t v59 = v68 + 16;
  uint64_t v57 = v39;
  v39(v66, v26, v71);
  uint64_t v42 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56);
  uint64_t v60 = v38 + 56;
  uint64_t v58 = v42;
  v42(v40, 0, 1, v41);
  uint64_t v43 = (uint64_t)&v7[*(int *)(v63 + 48)];
  sub_1B663AB08((uint64_t)v20, (uint64_t)v7);
  sub_1B663AB08(v40, v43);
  uint64_t v44 = (uint64_t)v20;
  char v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  if (v45((uint64_t)v7, 1, v41) == 1)
  {
    sub_1B680FE1C(v40, (uint64_t (*)(void))sub_1B63BE100);
    sub_1B680FE1C(v44, (uint64_t (*)(void))sub_1B63BE100);
    if (v45(v43, 1, v71) == 1)
    {
      sub_1B680FE1C((uint64_t)v7, (uint64_t (*)(void))sub_1B63BE100);
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v26, v71);
    }
    goto LABEL_13;
  }
  sub_1B663AB08((uint64_t)v7, v64);
  if (v45(v43, 1, v71) == 1)
  {
    sub_1B680FE1C((uint64_t)v66, (uint64_t (*)(void))sub_1B63BE100);
    sub_1B680FE1C((uint64_t)v65, (uint64_t (*)(void))sub_1B63BE100);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v64, v71);
LABEL_13:
    sub_1B680FE1C((uint64_t)v7, (uint64_t (*)(void))sub_1B680FDB8);
    goto LABEL_16;
  }
  uint64_t v47 = v68;
  int v48 = v56;
  uint64_t v49 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v56, v43, v71);
  sub_1B6810BDC((unint64_t *)&qword_1E9DD2A10, MEMORY[0x1E4F276F0]);
  uint64_t v50 = v64;
  char v51 = sub_1B6E31708();
  id v52 = *(void (**)(char *, uint64_t))(v47 + 8);
  v52(v48, v49);
  sub_1B680FE1C((uint64_t)v66, (uint64_t (*)(void))sub_1B63BE100);
  sub_1B680FE1C((uint64_t)v65, (uint64_t (*)(void))sub_1B63BE100);
  v52((char *)v50, v49);
  sub_1B680FE1C((uint64_t)v7, (uint64_t (*)(void))sub_1B63BE100);
  if (v51) {
    return ((uint64_t (*)(char *, uint64_t))v52)(v26, v71);
  }
LABEL_16:
  uint64_t v53 = (uint64_t)v62;
  uint64_t v54 = v71;
  v57(v62, v26, v71);
  v58(v53, 0, 1, v54);
  sub_1B63BE008(v53, (uint64_t)v61);
  int v55 = v67;

  *int v55 = 0;
  sub_1B680FE1C(v53, (uint64_t (*)(void))sub_1B63BE100);
  return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v26, v54);
}

uint64_t sub_1B6810654(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = sub_1B6E31C98();
  *(void *)(v8 + 16) = 2048;
  bzero((void *)(v8 + 32), 0x2000uLL);
  uint64_t v9 = a2 - 2048;
  if (a2 <= 2048)
  {
    if (!a2) {
      return v8;
    }
    if ((unint64_t)a2 >= 8 && (unint64_t)(v8 - a1) < 0xFFFFFFFFFFFFFFE0)
    {
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFF8;
      uint64_t v22 = (long long *)(a1 + 16);
      uint64_t v23 = (_OWORD *)(v8 + 48);
      unint64_t v24 = a2 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        long long v25 = *v22;
        *(v23 - 1) = *(v22 - 1);
        *uint64_t v23 = v25;
        v22 += 2;
        v23 += 2;
        v24 -= 8;
      }
      while (v24);
      if (v12 == a2) {
        return v8;
      }
    }
    else
    {
      unint64_t v12 = 0;
    }
    unint64_t v13 = a2 - v12;
    uint64_t v14 = 4 * v12;
    uint64_t v15 = (_DWORD *)(4 * v12 + v8 + 32);
    uint64_t v16 = (int *)(a1 + v14);
    do
    {
      int v17 = *v16++;
      *v15++ = v17;
      --v13;
    }
    while (v13);
    return v8;
  }
  if (v9 >= (uint64_t)(a3 * a4)) {
    uint64_t v9 = (uint64_t)(a3 * a4);
  }
  uint64_t v10 = a1 + 4 * (v9 & ~(v9 >> 63));
  if ((unint64_t)(v8 - v10) < 0xFFFFFFFFFFFFFFE0)
  {
    for (uint64_t i = 0; i != 0x2000; i += 32)
    {
      long long v19 = *(_OWORD *)(v10 + i + 16);
      uint64_t v20 = v8 + i;
      *(_OWORD *)(v20 + 32) = *(_OWORD *)(v10 + i);
      *(_OWORD *)(v20 + 48) = v19;
    }
  }
  else
  {
    for (uint64_t j = 0; j != 0x2000; j += 4)
      *(_DWORD *)(v8 + 32 + j) = *(_DWORD *)(v10 + j);
  }
  return v8;
}

void sub_1B68107A8(void **a1, unsigned char *a2, uint64_t a3)
{
  kern_return_t v11;
  double v12;
  uint64_t v13;
  const vDSP_DFT_SetupStruct *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float *v19;
  vDSP_Length v20;
  uint64_t v21;
  mach_timebase_info info;
  uint64_t v23;

  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (char *)*a1;
  if (*a1)
  {
    uint64_t v6 = OBJC_IVAR____TtC3VFX11AudioPlayer__lock;
    uint64_t v7 = *(void **)&v4[OBJC_IVAR____TtC3VFX11AudioPlayer__lock];
    uint64_t v8 = v4;
    objc_msgSend(v7, sel_lock);
    uint64_t v9 = *(const float **)&v8[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRaw];
    if (!v9) {
      goto LABEL_20;
    }
    if ((*a2 & 1) != 0 || (a2[1] & 1) != 0 || a2[2] == 1)
    {
      uint64_t v10 = *(void *)&v8[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawCount];
      info = 0;
      uint64_t v11 = mach_timebase_info(&info);
      unint64_t v12 = -1.0;
      if (!v11) {
        unint64_t v12 = (double)(mach_absolute_time() * info.numer / info.denom) * 0.000000001;
      }
      unint64_t v13 = sub_1B6810654((uint64_t)v9, v10, v12 - *(double *)&v8[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawTime], *(double *)&v8[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawSampleRate]);
      swift_bridgeObjectRelease();
      *(void *)a3 = v13;
      if (a2[1]) {
        goto LABEL_10;
      }
    }
    if (a2[2] == 1)
    {
LABEL_10:
      uint64_t v14 = sub_1B680AB98();
      uint64_t v15 = sub_1B680ABDC(v14);
      swift_bridgeObjectRelease();
      *(void *)(a3 + 8) = v15;
      if (a2[2] == 1)
      {
        uint64_t v16 = sub_1B6640A4C(*(void *)(v15 + 16) / 0x14uLL, 0);
        int v17 = *(void *)(v16 + 16);
        if (v17)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v16 = (uint64_t)sub_1B6C1683C(v16);
          }
          uint64_t v18 = 0;
          long long v19 = (float *)(v15 + 56);
          do
          {
            *(float *)(v16 + 4 * v18 + 32) = (float)((float)((float)((float)((float)((float)((float)((float)((float)((float)((float)((float)((float)((float)((float)((float)((float)((float)((float)((float)(*(v19 - 6) + 0.0) + *(v19 - 5)) + *(v19 - 4)) + *(v19 - 3)) + *(v19 - 2)) + *(v19 - 1)) + *v19) + v19[1]) + v19[2]) + v19[3]) + v19[4]) + v19[5]) + v19[6]) + v19[7])
                                                                                           + v19[8])
                                                                                   + v19[9])
                                                                           + v19[10])
                                                                   + v19[11])
                                                           + v19[12])
                                                   + v19[13])
                                           * 0.05;
            v19 += 20;
            ++v18;
          }
          while (v17 != v18);
        }
        swift_bridgeObjectRelease();
        *(void *)(a3 + 16) = v16;
      }
    }
    if (a2[3] != 1) {
      goto LABEL_20;
    }
    uint64_t v20 = *(void *)&v8[OBJC_IVAR____TtC3VFX11AudioPlayer_samplesRawCount];
    if ((v20 & 0x8000000000000000) == 0)
    {
      info.numer = 0;
      vDSP_measqv(v9, 1, (float *)&info, v20);
      *(float *)(a3 + 24) = fminf(fmaxf((float)((float)(log10f(*(float *)&info.numer) * 10.0) + 40.0) * 0.0075, 0.0), 1.0);
LABEL_20:
      objc_msgSend(*(id *)&v4[v6], sel_unlock);

      return;
    }
    sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC860];
    *(void *)a3 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    *(void *)(a3 + 8) = v21;
    swift_bridgeObjectRelease();
    *(void *)(a3 + 16) = v21;
    *(_DWORD *)(a3 + 24) = 0;
  }
}

void sub_1B6810B3C()
{
  if (!qword_1E9DD0EB8)
  {
    type metadata accessor for Option(255);
    sub_1B6810BDC((unint64_t *)&qword_1E9DD0EC0, type metadata accessor for Option);
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD0EB8);
    }
  }
}

uint64_t sub_1B6810BDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6810C24(void *a1)
{
  sub_1B681223C(0, &qword_1E9DD0EE8, (uint64_t (*)(void))sub_1B68110E0, (uint64_t)&type metadata for AudioController.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v15 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68110E0();
  sub_1B6E33A48();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  char v18 = 0;
  char v9 = sub_1B6E32DA8();
  char v17 = 1;
  char v10 = sub_1B6E32DA8();
  char v16 = 2;
  char v12 = sub_1B6E32DA8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  if (v12) {
    int v13 = 0x10000;
  }
  else {
    int v13 = 0;
  }
  if (v10) {
    int v14 = 256;
  }
  else {
    int v14 = 0;
  }
  return v14 & 0xFFFFFFFE | v9 & 1 | v13;
}

uint64_t sub_1B6810E3C(void *a1)
{
  sub_1B681223C(0, &qword_1E9DD0ED0, (uint64_t (*)(void))sub_1B681108C, (uint64_t)&type metadata for AudioAnalyzer.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)&v17 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B681108C();
  sub_1B6E33A48();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  char v21 = 0;
  char v9 = sub_1B6E32DA8();
  char v20 = 1;
  char v10 = sub_1B6E32DA8();
  char v19 = 2;
  char v11 = sub_1B6E32DA8();
  char v18 = 3;
  char v13 = sub_1B6E32DA8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  if (v13) {
    int v14 = 0x1000000;
  }
  else {
    int v14 = 0;
  }
  if (v11) {
    int v15 = 0x10000;
  }
  else {
    int v15 = 0;
  }
  if (v10) {
    int v16 = 256;
  }
  else {
    int v16 = 0;
  }
  return v16 & 0xFFFFFFFE | v9 & 1 | v15 | v14;
}

unint64_t sub_1B681108C()
{
  unint64_t result = qword_1E9DD0ED8;
  if (!qword_1E9DD0ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0ED8);
  }
  return result;
}

unint64_t sub_1B68110E0()
{
  unint64_t result = qword_1E9DD0EF0;
  if (!qword_1E9DD0EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0EF0);
  }
  return result;
}

unint64_t sub_1B6811134()
{
  unint64_t result = qword_1E9DD0F00;
  if (!qword_1E9DD0F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0F00);
  }
  return result;
}

unint64_t sub_1B6811188()
{
  unint64_t result = qword_1E9DD0F10;
  if (!qword_1E9DD0F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0F10);
  }
  return result;
}

unint64_t sub_1B68111DC()
{
  unint64_t result = qword_1E9DD0F18;
  if (!qword_1E9DD0F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0F18);
  }
  return result;
}

uint64_t sub_1B6811230(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

id *sub_1B6811278(id *a1)
{
  return a1;
}

unint64_t sub_1B68112A4()
{
  unint64_t result = qword_1E9DD0F38;
  if (!qword_1E9DD0F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0F38);
  }
  return result;
}

uint64_t sub_1B68112F8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B6811338()
{
  sub_1B68097C0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1B6811340(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1B6E31D18();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1B681139C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_1B6811340(255, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B681141C);
    unint64_t v6 = sub_1B6E32C68();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1B681141C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v5) {
      atomic_store(TupleTypeMetadata3, a2);
    }
  }
}

ValueMetadata *type metadata accessor for VideoCapture.CodingKeys()
{
  return &type metadata for VideoCapture.CodingKeys;
}

ValueMetadata *type metadata accessor for MovieFileAsset.CodingKeys()
{
  return &type metadata for MovieFileAsset.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AudioController.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6811578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioController.CodingKeys()
{
  return &type metadata for AudioController.CodingKeys;
}

ValueMetadata *type metadata accessor for AudioAnalyzer.CodingKeys()
{
  return &type metadata for AudioAnalyzer.CodingKeys;
}

uint64_t destroy for AudioSpectrum()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioSpectrum(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioSpectrum(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  return a1;
}

uint64_t assignWithTake for AudioSpectrum(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for GraphEntityComponentPropertyReferences(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GraphEntityComponentPropertyReferences(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioSpectrum()
{
  return &type metadata for AudioSpectrum;
}

void *assignWithCopy for ShaderFileAsset(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = a2[5];
  unsigned int v6 = (void *)a1[4];
  a1[4] = v4;
  id v7 = v4;

  a1[5] = v5;
  return a1;
}

ValueMetadata *type metadata accessor for CALayerFileAsset()
{
  return &type metadata for CALayerFileAsset;
}

ValueMetadata *type metadata accessor for VideoCapture.OrientationMode()
{
  return &type metadata for VideoCapture.OrientationMode;
}

unint64_t sub_1B6811930()
{
  unint64_t result = qword_1E9DD0FA8;
  if (!qword_1E9DD0FA8)
  {
    sub_1B62D84A4(255, &qword_1E9DD0FB0, (uint64_t)&type metadata for VideoCapture.OrientationMode, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0FA8);
  }
  return result;
}

unint64_t sub_1B68119B0()
{
  unint64_t result = qword_1E9DD0FB8;
  if (!qword_1E9DD0FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0FB8);
  }
  return result;
}

unint64_t sub_1B6811A08()
{
  unint64_t result = qword_1E9DD0FC0;
  if (!qword_1E9DD0FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0FC0);
  }
  return result;
}

unint64_t sub_1B6811A60()
{
  unint64_t result = qword_1E9DD0FC8;
  if (!qword_1E9DD0FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0FC8);
  }
  return result;
}

unint64_t sub_1B6811AB8()
{
  unint64_t result = qword_1E9DD0FD0;
  if (!qword_1E9DD0FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0FD0);
  }
  return result;
}

unint64_t sub_1B6811B10()
{
  unint64_t result = qword_1E9DD0FD8;
  if (!qword_1E9DD0FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0FD8);
  }
  return result;
}

unint64_t sub_1B6811B68()
{
  unint64_t result = qword_1E9DD0FE0;
  if (!qword_1E9DD0FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0FE0);
  }
  return result;
}

unint64_t sub_1B6811BC0()
{
  unint64_t result = qword_1E9DD0FE8;
  if (!qword_1E9DD0FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0FE8);
  }
  return result;
}

unint64_t sub_1B6811C18()
{
  unint64_t result = qword_1E9DD0FF0;
  if (!qword_1E9DD0FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0FF0);
  }
  return result;
}

unint64_t sub_1B6811C70()
{
  unint64_t result = qword_1E9DD0FF8;
  if (!qword_1E9DD0FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD0FF8);
  }
  return result;
}

unint64_t sub_1B6811CC8()
{
  unint64_t result = qword_1E9DD1000;
  if (!qword_1E9DD1000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1000);
  }
  return result;
}

unint64_t sub_1B6811D20()
{
  unint64_t result = qword_1E9DD1008;
  if (!qword_1E9DD1008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1008);
  }
  return result;
}

unint64_t sub_1B6811D78()
{
  unint64_t result = qword_1E9DD1010;
  if (!qword_1E9DD1010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1010);
  }
  return result;
}

unint64_t sub_1B6811DD0()
{
  unint64_t result = qword_1E9DD1018;
  if (!qword_1E9DD1018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1018);
  }
  return result;
}

uint64_t sub_1B6811E24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  int v15 = a2;
  sub_1B681223C(0, &qword_1E9DD1020, (uint64_t (*)(void))sub_1B68121E8, (uint64_t)&type metadata for AudioSpectrum.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v17 = v4;
  MEMORY[0x1F4188790](v4, v5);
  id v7 = (char *)&v15 - v6;
  uint64_t v8 = sub_1B6E31C98();
  *(void *)(v8 + 16) = 2048;
  bzero((void *)(v8 + 32), 0x2000uLL);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B6E31C98();
  *(void *)(v9 + 16) = 2048;
  bzero((void *)(v9 + 32), 0x2000uLL);
  char v19 = 1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B68121E8();
  swift_bridgeObjectRetain();
  sub_1B6E33A48();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v10 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B62D84A4(0, (unint64_t *)&qword_1EB980320, MEMORY[0x1E4FBB470], MEMORY[0x1E4FBB320]);
    char v20 = 0;
    sub_1B63997F4((unint64_t *)&qword_1EB980328);
    sub_1B6E32DF8();
    swift_bridgeObjectRelease();
    char v20 = 1;
    sub_1B6E32DF8();
    swift_bridgeObjectRelease();
    char v20 = 2;
    sub_1B6E32DF8();
    swift_bridgeObjectRelease();
    LOBYTE(v18) = 3;
    sub_1B6E32DC8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v17);
    char v12 = v19;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease_n();
    int v14 = v15;
    *int v15 = v13;
    v14[1] = v13;
    v14[2] = v13;
    *((_DWORD *)v14 + 6) = 0;
    _DWORD v14[4] = v8;
    v14[5] = v9;
    v14[6] = 0;
    *((unsigned char *)v14 + 56) = v12;
  }
  return result;
}

unint64_t sub_1B68121E8()
{
  unint64_t result = qword_1E9DD1028;
  if (!qword_1E9DD1028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1028);
  }
  return result;
}

void sub_1B681223C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *_s3VFX12VideoCaptureV15OrientationModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6812370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioSpectrum.CodingKeys()
{
  return &type metadata for AudioSpectrum.CodingKeys;
}

ValueMetadata *type metadata accessor for AudioMeter()
{
  return &type metadata for AudioMeter;
}

unint64_t sub_1B68123BC()
{
  unint64_t result = qword_1E9DD1040;
  if (!qword_1E9DD1040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1040);
  }
  return result;
}

unint64_t sub_1B6812414()
{
  unint64_t result = qword_1E9DD1048;
  if (!qword_1E9DD1048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1048);
  }
  return result;
}

unint64_t sub_1B681246C()
{
  unint64_t result = qword_1E9DD1050;
  if (!qword_1E9DD1050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1050);
  }
  return result;
}

void *sub_1B68124D8(void *a1)
{
  uint64_t v3 = v1;
  sub_1B68167B8(0, &qword_1E9DD1060, (uint64_t (*)(void))sub_1B6815DBC, (uint64_t)&_s17CustomCodeSnippetC10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v19[-1] - v8;
  unint64_t v10 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6815DBC();
  swift_retain();
  uint64_t v11 = v10;
  sub_1B6E33A48();
  if (v2)
  {
    swift_release();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    _s17CustomCodeSnippetCMa();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v20;
    _s17CodeSourceSnippetCMa();
    sub_1B6816820(&qword_1E9DCDD88);
    sub_1B6E32DF8();
    *(void *)(v3 + 136) = v19[0];
    swift_release();
    sub_1B62C1550((uint64_t)a1, (uint64_t)v19);
    uint64_t v11 = (void *)sub_1B6BD73F8(v19);
    int v14 = *(void (**)(uint64_t))(*v11 + 1336);
    uint64_t v15 = swift_retain_n();
    v14(v15);
    v11[12] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    uint64_t v16 = (void *)v11[10];
    uint64_t v17 = v11[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6A2EE0C(v16, v17, (void (*)(uint64_t, uint64_t, void *))sub_1B6815E7C);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v6);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_release();
  }
  return v11;
}

uint64_t sub_1B68127FC(void *a1)
{
  sub_1B68167B8(0, &qword_1E9DD10A0, (uint64_t (*)(void))sub_1B6815DBC, (uint64_t)&_s17CustomCodeSnippetC10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v11 - v8;
  uint64_t result = sub_1B6BD8104(a1);
  if (!v2)
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B6815DBC();
    sub_1B6E33A88();
    v11[1] = *(void *)(v1 + 136);
    _s17CodeSourceSnippetCMa();
    sub_1B6816820(&qword_1E9DCDDA8);
    sub_1B6E32FA8();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

unint64_t sub_1B68129B0()
{
  return 0xD000000000000017;
}

uint64_t sub_1B6812A90(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v159 = a2;
  int v158 = a1;
  uint64_t v5 = 0;
  sub_1B681692C(0, (unint64_t *)&qword_1EB97D9D0, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8, v7);
  int v155 = (char *)&v132 - v8;
  sub_1B62E17B4();
  uint64_t v149 = v9;
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v148 = (char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_1B6E31098();
  uint64_t v132 = *(void *)(v147 - 8);
  MEMORY[0x1F4188790](v147, v12);
  long long v146 = (char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = v3;
  uint64_t v14 = *(void *)(*(void *)(v3 + 136) + 160);
  if (v14)
  {
    uint64_t v178 = v14;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1B6815E10(&v178);
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v178 + 16);
    if (v15)
    {
      uint64_t v133 = 0;
      uint64_t v157 = swift_retain();
      uint64_t v16 = (unint64_t *)(v157 + 40);
      uint64_t v17 = v159;
      do
      {
        uint64_t v18 = *(v16 - 1);
        unint64_t v19 = *v16;
        uint64_t v178 = v17;
        unint64_t v179 = a3;
        uint64_t v175 = v18;
        unint64_t v176 = v19;
        v174[0] = 36;
        v174[1] = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        sub_1B633AF88();
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1B6E32618();
        unint64_t v21 = v20;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        a3 = v21;
        v16 += 2;
        --v15;
      }
      while (v15);
      uint64_t v159 = v17;
      swift_release_n();
      uint64_t v5 = v133;
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  unint64_t v22 = *(void *)(v134 + 96);
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1B6E32C18();
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  uint64_t v133 = v5;
  if (v23)
  {
    uint64_t v24 = 0;
    unint64_t v152 = v22 & 0xC000000000000001;
    uint64_t v25 = 67;
    if (v158 == 1) {
      uint64_t v25 = 0x6C6174654DLL;
    }
    uint64_t v140 = v25;
    unint64_t v26 = 0xE100000000000000;
    if (v158 == 1) {
      unint64_t v26 = 0xE500000000000000;
    }
    unint64_t v139 = v26;
    long long v145 = (void (**)(char *, char *, uint64_t))(v132 + 32);
    uint64_t v138 = "};out = &#TEMP#[0]";
    uint64_t v136 = "CodeGenContext.typeAsCode: ";
    unint64_t v137 = 0x80000001B6F31700;
    unint64_t v135 = 0x80000001B6F31720;
    long long v144 = xmmword_1B6E77050;
    uint64_t v153 = v23;
    uint64_t v154 = v22;
    do
    {
      uint64_t v156 = v24;
      if (v152)
      {
        uint64_t v28 = MEMORY[0x1BA9B4580]();
      }
      else
      {
        uint64_t v28 = *(void *)(v22 + 8 * v24 + 32);
        swift_retain();
      }
      int v29 = v158;
      uint64_t v30 = *(void *)(v28 + 24);
      unint64_t v31 = *(void *)(v28 + 32);
      sub_1B629C37C(v28 + 56, (uint64_t)v174);
      uint64_t v157 = v28;
      if (v29 == 2)
      {
        uint64_t v169 = 544499052;
        unint64_t v170 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B68168F0(v174, (void (*)(void, void, void, void, void))sub_1B629C9E8);
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B629C37C((uint64_t)v174, (uint64_t)&v178);
        if (v179 >= 0x3B)
        {
          if (*(void *)(v180 + 16) && (sub_1B69FA7C0(2u), (v33 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            float32x4_t v151 = (void (**)(char *, char *, uint64_t))v30;
            uint64_t v164 = 0;
            unint64_t v165 = 0xE000000000000000;
            uint64_t v143 = qword_1EB997FD0;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v164 = 0xD00000000000001BLL;
            unint64_t v165 = v137;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            uint64_t v36 = v164;
            unint64_t v37 = v165;
            char v38 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            *(void *)&long long v150 = v31;
            uint64_t v39 = qword_1EB997FF0;
            uint64_t v40 = qword_1EB985528;
            swift_retain();
            if (v40 != -1) {
              swift_once();
            }
            sub_1B681692C(0, (unint64_t *)&qword_1EB9855A0, (uint64_t (*)(uint64_t))sub_1B6816990, MEMORY[0x1E4FBBE00]);
            uint64_t v41 = swift_allocObject();
            *(_OWORD *)(v41 + 16) = v144;
            *(void *)(v41 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v41 + 64) = sub_1B678615C();
            *(void *)(v41 + 32) = v36;
            *(void *)(v41 + 40) = v37;
            swift_bridgeObjectRetain();
            sub_1B6E31258();
            swift_bridgeObjectRelease();
            swift_retain();
            uint64_t v42 = v146;
            sub_1B6E31088();
            uint64_t v43 = (uint64_t)v148;
            uint64_t v44 = v149[12];
            unint64_t v141 = v149[16];
            unint64_t v142 = v39;
            char v45 = (uint64_t *)&v148[v149[20]];
            (*v145)(v148, v42, v147);
            *(unsigned char *)(v43 + v44) = v38;
            *(void *)(v43 + v141) = 0;
            *char v45 = v36;
            v45[1] = v37;
            swift_bridgeObjectRetain();
            sub_1B6E31368();
            swift_release();
            sub_1B67A3738(v43);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            unint64_t v31 = v150;
            uint64_t v30 = (uint64_t)v151;
          }
        }
        else
        {
          sub_1B68A163C((uint64_t)v174);
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v169 = 0x2074736E6F63;
        unint64_t v170 = 0xE600000000000000;
        sub_1B629C37C((uint64_t)v174, (uint64_t)&v175);
        if (v176 >= 0x3B)
        {
          uint64_t v34 = *(void *)(v177 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B68168F0(v174, (void (*)(void, void, void, void, void))sub_1B629C9E8);
          if (v34 && (sub_1B69FA7C0(v158), (v35 & 1) != 0))
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            if (qword_1EB9852D0 != -1) {
              swift_once();
            }
            float32x4_t v151 = (void (**)(char *, char *, uint64_t))v30;
            uint64_t v164 = 0;
            unint64_t v165 = 0xE000000000000000;
            uint64_t v143 = qword_1EB997FD0;
            swift_retain();
            sub_1B6E328C8();
            swift_bridgeObjectRelease();
            uint64_t v164 = 0xD00000000000001BLL;
            unint64_t v165 = (unint64_t)v138 | 0x8000000000000000;
            swift_bridgeObjectRetain();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            sub_1B6E31948();
            sub_1B6E31948();
            swift_bridgeObjectRelease();
            uint64_t v46 = v164;
            unint64_t v47 = v165;
            char v48 = sub_1B6E32158();
            if (qword_1EB9854F8 != -1) {
              swift_once();
            }
            unint64_t v142 = a3;
            *(void *)&long long v150 = v31;
            uint64_t v49 = qword_1EB997FF0;
            uint64_t v50 = qword_1EB985528;
            swift_retain();
            if (v50 != -1) {
              swift_once();
            }
            sub_1B681692C(0, (unint64_t *)&qword_1EB9855A0, (uint64_t (*)(uint64_t))sub_1B6816990, MEMORY[0x1E4FBBE00]);
            uint64_t v51 = swift_allocObject();
            *(_OWORD *)(v51 + 16) = v144;
            *(void *)(v51 + 56) = MEMORY[0x1E4FBB1A0];
            *(void *)(v51 + 64) = sub_1B678615C();
            *(void *)(v51 + 32) = v46;
            *(void *)(v51 + 40) = v47;
            swift_bridgeObjectRetain();
            sub_1B6E31258();
            swift_bridgeObjectRelease();
            swift_retain();
            id v52 = v146;
            sub_1B6E31088();
            uint64_t v53 = (uint64_t)v148;
            uint64_t v54 = v149[12];
            uint64_t v55 = v149[16];
            uint64_t v56 = v149[20];
            unint64_t v141 = v49;
            uint64_t v57 = (uint64_t *)&v148[v56];
            (*v145)(v148, v52, v147);
            *(unsigned char *)(v53 + v54) = v48;
            *(void *)(v53 + v55) = 0;
            uint64_t *v57 = v46;
            v57[1] = v47;
            swift_bridgeObjectRetain();
            sub_1B6E31368();
            swift_release();
            sub_1B67A3738(v53);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            unint64_t v31 = v150;
            uint64_t v30 = (uint64_t)v151;
            a3 = v142;
          }
        }
        else
        {
          int v32 = v158;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B68168F0(v174, (void (*)(void, void, void, void, void))sub_1B629C9E8);
          if (v32) {
            sub_1B68A1DAC((uint64_t)v174);
          }
          else {
            sub_1B68A2434((uint64_t)v174);
          }
        }
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        sub_1B6E31948();
      }
      sub_1B68168F0(v174, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      uint64_t v59 = v169;
      unint64_t v58 = v170;
      unint64_t v60 = v159;
      uint64_t v169 = v159;
      unint64_t v170 = a3;
      uint64_t v164 = v30;
      unint64_t v165 = v31;
      uint64_t v61 = sub_1B6E31128();
      uint64_t v62 = (uint64_t)v155;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v155, 1, 1, v61);
      sub_1B633AF88();
      unint64_t v63 = sub_1B6E32658();
      unint64_t v65 = v64;
      char v67 = v66;
      sub_1B6816864(v62);
      if (v67)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v27 = a3;
      }
      else
      {
        uint64_t v159 = sub_1B69CB890(v63, v65, v59, v58, v60, a3);
        unint64_t v27 = v68;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v156 + 1;
      a3 = v27;
      unint64_t v22 = v154;
    }
    while (v153 != v156 + 1);
  }
  else
  {
    unint64_t v27 = a3;
  }
  swift_bridgeObjectRelease_n();
  uint64_t v69 = (const char *)sub_1B6BD4428();
  if (v69)
  {
    uint64_t v70 = *((void *)v69 + 2);
    unint64_t v71 = v159;
    uint64_t v136 = v69;
    if (v70)
    {
      if (v158 == 1) {
        uint64_t v72 = 0x6C6174654DLL;
      }
      else {
        uint64_t v72 = 67;
      }
      unint64_t v73 = 0xE100000000000000;
      if (v158 == 1) {
        unint64_t v73 = 0xE500000000000000;
      }
      unint64_t v141 = v73;
      unint64_t v142 = v72;
      float32x4_t v151 = (void (**)(char *, char *, uint64_t))(v132 + 32);
      uint64_t v74 = (uint64_t)(v69 + 104);
      uint64_t v153 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v140 = (uint64_t)"};out = &#TEMP#[0]";
      uint64_t v138 = "CodeGenContext.typeAsCode: ";
      unint64_t v139 = 0x80000001B6F31700;
      unint64_t v137 = 0x80000001B6F31720;
      long long v150 = xmmword_1B6E77050;
      do
      {
        uint64_t v77 = *(void *)(v74 - 72);
        uint64_t v78 = *(void *)(v74 - 64);
        char v79 = sub_1B6E31A08();
        swift_bridgeObjectRetain();
        uint64_t v159 = v71;
        if (v79)
        {
          sub_1B6E318C8();
          sub_1B6E318F8();
          uint64_t v80 = sub_1B6E31A78();
          uint64_t v82 = v81;
          uint64_t v84 = v83;
          uint64_t v86 = v85;
          swift_bridgeObjectRelease();
          uint64_t v157 = MEMORY[0x1BA9B34C0](v80, v82, v84, v86);
          uint64_t v78 = v87;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v157 = v77;
        }
        int v88 = v158;
        sub_1B62B31E8(v74, (uint64_t)v160);
        sub_1B62B57A8(v160, v161);
        swift_bridgeObjectRetain();
        swift_dynamicCast();
        sub_1B629C678(v162, v163, &v164);
        unint64_t v89 = v165;
        uint64_t v90 = v168;
        uint64_t v169 = v164;
        unint64_t v170 = v165;
        uint64_t v171 = v166;
        uint64_t v172 = v167;
        uint64_t v173 = v168;
        uint64_t v156 = v70;
        uint64_t v154 = v74;
        if (v88 == 2)
        {
          v161[0] = 544499052;
          v161[1] = 0xE400000000000000;
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E31948();
          if (v89 >= 0x3B)
          {
            if (*(void *)(v90 + 16) && (sub_1B69FA7C0(2u), (v91 & 1) != 0))
            {
              swift_bridgeObjectRetain();
            }
            else
            {
              if (qword_1EB9852D0 != -1) {
                swift_once();
              }
              *(void *)&v160[0] = 0;
              *((void *)&v160[0] + 1) = 0xE000000000000000;
              long long v145 = (void (**)(char *, char *, uint64_t))qword_1EB997FD0;
              swift_retain();
              sub_1B6E328C8();
              swift_bridgeObjectRelease();
              *(void *)&v160[0] = 0xD00000000000001BLL;
              *((void *)&v160[0] + 1) = v139;
              swift_bridgeObjectRetain();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              sub_1B6E31948();
              sub_1B6E31948();
              long long v93 = v160[0];
              LODWORD(v152) = sub_1B6E32158();
              if (qword_1EB9854F8 != -1) {
                swift_once();
              }
              uint64_t v94 = qword_1EB997FF0;
              uint64_t v95 = qword_1EB985528;
              swift_retain();
              uint64_t v96 = MEMORY[0x1E4FBB1A0];
              if (v95 != -1) {
                swift_once();
              }
              sub_1B681692C(0, (unint64_t *)&qword_1EB9855A0, (uint64_t (*)(uint64_t))sub_1B6816990, MEMORY[0x1E4FBBE00]);
              uint64_t v97 = swift_allocObject();
              *(_OWORD *)(v97 + 16) = v150;
              *(void *)(v97 + 56) = v96;
              *(void *)(v97 + 64) = sub_1B678615C();
              *(_OWORD *)(v97 + 32) = v93;
              swift_bridgeObjectRetain();
              sub_1B6E31258();
              swift_bridgeObjectRelease();
              swift_retain();
              int v98 = v146;
              sub_1B6E31088();
              uint64_t v99 = v149[12];
              uint64_t v143 = v149[16];
              *(void *)&long long v144 = v94;
              uint64_t v100 = (uint64_t)v148;
              uint64_t v101 = &v148[v149[20]];
              (*v151)(v148, v98, v147);
              *(unsigned char *)(v100 + v99) = v152;
              *(void *)(v100 + v143) = 0;
              *(_OWORD *)uint64_t v101 = v93;
              swift_bridgeObjectRetain();
              sub_1B6E31368();
              swift_release();
              sub_1B67A3738(v100);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
            }
          }
          else
          {
            sub_1B68A163C((uint64_t)&v169);
          }
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B68168F0(&v164, (void (*)(void, void, void, void, void))sub_1B666BC88);
          unint64_t v102 = v161[1];
          uint64_t v103 = v161[0];
          uint64_t v104 = v157;
        }
        else
        {
          v161[0] = 0x2074736E6F63;
          v161[1] = 0xE600000000000000;
          if (v165 >= 0x3B)
          {
            if (*(void *)(v168 + 16) && (sub_1B69FA7C0(v158), (v92 & 1) != 0))
            {
              swift_bridgeObjectRetain();
            }
            else
            {
              if (qword_1EB9852D0 != -1) {
                swift_once();
              }
              *(void *)&v160[0] = 0;
              *((void *)&v160[0] + 1) = 0xE000000000000000;
              long long v145 = (void (**)(char *, char *, uint64_t))qword_1EB997FD0;
              swift_retain();
              sub_1B6E328C8();
              swift_bridgeObjectRelease();
              *(void *)&v160[0] = 0xD00000000000001BLL;
              *((void *)&v160[0] + 1) = v140 | 0x8000000000000000;
              swift_bridgeObjectRetain();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              sub_1B6E31948();
              sub_1B6E31948();
              swift_bridgeObjectRelease();
              long long v105 = v160[0];
              LODWORD(v152) = sub_1B6E32158();
              if (qword_1EB9854F8 != -1) {
                swift_once();
              }
              uint64_t v106 = qword_1EB997FF0;
              uint64_t v107 = qword_1EB985528;
              swift_retain();
              uint64_t v108 = MEMORY[0x1E4FBB1A0];
              if (v107 != -1) {
                swift_once();
              }
              sub_1B681692C(0, (unint64_t *)&qword_1EB9855A0, (uint64_t (*)(uint64_t))sub_1B6816990, MEMORY[0x1E4FBBE00]);
              uint64_t v109 = swift_allocObject();
              *(_OWORD *)(v109 + 16) = v150;
              *(void *)(v109 + 56) = v108;
              *(void *)(v109 + 64) = sub_1B678615C();
              *(_OWORD *)(v109 + 32) = v105;
              swift_bridgeObjectRetain();
              sub_1B6E31258();
              swift_bridgeObjectRelease();
              swift_retain();
              char v110 = v146;
              sub_1B6E31088();
              uint64_t v111 = v149[12];
              uint64_t v143 = v149[16];
              *(void *)&long long v144 = v106;
              uint64_t v112 = (uint64_t)v148;
              float v113 = &v148[v149[20]];
              (*v151)(v148, v110, v147);
              *(unsigned char *)(v112 + v111) = v152;
              *(void *)(v112 + v143) = 0;
              *(_OWORD *)float v113 = v105;
              swift_bridgeObjectRetain();
              sub_1B6E31368();
              swift_release();
              sub_1B67A3738(v112);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
            }
          }
          else if ((_BYTE)v158)
          {
            sub_1B68A1DAC((uint64_t)&v169);
          }
          else
          {
            sub_1B68A2434((uint64_t)&v169);
          }
          uint64_t v104 = v157;
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B6E31948();
          sub_1B68168F0(&v164, (void (*)(void, void, void, void, void))sub_1B666BC88);
          unint64_t v102 = v161[1];
          uint64_t v103 = v161[0];
        }
        unint64_t v71 = v159;
        v161[0] = v159;
        v161[1] = v27;
        *(void *)&v160[0] = v104;
        *((void *)&v160[0] + 1) = v78;
        uint64_t v114 = sub_1B6E31128();
        uint64_t v115 = (uint64_t)v155;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v155, 1, 1, v114);
        sub_1B633AF88();
        unint64_t v116 = sub_1B6E32658();
        unint64_t v118 = v117;
        char v120 = v119;
        sub_1B6816864(v115);
        if (v120)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v75 = v27;
        }
        else
        {
          unint64_t v71 = sub_1B69CB890(v116, v118, v103, v102, v71, v27);
          unint64_t v75 = v121;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v76 = v156;
        swift_bridgeObjectRelease_n();
        uint64_t v74 = v154 + 104;
        unint64_t v27 = v75;
        uint64_t v70 = v76 - 1;
      }
      while (v70);
    }
    else
    {
      unint64_t v75 = v27;
    }
    swift_bridgeObjectRelease();
    unint64_t v27 = v75;
  }
  else
  {
    unint64_t v71 = v159;
  }
  uint64_t v122 = *(void *)(v134 + 136);
  if (!*(void *)(v122 + 200)) {
    return v71;
  }
  v161[0] = *(void *)(v122 + 200);
  swift_bridgeObjectRetain_n();
  uint64_t v123 = v133;
  sub_1B6815E10(v161);
  if (!v123)
  {
    swift_bridgeObjectRelease();
    uint64_t v124 = v161[0];
    uint64_t v125 = *(void *)(v161[0] + 16);
    if (v125)
    {
      swift_retain();
      uint64_t v159 = v124;
      uint64_t v126 = (uint64_t *)(v124 + 40);
      do
      {
        uint64_t v127 = *(v126 - 1);
        uint64_t v128 = *v126;
        v161[0] = v71;
        v161[1] = v27;
        *(void *)&v160[0] = v127;
        *((void *)&v160[0] + 1) = v128;
        uint64_t v162 = 36;
        uint64_t v163 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        sub_1B633AF88();
        swift_bridgeObjectRetain();
        unint64_t v71 = sub_1B6E32618();
        unint64_t v130 = v129;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        unint64_t v27 = v130;
        v126 += 2;
        --v125;
      }
      while (v125);
      swift_release();
    }
    swift_release();
    return v71;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1B68142A8(uint64_t *a1)
{
  uint64_t v2 = v1;
  if (sub_1B6BD1094())
  {
    uint64_t v4 = (void *)v1[6];
    if (v4[2])
    {
      uint64_t v5 = v4[4];
      unint64_t v6 = v4[5];
      uint64_t v7 = v4[8];
      uint64_t v81 = v4[6];
      uint64_t v82 = v4[7];
      sub_1B629C9E8(v5, v6);
      uint64_t v8 = (void *)v2[11];
      if (!v8[2])
      {
        if (v6 != 59)
        {
          uint64_t v9 = 0;
          unint64_t v10 = 59;
LABEL_12:
          sub_1B666BC88(v5, v6);
          sub_1B666BC88(v9, v10);
          goto LABEL_13;
        }
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v8 = (void *)v1[11];
      if (!v8[2]) {
        goto LABEL_39;
      }
      uint64_t v7 = 0;
      uint64_t v81 = 0;
      uint64_t v82 = 0;
      uint64_t v5 = 0;
      unint64_t v6 = 59;
    }
    uint64_t v9 = v8[4];
    unint64_t v10 = v8[5];
    uint64_t v11 = v8[6];
    uint64_t v12 = v8[7];
    uint64_t v13 = v8[8];
    sub_1B629C9E8(v9, v10);
    if (v6 == 59)
    {
      if (v10 != 59)
      {
        unint64_t v6 = 59;
        goto LABEL_12;
      }
      goto LABEL_39;
    }
    if (v10 == 59) {
      goto LABEL_12;
    }
    uint64_t v99 = v5;
    unint64_t v100 = v6;
    uint64_t v101 = v81;
    uint64_t v102 = v82;
    uint64_t v103 = v7;
    uint64_t v94 = v9;
    unint64_t v95 = v10;
    uint64_t v96 = v11;
    uint64_t v97 = v12;
    uint64_t v98 = v13;
    sub_1B629C9E8(v5, v6);
    uint64_t v78 = sub_1B6A3D8B8();
    uint64_t v80 = v62;
    if (v78 == sub_1B6A3D8B8() && v80 == v63)
    {
      swift_bridgeObjectRelease_n();
      sub_1B666BC88(v9, v10);
      sub_1B666BC88(v5, v6);
      sub_1B666BC88(v5, v6);
      goto LABEL_39;
    }
    char v79 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B666BC88(v9, v10);
    sub_1B666BC88(v5, v6);
    sub_1B666BC88(v5, v6);
    if (v79)
    {
LABEL_39:
      unint64_t v64 = v2[7];
      if (v64 >> 62)
      {
        swift_bridgeObjectRetain();
        if (!sub_1B6E32C18()) {
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t v65 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v65) {
          goto LABEL_43;
        }
      }
      if ((v64 & 0xC000000000000001) != 0) {
        MEMORY[0x1BA9B4580](0, v64);
      }
      else {
        swift_retain();
      }
LABEL_43:
      swift_bridgeObjectRelease();
      unint64_t v66 = v2[12];
      if (v66 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v67 = sub_1B6E32C18();
        if (v67)
        {
LABEL_45:
          if ((v66 & 0xC000000000000001) != 0)
          {
            uint64_t v67 = MEMORY[0x1BA9B4580](0, v66);
          }
          else
          {
            uint64_t v67 = *(void *)(v66 + 32);
            swift_retain();
          }
        }
      }
      else
      {
        uint64_t v67 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v67) {
          goto LABEL_45;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v68 = *a1;
      *(void *)&v87[0] = 8201;
      *((void *)&v87[0] + 1) = 0xE200000000000000;
      unsigned __int8 v69 = *(unsigned char *)(v68 + 24);
      sub_1B629C37C(v67 + 56, (uint64_t)&v88);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B68168F0(&v88, (void (*)(void, void, void, void, void))sub_1B629C9E8);
      uint64_t v70 = sub_1B6BDE8D8();
      uint64_t v72 = v71;
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B689554C((uint64_t)&v88, v70, v72, 0, v69);
      swift_bridgeObjectRelease();
      sub_1B68168F0(&v88, (void (*)(void, void, void, void, void))sub_1B629DCAC);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6BDE8D8();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      unint64_t v73 = *(void **)(v68 + 128);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v68 + 128) = v73;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v73 = sub_1B6335858(0, v73[2] + 1, 1, v73);
        *(void *)(v68 + 128) = v73;
      }
      unint64_t v76 = v73[2];
      unint64_t v75 = v73[3];
      if (v76 >= v75 >> 1)
      {
        unint64_t v73 = sub_1B6335858(v75 > 1, v76 + 1, 1, v73);
        *(void *)(v68 + 128) = v73;
      }
      v73[2] = v76 + 1;
      uint64_t v77 = &v73[2 * v76];
      v77[4] = 8201;
      v77[5] = 0xE200000000000000;
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
LABEL_13:
  uint64_t v14 = *a1;
  char v15 = *(unsigned char *)(*a1 + 24);
  swift_retain();
  uint64_t v16 = sub_1B6AF6338(v15);
  unint64_t v18 = v17;
  swift_release();
  if (!v18)
  {
    uint64_t v51 = v2[3];
    uint64_t v50 = v2[4];
    uint64_t v90 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v88 = 0;
    *((void *)&v88 + 1) = 0xE000000000000000;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B6A3C61C(1701667182, 0xE400000000000000, (uint64_t)&v88, v87);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v88);
    sub_1B62B57A8(v87, &v88);
    swift_dynamicCast();
    uint64_t v52 = sub_1B6BD12F0();
    uint64_t v54 = v53;
    *(void *)&long long v88 = 0;
    *((void *)&v88 + 1) = 0xE000000000000000;
    sub_1B6E328C8();
    v87[0] = v88;
    uint64_t v84 = v52;
    swift_bridgeObjectRetain();
    sub_1B67BB63C();
    swift_bridgeObjectRelease();
    sub_1B6E32518();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1B6A04144();
    uint64_t v57 = v56;
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    swift_bridgeObjectRelease();
    *(void *)&long long v88 = v55;
    *((void *)&v88 + 1) = v57;
    uint64_t v89 = v59;
    uint64_t v90 = v61;
    sub_1B678C2E8();
    swift_bridgeObjectRetain();
    sub_1B6E31928();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    *(void *)&long long v88 = v51;
    *((void *)&v88 + 1) = v50;
    uint64_t v89 = v85;
    uint64_t v90 = v86;
    uint64_t v91 = v84;
    uint64_t v92 = v54;
    long long v93 = v87[0];
    sub_1B6AB44D0(&v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v19 = sub_1B6812A90(*(unsigned __int8 *)(v14 + 24), v16, v18);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v2[17];
  uint64_t v23 = *(void *)(v22 + 160);
  if (v23)
  {
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v83 = v14;
      uint64_t v25 = v2;
      uint64_t v26 = swift_bridgeObjectRetain() + 40;
      do
      {
        *(void *)&long long v88 = v19;
        *((void *)&v88 + 1) = v21;
        *(void *)&v87[0] = 36;
        *((void *)&v87[0] + 1) = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6BDE8D8();
        swift_bridgeObjectRelease();
        sub_1B633AF88();
        uint64_t v19 = sub_1B6E32618();
        uint64_t v28 = v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = v28;
        v26 += 16;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      uint64_t v22 = v25[17];
      uint64_t v14 = v83;
    }
  }
  uint64_t v29 = *(void *)(v22 + 200);
  if (v29)
  {
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30)
    {
      uint64_t v31 = swift_bridgeObjectRetain() + 40;
      do
      {
        *(void *)&long long v88 = v19;
        *((void *)&v88 + 1) = v21;
        *(void *)&v87[0] = 36;
        *((void *)&v87[0] + 1) = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B6BDE8D8();
        swift_bridgeObjectRelease();
        sub_1B633AF88();
        uint64_t v19 = sub_1B6E32618();
        uint64_t v33 = v32;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = v33;
        v31 += 16;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease();
    }
  }
  *(void *)&long long v88 = v19;
  *((void *)&v88 + 1) = v21;
  *(void *)&v87[0] = 0x23504D455423;
  *((void *)&v87[0] + 1) = 0xE600000000000000;
  sub_1B633AF88();
  if (sub_1B6E32678())
  {
    *(void *)&long long v88 = v19;
    *((void *)&v88 + 1) = v21;
    *(void *)&v87[0] = 0x23504D455423;
    *((void *)&v87[0] + 1) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6BDE8D8();
    swift_bridgeObjectRelease();
    sub_1B6E32618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(void *)&v87[0] = 10;
  *((void *)&v87[0] + 1) = 0xE100000000000000;
  uint64_t v34 = sub_1B6E32618();
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  *(void *)&long long v88 = v34;
  *((void *)&v88 + 1) = v36;
  uint64_t v37 = sub_1B6E32688();
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v37 + 16);
  if (!v38) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = (uint64_t *)(v37 + 56);
  do
  {
    uint64_t v40 = *(v39 - 3);
    uint64_t v41 = *(v39 - 2);
    uint64_t v43 = *(v39 - 1);
    uint64_t v42 = *v39;
    *(void *)&long long v88 = 8201;
    *((void *)&v88 + 1) = 0xE200000000000000;
    swift_bridgeObjectRetain();
    swift_retain();
    MEMORY[0x1BA9B34C0](v40, v41, v43, v42);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v44 = *(void **)(v14 + 128);
    swift_bridgeObjectRetain();
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v14 + 128) = v44;
    if ((v45 & 1) == 0)
    {
      uint64_t v44 = sub_1B6335858(0, v44[2] + 1, 1, v44);
      *(void *)(v14 + 128) = v44;
    }
    unint64_t v47 = v44[2];
    unint64_t v46 = v44[3];
    if (v47 >= v46 >> 1)
    {
      uint64_t v44 = sub_1B6335858(v46 > 1, v47 + 1, 1, v44);
      *(void *)(v14 + 128) = v44;
    }
    _OWORD v44[2] = v47 + 1;
    char v48 = &v44[2 * v47];
    v48[4] = 8201;
    v48[5] = 0xE200000000000000;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v39 += 4;
    --v38;
  }
  while (v38);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B6815040()
{
  return sub_1B681573C();
}

uint64_t sub_1B6815054()
{
  return sub_1B6E318B8();
}

uint64_t sub_1B6815068()
{
  return sub_1B681578C();
}

uint64_t sub_1B681507C@<X0>(BOOL *a1@<X8>)
{
  return sub_1B68157E4(a1);
}

void sub_1B6815088(void *a1@<X8>)
{
  *a1 = 0x656372756F73;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1B68150A0()
{
  return 0x656372756F73;
}

uint64_t sub_1B68150B4@<X0>(BOOL *a1@<X8>)
{
  return sub_1B6815840(a1);
}

uint64_t sub_1B68150C0(uint64_t a1)
{
  unint64_t v2 = sub_1B6815DBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68150FC(uint64_t a1)
{
  unint64_t v2 = sub_1B6815DBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B6815138(void *a1)
{
  return sub_1B68124D8(a1);
}

uint64_t _s17CustomCodeSnippetCMa()
{
  return self;
}

uint64_t sub_1B68151A8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 1832))();
}

uint64_t sub_1B68151F4()
{
  return sub_1B6815614(36, 0xD000000000000015, 0x80000001B6F386F0);
}

uint64_t sub_1B6815218()
{
  return sub_1B681573C();
}

uint64_t sub_1B6815228()
{
  return sub_1B681578C();
}

uint64_t sub_1B6815238@<X0>(BOOL *a1@<X8>)
{
  return sub_1B68157E4(a1);
}

uint64_t sub_1B6815244@<X0>(BOOL *a1@<X8>)
{
  return sub_1B6815840(a1);
}

uint64_t sub_1B6815250(uint64_t a1)
{
  unint64_t v2 = sub_1B6816764();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B681528C(uint64_t a1)
{
  unint64_t v2 = sub_1B6816764();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B68152C8(void *a1)
{
  return sub_1B6815314(a1);
}

void *sub_1B6815314(void *a1)
{
  uint64_t v3 = v1;
  sub_1B68167B8(0, &qword_1E9DD1098, (uint64_t (*)(void))sub_1B6816764, (uint64_t)&_s15VariableSnippetC10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v18 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v16 - v8;
  unint64_t v10 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6816764();
  swift_retain();
  uint64_t v11 = v10;
  sub_1B6E33A48();
  if (v2)
  {
    swift_release();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    _s15VariableSnippetCMa();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v18;
    sub_1B629DD00();
    sub_1B6E32DF8();
    uint64_t v14 = v17;
    long long v15 = v16[1];
    *(_OWORD *)(v3 + 144) = v16[0];
    *(_OWORD *)(v3 + 160) = v15;
    *(void *)(v3 + 176) = v14;
    swift_release();
    sub_1B62C1550((uint64_t)a1, (uint64_t)v16);
    uint64_t v11 = sub_1B68124D8(v16);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v6);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v11;
}

uint64_t sub_1B6815574(void *a1)
{
  return sub_1B6815C08(a1, &qword_1E9DD1088, (uint64_t (*)(void))sub_1B6816764, (uint64_t)&_s15VariableSnippetC10CodingKeysON, (void (*)(void))sub_1B6816764);
}

uint64_t _s15VariableSnippetCMa()
{
  return self;
}

uint64_t sub_1B68155F0()
{
  return sub_1B6815614(45, 0xD00000000000001ELL, 0x80000001B6F386D0);
}

uint64_t sub_1B6815614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  uint64_t v9 = a2;
  uint64_t v10 = a3;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v7 = 0;
  *((void *)&v7 + 1) = 0xE000000000000000;
  sub_1B6A3C61C(1701667182, 0xE400000000000000, (uint64_t)&v7, v6);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v7);
  sub_1B62B57A8(v6, &v7);
  swift_dynamicCast();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return v9;
}

uint64_t sub_1B681573C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B681578C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B68157D8@<X0>(BOOL *a1@<X8>)
{
  return sub_1B68157E4(a1);
}

uint64_t sub_1B68157E4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B6815834@<X0>(BOOL *a1@<X8>)
{
  return sub_1B6815840(a1);
}

uint64_t sub_1B6815840@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B6815894(uint64_t a1)
{
  unint64_t v2 = sub_1B6816710();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68158D0(uint64_t a1)
{
  unint64_t v2 = sub_1B6816710();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B681590C(void *a1)
{
  return sub_1B6815958(a1);
}

void *sub_1B6815958(void *a1)
{
  uint64_t v3 = v1;
  sub_1B68167B8(0, &qword_1E9DD1080, (uint64_t (*)(void))sub_1B6816710, (uint64_t)&_s24VariableReferenceSnippetC10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v18 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)v16 - v8;
  uint64_t v10 = sub_1B62C14BC(a1, a1[3]);
  sub_1B6816710();
  swift_retain();
  uint64_t v11 = v10;
  sub_1B6E33A48();
  if (v2)
  {
    swift_release();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    _s24VariableReferenceSnippetCMa();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v18;
    sub_1B629DD00();
    sub_1B6E32DF8();
    uint64_t v14 = v17;
    long long v15 = v16[1];
    *(_OWORD *)(v3 + 144) = v16[0];
    *(_OWORD *)(v3 + 160) = v15;
    *(void *)(v3 + 176) = v14;
    swift_release();
    sub_1B62C1550((uint64_t)a1, (uint64_t)v16);
    uint64_t v11 = sub_1B68124D8(v16);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v6);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v11;
}

uint64_t sub_1B6815BB8(void *a1)
{
  return sub_1B6815C08(a1, &qword_1E9DD1070, (uint64_t (*)(void))sub_1B6816710, (uint64_t)&_s24VariableReferenceSnippetC10CodingKeysON, (void (*)(void))sub_1B6816710);
}

uint64_t sub_1B6815C08(void *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, void (*a5)(void))
{
  sub_1B68167B8(0, a2, a3, a4, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  uint64_t v14 = (char *)v20 - v13;
  uint64_t result = sub_1B68127FC(a1);
  if (!v6)
  {
    uint64_t v24 = v11;
    uint64_t v16 = a5;
    uint64_t v17 = a1[3];
    v20[1] = a1[4];
    sub_1B62C14BC(a1, v17);
    v16();
    sub_1B6E33A88();
    uint64_t v18 = *(void *)(v5 + 176);
    long long v19 = *(_OWORD *)(v5 + 160);
    long long v21 = *(_OWORD *)(v5 + 144);
    long long v22 = v19;
    uint64_t v23 = v18;
    sub_1B6646C2C();
    sub_1B6E32FA8();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v10);
  }
  return result;
}

uint64_t _s24VariableReferenceSnippetCMa()
{
  return self;
}

unint64_t sub_1B6815DBC()
{
  unint64_t result = qword_1E9DD1068;
  if (!qword_1E9DD1068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1068);
  }
  return result;
}

uint64_t sub_1B6815E10(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B6D6721C(v2);
  }
  uint64_t v3 = *(uint64_t **)(v2 + 16);
  v5[0] = (uint64_t *)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_1B6815E84(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1B6815E7C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1B6BD8BB8(a1, a2, a3, v3);
}

uint64_t sub_1B6815E84(uint64_t **a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = (uint64_t)a1[1];
  uint64_t result = sub_1B6E33068();
  if (result >= v2)
  {
    if ((unint64_t)v2 >= 2)
    {
      uint64_t v7 = *v1;
      uint64_t v8 = -1;
      uint64_t v9 = 1;
      uint64_t v10 = *v1;
      do
      {
        uint64_t v11 = &v7[2 * v9];
        uint64_t v12 = *v11;
        uint64_t v13 = v11[1];
        uint64_t v14 = v8;
        long long v15 = v10;
        do
        {
          uint64_t result = *v15;
          if (*v15 == v12 && v15[1] == v13) {
            break;
          }
          uint64_t result = sub_1B6E334B8();
          if ((result & 1) == 0) {
            break;
          }
          uint64_t v12 = v15[2];
          uint64_t v13 = v15[3];
          *((_OWORD *)v15 + 1) = *(_OWORD *)v15;
          *long long v15 = v12;
          v15[1] = v13;
          v15 -= 2;
        }
        while (!__CFADD__(v14++, 1));
        ++v9;
        v10 += 2;
        --v8;
      }
      while (v9 != v2);
    }
    return result;
  }
  uint64_t v80 = result;
  if (v2 >= 0) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = v2 + 1;
  }
  if (v2 < -1)
  {
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  if (v2 < 2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v2 != 1)
    {
      unint64_t v22 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      long long v21 = (char *)MEMORY[0x1E4FBC860];
      goto LABEL_93;
    }
    uint64_t v79 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v5 = v4 >> 1;
    uint64_t v6 = sub_1B6E31C98();
    *(void *)(v6 + 16) = v5;
    uint64_t v79 = v6;
    __dst = (char *)(v6 + 32);
  }
  uint64_t v19 = 0;
  uint64_t v20 = *v1;
  uint64_t v77 = v1;
  uint64_t v78 = (uint64_t)(*v1 + 1);
  long long v21 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v81 = v2;
  while (2)
  {
    uint64_t v23 = v19++;
    if (v19 >= v2) {
      goto LABEL_53;
    }
    uint64_t v24 = &v20[2 * v19];
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = &v20[2 * v23];
    if (*v27 == v25 && v27[1] == v26)
    {
      uint64_t v30 = v23 + 2;
      if (v23 + 2 >= v2) {
        goto LABEL_52;
      }
      int v29 = 0;
      goto LABEL_35;
    }
    int v29 = sub_1B6E334B8();
    uint64_t v30 = v23 + 2;
    if (v23 + 2 < v2)
    {
LABEL_35:
      uint64_t v31 = (void *)(v78 + 16 * v30);
      do
      {
        uint64_t v33 = &v20[2 * v19];
        if (*v33 == *(v31 - 1) && v33[1] == *v31)
        {
          if (v29) {
            goto LABEL_47;
          }
        }
        else if ((v29 ^ sub_1B6E334B8()))
        {
          goto LABEL_46;
        }
        v31 += 2;
        uint64_t v32 = v30 + 1;
        uint64_t v19 = v30;
        uint64_t v30 = v32;
      }
      while (v32 < v2);
      uint64_t v30 = v32;
    }
LABEL_46:
    uint64_t v19 = v30;
    if ((v29 & 1) == 0) {
      goto LABEL_53;
    }
LABEL_47:
    if (v23 < v30)
    {
      uint64_t v35 = 2 * v30;
      uint64_t v36 = 2 * v23;
      uint64_t v37 = v30;
      uint64_t v38 = v23;
      do
      {
        if (v38 != --v37)
        {
          uint64_t v39 = &v20[v35];
          uint64_t v40 = v20[v36];
          uint64_t v41 = v20[v36 + 1];
          *(_OWORD *)&v20[v36] = *(_OWORD *)&v20[v35 - 2];
          *(v39 - 2) = v40;
          *(v39 - 1) = v41;
        }
        ++v38;
        v35 -= 2;
        v36 += 2;
      }
      while (v38 < v37);
    }
LABEL_52:
    uint64_t v19 = v30;
LABEL_53:
    if (v19 < v2 && v19 - v23 < v80)
    {
      uint64_t v42 = v23 + v80 >= v2 ? v2 : v23 + v80;
      if (v19 != v42)
      {
        uint64_t v43 = &v20[2 * v19];
        do
        {
          uint64_t v44 = &v20[2 * v19];
          uint64_t v45 = *v44;
          uint64_t v46 = v44[1];
          uint64_t v47 = v23;
          char v48 = v43;
          do
          {
            if (*(v48 - 2) == v45 && *(v48 - 1) == v46) {
              break;
            }
            if ((sub_1B6E334B8() & 1) == 0) {
              break;
            }
            uint64_t v45 = *v48;
            uint64_t v46 = v48[1];
            *(_OWORD *)char v48 = *((_OWORD *)v48 - 1);
            *(v48 - 1) = v46;
            *(v48 - 2) = v45;
            v48 -= 2;
            ++v47;
          }
          while (v19 != v47);
          ++v19;
          v43 += 2;
        }
        while (v19 != v42);
        uint64_t v19 = v42;
        uint64_t v2 = v81;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v21 = sub_1B62BD890(0, *((void *)v21 + 2) + 1, 1, v21);
    }
    unint64_t v51 = *((void *)v21 + 2);
    unint64_t v50 = *((void *)v21 + 3);
    unint64_t v22 = v51 + 1;
    if (v51 >= v50 >> 1) {
      long long v21 = sub_1B62BD890(v50 > 1, v51 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v22;
    uint64_t v52 = v21 + 32;
    uint64_t v53 = &v21[16 * v51 + 32];
    *(void *)uint64_t v53 = v23;
    *((void *)v53 + 1) = v19;
    if (!v51)
    {
      unint64_t v22 = 1;
      goto LABEL_25;
    }
    while (1)
    {
      uint64_t v54 = v22 - 1;
      if (v22 >= 4)
      {
        uint64_t v59 = &v52[16 * v22];
        uint64_t v60 = *((void *)v59 - 7) - *((void *)v59 - 8);
        uint64_t v57 = *((void *)v59 - 5) - *((void *)v59 - 6);
        uint64_t v58 = v22 - 2;
        uint64_t v61 = &v52[16 * v22 - 32];
        uint64_t v55 = *(void *)v61;
        uint64_t v56 = *((void *)v61 + 1);
        if (v57 - v55 + v56 >= v60)
        {
          BOOL v64 = v57 < *(void *)&v52[16 * v54 + 8] - *(void *)&v52[16 * v54];
LABEL_85:
          if (v64) {
            uint64_t v54 = v58;
          }
          goto LABEL_87;
        }
      }
      else
      {
        if (v22 != 3)
        {
          uint64_t v62 = *(void *)&v52[16 * v22 - 24] - *(void *)&v52[16 * v22 - 32];
          uint64_t v63 = *(void *)&v52[16 * v54 + 8] - *(void *)&v52[16 * v54];
          goto LABEL_82;
        }
        uint64_t v55 = *((void *)v21 + 6);
        uint64_t v56 = *((void *)v21 + 7);
        uint64_t v57 = *((void *)v21 + 5) - *((void *)v21 + 4);
        uint64_t v58 = 1;
      }
      uint64_t v62 = v56 - v55;
      uint64_t v63 = *(void *)&v52[16 * v54 + 8] - *(void *)&v52[16 * v54];
      if (v62 + v63 >= v57)
      {
        BOOL v64 = v57 < v63;
        goto LABEL_85;
      }
LABEL_82:
      if (v63 < v62) {
        break;
      }
LABEL_87:
      uint64_t v65 = v21;
      unint64_t v66 = &v52[16 * v54 - 16];
      uint64_t v67 = *(void *)v66;
      uint64_t v68 = &v52[16 * v54];
      uint64_t v69 = *((void *)v68 + 1);
      sub_1B6816474((char *)&v20[2 * *(void *)v66], (char *)&v20[2 * *(void *)v68], (unint64_t)&v20[2 * v69], __dst);
      if (v83) {
        goto LABEL_90;
      }
      *(void *)unint64_t v66 = v67;
      *((void *)v66 + 1) = v69;
      long long v21 = v65;
      unint64_t v70 = *((void *)v65 + 2);
      unint64_t v22 = v70 - 1;
      memmove(&v52[16 * v54], v68 + 16, 16 * (v70 - 1 - v54));
      *((void *)v65 + 2) = v70 - 1;
      uint64_t v2 = v81;
      if (v70 <= 2) {
        goto LABEL_25;
      }
    }
    uint64_t v2 = v81;
LABEL_25:
    if (v19 < v2) {
      continue;
    }
    break;
  }
  uint64_t v18 = v79;
  uint64_t v1 = v77;
LABEL_93:
  uint64_t v79 = v18;
  if (v22 >= 2)
  {
    uint64_t v71 = *v1;
    do
    {
      uint64_t v72 = *(void *)&v21[16 * v22];
      unint64_t v73 = &v21[16 * v22 + 16];
      uint64_t v74 = *((void *)v73 + 1);
      sub_1B6816474((char *)&v71[2 * v72], (char *)&v71[2 * *(void *)v73], (unint64_t)&v71[2 * v74], __dst);
      if (v83) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v21 = sub_1B6D671B8((uint64_t)v21);
      }
      unint64_t v75 = &v21[16 * v22];
      *(void *)unint64_t v75 = v72;
      *((void *)v75 + 1) = v74;
      unint64_t v76 = *((void *)v21 + 2);
      memmove(&v21[16 * v22 + 16], &v21[16 * v22 + 32], 16 * (v76 - v22));
      *((void *)v21 + 2) = v76 - 1;
      unint64_t v22 = v76 - 1;
    }
    while (v76 > 2);
  }
LABEL_90:
  swift_bridgeObjectRelease();
  *(void *)(v79 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6816474(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        uint64_t v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = v21 == *((void *)v17 - 2) && v22 == *((void *)v17 - 1);
          if (v23 || (sub_1B6E334B8() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            uint64_t v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v4 == *(void *)v6 && *((void *)v4 + 1) == *((void *)v6 + 1);
        if (v15 || (sub_1B6E334B8() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1B6D669EC((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

unint64_t sub_1B6816710()
{
  unint64_t result = qword_1E9DD1078;
  if (!qword_1E9DD1078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1078);
  }
  return result;
}

unint64_t sub_1B6816764()
{
  unint64_t result = qword_1E9DD1090;
  if (!qword_1E9DD1090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1090);
  }
  return result;
}

void sub_1B68167B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B6816820(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    _s17CodeSourceSnippetCMa();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B6816864(uint64_t a1)
{
  sub_1B681692C(0, (unint64_t *)&qword_1EB97D9D0, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1B68168F0(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

void sub_1B681692C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1B6816990()
{
  unint64_t result = qword_1EB9852E0;
  if (!qword_1EB9852E0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB9852E0);
  }
  return result;
}

ValueMetadata *_s15VariableSnippetC10CodingKeysOMa()
{
  return &_s15VariableSnippetC10CodingKeysON;
}

ValueMetadata *_s24VariableReferenceSnippetC10CodingKeysOMa()
{
  return &_s24VariableReferenceSnippetC10CodingKeysON;
}

unsigned char *_s15VariableSnippetC10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B6816AA8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s17CustomCodeSnippetC10CodingKeysOMa()
{
  return &_s17CustomCodeSnippetC10CodingKeysON;
}

unint64_t sub_1B6816AE4()
{
  unint64_t result = qword_1E9DD10A8;
  if (!qword_1E9DD10A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD10A8);
  }
  return result;
}

unint64_t sub_1B6816B3C()
{
  unint64_t result = qword_1E9DD10B0;
  if (!qword_1E9DD10B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD10B0);
  }
  return result;
}

unint64_t sub_1B6816B94()
{
  unint64_t result = qword_1E9DD10B8;
  if (!qword_1E9DD10B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD10B8);
  }
  return result;
}

unint64_t sub_1B6816BEC()
{
  unint64_t result = qword_1E9DD10C0;
  if (!qword_1E9DD10C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD10C0);
  }
  return result;
}

unint64_t sub_1B6816C44()
{
  unint64_t result = qword_1E9DD10C8;
  if (!qword_1E9DD10C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD10C8);
  }
  return result;
}

unint64_t sub_1B6816C9C()
{
  unint64_t result = qword_1E9DD10D0;
  if (!qword_1E9DD10D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD10D0);
  }
  return result;
}

unint64_t sub_1B6816CF4()
{
  unint64_t result = qword_1E9DD10D8;
  if (!qword_1E9DD10D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD10D8);
  }
  return result;
}

unint64_t sub_1B6816D4C()
{
  unint64_t result = qword_1E9DD10E0;
  if (!qword_1E9DD10E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD10E0);
  }
  return result;
}

unint64_t sub_1B6816DA4()
{
  unint64_t result = qword_1E9DD10E8;
  if (!qword_1E9DD10E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD10E8);
  }
  return result;
}

uint64_t sub_1B6816DFC(unint64_t *a1, unint64_t *a2)
{
  return sub_1B6818628(*a1, *a2);
}

uint64_t sub_1B6816E08()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000008;
  byte_1E9E49328 = 1;
  qword_1E9E49330 = result | 0x6000000000000004;
  byte_1E9E49338 = 0;
  return result;
}

uint64_t sub_1B6816E60()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x8000000000000008;
  byte_1E9E49340 = 1;
  qword_1E9E49348 = result | 0x6000000000000000;
  byte_1E9E49350 = 0;
  return result;
}

uint64_t sub_1B6816EB0()
{
  if (qword_1E9DCC4A0 != -1) {
    swift_once();
  }
  int v1 = byte_1E9E49328;
  unint64_t v2 = qword_1E9E49330;
  char v3 = byte_1E9E49338;
  unint64_t v4 = MEMORY[0x1E4FBC860];
  v10[0] = sub_1B68CE644(MEMORY[0x1E4FBC860]);
  v10[1] = v5;
  sub_1B68BB144((uint64_t)sub_1B6818584, 0, v1, v2, v3, v4, (uint64_t)v10);
  uint64_t v6 = v10[0];
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v0 + 16);
  if ((v7 & 0x8000000000000000) != 0 || (v7 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t)sub_1B69FFA28(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
  }
  v10[0] = v8;
  swift_bridgeObjectRetain();
  sub_1B68192FC(v10, v6, (uint64_t (*)(uint64_t))sub_1B6D67280, (void (*)(void))type metadata accessor for Node, (void (*)(uint64_t **, uint64_t **, char **))sub_1B6D66D04);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v10[0];
}

uint64_t sub_1B681706C()
{
  if (qword_1E9DCC4A0 != -1) {
    swift_once();
  }
  char v1 = byte_1E9E49328;
  unint64_t v2 = qword_1E9E49330;
  char v3 = byte_1E9E49338;
  unint64_t v4 = MEMORY[0x1E4FBC860];
  v10[0] = sub_1B68CE644(MEMORY[0x1E4FBC860]);
  v10[1] = v5;
  sub_1B68BB514((uint64_t)sub_1B68185B0, 0, v1, v2, v3, v4, (uint64_t)v10);
  uint64_t v6 = v10[0];
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v0 + 24);
  if ((v7 & 0x8000000000000000) != 0 || (v7 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t)sub_1B69FFBA4(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
  }
  v10[0] = v8;
  swift_bridgeObjectRetain();
  sub_1B68192FC(v10, v6, (uint64_t (*)(uint64_t))sub_1B6D6726C, (void (*)(void))type metadata accessor for AuthoringNode, (void (*)(uint64_t **, uint64_t **, char **))sub_1B6D66D04);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v10[0];
}

uint64_t sub_1B6817228(uint64_t a1, uint64_t a2)
{
  void (*v16)(uint64_t *__return_ptr, long long *);
  uint64_t v17;
  uint64_t v18;
  void v20[5];
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  uint64_t v25;

  uint64_t v2 = *(void *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 32);
  BOOL v23 = *(_OWORD *)(a1 + 16);
  uint64_t v24 = v3;
  uint64_t v22 = *(_OWORD *)a1;
  uint64_t v4 = *(void *)(v2 + 16);
  int64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1B6C3C644(0, v5, 0);
    uint64_t v7 = 0;
    uint64_t v6 = v21;
    unint64_t v8 = *(void *)(v21 + 16);
    uint64_t v9 = 16 * v8;
    do
    {
      uint64_t v10 = *(void *)(v4 + v7 + 32);
      uint64_t v11 = *(void *)(v4 + v7 + 40);
      *(void *)&uint64_t v21 = v6;
      unint64_t v12 = *(void *)(v6 + 24);
      swift_retain();
      if (v8 >= v12 >> 1)
      {
        sub_1B6C3C644(v12 > 1, v8 + 1, 1);
        uint64_t v6 = v21;
      }
      *(void *)(v6 + 16) = v8 + 1;
      uint64_t v13 = v6 + v9 + v7;
      *(void *)(v13 + 32) = v10;
      *(void *)(v13 + 40) = v11;
      v7 += 16;
      ++v8;
      --v5;
    }
    while (v5);
    a1 = swift_bridgeObjectRelease();
  }
  MEMORY[0x1F4188790](a1, a2);
  void v20[2] = &v22;
  uint64_t v14 = sub_1B68193D0(v6, sub_1B681877C, (uint64_t)v20, (void (*)(BOOL, uint64_t, uint64_t))sub_1B6C3D938);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v16 = (void (*)(uint64_t *__return_ptr, long long *))*((void *)&v23 + 1);
    swift_bridgeObjectRetain();
    uint64_t v17 = 1;
    uint64_t v18 = 40;
    do
    {
      uint64_t v21 = *(_OWORD *)(v14 + v18);
      swift_retain_n();
      v16(&v25, &v21);
      swift_release();
      swift_release();
      v17 += v25;
      v18 += 24;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 1;
  }
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1B6817434(long long *a1)
{
  void (*v10)(uint64_t *__return_ptr, long long *);
  uint64_t v11;
  uint64_t v12;
  void v14[4];
  long long v15;
  uint64_t v16;
  long long v17;
  long long v18;
  long long v19;
  void v20[6];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  long long v1 = a1[1];
  long long v2 = a1[2];
  uint64_t v17 = *a1;
  uint64_t v18 = v1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v19 = v2;
  (*(void (**)(void *__return_ptr))(**(void **)(v3 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) + 152))(v20);
  uint64_t v4 = v20[0];
  uint64_t v26 = v20[0];
  uint64_t v25 = v20[1];
  sub_1B62D8C3C((uint64_t)&v25);
  uint64_t v24 = v20[2];
  sub_1B62D8C3C((uint64_t)&v24);
  BOOL v23 = v20[3];
  sub_1B62D8C3C((uint64_t)&v23);
  uint64_t v22 = v20[4];
  sub_1B62D8C3C((uint64_t)&v22);
  uint64_t v21 = v20[5];
  sub_1B62D8C3C((uint64_t)&v21);
  unint64_t v5 = *(void *)(v4 + 16);
  sub_1B62D8C3C((uint64_t)&v26);
  if (*(void *)(*(void *)(v3 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16) <= v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16);
  }
  swift_retain();
  uint64_t v7 = sub_1B6D2AEA8(0, v6, v3);
  swift_release();
  v14[2] = &v17;
  uint64_t v8 = sub_1B68193D0(v7, sub_1B68196E8, (uint64_t)v14, (void (*)(BOOL, uint64_t, uint64_t))sub_1B6C3DB14);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = (void (*)(uint64_t *__return_ptr, long long *))*((void *)&v18 + 1);
    swift_bridgeObjectRetain();
    uint64_t v11 = 1;
    unint64_t v12 = 40;
    do
    {
      uint64_t v15 = *(_OWORD *)(v8 + v12);
      swift_retain_n();
      v10(&v16, &v15);
      swift_release();
      swift_release();
      v11 += v16;
      v12 += 24;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 1;
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B6817658(uint64_t a1)
{
  return sub_1B68176B0(a1, (uint64_t (*)(uint64_t))sub_1B6816EB0, (void (*)(uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, int, uint64_t))sub_1B6D2A178);
}

uint64_t sub_1B6817684(uint64_t a1)
{
  return sub_1B68176B0(a1, (uint64_t (*)(uint64_t))sub_1B681706C, (void (*)(uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, int, uint64_t))sub_1B6D2A7BC);
}

uint64_t sub_1B68176B0(uint64_t a1, uint64_t (*a2)(uint64_t), void (*a3)(uint64_t, void, void, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, int, uint64_t))
{
  sub_1B6E33B48();
  sub_1B6E31948();
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t v29 = MEMORY[0x1E4FBC870];
  unint64_t v5 = a2(v4);
  if (v5 >> 62)
  {
    unint64_t v22 = v5;
    uint64_t v6 = sub_1B6E32C18();
    unint64_t v5 = v22;
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 0;
      unint64_t v28 = v5 & 0xC000000000000001;
      unint64_t v25 = v5 + 32;
      unint64_t v26 = v5;
      do
      {
        if (v28)
        {
          uint64_t v16 = MEMORY[0x1BA9B4580](v7, v26);
        }
        else
        {
          uint64_t v16 = *(void *)(v25 + 8 * v7);
          swift_retain();
        }
        if (*(void *)(v29 + 16))
        {
          uint64_t v17 = sub_1B6E33908();
          uint64_t v18 = -1 << *(unsigned char *)(v29 + 32);
          unint64_t v19 = v17 & ~v18;
          if ((*(void *)(v29 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
          {
            uint64_t v20 = *(void *)(v29 + 48);
            if (*(void *)(v20 + 8 * v19) == v16) {
              goto LABEL_5;
            }
            uint64_t v21 = ~v18;
            while (1)
            {
              unint64_t v19 = (v19 + 1) & v21;
              if (((*(void *)(v29 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
                break;
              }
              if (*(void *)(v20 + 8 * v19) == v16) {
                goto LABEL_5;
              }
            }
          }
        }
        uint64_t v8 = swift_allocObject();
        *(void *)(v8 + 16) = 0;
        *(void *)(v8 + 24) = 0xE000000000000000;
        uint64_t v9 = swift_allocObject();
        *(void *)(v9 + 16) = 0;
        uint64_t v10 = swift_allocObject();
        uint64_t v11 = MEMORY[0x1E4FBC860];
        *(void *)(v10 + 16) = sub_1B67F65B8(MEMORY[0x1E4FBC860]);
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = sub_1B67F46A8(v11);
        uint64_t v13 = swift_retain();
        LOBYTE(v24) = 0;
        a3(v13, 0, 0, 8224, 0xE200000000000000, v8, v12, v10, v24, v9);
        swift_release();
        swift_bridgeObjectRetain();
        uint64_t v14 = swift_bridgeObjectRetain();
        uint64_t v15 = sub_1B6B65EBC(v14);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6817BF8(v15, (void (*)(unsigned char *, void))sub_1B67E9934);
LABEL_5:
        ++v7;
        swift_release();
      }
      while (v7 != v6);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B67B79C8(2);
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return 60;
}

uint64_t sub_1B6817A68(uint64_t a1)
{
  return sub_1B6817BF8(a1, (void (*)(unsigned char *, void))sub_1B637E330);
}

uint64_t sub_1B6817A80(uint64_t a1)
{
  uint64_t v2 = 0;
  uint64_t v3 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    uint64_t v13 = v2 + 1;
    if (v2 + 1 >= v7) {
      goto LABEL_21;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    if (!v14)
    {
      uint64_t v13 = v2 + 2;
      if (v2 + 2 >= v7) {
        goto LABEL_21;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v13);
      if (!v14)
      {
        uint64_t v13 = v2 + 3;
        if (v2 + 3 >= v7) {
          goto LABEL_21;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v13);
        if (!v14)
        {
          uint64_t v13 = v2 + 4;
          if (v2 + 4 >= v7) {
            goto LABEL_21;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v13);
          if (!v14)
          {
            uint64_t v13 = v2 + 5;
            if (v2 + 5 >= v7) {
              goto LABEL_21;
            }
            unint64_t v14 = *(void *)(v3 + 8 * v13);
            if (!v14) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v13 << 6);
    uint64_t v2 = v13;
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1B638E648(&v16, v11, v12);
    swift_bridgeObjectRelease();
  }
  while (v7 - 6 != v2)
  {
    unint64_t v14 = *(void *)(v3 + 48 + 8 * v2++);
    if (v14)
    {
      uint64_t v13 = v2 + 5;
      goto LABEL_20;
    }
  }
LABEL_21:

  return swift_release();
}

uint64_t sub_1B6817BF8(uint64_t a1, void (*a2)(unsigned char *, void))
{
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    uint64_t v12 = v4 + 1;
    if (v4 + 1 >= v9) {
      goto LABEL_21;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    if (!v13)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        goto LABEL_21;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v12);
      if (!v13)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          goto LABEL_21;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v12);
        if (!v13)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            goto LABEL_21;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v12);
          if (!v13)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              goto LABEL_21;
            }
            unint64_t v13 = *(void *)(v5 + 8 * v12);
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    uint64_t v4 = v12;
LABEL_5:
    a2(v15, *(void *)(*(void *)(a1 + 48) + 8 * v11));
  }
  while (v9 - 6 != v4)
  {
    unint64_t v13 = *(void *)(v5 + 48 + 8 * v4++);
    if (v13)
    {
      uint64_t v12 = v4 + 5;
      goto LABEL_20;
    }
  }
LABEL_21:

  return swift_release();
}

void sub_1B6817D5C(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = MEMORY[0x1E4FBC860];
  a1[1] = v1;
  a1[2] = &unk_1F0F9F0F8;
  a1[3] = v1;
  a1[4] = v1;
  a1[5] = v1;
}

uint64_t sub_1B6817D7C()
{
  return 0x646574656C65643CLL;
}

void *sub_1B6817D98()
{
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  sub_1B6E31108();
  return v0;
}

void *sub_1B6817DF0(void *a1)
{
  return sub_1B682A2AC(a1);
}

uint64_t sub_1B6817E2C()
{
  swift_bridgeObjectRelease();
  sub_1B678FE58(*(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1B6817EE0()
{
  return _s11DeletedNodeCMa(0);
}

uint64_t _s11DeletedNodeCMa(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD10F0);
}

uint64_t sub_1B6817F08()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B6817F40(__objc2_class **a1)
{
  if (*a1 != _TtC3VFX12SubGraphNode
    || !*(__objc2_class **)((char *)a1 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph))
  {
    return 0;
  }
  uint64_t v1 = swift_dynamicCastClass();
  if (v1) {
    swift_retain();
  }
  return v1;
}

uint64_t sub_1B6817FF0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1B665D488(*(void *)(v0 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData), *(void *)(v0 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8));
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1B68180D4()
{
  return _s11DeletedNodeCMa_0(0);
}

uint64_t _s11DeletedNodeCMa_0(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD1100);
}

uint64_t sub_1B68180FC()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1B6818134(__objc2_class **a1)
{
  if (*a1 != _TtC3VFX21AuthoringSubGraphNode) {
    return 0;
  }
  uint64_t v1 = swift_dynamicCastClass();
  if (v1) {
    swift_retain();
  }
  return v1;
}

void sub_1B68181E0(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = MEMORY[0x1E4FBC860];
  a1[1] = v1;
  a1[2] = &unk_1F0F70118;
  a1[3] = v1;
  a1[4] = v1;
  a1[5] = v1;
}

uint64_t sub_1B6818200()
{
  v2[0] = 0;
  v2[1] = 0xE000000000000000;
  sub_1B6E328C8();
  uint64_t v3 = 0;
  unint64_t v4 = 0xE000000000000000;
  sub_1B6E31948();
  sub_1B62C1550(v0 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode, (uint64_t)v2);
  sub_1B68198AC();
  sub_1B6E32B18();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v2);
  sub_1B6E31948();
  return v3;
}

void *sub_1B68182C0(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1B62C1550((uint64_t)a1 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode, v2 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
  return sub_1B682A2AC(a1);
}

void sub_1B6818310()
{
}

uint64_t sub_1B6818340()
{
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
}

uint64_t sub_1B6818350()
{
  swift_bridgeObjectRelease();
  sub_1B678FE58(*(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0(v0 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);

  return swift_deallocClassInstance();
}

uint64_t sub_1B6818414()
{
  return type metadata accessor for _PlaceholderNode(0);
}

uint64_t type metadata accessor for _PlaceholderNode(uint64_t a1)
{
  return sub_1B633A29C(a1, (uint64_t *)&unk_1E9DD1110);
}

uint64_t sub_1B681843C()
{
  return swift_updateClassMetadata2();
}

ValueMetadata *type metadata accessor for TraversalTag()
{
  return &type metadata for TraversalTag;
}

unint64_t sub_1B6818498()
{
  unint64_t result = qword_1E9DD1120;
  if (!qword_1E9DD1120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1120);
  }
  return result;
}

_UNKNOWN **sub_1B68184EC()
{
  return &off_1EB94EE38;
}

_UNKNOWN **sub_1B68184F8()
{
  return &off_1EB96D088;
}

uint64_t sub_1B6818504()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B681853C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B681854C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6818584@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68185DC(a1, (uint64_t (*)(_OWORD *))sub_1B6817228, a2);
}

uint64_t sub_1B68185B0@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B68185DC(a1, sub_1B6817434, a2);
}

uint64_t sub_1B68185DC@<X0>(_OWORD *a1@<X0>, uint64_t (*a2)(_OWORD *)@<X1>, uint64_t *a3@<X8>)
{
  long long v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  _OWORD v7[2] = a1[2];
  uint64_t result = a2(v7);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1B6818628(unint64_t a1, unint64_t a2)
{
  int v4 = (a1 >> 59) & 2 | (a1 >> 2) & 1;
  if (v4)
  {
    if (v4 == 1)
    {
      if (((a2 >> 59) & 2 | (a2 >> 2) & 1) == 1)
      {
        sub_1B681997C(a1, (uint64_t (*)(unint64_t))sub_1B66456F8);
        sub_1B681997C(a2, (uint64_t (*)(unint64_t))sub_1B66456F8);
        unint64_t v5 = a1 & 0xEFFFFFFFFFFFFFFBLL;
        unint64_t v6 = a2 & 0xEFFFFFFFFFFFFFFBLL;
LABEL_7:
        char v7 = sub_1B697351C(v5, v6);
        sub_1B681997C(a2, (uint64_t (*)(unint64_t))sub_1B6645740);
        sub_1B681997C(a1, (uint64_t (*)(unint64_t))sub_1B6645740);
        return v7 & 1;
      }
    }
    else if (((a2 >> 59) & 2 | (a2 >> 2) & 1) == 2 && a2 == 0x1000000000000000)
    {
      return 1;
    }
  }
  else if (!((a2 >> 59) & 2 | (a2 >> 2) & 1))
  {
    sub_1B681997C(a1, (uint64_t (*)(unint64_t))sub_1B66456F8);
    sub_1B681997C(a2, (uint64_t (*)(unint64_t))sub_1B66456F8);
    unint64_t v5 = a1;
    unint64_t v6 = a2;
    goto LABEL_7;
  }
  return 0;
}

uint64_t sub_1B681877C(uint64_t a1, void *a2)
{
  return sub_1B6819700(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1B6819550);
}

uint64_t sub_1B6818794(uint64_t *__src, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t a5, void (*a6)(uint64_t **, uint64_t **, char **))
{
  char v7 = a3;
  unint64_t v8 = a2;
  int64_t v9 = __src;
  int64_t v10 = (char *)a2 - (char *)__src;
  int64_t v11 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v11 = (char *)a2 - (char *)__src;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v13 = (char *)a3 - (char *)a2;
  uint64_t v14 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v14 = (char *)a3 - (char *)a2;
  }
  uint64_t v15 = v14 >> 3;
  uint64_t v42 = __src;
  uint64_t v41 = a4;
  if (v12 >= v14 >> 3)
  {
    if (v13 < -7) {
      goto LABEL_58;
    }
    if (a4 != a2 || &a2[v15] <= a4) {
      memmove(a4, a2, 8 * v15);
    }
    unint64_t v25 = &a4[v15];
    uint64_t v40 = (char *)v25;
    uint64_t v42 = v8;
    if (v9 >= v8 || v13 < 8)
    {
LABEL_57:
      a6(&v42, &v41, &v40);
      return 1;
    }
    unint64_t v26 = (char *)a4;
    uint64_t v27 = v8;
    while (1)
    {
      uint64_t v29 = *--v27;
      uint64_t v28 = v29;
      if (!*(void *)(a5 + 16)) {
        break;
      }
      unint64_t v30 = sub_1B62C1A30(*(v25 - 1));
      if (v31) {
        uint64_t v32 = *(void *)(*(void *)(a5 + 56) + 8 * v30);
      }
      else {
        uint64_t v32 = 0;
      }
      unint64_t v34 = sub_1B62C1A30(v28);
      if (v35) {
        uint64_t v36 = *(void *)(*(void *)(a5 + 56) + 8 * v34);
      }
      else {
        uint64_t v36 = 0;
      }
      uint64_t v33 = v7 - 1;
      if (v32 >= v36)
      {
        unint64_t v26 = (char *)a4;
        if (v7 != v8) {
          goto LABEL_54;
        }
LABEL_53:
        if (v33 >= v8) {
LABEL_54:
        }
          *uint64_t v33 = *v27;
        uint64_t v42 = v27;
        if (v27 <= v9) {
          goto LABEL_57;
        }
        goto LABEL_56;
      }
      uint64_t v40 = (char *)(v25 - 1);
      unint64_t v26 = (char *)a4;
      if (v7 < v25 || v33 >= v25 || v7 != v25) {
        *uint64_t v33 = *(v25 - 1);
      }
      uint64_t v27 = v8;
      --v25;
      if (v8 <= v9) {
        goto LABEL_57;
      }
LABEL_56:
      unint64_t v8 = v27;
      char v7 = v33;
      if (v25 <= (uint64_t *)v26) {
        goto LABEL_57;
      }
    }
    uint64_t v33 = v7 - 1;
    if (v7 == v8) {
      goto LABEL_53;
    }
    goto LABEL_54;
  }
  if (v10 >= -7)
  {
    uint64_t v16 = a4;
    if (a4 != __src || &__src[v12] <= a4) {
      memmove(a4, __src, 8 * v12);
    }
    uint64_t v17 = &a4[v12];
    uint64_t v40 = (char *)v17;
    if (v8 < v7 && v10 >= 8)
    {
      while (1)
      {
        if (*(void *)(a5 + 16))
        {
          uint64_t v18 = *v16;
          unint64_t v19 = sub_1B62C1A30(*v8);
          if (v20) {
            uint64_t v21 = *(void *)(*(void *)(a5 + 56) + 8 * v19);
          }
          else {
            uint64_t v21 = 0;
          }
          unint64_t v22 = sub_1B62C1A30(v18);
          if (v23)
          {
            if (v21 < *(void *)(*(void *)(a5 + 56) + 8 * v22)) {
              goto LABEL_23;
            }
          }
          else if (v21 < 0)
          {
LABEL_23:
            if (v9 != v16) {
              *int64_t v9 = *v16;
            }
            uint64_t v41 = ++v16;
            int v24 = v8;
            goto LABEL_26;
          }
        }
        int v24 = v8 + 1;
        if (v9 < v8 || v9 >= v24 || v9 != v8) {
          *int64_t v9 = *v8;
        }
LABEL_26:
        ++v9;
        if (v16 < v17)
        {
          unint64_t v8 = v24;
          if (v24 < v7) {
            continue;
          }
        }
        uint64_t v42 = v9;
        goto LABEL_57;
      }
    }
    goto LABEL_57;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

unint64_t sub_1B6818AC0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  unint64_t v17 = result;
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v8 = *a4;
    for (uint64_t i = *a4 + 8 * a3 - 8; ; i += 8)
    {
      uint64_t result = *(void *)(v8 + 8 * v6);
      unint64_t v10 = v17;
      int64_t v11 = (uint64_t *)i;
      while (1)
      {
        uint64_t v12 = *v11;
        if (*(void *)(a5 + 16)) {
          break;
        }
LABEL_6:
        *int64_t v11 = result;
        v11[1] = v12;
        --v11;
        if (v6 == ++v10) {
          goto LABEL_4;
        }
      }
      unint64_t v13 = sub_1B62C1A30(result);
      uint64_t v15 = (v14 & 1) != 0 ? *(void *)(*(void *)(a5 + 56) + 8 * v13) : 0;
      uint64_t result = sub_1B62C1A30(v12);
      if (v16) {
        break;
      }
      if (v15 >= 0) {
        goto LABEL_15;
      }
LABEL_4:
      if (++v6 == a2) {
        return result;
      }
    }
    if (v15 < *(void *)(*(void *)(a5 + 56) + 8 * result)) {
      goto LABEL_4;
    }
LABEL_15:
    uint64_t v12 = *v11;
    uint64_t result = v11[1];
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1B6818BB4(uint64_t *a1, uint64_t a2, void (*a3)(void), void (*a4)(uint64_t **, uint64_t **, char **))
{
  uint64_t v6 = v4;
  uint64_t v9 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_1B6E33068();
  if (v10 >= v9)
  {
    if (v9)
    {
      swift_bridgeObjectRetain();
      sub_1B6818AC0(0, v9, 1, a1, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v83 = v10;
  if (v9 >= 0) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v9 + 1;
  }
  if (v9 < -1)
  {
    swift_bridgeObjectRelease_n();
    uint64_t result = sub_1B6E32BD8();
    __break(1u);
    return result;
  }
  uint64_t v81 = a1;
  uint64_t v84 = v9;
  if (v9 < 2)
  {
    uint64_t v15 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v94 = MEMORY[0x1E4FBC860];
    uint64_t v87 = (uint64_t *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v9 != 1)
    {
      unint64_t v18 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v18 >= 2) {
        goto LABEL_90;
      }
      goto LABEL_95;
    }
  }
  else
  {
    uint64_t v12 = v11 >> 1;
    a3(0);
    uint64_t v13 = sub_1B6E31C98();
    *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) = v12;
    uint64_t v87 = (uint64_t *)((v13 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v94 = v13;
  }
  uint64_t v93 = v4;
  uint64_t v16 = 0;
  uint64_t v80 = *a1 + 16;
  uint64_t v91 = *a1;
  uint64_t v82 = *a1 - 8;
  uint64_t v15 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v17 = v9;
  while (2)
  {
    uint64_t v19 = v16++;
    uint64_t v89 = v19;
    if (v16 >= v17) {
      goto LABEL_44;
    }
    uint64_t v85 = *(void *)(a2 + 16);
    if (v85)
    {
      uint64_t v20 = *(void *)(v91 + 8 * v19);
      unint64_t v21 = sub_1B62C1A30(*(void *)(v91 + 8 * v16));
      if (v22) {
        uint64_t v23 = *(void *)(*(void *)(a2 + 56) + 8 * v21);
      }
      else {
        uint64_t v23 = 0;
      }
      unint64_t v25 = sub_1B62C1A30(v20);
      if (v26) {
        uint64_t v24 = *(void *)(*(void *)(a2 + 56) + 8 * v25);
      }
      else {
        uint64_t v24 = 0;
      }
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v23 = 0;
    }
    uint64_t v16 = v19 + 2;
    if (v19 + 2 < v84)
    {
      uint64_t v27 = (uint64_t *)(v80 + 8 * v19);
      do
      {
        if (v85)
        {
          uint64_t v28 = *(v27 - 1);
          unint64_t v29 = sub_1B62C1A30(*v27);
          if (v30) {
            uint64_t v31 = *(void *)(*(void *)(a2 + 56) + 8 * v29);
          }
          else {
            uint64_t v31 = 0;
          }
          unint64_t v32 = sub_1B62C1A30(v28);
          if (v33) {
            uint64_t v34 = *(void *)(*(void *)(a2 + 56) + 8 * v32);
          }
          else {
            uint64_t v34 = 0;
          }
          if (v23 >= v24 == v31 < v34) {
            goto LABEL_36;
          }
        }
        else if (v23 < v24)
        {
          goto LABEL_43;
        }
        ++v16;
        ++v27;
      }
      while (v84 != v16);
      uint64_t v16 = v84;
      if (v23 < v24) {
        goto LABEL_43;
      }
LABEL_37:
      uint64_t v19 = v89;
      if (v89 < v16)
      {
        char v35 = (uint64_t *)(v82 + 8 * v16);
        uint64_t v36 = v16;
        uint64_t v37 = v89;
        uint64_t v38 = (uint64_t *)(v91 + 8 * v89);
        do
        {
          if (v37 != --v36)
          {
            uint64_t v39 = *v38;
            *uint64_t v38 = *v35;
            uint64_t *v35 = v39;
          }
          ++v37;
          --v35;
          ++v38;
        }
        while (v37 < v36);
      }
      goto LABEL_44;
    }
LABEL_36:
    if (v23 >= v24) {
      goto LABEL_37;
    }
LABEL_43:
    uint64_t v19 = v89;
LABEL_44:
    if (v16 < v84 && v16 - v19 < v83)
    {
      uint64_t v40 = v19 + v83 >= v84 ? v84 : v19 + v83;
      if (v16 != v40)
      {
        uint64_t v86 = v15;
        uint64_t v41 = (uint64_t *)(v82 + 8 * v16);
        while (1)
        {
          uint64_t v42 = *(void *)(v91 + 8 * v16);
          uint64_t v43 = v19;
          uint64_t v44 = v41;
          do
          {
            uint64_t v45 = *v44;
            if (!*(void *)(a2 + 16)) {
              goto LABEL_55;
            }
            unint64_t v46 = sub_1B62C1A30(v42);
            if (v47) {
              uint64_t v48 = *(void *)(*(void *)(a2 + 56) + 8 * v46);
            }
            else {
              uint64_t v48 = 0;
            }
            unint64_t v49 = sub_1B62C1A30(v45);
            if ((v50 & 1) == 0)
            {
              if (v48 < 0) {
                break;
              }
              goto LABEL_54;
            }
            if (v48 < *(void *)(*(void *)(a2 + 56) + 8 * v49)) {
              break;
            }
LABEL_54:
            uint64_t v45 = *v44;
            uint64_t v42 = v44[1];
LABEL_55:
            *uint64_t v44 = v42;
            v44[1] = v45;
            --v44;
            ++v43;
          }
          while (v16 != v43);
          ++v16;
          ++v41;
          uint64_t v19 = v89;
          if (v16 == v40)
          {
            uint64_t v16 = v40;
            uint64_t v15 = v86;
            break;
          }
        }
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_1B62BD890(0, *((void *)v15 + 2) + 1, 1, v15);
    }
    unint64_t v52 = *((void *)v15 + 2);
    unint64_t v51 = *((void *)v15 + 3);
    unint64_t v18 = v52 + 1;
    if (v52 >= v51 >> 1) {
      uint64_t v15 = sub_1B62BD890(v51 > 1, v52 + 1, 1, v15);
    }
    *((void *)v15 + 2) = v18;
    uint64_t v53 = v15 + 32;
    uint64_t v54 = &v15[16 * v52 + 32];
    *(void *)uint64_t v54 = v19;
    *((void *)v54 + 1) = v16;
    if (!v52)
    {
      unint64_t v18 = 1;
      goto LABEL_14;
    }
    uint64_t v90 = v16;
    while (1)
    {
      uint64_t v55 = v18 - 1;
      if (v18 >= 4)
      {
        uint64_t v60 = &v53[16 * v18];
        uint64_t v61 = *((void *)v60 - 7) - *((void *)v60 - 8);
        uint64_t v58 = *((void *)v60 - 5) - *((void *)v60 - 6);
        uint64_t v59 = v18 - 2;
        uint64_t v62 = &v53[16 * v18 - 32];
        uint64_t v56 = *(void *)v62;
        uint64_t v57 = *((void *)v62 + 1);
        if (v58 - v56 + v57 >= v61)
        {
          BOOL v65 = v58 < *(void *)&v53[16 * v55 + 8] - *(void *)&v53[16 * v55];
LABEL_80:
          if (v65) {
            uint64_t v55 = v59;
          }
          goto LABEL_82;
        }
      }
      else
      {
        if (v18 != 3)
        {
          uint64_t v63 = *(void *)&v53[16 * v18 - 24] - *(void *)&v53[16 * v18 - 32];
          uint64_t v64 = *(void *)&v53[16 * v55 + 8] - *(void *)&v53[16 * v55];
          goto LABEL_77;
        }
        uint64_t v56 = *((void *)v15 + 6);
        uint64_t v57 = *((void *)v15 + 7);
        uint64_t v58 = *((void *)v15 + 5) - *((void *)v15 + 4);
        uint64_t v59 = 1;
      }
      uint64_t v63 = v57 - v56;
      uint64_t v64 = *(void *)&v53[16 * v55 + 8] - *(void *)&v53[16 * v55];
      if (v63 + v64 >= v58)
      {
        BOOL v65 = v58 < v64;
        goto LABEL_80;
      }
LABEL_77:
      if (v64 < v63) {
        break;
      }
LABEL_82:
      unint64_t v66 = &v53[16 * v55 - 16];
      uint64_t v67 = *(void *)v66;
      uint64_t v68 = &v53[16 * v55];
      uint64_t v69 = *((void *)v68 + 1);
      unint64_t v70 = (uint64_t *)(v91 + 8 * *(void *)v66);
      uint64_t v71 = (uint64_t *)(v91 + 8 * *(void *)v68);
      swift_bridgeObjectRetain();
      sub_1B6818794(v70, v71, (uint64_t *)(v91 + 8 * v69), v87, a2, a4);
      if (v93) {
        goto LABEL_85;
      }
      swift_bridgeObjectRelease();
      *(void *)unint64_t v66 = v67;
      *((void *)v66 + 1) = v69;
      unint64_t v72 = *((void *)v15 + 2);
      unint64_t v18 = v72 - 1;
      memmove(v68, v68 + 16, 16 * (v72 - 1 - v55));
      *((void *)v15 + 2) = v72 - 1;
      uint64_t v53 = v15 + 32;
      uint64_t v16 = v90;
      if (v72 <= 2) {
        goto LABEL_14;
      }
    }
    uint64_t v16 = v90;
LABEL_14:
    uint64_t v17 = v84;
    if (v16 < v84) {
      continue;
    }
    break;
  }
  uint64_t v6 = v93;
  if (v18 >= 2)
  {
LABEL_90:
    uint64_t v92 = *v81;
    while (1)
    {
      uint64_t v73 = *(void *)&v15[16 * v18];
      uint64_t v74 = &v15[16 * v18 + 16];
      uint64_t v75 = *((void *)v74 + 1);
      unint64_t v76 = (uint64_t *)(v92 + 8 * *(void *)v74);
      swift_bridgeObjectRetain();
      sub_1B6818794((uint64_t *)(v92 + 8 * v73), v76, (uint64_t *)(v92 + 8 * v75), v87, a2, a4);
      if (v6) {
        break;
      }
      swift_bridgeObjectRelease();
      uint64_t v77 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v77 = sub_1B6D671B8((uint64_t)v15);
      }
      uint64_t v78 = &v77[16 * v18];
      *(void *)uint64_t v78 = v73;
      *((void *)v78 + 1) = v75;
      uint64_t v15 = v77;
      unint64_t v79 = *((void *)v77 + 2);
      memmove(&v77[16 * v18 + 16], &v77[16 * v18 + 32], 16 * (v79 - v18));
      *((void *)v77 + 2) = v79 - 1;
      unint64_t v18 = v79 - 1;
      if (v79 <= 2) {
        goto LABEL_95;
      }
    }
LABEL_85:
    swift_bridgeObjectRelease();
  }
LABEL_95:
  swift_bridgeObjectRelease();
  *(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1B6E31C48();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B68192FC(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(void), void (*a5)(uint64_t **, uint64_t **, char **))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v10 = a3(v10);
    *a1 = v10;
  }
  uint64_t v12 = *(void *)(v10 + 16);
  v14[0] = v10 + 32;
  v14[1] = v12;
  swift_bridgeObjectRetain();
  sub_1B6818BB4(v14, a2, a4, a5);
  swift_bridgeObjectRelease();
  sub_1B6E32A28();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1B68193D0(uint64_t a1, uint64_t (*a2)(uint64_t, void *), uint64_t a3, void (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 40;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v20 = a1 + 40;
  do
  {
    uint64_t v9 = (uint64_t *)(v7 + 16 * v6);
    for (uint64_t i = v6; ; ++i)
    {
      uint64_t v11 = *(v9 - 1);
      uint64_t v12 = *v9;
      uint64_t v6 = i + 1;
      v21[0] = v11;
      v21[1] = v12;
      swift_retain();
      if (a2(i, v21)) {
        break;
      }
      v9 += 2;
      swift_release();
      if (v4 == v6) {
        return v8;
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      a4(0, *(void *)(v8 + 16) + 1, 1);
      uint64_t v8 = v22;
    }
    unint64_t v15 = *(void *)(v8 + 16);
    unint64_t v14 = *(void *)(v8 + 24);
    unint64_t v16 = v15 + 1;
    if (v15 >= v14 >> 1)
    {
      a4(v14 > 1, v15 + 1, 1);
      unint64_t v16 = v15 + 1;
      uint64_t v8 = v22;
    }
    *(void *)(v8 + 16) = v16;
    uint64_t v17 = (void *)(v8 + 24 * v15);
    v17[4] = i;
    v17[5] = v11;
    v17[6] = v12;
    uint64_t v7 = v20;
  }
  while (v4 - 1 != i);
  return v8;
}

uint64_t sub_1B6819550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v5)(void *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  void v12[6];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (!a2) {
    return 0;
  }
  unint64_t v5 = *(void (**)(void *__return_ptr, uint64_t))(*(void *)a4 + 152);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_retain();
  v5(v12, v6);
  uint64_t v7 = v12[0];
  uint64_t v17 = v12[1];
  unint64_t v18 = v12[0];
  sub_1B62D8C3C((uint64_t)&v17);
  unint64_t v16 = v12[2];
  sub_1B62D8C3C((uint64_t)&v16);
  unint64_t v15 = v12[3];
  sub_1B62D8C3C((uint64_t)&v15);
  unint64_t v14 = v12[4];
  sub_1B62D8C3C((uint64_t)&v14);
  uint64_t v13 = v12[5];
  sub_1B62D8C3C((uint64_t)&v13);
  uint64_t v8 = *(void *)(v7 + 8 * a1 + 32);
  sub_1B66456F8(v8);
  sub_1B62D8C3C((uint64_t)&v18);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0x8000000000000008;
  uint64_t v10 = sub_1B697351C(v8, v9 | 0x6000000000000000);
  swift_release();
  sub_1B6645740(v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (v10 ^ 1) & 1;
}

uint64_t sub_1B68196B0()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B68196E8(uint64_t a1, void *a2)
{
  return sub_1B6819700(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1B6819720);
}

uint64_t sub_1B6819700(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void))
{
  return a3(a1, *a2, a2[1], *(void *)(*(void *)(v3 + 16) + 8), *(void *)(*(void *)(v3 + 16) + 16), *(void *)(*(void *)(v3 + 16) + 24), *(void *)(*(void *)(v3 + 16) + 32));
}

uint64_t sub_1B6819720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v5)(void *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void v11[6];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (!a2) {
    return 0;
  }
  unint64_t v5 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                            + 152);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = swift_retain();
  v5(v11, v6);
  swift_release();
  uint64_t v7 = v11[0];
  uint64_t v17 = v11[0];
  unint64_t v16 = v11[1];
  sub_1B62D8C3C((uint64_t)&v16);
  unint64_t v15 = v11[2];
  sub_1B62D8C3C((uint64_t)&v15);
  unint64_t v14 = v11[3];
  sub_1B62D8C3C((uint64_t)&v14);
  uint64_t v13 = v11[4];
  sub_1B62D8C3C((uint64_t)&v13);
  uint64_t v12 = v11[5];
  sub_1B62D8C3C((uint64_t)&v12);
  uint64_t v8 = *(void *)(v7 + 8 * a1 + 32);
  sub_1B66456F8(v8);
  sub_1B62D8C3C((uint64_t)&v17);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0x8000000000000008;
  LOBYTE(v5) = sub_1B697351C(v8, v9 | 0x6000000000000000);
  swift_release();
  sub_1B6645740(v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (v5 ^ 1) & 1;
}

unint64_t sub_1B68198AC()
{
  unint64_t result = qword_1E9DD1128;
  if (!qword_1E9DD1128)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DD1128);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for MappingMode.InputFilter(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1B681997C(*a2, (uint64_t (*)(unint64_t))sub_1B66456F8);
  *a1 = v3;
  return a1;
}

unint64_t destroy for MappingMode.InputFilter(unint64_t *a1)
{
  return sub_1B681997C(*a1, (uint64_t (*)(unint64_t))sub_1B6645740);
}

unint64_t sub_1B681997C(unint64_t result, uint64_t (*a2)(unint64_t))
{
  int v2 = (result >> 59) & 2 | (result >> 2) & 1;
  if (v2)
  {
    if (v2 != 1) {
      return result;
    }
    result &= 0xEFFFFFFFFFFFFFFBLL;
  }
  return a2(result);
}

unint64_t *assignWithCopy for MappingMode.InputFilter(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1B681997C(*a2, (uint64_t (*)(unint64_t))sub_1B66456F8);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1B681997C(v4, (uint64_t (*)(unint64_t))sub_1B6645740);
  return a1;
}

unint64_t *assignWithTake for MappingMode.InputFilter(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1B681997C(v3, (uint64_t (*)(unint64_t))sub_1B6645740);
  return a1;
}

uint64_t getEnumTagSinglePayload for MappingMode.InputFilter(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xE && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 14);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7) >> 2) & 0xFFFFFFF3 | (4 * (*(void *)a1 & 3))) ^ 0xF;
  if (v3 >= 0xD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MappingMode.InputFilter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xD)
  {
    *(void *)unint64_t result = a2 - 14;
    if (a3 >= 0xE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 3 | (4 * (-a2 & 0xF));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0x1000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B6819B08(void *a1)
{
  unsigned int v1 = (*a1 >> 59) & 2 | (*a1 >> 2) & 1;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_1B6819B2C(void *result)
{
  *result &= 0xEFFFFFFFFFFFFFFBLL;
  return result;
}

void *sub_1B6819B44(void *result, unsigned int a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 0xEFFFFFFFFFFFFFF8 | (4 * (a2 & 1));
  }
  else {
    *unint64_t result = (8 * (a2 - 2)) | 0x1000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for MappingMode.InputFilter()
{
  return &type metadata for MappingMode.InputFilter;
}

unint64_t destroy for MappingMode(uint64_t a1)
{
  return sub_1B681997C(*(void *)(a1 + 8), (uint64_t (*)(unint64_t))sub_1B6645740);
}

uint64_t _s3VFX11MappingModeVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  sub_1B681997C(v4, (uint64_t (*)(unint64_t))sub_1B66456F8);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for MappingMode(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  sub_1B681997C(v4, (uint64_t (*)(unint64_t))sub_1B66456F8);
  unint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  sub_1B681997C(v5, (uint64_t (*)(unint64_t))sub_1B6645740);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for MappingMode(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1B681997C(v4, (uint64_t (*)(unint64_t))sub_1B6645740);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MappingMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[17]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MappingMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MappingMode()
{
  return &type metadata for MappingMode;
}

unsigned char *_s3VFX12TraversalTagOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6819E60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MappingMode.TraversalOrder()
{
  return &type metadata for MappingMode.TraversalOrder;
}

unint64_t sub_1B6819E9C()
{
  unint64_t result = qword_1E9DD1130;
  if (!qword_1E9DD1130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1130);
  }
  return result;
}

uint64_t sub_1B6819F00()
{
  sub_1B681A234();
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1B6311FC0(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B6E77050;
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v5;
  return v2;
}

uint64_t sub_1B6819FF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B681A234();
  if (!v3)
  {
    sub_1B681A9C8();
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
    sub_1B629C37C(v0 + 144, (uint64_t)&v11);
    sub_1B6646D94(&v11, (void (*)(void, void, void, void, void))sub_1B629C9E8);
    sub_1B6A3C6F4(&v11, 1, (uint64_t)&v17);
    sub_1B6646D94(&v11, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    long long v6 = v20;
    *(_OWORD *)(v5 + 64) = v19;
    *(_OWORD *)(v5 + 80) = v6;
    *(_OWORD *)(v5 + 96) = v21;
    *(void *)(v5 + 112) = v22;
    long long v7 = v18;
    *(_OWORD *)(v5 + 32) = v17;
    *(_OWORD *)(v5 + 48) = v7;
    return v5;
  }
  uint64_t v4 = sub_1B6BD40DC(v2, v3);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v11 = 0u;
    goto LABEL_7;
  }
  swift_retain();
  sub_1B6C2DE14((uint64_t)&v11);
  swift_release();
  if (!*((void *)&v11 + 1))
  {
LABEL_7:
    sub_1B681AA44((uint64_t)&v11, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN);
    sub_1B681A9C8();
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
    sub_1B629C37C(v1 + 144, (uint64_t)&v11);
    sub_1B6646D94(&v11, (void (*)(void, void, void, void, void))sub_1B629C9E8);
    sub_1B6A3C6F4(&v11, 1, (uint64_t)&v17);
    sub_1B6646D94(&v11, (void (*)(void, void, void, void, void))sub_1B629DCAC);
    long long v8 = v20;
    *(_OWORD *)(v5 + 64) = v19;
    *(_OWORD *)(v5 + 80) = v8;
    *(_OWORD *)(v5 + 96) = v21;
    *(void *)(v5 + 112) = v22;
    long long v9 = v18;
    *(_OWORD *)(v5 + 32) = v17;
    *(_OWORD *)(v5 + 48) = v9;
    swift_release();
    return v5;
  }
  long long v19 = v13;
  long long v20 = v14;
  long long v21 = v15;
  uint64_t v22 = v16;
  long long v17 = v11;
  long long v18 = v12;
  sub_1B681A9C8();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
  sub_1B66459A4((uint64_t)&v17, v5 + 32);
  swift_release();
  sub_1B666BD18((uint64_t)&v17);
  return v5;
}

uint64_t sub_1B681A234()
{
  strcpy((char *)v5, "selectedCase");
  BYTE5(v5[1]) = unk_1E9DD1145;
  HIWORD(v5[1]) = unk_1E9DD1146;
  swift_bridgeObjectRetain_n();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6A3C4C4(v5[0], v5[1], &v6);
  swift_bridgeObjectRelease();
  if (!v7)
  {
    sub_1B681AA44((uint64_t)&v6, (unint64_t *)&qword_1EB980F60, MEMORY[0x1E4FBC840] + 8);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  *(void *)&long long v6 = *(void *)(v0 + 40);
  if (!*(void *)(v6 + 16))
  {
    uint64_t v1 = MEMORY[0x1E4FBC860];
    unint64_t v2 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v2) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B68E95BC(0, 1);
  swift_bridgeObjectRelease();
  uint64_t v1 = v6;
  unint64_t v2 = *(void *)(v6 + 16);
  if (!v2)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_5:
  if (v5[0] >= v2) {
    uint64_t v3 = *(void *)(v1 + 32);
  }
  else {
    uint64_t v3 = *(void *)(v1 + 32 + 16 * v5[0]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1B681A3C0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B681A414@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B681A46C(uint64_t a1)
{
  unint64_t v2 = sub_1B681A910();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B681A4A8(uint64_t a1)
{
  unint64_t v2 = sub_1B681A910();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B681A4E4(void *a1)
{
  return sub_1B681A530(a1);
}

void *sub_1B681A530(void *a1)
{
  uint64_t v3 = v1;
  sub_1B681A964(0, &qword_1E9DD1158, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)v15 - v9;
  long long v11 = sub_1B62C14BC(a1, a1[3]);
  sub_1B681A910();
  swift_retain();
  sub_1B6E33A48();
  if (v2)
  {
    swift_release();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    _s19StaticSwitchSnippetCMa();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1B629DD00();
    sub_1B6E32DF8();
    uint64_t v13 = v16;
    long long v14 = v15[1];
    *(_OWORD *)(v3 + 144) = v15[0];
    *(_OWORD *)(v3 + 160) = v14;
    *(void *)(v3 + 176) = v13;
    swift_release();
    sub_1B62C1550((uint64_t)a1, (uint64_t)v15);
    long long v11 = sub_1B68124D8(v15);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  return v11;
}

uint64_t sub_1B681A76C(void *a1)
{
  sub_1B681A964(0, &qword_1E9DD1148, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)v13 - v8;
  uint64_t result = sub_1B68127FC(a1);
  if (!v2)
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B681A910();
    sub_1B6E33A88();
    uint64_t v11 = *(void *)(v1 + 176);
    long long v12 = *(_OWORD *)(v1 + 160);
    v13[0] = *(_OWORD *)(v1 + 144);
    v13[1] = v12;
    uint64_t v14 = v11;
    sub_1B6646C2C();
    sub_1B6E32FA8();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t _s19StaticSwitchSnippetCMa()
{
  return self;
}

unint64_t sub_1B681A910()
{
  unint64_t result = qword_1E9DD1150;
  if (!qword_1E9DD1150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1150);
  }
  return result;
}

void sub_1B681A964(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B681A910();
    unint64_t v7 = a3(a1, &_s19StaticSwitchSnippetC10CodingKeysON, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1B681A9C8()
{
  if (!qword_1E9DD1160)
  {
    sub_1B6311FC0(255, (unint64_t *)&unk_1EB981180, (uint64_t)&_s8MetadataVN, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1160);
    }
  }
}

uint64_t sub_1B681AA44(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1B6311FC0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unsigned char *_s19StaticSwitchSnippetC10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B681AB50);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s19StaticSwitchSnippetC10CodingKeysOMa()
{
  return &_s19StaticSwitchSnippetC10CodingKeysON;
}

unint64_t sub_1B681AB8C()
{
  unint64_t result = qword_1E9DD1168;
  if (!qword_1E9DD1168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1168);
  }
  return result;
}

unint64_t sub_1B681ABE4()
{
  unint64_t result = qword_1E9DD1170;
  if (!qword_1E9DD1170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1170);
  }
  return result;
}

unint64_t sub_1B681AC3C()
{
  unint64_t result = qword_1E9DD1178;
  if (!qword_1E9DD1178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1178);
  }
  return result;
}

uint64_t sub_1B681AC90(uint64_t a1)
{
  unint64_t v2 = sub_1B681CC00();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B681ACCC(uint64_t a1)
{
  unint64_t v2 = sub_1B681CC00();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B681AD08(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B681B864(a1, a2, a3, &qword_1E9DD1180, (uint64_t (*)(void))sub_1B681CC00, (uint64_t)&type metadata for Authoring.CodingKeys, (void (*)(void))sub_1B681CC00);
}

double sub_1B681AD58@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1B6E4F490;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(void *)(a1 + 16) = 0xFFFFFFFFLL;
  return result;
}

uint64_t sub_1B681AD70(uint64_t result)
{
  uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v2)
  {
    uint64_t v3 = result;
    long long v4 = *(_OWORD *)(v1 + 64);
    v100[0] = *(_OWORD *)(v1 + 48);
    v100[1] = v4;
    uint64_t v101 = *(void *)(v1 + 80);
    swift_retain();
    sub_1B62C9DA8(v3, (uint64_t)v100, 0x200000000, v85);
    sub_1B62D7510((uint64_t)v85, (uint64_t)v93, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    uint64_t v84 = (unsigned __int16 *)v93[0];
    if (v93[0])
    {
      uint64_t v71 = v93[5];
      uint64_t v72 = v3;
      uint64_t v73 = v93[8];
      uint64_t v74 = v93[7];
      uint64_t v5 = (void *)v93[9];
      uint64_t v6 = v93[10];
      uint64_t v67 = v1;
      uint64_t v7 = *(void *)(v1 + 32);
      swift_retain();
      uint64_t v8 = (void *)sub_1B6330840(v7);
      swift_release();
      uint64_t v9 = sub_1B6E328F8();
      unint64_t v66 = v8;
      sub_1B6388754(v9, v10, v8);
      swift_bridgeObjectRelease();
      uint64_t v75 = v2;
      sub_1B6383E40((uint64_t)v86);
      sub_1B6383E40((uint64_t)v89);
      uint64_t v12 = v87;
      uint64_t v11 = v88;
      sub_1B6383E40((uint64_t)v91);
      swift_retain();
      sub_1B62C7BF4((uint64_t)v91);
      uint64_t v13 = v92;
      uint64_t v14 = v90;
      if (v90 == 260) {
        uint64_t v15 = 260;
      }
      else {
        uint64_t v15 = 0;
      }
      sub_1B62C7BF4((uint64_t)v89);
      sub_1B62C7BF4((uint64_t)v86);
      swift_release();
      v99[0] = v12;
      memset(&v99[1], 0, 24);
      v99[4] = v13;
      memset(&v99[5], 0, 24);
      v99[8] = v14;
      v99[9] = v15;
      v99[10] = v11;
      uint64_t v70 = v6;
      if (v6 > 0 && v74)
      {
        uint64_t v16 = 0;
        uint64_t v17 = v5[4];
        int v18 = *(unsigned __int8 *)(v73 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        int v68 = v18;
        uint64_t v69 = v17;
        do
        {
          long long v19 = (unsigned int *)(v71 + 48 * v16);
          uint64_t v20 = *v19;
          uint64_t v21 = v19[1];
          uint64_t v22 = v19[2];
          uint64_t v23 = *((void *)v19 + 2);
          uint64_t v24 = *((void *)v19 + 3);
          uint64_t v25 = *((void *)v19 + 5);
          uint64_t v81 = *((void *)v19 + 4);
          uint64_t v82 = v16;
          if (v18)
          {
            char v26 = *(os_unfair_lock_s **)(v25 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v26);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v25 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v17);
          uint64_t v79 = v5[7];
          uint64_t v80 = v5[6];
          uint64_t v77 = v5[9];
          uint64_t v78 = v5[8];
          uint64_t v76 = v5[10];
          uint64_t v27 = v5[4];
          uint64_t v28 = *(void *)(*(void *)(*(void *)(*(void *)(v25 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v5[6] = ecs_stack_allocator_allocate(v27, 48 * v28, 8);
          v5[7] = v28;
          v5[9] = 0;
          v5[10] = 0;
          v5[8] = 0;
          swift_release();
          v94[0] = v73;
          uint64_t v83 = v25;
          v94[1] = v25;
          v94[2] = v5;
          v94[3] = v22;
          v94[4] = (v21 - v20 + v22);
          v94[5] = v70;
          v94[6] = v20;
          v94[7] = v21;
          v94[8] = 0;
          v94[9] = 0;
          char v95 = 1;
          uint64_t v96 = v23;
          uint64_t v97 = v24;
          uint64_t v98 = v81;
          sub_1B681BEC0(v94, v75, v72, v99);
          unint64_t v29 = v5[6];
          uint64_t v30 = v5[8];
          if (!v30)
          {
            uint64_t v56 = v5[7];
            uint64_t v57 = (void *)v5[4];
            goto LABEL_50;
          }
          for (uint64_t i = 0; i != v30; ++i)
          {
            char v33 = (uint64_t *)(v29 + 48 * i);
            uint64_t v34 = *v33;
            char v35 = (void (*)(uint64_t))v33[4];
            uint64_t v36 = v5[9];
            if (v36) {
              BOOL v37 = v34 == v36;
            }
            else {
              BOOL v37 = 0;
            }
            if (v37 || !v84[11]) {
              goto LABEL_15;
            }
            unint64_t v38 = v84[9];
            uint64_t v39 = (void *)((char *)v84 + v84[8] + 41);
            uint64_t v40 = v33[2];
            uint64_t v41 = v39;
            unint64_t v42 = v38 >> 4;
            uint64_t v43 = (char *)v84 + 41;
            if (v38 >= 0x10)
            {
              while (*v41 != v34)
              {
                ++v43;
                v41 += 2;
                if (!--v42) {
                  goto LABEL_30;
                }
              }
              unsigned int v44 = v43[v84[10]];
              BOOL v45 = v44 > 5;
              int v46 = (1 << v44) & 0x23;
              if (v45 || v46 == 0)
              {
LABEL_15:
                uint64_t v32 = swift_retain();
                v35(v32);
                swift_release();
                continue;
              }
            }
LABEL_30:
            if (swift_conformsToProtocol2()) {
              uint64_t v48 = v40;
            }
            else {
              uint64_t v48 = 0;
            }
            if (v48)
            {
              if (v38 < 0x10) {
                goto LABEL_15;
              }
              unint64_t v49 = v39;
              unint64_t v50 = v38 >> 4;
              unint64_t v51 = (char *)v84 + 41;
              while (*v49 != v48)
              {
                ++v51;
                v49 += 2;
                if (!--v50) {
                  goto LABEL_43;
                }
              }
              unsigned int v52 = v51[v84[10]];
              BOOL v45 = v52 > 5;
              int v53 = (1 << v52) & 0x23;
              if (v45 || v53 == 0) {
                goto LABEL_15;
              }
LABEL_43:
              uint64_t v55 = 16 * (v38 >> 4);
              while (*v39 != v48)
              {
                v39 += 2;
                v55 -= 16;
                if (!v55) {
                  goto LABEL_15;
                }
              }
            }
          }
          uint64_t v56 = v5[7];
          unint64_t v29 = v5[6];
          uint64_t v57 = (void *)v5[4];
          if ((uint64_t)v5[8] >= 1) {
            swift_arrayDestroy();
          }
LABEL_50:
          ecs_stack_allocator_deallocate(v57, v29, 48 * v56);
          v5[6] = v80;
          v5[7] = v79;
          v5[8] = v78;
          v5[9] = v77;
          v5[10] = v76;
          if (*(void *)(v5[13] + 16))
          {
            uint64_t v58 = swift_bridgeObjectRetain();
            sub_1B639147C(v58, v83);
            swift_bridgeObjectRelease();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v60 = v5[13];
            if (isUniquelyReferenced_nonNull_native)
            {
              sub_1B6399BB8(0, *(void *)(v60 + 16));
            }
            else
            {
              uint64_t v61 = (void *)MEMORY[0x1E4FBC860];
              if (*(void *)(v60 + 24) >= 2uLL)
              {
                sub_1B681C594();
                uint64_t v61 = (void *)swift_allocObject();
                size_t v62 = j__malloc_size(v61);
                v61[2] = 0;
                v61[3] = 2 * ((uint64_t)(v62 - 32) / 72);
              }
              v5[13] = v61;
              swift_bridgeObjectRelease();
            }
            if (*(unsigned __int8 *)(v5[2] + OBJC_IVAR____TtC3VFX13EntityManager_currentState) - 1 >= 2)
            {
              uint64_t v63 = *(char **)(v83 + 232);
              uint64_t v64 = *(char **)(v83 + 256);
              if (v63 == v64)
              {
                BOOL v65 = *(char **)(v83 + 240);
              }
              else
              {
                sub_1B666018C(v64, v63);
                uint64_t v64 = *(char **)(v83 + 232);
                BOOL v65 = *(char **)(v83 + 240);
                if (v65 == v64)
                {
                  BOOL v65 = 0;
                  uint64_t v64 = 0;
                  *(void *)(v83 + 232) = 0;
                  *(void *)(v83 + 240) = 0;
                }
              }
              *(void *)(v83 + 248) = v65;
              *(void *)(v83 + 256) = v64;
            }
          }
          uint64_t v17 = v69;
          ecs_stack_allocator_pop_snapshot(v69);
          int v18 = v68;
          if (v68)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v83 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v83 + 376));
          }
          swift_release();
          uint64_t v16 = v82 + 1;
        }
        while (v82 + 1 != v74);
      }

      sub_1B632F170(v85);
      double result = swift_release();
      ++*(void *)(v67 + 32);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

float sub_1B681B434(__n128 a1)
{
  __n128 v1 = a1;
  a1.n128_u32[0] = a1.n128_u32[1];
  if (a1.n128_f32[1] >= v1.n128_f32[0])
  {
    if ((a1.n128_u32[1] & 0x7FFFFF) != 0) {
      float v2 = v1.n128_f32[0];
    }
    else {
      float v2 = a1.n128_f32[1];
    }
    if ((~a1.n128_u32[1] & 0x7F800000) == 0) {
      a1.n128_f32[0] = v2;
    }
  }
  else
  {
    a1.n128_u32[0] = v1.n128_u32[0];
  }
  if (v1.n128_f32[2] >= a1.n128_f32[0])
  {
    if ((v1.n128_u32[2] & 0x7FFFFF) == 0) {
      a1.n128_f32[0] = v1.n128_f32[2];
    }
    if ((~v1.n128_u32[2] & 0x7F800000) != 0) {
      a1.n128_f32[0] = v1.n128_f32[2];
    }
  }
  return a1.n128_f32[0];
}

float sub_1B681B48C(__n128 a1)
{
  __n128 v1 = a1;
  a1.n128_u32[0] = a1.n128_u32[1];
  if (a1.n128_f32[1] >= v1.n128_f32[0])
  {
    if ((a1.n128_u32[1] & 0x7FFFFF) != 0) {
      float v2 = v1.n128_f32[0];
    }
    else {
      float v2 = a1.n128_f32[1];
    }
    if ((~a1.n128_u32[1] & 0x7F800000) == 0) {
      a1.n128_f32[0] = v2;
    }
  }
  else
  {
    a1.n128_u32[0] = v1.n128_u32[0];
  }
  if (v1.n128_f32[2] >= a1.n128_f32[0])
  {
    if ((v1.n128_u32[2] & 0x7FFFFF) == 0) {
      a1.n128_f32[0] = v1.n128_f32[2];
    }
    if ((~v1.n128_u32[2] & 0x7F800000) != 0) {
      a1.n128_f32[0] = v1.n128_f32[2];
    }
  }
  if (v1.n128_f32[3] >= a1.n128_f32[0])
  {
    if ((v1.n128_u32[3] & 0x7FFFFF) == 0) {
      a1.n128_f32[0] = v1.n128_f32[3];
    }
    if ((~v1.n128_u32[3] & 0x7F800000) != 0) {
      a1.n128_f32[0] = v1.n128_f32[3];
    }
  }
  return a1.n128_f32[0];
}

uint64_t sub_1B681B508()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyParticleRenderSystem()
{
  return self;
}

uint64_t sub_1B681B564()
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  *(_OWORD *)(v0 + 16) = xmmword_1B6E89180;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EB997A18;
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980C70, (unint64_t *)&qword_1EB980000, (unint64_t *)&qword_1EB97FFF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76900;
  *(void *)(inited + 32) = &type metadata for Position;
  *(void *)(inited + 40) = &off_1F0FA6F58;
  *(void *)(inited + 48) = &type metadata for ParticleLegacyRenderer;
  *(void *)(inited + 56) = &off_1F0F8D368;
  *(void *)(inited + 64) = &type metadata for ParticleAngle;
  *(void *)(inited + 72) = &off_1F0F60948;
  *(void *)(inited + 80) = &type metadata for Color;
  *(void *)(inited + 88) = &off_1F0F9ED50;
  *(void *)(inited + 96) = &type metadata for Scale;
  *(void *)(inited + 104) = &off_1F0F9F580;
  uint64_t v7 = v1;
  int v8 = 0;
  char v9 = 2;
  uint64_t v10 = 0;
  char v11 = 2;
  uint64_t v12 = 0;
  swift_retain();
  sub_1B62F75EC(inited, (uint64_t)v5);
  swift_setDeallocating();
  swift_release();
  long long v3 = v5[1];
  *(_OWORD *)(v0 + 48) = v5[0];
  *(_OWORD *)(v0 + 64) = v3;
  *(void *)(v0 + 80) = v6;
  return v0;
}

uint64_t sub_1B681B714()
{
  uint64_t v0 = swift_allocObject();
  sub_1B681B564();
  return v0;
}

const char *sub_1B681B74C()
{
  return "Legacy Particle Render";
}

uint64_t type metadata accessor for LegacyParticleEmitterSystem()
{
  return self;
}

const char *sub_1B681B788()
{
  return "Legacy Particle Emitter";
}

uint64_t sub_1B681B79C(uint64_t a1)
{
  unint64_t v2 = sub_1B681CF5C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B681B7D8(uint64_t a1)
{
  unint64_t v2 = sub_1B681CF5C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B681B814(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B681B864(a1, a2, a3, &qword_1E9DD11A0, (uint64_t (*)(void))sub_1B681CF5C, (uint64_t)&type metadata for ParticleAffectedByGlobalForce.CodingKeys, (void (*)(void))sub_1B681CF5C);
}

uint64_t sub_1B681B864(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(void))
{
  sub_1B681CFB0(0, a4, a5, a6, MEMORY[0x1E4FBBDE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v12);
  uint64_t v14 = (char *)&v16 - v13;
  sub_1B62C14BC(a1, a1[3]);
  a7();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_1B681B9A0(uint64_t a1)
{
  unint64_t v2 = sub_1B681D018();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B681B9DC(uint64_t a1)
{
  unint64_t v2 = sub_1B681D018();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B681BA18(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B681B864(a1, a2, a3, &qword_1E9DD11B0, (uint64_t (*)(void))sub_1B681D018, (uint64_t)&type metadata for ParticleGlobalForce.CodingKeys, (void (*)(void))sub_1B681D018);
}

double sub_1B681BA68()
{
  sub_1B62F7B88(0, (unint64_t *)&qword_1EB980BA0, (unint64_t *)&qword_1EB97EB00, (unint64_t *)&qword_1EB97EAE0);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 32) = &type metadata for ParticleAffectedByGlobalForce;
  *(void *)(v0 + 40) = &off_1F0F998A0;
  return result;
}

uint64_t sub_1B681BAD0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B681CC54(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B681BAFC(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8))(v2, 2, ObjectType, a2);
}

double sub_1B681BB54@<D0>(void *a1@<X8>)
{
  *(void *)&double result = 0xFFFFFFFFLL;
  *a1 = 0xFFFFFFFFLL;
  return result;
}

uint64_t sub_1B681BB60(char *a1, char *a2)
{
  return sub_1B6BBADD8(*a1, *a2);
}

uint64_t sub_1B681BB6C()
{
  return sub_1B6E33988();
}

uint64_t sub_1B681BBF8()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B681BC70()
{
  return sub_1B6E33988();
}

uint64_t sub_1B681BCF8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1B681BD58(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746E65726170;
  if (*v1) {
    uint64_t v2 = 0x4572657474696D65;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xED0000797469746ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B681BDA0()
{
  if (*v0) {
    return 0x4572657474696D65;
  }
  else {
    return 0x746E65726170;
  }
}

uint64_t sub_1B681BDE4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1B6E32CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B681BE48(uint64_t a1)
{
  unint64_t v2 = sub_1B681CF08();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B681BE84(uint64_t a1)
{
  unint64_t v2 = sub_1B681CF08();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B681BEC0(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = a1[2];
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t result = sub_1B6388ED8(v9);
  if (result)
  {
    uint64_t v11 = (void *)result;
    uint64_t v107 = a3;
    uint64_t v96 = a4;
    uint64_t v12 = a1[7] - a1[6];
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v13 = (void *)sub_1B62F1868(v9, 48 * v12);
    uint64_t v15 = v14;
    uint64_t v103 = v16;
    swift_unknownObjectRetain();
    swift_release();
    uint64_t v106 = (uint64_t)v13;
    uint64_t v101 = v15;
    if (objc_msgSend(v13, sel_storageMode) == (id)2)
    {
      long long v105 = 0;
    }
    else
    {
      uint64_t v17 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v18 = v13;
      long long v105 = &v17[v15];
    }
    uint64_t v97 = a2;
    uint64_t v19 = *(void *)(v8 + 24);
    swift_retain();
    uint64_t v20 = (void *)sub_1B62F1868(v19, 16 * v12);
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    swift_unknownObjectRetain();
    swift_release();
    if (objc_msgSend(v20, sel_storageMode) == (id)2)
    {
      uint64_t v25 = 0;
    }
    else
    {
      char v26 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
      id v27 = v20;
      uint64_t v25 = &v26[v22];
    }
    uint64_t ObjectType = swift_getObjectType();
    sub_1B635FB18(a3, ObjectType);
    sub_1B62E738C(v106, v101, v103, 0, 4, ObjectType);
    uint64_t v95 = v22;
    uint64_t v99 = ObjectType;
    sub_1B62E738C((uint64_t)v20, v22, v24, 0, 5, ObjectType);
    uint64_t v30 = (uint64_t *)a1[11];
    uint64_t v29 = a1[12];
    uint64_t v31 = a1[13];
    uint64_t v32 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v30, v29, v31, v8);
    uint64_t v34 = v32;
    if (v32) {
      uint64_t v35 = (v33 - v32) / 16;
    }
    else {
      uint64_t v35 = 0;
    }
    uint64_t v36 = sub_1B62C9024((uint64_t)&type metadata for ParticleLegacyRenderer, (uint64_t)&off_1F0F8D338, v30, v29, v31, v8);
    uint64_t v104 = sub_1B62C9024((uint64_t)&type metadata for ParticleAngle, (uint64_t)&off_1F0F608D0, v30, v29, v31, v8);
    uint64_t v102 = sub_1B62C9024((uint64_t)&type metadata for Color, (uint64_t)&off_1F0F9ECD8, v30, v29, v31, v8);
    uint64_t v37 = sub_1B62C9024((uint64_t)&type metadata for Scale, (uint64_t)&off_1F0F9F508, v30, v29, v31, v8);
    uint64_t v38 = v107;
    uint64_t v39 = *(void *)(*(void *)(v107 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues)
                    + 8 * *(void *)(v8 + 24)
                    + 8);
    uint64_t v109 = 0;
    memset(v108, 0, sizeof(v108));
    memset(&v113[8], 0, 40);
    long long v114 = xmmword_1B6E50D30;
    long long v115 = 1uLL;
    *(void *)&long long v116 = 0;
    *((void *)&v116 + 1) = 1;
    long long v117 = 0uLL;
    v113[0] = 3;
    *(void *)&long long v111 = v97;
    *((void *)&v111 + 1) = v107;
    *(void *)&long long v112 = v39;
    *((void *)&v112 + 1) = 1;
    sub_1B635FA4C((uint64_t)v108, (uint64_t)&v113[8]);
    v110[6] = v115;
    v110[7] = v116;
    v110[8] = v117;
    v110[2] = *(_OWORD *)v113;
    v110[3] = *(_OWORD *)&v113[16];
    v110[4] = *(_OWORD *)&v113[32];
    v110[5] = v114;
    v110[0] = v111;
    v110[1] = v112;
    uint64_t v40 = v99;
    if (v35)
    {
      uint64_t v41 = v36;
      unint64_t v42 = 0;
      uint64_t v43 = 0;
      unsigned int v44 = (void *)(v107 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      uint64_t v45 = v35 - 1;
      do
      {
        while (1)
        {
          uint64_t v46 = v43;
          uint64_t v47 = 16 * v43;
          long long v48 = *(_OWORD *)(v34 + 16 * v43);
          uint64_t v49 = v41 + 32 * v43;
          long long v50 = *(_OWORD *)v49;
          long long v51 = *(_OWORD *)(v37 + 16 * v43);
          LODWORD(v52) = HIDWORD(*(void *)(v37 + 16 * v43));
          if ((LODWORD(v52) & 0x7FFFFF) != 0) {
            LODWORD(v53) = *(_OWORD *)(v37 + 16 * v43);
          }
          else {
            LODWORD(v53) = HIDWORD(*(void *)(v37 + 16 * v43));
          }
          if ((~LODWORD(v52) & 0x7F800000) != 0) {
            LODWORD(v53) = HIDWORD(*(void *)(v37 + 16 * v43));
          }
          if (v52 >= *(float *)&v51) {
            float v54 = v53;
          }
          else {
            LODWORD(v54) = *(_OWORD *)(v37 + 16 * v43);
          }
          if ((DWORD2(v51) & 0x7FFFFF) != 0) {
            float v55 = v54;
          }
          else {
            LODWORD(v55) = *(void *)(v37 + 16 * v43 + 8);
          }
          if ((~DWORD2(v51) & 0x7F800000) != 0) {
            LODWORD(v55) = *(void *)(v37 + 16 * v43 + 8);
          }
          float v56 = *((float *)&v51 + 2) >= v54 ? v55 : v54;
          HIDWORD(v48) = *(_DWORD *)(v104 + 4 * v43);
          uint64_t v57 = &v105[48 * v43];
          *(_OWORD *)uint64_t v57 = v48;
          *((_OWORD *)v57 + 1) = v50;
          *((float *)v57 + 8) = v56;
          uint64_t v58 = 4 * v43++;
          *(float *)(v104 + v58) = *(float *)(v104 + v58) + 0.01;
          *(_OWORD *)&v25[v47] = *(_OWORD *)(v102 + v47);
          uint64_t v59 = v42 + 1;
          int v60 = *(_DWORD *)(v49 + 16);
          int v61 = *(_DWORD *)(v49 + 20);
          if (v46 == v45) {
            break;
          }
          uint64_t v62 = v41 + 32 * v43;
          if (v60 != *(_DWORD *)(v62 + 16) || v61 != *(_DWORD *)(v62 + 20)) {
            break;
          }
          ++v42;
          if (v43 == v35) {
            goto LABEL_52;
          }
        }
        if (v60 == -1 && !v61) {
          break;
        }
        if (v60 < 0) {
          break;
        }
        if (v44[1] <= v60) {
          break;
        }
        uint64_t v63 = *v44 + 12 * v60;
        if (v61 != -1 && *(_DWORD *)(v63 + 8) != v61) {
          break;
        }
        uint64_t v64 = *(void *)(*(void *)(v38 + 136) + 8 * *(int *)(*v44 + 12 * v60) + 32);
        uint64_t v65 = *(void *)(v64 + 48);
        uint64_t v66 = *(void *)(v65 + 16);
        if (!v66) {
          break;
        }
        uint64_t v67 = (void *)(v65 + 56);
        while ((ValueMetadata *)*(v67 - 3) != &type metadata for MaterialRuntime)
        {
          v67 += 5;
          if (!--v66) {
            goto LABEL_52;
          }
        }
        uint64_t v89 = v43;
        uint64_t v90 = v45;
        uint64_t v91 = v44;
        uint64_t v92 = v37;
        uint64_t v93 = v41;
        uint64_t v94 = v25;
        uint64_t v98 = v35;
        uint64_t v100 = v34;
        uint64_t v68 = *(void *)(v64 + 128) + *v67 + 248 * *(__int16 *)(v63 + 4);
        long long v69 = *(_OWORD *)(v68 + 48);
        long long v71 = *(_OWORD *)v68;
        long long v70 = *(_OWORD *)(v68 + 16);
        *(_OWORD *)float v113 = *(_OWORD *)(v68 + 32);
        *(_OWORD *)&v113[16] = v69;
        long long v111 = v71;
        long long v112 = v70;
        long long v72 = *(_OWORD *)(v68 + 112);
        long long v74 = *(_OWORD *)(v68 + 64);
        long long v73 = *(_OWORD *)(v68 + 80);
        long long v115 = *(_OWORD *)(v68 + 96);
        long long v116 = v72;
        *(_OWORD *)&v113[32] = v74;
        long long v114 = v73;
        long long v75 = *(_OWORD *)(v68 + 176);
        long long v77 = *(_OWORD *)(v68 + 128);
        long long v76 = *(_OWORD *)(v68 + 144);
        long long v119 = *(_OWORD *)(v68 + 160);
        long long v120 = v75;
        long long v117 = v77;
        long long v118 = v76;
        long long v79 = *(_OWORD *)(v68 + 208);
        long long v78 = *(_OWORD *)(v68 + 224);
        long long v80 = *(_OWORD *)(v68 + 192);
        uint64_t v124 = *(void *)(v68 + 240);
        long long v122 = v79;
        long long v123 = v78;
        long long v121 = v80;
        sub_1B681C5EC((uint64_t)&v111);
        sub_1B6B4BD54(&v111, v96, 0, 0, (uint64_t)v110);
        uint64_t v81 = v40;
        if (v42 <= 0xFFFFFFFFFFFF15A0)
        {
          uint64_t v82 = 0;
          uint64_t v83 = (uint64_t)(v42 + 30000) / 30000;
          uint64_t v84 = v101;
          uint64_t v85 = v95;
          uint64_t v86 = 30000;
          do
          {
            if (v86 >= v59) {
              uint64_t v87 = v59;
            }
            else {
              uint64_t v87 = v86;
            }
            uint64_t v88 = v87 + v82;
            objc_msgSend(v11, sel_setVertexBufferOffset_atIndex_, v84, 4);
            objc_msgSend(v11, sel_setVertexBufferOffset_atIndex_, v85, 5);
            sub_1B6CC8618(v88);
            v86 += 30000;
            v82 -= 30000;
            v85 += 480000;
            v84 += 1440000;
            --v83;
          }
          while (v83);
        }
        sub_1B63427E4((uint64_t)&v111);
        unint64_t v42 = 0;
        uint64_t v34 = v100;
        uint64_t v43 = v89;
        uint64_t v45 = v90;
        uint64_t v38 = v107;
        uint64_t v40 = v81;
        uint64_t v35 = v98;
        uint64_t v41 = v93;
        uint64_t v25 = v94;
        unsigned int v44 = v91;
        uint64_t v37 = v92;
      }
      while (v89 != v98);
    }
LABEL_52:
    sub_1B635FC14((uint64_t)v110);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1B681C594()
{
  if (!qword_1EB980C00)
  {
    sub_1B63B29DC();
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980C00);
    }
  }
}

uint64_t sub_1B681C5EC(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 24);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t *sub_1B681C714(uint64_t a1)
{
  float v2 = *(float *)(a1 + OBJC_IVAR____TtC3VFX13EntityManager_clock + 64);
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v55 = qword_1EB997A18;
  int v56 = 0;
  char v57 = 2;
  uint64_t v58 = 0;
  char v59 = 2;
  uint64_t v60 = 0;
  swift_retain();
  sub_1B663CCD8((uint64_t)v40);
  swift_release();
  v52[0] = v40[0];
  v52[1] = v40[1];
  uint64_t v53 = v41;
  sub_1B62C9DA8(a1, (uint64_t)v52, 0x200000000, v42);
  sub_1B62D7510((uint64_t)v42, (uint64_t)v43, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v43[0]) {
    return (uint64_t *)sub_1B62CA064((uint64_t)v40);
  }
  if (v49 > 0 && (uint64_t v33 = v46) != 0)
  {
    id v3 = v48;
    uint64_t v36 = v48[4];
    int v35 = *(unsigned __int8 *)(v47 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
    v50[0] = v43[0];
    v50[1] = v43[1];
    uint64_t v51 = v44;
    uint64_t v31 = (uint64_t)(v48 + 6);
    uint64_t v32 = v45;
    uint64_t v30 = v48 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = (unsigned int *)(v32 + 48 * v4);
      uint64_t v7 = *v6;
      uint64_t v38 = v6[1];
      uint64_t v8 = (uint64_t *)*((void *)v6 + 2);
      uint64_t v9 = *((void *)v6 + 3);
      uint64_t v11 = *((void *)v6 + 4);
      uint64_t v10 = *((void *)v6 + 5);
      uint64_t v34 = v5;
      if (v35)
      {
        uint64_t v12 = *(os_unfair_lock_s **)(v10 + 376);
        swift_retain_n();
        os_unfair_lock_lock(v12);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 344));
        swift_release();
      }
      else
      {
        swift_retain();
      }
      ecs_stack_allocator_push_snapshot(v36);
      sub_1B62D7510(v31, (uint64_t)v54, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
      uint64_t v13 = v3[4];
      uint64_t v14 = *(void *)(*(void *)(*(void *)(*(void *)(v10 + 40) + 16) + 32) + 16) + 1;
      swift_retain();
      v3[6] = ecs_stack_allocator_allocate(v13, 48 * v14, 8);
      v3[7] = v14;
      v30[1] = 0;
      v30[2] = 0;
      *uint64_t v30 = 0;
      swift_release();
      uint64_t v15 = (long long *)sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v8, v9, v11, (uint64_t)v3);
      uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for ParticleCustomEmitter, (uint64_t)&off_1F0F89098, v8, v9, v11, (uint64_t)v3);
      if (v8)
      {
        long long v17 = v29;
        if (v11)
        {
          id v18 = (float *)(v16 + 16);
          do
          {
            float v19 = *(v18 - 2) + (float)(*(v18 - 3) + (float)(v2 * *(v18 - 4)));
            *(v18 - 2) = v19;
            uint64_t v20 = (uint64_t)v19;
            if ((uint64_t)v19 >= 1)
            {
              long long v21 = *v15;
              HIDWORD(v21) = HIDWORD(v17);
              long long v39 = v21;
              (*(void (**)(void *, uint64_t))v18)(v3, v20);
              *(v18 - 2) = *(v18 - 2) - (float)v20;
              long long v17 = v39;
            }
            v18 += 8;
            ++v15;
            --v11;
          }
          while (v11);
          long long v29 = v17;
        }
      }
      else if (v7 != v38)
      {
        uint64_t v22 = (__n128 *)&v15[v7];
        uint64_t v23 = (float *)(v16 + 32 * v7 + 16);
        uint64_t v24 = v38 - v7;
        do
        {
          float v25 = *(v23 - 2) + (float)(*(v23 - 3) + (float)(v2 * *(v23 - 4)));
          *(v23 - 2) = v25;
          uint64_t v26 = (uint64_t)v25;
          if ((uint64_t)v25 >= 1)
          {
            __n128 v27 = *v22;
            v27.n128_u32[3] = v37;
            (*(void (**)(void *, uint64_t, __n128))v23)(v3, (uint64_t)v25, v27);
            *(v23 - 2) = *(v23 - 2) - (float)v26;
          }
          ++v22;
          v23 += 8;
          --v24;
        }
        while (v24);
      }
      uint64_t v5 = v34;
      sub_1B6345178(v3, (unsigned __int16 **)v50, (uint64_t)v54);
      sub_1B634507C((char *)v10);
      ecs_stack_allocator_pop_snapshot(v36);
      if (v35)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 344));
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 376));
      }
      swift_release();
      ++v4;
    }
    while (v4 != v33);
    sub_1B62CA064((uint64_t)v40);
    sub_1B632F170(v42);
  }
  else
  {
    sub_1B62CA064((uint64_t)v40);
  }
  return sub_1B632F170(v42);
}

ValueMetadata *type metadata accessor for Authoring()
{
  return &type metadata for Authoring;
}

ValueMetadata *type metadata accessor for SubEntity()
{
  return &type metadata for SubEntity;
}

ValueMetadata *type metadata accessor for ParticleAffectedByGlobalForce()
{
  return &type metadata for ParticleAffectedByGlobalForce;
}

__n128 initializeWithCopy for ParticleLegacyRenderer(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ParticleLegacyRenderer()
{
  return &type metadata for ParticleLegacyRenderer;
}

ValueMetadata *type metadata accessor for ParticleGlobalForce()
{
  return &type metadata for ParticleGlobalForce;
}

unint64_t sub_1B681CC00()
{
  unint64_t result = qword_1E9DD1188;
  if (!qword_1E9DD1188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1188);
  }
  return result;
}

uint64_t sub_1B681CC54(void *a1)
{
  sub_1B681CFB0(0, &qword_1E9DD1190, (uint64_t (*)(void))sub_1B681CF08, (uint64_t)&type metadata for SubEntity.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  uint64_t v8 = (char *)v16 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1B62C14BC(a1, v9);
  if (!sub_1B62B8F14(2000, v9, v10))
  {
    sub_1B62C14BC(a1, a1[3]);
    sub_1B681CF08();
    sub_1B6E33A48();
    if (!v1)
    {
      uint64_t v11 = a1[3];
      uint64_t v12 = a1[4];
      sub_1B62C14BC(a1, v11);
      LOBYTE(v16[0]) = sub_1B62BF5E0(1036, v11, v12);
      sub_1B62B1EA8();
      sub_1B6E32DF8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      unsigned int v14 = v17[0];
      uint64_t v15 = HIDWORD(v17[0]);
      goto LABEL_7;
    }
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A28();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  sub_1B62C14BC(v17, v17[3]);
  sub_1B62B1EA8();
  sub_1B6E33518();
  unsigned int v14 = v16[0];
  uint64_t v15 = v16[1];
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v17);
LABEL_7:
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v14 | (unint64_t)(v15 << 32);
}

unint64_t sub_1B681CF08()
{
  unint64_t result = qword_1E9DD1198;
  if (!qword_1E9DD1198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1198);
  }
  return result;
}

unint64_t sub_1B681CF5C()
{
  unint64_t result = qword_1E9DD11A8;
  if (!qword_1E9DD11A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD11A8);
  }
  return result;
}

void sub_1B681CFB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1B681D018()
{
  unint64_t result = qword_1E9DD11B8;
  if (!qword_1E9DD11B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD11B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleGlobalForce.CodingKeys()
{
  return &type metadata for ParticleGlobalForce.CodingKeys;
}

ValueMetadata *type metadata accessor for ParticleAffectedByGlobalForce.CodingKeys()
{
  return &type metadata for ParticleAffectedByGlobalForce.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SubEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B681D158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubEntity.CodingKeys()
{
  return &type metadata for SubEntity.CodingKeys;
}

ValueMetadata *type metadata accessor for Authoring.CodingKeys()
{
  return &type metadata for Authoring.CodingKeys;
}

unint64_t sub_1B681D1A4()
{
  unint64_t result = qword_1E9DD11C0;
  if (!qword_1E9DD11C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD11C0);
  }
  return result;
}

unint64_t sub_1B681D1FC()
{
  unint64_t result = qword_1E9DD11C8;
  if (!qword_1E9DD11C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD11C8);
  }
  return result;
}

unint64_t sub_1B681D254()
{
  unint64_t result = qword_1E9DD11D0;
  if (!qword_1E9DD11D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD11D0);
  }
  return result;
}

unint64_t sub_1B681D2AC()
{
  unint64_t result = qword_1E9DD11D8;
  if (!qword_1E9DD11D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD11D8);
  }
  return result;
}

unint64_t sub_1B681D304()
{
  unint64_t result = qword_1E9DD11E0;
  if (!qword_1E9DD11E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD11E0);
  }
  return result;
}

unint64_t sub_1B681D35C()
{
  unint64_t result = qword_1E9DD11E8;
  if (!qword_1E9DD11E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD11E8);
  }
  return result;
}

unint64_t sub_1B681D3B4()
{
  unint64_t result = qword_1E9DD11F0;
  if (!qword_1E9DD11F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD11F0);
  }
  return result;
}

unint64_t sub_1B681D40C()
{
  unint64_t result = qword_1E9DD11F8;
  if (!qword_1E9DD11F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD11F8);
  }
  return result;
}

unint64_t sub_1B681D464()
{
  unint64_t result = qword_1E9DD1200;
  if (!qword_1E9DD1200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1200);
  }
  return result;
}

uint64_t sub_1B681D4B8(uint64_t a1)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(a1 + 8);
  swift_retain();
  sub_1B6359D30(v3, &v33);
  swift_release();
  if ((void)v34)
  {
    char v4 = (_BYTE)v33 != 0;
  }
  else
  {
    sub_1B6D3EC54((uint64_t)&unk_1F0F82A20);
    sub_1B6D3EC54((uint64_t)&unk_1F0F829C0);
    sub_1B6D3EC54((uint64_t)&unk_1F0F829F0);
    char v4 = 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a1 + 104);
  long long v30 = *(_OWORD *)(a1 + 88);
  long long v31 = v5;
  uint64_t v32 = *(void *)(a1 + 120);
  sub_1B663CEF8((uint64_t)v17);
  sub_1B636E080();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = &type metadata for TransientOriginScale;
  *(void *)(inited + 40) = &off_1F0F843D8;
  sub_1B63B9C40(inited, v4, (uint64_t)v18);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v17);
  long long v7 = v18[1];
  *(_OWORD *)(v1 + 16) = v18[0];
  *(_OWORD *)(v1 + 32) = v7;
  *(void *)(v1 + 48) = v19;
  sub_1B663D118((uint64_t)v20);
  uint64_t v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = &type metadata for TransientOriginScale;
  *(void *)(v8 + 40) = &off_1F0F843D8;
  sub_1B63B9C40(v8, v4, (uint64_t)v21);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v20);
  *(_OWORD *)(v1 + 56) = v21[0];
  *(_OWORD *)(v1 + 72) = v21[1];
  *(void *)(v1 + 88) = v22;
  sub_1B663D338((uint64_t)v23);
  uint64_t v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B6E77050;
  *(void *)(v9 + 32) = &type metadata for TransientOriginScale;
  *(void *)(v9 + 40) = &off_1F0F843D8;
  sub_1B63B9C40(v9, v4, (uint64_t)v24);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v23);
  long long v10 = v24[1];
  *(_OWORD *)(v1 + 96) = v24[0];
  *(_OWORD *)(v1 + 112) = v10;
  *(void *)(v1 + 128) = v25;
  uint64_t v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B6E77050;
  *(void *)(v11 + 32) = &type metadata for Scale1;
  *(void *)(v11 + 40) = &off_1F0FA0E48;
  swift_retain();
  sub_1B62AD184(v26);
  swift_setDeallocating();
  sub_1B62CA064((uint64_t)v24);
  long long v12 = v26[1];
  *(_OWORD *)(v1 + 136) = v26[0];
  *(_OWORD *)(v1 + 152) = v12;
  *(void *)(v1 + 168) = v27;
  long long v13 = *(_OWORD *)(v1 + 112);
  long long v33 = *(_OWORD *)(v1 + 96);
  long long v34 = v13;
  uint64_t v35 = *(void *)(v1 + 128);
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B6E77050;
  *(void *)(v14 + 32) = &type metadata for Scale2;
  *(void *)(v14 + 40) = &off_1F0FA0FB0;
  swift_retain();
  sub_1B62AD184(v28);
  swift_setDeallocating();
  sub_1B62F648C(a1);
  sub_1B62CA064((uint64_t)&v33);
  long long v15 = v28[1];
  *(_OWORD *)(v1 + 176) = v28[0];
  *(_OWORD *)(v1 + 192) = v15;
  *(void *)(v1 + 208) = v29;
  return v1;
}

uint64_t sub_1B681D8E4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ParticleSizeOverLife.System()
{
  return self;
}

uint64_t sub_1B681D960(void *a1)
{
  uint64_t v3 = v1;
  sub_1B681F074(0, &qword_1E9DD1208, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  long long v10 = &v12[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B681F020();
  sub_1B6E33A88();
  *(void *)long long v12 = *(void *)v3;
  char v13 = 0;
  sub_1B67FEC7C();
  sub_1B6E32FA8();
  if (!v2)
  {
    v12[0] = *(unsigned char *)(v3 + 8);
    char v13 = 1;
    sub_1B66C60C4();
    sub_1B6E32FA8();
    *(_OWORD *)long long v12 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)&v12[9] = *(_OWORD *)(v3 + 25);
    char v13 = 2;
    sub_1B665D590();
    sub_1B681F0D8((unint64_t *)&qword_1E9DD85D0);
    sub_1B6E32FA8();
    *(_OWORD *)long long v12 = *(_OWORD *)(v3 + 48);
    *(_OWORD *)&v12[9] = *(_OWORD *)(v3 + 57);
    char v13 = 3;
    sub_1B6E32FA8();
    *(_OWORD *)long long v12 = *(_OWORD *)(v3 + 80);
    *(_OWORD *)&v12[9] = *(_OWORD *)(v3 + 89);
    char v13 = 4;
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B681DBF4(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1B681D4B8(a1);
  return v2;
}

const char *sub_1B681DC34()
{
  return "ParticleSizeOverLife";
}

uint64_t sub_1B681DC48(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB5274(*a1, *a2);
}

uint64_t sub_1B681DC54()
{
  uint64_t result = 0x7469736F706D6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701080941;
      break;
    case 2:
      uint64_t result = 0x657672754378;
      break;
    case 3:
      uint64_t result = 0x657672754379;
      break;
    case 4:
      uint64_t result = 0x65767275437ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B681DCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B681DF20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B681DD20(uint64_t a1)
{
  unint64_t v2 = sub_1B681F020();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B681DD5C(uint64_t a1)
{
  unint64_t v2 = sub_1B681F020();

  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1B681DD98@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B681E110(a1, v7);
  if (!v2)
  {
    long long v5 = v8[0];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 89) = *(_OWORD *)((char *)v8 + 9);
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1B681DDEC(void *a1)
{
  return sub_1B681D960(a1);
}

uint64_t sub_1B681DE04()
{
  return type metadata accessor for ParticleSizeOverLife.System();
}

char *sub_1B681DE24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1B6D3EC54((uint64_t)&unk_1F0F82A20);
  uint64_t v4 = v3;
  long long v5 = sub_1B6D3EC54((uint64_t)&unk_1F0F829C0);
  uint64_t v7 = v6;
  __n128 result = sub_1B6D3EC54((uint64_t)&unk_1F0F829F0);
  *(unsigned char *)a1 = 2;
  *(_DWORD *)(a1 + 4) = 1065353216;
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 1;
  *(void *)(a1 + 80) = result;
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 104) = 1;
  return result;
}

uint64_t type metadata accessor for ParticleSizeOverLife.GPUSystem()
{
  return self;
}

const char *sub_1B681DEEC()
{
  return "ParticleSizeOverLife.GPU";
}

uint64_t sub_1B681DF00()
{
  return type metadata accessor for ParticleSizeOverLife.GPUSystem();
}

uint64_t sub_1B681DF20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7469736F706D6F63 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657672754378 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657672754379 && a2 == 0xE600000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65767275437ALL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1B681E110@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1B681F074(0, &qword_1EB980A10, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  long long v10 = (char *)&v34 - v9;
  uint64_t v11 = sub_1B6D3EC54((uint64_t)&unk_1F0F82728);
  unint64_t v42 = v12;
  uint64_t v43 = v11;
  uint64_t v44 = sub_1B6D3EC54((uint64_t)&unk_1F0F826C8);
  uint64_t v47 = v13;
  uint64_t v14 = sub_1B6D3EC54((uint64_t)&unk_1F0F826F8);
  uint64_t v45 = v15;
  uint64_t v46 = v14;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B681F020();
  sub_1B6E33A48();
  if (v2)
  {
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = v7;
    uint64_t v41 = a2;
    char v52 = 0;
    sub_1B63BD348();
    sub_1B6E32DF8();
    int v17 = v48;
    int v18 = HIDWORD(v48);
    char v52 = 1;
    sub_1B66C6070();
    sub_1B6E32DF8();
    int v19 = v48;
    sub_1B665D590();
    uint64_t v21 = v20;
    char v52 = 2;
    uint64_t v39 = sub_1B681F0D8((unint64_t *)&qword_1EB97FD90);
    uint64_t v40 = v21;
    sub_1B6E32DF8();
    int v36 = v19;
    int v37 = v17;
    uint64_t v22 = (char *)v48;
    uint64_t v23 = v49;
    int v35 = v51;
    uint64_t v38 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v52 = 3;
    sub_1B6E32DF8();
    unint64_t v42 = v23;
    uint64_t v43 = v22;
    uint64_t v24 = v48;
    uint64_t v25 = v49;
    uint64_t v26 = v50;
    int v34 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v52 = 4;
    sub_1B6E32DF8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v6);
    uint64_t v39 = v48;
    uint64_t v44 = v49;
    uint64_t v47 = v50;
    LODWORD(v40) = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = v43;
    swift_bridgeObjectRetain();
    uint64_t v28 = v42;
    swift_bridgeObjectRetain();
    uint64_t v29 = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v32 = v41;
    *uint64_t v41 = v37;
    *((_DWORD *)v32 + 1) = v18;
    v32[8] = v36;
    *((void *)v32 + 2) = v27;
    *((void *)v32 + 3) = v28;
    *((void *)v32 + 4) = v29;
    v32[40] = v35;
    *((void *)v32 + 6) = v24;
    *((void *)v32 + 7) = v25;
    *((void *)v32 + 8) = v26;
    char v32[72] = v34;
    long long v33 = v44;
    *((void *)v32 + 10) = v30;
    *((void *)v32 + 11) = v33;
    *((void *)v32 + 12) = v47;
    v32[104] = v40;
  }
  return result;
}

uint64_t sub_1B681E6F0(uint64_t a1)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  long long v38 = *(_OWORD *)(a1 + 48);
  long long v2 = *(_OWORD *)(a1 + 16);
  swift_retain();
  sub_1B6359D30(*((uint64_t *)&v2 + 1), &v39);
  swift_release();
  uint64_t v3 = v40;
  if (v40)
  {
    char v29 = v51;
    uint64_t v4 = v50;
    uint64_t v34 = v49;
    uint64_t v35 = v48;
    uint64_t v5 = v46;
    uint64_t v36 = v45;
    uint64_t v37 = v44;
    uint64_t v6 = v41;
    char v8 = v39;
    int v7 = DWORD1(v39);
    unsigned __int8 v32 = BYTE8(v39);
    uint64_t v33 = v42;
    char v30 = v47;
    char v31 = v43;
  }
  else
  {
    uint64_t v3 = sub_1B6D3EC54((uint64_t)&unk_1F0F82A20);
    uint64_t v6 = v9;
    long long v10 = sub_1B6D3EC54((uint64_t)&unk_1F0F829C0);
    uint64_t v36 = v11;
    uint64_t v37 = (uint64_t)v10;
    long long v12 = sub_1B6D3EC54((uint64_t)&unk_1F0F829F0);
    uint64_t v34 = v13;
    uint64_t v35 = (uint64_t)v12;
    unsigned __int8 v32 = 0;
    uint64_t v33 = 0;
    uint64_t v5 = 0;
    uint64_t v4 = 0;
    char v30 = 1;
    char v31 = 1;
    int v7 = 1065353216;
    char v8 = 2;
    char v29 = 1;
  }
  sub_1B62EBAB4();
  BOOL v14 = sub_1B62FACF8((uint64_t)&type metadata for ParticleAge);
  swift_release();
  if (v14 && (sub_1B62EBAB4(), BOOL v15 = sub_1B62FACF8((uint64_t)&type metadata for ParticleLifetime), swift_release(), v15))
  {
    LODWORD(v39) = v7;
    BYTE4(v39) = v8;
    uint64_t v16 = *(void **)a1;
    if (*(void *)a1)
    {
      uint64_t ObjectType = swift_getObjectType();
      type metadata accessor for particle_size_over_life_uniforms(0);
      sub_1B6B594A8((uint64_t)&v39, 1, ObjectType, v18, v19, v20, v21, v22);
    }
    uint64_t v23 = v6;
    if (v32)
    {
      if (v32 != 1)
      {
        swift_retain();
        uint64_t v24 = sub_1B6CE1610(v35, v34, v4, v29);
        swift_release();
        if (v16) {
          objc_msgSend(v16, sel_setTexture_atIndex_, v24, 2);
        }
        swift_unknownObjectRelease();
      }
      swift_retain();
      uint64_t v25 = sub_1B6CE1610(v37, v36, v5, v30);
      swift_release();
      if (v16) {
        objc_msgSend(v16, sel_setTexture_atIndex_, v25, 1);
      }
      swift_unknownObjectRelease();
    }
    swift_retain();
    uint64_t v26 = sub_1B6CE1610((uint64_t)v3, v23, v33, v31);
    swift_release();
    if (v16) {
      objc_msgSend(v16, sel_setTexture_atIndex_, v26, 0);
    }
    swift_unknownObjectRelease();
    sub_1B62D8328(0, (unint64_t *)&qword_1EB985580, (uint64_t)&type metadata for FunctionConstant, MEMORY[0x1E4FBBE00]);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1B6E77050;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v27 + 32) = xmmword_1B6E89830;
    *(unsigned char *)(v27 + 48) = 0;
    *(void *)(v27 + 64) = v32;
    *(_OWORD *)(v27 + 72) = 0u;
    *(_OWORD *)(v27 + 88) = 0u;
    *(_OWORD *)(v27 + 104) = 0u;
    *(void *)(v27 + 120) = 0;
    *(unsigned char *)(v27 + 128) = 14;
    swift_retain();
    sub_1B6786A24(a1);
    sub_1B6BFF388(v38, v2, v16 == 0, v27, a1, 0xD000000000000017, 0x80000001B6F38A10, 0);
    sub_1B6786A7C(a1);
    swift_release();
    swift_setDeallocating();
    swift_arrayDestroy();
    return swift_deallocClassInstance();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t destroy for ParticleSizeOverLife()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ParticleSizeOverLife(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParticleSizeOverLife(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

__n128 initializeWithTake for ParticleSizeOverLife(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ParticleSizeOverLife(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticleSizeOverLife(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 105)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleSizeOverLife(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSizeOverLife()
{
  return &type metadata for ParticleSizeOverLife;
}

unint64_t sub_1B681F020()
{
  unint64_t result = qword_1EB97F460;
  if (!qword_1EB97F460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F460);
  }
  return result;
}

void sub_1B681F074(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B681F020();
    unint64_t v7 = a3(a1, &type metadata for ParticleSizeOverLife.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1B681F0D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B665D590();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ParticleSizeOverLife.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B681F1E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleSizeOverLife.CodingKeys()
{
  return &type metadata for ParticleSizeOverLife.CodingKeys;
}

unint64_t sub_1B681F224()
{
  unint64_t result = qword_1E9DD1210;
  if (!qword_1E9DD1210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1210);
  }
  return result;
}

unint64_t sub_1B681F27C()
{
  unint64_t result = qword_1EB97F470;
  if (!qword_1EB97F470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F470);
  }
  return result;
}

unint64_t sub_1B681F2D4()
{
  unint64_t result = qword_1EB97F468;
  if (!qword_1EB97F468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97F468);
  }
  return result;
}

ValueMetadata *type metadata accessor for Entity()
{
  return &type metadata for Entity;
}

ValueMetadata *type metadata accessor for EntityInstance()
{
  return &type metadata for EntityInstance;
}

unint64_t sub_1B681F34C()
{
  unint64_t result = qword_1E9DD1218;
  if (!qword_1E9DD1218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1218);
  }
  return result;
}

uint64_t sub_1B681F3A0@<X0>(unint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (a1 == 0xFFFFFFFF)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
    return v5(a3, 1, 1);
  }
  else
  {
    swift_retain();
    sub_1B62EB448(a1, a2, a3);
    return swift_release();
  }
}

uint64_t sub_1B681F47C(void *a1, unint64_t a2)
{
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6E33A68();
  if (a2 == -1)
  {
    sub_1B62C1550((uint64_t)a1, (uint64_t)v11);
    if (!HIDWORD(a2))
    {
      _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v11);
      goto LABEL_9;
    }
  }
  else
  {
    sub_1B62C1550((uint64_t)a1, (uint64_t)v11);
  }
  sub_1B62C14BC(v11, v11[3]);
  BOOL v4 = sub_1B6C714E8();
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v11);
  if (v4)
  {
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    sub_1B62C14BC(a1, v5);
    if (sub_1B6C71530(v5, v6))
    {
      if ((sub_1B631EA84(a2) & 1) == 0)
      {
        sub_1B62C550C((uint64_t)v12, v13);
        sub_1B6E335D8();
        swift_release();
        return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v12);
      }
      swift_release();
    }
  }
LABEL_9:
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_1B62C14BC(a1, v7);
  uint64_t v9 = *(void *)(sub_1B6C71584(v7, v8) + 112);
  swift_bridgeObjectRetain();
  swift_release();
  if (*(void *)(v9 + 16)) {
    sub_1B62BE38C(a2);
  }
  swift_bridgeObjectRelease();
  sub_1B62C550C((uint64_t)v12, v13);
  sub_1B6E335D8();
  return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v12);
}

uint64_t sub_1B681F67C(void *a1)
{
  return sub_1B681F47C(a1, *v1);
}

uint64_t sub_1B681F698()
{
  return 0x5B797469746E453CLL;
}

uint64_t sub_1B681F76C()
{
  return sub_1B681F698();
}

void sub_1B681F774(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v27[0] = a5;
  unint64_t v9 = HIDWORD(a2);
  uint64_t v10 = sub_1B6E324B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  BOOL v14 = (char *)v27 - v13;
  uint64_t v15 = *(void *)(a4 - 8);
  v18.n128_f64[0] = MEMORY[0x1F4188790](v16, v17);
  uint64_t v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 != -1 || v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a1, v10, v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      uint64_t v21 = *(void *)(a3 + OBJC_IVAR____TtC3VFX13EntityManager_replicationStream);
      swift_retain();
      if (v21)
      {
        char v22 = *(unsigned char *)(v21 + 80);
        MEMORY[0x1BA9B8670](v21 + 48);
        uint64_t v21 = *(void *)(v21 + 56);
      }
      else
      {
        char v22 = 0;
      }
      uint64_t v26 = v27[0];
      uint64_t v29 = 0;
      swift_unknownObjectUnownedInit();
      uint64_t v28 = a3;
      uint64_t v29 = v21;
      swift_unknownObjectUnownedAssign();
      swift_unownedRetain();
      swift_unknownObjectRelease();
      char v30 = v22;
      sub_1B636C4E0((uint64_t)&v28, (uint64_t)v31);
      sub_1B681FA94(v31, a2, a3, a4, v26);
      sub_1B636C450((uint64_t)v31);
      if (v22) {
        sub_1B6A667F0(1);
      }
      swift_release();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v14, a4);
      uint64_t v23 = swift_retain();
      MEMORY[0x1F4188790](v23, v24);
      uint64_t v25 = v27[0];
      v27[-6] = a4;
      v27[-5] = v25;
      v27[-4] = v20;
      LODWORD(v27[-3]) = a2;
      HIDWORD(v27[-3]) = v9;
      v27[-2] = a3;
      sub_1B636C318(0, (void (*)(unsigned char *))sub_1B681FD88);
      swift_release();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, a4);
    }
  }
}

void *sub_1B681FA94(void *result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = result;
  unint64_t v9 = HIDWORD(a2);
  if (a2 != 0xFFFFFFFF)
  {
    uint64_t v10 = *result;
    swift_unownedRetainStrong();
    swift_release();
    swift_unownedRetainStrong();
    sub_1B62E280C(a4, a5, a2, 0);
    swift_release();
    unint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
    if (result)
    {
      uint64_t v11 = result;
      if ((*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5))
      {
        uint64_t v12 = (char *)v11 + OBJC_IVAR____TtC3VFX13EntityManager_scriptingConfig;
        uint64_t v13 = type metadata accessor for ScriptingConfiguration();
        ++*(void *)&v12[*(int *)(v13 + 36)];
      }
      unint64_t result = (void *)swift_unknownObjectRelease();
    }
    if (*((unsigned char *)v8 + 24) == 1)
    {
      swift_unownedRetainStrong();
      v14[0] = a2;
      v14[1] = v9;
      uint64_t v15 = v10;
      uint64_t v16 = a4;
      uint64_t v17 = a5;
      char v18 = 13;
      sub_1B6A62610((uint64_t)v14);
      swift_release();
      return (void *)sub_1B67421B0((uint64_t)v14);
    }
  }
  return result;
}

BOOL sub_1B681FBE4(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(_DWORD *)(a1 + 4) == *(_DWORD *)(a2 + 4)
      && *(void *)(a1 + 8) == *(void *)(a2 + 8);
}

uint64_t sub_1B681FC14()
{
  return sub_1B6E33988();
}

uint64_t sub_1B681FC80()
{
  return sub_1B6E33928();
}

uint64_t sub_1B681FCC8()
{
  return sub_1B6E33988();
}

unint64_t sub_1B681FD34()
{
  unint64_t result = qword_1EB97FDB8;
  if (!qword_1EB97FDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FDB8);
  }
  return result;
}

uint64_t sub_1B681FD88()
{
  return sub_1B6A61D88(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1B681FDC0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1) {
    MEMORY[0x1BA9B84C0](v1, -1, -1);
  }
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for HeapAllocator()
{
  return &type metadata for HeapAllocator;
}

ValueMetadata *type metadata accessor for StackAllocator()
{
  return &type metadata for StackAllocator;
}

uint64_t sub_1B681FE30(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_1B6E318E8();
  return sub_1B6E31A48();
}

uint64_t sub_1B681FEB0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a1 + 16);
  unint64_t v20 = *(void *)(a2 + 16);
  if (v20 >= v3) {
    int64_t v4 = *(void *)(a1 + 16);
  }
  else {
    int64_t v4 = *(void *)(a2 + 16);
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1B6C3C3B8(0, v4, 0);
  if (!v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    unint64_t v12 = 0;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v5 = 0;
  unint64_t v21 = 0;
  uint64_t v6 = 0;
  do
  {
    unint64_t v7 = 0;
    if ((v5 & 1) != 0 || v6 == v3)
    {
      char v23 = 1;
      uint64_t v8 = v6;
    }
    else
    {
      uint64_t v8 = v6 + 1;
      if (v21 == v20)
      {
        unint64_t v7 = 0;
        char v23 = 1;
        unint64_t v21 = v20;
      }
      else
      {
        unint64_t v7 = *(void *)(a1 + 32 + 8 * v6);
        ++v21;
        sub_1B67C52A4(v7);
        swift_bridgeObjectRetain();
        char v23 = 0;
      }
    }
    if ((sub_1B69B18E4(v7, 0x8000000000000008) & 1) == 0) {
      sub_1B6E31948();
    }
    sub_1B6C2F4C4(v7);
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B678FC34(v7);
    swift_bridgeObjectRelease();
    unint64_t v10 = *(void *)(v25 + 16);
    unint64_t v9 = *(void *)(v25 + 24);
    if (v10 >= v9 >> 1) {
      sub_1B6C3C3B8(v9 > 1, v10 + 1, 1);
    }
    *(void *)(v25 + 16) = v10 + 1;
    uint64_t v11 = v25 + 16 * v10;
    *(void *)(v11 + 32) = 8315;
    *(void *)(v11 + 40) = 0xE200000000000000;
    --v4;
    uint64_t v6 = v8;
    char v5 = v23;
  }
  while (v4);
  if ((v23 & 1) == 0)
  {
    unint64_t v12 = v21;
LABEL_21:
    if (v6 != v3)
    {
      uint64_t v22 = a1 + 32;
      uint64_t v14 = 16 * v12;
      unint64_t v15 = v20 - v12;
      do
      {
        if (!v15) {
          break;
        }
        uint64_t v24 = v6;
        unint64_t v16 = *(void *)(v22 + 8 * v6);
        sub_1B67C52A4(v16);
        swift_bridgeObjectRetain();
        if ((sub_1B69B18E4(v16, 0x8000000000000008) & 1) == 0) {
          sub_1B6E31948();
        }
        sub_1B6C2F4C4(v16);
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        sub_1B6E31948();
        sub_1B678FC34(v16);
        swift_bridgeObjectRelease();
        unint64_t v18 = *(void *)(v25 + 16);
        unint64_t v17 = *(void *)(v25 + 24);
        if (v18 >= v17 >> 1) {
          sub_1B6C3C3B8(v17 > 1, v18 + 1, 1);
        }
        uint64_t v6 = v24 + 1;
        *(void *)(v25 + 16) = v18 + 1;
        uint64_t v19 = v25 + 16 * v18;
        *(void *)(v19 + 32) = 8315;
        *(void *)(v19 + 40) = 0xE200000000000000;
        v14 += 16;
        --v15;
      }
      while (v3 != v24 + 1);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

unsigned char *sub_1B6820300@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1B682030C(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

unsigned char *sub_1B6820314@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

unsigned char *sub_1B6820328@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

unsigned char *sub_1B682033C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1B6820350(unsigned char *a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  int v4 = *v2;
  if ((v4 & v3) != v3) {
    *uint64_t v2 = v4 | v3;
  }
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_1B6820380@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  int v5 = v4 & v3;
  if ((v4 & v3) != 0) {
    *uint64_t v2 = v4 & ~(_BYTE)v3;
  }
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_1B68203AC@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *uint64_t v2 = v4 | v3;
  int v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned char *sub_1B68203D0(unsigned char *result)
{
  *v1 |= *result;
  return result;
}

unsigned char *sub_1B68203E4(unsigned char *result)
{
  *v1 &= *result;
  return result;
}

unsigned char *sub_1B68203F8(unsigned char *result)
{
  *v1 ^= *result;
  return result;
}

unsigned char *sub_1B682040C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1B6820420(unsigned __int8 *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1B6820434(unsigned char *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1B6820448(unsigned __int8 *a1)
{
  return (*a1 & ~*v1) == 0;
}

unsigned char *sub_1B682045C(unsigned char *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1B6820470@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    int v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1B68204C8()
{
  return swift_release();
}

uint64_t sub_1B68204D0()
{
  return sub_1B6820578(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1B68204E8()
{
  swift_release();

  return swift_release();
}

uint64_t sub_1B6820518()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6820558()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6820560()
{
  return sub_1B6820578(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1B6820578(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return swift_deallocClassInstance();
}

uint64_t sub_1B68205B8()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1B68205F0()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B6820638()
{
  uint64_t v0 = sub_1B6E30AB8();
  sub_1B6829964(v0, qword_1E9DD1220);
  sub_1B6385660(v0, (uint64_t)qword_1E9DD1220);
  sub_1B6E30AA8();
  return sub_1B6E30A78();
}

uint64_t sub_1B68206A4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  sub_1B681FE30(a1, a2);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (v7)
  {
    sub_1B6E315F8();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = *(void *)(v3 + 64);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1B62B2CE0(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *(void *)(v3 + 64);
    *(void *)(v3 + 64) = 0x8000000000000000;
    sub_1B67E60B0(1, a1, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 64) = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = a1;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    return v16;
  }
  uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(v3 + 64);
  *(void *)(v3 + 64) = 0x8000000000000000;
  sub_1B67E60B0(v11 + 1, a1, a2, v12);
  *(void *)(v3 + 64) = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = a1;
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E33098();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1B68208D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  for (uint64_t i = 9; i != -1; --i)
  {
    swift_bridgeObjectRetain();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B633AF88();
    char v6 = sub_1B6E32678();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      sub_1B68206A4(1886217588, 0xE400000000000000);
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      a1 = sub_1B6E32618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v7 = *(void *)(a4 + 16);
  if (v7)
  {
    uint64_t v8 = v7 - 1;
    uint64_t v9 = a4 + 16 * v7 + 24;
    do
    {
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      a1 = sub_1B6E32618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v8;
      v9 -= 16;
    }
    while (v8 != -1);
    uint64_t v10 = 16 * v7 + 24;
    uint64_t v11 = *(void *)(a3 + 16);
    uint64_t v12 = a4 + v10;
    uint64_t v13 = (void *)(a3 + v10);
    uint64_t v17 = v11;
    do
    {
      if (v7 <= v11 && *v13)
      {
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        a1 = sub_1B6E32618();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = v17;
      }
      v12 -= 16;
      v13 -= 2;
      --v7;
    }
    while (v7);
  }
  return a1;
}

uint64_t sub_1B6820C70(unint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  char v9 = a4 & 1;
  uint64_t v10 = *(void *)(v4 + 48);
  if (*(void *)(v10 + 16))
  {
    sub_1B62C6AA8(a1);
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1B69FA9B0(a1, a2, a3, v9);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 16 * v11);
      swift_bridgeObjectRetain();
      goto LABEL_61;
    }
    swift_bridgeObjectRelease();
    sub_1B62C6A70(a1);
  }
  uint64_t v71 = 0;
  unint64_t v72 = 0xE000000000000000;
  switch(a1 >> 60)
  {
    case 1uLL:
      char v64 = a2;
      uint64_t v62 = a3;
      sub_1B664D9F0((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v65);
      if (MEMORY[0x1BA9B8670](&v65))
      {
        unint64_t v42 = v66;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v44 = *(void (**)(uint64_t, unint64_t))(v42 + 8);
        swift_bridgeObjectRetain();
        swift_retain();
        v44(ObjectType, v42);
        uint64_t v46 = v45;
        swift_unknownObjectRelease();
        if (v46) {
          goto LABEL_64;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      swift_bridgeObjectRelease();
LABEL_64:
      uint64_t v55 = sub_1B6828098();
      unint64_t v57 = v56;
      swift_bridgeObjectRelease();
      sub_1B67CCC98();
      sub_1B6828098();
      swift_bridgeObjectRelease();
      uint64_t v69 = v55;
      unint64_t v70 = v57;
      sub_1B6E31948();
      sub_1B6E31948();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = v69;
      unint64_t v59 = v70;
      sub_1B66490B8((uint64_t)&v65);
      uint64_t v71 = v58;
      unint64_t v72 = v59;
      a3 = v62;
      a2 = v64;
      goto LABEL_60;
    case 2uLL:
      sub_1B664D9F0((a1 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v65);
      if (!MEMORY[0x1BA9B8670](&v65)
        || (unint64_t v35 = v66,
            uint64_t v36 = swift_getObjectType(),
            (*(void (**)(uint64_t, unint64_t))(v35 + 8))(v36, v35),
            uint64_t v38 = v37,
            swift_unknownObjectRelease(),
            !v38))
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v39 = sub_1B6828098();
      unint64_t v41 = v40;
      swift_bridgeObjectRelease();
      sub_1B66490B8((uint64_t)&v65);
      uint64_t v71 = v39;
      unint64_t v72 = v41;
      goto LABEL_60;
    case 3uLL:
    case 4uLL:
      char v63 = a2;
      uint64_t v61 = a3;
      goto LABEL_9;
    case 5uLL:
      uint64_t v14 = 7500912;
      unint64_t v15 = 0xE300000000000000;
      goto LABEL_59;
    case 6uLL:
      uint64_t v71 = sub_1B6828098();
      unint64_t v72 = v48;
      goto LABEL_60;
    case 7uLL:
      uint64_t v47 = 0x656C706D6173;
      goto LABEL_51;
    case 8uLL:
      uint64_t v47 = 0x657474696D65;
LABEL_51:
      uint64_t v14 = v47 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
      unint64_t v15 = 0xE700000000000000;
      goto LABEL_59;
    case 9uLL:
    case 0xAuLL:
      char v63 = a2;
      uint64_t v61 = a3;
LABEL_9:
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B6E32738();
      sub_1B6E33B48();
      uint64_t v16 = sub_1B6828098();
      uint64_t v18 = v17;
      swift_bridgeObjectRelease();
      uint64_t v60 = v16;
      sub_1B6E31948();
      uint64_t v19 = sub_1B6E32738();
      uint64_t v20 = swift_conformsToProtocol2();
      if (v20) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 0;
      }
      if (v20) {
        uint64_t v22 = v19;
      }
      else {
        uint64_t v22 = 0;
      }
      if (v22)
      {
        uint64_t v67 = v22;
        uint64_t v68 = v21;
        sub_1B62C12C4(&v65);
        uint64_t v23 = *(void *)(v21 + 8);
        sub_1B6A5DD6C(v22, v23);
        unint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
        if (v24 >> 62) {
          uint64_t v22 = sub_1B6E32C18();
        }
        else {
          uint64_t v22 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        a3 = v61;
        swift_bridgeObjectRelease();
        _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)&v65);
      }
      else
      {
        a3 = v61;
      }
      uint64_t v25 = sub_1B6E32738();
      uint64_t v26 = swift_conformsToProtocol2();
      if (v26) {
        uint64_t v27 = v26;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v26) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 0;
      }
      if (v28)
      {
        uint64_t v29 = *(void *)((*(uint64_t (**)(void))(v27 + 16))() + 16);
        swift_bridgeObjectRelease();
        if (v29 + v22 == 1)
        {
LABEL_28:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          a2 = v63;
          goto LABEL_60;
        }
      }
      else if (v22 == 1)
      {
        goto LABEL_28;
      }
      uint64_t v30 = sub_1B6828098();
      uint64_t v32 = v31;
      swift_release();
      swift_bridgeObjectRelease();
      if (v30 == v60 && v32 == v18)
      {
        swift_bridgeObjectRelease_n();
        a2 = v63;
      }
      else
      {
        char v34 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0)
        {
          uint64_t v65 = 95;
          unint64_t v66 = 0xE100000000000000;
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
        }
        swift_bridgeObjectRelease();
        a2 = v63;
      }
LABEL_60:
      uint64_t v13 = sub_1B68206A4(v71, v72);
      uint64_t v52 = v51;
      swift_bridgeObjectRelease();
      sub_1B62C6AA8(a1);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v65 = *(void *)(v5 + 48);
      *(void *)(v5 + 48) = 0x8000000000000000;
      sub_1B67E61D8(v13, v52, a1, a2, a3, v9, isUniquelyReferenced_nonNull_native);
      *(void *)(v5 + 48) = v65;
LABEL_61:
      swift_bridgeObjectRelease();
      sub_1B62C6A70(a1);
      return v13;
    case 0xBuLL:
    case 0xCuLL:
      uint64_t v14 = 1684366707;
      unint64_t v15 = 0xE400000000000000;
      goto LABEL_59;
    case 0xDuLL:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B68213CCLL);
    case 0xEuLL:
      unint64_t v49 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v71 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v72 = v49;
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 0xFuLL:
      if (a1 == 0xF000000000000000)
      {
        uint64_t v14 = 0x635F747069726373;
        uint64_t v50 = 0x747865746E6FLL;
      }
      else
      {
        uint64_t v14 = 0x656C636974726170;
        uint64_t v50 = 0x7865646E695FLL;
      }
      unint64_t v15 = v50 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      goto LABEL_59;
    default:
      if (*(unsigned char *)(a1 + 16))
      {
        uint64_t v14 = 1701669236;
        unint64_t v15 = 0xE400000000000000;
      }
      else
      {
        uint64_t v14 = 29796;
        unint64_t v15 = 0xE200000000000000;
      }
LABEL_59:
      uint64_t v71 = v14;
      unint64_t v72 = v15;
      goto LABEL_60;
  }
}

uint64_t sub_1B682140C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7 = a7;
  uint64_t v8 = a6;
  int64_t v11 = *(void *)(a4 + 16);
  int64_t v44 = v11;
  if (a5)
  {
    if (!v11)
    {
      swift_bridgeObjectRetain();
      sub_1B68206A4(v8, v7);
      goto LABEL_41;
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    int64_t v14 = v11 - 1;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B633AF88();
      char v15 = sub_1B6E32678();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15) {
        break;
      }
      BOOL v16 = v14 == v13++;
    }
    while (!v16);
    uint64_t v17 = a4 + 32;
    swift_bridgeObjectRetain();
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    do
    {
      while (1)
      {
        uint64_t v20 = v18 + 1;
        if ((sub_1B69B18E4(*(void *)(v17 + 8 * v18), 0x8000000000000008) & 1) == 0) {
          break;
        }
        ++v18;
        if (v11 == v20) {
          goto LABEL_13;
        }
      }
      ++v19;
      BOOL v16 = v14 == v18++;
    }
    while (!v16);
LABEL_13:
    swift_bridgeObjectRelease();
    if (v15 & 1 | (v19 != 1)) {
      goto LABEL_21;
    }
    uint64_t v21 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v21 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (!v21)
    {
LABEL_21:
      unint64_t v7 = a7;
      uint64_t v8 = a6;
    }
    else
    {
      uint64_t v22 = *(void *)(sub_1B6E325F8() + 16);
      swift_bridgeObjectRelease();
      uint64_t v8 = a6;
      if (v22 == 1)
      {
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRelease_n();
        a1 = 0x307225206F747561;
      }
      unint64_t v7 = a7;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v43 = sub_1B68206A4(v8, v7);
  uint64_t v24 = v23;
  if (v11)
  {
    uint64_t v46 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v11, 0);
    uint64_t v25 = 0;
    uint64_t v26 = v46;
    do
    {
      if (v11 == 1)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
      }
      unint64_t v28 = *(void *)(v46 + 16);
      unint64_t v27 = *(void *)(v46 + 24);
      if (v28 >= v27 >> 1) {
        sub_1B6C3C3B8(v27 > 1, v28 + 1, 1);
      }
      ++v25;
      *(void *)(v46 + 16) = v28 + 1;
      uint64_t v29 = v46 + 16 * v28;
      *(void *)(v29 + 32) = v43;
      *(void *)(v29 + 40) = v24;
      int64_t v11 = v44;
    }
    while (v44 != v25);
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void *)(v46 + 16);
    if (v30) {
      goto LABEL_31;
    }
    return a1;
  }
LABEL_41:
  swift_bridgeObjectRelease();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t v30 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v30) {
    return a1;
  }
LABEL_31:
  swift_bridgeObjectRetain();
  uint64_t v31 = 0;
  uint64_t v32 = v26 + 40;
  do
  {
    uint64_t v33 = v31 + 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v34 = v30;
    sub_1B633AF88();
    uint64_t v35 = sub_1B6E32618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v32 += 16;
    uint64_t v31 = v33;
  }
  while (v30 != v33);
  uint64_t v45 = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v36 = 0;
  unint64_t v37 = 0;
  uint64_t v38 = a3;
  do
  {
    if (v38 && v37 < *(void *)(v38 + 16))
    {
      if (*(void *)(v38 + v36 + 40))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        uint64_t v45 = sub_1B6E32618();
        uint64_t v30 = v34;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v38 = a3;
      }
    }
    ++v37;
    v36 += 16;
  }
  while (v30 != v37);
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t sub_1B68219F8()
{
  return sub_1B6D491D8(0xD00000000000001ELL, 0x80000001B6F38E10, (uint64_t (*)(uint64_t))sub_1B6829A00);
}

uint64_t sub_1B6821A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B6E328C8();
  swift_bridgeObjectRelease();
  sub_1B67A36D0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B6E76B30;
  unint64_t v7 = sub_1B6E310E8();
  uint64x2_t v8 = (uint64x2_t)vdupq_n_s64(v7);
  v9.i32[0] = v7;
  v9.i32[1] = v7 >> 8;
  uint64_t v10 = MEMORY[0x1E4FBC1C8];
  uint64_t v11 = MEMORY[0x1E4FBC240];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBC1C8];
  *(void *)(v6 + 64) = v11;
  *(int8x8_t *)(v6 + 32) = vmovn_s16(vuzp1q_s16((int16x8_t)vmovn_hight_s64(v9, (int64x2_t)vshlq_u64(v8, (uint64x2_t)xmmword_1B6E89CD0)), (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1B6E89CE0), (int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1B6E89CF0))));
  sub_1B6E310E8();
  uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v12);
  v14.i32[0] = v12;
  v14.i32[1] = v12 >> 8;
  *(void *)(v6 + 96) = v10;
  *(void *)(v6 + 104) = v11;
  *(int8x8_t *)(v6 + 72) = vmovn_s16(vuzp1q_s16((int16x8_t)vmovn_hight_s64(v14, (int64x2_t)vshlq_u64(v13, (uint64x2_t)xmmword_1B6E89CD0)), (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1B6E89CE0), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1B6E89CF0))));
  sub_1B6E317D8();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6829820(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B6E77050;
  *(void *)(v15 + 32) = 0xD000000000000018;
  *(void *)(v15 + 40) = 0x80000001B6F38E30;
  *(void *)(v15 + 48) = 0;
  *(void *)(v15 + 56) = 0;
  uint64_t v16 = sub_1B6E33098();
  uint64_t v18 = v17;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1B6E77050;
  *(void *)(v19 + 32) = v16;
  *(void *)(v19 + 40) = v18;
  *(void *)(v19 + 48) = 0;
  *(void *)(v19 + 56) = 0;
  uint64_t v20 = *(void *)(a3 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1B6D49664(v20, a2);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1B6E77050;
  *(void *)(v24 + 32) = v21;
  *(void *)(v24 + 40) = v23;
  *(void *)(v24 + 48) = 0;
  *(void *)(v24 + 56) = 0;
  uint64_t v25 = sub_1B6E33098();
  uint64_t v27 = v26;
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1B6E77050;
  *(void *)(v28 + 32) = v25;
  *(void *)(v28 + 40) = v27;
  *(void *)(v28 + 48) = 0;
  *(void *)(v28 + 56) = 0;
  uint64_t v29 = *(void *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1B6D49664(v29, a4);
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1B6E77050;
  *(void *)(v33 + 32) = v30;
  *(void *)(v33 + 40) = v32;
  sub_1B67C5060();
  *(void *)(v33 + 48) = 0;
  *(void *)(v33 + 56) = 0;
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = &unk_1F0F5A2F8;
  *(_OWORD *)(inited + 16) = xmmword_1B6E89D00;
  *(void *)(inited + 40) = v15;
  *(void *)(inited + 48) = v19;
  *(void *)(inited + 56) = v24;
  *(void *)(inited + 64) = v28;
  *(void *)(inited + 72) = v33;
  swift_bridgeObjectRetain();
  uint64_t v35 = (void *)MEMORY[0x1E4FBC860];
  for (uint64_t i = 32; i != 80; i += 8)
  {
    uint64_t v37 = *(void *)(inited + i);
    uint64_t v38 = *(void *)(v37 + 16);
    uint64_t v39 = v35[2];
    uint64_t v40 = v39 + v38;
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v40 <= v35[3] >> 1)
    {
      if (!*(void *)(v37 + 16)) {
        goto LABEL_2;
      }
    }
    else
    {
      if (v39 <= v40) {
        uint64_t v42 = v39 + v38;
      }
      else {
        uint64_t v42 = v39;
      }
      uint64_t v35 = sub_1B68C3500(isUniquelyReferenced_nonNull_native, v42, 1, v35);
      if (!*(void *)(v37 + 16)) {
        goto LABEL_2;
      }
    }
    unint64_t v43 = (unint64_t)&v35[4 * v35[2] + 4];
    if (v37 + 32 < v43 + 32 * v38 && v43 < v37 + 32 + 32 * v38)
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
    if (v38) {
      v35[2] += v38;
    }
LABEL_2:
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B6829820(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  return (uint64_t)v35;
}

void sub_1B6821FB8(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void (*v39)(void *__return_ptr);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void (*v74)(uint64_t);
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char v106;
  unint64_t v107;
  uint64_t v108;
  char v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  char v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  void *v152;
  void *v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  void *v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void v162[2];
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  void v170[6];
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;

  uint64_t v6 = sub_1B6E31118();
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v11 = (char *)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  unint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  unint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  if (*(void *)(a2 + 16)) {
    goto LABEL_65;
  }
  unint64_t v142 = v11;
  uint64_t v143 = v9;
  long long v144 = v8;
  uint64_t v153 = a3;
  uint64_t v23 = swift_conformsToProtocol2();
  if (v23) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 0;
  }
  if (v23) {
    uint64_t v25 = a1;
  }
  else {
    uint64_t v25 = 0;
  }
  uint64_t v26 = *v25;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  swift_retain();
  v27(v26, v24);
  uint64_t v28 = *(uint64_t (**)(void))(v24 + 24);
  float32x4_t v151 = *(unsigned __int8 *)(v160 + 32);
  uint64_t v154 = v26;
  int v155 = v25;
  uint64_t v156 = v24;
  long long v161 = v28();
  uint64_t v30 = v29;
  uint64_t v157 = a1;
  if (*(void *)(a1[2] + 16) >= 2uLL
    && (type metadata accessor for PartialComposeNode(0), (uint64_t v31 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v32 = (void *)v31;
    uint64_t v33 = swift_retain();
    uint64_t v35 = v157;
  }
  else
  {
    uint64_t v35 = v157;
    uint64_t v33 = swift_retain();
    uint64_t v32 = v35;
  }
  MEMORY[0x1F4188790](v33, v34);
  unint64_t v152 = v32;
  uint64_t v36 = swift_bridgeObjectRetain();
  uint64_t v37 = sub_1B6828B04(v36, sub_1B6829814);
  uint64_t v38 = swift_bridgeObjectRelease();
  uint64_t v39 = *(void (**)(void *__return_ptr))(*v35 + 152);
  ((void (*)(void *__return_ptr, uint64_t))v39)(v170, v38);
  uint64_t v40 = v170[3];
  float32x2_t v186 = v170[0];
  swift_bridgeObjectRetain();
  sub_1B62D8C3C((uint64_t)&v186);
  float v185 = v170[1];
  sub_1B62D8C3C((uint64_t)&v185);
  float32x2_t v184 = v170[2];
  sub_1B62D8C3C((uint64_t)&v184);
  swift_bridgeObjectRelease();
  float32x2_t v183 = v170[4];
  sub_1B62D8C3C((uint64_t)&v183);
  float32x2_t v182 = v170[5];
  sub_1B62D8C3C((uint64_t)&v182);
  long long v150 = v37;
  unint64_t v41 = sub_1B68208D4(v161, v30, v40, v37);
  unint64_t v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v171 = v41;
  uint64_t v172 = v43;
  uint64_t v168 = 0x616E5F65646F6E25;
  uint64_t v169 = 0xEA0000000000656DLL;
  int v158 = sub_1B633AF88();
  int64_t v44 = sub_1B6E32678();
  uint64_t v147 = v43;
  unint64_t v141 = v41;
  if (v44)
  {
    type metadata accessor for CastNode(0);
    uint64_t v45 = swift_dynamicCastClass();
    if (v45)
    {
      uint64_t v46 = v45;
      uint64_t v47 = *(void *)(v45 + OBJC_IVAR____TtC3VFX8CastNode_dstType);
      swift_retain();
      sub_1B67C52A4(v47);
      unint64_t v48 = sub_1B69B0F8C(v47);
      uint64_t v50 = v49;
      sub_1B678FC34(v47);
      uint64_t v171 = v48;
      uint64_t v172 = v50;
      sub_1B6E31948();
      uint64_t v51 = *(void *)(v46 + OBJC_IVAR____TtC3VFX8CastNode_srcType);
      sub_1B67C52A4(v51);
      sub_1B69B0F8C(v51);
      sub_1B678FC34(v51);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v52 = sub_1B6828098();
      float v54 = v53;
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      (*(void (**)(void))(*v35 + 136))();
      uint64_t v52 = sub_1B6828098();
      float v54 = v56;
      swift_bridgeObjectRelease();
    }
    unint64_t v57 = sub_1B68206A4(v52, v54);
    unint64_t v59 = v58;
    swift_bridgeObjectRelease();
    uint64_t v171 = v41;
    uint64_t v172 = v43;
    uint64_t v168 = 0x616E5F65646F6E25;
    uint64_t v169 = 0xEA0000000000656DLL;
    uint64_t v148 = v59;
    uint64_t v149 = v57;
    unint64_t v165 = v57;
    uint64_t v166 = v59;
    uint64_t v55 = sub_1B6E32618();
    long long v161 = v60;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v148 = 0;
    uint64_t v149 = 0;
    uint64_t v55 = v41;
    long long v161 = v43;
  }
  type metadata accessor for FlowControlNode(0);
  uint64_t v61 = swift_dynamicCastClass();
  v39(&v171);
  uint64_t v62 = v175;
  float32x2_t v181 = v171;
  swift_bridgeObjectRetain();
  sub_1B62D8C3C((uint64_t)&v181);
  uint64_t v180 = v172;
  sub_1B62D8C3C((uint64_t)&v180);
  unint64_t v179 = v173;
  sub_1B62D8C3C((uint64_t)&v179);
  uint64_t v178 = v174;
  sub_1B62D8C3C((uint64_t)&v178);
  uint64_t v159 = v62;
  swift_bridgeObjectRelease();
  uint64_t v177 = v176;
  sub_1B62D8C3C((uint64_t)&v177);
  char v63 = v35[4];
  type metadata accessor for CastNode(0);
  char v64 = swift_dynamicCastClass();
  if (v64)
  {
    uint64_t v65 = v64;
    unint64_t v66 = *(void *)(v64 + OBJC_IVAR____TtC3VFX8CastNode_dstType);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B67C52A4(v66);
    uint64_t v67 = sub_1B69B0F8C(v66);
    uint64_t v69 = v68;
    sub_1B678FC34(v66);
    uint64_t v168 = v67;
    uint64_t v169 = v69;
    sub_1B6E31948();
    unint64_t v70 = *(void *)(v65 + OBJC_IVAR____TtC3VFX8CastNode_srcType);
    sub_1B67C52A4(v70);
    sub_1B69B0F8C(v70);
    sub_1B678FC34(v70);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_1B6828098();
    long long v73 = v72;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    long long v74 = *(void (**)(uint64_t))(*v35 + 136);
    long long v75 = swift_bridgeObjectRetain();
    v74(v75);
    uint64_t v71 = sub_1B6828098();
    long long v73 = v76;
    swift_bridgeObjectRelease();
  }
  long long v146 = v61;
  long long v77 = v63;
  long long v78 = v160;
  long long v79 = sub_1B682140C(v55, v161, v159, v77, v61 == 0, v71, v73);
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v168 = v79;
  uint64_t v169 = v81;
  long long v145 = v83;
  uint64_t v167 = v83;
  if (!v146)
  {
    uint64_t v98 = HIBYTE(v81) & 0xF;
    if ((v81 & 0x2000000000000000) == 0) {
      uint64_t v98 = v79 & 0xFFFFFFFFFFFFLL;
    }
    if (v98)
    {
      unint64_t v165 = v79;
      uint64_t v166 = v81;
      uint64_t v163 = 59;
      uint64_t v164 = 0xE100000000000000;
      if ((sub_1B6E32678() & 1) == 0) {
        sub_1B6E31948();
      }
    }
  }
  uint64_t v159 = (*(uint64_t (**)(uint64_t))(v156 + 32))(v154);
  if ((__objc2_class *)*v157 == _TtC3VFX17SubGraphEnterNode)
  {
    uint64_t v85 = v157[3];
    uint64_t v84 = v157[4];
    swift_retain();
    sub_1B68289A0(v85);
    swift_bridgeObjectRelease();
    uint64_t v86 = *(void *)(v84 + 16);
    sub_1B6E33638();
    swift_unknownObjectRetain_n();
    uint64_t v87 = swift_dynamicCastClass();
    if (!v87)
    {
      swift_bridgeObjectRelease();
      uint64_t v87 = MEMORY[0x1E4FBC860];
    }
    uint64_t v88 = *(void *)(v87 + 16);
    swift_release();
    if (v88 == v86 - (v86 != 0))
    {
      uint64_t v89 = swift_dynamicCastClass();
      if (!v89)
      {
        swift_bridgeObjectRelease();
        uint64_t v89 = MEMORY[0x1E4FBC860];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v89 = sub_1B69FF414(v84, v84 + 32, v86 != 0, (2 * v86) | 1);
    }
    swift_bridgeObjectRelease();
    uint64_t v90 = *(void *)(v89 + 16);
    swift_release();
    if (v90)
    {
      uint64_t v163 = MEMORY[0x1E4FBC860];
      sub_1B6C3C3B8(0, v90, 0);
      uint64_t v91 = 0;
      uint64_t v92 = v163;
      do
      {
        unint64_t v165 = 0x6E69627573;
        uint64_t v166 = 0xE500000000000000;
        v162[0] = v91;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        uint64_t v93 = v165;
        uint64_t v94 = v166;
        uint64_t v163 = v92;
        uint64_t v96 = *(void *)(v92 + 16);
        uint64_t v95 = *(void *)(v92 + 24);
        if (v96 >= v95 >> 1)
        {
          sub_1B6C3C3B8(v95 > 1, v96 + 1, 1);
          uint64_t v92 = v163;
        }
        ++v91;
        *(void *)(v92 + 16) = v96 + 1;
        uint64_t v97 = v92 + 16 * v96;
        *(void *)(v97 + 32) = v93;
        *(void *)(v97 + 40) = v94;
      }
      while (v90 != v91);
      long long v78 = v160;
    }
    unint64_t v165 = (uint64_t)&unk_1F0F5A338;
    uint64_t v99 = swift_bridgeObjectRetain();
    sub_1B6641518(v99);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    long long v145 = v165;
    uint64_t v167 = v165;
  }
  uint64_t v101 = v168;
  uint64_t v100 = v169;
  uint64_t v102 = *(void *)(v159 + 16);
  if (v102)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v103 = 32 * v102;
    long long v146 = v100;
    uint64_t v104 = v100;
    long long v161 = v102;
    do
    {
      long long v105 = v102 - 1;
      unint64_t v165 = v101;
      uint64_t v166 = v104;
      uint64_t v163 = 0x6D6172617025;
      uint64_t v164 = 0xE600000000000000;
      v162[0] = v102 - 1;
      swift_bridgeObjectRetain();
      sub_1B6E33098();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v106 = sub_1B6E32678();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v106 & 1) != 0 && v102 <= v161)
      {
        uint64_t v107 = *(void *)(v159 + v103);
        uint64_t v108 = *(void *)(v159 + v103 + 16);
        uint64_t v109 = *(unsigned char *)(v159 + v103 + 24);
        char v110 = *(unsigned char *)(v159 + v103 + 8);
        sub_1B62C6AA8(v107);
        long long v111 = sub_1B6820C70(v107, v110, v108, v109);
        float v113 = v112;
        unint64_t v165 = v101;
        uint64_t v166 = v104;
        uint64_t v163 = 0x6D6172617025;
        uint64_t v164 = 0xE600000000000000;
        v162[0] = v105;
        sub_1B6E33098();
        sub_1B6E31948();
        swift_bridgeObjectRelease();
        v162[0] = v111;
        v162[1] = v113;
        uint64_t v101 = sub_1B6E32618();
        long long v115 = v114;
        sub_1B62C6A70(v107);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v78 = v160;
        swift_bridgeObjectRelease();
        uint64_t v104 = v115;
      }
      v103 -= 32;
      uint64_t v102 = v105;
    }
    while (v105);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v104 = v100;
  }
  swift_bridgeObjectRelease();
  unint64_t v165 = v101;
  uint64_t v166 = v104;
  uint64_t v163 = 0x5F74706972637325;
  uint64_t v164 = 0xEF747865746E6F63;
  swift_bridgeObjectRetain();
  long long v116 = sub_1B6E32678();
  if (v116)
  {
    unint64_t v165 = v101;
    uint64_t v166 = v104;
    uint64_t v163 = 0x5F74706972637325;
    uint64_t v164 = 0xEF747865746E6F63;
    strcpy((char *)v162, "script_context");
    HIBYTE(v162[1]) = -18;
    uint64_t v101 = sub_1B6E32618();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  long long v117 = sub_1B6829054(v101);
  long long v119 = v118;
  uint64_t v160 = v121;
  long long v161 = v120;
  swift_bridgeObjectRelease_n();
  uint64_t v168 = v117;
  uint64_t v169 = v119;
  long long v122 = (*(uint64_t (**)(uint64_t))(v156 + 16))(v154);
  long long v123 = v147;
  if ((v122 & 1) == 0 || *(void *)(*(void *)(v78 + 16) + 16) || sub_1B6E318C8() > 9)
  {
    swift_bridgeObjectRelease();
    uint64_t v125 = v157;
    if (v151)
    {
      swift_bridgeObjectRelease();
      uint64_t v126 = 0;
      goto LABEL_61;
    }
    uint64_t v126 = 0;
  }
  else
  {
    sub_1B6829820(0, (unint64_t *)&qword_1EB980C90, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v124 = swift_allocObject();
    *(_OWORD *)(v124 + 16) = xmmword_1B6E77050;
    *(void *)(v124 + 32) = v141;
    *(void *)(v124 + 40) = v123;
    swift_bridgeObjectRelease();
    uint64_t v167 = v124;
    uint64_t v125 = v157;
    if (v151)
    {
      swift_bridgeObjectRelease();
      uint64_t v126 = 1;
      goto LABEL_61;
    }
    uint64_t v126 = 1;
  }
  uint64_t v127 = *(void *)(v78 + 16);
  unint64_t v129 = (uint64_t)v142;
  uint64_t v128 = v143;
  unint64_t v130 = v144;
  (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v142, (uint64_t)v125 + OBJC_IVAR____TtC3VFX4Node_authoringID, v144);
  swift_bridgeObjectRetain();
  uint64_t v131 = sub_1B677FC18(v129, v127);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v129, v130);
  if (v131)
  {
    swift_retain();
    swift_retain();
    uint64_t v132 = sub_1B6D49784(&v168);
    uint64_t v134 = v133;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v168 = v132;
    uint64_t v169 = v134;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_61:
  unint64_t v135 = sub_1B68234CC(v125);
  unint64_t v137 = v136;
  swift_release();
  swift_release();
  uint64_t v13 = v167;
  uint64_t v138 = v169;
  if (v126)
  {
    uint64_t v14 = 0;
    unint64_t v15 = 0;
  }
  else
  {
    uint64_t v14 = v168;
    swift_bridgeObjectRetain();
    unint64_t v15 = v138;
  }
  uint64_t v18 = v116 & 1;
  unint64_t v139 = v157;
  swift_retain();
  swift_bridgeObjectRelease();
  unint64_t v12 = v139;
  a3 = v153;
  unint64_t v20 = v148;
  uint64_t v19 = v149;
  uint64_t v17 = v160;
  uint64_t v16 = v161;
  uint64_t v21 = v135;
  uint64_t v22 = v137;
LABEL_65:
  *a3 = v12;
  a3[1] = v13;
  a3[2] = v14;
  a3[3] = v15;
  a3[4] = v16;
  a3[5] = v17;
  a3[6] = v18;
  a3[7] = v19;
  a3[8] = v20;
  a3[9] = v21;
  a3[10] = v22;
}

uint64_t sub_1B6822FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *__return_ptr, uint64_t))
{
  (*(void (**)(void *__return_ptr))(*(void *)a4 + 152))(v16);
  uint64_t v9 = v16[0];
  uint64_t v22 = v16[1];
  uint64_t v23 = v16[0];
  sub_1B62D8C3C((uint64_t)&v22);
  uint64_t v21 = v16[2];
  sub_1B62D8C3C((uint64_t)&v21);
  uint64_t v20 = v16[3];
  sub_1B62D8C3C((uint64_t)&v20);
  uint64_t v19 = v16[4];
  sub_1B62D8C3C((uint64_t)&v19);
  uint64_t v18 = v16[5];
  sub_1B62D8C3C((uint64_t)&v18);
  unint64_t v10 = *(void *)(v9 + 8 * a1 + 32);
  sub_1B66456F8(v10);
  sub_1B62D8C3C((uint64_t)&v23);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0x8000000000000008;
  char v12 = sub_1B697351C(v10, v11 | 0x6000000000000000);
  swift_release();
  sub_1B6645740(v10);
  if (v12) {
    return 0x3E776F6C663CLL;
  }
  a5(v17, a2);
  uint64_t v14 = v17[1];
  swift_bridgeObjectRetain();
  sub_1B6828A8C(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1B6828908);
  uint64_t v13 = *(void *)(v14 + 16 * a3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1B682316C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  sub_1B6829820(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B6E77050;
  *(void *)(v3 + 32) = v2;
  unint64_t v4 = v3 + 32;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0;
  *(void *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B6D491D8(0xD00000000000001ELL, 0x80000001B6F38E10, (uint64_t (*)(uint64_t))sub_1B6829A00);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  sub_1B67C5060();
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 56) = 0;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v8;
  uint64_t v10 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1B68C3500(0, v10, 1, MEMORY[0x1E4FBC860]);
  char v12 = v11;
  if (*(void *)(v3 + 16))
  {
    unint64_t v13 = (unint64_t)&v11[4 * v11[2] + 4];
    if (v4 < v13 + 32 * v10 && v13 < v4 + 32 * v10) {
      goto LABEL_24;
    }
    swift_arrayInitWithCopy();
    if (v10) {
      v12[2] += v10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(inited + 40);
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t v17 = v12[2];
  unint64_t v18 = v12[3];
  swift_bridgeObjectRetain();
  if (v17 + v16 > (uint64_t)(v18 >> 1))
  {
    if (v17 <= v17 + v16) {
      uint64_t v22 = v17 + v16;
    }
    else {
      uint64_t v22 = v17;
    }
    char v12 = sub_1B68C3500(1, v22, 1, v12);
    if (!*(void *)(v15 + 16)) {
      goto LABEL_18;
    }
  }
  else if (!v16)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1B6829820(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
    return (uint64_t)v12;
  }
  unint64_t v19 = (unint64_t)&v12[4 * v12[2] + 4];
  if (v15 + 32 >= v19 + 32 * v16 || v19 >= v15 + 32 + 32 * v16)
  {
    swift_arrayInitWithCopy();
    if (v16) {
      v12[2] += v16;
    }
    goto LABEL_18;
  }
LABEL_24:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68234CC(void *a1)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*a1 + 136))();
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B682AC64(v3, v4);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1B68235D8()
{
  if (qword_1E9DCC4A8 != -1) {
    swift_once();
  }
  int v1 = byte_1E9E49340;
  unint64_t v2 = qword_1E9E49348;
  char v3 = byte_1E9E49350;
  unint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v17 = sub_1B68CB138(MEMORY[0x1E4FBC860]);
  unint64_t v18 = v5;
  sub_1B68B9B70((uint64_t)sub_1B6828AE8, v0, v1, v2, v3, v4, (uint64_t)&v17);
  uint64_t v6 = v17;
  swift_bridgeObjectRelease();
  unint64_t v7 = sub_1B6B65B6C();
  if (v7 >> 62) {
    uint64_t v8 = sub_1B6E32C18();
  }
  else {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  unint64_t v9 = sub_1B6B65B6C();
  unint64_t v10 = v9;
  if (v8 != 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1B6827BE4(v10, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    type metadata accessor for GraphCodeGen.CFGMultiProcedure();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v15;
    return v14;
  }
  if (v9 >> 62)
  {
    if (sub_1B6E32C18()) {
      goto LABEL_8;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v10 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = MEMORY[0x1BA9B4580](0, v10);
  }
  else
  {
    uint64_t v11 = *(void *)(v10 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (unint64_t v12 = sub_1B62C1A30(v11), (v13 & 1) != 0))
  {
    uint64_t v14 = *(void *)(*(void *)(v6 + 56) + 8 * v12);
    swift_retain();
    swift_bridgeObjectRelease();
    if (v14)
    {
      swift_release();
      return v14;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B682A98C();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
LABEL_22:
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6823900@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  void (*v4)(uint64_t *__return_ptr, uint64_t *);
  void *v5;
  uint64_t result;

  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(a1 + 24);
  swift_retain();
  unint64_t v5 = sub_1B6829328(v3, v4);
  uint64_t result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t sub_1B6823960()
{
  uint64_t v1 = sub_1B68235D8();
  uint64_t v26 = v1;
  uint64_t v36 = MEMORY[0x1E4FBC860];
  if (qword_1E9DCC4A0 != -1) {
    uint64_t v1 = swift_once();
  }
  int v3 = byte_1E9E49328;
  unint64_t v4 = qword_1E9E49330;
  int v5 = byte_1E9E49338;
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v27 = v0;
  v25[2] = v0;
  v25[3] = &v36;
  unint64_t v6 = MEMORY[0x1E4FBC860];
  v35[0] = sub_1B68CB378(MEMORY[0x1E4FBC860]);
  v35[1] = v7;
  sub_1B68B9F4C((uint64_t)sub_1B68289E0, (uint64_t)v25, v3, v4, v5, v6, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v36;
  uint64_t v9 = *(void *)(v36 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    v25[4] = v8;
    unint64_t v10 = (long long *)(v8 + 56);
    uint64_t v11 = v27;
    do
    {
      long long v13 = *(long long *)((char *)v10 - 24);
      if (**((__objc2_class ***)v10 - 3) == _TtC3VFX12SubGraphNode)
      {
        uint64_t v30 = *((void *)v10 - 1);
        long long v14 = *v10;
        uint64_t v15 = *((void *)v10 + 2);
        int v29 = *((unsigned __int8 *)v10 + 24);
        uint64_t v28 = *((void *)v10 + 4);
        uint64_t v16 = *((void *)v10 + 7);
        uint64_t v17 = *(void **)(v11 + 40);
        long long v31 = *(long long *)((char *)v10 + 40);
        long long v32 = v14;
        uint64_t v18 = v14;
        long long v34 = v13;
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v33 = v18;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v11 + 40) = v17;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v17 = sub_1B68C1194(0, v17[2] + 1, 1, v17);
          *(void *)(v11 + 40) = v17;
        }
        unint64_t v21 = v17[2];
        unint64_t v20 = v17[3];
        long long v22 = v34;
        if (v21 >= v20 >> 1)
        {
          uint64_t v23 = sub_1B68C1194(v20 > 1, v21 + 1, 1, v17);
          long long v22 = v34;
          uint64_t v17 = v23;
          *(void *)(v27 + 40) = v23;
        }
        void v17[2] = v21 + 1;
        unint64_t v12 = &v17[11 * v21];
        *((_OWORD *)v12 + 2) = v22;
        v12[6] = v30;
        *(_OWORD *)(v12 + 7) = v32;
        v12[9] = v15;
        *((unsigned char *)v12 + 80) = v29;
        v12[11] = v28;
        *((_OWORD *)v12 + 6) = v31;
        v12[14] = v16;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v11 = v27;
      }
      unint64_t v10 = (long long *)((char *)v10 + 88);
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  return v26;
}

uint64_t sub_1B6823CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v17 = *(void **)(a1 + 8);
  sub_1B6821FB8(v17, *(void *)(a1 + 16), &v20);
  sub_1B6828A04((uint64_t)&v20, (uint64_t)v21);
  if (*(void *)&v21[0])
  {
    long long v25 = v21[2];
    long long v26 = v21[3];
    long long v27 = v21[4];
    uint64_t v28 = v22;
    long long v23 = v21[0];
    long long v24 = v21[1];
    unint64_t v6 = *a3;
    sub_1B6828A8C(&v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1B67FBA04);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v6 = sub_1B68C1194(0, v6[2] + 1, 1, v6);
      *a3 = v6;
    }
    unint64_t v9 = v6[2];
    unint64_t v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      unint64_t v6 = sub_1B68C1194(v8 > 1, v9 + 1, 1, v6);
      *a3 = v6;
    }
    _OWORD v6[2] = v9 + 1;
    unint64_t v10 = &v6[11 * v9];
    long long v11 = v24;
    *((_OWORD *)v10 + 2) = v23;
    *((_OWORD *)v10 + 3) = v11;
    long long v12 = v25;
    long long v13 = v26;
    long long v14 = v27;
    v10[14] = v28;
    *((_OWORD *)v10 + 5) = v13;
    *((_OWORD *)v10 + 6) = v14;
    *((_OWORD *)v10 + 4) = v12;
    sub_1B6828A8C(&v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1B6828908);
  }
  sub_1B6828A8C(&v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1B67FBA04);
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *(void *)(a2 + 56);
  *(void *)(a2 + 56) = 0x8000000000000000;
  sub_1B67E41E0((uint64_t)&v20, (uint64_t)v17, v15);
  *(void *)(a2 + 56) = v19;
  swift_bridgeObjectRelease();
  return sub_1B6828A04((uint64_t)&v20, a4);
}

double sub_1B6823EE8@<D0>(uint64_t a1@<X0>, void (*a2)(_OWORD *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v12 = a1;
  a2(v10, &v12);
  uint64_t v4 = v11;
  double result = *(double *)v10;
  long long v6 = v10[1];
  long long v7 = v10[2];
  long long v8 = v10[3];
  long long v9 = v10[4];
  *(_OWORD *)a3 = v10[0];
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = v7;
  *(_OWORD *)(a3 + 48) = v8;
  *(_OWORD *)(a3 + 64) = v9;
  *(void *)(a3 + 80) = v4;
  return result;
}

uint64_t sub_1B6823F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = &unk_1B6E77000;
  if (!v2)
  {
    long long v7 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v33 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v33) {
      goto LABEL_37;
    }
    goto LABEL_56;
  }
  int v4 = *(unsigned __int8 *)(a2 + 32);
  int v5 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
  long long v6 = (void *)MEMORY[0x1E4FBC860];
  long long v7 = (void *)MEMORY[0x1E4FBC860];
  int v51 = v4;
  do
  {
    float v54 = v7;
    unint64_t v8 = *(v5 - 5);
    uint64_t v9 = *(v5 - 4);
    uint64_t v10 = *(v5 - 3);
    uint64_t v12 = *(v5 - 1);
    uint64_t v11 = *v5;
    sub_1B67C52A4(v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v52 = v8;
    sub_1B69B04D4(v4, v8);
    BOOL v13 = v9 == 0x635F747069726373 && v10 == 0xEE00747865746E6FLL;
    uint64_t v53 = v2;
    if (v13 || (sub_1B6E334B8() & 1) != 0)
    {
      if (v4)
      {
        swift_bridgeObjectRelease();
        long long v14 = sub_1B68C3500(0, 0, 1, v6);
        unint64_t v15 = 0xE700000000000000;
        uint64_t v16 = 0x20646165726874;
        goto LABEL_14;
      }
LABEL_12:
      uint64_t v16 = 0;
      unint64_t v15 = 0xE000000000000000;
      goto LABEL_13;
    }
    if ((v4 & 1) == 0) {
      goto LABEL_12;
    }
    unint64_t v15 = 0xE700000000000000;
    uint64_t v16 = 0x20646165726874;
LABEL_13:
    long long v14 = v6;
LABEL_14:
    uint64_t v55 = v16;
    unint64_t v56 = v15;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6829820(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1B6E77050;
    *(void *)(v17 + 32) = v55;
    unint64_t v18 = v17 + 32;
    *(void *)(v17 + 40) = v56;
    *(void *)(v17 + 48) = v12;
    *(void *)(v17 + 56) = v11;
    sub_1B67C5060();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B6E76B30;
    *(void *)(inited + 32) = v14;
    *(void *)(inited + 40) = v17;
    uint64_t v20 = v14[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1B68C3500(0, v20, 1, v6);
    uint64_t v22 = v21;
    if (v14[2])
    {
      unint64_t v23 = (unint64_t)&v21[4 * v21[2] + 4];
      if ((unint64_t)(v14 + 4) < v23 + 32 * v20 && v23 < (unint64_t)&v14[4 * v20 + 4])
      {
LABEL_66:
        swift_release();
        goto LABEL_67;
      }
      swift_arrayInitWithCopy();
      if (v20) {
        v22[2] += v20;
      }
    }
    long long v24 = v6;
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v17 + 16);
    uint64_t v27 = v22[2];
    unint64_t v26 = v22[3];
    swift_bridgeObjectRetain();
    if (v27 + v25 > (uint64_t)(v26 >> 1))
    {
      if (v27 <= v27 + v25) {
        uint64_t v32 = v27 + v25;
      }
      else {
        uint64_t v32 = v27;
      }
      uint64_t v22 = sub_1B68C3500(1, v32, 1, v22);
      uint64_t v28 = *(void *)(v17 + 16);
    }
    else
    {
      uint64_t v28 = v25;
    }
    long long v7 = v54;
    long long v6 = v24;
    if (v28)
    {
      unint64_t v29 = (unint64_t)&v22[4 * v22[2] + 4];
      if (v18 < v29 + 32 * v25 && v29 < v18 + 32 * v25) {
        goto LABEL_66;
      }
      swift_arrayInitWithCopy();
      long long v7 = v54;
      if (v25) {
        v22[2] += v25;
      }
    }
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1B6829820(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v7 = sub_1B68C3618(0, v7[2] + 1, 1, v7);
    }
    unint64_t v31 = v7[2];
    unint64_t v30 = v7[3];
    if (v31 >= v30 >> 1) {
      long long v7 = sub_1B68C3618(v30 > 1, v31 + 1, 1, v7);
    }
    _OWORD v7[2] = v31 + 1;
    v7[v31 + 4] = v22;
    sub_1B678FC34(v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 += 6;
    --v2;
    int v4 = v51;
  }
  while (v53 != 1);
  swift_bridgeObjectRelease();
  int v3 = (_OWORD *)&unk_1B6E77000;
  uint64_t v33 = v7[2];
  if (v33)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v34 = 0;
    uint64_t v35 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v36 = v7[v34 + 4];
      uint64_t v37 = *(void *)(v36 + 16);
      uint64_t v38 = v35[2];
      uint64_t v39 = v38 + v37;
      swift_bridgeObjectRetain();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v39 <= v35[3] >> 1)
      {
        if (*(void *)(v36 + 16)) {
          goto LABEL_47;
        }
      }
      else
      {
        if (v38 <= v39) {
          uint64_t v41 = v38 + v37;
        }
        else {
          uint64_t v41 = v38;
        }
        uint64_t v35 = sub_1B68C3500(isUniquelyReferenced_nonNull_native, v41, 1, v35);
        if (*(void *)(v36 + 16))
        {
LABEL_47:
          unint64_t v42 = (unint64_t)&v35[4 * v35[2] + 4];
          if (v36 + 32 < v42 + 32 * v37 && v42 < v36 + 32 + 32 * v37) {
            goto LABEL_67;
          }
          swift_arrayInitWithCopy();
          if (v37) {
            v35[2] += v37;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v33 == ++v34)
      {
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
    }
  }
LABEL_56:
  uint64_t v35 = (void *)MEMORY[0x1E4FBC860];
LABEL_57:
  swift_bridgeObjectRelease();
  sub_1B67C5060();
  uint64_t v44 = swift_initStackObject();
  *(_OWORD *)(v44 + 16) = v3[5];
  *(void *)(v44 + 32) = v35;
  uint64_t v45 = v35[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_1B68C3500(0, v45, 1, MEMORY[0x1E4FBC860]);
  uint64_t v47 = v46;
  if (!v35[2]) {
    goto LABEL_65;
  }
  unint64_t v48 = (unint64_t)&v46[4 * v46[2] + 4];
  if ((unint64_t)(v35 + 4) >= v48 + 32 * v45 || v48 >= (unint64_t)&v35[4 * v45 + 4])
  {
    swift_arrayInitWithCopy();
    if (v45) {
      v47[2] += v45;
    }
LABEL_65:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1B6829820(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
    return (uint64_t)v47;
  }
LABEL_67:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6824678(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1B677F5B0(a1, *a2);
  if ((result & 1) == 0)
  {
    sub_1B67E9934(&v34, a1);
    uint64_t v7 = *(void *)(*(void *)(a1 + 16) + 16);
    if (v7)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = 0;
      uint64_t v9 = 32;
      do
      {
        uint64_t v10 = *(void *)(a1 + 24);
        unint64_t v11 = *(void *)(v10 + 8 * v8 + 32);
        swift_retain();
        sub_1B68289A0(v10);
        sub_1B67C52A4(v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        LOBYTE(v10) = sub_1B69B18E4(v11, 0x8000000000000008);
        sub_1B678FC34(v11);
        if ((v10 & 1) == 0)
        {
          uint64_t v12 = swift_retain();
          sub_1B6824678(v12, a2, a3, a4);
          swift_release();
        }
        ++v8;
        swift_release();
        v9 += 16;
      }
      while (v7 != v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v13 = *(void *)(a3 + 56);
    if (*(void *)(v13 + 16) && (uint64_t result = sub_1B62C1A30(a1), (v14 & 1) != 0))
    {
      unint64_t v15 = (uint64_t *)(*(void *)(v13 + 56) + 88 * result);
      uint64_t v16 = *v15;
      if (*v15)
      {
        uint64_t v17 = v15[1];
        uint64_t v18 = v15[3];
        uint64_t v19 = v15[5];
        uint64_t v20 = v15[8];
        uint64_t v22 = v15[9];
        uint64_t v21 = v15[10];
        unint64_t v23 = *(void **)(a4 + 16);
        uint64_t v29 = v15[4];
        uint64_t v30 = v15[2];
        uint64_t v33 = v15[6];
        uint64_t v28 = v15[7];
        sub_1B67FBA04(v16);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(a4 + 16) = v23;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v23 = sub_1B68C1194(0, v23[2] + 1, 1, v23);
          *(void *)(a4 + 16) = v23;
        }
        unint64_t v26 = v23[2];
        unint64_t v25 = v23[3];
        if (v26 >= v25 >> 1)
        {
          unint64_t v23 = sub_1B68C1194(v25 > 1, v26 + 1, 1, v23);
          *(void *)(a4 + 16) = v23;
        }
        void v23[2] = v26 + 1;
        uint64_t v27 = &v23[11 * v26];
        v27[4] = v16;
        v27[5] = v17;
        v27[6] = v30;
        v27[7] = v18;
        v27[8] = v29;
        v27[9] = v19;
        *((unsigned char *)v27 + 80) = v33 & 1;
        v27[11] = v28;
        v27[12] = v20;
        v27[13] = v22;
        v27[14] = v21;
        return sub_1B6828908(v16);
      }
    }
    else
    {
      uint64_t result = sub_1B6E32BE8();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1B682494C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  type metadata accessor for GraphCodeGen.CFGNoop();
  if (swift_dynamicCastClass()) {
    return 0;
  }
  type metadata accessor for GraphCodeGen.CFGProcedure();
  uint64_t v6 = swift_dynamicCastClass();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = MEMORY[0x1E4FBC860];
    swift_retain();
    uint64_t v9 = swift_retain();
    sub_1B6824678(v9, a2, v2, v8);
    uint64_t v10 = *(void *)(v8 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    uint64_t v5 = sub_1B6828610(v10);
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v47 = v5;
    unint64_t v48 = v12;
    if (!*(void *)(v7 + 24))
    {
      swift_release();
      return v5;
    }
    uint64_t v44 = *a2;
    swift_bridgeObjectRetain_n();
    uint64_t v13 = swift_retain();
    uint64_t v14 = sub_1B682494C(v13, &v44);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v45 = v14;
    unint64_t v46 = v16;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return v47;
  }
  type metadata accessor for GraphCodeGen.CFGMultiProcedure();
  uint64_t v17 = swift_dynamicCastClass();
  if (v17)
  {
    uint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    uint64_t v45 = 0;
    unint64_t v46 = 0xE000000000000000;
    unint64_t v18 = *(void *)(v17 + 16);
    if (v18 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1B6E32C18();
      if (v5)
      {
LABEL_9:
        uint64_t v19 = 0;
        unint64_t v43 = v18 & 0xC000000000000001;
        unint64_t v20 = v18;
        do
        {
          if (v43)
          {
            uint64_t v21 = MEMORY[0x1BA9B4580](v19, v18);
          }
          else
          {
            uint64_t v21 = *(void *)(v18 + 8 * v19 + 32);
            swift_retain();
          }
          ++v19;
          sub_1B682494C(v21, a2);
          sub_1B6E31948();
          sub_1B6E31948();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v18 = v20;
        }
        while (v5 != v19);
        swift_release();
        swift_bridgeObjectRelease();
        return v47;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (v5) {
        goto LABEL_9;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return v5;
  }
  type metadata accessor for GraphCodeGen.CFGBranch();
  uint64_t v22 = swift_dynamicCastClass();
  if (v22)
  {
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = MEMORY[0x1E4FBC860];
    swift_retain();
    uint64_t v25 = swift_retain();
    sub_1B6824678(v25, a2, v3, v24);
    uint64_t v26 = *(void *)(v24 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    uint64_t v42 = sub_1B6828610(v26);
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v29 = *(void *)(v3 + 56);
    if (*(void *)(v29 + 16) && (unint64_t v30 = sub_1B62C1A30(v23), (v31 & 1) != 0))
    {
      uint64_t v32 = (uint64_t *)(*(void *)(v29 + 56) + 88 * v30);
      uint64_t v33 = v32[3];
      uint64_t v34 = *v32;
      uint64_t v41 = v32[2];
      sub_1B67FBA04(*v32);
    }
    else
    {
      uint64_t v41 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 1;
    }
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1B68288E8(v34);
    MEMORY[0x1F4188790](v35, v36);
    MEMORY[0x1F4188790](v37, v38);
    sub_1B6D485C8(v41, v33, (uint64_t (*)(uint64_t))sub_1B6828988, v39, (uint64_t (*)(uint64_t))sub_1B6828994);
    swift_bridgeObjectRelease();
    uint64_t v47 = v42;
    unint64_t v48 = v28;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v47;
  }
  sub_1B6E328C8();
  sub_1B6E31948();
  type metadata accessor for GraphCodeGen.CFGNode();
  sub_1B6E32B18();
  uint64_t result = sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B6824F80(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v16 = *a3;
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1B682494C(v3, &v16);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6829820(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = v4;
  unint64_t v8 = v7 + 32;
  *(void *)(v7 + 40) = v6;
  sub_1B67C5060();
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = 0;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = v7;
  uint64_t v10 = *(void *)(v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1B68C3500(0, v10, 1, MEMORY[0x1E4FBC860]);
  unint64_t v12 = v11;
  if (*(void *)(v7 + 16))
  {
    unint64_t v13 = (unint64_t)&v11[4 * v11[2] + 4];
    if (v8 < v13 + 32 * v10 && v13 < v8 + 32 * v10)
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
    if (v10) {
      v12[2] += v10;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B6829820(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  return (uint64_t)v12;
}

uint64_t sub_1B68251CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v16 = *a3;
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1B682494C(v3, &v16);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6829820(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B6E77050;
  *(void *)(v7 + 32) = v4;
  unint64_t v8 = v7 + 32;
  *(void *)(v7 + 40) = v6;
  sub_1B67C5060();
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = 0;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B6E77050;
  *(void *)(inited + 32) = v7;
  uint64_t v10 = *(void *)(v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1B68C3500(0, v10, 1, MEMORY[0x1E4FBC860]);
  unint64_t v12 = v11;
  if (*(void *)(v7 + 16))
  {
    unint64_t v13 = (unint64_t)&v11[4 * v11[2] + 4];
    if (v8 < v13 + 32 * v10 && v13 < v8 + 32 * v10)
    {
      uint64_t result = sub_1B6E32C88();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
    if (v10) {
      v12[2] += v10;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1B6829820(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  return (uint64_t)v12;
}

uint64_t sub_1B6825418()
{
  uint64_t v0 = swift_retain();
  sub_1B678CBC8(v0, v1, v31);
  swift_retain();
  uint64_t v2 = sub_1B6823960();
  uint64_t v4 = v3;
  swift_release();
  uint64_t v5 = sub_1B6825A58(v4);
  swift_bridgeObjectRelease();
  int64_t v6 = *(void *)(v5 + 16);
  uint64_t v27 = v2;
  if (v6)
  {
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1B6C3C708(0, v6, 0);
    uint64_t v7 = v30;
    unint64_t v8 = (void *)(v5 + 104);
    do
    {
      unint64_t v9 = *(v8 - 9);
      unint64_t v11 = *(v8 - 5);
      uint64_t v10 = *(v8 - 4);
      uint64_t v12 = *(v8 - 3);
      char v29 = *((unsigned char *)v8 - 16);
      uint64_t v13 = *v8;
      uint64_t v28 = *(v8 - 1);
      sub_1B62C6AA8(v9);
      sub_1B67C52A4(v11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B62C6A70(v9);
      unint64_t v15 = *(void *)(v30 + 16);
      unint64_t v14 = *(void *)(v30 + 24);
      if (v15 >= v14 >> 1) {
        sub_1B6C3C708(v14 > 1, v15 + 1, 1);
      }
      v8 += 10;
      *(void *)(v30 + 16) = v15 + 1;
      unint64_t v16 = v30 + 48 * v15;
      *(void *)(v16 + 32) = v11;
      *(void *)(v16 + 40) = v10;
      *(void *)(v16 + 48) = v12;
      *(unsigned char *)(v16 + 56) = v29;
      *(void *)(v16 + 64) = v28;
      *(void *)(v16 + 72) = v13;
      --v6;
    }
    while (v6);
    uint64_t v17 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_1B6828498(v19, (void (*)(_OWORD *__return_ptr, uint64_t, unint64_t))sub_1B68285C8);
  uint64_t v21 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v21, v22);
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_1B6828498(v23, (void (*)(_OWORD *__return_ptr, uint64_t, unint64_t))sub_1B68285D0);
  swift_bridgeObjectRelease();
  uint64_t v37 = v31[0];
  sub_1B62D8C3C((uint64_t)&v37);
  uint64_t v36 = v31[1];
  sub_1B62D8C3C((uint64_t)&v36);
  uint64_t v35 = v31[2];
  sub_1B62D8C3C((uint64_t)&v35);
  uint64_t v34 = v31[3];
  sub_1B62D8C3C((uint64_t)&v34);
  uint64_t v33 = v31[4];
  sub_1B62D8C3C((uint64_t)&v33);
  uint64_t v32 = v31[5];
  sub_1B62D8C3C((uint64_t)&v32);
  sub_1B66417AC(v20);
  sub_1B66417AC(v24);
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_1B68258D0(0x5F6E66627573, 0xE600000000000000, v7, v27);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v25;
}

unint64_t sub_1B68257BC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1B68206A4(0x6E69627573, 0xE500000000000000);
  uint64_t v10 = v9;
  uint64_t v11 = sub_1B682BA18(a1, *(void *)(a3 + 24));
  uint64_t v13 = v12;
  unint64_t result = sub_1B67C52A4(a2);
  *(void *)a4 = a2;
  *(void *)(a4 + 8) = v8;
  *(void *)(a4 + 16) = v10;
  *(unsigned char *)(a4 + 24) = 0;
  *(void *)(a4 + 32) = v11;
  *(void *)(a4 + 40) = v13;
  return result;
}

unint64_t sub_1B6825844@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1B68206A4(0x74756F627573, 0xE600000000000000);
  uint64_t v10 = v9;
  uint64_t v11 = sub_1B682BA18(a1, *(void *)(a3 + 32));
  uint64_t v13 = v12;
  unint64_t result = sub_1B67C52A4(a2);
  *(void *)a4 = a2;
  *(void *)(a4 + 8) = v8;
  *(void *)(a4 + 16) = v10;
  *(unsigned char *)(a4 + 24) = 1;
  *(void *)(a4 + 32) = v11;
  *(void *)(a4 + 40) = v13;
  return result;
}

uint64_t sub_1B68258D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v10 = sub_1B6D48314(a1, a2, 1684631414, 0xE400000000000000, 0x636974617473, 0xE600000000000000, MEMORY[0x1E4FBC860], a3, v5);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v15 = v10;
  uint64_t v16 = v12;
  sub_1B6E31948();
  uint64_t v14 = MEMORY[0x1E4FBC870];
  sub_1B682494C(a4, &v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B67B79C8(4);
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return v15;
}

uint64_t sub_1B6825A58(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(v1 + 16) + 16);
  int v3 = v2 != 0;
  unint64_t v62 = MEMORY[0x1E4FBC870];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v49 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v50 = v5;
    uint64_t v51 = v4;
    while (1)
    {
      uint64_t v8 = v5 + 88 * v6;
      uint64_t v9 = *(uint64_t **)v8;
      int v10 = *(unsigned __int8 *)(v8 + 48);
      uint64_t v11 = swift_conformsToProtocol2();
      if (v11) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = 0;
      }
      uint64_t v13 = v5;
      if (v11) {
        uint64_t v14 = v9;
      }
      else {
        uint64_t v14 = 0;
      }
      if (v14)
      {
        int v54 = v3;
        int v52 = v10;
        unint64_t v57 = v7;
        uint64_t v53 = v6;
        uint64_t v15 = *v14;
        uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 32);
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v17 = v16(v15, v12);
        swift_release();
        unint64_t v59 = v62;
        uint64_t v61 = v17;
        sub_1B68276A4();
        sub_1B6829820(0, &qword_1E9DD1268, (uint64_t)&type metadata for ScriptParameter, MEMORY[0x1E4FBB320]);
        sub_1B6827700();
        sub_1B6827758(&qword_1E9DD1278, &qword_1E9DD1268, (uint64_t)&type metadata for ScriptParameter);
        sub_1B68277B0();
        if ((sub_1B6E31FA8() & 1) == 0)
        {
          uint64_t v18 = *(void *)(v17 + 16);
          uint64_t v7 = v57;
          if (!v18)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
LABEL_53:
            uint64_t v5 = v50;
            uint64_t v4 = v51;
            uint64_t v6 = v53;
            int v10 = v52;
            goto LABEL_4;
          }
          char v55 = *(unsigned char *)(v56 + 32);
          uint64_t v19 = (char *)(swift_bridgeObjectRetain() + 56);
          while (2)
          {
            unint64_t v20 = *((void *)v19 - 3);
            char v21 = *(v19 - 16);
            uint64_t v22 = *((void *)v19 - 1);
            char v23 = *v19;
            sub_1B62C6AA8(v20);
            sub_1B62C6AA8(v20);
            sub_1B67E96CC((uint64_t)&v59, v20, v21, v22, v23);
            sub_1B62C6A70(v59);
            sub_1B68EC9E4(v20);
            uint64_t v25 = v24;
            uint64_t v58 = v18;
            if (swift_dynamicCastMetatype())
            {
LABEL_17:
              if ((v21 & 2) != 0) {
                uint64_t v26 = MEMORY[0x1E4FBB870];
              }
              else {
                uint64_t v26 = MEMORY[0x1E4FBB2A0];
              }
              goto LABEL_29;
            }
            type metadata accessor for frame_constants(0);
            if (swift_dynamicCastMetatype())
            {
LABEL_21:
              if ((v55 & 1) == 0) {
                goto LABEL_17;
              }
            }
            else if (!swift_dynamicCastMetatype() {
                   && !swift_dynamicCastMetatype()
            }
                   && !swift_dynamicCastMetatype()
                   && !swift_dynamicCastMetatype()
                   && !swift_dynamicCastMetatype())
            {
              if (swift_dynamicCastMetatype()) {
                goto LABEL_17;
              }
              if (swift_dynamicCastMetatype()) {
                goto LABEL_17;
              }
              sub_1B665D590();
              if (swift_dynamicCastMetatype()) {
                goto LABEL_17;
              }
              if (swift_dynamicCastMetatype())
              {
                char v39 = sub_1B6E334B8();
                swift_bridgeObjectRelease();
                if ((v39 & 1) == 0) {
                  goto LABEL_17;
                }
              }
              else
              {
                if (v25 == v49) {
                  goto LABEL_17;
                }
                if (swift_dynamicCastMetatype()) {
                  goto LABEL_21;
                }
                type metadata accessor for __vfx_sampler1d(0);
                if (swift_dynamicCastMetatype()) {
                  goto LABEL_21;
                }
                type metadata accessor for __vfx_sampler2d(0);
                if (swift_dynamicCastMetatype()) {
                  goto LABEL_21;
                }
                type metadata accessor for __vfx_sampler3d(0);
                if (swift_dynamicCastMetatype()) {
                  goto LABEL_21;
                }
                if (swift_conformsToProtocol2()) {
                  uint64_t v40 = v25;
                }
                else {
                  uint64_t v40 = 0;
                }
                if (v40) {
                  goto LABEL_17;
                }
              }
            }
            sub_1B68EC9E4(v20);
            uint64_t v26 = v27;
LABEL_29:
            unint64_t v28 = sub_1B69B1CC4(v26);
            if ((~v28 & 0xF000000000000007) == 0)
            {
              unint64_t v59 = 0;
              unint64_t v60 = 0xE000000000000000;
              sub_1B6E328C8();
              uint64_t v46 = sub_1B6E33B48();
              unint64_t v48 = v47;
              swift_bridgeObjectRelease();
              unint64_t v59 = v46;
              unint64_t v60 = v48;
              sub_1B6E31948();
              uint64_t result = sub_1B6E32BE8();
              __break(1u);
              return result;
            }
            unint64_t v29 = v28;
            sub_1B67C52A4(v28);
            uint64_t v30 = v22;
            uint64_t v31 = sub_1B6820C70(v20, v21, v22, v23);
            uint64_t v33 = v32;
            sub_1B62C6AA8(v20);
            sub_1B6827B54(v29);
            swift_bridgeObjectRetain();
            char v34 = v23;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v7 = sub_1B68C12C8(0, v7[2] + 1, 1, v7);
            }
            unint64_t v36 = v7[2];
            unint64_t v35 = v7[3];
            uint64_t v37 = v7;
            if (v36 >= v35 >> 1) {
              uint64_t v37 = sub_1B68C12C8(v35 > 1, v36 + 1, 1, v7);
            }
            v37[2] = v36 + 1;
            uint64_t v7 = v37;
            uint64_t v38 = &v37[10 * v36];
            v38[4] = v20;
            *((unsigned char *)v38 + 40) = v21;
            v38[6] = v30;
            *((unsigned char *)v38 + 56) = v34;
            v38[8] = v29;
            v38[9] = v31;
            v38[10] = v33;
            *((unsigned char *)v38 + 88) = (v21 & 2) != 0;
            v38[12] = 0;
            v38[13] = 0;
            sub_1B6827B68(v29);
            sub_1B6827B68(v29);
            swift_bridgeObjectRelease();
            sub_1B62C6A70(v20);
            v19 += 32;
            uint64_t v18 = v58 - 1;
            if (v58 == 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease_n();
              int v3 = v54;
              goto LABEL_53;
            }
            continue;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v7 = v57;
        uint64_t v5 = v50;
        uint64_t v4 = v51;
      }
      else
      {
        uint64_t v5 = v13;
      }
LABEL_4:
      ++v6;
      v3 |= v10;
      if (v6 == v4)
      {
        swift_bridgeObjectRelease();
        if ((v3 & 1) == 0) {
          goto LABEL_62;
        }
LABEL_57:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1B68C12C8(0, v7[2] + 1, 1, v7);
        }
        unint64_t v42 = v7[2];
        unint64_t v41 = v7[3];
        if (v42 >= v41 >> 1) {
          uint64_t v7 = sub_1B68C12C8(v41 > 1, v42 + 1, 1, v7);
        }
        _OWORD v7[2] = v42 + 1;
        unint64_t v43 = &v7[10 * v42];
        v43[4] = 0xF000000000000000;
        *((unsigned char *)v43 + 40) = 1;
        v43[6] = 0;
        *((unsigned char *)v43 + 56) = 1;
        *((_OWORD *)v43 + 4) = xmmword_1B6E89D10;
        v43[10] = 0xEE00747865746E6FLL;
        *((unsigned char *)v43 + 88) = 0;
        v43[12] = 0;
        v43[13] = 0;
        goto LABEL_62;
      }
    }
  }
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  if (v2) {
    goto LABEL_57;
  }
LABEL_62:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = sub_1B6C1670C(v7);
  }
  unint64_t v44 = v7[2];
  unint64_t v59 = (unint64_t)(v7 + 4);
  unint64_t v60 = v44;
  sub_1B6826E54((uint64_t *)&v59);
  swift_bridgeObjectRelease();
  return (uint64_t)v7;
}

uint64_t sub_1B68262EC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B6823960();
  uint64_t v7 = sub_1B6825A58(v6);
  swift_bridgeObjectRelease();
  for (uint64_t i = *(void **)(v2 + 40); i[2]; uint64_t i = *(void **)(v2 + 40))
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 40) = i;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t i = sub_1B6C16734(i);
    }
    uint64_t v10 = i[2] - 1;
    uint64_t v11 = &i[11 * v10];
    long long v12 = *((_OWORD *)v11 + 2);
    v48[1] = *((_OWORD *)v11 + 3);
    long long v13 = *((_OWORD *)v11 + 4);
    long long v14 = *((_OWORD *)v11 + 5);
    long long v15 = *((_OWORD *)v11 + 6);
    uint64_t v49 = v11[14];
    v48[3] = v14;
    v48[4] = v15;
    v48[2] = v13;
    v48[0] = v12;
    i[2] = v10;
    *(void *)(v2 + 40) = i;
    sub_1B6825418();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6826DE0((uint64_t)v48);
  }
  int64_t v16 = *(void *)(v7 + 16);
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v40 = v7;
  uint64_t v41 = v5;
  if (v16)
  {
    uint64_t v38 = a1;
    uint64_t v39 = a2;
    uint64_t v46 = MEMORY[0x1E4FBC860];
    sub_1B6C3C708(0, v16, 0);
    uint64_t v17 = v46;
    uint64_t v18 = (void *)(v7 + 104);
    int64_t v44 = v16;
    int64_t v19 = v16;
    do
    {
      unint64_t v20 = *(v18 - 9);
      unint64_t v21 = *(v18 - 5);
      uint64_t v22 = *(v18 - 3);
      char v23 = *((unsigned char *)v18 - 16);
      uint64_t v24 = *v18;
      uint64_t v42 = *(v18 - 1);
      uint64_t v43 = *(v18 - 4);
      sub_1B62C6AA8(v20);
      sub_1B67C52A4(v21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B62C6A70(v20);
      unint64_t v26 = *(void *)(v46 + 16);
      unint64_t v25 = *(void *)(v46 + 24);
      if (v26 >= v25 >> 1) {
        sub_1B6C3C708(v25 > 1, v26 + 1, 1);
      }
      v18 += 10;
      *(void *)(v46 + 16) = v26 + 1;
      unint64_t v27 = v46 + 48 * v26;
      *(void *)(v27 + 32) = v21;
      *(void *)(v27 + 40) = v43;
      *(void *)(v27 + 48) = v22;
      *(unsigned char *)(v27 + 56) = v23;
      *(void *)(v27 + 64) = v42;
      *(void *)(v27 + 72) = v24;
      --v19;
    }
    while (v19);
    uint64_t v7 = v40;
    uint64_t v5 = v41;
    int64_t v16 = v44;
    a2 = v39;
    a1 = v38;
  }
  sub_1B68258D0(a1, a2, v17, v5);
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v47 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3C728(0, v16, 0);
    uint64_t v28 = v7 + 56;
    do
    {
      int64_t v45 = v16;
      unint64_t v29 = *(void *)(v28 - 24);
      char v30 = *(unsigned char *)(v28 - 16);
      uint64_t v31 = *(void *)(v28 - 8);
      char v32 = *(unsigned char *)v28;
      unint64_t v33 = *(void *)(v28 + 8);
      sub_1B62C6AA8(v29);
      sub_1B67C52A4(v33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B62C6AA8(v29);
      sub_1B67C52A4(v33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B678FC34(v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B62C6A70(v29);
      sub_1B678FC34(v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v35 = *(void *)(v47 + 16);
      unint64_t v34 = *(void *)(v47 + 24);
      if (v35 >= v34 >> 1) {
        sub_1B6C3C728(v34 > 1, v35 + 1, 1);
      }
      *(void *)(v47 + 16) = v35 + 1;
      uint64_t v36 = v47 + 32 * v35;
      *(void *)(v36 + 32) = v29;
      v28 += 80;
      *(unsigned char *)(v36 + 40) = v30;
      *(void *)(v36 + 48) = v31;
      *(unsigned char *)(v36 + 56) = v32;
      int64_t v16 = v45 - 1;
    }
    while (v45 != 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return 0;
}

uint64_t sub_1B68266D4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GraphCodeGen()
{
  return self;
}

uint64_t type metadata accessor for GraphCodeGen.CFGNode()
{
  return self;
}

uint64_t type metadata accessor for GraphCodeGen.CFGNoop()
{
  return self;
}

uint64_t type metadata accessor for GraphCodeGen.CFGProcedure()
{
  return self;
}

uint64_t type metadata accessor for GraphCodeGen.CFGMultiProcedure()
{
  return self;
}

uint64_t type metadata accessor for GraphCodeGen.CFGBranch()
{
  return self;
}

uint64_t destroy for GraphCodeGen.CodeGenAtom()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GraphCodeGen.CodeGenAtom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GraphCodeGen.CodeGenAtom(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GraphCodeGen.CodeGenAtom(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GraphCodeGen.CodeGenAtom(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GraphCodeGen.CodeGenAtom(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphCodeGen.CodeGenAtom()
{
  return &type metadata for GraphCodeGen.CodeGenAtom;
}

ValueMetadata *type metadata accessor for GraphCodeGen.FormattingOptions()
{
  return &type metadata for GraphCodeGen.FormattingOptions;
}

unsigned char *storeEnumTagSinglePayload for GraphCodeGen.Language(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6826BF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphCodeGen.Language()
{
  return &type metadata for GraphCodeGen.Language;
}

unint64_t sub_1B6826C2C()
{
  unint64_t result = qword_1E9DD1238;
  if (!qword_1E9DD1238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1238);
  }
  return result;
}

unint64_t sub_1B6826C84()
{
  unint64_t result = qword_1E9DD1240;
  if (!qword_1E9DD1240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1240);
  }
  return result;
}

unint64_t sub_1B6826CDC()
{
  unint64_t result = qword_1E9DD1248;
  if (!qword_1E9DD1248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1248);
  }
  return result;
}

unint64_t sub_1B6826D34()
{
  unint64_t result = qword_1E9DD1250;
  if (!qword_1E9DD1250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1250);
  }
  return result;
}

unint64_t sub_1B6826D8C()
{
  unint64_t result = qword_1E9DD1258;
  if (!qword_1E9DD1258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1258);
  }
  return result;
}

uint64_t sub_1B6826DE0(uint64_t a1)
{
  return a1;
}

unint64_t sub_1B6826E54(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  unint64_t result = sub_1B6E33068();
  if ((uint64_t)result >= v4)
  {
    if ((unint64_t)v4 < 2) {
      return result;
    }
    uint64_t v9 = *a1;
    uint64_t v10 = *a1 + 144;
    uint64_t v11 = -1;
    uint64_t v12 = 1;
LABEL_11:
    unint64_t v13 = *(void *)(v9 + 80 * v12);
    unint64_t v14 = v13 >> 60;
    uint64_t v15 = v11;
    int64_t v16 = (_OWORD *)v10;
    while (1)
    {
      if ((v14 - 11) >= 2)
      {
        if (v14 == 15 && v13 == 0xF000000000000000) {
          unint64_t result = 0;
        }
        else {
          unint64_t result = 2;
        }
      }
      else
      {
        unint64_t result = 1;
      }
      unint64_t v17 = *((void *)v16 - 18);
      if ((v17 >> 60) - 11 >= 2)
      {
        BOOL v18 = v17 >> 60 == 15 && v17 == 0xF000000000000000;
        if (v18 || result >= 2)
        {
LABEL_10:
          ++v12;
          v10 += 80;
          --v11;
          if (v12 == v4) {
            return result;
          }
          goto LABEL_11;
        }
      }
      else if (result)
      {
        goto LABEL_10;
      }
      unint64_t result = (unint64_t)(v16 - 4);
      char v19 = *((unsigned char *)v16 - 56);
      uint64_t v20 = *((void *)v16 - 6);
      char v21 = *((unsigned char *)v16 - 40);
      uint64_t v22 = *((void *)v16 - 2);
      char v23 = *((unsigned char *)v16 - 8);
      long long v24 = *(v16 - 2);
      long long v25 = *v16;
      long long v26 = *(v16 - 6);
      *(v16 - 2) = *(v16 - 7);
      *(v16 - 1) = v26;
      *int64_t v16 = *(v16 - 5);
      long long v27 = *(v16 - 8);
      *(v16 - 4) = *(v16 - 9);
      *(v16 - 3) = v27;
      *(v16 - 5) = v25;
      v16 -= 5;
      *((void *)v16 - 8) = v13;
      *((unsigned char *)v16 - 56) = v19;
      *((void *)v16 - 6) = v20;
      *((unsigned char *)v16 - 40) = v21;
      *(v16 - 2) = v24;
      *((void *)v16 - 2) = v22;
      *((unsigned char *)v16 - 8) = v23;
      if (__CFADD__(v15++, 1)) {
        goto LABEL_10;
      }
    }
  }
  int64_t v105 = result;
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1)
  {
    unint64_t result = sub_1B6E32BD8();
    __break(1u);
  }
  else
  {
    uint64_t v100 = a1;
    if (v4 >= 2)
    {
      uint64_t v7 = v6 >> 1;
      sub_1B6827B7C();
      uint64_t v8 = sub_1B6E31C98();
      *(void *)(v8 + 16) = v7;
      uint64_t v104 = v8;
      long long v114 = (char *)(v8 + 32);
      goto LABEL_32;
    }
    unint64_t v29 = (char *)MEMORY[0x1E4FBC860];
    long long v114 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v104 = MEMORY[0x1E4FBC860];
    if (v4 == 1)
    {
LABEL_32:
      uint64_t v30 = 0;
      uint64_t v103 = *a1 + 160;
      uint64_t v115 = *a1;
      uint64_t v102 = *a1 + 64;
      unint64_t v29 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v106 = v4;
      while (1)
      {
        uint64_t v32 = v30++;
        if (v30 < v4)
        {
          unint64_t v33 = *(void *)(v115 + 80 * v30);
          if ((v33 >> 60) - 11 >= 2)
          {
            if (v33 >> 60 == 15 && v33 == 0xF000000000000000) {
              unint64_t v34 = 0;
            }
            else {
              unint64_t v34 = 2;
            }
          }
          else
          {
            unint64_t v34 = 1;
          }
          unint64_t v36 = *(void *)(v115 + 80 * v32);
          if ((v36 >> 60) - 11 >= 2)
          {
            if (v36 >> 60 == 15 && v36 == 0xF000000000000000) {
              unint64_t v37 = 0;
            }
            else {
              unint64_t v37 = 2;
            }
          }
          else
          {
            unint64_t v37 = 1;
          }
          uint64_t v30 = v32 + 2;
          if (v32 + 2 < v4)
          {
            uint64_t v39 = (unint64_t *)(v103 + 80 * v32);
            while (1)
            {
              unint64_t v41 = *v39;
              v39 += 10;
              unint64_t v40 = v41;
              unsigned int v42 = (v41 >> 60) - 11;
              if (v41 >> 60 == 15 && v40 == 0xF000000000000000) {
                unint64_t v44 = 0;
              }
              else {
                unint64_t v44 = 2;
              }
              if (v42 < 2) {
                unint64_t v44 = 1;
              }
              if ((v33 >> 60) - 11 >= 2) {
                unint64_t v45 = v33 >> 60 == 15 && v33 == 0xF000000000000000 ? 0 : 2;
              }
              else {
                unint64_t v45 = 1;
              }
              if (v34 < v37 == v44 >= v45) {
                break;
              }
              ++v30;
              unint64_t v33 = v40;
              if (v4 == v30)
              {
                uint64_t v30 = v4;
                break;
              }
            }
          }
          if (v34 < v37 && v32 < v30)
          {
            uint64_t v46 = 80 * v30;
            uint64_t v47 = 80 * v32;
            uint64_t v48 = v30;
            uint64_t v101 = v32;
            uint64_t v107 = v29;
            do
            {
              if (v32 != --v48)
              {
                uint64_t v49 = v115 + v46;
                uint64_t v50 = *(void *)(v115 + v47);
                uint64_t v113 = v2;
                char v51 = *(unsigned char *)(v115 + v47 + 8);
                uint64_t v52 = *(void *)(v115 + v47 + 16);
                uint64_t v112 = *(void *)(v115 + v47 + 48);
                char v110 = *(unsigned char *)(v115 + v47 + 24);
                char v111 = *(unsigned char *)(v115 + v47 + 56);
                long long v108 = *(_OWORD *)(v115 + v47 + 32);
                long long v109 = *(_OWORD *)(v115 + v47 + 64);
                memmove((void *)(v115 + v47), (const void *)(v115 + v46 - 80), 0x50uLL);
                *(void *)(v49 - 80) = v50;
                *(unsigned char *)(v49 - 72) = v51;
                *(void *)(v49 - 64) = v52;
                unint64_t v29 = v107;
                *(unsigned char *)(v49 - 56) = v110;
                *(_OWORD *)(v49 - 48) = v108;
                uint64_t v2 = v113;
                *(void *)(v49 - 32) = v112;
                *(unsigned char *)(v49 - 24) = v111;
                *(_OWORD *)(v49 - 16) = v109;
              }
              ++v32;
              v46 -= 80;
              v47 += 80;
            }
            while (v32 < v48);
            uint64_t v4 = v106;
            uint64_t v32 = v101;
          }
        }
        if (v30 < v4 && v30 - v32 < v105)
        {
          uint64_t v53 = v32 + v105;
          if (v32 + v105 >= v4) {
            uint64_t v53 = v4;
          }
          if (v30 != v53)
          {
            int v54 = (_OWORD *)(v102 + 80 * v30);
            while (1)
            {
              unint64_t v55 = *(void *)(v115 + 80 * v30);
              unint64_t v56 = v55 >> 60;
              uint64_t v57 = v32;
              uint64_t v58 = v54;
              do
              {
                if ((v56 - 11) >= 2)
                {
                  if (v56 == 15 && v55 == 0xF000000000000000) {
                    unint64_t v59 = 0;
                  }
                  else {
                    unint64_t v59 = 2;
                  }
                }
                else
                {
                  unint64_t v59 = 1;
                }
                unint64_t v60 = *((void *)v58 - 18);
                if ((v60 >> 60) - 11 < 2)
                {
                  if (v59) {
                    break;
                  }
                  goto LABEL_102;
                }
                BOOL v61 = v60 >> 60 == 15 && v60 == 0xF000000000000000;
                if (v61 || v59 >= 2) {
                  break;
                }
LABEL_102:
                char v62 = *((unsigned char *)v58 - 56);
                uint64_t v63 = *((void *)v58 - 6);
                char v64 = *((unsigned char *)v58 - 40);
                uint64_t v65 = *((void *)v58 - 2);
                char v66 = *((unsigned char *)v58 - 8);
                long long v67 = *(v58 - 2);
                long long v68 = *v58;
                long long v69 = *(v58 - 6);
                *(v58 - 2) = *(v58 - 7);
                *(v58 - 1) = v69;
                _OWORD *v58 = *(v58 - 5);
                long long v70 = *(v58 - 8);
                *(v58 - 4) = *(v58 - 9);
                *(v58 - 3) = v70;
                *(v58 - 5) = v68;
                v58 -= 5;
                *((void *)v58 - 8) = v55;
                *((unsigned char *)v58 - 56) = v62;
                *((void *)v58 - 6) = v63;
                *((unsigned char *)v58 - 40) = v64;
                *(v58 - 2) = v67;
                *((void *)v58 - 2) = v65;
                ++v57;
                *((unsigned char *)v58 - 8) = v66;
              }
              while (v30 != v57);
              ++v30;
              v54 += 5;
              if (v30 == v53)
              {
                uint64_t v30 = v53;
                break;
              }
            }
          }
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v29 = sub_1B62BD890(0, *((void *)v29 + 2) + 1, 1, v29);
        }
        unint64_t v72 = *((void *)v29 + 2);
        unint64_t v71 = *((void *)v29 + 3);
        unint64_t v31 = v72 + 1;
        if (v72 >= v71 >> 1) {
          unint64_t v29 = sub_1B62BD890(v71 > 1, v72 + 1, 1, v29);
        }
        *((void *)v29 + 2) = v31;
        long long v73 = v29 + 32;
        long long v74 = &v29[16 * v72 + 32];
        *(void *)long long v74 = v32;
        *((void *)v74 + 1) = v30;
        if (v72) {
          break;
        }
        unint64_t v31 = 1;
LABEL_34:
        uint64_t v4 = v106;
        if (v30 >= v106) {
          goto LABEL_126;
        }
      }
      while (1)
      {
        uint64_t v75 = v31 - 1;
        if (v31 >= 4)
        {
          long long v80 = &v73[16 * v31];
          uint64_t v81 = *((void *)v80 - 7) - *((void *)v80 - 8);
          uint64_t v78 = *((void *)v80 - 5) - *((void *)v80 - 6);
          uint64_t v79 = v31 - 2;
          uint64_t v82 = &v73[16 * v31 - 32];
          uint64_t v76 = *(void *)v82;
          uint64_t v77 = *((void *)v82 + 1);
          if (v78 - v76 + v77 >= v81)
          {
            BOOL v85 = v78 < *(void *)&v73[16 * v75 + 8] - *(void *)&v73[16 * v75];
            goto LABEL_120;
          }
        }
        else
        {
          if (v31 != 3)
          {
            uint64_t v83 = *(void *)&v73[16 * v31 - 24] - *(void *)&v29[16 * v31];
            uint64_t v84 = *(void *)&v73[16 * v75 + 8] - *(void *)&v73[16 * v75];
LABEL_117:
            if (v84 < v83) {
              goto LABEL_34;
            }
            goto LABEL_122;
          }
          uint64_t v76 = *((void *)v29 + 6);
          uint64_t v77 = *((void *)v29 + 7);
          uint64_t v78 = *((void *)v29 + 5) - *((void *)v29 + 4);
          uint64_t v79 = 1;
        }
        uint64_t v83 = v77 - v76;
        uint64_t v84 = *(void *)&v73[16 * v75 + 8] - *(void *)&v73[16 * v75];
        if (v83 + v84 < v78) {
          goto LABEL_117;
        }
        BOOL v85 = v78 < v84;
LABEL_120:
        if (v85) {
          uint64_t v75 = v79;
        }
LABEL_122:
        uint64_t v86 = &v73[16 * v75 - 16];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = &v73[16 * v75];
        uint64_t v89 = *((void *)v88 + 1);
        sub_1B6827804((char *)(v115 + 80 * *(void *)v86), (char *)(v115 + 80 * *(void *)v88), v115 + 80 * v89, v114);
        if (v2) {
          goto LABEL_132;
        }
        *(void *)uint64_t v86 = v87;
        *((void *)v86 + 1) = v89;
        unint64_t v90 = *((void *)v29 + 2);
        unint64_t v31 = v90 - 1;
        memmove(&v73[16 * v75], v88 + 16, 16 * (v90 - 1 - v75));
        *((void *)v29 + 2) = v90 - 1;
        if (v90 <= 2) {
          goto LABEL_34;
        }
      }
    }
    unint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_126:
    if (v31 >= 2)
    {
      uint64_t v91 = *v100;
      do
      {
        uint64_t v92 = v29 + 32;
        uint64_t v93 = (uint64_t)v29;
        uint64_t v94 = *(void *)&v29[16 * v31];
        uint64_t v95 = &v92[16 * v31 - 16];
        uint64_t v96 = *((void *)v95 + 1);
        sub_1B6827804((char *)(v91 + 80 * v94), (char *)(v91 + 80 * *(void *)v95), v91 + 80 * v96, v114);
        if (v2) {
          break;
        }
        uint64_t v97 = (char *)v93;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v97 = sub_1B6D671B8(v93);
        }
        uint64_t v98 = &v97[16 * v31];
        *(void *)uint64_t v98 = v94;
        *((void *)v98 + 1) = v96;
        unint64_t v29 = v97;
        unint64_t v99 = *((void *)v97 + 2);
        memmove(&v97[16 * v31 + 16], &v97[16 * v31 + 32], 16 * (v99 - v31));
        *((void *)v97 + 2) = v99 - 1;
        unint64_t v31 = v99 - 1;
      }
      while (v99 > 2);
    }
LABEL_132:
    swift_bridgeObjectRelease();
    *(void *)(v104 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B68276A4()
{
  if (!qword_1E9DD1260)
  {
    sub_1B67FAB80();
    unint64_t v0 = sub_1B6E31F18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD1260);
    }
  }
}

unint64_t sub_1B6827700()
{
  unint64_t result = qword_1E9DD1270;
  if (!qword_1E9DD1270)
  {
    sub_1B68276A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1270);
  }
  return result;
}

uint64_t sub_1B6827758(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B6829820(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B68277B0()
{
  unint64_t result = qword_1E9DD1280;
  if (!qword_1E9DD1280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1280);
  }
  return result;
}

uint64_t sub_1B6827804(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 80;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 80;
  unint64_t v35 = __dst;
  unint64_t v34 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -79)
    {
      if (a4 != __src || &__src[80 * v11] <= a4) {
        memmove(a4, __src, 80 * v11);
      }
      char v21 = &v4[80 * v11];
      unint64_t v33 = v21;
      unint64_t v35 = v6;
      if (v7 < v6 && v10 >= 80)
      {
        uint64_t v22 = (char *)(a3 - 80);
        while (1)
        {
          unint64_t v23 = *((void *)v21 - 10);
          if ((v23 >> 60) - 11 >= 2)
          {
            if (v23 >> 60 == 15 && v23 == 0xF000000000000000) {
              unint64_t v24 = 0;
            }
            else {
              unint64_t v24 = 2;
            }
          }
          else
          {
            unint64_t v24 = 1;
          }
          long long v26 = v22 + 80;
          uint64_t v28 = v6 - 80;
          unint64_t v27 = *((void *)v6 - 10);
          unsigned int v29 = (v27 >> 60) - 11;
          if (v27 >> 60 == 15 && v27 == 0xF000000000000000) {
            unint64_t v31 = 0;
          }
          else {
            unint64_t v31 = 2;
          }
          if (v29 < 2) {
            unint64_t v31 = 1;
          }
          if (v24 >= v31)
          {
            unint64_t v33 = v21 - 80;
            if (v26 < v21 || v22 >= v21 || v26 != v21) {
              memmove(v22, v21 - 80, 0x50uLL);
            }
            uint64_t v28 = v6;
            v21 -= 80;
            if (v6 <= v7) {
              goto LABEL_70;
            }
          }
          else
          {
            if (v26 != v6 || v22 >= v6) {
              memmove(v22, v6 - 80, 0x50uLL);
            }
            unint64_t v35 = v6 - 80;
            if (v28 <= v7) {
              goto LABEL_70;
            }
          }
          v22 -= 80;
          uint64_t v6 = v28;
          if (v21 <= v4) {
            goto LABEL_70;
          }
        }
      }
      goto LABEL_70;
    }
  }
  else if (v8 >= -79)
  {
    if (a4 != __dst || &__dst[80 * v9] <= a4) {
      memmove(a4, __dst, 80 * v9);
    }
    uint64_t v12 = &v4[80 * v9];
    unint64_t v33 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 80)
    {
      do
      {
        unint64_t v13 = *(void *)v4;
        uint64_t v14 = *(void *)v6 >> 60;
        if (v14 == 15 && *(void *)v6 == 0xF000000000000000) {
          unint64_t v16 = 0;
        }
        else {
          unint64_t v16 = 2;
        }
        if ((v14 - 11) < 2) {
          unint64_t v16 = 1;
        }
        unsigned int v17 = (v13 >> 60) - 11;
        if (v13 >> 60 == 15 && v13 == 0xF000000000000000) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = 2;
        }
        if (v17 < 2) {
          unint64_t v19 = 1;
        }
        if (v16 >= v19)
        {
          if (v7 != v4) {
            memmove(v7, v4, 0x50uLL);
          }
          v4 += 80;
          unint64_t v34 = v4;
          uint64_t v20 = v6;
        }
        else
        {
          uint64_t v20 = v6 + 80;
          if (v7 < v6 || v7 >= v20 || v7 != v6) {
            memmove(v7, v6, 0x50uLL);
          }
        }
        v7 += 80;
        if (v4 >= v12) {
          break;
        }
        uint64_t v6 = v20;
      }
      while ((unint64_t)v20 < a3);
      unint64_t v35 = v7;
    }
LABEL_70:
    sub_1B6D66C38((void **)&v35, (const void **)&v34, &v33);
    return 1;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

unint64_t sub_1B6827B54(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1B67C52A4(result);
  }
  return result;
}

unint64_t sub_1B6827B68(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1B678FC34(result);
  }
  return result;
}

void sub_1B6827B7C()
{
  if (!qword_1E9DD1288)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD1288);
    }
  }
}

uint64_t sub_1B6827BE4(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1B6E32C18();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1B6E32A48();
    uint64_t v6 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x1BA9B4580](v6, a1);
        if (!*(void *)(a2 + 16)) {
          break;
        }
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
        swift_retain();
        if (!*(void *)(a2 + 16)) {
          break;
        }
      }
      unint64_t v8 = sub_1B62C1A30(v7);
      if ((v9 & 1) == 0 || !*(void *)(*(void *)(a2 + 56) + 8 * v8)) {
        break;
      }
      ++v6;
      swift_retain();
      swift_release();
      sub_1B6E32A08();
      sub_1B6E32A68();
      sub_1B6E32A78();
      sub_1B6E32A28();
      if (v4 == v6) {
        return v10;
      }
    }
    swift_retain();
    sub_1B6E328C8();
    sub_1B6E31948();
    sub_1B682A98C();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t result = sub_1B6E32BE8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6827E00(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v24 = a3;
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(v4) & 0xF;
  }
  else {
    uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = 0xE000000000000000;
    BOOL v18 = a1;
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i < v6; i += v13)
  {
    if ((v4 & 0x1000000000000000) != 0)
    {
      uint64_t v10 = sub_1B6E328B8();
      uint64_t v13 = v12;
      goto LABEL_17;
    }
    if ((v4 & 0x2000000000000000) == 0)
    {
      uint64_t v9 = (v4 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((v5 & 0x1000000000000000) == 0) {
        uint64_t v9 = sub_1B6E329D8();
      }
      uint64_t v10 = *(unsigned __int8 *)(v9 + i);
      if (*(char *)(v9 + i) < 0)
      {
        switch(__clz(v10 ^ 0xFF))
        {
          case 0x1Au:
            uint64_t v11 = (char *)(i + v9);
            goto LABEL_22;
          case 0x1Bu:
            uint64_t v15 = (char *)(i + v9);
            goto LABEL_26;
          case 0x1Cu:
            unint64_t v16 = (char *)(i + v9);
            goto LABEL_28;
          default:
            break;
        }
      }
LABEL_16:
      uint64_t v13 = 1;
      goto LABEL_17;
    }
    v21[0] = v5;
    v21[1] = v4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v10 = *((unsigned __int8 *)v21 + i);
    if ((*((char *)v21 + i) & 0x80000000) == 0) {
      goto LABEL_16;
    }
    switch(__clz(v10 ^ 0xFF))
    {
      case 0x1Au:
        uint64_t v11 = (char *)v21 + i;
LABEL_22:
        uint64_t v10 = v11[1] & 0x3F | ((v10 & 0x1F) << 6);
        uint64_t v13 = 2;
        break;
      case 0x1Bu:
        uint64_t v15 = (char *)v21 + i;
LABEL_26:
        uint64_t v10 = ((v10 & 0xF) << 12) | ((v15[1] & 0x3F) << 6) | v15[2] & 0x3F;
        uint64_t v13 = 3;
        break;
      case 0x1Cu:
        unint64_t v16 = (char *)v21 + i;
LABEL_28:
        uint64_t v10 = ((v10 & 0xF) << 18) | ((v16[1] & 0x3F) << 12) | ((v16[2] & 0x3F) << 6) | v16[3] & 0x3F;
        uint64_t v13 = 4;
        break;
      default:
        goto LABEL_16;
    }
LABEL_17:
    char v14 = a2(v10);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if ((v14 & 1) == 0) {
      sub_1B6E31898();
    }
  }
  BOOL v18 = a1;
  uint64_t v6 = v22;
  unint64_t v19 = v23;
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v18 = v6;
  v18[1] = v19;
  return result;
}

uint64_t sub_1B6828098()
{
  uint64_t v0 = sub_1B6E30AB8();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x1F4188790](v0, v3);
  unsigned int v29 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v30 = sub_1B6E31828();
  unint64_t v31 = v4;
  uint64_t v36 = 46;
  unint64_t v37 = 0xE100000000000000;
  uint64_t v34 = 95;
  unint64_t v35 = 0xE100000000000000;
  sub_1B633AF88();
  uint64_t v5 = sub_1B6E32618();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  unint64_t v30 = v5;
  unint64_t v31 = v7;
  uint64_t v36 = 45;
  unint64_t v37 = 0xE100000000000000;
  uint64_t v34 = 95;
  unint64_t v35 = 0xE100000000000000;
  uint64_t v8 = sub_1B6E32618();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v30 = v8;
  unint64_t v31 = v10;
  uint64_t v36 = 47;
  unint64_t v37 = 0xE100000000000000;
  uint64_t v34 = 95;
  unint64_t v35 = 0xE100000000000000;
  uint64_t v11 = sub_1B6E32618();
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  unint64_t v30 = v11;
  unint64_t v31 = v13;
  uint64_t v36 = 35;
  unint64_t v37 = 0xE100000000000000;
  uint64_t v14 = sub_1B6E325F8();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 32);
  unint64_t v16 = *(void *)(v14 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v17 = 0xE000000000000000;
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  uint64_t v18 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v30 = v15;
  unint64_t v31 = v16;
  uint64_t v32 = 0;
  uint64_t v33 = v18;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1B6E31988();
  unint64_t v21 = v20;
  if (v20)
  {
    uint64_t v22 = v19;
    while (1)
    {
      if ((v22 != 2573 || v21 != 0xE200000000000000) && (sub_1B6E334B8() & 1) == 0)
      {
        if ((sub_1B6E315C8() & 1) == 0 || (sub_1B6B06D70(v22, v21) & 0xFFFFFF80) != 0) {
          goto LABEL_6;
        }
        sub_1B6B06D70(v22, v21);
      }
      MEMORY[0x1BA9B35A0](v22, v21);
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v22 = sub_1B6E31988();
      unint64_t v21 = v23;
      if (!v23)
      {
        unint64_t v21 = v36;
        unint64_t v17 = v37;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1E9DCC4B0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1B6385660(v0, (uint64_t)qword_1E9DD1220);
  long long v25 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v29, v24, v0);
  unint64_t v26 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v27 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v27 + v26, v25, v0);
  unint64_t v30 = v21;
  unint64_t v31 = v17;
  sub_1B6827E00((uint64_t *)&v30, (uint64_t (*)(uint64_t))sub_1B68298FC, v27);
  swift_release();
  return v30;
}

uint64_t sub_1B6828498(uint64_t a1, void (*a2)(_OWORD *__return_ptr, uint64_t, unint64_t))
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1B6C3C708(0, 0, 0);
  uint64_t v4 = v16;
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = a1 + 32;
    do
    {
      unint64_t v8 = *(void *)(v7 + 8 * v6);
      sub_1B67C52A4(v8);
      a2(v15, v6, v8);
      sub_1B678FC34(v8);
      uint64_t v16 = v4;
      unint64_t v10 = *(void *)(v4 + 16);
      unint64_t v9 = *(void *)(v4 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1B6C3C708(v9 > 1, v10 + 1, 1);
        uint64_t v4 = v16;
      }
      ++v6;
      *(void *)(v4 + 16) = v10 + 1;
      uint64_t v11 = (_OWORD *)(v4 + 48 * v10);
      long long v12 = v15[0];
      long long v13 = v15[2];
      v11[3] = v15[1];
      void v11[4] = v13;
      void v11[2] = v12;
    }
    while (v5 != v6);
  }
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1B68285C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B68257BC(a1, a2, *(void *)(v3 + 24), a3);
}

unint64_t sub_1B68285D0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B6825844(a1, a2, *(void *)(v3 + 24), a3);
}

uint64_t sub_1B68285D8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6828610(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (unint64_t *)(swift_bridgeObjectRetain() + 56);
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      unint64_t v4 = *v2;
      if (*v2)
      {
        uint64_t v5 = HIBYTE(v4) & 0xF;
        if ((v4 & 0x2000000000000000) == 0) {
          uint64_t v5 = *(v2 - 1) & 0xFFFFFFFFFFFFLL;
        }
        if (v5)
        {
          unint64_t v6 = v2[2];
          unint64_t v12 = v2[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((sub_1B6E31A08() & 1) == 0) {
            sub_1B6E31948();
          }
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          if (v6)
          {
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v3 = sub_1B6335858(0, v3[2] + 1, 1, v3);
            }
            unint64_t v8 = v3[2];
            unint64_t v7 = v3[3];
            if (v8 >= v7 >> 1) {
              uint64_t v3 = sub_1B6335858(v7 > 1, v8 + 1, 1, v3);
            }
            v3[2] = v8 + 1;
            unint64_t v9 = &v3[2 * v8];
            v9[4] = v12;
            _OWORD v9[5] = v6;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
        }
      }
      v2 += 11;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  sub_1B6829820(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6827758((unint64_t *)&qword_1EB980300, (unint64_t *)&qword_1EB9802F0, v10);
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B68288E8(uint64_t result)
{
  if (result != 1) {
    return sub_1B6828908(result);
  }
  return result;
}

uint64_t sub_1B6828908(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6828988()
{
  return sub_1B6824F80(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1B6828994()
{
  return sub_1B68251CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1B68289A0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B68289E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6823CA8(a1, *(void *)(v2 + 16), *(void ***)(v2 + 24), a2);
}

double sub_1B68289FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6823EE8(a1, *(void (**)(_OWORD *__return_ptr, uint64_t *))(v2 + 16), a2);
}

uint64_t sub_1B6828A04(uint64_t a1, uint64_t a2)
{
  sub_1B6829820(0, &qword_1E9DD0950, (uint64_t)&type metadata for GraphCodeGen.CodeGenAtom, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1B6828A8C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1B6828AE8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B6823900(a1, a2);
}

uint64_t sub_1B6828B04(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1B6C3C3B8(0, 0, 0);
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      swift_retain();
      uint64_t v8 = a2(v4, v6, v7);
      uint64_t v10 = v9;
      swift_release();
      unint64_t v12 = *(void *)(v16 + 16);
      unint64_t v11 = *(void *)(v16 + 24);
      if (v12 >= v11 >> 1) {
        sub_1B6C3C3B8(v11 > 1, v12 + 1, 1);
      }
      ++v4;
      *(void *)(v16 + 16) = v12 + 1;
      uint64_t v13 = v16 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
      v5 += 2;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1B6828C28(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B681FEB0(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  sub_1B6829820(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1B6827758((unint64_t *)&qword_1EB980300, (unint64_t *)&qword_1EB9802F0, v4);
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1B67B79C8(4);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  sub_1B6829820(0, &qword_1E9DD1DE0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E77050;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  sub_1B67C5060();
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 56) = 0;
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = &unk_1F0F5A2B8;
  *(_OWORD *)(inited + 16) = xmmword_1B6E77D10;
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 48) = &unk_1F0F5A278;
  uint64_t v10 = qword_1F0F5A2C8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1B68C3500(0, v10, 1, MEMORY[0x1E4FBC860]);
  unint64_t v12 = v11;
  if (qword_1F0F5A2C8)
  {
    unint64_t v13 = (unint64_t)&v11[4 * v11[2] + 4];
    if (v13 + 32 * v10 > (unint64_t)&unk_1F0F5A2D8 && v13 < (unint64_t)&unk_1F0F5A2D8 + 32 * v10) {
      goto LABEL_29;
    }
    swift_arrayInitWithCopy();
    if (v10) {
      v12[2] += v10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(inited + 40);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = v12[2];
  unint64_t v17 = v12[3];
  swift_bridgeObjectRetain();
  if (v16 + v15 > (uint64_t)(v17 >> 1))
  {
    if (v16 <= v16 + v15) {
      uint64_t v25 = v16 + v15;
    }
    else {
      uint64_t v25 = v16;
    }
    unint64_t v12 = sub_1B68C3500(1, v25, 1, v12);
    if (!*(void *)(v14 + 16)) {
      goto LABEL_12;
    }
  }
  else if (!v15)
  {
    goto LABEL_12;
  }
  unint64_t v18 = (unint64_t)&v12[4 * v12[2] + 4];
  if (v14 + 32 < v18 + 32 * v15 && v18 < v14 + 32 + 32 * v15) {
    goto LABEL_29;
  }
  swift_arrayInitWithCopy();
  if (v15) {
    v12[2] += v15;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(inited + 48);
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v21 = v12[2];
  unint64_t v22 = v12[3];
  swift_bridgeObjectRetain();
  if (v21 + v20 > (uint64_t)(v22 >> 1))
  {
    if (v21 <= v21 + v20) {
      uint64_t v26 = v21 + v20;
    }
    else {
      uint64_t v26 = v21;
    }
    unint64_t v12 = sub_1B68C3500(1, v26, 1, v12);
    if (!*(void *)(v19 + 16)) {
      goto LABEL_18;
    }
  }
  else if (!v20)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1B6829820(0, &qword_1E9DD01A0, (uint64_t)&type metadata for CodeEmitter.Code, MEMORY[0x1E4FBB320]);
    swift_arrayDestroy();
    return (uint64_t)v12;
  }
  unint64_t v23 = (unint64_t)&v12[4 * v12[2] + 4];
  if (v19 + 32 >= v23 + 32 * v20 || v23 >= v19 + 32 + 32 * v20)
  {
    swift_arrayInitWithCopy();
    if (v20) {
      v12[2] += v20;
    }
    goto LABEL_18;
  }
LABEL_29:
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B6829054(uint64_t a1)
{
  sub_1B633AF88();
  if (sub_1B6E32678())
  {
    uint64_t v2 = sub_1B6E325F8();
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      uint64_t v4 = 0;
      uint64_t v5 = -v3;
      uint64_t v6 = v2 + 40;
      uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v15 = v2 + 40;
      do
      {
        uint64_t v7 = (uint64_t *)(v6 + 16 * v4++);
        while (1)
        {
          uint64_t v8 = *(v7 - 1);
          uint64_t v9 = *v7;
          swift_bridgeObjectRetain();
          if ((sub_1B6E32678() & 1) == 0) {
            break;
          }
          v7 += 2;
          swift_bridgeObjectRelease();
          ++v4;
          if (v5 + v4 == 1) {
            goto LABEL_15;
          }
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = sub_1B6335858(0, v16[2] + 1, 1, v16);
        }
        unint64_t v11 = v16[2];
        unint64_t v10 = v16[3];
        if (v11 >= v10 >> 1) {
          uint64_t v16 = sub_1B6335858(v10 > 1, v11 + 1, 1, v16);
        }
        _DWORD v16[2] = v11 + 1;
        unint64_t v12 = &v16[2 * v11];
        v12[4] = v8;
        v12[5] = v9;
        uint64_t v6 = v15;
      }
      while (v5 + v4);
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBB1A0];
    sub_1B6829820(0, (unint64_t *)&qword_1EB9802F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1B6827758((unint64_t *)&qword_1EB980300, (unint64_t *)&qword_1EB9802F0, v13);
    a1 = sub_1B6E31638();
    swift_bridgeObjectRelease();
    sub_1B6E31638();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *sub_1B6829328(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  type metadata accessor for IfNode(0);
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)(*(void *)(v4 + 16) + 32);
    swift_retain();
    uint64_t v34 = v6;
    swift_retain_n();
    swift_retain();
    swift_retain();
    a2(&v31, &v34);
    uint64_t v7 = v31;
    if (!v31
      || (swift_release(),
          swift_release(),
          uint64_t v34 = *(void *)(*(void *)(v5 + 16) + 48),
          swift_retain(),
          swift_retain(),
          a2(&v31, &v34),
          (uint64_t v8 = v31) == 0))
    {
      uint64_t v34 = 0;
      unint64_t v35 = 0xE000000000000000;
      sub_1B6E328C8();
      uint64_t v22 = sub_1B682A98C();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      uint64_t v34 = v22;
      unint64_t v35 = v24;
      sub_1B6E31948();
      swift_release();
      while (1)
      {
        sub_1B6E32BE8();
        __break(1u);
LABEL_34:
        uint64_t v31 = 0;
        unint64_t v32 = 0xE000000000000000;
        sub_1B6E328C8();
        uint64_t v25 = sub_1B682A98C();
        unint64_t v27 = v26;
        swift_bridgeObjectRelease();
        uint64_t v31 = v25;
        unint64_t v32 = v27;
LABEL_36:
        sub_1B6E31948();
        swift_release();
      }
    }
    swift_release();
    swift_release();
    swift_release();
    type metadata accessor for GraphCodeGen.CFGBranch();
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = a1;
    v9[3] = v7;
    v9[4] = v8;
    goto LABEL_5;
  }
  type metadata accessor for NoopNode(0);
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = v10;
    type metadata accessor for GraphCodeGen.CFGNoop();
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v11;
LABEL_20:
    swift_retain();
    return v9;
  }
  unint64_t v12 = *(__objc2_class **)a1;
  if ((*(__objc2_class **)a1 == _TtC3VFX17NoopReturnAnyNode
     || v12 == _TtC3VFX14NoopReturnNode)
    && a1 != 0)
  {
    type metadata accessor for GraphCodeGen.CFGProcedure();
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = a1;
    v9[3] = 0;
    goto LABEL_20;
  }
  if (v12 == _TtC3VFX12SubGraphNode && a1)
  {
    uint64_t v15 = off_1EB94EA78;
    uint64_t v16 = swift_retain_n();
    ((void (*)(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>))v15)(v16, v17, &v34);
    unint64_t v18 = v35;
    uint64_t v44 = v34;
    unint64_t v45 = v35;
    sub_1B62D8C3C((uint64_t)&v44);
    uint64_t v43 = v36;
    sub_1B62D8C3C((uint64_t)&v43);
    uint64_t v42 = v37;
    sub_1B62D8C3C((uint64_t)&v42);
    uint64_t v41 = v38;
    sub_1B62D8C3C((uint64_t)&v41);
    uint64_t v40 = v39;
    sub_1B62D8C3C((uint64_t)&v40);
    uint64_t v19 = *(void *)(v18 + 16);
    sub_1B62D8C3C((uint64_t)&v45);
    if (!v19)
    {
      type metadata accessor for GraphCodeGen.CFGNoop();
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = a1;
LABEL_5:
      swift_retain();
      swift_release_n();
      return v9;
    }
  }
  else
  {
    swift_retain_n();
  }
  if (sub_1B6C0BFD0())
  {
    uint64_t v31 = *(void *)(*(void *)(a1 + 16) + 32);
    swift_retain();
    swift_retain();
    a2((uint64_t *)&v33, &v31);
    uint64_t v21 = v33;
    if (!v33) {
      goto LABEL_34;
    }
    swift_release();
    swift_release();
    type metadata accessor for GraphCodeGen.CFGProcedure();
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = a1;
    v9[3] = v21;
    goto LABEL_5;
  }
  if ((sub_1B6C0C1E8() & 1) == 0)
  {
    if ((sub_1B6C0C40C() & 1) == 0)
    {
      swift_release_n();
      return 0;
    }
    type metadata accessor for GraphCodeGen.CFGProcedure();
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = a1;
    v9[3] = 0;
    goto LABEL_5;
  }
  uint64_t v31 = *(void *)(*(void *)(a1 + 16) + 32);
  swift_retain();
  swift_retain();
  a2((uint64_t *)&v33, &v31);
  uint64_t v9 = v33;
  if (!v33)
  {
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_1B6E328C8();
    uint64_t v28 = sub_1B682A98C();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v31 = v28;
    unint64_t v32 = v30;
    goto LABEL_36;
  }
  swift_release();
  swift_release_n();
  return v9;
}

uint64_t sub_1B6829814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6822FD0(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(void *__return_ptr, uint64_t))(v3 + 24));
}

void sub_1B6829820(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B682986C()
{
  uint64_t v1 = sub_1B6E30AB8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1B68298FC()
{
  return sub_1B6E30A88() & 1;
}

uint64_t *sub_1B6829964(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1B68299C8()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B6829A00()
{
  return sub_1B6821A88(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t destroy for GraphCodeGen.CodeGenParameter(unint64_t *a1)
{
  sub_1B678FC34(*a1);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GraphCodeGen.CodeGenParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_1B67C52A4(*(void *)a2);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GraphCodeGen.CodeGenParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_1B67C52A4(*(void *)a2);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v4;
  sub_1B678FC34(v5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GraphCodeGen.CodeGenParameter(uint64_t a1, uint64_t a2)
{
  sub_1B678FC34(*(void *)a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GraphCodeGen.CodeGenParameter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GraphCodeGen.CodeGenParameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphCodeGen.CodeGenParameter()
{
  return &type metadata for GraphCodeGen.CodeGenParameter;
}

uint64_t sub_1B6829C50(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v46 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v2, 0);
    uint64_t v4 = 0;
    uint64_t result = v46;
    int64_t v38 = v2;
    uint64_t v39 = a1 + 32;
    do
    {
      uint64_t v42 = result;
      unint64_t v5 = (uint64_t *)(v39 + 16 * v4);
      uint64_t v6 = *v5;
      unint64_t v7 = v5[1];
      uint64_t v8 = qword_1F0F67300;
      if (qword_1F0F67300)
      {
        unint64_t v40 = v5[1];
        sub_1B67F73CC();
        uint64_t v9 = (void *)sub_1B6E32C58();
        uint64_t v10 = &qword_1F0F67320;
        do
        {
          uint64_t v12 = *(v10 - 2);
          uint64_t v11 = *(v10 - 1);
          uint64_t v13 = *v10;
          v10 += 3;
          unint64_t v14 = sub_1B62C1A30(v12);
          *(void *)((char *)v9 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
          *(void *)(v9[6] + 8 * v14) = v12;
          uint64_t v15 = (void *)(v9[7] + 16 * v14);
          *uint64_t v15 = v11;
          v15[1] = v13;
          ++v9[2];
          swift_bridgeObjectRetain();
          --v8;
        }
        while (v8);
        int64_t v2 = v38;
        unint64_t v7 = v40;
      }
      else
      {
        uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
      }
      sub_1B66456F8(v7);
      sub_1B682BAF0();
      swift_arrayDestroy();
      if (v9[2] && (unint64_t v16 = sub_1B62C1A30(v6), (v17 & 1) != 0))
      {
        unint64_t v18 = (uint64_t *)(v9[7] + 16 * v16);
        uint64_t v20 = *v18;
        unint64_t v19 = v18[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v19 = 0xE100000000000000;
        uint64_t v20 = 63;
      }
      swift_release();
      uint64_t v43 = v20;
      unint64_t v45 = v19;
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v21 = v20;
      unint64_t v22 = v19;
      switch(v7 >> 61)
      {
        case 2uLL:
          uint64_t v23 = *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v24 = qword_1F0F67300;
          if (qword_1F0F67300)
          {
            uint64_t v37 = *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
            unint64_t v41 = v7;
            sub_1B67F73CC();
            uint64_t v25 = (void *)sub_1B6E32C58();
            unint64_t v26 = &qword_1F0F67320;
            do
            {
              uint64_t v27 = *(v26 - 2);
              uint64_t v28 = *(v26 - 1);
              uint64_t v29 = *v26;
              v26 += 3;
              unint64_t v30 = sub_1B62C1A30(v27);
              *(void *)((char *)v25 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v30;
              *(void *)(v25[6] + 8 * v30) = v27;
              uint64_t v31 = (void *)(v25[7] + 16 * v30);
              *uint64_t v31 = v28;
              v31[1] = v29;
              ++v25[2];
              swift_bridgeObjectRetain();
              --v24;
            }
            while (v24);
            int64_t v2 = v38;
            unint64_t v7 = v41;
            uint64_t v23 = v37;
            unint64_t v22 = v45;
          }
          else
          {
            uint64_t v25 = (void *)MEMORY[0x1E4FBC868];
          }
          swift_arrayDestroy();
          if (v25[2] && (sub_1B62C1A30(v23), (v33 & 1) != 0))
          {
            swift_bridgeObjectRetain();
            swift_release();
          }
          else
          {
            swift_release();
          }
          uint64_t v21 = v43;
          break;
        case 3uLL:
          unint64_t v32 = *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1B67C52A4(v32);
          sub_1B69B0F8C(v32);
          sub_1B678FC34(v32);
          uint64_t v21 = v43;
          break;
        default:
          break;
      }
      uint64_t v44 = v21;
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B6645740(v7);
      uint64_t result = v42;
      unint64_t v35 = *(void *)(v42 + 16);
      unint64_t v34 = *(void *)(v42 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1B6C3C3B8(v34 > 1, v35 + 1, 1);
        uint64_t result = v42;
      }
      ++v4;
      *(void *)(result + 16) = v35 + 1;
      uint64_t v36 = result + 16 * v35;
      *(void *)(v36 + 32) = v44;
      *(void *)(v36 + 40) = v22;
    }
    while (v4 != v2);
  }
  return result;
}

uint64_t sub_1B682A12C(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1B6E31118();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v3 + 112);
  uint64_t v10 = swift_retain();
  uint64_t v11 = v9(v10);
  if ((a1 & 1) == 0)
  {
    sub_1B6E31108();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v11 + OBJC_IVAR____TtC3VFX4Node_authoringID, v8, v4);
  }
  return v11;
}

void sub_1B682A260()
{
}

void *sub_1B682A2AC(void *a1)
{
  uint64_t v3 = sub_1B6E31118();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  void v1[3] = 0;
  v1[4] = 0;
  v1[2] = v8;
  uint64_t v9 = (char *)v1 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  sub_1B6E31108();
  v1[2] = a1[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v12 = v1[3];
  void v1[3] = v10;
  v1[4] = v11;
  sub_1B68289A0(v10);
  sub_1B678FE58(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, (uint64_t)a1 + OBJC_IVAR____TtC3VFX4Node_authoringID, v3);
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v4 + 40))(v9, v7, v3);
  return v1;
}

void *sub_1B682A40C()
{
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  sub_1B6E31108();
  return v0;
}

uint64_t sub_1B682A460(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1B682A2AC(a1);
  return v2;
}

void sub_1B682A4A0()
{
}

uint64_t sub_1B682A4EC()
{
  swift_bridgeObjectRelease();
  sub_1B678FE58(*(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v2 = sub_1B6E31118();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1B682A59C()
{
  return type metadata accessor for Node();
}

uint64_t type metadata accessor for Node()
{
  uint64_t result = qword_1E9DD1290;
  if (!qword_1E9DD1290) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B682A5F0()
{
  uint64_t result = sub_1B6E31118();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Node.Typing()
{
  return &type metadata for Node.Typing;
}

void *initializeBufferWithCopyOfBuffer for Node.Port(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for Node.Port(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for Node.Port(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for Node.Port()
{
  return &type metadata for Node.Port;
}

uint64_t destroy for Signature()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Signature(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Signature(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for Signature(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Signature()
{
  return &type metadata for Signature;
}

uint64_t sub_1B682A98C()
{
  (*(void (**)(void))(*(void *)v0 + 144))();
  if (v1)
  {
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1B6E31948();
    (*(void (**)(uint64_t))(*(void *)v0 + 136))(v2);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
  }
  else
  {
    sub_1B6E33B48();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1B6E31948();
    (*(void (**)(uint64_t))(*(void *)v0 + 136))(v3);
  }
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return 60;
}

uint64_t sub_1B682AB74()
{
  return sub_1B682A98C();
}

uint64_t sub_1B682AB98(void (*a1)(void))
{
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 112);
  uint64_t v5 = swift_retain();
  uint64_t v6 = v4(v5);
  a1();
  if (v2) {
    swift_release();
  }
  return v6;
}

uint64_t sub_1B682AC58()
{
  return sub_1B682B058(*v0, v0[1], v0[2]);
}

uint64_t sub_1B682AC64(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v3)
  {
    int64_t v14 = *(void *)(a2 + 16);
    if (!v14) {
      return 0;
    }
    goto LABEL_9;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1B6C3C3B8(0, v3, 0);
  uint64_t v6 = 0;
  do
  {
    unint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
    sub_1B67C52A4(v7);
    uint64_t v8 = sub_1B69B0F8C(v7);
    uint64_t v10 = v9;
    sub_1B678FC34(v7);
    unint64_t v12 = *(void *)(v25 + 16);
    unint64_t v11 = *(void *)(v25 + 24);
    if (v12 >= v11 >> 1) {
      sub_1B6C3C3B8(v11 > 1, v12 + 1, 1);
    }
    ++v6;
    *(void *)(v25 + 16) = v12 + 1;
    uint64_t v13 = v25 + 16 * v12;
    *(void *)(v13 + 32) = v8;
    *(void *)(v13 + 40) = v10;
  }
  while (v3 != v6);
  swift_bridgeObjectRelease();
  sub_1B6646CE4();
  sub_1B6646D3C();
  sub_1B6E31638();
  swift_release();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  int64_t v14 = *(void *)(a2 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v14)
  {
    sub_1B6E31948();
LABEL_9:
    swift_bridgeObjectRetain();
    sub_1B6C3C3B8(0, v14, 0);
    uint64_t v15 = 0;
    uint64_t v16 = v4;
    do
    {
      unint64_t v17 = *(void *)(a2 + 8 * v15 + 32);
      sub_1B67C52A4(v17);
      uint64_t v18 = sub_1B69B0F8C(v17);
      uint64_t v20 = v19;
      sub_1B678FC34(v17);
      unint64_t v22 = *(void *)(v16 + 16);
      unint64_t v21 = *(void *)(v16 + 24);
      if (v22 >= v21 >> 1) {
        sub_1B6C3C3B8(v21 > 1, v22 + 1, 1);
      }
      ++v15;
      *(void *)(v16 + 16) = v22 + 1;
      uint64_t v23 = v16 + 16 * v22;
      *(void *)(v23 + 32) = v18;
      *(void *)(v23 + 40) = v20;
    }
    while (v14 != v15);
    swift_bridgeObjectRelease();
    sub_1B6646CE4();
    sub_1B6646D3C();
    sub_1B6E31638();
    swift_release();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1B682AF40()
{
  return sub_1B682AC64(*v0, v0[1]);
}

unint64_t sub_1B682AF48@<X0>(unint64_t result@<X0>, void *a2@<X8>)
{
  int64_t v3 = *(void *)(result + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    unint64_t v5 = result;
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1B6C3C6D8(0, v3, 0);
    uint64_t v6 = v12;
    unint64_t v7 = (unint64_t *)(v5 + 32);
    do
    {
      unint64_t v8 = *v7++;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v8;
      uint64_t result = sub_1B67C52A4(v8);
      unint64_t v11 = *(void *)(v12 + 16);
      unint64_t v10 = *(void *)(v12 + 24);
      if (v11 >= v10 >> 1) {
        uint64_t result = sub_1B6C3C6D8(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v12 + 16) = v11 + 1;
      *(void *)(v12 + 8 * v11 + 32) = v9 | 0x6000000000000000;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  *a2 = v4;
  a2[1] = v6;
  a2[2] = &unk_1F0FA9A60;
  a2[3] = v4;
  a2[4] = v4;
  a2[5] = v4;
  return result;
}

uint64_t sub_1B682B058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v5 = a1;
    sub_1B6E31948();
    swift_bridgeObjectRetain();
    sub_1B6C3C3B8(0, v3, 0);
    uint64_t v6 = 0;
    uint64_t v7 = v4;
    int64_t v67 = v3;
    uint64_t v68 = v5;
    do
    {
      unint64_t v8 = *(void *)(v5 + 8 * v6 + 32);
      unint64_t v9 = 0xE500000000000000;
      uint64_t v10 = 0x7961727261;
      switch(v8 >> 61)
      {
        case 2uLL:
          uint64_t v71 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1B67F73CC();
          unint64_t v11 = (void *)sub_1B6E32C58();
          uint64_t v12 = v11 + 8;
          uint64_t v14 = qword_1F0FA99F0;
          uint64_t v13 = unk_1F0FA99F8;
          uint64_t v15 = qword_1F0FA9A00;
          unint64_t v16 = sub_1B62C1A30(qword_1F0FA99F0);
          *(void *)((char *)v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
          *(void *)(v11[6] + 8 * v16) = v14;
          unint64_t v17 = (void *)(v11[7] + 16 * v16);
          void *v17 = v13;
          v17[1] = v15;
          ++v11[2];
          swift_bridgeObjectRetain();
          uint64_t v18 = qword_1F0FA9A08;
          uint64_t v19 = unk_1F0FA9A10;
          uint64_t v20 = qword_1F0FA9A18;
          unint64_t v21 = sub_1B62C1A30(qword_1F0FA9A08);
          *(void *)((char *)v12 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
          *(void *)(v11[6] + 8 * v21) = v18;
          unint64_t v22 = (void *)(v11[7] + 16 * v21);
          *unint64_t v22 = v19;
          v22[1] = v20;
          ++v11[2];
          sub_1B66456F8(v8);
          sub_1B682BAF0();
          swift_bridgeObjectRetain();
          swift_arrayDestroy();
          if (v11[2] && (unint64_t v23 = sub_1B62C1A30(v71), (v24 & 1) != 0))
          {
            uint64_t v25 = (uint64_t *)(v11[7] + 16 * v23);
            uint64_t v10 = *v25;
            unint64_t v9 = v25[1];
            swift_bridgeObjectRetain();
            swift_release();
            sub_1B6645740(v8);
          }
          else
          {
            swift_release();
            sub_1B6645740(v8);
            unint64_t v9 = 0xE100000000000000;
            uint64_t v10 = 63;
          }
          int64_t v3 = v67;
          uint64_t v5 = v68;
          break;
        case 3uLL:
          unint64_t v26 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1B66456F8(*(void *)(v5 + 8 * v6 + 32));
          sub_1B67C52A4(v26);
          uint64_t v10 = sub_1B69B0F8C(v26);
          unint64_t v9 = v27;
          sub_1B678FC34(v26);
          sub_1B6645740(v8);
          break;
        case 4uLL:
          unint64_t v9 = 0xE100000000000000;
          uint64_t v10 = 42;
          switch(__ROR8__(v8, 3) ^ 0x1000000000000000)
          {
            case 1:
              unint64_t v9 = 0xE700000000000000;
              uint64_t v10 = 0x636972656D756ELL;
              break;
            case 2:
              unint64_t v9 = 0xE700000000000000;
              uint64_t v10 = 0x72656765746E69;
              break;
            case 3:
              unint64_t v9 = 0xE600000000000000;
              uint64_t v10 = 0x72616C616373;
              break;
            case 4:
            case 5:
              unint64_t v9 = 0xA800000000000000;
              uint64_t v10 = 0x6E97C374616F6C66;
              break;
            case 6:
              unint64_t v9 = 0xE600000000000000;
              uint64_t v10 = 0x78697274616DLL;
              break;
            case 7:
              unint64_t v9 = 0xE500000000000000;
              uint64_t v10 = 0x6576727563;
              break;
            case 8:
              uint64_t v10 = 0x6D6152726F6C6F63;
              unint64_t v9 = 0xE900000000000070;
              break;
            default:
              goto LABEL_12;
          }
          break;
        default:
          break;
      }
LABEL_12:
      unint64_t v29 = *(void *)(v7 + 16);
      unint64_t v28 = *(void *)(v7 + 24);
      if (v29 >= v28 >> 1) {
        sub_1B6C3C3B8(v28 > 1, v29 + 1, 1);
      }
      ++v6;
      *(void *)(v7 + 16) = v29 + 1;
      uint64_t v30 = v7 + 16 * v29;
      *(void *)(v30 + 32) = v10;
      *(void *)(v30 + 40) = v9;
    }
    while (v3 != v6);
    swift_bridgeObjectRelease();
    sub_1B6646CE4();
    sub_1B6646D3C();
    sub_1B6E31638();
    swift_release();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    uint64_t v31 = a2;
    int64_t v32 = *(void *)(a2 + 16);
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (v32)
    {
      sub_1B6E31948();
      goto LABEL_25;
    }
LABEL_45:
    sub_1B6E31948();
    goto LABEL_46;
  }
  uint64_t v31 = a2;
  int64_t v32 = *(void *)(a2 + 16);
  if (!v32) {
    goto LABEL_45;
  }
LABEL_25:
  swift_bridgeObjectRetain();
  sub_1B6C3C3B8(0, v32, 0);
  uint64_t v33 = 0;
  uint64_t v34 = v4;
  int64_t v69 = v32;
  do
  {
    unint64_t v35 = *(void *)(v31 + 8 * v33 + 32);
    unint64_t v36 = 0xE500000000000000;
    uint64_t v37 = 0x7961727261;
    switch(v35 >> 61)
    {
      case 2uLL:
        uint64_t v72 = *(void *)((v35 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_1B67F73CC();
        int64_t v38 = (void *)sub_1B6E32C58();
        uint64_t v39 = v38 + 8;
        uint64_t v40 = qword_1F0FA99A0;
        uint64_t v41 = unk_1F0FA99A8;
        uint64_t v42 = qword_1F0FA99B0;
        unint64_t v43 = sub_1B62C1A30(qword_1F0FA99A0);
        *(void *)((char *)v39 + ((v43 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v43;
        *(void *)(v38[6] + 8 * v43) = v40;
        uint64_t v44 = (void *)(v38[7] + 16 * v43);
        *uint64_t v44 = v41;
        v44[1] = v42;
        ++v38[2];
        swift_bridgeObjectRetain();
        uint64_t v45 = qword_1F0FA99B8;
        uint64_t v46 = unk_1F0FA99C0;
        uint64_t v47 = qword_1F0FA99C8;
        unint64_t v48 = sub_1B62C1A30(qword_1F0FA99B8);
        *(void *)((char *)v39 + ((v48 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v48;
        *(void *)(v38[6] + 8 * v48) = v45;
        uint64_t v49 = (void *)(v38[7] + 16 * v48);
        *uint64_t v49 = v46;
        v49[1] = v47;
        ++v38[2];
        sub_1B66456F8(v35);
        sub_1B682BAF0();
        swift_bridgeObjectRetain();
        swift_arrayDestroy();
        if (v38[2] && (unint64_t v50 = sub_1B62C1A30(v72), (v51 & 1) != 0))
        {
          uint64_t v52 = (uint64_t *)(v38[7] + 16 * v50);
          uint64_t v37 = *v52;
          unint64_t v36 = v52[1];
          swift_bridgeObjectRetain();
          swift_release();
          sub_1B6645740(v35);
        }
        else
        {
          swift_release();
          sub_1B6645740(v35);
          unint64_t v36 = 0xE100000000000000;
          uint64_t v37 = 63;
        }
        int64_t v32 = v69;
        uint64_t v31 = a2;
        break;
      case 3uLL:
        unint64_t v53 = *(void *)((v35 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_1B66456F8(*(void *)(v31 + 8 * v33 + 32));
        sub_1B67C52A4(v53);
        uint64_t v37 = sub_1B69B0F8C(v53);
        unint64_t v36 = v54;
        sub_1B678FC34(v53);
        sub_1B6645740(v35);
        break;
      case 4uLL:
        unint64_t v36 = 0xE100000000000000;
        uint64_t v37 = 42;
        switch(__ROR8__(v35, 3) ^ 0x1000000000000000)
        {
          case 1:
            unint64_t v36 = 0xE700000000000000;
            uint64_t v37 = 0x636972656D756ELL;
            break;
          case 2:
            unint64_t v36 = 0xE700000000000000;
            uint64_t v37 = 0x72656765746E69;
            break;
          case 3:
            unint64_t v36 = 0xE600000000000000;
            uint64_t v37 = 0x72616C616373;
            break;
          case 4:
          case 5:
            unint64_t v36 = 0xA800000000000000;
            uint64_t v37 = 0x6E97C374616F6C66;
            break;
          case 6:
            unint64_t v36 = 0xE600000000000000;
            uint64_t v37 = 0x78697274616DLL;
            break;
          case 7:
            unint64_t v36 = 0xE500000000000000;
            uint64_t v37 = 0x6576727563;
            break;
          case 8:
            uint64_t v37 = 0x6D6152726F6C6F63;
            unint64_t v36 = 0xE900000000000070;
            break;
          default:
            goto LABEL_35;
        }
        break;
      default:
        break;
    }
LABEL_35:
    unint64_t v56 = *(void *)(v34 + 16);
    unint64_t v55 = *(void *)(v34 + 24);
    if (v56 >= v55 >> 1) {
      sub_1B6C3C3B8(v55 > 1, v56 + 1, 1);
    }
    ++v33;
    *(void *)(v34 + 16) = v56 + 1;
    uint64_t v57 = v34 + 16 * v56;
    *(void *)(v57 + 32) = v37;
    *(void *)(v57 + 40) = v36;
  }
  while (v32 != v33);
  swift_bridgeObjectRelease();
  sub_1B6646CE4();
  sub_1B6646D3C();
  sub_1B6E31638();
  swift_release();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
LABEL_46:
  uint64_t v58 = *(void *)(a3 + 16);
  if (v58)
  {
    swift_bridgeObjectRetain();
    uint64_t v59 = 0;
    uint64_t v60 = MEMORY[0x1E4FBC860];
    do
    {
      unint64_t v61 = *(void *)(a3 + 8 * v59 + 32);
      sub_1B66456F8(v61);
      if (sub_1B697351C(v61, 0x8000000000000000))
      {
        sub_1B6645740(v61);
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1B6C3C450(0, *(void *)(v60 + 16) + 1, 1);
        }
        unint64_t v63 = *(void *)(v60 + 16);
        unint64_t v62 = *(void *)(v60 + 24);
        if (v63 >= v62 >> 1) {
          sub_1B6C3C450(v62 > 1, v63 + 1, 1);
        }
        *(void *)(v60 + 16) = v63 + 1;
        uint64_t v64 = v60 + 16 * v63;
        *(void *)(v64 + 32) = v59;
        *(void *)(v64 + 40) = v61;
      }
      ++v59;
    }
    while (v58 != v59);
    swift_bridgeObjectRelease();
    if (*(void *)(v60 + 16)) {
      goto LABEL_57;
    }
LABEL_59:
    swift_release();
    return 0;
  }
  uint64_t v60 = MEMORY[0x1E4FBC860];
  if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
    goto LABEL_59;
  }
LABEL_57:
  sub_1B6829C50(v60);
  swift_release();
  sub_1B6646CE4();
  sub_1B6646D3C();
  sub_1B6E31638();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B682BA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0;
  if ((a1 & 0x8000000000000000) == 0 && *(void *)(a2 + 16) > a1)
  {
    if (*(void *)(a2 + 16 * a1 + 40))
    {
      sub_1B633AF88();
      swift_bridgeObjectRetain();
      uint64_t v2 = *(void *)(sub_1B6E325F8() + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

void sub_1B682BAF0()
{
  if (!qword_1EB9803F8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB9803F8);
    }
  }
}

uint64_t sub_1B682BB58()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B682BB90(uint64_t a1, uint64_t a2)
{
  if (a1 < 0 || *(void *)(a2 + 16) <= a1 || !*(void *)(a2 + 16 * a1 + 40)) {
    return sub_1B6E33098();
  }
  sub_1B633AF88();
  swift_bridgeObjectRetain();
  sub_1B6E325F8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  return 39;
}

uint64_t sub_1B682BCA4(void *a1)
{
  sub_1B682C42C(0, &qword_1E9DD12B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  unint64_t v8 = (char *)&v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B682C3D8();
  sub_1B6E33A88();
  char v12 = 0;
  sub_1B6E32F58();
  if (!v1)
  {
    char v11 = 1;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B682BE24(char *a1, char *a2)
{
  return sub_1B6BB661C(*a1, *a2);
}

uint64_t sub_1B682BE30()
{
  if (*v0) {
    return 0x726F6C6F63;
  }
  else {
    return 0x7974696361706FLL;
  }
}

uint64_t sub_1B682BE68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B682C130(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B682BE90(uint64_t a1)
{
  unint64_t v2 = sub_1B682C3D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B682BECC(uint64_t a1)
{
  unint64_t v2 = sub_1B682C3D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B682BF08@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B682C21C(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1B682BF40(void *a1)
{
  return sub_1B682BCA4(a1);
}

void sub_1B682BF70(_WORD *a1@<X8>)
{
  *a1 = 257;
}

_WORD *initializeBufferWithCopyOfBuffer for Target(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleVoxelRenderer(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleVoxelRenderer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B682C0F8);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleVoxelRenderer()
{
  return &type metadata for ParticleVoxelRenderer;
}

uint64_t sub_1B682C130(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974696361706FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B682C21C(void *a1)
{
  sub_1B682C42C(0, &qword_1E9DD12A0, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  int v8 = &v13[-v7];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B682C3D8();
  sub_1B6E33A48();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  v13[15] = 0;
  char v9 = sub_1B6E32DA8();
  v13[14] = 1;
  char v11 = sub_1B6E32DA8();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  if (v11) {
    int v12 = 256;
  }
  else {
    int v12 = 0;
  }
  return v12 & 0xFFFFFFFE | v9 & 1;
}

unint64_t sub_1B682C3D8()
{
  unint64_t result = qword_1E9DD12A8;
  if (!qword_1E9DD12A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD12A8);
  }
  return result;
}

void sub_1B682C42C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B682C3D8();
    unint64_t v7 = a3(a1, &type metadata for ParticleVoxelRenderer.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleVoxelRenderer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B682C55CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleVoxelRenderer.CodingKeys()
{
  return &type metadata for ParticleVoxelRenderer.CodingKeys;
}

unint64_t sub_1B682C598()
{
  unint64_t result = qword_1E9DD12B8;
  if (!qword_1E9DD12B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD12B8);
  }
  return result;
}

unint64_t sub_1B682C5F0()
{
  unint64_t result = qword_1E9DD12C0;
  if (!qword_1E9DD12C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD12C0);
  }
  return result;
}

unint64_t sub_1B682C648()
{
  unint64_t result = qword_1E9DD12C8;
  if (!qword_1E9DD12C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD12C8);
  }
  return result;
}

uint64_t sub_1B682C69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B682C6E4(a1, v3, a2, a3, &v5);
  return v5;
}

uint64_t sub_1B682C6E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1B62C9024(a1, a4, *(uint64_t **)(a2 + 88), *(void *)(a2 + 96), *(void *)(a2 + 104), *(void *)(a2 + 16));
  if (result) {
    uint64_t v9 = (v8 - result) / *(void *)(*(void *)(a3 - 8) + 72);
  }
  else {
    uint64_t v9 = 0;
  }
  *a5 = result;
  a5[1] = v9;
  return result;
}

__n128 initializeWithTake for RenderStates(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t getEnumTagSinglePayload for RenderStates(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RenderStates(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChunkQueryCursor()
{
  return &type metadata for ChunkQueryCursor;
}

uint64_t sub_1B682C840@<X0>(uint64_t a1@<X8>)
{
  v3[0] = 0xD000000000000016;
  v3[1] = 0x80000001B6F38EE0;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = MEMORY[0x1E4FBC860];
  v3[5] = 0xD000000000000016;
  v3[6] = 0x80000001B6F38F00;
  v3[7] = 0;
  v3[8] = 0;
  v3[9] = MEMORY[0x1E4FBC860];
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  nullsub_1(v3);
  return sub_1B62CA210((uint64_t)v3, a1, &qword_1EB97EB68);
}

void *sub_1B682C8E0(float a1, float a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  long long v7 = *(void **)(a5 + 8);
  swift_retain();
  sub_1B62E9D50(v7, (uint64_t)v21);
  swift_release();
  sub_1B62CA210((uint64_t)v21, (uint64_t)v22, qword_1EB97EA20);
  if (v23)
  {
    long long v19 = xmmword_1B6E4F370;
    long long v18 = xmmword_1B6E4F2E0;
    long long v17 = xmmword_1B6E4F320;
    long long v16 = xmmword_1B6E4F300;
  }
  else
  {
    long long v16 = v22[0];
    long long v17 = v22[1];
    long long v18 = v22[2];
    long long v19 = v22[3];
  }
  swift_retain();
  long long v8 = (void *)sub_1B62F1868(0, 80);
  uint64_t v10 = v9;
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    v20[0] = 0;
    v20[1] = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    int v11 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v20[0] = 0;
    swift_retain();
    sub_1B6B33E34(v11, v20, 0xD000000000000044, 0x80000001B6F38E90);
    swift_release();
    swift_release();
  }
  else
  {
    int v12 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v13 = v8;
    uint64_t v14 = &v12[v10];
    *(_OWORD *)uint64_t v14 = v16;
    *((_OWORD *)v14 + 1) = v17;
    *((_OWORD *)v14 + 2) = v18;
    *((_OWORD *)v14 + 3) = v19;
    *((float *)v14 + 16) = a1;
    *((float *)v14 + 17) = a2;
  }
  swift_release();
  return v8;
}

uint64_t sub_1B682CB68(void *a1)
{
  sub_1B682D1C8(0, &qword_1E9DD12E0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  long long v8 = (char *)&v10 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B682D174();
  sub_1B6E33A88();
  char v12 = 0;
  sub_1B6E32F78();
  if (!v1)
  {
    char v11 = 1;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1B682CCE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B6BB62B4(*a1, *a2);
}

uint64_t sub_1B682CCF0()
{
  if (*v0) {
    return 0x7469736E65746E69;
  }
  else {
    return 0x656C616373;
  }
}

uint64_t sub_1B682CD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B682CEC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B682CD54(uint64_t a1)
{
  unint64_t v2 = sub_1B682D174();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B682CD90(uint64_t a1)
{
  unint64_t v2 = sub_1B682D174();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B682CDCC()
{
  return 0x100000001;
}

float sub_1B682CDE8()
{
  return -1.0;
}

uint64_t sub_1B682CDF0()
{
  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v0 = sub_1B62FFCAC(4);
  *(void *)(v0 + 88) = sub_1B682C840;
  *(void *)(v0 + 96) = 0;
  swift_release();
  return v0;
}

void *sub_1B682CE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B682C8E0(*v3, v3[1], a1, a2, a3);
}

void sub_1B682CE58(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v4 = sub_1B682CFB8(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
  }
}

uint64_t sub_1B682CE84(void *a1)
{
  return sub_1B682CB68(a1);
}

double sub_1B682CEA0@<D0>(void *a1@<X8>)
{
  double result = 0.00781250186;
  *a1 = 0x3F80000040000000;
  return result;
}

ValueMetadata *type metadata accessor for ParticleAOSphereRenderer()
{
  return &type metadata for ParticleAOSphereRenderer;
}

uint64_t sub_1B682CEC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C616373 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469736E65746E69 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

float sub_1B682CFB8(void *a1)
{
  sub_1B682D1C8(0, &qword_1E9DD12D0, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = &v12[-v8];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B682D174();
  sub_1B6E33A48();
  if (!v1)
  {
    v12[15] = 0;
    sub_1B6E32DC8();
    float v2 = v10;
    v12[14] = 1;
    sub_1B6E32DC8();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B682D174()
{
  unint64_t result = qword_1E9DD12D8;
  if (!qword_1E9DD12D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD12D8);
  }
  return result;
}

void sub_1B682D1C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B682D174();
    unint64_t v7 = a3(a1, &type metadata for ParticleAOSphereRenderer.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ParticleAOSphereRenderer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B682D2F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleAOSphereRenderer.CodingKeys()
{
  return &type metadata for ParticleAOSphereRenderer.CodingKeys;
}

unint64_t sub_1B682D334()
{
  unint64_t result = qword_1E9DD12E8;
  if (!qword_1E9DD12E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD12E8);
  }
  return result;
}

unint64_t sub_1B682D38C()
{
  unint64_t result = qword_1E9DD12F0;
  if (!qword_1E9DD12F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD12F0);
  }
  return result;
}

unint64_t sub_1B682D3E4()
{
  unint64_t result = qword_1E9DD12F8;
  if (!qword_1E9DD12F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD12F8);
  }
  return result;
}

uint64_t sub_1B682D438@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 24))
  {
    long long v4 = 0u;
    long long v5 = 0u;
    uint64_t v6 = 0;
    unint64_t v7 = 0xD000000000000016;
    unint64_t v8 = 0x80000001B6F38F90;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x1E4FBC860];
    long long v12 = 0u;
    long long v13 = 0u;
    *(void *)&long long v14 = 0;
    *((void *)&v14 + 1) = 0xD000000000000016;
    *(void *)&long long v15 = 0x80000001B6F38FB0;
    *((void *)&v15 + 1) = 0;
    *(void *)&long long v16 = 0;
    *((void *)&v16 + 1) = MEMORY[0x1E4FBC860];
    long long v17 = 0uLL;
  }
  else
  {
    *(void *)&long long v4 = 0xD000000000000016;
    *((void *)&v4 + 1) = 0x80000001B6F38F70;
    long long v5 = 0uLL;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    unint64_t v7 = 0xD000000000000016;
    unint64_t v8 = 0x80000001B6F38F90;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x1E4FBC860];
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
  }
  nullsub_1(&v4);
  sub_1B62CA210((uint64_t)&v4, (uint64_t)v18, &qword_1EB97EB68);
  return sub_1B62CA210((uint64_t)v18, a2, &qword_1EB97EB68);
}

void *sub_1B682D550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  long long v4 = *(void **)(a3 + 8);
  swift_retain();
  sub_1B62E9D50(v4, (uint64_t)v22);
  swift_release();
  sub_1B62CA210((uint64_t)v22, (uint64_t)v23, qword_1EB97EA20);
  if (v24)
  {
    long long v20 = xmmword_1B6E4F370;
    long long v19 = xmmword_1B6E4F2E0;
    long long v18 = xmmword_1B6E4F320;
    long long v17 = xmmword_1B6E4F300;
  }
  else
  {
    long long v17 = v23[0];
    long long v18 = v23[1];
    long long v19 = v23[2];
    long long v20 = v23[3];
  }
  float v6 = *(float *)(v3 + 12);
  int v5 = *(_DWORD *)(v3 + 16);
  float v7 = *(float *)(v3 + 20);
  swift_retain();
  unint64_t v8 = (void *)sub_1B62F1868(0, 80);
  uint64_t v10 = v9;
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_storageMode) == (id)2)
  {
    if (qword_1EB9852D0 != -1) {
      swift_once();
    }
    v21[0] = 0;
    v21[1] = 0xE000000000000000;
    swift_retain();
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    int v11 = sub_1B6E32148();
    if (qword_1EB9854F8 != -1) {
      swift_once();
    }
    v21[0] = 0;
    swift_retain();
    sub_1B6B33E34(v11, v21, 0xD00000000000004ALL, 0x80000001B6F38F20);
    swift_release();
    swift_release();
  }
  else
  {
    float v12 = fminf(fmaxf(log2f(1.0 - v7), -10000000.0), -0.01);
    long long v13 = (char *)objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
    id v14 = v8;
    long long v15 = &v13[v10];
    *(_OWORD *)long long v15 = v17;
    *((_OWORD *)v15 + 1) = v18;
    *((_OWORD *)v15 + 2) = v19;
    *((_OWORD *)v15 + 3) = v20;
    *((float *)v15 + 16) = v6 * 3.0;
    *((_DWORD *)v15 + 17) = v5;
    *((float *)v15 + 18) = v12;
  }
  swift_release();
  return v8;
}

uint64_t sub_1B682D81C(void *a1)
{
  uint64_t v3 = v1;
  sub_1B682E410(0, &qword_1E9DD1310, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v12[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B682E3BC();
  sub_1B6E33A88();
  uint64_t v13 = *v3;
  v12[7] = 0;
  type metadata accessor for MTLCullMode(0);
  sub_1B682E474(&qword_1E9DCDE40);
  sub_1B6E32FA8();
  if (!v2)
  {
    v12[6] = *((unsigned char *)v3 + 8);
    v12[5] = 1;
    sub_1B66C5F1C();
    sub_1B6E32FA8();
    v12[4] = 2;
    sub_1B6E32F78();
    v12[3] = 3;
    sub_1B6E32F78();
    _OWORD v12[2] = 4;
    sub_1B6E32F78();
    v12[1] = 5;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B682DA84(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB7AB0(*a1, *a2);
}

uint64_t sub_1B682DA90()
{
  uint64_t result = 0x65646F4D6C6C7563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65646F4D74726F73;
      break;
    case 2:
      uint64_t result = 0x656C616373;
      break;
    case 3:
      uint64_t result = 0x6168706C61;
      break;
    case 4:
      uint64_t result = 0x7265776F70;
      break;
    case 5:
      uint64_t result = 0x536873654D657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B682DB54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B682DE58(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B682DB7C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1B682DB88(uint64_t a1)
{
  unint64_t v2 = sub_1B682E3BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B682DBC4(uint64_t a1)
{
  unint64_t v2 = sub_1B682E3BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B682DC00()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_1B682DC08()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1B682DC10()
{
  uint64_t v1 = v0;
  type metadata accessor for RenderPipelineFactory();
  swift_allocObject();
  uint64_t v2 = sub_1B62FFCAC(4);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = *v1;
  *(_OWORD *)(v3 + 25) = *(_OWORD *)((char *)v1 + 9);
  *(void *)(v2 + 88) = sub_1B682DE50;
  *(void *)(v2 + 96) = v3;
  swift_release();
  return v2;
}

uint64_t sub_1B682DC9C(uint64_t result, void *a2)
{
  int v3 = *(unsigned __int8 *)(v2 + 24);
  *(void *)(result + 16) = 4;
  if (v3 == 1)
  {
    a2[3] = 0;
    a2[7] = 1;
  }
  else
  {
    a2[4] = 3;
  }
  return result;
}

double sub_1B682DCD0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B682E0E8(a1, (uint64_t)v5);
  if (!v2)
  {
    *a2 = v5[0];
    double result = *(double *)((char *)v5 + 9);
    *(_OWORD *)((char *)a2 + 9) = *(_OWORD *)((char *)v5 + 9);
  }
  return result;
}

uint64_t sub_1B682DD14(void *a1)
{
  return sub_1B682D81C(a1);
}

uint64_t sub_1B682DD2C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)) {
    return (*(void *)a1 != *(void *)a2) | (*(unsigned __int8 *)(a2 + 24) ^ *(unsigned __int8 *)(a1 + 24)) & 1u;
  }
  else {
    return 1;
  }
}

double sub_1B682DD70@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 4;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(a1 + 12) = result;
  *(_DWORD *)(a1 + 20) = 1065353216;
  *(unsigned char *)(a1 + 24) = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for ParticleGaussianRenderer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ParticleGaussianRenderer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)double result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleGaussianRenderer()
{
  return &type metadata for ParticleGaussianRenderer;
}

uint64_t sub_1B682DE40()
{
  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1B682DE50@<X0>(uint64_t a1@<X8>)
{
  return sub_1B682D438(v1 + 16, a1);
}

uint64_t sub_1B682DE58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65646F4D6C6C7563 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65646F4D74726F73 && a2 == 0xE800000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7265776F70 && a2 == 0xE500000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x536873654D657375 && a2 == 0xED00007265646168)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1B682E0E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B682E410(0, &qword_1E9DD1300, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = &v21[-v9];
  sub_1B62C14BC(a1, a1[3]);
  sub_1B682E3BC();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  type metadata accessor for MTLCullMode(0);
  v21[7] = 0;
  sub_1B682E474((unint64_t *)&unk_1EB980488);
  sub_1B6E32DF8();
  uint64_t v11 = v22;
  _OWORD v21[5] = 1;
  sub_1B62A8594();
  sub_1B6E32DF8();
  char v12 = v21[6];
  v21[4] = 2;
  sub_1B6E32DC8();
  int v14 = v13;
  v21[3] = 3;
  sub_1B6E32DC8();
  int v16 = v15;
  uint64_t v21[2] = 4;
  sub_1B6E32DC8();
  int v18 = v17;
  v21[1] = 5;
  char v19 = sub_1B6E32DA8();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(void *)a2 = v11;
  *(unsigned char *)(a2 + 8) = v12;
  *(_DWORD *)(a2 + 12) = v14;
  *(_DWORD *)(a2 + 16) = v16;
  *(_DWORD *)(a2 + 20) = v18;
  *(unsigned char *)(a2 + 24) = v19 & 1;
  return result;
}

unint64_t sub_1B682E3BC()
{
  unint64_t result = qword_1E9DD1308;
  if (!qword_1E9DD1308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1308);
  }
  return result;
}

void sub_1B682E410(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B682E3BC();
    unint64_t v7 = a3(a1, &type metadata for ParticleGaussianRenderer.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1B682E474(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MTLCullMode(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Scheduler.Action(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ParticleGaussianRenderer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B682E614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticleGaussianRenderer.CodingKeys()
{
  return &type metadata for ParticleGaussianRenderer.CodingKeys;
}

unint64_t sub_1B682E650()
{
  unint64_t result = qword_1E9DD1318;
  if (!qword_1E9DD1318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1318);
  }
  return result;
}

unint64_t sub_1B682E6A8()
{
  unint64_t result = qword_1E9DD1320;
  if (!qword_1E9DD1320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1320);
  }
  return result;
}

unint64_t sub_1B682E700()
{
  unint64_t result = qword_1E9DD1328;
  if (!qword_1E9DD1328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1328);
  }
  return result;
}

uint64_t destroy for FunctionDescriptor()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FunctionDescriptor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FunctionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FunctionDescriptor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12MetadataTypeO6CustomVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12MetadataTypeO6CustomVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FunctionDescriptor()
{
  return &type metadata for FunctionDescriptor;
}

uint64_t sub_1B682E998()
{
  return sub_1B62D5DBC(*v0, v0[1], v0[3], v0[4]);
}

uint64_t sub_1B682E9A4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1B6E318B8();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_1B6E33928();
  if (v2)
  {
    uint64_t v3 = v1 + 64;
    do
    {
      uint64_t v4 = *(void *)(v3 - 32);
      uint64_t v5 = *(void *)(v3 - 24);
      int v6 = *(unsigned __int8 *)(v3 - 16);
      sub_1B62D6998(v3, (uint64_t)&v8);
      sub_1B6E33928();
      if (v6 == 1)
      {
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
      }
      else
      {
        sub_1B6E33928();
      }
      v3 += 112;
      sub_1B62D66DC();
      sub_1B62D66CC(v4, v5, v6);
      --v2;
    }
    while (v2);
  }
  return sub_1B6E33928();
}

uint64_t sub_1B682EA98()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1B6E33918();
  sub_1B6E318B8();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_1B6E33928();
  if (v2)
  {
    uint64_t v3 = v1 + 64;
    do
    {
      uint64_t v4 = *(void *)(v3 - 32);
      uint64_t v5 = *(void *)(v3 - 24);
      int v6 = *(unsigned __int8 *)(v3 - 16);
      sub_1B62D6998(v3, (uint64_t)v8);
      sub_1B6E33928();
      if (v6 == 1)
      {
        swift_bridgeObjectRetain();
        sub_1B6E318B8();
      }
      else
      {
        sub_1B6E33928();
      }
      v3 += 112;
      sub_1B62D66DC();
      sub_1B62D66CC(v4, v5, v6);
      --v2;
    }
    while (v2);
  }
  sub_1B6E33928();
  return sub_1B6E33988();
}

uint64_t sub_1B682EBA4(uint64_t *a1, uint64_t *a2)
{
  return sub_1B682EEFC(*a1, a1[1], a1[3], a1[4], *a2, a2[1], a2[3], a2[4]);
}

unint64_t sub_1B682EBC4()
{
  unint64_t result = qword_1E9DD1330;
  if (!qword_1E9DD1330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1330);
  }
  return result;
}

uint64_t sub_1B682EC18(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  int v6 = __src;
  BOOL v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 112;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 112;
  unint64_t v29 = __dst;
  unint64_t v28 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -111)
    {
      uint64_t v17 = 112 * v11;
      if (a4 != __src || &__src[v17] <= a4) {
        memmove(a4, __src, 112 * v11);
      }
      int v18 = &v4[v17];
      unint64_t v27 = &v4[v17];
      unint64_t v29 = v6;
      if (v7 < v6 && v10 >= 112)
      {
        char v19 = (char *)(a3 - 112);
        long long v20 = v6;
        while (1)
        {
          unint64_t v21 = v19 + 112;
          uint64_t v22 = *((void *)v18 - 14);
          uint64_t v24 = *((void *)v20 - 14);
          v20 -= 112;
          uint64_t v23 = v24;
          if (*(v18 - 96)) {
            uint64_t v22 = 0;
          }
          if (v20[16]) {
            uint64_t v25 = 0;
          }
          else {
            uint64_t v25 = v23;
          }
          if (v22 >= v25)
          {
            unint64_t v27 = v18 - 112;
            if (v21 < v18 || v19 >= v18 || v21 != v18) {
              memmove(v19, v18 - 112, 0x70uLL);
            }
            long long v20 = v6;
            v18 -= 112;
            if (v6 <= v7) {
              goto LABEL_48;
            }
          }
          else
          {
            if (v21 != v6 || v19 >= v6) {
              memmove(v19, v20, 0x70uLL);
            }
            unint64_t v29 = v20;
            if (v20 <= v7) {
              goto LABEL_48;
            }
          }
          v19 -= 112;
          int v6 = v20;
          if (v18 <= v4) {
            goto LABEL_48;
          }
        }
      }
      goto LABEL_48;
    }
  }
  else if (v8 >= -111)
  {
    size_t v12 = 112 * v9;
    if (a4 != __dst || &__dst[v12] <= a4) {
      memmove(a4, __dst, v12);
    }
    int v13 = &v4[v12];
    unint64_t v27 = v13;
    if ((unint64_t)v6 < a3 && v8 >= 112)
    {
      do
      {
        uint64_t v14 = *(void *)v6;
        if (v6[16]) {
          uint64_t v14 = 0;
        }
        if (v4[16]) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = *(void *)v4;
        }
        if (v14 >= v15)
        {
          if (v7 != v4) {
            memmove(v7, v4, 0x70uLL);
          }
          v4 += 112;
          unint64_t v28 = v4;
          int v16 = v6;
        }
        else
        {
          int v16 = v6 + 112;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            memmove(v7, v6, 0x70uLL);
          }
        }
        v7 += 112;
        if (v4 >= v13) {
          break;
        }
        int v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      unint64_t v29 = v7;
    }
LABEL_48:
    sub_1B6D66D08((void **)&v29, &v28, &v27);
    return 1;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B682EEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a1 != a5 || a2 != a6) && (sub_1B6E334B8() & 1) == 0) {
    return 0;
  }
  if (!a3)
  {
    if (!a7) {
      goto LABEL_7;
    }
    return 0;
  }
  if (!a7 || a3 != a7) {
    return 0;
  }
LABEL_7:

  return sub_1B6918D10(a4, a8);
}

void sub_1B682EF94()
{
  qword_1E9DD1338 = (uint64_t)&unk_1F0F9B160;
}

uint64_t sub_1B682EFA8()
{
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t v1 = 0x78736F63616DLL;
      uint64_t v3 = 0x78736F63616DLL;
      break;
    case 2:
      uint64_t v1 = 0x736F6863746177;
      uint64_t v3 = 0x736F6863746177;
      break;
    case 3:
      uint64_t v1 = 1936684660;
      uint64_t v3 = 1936684660;
      break;
    default:
      uint64_t v1 = 0x736F656E6F687069;
      uint64_t v3 = 0x736F656E6F687069;
      break;
  }
  if ((sub_1B682FDA8() & 1) == 0)
  {
    sub_1B6E31948();
    return v3;
  }
  return v1;
}

uint64_t sub_1B682F0A0()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
    case 2:
    case 3:
      char v2 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if (v2) {
        goto LABEL_9;
      }
      uint64_t v3 = 56;
      if (v1 != 2) {
        uint64_t v3 = 13617;
      }
      if (v1 == 1) {
        return 12849;
      }
      else {
        return v3;
      }
    default:
      swift_bridgeObjectRelease();
LABEL_9:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B682F1DCLL);
  }
}

uint64_t sub_1B682F1EC()
{
  return 0;
}

uint64_t sub_1B682F388(uint64_t a1)
{
  char v2 = v1;
  sub_1B6832BF4();
  MEMORY[0x1F4188790](v4 - 8, v5);
  BOOL v7 = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_recursive_lock_lock_with_options();
  if (v1[11] || v1[13])
  {
    return os_unfair_recursive_lock_unlock();
  }
  else
  {
    uint64_t v9 = sub_1B682EFA8();
    uint64_t v11 = v10;
    size_t v12 = sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
    uint64_t v13 = *(void *)(a1 + 16);
    v64[2] = v12;
    v64[3] = v13;
    sub_1B682F9B4();
    v64[1] = v14;
    int v16 = v15;
    uint64_t v17 = v15[2];
    int64_t v18 = v17 + 5;
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && (unint64_t v20 = v16[3], v21 = v20 >> 1, (uint64_t)(v20 >> 1) >= v18))
    {
      uint64_t v22 = v16;
    }
    else
    {
      if (v17 <= v18) {
        uint64_t v23 = v17 + 5;
      }
      else {
        uint64_t v23 = v17;
      }
      uint64_t v22 = sub_1B6335858(isUniquelyReferenced_nonNull_native, v23, 1, v16);
      unint64_t v20 = v22[3];
      unint64_t v21 = v20 >> 1;
    }
    unint64_t v24 = v22[2];
    unint64_t v25 = v24 + 1;
    if (v21 <= v24)
    {
      unint64_t v61 = sub_1B6335858(v20 > 1, v24 + 1, 1, v22);
      unint64_t v25 = v24 + 1;
      uint64_t v22 = v61;
      unint64_t v20 = v61[3];
      unint64_t v21 = v20 >> 1;
    }
    void v22[2] = v25;
    unint64_t v26 = &v22[2 * v24];
    v26[4] = 0x69756265646F6378;
    v26[5] = 0xEA0000000000646CLL;
    if ((uint64_t)v21 < (uint64_t)(v24 + 2))
    {
      unint64_t v62 = v25;
      unint64_t v63 = sub_1B6335858(v20 > 1, v24 + 2, 1, v22);
      unint64_t v25 = v62;
      uint64_t v22 = v63;
    }
    void v22[2] = v24 + 2;
    unint64_t v27 = &v22[2 * v25];
    v27[4] = 0x6E6F69737265762DLL;
    v27[5] = 0xE800000000000000;
    unint64_t v29 = v22[2];
    unint64_t v28 = v22[3];
    unint64_t v30 = v29 + 1;
    if (v29 >= v28 >> 1) {
      uint64_t v22 = sub_1B6335858(v28 > 1, v29 + 1, 1, v22);
    }
    void v22[2] = v30;
    uint64_t v31 = &v22[2 * v29];
    void v31[4] = 1801745197;
    v31[5] = 0xE400000000000000;
    unint64_t v32 = v22[3];
    unint64_t v33 = v29 + 2;
    swift_bridgeObjectRetain();
    if (v30 >= v32 >> 1) {
      uint64_t v22 = sub_1B6335858(v32 > 1, v29 + 2, 1, v22);
    }
    void v22[2] = v33;
    uint64_t v34 = &v22[2 * v30];
    v34[4] = v9;
    v34[5] = v11;
    unint64_t v35 = v22[3];
    if ((uint64_t)(v29 + 3) > (uint64_t)(v35 >> 1)) {
      uint64_t v22 = sub_1B6335858(v35 > 1, v29 + 3, 1, v22);
    }
    void v22[2] = v29 + 3;
    unint64_t v36 = &v22[2 * v33];
    v36[4] = 1752457552;
    v36[5] = 0xE400000000000000;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v66 = 0;
    unint64_t v67 = 0xE000000000000000;
    v65[0] = 10;
    v65[1] = 0xE100000000000000;
    sub_1B633AF88();
    uint64_t v37 = (void *)sub_1B6E325F8();
    if (v37[2])
    {
      uint64_t v39 = v37[4];
      unint64_t v38 = v37[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v39 = 0;
      unint64_t v38 = 0xE000000000000000;
    }
    v2[10] = v39;
    v2[11] = v38;
    swift_bridgeObjectRelease();
    sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
    sub_1B682F9B4();
    uint64_t v41 = v40;
    uint64_t v42 = v40[2];
    int64_t v43 = v42 + 2;
    swift_bridgeObjectRetain();
    int v44 = swift_isUniquelyReferenced_nonNull_native();
    if (v44 && (unint64_t v45 = v41[3], v46 = v45 >> 1, (uint64_t)(v45 >> 1) >= v43))
    {
      uint64_t v47 = v41;
    }
    else
    {
      if (v42 <= v43) {
        uint64_t v48 = v42 + 2;
      }
      else {
        uint64_t v48 = v42;
      }
      uint64_t v47 = sub_1B6335858(v44, v48, 1, v41);
      unint64_t v45 = v47[3];
      unint64_t v46 = v45 >> 1;
    }
    unint64_t v49 = v47[2];
    unint64_t v50 = v49 + 1;
    if (v46 <= v49)
    {
      uint64_t v47 = sub_1B6335858(v45 > 1, v49 + 1, 1, v47);
      unint64_t v45 = v47[3];
      unint64_t v46 = v45 >> 1;
    }
    v47[2] = v50;
    char v51 = &v47[2 * v49];
    v51[4] = 26157;
    v51[5] = 0xE200000000000000;
    uint64_t v52 = v49 + 2;
    if ((uint64_t)v46 < v52) {
      uint64_t v47 = sub_1B6335858(v45 > 1, v52, 1, v47);
    }
    v47[2] = v52;
    unint64_t v53 = &v47[2 * v50];
    v53[4] = 0x7466697773;
    v53[5] = 0xE500000000000000;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v54 = 0xE000000000000000;
    uint64_t v66 = 0;
    unint64_t v67 = 0xE000000000000000;
    v65[0] = 10;
    v65[1] = 0xE100000000000000;
    unint64_t v55 = (void *)sub_1B6E325F8();
    if (v55[2])
    {
      uint64_t v56 = v55[4];
      unint64_t v54 = v55[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v56 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v66 = v56;
    unint64_t v67 = v54;
    strcpy((char *)v65, ".xctoolchain/");
    HIWORD(v65[1]) = -4864;
    uint64_t v57 = sub_1B6E31128();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v7, 1, 1, v57);
    sub_1B6E32658();
    char v59 = v58;
    sub_1B6816864((uint64_t)v7);
    swift_bridgeObjectRelease();
    if ((v59 & 1) == 0)
    {
      uint64_t v66 = v56;
      unint64_t v67 = v54;
      sub_1B6E31868();
      unint64_t v60 = v67;
      v2[12] = v66;
      v2[13] = v60;
    }
    swift_bridgeObjectRelease();
    return os_unfair_recursive_lock_unlock();
  }
}

uint64_t sub_1B682F9B4()
{
  sub_1B6832B9C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B6E85730;
  *(void *)(v1 + 32) = 0x6B64732D2DLL;
  *(void *)(v1 + 40) = 0xE500000000000000;
  *(void *)(v1 + 48) = sub_1B682EFA8();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = 0x68636C6F6F742D2DLL;
  *(void *)(v1 + 72) = 0xEB000000006E6961;
  uint64_t v3 = 0xE900000000000073;
  uint64_t v4 = 0x736F656E6F687069;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      if (*(void *)(v0 + 64))
      {
        uint64_t v4 = *(void *)(v0 + 56);
        uint64_t v3 = swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v3 = 0xE700000000000000;
        uint64_t v4 = 0x746C7561666564;
      }
      break;
    case 2:
      uint64_t v3 = 0xE700000000000000;
      uint64_t v4 = 0x736F6863746177;
      break;
    case 3:
      uint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1936684660;
      break;
    default:
      break;
  }
  *(void *)(v1 + 80) = v4;
  *(void *)(v1 + 88) = v3;
  return 0x6E69622F7273752FLL;
}

uint64_t sub_1B682FAFC()
{
  int v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 == 2)
  {
    char v2 = sub_1B682FB38(v0);
    *(unsigned char *)(v0 + 112) = v2 & 1;
  }
  else
  {
    char v2 = v1 & 1;
  }
  return v2 & 1;
}

uint64_t sub_1B682FB38(uint64_t a1)
{
  uint64_t v2 = sub_1B6E30F48();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)(a1 + 16))
  {
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v7 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if (v7)
      {
LABEL_4:
        int64_t v8 = (void *)sub_1B6E31768();
        id v9 = objc_msgSend(self, sel_bundleWithIdentifier_, v8);

        id v10 = objc_msgSend(v9, sel_bundleURL);
        sub_1B6E30EE8();

        sub_1B6E30EF8();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        uint64_t v11 = (void *)sub_1B6E31768();
        size_t v12 = (void *)sub_1B6E31768();
        id v13 = objc_msgSend(v11, sel_stringByAppendingPathComponent_, v12);
        swift_bridgeObjectRelease();

        sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
        swift_bridgeObjectRelease();
      }
      return 0;
  }
}

uint64_t sub_1B682FDA8()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 17);
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
    case 2:
    case 3:
      char v3 = sub_1B6E334B8();
      swift_bridgeObjectRelease();
      if (v3) {
        goto LABEL_4;
      }
LABEL_8:
      switch(v1)
      {
        case 1:
        case 2:
        case 3:
          char v6 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          uint64_t result = 0;
          if (v6) {
            goto LABEL_11;
          }
          break;
        default:
          swift_bridgeObjectRelease();
LABEL_11:
          uint64_t result = sub_1B682FAFC();
          break;
      }
      break;
    default:
      swift_bridgeObjectRelease();
LABEL_4:
      switch(v2)
      {
        case 2:
          swift_bridgeObjectRelease();
          break;
        default:
          char v4 = sub_1B6E334B8();
          swift_bridgeObjectRelease();
          if ((v4 & 1) == 0) {
            goto LABEL_8;
          }
          break;
      }
      uint64_t result = 1;
      break;
  }
  return result;
}

void *sub_1B682FFEC()
{
  uint64_t v1 = sub_1B6E30F48();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v7);
  id v9 = (char *)&v57 - v8;
  if (sub_1B682FDA8())
  {
    id v10 = (void *)sub_1B6E31768();
    uint64_t v11 = self;
    id v12 = objc_msgSend(v11, sel_bundleWithIdentifier_, v10);

    id v13 = objc_msgSend(v12, sel_bundleURL);
    sub_1B6E30EE8();

    sub_1B6E30EC8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v2 + 8);
    v14(v5, v1);
    uint64_t v15 = sub_1B6E30EF8();
    uint64_t v17 = v16;
    v14(v9, v1);
    int64_t v18 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v20 = v18[2];
    unint64_t v19 = v18[3];
    if (v20 >= v19 >> 1) {
      int64_t v18 = sub_1B6335858(v19 > 1, v20 + 1, 1, v18);
    }
    _OWORD v18[2] = v20 + 1;
    unint64_t v21 = &v18[2 * v20];
    v21[4] = v15;
    _OWORD v21[5] = v17;
    id v22 = objc_msgSend(v11, sel_mainBundle);
    id v23 = objc_msgSend(v22, sel_bundlePath);

    uint64_t v24 = sub_1B6E31798();
    uint64_t v26 = v25;

    uint64_t v57 = (void *)v24;
    uint64_t v58 = v26;
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    unint64_t v27 = v57;
    uint64_t v28 = v58;
    unint64_t v30 = v18[2];
    unint64_t v29 = v18[3];
    if (v30 >= v29 >> 1) {
      int64_t v18 = sub_1B6335858(v29 > 1, v30 + 1, 1, v18);
    }
    _OWORD v18[2] = v30 + 1;
    uint64_t v31 = &v18[2 * v30];
    void v31[4] = v27;
    v31[5] = v28;
  }
  else
  {
    uint64_t v57 = (void *)MEMORY[0x1E4FBC860];
    switch(*(unsigned char *)(v0 + 16))
    {
      case 1:
      case 2:
      case 3:
        char v32 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if (v32) {
          goto LABEL_10;
        }
        int64_t v18 = (void *)MEMORY[0x1E4FBC860];
        break;
      default:
        swift_bridgeObjectRelease();
LABEL_10:
        if (qword_1E9DCC4B8 != -1) {
          swift_once();
        }
        uint64_t v33 = swift_bridgeObjectRetain();
        sub_1B6641518(v33);
        int64_t v18 = v57;
        break;
    }
    swift_bridgeObjectRetain();
    uint64_t v34 = (void *)sub_1B6E31768();
    unint64_t v35 = (void *)sub_1B6E31768();
    id v36 = objc_msgSend(v34, sel_stringByAppendingPathComponent_, v35);

    uint64_t v37 = sub_1B6E31798();
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRetain();
    uint64_t v40 = (void *)sub_1B6E31768();
    uint64_t v41 = (void *)sub_1B6E31768();
    id v42 = objc_msgSend(v40, sel_stringByAppendingPathComponent_, v41);

    uint64_t v43 = sub_1B6E31798();
    uint64_t v45 = v44;
    swift_bridgeObjectRelease();

    uint64_t v46 = v18[2];
    uint64_t v47 = v46 + 2;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v47 > v18[3] >> 1)
    {
      if (v46 <= v47) {
        uint64_t v49 = v46 + 2;
      }
      else {
        uint64_t v49 = v46;
      }
      int64_t v18 = sub_1B6335858(isUniquelyReferenced_nonNull_native, v49, 1, v18);
    }
    unint64_t v50 = v18[2];
    unint64_t v51 = v18[3];
    unint64_t v52 = v50 + 1;
    swift_bridgeObjectRetain();
    if (v50 >= v51 >> 1) {
      int64_t v18 = sub_1B6335858(v51 > 1, v50 + 1, 1, v18);
    }
    _OWORD v18[2] = v52;
    unint64_t v53 = &v18[2 * v50];
    v53[4] = v37;
    v53[5] = v39;
    unint64_t v54 = v18[3];
    swift_bridgeObjectRetain();
    if (v52 >= v54 >> 1) {
      int64_t v18 = sub_1B6335858(v54 > 1, v50 + 2, 1, v18);
    }
    _OWORD v18[2] = v50 + 2;
    unint64_t v55 = &v18[2 * v52];
    v55[4] = v43;
    v55[5] = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v18;
}

char *sub_1B683058C()
{
  return sub_1B683059C(17965);
}

char *sub_1B6830594()
{
  return sub_1B683059C(19501);
}

char *sub_1B683059C(uint64_t a1)
{
  uint64_t v2 = sub_1B682FFEC();
  int64_t v3 = v2[2];
  if (v3)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1B6C3D528(0, v3, 0);
    uint64_t v4 = v13;
    sub_1B6832B9C();
    uint64_t v5 = v2 + 5;
    do
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1B6E76B30;
      *(void *)(v8 + 32) = a1;
      *(void *)(v8 + 40) = 0xE200000000000000;
      *(void *)(v8 + 48) = v6;
      *(void *)(v8 + 56) = v7;
      unint64_t v9 = *(void *)(v13 + 16);
      unint64_t v10 = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_1B6C3D528(v10 > 1, v9 + 1, 1);
      }
      v5 += 2;
      *(void *)(v13 + 16) = v9 + 1;
      *(void *)(v13 + 8 * v9 + 32) = v8;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = sub_1B68C7D8C(v4);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1B68306F0(char *a1)
{
  char v2 = *a1;
  char v3 = a1[1];
  uint64_t v4 = (void *)swift_slowAlloc();
  *uint64_t v4 = 0;
  *(void *)(v1 + 24) = "xcodeinfo";
  *(void *)(v1 + 32) = 9;
  *(unsigned char *)(v1 + 40) = 2;
  *(void *)(v1 + 48) = v4;
  id v5 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v6 = (void *)sub_1B6E31768();
  id v7 = objc_msgSend(v5, sel_stringForKey_, v6);

  if (v7)
  {
    uint64_t v8 = sub_1B6E31798();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  *(void *)(v1 + 56) = v8;
  *(void *)(v1 + 64) = v10;
  uint64_t v11 = (void *)sub_1B6E31768();
  id v12 = objc_msgSend(self, sel_bundleWithIdentifier_, v11);

  *(void *)(v1 + 72) = v12;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(unsigned char *)(v1 + 112) = 2;
  *(unsigned char *)(v1 + 16) = v2;
  *(unsigned char *)(v1 + 17) = v3;
  return v1;
}

uint64_t sub_1B6830864()
{
  MEMORY[0x1BA9B84C0](*(void *)(v0 + 48), -1, -1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XcodeInfo()
{
  return self;
}

void *sub_1B68308E8()
{
  uint64_t result = sub_1B67DED9C(MEMORY[0x1E4FBC860]);
  off_1E9DD1340 = result;
  return result;
}

id sub_1B6830910()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  qword_1E9DD1348 = (uint64_t)result;
  return result;
}

uint64_t sub_1B6830944(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  unsigned __int8 v4 = a1[1];
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 40) = v5;
  *(void *)(v1 + 48) = v5;
  *(void *)(v1 + 56) = v5;
  *(unsigned char *)(v1 + 26) = 0;
  *(void *)(v1 + 64) = &unk_1F0F7FB10;
  *(unsigned char *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 25) = v4;
  LOBYTE(v25) = v3;
  BYTE1(v25) = v4;
  *(void *)(v1 + 16) = sub_1B6832494((unsigned __int8 *)&v25);
  swift_retain();
  sub_1B682F388(v1);
  swift_release();
  uint64_t v6 = *(void *)(v1 + 16);
  if (*(void *)(v6 + 88) && *(void *)(v6 + 104))
  {
    switch(v3)
    {
      case 1:
        swift_bridgeObjectRelease();
        goto LABEL_7;
      default:
        char v7 = sub_1B6E334B8();
        swift_bridgeObjectRelease();
        if (v7)
        {
LABEL_7:
          id v8 = objc_msgSend(self, sel_mainBundle);
          id v9 = objc_msgSend(v8, sel_bundlePath);

          uint64_t v10 = sub_1B6E31798();
          uint64_t v12 = v11;

          uint64_t v25 = v10;
          uint64_t v26 = v12;
          swift_bridgeObjectRetain();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          uint64_t v13 = v25;
          uint64_t v14 = v26;
          uint64_t v15 = *(void **)(v2 + 48);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v2 + 48) = v15;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v15 = sub_1B6335858(0, v15[2] + 1, 1, v15);
            *(void *)(v2 + 48) = v15;
          }
          unint64_t v17 = v15[2];
          unint64_t v18 = v15[3];
          unint64_t v19 = v17 + 1;
          if (v17 >= v18 >> 1)
          {
            id v22 = v15;
            unint64_t v23 = v15[2];
            uint64_t v24 = sub_1B6335858(v18 > 1, v17 + 1, 1, v22);
            unint64_t v17 = v23;
            uint64_t v15 = v24;
            *(void *)(v2 + 48) = v24;
          }
          _OWORD v15[2] = v19;
          unint64_t v20 = &v15[2 * v17];
          unsigned char v20[4] = v13;
          v20[5] = v14;
        }
        break;
    }
  }
  else
  {
    swift_release();
    return 0;
  }
  return v2;
}

char *sub_1B6830BA8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3D528(0, v2, 0);
    uint64_t v3 = v12;
    sub_1B6832B9C();
    unsigned __int8 v4 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1B6E76B30;
      *(void *)(v7 + 32) = 0x6F77656D6172662DLL;
      *(void *)(v7 + 40) = 0xEA00000000006B72;
      *(void *)(v7 + 48) = v5;
      *(void *)(v7 + 56) = v6;
      unint64_t v8 = *(void *)(v12 + 16);
      unint64_t v9 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1) {
        sub_1B6C3D528(v9 > 1, v8 + 1, 1);
      }
      v4 += 2;
      *(void *)(v12 + 16) = v8 + 1;
      *(void *)(v12 + 8 * v8 + 32) = v7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = sub_1B68C7D8C(v3);
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1B6830CFC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1B6C3D528(0, v2, 0);
    uint64_t v3 = v10;
    sub_1B6832B9C();
    uint64_t v4 = v1 + 40;
    do
    {
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1B6E77050;
      swift_bridgeObjectRetain();
      sub_1B6E31948();
      *(void *)(v5 + 32) = 27693;
      *(void *)(v5 + 40) = 0xE200000000000000;
      swift_bridgeObjectRelease();
      unint64_t v7 = *(void *)(v10 + 16);
      unint64_t v6 = *(void *)(v10 + 24);
      if (v7 >= v6 >> 1) {
        sub_1B6C3D528(v6 > 1, v7 + 1, 1);
      }
      v4 += 16;
      *(void *)(v10 + 16) = v7 + 1;
      *(void *)(v10 + 8 * v7 + 32) = v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  unint64_t v8 = sub_1B68C7D8C(v3);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B6830E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  int64_t v8 = v6 >> 1;
  unint64_t v9 = v7 + 1;
  if (v6 >> 1 <= v7)
  {
    uint64_t v5 = sub_1B6335858(v6 > 1, v7 + 1, 1, v5);
    unint64_t v6 = v5[3];
    int64_t v8 = v6 >> 1;
  }
  _OWORD v5[2] = v9;
  uint64_t v10 = &v5[2 * v7];
  v10[4] = 0x676E616C63;
  _OWORD v10[5] = 0xE500000000000000;
  uint64_t v11 = v7 + 2;
  if (v8 < v11) {
    uint64_t v5 = sub_1B6335858(v6 > 1, v11, 1, v5);
  }
  _OWORD v5[2] = v11;
  uint64_t v12 = &v5[2 * v9];
  v12[4] = 25389;
  v12[5] = 0xE200000000000000;
  unint64_t v14 = v5[2];
  unint64_t v13 = v5[3];
  if (v14 >= v13 >> 1) {
    uint64_t v5 = sub_1B6335858(v13 > 1, v14 + 1, 1, v5);
  }
  _OWORD v5[2] = v14 + 1;
  uint64_t v15 = &v5[2 * v14];
  v15[4] = 0x7465677261742DLL;
  v15[5] = 0xE700000000000000;
  uint64_t v16 = sub_1B682F1EC();
  uint64_t v18 = v17;
  unint64_t v20 = v5[2];
  unint64_t v19 = v5[3];
  int64_t v21 = v19 >> 1;
  unint64_t v22 = v20 + 1;
  if (v19 >> 1 <= v20)
  {
    uint64_t v5 = sub_1B6335858(v19 > 1, v20 + 1, 1, v5);
    unint64_t v19 = v5[3];
    int64_t v21 = v19 >> 1;
  }
  _OWORD v5[2] = v22;
  unint64_t v23 = &v5[2 * v20];
  _OWORD v23[4] = v16;
  v23[5] = v18;
  if (v21 < (uint64_t)(v20 + 2)) {
    uint64_t v5 = sub_1B6335858(v19 > 1, v20 + 2, 1, v5);
  }
  _OWORD v5[2] = v20 + 2;
  uint64_t v24 = &v5[2 * v22];
  v24[4] = 0x636970662DLL;
  v24[5] = 0xE500000000000000;
  uint64_t v25 = swift_bridgeObjectRetain();
  sub_1B6641518(v25);
  if (*(unsigned char *)(v3 + 26)) {
    uint64_t v26 = &unk_1F0F7F9E0;
  }
  else {
    uint64_t v26 = &unk_1F0F7F9B0;
  }
  sub_1B6641518((uint64_t)v26);
  unint64_t v27 = sub_1B683058C();
  sub_1B6641518((uint64_t)v27);
  sub_1B6E31948();
  uint64_t v28 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v28 = sub_1B6335858(0, v5[2] + 1, 1, v5);
  }
  unint64_t v30 = v28[2];
  unint64_t v29 = v28[3];
  unint64_t v31 = v30 + 1;
  if (v30 >= v29 >> 1) {
    uint64_t v28 = sub_1B6335858(v29 > 1, v30 + 1, 1, v28);
  }
  _OWORD v28[2] = v31;
  char v32 = &v28[2 * v30];
  v32[4] = 28461;
  void v32[5] = 0xE200000000000000;
  unint64_t v33 = v28[3];
  swift_bridgeObjectRetain();
  if (v31 >= v33 >> 1) {
    uint64_t v28 = sub_1B6335858(v33 > 1, v30 + 2, 1, v28);
  }
  _OWORD v28[2] = v30 + 2;
  uint64_t v34 = &v28[2 * v31];
  v34[4] = a1;
  v34[5] = a2;
  sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
  uint64_t v35 = sub_1B682F9B4();
  sub_1B6641518((uint64_t)v28);
  return v35;
}

uint64_t sub_1B68311B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  int64_t v8 = v6 >> 1;
  unint64_t v9 = v7 + 1;
  if (v6 >> 1 <= v7)
  {
    uint64_t v5 = sub_1B6335858(v6 > 1, v7 + 1, 1, v5);
    unint64_t v6 = v5[3];
    int64_t v8 = v6 >> 1;
  }
  _OWORD v5[2] = v9;
  uint64_t v10 = &v5[2 * v7];
  v10[4] = 0x676E616C63;
  _OWORD v10[5] = 0xE500000000000000;
  uint64_t v11 = v7 + 2;
  if (v8 < v11) {
    uint64_t v5 = sub_1B6335858(v6 > 1, v11, 1, v5);
  }
  _OWORD v5[2] = v11;
  uint64_t v12 = &v5[2 * v9];
  v12[4] = 0x6465726168732DLL;
  v12[5] = 0xE700000000000000;
  unint64_t v14 = v5[2];
  unint64_t v13 = v5[3];
  if (v14 >= v13 >> 1) {
    uint64_t v5 = sub_1B6335858(v13 > 1, v14 + 1, 1, v5);
  }
  _OWORD v5[2] = v14 + 1;
  uint64_t v15 = &v5[2 * v14];
  v15[4] = 0x7465677261742DLL;
  v15[5] = 0xE700000000000000;
  uint64_t v16 = sub_1B682F1EC();
  uint64_t v18 = v17;
  unint64_t v20 = v5[2];
  unint64_t v19 = v5[3];
  int64_t v21 = v19 >> 1;
  unint64_t v22 = v20 + 1;
  if (v19 >> 1 <= v20)
  {
    uint64_t v5 = sub_1B6335858(v19 > 1, v20 + 1, 1, v5);
    unint64_t v19 = v5[3];
    int64_t v21 = v19 >> 1;
  }
  _OWORD v5[2] = v22;
  unint64_t v23 = &v5[2 * v20];
  _OWORD v23[4] = v16;
  v23[5] = v18;
  if (v21 < (uint64_t)(v20 + 2)) {
    uint64_t v5 = sub_1B6335858(v19 > 1, v20 + 2, 1, v5);
  }
  _OWORD v5[2] = v20 + 2;
  uint64_t v24 = &v5[2 * v22];
  v24[4] = 0x636970662DLL;
  v24[5] = 0xE500000000000000;
  uint64_t v25 = swift_bridgeObjectRetain();
  sub_1B6641518(v25);
  uint64_t v26 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v26 = sub_1B6335858(0, v5[2] + 1, 1, v5);
  }
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  int64_t v29 = v27 >> 1;
  unint64_t v30 = v28 + 1;
  if (v27 >> 1 <= v28)
  {
    uint64_t v26 = sub_1B6335858(v27 > 1, v28 + 1, 1, v26);
    unint64_t v27 = v26[3];
    int64_t v29 = v27 >> 1;
  }
  _OWORD v26[2] = v30;
  unint64_t v31 = &v26[2 * v28];
  void v31[4] = 7171117;
  v31[5] = 0xE300000000000000;
  uint64_t v32 = v28 + 2;
  if (v29 < v32) {
    uint64_t v26 = sub_1B6335858(v27 > 1, v32, 1, v26);
  }
  _OWORD v26[2] = v32;
  unint64_t v33 = &v26[2 * v30];
  v33[4] = 6515757;
  v33[5] = 0xE300000000000000;
  if (*(unsigned char *)(v3 + 26)) {
    uint64_t v34 = &unk_1F0F7FAC8;
  }
  else {
    uint64_t v34 = &unk_1F0F7FA98;
  }
  sub_1B6641518((uint64_t)v34);
  uint64_t v35 = sub_1B683058C();
  sub_1B6641518((uint64_t)v35);
  id v36 = sub_1B6830BA8();
  sub_1B6641518((uint64_t)v36);
  sub_1B6E31948();
  uint64_t v37 = v26;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v37 = sub_1B6335858(0, v26[2] + 1, 1, v26);
  }
  unint64_t v39 = v37[2];
  unint64_t v38 = v37[3];
  unint64_t v40 = v39 + 1;
  if (v39 >= v38 >> 1) {
    uint64_t v37 = sub_1B6335858(v38 > 1, v39 + 1, 1, v37);
  }
  v37[2] = v40;
  uint64_t v41 = &v37[2 * v39];
  v41[4] = 28461;
  uint64_t v41[5] = 0xE200000000000000;
  unint64_t v42 = v37[3];
  swift_bridgeObjectRetain();
  if (v40 >= v42 >> 1) {
    uint64_t v37 = sub_1B6335858(v42 > 1, v39 + 2, 1, v37);
  }
  v37[2] = v39 + 2;
  uint64_t v43 = &v37[2 * v40];
  v43[4] = a1;
  v43[5] = a2;
  sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
  uint64_t v44 = sub_1B682F9B4();
  sub_1B6641518((uint64_t)v37);
  return v44;
}

uint64_t sub_1B68315F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v9 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  int64_t v12 = v10 >> 1;
  unint64_t v13 = v11 + 1;
  if (v10 >> 1 <= v11)
  {
    unint64_t v9 = sub_1B6335858(v10 > 1, v11 + 1, 1, v9);
    unint64_t v10 = v9[3];
    int64_t v12 = v10 >> 1;
  }
  v9[2] = v13;
  unint64_t v14 = &v9[2 * v11];
  _DWORD v14[4] = 0x637466697773;
  v14[5] = 0xE600000000000000;
  if (v12 < (uint64_t)(v11 + 2)) {
    unint64_t v9 = sub_1B6335858(v10 > 1, v11 + 2, 1, v9);
  }
  v9[2] = v11 + 2;
  uint64_t v15 = &v9[2 * v13];
  v15[4] = 0x6E65746E6F72662DLL;
  v15[5] = 0xE900000000000064;
  unint64_t v17 = v9[2];
  unint64_t v16 = v9[3];
  int64_t v18 = v16 >> 1;
  unint64_t v19 = v17 + 1;
  if (v16 >> 1 <= v17)
  {
    unint64_t v9 = sub_1B6335858(v16 > 1, v17 + 1, 1, v9);
    unint64_t v16 = v9[3];
    int64_t v18 = v16 >> 1;
  }
  v9[2] = v19;
  unint64_t v20 = &v9[2 * v17];
  unsigned char v20[4] = 25389;
  v20[5] = 0xE200000000000000;
  if (v18 < (uint64_t)(v17 + 2)) {
    unint64_t v9 = sub_1B6335858(v16 > 1, v17 + 2, 1, v9);
  }
  v9[2] = v17 + 2;
  int64_t v21 = (char *)&v9[2 * v19];
  strcpy(v21 + 32, "-primary-file");
  *((_WORD *)v21 + 23) = -4864;
  unint64_t v23 = v9[2];
  unint64_t v22 = v9[3];
  int64_t v24 = v22 >> 1;
  unint64_t v25 = v23 + 1;
  swift_bridgeObjectRetain();
  if (v22 >> 1 <= v23)
  {
    unint64_t v9 = sub_1B6335858(v22 > 1, v23 + 1, 1, v9);
    unint64_t v22 = v9[3];
    int64_t v24 = v22 >> 1;
  }
  v9[2] = v25;
  uint64_t v26 = &v9[2 * v23];
  v26[4] = a1;
  v26[5] = a2;
  if (v24 < (uint64_t)(v23 + 2)) {
    unint64_t v9 = sub_1B6335858(v22 > 1, v23 + 2, 1, v9);
  }
  v9[2] = v23 + 2;
  unint64_t v27 = &v9[2 * v25];
  v27[4] = 0x7465677261742DLL;
  v27[5] = 0xE700000000000000;
  uint64_t v28 = *(void *)(v5 + 16);
  uint64_t v29 = sub_1B682F1EC();
  uint64_t v31 = v30;
  unint64_t v33 = v9[2];
  unint64_t v32 = v9[3];
  int64_t v34 = v32 >> 1;
  unint64_t v35 = v33 + 1;
  if (v32 >> 1 <= v33)
  {
    unint64_t v9 = sub_1B6335858(v32 > 1, v33 + 1, 1, v9);
    unint64_t v32 = v9[3];
    int64_t v34 = v32 >> 1;
  }
  v9[2] = v35;
  id v36 = &v9[2 * v33];
  v36[4] = v29;
  v36[5] = v31;
  if (v34 < (uint64_t)(v33 + 2)) {
    unint64_t v9 = sub_1B6335858(v32 > 1, v33 + 2, 1, v9);
  }
  v9[2] = v33 + 2;
  uint64_t v37 = &v9[2 * v35];
  v37[4] = 1801745197;
  v37[5] = 0xE400000000000000;
  uint64_t v39 = *(void *)(v28 + 80);
  uint64_t v38 = *(void *)(v28 + 88);
  unint64_t v40 = v9[2];
  unint64_t v41 = v9[3];
  int64_t v42 = v41 >> 1;
  unint64_t v43 = v40 + 1;
  swift_bridgeObjectRetain();
  if (v41 >> 1 <= v40)
  {
    unint64_t v9 = sub_1B6335858(v41 > 1, v40 + 1, 1, v9);
    unint64_t v41 = v9[3];
    int64_t v42 = v41 >> 1;
  }
  v9[2] = v43;
  uint64_t v44 = &v9[2 * v40];
  v44[4] = v39;
  v44[5] = v38;
  if (v42 < (uint64_t)(v40 + 2)) {
    unint64_t v9 = sub_1B6335858(v41 > 1, v40 + 2, 1, v9);
  }
  v9[2] = v40 + 2;
  uint64_t v45 = (char *)&v9[2 * v43];
  strcpy(v45 + 32, "-swift-version");
  v45[47] = -18;
  unint64_t v47 = v9[2];
  unint64_t v46 = v9[3];
  int64_t v48 = v46 >> 1;
  unint64_t v49 = v47 + 1;
  if (v46 >> 1 <= v47)
  {
    unint64_t v9 = sub_1B6335858(v46 > 1, v47 + 1, 1, v9);
    unint64_t v46 = v9[3];
    int64_t v48 = v46 >> 1;
  }
  v9[2] = v49;
  unint64_t v50 = &v9[2 * v47];
  v50[4] = 53;
  v50[5] = 0xE100000000000000;
  if (v48 < (uint64_t)(v47 + 2)) {
    unint64_t v9 = sub_1B6335858(v46 > 1, v47 + 2, 1, v9);
  }
  v9[2] = v47 + 2;
  unint64_t v51 = (char *)&v9[2 * v49];
  strcpy(v51 + 32, "-module-name");
  v51[45] = 0;
  *((_WORD *)v51 + 23) = -5120;
  unint64_t v52 = v9[2];
  unint64_t v53 = v9[3];
  swift_bridgeObjectRetain();
  if (v52 >= v53 >> 1) {
    unint64_t v9 = sub_1B6335858(v53 > 1, v52 + 1, 1, v9);
  }
  v9[2] = v52 + 1;
  unint64_t v54 = &v9[2 * v52];
  v54[4] = a3;
  v54[5] = a4;
  if (*(unsigned char *)(v5 + 26)) {
    unint64_t v55 = &unk_1F0F7FA50;
  }
  else {
    unint64_t v55 = &unk_1F0F7FA20;
  }
  sub_1B6641518((uint64_t)v55);
  uint64_t v56 = sub_1B683058C();
  sub_1B6641518((uint64_t)v56);
  uint64_t v57 = sub_1B683281C();
  sub_1B6641518((uint64_t)v57);
  uint64_t v58 = swift_bridgeObjectRetain();
  sub_1B6641518(v58);
  sub_1B6E31948();
  char v59 = v9;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v59 = sub_1B6335858(0, v9[2] + 1, 1, v9);
  }
  unint64_t v61 = v59[2];
  unint64_t v60 = v59[3];
  if (v61 >= v60 >> 1) {
    char v59 = sub_1B6335858(v60 > 1, v61 + 1, 1, v59);
  }
  uint64_t v59[2] = v61 + 1;
  unint64_t v62 = &v59[2 * v61];
  v62[4] = 28461;
  v62[5] = 0xE200000000000000;
  sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
  uint64_t v63 = sub_1B682F9B4();
  sub_1B6641518((uint64_t)v59);
  return v63;
}

uint64_t sub_1B6831BA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  int64_t v5 = v3 >> 1;
  unint64_t v6 = v4 + 1;
  if (v3 >> 1 <= v4)
  {
    uint64_t v2 = sub_1B6335858(v3 > 1, v4 + 1, 1, v2);
    unint64_t v3 = v2[3];
    int64_t v5 = v3 >> 1;
  }
  v2[2] = v6;
  unint64_t v7 = &v2[2 * v4];
  unint64_t v8 = 0xE500000000000000;
  v7[4] = 0x676E616C63;
  _OWORD v7[5] = 0xE500000000000000;
  uint64_t v9 = v4 + 2;
  if (v5 < v9) {
    uint64_t v2 = sub_1B6335858(v3 > 1, v9, 1, v2);
  }
  v2[2] = v9;
  unint64_t v10 = &v2[2 * v6];
  v10[4] = 0x686372612DLL;
  _OWORD v10[5] = 0xE500000000000000;
  uint64_t v11 = 0x34366D7261;
  switch(*(unsigned char *)(*(void *)(v1 + 16) + 17))
  {
    case 1:
      break;
    case 2:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v11 = 0x6534366D7261;
      break;
    case 3:
      unint64_t v8 = 0xE800000000000000;
      uint64_t v11 = 0x32335F34366D7261;
      break;
    default:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v11 = 0x34365F363878;
      break;
  }
  unint64_t v13 = v2[2];
  unint64_t v12 = v2[3];
  int64_t v14 = v12 >> 1;
  unint64_t v15 = v13 + 1;
  if (v12 >> 1 <= v13)
  {
    uint64_t v2 = sub_1B6335858(v12 > 1, v13 + 1, 1, v2);
    unint64_t v12 = v2[3];
    int64_t v14 = v12 >> 1;
  }
  v2[2] = v15;
  unint64_t v16 = &v2[2 * v13];
  _OWORD v16[4] = v11;
  v16[5] = v8;
  if (v14 < (uint64_t)(v13 + 2)) {
    uint64_t v2 = sub_1B6335858(v12 > 1, v13 + 2, 1, v2);
  }
  v2[2] = v13 + 2;
  unint64_t v17 = &v2[2 * v15];
  void v17[4] = 0x656C646E75622DLL;
  v17[5] = 0xE700000000000000;
  unint64_t v46 = v2;
  int64_t v18 = sub_1B683058C();
  sub_1B6641518((uint64_t)v18);
  unint64_t v19 = sub_1B6830BA8();
  sub_1B6641518((uint64_t)v19);
  unint64_t v20 = sub_1B6830594();
  sub_1B6641518((uint64_t)v20);
  int64_t v21 = sub_1B6830CFC();
  sub_1B6641518((uint64_t)v21);
  unint64_t v22 = v46;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v22 = sub_1B6335858(0, v46[2] + 1, 1, v46);
  }
  unint64_t v24 = v22[2];
  unint64_t v23 = v22[3];
  int64_t v25 = v23 >> 1;
  unint64_t v26 = v24 + 1;
  if (v23 >> 1 <= v24)
  {
    unint64_t v22 = sub_1B6335858(v23 > 1, v24 + 1, 1, v22);
    unint64_t v23 = v22[3];
    int64_t v25 = v23 >> 1;
  }
  void v22[2] = v26;
  unint64_t v27 = &v22[2 * v24];
  v27[4] = 0xD000000000000010;
  v27[5] = 0x80000001B6F39150;
  uint64_t v28 = v24 + 2;
  if (v25 < v28) {
    unint64_t v22 = sub_1B6335858(v23 > 1, v28, 1, v22);
  }
  void v22[2] = v28;
  uint64_t v29 = &v22[2 * v26];
  v29[4] = 0x72656B6E696C582DLL;
  v29[5] = 0xE800000000000000;
  unint64_t v31 = v22[2];
  unint64_t v30 = v22[3];
  int64_t v32 = v30 >> 1;
  unint64_t v33 = v31 + 1;
  if (v30 >> 1 <= v31)
  {
    unint64_t v22 = sub_1B6335858(v30 > 1, v31 + 1, 1, v22);
    unint64_t v30 = v22[3];
    int64_t v32 = v30 >> 1;
  }
  void v22[2] = v33;
  int64_t v34 = &v22[2 * v31];
  v34[4] = 0x5F74726F7078652DLL;
  v34[5] = 0xEF63696D616E7964;
  uint64_t v35 = v31 + 2;
  if (v32 < v35) {
    unint64_t v22 = sub_1B6335858(v30 > 1, v35, 1, v22);
  }
  void v22[2] = v35;
  id v36 = &v22[2 * v33];
  v36[4] = 0x72656B6E696C582DLL;
  v36[5] = 0xE800000000000000;
  unint64_t v38 = v22[2];
  unint64_t v37 = v22[3];
  if (v38 >= v37 >> 1) {
    unint64_t v22 = sub_1B6335858(v37 > 1, v38 + 1, 1, v22);
  }
  void v22[2] = v38 + 1;
  uint64_t v39 = &v22[2 * v38];
  v39[4] = 0x756465645F6F6E2DLL;
  v39[5] = 0xEF65746163696C70;
  sub_1B6E31948();
  unint64_t v41 = v22[2];
  unint64_t v40 = v22[3];
  if (v41 >= v40 >> 1) {
    unint64_t v22 = sub_1B6335858(v40 > 1, v41 + 1, 1, v22);
  }
  void v22[2] = v41 + 1;
  int64_t v42 = &v22[2 * v41];
  v42[4] = 28461;
  v42[5] = 0xE200000000000000;
  uint64_t v43 = swift_bridgeObjectRetain();
  sub_1B6641518(v43);
  sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
  uint64_t v44 = sub_1B682F9B4();
  sub_1B6641518((uint64_t)v22);
  return v44;
}

uint64_t sub_1B683208C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v44 = sub_1B6E30F48();
  uint64_t v4 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44, v5);
  unint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  int64_t v11 = v9 >> 1;
  unint64_t v12 = v10 + 1;
  if (v9 >> 1 <= v10)
  {
    unint64_t v8 = sub_1B6335858(v9 > 1, v10 + 1, 1, v8);
    unint64_t v9 = v8[3];
    int64_t v11 = v9 >> 1;
  }
  _OWORD v8[2] = v12;
  unint64_t v13 = &v8[2 * v10];
  v13[4] = 1869637996;
  v13[5] = 0xE400000000000000;
  if (v11 < (uint64_t)(v10 + 2)) {
    unint64_t v8 = sub_1B6335858(v9 > 1, v10 + 2, 1, v8);
  }
  _OWORD v8[2] = v10 + 2;
  int64_t v14 = &v8[2 * v12];
  _DWORD v14[4] = 0x6574616572632DLL;
  v14[5] = 0xE700000000000000;
  unint64_t v16 = v8[2];
  unint64_t v15 = v8[3];
  if (v16 >= v15 >> 1) {
    unint64_t v8 = sub_1B6335858(v15 > 1, v16 + 1, 1, v8);
  }
  _OWORD v8[2] = v16 + 1;
  unint64_t v17 = &v8[2 * v16];
  void v17[4] = 0x74757074756F2DLL;
  v17[5] = 0xE700000000000000;
  uint64_t v18 = sub_1B6E30EF8();
  uint64_t v20 = v19;
  unint64_t v22 = v8[2];
  unint64_t v21 = v8[3];
  if (v22 >= v21 >> 1) {
    unint64_t v8 = sub_1B6335858(v21 > 1, v22 + 1, 1, v8);
  }
  _OWORD v8[2] = v22 + 1;
  unint64_t v23 = &v8[2 * v22];
  _OWORD v23[4] = v18;
  v23[5] = v20;
  unint64_t v46 = v8;
  int64_t v24 = *(void *)(a1 + 16);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (v24)
  {
    v40[1] = v2;
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_1B6C3C3B8(0, v24, 0);
    unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v26 = v4 + 16;
    uint64_t v28 = a1 + ((*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64));
    uint64_t v41 = *(void *)(v26 + 56);
    int64_t v42 = v27;
    uint64_t v43 = v26;
    do
    {
      uint64_t v29 = v44;
      v42(v7, v28, v44);
      uint64_t v30 = sub_1B6E30EF8();
      uint64_t v32 = v31;
      (*(void (**)(char *, uint64_t))(v26 - 8))(v7, v29);
      uint64_t v25 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B6C3C3B8(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v45;
      }
      unint64_t v34 = *(void *)(v25 + 16);
      unint64_t v33 = *(void *)(v25 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1B6C3C3B8(v33 > 1, v34 + 1, 1);
        uint64_t v25 = v45;
      }
      *(void *)(v25 + 16) = v34 + 1;
      uint64_t v35 = v25 + 16 * v34;
      *(void *)(v35 + 32) = v30;
      *(void *)(v35 + 40) = v32;
      v28 += v41;
      --v24;
    }
    while (v24);
  }
  sub_1B6641518(v25);
  uint64_t v36 = (uint64_t)v46;
  sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
  uint64_t v37 = sub_1B682F9B4();
  uint64_t v45 = v38;
  sub_1B6641518(v36);
  return v37;
}

uint64_t sub_1B6832410()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XcodeCommandBuilder()
{
  return self;
}

uint64_t sub_1B6832494(unsigned __int8 *a1)
{
  __int16 v1 = *a1;
  __int16 v2 = a1[1];
  if (qword_1E9DCC4C8 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1E9DD1348, sel_lock);
  if (qword_1E9DCC4C0 != -1) {
    swift_once();
  }
  unint64_t v3 = off_1E9DD1340;
  __int16 v4 = v1 | (v2 << 8);
  if (*((void *)off_1E9DD1340 + 2) && (unint64_t v5 = sub_1B69FAF14(v1 | (unsigned __int16)(v2 << 8)), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(v3[7] + 8 * v5);
    unint64_t v8 = (void *)qword_1E9DD1348;
    swift_retain();
  }
  else
  {
    v12[0] = v1;
    v12[1] = v2;
    type metadata accessor for XcodeInfo();
    swift_allocObject();
    uint64_t v7 = sub_1B68306F0(v12);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v11 = off_1E9DD1340;
    off_1E9DD1340 = (_UNKNOWN *)0x8000000000000000;
    sub_1B67E56B4(v7, v4, isUniquelyReferenced_nonNull_native);
    off_1E9DD1340 = v11;
    swift_bridgeObjectRelease();
    unint64_t v8 = (void *)qword_1E9DD1348;
  }
  objc_msgSend(v8, sel_unlock, v11);
  return v7;
}

uint64_t sub_1B6832600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  int64_t v11 = v9 >> 1;
  unint64_t v12 = v10 + 1;
  if (v9 >> 1 <= v10)
  {
    unint64_t v8 = sub_1B6335858(v9 > 1, v10 + 1, 1, v8);
    unint64_t v9 = v8[3];
    int64_t v11 = v9 >> 1;
  }
  _OWORD v8[2] = v12;
  unint64_t v13 = &v8[2 * v10];
  v13[4] = 0x6C6174656DLL;
  v13[5] = 0xE500000000000000;
  uint64_t v14 = v10 + 2;
  if (v11 < v14) {
    unint64_t v8 = sub_1B6335858(v9 > 1, v14, 1, v8);
  }
  _OWORD v8[2] = v14;
  unint64_t v15 = &v8[2 * v12];
  v15[4] = 25389;
  v15[5] = 0xE200000000000000;
  unint64_t v16 = v8[2];
  unint64_t v17 = v8[3];
  int64_t v18 = v17 >> 1;
  unint64_t v19 = v16 + 1;
  swift_bridgeObjectRetain();
  if (v17 >> 1 <= v16)
  {
    unint64_t v8 = sub_1B6335858(v17 > 1, v16 + 1, 1, v8);
    unint64_t v17 = v8[3];
    int64_t v18 = v17 >> 1;
  }
  _OWORD v8[2] = v19;
  uint64_t v20 = &v8[2 * v16];
  unsigned char v20[4] = a1;
  v20[5] = a2;
  if (v18 < (uint64_t)(v16 + 2)) {
    unint64_t v8 = sub_1B6335858(v17 > 1, v16 + 2, 1, v8);
  }
  _OWORD v8[2] = v16 + 2;
  unint64_t v21 = &v8[2 * v19];
  v21[4] = 28461;
  _OWORD v21[5] = 0xE200000000000000;
  unint64_t v22 = v8[2];
  unint64_t v23 = v8[3];
  swift_bridgeObjectRetain();
  if (v22 >= v23 >> 1) {
    unint64_t v8 = sub_1B6335858(v23 > 1, v22 + 1, 1, v8);
  }
  _OWORD v8[2] = v22 + 1;
  int64_t v24 = &v8[2 * v22];
  v24[4] = a3;
  v24[5] = a4;
  sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
  uint64_t v25 = sub_1B682F9B4();
  sub_1B6641518((uint64_t)v8);
  return v25;
}

char *sub_1B683281C()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundlePath);

  uint64_t v2 = sub_1B6E31798();
  uint64_t v4 = v3;

  swift_bridgeObjectRetain();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  uint64_t v6 = v2;
  uint64_t v5 = v4;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1B6C3D528(0, 1, 0);
  uint64_t v7 = v13;
  sub_1B6832B9C();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B6E76B30;
  *(void *)(v8 + 32) = 18733;
  *(void *)(v8 + 40) = 0xE200000000000000;
  *(void *)(v8 + 48) = v6;
  *(void *)(v8 + 56) = v5;
  unint64_t v9 = *(void *)(v13 + 16);
  unint64_t v10 = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  if (v9 >= v10 >> 1)
  {
    sub_1B6C3D528(v10 > 1, v9 + 1, 1);
    uint64_t v7 = v13;
  }
  *(void *)(v7 + 16) = v9 + 1;
  *(void *)(v7 + 8 * v9 + 32) = v8;
  swift_bridgeObjectRelease();
  int64_t v11 = sub_1B68C7D8C(v7);
  swift_release();
  return v11;
}

unint64_t sub_1B6832998()
{
  id v0 = sub_1B6335858(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  int64_t v3 = v1 >> 1;
  unint64_t v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    id v0 = sub_1B6335858(v1 > 1, v2 + 1, 1, v0);
    unint64_t v1 = v0[3];
    int64_t v3 = v1 >> 1;
  }
  v0[2] = v4;
  uint64_t v5 = &v0[2 * v2];
  v5[4] = 0x6563726F662D2DLL;
  v5[5] = 0xE700000000000000;
  uint64_t v6 = v2 + 2;
  if (v3 < v6) {
    id v0 = sub_1B6335858(v1 > 1, v6, 1, v0);
  }
  v0[2] = v6;
  uint64_t v7 = &v0[2 * v4];
  v7[4] = 0x6E6769732D2DLL;
  _OWORD v7[5] = 0xE600000000000000;
  unint64_t v9 = v0[2];
  unint64_t v8 = v0[3];
  int64_t v10 = v8 >> 1;
  unint64_t v11 = v9 + 1;
  if (v8 >> 1 <= v9)
  {
    id v0 = sub_1B6335858(v8 > 1, v9 + 1, 1, v0);
    unint64_t v8 = v0[3];
    int64_t v10 = v8 >> 1;
  }
  v0[2] = v11;
  unint64_t v12 = &v0[2 * v9];
  v12[4] = 45;
  v12[5] = 0xE100000000000000;
  uint64_t v13 = v9 + 2;
  if (v10 < v13) {
    id v0 = sub_1B6335858(v8 > 1, v13, 1, v0);
  }
  v0[2] = v13;
  uint64_t v14 = &v0[2 * v11];
  _DWORD v14[4] = 0xD000000000000010;
  v14[5] = 0x80000001B6F39130;
  uint64_t v15 = sub_1B6E30EF8();
  uint64_t v17 = v16;
  unint64_t v19 = v0[2];
  unint64_t v18 = v0[3];
  if (v19 >= v18 >> 1) {
    id v0 = sub_1B6335858(v18 > 1, v19 + 1, 1, v0);
  }
  v0[2] = v19 + 1;
  uint64_t v20 = &v0[2 * v19];
  unsigned char v20[4] = v15;
  v20[5] = v17;
  sub_1B67DDFA4(MEMORY[0x1E4FBC860]);
  return 0xD000000000000011;
}

void sub_1B6832B9C()
{
  if (!qword_1EB980C90)
  {
    unint64_t v0 = sub_1B6E330A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB980C90);
    }
  }
}

void sub_1B6832BF4()
{
  if (!qword_1EB97D9D0)
  {
    sub_1B6E31128();
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB97D9D0);
    }
  }
}

uint64_t sub_1B6832C4C(uint64_t a1, char a2, char a3, float a4, float a5)
{
  sub_1B62D2B64();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1B6E77D10;
  *(void *)(v11 + 32) = &type metadata for Skybox;
  *(void *)(v11 + 40) = &off_1F0FA1BB0;
  *(void *)(v11 + 48) = &type metadata for Name;
  *(void *)(v11 + 56) = &off_1F0F9E630;
  unint64_t v12 = (void *)type metadata accessor for VFXObjectTag();
  *(void *)(v11 + 64) = v12;
  *(void *)(v11 + 72) = &off_1F0F5D1E8;
  if (a2)
  {
    unint64_t v14 = 4;
    unint64_t v12 = sub_1B62D1B88(1, 4, 1, (char *)v11);
    uint64_t v11 = (uint64_t)v12;
    char v12[2] = 4;
    v12[10] = &type metadata for IBLGenerator;
    v12[11] = &off_1F0F5A5F0;
    if ((a3 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v14 = 3;
    if ((a3 & 1) == 0) {
      goto LABEL_8;
    }
  }
  unint64_t v15 = *(void *)(v11 + 24);
  if (v14 >= v15 >> 1)
  {
    unint64_t v12 = sub_1B62D1B88(v15 > 1, v14 + 1, 1, (char *)v11);
    uint64_t v11 = (uint64_t)v12;
  }
  *(void *)(v11 + 16) = v14 + 1;
  unint64_t v16 = v11 + 16 * v14;
  *(void *)(v16 + 32) = &type metadata for Orientation;
  *(void *)(v16 + 40) = &off_1F0F560A8;
LABEL_8:
  uint64_t v17 = **(void **)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  MEMORY[0x1F4188790](v12, v13);
  v33[2] = v5;
  v33[3] = a1;
  float v34 = a4;
  float v35 = a5;
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = v18 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
  uint64_t v20 = *(os_unfair_lock_s **)(v18 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v20);
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1B63B7CC4(v21, MEMORY[0x1E4FBC860]);
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_1B637FE60(v22);
  if ((v26 & 1) != 0 || (unint64_t v27 = sub_1B63581E4(v24, v25), v28 = v27, (v27 & 0x100000000) != 0))
  {
    swift_bridgeObjectRetain();
    int v28 = sub_1B637C7BC(v22, v24, v11, MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = *(void *)(*(void *)(v18 + 80) + 8 * v28 + 32);
  uint64_t v30 = *(os_unfair_lock_s **)(v19 + 24);
  swift_retain();
  os_unfair_lock_unlock(v30);
  swift_release();
  char v36 = 1;
  uint64_t v31 = sub_1B6B1F93C(v29, 1, 1, 0x100000000uLL, (void (*)(void *))sub_1B6835824, (uint64_t)v33, v17);
  swift_bridgeObjectRelease_n();
  swift_release();
  return v31;
}

unint64_t sub_1B6832EF8(unint64_t a1, char a2, char a3, float a4, float a5)
{
  unint64_t v11 = HIDWORD(a1);
  if (a1 == 0xFFFFFFFF)
  {
LABEL_2:
    unint64_t v12 = 0;
    LODWORD(v13) = -1;
    return v13 | (v12 << 32);
  }
  unint64_t v12 = 0;
  LODWORD(v13) = -1;
  if ((uint64_t)(a1 << 32) >= (uint64_t)0xFFFFFFFF00000001
    && (int)a1 < *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8))
  {
    if (HIDWORD(a1) != -1
      && *(_DWORD *)(*(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries) + 12 * (int)a1 + 8) != HIDWORD(a1))
    {
      goto LABEL_2;
    }
    uint64_t v15 = sub_1B62EBE70(a1, v43);
    swift_unknownObjectRelease();
    if (!v15) {
      goto LABEL_2;
    }
    sub_1B62D2B64();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1B6E77D10;
    *(void *)(v16 + 32) = &type metadata for Skybox;
    *(void *)(v16 + 40) = &off_1F0FA1BB0;
    *(void *)(v16 + 48) = &type metadata for Name;
    *(void *)(v16 + 56) = &off_1F0F9E630;
    *(void *)(v16 + 64) = type metadata accessor for VFXObjectTag();
    *(void *)(v16 + 72) = &off_1F0F5D1E8;
    if (a2)
    {
      unint64_t v17 = 4;
      uint64_t v16 = (uint64_t)sub_1B62D1B88(1, 4, 1, (char *)v16);
      *(void *)(v16 + 16) = 4;
      *(void *)(v16 + 80) = &type metadata for IBLGenerator;
      *(void *)(v16 + 88) = &off_1F0F5A5F0;
    }
    else
    {
      unint64_t v17 = 3;
    }
    if (a3)
    {
      unint64_t v18 = *(void *)(v16 + 24);
      if (v17 >= v18 >> 1) {
        uint64_t v16 = (uint64_t)sub_1B62D1B88(v18 > 1, v17 + 1, 1, (char *)v16);
      }
      *(void *)(v16 + 16) = v17 + 1;
      unint64_t v19 = v16 + 16 * v17;
      *(void *)(v19 + 32) = &type metadata for Orientation;
      *(void *)(v19 + 40) = &off_1F0F560A8;
    }
    if ((sub_1B6BF9C90(a1, v5) & 1) == 0) {
      sub_1B6BF9010(a1, v5);
    }
    uint64_t v20 = **(void **)(v5 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v22 = v21 + OBJC_IVAR____TtC3VFX13EntityManager_lock;
    uint64_t v23 = *(os_unfair_lock_s **)(v21 + OBJC_IVAR____TtC3VFX13EntityManager_lock + 24);
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock(v23);
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_1B63B7CC4(v24, MEMORY[0x1E4FBC860]);
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_1B637FE60(v25);
    if ((v29 & 1) != 0 || (unint64_t v30 = sub_1B63581E4(v27, v28), v31 = v30, (v30 & 0x100000000) != 0))
    {
      swift_bridgeObjectRetain();
      int v31 = sub_1B637C7BC(v25, v27, v16, MEMORY[0x1E4FBC860]);
      swift_bridgeObjectRelease();
    }
    uint64_t v32 = *(void *)(*(void *)(v21 + 80) + 8 * v31 + 32);
    unint64_t v33 = *(os_unfair_lock_s **)(v22 + 24);
    swift_retain();
    os_unfair_lock_unlock(v33);
    swift_release();
    swift_retain();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1B62F06B8(KeyPath, 1);
    swift_release();
    swift_release();
    swift_retain();
    uint64_t v35 = swift_getKeyPath();
    sub_1B62F06B8(v35, 1);
    swift_release();
    swift_release();
    signed int v36 = *(_DWORD *)(v32 + 204);
    if (*(unsigned char *)(v32 + 208))
    {
      unint64_t v12 = 0;
      LODWORD(v13) = -1;
    }
    else
    {
      swift_retain();
      unint64_t v13 = sub_1B69E07A0();
      swift_release();
      unint64_t v12 = HIDWORD(v13);
    }
    v44[0] = -1;
    v43[0] = 0;
    v43[1] = 0;
    uint64_t v37 = *(void *)(v20 + 16);
    swift_retain();
    swift_retain();
    sub_1B68E9170(v36, 0x100000000uLL, 1, v37, v43, v13, v44, v32, v20, v36, SHIWORD(v36), 1);
    swift_release();
    swift_release();
    uint64_t v38 = v43[0];
    swift_retain();
    uint64_t v39 = sub_1B62C91B8((uint64_t)&type metadata for Skybox);
    if (v40) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = v39 + 32 * v38;
    }
    int64_t v42 = (void *)(sub_1B62C91B8((uint64_t)&type metadata for Name) + 16 * v38);
    *(_DWORD *)uint64_t v41 = a1;
    *(_DWORD *)(v41 + 4) = v11;
    *(float *)(v41 + 8) = a4;
    *(float *)(v41 + 12) = a5;
    *int64_t v42 = 0x786F62796B53;
    v42[1] = 0xE600000000000000;
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v13 | (v12 << 32);
}

uint64_t sub_1B6833380(void *a1, uint64_t a2)
{
  uint64_t v38 = a2;
  int64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1B6835DB8(0, &qword_1E9DD1388, (uint64_t (*)(void))sub_1B6835B64, (uint64_t)&type metadata for ImageResizingMode.SizeToFitCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v35 = (char *)&v28 - v6;
  sub_1B6835DB8(0, &qword_1E9DD1390, (uint64_t (*)(void))sub_1B6835BB8, (uint64_t)&type metadata for ImageResizingMode.SizeToFillCodingKeys, v3);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v32 = (char *)&v28 - v9;
  sub_1B6835DB8(0, &qword_1E9DD1398, (uint64_t (*)(void))sub_1B6835C0C, (uint64_t)&type metadata for ImageResizingMode.StretchCodingKeys, v3);
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  MEMORY[0x1F4188790](v10, v11);
  char v29 = (char *)&v28 - v12;
  sub_1B6835DB8(0, &qword_1E9DD13A0, (uint64_t (*)(void))sub_1B6835C60, (uint64_t)&type metadata for ImageResizingMode.CenterCodingKeys, v3);
  uint64_t v14 = v13;
  uint64_t v28 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  unint64_t v17 = (char *)&v28 - v16;
  sub_1B6835DB8(0, &qword_1E9DD13A8, (uint64_t (*)(void))sub_1B6835CB4, (uint64_t)&type metadata for ImageResizingMode.CodingKeys, v3);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v21);
  uint64_t v23 = (char *)&v28 - v22;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6835CB4();
  sub_1B6E33A88();
  switch((char)v38)
  {
    case 1:
      char v40 = 1;
      sub_1B6835C0C();
      uint64_t v24 = v29;
      sub_1B6E32ED8();
      uint64_t v26 = v30;
      uint64_t v25 = v31;
      goto LABEL_6;
    case 2:
      char v41 = 2;
      sub_1B6835BB8();
      uint64_t v24 = v32;
      sub_1B6E32ED8();
      uint64_t v26 = v33;
      uint64_t v25 = v34;
      goto LABEL_6;
    case 3:
      char v42 = 3;
      sub_1B6835B64();
      uint64_t v24 = v35;
      sub_1B6E32ED8();
      uint64_t v26 = v36;
      uint64_t v25 = v37;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
      break;
    default:
      char v39 = 0;
      sub_1B6835C60();
      sub_1B6E32ED8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v14);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
}

uint64_t sub_1B683387C(uint64_t a1)
{
  unint64_t v2 = sub_1B6835C60();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68338B8(uint64_t a1)
{
  unint64_t v2 = sub_1B6835C60();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B68338F4(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB2460(*a1, *a2);
}

uint64_t sub_1B6833900()
{
  uint64_t result = 0x7265746E6563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x68637465727473;
      break;
    case 2:
    case 3:
      uint64_t result = 0x69466F54657A6973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6833984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B68348B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B68339AC(uint64_t a1)
{
  unint64_t v2 = sub_1B6835CB4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B68339E8(uint64_t a1)
{
  unint64_t v2 = sub_1B6835CB4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6833A24(uint64_t a1)
{
  unint64_t v2 = sub_1B6835BB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6833A60(uint64_t a1)
{
  unint64_t v2 = sub_1B6835BB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6833A9C(uint64_t a1)
{
  unint64_t v2 = sub_1B6835B64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6833AD8(uint64_t a1)
{
  unint64_t v2 = sub_1B6835B64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6833B14(uint64_t a1)
{
  unint64_t v2 = sub_1B6835C0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6833B50(uint64_t a1)
{
  unint64_t v2 = sub_1B6835C0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6833B8C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B6834AC4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B6833BB8(void *a1)
{
  return sub_1B6833380(a1, *v1);
}

void sub_1B6833BD4(void *a1@<X8>)
{
  *a1 = &unk_1F0F71538;
}

uint64_t sub_1B6833BE4(unsigned __int8 *a1, char *a2)
{
  return sub_1B6BB9E44(*a1, *a2);
}

uint64_t sub_1B6833BF0()
{
  return sub_1B6BCFD64();
}

uint64_t sub_1B6833BF8()
{
  sub_1B6E318B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1B6833D0C()
{
  return sub_1B69EA5CC();
}

uint64_t sub_1B6833D14@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6834A78();
  *a1 = result;
  return result;
}

void sub_1B6833D44(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x65727574786574;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000079;
      uint64_t v3 = 0x7469736E65746E69;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6576654C72756C62;
      *(void *)(a1 + 8) = 0xE90000000000006CLL;
      break;
    case 3:
      *(void *)a1 = 0x646F4D646E656C62;
      *(void *)(a1 + 8) = 0xE900000000000065;
      break;
    case 4:
      *(void *)a1 = 0x66666F747563;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 5:
      strcpy((char *)a1, "resizingMode");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1B6833E38()
{
  uint64_t result = 0x65727574786574;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7469736E65746E69;
      break;
    case 2:
      uint64_t result = 0x6576654C72756C62;
      break;
    case 3:
      uint64_t result = 0x646F4D646E656C62;
      break;
    case 4:
      uint64_t result = 0x66666F747563;
      break;
    case 5:
      uint64_t result = 0x676E697A69736572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B6833F18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B6834A78();
  *a1 = result;
  return result;
}

uint64_t sub_1B6833F40(uint64_t a1)
{
  unint64_t v2 = sub_1B6835728();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6833F7C(uint64_t a1)
{
  unint64_t v2 = sub_1B6835728();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6833FB8(void *a1)
{
  uint64_t v3 = v1;
  sub_1B6835DB8(0, &qword_1E9DD1358, (uint64_t (*)(void))sub_1B6835728, (uint64_t)&type metadata for Skybox.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6835728();
  sub_1B6E33A88();
  uint64_t v13 = *v3;
  char v15 = 0;
  sub_1B6657A10();
  sub_1B6E32FA8();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1B6E32F78();
    LOBYTE(v13) = 2;
    sub_1B6E32F78();
    sub_1B630C4C0((uint64_t)(v3 + 2), (uint64_t)v14);
    sub_1B630C4C0((uint64_t)v14, (uint64_t)&v13);
    char v15 = 3;
    sub_1B66C6810();
    sub_1B6E32FA8();
    LOBYTE(v13) = 4;
    sub_1B6E32F78();
    LOBYTE(v13) = *((unsigned char *)v3 + 28);
    char v15 = 5;
    sub_1B68357D0();
    sub_1B6E32FA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_1B6834248@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1B6835170(a1, (uint64_t)v5);
  if (!v2)
  {
    *a2 = v5[0];
    double result = *(double *)((char *)v5 + 13);
    *(_OWORD *)((char *)a2 + 13) = *(_OWORD *)((char *)v5 + 13);
  }
  return result;
}

uint64_t sub_1B683428C(void *a1)
{
  return sub_1B6833FB8(a1);
}

BOOL sub_1B68342C8(_DWORD *a1, _DWORD *a2)
{
  return *a1 != *a2 || a1[1] != a2[1];
}

double sub_1B68342F4@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 1065353216;
  *(void *)a1 = 0xFFFFFFFFLL;
  *(void *)(a1 + 8) = 1065353216;
  *(_DWORD *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 20) = 1;
  *(_DWORD *)(a1 + 24) = -1082130432;
  *(unsigned char *)(a1 + 28) = 1;
  return result;
}

uint64_t sub_1B6834320(uint64_t a1, uint64_t a2, uint64_t a3, float a4, float a5)
{
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = sub_1B62C91B8((uint64_t)&type metadata for Skybox);
  if (v11) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = v10 + 32 * v9;
  }
  uint64_t v13 = sub_1B62C91B8((uint64_t)&type metadata for Name);
  if (v14) {
    char v15 = 0;
  }
  else {
    char v15 = (void *)(v13 + 16 * v9);
  }
  v24[1] = 0;
  _OWORD v24[2] = 0;
  v24[0] = 82;
  char v25 = -2;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v26 = 0;
  __int16 v29 = 768;
  uint64_t v16 = **(void **)(a2 + OBJC_IVAR____TtC3VFX13EntityManager_commandQueues);
  unint64_t v17 = sub_1B6CF2910();
  uint64_t v20[2] = a3;
  __int16 v21 = 0;
  uint64_t v22 = v24;
  char v23 = 1;
  uint64_t v18 = sub_1B6B6801C((uint64_t)v17, 0x100000000uLL, (uint64_t)sub_1B6835844, (uint64_t)v20, v16);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v12 = v18;
  *(float *)(v12 + 8) = a4;
  *(float *)(v12 + 12) = a5;
  *char v15 = 0x786F62796B53;
  v15[1] = 0xE600000000000000;
  return swift_bridgeObjectRelease();
}

double sub_1B6834490()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB997A18;
  int v4 = 0;
  char v5 = 2;
  uint64_t v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  swift_retain();
  sub_1B6A6D8E0(1, (uint64_t)v1);
  swift_release();
  double result = *(double *)v1;
  xmmword_1EB997A68 = v1[0];
  unk_1EB997A78 = v1[1];
  qword_1EB997A88 = v2;
  return result;
}

__n128 initializeWithCopy for Skybox(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Skybox(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 29)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 28);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Skybox(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 29) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 29) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 28) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Skybox()
{
  return &type metadata for Skybox;
}

uint64_t sub_1B68345F4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  BOOL v4 = __dst;
  uint64_t v6 = a2;
  char v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 12;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 12;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -11)
    {
      if (__dst != a2 || &a2[12 * v11] <= __dst) {
        memmove(__dst, a2, 12 * v11);
      }
      unint64_t v17 = &v4[12 * v11];
      char v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v10 >= 12)
      {
        unint64_t v18 = a3 - 12;
        do
        {
          uint64_t v19 = (char *)(v18 + 12);
          if (*((_DWORD *)v17 - 1) >= *((_DWORD *)v6 - 1))
          {
            uint64_t v22 = v17 - 12;
            char v25 = v17 - 12;
            if (v19 < v17 || v18 >= (unint64_t)v17 || v19 != v17)
            {
              uint64_t v23 = *(void *)v22;
              *(_DWORD *)(v18 + 8) = *((_DWORD *)v22 + 2);
              *(void *)unint64_t v18 = v23;
            }
            uint64_t v20 = v6;
            unint64_t v17 = v22;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v20 = v6 - 12;
            if (v19 != v6 || v18 >= (unint64_t)v6)
            {
              uint64_t v21 = *(void *)v20;
              *(_DWORD *)(v18 + 8) = *((_DWORD *)v6 - 1);
              *(void *)unint64_t v18 = v21;
            }
            uint64_t v27 = v6 - 12;
            if (v20 <= v7) {
              break;
            }
          }
          v18 -= 12;
          uint64_t v6 = v20;
        }
        while (v17 > v4);
      }
LABEL_40:
      sub_1B6D66DD8((void **)&v27, &v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -11)
  {
    if (__dst != __src || &__src[12 * v9] <= __dst) {
      memmove(__dst, __src, 12 * v9);
    }
    uint64_t v12 = &v4[12 * v9];
    char v25 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 12)
    {
      uint64_t v13 = v4;
      while (1)
      {
        if (*((_DWORD *)v6 + 2) >= *((_DWORD *)v13 + 2))
        {
          BOOL v4 = v13 + 12;
          char v15 = v13;
          char v14 = v6;
          if (v7 == v13)
          {
            v13 += 12;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 12;
          }
        }
        else
        {
          char v14 = v6 + 12;
          char v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        uint64_t v16 = *(void *)v15;
        *((_DWORD *)v7 + 2) = *((_DWORD *)v15 + 2);
        *(void *)char v7 = v16;
LABEL_18:
        v7 += 12;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        uint64_t v26 = v4;
        uint64_t v27 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1B6E32C88();
  __break(1u);
  return result;
}

uint64_t sub_1B68348B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x68637465727473 && a2 == 0xE700000000000000 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69466F54657A6973 && a2 == 0xEA00000000006C6CLL || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69466F54657A6973 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1B6834A78()
{
  unint64_t v0 = sub_1B6E32CC8();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B6834AC4(void *a1)
{
  BOOL v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1B6835DB8(0, &qword_1EB980988, (uint64_t (*)(void))sub_1B6835B64, (uint64_t)&type metadata for ImageResizingMode.SizeToFitCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v49 = v3;
  uint64_t v44 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  unint64_t v47 = (char *)&v38 - v5;
  sub_1B6835DB8(0, &qword_1EB980990, (uint64_t (*)(void))sub_1B6835BB8, (uint64_t)&type metadata for ImageResizingMode.SizeToFillCodingKeys, v2);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  uint64_t v43 = v7;
  MEMORY[0x1F4188790](v6, v8);
  unint64_t v46 = (char *)&v38 - v9;
  sub_1B6835DB8(0, &qword_1EB980980, (uint64_t (*)(void))sub_1B6835C0C, (uint64_t)&type metadata for ImageResizingMode.StretchCodingKeys, v2);
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v45 = (char *)&v38 - v12;
  sub_1B6835DB8(0, &qword_1EB980978, (uint64_t (*)(void))sub_1B6835C60, (uint64_t)&type metadata for ImageResizingMode.CenterCodingKeys, v2);
  uint64_t v14 = v13;
  uint64_t v48 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  unint64_t v17 = (char *)&v38 - v16;
  sub_1B6835DB8(0, &qword_1EB980970, (uint64_t (*)(void))sub_1B6835CB4, (uint64_t)&type metadata for ImageResizingMode.CodingKeys, v2);
  uint64_t v19 = v18;
  uint64_t v50 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v20);
  uint64_t v22 = (char *)&v38 - v21;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6835CB4();
  uint64_t v23 = (uint64_t)v51;
  sub_1B6E33A48();
  if (v23) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v25 = v48;
  uint64_t v24 = v49;
  uint64_t v39 = v14;
  unint64_t v51 = a1;
  uint64_t v26 = v22;
  uint64_t v27 = sub_1B6E32E88();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v30 = sub_1B6E32998();
    swift_allocError();
    uint64_t v32 = v31;
    sub_1B6835D08();
    *uint64_t v32 = &type metadata for ImageResizingMode;
    sub_1B6E32D08();
    sub_1B6E32978();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x1E4FBBA70], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v19);
    a1 = v51;
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v28 = v50;
  switch(*(unsigned char *)(v27 + 32))
  {
    case 1:
      uint64_t v29 = *(unsigned __int8 *)(v27 + 32);
      char v53 = 1;
      sub_1B6835C0C();
      uint64_t v33 = v45;
      sub_1B6E32CF8();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v41);
      break;
    case 2:
      uint64_t v29 = *(unsigned __int8 *)(v27 + 32);
      char v54 = 2;
      sub_1B6835BB8();
      uint64_t v34 = v46;
      sub_1B6E32CF8();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v42);
      break;
    case 3:
      uint64_t v35 = v24;
      uint64_t v29 = *(unsigned __int8 *)(v27 + 32);
      char v55 = 3;
      sub_1B6835B64();
      uint64_t v36 = v47;
      sub_1B6E32CF8();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v35);
      break;
    default:
      uint64_t v29 = *(unsigned __int8 *)(v27 + 32);
      char v52 = 0;
      sub_1B6835C60();
      sub_1B6E32CF8();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v39);
      break;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v19);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v51);
  return v29;
}

uint64_t sub_1B6835170@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  sub_1B6835DB8(0, &qword_1EB980AA8, (uint64_t (*)(void))sub_1B6835728, (uint64_t)&type metadata for Skybox.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v27 - v8;
  char v30 = 1;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6835728();
  sub_1B6E33A48();
  if (v2) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v11 = v27;
  char v31 = 0;
  sub_1B62B1EA8();
  sub_1B6E32DF8();
  uint64_t v12 = v28;
  LOBYTE(v28) = 1;
  sub_1B6E32DC8();
  int v14 = v13;
  LOBYTE(v28) = 2;
  sub_1B6E32DC8();
  int v17 = v16;
  char v31 = 3;
  sub_1B62A83F0();
  sub_1B6E32DF8();
  float v18 = *(float *)&v28;
  char v19 = BYTE4(v28);
  char v30 = BYTE4(v28);
  char v31 = 5;
  sub_1B683577C();
  sub_1B6E32DF8();
  int v29 = v28;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  sub_1B62C14BC(a1, v20);
  if (sub_1B62BF5E0(2047, v20, v21))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v5);
    if (v19)
    {
      float v22 = v18;
      float v18 = -1.0;
    }
    else
    {
      char v30 = 1;
      float v22 = 0.0;
    }
  }
  else
  {
    LOBYTE(v28) = 4;
    sub_1B6E32DC8();
    float v24 = v23;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v5);
    float v22 = v18;
    float v18 = v24;
  }
  char v25 = v29;
  char v26 = v30;
  uint64_t result = _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  *(void *)uint64_t v11 = v12;
  *(_DWORD *)(v11 + 8) = v14;
  *(_DWORD *)(v11 + 12) = v17;
  *(float *)(v11 + 16) = v22;
  *(unsigned char *)(v11 + 20) = v26;
  *(float *)(v11 + 24) = v18;
  *(unsigned char *)(v11 + 28) = v25;
  return result;
}

void sub_1B683552C()
{
  if (!qword_1E9DD1350)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DD1350);
    }
  }
}

uint64_t sub_1B6835598(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_renderer);
  if (v1)
  {
    uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC3VFX13EntityManager_clock + 8);
    uint64_t v3 = *(void *)(v1 + 272);
    sub_1B6383E40((uint64_t)v12);
    uint64_t v4 = *(void *)(*(void *)(*(void *)(*(void *)(v3 + 16) + 264) + 40) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v4)
    {
      uint64_t v6 = v12[0];
      uint64_t v5 = v12[1];
      swift_bridgeObjectRetain();
      sub_1B62B2CE0(v6, v5);
      if (v7)
      {
        swift_unknownObjectRetain();
        sub_1B62C7BF4((uint64_t)v12);
        swift_release();
        sub_1B62C7BF4((uint64_t)v12);
        swift_release();
        swift_unknownObjectRelease();
        return swift_release();
      }
      sub_1B62C7BF4((uint64_t)v12);
    }
    swift_release();
    sub_1B62C7BF4((uint64_t)v12);
    swift_release();
    uint64_t v8 = *(unsigned char **)(v1 + 272);
    if (v8[24] != 2)
    {
      v8[33] = 1;
      v8[31] = 1;
    }
    swift_retain();
    uint64_t v9 = (void *)sub_1B6330840(v2);
    swift_release();
    uint64_t v10 = sub_1B6E328F8();
    sub_1B6388754(v10, v11, v9);

    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_1B6835728()
{
  unint64_t result = qword_1EB97FDF0;
  if (!qword_1EB97FDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FDF0);
  }
  return result;
}

unint64_t sub_1B683577C()
{
  unint64_t result = qword_1EB97EDF0[0];
  if (!qword_1EB97EDF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB97EDF0);
  }
  return result;
}

unint64_t sub_1B68357D0()
{
  unint64_t result = qword_1E9DD1360;
  if (!qword_1E9DD1360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1360);
  }
  return result;
}

uint64_t sub_1B6835824(uint64_t a1)
{
  return sub_1B6834320(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(float *)(v1 + 32), *(float *)(v1 + 36));
}

double sub_1B6835844(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  return sub_1B6CFA388(a1, a2, a3, *(void *)(v3 + 16), *(unsigned __int8 *)(v3 + 24), *(unsigned __int8 *)(v3 + 25), *(long long **)(v3 + 32));
}

unsigned char *storeEnumTagSinglePayload for Skybox.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6835938);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Skybox.CodingKeys()
{
  return &type metadata for Skybox.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageResizingMode()
{
  return &type metadata for ImageResizingMode;
}

unint64_t sub_1B6835988()
{
  unint64_t result = qword_1E9DD1368;
  if (!qword_1E9DD1368)
  {
    sub_1B62EAE94(255, &qword_1E9DD1370, (uint64_t)&type metadata for ImageResizingMode, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1368);
  }
  return result;
}

unint64_t sub_1B6835A08()
{
  unint64_t result = qword_1E9DD1378;
  if (!qword_1E9DD1378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1378);
  }
  return result;
}

unint64_t sub_1B6835A60()
{
  unint64_t result = qword_1E9DD1380;
  if (!qword_1E9DD1380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1380);
  }
  return result;
}

unint64_t sub_1B6835AB8()
{
  unint64_t result = qword_1EB97FE00;
  if (!qword_1EB97FE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FE00);
  }
  return result;
}

unint64_t sub_1B6835B10()
{
  unint64_t result = qword_1EB97FDF8;
  if (!qword_1EB97FDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97FDF8);
  }
  return result;
}

unint64_t sub_1B6835B64()
{
  unint64_t result = qword_1EB97EDC0;
  if (!qword_1EB97EDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EDC0);
  }
  return result;
}

unint64_t sub_1B6835BB8()
{
  unint64_t result = qword_1EB97EDD8;
  if (!qword_1EB97EDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EDD8);
  }
  return result;
}

unint64_t sub_1B6835C0C()
{
  unint64_t result = qword_1EB97EDA8;
  if (!qword_1EB97EDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EDA8);
  }
  return result;
}

unint64_t sub_1B6835C60()
{
  unint64_t result = qword_1EB97ED90;
  if (!qword_1EB97ED90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ED90);
  }
  return result;
}

unint64_t sub_1B6835CB4()
{
  unint64_t result = qword_1EB97ED78;
  if (!qword_1EB97ED78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ED78);
  }
  return result;
}

void sub_1B6835D08()
{
  if (!qword_1EB980F70)
  {
    sub_1B6835D78();
    sub_1B6E32988();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB980F70);
    }
  }
}

unint64_t sub_1B6835D78()
{
  unint64_t result = qword_1EB980F68;
  if (!qword_1EB980F68)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB980F68);
  }
  return result;
}

void sub_1B6835DB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *_s3VFX17ImageResizingModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6835EECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageResizingMode.CodingKeys()
{
  return &type metadata for ImageResizingMode.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageResizingMode.CenterCodingKeys()
{
  return &type metadata for ImageResizingMode.CenterCodingKeys;
}

ValueMetadata *type metadata accessor for ImageResizingMode.StretchCodingKeys()
{
  return &type metadata for ImageResizingMode.StretchCodingKeys;
}

ValueMetadata *type metadata accessor for ImageResizingMode.SizeToFillCodingKeys()
{
  return &type metadata for ImageResizingMode.SizeToFillCodingKeys;
}

ValueMetadata *type metadata accessor for ImageResizingMode.SizeToFitCodingKeys()
{
  return &type metadata for ImageResizingMode.SizeToFitCodingKeys;
}

unint64_t sub_1B6835F68()
{
  unint64_t result = qword_1E9DD13B0;
  if (!qword_1E9DD13B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD13B0);
  }
  return result;
}

unint64_t sub_1B6835FC0()
{
  unint64_t result = qword_1EB97ED88;
  if (!qword_1EB97ED88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ED88);
  }
  return result;
}

unint64_t sub_1B6836018()
{
  unint64_t result = qword_1EB97ED80;
  if (!qword_1EB97ED80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ED80);
  }
  return result;
}

unint64_t sub_1B6836070()
{
  unint64_t result = qword_1EB97EDA0;
  if (!qword_1EB97EDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EDA0);
  }
  return result;
}

unint64_t sub_1B68360C8()
{
  unint64_t result = qword_1EB97ED98;
  if (!qword_1EB97ED98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97ED98);
  }
  return result;
}

unint64_t sub_1B6836120()
{
  unint64_t result = qword_1EB97EDB8;
  if (!qword_1EB97EDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EDB8);
  }
  return result;
}

unint64_t sub_1B6836178()
{
  unint64_t result = qword_1EB97EDB0;
  if (!qword_1EB97EDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EDB0);
  }
  return result;
}

unint64_t sub_1B68361D0()
{
  unint64_t result = qword_1EB97EDE8;
  if (!qword_1EB97EDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EDE8);
  }
  return result;
}

unint64_t sub_1B6836228()
{
  unint64_t result = qword_1EB97EDE0;
  if (!qword_1EB97EDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EDE0);
  }
  return result;
}

unint64_t sub_1B6836280()
{
  unint64_t result = qword_1EB97EDD0;
  if (!qword_1EB97EDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EDD0);
  }
  return result;
}

unint64_t sub_1B68362D8()
{
  unint64_t result = qword_1EB97EDC8;
  if (!qword_1EB97EDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB97EDC8);
  }
  return result;
}

uint64_t sub_1B683632C(uint64_t result, uint64_t *a2, uint64_t (*a3)(_OWORD *))
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v10 = *(void *)(result + 16);
  uint64_t v4 = *a2;
  long long v5 = *(_OWORD *)(result + 16);
  v9[0] = *(_OWORD *)result;
  v9[1] = v5;
  v9[2] = *(_OWORD *)(result + 32);
  if (!v4)
  {
    swift_retain();
    sub_1B6399A44((uint64_t)&v10);
    swift_retain();
    char v8 = a3(v9);
    swift_release();
    sub_1B62D8C3C((uint64_t)&v10);
    unint64_t result = swift_release();
    if (v8)
    {
      swift_release();
      *a2 = v3;
      return swift_retain();
    }
  }
  return result;
}

uint64_t sub_1B68363F0()
{
  strcpy((char *)v4, "Graph error: ");
  HIWORD(v4[1]) = -4864;
  if (*v0)
  {
    uint64_t v1 = *(void (**)(uint64_t))(**(void **)(*v0 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) + 136);
    uint64_t v2 = swift_retain();
    v1(v2);
    sub_1B6E31948();
    sub_1B6E31948();
    swift_release();
    swift_bridgeObjectRelease();
  }
  if (*(void *)((char *)v0 + *(int *)(type metadata accessor for GraphError() + 28) + 8))
  {
    swift_bridgeObjectRetain();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
  }
  sub_1B6E31948();
  sub_1B6E32B18();
  sub_1B6E31948();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  return v4[0];
}

uint64_t sub_1B6836594(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1B68365D0(uint64_t a1)
{
  sub_1B683DD4C(0, &qword_1E9DD13C8, (uint64_t (*)(uint64_t))type metadata accessor for GraphError, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8, v4);
  unsigned int v6 = (char *)&v22 - v5;
  uint64_t v7 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for GraphError();
  uint64_t v13 = *(void *)(v12 - 8);
  double v15 = MEMORY[0x1F4188790](v12, v14);
  int v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v11, v1, a1, v15);
  int v18 = swift_dynamicCast();
  char v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v18)
  {
    v19(v6, 0, 1, v12);
    sub_1B683DB88((uint64_t)v6, (uint64_t)v17);
    uint64_t v20 = sub_1B68363F0();
    sub_1B683DCB8((uint64_t)v17);
  }
  else
  {
    v19(v6, 1, 1, v12);
    sub_1B683DE08((uint64_t)v6, &qword_1E9DD13C8, (uint64_t (*)(uint64_t))type metadata accessor for GraphError);
    return sub_1B6E33868();
  }
  return v20;
}

id sub_1B68368C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GraphDiagnostics();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GraphDiagnostics()
{
  return self;
}

uint64_t sub_1B6836968()
{
  uint64_t v39 = sub_1B6E31118();
  uint64_t v2 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39, v3);
  uint64_t v37 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v0;
  if (qword_1E9DCC4A0 != -1) {
    swift_once();
  }
  char v5 = byte_1E9E49328;
  uint64_t v6 = qword_1E9E49330;
  char v7 = byte_1E9E49338;
  unint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v41 = sub_1B68CABF0(MEMORY[0x1E4FBC860]);
  uint64_t v42 = v9;
  sub_1B68BA250((uint64_t)sub_1B6836EAC, 0, v5, v6, v7, v8, (uint64_t)&v41);
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    uint64_t v10 = sub_1B68C70B0(v41, v42, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B683D1D0, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v41 = v8;
    uint64_t v11 = v10[2];
    if (v11)
    {
      swift_retain();
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (v10[i + 4])
        {
          uint64_t v13 = swift_retain();
          MEMORY[0x1BA9B3870](v13);
          if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B6E31C78();
          }
          sub_1B6E31CC8();
          sub_1B6E31C48();
        }
      }
      swift_release();
      unint64_t v8 = v41;
    }
    swift_release();
    uint64_t v14 = v38;
    swift_retain();
    uint64_t v15 = sub_1B683D904(v8);
    swift_bridgeObjectRelease();
    swift_release();
    v36[2] = type metadata accessor for Graph();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    MEMORY[0x1F4188790](v16, v17);
    v36[-2] = sub_1B683DFE8;
    v36[-1] = v14;
    swift_retain();
    unint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v41 = sub_1B68C967C(MEMORY[0x1E4FBC860]);
    uint64_t v42 = v19;
    sub_1B68B9930((uint64_t)sub_1B683DFF0, (uint64_t)&v36[-4], 1, 0x1000000000000000uLL, 0, v18, (uint64_t *)&v41);
    v36[1] = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v20 = sub_1B6D41530();
    unint64_t v21 = v20;
    uint64_t v22 = v39;
    uint64_t v23 = (uint64_t)v37;
    v36[3] = v16;
    if (v20 >> 62)
    {
      uint64_t v24 = sub_1B6E32C18();
      uint64_t v25 = v38;
      if (v24) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v24 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v25 = v38;
      if (v24)
      {
LABEL_14:
        uint64_t v26 = 0;
        uint64_t v43 = (void (**)(uint64_t, uint64_t))(v2 + 8);
        uint64_t v40 = v24;
        while (1)
        {
          if ((v21 & 0xC000000000000001) != 0)
          {
            uint64_t v27 = MEMORY[0x1BA9B4580](v26, v21);
          }
          else
          {
            uint64_t v27 = *(void *)(v21 + 8 * v26 + 32);
            swift_retain();
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v23, v27 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v22);
          uint64_t v28 = *(void *)(v25 + 32);
          if (!*(void *)(v28 + 16)) {
            goto LABEL_16;
          }
          swift_bridgeObjectRetain();
          uint64_t v29 = sub_1B69FA874(v23);
          if ((v30 & 1) == 0) {
            break;
          }
          uint64_t v31 = *(void *)(v28 + 56) + 16 * v29;
          id v32 = *(id *)v31;
          char v33 = *(unsigned char *)(v31 + 8);
          sub_1B683DFDC(*(id *)v31, v33);
          swift_bridgeObjectRelease();
          (*v43)(v23, v39);
          if (v33)
          {
            unint64_t v41 = (unint64_t)v32;
            sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
            swift_willThrowTypedImpl();
            swift_bridgeObjectRelease();
            swift_release();
            return swift_release_n();
          }
          swift_release();
          sub_1B67FAAC8(v32, 0);
          uint64_t v25 = v38;
          uint64_t v22 = v39;
          uint64_t v23 = (uint64_t)v37;
LABEL_17:
          if (v40 == ++v26) {
            goto LABEL_27;
          }
        }
        swift_bridgeObjectRelease();
LABEL_16:
        (*v43)(v23, v22);
        swift_release();
        goto LABEL_17;
      }
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_1B6B65B6C();
    swift_release_n();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v35;
  }
  return result;
}

uint64_t sub_1B6836EAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(void *)(*(void *)(a1 + 16) + 16)) {
    uint64_t result = 0;
  }
  else {
    uint64_t result = swift_retain();
  }
  *a2 = result;
  return result;
}

uint64_t sub_1B6836EEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_retain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1B683D1DC(v4, a2);
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)(v3 + 16) = v5;
  return swift_bridgeObjectRelease();
}

void *sub_1B6836F64(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = (int *)type metadata accessor for GraphError();
  double v7 = MEMORY[0x1F4188790](v5, v6);
  uint64_t v9 = (uint64_t *)((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void *__return_ptr, double))(**(void **)(a1 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                       + 152))(v55, v7);
  uint64_t v10 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
  uint64_t v11 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16);
  uint64_t v61 = v55[0];
  uint64_t v12 = *(void *)(v55[0] + 16);
  sub_1B62D8C3C((uint64_t)&v61);
  uint64_t v60 = v55[1];
  sub_1B62D8C3C((uint64_t)&v60);
  uint64_t v59 = v55[2];
  sub_1B62D8C3C((uint64_t)&v59);
  uint64_t v58 = v55[3];
  sub_1B62D8C3C((uint64_t)&v58);
  uint64_t v57 = v55[4];
  sub_1B62D8C3C((uint64_t)&v57);
  uint64_t v56 = v55[5];
  sub_1B62D8C3C((uint64_t)&v56);
  uint64_t v53 = v3;
  if (v11 == v12)
  {
    uint64_t v13 = *(void *)(a1 + v10);
    int64_t v14 = *(void *)(v13 + 16);
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
    if (v14)
    {
      uint64_t v16 = 0;
      uint64_t v17 = 32;
      do
      {
        if (!*(void *)(v13 + v17))
        {
          sub_1B683DB30();
          uint64_t v37 = swift_allocError();
          uint64_t v52 = v38;
          *uint64_t v9 = a1;
          uint64_t v39 = (char *)v9 + v5[5];
          uint64_t v40 = a1 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
          uint64_t v41 = sub_1B6E31118();
          uint64_t v42 = *(void *)(v41 - 8);
          (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v39, v40, v41);
          uint64_t v43 = v41;
          id v32 = (void *)v37;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v43);
          uint64_t v44 = (char *)v9 + v5[6];
          *(void *)uint64_t v44 = v16;
          v44[8] = 0;
          uint64_t v34 = (void *)((char *)v9 + v5[7]);
          unint64_t v35 = 0xD00000000000001DLL;
          uint64_t v36 = "Some inputs are not connected";
          goto LABEL_13;
        }
        ++v16;
        v17 += 16;
      }
      while (v14 != v16);
      uint64_t v53 = v2;
      char v54 = (void *)MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1B6C3D57C(0, v14, 0);
      uint64_t v18 = 0;
      uint64_t v15 = v54;
      unint64_t v19 = v54[2];
      uint64_t v20 = 2 * v19;
      do
      {
        uint64_t v21 = *(void *)(v13 + v18 * 8 + 32);
        uint64_t v22 = *(void *)(v13 + v18 * 8 + 40);
        char v54 = v15;
        unint64_t v23 = v15[3];
        swift_retain();
        if (v19 >= v23 >> 1)
        {
          sub_1B6C3D57C(v23 > 1, v19 + 1, 1);
          uint64_t v15 = v54;
        }
        _OWORD v15[2] = v19 + 1;
        uint64_t v24 = &v15[v20 + v18];
        v24[4] = v21;
        v24[5] = v22;
        v18 += 2;
        ++v19;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1B683DB30();
    uint64_t v25 = swift_allocError();
    uint64_t v52 = v26;
    *uint64_t v9 = a1;
    uint64_t v27 = (char *)v9 + v5[5];
    uint64_t v28 = a1 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    uint64_t v29 = sub_1B6E31118();
    uint64_t v30 = *(void *)(v29 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v27, v28, v29);
    uint64_t v31 = v29;
    id v32 = (void *)v25;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v31);
    char v33 = (char *)v9 + v5[6];
    *(void *)char v33 = 0;
    v33[8] = 1;
    uint64_t v34 = (void *)((char *)v9 + v5[7]);
    unint64_t v35 = 0xD000000000000018;
    uint64_t v36 = "Invalid number of inputs";
LABEL_13:
    *uint64_t v34 = v35;
    v34[1] = (unint64_t)(v36 - 32) | 0x8000000000000000;
    sub_1B683DB88((uint64_t)v9, v52);
    uint64_t v45 = *(void *)(v53 + 24);
    uint64_t v46 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
    uint64_t v15 = *(void **)(v45 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
    swift_retain();
    id v47 = v32;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v45 + v46) = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v15 = sub_1B68C1084(0, v15[2] + 1, 1, v15);
      *(void *)(v45 + v46) = v15;
    }
    unint64_t v50 = v15[2];
    unint64_t v49 = v15[3];
    if (v50 >= v49 >> 1)
    {
      uint64_t v15 = sub_1B68C1084(v49 > 1, v50 + 1, 1, v15);
      *(void *)(v45 + v46) = v15;
    }
    _OWORD v15[2] = v50 + 1;
    v15[v50 + 4] = v32;
    swift_willThrow();
  }
  return v15;
}

void *sub_1B6837428(__objc2_class **a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B6E31118();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = MEMORY[0x1F4188790](v9, v10);
  uint64_t v13 = (char *)v45 - v12;
  uint64_t v52 = a1;
  int64_t v14 = (char *)a1 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
  uint64_t v15 = v5 + 16;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t, double))(v5 + 16);
  v16((char *)v45 - v12, (char *)a1 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v4, v11);
  uint64_t v17 = *(void *)(v2 + 32);
  if (*(void *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1B69FA874((uint64_t)v13);
    if (v19)
    {
      uint64_t v20 = *(void *)(v17 + 56) + 16 * v18;
      uint64_t v21 = *(void **)v20;
      sub_1B683DFDC(*(id *)v20, *(unsigned char *)(v20 + 8));
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      return v21;
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v22 = v5 + 8;
  v23(v13, v4);
  unint64_t v49 = v14;
  uint64_t v50 = v15;
  uint64_t v48 = (void (*)(uint64_t, char *, uint64_t))v16;
  ((void (*)(char *, char *, uint64_t))v16)(v8, v14, v4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v54[0] = *(void *)(v2 + 40);
  *(void *)(v2 + 40) = 0x8000000000000000;
  sub_1B67E634C(1, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  *(void *)(v2 + 40) = v54[0];
  swift_bridgeObjectRelease();
  unint64_t v51 = v8;
  id v47 = (void (*)(uint64_t, uint64_t))v23;
  v23(v8, v4);
  uint64_t v25 = *(uint64_t *)((char *)v52 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs);
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    v45[1] = v22;
    uint64_t v46 = v4;
    uint64_t v27 = OBJC_IVAR____TtC3VFX13AuthoringNode_raw;
    swift_bridgeObjectRetain();
    uint64_t v28 = 0;
    uint64_t v29 = 32;
    do
    {
      if (*(void *)(v25 + v29))
      {
        info = (*(__objc2_class **)((char *)v52 + v27))->isa[3].info;
        uint64_t v31 = swift_retain_n();
        ((void (*)(void *__return_ptr, uint64_t))info)(v54, v31);
        uint64_t v59 = v54[1];
        uint64_t v60 = v54[0];
        sub_1B62D8C3C((uint64_t)&v59);
        uint64_t v58 = v54[2];
        sub_1B62D8C3C((uint64_t)&v58);
        uint64_t v57 = v54[3];
        sub_1B62D8C3C((uint64_t)&v57);
        uint64_t v56 = v54[4];
        sub_1B62D8C3C((uint64_t)&v56);
        uint64_t v55 = v54[5];
        sub_1B62D8C3C((uint64_t)&v55);
        unint64_t v32 = *(void *)(v60 + 8 * v28 + 32);
        sub_1B66456F8(v32);
        sub_1B62D8C3C((uint64_t)&v60);
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = 0x8000000000000008;
        LOBYTE(info) = sub_1B697351C(v32, v33 | 0x6000000000000000);
        swift_release();
        sub_1B6645740(v32);
        if ((info & 1) == 0)
        {
          uint64_t v34 = swift_retain();
          unint64_t v35 = (void *)sub_1B6837428(v34);
          char v37 = v36;
          swift_release();
          sub_1B67FAAC8(v35, v37 & 1);
        }
        swift_release_n();
      }
      ++v28;
      v29 += 16;
    }
    while (v26 != v28);
    swift_bridgeObjectRelease();
    uint64_t v4 = v46;
  }
  uint64_t v21 = sub_1B683A45C(v52);
  uint64_t v38 = (uint64_t)v51;
  uint64_t v40 = v48;
  uint64_t v39 = v49;
  v48((uint64_t)v51, v49, v4);
  LODWORD(v52) = 0;
  sub_1B683DFDC(v21, 0);
  char v41 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v53 = *(void *)(v2 + 32);
  *(void *)(v2 + 32) = 0x8000000000000000;
  sub_1B67E64DC((uint64_t)v21, 0, v38, v41);
  *(void *)(v2 + 32) = v53;
  swift_bridgeObjectRelease();
  uint64_t v42 = v47;
  v47(v38, v4);
  v40(v38, v39, v4);
  char v43 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v53 = *(void *)(v2 + 40);
  *(void *)(v2 + 40) = 0x8000000000000000;
  sub_1B67E634C(0, v38, v43);
  *(void *)(v2 + 40) = v53;
  swift_bridgeObjectRelease();
  v42(v38, v4);
  return v21;
}

uint64_t sub_1B68378EC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  switch(a2 >> 61)
  {
    case 0uLL:
      uint64_t v6 = *(void *)(a2 + 16);
      unint64_t v5 = *(void *)(a2 + 24);
      sub_1B66456F8(v5);
      unint64_t v7 = sub_1B68378EC(a1, v5, a3);
      sub_1B6645740(v5);
      if ((~v7 & 0xF000000000000007) != 0)
      {
        uint64_t v8 = swift_allocObject();
        *(void *)(v8 + 16) = v6;
        *(void *)(v8 + 24) = v7;
        return v8 | 0x3000000000000000;
      }
      return v7;
    case 1uLL:
      sub_1B6E32BE8();
      __break(1u);
      JUMPOUT(0x1B6837A38);
    case 2uLL:
      if (!*(void *)(a3 + 16)) {
        goto LABEL_7;
      }
      unint64_t v9 = sub_1B62C1A30(*(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
      if ((v10 & 1) == 0) {
        goto LABEL_7;
      }
      unint64_t v7 = *(void *)(*(void *)(a3 + 56) + 8 * v9);
LABEL_9:
      sub_1B67C52A4(v7);
      break;
    case 3uLL:
      unint64_t v7 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      goto LABEL_9;
    default:
LABEL_7:
      unint64_t v7 = 0xF000000000000007;
      break;
  }
  return v7;
}

void *sub_1B6837A48(int *a1, void *a2, uint64_t a3)
{
  uint64_t v60 = *v3;
  uint64_t v61 = a3;
  uint64_t v7 = type metadata accessor for GraphError();
  MEMORY[0x1F4188790](v7, v8);
  char v10 = (int **)((char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX21AuthoringSubGraphNode_graph);
  uint64_t v12 = (void *)v3[3];
  type metadata accessor for GraphTypeResolver();
  uint64_t v13 = swift_allocObject();
  swift_retain();
  int64_t v14 = v12;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  *(void *)(v13 + 32) = sub_1B67DD4B4(MEMORY[0x1E4FBC860]);
  *(void *)(v13 + 40) = sub_1B67DD6E8(v15);
  *(void *)(v13 + 48) = 0;
  *(unsigned char *)(v13 + 56) = 1;
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = v14;
  uint64_t v16 = a2[2];
  unint64_t v62 = v10;
  if (v16
    && (unint64_t v17 = a2[4],
        sub_1B67C52A4(v17),
        char v18 = sub_1B69B18E4(v17, 0x8000000000000008),
        sub_1B678FC34(v17),
        (v18 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    char v19 = a2;
  }
  else
  {
    uint64_t v63 = &unk_1F0F71370;
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_1B6641CF0(v20);
    char v19 = v63;
  }
  *(void *)(v13 + 48) = v19;
  uint64_t v21 = swift_bridgeObjectRelease();
  uint64_t v22 = (void *)v13;
  uint64_t v23 = sub_1B6836968(v21);
  if (!v4)
  {
    uint64_t v25 = v23;
    uint64_t v59 = (int *)v7;
    uint64_t v65 = 0;
    MEMORY[0x1F4188790](v23, v24);
    v58[-4] = &v65;
    v58[-3] = sub_1B68380DC;
    v58[-2] = 0;
    MEMORY[0x1F4188790](v26, v27);
    v58[-2] = sub_1B683DEF8;
    v58[-1] = v28;
    unint64_t v29 = MEMORY[0x1E4FBC860];
    uint64_t v63 = (void *)sub_1B68C967C(MEMORY[0x1E4FBC860]);
    uint64_t v64 = v30;
    sub_1B68B9930((uint64_t)sub_1B678FEB4, (uint64_t)&v58[-4], 1, 0x1000000000000000uLL, 0, v29, (uint64_t *)&v63);
    swift_bridgeObjectRelease();
    uint64_t v31 = swift_bridgeObjectRelease();
    uint64_t v33 = v59;
    if (v65)
    {
      if (*v65 == _TtC3VFX17SubGraphEnterNode)
      {
        v58[1] = v58;
        uint64_t v65 = 0;
        MEMORY[0x1F4188790](v31, v32);
        v58[-4] = &v65;
        v58[-3] = sub_1B683812C;
        v58[-2] = 0;
        MEMORY[0x1F4188790](v50, v51);
        v58[-2] = sub_1B683DEF8;
        v58[-1] = v52;
        unint64_t v53 = MEMORY[0x1E4FBC860];
        uint64_t v63 = (void *)sub_1B68C967C(MEMORY[0x1E4FBC860]);
        uint64_t v64 = v54;
        sub_1B68B9930((uint64_t)sub_1B683EDD4, (uint64_t)&v58[-4], 1, 0x1000000000000000uLL, 0, v53, (uint64_t *)&v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v33 = v59;
        if (v65)
        {
          if (*v65 == _TtC3VFX18SubGraphReturnNode)
          {
            MEMORY[0x1F4188790](v65, v55);
            uint64_t v56 = v61;
            v58[-6] = v25;
            v58[-5] = v56;
            v58[-4] = a2;
            v58[-3] = v57;
            v58[-2] = v60;
            swift_retain();
            uint64_t v22 = (void *)sub_1B682AB98((void (*)(void))sub_1B683DF4C);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            return v22;
          }
          swift_release();
        }
      }
      swift_release();
    }
    uint64_t v61 = v25;
    sub_1B683DB30();
    uint64_t v34 = (void *)swift_allocError();
    uint64_t v60 = v35;
    uint64_t v36 = (uint64_t)v62;
    *unint64_t v62 = a1;
    uint64_t v37 = v36 + v33[5];
    uint64_t v38 = (uint64_t)a1 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    uint64_t v39 = sub_1B6E31118();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v59 = a1;
    uint64_t v41 = v40;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v39);
    uint64_t v42 = v36 + v33[6];
    *(void *)uint64_t v42 = 1;
    *(unsigned char *)(v42 + 8) = -96;
    char v43 = (void *)(v36 + v33[7]);
    *char v43 = 0xD00000000000002ELL;
    v43[1] = 0x80000001B6F39580;
    sub_1B683DB88(v36, v60);
    uint64_t v44 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
    uint64_t v22 = *(void **)&v14[OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics];
    swift_retain();
    id v45 = v34;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v14[v44] = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v22 = sub_1B68C1084(0, v22[2] + 1, 1, v22);
      *(void *)&v14[v44] = v22;
    }
    unint64_t v48 = v22[2];
    unint64_t v47 = v22[3];
    if (v48 >= v47 >> 1)
    {
      uint64_t v22 = sub_1B68C1084(v47 > 1, v48 + 1, 1, v22);
      *(void *)&v14[v44] = v22;
    }
    void v22[2] = v48 + 1;
    v22[v48 + 4] = v34;
    swift_willThrow();
    swift_release();
  }
  swift_release();
  return v22;
}

BOOL sub_1B68380DC(uint64_t a1)
{
  return !*(void *)(*(void *)(a1 + 16) + 16)
      && **(void **)(a1 + 8) == (void)_TtC3VFX17SubGraphEnterNode;
}

BOOL sub_1B683812C(uint64_t a1)
{
  return !*(void *)(*(void *)(a1 + 16) + 16)
      && **(void **)(a1 + 8) == (void)_TtC3VFX18SubGraphReturnNode;
}

uint64_t sub_1B683817C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)((char *)a1 + OBJC_IVAR____TtC3VFX12SubGraphNode_graph) = a2;
  swift_retain();
  swift_release();
  a1[2] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a5 + 24);
  uint64_t v10 = a1[3];
  a1[3] = a4;
  a1[4] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1B678FE58(v10);
}

uint64_t sub_1B6838220(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1B683DD4C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v11 = (char *)v26 - v10;
  uint64_t v12 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a2 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) + 16 * a1 + 32)
                  + OBJC_IVAR____TtC3VFX13AuthoringNode_raw);
  swift_retain();
  uint64_t v14 = sub_1B68378EC(0, a4, a3);
  unint64_t v15 = v14;
  if ((~v14 & 0xF000000000000007) != 0) {
    unint64_t v16 = v14;
  }
  else {
    unint64_t v16 = 0x8000000000000050;
  }
  sub_1B62CAAD8(v13 + OBJC_IVAR____TtC3VFX12ConstantNode_holder + 8, (uint64_t)&v27);
  sub_1B6827B54(v15);
  swift_dynamicCast();
  sub_1B69AFB0C(v16, (uint64_t)v29, v26[0]);
  sub_1B62CAAD8((uint64_t)v29, (uint64_t)&v28);
  unint64_t v27 = v16;
  type metadata accessor for ImplicitConstantNode(0);
  unint64_t v17 = (void *)swift_allocObject();
  sub_1B66506CC((uint64_t)&v27, (uint64_t)v26);
  uint64_t v18 = OBJC_IVAR____TtC3VFX12ConstantNode_semantic;
  sub_1B66506CC((uint64_t)v26, (uint64_t)v17 + OBJC_IVAR____TtC3VFX12ConstantNode_holder);
  *(_OWORD *)((char *)v17 + v18) = xmmword_1B6E50D30;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  void v17[2] = MEMORY[0x1E4FBC860];
  v17[3] = 0;
  void v17[4] = 0;
  sub_1B6E31108();
  sub_1B6650728((uint64_t)v26);
  sub_1B6650728((uint64_t)&v27);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v29);
  uint64_t v20 = sub_1B6E31118();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 1, 1, v20);
  type metadata accessor for AuthoringNode();
  swift_allocObject();
  uint64_t v21 = sub_1B6CE3580((uint64_t)v17, v19, (uint64_t)v11, 0, 0xF000000000000000);
  swift_release();
  uint64_t v22 = *(void **)(a2 + v12);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + v12) = v22;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v22 = sub_1B6C16864(v22);
    *(void *)(a2 + v12) = v22;
  }
  uint64_t v24 = &v22[2 * a1];
  v24[4] = v21;
  v24[5] = 0;
  swift_release();
  swift_release();
  sub_1B6827B68(v15);
  return swift_release();
}

uint64_t sub_1B683850C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v12)(void *__return_ptr, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  void *v43;
  uint64_t inited;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v52;
  void v54[2];
  uint64_t v55;
  unint64_t v56;
  long long v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void v66[6];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  uint64_t v4 = v3;
  uint64_t v60 = a3;
  sub_1B683DD4C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  double v9 = MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v58 = (char *)v54 - v10;
  uint64_t v11 = (*(uint64_t (**)(uint64_t, double))(*(void *)a1 + 200))(1, v9);
  uint64_t v12 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v11
                                                                           + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                             + 152);
  uint64_t v13 = swift_retain();
  v12(v66, v13);
  swift_release();
  uint64_t v14 = v66[0];
  uint64_t v72 = v66[0];
  uint64_t v71 = v66[1];
  sub_1B62D8C3C((uint64_t)&v71);
  long long v70 = v66[2];
  sub_1B62D8C3C((uint64_t)&v70);
  int64_t v69 = v66[3];
  sub_1B62D8C3C((uint64_t)&v69);
  uint64_t v68 = v66[4];
  sub_1B62D8C3C((uint64_t)&v68);
  unint64_t v67 = v66[5];
  sub_1B62D8C3C((uint64_t)&v67);
  unint64_t v15 = *(void *)(v14 + 16);
  if (!v15 || (uint64_t v61 = *(void *)(a2 + 16)) == 0)
  {
    sub_1B62D8C3C((uint64_t)&v72);
    swift_release();
    return 0;
  }
  v54[1] = v4;
  unint64_t v16 = *(void *)(v14 + 32);
  uint64_t v65 = a2 + 32;
  uint64_t v59 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
  v54[0] = a2;
  swift_bridgeObjectRetain();
  unint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v64 = v15 - 1;
  uint64_t v63 = v14 + 40;
  uint64_t v19 = 4;
  uint64_t v57 = xmmword_1B6E77050;
  unint64_t v62 = v11;
  uint64_t v20 = v60;
  uint64_t v21 = v61;
  while (1)
  {
    uint64_t v22 = *(void *)(v65 + 8 * v18);
    sub_1B66456F8(v16);
    sub_1B67C52A4(v22);
    if (sub_1B69B18E4(v22, 0x8000000000000060))
    {
      sub_1B6838220(v18, v11, v20, v16);
      sub_1B678FC34(v22);
      sub_1B6645740(v16);
      if (v64 == v18) {
        goto LABEL_32;
      }
      goto LABEL_5;
    }
    if (v16 >> 61 == 2) {
      break;
    }
    if (sub_1B69739C0(v22, v16)) {
      goto LABEL_18;
    }
    if (v16 >> 61 == 3)
    {
      uint64_t v26 = *(void *)((v16 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1B67C52A4(v26);
    }
    else
    {
      uint64_t v26 = 0xF000000000000007;
    }
    uint64_t v40 = v59;
    uint64_t v41 = (uint64_t *)(*(void *)(v11 + v59) + v19 * 8);
    uint64_t v42 = *v41;
    uint64_t v55 = v41[1];
    type metadata accessor for AutoCastNode(0);
    char v43 = (void *)swift_allocObject();
    *(void *)((char *)v43 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v22;
    *(void *)((char *)v43 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v26;
    uint64_t v43[2] = MEMORY[0x1E4FBC860];
    v43[3] = 0;
    v43[4] = 0;
    sub_1B67C52A4(v22);
    swift_retain();
    uint64_t v56 = v26;
    sub_1B6827B54(v26);
    sub_1B6E31108();
    sub_1B683DD4C(0, (unint64_t *)&qword_1E9DD1FC0, (uint64_t (*)(uint64_t))sub_1B683DDB0, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v57;
    id v45 = v55;
    *(void *)(inited + 32) = v42;
    *(void *)(inited + 40) = v45;
    uint64_t v46 = sub_1B6E31118();
    unint64_t v47 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v58, 1, 1, v46);
    type metadata accessor for AuthoringNode();
    swift_allocObject();
    swift_retain();
    unint64_t v48 = sub_1B6CE3580((uint64_t)v43, inited, v47, 0, 0xF000000000000000);
    swift_release();
    unint64_t v49 = v62;
    uint64_t v50 = *(void **)(v62 + v40);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v49 + v40) = v50;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v50 = sub_1B6C16864(v50);
      *(void *)(v62 + v59) = v50;
    }
    uint64_t v20 = v60;
    uint64_t v21 = v61;
    uint64_t v52 = &v50[v19];
    *uint64_t v52 = v48;
    v52[1] = 0;
    swift_release();
    swift_release();
    swift_release();
    sub_1B6827B68(v56);
    sub_1B6645740(v16);
    sub_1B678FC34(v22);
    uint64_t v11 = v62;
    if (v64 == v18)
    {
LABEL_32:
      sub_1B62D8C3C((uint64_t)&v72);
      swift_bridgeObjectRelease();
      return v11;
    }
LABEL_5:
    unint64_t v17 = 1;
LABEL_6:
    unint64_t v16 = *(void *)(v63 + 8 * v18);
    v19 += 2;
    if (v21 == ++v18) {
      goto LABEL_30;
    }
  }
  if (*(void *)(v20 + 16) && (uint64_t v23 = sub_1B62C1A30(*(void *)((v16 & 0x1FFFFFFFFFFFFFFFLL) + 0x10)), (v24 & 1) != 0))
  {
    uint64_t v25 = *(void *)(*(void *)(v20 + 56) + 8 * v23);
    sub_1B67C52A4(v25);
  }
  else
  {
    uint64_t v25 = 0xF000000000000007;
  }
  if ((sub_1B69B18E4(v25, v22) & 1) == 0)
  {
    unint64_t v27 = (unint64_t *)(*(void *)(v11 + v59) + v19 * 8);
    unint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    type metadata accessor for AutoCastNode(0);
    uint64_t v30 = (void *)swift_allocObject();
    *(void *)((char *)v30 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v22;
    *(void *)((char *)v30 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v25;
    v30[2] = MEMORY[0x1E4FBC860];
    v30[3] = 0;
    _OWORD v30[4] = 0;
    sub_1B67C52A4(v22);
    swift_retain();
    sub_1B6827B54(v25);
    sub_1B6E31108();
    sub_1B683DD4C(0, (unint64_t *)&qword_1E9DD1FC0, (uint64_t (*)(uint64_t))sub_1B683DDB0, MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_initStackObject();
    *(_OWORD *)(v31 + 16) = v57;
    *(void *)(v31 + 32) = v29;
    *(void *)(v31 + 40) = v28;
    uint64_t v32 = sub_1B6E31118();
    uint64_t v33 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v58, 1, 1, v32);
    type metadata accessor for AuthoringNode();
    swift_allocObject();
    uint64_t v56 = v29;
    swift_retain();
    uint64_t v34 = sub_1B6CE3580((uint64_t)v30, v31, v33, 0, 0xF000000000000000);
    swift_release();
    uint64_t v35 = v59;
    uint64_t v36 = v62;
    uint64_t v37 = *(void **)(v62 + v59);
    swift_retain();
    uint64_t v38 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v36 + v35) = v37;
    if ((v38 & 1) == 0)
    {
      uint64_t v37 = sub_1B6C16864(v37);
      *(void *)(v62 + v59) = v37;
    }
    uint64_t v20 = v60;
    uint64_t v39 = &v37[v19];
    *uint64_t v39 = v34;
    v39[1] = 0;
    swift_release();
    swift_release();
    swift_release();
    sub_1B6827B68(v25);
    sub_1B678FC34(v22);
    sub_1B6645740(v16);
    uint64_t v11 = v62;
    uint64_t v21 = v61;
    if (v64 == v18) {
      goto LABEL_32;
    }
    goto LABEL_5;
  }
  sub_1B6827B68(v25);
  uint64_t v21 = v61;
LABEL_18:
  sub_1B678FC34(v22);
  sub_1B6645740(v16);
  if (v64 != v18) {
    goto LABEL_6;
  }
LABEL_30:
  sub_1B62D8C3C((uint64_t)&v72);
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    swift_release();
    return 0;
  }
  return v11;
}

uint64_t sub_1B6838D68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  void (*v77)(void *__return_ptr);
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  id v99;
  char v100;
  unint64_t v101;
  unint64_t v102;
  id v103;
  uint64_t v104;
  void *v105;
  int *v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  id v119;
  uint64_t v120;
  unint64_t v121;
  void v122[3];
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void v126[3];
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void v130[3];
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void v134[3];
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;

  uint64_t v6 = v5;
  LODWORD(v111) = a3;
  uint64_t v10 = type metadata accessor for GraphError();
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1B67F5CEC(MEMORY[0x1E4FBC860]);
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15 || (long long v114 = *(void *)(a2 + 16)) == 0)
  {
LABEL_33:
    uint64_t v46 = sub_1B683CFF4((uint64_t)v14);
    swift_bridgeObjectRelease();
    return (uint64_t)v46;
  }
  long long v109 = a4;
  char v110 = v6;
  uint64_t v106 = (int *)v10;
  uint64_t v107 = v13;
  long long v108 = v4;
  unint64_t v16 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  unint64_t v18 = v15 - 1;
  uint64_t v112 = a2;
  uint64_t v113 = a1;
  uint64_t v19 = v114;
  uint64_t v115 = v15 - 1;
  while (1)
  {
    unint64_t v20 = *(void *)(a2 + 8 * v17 + 32);
    sub_1B66456F8(v20);
    sub_1B67C52A4(v16);
    sub_1B6973788(v20);
    if ((v21 & 1) == 0)
    {
      long long v119 = (id)sub_1B6973788(v20);
      if ((sub_1B69B18E4(v16, 0x8000000000000060) & 1) == 0) {
        break;
      }
    }
    sub_1B6645740(v20);
    sub_1B678FC34(v16);
    if (v18 == v17) {
      goto LABEL_32;
    }
LABEL_31:
    unint64_t v16 = *(void *)(a1 + 8 * v17++ + 40);
    if (v19 == v17)
    {
LABEL_32:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
  }
  if ((sub_1B69739C0(v16, v20) & 1) == 0)
  {
    int64_t v105 = v14;
    long long v119 = (id)sub_1B69741B0((uint64_t)v119);
    (*(void (**)(void *__return_ptr))(**(void **)(v109 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) + 152))(v134);
    long long v161 = v135;
    sub_1B682BB90(v17, v135);
    uint64_t v160 = v134[0];
    sub_1B62D8C3C((uint64_t)&v160);
    uint64_t v159 = v134[1];
    sub_1B62D8C3C((uint64_t)&v159);
    int v158 = v134[2];
    sub_1B62D8C3C((uint64_t)&v158);
    sub_1B62D8C3C((uint64_t)&v161);
    uint64_t v157 = v136;
    sub_1B62D8C3C((uint64_t)&v157);
    uint64_t v156 = v137;
    sub_1B62D8C3C((uint64_t)&v156);
    long long v120 = 0;
    long long v121 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    long long v120 = 0x207475706E49;
    long long v121 = 0xE600000000000000;
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B69B0F8C(v16);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    sub_1B6973818(v20);
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    long long v117 = v121;
    long long v118 = v120;
    sub_1B683DB30();
    unint64_t v48 = v106;
    long long v119 = (id)swift_allocError();
    long long v116 = v49;
    uint64_t v50 = (uint64_t)v107;
    uint64_t v51 = v109;
    *uint64_t v107 = v109;
    uint64_t v52 = v50 + v48[5];
    uint64_t v115 = v51 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    uint64_t v53 = sub_1B6E31118();
    uint64_t v54 = *(void *)(v53 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v54 + 16))(v52, v115, v53);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v52, 0, 1, v53);
    uint64_t v55 = v50 + v48[6];
    *(void *)uint64_t v55 = v17;
    *(unsigned char *)(v55 + 8) = 32;
    uint64_t v56 = (void *)(v50 + v48[7]);
    uint64_t v57 = v116;
    uint64_t v58 = v117;
    void *v56 = v118;
    v56[1] = v58;
    sub_1B683DB88(v50, v57);
    uint64_t v59 = *(void *)(v108 + 24);
    uint64_t v60 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
    uint64_t v61 = *(void **)(v59 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
    swift_retain();
    id v62 = v119;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v59 + v60) = v61;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v61 = sub_1B68C1084(0, v61[2] + 1, 1, v61);
      *(void *)(v59 + v60) = v61;
    }
    unint64_t v65 = v61[2];
    unint64_t v64 = v61[3];
    if (v65 >= v64 >> 1)
    {
      uint64_t v61 = sub_1B68C1084(v64 > 1, v65 + 1, 1, v61);
      *(void *)(v59 + v60) = v61;
    }
    v61[2] = v65 + 1;
    uint64_t v66 = &v61[v65];
    id v67 = v119;
    v66[4] = v119;
    swift_willThrow();
    id v68 = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B6645740(v20);
    sub_1B678FC34(v16);
    int64_t v69 = v67;
    goto LABEL_50;
  }
  sub_1B6973D74(v16, v20);
  unint64_t v23 = v22;
  uint64_t v24 = v14[2];
  long long v118 = v22;
  if (v24)
  {
    unint64_t v25 = sub_1B62C1A30((uint64_t)v119);
    unint64_t v23 = v118;
    if (v26)
    {
      unint64_t v27 = (uint64_t *)(v14[7] + 16 * v25);
      unint64_t v28 = v27[1];
      long long v117 = *v27;
      sub_1B67C52A4(v28);
      sub_1B67C52A4(v28);
      if (sub_1B69B18E4(v23, v28))
      {
        sub_1B678FC34(v28);
        sub_1B678FC34(v23);
        sub_1B6645740(v20);
        sub_1B678FC34(v16);
        unint64_t v29 = v28;
      }
      else
      {
        long long v116 = v28;
        if ((v111 & 1) == 0)
        {
          sub_1B678FC34(v116);
          uint64_t v70 = (uint64_t)v119;
          long long v117 = sub_1B69741B0((uint64_t)v119);
          uint64_t v71 = v14[2];
          int64_t v105 = v14;
          if (v71 && (unint64_t v72 = sub_1B62C1A30(v70), (v73 & 1) != 0))
          {
            long long v74 = (uint64_t *)(v14[7] + 16 * v72);
            uint64_t v75 = *v74;
            unint64_t v76 = v74[1];
            sub_1B67C52A4(v76);
          }
          else
          {
            uint64_t v75 = 0;
            unint64_t v76 = 0xF000000000000007;
          }
          long long v119 = (id)sub_1B69B0F8C(v76);
          uint64_t v115 = v85;
          uint64_t v86 = sub_1B683DE78(v75, v76);
          uint64_t v87 = v109;
          (*(void (**)(void *__return_ptr, unint64_t))(**(void **)(v109
                                                                                       + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                                         + 152))(v122, v86);
          int v155 = v123;
          sub_1B682BB90(v17, v123);
          uint64_t v154 = v122[0];
          sub_1B62D8C3C((uint64_t)&v154);
          uint64_t v153 = v122[1];
          sub_1B62D8C3C((uint64_t)&v153);
          unint64_t v152 = v122[2];
          sub_1B62D8C3C((uint64_t)&v152);
          sub_1B62D8C3C((uint64_t)&v155);
          float32x4_t v151 = v124;
          sub_1B62D8C3C((uint64_t)&v151);
          long long v150 = v125;
          sub_1B62D8C3C((uint64_t)&v150);
          long long v120 = 0;
          long long v121 = 0xE000000000000000;
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          long long v120 = 0x207475706E49;
          long long v121 = 0xE600000000000000;
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B69B0F8C(v16);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          long long v117 = v120;
          uint64_t v115 = v121;
          sub_1B683DB30();
          uint64_t v79 = v106;
          long long v119 = (id)swift_allocError();
          long long v114 = v88;
          uint64_t v81 = (uint64_t)v107;
          *uint64_t v107 = v87;
          uint64_t v83 = v81 + v79[5];
          uint64_t v84 = v87 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
LABEL_45:
          char v111 = v84;
          uint64_t v89 = sub_1B6E31118();
          unint64_t v90 = *(void *)(v89 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16))(v83, v111, v89);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v90 + 56))(v83, 0, 1, v89);
          uint64_t v91 = v81 + v79[6];
          *(void *)uint64_t v91 = v17;
          *(unsigned char *)(v91 + 8) = 32;
          uint64_t v92 = (unint64_t *)(v81 + v79[7]);
          uint64_t v93 = v114;
          uint64_t v94 = v115;
          *uint64_t v92 = v117;
          v92[1] = v94;
          sub_1B683DB88(v81, v93);
          uint64_t v95 = *(void *)(v108 + 24);
          uint64_t v96 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
          uint64_t v97 = *(void **)(v95 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
          swift_retain();
          uint64_t v98 = v119;
          unint64_t v99 = v119;
          uint64_t v100 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v95 + v96) = v97;
          if ((v100 & 1) == 0)
          {
            uint64_t v97 = sub_1B68C1084(0, v97[2] + 1, 1, v97);
            *(void *)(v95 + v96) = v97;
          }
          uint64_t v102 = v97[2];
          uint64_t v101 = v97[3];
          if (v102 >= v101 >> 1)
          {
            uint64_t v97 = sub_1B68C1084(v101 > 1, v102 + 1, 1, v97);
            *(void *)(v95 + v96) = v97;
          }
          v97[2] = v102 + 1;
          v97[v102 + 4] = v98;
          swift_willThrow();
          uint64_t v103 = v98;
          sub_1B6645740(v20);
          sub_1B678FC34(v16);
          sub_1B678FC34(v118);
          sub_1B678FC34(v116);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int64_t v69 = v98;
LABEL_50:

          return swift_bridgeObjectRelease();
        }
        type metadata accessor for CastNode(0);
        unint64_t v43 = v116;
        if (sub_1B6B2A48C(v23, v116) != 1)
        {
          int64_t v105 = v14;
          uint64_t v77 = *(void (**)(void *__return_ptr))(**(void **)(v109
                                                                          + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                            + 152);
          v77(v126);
          uint64_t v149 = v127;
          long long v119 = (id)sub_1B682BB90(v17, v127);
          uint64_t v148 = v126[0];
          sub_1B62D8C3C((uint64_t)&v148);
          uint64_t v147 = v126[1];
          sub_1B62D8C3C((uint64_t)&v147);
          long long v146 = v126[2];
          sub_1B62D8C3C((uint64_t)&v146);
          sub_1B62D8C3C((uint64_t)&v149);
          long long v145 = v128;
          sub_1B62D8C3C((uint64_t)&v145);
          long long v144 = v129;
          uint64_t v78 = sub_1B62D8C3C((uint64_t)&v144);
          ((void (*)(void *__return_ptr, uint64_t))v77)(v130, v78);
          uint64_t v143 = v131;
          long long v117 = sub_1B682BB90(v117, v131);
          unint64_t v142 = v130[0];
          sub_1B62D8C3C((uint64_t)&v142);
          unint64_t v141 = v130[1];
          sub_1B62D8C3C((uint64_t)&v141);
          uint64_t v140 = v130[2];
          sub_1B62D8C3C((uint64_t)&v140);
          sub_1B62D8C3C((uint64_t)&v143);
          unint64_t v139 = v132;
          sub_1B62D8C3C((uint64_t)&v139);
          uint64_t v138 = v133;
          sub_1B62D8C3C((uint64_t)&v138);
          long long v120 = 0;
          long long v121 = 0xE000000000000000;
          sub_1B6E328C8();
          swift_bridgeObjectRelease();
          long long v120 = 0x207475706E49;
          long long v121 = 0xE600000000000000;
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B69B0F8C(v118);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          sub_1B69B0F8C(v43);
          sub_1B678FC34(v43);
          sub_1B6E31948();
          swift_bridgeObjectRelease();
          sub_1B6E31948();
          long long v117 = v120;
          uint64_t v115 = v121;
          sub_1B683DB30();
          uint64_t v79 = v106;
          long long v119 = (id)swift_allocError();
          long long v114 = v80;
          uint64_t v81 = (uint64_t)v107;
          uint64_t v82 = v109;
          *uint64_t v107 = v109;
          uint64_t v83 = v81 + v79[5];
          uint64_t v84 = v82 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
          goto LABEL_45;
        }
        if (sub_1B6B28ABC(v118, v43))
        {
          sub_1B678FC34(v43);
        }
        else
        {
          BOOL v44 = sub_1B6B28ABC(v43, v118);
          sub_1B678FC34(v43);
          if (v44)
          {
            sub_1B678FC34(v43);
            unint64_t v43 = v118;
            sub_1B67C52A4(v118);
            long long v117 = v17;
          }
        }
        sub_1B67C52A4(v43);
        char v45 = swift_isUniquelyReferenced_nonNull_native();
        long long v120 = (uint64_t)v14;
        sub_1B67E669C(v117, v43, (uint64_t)v119, v45);
        uint64_t v14 = (void *)v120;
        swift_bridgeObjectRelease();
        sub_1B678FC34(v43);
        sub_1B678FC34(v118);
        sub_1B6645740(v20);
        unint64_t v29 = v16;
      }
      sub_1B678FC34(v29);
      uint64_t v19 = v114;
      goto LABEL_30;
    }
  }
  long long v116 = v16;
  long long v117 = v20;
  sub_1B67C52A4(v23);
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  long long v120 = (uint64_t)v14;
  uint64_t v31 = (uint64_t)v119;
  unint64_t v32 = sub_1B62C1A30((uint64_t)v119);
  char v34 = v33;
  uint64_t v35 = v14[2] + ((v33 & 1) == 0);
  if (v14[3] >= v35)
  {
    if ((v30 & 1) == 0) {
      sub_1B6AD0FCC();
    }
    goto LABEL_18;
  }
  sub_1B6ABEE88(v35, v30);
  unint64_t v36 = sub_1B62C1A30(v31);
  if ((v34 & 1) == (v37 & 1))
  {
    unint64_t v32 = v36;
LABEL_18:
    a2 = v112;
    unint64_t v38 = v116;
    uint64_t v14 = (void *)v120;
    if (v34)
    {
      uint64_t v39 = (uint64_t *)(*(void *)(v120 + 56) + 16 * v32);
      sub_1B678FC34(v39[1]);
      unint64_t v40 = v118;
      *uint64_t v39 = v17;
      v39[1] = v40;
      unint64_t v41 = v40;
    }
    else
    {
      *(void *)(v120 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      unint64_t v41 = v118;
      *(void *)(v14[6] + 8 * v32) = v119;
      uint64_t v42 = (uint64_t *)(v14[7] + 16 * v32);
      *uint64_t v42 = v17;
      v42[1] = v41;
      ++v14[2];
    }
    swift_bridgeObjectRelease();
    sub_1B678FC34(v41);
    sub_1B6645740(v117);
    sub_1B678FC34(v38);
    a1 = v113;
LABEL_30:
    unint64_t v18 = v115;
    if (v115 == v17) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B6839BC0(uint64_t a1, uint64_t a2)
{
  void (*v19)(void *__return_ptr, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void (**v26)(void);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  char *v33;
  void *v34;
  uint64_t inited;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  void (*v41)(void);
  uint64_t v42;
  void (*v43)(void);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  char isUniquelyReferenced_nonNull_native;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  char *v57;
  long long v58;
  uint64_t v59;
  long long v60;
  uint64_t v61;
  void (**v62)(char *, uint64_t (*)(uint64_t), uint64_t);
  uint64_t (**v63)(uint64_t, uint64_t, uint64_t);
  void (**v64)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v65;
  long long v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void v74[6];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  uint64_t v5 = sub_1B6E31118();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  double v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B683DD4C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8, v11);
  double v16 = MEMORY[0x1F4188790](v12, v13);
  uint64_t result = 0;
  if (*(unsigned char *)(v2 + 56) == 1)
  {
    uint64_t v71 = (uint64_t)&v52 - v14;
    int64_t v69 = v15;
    uint64_t v18 = (*(uint64_t (**)(uint64_t, double))(*(void *)a1 + 200))(1, v16);
    uint64_t v19 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v18
                                                                             + OBJC_IVAR____TtC3VFX13AuthoringNode_raw)
                                                               + 152);
    unint64_t v20 = swift_retain();
    v19(v74, v20);
    swift_release();
    char v21 = v74[0];
    uint64_t v79 = v74[1];
    long long v80 = v74[0];
    sub_1B62D8C3C((uint64_t)&v79);
    uint64_t v78 = v74[2];
    sub_1B62D8C3C((uint64_t)&v78);
    uint64_t v77 = v74[3];
    sub_1B62D8C3C((uint64_t)&v77);
    unint64_t v76 = v74[4];
    sub_1B62D8C3C((uint64_t)&v76);
    uint64_t v75 = v74[5];
    sub_1B62D8C3C((uint64_t)&v75);
    unint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      unint64_t v72 = v18;
      unint64_t v65 = v9;
      uint64_t v70 = v5;
      unint64_t v23 = 0;
      uint64_t v24 = 0;
      id v67 = 0;
      id v68 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
      unint64_t v25 = v21 + 32;
      char v73 = a2 + 32;
      unint64_t v64 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      uint64_t v63 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      char v26 = (void (**)(void))(v6 + 32);
      id v62 = (void (**)(char *, uint64_t (*)(uint64_t), uint64_t))(v6 + 24);
      uint64_t v61 = v22 - 1;
      uint64_t v60 = xmmword_1B6E77050;
      uint64_t v66 = xmmword_1B6E8B000;
LABEL_4:
      unint64_t v27 = 2 * v24;
      unint64_t v28 = v24;
      do
      {
        unint64_t v29 = *(void *)(v25 + 8 * v28);
        if (v29 >> 61 == 3)
        {
          char v30 = *(void *)(v73 + 8 * v28);
          uint64_t v31 = *(void *)((v29 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          sub_1B66456F8(*(void *)(v25 + 8 * v28));
          sub_1B67C52A4(v30);
          sub_1B67C52A4(v31);
          if ((sub_1B69B23C4(v30, v31) & 1) == 0)
          {
            type metadata accessor for CastNode(0);
            if (sub_1B6B2A48C(v30, v31) == 1)
            {
              type metadata accessor for AutoCastNode(0);
              unint64_t v32 = (void *)swift_allocObject();
              *(void *)((char *)v32 + OBJC_IVAR____TtC3VFX8CastNode_srcType) = v30;
              *(void *)((char *)v32 + OBJC_IVAR____TtC3VFX8CastNode_dstType) = v31;
              v32[2] = MEMORY[0x1E4FBC860];
              _OWORD v32[3] = 0;
              v32[4] = 0;
              char v33 = (char *)v32 + OBJC_IVAR____TtC3VFX4Node_authoringID;
              char v34 = v32;
              sub_1B67C52A4(v30);
              sub_1B67C52A4(v31);
              uint64_t v57 = v33;
              sub_1B6E31108();
              sub_1B683DD4C(0, (unint64_t *)&qword_1E9DD1FC0, (uint64_t (*)(uint64_t))sub_1B683DDB0, MEMORY[0x1E4FBBE00]);
              uint64_t inited = swift_initStackObject();
              uint64_t v56 = inited;
              *(_OWORD *)(inited + 16) = v60;
              uint64_t v58 = *(_OWORD *)(*(void *)(v72 + v68) + 16 * v28 + 32);
              *(_OWORD *)(inited + 32) = v58;
              (*v64)(v71, 1, 1, v70);
              type metadata accessor for AuthoringNode();
              unint64_t v36 = swift_allocObject();
              uint64_t v59 = v36;
              *(_OWORD *)(v36 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData) = v66;
              *(void *)(v36 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) = v34;
              uint64_t v55 = (uint64_t (*)(uint64_t))swift_allocObject();
              uint64_t v53 = *(void *)((char *)v34 + OBJC_IVAR____TtC3VFX8CastNode_srcType);
              *((void *)v55 + 2) = v53;
              uint64_t v54 = swift_allocObject();
              char v37 = *(void *)((char *)v34 + OBJC_IVAR____TtC3VFX8CastNode_dstType);
              *(void *)(v54 + 16) = v37;
              swift_retain();
              *(void *)&uint64_t v58 = v34;
              swift_retain();
              sub_1B67C52A4(v53);
              sub_1B67C52A4(v37);
              swift_release();
              swift_release();
              unint64_t v38 = v67;
              uint64_t v55 = (uint64_t (*)(uint64_t))sub_1B68C98A4(0, 1, v56);
              id v67 = v38;
              swift_bridgeObjectRelease();
              *(void *)(v59 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs) = v55;
              uint64_t v39 = v69;
              sub_1B678FED0(v71, v69);
              unint64_t v40 = (*v63)(v39, 1, v70);
              uint64_t v56 = (unint64_t)v26 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
              if (v40 == 1)
              {
                sub_1B6E31108();
                uint64_t v55 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
                sub_1B683DE08(v71, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990]);
                sub_1B683DE08(v39, (unint64_t *)&qword_1EB97D9C0, v55);
                unint64_t v41 = *v26;
              }
              else
              {
                sub_1B683DE08(v71, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990]);
                uint64_t v42 = v39;
                unint64_t v43 = *v26;
                ((void (*)(char *, uint64_t, uint64_t))*v26)(v65, v42, v70);
                unint64_t v41 = v43;
              }
              BOOL v44 = v59;
              uint64_t v55 = (uint64_t (*)(uint64_t))(v59 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID);
              char v45 = v70;
              v41();
              uint64_t v46 = *(void *)(v44 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData);
              unint64_t v47 = *(void *)(v44 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData + 8);
              *(_OWORD *)(v44 + OBJC_IVAR____TtC3VFX13AuthoringNode_userInfoData) = v66;
              sub_1B665D488(v46, v47);
              (*v62)(v57, v55, v45);
              swift_release();
              unint64_t v48 = v68;
              unint64_t v49 = *(void **)(v72 + v68);
              swift_retain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v72 + v48) = v49;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v49 = sub_1B6C16864(v49);
                *(void *)(v72 + v68) = v49;
              }
              uint64_t v51 = &v49[v27];
              uint64_t v24 = v28 + 1;
              v51[4] = v59;
              v51[5] = 0;
              swift_release();
              sub_1B678FC34(v30);
              sub_1B678FC34(v31);
              swift_release();
              sub_1B6645740(v29);
              unint64_t v23 = 1;
              if (v61 == v28)
              {
                sub_1B62D8C3C((uint64_t)&v80);
                return v72;
              }
              goto LABEL_4;
            }
          }
          sub_1B678FC34(v31);
          sub_1B678FC34(v30);
          sub_1B6645740(v29);
        }
        ++v28;
        v27 += 2;
      }
      while (v22 != v28);
      sub_1B62D8C3C((uint64_t)&v80);
      if ((v23 & 1) == 0) {
        goto LABEL_20;
      }
      return v72;
    }
    else
    {
      sub_1B62D8C3C((uint64_t)&v80);
LABEL_20:
      swift_release();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B683A45C(__objc2_class **a1)
{
  uint64_t v3 = v1;
  unint64_t v129 = *v1;
  sub_1B683DD4C(0, &qword_1E9DD13C8, (uint64_t (*)(uint64_t))type metadata accessor for GraphError, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = (uint64_t *)((char *)&v118 - v7);
  uint64_t v9 = type metadata accessor for GraphError();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  unint64_t v130 = (__objc2_class ***)((char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13, v14);
  double v16 = (char *)&v118 - v15;
  uint64_t v17 = (uint64_t *)type metadata accessor for AuthoringGraph();
  sub_1B6C49948((uint64_t)a1, v8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    sub_1B683DB88((uint64_t)v8, (uint64_t)v16);
    sub_1B683DB30();
    swift_allocError();
    sub_1B683DC54((uint64_t)v16, v25);
    swift_willThrow();
    sub_1B683DCB8((uint64_t)v16);
    return v17;
  }
  uint64_t v128 = (int *)v9;
  uint64_t v18 = sub_1B683DE08((uint64_t)v8, &qword_1E9DD13C8, (uint64_t (*)(uint64_t))type metadata accessor for GraphError);
  uint64_t v19 = (uint64_t)v3;
  unint64_t v20 = *(__objc2_class ***)((char *)a1 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw);
  info = (*v20)[3].info;
  uint64_t p_info = (uint64_t)&(*v20)[3].info;
  ((void (*)(uint64_t *__return_ptr, uint64_t))info)(&v133, v18);
  uint64_t v17 = (uint64_t *)v19;
  unint64_t v23 = sub_1B6836F64((uint64_t)a1);
  if (!v2)
  {
    uint64_t v125 = p_info;
    p_CMTimeFlags flags = &info->flags;
    uint64_t v127 = v20;
    MEMORY[0x1F4188790](v23, v24);
    *(&v118 - 4) = (uint64_t)&v133;
    *(&v118 - 3) = v19;
    *(&v118 - 2) = (uint64_t)a1;
    uint64_t v27 = v26;
    uint64_t v28 = swift_bridgeObjectRetain();
    char v30 = (void *)sub_1B683D530(v28, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B683DB10);
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_1B6839BC0((uint64_t)a1, (uint64_t)v30);
    if (v31)
    {
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      uint64_t v148 = v133;
      sub_1B62D8C3C((uint64_t)&v148);
      uint64_t v147 = v134;
      sub_1B62D8C3C((uint64_t)&v147);
      uint64_t v146 = v135;
      sub_1B62D8C3C((uint64_t)&v146);
      uint64_t v145 = v136;
      sub_1B62D8C3C((uint64_t)&v145);
      uint64_t v144 = v137;
      sub_1B62D8C3C((uint64_t)&v144);
      uint64_t v143 = v138;
      sub_1B62D8C3C((uint64_t)&v143);
      swift_bridgeObjectRelease();
      uint64_t v33 = v32;
LABEL_24:
      uint64_t v17 = (uint64_t *)sub_1B683A45C(v33);
      swift_release();
      return v17;
    }
    uint64_t v118 = v27;
    long long v119 = a1;
    uint64_t v34 = v133;
    uint64_t v35 = v30[2];
    uint64_t v124 = v30;
    if (v35 && *(void *)(v133 + 16))
    {
      uint64_t v36 = *(void *)(v133 + 16);
      unint64_t v37 = v30[4];
      uint64_t v123 = v133 + 32;
      uint64_t v38 = v133;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v39 = 0;
      long long v121 = v30 + 5;
      uint64_t v122 = v35 - 1;
      uint64_t v120 = v19;
      while (1)
      {
        unint64_t v40 = *(void *)(v123 + 8 * v39);
        sub_1B67C52A4(v37);
        sub_1B66456F8(v40);
        if ((sub_1B69739C0(v37, v40) & 1) == 0)
        {
          BOOL v41 = *(unsigned char *)(v19 + 56) == 1 && (v40 & 0xE000000000000000) == 0x6000000000000000;
          if (!v41) {
            break;
          }
          unint64_t v42 = *(void *)((v40 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          type metadata accessor for CastNode(0);
          uint64_t v43 = v39;
          unint64_t v44 = v40;
          sub_1B67C52A4(v42);
          int v45 = sub_1B6B2A48C(v37, v42);
          unint64_t v46 = v42;
          char v30 = v124;
          sub_1B678FC34(v46);
          BOOL v41 = v45 == 1;
          unint64_t v40 = v44;
          uint64_t v39 = v43;
          uint64_t v19 = v120;
          if (!v41) {
            break;
          }
        }
        sub_1B6645740(v40);
        sub_1B678FC34(v37);
        if (v122 != v39)
        {
          unint64_t v37 = v121[v39++];
          if (v36 != v39) {
            continue;
          }
        }
        uint64_t v34 = v38;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      uint64_t v123 = v38;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v188 = v134;
      sub_1B62D8C3C((uint64_t)&v188);
      uint64_t v187 = v135;
      sub_1B62D8C3C((uint64_t)&v187);
      uint64_t v186 = v136;
      sub_1B62D8C3C((uint64_t)&v186);
      uint64_t v185 = v137;
      sub_1B62D8C3C((uint64_t)&v185);
      uint64_t v184 = v138;
      sub_1B62D8C3C((uint64_t)&v184);
      swift_bridgeObjectRelease();
      unint64_t v131 = 0;
      uint64_t v132 = (__objc2_class **)0xE000000000000000;
      sub_1B6E328C8();
      uint64_t v53 = swift_bridgeObjectRelease();
      unint64_t v131 = 0x207475706E49;
      uint64_t v132 = (__objc2_class **)0xE600000000000000;
      ((void (*)(void *__return_ptr, uint64_t))p_flags)(v139, v53);
      uint64_t v183 = v140;
      sub_1B682BB90(v39, v140);
      uint64_t v182 = v139[0];
      sub_1B62D8C3C((uint64_t)&v182);
      uint64_t v181 = v139[1];
      sub_1B62D8C3C((uint64_t)&v181);
      uint64_t v180 = v139[2];
      sub_1B62D8C3C((uint64_t)&v180);
      sub_1B62D8C3C((uint64_t)&v183);
      uint64_t v179 = v141;
      sub_1B62D8C3C((uint64_t)&v179);
      uint64_t v178 = v142;
      sub_1B62D8C3C((uint64_t)&v178);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      uint64_t v127 = (__objc2_class **)v40;
      sub_1B6973818(v40);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      unint64_t v129 = v37;
      sub_1B69B0F8C(v37);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      uint64_t v125 = (uint64_t)v132;
      p_CMTimeFlags flags = (void *)v131;
      sub_1B683DB30();
      uint64_t v54 = v128;
      uint64_t v55 = (void *)swift_allocError();
      uint64_t v122 = v56;
      uint64_t v57 = v119;
      uint64_t v58 = (uint64_t)v130;
      *unint64_t v130 = v119;
      uint64_t v59 = v58 + v54[5];
      uint64_t v60 = (char *)v57 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
      uint64_t v61 = v39;
      uint64_t v62 = sub_1B6E31118();
      uint64_t v63 = *(void *)(v62 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v63 + 16))(v59, v60, v62);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v59, 0, 1, v62);
      uint64_t v64 = v58 + v54[6];
      *(void *)uint64_t v64 = v61;
      *(unsigned char *)(v64 + 8) = 32;
      unint64_t v65 = (void *)(v58 + v54[7]);
      uint64_t v66 = v125;
      *unint64_t v65 = p_flags;
      v65[1] = v66;
      sub_1B683DB88(v58, v122);
      uint64_t v67 = *(void *)(v120 + 24);
      uint64_t v68 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
      uint64_t v17 = *(uint64_t **)(v67 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
      swift_retain();
      id v69 = v55;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v67 + v68) = v17;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v17 = sub_1B68C1084(0, v17[2] + 1, 1, v17);
        *(void *)(v67 + v68) = v17;
      }
      unint64_t v72 = v17[2];
      unint64_t v71 = v17[3];
      if (v72 >= v71 >> 1)
      {
        uint64_t v17 = sub_1B68C1084(v71 > 1, v72 + 1, 1, v17);
        *(void *)(v67 + v68) = v17;
      }
      void v17[2] = v72 + 1;
      v17[v72 + 4] = (uint64_t)v55;
      swift_willThrow();
      id v73 = v55;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B678FC34(v129);
      sub_1B6645740((unint64_t)v127);
    }
    else
    {
LABEL_23:
      unint64_t v47 = v119;
      uint64_t v48 = v19;
      uint64_t v49 = sub_1B6838D68((uint64_t)v30, v34, *(unsigned __int8 *)(v19 + 56), (uint64_t)v119);
      uint64_t v50 = v49;
      uint64_t v51 = sub_1B683850C((uint64_t)v47, (uint64_t)v30, v49);
      if (v51)
      {
        uint64_t v52 = v51;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v153 = v134;
        sub_1B62D8C3C((uint64_t)&v153);
        uint64_t v152 = v135;
        sub_1B62D8C3C((uint64_t)&v152);
        uint64_t v151 = v136;
        sub_1B62D8C3C((uint64_t)&v151);
        uint64_t v150 = v137;
        sub_1B62D8C3C((uint64_t)&v150);
        uint64_t v149 = v138;
        sub_1B62D8C3C((uint64_t)&v149);
        swift_bridgeObjectRelease();
        uint64_t v33 = v52;
        goto LABEL_24;
      }
      uint64_t v120 = v48;
      long long v121 = 0;
      uint64_t v123 = v34;
      uint64_t v74 = v50 + 64;
      uint64_t v75 = 1 << *(unsigned char *)(v50 + 32);
      uint64_t v76 = -1;
      if (v75 < 64) {
        uint64_t v76 = ~(-1 << v75);
      }
      unint64_t v77 = v76 & *(void *)(v50 + 64);
      int64_t v78 = (unint64_t)(v75 + 63) >> 6;
      swift_bridgeObjectRetain();
      uint64_t v79 = 0;
      uint64_t v125 = v78 - 5;
      p_CMTimeFlags flags = (void *)v50;
      uint64_t v122 = v50 + 104;
      if (!v77) {
        goto LABEL_36;
      }
LABEL_35:
      unint64_t v80 = __clz(__rbit64(v77));
      v77 &= v77 - 1;
      unint64_t v81 = v80 | (v79 << 6);
      while (1)
      {
        uint64_t v84 = *(void *)(p_flags[6] + 8 * v81);
        unint64_t v85 = *(void *)(p_flags[7] + 8 * v81);
        uint64_t v158 = v135;
        unint64_t v86 = *(void *)(v135 + 8 * v84 + 32);
        sub_1B67C52A4(v85);
        sub_1B66456F8(v86);
        if ((sub_1B69739C0(v85, v86) & 1) == 0) {
          break;
        }
        sub_1B6645740(v86);
        sub_1B678FC34(v85);
        if (v77) {
          goto LABEL_35;
        }
LABEL_36:
        uint64_t v82 = v79 + 1;
        if (v79 + 1 >= v78) {
          goto LABEL_57;
        }
        unint64_t v83 = *(void *)(v74 + 8 * v82);
        if (!v83)
        {
          uint64_t v82 = v79 + 2;
          if (v79 + 2 >= v78) {
            goto LABEL_57;
          }
          unint64_t v83 = *(void *)(v74 + 8 * v82);
          if (!v83)
          {
            uint64_t v82 = v79 + 3;
            if (v79 + 3 >= v78) {
              goto LABEL_57;
            }
            unint64_t v83 = *(void *)(v74 + 8 * v82);
            if (!v83)
            {
              uint64_t v82 = v79 + 4;
              if (v79 + 4 >= v78) {
                goto LABEL_57;
              }
              unint64_t v83 = *(void *)(v74 + 8 * v82);
              if (!v83)
              {
                while (v125 != v79)
                {
                  unint64_t v83 = *(void *)(v122 + 8 * v79++);
                  if (v83)
                  {
                    uint64_t v82 = v79 + 4;
                    goto LABEL_47;
                  }
                }
LABEL_57:
                uint64_t v104 = swift_release();
                uint64_t v17 = &v118;
                MEMORY[0x1F4188790](v104, v105);
                uint64_t v106 = v121;
                *(&v118 - 2) = v120;
                *(&v118 - 1) = (uint64_t)&v133;
                uint64_t v107 = sub_1B683D67C(v118, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B683DBEC);
                if (v106)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v177[0] = v134;
                  sub_1B62D8C3C((uint64_t)v177);
                  uint64_t v176 = v135;
                  sub_1B62D8C3C((uint64_t)&v176);
                  uint64_t v175 = v136;
                  sub_1B62D8C3C((uint64_t)&v175);
                  uint64_t v174 = v137;
                  sub_1B62D8C3C((uint64_t)&v174);
                  uint64_t v173 = v138;
                  sub_1B62D8C3C((uint64_t)&v173);
                }
                else
                {
                  uint64_t v108 = v107;
                  swift_bridgeObjectRelease();
                  long long v109 = (int *)v119;
                  if (*v119 == _TtC3VFX21AuthoringSubGraphNode)
                  {
                    swift_retain();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t v163 = v134;
                    sub_1B62D8C3C((uint64_t)&v163);
                    uint64_t v162 = v135;
                    sub_1B62D8C3C((uint64_t)&v162);
                    uint64_t v161 = v136;
                    sub_1B62D8C3C((uint64_t)&v161);
                    uint64_t v160 = v137;
                    sub_1B62D8C3C((uint64_t)&v160);
                    uint64_t v159 = v138;
                    sub_1B62D8C3C((uint64_t)&v159);
                    uint64_t v17 = sub_1B6837A48(v109, v124, v108);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                  }
                  else
                  {
                    uint64_t v110 = (uint64_t)p_flags;
                    if (*v127 == _TtC3VFX17SubGraphEnterNode)
                    {
                      swift_retain();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v168 = v134;
                      sub_1B62D8C3C((uint64_t)&v168);
                      uint64_t v167 = v135;
                      sub_1B62D8C3C((uint64_t)&v167);
                      uint64_t v166 = v136;
                      sub_1B62D8C3C((uint64_t)&v166);
                      uint64_t v165 = v137;
                      sub_1B62D8C3C((uint64_t)&v165);
                      uint64_t v164 = v138;
                      sub_1B62D8C3C((uint64_t)&v164);
                      swift_release();
                      uint64_t v114 = *(void *)(v120 + 48);
                      uint64_t v115 = swift_bridgeObjectRetain();
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v111 = v134;
                      uint64_t v172 = v135;
                      sub_1B62D8C3C((uint64_t)&v172);
                      uint64_t v171 = v136;
                      sub_1B62D8C3C((uint64_t)&v171);
                      uint64_t v170 = v137;
                      sub_1B62D8C3C((uint64_t)&v170);
                      uint64_t v169 = v138;
                      uint64_t v112 = sub_1B62D8C3C((uint64_t)&v169);
                      MEMORY[0x1F4188790](v112, v113);
                      *(&v118 - 4) = v120;
                      *(&v118 - 3) = (uint64_t)v109;
                      *(&v118 - 2) = v110;
                      uint64_t v114 = sub_1B683D7D0(v111, sub_1B683DC08);
                      swift_bridgeObjectRelease();
                      uint64_t v115 = swift_bridgeObjectRelease();
                    }
                    MEMORY[0x1F4188790](v115, v116);
                    *(&v118 - 6) = (uint64_t)v109;
                    *(&v118 - 5) = v108;
                    *(&v118 - 4) = (uint64_t)v124;
                    *(&v118 - 3) = v114;
                    *(&v118 - 2) = v117;
                    uint64_t v17 = (uint64_t *)sub_1B682AB98((void (*)(void))sub_1B683DC28);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                }
                return v17;
              }
            }
          }
        }
LABEL_47:
        unint64_t v77 = (v83 - 1) & v83;
        unint64_t v81 = __clz(__rbit64(v83)) + (v82 << 6);
        uint64_t v79 = v82;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v157 = v134;
      sub_1B62D8C3C((uint64_t)&v157);
      sub_1B62D8C3C((uint64_t)&v158);
      uint64_t v156 = v136;
      sub_1B62D8C3C((uint64_t)&v156);
      uint64_t v155 = v137;
      sub_1B62D8C3C((uint64_t)&v155);
      uint64_t v154 = v138;
      sub_1B62D8C3C((uint64_t)&v154);
      swift_bridgeObjectRelease();
      sub_1B69741B0(v84);
      unint64_t v131 = 0;
      uint64_t v132 = (__objc2_class **)0xE000000000000000;
      sub_1B6E328C8();
      swift_bridgeObjectRelease();
      unint64_t v131 = 0x6465766C6F736552;
      uint64_t v132 = (__objc2_class **)0xE900000000000020;
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B69B0F8C(v85);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      sub_1B6E31948();
      sub_1B6973818(v86);
      sub_1B6E31948();
      swift_bridgeObjectRelease();
      unint64_t v129 = v131;
      uint64_t v127 = v132;
      sub_1B683DB30();
      uint64_t v87 = v128;
      uint64_t v55 = (void *)swift_allocError();
      uint64_t v125 = v88;
      uint64_t v89 = v119;
      uint64_t v90 = (uint64_t)v130;
      *unint64_t v130 = v119;
      uint64_t v91 = v90 + v87[5];
      uint64_t v124 = (__objc2_class **)((char *)v89 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID);
      uint64_t v92 = sub_1B6E31118();
      uint64_t v93 = *(void *)(v92 - 8);
      (*(void (**)(uint64_t, void *, uint64_t))(v93 + 16))(v91, v124, v92);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56))(v91, 0, 1, v92);
      uint64_t v94 = v90 + v87[6];
      *(void *)uint64_t v94 = 0;
      *(unsigned char *)(v94 + 8) = 33;
      uint64_t v95 = (void *)(v90 + v87[7]);
      uint64_t v96 = v127;
      *uint64_t v95 = v129;
      v95[1] = v96;
      sub_1B683DB88(v90, v125);
      uint64_t v97 = *(void *)(v120 + 24);
      uint64_t v98 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
      uint64_t v17 = *(uint64_t **)(v97 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
      swift_retain();
      id v99 = v55;
      char v100 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v97 + v98) = v17;
      if ((v100 & 1) == 0)
      {
        uint64_t v17 = sub_1B68C1084(0, v17[2] + 1, 1, v17);
        *(void *)(v97 + v98) = v17;
      }
      unint64_t v102 = v17[2];
      unint64_t v101 = v17[3];
      if (v102 >= v101 >> 1)
      {
        uint64_t v17 = sub_1B68C1084(v101 > 1, v102 + 1, 1, v17);
        *(void *)(v97 + v98) = v17;
      }
      void v17[2] = v102 + 1;
      v17[v102 + 4] = (uint64_t)v55;
      swift_willThrow();
      id v103 = v55;
      swift_release();
      sub_1B6645740(v86);
      sub_1B678FC34(v85);
    }

    return v17;
  }
  uint64_t v194 = v133;
  sub_1B62D8C3C((uint64_t)&v194);
  uint64_t v193 = v134;
  sub_1B62D8C3C((uint64_t)&v193);
  uint64_t v192 = v135;
  sub_1B62D8C3C((uint64_t)&v192);
  uint64_t v191 = v136;
  sub_1B62D8C3C((uint64_t)&v191);
  uint64_t v190 = v137;
  sub_1B62D8C3C((uint64_t)&v190);
  uint64_t v189 = v138;
  sub_1B62D8C3C((uint64_t)&v189);
  return v17;
}

void *sub_1B683B73C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v43 = a6;
  uint64_t v11 = (void *)0x8000000000000008;
  uint64_t v12 = (int *)type metadata accessor for GraphError();
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v15 = (uint64_t *)((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v16 = *(void *)(*a4 + 8 * a1 + 32);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0x8000000000000008;
  unint64_t v18 = v17 | 0x6000000000000000;
  sub_1B66456F8(v16);
  LOBYTE(v18) = sub_1B697351C(v16, v18);
  swift_release();
  sub_1B6645740(v16);
  if ((v18 & 1) == 0)
  {
    uint64_t v11 = a5;
    uint64_t v19 = sub_1B6837428(a2);
    unint64_t v20 = (uint64_t *)v19;
    if (v21)
    {
      uint64_t v45 = v19;
      sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
      swift_willThrowTypedImpl();
    }
    else
    {
      (*(void (**)(uint64_t *__return_ptr))(**(void **)(a2 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) + 152))(&v46);
      uint64_t v22 = v47;
      uint64_t v57 = v47;
      uint64_t v56 = v46;
      sub_1B62D8C3C((uint64_t)&v56);
      uint64_t v55 = v48;
      sub_1B62D8C3C((uint64_t)&v55);
      uint64_t v54 = v49;
      sub_1B62D8C3C((uint64_t)&v54);
      uint64_t v53 = v50;
      sub_1B62D8C3C((uint64_t)&v53);
      uint64_t v52 = v51;
      sub_1B62D8C3C((uint64_t)&v52);
      uint64_t v23 = *(void *)(v22 + 16);
      sub_1B62D8C3C((uint64_t)&v57);
      if (v23 <= a3)
      {
        unint64_t v42 = v20;
        sub_1B683DB30();
        uint64_t v44 = swift_allocError();
        uint64_t v25 = v24;
        uint64_t v26 = v43;
        *uint64_t v15 = v43;
        uint64_t v27 = (char *)v15 + v12[5];
        uint64_t v28 = v26 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
        uint64_t v29 = sub_1B6E31118();
        uint64_t v30 = *(void *)(v29 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        uint64_t v31 = (char *)v15 + v12[6];
        *(void *)uint64_t v31 = 3;
        v31[8] = -96;
        *(_OWORD *)((char *)v15 + v12[7]) = xmmword_1B6E8B010;
        sub_1B683DB88((uint64_t)v15, v25);
        uint64_t v32 = a5[3];
        uint64_t v33 = (void *)v44;
        uint64_t v34 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
        uint64_t v11 = *(void **)(v32 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
        swift_retain();
        id v35 = v33;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v32 + v34) = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v11 = sub_1B68C1084(0, v11[2] + 1, 1, v11);
          *(void *)(v32 + v34) = v11;
        }
        unint64_t v38 = v11[2];
        unint64_t v37 = v11[3];
        uint64_t v39 = v42;
        if (v38 >= v37 >> 1)
        {
          uint64_t v11 = sub_1B68C1084(v37 > 1, v38 + 1, 1, v11);
          *(void *)(v32 + v34) = v11;
        }
        void v11[2] = v38 + 1;
        v11[v38 + 4] = v33;
        swift_willThrow();
        sub_1B67FAAC8(v39, 0);
      }
      else
      {
        uint64_t v11 = *(void **)(v20[4] + 8 * a3 + 32);
        sub_1B68289A0(v20[3]);
        sub_1B67C52A4((unint64_t)v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B67FAAC8(v20, 0);
      }
    }
  }
  return v11;
}

void *sub_1B683BB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v27 = a3;
  uint64_t v9 = sub_1B6E31118();
  uint64_t v10 = *(void *)(v9 - 8);
  double v12 = MEMORY[0x1F4188790](v9, v11);
  uint64_t v14 = (char *)&v28[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v14, a2 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v9, v12);
  uint64_t v15 = *(void *)(a4 + 40);
  if (!*(void *)(v15 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1B69FA874((uint64_t)v14);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    goto LABEL_7;
  }
  char v18 = *(unsigned char *)(*(void *)(v15 + 56) + v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  if (v18) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v19 = *(void *)(*a5 + 8 * a1 + 32);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0x8000000000000008;
  unint64_t v21 = v20 | 0x6000000000000000;
  sub_1B66456F8(v19);
  LOBYTE(v21) = sub_1B697351C(v19, v21);
  swift_release();
  sub_1B6645740(v19);
  if (v21)
  {
LABEL_8:
    type metadata accessor for _PlaceholderNode(0);
    uint64_t v22 = (void *)swift_allocObject();
    v28[3] = type metadata accessor for AuthoringNode();
    v28[4] = &off_1EB94EE38;
    v28[0] = a2;
    sub_1B62C1550((uint64_t)v28, (uint64_t)v22 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode);
    uint64_t v23 = MEMORY[0x1E4FBC860];
    v22[3] = 0;
    _OWORD v22[4] = 0;
    void v22[2] = v23;
    swift_retain();
    sub_1B6E31108();
    _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)v28);
    return v22;
  }
  uint64_t v24 = sub_1B6837428(a2);
  uint64_t v22 = (void *)v24;
  if (v25)
  {
    v28[0] = v24;
    sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
    swift_willThrowTypedImpl();
  }
  return v22;
}

uint64_t sub_1B683BDC8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (int *)type metadata accessor for GraphError();
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (uint64_t *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_1B68378EC(*(void *)(a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw), a2, a5);
  if ((~result & 0xF000000000000007) == 0)
  {
    uint64_t v36 = result;
    uint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    sub_1B6E328C8();
    swift_bridgeObjectRelease();
    uint64_t v37 = 0x2074757074754FLL;
    unint64_t v38 = 0xE700000000000000;
    uint64_t v39 = a1;
    sub_1B6E33098();
    sub_1B6E31948();
    swift_bridgeObjectRelease();
    sub_1B6E31948();
    unint64_t v34 = v38;
    uint64_t v35 = v37;
    sub_1B683DB30();
    uint64_t v15 = (void *)swift_allocError();
    uint64_t v33 = v16;
    void *v13 = a4;
    char v17 = (char *)v13 + v10[5];
    uint64_t v18 = a4 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
    uint64_t v19 = sub_1B6E31118();
    uint64_t v20 = a3;
    uint64_t v21 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v19);
    uint64_t v22 = (char *)v13 + v10[6];
    *(void *)uint64_t v22 = 5;
    v22[8] = -96;
    uint64_t v23 = (void *)((char *)v13 + v10[7]);
    uint64_t v24 = v33;
    unint64_t v25 = v34;
    *uint64_t v23 = v35;
    v23[1] = v25;
    sub_1B683DB88((uint64_t)v13, v24);
    uint64_t v26 = *(void *)(v20 + 24);
    uint64_t v27 = OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics;
    uint64_t v28 = *(void **)(v26 + OBJC_IVAR____TtC3VFX16GraphDiagnostics_diagnostics);
    swift_retain();
    id v29 = v15;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v26 + v27) = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v28 = sub_1B68C1084(0, v28[2] + 1, 1, v28);
      *(void *)(v26 + v27) = v28;
    }
    unint64_t v32 = v28[2];
    unint64_t v31 = v28[3];
    if (v32 >= v31 >> 1)
    {
      uint64_t v28 = sub_1B68C1084(v31 > 1, v32 + 1, 1, v28);
      *(void *)(v26 + v27) = v28;
    }
    _OWORD v28[2] = v32 + 1;
    v28[v32 + 4] = v15;
    swift_willThrow();
    return v36;
  }
  return result;
}

uint64_t sub_1B683C0BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = a2 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID;
  uint64_t v10 = (char *)a1 + OBJC_IVAR____TtC3VFX4Node_authoringID;
  uint64_t v11 = sub_1B6E31118();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24);
  swift_bridgeObjectRetain();
  v12(v10, v9, v11);
  a1[2] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a1[3];
  a1[3] = a4;
  a1[4] = a5;
  swift_bridgeObjectRetain();
  return sub_1B678FE58(v13);
}

uint64_t sub_1B683C1AC()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GraphTypeResolver()
{
  return self;
}

unint64_t sub_1B683C228(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  (*(void (**)(uint64_t *__return_ptr))(**(void **)(a1 + OBJC_IVAR____TtC3VFX13AuthoringNode_raw) + 152))(&v23);
  uint64_t v34 = v23;
  if (*(void *)(v23 + 16) <= a2) {
    goto LABEL_9;
  }
  unint64_t v6 = *(void *)(v23 + 8 * a2 + 32);
  if (v6 >> 61 != 3)
  {
    sub_1B66456F8(v6);
    uint64_t v9 = sub_1B6973788(v6);
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = v9;
      uint64_t v33 = v25;
      unint64_t v12 = *(void *)(v25 + 8 * v9 + 32);
      if (v12 >> 61 == 3)
      {
        unint64_t v7 = *(void *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_1B67C52A4(v7);
        sub_1B6645740(v6);
        sub_1B62D8C3C((uint64_t)&v34);
        uint64_t v32 = v24;
        sub_1B62D8C3C((uint64_t)&v32);
        uint64_t v8 = &v33;
        goto LABEL_7;
      }
      sub_1B62D8C3C((uint64_t)&v34);
      sub_1B62D8C3C((uint64_t)&v33);
      uint64_t v14 = v24;
      uint64_t v31 = v26;
      uint64_t v32 = v24;
      sub_1B62D8C3C((uint64_t)&v31);
      uint64_t v30 = v27;
      sub_1B62D8C3C((uint64_t)&v30);
      uint64_t v29 = v28;
      sub_1B62D8C3C((uint64_t)&v29);
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        for (uint64_t i = 0; v15 != i; ++i)
        {
          unint64_t v17 = *(void *)(v14 + 32 + 8 * i);
          sub_1B66456F8(v17);
          uint64_t v18 = sub_1B6973788(v17);
          if ((v19 & 1) == 0 && v18 == v11 && (uint64_t v20 = *(void *)(v3 + 48), *(void *)(v20 + 16)))
          {
            swift_retain_n();
            swift_bridgeObjectRetain();
            unint64_t v21 = sub_1B69FAD64(a1, i);
            if (v22)
            {
              unint64_t v7 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
              sub_1B67C52A4(v7);
              sub_1B6645740(v17);
              swift_bridgeObjectRelease();
              swift_release_n();
              sub_1B62D8C3C((uint64_t)&v32);
              sub_1B6645740(v6);
              return v7;
            }
            sub_1B6645740(v17);
            swift_bridgeObjectRelease();
            swift_release_n();
          }
          else
          {
            sub_1B6645740(v17);
          }
        }
      }
      sub_1B62D8C3C((uint64_t)&v32);
      sub_1B6645740(v6);
      return 0xF000000000000007;
    }
    sub_1B6645740(v6);
LABEL_9:
    sub_1B62D8C3C((uint64_t)&v34);
    uint64_t v33 = v24;
    sub_1B62D8C3C((uint64_t)&v33);
    uint64_t v32 = v25;
    sub_1B62D8C3C((uint64_t)&v32);
    uint64_t v31 = v26;
    sub_1B62D8C3C((uint64_t)&v31);
    uint64_t v30 = v27;
    sub_1B62D8C3C((uint64_t)&v30);
    uint64_t v29 = v28;
    sub_1B62D8C3C((uint64_t)&v29);
    return 0xF000000000000007;
  }
  unint64_t v7 = *(void *)((v6 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  sub_1B67C52A4(v7);
  sub_1B62D8C3C((uint64_t)&v34);
  uint64_t v33 = v24;
  sub_1B62D8C3C((uint64_t)&v33);
  uint64_t v32 = v25;
  uint64_t v8 = &v32;
LABEL_7:
  sub_1B62D8C3C((uint64_t)v8);
  uint64_t v31 = v26;
  sub_1B62D8C3C((uint64_t)&v31);
  uint64_t v30 = v27;
  sub_1B62D8C3C((uint64_t)&v30);
  uint64_t v29 = v28;
  sub_1B62D8C3C((uint64_t)&v29);
  return v7;
}

uint64_t sub_1B683C54C()
{
  void (*v23)(uint64_t *__return_ptr, uint64_t);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  void *v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void v113[2];

  uint64_t v1 = v0;
  uint64_t v2 = v0 + 3;
  uint64_t v3 = swift_retain();
  MEMORY[0x1BA9B3870](v3);
  if (*(void *)((v1[3] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v1[3] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1B6E31C78();
  }
  sub_1B6E31CC8();
  uint64_t result = sub_1B6E31C48();
  if ((unint64_t)*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    id v73 = sub_1B6E32C18();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v73) {
      return result;
    }
  }
  else if (!*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v76 = v0 + 4;
  unint64_t v77 = v0;
  uint64_t v74 = v0 + 3;
  while (1)
  {
    uint64_t v6 = *v2;
    if ((unint64_t)*v2 >> 62
      && (swift_bridgeObjectRetain(), sub_1B6E32C18(),
                                      swift_bridgeObjectRelease(),
                                      uint64_t v6 = *v2,
                                      (unint64_t)*v2 >> 62))
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
      if (v8)
      {
LABEL_8:
        if ((v6 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = MEMORY[0x1BA9B4580](0, v6);
        }
        else
        {
          uint64_t v7 = *(void *)(v6 + 32);
          swift_retain();
        }
        goto LABEL_13;
      }
    }
    else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_8;
    }
    uint64_t v7 = 0;
LABEL_13:
    if ((unint64_t)*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1B6E32C18();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    sub_1B68EA1C4(0, v9 != 0);
    uint64_t v10 = *v76;
    if (*(void *)(*v76 + 16))
    {
      uint64_t v11 = sub_1B6E33908();
      uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v13 = v11 & ~v12;
      if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
      {
        uint64_t v14 = *(void *)(v10 + 48);
        if (*(void *)(v14 + 8 * v13) == v7) {
          goto LABEL_79;
        }
        uint64_t v15 = ~v12;
        while (1)
        {
          unint64_t v13 = (v13 + 1) & v15;
          if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
            break;
          }
          if (*(void *)(v14 + 8 * v13) == v7) {
            goto LABEL_79;
          }
        }
      }
    }
    sub_1B67E9934(&v82, v7);
    uint64_t v16 = *(void *)(v7 + OBJC_IVAR____TtC3VFX13AuthoringNode_inputs);
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17) {
      break;
    }
    uint64_t v82 = v5;
LABEL_77:
    swift_bridgeObjectRetain();
    unint64_t v71 = v5;
LABEL_78:
    swift_bridgeObjectRelease();
    sub_1B66415C8(v71);
LABEL_79:
    uint64_t result = swift_release();
    if ((unint64_t)*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v72 = sub_1B6E32C18();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v72) {
        return result;
      }
    }
    else if (!*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      return result;
    }
  }
  uint64_t v75 = OBJC_IVAR____TtC3VFX13AuthoringNode_inputs;
  uint64_t v18 = OBJC_IVAR____TtC3VFX13AuthoringNode_raw;
  uint64_t v19 = v16 + 32;
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  int64_t v78 = v17;
  uint64_t v79 = v19;
  unint64_t v80 = v18;
  while (1)
  {
    unint64_t v21 = (uint64_t *)(v19 + 16 * v20);
    uint64_t v22 = *v21;
    unint64_t v81 = v21[1];
    uint64_t v23 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v7 + v18) + 152);
    uint64_t v24 = swift_retain();
    v23(&v83, v24);
    v113[0] = v83;
    if (v20 < *(void *)(v83 + 16)) {
      break;
    }
    sub_1B62D8C3C((uint64_t)v113);
    uint64_t v112 = v84;
    sub_1B62D8C3C((uint64_t)&v112);
    uint64_t v111 = v85;
    sub_1B62D8C3C((uint64_t)&v111);
    uint64_t v110 = v86;
    sub_1B62D8C3C((uint64_t)&v110);
    long long v109 = v87;
    sub_1B62D8C3C((uint64_t)&v109);
    uint64_t v108 = v88;
    sub_1B62D8C3C((uint64_t)&v108);
    swift_release();
LABEL_25:
    if (++v20 == v17)
    {
      swift_bridgeObjectRelease();
      unint64_t v65 = *(void *)(v7 + v75);
      uint64_t v66 = *(void *)(v65 + 16);
      uint64_t v5 = MEMORY[0x1E4FBC860];
      uint64_t v82 = MEMORY[0x1E4FBC860];
      if (!v66)
      {
        uint64_t v2 = v74;
        goto LABEL_77;
      }
      uint64_t v67 = v65;
      swift_bridgeObjectRetain_n();
      uint64_t v68 = v67;
      id v69 = 32;
      uint64_t v2 = v74;
      do
      {
        if (*(void *)(v68 + v69))
        {
          uint64_t v70 = swift_retain();
          MEMORY[0x1BA9B3870](v70);
          if (*(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B6E31C78();
          }
          sub_1B6E31CC8();
          sub_1B6E31C48();
          uint64_t v68 = v67;
        }
        v69 += 16;
        --v66;
      }
      while (v66);
      swift_bridgeObjectRelease();
      unint64_t v71 = v82;
      goto LABEL_78;
    }
  }
  uint64_t v25 = *(void *)(v83 + 8 * v20 + 32);
  if (v25 >> 61 == 3)
  {
    uint64_t v26 = *(void *)((v25 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    sub_1B67C52A4(v26);
    sub_1B62D8C3C((uint64_t)v113);
    uint64_t v93 = v84;
    sub_1B62D8C3C((uint64_t)&v93);
    uint64_t v92 = v85;
    sub_1B62D8C3C((uint64_t)&v92);
    uint64_t v91 = v86;
    sub_1B62D8C3C((uint64_t)&v91);
    uint64_t v90 = v87;
    sub_1B62D8C3C((uint64_t)&v90);
    uint64_t v89 = v88;
    uint64_t v27 = &v89;
LABEL_29:
    sub_1B62D8C3C((uint64_t)v27);
    goto LABEL_30;
  }
  sub_1B66456F8(v25);
  unint64_t v38 = sub_1B6973788(v25);
  if (v39)
  {
    sub_1B6645740(v25);
    sub_1B62D8C3C((uint64_t)v113);
    uint64_t v107 = v84;
    sub_1B62D8C3C((uint64_t)&v107);
    uint64_t v106 = v85;
    sub_1B62D8C3C((uint64_t)&v106);
    uint64_t v105 = v86;
    sub_1B62D8C3C((uint64_t)&v105);
    uint64_t v104 = v87;
    sub_1B62D8C3C((uint64_t)&v104);
    id v103 = v88;
    sub_1B62D8C3C((uint64_t)&v103);
    swift_release();
LABEL_63:
    uint64_t v19 = v79;
    uint64_t v18 = v80;
    goto LABEL_25;
  }
  unint64_t v40 = v38;
  unint64_t v102 = v85;
  uint64_t v41 = *(void *)(v85 + 8 * v38 + 32);
  if (v41 >> 61 == 3)
  {
    uint64_t v26 = *(void *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    sub_1B67C52A4(v26);
    sub_1B6645740(v25);
    sub_1B62D8C3C((uint64_t)v113);
    uint64_t v97 = v84;
    sub_1B62D8C3C((uint64_t)&v97);
    sub_1B62D8C3C((uint64_t)&v102);
    uint64_t v96 = v86;
    sub_1B62D8C3C((uint64_t)&v96);
    uint64_t v95 = v87;
    sub_1B62D8C3C((uint64_t)&v95);
    uint64_t v94 = v88;
    uint64_t v27 = &v94;
    goto LABEL_29;
  }
  sub_1B62D8C3C((uint64_t)v113);
  sub_1B62D8C3C((uint64_t)&v102);
  char v100 = v86;
  unint64_t v101 = v84;
  sub_1B62D8C3C((uint64_t)&v100);
  id v99 = v87;
  sub_1B62D8C3C((uint64_t)&v99);
  uint64_t v98 = v88;
  sub_1B62D8C3C((uint64_t)&v98);
  uint64_t v56 = *(void *)(v101 + 16);
  if (!v56)
  {
LABEL_61:
    sub_1B62D8C3C((uint64_t)&v101);
    sub_1B6645740(v25);
    swift_release();
    uint64_t v1 = v77;
LABEL_62:
    uint64_t v17 = v78;
    goto LABEL_63;
  }
  uint64_t v57 = 0;
  uint64_t v58 = v101 + 32;
  while (1)
  {
    uint64_t v59 = *(void *)(v58 + 8 * v57);
    sub_1B66456F8(v59);
    uint64_t v60 = sub_1B6973788(v59);
    if ((v61 & 1) == 0 && v60 == v40)
    {
      uint64_t v62 = v77[6];
      if (*(void *)(v62 + 16)) {
        break;
      }
    }
    sub_1B6645740(v59);
LABEL_55:
    if (v56 == ++v57) {
      goto LABEL_61;
    }
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_1B69FAD64(v7, v57);
  if ((v64 & 1) == 0)
  {
    sub_1B6645740(v59);
    swift_bridgeObjectRelease();
    swift_release_n();
    goto LABEL_55;
  }
  uint64_t v26 = *(void *)(*(void *)(v62 + 56) + 8 * v63);
  sub_1B67C52A4(v26);
  sub_1B6645740(v59);
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_1B62D8C3C((uint64_t)&v101);
  sub_1B6645740(v25);
  uint64_t v1 = v77;
LABEL_30:
  swift_retain();
  sub_1B67C52A4(v26);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v82 = v1[5];
  uint64_t v29 = v82;
  v1[5] = 0x8000000000000000;
  uint64_t v31 = sub_1B69FAD64(v7, v20);
  uint64_t v32 = v30;
  uint64_t v33 = *(void *)(v29 + 16) + ((v30 & 1) == 0);
  if (*(void *)(v29 + 24) >= v33)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v36 = (void *)v82;
      if (v30) {
        goto LABEL_39;
      }
    }
    else
    {
      sub_1B6AD1198();
      uint64_t v36 = (void *)v82;
      if (v32) {
        goto LABEL_39;
      }
    }
LABEL_33:
    v36[(v31 >> 6) + 8] |= 1 << v31;
    uint64_t v37 = (uint64_t *)(v36[6] + 16 * v31);
    char *v37 = v7;
    v37[1] = v20;
    *(void *)(v36[7] + 8 * v31) = v26;
    ++v36[2];
    swift_retain();
LABEL_40:
    v1[5] = v36;
    swift_release();
    swift_bridgeObjectRelease();
    if (!v22)
    {
      sub_1B678FC34(v26);
      goto LABEL_62;
    }
    swift_retain_n();
    sub_1B67C52A4(v26);
    uint64_t v44 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v82 = v1[6];
    uint64_t v45 = v82;
    v1[6] = 0x8000000000000000;
    uint64_t v46 = sub_1B69FAD64(v22, v81);
    uint64_t v48 = v47;
    uint64_t v49 = *(void *)(v45 + 16) + ((v47 & 1) == 0);
    if (*(void *)(v45 + 24) >= v49)
    {
      if ((v44 & 1) == 0) {
        sub_1B6AD1198();
      }
    }
    else
    {
      sub_1B6ABF138(v49, v44);
      uint64_t v50 = sub_1B69FAD64(v22, v81);
      if ((v48 & 1) != (v51 & 1)) {
        goto LABEL_88;
      }
      uint64_t v46 = v50;
    }
    uint64_t v17 = v78;
    uint64_t v52 = (void *)v82;
    if (v48)
    {
      uint64_t v53 = *(void *)(v82 + 56);
      uint64_t v54 = 8 * v46;
      sub_1B678FC34(*(void *)(v53 + v54));
      *(void *)(v53 + v54) = v26;
    }
    else
    {
      *(void *)(v82 + 8 * (v46 >> 6) + 64) |= 1 << v46;
      uint64_t v55 = (uint64_t *)(v52[6] + 16 * v46);
      *uint64_t v55 = v22;
      v55[1] = v81;
      *(void *)(v52[7] + 8 * v46) = v26;
      ++v52[2];
      swift_retain();
    }
    v1[6] = v52;
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B678FC34(v26);
    swift_release_n();
    goto LABEL_63;
  }
  sub_1B6ABF138(v33, isUniquelyReferenced_nonNull_native);
  uint64_t v34 = sub_1B69FAD64(v7, v20);
  if ((v32 & 1) == (v35 & 1))
  {
    uint64_t v31 = v34;
    uint64_t v36 = (void *)v82;
    if ((v32 & 1) == 0) {
      goto LABEL_33;
    }
LABEL_39:
    unint64_t v42 = v36[7];
    uint64_t v43 = 8 * v31;
    sub_1B678FC34(*(void *)(v42 + v43));
    *(void *)(v42 + v43) = v26;
    goto LABEL_40;
  }
LABEL_88:
  uint64_t result = sub_1B6E33838();
  __break(1u);
  return result;
}

uint64_t sub_1B683CF78()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GraphTypeInference()
{
  return self;
}

void *sub_1B683CFF4(uint64_t a1)
{
  sub_1B683DE90();
  uint64_t v2 = sub_1B6E32C28();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = v2 + 64;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_5;
    }
    uint64_t v16 = v4 + 1;
    if (v4 + 1 >= v9) {
      return v3;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      uint64_t v16 = v4 + 2;
      if (v4 + 2 >= v9) {
        return v3;
      }
      unint64_t v17 = *(void *)(v5 + 8 * v16);
      if (!v17)
      {
        uint64_t v16 = v4 + 3;
        if (v4 + 3 >= v9) {
          return v3;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v16);
        if (!v17)
        {
          uint64_t v16 = v4 + 4;
          if (v4 + 4 >= v9) {
            return v3;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v16);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v16 << 6);
    uint64_t v4 = v16;
LABEL_5:
    uint64_t v13 = 8 * v12;
    uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 8 * v12);
    unint64_t v15 = *(void *)(*(void *)(a1 + 56) + 16 * v12 + 8);
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(v3[6] + v13) = v14;
    *(void *)(v3[7] + v13) = v15;
    ++v3[2];
    sub_1B67C52A4(v15);
  }
  while (v9 - 5 != v4)
  {
    unint64_t v17 = *(void *)(a1 + 104 + 8 * v4++);
    if (v17)
    {
      uint64_t v16 = v4 + 4;
      goto LABEL_18;
    }
  }
  return v3;
}

uint64_t sub_1B683D18C(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = *(void *)(a1 + 8);
  return a2(&v3);
}

uint64_t sub_1B683D1D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_1B683D1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v29 = sub_1B6E31118();
  uint64_t v4 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29, v5);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    v25[1] = v2;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1B6C3C614(0, v8, 0);
    uint64_t v9 = v34;
    uint64_t v27 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v28 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v10 = (uint64_t *)(a1 + 40);
    do
    {
      unint64_t v11 = (__objc2_class **)*(v10 - 1);
      uint64_t v12 = *v10;
      if (*v11 == _TtC3VFX16_PlaceholderNode)
      {
        sub_1B62C1550((uint64_t)v11 + OBJC_IVAR____TtC3VFX16_PlaceholderNode_oldNode, (uint64_t)v33);
        sub_1B62C5560(0, (unint64_t *)&qword_1E9DD1128);
        type metadata accessor for AuthoringNode();
        swift_retain_n();
        swift_dynamicCast();
        uint64_t v13 = v29;
        (*v28)(v7, v32 + OBJC_IVAR____TtC3VFX13AuthoringNode_authoringID, v29);
        swift_release();
        uint64_t v14 = *(void *)(v30 + 32);
        if (*(void *)(v14 + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v15 = sub_1B69FA874((uint64_t)v7);
          if (v16)
          {
            uint64_t v17 = *(void *)(v14 + 56) + 16 * v15;
            char v18 = *(unsigned char *)(v17 + 8);
            id v26 = *(id *)v17;
            sub_1B683DFDC(v26, v18);
            swift_bridgeObjectRelease();
            uint64_t v19 = v7;
            (*v27)(v7, v13);
            if (v18)
            {
              id v20 = v26;
              id v31 = v26;
              sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
              swift_willThrowTypedImpl();
              swift_release();
              sub_1B67FAAC8(v20, 1);
              uint64_t v7 = v19;
            }
            else
            {
              swift_release_n();
              unint64_t v11 = (__objc2_class **)v26;
            }
            goto LABEL_11;
          }
          swift_bridgeObjectRelease();
        }
        (*v27)(v7, v13);
        swift_release();
      }
      else
      {
        swift_retain();
      }
LABEL_11:
      uint64_t v34 = v9;
      unint64_t v22 = *(void *)(v9 + 16);
      unint64_t v21 = *(void *)(v9 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1B6C3C614(v21 > 1, v22 + 1, 1);
        uint64_t v9 = v34;
      }
      v10 += 2;
      *(void *)(v9 + 16) = v22 + 1;
      uint64_t v23 = v9 + 16 * v22;
      *(void *)(v23 + 32) = v11;
      *(void *)(v23 + 40) = v12;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1B683D530(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1B6C3D5AC(0, 0, 0);
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      swift_retain();
      uint64_t v10 = a2(v6, v9, v8);
      if (v3) {
        break;
      }
      uint64_t v11 = v10;
      swift_release();
      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_1B6C3D5AC(v12 > 1, v13 + 1, 1);
      }
      ++v6;
      *(void *)(v16 + 16) = v13 + 1;
      *(void *)(v16 + 8 * v13 + 32) = v11;
      v7 += 2;
      if (v5 == v6) {
        goto LABEL_7;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
  }
  return v16;
}

uint64_t sub_1B683D67C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1B6C3C614(0, 0, 0);
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v18 = v5;
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      swift_retain();
      uint64_t v10 = a2(v6, v9, v8);
      if (v3) {
        break;
      }
      uint64_t v12 = v10;
      uint64_t v13 = v11;
      swift_release();
      unint64_t v15 = *(void *)(v20 + 16);
      unint64_t v14 = *(void *)(v20 + 24);
      if (v15 >= v14 >> 1) {
        sub_1B6C3C614(v14 > 1, v15 + 1, 1);
      }
      ++v6;
      *(void *)(v20 + 16) = v15 + 1;
      uint64_t v16 = v20 + 16 * v15;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v13;
      v7 += 2;
      if (v18 == v6) {
        goto LABEL_7;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
  }
  return v20;
}

uint64_t sub_1B683D7D0(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t))
{
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1B6C3D5AC(0, 0, 0);
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      unint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
      sub_1B66456F8(v6);
      uint64_t v7 = a2(v5, v6);
      if (v2) {
        break;
      }
      uint64_t v8 = v7;
      sub_1B6645740(v6);
      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      if (v10 >= v9 >> 1) {
        sub_1B6C3D5AC(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v13 + 16) = v10 + 1;
      *(void *)(v13 + 8 * v10 + 32) = v8;
      if (v4 == v5) {
        goto LABEL_9;
      }
    }
    sub_1B6645740(v6);
    swift_release();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1B683D904(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1B6E32C18();
  if (!v2) {
    goto LABEL_15;
  }
LABEL_3:
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = (__objc2_class **)MEMORY[0x1BA9B4580](i, a1);
    }
    else
    {
      uint64_t v4 = *(__objc2_class ***)(a1 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v5 = sub_1B6837428(v4);
    if (v6)
    {
      sub_1B62C5560(0, (unint64_t *)&qword_1EB980E40);
      swift_willThrowTypedImpl();
      sub_1B67FAAC8(v5, 1);
      swift_release();
    }
    else
    {
      uint64_t v7 = swift_release();
      MEMORY[0x1BA9B3870](v7);
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B6E31C78();
      }
      sub_1B6E31CC8();
      sub_1B6E31C48();
    }
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t type metadata accessor for GraphError()
{
  uint64_t result = qword_1E9DD13D8;
  if (!qword_1E9DD13D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1B683DB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B683B73C(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32));
}

unint64_t sub_1B683DB30()
{
  unint64_t result = qword_1E9DD7F00;
  if (!qword_1E9DD7F00)
  {
    type metadata accessor for GraphError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD7F00);
  }
  return result;
}

uint64_t sub_1B683DB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GraphError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1B683DBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B683BB1C(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_1B683DC08(uint64_t a1, unint64_t a2)
{
  return sub_1B683BDC8(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1B683DC28(uint64_t a1)
{
  return sub_1B683DF78(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B683C0BC);
}

uint64_t sub_1B683DC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GraphError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B683DCB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GraphError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B683DD14()
{
  sub_1B678FC34(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1B683DD4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B683DDB0()
{
  if (!qword_1E9DCDA48)
  {
    unint64_t v0 = sub_1B6E324B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DCDA48);
    }
  }
}

uint64_t sub_1B683DE08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1B683DD4C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1B683DE78(uint64_t a1, unint64_t a2)
{
  if ((~a2 & 0xF000000000000007) != 0) {
    return sub_1B678FC34(a2);
  }
  return result;
}

void sub_1B683DE90()
{
  if (!qword_1E9DD13D0)
  {
    unint64_t v0 = sub_1B6E32C68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DD13D0);
    }
  }
}

uint64_t sub_1B683DEF8(_OWORD *a1)
{
  return sub_1B683DF10(a1);
}

uint64_t sub_1B683DF10(_OWORD *a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(_OWORD *))(v1 + 24);
  long long v4 = a1[1];
  v6[0] = *a1;
  v6[1] = v4;
  _OWORD v6[2] = a1[2];
  return sub_1B683632C((uint64_t)v6, v2, v3);
}

uint64_t sub_1B683DF4C(uint64_t a1)
{
  return sub_1B683DF78(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1B683817C);
}

uint64_t sub_1B683DF78(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1B683DFA4()
{
  sub_1B678FC34(*(void *)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1B683DFDC(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_1B683DFE8(uint64_t *a1)
{
  return sub_1B6836EEC(a1, v1);
}

uint64_t sub_1B683DFF0(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  return v2(&v4);
}

uint64_t getEnumTagSinglePayload for GraphError.Kind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7B && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 123);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0xF))) ^ 0x7F;
  if (v3 >= 0x7A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for GraphError.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 123;
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1B683E0DC(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  if (v1 <= 0x9F) {
    return v1 >> 5;
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_1B683E0F8(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x1Fu;
  return result;
}

uint64_t sub_1B683E108(uint64_t result, unsigned int a2)
{
  if (a2 < 5)
  {
    *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | (32 * a2);
  }
  else
  {
    *(void *)unint64_t result = a2 - 5;
    *(unsigned char *)(result + 8) = -96;
  }
  return result;
}

ValueMetadata *type metadata accessor for GraphError.Kind()
{
  return &type metadata for GraphError.Kind;
}

uint64_t *sub_1B683E144(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1B6E31118();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      sub_1B683DD4C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)v7 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = (uint64_t *)((char *)v7 + v16);
    uint64_t v20 = (uint64_t *)((char *)a2 + v16);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1B683E334(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1B6E31118();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1B683E408(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B6E31118();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_retain();
  if (v11(v8, 1, v9))
  {
    sub_1B683DD4C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  unsigned char v15[8] = v16[8];
  uint64_t v17 = (void *)((char *)a1 + v14);
  uint64_t v18 = (void *)((char *)a2 + v14);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1B683E598(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B6E31118();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1B683DD4C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1B683E7A4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B6E31118();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1B683DD4C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

void *sub_1B683E918(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B6E31118();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1B683DD4C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = (void *)((char *)a1 + v16);
  uint64_t v20 = (void *)((char *)a2 + v16);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B683EB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B683EB1C);
}

uint64_t sub_1B683EB1C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1B683DD4C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    int v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1B683EC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B683EC1C);
}

void *sub_1B683EC1C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *unint64_t result = a2;
  }
  else
  {
    sub_1B683DD4C(0, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1B683ECF4()
{
  sub_1B683DD4C(319, (unint64_t *)&qword_1EB97D9C0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1B683EDD4(_OWORD *a1)
{
  return sub_1B678FEB4(a1);
}

void sub_1B683EDEC(void *a1@<X8>)
{
  *a1 = &unk_1F0F88310;
}

uint64_t sub_1B683EDFC()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B683EE5C()
{
  return sub_1B6E31B28();
}

uint64_t type metadata accessor for OrientationConstraint.System()
{
  return self;
}

uint64_t sub_1B683EED0(void *a1, char a2)
{
  char v4 = a2 & 1;
  sub_1B6840028(0, &qword_1E9DD1418, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B683FFD4();
  sub_1B6E33A88();
  char v15 = v4;
  char v14 = 0;
  sub_1B66C4F30();
  sub_1B6E32FA8();
  if (!v2)
  {
    char v13 = 1;
    sub_1B6E32F78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

const char *sub_1B683F064()
{
  return "OrientationBillboard";
}

uint64_t sub_1B683F078(char *a1, char *a2)
{
  return sub_1B6BB6218(*a1, *a2);
}

uint64_t sub_1B683F084()
{
  if (*v0) {
    return 0x726F74636166;
  }
  else {
    return 1701080941;
  }
}

uint64_t sub_1B683F0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B683F274(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B683F0DC(uint64_t a1)
{
  unint64_t v2 = sub_1B683FFD4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B683F118(uint64_t a1)
{
  unint64_t v2 = sub_1B683FFD4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1B683F154(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v5 = sub_1B683FE04(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = v4 & 1;
    *(float *)(a2 + 4) = v5;
  }
}

uint64_t sub_1B683F188(void *a1)
{
  return sub_1B683EED0(a1, *v1);
}

uint64_t sub_1B683F1A8()
{
  return type metadata accessor for OrientationConstraint.System();
}

double sub_1B683F1C8()
{
  sub_1B62D2B64();
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1B6E77050;
  *(void *)(v0 + 32) = &type metadata for Orientation;
  *(void *)(v0 + 40) = &off_1F0F560A8;
  return result;
}

void sub_1B683F210(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 1065353216;
}

unint64_t sub_1B683F220()
{
  unint64_t result = qword_1E9DD13E8;
  if (!qword_1E9DD13E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD13E8);
  }
  return result;
}

uint64_t sub_1B683F274(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701080941 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F74636166 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t *sub_1B683F350(uint64_t a1)
{
  uint64_t v3 = *(void *)a1;
  unint64_t v2 = *(void *)(a1 + 8);
  swift_retain_n();
  unint64_t v4 = sub_1B695DFB4(v2);
  swift_release();
  if (v4 == 2) {
    float v5 = 1.0;
  }
  else {
    float v5 = *((float *)&v4 + 1);
  }
  if (v4)
  {
    uint64_t v10 = sub_1B695DAE8(v2);
    float32x4_t v7 = 0uLL;
    if ((v12 & 1) == 0)
    {
      v7.i64[0] = v10;
      v7.i64[1] = v11;
    }
  }
  else
  {
    uint64_t v6 = sub_1B637BBB4();
    float32x4_t v7 = 0uLL;
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = (void *)v6;
      if (v6 != 0xFFFFFFFFLL)
      {
        swift_retain();
        sub_1B62E9D50(v9, (uint64_t)v118);
        swift_release();
        sub_1B62D7610((uint64_t)v118, (uint64_t)v129, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
        float32x4_t v7 = 0uLL;
        if ((v131 & 1) == 0) {
          float32x4_t v7 = v130;
        }
      }
    }
  }
  float32x4_t v115 = v7;
  long long v13 = *(_OWORD *)(a1 + 104);
  long long v136 = *(_OWORD *)(a1 + 88);
  long long v137 = v13;
  uint64_t v138 = *(void *)(a1 + 120);
  sub_1B663D558((uint64_t)v119);
  v134[0] = v119[0];
  v134[1] = v119[1];
  uint64_t v135 = v120;
  sub_1B62C9DA8(v3, (uint64_t)v134, 0x200000000, v121);
  sub_1B62D7610((uint64_t)v121, (uint64_t)v122, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (*(void *)&v122[0])
  {
    if (v128 > 0)
    {
      uint64_t v109 = v125;
      if (v125)
      {
        uint64_t v14 = v127[4];
        char v15 = *(unsigned char *)(v126 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        v132[0] = v122[0];
        v132[1] = v122[1];
        uint64_t v133 = v123;
        uint64_t v107 = (uint64_t)(v127 + 6);
        uint64_t v108 = v124;
        uint64_t v112 = v127;
        uint64_t v106 = v127 + 8;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v16 = 0;
        char v105 = v15;
        while (1)
        {
          uint64_t v17 = (unsigned int *)(v108 + 48 * v16);
          uint64_t v18 = *v17;
          uint64_t v20 = (uint64_t *)*((void *)v17 + 2);
          uint64_t v19 = *((void *)v17 + 3);
          uint64_t v22 = *((void *)v17 + 4);
          uint64_t v21 = *((void *)v17 + 5);
          uint64_t v111 = v16;
          uint64_t v110 = v17[1];
          if (v15)
          {
            uint64_t v23 = *(os_unfair_lock_s **)(v21 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v23);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v14);
          sub_1B62D7610(v107, (uint64_t)v139, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
          uint64_t v24 = v112[4];
          uint64_t v25 = *(void *)(*(void *)(*(void *)(*(void *)(v21 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v112[6] = ecs_stack_allocator_allocate(v24, 48 * v25, 8);
          v112[7] = v25;
          v106[1] = 0;
          v106[2] = 0;
          *uint64_t v106 = 0;
          swift_release();
          id v26 = (float32x4_t *)sub_1B62C9024((uint64_t)&type metadata for Orientation, (uint64_t)&off_1F0F560A8, v20, v19, v22, (uint64_t)v112);
          uint64_t v27 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, v20, v19, v22, (uint64_t)v112);
          uint64_t v29 = (float32x4_t *)v27;
          if (v20)
          {
            if (!v22)
            {
LABEL_41:
              char v15 = v105;
              uint64_t v32 = v111;
              goto LABEL_62;
            }
            float32x4_t v30 = v115;
            v31.i32[3] = v116;
            uint64_t v32 = v111;
            v28.i32[0] = 1.0;
            while (2)
            {
              __int32 v41 = v31.i32[3];
              float32x4_t v31 = *v29;
              v31.i32[3] = v41;
              int8x16_t v42 = (int8x16_t)vabdq_f32(v30, v31);
              if (*(float *)v42.i32 <= 0.00000011921)
              {
                v42.i32[0] = vextq_s8(v42, v42, 8uLL).u32[0];
                *(int32x2_t *)v42.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v42.i8);
                if (v42.i8[4] & 1) != 0 && (v42.i8[0]) {
                  goto LABEL_25;
                }
              }
              float32x4_t v43 = vsubq_f32(v30, v31);
              int32x4_t v44 = (int32x4_t)vmulq_f32(v43, v43);
              v44.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v44, 2), vadd_f32(*(float32x2_t *)v44.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v44.i8, 1))).u32[0];
              float32x2_t v45 = vrsqrte_f32((float32x2_t)v44.u32[0]);
              float32x2_t v46 = vmul_f32(v45, vrsqrts_f32((float32x2_t)v44.u32[0], vmul_f32(v45, v45)));
              float32x4_t v47 = vmulq_n_f32(v43, vmul_f32(v46, vrsqrts_f32((float32x2_t)v44.u32[0], vmul_f32(v46, v46))).f32[0]);
              float32x4_t v48 = vmulq_f32(v47, v47);
              v48.i64[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v48, 2), vaddq_f32(v48, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v48.f32, 1))).u64[0];
              float32x4_t v49 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v48.f32, 0);
              v49.i32[3] = 0;
              float32x4_t v50 = vrsqrteq_f32(v49);
              float32x4_t v51 = vmulq_f32(v50, vrsqrtsq_f32(v49, vmulq_f32(v50, v50)));
              int32x4_t v52 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v48.f32[0] != 0.0)), 0x1FuLL));
              v52.i32[3] = 0;
              int8x16_t v57 = (int8x16_t)vcltzq_s32(v52);
              float32x4_t v53 = (float32x4_t)vbslq_s8(v57, (int8x16_t)vmulq_f32(v47, vmulq_f32(v51, vrsqrtsq_f32(v49, vmulq_f32(v51, v51)))), (int8x16_t)v47);
              v51.i32[0] = v53.i32[2];
              v38.i64[0] = 0x8000000080000000;
              v38.i64[1] = 0x8000000080000000;
              float v54 = *(float *)vbslq_s8(v38, v28, (int8x16_t)v51).i32;
              *(float *)v38.i32 = v53.f32[1] / (float)(fabsf(v53.f32[2]) + *(float *)v28.i32);
              float v55 = vmuls_lane_f32(*(float *)v38.i32, *(float32x2_t *)v53.f32, 1);
              *(float *)v38.i32 = -(float)(v53.f32[0] * *(float *)v38.i32);
              float v56 = v53.f32[2] + (float)(v54 * v55);
              *(float *)v57.i32 = v54 * *(float *)v38.i32;
              float v58 = *(float *)v28.i32 - v55;
              float v59 = vmuls_lane_f32(-v54, *(float32x2_t *)v53.f32, 1);
              float v60 = v53.f32[2] + (float)(v56 + v58);
              __int32 v117 = v31.i32[3];
              if (v60 > 0.0)
              {
                float32x2_t v33 = (float32x2_t)vrev64_s32(*(int32x2_t *)v53.f32);
                *(int32x2_t *)v37.f32 = vdup_lane_s32((int32x2_t)vadd_f32(*(float32x2_t *)v53.f32, *(float32x2_t *)v53.f32), 0);
                v37.i32[0] = vsub_f32((float32x2_t)__PAIR64__(v33.u32[1], LODWORD(v59)), v33).u32[0];
                float32x2_t v34 = (float32x2_t)__PAIR64__(COERCE_UNSIGNED_INT(sqrtf(v60 + *(float *)v28.i32)), v57.u32[0]);
                float32x2_t v35 = vmul_f32(v34, v34);
                v34.i32[0] = v38.i32[0];
                unsigned __int32 v36 = vsub_f32(*(float32x2_t *)v57.i8, v34).u32[0];
                v38.i32[1] = v35.i32[1];
                v37.i64[1] = v38.i64[0];
                *(float *)v38.i32 = 0.5 / v34.f32[1];
              }
              else
              {
                if (v56 >= v58 && v56 >= v53.f32[2])
                {
                  float v63 = sqrtf((float)((float)(v56 + *(float *)v28.i32) - v58) - v53.f32[2]);
                  v39.f32[0] = v63 * v63;
                  v39.f32[1] = *(float *)v38.i32 + *(float *)v57.i32;
                  int32x2_t v64 = (int32x2_t)vsub_f32((float32x2_t)__PAIR64__(LODWORD(v59), v53.u32[0]), *(float32x2_t *)v53.f32);
                  goto LABEL_37;
                }
                if (v58 > v53.f32[2])
                {
                  float v63 = sqrtf((float)((float)(v58 + *(float *)v28.i32) - v56) - v53.f32[2]);
                  v39.f32[0] = *(float *)v38.i32 + *(float *)v57.i32;
                  float32x2_t v62 = (float32x2_t)vrev64_s32(*(int32x2_t *)v53.f32);
                  v39.f32[1] = v63 * v63;
                  int32x2_t v64 = (int32x2_t)vadd_f32(v62, (float32x2_t)__PAIR64__(v62.u32[1], LODWORD(v59)));
LABEL_37:
                  *(int32x2_t *)&v39.u32[2] = v64;
                  *(float *)v64.i32 = 0.5 / v63;
                  float32x4_t v37 = (float32x4_t)vdupq_lane_s32(v64, 0);
LABEL_24:
                  sub_1B683FC58(*v26, vmulq_f32(v37, v39), v5);
                  *id v26 = v40;
                  float32x4_t v30 = v115;
                  v31.i32[3] = v117;
                  v28.i32[0] = 1.0;
LABEL_25:
                  ++v29;
                  ++v26;
                  if (!--v22)
                  {
                    __int32 v116 = v31.i32[3];
                    goto LABEL_61;
                  }
                  continue;
                }
                float v65 = sqrtf((float)((float)(v53.f32[2] + *(float *)v28.i32) - v56) - v58);
                v37.i32[0] = vsubq_f32(v53, v53).u32[0];
                v37.f32[1] = v53.f32[1] + v59;
                v37.f32[2] = v65 * v65;
                v37.f32[3] = *(float *)v57.i32 - *(float *)v38.i32;
                *(float *)v38.i32 = 0.5 / v65;
              }
              break;
            }
            float32x4_t v39 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v38.i8, 0);
            goto LABEL_24;
          }
          if (v18 == v110) {
            goto LABEL_41;
          }
          uint64_t v66 = v110 - v18;
          uint64_t v67 = (float32x4_t *)(v27 + 16 * v18);
          uint64_t v68 = &v26[v18];
          v70.i32[3] = v113;
          float32x4_t v69 = v115;
          uint64_t v32 = v111;
          v28.i32[0] = 1.0;
          do
          {
            __int32 v79 = v70.i32[3];
            float32x4_t v70 = *v67;
            v70.i32[3] = v79;
            int8x16_t v80 = (int8x16_t)vabdq_f32(v69, v70);
            if (*(float *)v80.i32 > 0.00000011921
              || (v80.i32[0] = vextq_s8(v80, v80, 8uLL).u32[0],
                  *(int32x2_t *)v80.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v80.i8),
                  (v80.i8[4] & 1) == 0)
              || (v80.i8[0] & 1) == 0)
            {
              __int32 v114 = v70.i32[3];
              float32x4_t v81 = vsubq_f32(v69, v70);
              int32x4_t v82 = (int32x4_t)vmulq_f32(v81, v81);
              v82.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v82, 2), vadd_f32(*(float32x2_t *)v82.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v82.i8, 1))).u32[0];
              float32x2_t v83 = vrsqrte_f32((float32x2_t)v82.u32[0]);
              float32x2_t v84 = vmul_f32(v83, vrsqrts_f32((float32x2_t)v82.u32[0], vmul_f32(v83, v83)));
              float32x4_t v85 = vmulq_n_f32(v81, vmul_f32(v84, vrsqrts_f32((float32x2_t)v82.u32[0], vmul_f32(v84, v84))).f32[0]);
              float32x4_t v86 = vmulq_f32(v85, v85);
              v86.i64[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v86, 2), vaddq_f32(v86, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v86.f32, 1))).u64[0];
              float32x4_t v87 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v86.f32, 0);
              v87.i32[3] = 0;
              float32x4_t v88 = vrsqrteq_f32(v87);
              float32x4_t v89 = vmulq_f32(v88, vrsqrtsq_f32(v87, vmulq_f32(v88, v88)));
              int32x4_t v90 = vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vdup_n_s16(v86.f32[0] != 0.0)), 0x1FuLL));
              v90.i32[3] = 0;
              int8x16_t v95 = (int8x16_t)vcltzq_s32(v90);
              float32x4_t v91 = (float32x4_t)vbslq_s8(v95, (int8x16_t)vmulq_f32(v85, vmulq_f32(v89, vrsqrtsq_f32(v87, vmulq_f32(v89, v89)))), (int8x16_t)v85);
              v89.i32[0] = v91.i32[2];
              v76.i64[0] = 0x8000000080000000;
              v76.i64[1] = 0x8000000080000000;
              float v92 = *(float *)vbslq_s8(v76, v28, (int8x16_t)v89).i32;
              *(float *)v76.i32 = v91.f32[1] / (float)(fabsf(v91.f32[2]) + *(float *)v28.i32);
              float v93 = vmuls_lane_f32(*(float *)v76.i32, *(float32x2_t *)v91.f32, 1);
              *(float *)v76.i32 = -(float)(v91.f32[0] * *(float *)v76.i32);
              float v94 = v91.f32[2] + (float)(v92 * v93);
              *(float *)v95.i32 = v92 * *(float *)v76.i32;
              float v96 = *(float *)v28.i32 - v93;
              float v97 = vmuls_lane_f32(-v92, *(float32x2_t *)v91.f32, 1);
              float v98 = v91.f32[2] + (float)(v94 + v96);
              if (v98 > 0.0)
              {
                float32x2_t v71 = (float32x2_t)vrev64_s32(*(int32x2_t *)v91.f32);
                *(int32x2_t *)v75.f32 = vdup_lane_s32((int32x2_t)vadd_f32(*(float32x2_t *)v91.f32, *(float32x2_t *)v91.f32), 0);
                v75.i32[0] = vsub_f32((float32x2_t)__PAIR64__(v71.u32[1], LODWORD(v97)), v71).u32[0];
                float32x2_t v72 = (float32x2_t)__PAIR64__(COERCE_UNSIGNED_INT(sqrtf(v98 + *(float *)v28.i32)), v95.u32[0]);
                float32x2_t v73 = vmul_f32(v72, v72);
                v72.i32[0] = v76.i32[0];
                unsigned __int32 v74 = vsub_f32(*(float32x2_t *)v95.i8, v72).u32[0];
                v76.i32[1] = v73.i32[1];
                v75.i64[1] = v76.i64[0];
                *(float *)v76.i32 = 0.5 / v72.f32[1];
              }
              else
              {
                if (v94 >= v96 && v94 >= v91.f32[2])
                {
                  float v101 = sqrtf((float)((float)(v94 + *(float *)v28.i32) - v96) - v91.f32[2]);
                  v77.f32[0] = v101 * v101;
                  v77.f32[1] = *(float *)v76.i32 + *(float *)v95.i32;
                  int32x2_t v102 = (int32x2_t)vsub_f32((float32x2_t)__PAIR64__(LODWORD(v97), v91.u32[0]), *(float32x2_t *)v91.f32);
                  goto LABEL_58;
                }
                if (v96 > v91.f32[2])
                {
                  float v101 = sqrtf((float)((float)(v96 + *(float *)v28.i32) - v94) - v91.f32[2]);
                  v77.f32[0] = *(float *)v76.i32 + *(float *)v95.i32;
                  float32x2_t v100 = (float32x2_t)vrev64_s32(*(int32x2_t *)v91.f32);
                  v77.f32[1] = v101 * v101;
                  int32x2_t v102 = (int32x2_t)vadd_f32(v100, (float32x2_t)__PAIR64__(v100.u32[1], LODWORD(v97)));
LABEL_58:
                  *(int32x2_t *)&v77.u32[2] = v102;
                  *(float *)v102.i32 = 0.5 / v101;
                  float32x4_t v75 = (float32x4_t)vdupq_lane_s32(v102, 0);
LABEL_45:
                  sub_1B683FC58(*v68, vmulq_f32(v75, v77), v5);
                  *uint64_t v68 = v78;
                  v70.i32[3] = v114;
                  float32x4_t v69 = v115;
                  v28.i32[0] = 1.0;
                  goto LABEL_46;
                }
                float v103 = sqrtf((float)((float)(v91.f32[2] + *(float *)v28.i32) - v94) - v96);
                v75.i32[0] = vsubq_f32(v91, v91).u32[0];
                v75.f32[1] = v91.f32[1] + v97;
                v75.f32[2] = v103 * v103;
                v75.f32[3] = *(float *)v95.i32 - *(float *)v76.i32;
                *(float *)v76.i32 = 0.5 / v103;
              }
              float32x4_t v77 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v76.i8, 0);
              goto LABEL_45;
            }
LABEL_46:
            ++v67;
            ++v68;
            --v66;
          }
          while (v66);
          __int32 v113 = v70.i32[3];
LABEL_61:
          char v15 = v105;
LABEL_62:
          sub_1B6345178(v112, (unsigned __int16 **)v132, (uint64_t)v139);
          sub_1B634507C((char *)v21);
          ecs_stack_allocator_pop_snapshot(v14);
          if (v15)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 376));
          }
          swift_release();
          uint64_t v16 = v32 + 1;
          if (v16 == v109) {
            goto LABEL_66;
          }
        }
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_66:
    swift_release();
    sub_1B62CA064((uint64_t)v119);
    sub_1B632F170(v121);
    return sub_1B632F170(v121);
  }
  else
  {
    swift_release();
    return (uint64_t *)sub_1B62CA064((uint64_t)v119);
  }
}

void sub_1B683FC58(float32x4_t a1, float32x4_t a2, float a3)
{
  float32x4_t v3 = vmulq_f32(a1, a2);
  float32x4_t v4 = (float32x4_t)vextq_s8((int8x16_t)v3, (int8x16_t)v3, 8uLL);
  *(float32x2_t *)v3.f32 = vadd_f32(*(float32x2_t *)v3.f32, *(float32x2_t *)v4.f32);
  v3.f32[0] = vaddv_f32(*(float32x2_t *)v3.f32);
  v4.i64[0] = 0;
  sub_1B6840298(a1, (float32x4_t)vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmvnq_s8((int8x16_t)vcgeq_f32(v3, v4)), 0), (int8x16_t)vnegq_f32(a2), (int8x16_t)a2), a3);
}

uint64_t getEnumTagSinglePayload for OrientationConstraint(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[8]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OrientationConstraint(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrientationConstraint()
{
  return &type metadata for OrientationConstraint;
}

ValueMetadata *type metadata accessor for OrientationConstraint.Mode()
{
  return &type metadata for OrientationConstraint.Mode;
}

unint64_t sub_1B683FD30()
{
  unint64_t result = qword_1E9DD13F0;
  if (!qword_1E9DD13F0)
  {
    sub_1B62D84F0(255, &qword_1E9DD13F8, (uint64_t)&type metadata for OrientationConstraint.Mode, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD13F0);
  }
  return result;
}

unint64_t sub_1B683FDB0()
{
  unint64_t result = qword_1E9DD1400;
  if (!qword_1E9DD1400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1400);
  }
  return result;
}

float sub_1B683FE04(void *a1)
{
  sub_1B6840028(0, &qword_1E9DD1408, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B683FFD4();
  sub_1B6E33A48();
  if (!v1)
  {
    char v14 = 0;
    sub_1B66C4EDC();
    sub_1B6E32DF8();
    char v13 = 1;
    sub_1B6E32DC8();
    float v2 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  return v2;
}

unint64_t sub_1B683FFD4()
{
  unint64_t result = qword_1E9DD1410;
  if (!qword_1E9DD1410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1410);
  }
  return result;
}

void sub_1B6840028(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B683FFD4();
    unint64_t v7 = a3(a1, &type metadata for OrientationConstraint.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *_s3VFX21OrientationConstraintV4ModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6840158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrientationConstraint.CodingKeys()
{
  return &type metadata for OrientationConstraint.CodingKeys;
}

unint64_t sub_1B6840194()
{
  unint64_t result = qword_1E9DD1420;
  if (!qword_1E9DD1420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1420);
  }
  return result;
}

unint64_t sub_1B68401EC()
{
  unint64_t result = qword_1E9DD1428;
  if (!qword_1E9DD1428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1428);
  }
  return result;
}

unint64_t sub_1B6840244()
{
  unint64_t result = qword_1E9DD1430;
  if (!qword_1E9DD1430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1430);
  }
  return result;
}

void sub_1B6840298(float32x4_t a1, float32x4_t a2, float a3)
{
  float v5 = 1.0 - a3;
  float32x4_t v6 = vsubq_f32(a1, a2);
  int8x16_t v7 = (int8x16_t)vmulq_f32(v6, v6);
  float32x4_t v8 = vaddq_f32(a1, a2);
  int8x16_t v9 = (int8x16_t)vmulq_f32(v8, v8);
  float v10 = atan2f(sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)))), sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v9.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL)))));
  float v11 = v10 + v10;
  if ((float)(v10 + v10) != 0.0) {
    sinf(v11);
  }
  if ((float)(v5 * v11) != 0.0) {
    sinf(v5 * v11);
  }
  float v12 = v11 * a3;
  if (v12 != 0.0) {
    sinf(v12);
  }
}

uint64_t sub_1B6840404()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B6840414(void *a1, char a2)
{
  sub_1B6844F00(0, &qword_1E9DD1468, (uint64_t (*)(void))sub_1B6844EAC, (uint64_t)&type metadata for KillShape.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v8);
  float v10 = (char *)&v12 - v9;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6844EAC();
  sub_1B6E33A88();
  char v15 = a2;
  char v14 = 0;
  sub_1B66C4E5C();
  sub_1B6E32FA8();
  if (!v2)
  {
    char v13 = 1;
    sub_1B6E32F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1B68405C0()
{
  return sub_1B6E31BC8();
}

uint64_t sub_1B6840620()
{
  return sub_1B6E31B28();
}

void sub_1B6840670(void *a1@<X8>)
{
  *a1 = &unk_1F0FA8878;
}

uint64_t sub_1B6840680(char *a1, char *a2)
{
  return sub_1B6BBAAA8(*a1, *a2);
}

uint64_t sub_1B684068C()
{
  if (*v0) {
    return 0x656469736E69;
  }
  else {
    return 0x6570616873;
  }
}

uint64_t sub_1B68406C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B6841B9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B68406E8(uint64_t a1)
{
  unint64_t v2 = sub_1B6844EAC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6840724(uint64_t a1)
{
  unint64_t v2 = sub_1B6844EAC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6840760@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1B6841C80(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1B6840794(void *a1)
{
  return sub_1B6840414(a1, *v1);
}

void sub_1B68407C4(_WORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1B68407CC(uint64_t a1)
{
  unint64_t v2 = sub_1B6844F68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B6840808(uint64_t a1)
{
  unint64_t v2 = sub_1B6844F68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B6840844(void *a1)
{
  sub_1B6844F00(0, &qword_1E9DD1470, (uint64_t (*)(void))sub_1B6844F68, (uint64_t)&type metadata for ParticleKillable.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6844F68();
  sub_1B6E33A88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1B6840988()
{
  return type metadata accessor for ParticleKillable.CPUSystem();
}

double sub_1B68409A8()
{
  if (qword_1EB97DC28 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EB997A18;
  int v4 = 0;
  char v5 = 2;
  uint64_t v6 = 0;
  char v7 = 2;
  uint64_t v8 = 0;
  swift_retain();
  sub_1B663D778((uint64_t)v1);
  swift_release();
  double result = *(double *)v1;
  xmmword_1E9E49368 = v1[0];
  unk_1E9E49378 = v1[1];
  qword_1E9E49388 = v2;
  return result;
}

uint64_t *sub_1B6840A54(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = qword_1E9DCC4D8;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  v156[0] = xmmword_1E9E49368;
  v156[1] = unk_1E9E49378;
  uint64_t v157 = qword_1E9E49388;
  sub_1B62C9DA8(v1, (uint64_t)v156, 0x200000000, v130);
  sub_1B62D7690((uint64_t)v130, (uint64_t)v143, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v143[0]) {
    return (uint64_t *)swift_release();
  }
  long long v150 = v143[0];
  long long v151 = v143[1];
  uint64_t v152 = v144;
  if (v149 <= 0)
  {
    swift_release();
    return sub_1B632F170(v130);
  }
  uint64_t v108 = v146;
  if (!v146)
  {
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_117:
    swift_release();
    sub_1B632F170(v130);
    return sub_1B632F170(v130);
  }
  uint64_t v3 = v148;
  uint64_t v107 = v145;
  uint64_t v4 = v148[4];
  char v5 = *(unsigned char *)(v147 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  char v105 = v148 + 8;
  uint64_t v106 = (uint64_t)(v148 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v6 = 0;
  uint64_t v116 = 0;
  uint64_t v103 = v4;
  uint64_t v104 = v3;
  char v102 = v5;
  while (1)
  {
    char v7 = (unsigned int *)(v107 + 48 * v6);
    uint64_t v124 = *v7;
    uint64_t v113 = v7[1];
    uint64_t v9 = (uint64_t *)*((void *)v7 + 2);
    uint64_t v8 = *((void *)v7 + 3);
    uint64_t v10 = *((void *)v7 + 5);
    uint64_t v120 = *((void *)v7 + 4);
    uint64_t v119 = v10;
    if (v5)
    {
      float v11 = *(os_unfair_lock_s **)(v10 + 376);
      swift_retain();
      uint64_t v12 = v11;
      uint64_t v10 = v119;
      os_unfair_lock_lock(v12);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v119 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v4);
    sub_1B62D7690(v106, (uint64_t)v155, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v13 = v3[4];
    uint64_t v14 = *(void *)(*(void *)(*(void *)(*(void *)(v10 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v3[6] = ecs_stack_allocator_allocate(v13, 48 * v14, 8);
    v3[7] = v14;
    v105[1] = 0;
    _OWORD v105[2] = 0;
    *char v105 = 0;
    swift_release();
    uint64_t v15 = v120;
    uint64_t v16 = sub_1B62C9024((uint64_t)&type metadata for KillShape, (uint64_t)&off_1F0FA8978, v9, v8, v120, (uint64_t)v3);
    uint64_t v128 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v9, v8, v120, (uint64_t)v3);
    uint64_t v129 = v16;
    uint64_t v115 = v6;
    if (!v9) {
      break;
    }
    uint64_t v17 = v116;
    if (v120)
    {
      uint64_t v18 = 0;
      int v19 = *(_DWORD *)(a1 + 36);
      uint64_t v20 = *(int *)(a1 + 32);
      BOOL v22 = v20 == -1 && v19 == 0;
      BOOL v122 = v22;
      int v125 = *(_DWORD *)(a1 + 36);
      while (1)
      {
        swift_retain();
        if (v122) {
          goto LABEL_119;
        }
        if ((v20 & 0x80000000) != 0) {
          goto LABEL_119;
        }
        uint64_t v23 = (uint64_t *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        if (*(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v20) {
          goto LABEL_119;
        }
        uint64_t v24 = *v23;
        uint64_t v25 = *v23 + 12 * (int)v20;
        int v26 = *(__int16 *)(v25 + 4);
        if (v19 != -1 && *(_DWORD *)(v25 + 8) != v19) {
          goto LABEL_119;
        }
        uint64_t v27 = *(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v24 + 12 * (int)v20) + 32);
        uint64_t v28 = *(void *)(v27 + 48);
        uint64_t v29 = *(void *)(v28 + 16);
        if (!v29) {
          goto LABEL_119;
        }
        float32x4_t v30 = (unsigned char *)(v16 + 2 * v18);
        float32x4_t v31 = (void *)(v28 + 56);
        uint64_t v32 = (float32x2_t *)(v128 + (v18 << 6));
        while ((ValueMetadata *)*(v31 - 3) != &type metadata for EmitterDescription)
        {
          v31 += 5;
          if (!--v29) {
            goto LABEL_119;
          }
        }
        char v33 = *(unsigned char *)(*(void *)(v27 + 128) + *v31 + 88 * v26 + 56);
        swift_release();
        if ((v33 & 1) == 0)
        {
          __int32 v41 = *(void **)(v1 + 176);
          swift_retain();
          swift_retain();
          os_unfair_recursive_lock_lock_with_options();
          uint64_t v42 = v41[6];
          uint64_t v43 = *(void *)(v42 + 16);
          if (!v43) {
            goto LABEL_50;
          }
          unint64_t v44 = 0;
          float32x2_t v45 = (void *)(v42 + 56);
          uint64_t v46 = 24;
          while ((ValueMetadata *)*(v45 - 3) != &type metadata for WorldFromScene)
          {
            ++v44;
            v46 += 32;
            v45 += 5;
            if (v43 == v44) {
              goto LABEL_50;
            }
          }
          if (v44 < 0x40 && ((v41[15] >> v44) & 1) != 0)
          {
            float32x4_t v48 = (simd_float4x4 *)(v41[2] + *v45);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v41[4] + v46));
            os_unfair_recursive_lock_unlock();
            simd_float4x4 v158 = *v48;
            uint64_t v15 = v120;
            simd_float4x4 v159 = __invert_f4(v158);
            simd_float4 v117 = v159.columns[0];
            simd_float4 v111 = v159.columns[2];
            simd_float4 v114 = v159.columns[1];
            simd_float4 v109 = v159.columns[3];
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v41[4] + v46));
            swift_release();
            swift_release();
            float32x4_t v50 = (float32x4_t)v109;
            float32x4_t v49 = (float32x4_t)v111;
            float32x4_t v51 = (float32x4_t)v114;
            float32x4_t v52 = (float32x4_t)v117;
          }
          else
          {
LABEL_50:
            os_unfair_recursive_lock_unlock();
            swift_release();
            swift_release();
            float32x4_t v50 = (float32x4_t)xmmword_1B6E4F370;
            float32x4_t v49 = (float32x4_t)xmmword_1B6E4F2E0;
            float32x4_t v51 = (float32x4_t)xmmword_1B6E4F320;
            float32x4_t v52 = (float32x4_t)xmmword_1B6E4F300;
          }
          int v19 = v125;
          goto LABEL_58;
        }
        float32x2_t v34 = (uint64_t *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v35 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
        swift_retain();
        BOOL v36 = v35 <= v20;
        int v19 = v125;
        if (v36) {
          break;
        }
        uint64_t v37 = *v34;
        if (v125 != -1 && *(_DWORD *)(v37 + 12 * (int)v20 + 8) != v125) {
          break;
        }
        sub_1B631200C(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v37 + 12 * (int)v20) + 32), *(_DWORD *)(v37 + 12 * (int)v20), *(_WORD *)(v37 + 12 * (int)v20 + 4), 64, v1, (uint64_t)v131);
        swift_release();
        sub_1B62D7690((uint64_t)v131, (uint64_t)v137, &qword_1EB97F678, (uint64_t)&type metadata for InverseWorldTransform);
        if (v138) {
          goto LABEL_37;
        }
        float32x4_t v52 = v137[0];
        float32x4_t v51 = v137[1];
        float32x4_t v49 = v137[2];
        float32x4_t v50 = v137[3];
LABEL_58:
        float32x4_t v53 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v52, COERCE_FLOAT(*(_OWORD *)v32->f32)), v51, *v32, 1), v49, *(float32x4_t *)v32->f32, 2), v50, *(float32x4_t *)v32->f32, 3);
        float32x4_t v54 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v52, COERCE_FLOAT(*(_OWORD *)v32[2].f32)), v51, v32[2], 1), v49, *(float32x4_t *)v32[2].f32, 2), v50, *(float32x4_t *)v32[2].f32, 3);
        float32x4_t v55 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v52, COERCE_FLOAT(*(_OWORD *)v32[4].f32)), v51, v32[4], 1), v49, *(float32x4_t *)v32[4].f32, 2), v50, *(float32x4_t *)v32[4].f32, 3);
        float32x4_t v56 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v52, COERCE_FLOAT(*(_OWORD *)v32[6].f32)), v51, v32[6], 1), v49, *(float32x4_t *)v32[6].f32, 2), v50, *(float32x4_t *)v32[6].f32, 3);
        if (*v30)
        {
          uint64_t v16 = v129;
          uint64_t v57 = v129 + 2 * v18;
          if (*v30 == 1) {
            sub_1B6842974(*(unsigned char *)(v57 + 1), v1, v127, v53, v54, v55, v56);
          }
          else {
            sub_1B684375C((uint64_t *)*(unsigned __int8 *)(v57 + 1), v1, v127, v53, v54, v55, v56);
          }
        }
        else
        {
          uint64_t v16 = v129;
          sub_1B6841F48(*(unsigned char *)(v129 + 2 * v18 + 1), v1, v127, v53, v54, v55, v56);
        }
        if (++v18 == v15) {
          goto LABEL_63;
        }
      }
      swift_release();
LABEL_37:
      int8x16_t v38 = (uint64_t *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      uint64_t v39 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
      swift_retain();
      if (v39 <= v20)
      {
        swift_release();
        v47.columns[3] = (simd_float4)xmmword_1B6E4F370;
        v47.columns[2] = (simd_float4)xmmword_1B6E4F2E0;
        v47.columns[1] = (simd_float4)xmmword_1B6E4F320;
        v47.columns[0] = (simd_float4)xmmword_1B6E4F300;
        int v19 = v125;
      }
      else
      {
        uint64_t v40 = *v38;
        int v19 = v125;
        if (v125 == -1 || *(_DWORD *)(v40 + 12 * (int)v20 + 8) == v125)
        {
          sub_1B633C4F4(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v40 + 12 * (int)v20) + 32), *(_DWORD *)(v40 + 12 * (int)v20), *(_WORD *)(v40 + 12 * (int)v20 + 4), 64, v1, (uint64_t)v132);
          swift_release();
          sub_1B62D7690((uint64_t)v132, (uint64_t)&v135, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
          if ((v136 & 1) == 0)
          {
            simd_float4x4 v47 = v135;
            goto LABEL_57;
          }
        }
        else
        {
          swift_release();
        }
        v47.columns[3] = (simd_float4)xmmword_1B6E4F370;
        v47.columns[2] = (simd_float4)xmmword_1B6E4F2E0;
        v47.columns[1] = (simd_float4)xmmword_1B6E4F320;
        v47.columns[0] = (simd_float4)xmmword_1B6E4F300;
      }
LABEL_57:
      simd_float4x4 v160 = __invert_f4(v47);
      float32x4_t v52 = (float32x4_t)v160.columns[0];
      float32x4_t v51 = (float32x4_t)v160.columns[1];
      float32x4_t v49 = (float32x4_t)v160.columns[2];
      float32x4_t v50 = (float32x4_t)v160.columns[3];
      goto LABEL_58;
    }
LABEL_63:
    v153[0] = v150;
    v153[1] = v151;
    uint64_t v154 = v152;
    uint64_t v3 = v104;
    sub_1B6345178(v104, (unsigned __int16 **)v153, (uint64_t)v155);
    uint64_t v116 = v17;
    sub_1B634507C((char *)v119);
    uint64_t v4 = v103;
    ecs_stack_allocator_pop_snapshot(v103);
    char v5 = v102;
    if (v102)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v119 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v119 + 376));
    }
    swift_release();
    uint64_t v6 = v115 + 1;
    if (v115 + 1 == v108) {
      goto LABEL_117;
    }
  }
  uint64_t v58 = v113;
  uint64_t v59 = v124;
  uint64_t v17 = v116;
  if (v124 == v113) {
    goto LABEL_63;
  }
  int v60 = *(_DWORD *)(a1 + 36);
  uint64_t v61 = *(int *)(a1 + 32);
  BOOL v63 = v61 == -1 && v60 == 0;
  BOOL v121 = v63;
  int v123 = *(_DWORD *)(a1 + 36);
  while (1)
  {
    uint64_t v64 = v59;
    swift_retain();
    if (v121) {
      break;
    }
    if ((v61 & 0x80000000) != 0) {
      break;
    }
    float v65 = (uint64_t *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (*(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v61) {
      break;
    }
    uint64_t v66 = *v65;
    uint64_t v67 = *v65 + 12 * (int)v61;
    int v68 = *(__int16 *)(v67 + 4);
    if (v60 != -1 && *(_DWORD *)(v67 + 8) != v60) {
      break;
    }
    uint64_t v69 = *(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v66 + 12 * (int)v61) + 32);
    uint64_t v70 = *(void *)(v69 + 48);
    uint64_t v71 = *(void *)(v70 + 16);
    if (!v71) {
      break;
    }
    ++v59;
    float32x2_t v72 = (unsigned char *)(v16 + 2 * v64);
    float32x2_t v73 = (void *)(v70 + 56);
    unsigned __int32 v74 = (float32x2_t *)(v128 + (v64 << 6));
    while ((ValueMetadata *)*(v73 - 3) != &type metadata for EmitterDescription)
    {
      v73 += 5;
      if (!--v71) {
        goto LABEL_119;
      }
    }
    uint64_t v126 = v72;
    char v75 = *(unsigned char *)(*(void *)(v69 + 128) + *v73 + 88 * v68 + 56);
    swift_release();
    if ((v75 & 1) == 0)
    {
      int32x4_t v82 = *(void **)(v1 + 176);
      swift_retain();
      swift_retain();
      os_unfair_recursive_lock_lock_with_options();
      uint64_t v83 = v82[6];
      uint64_t v84 = *(void *)(v83 + 16);
      if (!v84) {
        goto LABEL_102;
      }
      unint64_t v85 = 0;
      float32x4_t v86 = (void *)(v83 + 56);
      uint64_t v87 = 24;
      while ((ValueMetadata *)*(v86 - 3) != &type metadata for WorldFromScene)
      {
        ++v85;
        v87 += 32;
        v86 += 5;
        if (v84 == v85) {
          goto LABEL_102;
        }
      }
      if (v85 < 0x40 && ((v82[15] >> v85) & 1) != 0)
      {
        float32x4_t v89 = (simd_float4x4 *)(v82[2] + *v86);
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v82[4] + v87));
        os_unfair_recursive_lock_unlock();
        simd_float4x4 v161 = *v89;
        uint64_t v58 = v113;
        simd_float4x4 v162 = __invert_f4(v161);
        simd_float4 v118 = v162.columns[0];
        simd_float4 v110 = v162.columns[2];
        simd_float4 v112 = v162.columns[1];
        simd_float4 v100 = v162.columns[3];
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v82[4] + v87));
        swift_release();
        swift_release();
        float32x4_t v90 = (float32x4_t)v100;
        float32x4_t v92 = (float32x4_t)v110;
        float32x4_t v91 = (float32x4_t)v112;
        float32x4_t v93 = (float32x4_t)v118;
      }
      else
      {
LABEL_102:
        os_unfair_recursive_lock_unlock();
        swift_release();
        swift_release();
        float32x4_t v93 = (float32x4_t)xmmword_1B6E4F300;
        float32x4_t v91 = (float32x4_t)xmmword_1B6E4F320;
        float32x4_t v92 = (float32x4_t)xmmword_1B6E4F2E0;
        float32x4_t v90 = (float32x4_t)xmmword_1B6E4F370;
      }
      int v60 = v123;
      goto LABEL_110;
    }
    int8x16_t v76 = (uint64_t *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v77 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
    swift_retain();
    BOOL v36 = v77 <= v61;
    int v60 = v123;
    if (v36 || (uint64_t v78 = *v76, v123 != -1) && *(_DWORD *)(v78 + 12 * (int)v61 + 8) != v123)
    {
      swift_release();
LABEL_89:
      __int32 v79 = (uint64_t *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      uint64_t v80 = *(void *)(v1 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
      swift_retain();
      if (v80 <= v61)
      {
        swift_release();
        v88.columns[0] = (simd_float4)xmmword_1B6E4F300;
        v88.columns[1] = (simd_float4)xmmword_1B6E4F320;
        v88.columns[2] = (simd_float4)xmmword_1B6E4F2E0;
        v88.columns[3] = (simd_float4)xmmword_1B6E4F370;
        int v60 = v123;
      }
      else
      {
        uint64_t v81 = *v79;
        int v60 = v123;
        if (v123 != -1 && *(_DWORD *)(v81 + 12 * (int)v61 + 8) != v123)
        {
          swift_release();
          goto LABEL_107;
        }
        sub_1B633C4F4(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v81 + 12 * (int)v61) + 32), *(_DWORD *)(v81 + 12 * (int)v61), *(_WORD *)(v81 + 12 * (int)v61 + 4), 64, v1, (uint64_t)v134);
        swift_release();
        sub_1B62D7690((uint64_t)v134, (uint64_t)&v139, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
        if (v140)
        {
LABEL_107:
          v88.columns[0] = (simd_float4)xmmword_1B6E4F300;
          v88.columns[1] = (simd_float4)xmmword_1B6E4F320;
          v88.columns[2] = (simd_float4)xmmword_1B6E4F2E0;
          v88.columns[3] = (simd_float4)xmmword_1B6E4F370;
        }
        else
        {
          simd_float4x4 v88 = v139;
        }
      }
      simd_float4x4 v163 = __invert_f4(v88);
      float32x4_t v93 = (float32x4_t)v163.columns[0];
      float32x4_t v91 = (float32x4_t)v163.columns[1];
      float32x4_t v92 = (float32x4_t)v163.columns[2];
      float32x4_t v90 = (float32x4_t)v163.columns[3];
      goto LABEL_110;
    }
    sub_1B631200C(*(void *)(*(void *)(v1 + 136) + 8 * *(int *)(v78 + 12 * (int)v61) + 32), *(_DWORD *)(v78 + 12 * (int)v61), *(_WORD *)(v78 + 12 * (int)v61 + 4), 64, v1, (uint64_t)v133);
    swift_release();
    sub_1B62D7690((uint64_t)v133, (uint64_t)v141, &qword_1EB97F678, (uint64_t)&type metadata for InverseWorldTransform);
    if (v142) {
      goto LABEL_89;
    }
    float32x4_t v93 = v141[0];
    float32x4_t v91 = v141[1];
    float32x4_t v92 = v141[2];
    float32x4_t v90 = v141[3];
LABEL_110:
    float32x4_t v94 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v93, COERCE_FLOAT(*(_OWORD *)v74->f32)), v91, *v74, 1), v92, *(float32x4_t *)v74->f32, 2), v90, *(float32x4_t *)v74->f32, 3);
    float32x4_t v95 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v93, COERCE_FLOAT(*(_OWORD *)v74[2].f32)), v91, v74[2], 1), v92, *(float32x4_t *)v74[2].f32, 2), v90, *(float32x4_t *)v74[2].f32, 3);
    float32x4_t v96 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v93, COERCE_FLOAT(*(_OWORD *)v74[4].f32)), v91, v74[4], 1), v92, *(float32x4_t *)v74[4].f32, 2), v90, *(float32x4_t *)v74[4].f32, 3);
    float32x4_t v97 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v93, COERCE_FLOAT(*(_OWORD *)v74[6].f32)), v91, v74[6], 1), v92, *(float32x4_t *)v74[6].f32, 2), v90, *(float32x4_t *)v74[6].f32, 3);
    if (*v126)
    {
      uint64_t v16 = v129;
      uint64_t v98 = v129 + 2 * v64;
      if (*v126 == 1) {
        sub_1B6842974(*(unsigned char *)(v98 + 1), v1, v127, v94, v95, v96, v97);
      }
      else {
        sub_1B684375C((uint64_t *)*(unsigned __int8 *)(v98 + 1), v1, v127, v94, v95, v96, v97);
      }
    }
    else
    {
      uint64_t v16 = v129;
      sub_1B6841F48(*(unsigned char *)(v129 + 2 * v64 + 1), v1, v127, v94, v95, v96, v97);
    }
    if (v59 == v58) {
      goto LABEL_63;
    }
  }
LABEL_119:
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B681F698();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  double result = (uint64_t *)sub_1B6E32BE8();
  __break(1u);
  return result;
}

uint64_t sub_1B684183C(uint64_t a1, float32x4_t a2, float a3)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = ecs_stack_allocator_allocate(*(void *)(v7 + 32), 8 * (v6 - v5), 8);
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, *(uint64_t **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), v7);
  uint64_t v11 = 0;
  for (uint64_t i = v6 - v5; v6 != v5; ++v5)
  {
    int8x16_t v13 = (int8x16_t)vmulq_f32(*(float32x4_t *)(v10 + 16 * v5), a2);
    if ((float)(vaddv_f32(vadd_f32(*(float32x2_t *)v13.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL))) * a3) < 0.0) {
      v8[v11++] = v5;
    }
  }
  uint64_t v28 = 0;
  memset(v27, 0, sizeof(v27));
  char v29 = 5;
  if (v11 < 1)
  {
    swift_retain();
  }
  else
  {
    if (v11 == *(void *)(v9 + 240) - *(void *)(v9 + 232))
    {
      sub_1B639192C((uint64_t)v27, (uint64_t)v24);
      uint64_t v26 = 0;
      long long v25 = 0uLL;
    }
    else
    {
      sub_1B639192C((uint64_t)v27, (uint64_t)v24);
      *(void *)&long long v25 = v8;
      *((void *)&v25 + 1) = i;
      uint64_t v26 = v11;
    }
    uint64_t v14 = *(void **)(v7 + 104);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v7 + 104) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v14 = sub_1B68C0C6C(0, v14[2] + 1, 1, v14);
      *(void *)(v7 + 104) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      uint64_t v14 = sub_1B68C0C6C(v16 > 1, v17 + 1, 1, v14);
      *(void *)(v7 + 104) = v14;
    }
    _DWORD v14[2] = v17 + 1;
    uint64_t v18 = &v14[9 * v17];
    *((_OWORD *)v18 + 2) = v24[0];
    long long v19 = v24[1];
    long long v20 = v24[2];
    long long v21 = v25;
    v18[12] = v26;
    *((_OWORD *)v18 + 4) = v20;
    *((_OWORD *)v18 + 5) = v21;
    *((_OWORD *)v18 + 3) = v19;
  }
  sub_1B6391400((uint64_t)v27);
  return swift_release();
}

uint64_t type metadata accessor for ParticleKillable.CPUSystem()
{
  return self;
}

uint64_t sub_1B6841A50(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 104);
  long long v8 = *(_OWORD *)(a1 + 88);
  long long v9 = v3;
  uint64_t v10 = *(void *)(a1 + 120);
  sub_1B67CE420((uint64_t)v6);
  sub_1B62F648C(a1);
  long long v4 = v6[1];
  *(_OWORD *)(v2 + 16) = v6[0];
  *(_OWORD *)(v2 + 32) = v4;
  *(void *)(v2 + 48) = v7;
  return v2;
}

const char *sub_1B6841AD8()
{
  return "KillShape";
}

uint64_t type metadata accessor for ParticleKillable.GPUSystem()
{
  return self;
}

const char *sub_1B6841B14()
{
  return "KillShapeSystem.GPU";
}

uint64_t sub_1B6841B28()
{
  return type metadata accessor for ParticleKillable.GPUSystem();
}

unint64_t sub_1B6841B48()
{
  unint64_t result = qword_1E9DD1438;
  if (!qword_1E9DD1438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DD1438);
  }
  return result;
}

uint64_t sub_1B6841B9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6570616873 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B6E334B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469736E69 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B6E334B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B6841C80(void *a1)
{
  sub_1B6844F00(0, &qword_1E9DD1458, (uint64_t (*)(void))sub_1B6844EAC, (uint64_t)&type metadata for KillShape.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v6);
  long long v8 = (char *)&v13 - v7;
  sub_1B62C14BC(a1, a1[3]);
  sub_1B6844EAC();
  sub_1B6E33A48();
  if (v1) {
    return _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  }
  char v15 = 0;
  sub_1B66C4E08();
  sub_1B6E32DF8();
  unsigned int v9 = v16;
  char v14 = 1;
  char v11 = sub_1B6E32DA8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  _s3VFX14_BinaryDecoderC16SingleValueStoreVwxx_0((uint64_t)a1);
  if (v11) {
    int v12 = 256;
  }
  else {
    int v12 = 0;
  }
  return v12 | v9;
}

uint64_t sub_1B6841E78(uint64_t a1, uint64_t a2)
{
  swift_retain();
  uint64_t v4 = sub_1B6C316A0(a1, (uint64_t)&type metadata for IsSubEntityOf);
  char v6 = v5;
  swift_release();
  if (v6) {
    return MEMORY[0x1E4FBC860];
  }
  swift_retain();
  char v7 = sub_1B6BFA3F4(v4, a2);
  swift_release();
  if ((v7 & 1) == 0) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1B62D2B64();
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1B6E77050;
  *(void *)(result + 32) = &type metadata for ParticleAge;
  *(void *)(result + 40) = &off_1F0F56330;
  return result;
}

uint64_t *sub_1B6841F48(char a1, uint64_t a2, uint64_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7)
{
  int32x4_t v7 = (int32x4_t)vmulq_f32(a4, a4);
  int32x4_t v8 = (int32x4_t)vmulq_f32(a5, a5);
  int32x4_t v9 = (int32x4_t)vmulq_f32(a6, a6);
  int32x4_t v10 = vzip2q_s32(v7, v9);
  float32x4_t v11 = (float32x4_t)vzip1q_s32(vzip1q_s32(v7, v9), v8);
  float32x4_t v12 = (float32x4_t)vtrn2q_s32(v7, v8);
  v12.i32[2] = v9.i32[1];
  float32x4_t v13 = vaddq_f32((float32x4_t)vzip1q_s32(v10, vdupq_laneq_s32(v8, 2)), vaddq_f32(v11, v12));
  __asm { FMOV            V3.4S, #1.0 }
  int32x4_t v18 = vceqzq_f32(v13);
  v18.i32[3] = 0;
  float32x4_t v19 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v18), (int8x16_t)v13, (int8x16_t)vdivq_f32(_Q3, v13));
  float32x4_t v82 = 0u;
  float32x4_t v20 = vmlaq_f32(vaddq_f32(vmulq_lane_f32(a5, *(float32x2_t *)v19.f32, 1), vmulq_f32(vmulq_laneq_f32(a6, v19, 2), (float32x4_t)0)), (float32x4_t)0, vmulq_n_f32(a4, v19.f32[0]));
  int8x16_t v21 = (int8x16_t)vabsq_f32(v20);
  if (*(float *)v21.i32 > 0.00000011921
    || (v21.i32[0] = vextq_s8(v21, v21, 8uLL).u32[0],
        *(int32x2_t *)v21.i8 = vcge_f32((float32x2_t)0x3400000034000000, *(float32x2_t *)v21.i8),
        (v21.i8[4] & 1) == 0)
    || (v21.i8[0] & 1) == 0)
  {
    int32x4_t v22 = (int32x4_t)vmulq_f32(v20, v20);
    v22.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v22, 2), vadd_f32(*(float32x2_t *)v22.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v22.i8, 1))).u32[0];
    float32x2_t v23 = vrsqrte_f32((float32x2_t)v22.u32[0]);
    float32x2_t v24 = vmul_f32(v23, vrsqrts_f32((float32x2_t)v22.u32[0], vmul_f32(v23, v23)));
    float32x4_t v82 = vmulq_n_f32(v20, vmul_f32(v24, vrsqrts_f32((float32x2_t)v22.u32[0], vmul_f32(v24, v24))).f32[0]);
  }
  if (a1) {
    float v25 = -1.0;
  }
  else {
    float v25 = 1.0;
  }
  long long v26 = *(_OWORD *)(a3 + 32);
  v109[0] = *(_OWORD *)(a3 + 16);
  v109[1] = v26;
  uint64_t v110 = *(void *)(a3 + 48);
  sub_1B62C9DA8(a2, (uint64_t)v109, 0x200000000, v98);
  uint64_t result = (uint64_t *)sub_1B62D7690((uint64_t)v98, (uint64_t)v99, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  float32x4_t v97 = (unsigned __int16 *)v99[0];
  if (v99[0])
  {
    uint64_t v81 = v103;
    if (v103 >= 1)
    {
      uint64_t v80 = v100;
      if (v100)
      {
        uint64_t v28 = 0;
        float32x4_t v29 = v82;
        float32x4_t v30 = vmulq_f32(vmlaq_f32(vmlaq_f32(vmlaq_f32(a7, (float32x4_t)0, a6), (float32x4_t)0, a5), (float32x4_t)0, a4), v82);
        v29.f32[3] = -vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v30, 2), vaddq_f32(v30, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v30.f32, 1))).f32[0];
        float32x4_t v83 = v29;
        uint64_t v79 = v99[5];
        float32x4_t v31 = v102;
        uint64_t v32 = v102[4];
        uint64_t v77 = v32;
        uint64_t v78 = v101;
        int v33 = *(unsigned __int8 *)(v101 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        char v75 = v102 + 8;
        uint64_t v96 = v99[0] + 41;
        int v76 = v33;
        do
        {
          float32x2_t v34 = (unsigned int *)(v79 + 48 * v28);
          uint64_t v35 = *v34;
          uint64_t v36 = v34[1];
          uint64_t v37 = v34[2];
          uint64_t v38 = *((void *)v34 + 2);
          uint64_t v39 = *((void *)v34 + 3);
          uint64_t v40 = *((void *)v34 + 5);
          uint64_t v90 = v28;
          uint64_t v92 = *((void *)v34 + 4);
          if (v33)
          {
            __int32 v41 = *(os_unfair_lock_s **)(v40 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v41);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v40 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v32);
          uint64_t v85 = v31[7];
          uint64_t v86 = v31[6];
          uint64_t v84 = v31[8];
          uint64_t v88 = v31[9];
          uint64_t v94 = v31[10];
          uint64_t v42 = v31[4];
          uint64_t v43 = *(void *)(*(void *)(*(void *)(*(void *)(v40 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          void v31[6] = ecs_stack_allocator_allocate(v42, 48 * v43, 8);
          v31[7] = v43;
          v75[1] = 0;
          v75[2] = 0;
          *char v75 = 0;
          swift_release();
          v104[0] = v78;
          v104[1] = v40;
          uint64_t v87 = v40;
          v104[2] = v31;
          v104[3] = v37;
          v104[4] = (v36 - v35 + v37);
          v104[5] = v81;
          v104[6] = v35;
          v104[7] = v36;
          v104[8] = 0;
          v104[9] = 0;
          char v105 = 1;
          uint64_t v106 = v38;
          uint64_t v107 = v39;
          uint64_t v108 = v92;
          sub_1B684183C((uint64_t)v104, v83, v25);
          unint64_t v44 = v31[6];
          uint64_t v45 = v31[8];
          if (!v45)
          {
            uint64_t v71 = v31[7];
            float32x2_t v72 = (void *)v31[4];
            uint64_t v74 = v88;
            uint64_t v73 = v90;
            goto LABEL_53;
          }
          for (uint64_t i = 0; i != v45; ++i)
          {
            float32x4_t v48 = (uint64_t *)(v44 + 48 * i);
            uint64_t v49 = *v48;
            float32x4_t v50 = (void (*)(uint64_t))v48[4];
            uint64_t v51 = v31[9];
            if (v51) {
              _ZF = v49 == v51;
            }
            else {
              _ZF = 0;
            }
            if (_ZF || !v97[11]) {
              goto LABEL_18;
            }
            unint64_t v53 = v97[9];
            float32x4_t v54 = (void *)(v96 + v97[8]);
            uint64_t v55 = v48[2];
            float32x4_t v56 = v54;
            unint64_t v57 = v53 >> 4;
            uint64_t v58 = v96;
            if (v53 >= 0x10)
            {
              while (*v56 != v49)
              {
                ++v58;
                v56 += 2;
                if (!--v57) {
                  goto LABEL_33;
                }
              }
              unsigned int v59 = *(unsigned __int8 *)(v58 + v97[10]);
              BOOL v60 = v59 > 5;
              int v61 = (1 << v59) & 0x23;
              if (v60 || v61 == 0)
              {
LABEL_18:
                uint64_t v47 = swift_retain();
                v50(v47);
                swift_release();
                continue;
              }
            }
LABEL_33:
            if (swift_conformsToProtocol2()) {
              uint64_t v63 = v55;
            }
            else {
              uint64_t v63 = 0;
            }
            if (v63)
            {
              if (v53 < 0x10) {
                goto LABEL_18;
              }
              uint64_t v64 = v54;
              unint64_t v65 = v53 >> 4;
              uint64_t v66 = v96;
              while (*v64 != v63)
              {
                ++v66;
                v64 += 2;
                if (!--v65) {
                  goto LABEL_46;
                }
              }
              unsigned int v67 = *(unsigned __int8 *)(v66 + v97[10]);
              BOOL v60 = v67 > 5;
              int v68 = (1 << v67) & 0x23;
              if (v60 || v68 == 0) {
                goto LABEL_18;
              }
LABEL_46:
              uint64_t v70 = 16 * (v53 >> 4);
              while (*v54 != v63)
              {
                v54 += 2;
                v70 -= 16;
                if (!v70) {
                  goto LABEL_18;
                }
              }
            }
          }
          uint64_t v71 = v31[7];
          unint64_t v44 = v31[6];
          float32x2_t v72 = (void *)v31[4];
          uint64_t v74 = v88;
          uint64_t v73 = v90;
          if ((uint64_t)v31[8] >= 1) {
            swift_arrayDestroy();
          }
LABEL_53:
          ecs_stack_allocator_deallocate(v72, v44, 48 * v71);
          void v31[6] = v86;
          v31[7] = v85;
          v31[8] = v84;
          v31[9] = v74;
          v31[10] = v94;
          sub_1B634507C((char *)v87);
          uint64_t v32 = v77;
          ecs_stack_allocator_pop_snapshot(v77);
          int v33 = v76;
          if (v76)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v87 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v87 + 376));
          }
          swift_release();
          uint64_t v28 = v73 + 1;
        }
        while (v28 != v80);
      }
    }
    return sub_1B632F170(v98);
  }
  return result;
}

uint64_t sub_1B68424F4(uint64_t a1, char a2, float32x4_t a3, float32x4_t a4)
{
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 16);
  int32x4_t v9 = ecs_stack_allocator_allocate(*(void *)(v8 + 32), 8 * (v7 - v6), 8);
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, *(uint64_t **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), v8);
  uint64_t v13 = 0;
  for (uint64_t i = v7 - v6; v7 != v6; ++v6)
  {
    __int32 v15 = v12.i32[3];
    float32x4_t v12 = vabdq_f32(*(float32x4_t *)(v11 + 16 * v6), a3);
    v12.i32[3] = v15;
    if (a2)
    {
      int32x4_t v16 = vcgtq_f32(v12, a4);
      int v17 = v16.i32[1];
      if (v16.i32[1] >= v16.i32[0]) {
        int v17 = v16.i32[0];
      }
      if (v16.i32[2] < v17) {
        int v17 = v16.i32[2];
      }
      if ((v17 & 0x80000000) == 0) {
        continue;
      }
    }
    else
    {
      int32x4_t v18 = vcgtq_f32(a4, v12);
      int v19 = v18.i32[1];
      if (v18.i32[1] <= v18.i32[0]) {
        int v19 = v18.i32[0];
      }
      if (v18.i32[2] > v19) {
        int v19 = v18.i32[2];
      }
      if ((v19 & 0x80000000) == 0) {
        continue;
      }
    }
    v9[v13++] = v6;
  }
  uint64_t v35 = 0;
  memset(v34, 0, sizeof(v34));
  char v36 = 5;
  if (v13 < 1)
  {
    swift_retain();
  }
  else
  {
    if (v13 == *(void *)(v10 + 240) - *(void *)(v10 + 232))
    {
      sub_1B639192C((uint64_t)v34, (uint64_t)v31);
      uint64_t v33 = 0;
      long long v32 = 0uLL;
    }
    else
    {
      sub_1B639192C((uint64_t)v34, (uint64_t)v31);
      *(void *)&long long v32 = v9;
      *((void *)&v32 + 1) = i;
      uint64_t v33 = v13;
    }
    float32x4_t v20 = *(void **)(v8 + 104);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v8 + 104) = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      float32x4_t v20 = sub_1B68C0C6C(0, v20[2] + 1, 1, v20);
      *(void *)(v8 + 104) = v20;
    }
    unint64_t v23 = v20[2];
    unint64_t v22 = v20[3];
    if (v23 >= v22 >> 1)
    {
      float32x4_t v20 = sub_1B68C0C6C(v22 > 1, v23 + 1, 1, v20);
      *(void *)(v8 + 104) = v20;
    }
    uint64_t v20[2] = v23 + 1;
    float32x2_t v24 = &v20[9 * v23];
    *((_OWORD *)v24 + 2) = v31[0];
    long long v25 = v31[1];
    long long v26 = v31[2];
    long long v27 = v32;
    v24[12] = v33;
    *((_OWORD *)v24 + 4) = v26;
    *((_OWORD *)v24 + 5) = v27;
    *((_OWORD *)v24 + 3) = v25;
  }
  sub_1B6391400((uint64_t)v34);
  return swift_release();
}

uint64_t sub_1B6842724(uint64_t a1, char a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6)
{
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = ecs_stack_allocator_allocate(*(void *)(v10 + 32), 8 * (v9 - v8), 8);
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, *(uint64_t **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), v10);
  uint64_t v15 = 0;
  for (uint64_t i = v9 - v8; v9 != v8; ++v8)
  {
    __int32 v17 = v14.i32[3];
    float32x4_t v14 = vabsq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a3, COERCE_FLOAT(*(_OWORD *)(v13 + 16 * v8))), a4, *(float32x2_t *)(v13 + 16 * v8), 1), a5, *(float32x4_t *)(v13 + 16 * v8), 2), a6, *(float32x4_t *)(v13 + 16 * v8), 3));
    v14.i32[3] = v17;
    if (a2)
    {
      int32x4_t v18 = vcgtq_f32(v14, (float32x4_t)xmmword_1B6E87B90);
      int v19 = v18.i32[1];
      if (v18.i32[1] >= v18.i32[0]) {
        int v19 = v18.i32[0];
      }
      if (v18.i32[2] < v19) {
        int v19 = v18.i32[2];
      }
      if ((v19 & 0x80000000) == 0) {
        continue;
      }
    }
    else
    {
      int32x4_t v20 = vcgtq_f32((float32x4_t)xmmword_1B6E87B90, v14);
      int v21 = v20.i32[1];
      if (v20.i32[1] <= v20.i32[0]) {
        int v21 = v20.i32[0];
      }
      if (v20.i32[2] > v21) {
        int v21 = v20.i32[2];
      }
      if ((v21 & 0x80000000) == 0) {
        continue;
      }
    }
    v11[v15++] = v8;
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  char v40 = 5;
  if (v15 < 1)
  {
    swift_retain();
  }
  else
  {
    if (v15 == *(void *)(v12 + 240) - *(void *)(v12 + 232))
    {
      sub_1B639192C((uint64_t)v38, (uint64_t)v35);
      uint64_t v37 = 0;
      long long v36 = 0uLL;
    }
    else
    {
      sub_1B639192C((uint64_t)v38, (uint64_t)v35);
      *(void *)&long long v36 = v11;
      *((void *)&v36 + 1) = i;
      uint64_t v37 = v15;
    }
    unint64_t v22 = *(void **)(v10 + 104);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v10 + 104) = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v22 = sub_1B68C0C6C(0, v22[2] + 1, 1, v22);
      *(void *)(v10 + 104) = v22;
    }
    unint64_t v25 = v22[2];
    unint64_t v24 = v22[3];
    if (v25 >= v24 >> 1)
    {
      unint64_t v22 = sub_1B68C0C6C(v24 > 1, v25 + 1, 1, v22);
      *(void *)(v10 + 104) = v22;
    }
    void v22[2] = v25 + 1;
    long long v26 = &v22[9 * v25];
    *((_OWORD *)v26 + 2) = v35[0];
    long long v27 = v35[1];
    long long v28 = v35[2];
    long long v29 = v36;
    v26[12] = v37;
    *((_OWORD *)v26 + 4) = v28;
    *((_OWORD *)v26 + 5) = v29;
    *((_OWORD *)v26 + 3) = v27;
  }
  sub_1B6391400((uint64_t)v38);
  return swift_release();
}

uint64_t *sub_1B6842974(char a1, uint64_t a2, uint64_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7)
{
  int32x4_t v12 = (int32x4_t)vmulq_f32(a4, a4);
  float32x4_t v13 = vmulq_f32(a5, a5);
  int32x4_t v14 = (int32x4_t)vmulq_f32(a6, a6);
  int32x4_t v15 = vzip2q_s32(v12, v14);
  float32x4_t v16 = (float32x4_t)vzip1q_s32(vzip1q_s32(v12, v14), (int32x4_t)v13);
  float32x4_t v17 = (float32x4_t)vtrn2q_s32(v12, (int32x4_t)v13);
  v17.i32[2] = v14.i32[1];
  float32x4_t v18 = vaddq_f32((float32x4_t)vzip1q_s32(v15, vdupq_laneq_s32((int32x4_t)v13, 2)), vaddq_f32(v16, v17));
  v13.i64[0] = 0x80000000800000;
  v13.i64[1] = 0x80000000800000;
  int8x16_t v19 = (int8x16_t)vcgeq_f32(v13, v18);
  v18.i32[3] = 0;
  float32x4_t v20 = vrsqrteq_f32(v18);
  float32x4_t v21 = vmulq_f32(v20, vrsqrtsq_f32(v18, vmulq_f32(v20, v20)));
  int32x4_t v22 = (int32x4_t)v19;
  v22.i32[3] = 0;
  float32x4_t v23 = (float32x4_t)vbslq_s8((int8x16_t)vcltzq_s32(v22), (int8x16_t)v18, (int8x16_t)vmulq_f32(v21, vrsqrtsq_f32(v18, vmulq_f32(v21, v21))));
  float32x4_t v24 = vmulq_n_f32(a4, v23.f32[0]);
  float32x4_t v25 = vmulq_lane_f32(a5, *(float32x2_t *)v23.f32, 1);
  float32x4_t v26 = vmulq_laneq_f32(a6, v23, 2);
  int8x16_t v27 = (int8x16_t)vuzp1q_s32((int32x4_t)v26, (int32x4_t)v26);
  int8x16_t v28 = (int8x16_t)vuzp1q_s32((int32x4_t)v25, (int32x4_t)v25);
  int32x4_t v29 = (int32x4_t)v24;
  if (v19.i32[0])
  {
    int8x16_t v30 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v27, (int8x16_t)v26, 0xCuLL), vnegq_f32(v25)), v26, (float32x4_t)vextq_s8(v28, (int8x16_t)v25, 0xCuLL));
    int32x4_t v29 = (int32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v30, (int32x4_t)v30), v30, 0xCuLL);
  }
  int8x16_t v31 = (int8x16_t)vuzp1q_s32((int32x4_t)v24, (int32x4_t)v24);
  float32x4_t v32 = v25;
  if (v19.i32[1])
  {
    int8x16_t v33 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v31, (int8x16_t)v24, 0xCuLL), vnegq_f32(v26)), v24, (float32x4_t)vextq_s8(v27, (int8x16_t)v26, 0xCuLL));
    float32x4_t v32 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v33, (int32x4_t)v33), v33, 0xCuLL);
  }
  if (v19.i32[2])
  {
    int8x16_t v19 = (int8x16_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(v28, (int8x16_t)v25, 0xCuLL), vnegq_f32(v24)), v25, (float32x4_t)vextq_s8(v31, (int8x16_t)v24, 0xCuLL));
    float32x4_t v26 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v19, (int32x4_t)v19), v19, 0xCuLL);
  }
  float v34 = (float)(*(float *)v29.i32 + v32.f32[1]) + v26.f32[2];
  if (v34 > 0.0)
  {
    float32x4_t v35 = (float32x4_t)vzip2q_s32((int32x4_t)v32, vuzp1q_s32((int32x4_t)v32, (int32x4_t)v26));
    v35.i32[2] = v29.i32[1];
    float v36 = sqrtf(v34 + 1.0);
    float32x4_t v37 = (float32x4_t)vtrn2q_s32((int32x4_t)v26, vzip2q_s32((int32x4_t)v26, v29));
    v37.i32[2] = v32.i32[0];
    float32x4_t v39 = vsubq_f32(v35, v37);
    v35.f32[3] = v36;
    v37.f32[3] = v36;
    float32x4_t v38 = vmulq_f32(v35, v37);
    v39.i32[3] = v38.i32[3];
LABEL_18:
    v38.f32[0] = 0.5 / v36;
    float32x4_t v49 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v38.f32, 0);
    goto LABEL_19;
  }
  if (*(float *)v29.i32 < v32.f32[1] || *(float *)v29.i32 < v26.f32[2])
  {
    if (v32.f32[1] <= v26.f32[2])
    {
      float v36 = sqrtf((float)((float)(v26.f32[2] + 1.0) - *(float *)v29.i32) - v32.f32[1]);
      *(float32x2_t *)v39.f32 = vadd_f32((float32x2_t)*(_OWORD *)&vzip2q_s32(v29, (int32x4_t)v32), *(float32x2_t *)v26.f32);
      float32x2_t v50 = (float32x2_t)__PAIR64__(v29.u32[1], LODWORD(v36));
      float32x2_t v51 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v32.f32, 0);
      *(float32x2_t *)v38.f32 = vsub_f32(*(float32x2_t *)v29.i8, v51);
      v51.f32[0] = v36;
      v51.i32[0] = vmul_f32(v50, v51).u32[0];
      v51.i32[1] = v38.i32[1];
      *(float32x2_t *)&v39.u32[2] = v51;
      goto LABEL_18;
    }
    float v43 = sqrtf((float)((float)(v32.f32[1] + 1.0) - *(float *)v29.i32) - v26.f32[2]);
    *(int32x2_t *)v19.i8 = vdup_laneq_s32((int32x4_t)v32, 2);
    int8x16_t v41 = v19;
    *(float *)v41.i32 = v43;
    v41.i32[0] = vmul_f32(*(float32x2_t *)v41.i8, (float32x2_t)__PAIR64__(v26.u32[1], LODWORD(v43))).u32[0];
    v41.i32[1] = vadd_f32(*(float32x2_t *)&v19, *(float32x2_t *)&v26).i32[1];
    int8x16_t v42 = (int8x16_t)vaddq_f32((float32x4_t)vdupq_lane_s32(*(int32x2_t *)v29.i8, 1), v32);
    int32x2_t v48 = (int32x2_t)vsubq_f32(v26, (float32x4_t)vdupq_laneq_s32(v29, 2)).u64[0];
    float32x4_t v49 = (float32x4_t)vextq_s8(vextq_s8(v42, v42, 4uLL), v41, 0xCuLL);
    v49.i32[3] = v48.i32[0];
  }
  else
  {
    float v43 = sqrtf((float)((float)(*(float *)v29.i32 + 1.0) - v32.f32[1]) - v26.f32[2]);
    float32x2_t v44 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v32.f32, 0);
    float32x2_t v45 = vadd_f32(*(float32x2_t *)v29.i8, v44);
    v44.f32[0] = v43;
    v49.i32[0] = vmul_f32((float32x2_t)__PAIR64__(v29.u32[1], LODWORD(v43)), v44).u32[0];
    v49.i32[1] = v45.i32[1];
    float32x2_t v46 = (float32x2_t)vzip2q_s32(v29, (int32x4_t)v32).u64[0];
    LODWORD(v47) = vadd_f32(v46, *(float32x2_t *)v26.f32).u32[0];
    int32x2_t v48 = (int32x2_t)vsub_f32(v46, *(float32x2_t *)v26.f32);
    HIDWORD(v47) = v48.i32[1];
    v49.i64[1] = v47;
  }
  *(float *)v48.i32 = 0.5 / v43;
  float32x4_t v39 = (float32x4_t)vdupq_lane_s32(v48, 0);
LABEL_19:
  uint64_t v52 = 0;
  float32x4_t v53 = vmulq_f32(v39, v49);
  while (1)
  {
    float32x4_t v191 = v53;
    float v55 = *(float *)((unint64_t)&v191 & 0xFFFFFFFFFFFFFFF3 | (4 * (v52 & 3)));
    long long v192 = xmmword_1B6E4F370;
    float v56 = *(float *)((unint64_t)&v192 & 0xFFFFFFFFFFFFFFF3 | (4 * (v52 & 3)));
    BOOL v54 = v55 == v56;
    if (v52 == 3) {
      break;
    }
    while (1)
    {
      ++v52;
      if (v54) {
        break;
      }
      if (v52 == 3) {
        goto LABEL_73;
      }
      BOOL v54 = 0;
    }
  }
  if (v55 == v56)
  {
    float32x4_t v180 = a5;
    float32x4_t v183 = a4;
    float32x4_t v186 = a6;
    simd_float4 v57 = *(simd_float4 *)(a3 + 32);
    long long v214 = *(_OWORD *)(a3 + 16);
    simd_float4 v215 = v57;
    uint64_t v216 = *(void *)(a3 + 48);
    sub_1B62C9DA8(a2, (uint64_t)&v214, 0x200000000, v193);
    uint64_t result = (uint64_t *)sub_1B62D7690((uint64_t)v193, (uint64_t)v194, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    uint64_t v189 = (unsigned __int16 *)v194[0];
    if (!v194[0]) {
      return result;
    }
    uint64_t v162 = v199;
    if (v199 >= 1)
    {
      uint64_t v160 = v196;
      if (v196)
      {
        uint64_t v59 = 0;
        float32x4_t v165 = vmlaq_f32(vmlaq_f32(vmlaq_f32(a7, (float32x4_t)0, v186), (float32x4_t)0, v180), (float32x4_t)0, v183);
        float32x4_t v158 = vmlaq_f32(vmlaq_f32(vmulq_f32((float32x4_t)(*(_OWORD *)&v180 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)), (float32x4_t)xmmword_1B6E87B90), (float32x4_t)xmmword_1B6E87B90, (float32x4_t)(*(_OWORD *)&v183 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))), (float32x4_t)xmmword_1B6E87B90, (float32x4_t)(*(_OWORD *)&v186 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)));
        uint64_t v156 = v195;
        BOOL v60 = v198;
        uint64_t v61 = v198[4];
        uint64_t v154 = v197;
        int v62 = *(unsigned __int8 *)(v197 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
        long long v150 = v198 + 8;
        uint64_t v187 = v194[0] + 41;
        int v152 = v62;
        uint64_t v147 = v61;
        while (1)
        {
          uint64_t v63 = (unsigned int *)(v156 + 48 * v59);
          uint64_t v64 = *v63;
          uint64_t v65 = v63[1];
          uint64_t v66 = v63[2];
          uint64_t v176 = v59;
          uint64_t v178 = *((void *)v63 + 2);
          uint64_t v67 = *((void *)v63 + 3);
          uint64_t v68 = *((void *)v63 + 4);
          uint64_t v69 = *((void *)v63 + 5);
          if (v62)
          {
            uint64_t v70 = *(os_unfair_lock_s **)(v69 + 376);
            swift_retain_n();
            os_unfair_lock_lock(v70);
            os_unfair_lock_lock(*(os_unfair_lock_t *)(v69 + 344));
            swift_release();
          }
          else
          {
            swift_retain();
          }
          ecs_stack_allocator_push_snapshot(v61);
          uint64_t v172 = v60[7];
          uint64_t v174 = v60[6];
          uint64_t v168 = v60[9];
          uint64_t v170 = v60[8];
          uint64_t v181 = v60[10];
          uint64_t v71 = v60[4];
          uint64_t v72 = *(void *)(*(void *)(*(void *)(*(void *)(v69 + 40) + 16) + 32) + 16) + 1;
          swift_retain();
          v60[6] = ecs_stack_allocator_allocate(v71, 48 * v72, 8);
          v60[7] = v72;
          v150[1] = 0;
          v150[2] = 0;
          void *v150 = 0;
          swift_release();
          uint64_t v200 = v154;
          uint64_t v201 = v69;
          uint64_t v184 = v69;
          int v202 = v60;
          uint64_t v203 = v66;
          uint64_t v204 = (v65 - v64 + v66);
          uint64_t v205 = v162;
          uint64_t v206 = v64;
          uint64_t v207 = v65;
          uint64_t v208 = 0;
          uint64_t v209 = 0;
          char v210 = 1;
          uint64_t v211 = v178;
          uint64_t v212 = v67;
          uint64_t v213 = v68;
          sub_1B68424F4((uint64_t)&v200, a1 & 1, v165, v158);
          unint64_t v73 = v60[6];
          uint64_t v74 = v60[8];
          if (!v74)
          {
            uint64_t v100 = v60[7];
            uint64_t v101 = (void *)v60[4];
            uint64_t v102 = v176;
            uint64_t v61 = v147;
            goto LABEL_71;
          }
          for (uint64_t i = 0; i != v74; ++i)
          {
            uint64_t v77 = (uint64_t *)(v73 + 48 * i);
            uint64_t v78 = *v77;
            uint64_t v79 = (void (*)(uint64_t))v77[4];
            uint64_t v80 = v60[9];
            if (v80) {
              BOOL v81 = v78 == v80;
            }
            else {
              BOOL v81 = 0;
            }
            if (v81 || !v189[11]) {
              goto LABEL_36;
            }
            unint64_t v82 = v189[9];
            float32x4_t v83 = (void *)(v187 + v189[8]);
            uint64_t v84 = v77[2];
            uint64_t v85 = v83;
            unint64_t v86 = v82 >> 4;
            uint64_t v87 = v187;
            if (v82 >= 0x10)
            {
              while (*v85 != v78)
              {
                ++v87;
                v85 += 2;
                if (!--v86) {
                  goto LABEL_51;
                }
              }
              unsigned int v88 = *(unsigned __int8 *)(v87 + v189[10]);
              BOOL v89 = v88 > 5;
              int v90 = (1 << v88) & 0x23;
              if (v89 || v90 == 0)
              {
LABEL_36:
                uint64_t v76 = swift_retain();
                v79(v76);
                swift_release();
                continue;
              }
            }
LABEL_51:
            if (swift_conformsToProtocol2()) {
              uint64_t v92 = v84;
            }
            else {
              uint64_t v92 = 0;
            }
            if (v92)
            {
              if (v82 < 0x10) {
                goto LABEL_36;
              }
              float32x4_t v93 = v83;
              unint64_t v94 = v82 >> 4;
              uint64_t v95 = v187;
              while (*v93 != v92)
              {
                ++v95;
                v93 += 2;
                if (!--v94) {
                  goto LABEL_64;
                }
              }
              unsigned int v96 = *(unsigned __int8 *)(v95 + v189[10]);
              BOOL v89 = v96 > 5;
              int v97 = (1 << v96) & 0x23;
              if (v89 || v97 == 0) {
                goto LABEL_36;
              }
LABEL_64:
              uint64_t v99 = 16 * (v82 >> 4);
              while (*v83 != v92)
              {
                v83 += 2;
                v99 -= 16;
                if (!v99) {
                  goto LABEL_36;
                }
              }
            }
          }
          uint64_t v100 = v60[7];
          unint64_t v73 = v60[6];
          uint64_t v101 = (void *)v60[4];
          uint64_t v102 = v176;
          uint64_t v61 = v147;
          if ((uint64_t)v60[8] >= 1) {
            swift_arrayDestroy();
          }
LABEL_71:
          ecs_stack_allocator_deallocate(v101, v73, 48 * v100);
          v60[6] = v174;
          v60[7] = v172;
          v60[8] = v170;
          v60[9] = v168;
          v60[10] = v181;
          sub_1B634507C((char *)v184);
          ecs_stack_allocator_pop_snapshot(v61);
          int v62 = v152;
          if (v152)
          {
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v184 + 344));
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v184 + 376));
          }
          swift_release();
          uint64_t v59 = v102 + 1;
          if (v59 == v160) {
            return sub_1B632F170(v193);
          }
        }
      }
    }
    return sub_1B632F170(v193);
  }
LABEL_73:
  v217.columns[0] = (simd_float4)a4;
  v217.columns[1] = (simd_float4)a5;
  v217.columns[2] = (simd_float4)a6;
  v217.columns[3] = (simd_float4)a7;
  simd_float4x4 v218 = __invert_f4(v217);
  float32x4_t v163 = (float32x4_t)v218.columns[1];
  float32x4_t v166 = (float32x4_t)v218.columns[0];
  float32x4_t v159 = (float32x4_t)v218.columns[3];
  float32x4_t v161 = (float32x4_t)v218.columns[2];
  v218.columns[1] = *(simd_float4 *)(a3 + 32);
  long long v214 = *(_OWORD *)(a3 + 16);
  simd_float4 v215 = v218.columns[1];
  uint64_t v216 = *(void *)(a3 + 48);
  sub_1B62C9DA8(a2, (uint64_t)&v214, 0x200000000, v193);
  uint64_t result = (uint64_t *)sub_1B62D7690((uint64_t)v193, (uint64_t)v194, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  uint64_t v190 = (unsigned __int16 *)v194[0];
  if (!v194[0]) {
    return result;
  }
  uint64_t v157 = v199;
  if (v199 >= 1)
  {
    uint64_t v155 = v196;
    if (v196)
    {
      uint64_t v103 = 0;
      uint64_t v153 = v195;
      uint64_t v104 = v198;
      uint64_t v105 = v198[4];
      uint64_t v151 = v197;
      int v106 = *(unsigned __int8 *)(v197 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
      uint64_t v148 = v198 + 8;
      uint64_t v188 = v194[0] + 41;
      int v149 = v106;
      uint64_t v146 = v105;
      do
      {
        uint64_t v107 = (unsigned int *)(v153 + 48 * v103);
        uint64_t v108 = *v107;
        uint64_t v109 = v107[1];
        uint64_t v110 = v107[2];
        uint64_t v177 = v103;
        uint64_t v179 = *((void *)v107 + 2);
        uint64_t v111 = *((void *)v107 + 3);
        uint64_t v112 = *((void *)v107 + 4);
        uint64_t v113 = *((void *)v107 + 5);
        if (v106)
        {
          simd_float4 v114 = *(os_unfair_lock_s **)(v113 + 376);
          swift_retain_n();
          os_unfair_lock_lock(v114);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v113 + 344));
          swift_release();
        }
        else
        {
          swift_retain();
        }
        ecs_stack_allocator_push_snapshot(v105);
        uint64_t v173 = v104[7];
        uint64_t v175 = v104[6];
        uint64_t v169 = v104[9];
        uint64_t v171 = v104[8];
        uint64_t v182 = v104[10];
        uint64_t v115 = v104[4];
        uint64_t v116 = *(void *)(*(void *)(*(void *)(*(void *)(v113 + 40) + 16) + 32) + 16) + 1;
        swift_retain();
        v104[6] = ecs_stack_allocator_allocate(v115, 48 * v116, 8);
        v104[7] = v116;
        v148[1] = 0;
        v148[2] = 0;
        *uint64_t v148 = 0;
        swift_release();
        uint64_t v200 = v151;
        uint64_t v201 = v113;
        uint64_t v185 = v113;
        int v202 = v104;
        uint64_t v203 = v110;
        uint64_t v204 = (v109 - v108 + v110);
        uint64_t v205 = v157;
        uint64_t v206 = v108;
        uint64_t v207 = v109;
        uint64_t v208 = 0;
        uint64_t v209 = 0;
        char v210 = 1;
        uint64_t v211 = v179;
        uint64_t v212 = v111;
        uint64_t v213 = v112;
        sub_1B6842724((uint64_t)&v200, a1 & 1, v166, v163, v161, v159);
        unint64_t v117 = v104[6];
        uint64_t v118 = v104[8];
        if (!v118)
        {
          uint64_t v143 = v104[7];
          uint64_t v144 = (void *)v104[4];
          uint64_t v145 = v177;
          uint64_t v105 = v146;
          goto LABEL_118;
        }
        for (uint64_t j = 0; j != v118; ++j)
        {
          BOOL v121 = (uint64_t *)(v117 + 48 * j);
          uint64_t v122 = *v121;
          int v123 = (void (*)(uint64_t))v121[4];
          uint64_t v124 = v104[9];
          if (v124) {
            BOOL v125 = v122 == v124;
          }
          else {
            BOOL v125 = 0;
          }
          if (v125 || !v190[11]) {
            goto LABEL_83;
          }
          unint64_t v126 = v190[9];
          uint64_t v127 = (void *)(v188 + v190[8]);
          uint64_t v128 = v121[2];
          uint64_t v129 = v127;
          unint64_t v130 = v126 >> 4;
          uint64_t v131 = v188;
          if (v126 >= 0x10)
          {
            while (*v129 != v122)
            {
              ++v131;
              v129 += 2;
              if (!--v130) {
                goto LABEL_98;
              }
            }
            unsigned int v132 = *(unsigned __int8 *)(v131 + v190[10]);
            BOOL v89 = v132 > 5;
            int v133 = (1 << v132) & 0x23;
            if (v89 || v133 == 0)
            {
LABEL_83:
              uint64_t v120 = swift_retain();
              v123(v120);
              swift_release();
              continue;
            }
          }
LABEL_98:
          if (swift_conformsToProtocol2()) {
            uint64_t v135 = v128;
          }
          else {
            uint64_t v135 = 0;
          }
          if (v135)
          {
            if (v126 < 0x10) {
              goto LABEL_83;
            }
            char v136 = v127;
            unint64_t v137 = v126 >> 4;
            uint64_t v138 = v188;
            while (*v136 != v135)
            {
              ++v138;
              v136 += 2;
              if (!--v137) {
                goto LABEL_111;
              }
            }
            unsigned int v139 = *(unsigned __int8 *)(v138 + v190[10]);
            BOOL v89 = v139 > 5;
            int v140 = (1 << v139) & 0x23;
            if (v89 || v140 == 0) {
              goto LABEL_83;
            }
LABEL_111:
            uint64_t v142 = 16 * (v126 >> 4);
            while (*v127 != v135)
            {
              v127 += 2;
              v142 -= 16;
              if (!v142) {
                goto LABEL_83;
              }
            }
          }
        }
        uint64_t v143 = v104[7];
        unint64_t v117 = v104[6];
        uint64_t v144 = (void *)v104[4];
        uint64_t v145 = v177;
        uint64_t v105 = v146;
        if ((uint64_t)v104[8] >= 1) {
          swift_arrayDestroy();
        }
LABEL_118:
        ecs_stack_allocator_deallocate(v144, v117, 48 * v143);
        v104[6] = v175;
        v104[7] = v173;
        v104[8] = v171;
        v104[9] = v169;
        void v104[10] = v182;
        sub_1B634507C((char *)v185);
        ecs_stack_allocator_pop_snapshot(v105);
        int v106 = v149;
        if (v149)
        {
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v185 + 344));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v185 + 376));
        }
        swift_release();
        uint64_t v103 = v145 + 1;
      }
      while (v103 != v155);
    }
  }
  return sub_1B632F170(v193);
}

uint64_t sub_1B6843554(uint64_t a1, char a2, float32x4_t a3)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = ecs_stack_allocator_allocate(*(void *)(v7 + 32), 8 * (v6 - v5), 8);
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = sub_1B62C9024((uint64_t)&type metadata for Position, (uint64_t)&off_1F0FA6EE0, *(uint64_t **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), v7);
  uint64_t v11 = 0;
  uint64_t v12 = v6 - v5;
  if (v6 != v5)
  {
    float32x4_t v13 = (float32x4_t)vdupq_laneq_s32((int32x4_t)vmulq_f32(a3, a3), 3);
    do
    {
      float32x4_t v14 = vsubq_f32(a3, *(float32x4_t *)(v10 + 16 * v5));
      float32x4_t v15 = vmulq_f32(v14, v14);
      if ((vmovn_s32(vcgeq_f32(v13, vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2), vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1))))).u32[0] & 1) != (a2 & 1))v8[v11++] = v5; {
      ++v5;
      }
    }
    while (v6 != v5);
  }
  uint64_t v30 = 0;
  memset(v29, 0, sizeof(v29));
  char v31 = 5;
  if (v11 < 1)
  {
    swift_retain();
  }
  else
  {
    if (v11 == *(void *)(v9 + 240) - *(void *)(v9 + 232))
    {
      sub_1B639192C((uint64_t)v29, (uint64_t)v26);
      uint64_t v28 = 0;
      long long v27 = 0uLL;
    }
    else
    {
      sub_1B639192C((uint64_t)v29, (uint64_t)v26);
      *(void *)&long long v27 = v8;
      *((void *)&v27 + 1) = v12;
      uint64_t v28 = v11;
    }
    float32x4_t v16 = *(void **)(v7 + 104);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v7 + 104) = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      float32x4_t v16 = sub_1B68C0C6C(0, v16[2] + 1, 1, v16);
      *(void *)(v7 + 104) = v16;
    }
    unint64_t v19 = v16[2];
    unint64_t v18 = v16[3];
    if (v19 >= v18 >> 1)
    {
      float32x4_t v16 = sub_1B68C0C6C(v18 > 1, v19 + 1, 1, v16);
      *(void *)(v7 + 104) = v16;
    }
    _DWORD v16[2] = v19 + 1;
    float32x4_t v20 = &v16[9 * v19];
    *((_OWORD *)v20 + 2) = v26[0];
    long long v21 = v26[1];
    long long v22 = v26[2];
    long long v23 = v27;
    v20[12] = v28;
    *((_OWORD *)v20 + 4) = v22;
    *((_OWORD *)v20 + 5) = v23;
    *((_OWORD *)v20 + 3) = v21;
  }
  sub_1B6391400((uint64_t)v29);
  return swift_release();
}

uint64_t *sub_1B684375C(uint64_t *result, uint64_t a2, uint64_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7)
{
  float32x4_t v13 = vmulq_f32(a4, a4);
  v13.f32[0] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v13, 2), vaddq_f32(v13, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v13.f32, 1))).f32[0]);
  float32x4_t v14 = vmulq_f32(a5, a5);
  v14.f32[0] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v14, 2), vaddq_f32(v14, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v14.f32, 1))).f32[0]);
  float32x4_t v15 = vmulq_f32(a6, a6);
  v15.f32[0] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2), vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1))).f32[0]);
  if (vabds_f32(fmaxf(fmaxf(v13.f32[0], v15.f32[0]), v14.f32[0]), fminf(fminf(v13.f32[0], v15.f32[0]), v14.f32[0])) <= 0.00001)
  {
    uint64_t v96 = v7;
    uint64_t v97 = v8;
    char v18 = (char)result;
    __n128 v72 = sub_1B684B004((float32x4_t)xmmword_1B6E8B620, a4, a5, a6, a7);
    long long v19 = *(_OWORD *)(a3 + 32);
    v94[0] = *(_OWORD *)(a3 + 16);
    v94[1] = v19;
    uint64_t v95 = *(void *)(a3 + 48);
    sub_1B62C9DA8(a2, (uint64_t)v94, 0x200000000, v83);
    uint64_t result = (uint64_t *)sub_1B62D7690((uint64_t)v83, (uint64_t)v84, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
    unint64_t v82 = (unsigned __int16 *)v84[0];
    if (v84[0])
    {
      uint64_t v71 = v88;
      if (v88 >= 1)
      {
        uint64_t v70 = v85;
        if (v85)
        {
          uint64_t v20 = 0;
          uint64_t v69 = v84[5];
          long long v21 = v87;
          uint64_t v22 = v87[4];
          uint64_t v67 = v22;
          uint64_t v68 = v86;
          int v23 = *(unsigned __int8 *)(v86 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
          uint64_t v65 = v87 + 8;
          uint64_t v81 = v84[0] + 41;
          char v64 = v18 & 1;
          int v66 = v23;
          do
          {
            float32x4_t v24 = (unsigned int *)(v69 + 48 * v20);
            uint64_t v25 = *v24;
            uint64_t v26 = v24[1];
            uint64_t v27 = v24[2];
            uint64_t v28 = *((void *)v24 + 2);
            uint64_t v29 = *((void *)v24 + 3);
            uint64_t v30 = *((void *)v24 + 5);
            uint64_t v78 = v20;
            uint64_t v79 = *((void *)v24 + 4);
            if (v23)
            {
              char v31 = *(os_unfair_lock_s **)(v30 + 376);
              swift_retain_n();
              os_unfair_lock_lock(v31);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v30 + 344));
              swift_release();
            }
            else
            {
              swift_retain();
            }
            ecs_stack_allocator_push_snapshot(v22);
            uint64_t v75 = v21[7];
            uint64_t v76 = v21[6];
            uint64_t v73 = v21[9];
            uint64_t v74 = v21[8];
            uint64_t v80 = v21[10];
            uint64_t v32 = v21[4];
            uint64_t v33 = *(void *)(*(void *)(*(void *)(*(void *)(v30 + 40) + 16) + 32) + 16) + 1;
            swift_retain();
            v21[6] = ecs_stack_allocator_allocate(v32, 48 * v33, 8);
            v21[7] = v33;
            v65[1] = 0;
            void v65[2] = 0;
            *uint64_t v65 = 0;
            swift_release();
            v89[0] = v68;
            v89[1] = v30;
            uint64_t v77 = v30;
            v89[2] = v21;
            v89[3] = v27;
            v89[4] = (v26 - v25 + v27);
            v89[5] = v71;
            v89[6] = v25;
            v89[7] = v26;
            v89[8] = 0;
            v89[9] = 0;
            char v90 = 1;
            uint64_t v91 = v28;
            uint64_t v92 = v29;
            uint64_t v93 = v79;
            sub_1B6843554((uint64_t)v89, v64, (float32x4_t)v72);
            unint64_t v34 = v21[6];
            uint64_t v35 = v21[8];
            if (!v35)
            {
              uint64_t v61 = v21[7];
              int v62 = (void *)v21[4];
              uint64_t v63 = v78;
              goto LABEL_47;
            }
            for (uint64_t i = 0; i != v35; ++i)
            {
              float32x4_t v38 = (uint64_t *)(v34 + 48 * i);
              uint64_t v39 = *v38;
              char v40 = (void (*)(uint64_t))v38[4];
              uint64_t v41 = v21[9];
              if (v41) {
                BOOL v42 = v39 == v41;
              }
              else {
                BOOL v42 = 0;
              }
              if (v42 || !v82[11]) {
                goto LABEL_12;
              }
              unint64_t v43 = v82[9];
              float32x2_t v44 = (void *)(v81 + v82[8]);
              uint64_t v45 = v38[2];
              float32x2_t v46 = v44;
              unint64_t v47 = v43 >> 4;
              uint64_t v48 = v81;
              if (v43 >= 0x10)
              {
                while (*v46 != v39)
                {
                  ++v48;
                  v46 += 2;
                  if (!--v47) {
                    goto LABEL_27;
                  }
                }
                unsigned int v49 = *(unsigned __int8 *)(v48 + v82[10]);
                BOOL v50 = v49 > 5;
                int v51 = (1 << v49) & 0x23;
                if (v50 || v51 == 0)
                {
LABEL_12:
                  uint64_t v37 = swift_retain();
                  v40(v37);
                  swift_release();
                  continue;
                }
              }
LABEL_27:
              if (swift_conformsToProtocol2()) {
                uint64_t v53 = v45;
              }
              else {
                uint64_t v53 = 0;
              }
              if (v53)
              {
                if (v43 < 0x10) {
                  goto LABEL_12;
                }
                BOOL v54 = v44;
                unint64_t v55 = v43 >> 4;
                uint64_t v56 = v81;
                while (*v54 != v53)
                {
                  ++v56;
                  v54 += 2;
                  if (!--v55) {
                    goto LABEL_40;
                  }
                }
                unsigned int v57 = *(unsigned __int8 *)(v56 + v82[10]);
                BOOL v50 = v57 > 5;
                int v58 = (1 << v57) & 0x23;
                if (v50 || v58 == 0) {
                  goto LABEL_12;
                }
LABEL_40:
                uint64_t v60 = 16 * (v43 >> 4);
                while (*v44 != v53)
                {
                  v44 += 2;
                  v60 -= 16;
                  if (!v60) {
                    goto LABEL_12;
                  }
                }
              }
            }
            uint64_t v61 = v21[7];
            unint64_t v34 = v21[6];
            int v62 = (void *)v21[4];
            uint64_t v63 = v78;
            if ((uint64_t)v21[8] >= 1) {
              swift_arrayDestroy();
            }
LABEL_47:
            ecs_stack_allocator_deallocate(v62, v34, 48 * v61);
            v21[6] = v76;
            v21[7] = v75;
            unsigned char v21[8] = v74;
            v21[9] = v73;
            v21[10] = v80;
            sub_1B634507C((char *)v77);
            uint64_t v22 = v67;
            ecs_stack_allocator_pop_snapshot(v67);
            int v23 = v66;
            if (v66)
            {
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v77 + 344));
              os_unfair_lock_unlock(*(os_unfair_lock_t *)(v77 + 376));
            }
            swift_release();
            uint64_t v20 = v63 + 1;
          }
          while (v20 != v70);
        }
      }
      return sub_1B632F170(v83);
    }
  }
  return result;
}

uint64_t *sub_1B6843C68(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 96);
  v164[2] = *(_OWORD *)(a1 + 80);
  v164[3] = v1;
  long long v2 = *(_OWORD *)(a1 + 128);
  v164[4] = *(_OWORD *)(a1 + 112);
  v164[5] = v2;
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v162 = *(_OWORD *)(a1 + 16);
  long long v163 = v3;
  long long v4 = *(_OWORD *)(a1 + 64);
  v164[0] = *(_OWORD *)(a1 + 48);
  v164[1] = v4;
  uint64_t v5 = v162;
  uint64_t v6 = qword_1E9DCC4D8;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  v167[0] = xmmword_1E9E49368;
  v167[1] = unk_1E9E49378;
  uint64_t v168 = qword_1E9E49388;
  sub_1B62EA708((uint64_t)v164 + 8, (uint64_t)v165);
  sub_1B62EA708((uint64_t)v165, (uint64_t)&v169);
  if (v170) {
    uint64_t v7 = 0x200000000;
  }
  else {
    uint64_t v7 = v169;
  }
  sub_1B62C9DA8(v162, (uint64_t)v167, v7, v143);
  sub_1B62D7690((uint64_t)v143, (uint64_t)v150, (unint64_t *)&qword_1EB97DC50, (uint64_t)&type metadata for QueryResult);
  if (!*(void *)&v150[0]) {
    return (uint64_t *)swift_release();
  }
  long long v157 = v150[0];
  long long v158 = v150[1];
  uint64_t v159 = v151;
  if (v156 <= 0)
  {
    swift_release();
    return sub_1B632F170(v143);
  }
  uint64_t v112 = v153;
  if (!v153)
  {
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_103:
    swift_release();
    sub_1B632F170(v143);
    return sub_1B632F170(v143);
  }
  uint64_t v111 = v152;
  uint64_t v8 = v155[4];
  char v114 = *(unsigned char *)(v154 + OBJC_IVAR____TtC3VFX13EntityManager_lockChunksOnQueryForEach);
  uint64_t v115 = v155;
  uint64_t v109 = v155 + 8;
  uint64_t v110 = (uint64_t)(v155 + 6);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v9 = 0;
  uint64_t v108 = v8;
  while (1)
  {
    uint64_t v10 = (unsigned int *)(v111 + 48 * v9);
    uint64_t v11 = *v10;
    uint64_t v125 = v10[1];
    uint64_t v12 = (uint64_t *)*((void *)v10 + 2);
    uint64_t v13 = *((void *)v10 + 5);
    uint64_t v127 = *((void *)v10 + 4);
    uint64_t v113 = v9;
    uint64_t v133 = *((void *)v10 + 3);
    if (v114)
    {
      float32x4_t v14 = *(os_unfair_lock_s **)(v13 + 376);
      swift_retain();
      os_unfair_lock_lock(v14);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 344));
    }
    else
    {
      swift_retain();
    }
    ecs_stack_allocator_push_snapshot(v8);
    sub_1B62D7690(v110, (uint64_t)v166, &qword_1EB97DE20, (uint64_t)&type metadata for CommandQueue.IterationContext);
    uint64_t v117 = v13;
    uint64_t v15 = v115[4];
    uint64_t v16 = *(void *)(*(void *)(*(void *)(*(void *)(v13 + 40) + 16) + 32) + 16) + 1;
    swift_retain();
    v115[6] = ecs_stack_allocator_allocate(v15, 48 * v16, 8);
    v115[7] = v16;
    v109[1] = 0;
    _OWORD v109[2] = 0;
    *uint64_t v109 = 0;
    swift_release();
    uint64_t v136 = sub_1B62C9024((uint64_t)&type metadata for KillShape, (uint64_t)&off_1F0FA8978, v12, v133, v127, (uint64_t)v115);
    uint64_t v129 = sub_1B62C9024((uint64_t)&type metadata for WorldTransform, (uint64_t)&off_1F0F67720, v12, v133, v127, (uint64_t)v115);
    if (!v12) {
      break;
    }
    if (v127)
    {
      uint64_t v17 = 0;
      uint64_t v18 = SLODWORD(v164[0]);
      int v19 = DWORD1(v164[0]);
      BOOL v21 = SLODWORD(v164[0]) == -1 && DWORD1(v164[0]) == 0;
      BOOL v126 = v21;
      int v130 = DWORD1(v164[0]);
      while (1)
      {
        simd_float4x4 v132 = __invert_f4(*(simd_float4x4 *)(v129 + (v17 << 6)));
        swift_retain();
        if (v126) {
          goto LABEL_105;
        }
        if ((v18 & 0x80000000) != 0) {
          goto LABEL_105;
        }
        uint64_t v22 = (uint64_t *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        if (*(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v18) {
          goto LABEL_105;
        }
        uint64_t v23 = *v22;
        uint64_t v24 = *v22 + 12 * (int)v18;
        int v25 = *(__int16 *)(v24 + 4);
        if (v19 != -1 && *(_DWORD *)(v24 + 8) != v19) {
          goto LABEL_105;
        }
        uint64_t v26 = *(void *)(*(void *)(v5 + 136) + 8 * *(int *)(v23 + 12 * (int)v18) + 32);
        uint64_t v27 = *(void *)(v26 + 48);
        uint64_t v28 = *(void *)(v27 + 16);
        if (!v28) {
          goto LABEL_105;
        }
        uint64_t v29 = (void *)(v27 + 56);
        while ((ValueMetadata *)*(v29 - 3) != &type metadata for EmitterDescription)
        {
          v29 += 5;
          if (!--v28) {
            goto LABEL_105;
          }
        }
        char v30 = *(unsigned char *)(*(void *)(v26 + 128) + *v29 + 88 * v25 + 56);
        swift_release();
        if ((v30 & 1) == 0) {
          break;
        }
        char v31 = (uint64_t *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v32 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
        swift_retain();
        if (v32 <= v18) {
          goto LABEL_41;
        }
        uint64_t v33 = *v31;
        int v19 = v130;
        if (v130 == -1 || *(_DWORD *)(v33 + 12 * (int)v18 + 8) == v130)
        {
          sub_1B633C4F4(*(void *)(*(void *)(v5 + 136) + 8 * *(int *)(v33 + 12 * (int)v18) + 32), *(_DWORD *)(v33 + 12 * (int)v18), *(_WORD *)(v33 + 12 * (int)v18 + 4), 64, v5, (uint64_t)v144);
          swift_release();
          sub_1B62D7690((uint64_t)v144, (uint64_t)v146, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
          if ((v147 & 1) == 0)
          {
            float32x4_t v38 = v146[0];
            float32x4_t v39 = v146[1];
            float32x4_t v41 = v146[2];
            float32x4_t v40 = v146[3];
            goto LABEL_44;
          }
        }
        else
        {
          swift_release();
        }
        float32x4_t v38 = (float32x4_t)xmmword_1B6E4F300;
        float32x4_t v39 = (float32x4_t)xmmword_1B6E4F320;
        float32x4_t v41 = (float32x4_t)xmmword_1B6E4F2E0;
        float32x4_t v40 = (float32x4_t)xmmword_1B6E4F370;
LABEL_44:
        char v44 = *(unsigned char *)(v136 + 2 * v17);
        char v45 = *(unsigned char *)(v136 + 2 * v17 + 1);
        float32x4_t v137 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v132.columns[0], v38.f32[0]), (float32x4_t)v132.columns[1], *(float32x2_t *)v38.f32, 1), (float32x4_t)v132.columns[2], v38, 2), (float32x4_t)v132.columns[3], v38, 3);
        float32x4_t v138 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v132.columns[0], v39.f32[0]), (float32x4_t)v132.columns[1], *(float32x2_t *)v39.f32, 1), (float32x4_t)v132.columns[2], v39, 2), (float32x4_t)v132.columns[3], v39, 3);
        float32x4_t v139 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v132.columns[0], v41.f32[0]), (float32x4_t)v132.columns[1], *(float32x2_t *)v41.f32, 1), (float32x4_t)v132.columns[2], v41, 2), (float32x4_t)v132.columns[3], v41, 3);
        float32x4_t v140 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v132.columns[0], v40.f32[0]), (float32x4_t)v132.columns[1], *(float32x2_t *)v40.f32, 1), (float32x4_t)v132.columns[2], v40, 2), (float32x4_t)v132.columns[3], v40, 3);
        char v141 = v44;
        char v142 = v45;
        uint64_t v46 = *(void *)a1;
        if (*(void *)a1)
        {
          uint64_t ObjectType = swift_getObjectType();
          type metadata accessor for emitter_killshape_uniforms(0);
          uint64_t v48 = ObjectType;
          int v19 = v130;
          sub_1B6B594A8((uint64_t)&v137, 1, v48, v49, v50, v51, v52, v53);
        }
        BOOL v54 = (void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
        uint64_t v55 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
        swift_retain();
        if (v55 <= v18) {
          goto LABEL_105;
        }
        uint64_t v56 = *v54 + 12 * (int)v18;
        int v57 = *(__int16 *)(v56 + 4);
        if (v19 != -1 && *(_DWORD *)(v56 + 8) != v19) {
          goto LABEL_105;
        }
        uint64_t v58 = *(void *)(*(void *)(v5 + 136) + 8 * *(int *)(*v54 + 12 * (int)v18) + 32);
        uint64_t v59 = *(void *)(v58 + 48);
        uint64_t v60 = *(void *)(v59 + 16);
        if (!v60) {
          goto LABEL_105;
        }
        uint64_t v61 = (void *)(v59 + 56);
        while ((ValueMetadata *)*(v61 - 3) != &type metadata for EmitterRuntime)
        {
          v61 += 5;
          if (!--v60) {
            goto LABEL_105;
          }
        }
        sub_1B6A81660(*(void *)(v58 + 128) + *v61 + 656 * v57, v46 == 0, 0, a1, 0xD000000000000011, 0x80000001B6F39790, 0);
        swift_release();
        if (++v17 == v127) {
          goto LABEL_58;
        }
      }
      uint64_t v34 = *(void *)(v5 + 176);
      swift_retain();
      swift_retain();
      os_unfair_recursive_lock_lock_with_options();
      uint64_t v35 = sub_1B636E9A8((uint64_t)&type metadata for WorldFromScene);
      if (v37)
      {
        BOOL v42 = (float32x4_t *)(*(void *)(v34 + 16) + v35);
        uint64_t v43 = 32 * v36;
        os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(v34 + 32) + 32 * v36 + 24));
        os_unfair_recursive_lock_unlock();
        float32x4_t v122 = v42[1];
        float32x4_t v124 = *v42;
        float32x4_t v118 = v42[3];
        float32x4_t v120 = v42[2];
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)(v34 + 32) + v43 + 24));
        swift_release();
        swift_release();
        float32x4_t v39 = v122;
        float32x4_t v38 = v124;
        float32x4_t v40 = v118;
        float32x4_t v41 = v120;
      }
      else
      {
        os_unfair_recursive_lock_unlock();
        swift_release();
LABEL_41:
        swift_release();
        float32x4_t v38 = (float32x4_t)xmmword_1B6E4F300;
        float32x4_t v39 = (float32x4_t)xmmword_1B6E4F320;
        float32x4_t v41 = (float32x4_t)xmmword_1B6E4F2E0;
        float32x4_t v40 = (float32x4_t)xmmword_1B6E4F370;
      }
      int v19 = v130;
      goto LABEL_44;
    }
LABEL_58:
    v160[0] = v157;
    v160[1] = v158;
    uint64_t v161 = v159;
    sub_1B6345178(v115, (unsigned __int16 **)v160, (uint64_t)v166);
    sub_1B634507C((char *)v117);
    uint64_t v8 = v108;
    ecs_stack_allocator_pop_snapshot(v108);
    if (v114)
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v117 + 344));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v117 + 376));
    }
    swift_release();
    uint64_t v9 = v113 + 1;
    if (v113 + 1 == v112) {
      goto LABEL_103;
    }
  }
  if (v11 == v125) {
    goto LABEL_58;
  }
  uint64_t v62 = SLODWORD(v164[0]);
  int v134 = DWORD1(v164[0]);
  BOOL v64 = SLODWORD(v164[0]) == -1 && DWORD1(v164[0]) == 0;
  BOOL v128 = v64;
  while (1)
  {
    simd_float4x4 v131 = __invert_f4(*(simd_float4x4 *)(v129 + (v11 << 6)));
    swift_retain();
    if (v128) {
      break;
    }
    if ((v62 & 0x80000000) != 0) {
      break;
    }
    uint64_t v65 = (uint64_t *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    if (*(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8) <= v62) {
      break;
    }
    uint64_t v66 = *v65;
    uint64_t v67 = *v65 + 12 * (int)v62;
    int v68 = *(__int16 *)(v67 + 4);
    if (v134 != -1 && *(_DWORD *)(v67 + 8) != v134) {
      break;
    }
    uint64_t v69 = *(void *)(*(void *)(v5 + 136) + 8 * *(int *)(v66 + 12 * (int)v62) + 32);
    uint64_t v70 = *(void *)(v69 + 48);
    uint64_t v71 = *(void *)(v70 + 16);
    if (!v71) {
      break;
    }
    uint64_t v72 = v11 + 1;
    uint64_t v73 = (char *)(v136 + 2 * v11);
    uint64_t v74 = (void *)(v70 + 56);
    while ((ValueMetadata *)*(v74 - 3) != &type metadata for EmitterDescription)
    {
      v74 += 5;
      if (!--v71) {
        goto LABEL_105;
      }
    }
    char v75 = *(unsigned char *)(*(void *)(v69 + 128) + *v74 + 88 * v68 + 56);
    swift_release();
    if (v75)
    {
      uint64_t v76 = (uint64_t *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
      uint64_t v77 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
      swift_retain();
      if (v77 > v62)
      {
        uint64_t v78 = *v76;
        if (v134 == -1 || *(_DWORD *)(v78 + 12 * (int)v62 + 8) == v134)
        {
          sub_1B633C4F4(*(void *)(*(void *)(v5 + 136) + 8 * *(int *)(v78 + 12 * (int)v62) + 32), *(_DWORD *)(v78 + 12 * (int)v62), *(_WORD *)(v78 + 12 * (int)v62 + 4), 64, v5, (uint64_t)v145);
          swift_release();
          sub_1B62D7690((uint64_t)v145, (uint64_t)v148, qword_1EB97EA20, (uint64_t)&type metadata for WorldTransform);
          if ((v149 & 1) == 0)
          {
            float32x4_t v83 = v148[0];
            float32x4_t v84 = v148[1];
            float32x4_t v86 = v148[2];
            float32x4_t v85 = v148[3];
            goto LABEL_88;
          }
          goto LABEL_86;
        }
      }
    }
    else
    {
      uint64_t v79 = *(void *)(v5 + 176);
      swift_retain();
      swift_retain();
      os_unfair_recursive_lock_lock_with_options();
      uint64_t v80 = sub_1B636E9A8((uint64_t)&type metadata for WorldFromScene);
      if (v82)
      {
        uint64_t v87 = (float32x4_t *)(*(void *)(v79 + 16) + v80);
        uint64_t v88 = 32 * v81;
        os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(v79 + 32) + 32 * v81 + 24));
        os_unfair_recursive_lock_unlock();
        float32x4_t v121 = v87[1];
        float32x4_t v123 = *v87;
        float32x4_t v119 = v87[2];
        float32x4_t v116 = v87[3];
        uint64_t v89 = *(void *)(v79 + 32) + v88;
        uint64_t v73 = (char *)(v136 + 2 * v11);
        uint64_t v72 = v11 + 1;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v89 + 24));
        swift_release();
        swift_release();
        float32x4_t v84 = v121;
        float32x4_t v83 = v123;
        float32x4_t v86 = v119;
        float32x4_t v85 = v116;
        goto LABEL_88;
      }
      os_unfair_recursive_lock_unlock();
      swift_release();
    }
    swift_release();
LABEL_86:
    float32x4_t v83 = (float32x4_t)xmmword_1B6E4F300;
    float32x4_t v84 = (float32x4_t)xmmword_1B6E4F320;
    float32x4_t v86 = (float32x4_t)xmmword_1B6E4F2E0;
    float32x4_t v85 = (float32x4_t)xmmword_1B6E4F370;
LABEL_88:
    char v90 = *v73;
    char v91 = *(unsigned char *)(v136 + 2 * v11 + 1);
    float32x4_t v137 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v131.columns[0], v83.f32[0]), (float32x4_t)v131.columns[1], *(float32x2_t *)v83.f32, 1), (float32x4_t)v131.columns[2], v83, 2), (float32x4_t)v131.columns[3], v83, 3);
    float32x4_t v138 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v131.columns[0], v84.f32[0]), (float32x4_t)v131.columns[1], *(float32x2_t *)v84.f32, 1), (float32x4_t)v131.columns[2], v84, 2), (float32x4_t)v131.columns[3], v84, 3);
    float32x4_t v139 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v131.columns[0], v86.f32[0]), (float32x4_t)v131.columns[1], *(float32x2_t *)v86.f32, 1), (float32x4_t)v131.columns[2], v86, 2), (float32x4_t)v131.columns[3], v86, 3);
    float32x4_t v140 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v131.columns[0], v85.f32[0]), (float32x4_t)v131.columns[1], *(float32x2_t *)v85.f32, 1), (float32x4_t)v131.columns[2], v85, 2), (float32x4_t)v131.columns[3], v85, 3);
    char v141 = v90;
    char v142 = v91;
    uint64_t v92 = *(void *)a1;
    if (*(void *)a1)
    {
      uint64_t v93 = swift_getObjectType();
      type metadata accessor for emitter_killshape_uniforms(0);
      sub_1B6B594A8((uint64_t)&v137, 1, v93, v94, v95, v96, v97, v98);
    }
    uint64_t v99 = (void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries);
    uint64_t v100 = *(void *)(v5 + OBJC_IVAR____TtC3VFX13EntityManager__entries + 8);
    swift_retain();
    if (v100 <= v62) {
      break;
    }
    uint64_t v101 = *v99 + 12 * (int)v62;
    int v102 = *(__int16 *)(v101 + 4);
    if (v134 != -1 && *(_DWORD *)(v101 + 8) != v134) {
      break;
    }
    uint64_t v103 = *(void *)(*(void *)(v5 + 136) + 8 * *(int *)(*v99 + 12 * (int)v62) + 32);
    uint64_t v104 = *(void *)(v103 + 48);
    uint64_t v105 = *(void *)(v104 + 16);
    if (!v105) {
      break;
    }
    int v106 = (void *)(v104 + 56);
    while ((ValueMetadata *)*(v106 - 3) != &type metadata for EmitterRuntime)
    {
      v106 += 5;
      if (!--v105) {
        goto LABEL_105;
      }
    }
    sub_1B6A81660(*(void *)(v103 + 128) + *v106 + 656 * v102, v92 == 0, 0, a1, 0xD000000000000011, 0x80000001B6F39790, 0);
    swift_release();
    uint64_t v11 = v72;
    if (v72 == v125) {
      goto LABEL_58;
    }
  }
LABEL_105:
  v137.i64[0] = 0;
  v137.i64[1] = 0xE000000000000000;
  sub_1B6E328C8();
  sub_1B6E31948();
  sub_1B681F698();
  sub_1B6E31948();
  swift_bridgeObjectRelease();
  sub_1B6E31948();
  sub_1B6E31948();
  sub_1B6E31948();
  uint64_t result = (uint64_t *)sub_1B6E32BE8();
  __break(1u);
  return result;
}